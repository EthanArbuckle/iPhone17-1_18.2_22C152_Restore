void OUTLINED_FUNCTION_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;
  uint64_t v10;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

uint64_t OUTLINED_FUNCTION_1()
{
  return v0;
}

uint64_t isClientWithAuditTokenProperlyEntitled(long long *a1)
{
  long long v2 = a1[1];
  long long v12 = *a1;
  long long v13 = v2;
  if ((WBSAuditTokenHasEntitlement() & 1) != 0
    || (long long v3 = a1[1], v12 = *a1, v13 = v3, WBSAuditTokenHasEntitlement()))
  {
    v4 = WBS_LOG_CHANNEL_PREFIXAuthorization();
    uint64_t v5 = 1;
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      LOWORD(v12) = 0;
      v6 = "Client is properly entitled.";
LABEL_5:
      _os_log_impl(&dword_219326000, v4, OS_LOG_TYPE_INFO, v6, (uint8_t *)&v12, 2u);
    }
  }
  else
  {
    v7 = +[ASFeatureManager sharedManager];
    long long v8 = a1[1];
    long long v12 = *a1;
    long long v13 = v8;
    int v9 = [v7 isClientEntitledForInternalTestingWithAuditToken:&v12];

    v10 = WBS_LOG_CHANNEL_PREFIXAuthorization();
    v4 = v10;
    if (v9)
    {
      uint64_t v5 = 1;
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
        return v5;
      }
      LOWORD(v12) = 0;
      v6 = "Client has internal testing entitlement.";
      goto LABEL_5;
    }
    if (os_log_type_enabled(v10, OS_LOG_TYPE_FAULT)) {
      isClientWithAuditTokenProperlyEntitled_cold_1(v4);
    }
    return 0;
  }
  return v5;
}

__CFString *ASCAgentServiceName()
{
  return @"com.apple.AuthenticationServicesCore.AuthenticationServicesAgent";
}

void sub_21932BDB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void sub_21932E1A0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 120), 8);
  _Unwind_Resume(a1);
}

void sub_21933284C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
}

void sub_219334970(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_219334C6C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t __shouldRequireCABLEAuthenticatorConsentForSourceApplication_block_invoke()
{
  shouldRequireCABLEAuthenticatorConsentForSourceApplication_systemScannerApplications = objc_msgSend(MEMORY[0x263EFFA08], "setWithObjects:", @"com.apple.BarcodeScanner", @"com.apple.camera", @"com.apple.springboard", 0);

  return MEMORY[0x270F9A758]();
}

void OUTLINED_FUNCTION_0_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_3(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

id OUTLINED_FUNCTION_6(uint64_t a1, void *a2)
{
  return a2;
}

void OUTLINED_FUNCTION_7(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_10(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void sub_21933713C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_219337464(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_219337514(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_219339B70(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_1_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

uint64_t OUTLINED_FUNCTION_3_0()
{
  return *(void *)(v0 + 32);
}

id OUTLINED_FUNCTION_4(uint64_t a1, void *a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_5()
{
  return v0;
}

id descriptionForErrorCode(uint64_t a1)
{
  uint64_t v2 = 0;
  switch(a1)
  {
    case 4:
    case 5:
    case 6:
    case 8:
    case 9:
    case 10:
    case 13:
      goto LABEL_3;
    case 7:
      if (+[ASCWebKitSPISupport shouldUseAlternateCredentialStore])
      {
        goto LABEL_3;
      }
      if (biometryType_onceToken != -1) {
        dispatch_once(&biometryType_onceToken, &__block_literal_global_3);
      }
      uint64_t v2 = (void *)[(id)biometryType_context biometryType];
      if (v2)
      {
LABEL_3:
        uint64_t v2 = _WBSLocalizedString();
      }
      break;
    default:
      break;
  }

  return v2;
}

uint64_t __biometryType_block_invoke()
{
  id v0 = objc_alloc_init(MEMORY[0x263F10468]);
  uint64_t v1 = (void *)biometryType_context;
  biometryType_context = (uint64_t)v0;

  uint64_t v2 = (void *)biometryType_context;

  return [v2 canEvaluatePolicy:1 error:0];
}

uint64_t compareLoginChoices(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (isSecurityKeyAssertionLoginChoice(v3) && [v4 loginChoiceKind] == 4) {
    goto LABEL_6;
  }
  if ([v3 loginChoiceKind] == 4 && isSecurityKeyAssertionLoginChoice(v4)) {
    goto LABEL_11;
  }
  uint64_t v5 = requestTypeForLoginChoice(v3);
  unint64_t v6 = sortOrderForRequestType(v5);
  uint64_t v7 = requestTypeForLoginChoice(v4);
  unint64_t v8 = sortOrderForRequestType(v7);
  if (v6 < v8)
  {
LABEL_6:
    uint64_t v9 = -1;
    goto LABEL_12;
  }
  if (v6 != v8)
  {
LABEL_11:
    uint64_t v9 = 1;
    goto LABEL_12;
  }
  uint64_t v9 = 0;
  if (v6 <= 3 && v6 != 2) {
    uint64_t v9 = [v3 compare:v4];
  }
LABEL_12:

  return v9;
}

uint64_t requestTypeForLoginChoice(void *a1)
{
  id v1 = a1;
  uint64_t v2 = 1;
  switch([v1 loginChoiceKind])
  {
    case 0:
      uint64_t v2 = 2;
      break;
    case 2:
      if ([v1 isRegistrationRequest]) {
        uint64_t v2 = 4;
      }
      else {
        uint64_t v2 = 8;
      }
      break;
    case 3:
      unint64_t v3 = [v1 credentialKind];
      if (v3 >= 3) {
        goto LABEL_9;
      }
      uint64_t v2 = qword_2193E6618[v3];
      break;
    case 4:
LABEL_9:
      uint64_t v2 = 64;
      break;
    case 5:
      uint64_t v2 = 128;
      break;
    case 6:
      uint64_t v2 = 256;
      break;
    default:
      break;
  }

  return v2;
}

uint64_t __allowedCredentialsForSecurityKeyAssertionFromRequestContext_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  unint64_t v3 = [v2 transports];
  if ([v3 count]) {
    uint64_t v4 = [v2 hasInternalTransport] ^ 1;
  }
  else {
    uint64_t v4 = 0;
  }

  return v4;
}

BOOL isSecurityKeyAssertionLoginChoice(void *a1)
{
  id v1 = a1;
  BOOL v2 = [v1 loginChoiceKind] == 3 && objc_msgSend(v1, "credentialKind") == 1;

  return v2;
}

uint64_t sortOrderForRequestType(uint64_t a1)
{
  uint64_t result = 9;
  if (a1 > 31)
  {
    uint64_t v3 = 7;
    uint64_t v4 = 8;
    if (a1 != 256) {
      uint64_t v4 = 9;
    }
    if (a1 != 128) {
      uint64_t v3 = v4;
    }
    uint64_t v5 = 6;
    uint64_t v6 = 4;
    if (a1 != 64) {
      uint64_t v6 = 9;
    }
    if (a1 != 32) {
      uint64_t v5 = v6;
    }
    if (a1 <= 127) {
      return v5;
    }
    else {
      return v3;
    }
  }
  else
  {
    switch(a1)
    {
      case 1:
        uint64_t result = 3;
        break;
      case 2:
        uint64_t result = 2;
        break;
      case 3:
      case 5:
      case 6:
      case 7:
        return result;
      case 4:
        uint64_t result = 0;
        break;
      case 8:
        uint64_t result = 1;
        break;
      default:
        if (a1 == 16) {
          uint64_t result = 5;
        }
        break;
    }
  }
  return result;
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

uint64_t ascCredentialRequestTypesAllPublicKey()
{
  return 60;
}

uint64_t ascCredentialRequestTypesAllPasskey()
{
  return 12;
}

uint64_t WBS_LOG_CHANNEL_PREFIXAuthenticationServicesAgent()
{
  if (WBS_LOG_CHANNEL_PREFIXAuthenticationServicesAgent_onceToken != -1) {
    dispatch_once(&WBS_LOG_CHANNEL_PREFIXAuthenticationServicesAgent_onceToken, &__block_literal_global_8);
  }
  return WBS_LOG_CHANNEL_PREFIXAuthenticationServicesAgent_log;
}

uint64_t WBS_LOG_CHANNEL_PREFIXAuthorization()
{
  if (WBS_LOG_CHANNEL_PREFIXAuthorization_onceToken != -1) {
    dispatch_once(&WBS_LOG_CHANNEL_PREFIXAuthorization_onceToken, &__block_literal_global_4);
  }
  return WBS_LOG_CHANNEL_PREFIXAuthorization_log;
}

uint64_t WBS_LOG_CHANNEL_PREFIXServiceLifecycle()
{
  if (WBS_LOG_CHANNEL_PREFIXServiceLifecycle_onceToken != -1) {
    dispatch_once(&WBS_LOG_CHANNEL_PREFIXServiceLifecycle_onceToken, &__block_literal_global_10);
  }
  return WBS_LOG_CHANNEL_PREFIXServiceLifecycle_log;
}

void sub_21934633C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_219346588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_219346CA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getWBUFeatureManagerClass_block_invoke(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  v3[0] = 0;
  if (!WebUILibraryCore_frameworkLibrary)
  {
    v3[1] = (void *)MEMORY[0x263EF8330];
    v3[2] = (void *)3221225472;
    v3[3] = __WebUILibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    v3[5] = v3;
    long long v4 = xmmword_26439F4E8;
    uint64_t v5 = 0;
    WebUILibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!WebUILibraryCore_frameworkLibrary) {
    __getWBUFeatureManagerClass_block_invoke_cold_1(v3);
  }
  if (v3[0]) {
    free(v3[0]);
  }
  Class result = objc_getClass("WBUFeatureManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getWBUFeatureManagerClass_block_invoke_cold_2();
  }
  getWBUFeatureManagerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __WebUILibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  WebUILibraryCore_frameworkLibrary = result;
  return result;
}

uint64_t ASAllLoginChoiceClasses()
{
  id v0 = (void *)MEMORY[0x263EFFA08];
  uint64_t v1 = objc_opt_class();
  uint64_t v2 = objc_opt_class();
  uint64_t v3 = objc_opt_class();
  uint64_t v4 = objc_opt_class();
  uint64_t v5 = objc_opt_class();
  uint64_t v6 = objc_opt_class();
  return objc_msgSend(v0, "setWithObjects:", v1, v2, v3, v4, v5, v6, objc_opt_class(), 0);
}

void sub_21934758C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

id ASCAgentCredentialExchangeListenerInterface()
{
  if (ASCAgentCredentialExchangeListenerInterface_onceToken[0] != -1) {
    dispatch_once(ASCAgentCredentialExchangeListenerInterface_onceToken, &__block_literal_global_13);
  }
  id v0 = (void *)ASCAgentCredentialExchangeListenerInterface_interface;

  return v0;
}

uint64_t __ASCAgentCredentialExchangeListenerInterface_block_invoke()
{
  ASCAgentCredentialExchangeListenerInterface_interface = [MEMORY[0x263F08D80] interfaceWithProtocol:&unk_26CAC95D8];

  return MEMORY[0x270F9A758]();
}

void sub_219348148(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  os_unfair_lock_unlock(v15);
  _Unwind_Resume(a1);
}

uint64_t static ASCPublicKeyCredentialRegistrationExtensionInputs.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t sub_219348914(void *a1)
{
  sub_2193E1D60();
  swift_allocObject();
  sub_2193E1D50();
  type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionInputs();
  sub_21934CD54((unint64_t *)&unk_267C18A20, v2, (void (*)(uint64_t))type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionInputs);
  uint64_t v3 = sub_2193E1D40();
  unint64_t v5 = v4;
  swift_release();
  uint64_t v6 = (void *)sub_2193E2110();
  uint64_t v7 = (void *)sub_2193E2830();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);

  return sub_219348A70(v3, v5);
}

uint64_t type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionInputs()
{
  return self;
}

uint64_t sub_219348A70(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

id ASCPublicKeyCredentialRegistrationExtensionInputs.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ASCPublicKeyCredentialRegistrationExtensionInputs.init(coder:)(a1);
}

id ASCPublicKeyCredentialRegistrationExtensionInputs.init(coder:)(void *a1)
{
  swift_getObjectType();
  sub_219349168();
  id v3 = v1;
  uint64_t v4 = sub_2193E2B50();
  if (v4)
  {
    unint64_t v5 = (void *)v4;
    uint64_t v6 = sub_2193E2130();
    unint64_t v8 = v7;

    sub_2193E1D30();
    swift_allocObject();
    sub_2193E1D20();
    sub_21934CD54(&qword_267C18A30, v9, (void (*)(uint64_t))type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionInputs);
    sub_2193E1D10();

    swift_release();
    v37.super_class = (Class)type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionInputs();
    v36 = v42;
    v37.receiver = objc_allocWithZone(v37.super_class);
    v17 = (char *)v37.receiver
        + OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_largeBlob;
    *((unsigned char *)v37.receiver
    + OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_largeBlob) = 2;
    unint64_t v38 = v8;
    v39 = a1;
    v18 = (char *)v37.receiver
        + OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_prf;
    *(_OWORD *)v18 = 0u;
    *((_OWORD *)v18 + 1) = 0u;
    *((void *)v18 + 4) = 0;
    *((void *)v18 + 5) = 1;
    v19 = &v36[OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_largeBlob];
    swift_beginAccess();
    LOBYTE(v5) = *v19;
    swift_beginAccess();
    unsigned char *v17 = (_BYTE)v5;
    v20 = (uint64_t *)&v36[OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_prf];
    swift_beginAccess();
    uint64_t v35 = v6;
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v24 = v20[2];
    uint64_t v23 = v20[3];
    unint64_t v25 = v20[4];
    uint64_t v26 = v20[5];
    swift_beginAccess();
    uint64_t v27 = *(void *)v18;
    uint64_t v28 = *((void *)v18 + 1);
    unint64_t v29 = *((void *)v18 + 2);
    unint64_t v33 = *((void *)v18 + 4);
    uint64_t v34 = *((void *)v18 + 3);
    uint64_t v32 = *((void *)v18 + 5);
    *(void *)v18 = v21;
    *((void *)v18 + 1) = v22;
    *((void *)v18 + 2) = v24;
    *((void *)v18 + 3) = v23;
    *((void *)v18 + 4) = v25;
    *((void *)v18 + 5) = v26;
    sub_21934CD9C(v21, v22, v24, v23, v25, v26);
    sub_21934CE5C(v27, v28, v29, v34, v33, v32);
    objc_super v40 = v37;
    id v30 = objc_msgSendSuper2(&v40, sel_init);

    sub_219348A70(v35, v38);
    swift_getObjectType();
    swift_deallocPartialClassInstance();
  }
  else
  {

    if (qword_26AC26F98 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_2193E24F0();
    __swift_project_value_buffer(v10, (uint64_t)qword_26AC29118);
    v11 = sub_2193E24D0();
    os_log_type_t v12 = sub_2193E2AE0();
    if (os_log_type_enabled(v11, v12))
    {
      long long v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      v42 = (char *)v14;
      *(_DWORD *)long long v13 = 136446210;
      uint64_t v15 = sub_2193E3290();
      uint64_t v41 = sub_21934C764(v15, v16, (uint64_t *)&v42);
      sub_2193E2C00();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_219326000, v11, v12, "Could not find encoded json for %{public}s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D48A390](v14, -1, -1);
      MEMORY[0x21D48A390](v13, -1, -1);
    }

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v30;
}

unint64_t sub_219349168()
{
  unint64_t result = qword_26AC280F0;
  if (!qword_26AC280F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC280F0);
  }
  return result;
}

id ASCPublicKeyCredentialRegistrationExtensionInputs.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id ASCPublicKeyCredentialRegistrationExtensionInputs.init()()
{
  v0[OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_largeBlob] = 2;
  id v1 = &v0[OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_prf];
  *(_OWORD *)id v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;
  *((void *)v1 + 5) = 1;
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionInputs();
  return objc_msgSendSuper2(&v3, sel_init);
}

void sub_2193492D0(void *a1@<X8>)
{
  v23.super_class = (Class)type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionInputs();
  uint64_t v22 = v1;
  v23.receiver = objc_allocWithZone(v23.super_class);
  uint64_t v2 = (char *)v23.receiver
     + OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_largeBlob;
  *((unsigned char *)v23.receiver
  + OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_largeBlob) = 2;
  objc_super v3 = (char *)v23.receiver
     + OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_prf;
  *(_OWORD *)objc_super v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  *((void *)v3 + 5) = 1;
  uint64_t v4 = &v1[OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_largeBlob];
  unint64_t v5 = v1;
  swift_beginAccess();
  char v6 = *v4;
  swift_beginAccess();
  *uint64_t v2 = v6;
  unint64_t v7 = (uint64_t *)&v5[OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_prf];
  swift_beginAccess();
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  unint64_t v10 = v7[2];
  uint64_t v11 = v7[3];
  unint64_t v12 = v7[4];
  uint64_t v13 = v7[5];
  swift_beginAccess();
  uint64_t v15 = *(void *)v3;
  uint64_t v14 = *((void *)v3 + 1);
  unint64_t v16 = *((void *)v3 + 2);
  unint64_t v20 = *((void *)v3 + 4);
  uint64_t v21 = *((void *)v3 + 3);
  uint64_t v19 = *((void *)v3 + 5);
  *(void *)objc_super v3 = v8;
  *((void *)v3 + 1) = v9;
  *((void *)v3 + 2) = v10;
  *((void *)v3 + 3) = v11;
  *((void *)v3 + 4) = v12;
  *((void *)v3 + 5) = v13;
  id v17 = v22;
  sub_21934CD9C(v8, v9, v10, v11, v12, v13);
  sub_21934CE5C(v15, v14, v16, v21, v20, v19);
  objc_super v25 = v23;
  id v18 = objc_msgSendSuper2(&v25, sel_init);

  a1[3] = v23.super_class;
  *a1 = v18;
}

BOOL sub_219349548()
{
  id v1 = (unsigned char *)(v0
               + OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_largeBlob);
  swift_beginAccess();
  if (*v1 != 2) {
    return 1;
  }
  uint64_t v2 = v0 + OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_prf;
  swift_beginAccess();
  return *(void *)(v2 + 40) != 1;
}

uint64_t sub_219349650()
{
  id v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_largeBlob);
  swift_beginAccess();
  BOOL v2 = *v1 != 2;
  uint64_t v3 = v0 + OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_prf;
  swift_beginAccess();
  if (*(void *)(v3 + 40) == 1) {
    return v2;
  }
  else {
    return 2;
  }
}

uint64_t sub_2193496D8()
{
  swift_getObjectType();
  id v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_largeBlob);
  swift_beginAccess();
  int v2 = *v1;
  if (v2 == 2) {
    return 0;
  }
  if (v2) {
    uint64_t v3 = 0x6572726566657270;
  }
  else {
    uint64_t v3 = 0x6465726975716572;
  }
  if (v2) {
    uint64_t v4 = 0xE900000000000064;
  }
  else {
    uint64_t v4 = 0xE800000000000000;
  }
  v7[2] = v3;
  v7[3] = v4;
  long long v8 = xmmword_2193E6670;
  long long v9 = xmmword_2193E6680;
  char v10 = 1;
  long long v11 = 0u;
  long long v12 = 0u;
  uint64_t v13 = 1;
  LOBYTE(v7[0]) = 1;
  swift_bridgeObjectRetain();
  sub_21934CE48(0, 0xF000000000000000);
  uint64_t v5 = ASCTAPExtensionInput.encode(for:)((char *)v7);
  sub_21934CEC4(v3, v4, 2, 0, 0xF000000000000000);
  sub_21934CF14(0, 0, 0, 0, 1);
  swift_bridgeObjectRelease();
  sub_21934CEB0(0, 0xF000000000000000);
  return v5;
}

double ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.toCTAP()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = 0x6465726975716572;
  if (*v1) {
    uint64_t v2 = 0x6572726566657270;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xE900000000000064;
  }
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)&double result = 2;
  *(_OWORD *)(a1 + 16) = xmmword_2193E6670;
  *(_OWORD *)(a1 + 32) = xmmword_2193E6680;
  *(unsigned char *)(a1 + 48) = 1;
  return result;
}

id sub_219349AEC()
{
  swift_getObjectType();
  id v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_largeBlob);
  swift_beginAccess();
  int v2 = *v1;
  uint64_t v3 = 0x6572726566657270;
  if ((v2 & 1) == 0) {
    uint64_t v3 = 0x6465726975716572;
  }
  unint64_t v4 = 0xE900000000000064;
  if ((v2 & 1) == 0) {
    unint64_t v4 = 0xE800000000000000;
  }
  if (v2 == 2) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = v3;
  }
  if (v2 == 2) {
    uint64_t v6 = 1;
  }
  else {
    uint64_t v6 = v4;
  }
  if (v2 == 2) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = 2;
  }
  if (v2 == 2) {
    unint64_t v8 = 0;
  }
  else {
    unint64_t v8 = 0xF000000000000000;
  }
  BOOL v9 = v2 != 2;
  char v10 = (uint64_t *)(v0
                  + OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_prf);
  swift_beginAccess();
  uint64_t v11 = v10[5];
  BOOL v32 = v9;
  if (v11 == 1)
  {
    uint64_t v12 = 0;
    unint64_t v13 = 0;
    uint64_t v14 = 0;
    unint64_t v15 = 0;
    uint64_t v31 = 1;
    unint64_t v16 = v8;
  }
  else
  {
    uint64_t v26 = v7;
    uint64_t v27 = v5;
    uint64_t v29 = v6;
    uint64_t v17 = v10[1];
    unint64_t v18 = v10[2];
    uint64_t v19 = v10[3];
    unint64_t v20 = v10[4];
    uint64_t v25 = *v10;
    if (v18 >> 60 == 15)
    {
      uint64_t v21 = v10[3];
      sub_21934D03C(v17, v18, v19, v20);
      swift_bridgeObjectRetain();
      uint64_t v12 = 0;
      uint64_t v28 = 0;
      unint64_t v15 = 0;
      unint64_t v13 = 0xF000000000000000;
    }
    else
    {
      sub_21934CD9C(*v10, v17, v18, v19, v20, v11);
      sub_21934D03C(v17, v18, v19, v20);
      uint64_t v12 = ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues.salt1.getter();
      unint64_t v13 = v22;
      uint64_t v34 = v17;
      unint64_t v35 = v18;
      uint64_t v36 = v19;
      unint64_t v37 = v20;
      uint64_t v28 = ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues.salt2.getter();
      unint64_t v15 = v23;
      uint64_t v21 = v19;
      sub_21934CF58(v17, v18, v19, v20);
    }
    if (v11)
    {
      uint64_t v31 = sub_21934D08C(v11);
      sub_21934CE5C(v25, v17, v18, v21, v20, v11);
    }
    else
    {
      sub_21934CE5C(v25, v17, v18, v21, v20, 0);
      uint64_t v31 = 0;
    }
    uint64_t v7 = v26;
    uint64_t v5 = v27;
    uint64_t v6 = v29;
    uint64_t v14 = v28;
    unint64_t v16 = v8;
  }
  uint64_t v34 = v5;
  unint64_t v35 = v6;
  uint64_t v36 = v7;
  unint64_t v37 = 0;
  unint64_t v38 = v16;
  uint64_t v39 = 0;
  BOOL v40 = v32;
  uint64_t v41 = v12;
  unint64_t v42 = v13;
  uint64_t v43 = v14;
  unint64_t v44 = v15;
  uint64_t v45 = v31;
  LOBYTE(v33) = 0;
  sub_21934CFA8(v5, v6, v7, 0, v16);
  sub_21934CFF8(v12, v13, v14, v15, v31);
  id v30 = (id)ASCTAPExtensionInput.encode(for:)((char *)&v33);
  sub_21934CEC4(v5, v6, v7, 0, v16);
  sub_21934CF14(v12, v13, v14, v15, v31);
  sub_21934CEC4(v5, v6, v7, 0, v16);
  sub_21934CF14(v12, v13, v14, v15, v31);
  return v30;
}

id sub_21934A0E4(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v4 = a1;
  uint64_t v5 = a3();
  unint64_t v7 = v6;

  if (v7 >> 60 == 15)
  {
    unint64_t v8 = 0;
  }
  else
  {
    unint64_t v8 = (void *)sub_2193E2110();
    sub_21934CEB0(v5, v7);
  }

  return v8;
}

uint64_t sub_21934A170@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1
               + OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_largeBlob);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_21934A1C4(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2
               + OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_largeBlob);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t sub_21934A214@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = (unsigned char *)(v1
               + OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_largeBlob);
  uint64_t result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_21934A264(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(v1
               + OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_largeBlob);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t (*sub_21934A2B8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_21934A314@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1
                 + OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_prf);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  unint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  unint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a2 = *v3;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  a2[4] = v8;
  a2[5] = v9;
  return sub_21934CD9C(v4, v5, v6, v7, v8, v9);
}

uint64_t sub_21934A37C(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  unint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  unint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  unint64_t v8 = (uint64_t *)(*a2
                 + OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_prf);
  swift_beginAccess();
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  unint64_t v11 = v8[2];
  unint64_t v14 = v8[4];
  uint64_t v15 = v8[3];
  uint64_t v13 = v8[5];
  *unint64_t v8 = v2;
  v8[1] = v3;
  v8[2] = v4;
  v8[3] = v5;
  v8[4] = v6;
  v8[5] = v7;
  sub_21934CD9C(v2, v3, v4, v5, v6, v7);
  return sub_21934CE5C(v9, v10, v11, v15, v14, v13);
}

uint64_t sub_21934A448@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1
                 + OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_prf);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  unint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  unint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_21934CD9C(v4, v5, v6, v7, v8, v9);
}

uint64_t sub_21934A4AC(long long *a1)
{
  uint64_t v2 = *((void *)a1 + 2);
  long long v12 = *(long long *)((char *)a1 + 24);
  long long v13 = *a1;
  uint64_t v3 = *((void *)a1 + 5);
  uint64_t v4 = (uint64_t *)(v1
                 + OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_prf);
  swift_beginAccess();
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  unint64_t v7 = v4[2];
  uint64_t v8 = v4[3];
  unint64_t v9 = v4[4];
  uint64_t v10 = v4[5];
  *(_OWORD *)uint64_t v4 = v13;
  v4[2] = v2;
  *(_OWORD *)(v4 + 3) = v12;
  v4[5] = v3;
  return sub_21934CE5C(v5, v6, v7, v8, v9, v10);
}

uint64_t (*sub_21934A534())()
{
  return j__swift_endAccess;
}

BOOL static ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.SupportRequirement.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.SupportRequirement.hash(into:)()
{
  return sub_2193E3220();
}

uint64_t sub_21934A5E0()
{
  if (*v0) {
    return 0x6572726566657270;
  }
  else {
    return 0x6465726975716572;
  }
}

uint64_t sub_21934A620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21934EC64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21934A648()
{
  return 0;
}

void sub_21934A654(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_21934A660(uint64_t a1)
{
  unint64_t v2 = sub_21934D35C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21934A69C(uint64_t a1)
{
  unint64_t v2 = sub_21934D35C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21934A6D8()
{
  return 0;
}

void sub_21934A6E4(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_21934A6F0(uint64_t a1)
{
  unint64_t v2 = sub_21934D3B0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21934A72C(uint64_t a1)
{
  unint64_t v2 = sub_21934D3B0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21934A768@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_21934A798(uint64_t a1)
{
  unint64_t v2 = sub_21934D404();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21934A7D4(uint64_t a1)
{
  unint64_t v2 = sub_21934D404();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.SupportRequirement.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18A48);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388]();
  unint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18A50);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388]();
  unint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18A58);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388]();
  unint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_21934D35C();
  sub_2193E3260();
  long long v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_21934D3B0();
    unint64_t v14 = v18;
    sub_2193E3050();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_21934D404();
    sub_2193E3050();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.SupportRequirement.hashValue.getter()
{
  return sub_2193E3230();
}

uint64_t ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.SupportRequirement.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18A78);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18A80);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  unint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18A88);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_21934D35C();
  unint64_t v11 = v32;
  sub_2193E3240();
  if (v11) {
    goto LABEL_6;
  }
  BOOL v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  unint64_t v14 = v10;
  uint64_t v15 = sub_2193E3040();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_2193E2DD0();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C18A90);
    *char v22 = &type metadata for ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.SupportRequirement;
    sub_2193E2F90();
    sub_2193E2DC0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1Tm(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_21934D3B0();
    unint64_t v18 = v14;
    sub_2193E2F80();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_21934D404();
    sub_2193E2F80();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1Tm(v23);
}

BOOL sub_21934AF54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_21934AF6C()
{
  return sub_2193E3220();
}

uint64_t sub_21934AF98@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.SupportRequirement.init(from:)(a1, a2);
}

uint64_t sub_21934AFB0(void *a1)
{
  return ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.SupportRequirement.encode(to:)(a1);
}

void ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.supportRequirement.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.supportRequirement.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.supportRequirement.modify())()
{
  return nullsub_1;
}

AuthenticationServicesCore::ASCPublicKeyCredentialRegistrationExtensionInputs::LargeBlob __swiftcall ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.init(supportRequirement:)(AuthenticationServicesCore::ASCPublicKeyCredentialRegistrationExtensionInputs::LargeBlob supportRequirement)
{
  *uint64_t v1 = *(unsigned char *)supportRequirement.supportRequirement;
  return supportRequirement;
}

uint64_t sub_21934B010()
{
  return 1;
}

uint64_t sub_21934B018()
{
  return sub_2193E3230();
}

uint64_t sub_21934B05C()
{
  return sub_2193E3220();
}

uint64_t sub_21934B084()
{
  return sub_2193E3230();
}

unint64_t sub_21934B0C4()
{
  return 0xD000000000000012;
}

uint64_t sub_21934B0E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21934ED64(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_21934B10C(uint64_t a1)
{
  unint64_t v2 = sub_21934D458();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21934B148(uint64_t a1)
{
  unint64_t v2 = sub_21934D458();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18A98);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_21934D458();
  sub_2193E3260();
  char v10 = v7;
  sub_21934D4AC();
  sub_2193E30D0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18AB0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_21934D458();
  sub_2193E3240();
  if (!v2)
  {
    sub_21934D500();
    sub_2193E3010();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_21934B434@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.init(from:)(a1, a2);
}

uint64_t sub_21934B44C(void *a1)
{
  return ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.encode(to:)(a1);
}

uint64_t ASCPublicKeyCredentialRegistrationExtensionInputs.PRF.shouldCheckForSupport.getter()
{
  return *v0;
}

uint64_t ASCPublicKeyCredentialRegistrationExtensionInputs.PRF.inputValues.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[1];
  unint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  unint64_t v5 = v1[4];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_21934D03C(v2, v3, v4, v5);
}

uint64_t ASCPublicKeyCredentialRegistrationExtensionInputs.PRF.perCredentialInputValues.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 ASCPublicKeyCredentialRegistrationExtensionInputs.PRF.init(shouldCheckForSupport:inputValues:perCredentialInputValues:)@<Q0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(unsigned char *)a4 = a1;
  __n128 result = *(__n128 *)a2;
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a4 + 8) = *(_OWORD *)a2;
  *(_OWORD *)(a4 + 24) = v5;
  *(void *)(a4 + 40) = a3;
  return result;
}

BOOL sub_21934B4A0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_21934B4B4()
{
  return sub_2193E3230();
}

uint64_t sub_21934B4FC()
{
  return sub_2193E3230();
}

unint64_t sub_21934B540()
{
  unint64_t v1 = 0x6C61567475706E69;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000018;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000015;
  }
}

uint64_t sub_21934B5A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21934EDEC(a1, a2);
  *a3 = result;
  return result;
}

void sub_21934B5D0(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_21934B5DC(uint64_t a1)
{
  unint64_t v2 = sub_21934D554();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21934B618(uint64_t a1)
{
  unint64_t v2 = sub_21934D554();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASCPublicKeyCredentialRegistrationExtensionInputs.PRF.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18AC0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[1];
  uint64_t v16 = v1[2];
  uint64_t v17 = v8;
  uint64_t v9 = v1[3];
  uint64_t v14 = v1[4];
  uint64_t v15 = v9;
  uint64_t v13 = v1[5];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_21934D554();
  sub_2193E3260();
  LOBYTE(v18) = 0;
  sub_2193E30C0();
  if (!v2)
  {
    uint64_t v18 = v17;
    uint64_t v19 = v16;
    uint64_t v10 = v13;
    uint64_t v20 = v15;
    uint64_t v21 = v14;
    char v22 = 1;
    sub_21934D5A8();
    sub_2193E30A0();
    uint64_t v18 = v10;
    char v22 = 2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C19230);
    sub_21934D6EC((unint64_t *)&unk_267C18AE0, (void (*)(void))sub_21934D644, (void (*)(void))sub_21934D5A8);
    sub_2193E30A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ASCPublicKeyCredentialRegistrationExtensionInputs.PRF.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18AF0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_21934D554();
  sub_2193E3240();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  LOBYTE(v27) = 0;
  int v9 = sub_2193E3000();
  char v32 = 1;
  sub_21934D698();
  sub_2193E2FE0();
  int v31 = v9;
  uint64_t v10 = v27;
  unint64_t v22 = v28;
  uint64_t v11 = v29;
  unint64_t v12 = v30;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C19230);
  unint64_t v24 = v12;
  char v32 = 2;
  uint64_t v25 = v11;
  uint64_t v26 = v10;
  uint64_t v13 = v10;
  unint64_t v14 = v22;
  sub_21934D03C(v13, v22, v11, v12);
  sub_21934D6EC((unint64_t *)&unk_267C18B00, (void (*)(void))sub_21934D774, (void (*)(void))sub_21934D698);
  sub_2193E2FE0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v15 = v31 & 1;
  uint64_t v17 = v26;
  uint64_t v16 = v27;
  unint64_t v19 = v24;
  uint64_t v18 = v25;
  sub_21934D03C(v26, v14, v25, v24);
  swift_bridgeObjectRetain();
  sub_21934CF58(v17, v14, v18, v19);
  *(unsigned char *)a2 = v15;
  *(void *)(a2 + 8) = v17;
  *(void *)(a2 + 16) = v14;
  *(void *)(a2 + 24) = v18;
  *(void *)(a2 + 32) = v19;
  *(void *)(a2 + 40) = v16;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  sub_21934CF58(v17, v14, v18, v19);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21934BBA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ASCPublicKeyCredentialRegistrationExtensionInputs.PRF.init(from:)(a1, a2);
}

uint64_t sub_21934BBC0(void *a1)
{
  return ASCPublicKeyCredentialRegistrationExtensionInputs.PRF.encode(to:)(a1);
}

uint64_t sub_21934BBD8()
{
  if (*v0) {
    return 6713968;
  }
  else {
    return 0x6F6C42656772616CLL;
  }
}

uint64_t sub_21934BC10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21934EF54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21934BC38(uint64_t a1)
{
  unint64_t v2 = sub_21934D7C8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21934BC74(uint64_t a1)
{
  unint64_t v2 = sub_21934D7C8();

  return MEMORY[0x270FA00B8](a1, v2);
}

id ASCPublicKeyCredentialRegistrationExtensionInputs.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionInputs();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_21934BD00(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18B10);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_21934D7C8();
  sub_2193E3260();
  int v9 = (unsigned char *)(v3
               + OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_largeBlob);
  swift_beginAccess();
  LOBYTE(v14) = *v9;
  char v17 = 0;
  sub_21934D81C();
  sub_2193E30A0();
  if (!v2)
  {
    uint64_t v10 = (long long *)(v3
                     + OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_prf);
    swift_beginAccess();
    long long v11 = v10[1];
    long long v14 = *v10;
    long long v15 = v11;
    long long v16 = v10[2];
    v13[15] = 1;
    sub_21934D870();
    sub_2193E30A0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

id ASCPublicKeyCredentialRegistrationExtensionInputs.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ASCPublicKeyCredentialRegistrationExtensionInputs.init(from:)(a1);
}

id ASCPublicKeyCredentialRegistrationExtensionInputs.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18B30);
  uint64_t v27 = *(void *)(v3 - 8);
  uint64_t v28 = v3;
  MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = &v1[OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_largeBlob];
  v1[OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_largeBlob] = 2;
  uint64_t v7 = &v1[OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_prf];
  *(_OWORD *)uint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((void *)v7 + 4) = 0;
  *((void *)v7 + 5) = 1;
  uint64_t v9 = a1[3];
  id v8 = (id)a1[4];
  unint64_t v38 = a1;
  __swift_project_boxed_opaque_existential_1Tm(a1, v9);
  sub_21934D7C8();
  uint64_t v29 = v1;
  uint64_t v10 = v30;
  sub_2193E3240();
  if (v10)
  {
    id v14 = v29;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
    sub_21934CE5C(*(void *)v7, *((void *)v7 + 1), *((void *)v7 + 2), *((void *)v7 + 3), *((void *)v7 + 4), *((void *)v7 + 5));

    type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionInputs();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v11 = v27;
    char v37 = 0;
    sub_21934D8C4();
    uint64_t v12 = v28;
    sub_2193E2FE0();
    char v13 = v33;
    swift_beginAccess();
    unsigned char *v6 = v13;
    char v32 = 1;
    sub_21934D918();
    sub_2193E2FE0();
    long long v30 = v33;
    uint64_t v16 = v34;
    long long v26 = v35;
    uint64_t v17 = v36;
    swift_beginAccess();
    uint64_t v18 = *(void *)v7;
    uint64_t v19 = *((void *)v7 + 1);
    unint64_t v20 = *((void *)v7 + 2);
    uint64_t v21 = *((void *)v7 + 3);
    unint64_t v22 = *((void *)v7 + 4);
    uint64_t v23 = *((void *)v7 + 5);
    *(_OWORD *)uint64_t v7 = v30;
    *((void *)v7 + 2) = v16;
    *(_OWORD *)(v7 + 24) = v26;
    *((void *)v7 + 5) = v17;
    sub_21934CE5C(v18, v19, v20, v21, v22, v23);
    id v24 = v29;

    uint64_t v25 = (objc_class *)type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionInputs();
    v31.receiver = v24;
    v31.super_class = v25;
    id v8 = objc_msgSendSuper2(&v31, sel_init);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v5, v12);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
  }
  return v8;
}

id sub_21934C1FC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionInputs());
  id result = ASCPublicKeyCredentialRegistrationExtensionInputs.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_21934C250(void *a1)
{
  return sub_21934BD00(a1);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_21934C2AC(uint64_t a1)
{
  uint64_t v2 = sub_21934CD54(&qword_26AC26FF8, 255, type metadata accessor for ASCAuthorizationError);

  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_21934C31C(uint64_t a1)
{
  uint64_t v2 = sub_21934CD54(&qword_26AC26FF8, 255, type metadata accessor for ASCAuthorizationError);

  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_21934C390(uint64_t a1)
{
  uint64_t v2 = sub_21934CD54(&qword_26AC27030, 255, type metadata accessor for ASCAuthorizationError);

  return MEMORY[0x270EEF788](a1, v2);
}

id sub_21934C400()
{
  return *v0;
}

uint64_t sub_21934C408@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void sub_21934C410(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_21934C41C()
{
  return sub_2193E2840();
}

uint64_t sub_21934C42C(uint64_t a1)
{
  uint64_t v2 = sub_21934CD54(&qword_26AC27030, 255, type metadata accessor for ASCAuthorizationError);

  return MEMORY[0x270EEF7E8](a1, v2);
}

uint64_t sub_21934C49C(uint64_t a1)
{
  uint64_t v2 = sub_21934CD54(&qword_26AC27030, 255, type metadata accessor for ASCAuthorizationError);

  return MEMORY[0x270EEF7A0](a1, v2);
}

uint64_t sub_21934C50C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_21934CD54(&qword_26AC27030, 255, type metadata accessor for ASCAuthorizationError);
  id v5 = a1;

  return MEMORY[0x270EEF790](v5, a2, v4);
}

uint64_t sub_21934C5A0()
{
  id v1 = *v0;
  uint64_t v2 = sub_2193E2BA0();

  return v2;
}

uint64_t sub_21934C5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21934CD54(&qword_26AC27030, 255, type metadata accessor for ASCAuthorizationError);

  return MEMORY[0x270EEF7D0](a1, a2, v4);
}

uint64_t sub_21934C658()
{
  return sub_2193E3230();
}

void *sub_21934C6B8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_21934C6C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21934CD54(&qword_26AC27030, 255, type metadata accessor for ASCAuthorizationError);

  return MEMORY[0x270EEF7B8](a1, a2, a3, v6);
}

BOOL sub_21934C750(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_21934C764(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_21934C838(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_21934F0D8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_21934F0D8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_21934C838(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_2193E2C10();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_21934C9F4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_2193E2E00();
  if (!v8)
  {
    sub_2193E2EE0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_2193E2F60();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_21934C9F4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_21934CA8C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_21934CC04(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_21934CC04(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_21934CA8C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_219372318(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_2193E2DA0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_2193E2EE0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_2193E2950();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_2193E2F60();
    __break(1u);
LABEL_14:
    uint64_t result = sub_2193E2EE0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_21934CC04(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C18BE0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  char v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2193E2F60();
  __break(1u);
  return result;
}

uint64_t sub_21934CD54(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21934CD9C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  if (a6 != 1)
  {
    sub_21934D03C(a2, a3, a4, a5);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21934CDF0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_21934CE48(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_21934CDF0(a1, a2);
  }
  return a1;
}

uint64_t sub_21934CE5C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  if (a6 != 1)
  {
    sub_21934CF58(a2, a3, a4, a5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21934CEB0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_219348A70(a1, a2);
  }
  return a1;
}

void sub_21934CEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    sub_21934CEB0(a4, a5);
  }
}

uint64_t sub_21934CF14(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  if (a5 != 1)
  {
    sub_21934CF58(result, a2, a3, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21934CF58(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2 >> 60 != 15)
  {
    sub_219348A70(result, a2);
    return sub_21934CEB0(a3, a4);
  }
  return result;
}

void sub_21934CFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    sub_21934CE48(a4, a5);
  }
}

uint64_t sub_21934CFF8(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  if (a5 != 1)
  {
    sub_21934D03C(result, a2, a3, a4);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21934D03C(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2 >> 60 != 15)
  {
    sub_21934CDF0(result, a2);
    return sub_21934CE48(a3, a4);
  }
  return result;
}

uint64_t sub_21934D08C(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C18BD8);
  uint64_t result = sub_2193E2F20();
  int64_t v3 = 0;
  uint64_t v36 = (void *)result;
  uint64_t v37 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v5 = a1 + 64;
  uint64_t v4 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(v5 - 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v4;
  uint64_t v33 = v5;
  int64_t v34 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v35 = result + 64;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v38 = (v9 - 1) & v9;
  int64_t v39 = v3;
  for (unint64_t i = __clz(__rbit64(v9)) | (v3 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v13 << 6))
  {
    long long v15 = (uint64_t *)(*(void *)(v37 + 48) + 16 * i);
    uint64_t v17 = *v15;
    unint64_t v16 = v15[1];
    uint64_t v18 = (uint64_t *)(*(void *)(v37 + 56) + 32 * i);
    uint64_t v19 = *v18;
    unint64_t v20 = v18[1];
    uint64_t v22 = v18[2];
    unint64_t v21 = v18[3];
    sub_21934CDF0(v17, v16);
    sub_21934CDF0(v19, v20);
    sub_21934CE48(v22, v21);
    uint64_t v23 = ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues.salt1.getter();
    uint64_t v40 = v24;
    uint64_t v41 = v23;
    uint64_t v25 = ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues.salt2.getter();
    uint64_t v27 = v26;
    sub_219348A70(v19, v20);
    sub_21934CEB0(v22, v21);
    uint64_t result = (uint64_t)v36;
    *(void *)(v35 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v28 = (uint64_t *)(v36[6] + 16 * i);
    *uint64_t v28 = v17;
    v28[1] = v16;
    uint64_t v29 = (uint64_t *)(v36[7] + 32 * i);
    *uint64_t v29 = v41;
    v29[1] = v40;
    v29[2] = v25;
    v29[3] = v27;
    uint64_t v30 = v36[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v36[2] = v32;
    unint64_t v9 = v38;
    int64_t v3 = v39;
    if (v38) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_24;
    }
    if (v11 >= v34) {
      return result;
    }
    unint64_t v12 = *(void *)(v33 + 8 * v11);
    int64_t v13 = v3 + 1;
    if (!v12)
    {
      int64_t v13 = v3 + 2;
      if (v3 + 2 >= v34) {
        return result;
      }
      unint64_t v12 = *(void *)(v33 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v3 + 3;
        if (v3 + 3 >= v34) {
          return result;
        }
        unint64_t v12 = *(void *)(v33 + 8 * v13);
        if (!v12) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v38 = (v12 - 1) & v12;
    int64_t v39 = v13;
  }
  uint64_t v14 = v3 + 4;
  if (v3 + 4 >= v34) {
    return result;
  }
  unint64_t v12 = *(void *)(v33 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v3 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v34) {
      return result;
    }
    unint64_t v12 = *(void *)(v33 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_21934D35C()
{
  unint64_t result = qword_267C18A60;
  if (!qword_267C18A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18A60);
  }
  return result;
}

unint64_t sub_21934D3B0()
{
  unint64_t result = qword_267C18A68;
  if (!qword_267C18A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18A68);
  }
  return result;
}

unint64_t sub_21934D404()
{
  unint64_t result = qword_267C18A70;
  if (!qword_267C18A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18A70);
  }
  return result;
}

unint64_t sub_21934D458()
{
  unint64_t result = qword_267C18AA0;
  if (!qword_267C18AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18AA0);
  }
  return result;
}

unint64_t sub_21934D4AC()
{
  unint64_t result = qword_267C18AA8;
  if (!qword_267C18AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18AA8);
  }
  return result;
}

unint64_t sub_21934D500()
{
  unint64_t result = qword_267C18AB8;
  if (!qword_267C18AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18AB8);
  }
  return result;
}

unint64_t sub_21934D554()
{
  unint64_t result = qword_267C18AC8;
  if (!qword_267C18AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18AC8);
  }
  return result;
}

unint64_t sub_21934D5A8()
{
  unint64_t result = qword_267C18AD0;
  if (!qword_267C18AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18AD0);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_21934D644()
{
  unint64_t result = qword_26AC274E0;
  if (!qword_26AC274E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC274E0);
  }
  return result;
}

unint64_t sub_21934D698()
{
  unint64_t result = qword_267C18AF8;
  if (!qword_267C18AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18AF8);
  }
  return result;
}

uint64_t sub_21934D6EC(unint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_267C19230);
    a2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21934D774()
{
  unint64_t result = qword_267C191C0;
  if (!qword_267C191C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C191C0);
  }
  return result;
}

unint64_t sub_21934D7C8()
{
  unint64_t result = qword_267C18B18;
  if (!qword_267C18B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18B18);
  }
  return result;
}

unint64_t sub_21934D81C()
{
  unint64_t result = qword_267C18B20;
  if (!qword_267C18B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18B20);
  }
  return result;
}

unint64_t sub_21934D870()
{
  unint64_t result = qword_267C18B28;
  if (!qword_267C18B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18B28);
  }
  return result;
}

unint64_t sub_21934D8C4()
{
  unint64_t result = qword_267C18B38;
  if (!qword_267C18B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18B38);
  }
  return result;
}

unint64_t sub_21934D918()
{
  unint64_t result = qword_267C18B40;
  if (!qword_267C18B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18B40);
  }
  return result;
}

unint64_t sub_21934D970()
{
  unint64_t result = qword_267C18B48;
  if (!qword_267C18B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18B48);
  }
  return result;
}

uint64_t method lookup function for ASCPublicKeyCredentialRegistrationExtensionInputs(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ASCPublicKeyCredentialRegistrationExtensionInputs);
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionInputs.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionInputs.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionInputs.copy(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionInputs.hasAtLeastOneExtension.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionInputs.caBLEAuthenticatorMinimumRequirement.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionInputs.cborForWebKit()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionInputs.cborForHybrid()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionInputs.largeBlob.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionInputs.largeBlob.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionInputs.largeBlob.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionInputs.prf.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionInputs.prf.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionInputs.prf.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionInputs.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionInputs.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob()
{
  return &type metadata for ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.SupportRequirement()
{
  return &type metadata for ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.SupportRequirement;
}

uint64_t initializeBufferWithCopyOfBuffer for ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for ASCPublicKeyCredentialRegistrationExtensionInputs.PRF(uint64_t *a1)
{
  unint64_t v2 = a1[2];
  if (v2 >> 60 != 15)
  {
    sub_219348A70(a1[1], v2);
    unint64_t v3 = a1[4];
    if (v3 >> 60 != 15) {
      sub_219348A70(a1[3], v3);
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ASCPublicKeyCredentialRegistrationExtensionInputs.PRF(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v4 = *(void *)(a2 + 16);
  if (v4 >> 60 == 15)
  {
    long long v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v5;
  }
  else
  {
    uint64_t v6 = *(void *)(a2 + 8);
    sub_21934CDF0(v6, *(void *)(a2 + 16));
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v4;
    uint64_t v7 = (uint64_t *)(a2 + 24);
    unint64_t v8 = *(void *)(a2 + 32);
    if (v8 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 24) = *(_OWORD *)v7;
    }
    else
    {
      uint64_t v9 = *v7;
      sub_21934CDF0(*v7, *(void *)(a2 + 32));
      *(void *)(a1 + 24) = v9;
      *(void *)(a1 + 32) = v8;
    }
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ASCPublicKeyCredentialRegistrationExtensionInputs.PRF(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v4 = (long long *)(a1 + 8);
  long long v5 = (long long *)(a2 + 8);
  unint64_t v6 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) >> 60 == 15)
  {
    if (v6 >> 60 == 15)
    {
      long long v7 = *v5;
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
LABEL_16:
      long long *v4 = v7;
      goto LABEL_17;
    }
    uint64_t v9 = *(void *)(a2 + 8);
    sub_21934CDF0(v9, *(void *)(a2 + 16));
    *(void *)(a1 + 8) = v9;
    *(void *)(a1 + 16) = v6;
    uint64_t v10 = (_OWORD *)(a2 + 24);
    unint64_t v11 = *(void *)(a2 + 32);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 24) = *v10;
      goto LABEL_17;
    }
    uint64_t v16 = *(void *)v10;
LABEL_12:
    sub_21934CDF0(v16, v11);
    *(void *)(a1 + 24) = v16;
    *(void *)(a1 + 32) = v11;
    goto LABEL_17;
  }
  if (v6 >> 60 != 15)
  {
    uint64_t v12 = *(void *)(a2 + 8);
    sub_21934CDF0(v12, *(void *)(a2 + 16));
    uint64_t v13 = *(void *)(a1 + 8);
    unint64_t v14 = *(void *)(a1 + 16);
    *(void *)(a1 + 8) = v12;
    *(void *)(a1 + 16) = v6;
    sub_219348A70(v13, v14);
    unint64_t v4 = (long long *)(a1 + 24);
    long long v15 = (uint64_t *)(a2 + 24);
    unint64_t v11 = *(void *)(a2 + 32);
    if (*(void *)(a1 + 32) >> 60 == 15)
    {
      if (v11 >> 60 != 15)
      {
        uint64_t v16 = *v15;
        goto LABEL_12;
      }
    }
    else
    {
      if (v11 >> 60 != 15)
      {
        uint64_t v18 = *v15;
        sub_21934CDF0(*v15, *(void *)(a2 + 32));
        uint64_t v19 = *(void *)(a1 + 24);
        unint64_t v20 = *(void *)(a1 + 32);
        *(void *)(a1 + 24) = v18;
        *(void *)(a1 + 32) = v11;
        sub_219348A70(v19, v20);
        goto LABEL_17;
      }
      sub_21934DFD8(a1 + 24);
    }
    long long v7 = *(_OWORD *)v15;
    goto LABEL_16;
  }
  sub_21934E02C(a1 + 8);
  long long v8 = v5[1];
  long long *v4 = *v5;
  v4[1] = v8;
LABEL_17:
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21934DFD8(uint64_t a1)
{
  return a1;
}

uint64_t sub_21934E02C(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ASCPublicKeyCredentialRegistrationExtensionInputs.PRF(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v4 = (_OWORD *)(a1 + 8);
  long long v5 = (_OWORD *)(a2 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  if (v6 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v7 = *(void *)(a2 + 16);
  if (v7 >> 60 == 15)
  {
    sub_21934E02C(a1 + 8);
LABEL_4:
    long long v8 = v5[1];
    _OWORD *v4 = *v5;
    v4[1] = v8;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;
  sub_219348A70(v9, v6);
  uint64_t v10 = (void *)(a2 + 24);
  unint64_t v11 = *(void *)(a1 + 32);
  if (v11 >> 60 != 15)
  {
    unint64_t v12 = *(void *)(a2 + 32);
    if (v12 >> 60 != 15)
    {
      uint64_t v13 = *(void *)(a1 + 24);
      *(void *)(a1 + 24) = *v10;
      *(void *)(a1 + 32) = v12;
      sub_219348A70(v13, v11);
      goto LABEL_10;
    }
    sub_21934DFD8(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v10;
LABEL_10:
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCPublicKeyCredentialRegistrationExtensionInputs.PRF(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ASCPublicKeyCredentialRegistrationExtensionInputs.PRF(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionInputs.PRF()
{
  return &type metadata for ASCPublicKeyCredentialRegistrationExtensionInputs.PRF;
}

uint64_t sub_21934E240(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_21934E248(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionInputs.CodingKeys()
{
  return &type metadata for ASCPublicKeyCredentialRegistrationExtensionInputs.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ASCPublicKeyCredentialRegistrationExtensionInputs.PRF.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ASCPublicKeyCredentialRegistrationExtensionInputs.PRF.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21934E3C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_21934E3E8(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionInputs.PRF.CodingKeys()
{
  return &type metadata for ASCPublicKeyCredentialRegistrationExtensionInputs.PRF.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x21934E4F0);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21934E518()
{
  return 0;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.CodingKeys()
{
  return &type metadata for ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ASCABLERequestType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputsC9LargeBlobV18SupportRequirementOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21934E68CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.SupportRequirement.CodingKeys()
{
  return &type metadata for ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.SupportRequirement.CodingKeys;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.SupportRequirement.RequiredCodingKeys()
{
  return &type metadata for ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.SupportRequirement.RequiredCodingKeys;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.SupportRequirement.PreferredCodingKeys()
{
  return &type metadata for ASCPublicKeyCredentialRegistrationExtensionInputs.LargeBlob.SupportRequirement.PreferredCodingKeys;
}

unint64_t sub_21934E6E8()
{
  unint64_t result = qword_267C18B58;
  if (!qword_267C18B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18B58);
  }
  return result;
}

unint64_t sub_21934E740()
{
  unint64_t result = qword_267C18B60;
  if (!qword_267C18B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18B60);
  }
  return result;
}

unint64_t sub_21934E798()
{
  unint64_t result = qword_267C18B68;
  if (!qword_267C18B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18B68);
  }
  return result;
}

unint64_t sub_21934E7F0()
{
  unint64_t result = qword_267C18B70;
  if (!qword_267C18B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18B70);
  }
  return result;
}

unint64_t sub_21934E848()
{
  unint64_t result = qword_267C18B78;
  if (!qword_267C18B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18B78);
  }
  return result;
}

unint64_t sub_21934E8A0()
{
  unint64_t result = qword_267C18B80;
  if (!qword_267C18B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18B80);
  }
  return result;
}

unint64_t sub_21934E8F8()
{
  unint64_t result = qword_267C18B88;
  if (!qword_267C18B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18B88);
  }
  return result;
}

unint64_t sub_21934E950()
{
  unint64_t result = qword_267C18B90;
  if (!qword_267C18B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18B90);
  }
  return result;
}

unint64_t sub_21934E9A8()
{
  unint64_t result = qword_267C18B98;
  if (!qword_267C18B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18B98);
  }
  return result;
}

unint64_t sub_21934EA00()
{
  unint64_t result = qword_267C18BA0;
  if (!qword_267C18BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18BA0);
  }
  return result;
}

unint64_t sub_21934EA58()
{
  unint64_t result = qword_267C18BA8;
  if (!qword_267C18BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18BA8);
  }
  return result;
}

unint64_t sub_21934EAB0()
{
  unint64_t result = qword_267C18BB0;
  if (!qword_267C18BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18BB0);
  }
  return result;
}

unint64_t sub_21934EB08()
{
  unint64_t result = qword_267C18BB8;
  if (!qword_267C18BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18BB8);
  }
  return result;
}

unint64_t sub_21934EB60()
{
  unint64_t result = qword_267C18BC0;
  if (!qword_267C18BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18BC0);
  }
  return result;
}

unint64_t sub_21934EBB8()
{
  unint64_t result = qword_267C18BC8;
  if (!qword_267C18BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18BC8);
  }
  return result;
}

unint64_t sub_21934EC10()
{
  unint64_t result = qword_267C18BD0;
  if (!qword_267C18BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18BD0);
  }
  return result;
}

uint64_t sub_21934EC64(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6465726975716572 && a2 == 0xE800000000000000;
  if (v2 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572726566657270 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2193E3140();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_21934ED64(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000002193F0530)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_2193E3140();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_21934EDEC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000002193F0550 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C61567475706E69 && a2 == 0xEB00000000736575 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002193F0570)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_2193E3140();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_21934EF54(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F6C42656772616CLL && a2 == 0xE900000000000062;
  if (v2 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6713968 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2193E3140();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *__swift_project_boxed_opaque_existential_1Tm(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_21934F0D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void type metadata accessor for ASCAuthorizationError(uint64_t a1)
{
}

void type metadata accessor for AuthChallengeDisposition(uint64_t a1)
{
}

uint64_t sub_21934F160()
{
  return sub_21934CD54(&qword_26AC26FE8, 255, type metadata accessor for ASCAuthorizationError);
}

uint64_t sub_21934F1AC()
{
  return sub_21934CD54(&qword_26AC26FF0, 255, type metadata accessor for ASCAuthorizationError);
}

uint64_t sub_21934F1F8()
{
  return sub_21934CD54(&qword_26AC26FF8, 255, type metadata accessor for ASCAuthorizationError);
}

uint64_t sub_21934F244()
{
  return sub_21934CD54(&qword_26AC27000, 255, type metadata accessor for ASCAuthorizationError);
}

uint64_t sub_21934F290()
{
  return sub_21934CD54((unint64_t *)&unk_26AC27008, 255, type metadata accessor for ASCAuthorizationError);
}

uint64_t sub_21934F2DC()
{
  return sub_21934CD54(&qword_267C18C00, 255, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

void sub_21934F33C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_21934F384()
{
  return sub_21934CD54(&qword_26AC27018, 255, type metadata accessor for Code);
}

unint64_t sub_21934F3D4()
{
  unint64_t result = qword_26AC27020;
  if (!qword_26AC27020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC27020);
  }
  return result;
}

uint64_t sub_21934F428()
{
  return sub_21934CD54(&qword_267C18C08, 255, type metadata accessor for Code);
}

uint64_t sub_21934F474()
{
  return sub_21934CD54(&qword_26AC27030, 255, type metadata accessor for ASCAuthorizationError);
}

uint64_t *sub_21934F4DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[1];
    unint64_t v8 = a2[2];
    sub_21934CDF0(v7, v8);
    v4[1] = v7;
    v4[2] = v8;
    uint64_t v9 = a2[3];
    unint64_t v10 = a2[4];
    sub_21934CDF0(v9, v10);
    v4[3] = v9;
    v4[4] = v10;
    uint64_t v11 = *(int *)(a3 + 28);
    unint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_2193E1FF0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = *(int *)(a3 + 32);
    uint64_t v16 = (uint64_t *)((char *)v4 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = *v17;
    unint64_t v19 = v17[1];
    sub_21934CDF0(*v17, v19);
    uint64_t *v16 = v18;
    v16[1] = v19;
  }
  return v4;
}

uint64_t sub_21934F600(uint64_t a1, uint64_t a2)
{
  sub_219348A70(*(void *)(a1 + 8), *(void *)(a1 + 16));
  sub_219348A70(*(void *)(a1 + 24), *(void *)(a1 + 32));
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_2193E1FF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  char v6 = (uint64_t *)(a1 + *(int *)(a2 + 32));
  uint64_t v7 = *v6;
  unint64_t v8 = v6[1];

  return sub_219348A70(v7, v8);
}

uint64_t sub_21934F69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  unint64_t v7 = *(void *)(a2 + 16);
  sub_21934CDF0(v6, v7);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  uint64_t v8 = *(void *)(a2 + 24);
  unint64_t v9 = *(void *)(a2 + 32);
  sub_21934CDF0(v8, v9);
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_2193E1FF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = (uint64_t *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v17 = *v16;
  unint64_t v18 = v16[1];
  sub_21934CDF0(*v16, v18);
  uint64_t *v15 = v17;
  v15[1] = v18;
  return a1;
}

uint64_t sub_21934F770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  unint64_t v7 = *(void *)(a2 + 16);
  sub_21934CDF0(v6, v7);
  uint64_t v8 = *(void *)(a1 + 8);
  unint64_t v9 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  sub_219348A70(v8, v9);
  uint64_t v10 = *(void *)(a2 + 24);
  unint64_t v11 = *(void *)(a2 + 32);
  sub_21934CDF0(v10, v11);
  uint64_t v12 = *(void *)(a1 + 24);
  unint64_t v13 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v11;
  sub_219348A70(v12, v13);
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_2193E1FF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  uint64_t v18 = *(int *)(a3 + 32);
  unint64_t v19 = (uint64_t *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v21 = *v20;
  unint64_t v22 = v20[1];
  sub_21934CDF0(*v20, v22);
  uint64_t v23 = *v19;
  unint64_t v24 = v19[1];
  uint64_t *v19 = v21;
  v19[1] = v22;
  sub_219348A70(v23, v24);
  return a1;
}

uint64_t sub_21934F85C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_2193E1FF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)(a1 + *(int *)(a3 + 32)) = *(_OWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_21934F904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_219348A70(v6, v7);
  uint64_t v8 = *(void *)(a1 + 24);
  unint64_t v9 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_219348A70(v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_2193E1FF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = *(void *)(a1 + v14);
  unint64_t v16 = *(void *)(a1 + v14 + 8);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  sub_219348A70(v15, v16);
  return a1;
}

uint64_t sub_21934F9CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21934F9E0);
}

uint64_t sub_21934F9E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 12)
  {
    uint64_t v4 = *(void *)(a1 + 16) >> 60;
    if (((4 * v4) & 0xC) != 0) {
      return 16 - ((4 * v4) & 0xC | (v4 >> 2));
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_2193E1FF0();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_21934FA9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21934FAB0);
}

uint64_t sub_21934FAB0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 12)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  else
  {
    uint64_t v7 = sub_2193E1FF0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ASCABLEAdvertisement()
{
  uint64_t result = qword_26AC27098;
  if (!qword_26AC27098) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21934FBAC()
{
  uint64_t result = sub_2193E1FF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21934FC54()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27160);
  uint64_t v1 = MEMORY[0x270FA5388](v0 - 8);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v15 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AC270E8);
  uint64_t v6 = sub_2193E1FF0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_2193E7170;
  sub_2193E1FE0();
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  uint64_t result = v11(v5, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v13 = v10 + v9;
    uint64_t v14 = *(void (**)(unint64_t, char *, uint64_t))(v7 + 32);
    v14(v13, v5, v6);
    sub_2193E1FE0();
    uint64_t result = v11(v3, 1, v6);
    if (result != 1)
    {
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v14)(v13 + v8, v3, v6);
      qword_26AC290D0 = v10;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21934FE6C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27160);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2193E1FF0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v13) = HIDWORD(a1) - a1;
      if (!__OFSUB__(HIDWORD(a1), a1))
      {
        uint64_t v13 = (int)v13;
        goto LABEL_6;
      }
      __break(1u);
      goto LABEL_25;
    case 2uLL:
      uint64_t v15 = *(void *)(a1 + 16);
      uint64_t v14 = *(void *)(a1 + 24);
      BOOL v16 = __OFSUB__(v14, v15);
      uint64_t v13 = v14 - v15;
      if (!v16) {
        goto LABEL_6;
      }
LABEL_25:
      __break(1u);
      goto LABEL_26;
    case 3uLL:
      goto LABEL_11;
    default:
      uint64_t v13 = BYTE6(a2);
LABEL_6:
      if (v13 != 16)
      {
LABEL_11:
        if (qword_26AC26F98 != -1) {
          swift_once();
        }
        uint64_t v29 = sub_2193E24F0();
        __swift_project_value_buffer(v29, (uint64_t)qword_26AC29118);
        sub_21934CDF0(a1, a2);
        uint64_t v21 = sub_2193E24D0();
        os_log_type_t v30 = sub_2193E2AE0();
        if (!os_log_type_enabled(v21, v30))
        {
          sub_219348A70(a1, a2);
          goto LABEL_23;
        }
        BOOL v31 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)BOOL v31 = 134217984;
        uint64_t v23 = v31;
        uint64_t v32 = 0;
        switch(a2 >> 62)
        {
          case 1uLL:
            LODWORD(v32) = HIDWORD(a1) - a1;
            if (__OFSUB__(HIDWORD(a1), a1))
            {
              __break(1u);
LABEL_28:
              __break(1u);
              JUMPOUT(0x219350350);
            }
            uint64_t v32 = (int)v32;
LABEL_21:
            uint64_t v49 = v32;
            sub_2193E2C00();
            sub_219348A70(a1, a2);
            os_log_type_t v26 = v30;
            unint64_t v24 = "Found caBLE advertisement of unexpected size: %ld";
            uint64_t v25 = v21;
            uint64_t v27 = v23;
            uint32_t v28 = 12;
            break;
          case 2uLL:
            uint64_t v44 = *(void *)(a1 + 16);
            uint64_t v43 = *(void *)(a1 + 24);
            BOOL v16 = __OFSUB__(v43, v44);
            uint64_t v32 = v43 - v44;
            if (!v16) {
              goto LABEL_21;
            }
            goto LABEL_28;
          case 3uLL:
            goto LABEL_21;
          default:
            uint64_t v32 = BYTE6(a2);
            goto LABEL_21;
        }
        goto LABEL_22;
      }
      uint64_t v17 = sub_219350370(14, 15, a1, a2);
      unsigned __int16 v19 = sub_2193905D0(v17, v18);
      sub_2193503F4(v19, (uint64_t)v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
      {
        uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v33(v12, v8, v9);
        int v48 = sub_2193E2180();
        uint64_t v34 = sub_219350370(1, 10, a1, a2);
        uint64_t v46 = v35;
        uint64_t v47 = v34;
        uint64_t v36 = sub_219350370(11, 13, a1, a2);
        uint64_t v38 = v37;
        uint64_t v39 = type metadata accessor for ASCABLEAdvertisement();
        v33((char *)(a3 + *(int *)(v39 + 28)), v12, v9);
        *(unsigned char *)a3 = v48;
        uint64_t v40 = v46;
        *(void *)(a3 + 8) = v47;
        *(void *)(a3 + 16) = v40;
        *(void *)(a3 + 24) = v36;
        *(void *)(a3 + 32) = v38;
        uint64_t v41 = (uint64_t *)(a3 + *(int *)(v39 + 32));
        *uint64_t v41 = a1;
        v41[1] = a2;
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(a3, 0, 1, v39);
      }
      sub_2193513F0((uint64_t)v8);
      if (qword_26AC26F98 != -1) {
LABEL_26:
      }
        swift_once();
      uint64_t v20 = sub_2193E24F0();
      __swift_project_value_buffer(v20, (uint64_t)qword_26AC29118);
      uint64_t v21 = sub_2193E24D0();
      os_log_type_t v22 = sub_2193E2AE0();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        unint64_t v24 = "Could not decode caBLE server URL";
        uint64_t v25 = v21;
        os_log_type_t v26 = v22;
        uint64_t v27 = v23;
        uint32_t v28 = 2;
LABEL_22:
        _os_log_impl(&dword_219326000, v25, v26, v24, v27, v28);
        MEMORY[0x21D48A390](v23, -1, -1);
      }
LABEL_23:
      sub_219348A70(a1, a2);

      uint64_t v45 = type metadata accessor for ASCABLEAdvertisement();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(a3, 1, 1, v45);
  }
}

uint64_t sub_219350370(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v5 = (int)a3;
      uint64_t v4 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v5 = *(void *)(a3 + 16);
      uint64_t v4 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v5 = 0;
      uint64_t v4 = BYTE6(a4);
      break;
  }
  if (v5 > a2)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v4 <= a2)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (a2 + 1 < a1)
  {
LABEL_11:
    __break(1u);
    JUMPOUT(0x2193503E4);
  }
  return sub_2193E20F0();
}

uint64_t sub_2193503F4@<X0>(unsigned __int16 a1@<W0>, uint64_t a2@<X8>)
{
  LOWORD(v2) = a1;
  unsigned int v4 = a1;
  uint64_t v59 = *MEMORY[0x263EF8340];
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18CD0);
  MEMORY[0x270FA5388](v51);
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2193E2780();
  uint64_t v50 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2193E2660();
  uint64_t v53 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  v52 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2193E2880();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v4 > 0xFF)
  {
    uint64_t v49 = a2;
    sub_2193E2870();
    uint64_t v20 = sub_2193E2850();
    unint64_t v22 = v21;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    if (v22 >> 60 == 15)
    {
      __break(1u);
      JUMPOUT(0x219350D54);
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C18BE0);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_2193E7180;
    *(_WORD *)(v23 + 32) = (_WORD)v2;
    *(unsigned char *)(v23 + 34) = 0;
    uint64_t v57 = v20;
    unint64_t v58 = v22;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27180);
    uint64_t v55 = v24;
    unint64_t v56 = sub_219351450();
    *(void *)&long long v54 = v23;
    __swift_project_boxed_opaque_existential_1Tm(&v54, v24);
    swift_bridgeObjectRetain();
    unint64_t v46 = v22;
    uint64_t v47 = v20;
    sub_21934CE48(v20, v22);
    sub_2193E20E0();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v54);
    swift_bridgeObjectRelease();
    uint64_t v25 = v57;
    unint64_t v26 = v58;
    sub_2193514AC();
    sub_2193E2640();
    a2 = v49;
    uint64_t v48 = v10;
    switch(v26 >> 62)
    {
      case 1uLL:
        if (v25 >> 32 < (int)v25) {
          __break(1u);
        }
        sub_21934CDF0(v25, v26);
        sub_2193796B0((int)v25, v25 >> 32);
        sub_219348A70(v25, v26);
        uint64_t v10 = v48;
        goto LABEL_21;
      case 2uLL:
        uint64_t v32 = v49;
        uint64_t v33 = *(void *)(v25 + 16);
        uint64_t v34 = *(void *)(v25 + 24);
        sub_21934CDF0(v25, v26);
        swift_retain();
        swift_retain();
        uint64_t v35 = v34;
        a2 = v32;
        uint64_t v10 = v48;
        sub_2193796B0(v33, v35);
        swift_release();
        swift_release();
        goto LABEL_20;
      case 3uLL:
        *(void *)((char *)&v54 + 6) = 0;
        *(void *)&long long v54 = 0;
        goto LABEL_19;
      default:
        *(void *)&long long v54 = v25;
        WORD4(v54) = v26;
        BYTE10(v54) = BYTE2(v26);
        BYTE11(v54) = BYTE3(v26);
        BYTE12(v54) = BYTE4(v26);
        BYTE13(v54) = BYTE5(v26);
LABEL_19:
        sub_2193E2620();
LABEL_20:
        sub_219348A70(v25, v26);
LABEL_21:
        uint64_t v36 = v52;
        sub_2193E2630();
        (*(void (**)(char *, uint64_t))(v50 + 8))(v9, v7);
        (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v6, v36, v10);
        *(void *)&v6[*(int *)(v51 + 36)] = 8;
        unint64_t v37 = sub_219390364((uint64_t)v6);
        uint64_t v38 = sub_2193E28E0();
        if (!v38) {
          goto LABEL_24;
        }
        uint64_t v39 = v38;
        uint64_t v2 = sub_2193512C0(v38, 0);
        uint64_t v40 = sub_219351204(&v54, v2 + 4, v39, 0xD000000000000020, 0x80000002193F08A0);
        swift_bridgeObjectRelease();
        if (v40 != (void *)v39)
        {
          __break(1u);
LABEL_24:
          uint64_t v2 = (void *)MEMORY[0x263F8EE78];
        }
        *(void *)&long long v54 = 0x2E656C626163;
        *((void *)&v54 + 1) = 0xE600000000000000;
        if (v37 < 4)
        {
          swift_release();
LABEL_31:
          swift_bridgeObjectRetain();
          swift_arrayDestroy();
          sub_2193E2920();
          swift_bridgeObjectRelease();
          sub_2193E1FE0();
          swift_bridgeObjectRelease();
          sub_219348A70(v25, v26);
          sub_21934CEB0(v47, v46);
          return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v52, v10);
        }
        unint64_t v41 = v37 >> 2;
        while ((v41 & 0x1F) < v2[2])
        {
          unint64_t v42 = &v2[2 * (v41 & 0x1F) + 4];
          uint64_t v43 = *v42;
          a2 = v42[1];
          swift_bridgeObjectRetain();
          MEMORY[0x21D488F50](v43, a2);
          swift_bridgeObjectRelease();
          BOOL v44 = v41 > 0x1F;
          v41 >>= 5;
          if (!v44)
          {
            swift_release();
            uint64_t v10 = v48;
            goto LABEL_31;
          }
        }
        __break(1u);
        break;
    }
  }
  else if (qword_26AC26F70 == -1)
  {
    goto LABEL_3;
  }
  swift_once();
LABEL_3:
  uint64_t v16 = qword_26AC290D0;
  if (*(void *)(qword_26AC290D0 + 16) <= (unint64_t)(unsigned __int16)v2)
  {
    if (qword_26AC26F98 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_2193E24F0();
    __swift_project_value_buffer(v27, (uint64_t)qword_26AC29118);
    uint32_t v28 = sub_2193E24D0();
    os_log_type_t v29 = sub_2193E2AF0();
    if (os_log_type_enabled(v28, v29))
    {
      os_log_type_t v30 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v30 = 33554688;
      LOWORD(v54) = (_WORD)v2;
      sub_2193E2C00();
      _os_log_impl(&dword_219326000, v28, v29, "Found unknown reserved caBLE URL: %hu", v30, 6u);
      MEMORY[0x21D48A390](v30, -1, -1);
    }

    uint64_t v31 = sub_2193E1FF0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(a2, 1, 1, v31);
  }
  else
  {
    uint64_t v17 = sub_2193E1FF0();
    uint64_t v53 = *(void *)(v17 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v53 + 16))(a2, v16+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(void *)(v53 + 72) * (unsigned __int16)v2, v17);
    unint64_t v18 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56);
    return v18(a2, 0, 1, v17);
  }
}

uint64_t sub_219350D64@<X0>(int a1@<W0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, unsigned __int16 a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v56 = a7;
  unint64_t v57 = a5;
  uint64_t v54 = a4;
  unint64_t v55 = a3;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27160);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2193E1FF0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  unsigned __int16 v19 = (char *)&v48 - v18;
  sub_2193503F4(a6, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_2193513F0((uint64_t)v12);
    if (qword_26AC26F98 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_2193E24F0();
    __swift_project_value_buffer(v20, (uint64_t)qword_26AC29118);
    unint64_t v21 = sub_2193E24D0();
    os_log_type_t v22 = sub_2193E2AE0();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_219326000, v21, v22, "Could not decode caBLE server URL", v23, 2u);
      MEMORY[0x21D48A390](v23, -1, -1);
    }
    sub_219348A70(v54, v57);
    sub_219348A70(a2, v55);

    uint64_t v24 = type metadata accessor for ASCABLEAdvertisement();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v56, 1, 1, v24);
  }
  else
  {
    v52 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    uint64_t v53 = v14 + 32;
    v52(v19, v12, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C18BE0);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_2193E7190;
    *(unsigned char *)(v26 + 32) = a1;
    uint64_t v27 = sub_21935B74C(v26);
    int v51 = a1;
    uint64_t v28 = v27;
    uint64_t v49 = a2;
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
    uint64_t v60 = v28;
    unint64_t v61 = v30;
    sub_21934CDF0(v28, v30);
    uint64_t v50 = v19;
    uint64_t v32 = v54;
    unint64_t v31 = v55;
    sub_21934CDF0(a2, v55);
    sub_21935AB18(a2, v31);
    sub_219348A70(a2, v31);
    sub_219348A70(v28, v30);
    uint64_t v33 = v60;
    unint64_t v34 = v61;
    uint64_t v58 = v60;
    unint64_t v59 = v61;
    sub_21934CDF0(v60, v61);
    uint64_t v48 = v17;
    unint64_t v35 = v57;
    sub_21934CDF0(v32, v57);
    sub_21935AB18(v32, v35);
    sub_219348A70(v32, v35);
    sub_219348A70(v33, v34);
    uint64_t v36 = v58;
    unint64_t v37 = v59;
    uint64_t v38 = sub_219390A24(1, a6);
    uint64_t v39 = v56;
    unint64_t v40 = v31;
    unint64_t v42 = v41;
    uint64_t v60 = v36;
    unint64_t v61 = v37;
    sub_21934CDF0(v36, v37);
    sub_21935AB18(v38, v42);
    sub_219348A70(v38, v42);
    sub_219348A70(v36, v37);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v50, v13);
    uint64_t v43 = v60;
    unint64_t v44 = v61;
    *(unsigned char *)uint64_t v39 = v51;
    *(void *)(v39 + 8) = v49;
    *(void *)(v39 + 16) = v40;
    unint64_t v45 = v57;
    *(void *)(v39 + 24) = v32;
    *(void *)(v39 + 32) = v45;
    uint64_t v46 = type metadata accessor for ASCABLEAdvertisement();
    v52((char *)(v39 + *(int *)(v46 + 28)), v48, v13);
    uint64_t v47 = (uint64_t *)(v39 + *(int *)(v46 + 32));
    *uint64_t v47 = v43;
    v47[1] = v44;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v39, 0, 1, v46);
  }
}

void *sub_219351204(void *result, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5 = result;
  uint64_t v6 = HIBYTE(a5) & 0xF;
  uint64_t v12 = a4;
  unint64_t v13 = a5;
  if ((a5 & 0x2000000000000000) == 0) {
    uint64_t v6 = a4 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v14 = v6;
  if (!a2)
  {
    uint64_t v7 = 0;
LABEL_14:
    *uint64_t v5 = a4;
    v5[1] = a5;
    v5[2] = 0;
    v5[3] = v6;
    return (void *)v7;
  }
  uint64_t v7 = a3;
  if (!a3) {
    goto LABEL_14;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = a2;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = sub_2193E2940();
      if (!v11) {
        break;
      }
      ++v9;
      *uint64_t v8 = v10;
      v8[1] = v11;
      v8 += 2;
      if (v7 == v9)
      {
        a4 = v12;
        a5 = v13;
        goto LABEL_13;
      }
    }
    a4 = v12;
    a5 = v13;
    uint64_t v7 = v9;
LABEL_13:
    uint64_t v6 = v14;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void *sub_2193512C0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C18CD8);
  unsigned int v4 = (void *)swift_allocObject();
  int64_t v5 = _swift_stdlib_malloc_size(v4);
  uint64_t v6 = v5 - 32;
  if (v5 < 32) {
    uint64_t v6 = v5 - 17;
  }
  v4[2] = a1;
  v4[3] = 2 * (v6 >> 4);
  return v4;
}

uint64_t sub_219351338(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  if ((sub_219379924(*((void *)a1 + 1), *((void *)a1 + 2), *((void *)a2 + 1), *((void *)a2 + 2)) & 1) == 0) {
    return 0;
  }
  if ((sub_219379924(*((void *)a1 + 3), *((void *)a1 + 4), *((void *)a2 + 3), *((void *)a2 + 4)) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for ASCABLEAdvertisement();
  if ((MEMORY[0x21D4885D0](&a1[*(int *)(v4 + 28)], &a2[*(int *)(v4 + 28)]) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 32);
  uint64_t v6 = *(void *)&a1[v5];
  unint64_t v7 = *(void *)&a1[v5 + 8];
  uint64_t v8 = (uint64_t *)&a2[v5];
  uint64_t v9 = *v8;
  unint64_t v10 = v8[1];

  return sub_219379924(v6, v7, v9, v10);
}

uint64_t sub_2193513F0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27160);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_219351450()
{
  unint64_t result = qword_26AC270E0;
  if (!qword_26AC270E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AC27180);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC270E0);
  }
  return result;
}

unint64_t sub_2193514AC()
{
  unint64_t result = qword_26AC274F0;
  if (!qword_26AC274F0)
  {
    sub_2193E2780();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC274F0);
  }
  return result;
}

uint64_t sub_219351504(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E08);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v3);
  sub_219360574(a1, (uint64_t)&v15[-v6], &qword_267C18E08);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E10);
  if (!swift_dynamicCast())
  {
    uint64_t v18 = 0;
    memset(v17, 0, sizeof(v17));
    sub_219360620((uint64_t)v17, &qword_267C18E18);
    v17[0] = xmmword_2193E7210;
    *(void *)((char *)&v16 + 7) = 0;
    *(void *)&long long v16 = 0;
    sub_219360574(a1, (uint64_t)v5, &qword_267C18E08);
    uint64_t v7 = sub_21935B188(&v19, &v16, 0);
    uint64_t v8 = v19;
    if (v7)
    {
      if (v7 <= 0)
      {
        sub_2193E20D0();
        goto LABEL_6;
      }
    }
    else
    {
      unint64_t v10 = *((void *)&v19 + 1);
      *(void *)((char *)&v19 + 7) = 0;
      *(void *)&long long v19 = 0;
      if (!v20 || (uint64_t v11 = *(void *)(v8 + 16), v10 == v11))
      {
LABEL_6:
        swift_bridgeObjectRelease();
        sub_219360620(a1, &qword_267C18E08);
        return *(void *)&v17[0];
      }
      if ((v10 & 0x8000000000000000) != 0) {
LABEL_26:
      }
        __break(1u);
      if (v10 < *(void *)(v8 + 16))
      {
        LOBYTE(v12) = 0;
        uint64_t v13 = v20 - 1;
        uint64_t v14 = v11 - 1;
        do
        {
          *((unsigned char *)&v19 + v12) = *(unsigned char *)(v8 + v10 + 32);
          __int16 v12 = v12 + 1;
          if ((v12 & 0x100) != 0) {
            goto LABEL_24;
          }
          if (v12 == 14)
          {
            *(void *)&long long v16 = v19;
            DWORD2(v16) = DWORD2(v19);
            WORD6(v16) = WORD6(v19);
            sub_2193E20E0();
            if (!v13 || v14 == v10) {
              goto LABEL_6;
            }
            LOBYTE(v12) = 0;
          }
          else if (v14 == v10 || !v13)
          {
            *(void *)&long long v16 = v19;
            DWORD2(v16) = DWORD2(v19);
            WORD6(v16) = WORD6(v19);
            sub_2193E20E0();
            goto LABEL_6;
          }
          ++v10;
          --v13;
        }
        while (v10 < *(void *)(v8 + 16));
      }
      __break(1u);
LABEL_24:
      __break(1u);
    }
    __break(1u);
    goto LABEL_26;
  }
  sub_21935D0F0(v17, (uint64_t)&v19);
  __swift_project_boxed_opaque_existential_1Tm(&v19, v21);
  sub_2193E1E40();
  sub_219360620(a1, &qword_267C18E08);
  v17[0] = v16;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v19);
  return *(void *)&v17[0];
}

uint64_t sub_21935183C(uint64_t a1, unint64_t a2)
{
  uint64_t v55 = *MEMORY[0x263EF8340];
  uint64_t v53 = a1;
  unint64_t v54 = a2;
  *(void *)&long long v48 = a1;
  *((void *)&v48 + 1) = a2;
  sub_21934CDF0(a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E10);
  if (swift_dynamicCast())
  {
    sub_21935D0F0(v46, (uint64_t)&v49);
    __swift_project_boxed_opaque_existential_1Tm(&v49, v52);
    sub_2193E1E40();
    sub_219348A70(v53, v54);
    v46[0] = v48;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v49);
  }
  else
  {
    uint64_t v47 = 0;
    memset(v46, 0, sizeof(v46));
    sub_219360620((uint64_t)v46, &qword_267C18E18);
    uint64_t v2 = 0;
    uint64_t v3 = 0;
    switch(v54 >> 62)
    {
      case 1uLL:
        uint64_t v3 = v53 >> 32;
        uint64_t v2 = (int)v53;
        break;
      case 2uLL:
        uint64_t v2 = *(void *)(v53 + 16);
        uint64_t v3 = *(void *)(v53 + 24);
        break;
      case 3uLL:
        break;
      default:
        uint64_t v2 = 0;
        uint64_t v3 = BYTE6(v54);
        break;
    }
    uint64_t v4 = sub_21936E92C(v2, v3, v53, v54);
    *(void *)&v46[0] = sub_21935B80C(v4);
    *((void *)&v46[0] + 1) = v5;
    MEMORY[0x270FA5388](*(void *)&v46[0]);
    sub_21935A110(sub_219360460);
    uint64_t v6 = v49;
    unint64_t v40 = v50;
    uint64_t v8 = v51;
    uint64_t v7 = v52;
    BYTE6(v9) = BYTE14(v46[0]);
    uint64_t v10 = *((void *)&v46[0] + 1) >> 62;
    switch(*((void *)&v46[0] + 1) >> 62)
    {
      case 1:
        LODWORD(v11) = DWORD1(v46[0]) - LODWORD(v46[0]);
        if (__OFSUB__(DWORD1(v46[0]), v46[0])) {
          goto LABEL_62;
        }
        uint64_t v11 = (int)v11;
LABEL_12:
        if (v52 == v11)
        {
LABEL_18:
          unsigned __int8 v16 = 0;
          unint64_t v17 = v50 >> 62;
          uint64_t v39 = (uint64_t)v49 >> 32;
          unint64_t v41 = &v45;
          *(void *)((char *)&v48 + 7) = 0;
          *(void *)&long long v48 = 0;
          unint64_t v38 = v49 >> 8;
          unint64_t v37 = v49 >> 16;
          unint64_t v36 = v49 >> 24;
          unint64_t v35 = HIDWORD(v49);
          unint64_t v34 = v49 >> 40;
          unint64_t v33 = HIWORD(v49);
          unint64_t v32 = HIBYTE(v49);
          unint64_t v31 = v50 >> 8;
          unint64_t v30 = v50 >> 16;
          unint64_t v29 = v50 >> 24;
          unint64_t v9 = (unint64_t)&v53;
          unint64_t v28 = HIDWORD(v50);
          unint64_t v27 = v50 >> 40;
          uint64_t v26 = v51;
          unint64_t v18 = v50 >> 62;
          while (1)
          {
            uint64_t v19 = (int)v6;
            switch(v18)
            {
              case 1uLL:
                goto LABEL_25;
              case 2uLL:
                uint64_t v19 = *(void *)(v6 + 16);
LABEL_25:
                if (v8 == v19) {
                  goto LABEL_50;
                }
                BOOL v14 = __OFSUB__(v8--, 1);
                if (v14) {
                  goto LABEL_53;
                }
                if (v17 == 2)
                {
                  if (v8 < *(void *)(v6 + 16)) {
                    goto LABEL_56;
                  }
                  if (v8 >= *(void *)(v6 + 24)) {
                    goto LABEL_58;
                  }
                  uint64_t v21 = sub_2193E1DF0();
                  if (!v21) {
                    goto LABEL_64;
                  }
                  uint64_t v22 = v21;
                  uint64_t v7 = sub_2193E1E20();
                  uint64_t v23 = v8 - v7;
                  if (__OFSUB__(v8, v7)) {
                    goto LABEL_60;
                  }
                }
                else
                {
                  if (v8 < (int)v6 || v8 >= v39) {
                    goto LABEL_57;
                  }
                  uint64_t v24 = sub_2193E1DF0();
                  if (!v24) {
                    goto LABEL_65;
                  }
                  uint64_t v22 = v24;
                  uint64_t v7 = sub_2193E1E20();
                  uint64_t v23 = v8 - v7;
                  if (__OFSUB__(v8, v7)) {
                    goto LABEL_59;
                  }
                }
                char v20 = *(unsigned char *)(v22 + v23);
                goto LABEL_39;
              case 3uLL:
                if (!v26) {
                  goto LABEL_48;
                }
                __break(1u);
                goto LABEL_44;
              default:
                if (!v8)
                {
LABEL_50:
                  if (v16)
                  {
                    uint64_t v42 = v48;
                    int v43 = DWORD2(v48);
                    __int16 v44 = WORD6(v48);
                    sub_2193E20E0();
                  }
                  goto LABEL_48;
                }
                BOOL v14 = __OFSUB__(v8--, 1);
                if (v14) {
                  goto LABEL_54;
                }
                if (v8 >= BYTE6(v40)) {
                  goto LABEL_55;
                }
                LOBYTE(v42) = v6;
                BYTE1(v42) = v38;
                BYTE2(v42) = v37;
                BYTE3(v42) = v36;
                BYTE4(v42) = v35;
                BYTE5(v42) = v34;
                BYTE6(v42) = v33;
                HIBYTE(v42) = v32;
                LOBYTE(v43) = v40;
                BYTE1(v43) = v31;
                BYTE2(v43) = v30;
                HIBYTE(v43) = v29;
                LOBYTE(v44) = v28;
                HIBYTE(v44) = v27;
                char v20 = *((unsigned char *)&v42 + v8);
LABEL_39:
                unint64_t v9 = v16;
                *((unsigned char *)&v48 + v16++) = v20;
                if (((v9 + 1) >> 8))
                {
                  __break(1u);
LABEL_53:
                  __break(1u);
LABEL_54:
                  __break(1u);
LABEL_55:
                  __break(1u);
LABEL_56:
                  __break(1u);
LABEL_57:
                  __break(1u);
LABEL_58:
                  __break(1u);
LABEL_59:
                  __break(1u);
LABEL_60:
                  __break(1u);
LABEL_61:
                  __break(1u);
LABEL_62:
                  __break(1u);
LABEL_63:
                  __break(1u);
LABEL_64:
                  __break(1u);
LABEL_65:
                  __break(1u);
                }
                if (v16 == 14)
                {
                  uint64_t v42 = v48;
                  int v43 = DWORD2(v48);
                  __int16 v44 = WORD6(v48);
                  uint64_t v7 = sub_2193E20E0();
                  unsigned __int8 v16 = 0;
                }
                break;
            }
          }
        }
        if (v10)
        {
          if (v10 == 1) {
            uint64_t v15 = *(uint64_t *)&v46[0] >> 32;
          }
          else {
            uint64_t v15 = *(void *)(*(void *)&v46[0] + 24);
          }
        }
        else
        {
LABEL_44:
          uint64_t v15 = BYTE6(v9);
        }
LABEL_46:
        if (v15 < v7) {
          goto LABEL_61;
        }
        sub_2193E20D0();
LABEL_48:
        sub_219348A70(v6, v40);
        sub_219348A70(v53, v54);
        break;
      case 2:
        uint64_t v13 = *(void *)(*(void *)&v46[0] + 16);
        uint64_t v12 = *(void *)(*(void *)&v46[0] + 24);
        BOOL v14 = __OFSUB__(v12, v13);
        uint64_t v11 = v12 - v13;
        if (!v14) {
          goto LABEL_12;
        }
        goto LABEL_63;
      case 3:
        if (!v52) {
          goto LABEL_18;
        }
        uint64_t v15 = 0;
        goto LABEL_46;
      default:
        uint64_t v11 = BYTE14(v46[0]);
        goto LABEL_12;
    }
  }
  return *(void *)&v46[0];
}

uint64_t sub_219351E64()
{
  uint64_t result = sub_21935B74C((uint64_t)&unk_26CAB40D8);
  qword_267C18CE0 = result;
  *(void *)algn_267C18CE8 = v1;
  return result;
}

unint64_t ASCABLEAuthenticator.AuthenticatorError.init(rawValue:)(unint64_t a1)
{
  return sub_21935B8AC(a1);
}

unint64_t static ASCABLEAuthenticator.AuthenticatorError._nsErrorDomain.getter()
{
  return 0xD000000000000042;
}

uint64_t sub_219351ECC()
{
  return sub_2193E3230();
}

uint64_t sub_219351F30()
{
  return sub_2193E3230();
}

uint64_t sub_219352020()
{
  return sub_2193E3230();
}

uint64_t sub_219352114(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_21936040C();

  return MEMORY[0x270EEEA70](a1, a2, v4);
}

uint64_t sub_219352160()
{
  return sub_2193E3230();
}

uint64_t sub_21935224C()
{
  return sub_2193E3230();
}

unint64_t sub_21935233C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_21935B8AC(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_219352370(uint64_t a1)
{
  unint64_t v2 = sub_21936040C();

  return MEMORY[0x270EEEA80](a1, v2);
}

uint64_t sub_2193523AC(uint64_t a1)
{
  unint64_t v2 = sub_21936040C();

  return MEMORY[0x270EEEA78](a1, v2);
}

unint64_t sub_2193523EC()
{
  return 0xD000000000000042;
}

uint64_t sub_219352408(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_21936040C();

  return MEMORY[0x270EEEA68](a1, a2, v4);
}

uint64_t ASCABLEAuthenticator.__allocating_init(caBLEURL:)(uint64_t a1)
{
  uint64_t v3 = sub_2193E1FF0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_allocWithZone(v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEEF8]), sel_init);
  id v8 = objc_allocWithZone((Class)type metadata accessor for ASCABLEAuthenticator());
  sub_2193541BC((uint64_t)v6, v7);
  uint64_t v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v10;
}

uint64_t ASCABLEAuthenticator.init(caBLEURL:)(uint64_t a1)
{
  uint64_t v2 = sub_2193E1FF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEEF8]), sel_init);
  id v7 = objc_allocWithZone((Class)type metadata accessor for ASCABLEAuthenticator());
  sub_2193541BC((uint64_t)v5, v6);
  uint64_t v9 = v8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v9;
}

id sub_2193529F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_completionHandler);
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_completionHandler);
  *uint64_t v3 = a1;
  v3[1] = a2;
  swift_retain();
  sub_219360334(v4);
  sub_219354BF4(0);
  uint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_powerLogger);

  return objc_msgSend(v5, sel_logAuthenticationStartedEventIfNeeded);
}

void sub_219352B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_2193E1F60();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

void sub_219352BA4()
{
  uint64_t v1 = sub_2193E2B30();
  uint64_t v26 = *(void *)(v1 - 8);
  uint64_t v27 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v25 = (uint64_t *)((char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = sub_21935B74C((uint64_t)&unk_26CAB41D8);
  unint64_t v5 = v4;
  uint64_t v28 = v0;
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_cryptographyManager);
  sub_21934CDF0(v3, v4);
  uint64_t v7 = sub_21935B74C((uint64_t)&unk_26CAB4200);
  unint64_t v9 = v8;
  uint64_t v29 = v7;
  unint64_t v30 = v8;
  sub_21934CDF0(v3, v5);
  sub_21934CDF0(v7, v9);
  sub_21935AB18(v3, v5);
  sub_219348A70(v3, v5);
  sub_219348A70(v7, v9);
  sub_219348A70(v3, v5);
  uint64_t v11 = v29;
  unint64_t v10 = v30;
  uint64_t v12 = sub_21936EF7C(v29, v30);
  unint64_t v14 = v13;
  uint64_t v31 = v12;
  unint64_t v32 = v13;
  uint64_t v15 = v6 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_noiseTransportCipher;
  swift_beginAccess();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC270F0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16) == 1)
  {
    __break(1u);
  }
  else
  {
    sub_21935B908();
    uint64_t v17 = sub_2193E2540();
    unint64_t v19 = v18;
    swift_endAccess();
    sub_219348A70(v11, v10);
    sub_219348A70(v12, v14);
    char v20 = *(void **)(v28 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_webSocket);
    if (v20)
    {
      uint64_t v22 = v25;
      uint64_t v21 = v26;
      *uint64_t v25 = v17;
      v22[1] = v19;
      uint64_t v23 = v27;
      (*(void (**)(uint64_t *, void, uint64_t))(v21 + 104))(v22, *MEMORY[0x263F07CB8], v27);
      *(void *)(swift_allocObject() + 16) = v20;
      id v24 = v20;
      sub_21934CDF0(v17, v19);
      sub_2193E2B20();
      swift_release();
      (*(void (**)(uint64_t *, uint64_t))(v21 + 8))(v22, v23);
      sub_219348A70(v3, v5);
      sub_219348A70(v17, v19);
    }
    else
    {
      sub_219348A70(v3, v5);
      sub_219348A70(v17, v19);
    }
  }
}

void sub_2193530DC(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_2193E2B30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (uint64_t *)((char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    self;
    uint64_t v10 = swift_dynamicCastObjCClass();
    if (!v10)
    {
      self;
      uint64_t v37 = swift_dynamicCastObjCClass();
      if (!v37)
      {
        uint64_t v39 = qword_26AC26F98;
        swift_unknownObjectRetain();
        if (v39 != -1) {
          swift_once();
        }
        uint64_t v40 = sub_2193E24F0();
        __swift_project_value_buffer(v40, (uint64_t)qword_26AC29118);
        swift_unknownObjectRetain_n();
        unint64_t v41 = sub_2193E24D0();
        os_log_type_t v42 = sub_2193E2AE0();
        if (os_log_type_enabled(v41, v42))
        {
          int v43 = (uint8_t *)swift_slowAlloc();
          uint64_t v44 = swift_slowAlloc();
          uint64_t v93 = v44;
          *(_DWORD *)int v43 = 136315138;
          swift_getObjectType();
          uint64_t v45 = sub_2193E3290();
          *(void *)&long long v107 = sub_21934C764(v45, v46, &v93);
          sub_2193E2C00();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_219326000, v41, v42, "Received credential with unexpected type: %s", v43, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x21D48A390](v44, -1, -1);
          MEMORY[0x21D48A390](v43, -1, -1);
        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        sub_219358E88(7);
        goto LABEL_44;
      }
      unint64_t v38 = (void *)v37;
      uint64_t v91 = v7;
      swift_unknownObjectRetain_n();
      sub_2193A9CF0(v38, (uint64_t)v124);
      sub_219360140((uint64_t)v124, (uint64_t)v105, &qword_267C18D00);
      sub_219360140((uint64_t)v105, (uint64_t)&v107, &qword_267C18D00);
      if (sub_21935B99C((uint64_t)&v107) == 1)
      {
        __break(1u);
LABEL_46:
        __break(1u);
        return;
      }
      uint64_t v92 = v3;
      v121[6] = v113;
      v122[0] = v114[0];
      *(_OWORD *)((char *)v122 + 9) = *(_OWORD *)((char *)v114 + 9);
      v121[2] = v109;
      v121[3] = v110;
      v121[4] = v111;
      v121[5] = v112;
      v121[0] = v107;
      v121[1] = v108;
      sub_219360140((uint64_t)v105, (uint64_t)v123, &qword_267C18D00);
      sub_21935B9B4((uint64_t)v123);
      sub_2193AAD88();
      uint64_t v48 = v47;
      unint64_t v50 = v49;
      uint64_t v90 = v6;
      uint64_t v51 = sub_21935B74C((uint64_t)&unk_26CAB4250);
      unint64_t v53 = v52;
      uint64_t v93 = v51;
      unint64_t v94 = v52;
      sub_21934CDF0(v51, v52);
      sub_21934CDF0(v48, v50);
      sub_21935AB18(v48, v50);
      sub_219348A70(v48, v50);
      sub_219348A70(v51, v53);
      sub_219348A70(v48, v50);
      swift_unknownObjectRelease();
      sub_21935BAF0((uint64_t)v105);
      long long v101 = v112;
      long long v102 = v113;
      v103[0] = v114[0];
      *(_OWORD *)((char *)v103 + 9) = *(_OWORD *)((char *)v114 + 9);
      long long v97 = v108;
      long long v98 = v109;
      long long v99 = v110;
      long long v100 = v111;
      uint64_t v55 = v93;
      unint64_t v54 = v94;
      LOBYTE(v93) = 0;
      unint64_t v94 = v55;
      unint64_t v95 = v54;
      long long v96 = v107;
      sub_21934CDF0(v55, v54);
      sub_21935BD58((uint64_t)&v93);
LABEL_35:
      uint64_t v62 = *(void *)(v92 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_cryptographyManager);
      sub_21934CDF0(v55, v54);
      sub_21934CDF0(v55, v54);
      uint64_t v63 = sub_21935B74C((uint64_t)&unk_26CAB4278);
      unint64_t v65 = v64;
      uint64_t v93 = v63;
      unint64_t v94 = v64;
      sub_21934CDF0(v55, v54);
      sub_21934CDF0(v63, v65);
      sub_21935AB18(v55, v54);
      sub_219348A70(v55, v54);
      sub_219348A70(v63, v65);
      sub_219348A70(v55, v54);
      uint64_t v66 = v93;
      unint64_t v87 = v94;
      uint64_t v88 = sub_21936EF7C(v93, v94);
      unint64_t v89 = v67;
      *(void *)&long long v107 = v88;
      *((void *)&v107 + 1) = v67;
      uint64_t v68 = v62 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_noiseTransportCipher;
      swift_beginAccess();
      uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC270F0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 48))(v68, 1, v69) != 1)
      {
        sub_21935B908();
        uint64_t v70 = sub_2193E2540();
        unint64_t v72 = v71;
        swift_endAccess();
        sub_219348A70(v66, v87);
        sub_219348A70(v88, v89);
        sub_219348A70(v55, v54);
        v73 = *(char **)(v92 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_webSocket);
        if (v73)
        {
          unint64_t v89 = *(void *)&v73[OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_webSocketTask];
          *unint64_t v9 = v70;
          v9[1] = v72;
          uint64_t v74 = *MEMORY[0x263F07CB8];
          unint64_t v75 = v72;
          uint64_t v76 = v91;
          v77 = *(void (**)(void, void, void))(v91 + 104);
          uint64_t v86 = v70;
          v77(v9, v74, v90);
          *(void *)(swift_allocObject() + 16) = v73;
          v78 = v73;
          sub_21934CDF0(v70, v75);
          sub_2193E2B20();
          swift_release();
          (*(void (**)(uint64_t *, uint64_t))(v76 + 8))(v9, v90);
          objc_msgSend(*(id *)(v92 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_powerLogger), sel_logAuthenticationFinishedEventIfNeeded);
          sub_219348A70(v55, v54);

          uint64_t v79 = v86;
          unint64_t v80 = v75;
        }
        else
        {
          if (qword_26AC26F98 != -1) {
            swift_once();
          }
          uint64_t v81 = sub_2193E24F0();
          __swift_project_value_buffer(v81, (uint64_t)qword_26AC29118);
          v82 = sub_2193E24D0();
          os_log_type_t v83 = sub_2193E2AE0();
          if (os_log_type_enabled(v82, v83))
          {
            v84 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v84 = 0;
            _os_log_impl(&dword_219326000, v82, v83, "Could not send ctap response without a valid socket", v84, 2u);
            MEMORY[0x21D48A390](v84, -1, -1);
          }

          sub_219358E88(0);
          sub_219348A70(v55, v54);
          uint64_t v79 = v70;
          unint64_t v80 = v72;
        }
        sub_219348A70(v79, v80);
LABEL_44:
        swift_unknownObjectRelease();
        return;
      }
      goto LABEL_46;
    }
    uint64_t v11 = (void *)v10;
    sub_219360140(v3 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_currentCTAPCommand, (uint64_t)v123, &qword_267C18D10);
    sub_219360140((uint64_t)v123, (uint64_t)v124, &qword_267C18D10);
    if (sub_21935BE64((uint64_t)v124) != 1)
    {
      sub_21935BE78((uint64_t)v124, (uint64_t)v121);
      int v12 = sub_21935BED4((uint64_t)v121);
      uint64_t v13 = nullsub_1(v121);
      if (v12 == 1)
      {
        uint64_t v14 = *(void *)(v13 + 32);
        if (v14 && *(void *)(v14 + 16)) {
          LOBYTE(v12) = 2;
        }
        uint64_t v91 = v7;
        uint64_t v92 = v3;
        int v15 = *(unsigned __int8 *)(v3
                                 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_usedMagicCredentialID);
        uint64_t v90 = v6;
        if (v15 == 1)
        {
          uint64_t v16 = self;
          swift_unknownObjectRetain_n();
          sub_21935C580((uint64_t)v123, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21935BEDC);
          id v17 = objc_msgSend(v16, sel_magicCredentialID);
          uint64_t v18 = sub_2193E2130();
          unint64_t v20 = v19;
        }
        else
        {
          swift_unknownObjectRetain_n();
          sub_21935C580((uint64_t)v123, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21935BEDC);
          uint64_t v18 = 0;
          unint64_t v20 = 0xF000000000000000;
        }
        swift_unknownObjectRetain();
        sub_2193A9920(v11, v12, v18, v20, (uint64_t)&v107);
        v105[12] = v118;
        v105[13] = v119;
        char v106 = v120;
        v105[8] = v114[1];
        v105[9] = v115;
        v105[10] = v116;
        v105[11] = v117;
        v105[4] = v111;
        v105[5] = v112;
        v105[6] = v113;
        v105[7] = v114[0];
        v105[0] = v107;
        v105[1] = v108;
        v105[2] = v109;
        v105[3] = v110;
        sub_21935C178((uint64_t)&v107);
        uint64_t v56 = sub_2193AC820();
        unint64_t v58 = v57;
        uint64_t v59 = sub_21935B74C((uint64_t)&unk_26CAB4228);
        unint64_t v61 = v60;
        uint64_t v93 = v59;
        unint64_t v94 = v60;
        sub_21934CDF0(v59, v60);
        sub_21934CDF0(v56, v58);
        sub_21935AB18(v56, v58);
        sub_219348A70(v56, v58);
        sub_219348A70(v59, v61);
        sub_219348A70(v56, v58);
        swift_unknownObjectRelease();
        sub_21935C37C((uint64_t)&v107);
        sub_21935C580((uint64_t)v123, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21935C604);
        v103[4] = v117;
        v103[5] = v118;
        v103[6] = v119;
        v103[0] = v114[0];
        v103[1] = v114[1];
        v103[2] = v115;
        v103[3] = v116;
        long long v99 = v110;
        long long v100 = v111;
        long long v101 = v112;
        long long v102 = v113;
        long long v96 = v107;
        long long v97 = v108;
        uint64_t v55 = v93;
        unint64_t v54 = v94;
        LOBYTE(v93) = 0;
        unint64_t v94 = v55;
        unint64_t v95 = v54;
        char v104 = v120;
        long long v98 = v109;
        sub_21934CDF0(v55, v54);
        sub_21935C930((uint64_t)&v93);
        goto LABEL_35;
      }
    }
    uint64_t v32 = qword_26AC26F98;
    swift_unknownObjectRetain_n();
    if (v32 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_2193E24F0();
    __swift_project_value_buffer(v33, (uint64_t)qword_26AC29118);
    unint64_t v34 = sub_2193E24D0();
    os_log_type_t v35 = sub_2193E2AE0();
    if (os_log_type_enabled(v34, v35))
    {
      unint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v36 = 0;
      _os_log_impl(&dword_219326000, v34, v35, "Received getAssertion response to non-getAssertion command", v36, 2u);
      MEMORY[0x21D48A390](v36, -1, -1);
    }

    sub_219358E88(0);
    swift_unknownObjectRelease_n();
  }
  else
  {
    if (qword_26AC26F98 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_2193E24F0();
    __swift_project_value_buffer(v21, (uint64_t)qword_26AC29118);
    id v22 = a2;
    id v23 = a2;
    id v24 = sub_2193E24D0();
    os_log_type_t v25 = sub_2193E2AE0();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v93 = v27;
      *(_DWORD *)uint64_t v26 = 136315138;
      if (a2)
      {
        swift_getErrorValue();
        id v28 = a2;
        uint64_t v29 = sub_2193E31B0();
        unint64_t v31 = v30;
      }
      else
      {
        unint64_t v31 = 0xE500000000000000;
        uint64_t v29 = 0x3E6C696E3CLL;
      }
      *(void *)&long long v107 = sub_21934C764(v29, v31, &v93);
      sub_2193E2C00();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_219326000, v24, v25, "Transaction failed: %s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D48A390](v27, -1, -1);
      MEMORY[0x21D48A390](v26, -1, -1);
    }
    else
    {
    }
    sub_219358E88(7);
  }
}

unint64_t sub_21935406C(char a1)
{
  unint64_t result = 1701602409;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_219354114(unsigned __int8 *a1, char *a2)
{
  return sub_219361594(*a1, *a2);
}

uint64_t sub_219354120()
{
  return sub_219351F30();
}

uint64_t sub_219354128()
{
  return sub_219361A2C();
}

uint64_t sub_219354130()
{
  return sub_219352160();
}

uint64_t sub_219354138@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21935D06C();
  *a1 = result;
  return result;
}

unint64_t sub_219354168@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_21935406C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_219354194()
{
  qword_267C29550 = (uint64_t)&unk_26CAB4338;
}

void sub_2193541A8()
{
  qword_267C29558 = (uint64_t)&unk_26CAB4360;
}

void sub_2193541BC(uint64_t a1, void *a2)
{
  unint64_t v57 = a2;
  uint64_t v59 = a1;
  uint64_t v65 = sub_2193E1FF0();
  uint64_t v60 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  unint64_t v4 = (char *)v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)&v2[OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_advertisement];
  uint64_t v6 = type metadata accessor for ASCABLEAdvertisement();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  uint64_t v55 = v5;
  v7(v5, 1, 1, v6);
  uint64_t v54 = OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_webSocket;
  *(void *)&v2[OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_webSocket] = 0;
  sub_2193E2840();
  sub_2193E2840();
  uint64_t v8 = sub_2193607AC(0, &qword_267C18EB8);
  uint64_t v56 = v2;
  unint64_t v9 = v2;
  v49[1] = v8;
  uint64_t v10 = (void *)sub_2193E2B10();
  id v11 = objc_allocWithZone(MEMORY[0x263F280F0]);
  int v12 = (void *)sub_2193E2830();
  swift_bridgeObjectRelease();
  uint64_t v13 = (void *)sub_2193E2830();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v11, sel_initWithEnvironmentName_namedDelegatePort_queue_, v12, v13, v10);

  if (!v14)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    return;
  }
  uint64_t v51 = OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_apsConnection;
  *(void *)&v9[OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_apsConnection] = v14;
  int v15 = (uint64_t *)&v9[OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_completionHandler];
  uint64_t *v15 = 0;
  v15[1] = 0;
  unint64_t v52 = v15;
  uint64_t v16 = OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_powerLogger;
  id v17 = objc_msgSend(objc_allocWithZone((Class)_ASCABLEPowerLogger), sel_init);
  uint64_t v53 = v16;
  *(void *)&v9[v16] = v17;
  uint64_t v18 = (uint64_t)&v9[OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_currentCTAPCommand];
  sub_2193607E8((uint64_t)v63);
  uint64_t v50 = v18;
  sub_219360140((uint64_t)v63, v18, &qword_267C18D10);
  uint64_t v19 = OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_networkPathMonitor;
  sub_2193E25F0();
  swift_allocObject();
  uint64_t v20 = sub_2193E25E0();
  v49[2] = v19;
  *(void *)&v9[v19] = v20;
  v9[OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_usedMagicCredentialID] = 0;
  v9[OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_currentState] = 0;
  uint64_t v21 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v4, v59, v65);
  id v22 = v58;
  sub_219373288((uint64_t)v4, (uint64_t)v64);
  if (!v22)
  {
    uint64_t v34 = sub_21936EBEC(v64[2], v64[3], v64[0], v64[1]);
    uint64_t v35 = v21;
    sub_219360818(v64);
    *(void *)&v9[OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_cryptographyManager] = v34;
    unint64_t v36 = v57;
    *(void *)&v9[OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_bluetoothAdvertiser] = v57;
    id v37 = objc_allocWithZone((Class)type metadata accessor for ASCABLEAuthenticator.APSWrapper());
    id v38 = v36;
    id v39 = objc_msgSend(v37, sel_init);
    *(void *)&v9[OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_apsWrapper] = v39;

    uint64_t v40 = (objc_class *)type metadata accessor for ASCABLEAuthenticator();
    v61.receiver = v9;
    v61.super_class = v40;
    unint64_t v41 = (char *)objc_msgSendSuper2(&v61, sel_init);
    uint64_t v42 = *(void *)&v41[OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_apsWrapper];
    if (v42)
    {
      int v43 = v41;
      swift_unknownObjectWeakAssign();
      uint64_t v44 = *(void **)&v43[OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_apsConnection];
      uint64_t v45 = v43;
      objc_msgSend(v44, sel_setDelegate_, v42);
      id v46 = v44;
      uint64_t v47 = (void *)sub_2193E2A00();
      objc_msgSend(v46, sel__setEnabledTopics_, v47);

      uint64_t v48 = (void *)sub_2193E2B10();
      sub_2193E25D0();

      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v35, v65);
      return;
    }
    goto LABEL_13;
  }
  if (qword_26AC26F98 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_2193E24F0();
  __swift_project_value_buffer(v23, (uint64_t)qword_26AC29118);
  id v24 = v22;
  os_log_type_t v25 = sub_2193E24D0();
  os_log_type_t v26 = sub_2193E2AE0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    unint64_t v58 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 138412290;
    uint64_t v28 = sub_2193E1F60();
    v62[0] = v28;
    uint64_t v21 = v59;
    sub_2193E2C00();
    uint64_t v29 = v58;
    *unint64_t v58 = v28;

    _os_log_impl(&dword_219326000, v25, v26, "Could not decode caBLE url: %@", v27, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27170);
    swift_arrayDestroy();
    MEMORY[0x21D48A390](v29, -1, -1);
    MEMORY[0x21D48A390](v27, -1, -1);
  }
  else
  {
  }
  uint64_t v30 = v65;
  uint64_t v31 = v60;
  uint64_t v32 = v57;

  sub_21935CBFC();
  swift_allocError();
  *uint64_t v33 = 2;
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v21, v30);
  sub_219360620(v55, (uint64_t *)&unk_26AC27230);

  sub_219360334(*v52);
  sub_219360140(v50, (uint64_t)v62, &qword_267C18D10);
  sub_21935C580((uint64_t)v62, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21935C604);

  swift_release();
  type metadata accessor for ASCABLEAuthenticator();
  swift_deallocPartialClassInstance();
}

void sub_2193548B8(char a1)
{
  if (qword_26AC26F98 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_2193E24F0();
  __swift_project_value_buffer(v3, (uint64_t)qword_26AC29118);
  id v17 = v1;
  unint64_t v4 = sub_2193E24D0();
  os_log_type_t v5 = sub_2193E2AC0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = 1701602409;
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v18 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    unint64_t v9 = 0xE400000000000000;
    uint64_t v10 = v8;
    uint64_t v11 = 1701602409;
    switch(a1)
    {
      case 1:
        uint64_t v11 = 0xD000000000000010;
        int v12 = "allocatingServer";
        goto LABEL_11;
      case 2:
        uint64_t v13 = "listeningForRelayPush";
        goto LABEL_13;
      case 3:
        uint64_t v11 = 0xD00000000000001ALL;
        int v12 = "performingInitialHandshake";
LABEL_11:
        unint64_t v9 = (unint64_t)(v12 - 32) | 0x8000000000000000;
        break;
      case 4:
        uint64_t v13 = "connectionEstablished";
LABEL_13:
        unint64_t v9 = (unint64_t)(v13 - 32) | 0x8000000000000000;
        uint64_t v11 = 0xD000000000000015;
        break;
      default:
        break;
    }
    sub_21934C764(v11, v9, &v18);
    sub_2193E2C00();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    unint64_t v14 = 0xE400000000000000;
    switch(v17[OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_currentState])
    {
      case 1:
        uint64_t v6 = 0xD000000000000010;
        int v15 = "allocatingServer";
        goto LABEL_18;
      case 2:
        uint64_t v16 = "listeningForRelayPush";
        goto LABEL_20;
      case 3:
        uint64_t v6 = 0xD00000000000001ALL;
        int v15 = "performingInitialHandshake";
LABEL_18:
        unint64_t v14 = (unint64_t)(v15 - 32) | 0x8000000000000000;
        break;
      case 4:
        uint64_t v16 = "connectionEstablished";
LABEL_20:
        unint64_t v14 = (unint64_t)(v16 - 32) | 0x8000000000000000;
        uint64_t v6 = 0xD000000000000015;
        break;
      default:
        break;
    }
    sub_21934C764(v6, v14, &v18);
    sub_2193E2C00();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_219326000, v4, v5, "Changing caBLE authenticator state from %s to %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x21D48A390](v10, -1, -1);
    MEMORY[0x21D48A390](v7, -1, -1);
  }
  else
  {
  }
}

void sub_219354BF4(char a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E90);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v75 = (uint64_t)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for CableRequest.AllocationRequest(0);
  MEMORY[0x270FA5388](v73);
  uint64_t v74 = (uint64_t)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2193E26A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CableRequest(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  int v15 = (char *)&v71 - v14;
  char v16 = *(unsigned char *)(v1 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_currentState);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_currentState) = 1;
  sub_2193548B8(v16);
  uint64_t v76 = v1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, *(void *)(v1 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_cryptographyManager)+ OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_tunnelID, v6);
  sub_2193E2670();
  uint64_t v17 = aBlock;
  unint64_t v18 = v78;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v19 = (uint64_t)v15;
  sub_2193D5CAC(v17, v18, a1, (uint64_t)v15);
  sub_219348A70(v17, v18);
  sub_2193605D8(&qword_267C18E98, (void (*)(uint64_t))type metadata accessor for CableRequest);
  uint64_t v29 = sub_2193E23F0();
  unint64_t v31 = v30;
  unint64_t v72 = v13;
  id v32 = objc_allocWithZone(MEMORY[0x263F3BB48]);
  uint64_t v33 = (void *)sub_2193E2830();
  uint64_t v34 = (void *)sub_2193E2110();
  sub_219348A70(v29, v31);
  id v35 = objc_msgSend(v32, sel_initWithPushTopic_protoData_, v33, v34);

  if (v35)
  {
    id v36 = objc_msgSend(self, sel_sharedInstance);
    if (v36)
    {
      id v37 = v36;
      uint64_t v38 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v81 = sub_21936056C;
      uint64_t v82 = v38;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v78 = 1107296256;
      uint64_t v79 = sub_219355818;
      unint64_t v80 = &block_descriptor_82;
      id v39 = _Block_copy(&aBlock);
      id v40 = v35;
      swift_release();
      objc_msgSend(v40, sel_setCompletionBlock_, v39);
      _Block_release(v39);

      if (qword_26AC26F98 != -1) {
        swift_once();
      }
      uint64_t v41 = sub_2193E24F0();
      __swift_project_value_buffer(v41, (uint64_t)qword_26AC29118);
      uint64_t v42 = (uint64_t)v72;
      sub_2193606E4(v19, (uint64_t)v72, type metadata accessor for CableRequest);
      int v43 = sub_2193E24D0();
      os_log_type_t v44 = sub_2193E2B00();
      if (!os_log_type_enabled(v43, v44))
      {
        sub_21936074C(v42, type metadata accessor for CableRequest);

LABEL_37:
        objc_msgSend(v37, sel_sendMessage_, v40, v71);

        sub_21936074C(v19, type metadata accessor for CableRequest);
        return;
      }
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      uint64_t aBlock = v76;
      *(_DWORD *)uint64_t v45 = 136315138;
      uint64_t v46 = v42;
      uint64_t v47 = v75;
      sub_219360574(v46, v75, &qword_267C18E90);
      uint64_t v48 = type metadata accessor for CableRequest.OneOf_Request(0);
      int v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v47, 1, v48);
      uint64_t v71 = v19;
      if (v49 == 1)
      {
        sub_219360620(v47, &qword_267C18E90);
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          uint64_t v61 = v74;
          sub_21936067C(v47, v74, type metadata accessor for CableRequest.AllocationRequest);
          uint64_t v62 = v73;
          goto LABEL_30;
        }
        sub_21936074C(v47, type metadata accessor for CableRequest.OneOf_Request);
      }
      uint64_t v61 = v74;
      sub_2193E22F0();
      uint64_t v62 = v73;
      *(_OWORD *)(v61 + *(int *)(v73 + 20)) = xmmword_2193E7220;
      *(unsigned char *)(v61 + *(int *)(v62 + 24)) = 2;
LABEL_30:
      uint64_t v63 = (uint64_t *)(v61 + *(int *)(v62 + 20));
      unint64_t v64 = v63[1];
      if (v64 >> 60 == 15) {
        uint64_t v65 = 0;
      }
      else {
        uint64_t v65 = *v63;
      }
      if (v64 >> 60 == 15) {
        unint64_t v66 = 0xC000000000000000;
      }
      else {
        unint64_t v66 = v63[1];
      }
      sub_21934CE48(*v63, v64);
      sub_21936074C(v61, type metadata accessor for CableRequest.AllocationRequest);
      uint64_t v67 = sub_2193E2050();
      unint64_t v69 = v68;
      sub_219348A70(v65, v66);
      uint64_t v83 = sub_21934C764(v67, v69, &aBlock);
      sub_2193E2C00();
      swift_bridgeObjectRelease();
      sub_21936074C((uint64_t)v72, type metadata accessor for CableRequest);
      _os_log_impl(&dword_219326000, v43, v44, "Requesting server allocation with tunnelID \"%s\"", v45, 0xCu);
      uint64_t v70 = v76;
      swift_arrayDestroy();
      MEMORY[0x21D48A390](v70, -1, -1);
      MEMORY[0x21D48A390](v45, -1, -1);

      uint64_t v19 = v71;
      goto LABEL_37;
    }
    if (qword_26AC26F98 != -1) {
      swift_once();
    }
    uint64_t v56 = sub_2193E24F0();
    __swift_project_value_buffer(v56, (uint64_t)qword_26AC29118);
    unint64_t v57 = sub_2193E24D0();
    os_log_type_t v58 = sub_2193E2AE0();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v59 = 0;
      _os_log_impl(&dword_219326000, v57, v58, "Could not retrieve shared FTMessageDelivery_APS", v59, 2u);
      MEMORY[0x21D48A390](v59, -1, -1);
    }

    sub_21935CBFC();
    uint64_t v54 = (void *)swift_allocError();
    *uint64_t v60 = 1;
    swift_willThrow();
  }
  else
  {
    if (qword_26AC26F98 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_2193E24F0();
    __swift_project_value_buffer(v50, (uint64_t)qword_26AC29118);
    uint64_t v51 = sub_2193E24D0();
    os_log_type_t v52 = sub_2193E2AE0();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v53 = 0;
      _os_log_impl(&dword_219326000, v51, v52, "Could not encode protobuf message", v53, 2u);
      MEMORY[0x21D48A390](v53, -1, -1);
    }

    sub_21935CBFC();
    uint64_t v54 = (void *)swift_allocError();
    *uint64_t v55 = 1;
    swift_willThrow();
  }
  sub_21936074C((uint64_t)v15, type metadata accessor for CableRequest);
  if (qword_26AC26F98 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_2193E24F0();
  __swift_project_value_buffer(v20, (uint64_t)qword_26AC29118);
  id v21 = v54;
  id v22 = v54;
  uint64_t v23 = sub_2193E24D0();
  os_log_type_t v24 = sub_2193E2AE0();
  if (os_log_type_enabled(v23, v24))
  {
    os_log_type_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t aBlock = v26;
    *(_DWORD *)os_log_type_t v25 = 136315138;
    swift_getErrorValue();
    uint64_t v27 = sub_2193E31B0();
    uint64_t v83 = sub_21934C764(v27, v28, &aBlock);
    sub_2193E2C00();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_219326000, v23, v24, "Could not encode allocation request: %s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D48A390](v26, -1, -1);
    MEMORY[0x21D48A390](v25, -1, -1);
  }
  else
  {
  }
  sub_219358E88(3);
}

void sub_2193556F0(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = a5 + 16;
  swift_beginAccess();
  uint64_t v9 = MEMORY[0x21D48A480](v8);
  if (v9)
  {
    uint64_t v10 = v9;
    sub_21935DB24(a1, a2, a3);
  }
  else
  {
    if (qword_26AC26F98 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_2193E24F0();
    __swift_project_value_buffer(v11, (uint64_t)qword_26AC29118);
    uint64_t v10 = sub_2193E24D0();
    os_log_type_t v12 = sub_2193E2B00();
    if (os_log_type_enabled(v10, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_219326000, v10, v12, "caBLE authenticator was deinitialized while waiting for allocate server response", v13, 2u);
      MEMORY[0x21D48A390](v13, -1, -1);
    }
  }
}

uint64_t sub_219355818(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void (**)(void *, void *, uint64_t, uint64_t))(a1 + 32);
  if (a5) {
    uint64_t v9 = sub_2193E27A0();
  }
  else {
    uint64_t v9 = 0;
  }
  swift_retain();
  id v10 = a2;
  id v11 = a3;
  v8(a2, a3, a4, v9);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2193558E4(uint64_t a1, unint64_t a2, unsigned __int16 a3)
{
  uint64_t v4 = v3;
  uint64_t v51 = a1;
  unint64_t v52 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27230);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v48 = (uint64_t)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v46 - v9;
  uint64_t v11 = type metadata accessor for ASCABLEAdvertisement();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v49 = (uint64_t)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_2193E26C0();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v50 = sub_2193E26A0();
  uint64_t v15 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC26F98 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_2193E24F0();
  __swift_project_value_buffer(v18, (uint64_t)qword_26AC29118);
  uint64_t v19 = sub_2193E24D0();
  os_log_type_t v20 = sub_2193E2AC0();
  if (os_log_type_enabled(v19, v20))
  {
    id v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v47 = v10;
    unsigned __int16 v22 = a3;
    uint64_t v23 = v12;
    uint64_t v24 = v11;
    os_log_type_t v25 = v4;
    uint64_t v26 = v21;
    *(_WORD *)id v21 = 0;
    _os_log_impl(&dword_219326000, v19, v20, "Starting Bluetooth advertisement", v21, 2u);
    uint64_t v27 = v26;
    uint64_t v4 = v25;
    uint64_t v11 = v24;
    uint64_t v12 = v23;
    a3 = v22;
    id v10 = v47;
    MEMORY[0x21D48A390](v27, -1, -1);
  }

  sub_2193E26B0();
  sub_2193E2690();
  sub_2193E2670();
  uint64_t v29 = aBlock;
  unint64_t v28 = v54;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v50);
  sub_21934CDF0(v29, v28);
  uint64_t v31 = v51;
  unint64_t v30 = v52;
  sub_21934CDF0(v51, v52);
  sub_219350D64(0, v29, v28, v31, v30, a3, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_219360620((uint64_t)v10, (uint64_t *)&unk_26AC27230);
    sub_219358E88(3);
    return sub_219348A70(v29, v28);
  }
  else
  {
    uint64_t v33 = (uint64_t)v10;
    uint64_t v34 = v49;
    sub_21936067C(v33, v49, (uint64_t (*)(void))type metadata accessor for ASCABLEAdvertisement);
    uint64_t v35 = v48;
    sub_2193606E4(v34, v48, (uint64_t (*)(void))type metadata accessor for ASCABLEAdvertisement);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v35, 0, 1, v11);
    uint64_t v36 = (uint64_t)&v4[OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_advertisement];
    swift_beginAccess();
    sub_219360344(v35, v36);
    swift_endAccess();
    uint64_t v37 = sub_21936B87C(v34);
    if (v38 >> 60 == 15)
    {
      sub_219358E88(3);
    }
    else
    {
      uint64_t v39 = v37;
      unint64_t v40 = v38;
      uint64_t v41 = *(void **)&v4[OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_bluetoothAdvertiser];
      uint64_t v42 = (void *)sub_2193E2110();
      objc_msgSend(v41, sel_setFidoPayloadData_, v42);

      uint64_t v43 = swift_allocObject();
      *(void *)(v43 + 16) = v4;
      unint64_t v57 = sub_2193603AC;
      uint64_t v58 = v43;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v54 = 1107296256;
      uint64_t v55 = sub_2193B6EF0;
      uint64_t v56 = &block_descriptor;
      os_log_type_t v44 = _Block_copy(&aBlock);
      uint64_t v45 = v4;
      swift_release();
      objc_msgSend(v41, sel_activateWithCompletion_, v44);
      sub_21934CEB0(v39, v40);
      _Block_release(v44);
    }
    sub_219348A70(v29, v28);
    return sub_21936074C(v34, (uint64_t (*)(void))type metadata accessor for ASCABLEAdvertisement);
  }
}

void sub_219355E84(void *a1)
{
  if (a1)
  {
    if (qword_26AC26F98 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_2193E24F0();
    __swift_project_value_buffer(v2, (uint64_t)qword_26AC29118);
    id v3 = a1;
    uint64_t v4 = sub_2193E24D0();
    os_log_type_t v5 = sub_2193E2AE0();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 138412290;
      uint64_t v12 = sub_2193E1F60();
      sub_2193E2C00();
      void *v7 = v12;

      _os_log_impl(&dword_219326000, v4, v5, "Could not begin advertising: %@", v6, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27170);
      swift_arrayDestroy();
      MEMORY[0x21D48A390](v7, -1, -1);
      MEMORY[0x21D48A390](v6, -1, -1);
    }
    else
    {
    }
    sub_219358E88(5);
  }
  else
  {
    if (qword_26AC26F98 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_2193E24F0();
    __swift_project_value_buffer(v8, (uint64_t)qword_26AC29118);
    oslog = sub_2193E24D0();
    os_log_type_t v9 = sub_2193E2AC0();
    if (os_log_type_enabled(oslog, v9))
    {
      id v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v10 = 0;
      _os_log_impl(&dword_219326000, oslog, v9, "Started advertising", v10, 2u);
      MEMORY[0x21D48A390](v10, -1, -1);
    }
  }
}

void sub_219356108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, char *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v75 = a8;
  uint64_t v74 = a7;
  uint64_t v81 = a5;
  uint64_t v82 = a6;
  uint64_t v77 = a1;
  uint64_t v78 = a2;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27160);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2193E1FF0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v73 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v76 = (char *)&v71 - v18;
  MEMORY[0x270FA5388](v17);
  os_log_type_t v20 = (char *)&v71 - v19;
  uint64_t v21 = sub_2193E1DC0();
  uint64_t v79 = *(void *)(v21 - 8);
  uint64_t v80 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2193E1DB0();
  sub_2193E1DA0();
  swift_bridgeObjectRetain();
  MEMORY[0x21D4883C0](a9, a10);
  *(void *)&v85[0] = 0;
  *((void *)&v85[0] + 1) = 0xE000000000000000;
  sub_2193E2D90();
  swift_bridgeObjectRelease();
  *(void *)&v85[0] = 0xD000000000000016;
  *((void *)&v85[0] + 1) = 0x80000002193F0B50;
  sub_2193E2920();
  sub_2193E2920();
  sub_2193E2920();
  sub_2193E1D90();
  uint64_t v82 = v23;
  sub_2193E1D70();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_219360620((uint64_t)v12, &qword_26AC27160);
    if (qword_26AC26F98 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_2193E24F0();
    __swift_project_value_buffer(v24, (uint64_t)qword_26AC29118);
    os_log_type_t v25 = sub_2193E24D0();
    os_log_type_t v26 = sub_2193E2AE0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl(&dword_219326000, v25, v26, "Could not determine relay URL", v27, 2u);
      MEMORY[0x21D48A390](v27, -1, -1);
    }

    sub_219358E88(4);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v82, v80);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v20, v12, v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E68);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2193E7190;
    strcpy((char *)(inited + 32), "Authorization");
    *(_WORD *)(inited + 46) = -4864;
    strcpy((char *)v85, "AccessToken ");
    BYTE13(v85[0]) = 0;
    HIWORD(v85[0]) = -5120;
    sub_2193E2920();
    uint64_t v29 = *((void *)&v85[0] + 1);
    *(void *)(inited + 48) = *(void *)&v85[0];
    *(void *)(inited + 56) = v29;
    unint64_t v30 = sub_219391490(inited);
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    uint64_t v32 = (uint64_t)v76;
    uint64_t v81 = v20;
    v31(v76, v20, v13);
    uint64_t v33 = self;
    swift_bridgeObjectRetain();
    id v34 = objc_msgSend(v33, sel_ephemeralSessionConfiguration);
    id v35 = objc_msgSend(self, sel_sessionWithConfiguration_, v34);

    uint64_t v36 = (objc_class *)type metadata accessor for ASWebSocket();
    memset(v85, 0, sizeof(v85));
    uint64_t v86 = 0;
    id v37 = objc_allocWithZone(v36);
    uint64_t v38 = v78;
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_2193BAB44(v32, (uint64_t)&unk_26CAB4480, v30, v35, v77, v38, (uint64_t)v85);

    uint64_t v40 = OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_webSocket;
    uint64_t v41 = v83;
    uint64_t v42 = *(void **)(v83 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_webSocket);
    *(void *)(v83 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_webSocket) = v39;

    uint64_t v43 = *(void *)(v41 + v40);
    if (v43)
    {
      uint64_t v44 = v14;
      *(void *)(v43 + OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_delegate + 8) = &off_26CAB52D0;
      swift_unknownObjectWeakAssign();
      uint64_t v45 = v73;
      if (qword_26AC26F98 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_2193E24F0();
      __swift_project_value_buffer(v46, (uint64_t)qword_26AC29118);
      v31(v45, v81, v13);
      swift_bridgeObjectRetain();
      uint64_t v47 = v13;
      uint64_t v48 = sub_2193E24D0();
      os_log_type_t v49 = sub_2193E2B00();
      int v50 = v49;
      BOOL v51 = os_log_type_enabled(v48, v49);
      uint64_t v72 = v47;
      if (v51)
      {
        unint64_t v52 = v45;
        uint64_t v53 = swift_slowAlloc();
        uint64_t v78 = swift_slowAlloc();
        *(void *)&v85[0] = v78;
        *(_DWORD *)uint64_t v53 = 136315394;
        sub_2193605D8(&qword_267C18E70, MEMORY[0x263F06EA8]);
        LODWORD(v77) = v50;
        uint64_t v54 = sub_2193E3100();
        uint64_t v84 = sub_21934C764(v54, v55, (uint64_t *)v85);
        sub_2193E2C00();
        swift_bridgeObjectRelease();
        uint64_t v56 = v52;
        unint64_t v57 = *(void (**)(char *, uint64_t))(v44 + 8);
        v57(v56, v47);
        *(_WORD *)(v53 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v58 = sub_2193E27B0();
        unint64_t v60 = v59;
        swift_bridgeObjectRelease();
        uint64_t v61 = v58;
        uint64_t v41 = v83;
        uint64_t v84 = sub_21934C764(v61, v60, (uint64_t *)v85);
        sub_2193E2C00();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_219326000, v48, (os_log_type_t)v77, "Connecting to relay at %s, headers: %s", (uint8_t *)v53, 0x16u);
        uint64_t v62 = v78;
        swift_arrayDestroy();
        MEMORY[0x21D48A390](v62, -1, -1);
        MEMORY[0x21D48A390](v53, -1, -1);
      }
      else
      {
        unint64_t v57 = *(void (**)(char *, uint64_t))(v14 + 8);
        v57(v45, v47);

        swift_bridgeObjectRelease_n();
      }
      uint64_t v63 = *(char **)(v41 + v40);
      unint64_t v64 = v81;
      if (v63)
      {
        uint64_t v65 = swift_allocObject();
        swift_unknownObjectWeakInit();
        unint64_t v66 = *(void **)&v63[OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_webSocketTask];
        uint64_t v67 = v63;
        swift_retain();
        objc_msgSend(v66, sel_resume);
        unint64_t v68 = (uint64_t (*)(uint64_t, uint64_t))swift_allocObject();
        *((void *)v68 + 2) = v67;
        *((void *)v68 + 3) = sub_2193602D8;
        *((void *)v68 + 4) = v65;
        unint64_t v69 = (uint64_t (**)(uint64_t, uint64_t))&v67[OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_connectionCompletionHandler];
        uint64_t v70 = *(void *)&v67[OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_connectionCompletionHandler];
        *unint64_t v69 = sub_219360328;
        v69[1] = v68;
        sub_219360334(v70);
        v57(v64, v72);
        (*(void (**)(char *, uint64_t))(v79 + 8))(v82, v80);
        swift_release();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_219356A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a3 + 16;
  if (qword_26AC26F98 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_2193E24F0();
  __swift_project_value_buffer(v6, (uint64_t)qword_26AC29118);
  uint64_t v7 = sub_2193E24D0();
  os_log_type_t v8 = sub_2193E2AC0();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v9 = 0;
    _os_log_impl(&dword_219326000, v7, v8, "Authenticator opened socket connection.", v9, 2u);
    MEMORY[0x21D48A390](v9, -1, -1);
  }

  swift_beginAccess();
  uint64_t v10 = MEMORY[0x21D48A480](v5);
  if (v10)
  {
    uint64_t v11 = v10;
    if (a2 && (a1 == 0x6261632E6F646966 && a2 == 0xEA0000000000656CLL || (sub_2193E3140() & 1) != 0))
    {
      char v12 = *((unsigned char *)&v11->isa + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_currentState);
      *((unsigned char *)&v11->isa + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_currentState) = 3;
      sub_2193548B8(v12);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      uint64_t v15 = sub_2193E24D0();
      os_log_type_t v16 = sub_2193E2AE0();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        uint64_t v18 = swift_slowAlloc();
        uint64_t v23 = v18;
        *(_DWORD *)uint64_t v17 = 136315138;
        if (a2)
        {
          swift_bridgeObjectRetain_n();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27168);
          if (swift_dynamicCast())
          {
            swift_getErrorValue();
            uint64_t v19 = sub_2193E31B0();
            unint64_t v21 = v20;

            swift_bridgeObjectRelease();
          }
          else
          {
            sub_2193E2E60();
            swift_bridgeObjectRelease();
            uint64_t v19 = 0;
            unint64_t v21 = 0xE000000000000000;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v21 = 0xE500000000000000;
          uint64_t v19 = 0x3E6C696E3CLL;
        }
        sub_21934C764(v19, v21, &v23);
        sub_2193E2C00();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_219326000, v15, v16, "Received socket connection with unexpected protocol: %s", v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x21D48A390](v18, -1, -1);
        MEMORY[0x21D48A390](v17, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_219358E88(4);
    }
  }
  else
  {
    uint64_t v11 = sub_2193E24D0();
    os_log_type_t v13 = sub_2193E2B00();
    if (os_log_type_enabled(v11, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_219326000, v11, v13, "Client was deinitialized while waiting for initial connection.", v14, 2u);
      MEMORY[0x21D48A390](v14, -1, -1);
    }
  }
}

void sub_219356E10(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v48 = a1;
  uint64_t v5 = sub_2193E2B30();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v46 = (uint64_t *)((char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27230);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ASCABLEAdvertisement();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC26F98 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_2193E24F0();
  uint64_t v49 = __swift_project_value_buffer(v15, (uint64_t)qword_26AC29118);
  os_log_type_t v16 = sub_2193E24D0();
  os_log_type_t v17 = sub_2193E2AC0();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v47 = v11;
    uint64_t v19 = a2;
    uint64_t v20 = v6;
    unint64_t v21 = v14;
    uint64_t v22 = v5;
    uint64_t v23 = v3;
    uint64_t v24 = v18;
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_219326000, v16, v17, "Received handshake", v18, 2u);
    os_log_type_t v25 = v24;
    uint64_t v3 = v23;
    uint64_t v5 = v22;
    uint64_t v14 = v21;
    uint64_t v6 = v20;
    a2 = v19;
    uint64_t v11 = v47;
    MEMORY[0x21D48A390](v25, -1, -1);
  }

  uint64_t v26 = v3 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_advertisement;
  swift_beginAccess();
  sub_219360574(v26, (uint64_t)v10, (uint64_t *)&unk_26AC27230);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_219360620((uint64_t)v10, (uint64_t *)&unk_26AC27230);
    uint64_t v27 = sub_2193E24D0();
    os_log_type_t v28 = sub_2193E2AE0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_219326000, v27, v28, "Tried to perform Noise handshake without an advertisement.", v29, 2u);
      MEMORY[0x21D48A390](v29, -1, -1);
    }

    sub_219358E88(0);
  }
  else
  {
    sub_21936067C((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ASCABLEAdvertisement);
    uint64_t v47 = v3;
    unint64_t v30 = (uint64_t *)&v14[*(int *)(v11 + 32)];
    uint64_t v31 = *v30;
    unint64_t v32 = v30[1];
    sub_21934CDF0(*v30, v32);
    uint64_t v33 = sub_21936BBDC(v31, v32);
    unint64_t v35 = v34;
    sub_219348A70(v31, v32);
    uint64_t v36 = sub_21936C5F0(v48, a2, v33, v35);
    unint64_t v48 = v35;
    uint64_t v37 = v36;
    unint64_t v39 = v38;
    uint64_t v40 = sub_2193E24D0();
    uint64_t v41 = sub_2193E2AC0();
    if (os_log_type_enabled(v40, (os_log_type_t)v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v42 = 0;
      _os_log_impl(&dword_219326000, v40, (os_log_type_t)v41, "Finishing handshake", v42, 2u);
      MEMORY[0x21D48A390](v42, -1, -1);
    }

    uint64_t v43 = *(void **)(v47 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_webSocket);
    if (v43)
    {
      uint64_t v44 = v46;
      *uint64_t v46 = v37;
      v44[1] = v39;
      (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v44, *MEMORY[0x263F07CB8], v5);
      *(void *)(swift_allocObject() + 16) = v43;
      id v45 = v43;
      sub_21934CDF0(v37, v39);
      sub_2193E2B20();
      swift_release();
      (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v44, v5);

      sub_2193574E0();
      sub_219348A70(v37, v39);
      sub_219348A70(v33, v48);
      sub_21936074C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ASCABLEAdvertisement);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_2193574E0()
{
  uint64_t v28 = sub_2193E2B30();
  uint64_t v1 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v3 = (void *)((char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_267C18988 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_267C29558;
  uint64_t v5 = qword_267C18978;
  swift_bridgeObjectRetain();
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_267C18CE0;
  unint64_t v6 = *(void *)algn_267C18CE8;
  sub_21934CDF0(qword_267C18CE0, *(unint64_t *)algn_267C18CE8);
  unint64_t v8 = sub_21939137C((uint64_t)&unk_26CAB4430);
  if (qword_267C18980 != -1) {
    swift_once();
  }
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_219357C10(v9);
  swift_bridgeObjectRelease();
  long long v29 = xmmword_2193E7220;
  unint64_t v30 = &unk_26CAB43F0;
  uint64_t v31 = v4;
  uint64_t v32 = v7;
  unint64_t v33 = v6;
  unint64_t v34 = v8;
  uint64_t v35 = 0;
  char v36 = 1;
  uint64_t v37 = 0;
  uint64_t v38 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21934CDF0(v7, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_21936D110(&v29);
  unint64_t v27 = v11;
  uint64_t v12 = *(void **)(v0 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_webSocket);
  if (v12)
  {
    char v13 = *(unsigned char *)(v0 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_currentState);
    *(unsigned char *)(v0 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_currentState) = 4;
    id v14 = v12;
    sub_2193548B8(v13);
    uint64_t v15 = v26;
    *uint64_t v3 = v26;
    v25[1] = v10;
    uint64_t v16 = v15;
    v25[2] = v8;
    unint64_t v18 = v27;
    uint64_t v17 = v28;
    v3[1] = v27;
    (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F07CB8], v17);
    *(void *)(swift_allocObject() + 16) = v14;
    id v19 = v14;
    sub_21934CDF0(v16, v18);
    sub_2193E2B20();
    swift_release();
    (*(void (**)(void *, uint64_t))(v1 + 8))(v3, v28);

    sub_219348A70(v16, v18);
    sub_21934CEB0(0, 0xF000000000000000);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_219348A70(v7, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_219348A70(v7, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_26AC26F98 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_2193E24F0();
    __swift_project_value_buffer(v20, (uint64_t)qword_26AC29118);
    unint64_t v21 = sub_2193E24D0();
    os_log_type_t v22 = sub_2193E2AE0();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_219326000, v21, v22, "Could not send postHandshake without a valid socket", v23, 2u);
      MEMORY[0x21D48A390](v23, -1, -1);
    }

    sub_219358E88(0);
    sub_219348A70(v26, v27);
    sub_21934CEB0(0, 0xF000000000000000);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_219348A70(v7, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_219348A70(v7, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_219357C10(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_21935A518(0, v2, 0);
    uint64_t result = v11;
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      int v5 = *v4++;
      unint64_t v6 = 0xE300000000000000;
      uint64_t v7 = 6452085;
      switch(v5)
      {
        case 1:
          uint64_t v7 = 6514286;
          break;
        case 2:
          uint64_t v7 = 6646882;
          break;
        case 3:
          unint64_t v6 = 0xE800000000000000;
          uint64_t v7 = 0x6C616E7265746E69;
          break;
        case 4:
          unint64_t v6 = 0xE600000000000000;
          uint64_t v7 = 0x646972627968;
          break;
        case 5:
          unint64_t v6 = 0xEA00000000006472;
          uint64_t v7 = 0x61632D7472616D73;
          break;
        default:
          break;
      }
      uint64_t v12 = result;
      unint64_t v9 = *(void *)(result + 16);
      unint64_t v8 = *(void *)(result + 24);
      if (v9 >= v8 >> 1)
      {
        sub_21935A518(v8 > 1, v9 + 1, 1);
        uint64_t result = v12;
      }
      *(void *)(result + 16) = v9 + 1;
      uint64_t v10 = result + 16 * v9;
      *(void *)(v10 + 32) = v7;
      *(void *)(v10 + 40) = v6;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_219357D78(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_21935A538(0, v2, 0);
    uint64_t result = v9;
    uint64_t v4 = (int *)(a1 + 48);
    do
    {
      int v6 = *v4;
      v4 += 6;
      int v5 = v6;
      uint64_t v10 = result;
      unint64_t v8 = *(void *)(result + 16);
      unint64_t v7 = *(void *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_21935A538(v7 > 1, v8 + 1, 1);
        uint64_t result = v10;
      }
      *(void *)(result + 16) = v8 + 1;
      *(_DWORD *)(result + 4 * v8 + 32) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_219357E38(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
    sub_2193E2E30();
    uint64_t v4 = (uint64_t *)(a1 + 64);
    do
    {
      uint64_t v6 = *(v4 - 2);
      unint64_t v8 = *(v4 - 1);
      uint64_t v7 = *v4;
      swift_bridgeObjectRetain();
      sub_21934CDF0(v6, v8);
      swift_bridgeObjectRetain();
      sub_21934CDF0(v6, v8);
      swift_bridgeObjectRetain();
      uint64_t v9 = (void *)sub_2193E2110();
      if (v7)
      {
        int v5 = (void *)sub_2193E2A00();
        swift_bridgeObjectRelease();
      }
      else
      {
        int v5 = 0;
      }
      objc_msgSend(objc_allocWithZone((Class)ASCPublicKeyCredentialDescriptor), sel_initWithCredentialID_transports_, v9, v5);
      sub_219348A70(v6, v8);
      swift_bridgeObjectRelease();

      sub_219348A70(v6, v8);
      swift_bridgeObjectRelease();
      sub_2193E2E10();
      sub_2193E2E40();
      sub_2193E2E50();
      sub_2193E2E20();
      v4 += 5;
      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

void sub_219357FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = sub_21936D360(a1, a2, 1);
  uint64_t v6 = v4;
  unint64_t v7 = v5;
  uint64_t v8 = (v5 >> 60) & 3;
  if (!v8)
  {
    sub_21934CDF0(v4, v5);
    sub_2193584CC(v6, v7);
    sub_219360284(v6, v7);
LABEL_10:
    sub_219360284(v6, v7);
    return;
  }
  if (v8 == 1)
  {
    if (qword_26AC26F98 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_2193E24F0();
    __swift_project_value_buffer(v9, (uint64_t)qword_26AC29118);
    uint64_t v10 = sub_2193E24D0();
    os_log_type_t v11 = sub_2193E2AE0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_219326000, v10, v11, "Unexpectedly received caBLE update message from client. Ignoring.", v12, 2u);
      MEMORY[0x21D48A390](v12, -1, -1);
    }

    goto LABEL_10;
  }
  if (qword_26AC26F98 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_2193E24F0();
  __swift_project_value_buffer(v13, (uint64_t)qword_26AC29118);
  id v14 = sub_2193E24D0();
  os_log_type_t v15 = sub_2193E2B00();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_219326000, v14, v15, "Received shutdown message from client", v16, 2u);
    MEMORY[0x21D48A390](v16, -1, -1);
  }

  uint64_t v17 = *(void **)(v3 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_webSocket);
  if (v17)
  {
    uint64_t v18 = qword_267C189A8;
    os_log_type_t v22 = v17;
    if (v18 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v13, (uint64_t)qword_267C29598);
    id v19 = sub_2193E24D0();
    os_log_type_t v20 = sub_2193E2B00();
    if (os_log_type_enabled(v19, v20))
    {
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v21 = 0;
      _os_log_impl(&dword_219326000, v19, v20, "Asked to close socket", v21, 2u);
      MEMORY[0x21D48A390](v21, -1, -1);
    }

    v22[OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_isConnected] = 0;
    objc_msgSend(*(id *)&v22[OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_webSocketTask], sel_cancelWithCloseCode_reason_, 1000, 0);
  }
}

void sub_2193584CC(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  sub_219389394(a1, a2, (uint64_t)v29);
  sub_21935BE78((uint64_t)v29, (uint64_t)v24);
  sub_21935BE78((uint64_t)v24, (uint64_t)v25);
  nullsub_1(v25);
  uint64_t v4 = v2 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_currentCTAPCommand;
  sub_219360140(v3 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_currentCTAPCommand, (uint64_t)v26, &qword_267C18D10);
  sub_219360140((uint64_t)v25, v4, &qword_267C18D10);
  sub_21935C580((uint64_t)v26, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21935C604);
  sub_219360140(v4, (uint64_t)v27, &qword_267C18D10);
  sub_219360140((uint64_t)v27, (uint64_t)v28, &qword_267C18D10);
  if (sub_21935BE64((uint64_t)v28) == 1)
  {
    __break(1u);
  }
  else
  {
    sub_21935BE78((uint64_t)v28, (uint64_t)v23);
    if (sub_21935BED4((uint64_t)v23) == 1)
    {
      unint64_t v5 = (_OWORD *)nullsub_1(v23);
      long long v6 = v5[7];
      v20[6] = v5[6];
      v20[7] = v6;
      v20[8] = v5[8];
      long long v7 = v5[3];
      v20[2] = v5[2];
      v20[3] = v7;
      long long v8 = v5[5];
      v20[4] = v5[4];
      v20[5] = v8;
      long long v9 = v5[1];
      v20[0] = *v5;
      v20[1] = v9;
      sub_219360140((uint64_t)v27, (uint64_t)v21, &qword_267C18D10);
      sub_2193601F8((uint64_t)v21);
      uint64_t v10 = (void *)sub_2193589A8((uint64_t *)v20);
      sub_21935C580((uint64_t)v27, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_21935C604);
    }
    else
    {
      uint64_t v11 = nullsub_1(v23);
      v21[10] = *(_OWORD *)(v11 + 160);
      v21[11] = *(_OWORD *)(v11 + 176);
      v21[12] = *(_OWORD *)(v11 + 192);
      uint64_t v22 = *(void *)(v11 + 208);
      v21[6] = *(_OWORD *)(v11 + 96);
      v21[7] = *(_OWORD *)(v11 + 112);
      v21[8] = *(_OWORD *)(v11 + 128);
      v21[9] = *(_OWORD *)(v11 + 144);
      v21[2] = *(_OWORD *)(v11 + 32);
      v21[3] = *(_OWORD *)(v11 + 48);
      v21[4] = *(_OWORD *)(v11 + 64);
      v21[5] = *(_OWORD *)(v11 + 80);
      v21[0] = *(_OWORD *)v11;
      v21[1] = *(_OWORD *)(v11 + 16);
      uint64_t v10 = sub_21935D134((uint64_t *)v21);
    }
    uint64_t v12 = (uint64_t *)(v3 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_completionHandler);
    uint64_t v13 = *(void (**)(void *, void))(v3
                                                + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_completionHandler);
    if (v13)
    {
      sub_219360274(*(void *)(v3 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_completionHandler));
      id v14 = v10;
      v13(v10, 0);

      uint64_t v15 = *v12;
      *uint64_t v12 = 0;
      v12[1] = 0;
      sub_219360334(v15);

      sub_219360334((uint64_t)v13);
    }
    else
    {
      if (qword_26AC26F98 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_2193E24F0();
      __swift_project_value_buffer(v16, (uint64_t)qword_26AC29118);
      uint64_t v17 = sub_2193E24D0();
      os_log_type_t v18 = sub_2193E2AE0();
      if (os_log_type_enabled(v17, v18))
      {
        id v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v19 = 0;
        _os_log_impl(&dword_219326000, v17, v18, "Could not complete command without completionHandler", v19, 2u);
        MEMORY[0x21D48A390](v19, -1, -1);
      }

      sub_219358E88(0);
    }
  }
}

uint64_t sub_2193589A8(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1[1];
  uint64_t v48 = *a1;
  uint64_t v4 = a1[2];
  unint64_t v5 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v8 = a1[7];
  uint64_t v43 = a1[8];
  uint64_t v44 = a1[9];
  unint64_t v41 = a1[10];
  uint64_t v42 = a1[11];
  uint64_t v38 = a1[6];
  uint64_t v39 = a1[12];
  unint64_t v36 = a1[14];
  uint64_t v37 = a1[13];
  unint64_t v34 = a1[16];
  uint64_t v35 = a1[15];
  uint64_t v33 = a1[17];
  id v9 = objc_msgSend(objc_allocWithZone((Class)ASCCredentialRequestContext), sel_initWithRequestTypes_, 8);
  objc_msgSend(v9, sel_setIsCABLEAuthenticatorRequest_, 1);
  if (v6 && *(void *)(v6 + 16) && (uint64_t v10 = sub_21938452C(30325, 0xE200000000000000), (v11 & 1) != 0))
  {
    if (*(unsigned char *)(*(void *)(v6 + 56) + v10)) {
      uint64_t v12 = 0x6465726975716572;
    }
    else {
      uint64_t v12 = 0;
    }
    unint64_t v13 = 0xE800000000000000;
    if (!*(unsigned char *)(*(void *)(v6 + 56) + v10)) {
      unint64_t v13 = 0;
    }
    uint64_t v45 = v13;
    uint64_t v46 = v12;
    uint64_t v47 = v3;
    if (!v7) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v45 = 0;
    uint64_t v46 = 0;
    uint64_t v47 = v3;
    if (!v7)
    {
LABEL_19:
      unint64_t v15 = 0;
      goto LABEL_20;
    }
  }
  uint64_t v14 = swift_bridgeObjectRetain();
  unint64_t v15 = sub_219357E38(v14);
  uint64_t result = swift_bridgeObjectRelease();
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_2193E2F10();
    uint64_t result = swift_bridgeObjectRelease();
    if (v32 != 1) {
      goto LABEL_20;
    }
  }
  else if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1)
  {
    goto LABEL_20;
  }
  uint64_t v40 = v8;
  if ((v15 & 0xC000000000000001) != 0)
  {
    id v17 = v9;
    id v18 = (id)MEMORY[0x21D4893F0](0, v15);
  }
  else
  {
    if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    id v17 = v9;
    id v18 = *(id *)(v15 + 32);
  }
  id v19 = v18;
  id v20 = objc_msgSend(v18, sel_credentialID);

  uint64_t v21 = sub_2193E2130();
  unint64_t v23 = v22;

  id v24 = objc_msgSend(self, sel_magicCredentialID);
  uint64_t v25 = sub_2193E2130();
  unint64_t v27 = v26;

  LOBYTE(v24) = sub_219379924(v21, v23, v25, v27);
  sub_219348A70(v25, v27);
  sub_219348A70(v21, v23);
  uint64_t v8 = v40;
  id v9 = v17;
  if (v24)
  {
    *(unsigned char *)(v2 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_usedMagicCredentialID) = 1;
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
LABEL_20:
  id v28 = objc_allocWithZone((Class)ASCPublicKeyCredentialAssertionOptions);
  swift_bridgeObjectRetain();
  sub_21934CDF0(v4, v5);
  swift_bridgeObjectRetain();
  id v29 = sub_2193599E4(1, v48, v47, v4, v5, v46, v45, v15);
  if (v8 != 2)
  {
    sub_21934CFA8(v38, v8, v43, v44, v41);
    sub_21934CFF8(v37, v36, v35, v34, v33);
    unint64_t v30 = sub_219391E00();
    objc_msgSend(v29, sel_setExtensions_, v30);

    sub_21935C8A4(v38, v8, v43, v44, v41, v42, v39, v37, v36, v35, v34, v33, (void (*)(void))sub_21934CEC4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21934CF14);
  }
  objc_msgSend(v9, sel_setPlatformKeyCredentialAssertionOptions_, v29);
  uint64_t v31 = (void *)sub_2193E2830();
  objc_msgSend(v9, sel_setRelyingPartyIdentifier_, v31);
  swift_bridgeObjectRelease();

  return (uint64_t)v9;
}

uint64_t sub_219358DE0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    sub_2193E2E30();
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 4;
      sub_2193E3200();
      sub_2193E2E10();
      sub_2193E2E40();
      sub_2193E2E50();
      sub_2193E2E20();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

void sub_219358E88(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v29 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27230);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC26F98 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_2193E24F0();
  __swift_project_value_buffer(v6, (uint64_t)qword_26AC29118);
  uint64_t v7 = sub_2193E24D0();
  os_log_type_t v8 = sub_2193E2AE0();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)id v9 = 136315138;
    uint64_t v30 = v29;
    v31[0] = v10;
    sub_21935CBFC();
    uint64_t v11 = sub_2193E31B0();
    uint64_t v30 = sub_21934C764(v11, v12, v31);
    sub_2193E2C00();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_219326000, v7, v8, "caBLE transaction failed: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D48A390](v10, -1, -1);
    MEMORY[0x21D48A390](v9, -1, -1);
  }

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_powerLogger), sel_logAuthenticationFinishedEventIfNeeded);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_bluetoothAdvertiser), sel_invalidate);
  uint64_t v13 = type metadata accessor for ASCABLEAdvertisement();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 1, 1, v13);
  uint64_t v14 = v1 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_advertisement;
  swift_beginAccess();
  sub_219360344((uint64_t)v5, v14);
  swift_endAccess();
  char v15 = *(unsigned char *)(v2 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_currentState);
  *(unsigned char *)(v2 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_currentState) = 0;
  sub_2193548B8(v15);
  uint64_t v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_completionHandler);
  id v17 = *(void (**)(void, void *))(v2
                                              + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_completionHandler);
  if (v17)
  {
    sub_21935CBFC();
    id v18 = (void *)swift_allocError();
    uint64_t *v19 = v29;
    swift_retain();
    v17(0, v18);
    sub_219360334((uint64_t)v17);

    uint64_t v20 = *v16;
  }
  else
  {
    uint64_t v20 = 0;
  }
  uint64_t *v16 = 0;
  v16[1] = 0;
  sub_219360334(v20);
  uint64_t v21 = OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_webSocket;
  unint64_t v22 = *(void **)(v2 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_webSocket);
  if (v22)
  {
    uint64_t v23 = qword_267C189A8;
    id v24 = v22;
    if (v23 != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v6, (uint64_t)qword_267C29598);
    uint64_t v25 = sub_2193E24D0();
    os_log_type_t v26 = sub_2193E2B00();
    if (os_log_type_enabled(v25, v26))
    {
      unint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v27 = 0;
      _os_log_impl(&dword_219326000, v25, v26, "Asked to close socket", v27, 2u);
      MEMORY[0x21D48A390](v27, -1, -1);
    }

    v24[OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_isConnected] = 0;
    objc_msgSend(*(id *)&v24[OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_webSocketTask], sel_cancelWithCloseCode_reason_, 1000, 0);

    unint64_t v22 = *(void **)(v2 + v21);
  }
  *(void *)(v2 + v21) = 0;
}

uint64_t sub_2193592B8(uint64_t a1)
{
  uint64_t v2 = sub_2193E25A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2193E2610();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2193E25C0();
  char v10 = sub_2193E2600();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v10)
  {
    if (v11)
    {
      uint64_t v12 = *(void *)(a1 + 32);
      swift_bridgeObjectRetain();
      return v12;
    }
    return 0;
  }
  if (!v11) {
    return 0;
  }
  uint64_t v13 = (unsigned int (**)(char *, uint64_t))(v3 + 88);
  int v14 = *MEMORY[0x263F140F0];
  char v15 = (void (**)(char *, uint64_t))(v3 + 8);
  swift_bridgeObjectRetain();
  uint64_t v16 = a1 + 40;
  while (1)
  {
    uint64_t v12 = *(void *)(v16 - 8);
    swift_bridgeObjectRetain_n();
    sub_2193E25B0();
    if ((*v13)(v5, v2) == v14) {
      break;
    }
    v16 += 16;
    (*v15)(v5, v2);
    swift_bridgeObjectRelease();
    if (!--v11)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  (*v15)(v5, v2);
  swift_bridgeObjectRelease();
  return v12;
}

id ASCABLEAuthenticator.__deallocating_deinit()
{
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_bluetoothAdvertiser], sel_invalidate);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ASCABLEAuthenticator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_2193598E8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ASCABLEAuthenticator.APSWrapper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id ASCABLEAuthenticator.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void ASCABLEAuthenticator.init()()
{
}

void sub_2193599C4(uint64_t a1, unint64_t a2, uint64_t a3)
{
}

void sub_2193599D0(uint64_t a1, uint64_t a2, unint64_t a3)
{
}

void sub_2193599DC(uint64_t a1, void *a2)
{
}

id sub_2193599E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v9 = v8;
  char v15 = (void *)sub_2193E2830();
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)sub_2193E2110();
  if (!a7)
  {
    id v17 = 0;
    if (a8) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v18 = 0;
    goto LABEL_6;
  }
  id v17 = (void *)sub_2193E2830();
  swift_bridgeObjectRelease();
  if (!a8) {
    goto LABEL_5;
  }
LABEL_3:
  sub_2193607AC(0, &qword_267C18E50);
  uint64_t v18 = (void *)sub_2193E2A00();
  swift_bridgeObjectRelease();
LABEL_6:
  id v19 = objc_msgSend(v9, sel_initWithKind_relyingPartyIdentifier_clientDataHash_userVerificationPreference_allowedCredentials_, a1, v15, v16, v17, v18);
  sub_219348A70(a4, a5);

  return v19;
}

id sub_219359B10(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23)
{
  if (a2 >> 60 == 15)
  {
    uint64_t v39 = 0;
  }
  else
  {
    uint64_t v39 = (void *)sub_2193E2110();
    sub_21934CEB0(a1, a2);
  }
  if (a4 >> 60 == 15)
  {
    uint64_t v38 = 0;
  }
  else
  {
    uint64_t v38 = (void *)sub_2193E2110();
    sub_21934CEB0(a3, a4);
  }
  if (a6 >> 60 == 15)
  {
    uint64_t v37 = 0;
  }
  else
  {
    uint64_t v37 = (void *)sub_2193E2110();
    sub_21934CEB0(a5, a6);
  }
  uint64_t v43 = (void *)sub_2193E2830();
  swift_bridgeObjectRelease();
  unint64_t v41 = (void *)sub_2193E2830();
  swift_bridgeObjectRelease();
  uint64_t v40 = (void *)sub_2193E2110();
  uint64_t v28 = (void *)sub_2193E2830();
  swift_bridgeObjectRelease();
  sub_2193607AC(0, (unint64_t *)&qword_267C18E58);
  uint64_t v29 = (void *)sub_2193E2A00();
  swift_bridgeObjectRelease();
  uint64_t v30 = (void *)sub_2193E2830();
  swift_bridgeObjectRelease();
  if (a19)
  {
    uint64_t v31 = (void *)sub_2193E2830();
    swift_bridgeObjectRelease();
    uint64_t v32 = a23;
    if (a20) {
      goto LABEL_12;
    }
LABEL_15:
    uint64_t v33 = 0;
    unint64_t v34 = a21;
    if (v32) {
      goto LABEL_13;
    }
LABEL_16:
    uint64_t v35 = 0;
    goto LABEL_17;
  }
  uint64_t v31 = 0;
  uint64_t v32 = a23;
  if (!a20) {
    goto LABEL_15;
  }
LABEL_12:
  sub_2193607AC(0, &qword_267C18E50);
  uint64_t v33 = (void *)sub_2193E2A00();
  swift_bridgeObjectRelease();
  unint64_t v34 = a21;
  if (!v32) {
    goto LABEL_16;
  }
LABEL_13:
  uint64_t v35 = (void *)sub_2193E2830();
  swift_bridgeObjectRelease();
LABEL_17:
  id v45 = objc_msgSend(v44, sel_initWithChallenge_clientDataJSON_clientDataHash_relyingPartyIdentifier_userName_userIdentifier_userDisplayName_supportedAlgorithmIdentifiers_attestationPreference_userVerificationPreference_excludedCredentials_extensions_origin_, v39, v38, v37, v43, v41, v40, v28, v29, v30, v31, v33, v34, v35);

  sub_219348A70(a11, a12);
  return v45;
}

char *sub_219359E0C(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  v16[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)id v1 = xmmword_2193E7210;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (sub_2193E1DF0() && __OFSUB__((int)v4, sub_2193E1E20())) {
        goto LABEL_24;
      }
      sub_2193E1E30();
      swift_allocObject();
      uint64_t v13 = sub_2193E1DD0();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      uint64_t result = sub_21935A464((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        *uint64_t v5 = v4;
        goto LABEL_19;
      }
      *uint64_t v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_2193E2000();
      uint64_t result = sub_21935A464(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        *id v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        *id v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        uint64_t result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      *id v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

uint64_t sub_21935A110(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  unint64_t v2 = v1[1];
  switch(v2 >> 62)
  {
    case 1uLL:
      *(void *)&long long v18 = *v1;
      *((void *)&v18 + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t result = sub_21935A3B4(a1);
      uint64_t v4 = v18;
      unint64_t v5 = *((void *)&v18 + 1) | 0x4000000000000000;
      goto LABEL_4;
    case 2uLL:
      *(void *)&long long v18 = *v1;
      *((void *)&v18 + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_2193E2000();
      uint64_t v6 = *((void *)&v18 + 1);
      uint64_t v7 = *(void *)(v18 + 16);
      uint64_t v17 = *(void *)(v18 + 24);
      uint64_t v8 = sub_2193E1DF0();
      if (!v8)
      {
        __break(1u);
        JUMPOUT(0x21935A34CLL);
      }
      uint64_t v9 = v8;
      uint64_t v10 = sub_2193E1E20();
      uint64_t v11 = v7 - v10;
      if (__OFSUB__(v7, v10))
      {
        __break(1u);
LABEL_15:
        __break(1u);
      }
      BOOL v12 = __OFSUB__(v17, v7);
      uint64_t v13 = v17 - v7;
      if (v12) {
        goto LABEL_15;
      }
      uint64_t v14 = sub_2193E1E10();
      if (v14 >= v13) {
        uint64_t v15 = v13;
      }
      else {
        uint64_t v15 = v14;
      }
      uint64_t result = a1(v9 + v11, v9 + v11 + v15);
      *id v1 = v18;
      v1[1] = v6 | 0x8000000000000000;
      return result;
    case 3uLL:
      *(void *)((char *)&v18 + 7) = 0;
      *(void *)&long long v18 = 0;
      return a1((uint64_t)&v18, (uint64_t)&v18);
    default:
      *(void *)&long long v18 = *v1;
      WORD4(v18) = v2;
      BYTE10(v18) = BYTE2(v2);
      BYTE11(v18) = BYTE3(v2);
      BYTE12(v18) = BYTE4(v2);
      BYTE13(v18) = BYTE5(v2);
      BYTE14(v18) = BYTE6(v2);
      uint64_t result = a1((uint64_t)&v18, (uint64_t)&v18 + BYTE6(v2));
      uint64_t v4 = v18;
      unint64_t v5 = DWORD2(v18) | ((unint64_t)BYTE12(v18) << 32) | ((unint64_t)BYTE13(v18) << 40) | ((unint64_t)BYTE14(v18) << 48);
LABEL_4:
      *id v1 = v4;
      v1[1] = v5;
      return result;
  }
}

uint64_t sub_21935A35C(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3) {
    return a1(a3, a4 - a3);
  }
  else {
    return a1(0, 0);
  }
}

uint64_t sub_21935A3B4(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t result = sub_2193E2080();
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  if ((int)v5 < (int)v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = sub_2193E1DF0();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  uint64_t result = sub_2193E1E20();
  uint64_t v7 = v4 - result;
  if (__OFSUB__(v4, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v8 = v5 - v4;
  uint64_t v9 = sub_2193E1E10();
  if (v9 >= v8) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = v9;
  }
  return a1(v6 + v7, v6 + v7 + v10);
}

char *sub_21935A464(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t result = (char *)sub_2193E1DF0();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  uint64_t result = (char *)sub_2193E1E20();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_2193E1E10();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

uint64_t sub_21935A518(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21935A578(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21935A538(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21935A6E4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21935A558(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21935A844(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21935A578(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27158);
    BOOL v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    BOOL v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2193E2F60();
  __break(1u);
  return result;
}

uint64_t sub_21935A6E4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E60);
    BOOL v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    BOOL v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2193E2F60();
  __break(1u);
  return result;
}

uint64_t sub_21935A844(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E88);
  uint64_t v10 = *(void *)(type metadata accessor for ASPasswordSignInEventCollector.SignInEvent() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for ASPasswordSignInEventCollector.SignInEvent() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  long long v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_2193E2F60();
  __break(1u);
  return result;
}

uint64_t sub_21935AA84(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2193E1DF0();
  if (!result || (uint64_t result = sub_2193E1E20(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_2193E1E10();
      return sub_2193E20E0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21935AB18(uint64_t a1, unint64_t a2)
{
  v10[5] = *MEMORY[0x263EF8340];
  v10[3] = MEMORY[0x263F06F78];
  v10[4] = MEMORY[0x263F06F68];
  v10[0] = a1;
  v10[1] = a2;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1Tm(v10, MEMORY[0x263F06F78]);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5) {
        __break(1u);
      }
      sub_21934CDF0(a1, a2);
      sub_21934CDF0(v5, v6);
      sub_21935AA84((int)v5, v5 >> 32);
      sub_219348A70(v5, v6);
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(v5 + 16);
      uint64_t v8 = *(void *)(v5 + 24);
      sub_21934CDF0(a1, a2);
      swift_retain();
      swift_retain();
      sub_21935AA84(v7, v8);
      swift_release();
      swift_release();
      break;
    default:
      sub_21934CDF0(a1, a2);
      sub_2193E20E0();
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
}

uint64_t sub_21935AD3C(uint64_t a1)
{
  v33[5] = *MEMORY[0x263EF8340];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E08);
  MEMORY[0x270FA5388](v3);
  sub_219360574(a1, (uint64_t)&v30[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], &qword_267C18E08);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E10);
  if (swift_dynamicCast())
  {
    sub_21935D0F0(v31, (uint64_t)v33);
    uint64_t v5 = __swift_project_boxed_opaque_existential_1Tm(v33, v33[3]);
    MEMORY[0x270FA5388](v5);
    *(void *)&v30[-16] = v1;
    sub_2193E1E40();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
  }
  uint64_t v32 = 0;
  memset(v31, 0, sizeof(v31));
  sub_219360620((uint64_t)v31, &qword_267C18E18);
  uint64_t v7 = *v1;
  unint64_t v8 = v1[1];
  uint64_t v9 = 0;
  switch(v8 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v7), v7)) {
        goto LABEL_44;
      }
      uint64_t v9 = HIDWORD(v7) - (int)v7;
      uint64_t v10 = v7 >> 32;
LABEL_8:
      if (v10 < 0) {
        goto LABEL_40;
      }
LABEL_9:
      uint64_t v13 = sub_2193E20C0();
      MEMORY[0x270FA5388](v13);
      *(void *)&v30[-32] = v9;
      *(void *)&v30[-24] = 0;
      *(void *)&v30[-16] = a1;
      size_t v14 = sub_219359E0C((void *(*)(uint64_t *__return_ptr, char *, char *))sub_21935D0B8);
      long long v18 = v14;
      if (!v17)
      {
        memset(v33, 0, 15);
        if (!v16) {
          return swift_bridgeObjectRelease();
        }
        unint64_t v22 = v15;
        uint64_t v23 = *((void *)v14 + 2);
        if (v15 == v23) {
          return swift_bridgeObjectRelease();
        }
        if ((v15 & 0x8000000000000000) != 0) {
LABEL_46:
        }
          __break(1u);
        if (v15 < *((void *)v14 + 2))
        {
          LOBYTE(v24) = 0;
          uint64_t v25 = v16 - 1;
          uint64_t v26 = v23 - 1;
          do
          {
            *((unsigned char *)v33 + v24) = v18[v22 + 32];
            __int16 v24 = v24 + 1;
            if ((v24 & 0x100) != 0) {
              goto LABEL_39;
            }
            if (v24 == 14)
            {
              *(void *)&v31[0] = v33[0];
              DWORD2(v31[0]) = v33[1];
              WORD6(v31[0]) = WORD2(v33[1]);
              sub_2193E20E0();
              if (!v25 || v26 == v22) {
                return swift_bridgeObjectRelease();
              }
              LOBYTE(v24) = 0;
            }
            else if (v26 == v22 || !v25)
            {
              *(void *)&v31[0] = v33[0];
              DWORD2(v31[0]) = v33[1];
              WORD6(v31[0]) = WORD2(v33[1]);
              sub_2193E20E0();
              return swift_bridgeObjectRelease();
            }
            ++v22;
            --v25;
          }
          while (v22 < *((void *)v18 + 2));
        }
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      uint64_t v19 = *v1;
      unint64_t v20 = v1[1];
      uint64_t v21 = 0;
      switch(v20 >> 62)
      {
        case 1uLL:
          uint64_t v21 = (int)v19;
          break;
        case 2uLL:
          uint64_t v21 = *(void *)(v19 + 16);
          break;
        default:
          break;
      }
      BOOL v27 = __OFADD__(v21, v9);
      uint64_t v28 = v21 + v9;
      if (v27)
      {
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
      if (__OFADD__(v28, v17))
      {
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      uint64_t v29 = 0;
      switch(v20 >> 62)
      {
        case 1uLL:
          uint64_t v29 = v19 >> 32;
          break;
        case 2uLL:
          uint64_t v29 = *(void *)(v19 + 24);
          break;
        case 3uLL:
          break;
        default:
          uint64_t v29 = BYTE6(v20);
          break;
      }
      if (v29 < v28 + v17)
      {
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
      sub_2193E20D0();
      return swift_bridgeObjectRelease();
    case 2uLL:
      uint64_t v12 = v7 + 16;
      uint64_t v11 = *(void *)(v7 + 16);
      uint64_t v10 = *(void *)(v12 + 8);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_8;
      }
      goto LABEL_45;
    case 3uLL:
      goto LABEL_9;
    default:
      uint64_t v9 = BYTE6(v8);
      goto LABEL_9;
  }
}

uint64_t sub_21935B188(void *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E20);
  MEMORY[0x270FA5388](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v7);
  sub_219360528(&qword_267C18E28, &qword_267C18E20);
  sub_2193E29D0();
  unint64_t v10 = *(void *)(v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C18E08) + 36));
  uint64_t result = sub_219360620(v3, &qword_267C18E08);
  uint64_t v12 = v31;
  unint64_t v13 = v32;
  if (!a2) {
    goto LABEL_6;
  }
  if (!a3)
  {
LABEL_7:
    *a1 = v12;
    a1[1] = v13;
    a1[2] = v10;
    return a3;
  }
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    if (!v10 || (--v10, unint64_t v14 = *(void *)(v31 + 16), v32 == v14))
    {
LABEL_6:
      a3 = 0;
      goto LABEL_7;
    }
    if (v32 < v14)
    {
      unint64_t v15 = v32 + 1;
      *a2 = *(unsigned char *)(v31 + 32 + v32);
      if (a3 == 1)
      {
        ++v13;
      }
      else
      {
        unint64_t v16 = a3 - 2;
        if (a3 - 2 >= v14 + ~v13) {
          unint64_t v16 = v14 + ~v13;
        }
        if (v16 >= v10) {
          unint64_t v16 = v10;
        }
        unint64_t v17 = v16 + 1;
        if (v17 <= 0x10 || (uint64_t v18 = v13 + v12, ((unint64_t)&a2[-v13 - v12] & 0xFFFFFFFFFFFFFFF0) == 0x20))
        {
          uint64_t v19 = 1;
          unint64_t v20 = a2;
        }
        else
        {
          uint64_t v21 = v17 & 0xF;
          if ((v17 & 0xF) == 0) {
            uint64_t v21 = 16;
          }
          unint64_t v22 = v17 - v21;
          v15 += v17 - v21;
          unint64_t v20 = &a2[v17 - v21];
          uint64_t v19 = v22 + 1;
          v10 -= v22;
          uint64_t v23 = a2 + 1;
          __int16 v24 = (long long *)(v18 + 33);
          do
          {
            long long v25 = *v24++;
            *v23++ = v25;
            v22 -= 16;
          }
          while (v22);
        }
        uint64_t v26 = 0;
        BOOL v27 = v20 + 1;
        unint64_t v28 = v10 - 1;
        uint64_t v29 = v19;
        while (1)
        {
          if (v10 == v26)
          {
            unint64_t v10 = 0;
            unint64_t v13 = v15 + v26;
            a3 = v19 + v26;
            goto LABEL_7;
          }
          unint64_t v30 = v28;
          if (!(v15 - v14 + v26)) {
            break;
          }
          ++v29;
          v27[v26] = *(unsigned char *)(v15 + v12 + 32 + v26);
          ++v26;
          --v28;
          if (!(v19 - a3 + v26))
          {
            unint64_t v13 = v15 + v26;
            unint64_t v10 = v30;
            goto LABEL_7;
          }
        }
        unint64_t v13 = v14;
        unint64_t v10 = v28;
        a3 = v29;
      }
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21935B428(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  unint64_t v5 = a5 >> 62;
  uint64_t v9 = 0;
  switch(a5 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (uint64_t)a4 >> 32;
      goto LABEL_5;
    case 2uLL:
      uint64_t v9 = *(void *)(a4 + 24);
      if (a2) {
        goto LABEL_8;
      }
      goto LABEL_39;
    case 3uLL:
LABEL_5:
      if (!a2) {
        goto LABEL_39;
      }
      goto LABEL_8;
    default:
      uint64_t v9 = BYTE6(a5);
      if (!a2)
      {
LABEL_39:
        uint64_t v14 = 0;
        goto LABEL_40;
      }
LABEL_8:
      if (!a3)
      {
        uint64_t v14 = 0;
        goto LABEL_40;
      }
      if (a3 < 0) {
        goto LABEL_48;
      }
      long long v25 = a1;
      uint64_t v10 = 0;
      char v11 = a4;
      uint64_t v38 = (uint64_t)a4 >> 32;
      unint64_t v36 = a4 >> 16;
      unint64_t v37 = a4 >> 8;
      unint64_t v34 = HIDWORD(a4);
      unint64_t v35 = a4 >> 24;
      unint64_t v32 = HIWORD(a4);
      unint64_t v33 = a4 >> 40;
      unint64_t v30 = a5 >> 8;
      unint64_t v31 = HIBYTE(a4);
      unint64_t v28 = a5 >> 24;
      unint64_t v29 = a5 >> 16;
      unint64_t v26 = a5 >> 40;
      unint64_t v27 = HIDWORD(a5);
      uint64_t v24 = v9;
      uint64_t v12 = v5;
      unint64_t v40 = a5 >> 62;
      break;
  }
  while (2)
  {
    uint64_t v14 = v10++;
    uint64_t v15 = (int)a4;
    switch(v12)
    {
      case 0:
        if (!v9) {
          goto LABEL_35;
        }
        BOOL v16 = __OFSUB__(v9--, 1);
        if (v16) {
          goto LABEL_42;
        }
        if (v9 >= BYTE6(a5)) {
          goto LABEL_43;
        }
        v41[0] = v11;
        v41[1] = v37;
        v41[2] = v36;
        v41[3] = v35;
        v41[4] = v34;
        v41[5] = v33;
        v41[6] = v32;
        v41[7] = v31;
        v41[8] = a5;
        v41[9] = v30;
        v41[10] = v29;
        v41[11] = v28;
        v41[12] = v27;
        v41[13] = v26;
        char v13 = v41[v9];
        goto LABEL_12;
      case 1:
        goto LABEL_19;
      case 2:
        uint64_t v15 = *(void *)(a4 + 16);
LABEL_19:
        if (v9 == v15) {
          goto LABEL_35;
        }
        BOOL v16 = __OFSUB__(v9--, 1);
        if (v16)
        {
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
        }
        if (v5 == 2)
        {
          if (v9 < *(void *)(a4 + 16)) {
            goto LABEL_44;
          }
          if (v9 >= *(void *)(a4 + 24)) {
            goto LABEL_46;
          }
          uint64_t v17 = sub_2193E1DF0();
          if (!v17) {
            goto LABEL_50;
          }
          uint64_t v18 = v17;
          uint64_t v19 = sub_2193E1E20();
          uint64_t v20 = v9 - v19;
          if (__OFSUB__(v9, v19)) {
            goto LABEL_47;
          }
LABEL_11:
          char v13 = *(unsigned char *)(v18 + v20);
          LODWORD(v5) = v40;
LABEL_12:
          *(unsigned char *)(a2 + v14) = v13;
          if (a3 == v10) {
            goto LABEL_34;
          }
          continue;
        }
        if (v9 < (int)a4 || v9 >= v38) {
          goto LABEL_45;
        }
        uint64_t v21 = sub_2193E1DF0();
        if (!v21) {
          goto LABEL_51;
        }
        uint64_t v18 = v21;
        uint64_t v22 = sub_2193E1E20();
        uint64_t v20 = v9 - v22;
        if (!__OFSUB__(v9, v22)) {
          goto LABEL_11;
        }
        __break(1u);
LABEL_34:
        uint64_t v14 = a3;
LABEL_35:
        a1 = v25;
LABEL_40:
        *a1 = a4;
        a1[1] = a5;
        a1[2] = v9;
        return v14;
      case 3:
        a1 = v25;
        if (v24) {
          goto LABEL_49;
        }
        uint64_t v9 = 0;
        goto LABEL_39;
      default:
        JUMPOUT(0);
    }
  }
}

uint64_t sub_21935B74C(uint64_t a1)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27180);
  uint64_t v10 = sub_219360528((unint64_t *)&qword_26AC270E0, &qword_26AC27180);
  v8[0] = a1;
  unint64_t v2 = __swift_project_boxed_opaque_existential_1Tm(v8, v9);
  uint64_t v3 = (unsigned char *)(*v2 + 32);
  uint64_t v4 = &v3[*(void *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_219379638(v3, v4, &v7);
  uint64_t v5 = v7;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  return v5;
}

uint64_t sub_21935B80C(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_2193E1E30();
      swift_allocObject();
      sub_2193E1E00();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_2193E20B0();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

unint64_t sub_21935B8AC(unint64_t result)
{
  if (result > 7) {
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ASCABLEAuthenticator()
{
  uint64_t result = qword_267C18D78;
  if (!qword_267C18D78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_21935B908()
{
  unint64_t result = qword_26AC270F8;
  if (!qword_26AC270F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC270F8);
  }
  return result;
}

uint64_t sub_21935B95C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21935B994(uint64_t a1)
{
  return sub_2193B9A28(a1, *(void *)(v1 + 16));
}

uint64_t sub_21935B99C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_21935B9B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  unint64_t v5 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v7 = *(void *)(a1 + 72);
  uint64_t v8 = *(void *)(a1 + 80);
  uint64_t v15 = *(void *)(a1 + 88);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 104);
  uint64_t v14 = *(void *)(a1 + 96);
  long long v12 = *(_OWORD *)(a1 + 112);
  uint64_t v9 = *(void *)(a1 + 128);
  char v10 = *(unsigned char *)(a1 + 136);
  swift_bridgeObjectRetain();
  sub_21934CDF0(v2, v3);
  sub_21934CDF0(v4, v5);
  sub_21935BC70(v17, v16, v6, v7, v8, v15, v14, v13, v12, *((uint64_t *)&v12 + 1), v9, v10, (void (*)(void))sub_21935BAB0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BACC);
  return a1;
}

uint64_t sub_21935BAB0(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result != 3) {
    return sub_21934CE48(a2, a3);
  }
  return result;
}

uint64_t sub_21935BACC(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  if (result != 3) {
    return sub_21934D03C(a2, a3, a4, a5);
  }
  return result;
}

uint64_t sub_21935BAF0(uint64_t a1)
{
  return a1;
}

void sub_21935BB54(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_219348A70(a3, a4);
    sub_219348A70(a5, a6);
    sub_21935BC70(a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, (void (*)(void))sub_21935BD18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BD34);
  }
}

void sub_21935BC70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, void (*a13)(void), void (*a14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a12 != 3)
  {
    a13();
    a14(a7, a8, a9, a10, a11);
  }
}

uint64_t sub_21935BD18(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result != 3) {
    return sub_21934CEB0(a2, a3);
  }
  return result;
}

uint64_t sub_21935BD34(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  if (result != 3) {
    return sub_21934CF58(a2, a3, a4, a5);
  }
  return result;
}

uint64_t sub_21935BD58(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  unint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  unint64_t v5 = *(void *)(a1 + 64);
  uint64_t v17 = *(void *)(a1 + 72);
  uint64_t v6 = *(void *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 96);
  uint64_t v15 = *(void *)(a1 + 104);
  uint64_t v16 = *(void *)(a1 + 80);
  uint64_t v13 = *(void *)(a1 + 120);
  uint64_t v14 = *(void *)(a1 + 112);
  uint64_t v12 = *(void *)(a1 + 128);
  long long v11 = *(_OWORD *)(a1 + 136);
  uint64_t v8 = *(void *)(a1 + 152);
  char v9 = *(unsigned char *)(a1 + 160);
  sub_219348A70(*(void *)(a1 + 8), *(void *)(a1 + 16));
  swift_bridgeObjectRelease();
  sub_219348A70(v2, v3);
  sub_219348A70(v4, v5);
  sub_21935BC70(v17, v16, v6, v7, v15, v14, v13, v12, v11, *((uint64_t *)&v11 + 1), v8, v9, (void (*)(void))sub_21935BD18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BD34);
  return a1;
}

uint64_t sub_21935BE64(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 216);
  if (v1 > 1) {
    return (v1 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_21935BE78(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_21935BED4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 216);
}

void sub_21935BEDC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unsigned __int8 a28)
{
  if (a28 != 255)
  {
    sub_21935BF90(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23,
      a24,
      a25,
      a26,
      a27,
      a28 & 1);
  }
}

void sub_21935BF90(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  if (a28)
  {
    swift_bridgeObjectRetain();
    sub_21934CDF0(a3, a4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21935C8A4(a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, (void (*)(void))sub_21934CFA8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21934CFF8);
  }
  else
  {
    sub_21934CDF0(a1, a2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21934CDF0(a9, a10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21935C8A4(a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, (void (*)(void))sub_21934CFA8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21934CFF8);
  }
}

uint64_t sub_21935C178(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  unint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  unint64_t v5 = *(void *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 80);
  uint64_t v8 = *(void *)(a1 + 88);
  unint64_t v9 = *(void *)(a1 + 96);
  uint64_t v20 = *(void *)(a1 + 144);
  uint64_t v21 = *(void *)(a1 + 136);
  uint64_t v18 = *(void *)(a1 + 160);
  uint64_t v19 = *(void *)(a1 + 152);
  uint64_t v16 = *(void *)(a1 + 176);
  uint64_t v17 = *(void *)(a1 + 168);
  uint64_t v14 = *(void *)(a1 + 192);
  uint64_t v15 = *(void *)(a1 + 184);
  long long v13 = *(_OWORD *)(a1 + 200);
  uint64_t v12 = *(void *)(a1 + 216);
  char v11 = *(unsigned char *)(a1 + 224);
  sub_21935C2BC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24));
  sub_21934CDF0(v2, v3);
  sub_21934CDF0(v4, v5);
  sub_21935C31C(v6, v7, v8, v9);
  sub_21935BC70(v21, v20, v19, v18, v17, v16, v15, v14, v13, *((uint64_t *)&v13 + 1), v12, v11, (void (*)(void))sub_21935BAB0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BACC);
  return a1;
}

uint64_t sub_21935C2BC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_21934CDF0(a3, a4);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21935C31C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_21934CDF0(a3, a4);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21935C37C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  unint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  unint64_t v5 = *(void *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 80);
  uint64_t v8 = *(void *)(a1 + 88);
  unint64_t v9 = *(void *)(a1 + 96);
  uint64_t v20 = *(void *)(a1 + 144);
  uint64_t v21 = *(void *)(a1 + 136);
  uint64_t v18 = *(void *)(a1 + 160);
  uint64_t v19 = *(void *)(a1 + 152);
  uint64_t v16 = *(void *)(a1 + 176);
  uint64_t v17 = *(void *)(a1 + 168);
  uint64_t v14 = *(void *)(a1 + 192);
  uint64_t v15 = *(void *)(a1 + 184);
  long long v13 = *(_OWORD *)(a1 + 200);
  uint64_t v12 = *(void *)(a1 + 216);
  char v11 = *(unsigned char *)(a1 + 224);
  sub_21935C4C0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24));
  sub_219348A70(v2, v3);
  sub_219348A70(v4, v5);
  sub_21935C520(v6, v7, v8, v9);
  sub_21935BC70(v21, v20, v19, v18, v17, v16, v15, v14, v13, *((uint64_t *)&v13 + 1), v12, v11, (void (*)(void))sub_21935BD18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BD34);
  return a1;
}

uint64_t sub_21935C4C0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_219348A70(a3, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21935C520(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_219348A70(a3, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21935C580(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 216);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    v4);
  return a1;
}

void sub_21935C604(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unsigned __int8 a28)
{
  if (a28 != 255)
  {
    sub_21935C6B8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23,
      a24,
      a25,
      a26,
      a27,
      a28 & 1);
  }
}

void sub_21935C6B8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  if (a28)
  {
    swift_bridgeObjectRelease();
    sub_219348A70(a3, a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21935C8A4(a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, (void (*)(void))sub_21934CEC4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21934CF14);
  }
  else
  {
    sub_219348A70(a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_219348A70(a9, a10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21935C8A4(a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, (void (*)(void))sub_21934CEC4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21934CF14);
  }
}

void sub_21935C8A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(void), void (*a14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a2 != 2)
  {
    a13();
    a14(a8, a9, a10, a11, a12);
  }
}

uint64_t sub_21935C930(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  unint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  unint64_t v7 = *(void *)(a1 + 72);
  uint64_t v8 = *(void *)(a1 + 80);
  unint64_t v9 = *(void *)(a1 + 88);
  uint64_t v14 = *(void *)(a1 + 104);
  uint64_t v15 = *(void *)(a1 + 96);
  unint64_t v12 = *(void *)(a1 + 120);
  uint64_t v13 = *(void *)(a1 + 112);
  uint64_t v24 = *(void *)(a1 + 168);
  uint64_t v25 = *(void *)(a1 + 160);
  uint64_t v22 = *(void *)(a1 + 184);
  uint64_t v23 = *(void *)(a1 + 176);
  uint64_t v20 = *(void *)(a1 + 200);
  uint64_t v21 = *(void *)(a1 + 192);
  uint64_t v18 = *(void *)(a1 + 216);
  uint64_t v19 = *(void *)(a1 + 208);
  long long v17 = *(_OWORD *)(a1 + 224);
  uint64_t v16 = *(void *)(a1 + 240);
  char v11 = *(unsigned char *)(a1 + 248);
  sub_219348A70(*(void *)(a1 + 8), *(void *)(a1 + 16));
  sub_21935C4C0(v2, v3, v4, v5);
  sub_219348A70(v6, v7);
  sub_219348A70(v8, v9);
  sub_21935C520(v15, v14, v13, v12);
  sub_21935BC70(v25, v24, v23, v22, v21, v20, v19, v18, v17, *((uint64_t *)&v17 + 1), v16, v11, (void (*)(void))sub_21935BD18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BD34);
  return a1;
}

unint64_t sub_21935CA9C()
{
  unint64_t result = qword_267C18D28;
  if (!qword_267C18D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18D28);
  }
  return result;
}

unint64_t sub_21935CAF4()
{
  unint64_t result = qword_267C18D30;
  if (!qword_267C18D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18D30);
  }
  return result;
}

unint64_t sub_21935CB4C()
{
  unint64_t result = qword_267C18D38;
  if (!qword_267C18D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18D38);
  }
  return result;
}

unint64_t sub_21935CBA4()
{
  unint64_t result = qword_267C18D40;
  if (!qword_267C18D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18D40);
  }
  return result;
}

unint64_t sub_21935CBFC()
{
  unint64_t result = qword_267C18D50;
  if (!qword_267C18D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18D50);
  }
  return result;
}

uint64_t sub_21935CC50()
{
  return type metadata accessor for ASCABLEAuthenticator();
}

void sub_21935CC58()
{
  sub_21935CDF4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ASCABLEAuthenticator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ASCABLEAuthenticator);
}

uint64_t dispatch thunk of ASCABLEAuthenticator.startWithCompletionHandler(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ASCABLEAuthenticator.sendExcludedCredentialMatchError()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ASCABLEAuthenticator.finishTransaction(credential:error:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

void sub_21935CDF4()
{
  if (!qword_26AC27220)
  {
    type metadata accessor for ASCABLEAdvertisement();
    unint64_t v0 = sub_2193E2BB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC27220);
    }
  }
}

ValueMetadata *type metadata accessor for ASCABLEAuthenticator.AuthenticatorError()
{
  return &type metadata for ASCABLEAuthenticator.AuthenticatorError;
}

uint64_t type metadata accessor for ASCABLEAuthenticator.APSWrapper()
{
  return self;
}

uint64_t getEnumTagSinglePayload for ASCABLEAuthenticator.CABLEState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ASCABLEAuthenticator.CABLEState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21935CFDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCABLEAuthenticator.CABLEState()
{
  return &type metadata for ASCABLEAuthenticator.CABLEState;
}

unint64_t sub_21935D018()
{
  unint64_t result = qword_267C18E00;
  if (!qword_267C18E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18E00);
  }
  return result;
}

uint64_t sub_21935D06C()
{
  unint64_t v0 = sub_2193E2F70();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_21935D0B8@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_21935FD68(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 32));
  if (!v4)
  {
    *a3 = result;
    a3[1] = v7;
    a3[2] = v8;
    a3[3] = v9;
  }
  return result;
}

uint64_t sub_21935D0F0(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_21935D108()
{
  return sub_2193E20E0();
}

id sub_21935D134(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  uint64_t v3 = a1[5];
  uint64_t v34 = a1[4];
  uint64_t v4 = a1[7];
  uint64_t v33 = a1[6];
  uint64_t v5 = a1[8];
  unint64_t v6 = a1[9];
  uint64_t v7 = a1[11];
  uint64_t v31 = a1[10];
  uint64_t v9 = a1[12];
  uint64_t v8 = a1[13];
  uint64_t v10 = a1[14];
  uint64_t v40 = a1[15];
  uint64_t v41 = a1[16];
  uint64_t v39 = a1[17];
  unint64_t v37 = a1[19];
  uint64_t v38 = a1[18];
  uint64_t v29 = a1[20];
  uint64_t v30 = a1[21];
  uint64_t v27 = a1[24];
  unint64_t v28 = a1[23];
  unint64_t v26 = a1[25];
  uint64_t v24 = a1[22];
  uint64_t v25 = a1[26];
  id v36 = objc_msgSend(objc_allocWithZone((Class)ASCCredentialRequestContext), sel_initWithRequestTypes_, 4);
  objc_msgSend(v36, sel_setIsCABLEAuthenticatorRequest_, 1);
  swift_bridgeObjectRetain();
  uint64_t v32 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v35 = v2;
  sub_21934CDF0(v1, v2);
  sub_21934CDF0(v5, v6);
  uint64_t v11 = sub_219357D78(v9);
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_219358DE0(v11);
  swift_bridgeObjectRelease();
  if (v10 && *(void *)(v10 + 16) && (uint64_t v13 = sub_21938452C(30325, 0xE200000000000000), (v14 & 1) != 0))
  {
    if (*(unsigned char *)(*(void *)(v10 + 56) + v13)) {
      uint64_t v15 = 0x6465726975716572;
    }
    else {
      uint64_t v15 = 0;
    }
    if (*(unsigned char *)(*(void *)(v10 + 56) + v13)) {
      uint64_t v16 = 0xE800000000000000;
    }
    else {
      uint64_t v16 = 0;
    }
    if (!v8) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    if (!v8)
    {
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_14;
    }
  }
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_219357E38(v18);
  swift_bridgeObjectRelease();
LABEL_14:
  id v19 = objc_allocWithZone((Class)ASCPublicKeyCredentialCreationOptions);
  id v20 = sub_219359B10(0, 0xF000000000000000, 0, 0xF000000000000000, v1, v35, v34, v3, v33, v32, v5, v6, v31, v7, v12, 1701736302, 0xE400000000000000, v15, v16,
          v17,
          0,
          0,
          0);
  if (v41 != 2)
  {
    sub_21934CFA8(v40, v41, v39, v38, v37);
    sub_21934CFF8(v24, v28, v27, v26, v25);
    uint64_t v21 = sub_219391FC8();
    objc_msgSend(v20, sel_setExtensions_, v21);

    sub_21935C8A4(v40, v41, v39, v38, v37, v29, v30, v24, v28, v27, v26, v25, (void (*)(void))sub_21934CEC4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21934CF14);
  }
  objc_msgSend(v36, sel_setPlatformKeyCredentialCreationOptions_, v20);
  id v22 = objc_msgSend(v20, sel_relyingPartyIdentifier);
  if (!v22)
  {
    sub_2193E2840();
    id v22 = (id)sub_2193E2830();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v36, sel_setRelyingPartyIdentifier_, v22);

  return v36;
}

void sub_21935D4D8(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_currentState;
  unsigned int v5 = v2[OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_currentState];
  if (v5 >= 3)
  {
    if (v5 == 3)
    {
      sub_219356E10(a1, a2);
    }
    else
    {
      sub_219357FB8(a1, a2);
    }
  }
  else
  {
    if (qword_26AC26F98 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_2193E24F0();
    __swift_project_value_buffer(v6, (uint64_t)qword_26AC29118);
    uint64_t v7 = v2;
    uint64_t v8 = sub_2193E24D0();
    os_log_type_t v9 = sub_2193E2AE0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v17 = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      uint64_t v12 = v3[v4];
      unint64_t v13 = 0xE400000000000000;
      uint64_t v14 = 1701602409;
      switch(v12)
      {
        case 1:
          uint64_t v14 = 0xD000000000000010;
          uint64_t v15 = "allocatingServer";
          goto LABEL_17;
        case 2:
          uint64_t v16 = "listeningForRelayPush";
          goto LABEL_19;
        case 3:
          uint64_t v14 = 0xD00000000000001ALL;
          uint64_t v15 = "performingInitialHandshake";
LABEL_17:
          unint64_t v13 = (unint64_t)(v15 - 32) | 0x8000000000000000;
          break;
        case 4:
          uint64_t v16 = "connectionEstablished";
LABEL_19:
          unint64_t v13 = (unint64_t)(v16 - 32) | 0x8000000000000000;
          uint64_t v14 = 0xD000000000000015;
          break;
        default:
          break;
      }
      sub_21934C764(v14, v13, &v17);
      sub_2193E2C00();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_219326000, v8, v9, "Unexpectedly received socket message while in state %s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D48A390](v11, -1, -1);
      MEMORY[0x21D48A390](v10, -1, -1);
    }
    else
    {
    }
    sub_219358E88(0);
  }
}

void sub_21935D788(uint64_t a1, unint64_t a2)
{
  if (qword_26AC26F98 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_2193E24F0();
  __swift_project_value_buffer(v4, (uint64_t)qword_26AC29118);
  swift_bridgeObjectRetain_n();
  unsigned int v5 = sub_2193E24D0();
  os_log_type_t v6 = sub_2193E2AE0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_21934C764(a1, a2, &v9);
    sub_2193E2C00();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_219326000, v5, v6, "Unexpectedly received string frame: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D48A390](v8, -1, -1);
    MEMORY[0x21D48A390](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_219358E88(4);
}

void sub_21935D948(void *a1)
{
  if (qword_26AC26F98 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_2193E24F0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26AC29118);
  id v3 = a1;
  id v4 = a1;
  unsigned int v5 = sub_2193E24D0();
  os_log_type_t v6 = sub_2193E2AE0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v11 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_getErrorValue();
    uint64_t v9 = sub_2193E31B0();
    sub_21934C764(v9, v10, &v11);
    sub_2193E2C00();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_219326000, v5, v6, "Networking error: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D48A390](v8, -1, -1);
    MEMORY[0x21D48A390](v7, -1, -1);
  }
  else
  {
  }
  sub_219358E88(4);
}

void sub_21935DB24(void *a1, void *a2, uint64_t a3)
{
  id v108 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18EA0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v106 = (uint64_t)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for CableResponse.AllocationResponse(0);
  v105 = *(uint8_t **)(v107 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v107);
  uint64_t v102 = (uint64_t)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v103 = (uint64_t)&v101 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v101 - v11;
  uint64_t v13 = sub_2193E2320();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v14 = type metadata accessor for CableResponse(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v104 = (uint64_t)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v101 - v17;
  if (qword_26AC26F98 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_2193E24F0();
  __swift_project_value_buffer(v19, (uint64_t)qword_26AC29118);
  id v20 = sub_2193E24D0();
  os_log_type_t v21 = sub_2193E2AC0();
  if (os_log_type_enabled(v20, v21))
  {
    id v22 = v12;
    uint64_t v23 = v18;
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_219326000, v20, v21, "Received server allocation response", v24, 2u);
    uint64_t v25 = v24;
    uint64_t v18 = v23;
    uint64_t v12 = v22;
    MEMORY[0x21D48A390](v25, -1, -1);
  }

  if (a3)
  {
    id v26 = a2;
    id v27 = a2;
    unint64_t v28 = sub_2193E24D0();
    os_log_type_t v29 = sub_2193E2AE0();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      *(void *)&v110[0] = v31;
      *(_DWORD *)uint64_t v30 = 134218242;
      v112[0] = a3;
      sub_2193E2C00();
      *(_WORD *)(v30 + 12) = 2080;
      if (a2)
      {
        swift_getErrorValue();
        id v32 = a2;
        uint64_t v33 = sub_2193E31B0();
        unint64_t v35 = v34;
      }
      else
      {
        uint64_t v33 = 0x3E6C696E3CLL;
        unint64_t v35 = 0xE500000000000000;
      }
      v112[0] = sub_21934C764(v33, v35, (uint64_t *)v110);
      sub_2193E2C00();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_219326000, v28, v29, "Received unexpected resultCode from server: %ld, %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x21D48A390](v31, -1, -1);
      MEMORY[0x21D48A390](v30, -1, -1);
    }
    else
    {
    }
LABEL_21:
    sub_219358E88(4);
    return;
  }
  id v36 = v108;
  if (!v108 || (self, (uint64_t v37 = swift_dynamicCastObjCClass()) == 0))
  {
    id v44 = v36;
    id v45 = a2;
    id v46 = v44;
    id v47 = a2;
    uint64_t v48 = sub_2193E24D0();
    os_log_type_t v49 = sub_2193E2AE0();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      v112[0] = v51;
      *(_DWORD *)uint64_t v50 = 136315394;
      if (v36)
      {
        id v113 = v46;
        sub_2193607AC(0, &qword_267C18EA8);
        id v52 = v46;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27168);
        if (swift_dynamicCast())
        {
          uint64_t v53 = *(void **)&v110[0];
          swift_getErrorValue();
          uint64_t v54 = sub_2193E31B0();
          unint64_t v56 = v55;
        }
        else
        {
          *(void *)&v110[0] = 0;
          *((void *)&v110[0] + 1) = 0xE000000000000000;
          v112[10] = (uint64_t)v52;
          sub_2193E2E60();

          unint64_t v56 = *((void *)&v110[0] + 1);
          uint64_t v54 = *(void *)&v110[0];
        }
      }
      else
      {
        unint64_t v56 = 0xE500000000000000;
        uint64_t v54 = 0x3E6C696E3CLL;
      }
      *(void *)&v110[0] = sub_21934C764(v54, v56, v112);
      sub_2193E2C00();

      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2080;
      if (a2)
      {
        swift_getErrorValue();
        id v62 = a2;
        uint64_t v63 = sub_2193E31B0();
        unint64_t v65 = v64;
      }
      else
      {
        unint64_t v65 = 0xE500000000000000;
        uint64_t v63 = 0x3E6C696E3CLL;
      }
      *(void *)&v110[0] = sub_21934C764(v63, v65, v112);
      sub_2193E2C00();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_219326000, v48, v49, "Received unexpected response from server: %s, %s", (uint8_t *)v50, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x21D48A390](v51, -1, -1);
      MEMORY[0x21D48A390](v50, -1, -1);
    }
    else
    {
    }
    goto LABEL_21;
  }
  uint64_t v38 = (void *)v37;
  id v108 = v36;
  id v39 = objc_msgSend(v38, sel_protoResponse);
  if (!v39)
  {
    __break(1u);
    return;
  }
  uint64_t v40 = v39;
  uint64_t v41 = sub_2193E2130();
  uint64_t v43 = v42;

  v112[0] = v41;
  v112[1] = v43;
  uint64_t v111 = 0;
  memset(v110, 0, sizeof(v110));
  sub_2193E2310();
  sub_2193605D8(&qword_267C18EB0, (void (*)(uint64_t))type metadata accessor for CableResponse);
  sub_2193E2400();
  if (v18[*(int *)(v14 + 28)] != 1)
  {
    uint64_t v66 = v104;
    sub_2193606E4((uint64_t)v18, v104, type metadata accessor for CableResponse);
    unint64_t v59 = sub_2193E24D0();
    os_log_type_t v67 = sub_2193E2AE0();
    if (os_log_type_enabled(v59, v67))
    {
      unint64_t v68 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unint64_t v68 = 134217984;
      if (*(unsigned char *)(v66 + *(int *)(v14 + 28)) == 5) {
        uint64_t v69 = 0;
      }
      else {
        uint64_t v69 = *(unsigned __int8 *)(v66 + *(int *)(v14 + 28));
      }
      sub_21936074C(v66, type metadata accessor for CableResponse);
      *(void *)&v110[0] = v69;
      sub_2193E2C00();
      _os_log_impl(&dword_219326000, v59, v67, "Allocation server returned error: %ld", v68, 0xCu);
      MEMORY[0x21D48A390](v68, -1, -1);
    }
    else
    {
      sub_21936074C(v66, type metadata accessor for CableResponse);
    }
LABEL_49:

    sub_219358E88(4);
    sub_21936074C((uint64_t)v18, type metadata accessor for CableResponse);
    return;
  }
  uint64_t v57 = v106;
  sub_2193D6024(v106);
  uint64_t v58 = v107;
  if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v105 + 6))(v57, 1, v107) == 1)
  {
    sub_219360620(v57, &qword_267C18EA0);
    unint64_t v59 = sub_2193E24D0();
    os_log_type_t v60 = sub_2193E2AE0();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v61 = 0;
      _os_log_impl(&dword_219326000, v59, v60, "Couldn't decode allocation response", v61, 2u);
      MEMORY[0x21D48A390](v61, -1, -1);
    }
    goto LABEL_49;
  }
  sub_21936067C(v57, (uint64_t)v12, type metadata accessor for CableResponse.AllocationResponse);
  uint64_t v70 = v103;
  sub_2193606E4((uint64_t)v12, v103, type metadata accessor for CableResponse.AllocationResponse);
  uint64_t v71 = sub_2193E24D0();
  os_log_type_t v72 = sub_2193E2B00();
  BOOL v73 = os_log_type_enabled(v71, v72);
  long long v101 = v18;
  if (v73)
  {
    uint64_t v74 = (uint8_t *)swift_slowAlloc();
    uint64_t v75 = swift_slowAlloc();
    uint64_t v106 = v75;
    *(_DWORD *)uint64_t v74 = 136315138;
    *(void *)&v110[0] = v75;
    uint64_t v76 = (uint64_t *)(v70 + *(int *)(v58 + 20));
    uint64_t v77 = *v76;
    unint64_t v78 = v76[1];
    if (v78 >> 60 == 15) {
      uint64_t v79 = 0;
    }
    else {
      uint64_t v79 = *v76;
    }
    if (v78 >> 60 == 15) {
      unint64_t v80 = 0xC000000000000000;
    }
    else {
      unint64_t v80 = v76[1];
    }
    v105 = v74 + 4;
    sub_21934CE48(v77, v78);
    uint64_t v81 = sub_2193E2050();
    unint64_t v83 = v82;
    unint64_t v84 = v80;
    uint64_t v58 = v107;
    sub_219348A70(v79, v84);
    v112[0] = sub_21934C764(v81, v83, (uint64_t *)v110);
    sub_2193E2C00();
    swift_bridgeObjectRelease();
    sub_21936074C(v103, type metadata accessor for CableResponse.AllocationResponse);
    _os_log_impl(&dword_219326000, v71, v72, "Allocated relay with routingID: \"%s\"", v74, 0xCu);
    uint64_t v85 = v106;
    swift_arrayDestroy();
    MEMORY[0x21D48A390](v85, -1, -1);
    MEMORY[0x21D48A390](v74, -1, -1);
  }
  else
  {
    sub_21936074C(v70, type metadata accessor for CableResponse.AllocationResponse);
  }

  uint64_t v86 = v102;
  unint64_t v87 = &v12[*(int *)(v58 + 24)];
  if (v87[4])
  {
    LOWORD(v88) = 0;
LABEL_59:
    unint64_t v94 = (uint64_t *)&v12[*(int *)(v58 + 20)];
    unint64_t v95 = v94[1];
    if (v95 >> 60 == 15) {
      uint64_t v96 = 0;
    }
    else {
      uint64_t v96 = *v94;
    }
    if (v95 >> 60 == 15) {
      unint64_t v97 = 0xC000000000000000;
    }
    else {
      unint64_t v97 = v94[1];
    }
    sub_21934CE48(*v94, v95);
    uint64_t v98 = v109;
    sub_2193558E4(v96, v97, v88);
    sub_219348A70(v96, v97);
    char v99 = *(unsigned char *)(v98 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_currentState);
    *(unsigned char *)(v98 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_currentState) = 2;
    sub_2193548B8(v99);

    sub_21936074C((uint64_t)v12, type metadata accessor for CableResponse.AllocationResponse);
    sub_21936074C((uint64_t)v101, type metadata accessor for CableResponse);
    return;
  }
  int v88 = *(_DWORD *)v87;
  if (!HIWORD(*(_DWORD *)v87)) {
    goto LABEL_59;
  }
  sub_2193606E4((uint64_t)v12, v102, type metadata accessor for CableResponse.AllocationResponse);
  unint64_t v89 = sub_2193E24D0();
  os_log_type_t v90 = sub_2193E2AE0();
  if (os_log_type_enabled(v89, v90))
  {
    uint64_t v91 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v91 = 67109120;
    uint64_t v92 = v86 + *(int *)(v58 + 24);
    if (*(unsigned char *)(v92 + 4)) {
      int v93 = 0;
    }
    else {
      int v93 = *(_DWORD *)v92;
    }
    sub_21936074C(v86, type metadata accessor for CableResponse.AllocationResponse);
    LODWORD(v110[0]) = v93;
    sub_2193E2C00();
    _os_log_impl(&dword_219326000, v89, v90, "Received invalid encodedDomain: %u", v91, 8u);
    MEMORY[0x21D48A390](v91, -1, -1);
  }
  else
  {
    sub_21936074C(v86, type metadata accessor for CableResponse.AllocationResponse);
  }
  uint64_t v100 = (uint64_t)v101;

  sub_219358E88(4);
  sub_21936074C((uint64_t)v12, type metadata accessor for CableResponse.AllocationResponse);
  sub_21936074C(v100, type metadata accessor for CableResponse);
}

void sub_21935EB78(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v119 = sub_2193E26A0();
  uint64_t v118 = *(void *)(v119 - 8);
  MEMORY[0x270FA5388](v119);
  long long v117 = (char *)v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = type metadata accessor for CableRelayConnectionRequest(0);
  uint64_t v125 = *(void *)(v126 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v126);
  uint64_t v121 = (uint64_t)v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  v123 = (char *)v111 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C18E30);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v120 = (uint64_t)v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v122 = (uint64_t)v111 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v124 = (uint64_t)v111 - v13;
  uint64_t v14 = sub_2193E2320();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v127 = type metadata accessor for CableRelayPushMessage(0);
  MEMORY[0x270FA5388](v127);
  os_log_t v128 = (os_log_t)((char *)v111 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27230);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)v111 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ASCABLEAdvertisement();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  id v22 = (char *)v111 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC26F98 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_2193E24F0();
  __swift_project_value_buffer(v23, (uint64_t)qword_26AC29118);
  uint64_t v24 = sub_2193E24D0();
  os_log_type_t v25 = sub_2193E2B00();
  if (os_log_type_enabled(v24, v25))
  {
    id v26 = (uint8_t *)swift_slowAlloc();
    long long v116 = v18;
    id v27 = a1;
    uint64_t v28 = v19;
    os_log_type_t v29 = v22;
    uint64_t v30 = v26;
    *(_WORD *)id v26 = 0;
    _os_log_impl(&dword_219326000, v24, v25, "Received relay push", v26, 2u);
    uint64_t v31 = v30;
    id v22 = v29;
    uint64_t v19 = v28;
    a1 = v27;
    uint64_t v18 = v116;
    MEMORY[0x21D48A390](v31, -1, -1);
  }

  uint64_t v32 = MEMORY[0x21D48A480](v2+ OBJC_IVAR____TtCC26AuthenticationServicesCore20ASCABLEAuthenticatorP33_84AFAA0745E7F5997DD6543D9C2808DD10APSWrapper_authenticator);
  if (v32)
  {
    uint64_t v33 = (char *)v32;
    uint64_t v34 = v32 + OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_advertisement;
    swift_beginAccess();
    sub_219360574(v34, (uint64_t)v18, (uint64_t *)&unk_26AC27230);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
    {
      sub_219360620((uint64_t)v18, (uint64_t *)&unk_26AC27230);
      unint64_t v35 = sub_2193E24D0();
      os_log_type_t v36 = sub_2193E2AE0();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v37 = 0;
        _os_log_impl(&dword_219326000, v35, v36, "Unexpectedly received push without a valid advertisement", v37, 2u);
        MEMORY[0x21D48A390](v37, -1, -1);
      }

      sub_219358E88(0);
      return;
    }
    sub_21936067C((uint64_t)v18, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ASCABLEAdvertisement);
    if (a1)
    {
      long long v116 = (char *)v19;
      uint64_t v129 = 0x6675626F746F7270;
      unint64_t v130 = 0xE800000000000000;
      id v41 = a1;
      sub_2193E2D40();
      id v42 = objc_msgSend(v41, sel_userInfo);
      if (!v42)
      {
        __break(1u);
        return;
      }
      uint64_t v43 = v42;
      uint64_t v44 = sub_2193E27A0();

      if (*(void *)(v44 + 16) && (unint64_t v45 = sub_219385A58((uint64_t)v131), (v46 & 1) != 0))
      {
        sub_21934F0D8(*(void *)(v44 + 56) + 32 * v45, (uint64_t)&v133);
      }
      else
      {
        long long v133 = 0u;
        long long v134 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_2193601A4((uint64_t)v131);
      if (*((void *)&v134 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t v47 = sub_2193E2030();
          if (v48 >> 60 != 15)
          {
            unint64_t v49 = v48;
            *(void *)&long long v133 = v47;
            *((void *)&v133 + 1) = v48;
            uint64_t v132 = 0;
            memset(v131, 0, sizeof(v131));
            uint64_t v115 = v47;
            sub_21934CDF0(v47, v48);
            sub_2193E2310();
            sub_2193605D8(&qword_267C18E48, (void (*)(uint64_t))type metadata accessor for CableRelayPushMessage);
            os_log_t v50 = v128;
            uint64_t v51 = v127;
            sub_2193E2400();
            v111[1] = 0;
            unint64_t v113 = v49;
            v114 = v22;
            uint64_t v59 = (uint64_t)v50 + *(int *)(v51 + 20);
            uint64_t v60 = v124;
            sub_219360574(v59, v124, (uint64_t *)&unk_267C18E30);
            uint64_t v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48);
            uint64_t v62 = v126;
            unsigned int v63 = v61(v60, 1, v126);
            uint64_t v64 = v60;
            unint64_t v65 = v61;
            uint64_t v66 = v59;
            sub_219360620(v64, (uint64_t *)&unk_267C18E30);
            if (v63 == 1) {
              goto LABEL_41;
            }
            uint64_t v67 = v59;
            uint64_t v68 = v122;
            sub_219360574(v67, v122, (uint64_t *)&unk_267C18E30);
            if (v65(v68, 1, v62) == 1)
            {
              uint64_t v69 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
              uint64_t v70 = v123;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v123, 1, 1, v69);
              *(void *)&v70[*(int *)(v62 + 20)] = MEMORY[0x263F8EE78];
              sub_2193E22F0();
              *(_OWORD *)&v70[*(int *)(v62 + 28)] = xmmword_2193E7220;
              sub_219360620(v68, (uint64_t *)&unk_267C18E30);
            }
            else
            {
              uint64_t v70 = v123;
              sub_21936067C(v68, (uint64_t)v123, type metadata accessor for CableRelayConnectionRequest);
            }
            uint64_t v71 = *(void *)&v70[*(int *)(v62 + 20)];
            swift_bridgeObjectRetain();
            sub_21936074C((uint64_t)v70, type metadata accessor for CableRelayConnectionRequest);
            uint64_t v72 = *(void *)(v71 + 16);
            swift_bridgeObjectRelease();
            if (!v72)
            {
LABEL_41:
              uint64_t v77 = sub_2193E24D0();
              os_log_type_t v78 = sub_2193E2AE0();
              if (os_log_type_enabled(v77, v78))
              {
                uint64_t v79 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v79 = 0;
                _os_log_impl(&dword_219326000, v77, v78, "Could not read IP address for relay", v79, 2u);
                MEMORY[0x21D48A390](v79, -1, -1);
              }

              sub_219358E88(4);
              sub_21934CEB0(v115, v113);
            }
            else
            {
              uint64_t v73 = v120;
              sub_219360574(v66, v120, (uint64_t *)&unk_267C18E30);
              unsigned int v74 = v65(v73, 1, v62);
              id v112 = v41;
              if (v74 == 1)
              {
                uint64_t v75 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
                uint64_t v76 = v121;
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v121, 1, 1, v75);
                *(void *)(v76 + *(int *)(v62 + 20)) = MEMORY[0x263F8EE78];
                sub_2193E22F0();
                *(_OWORD *)(v76 + *(int *)(v62 + 28)) = xmmword_2193E7220;
                sub_219360620(v73, (uint64_t *)&unk_267C18E30);
              }
              else
              {
                uint64_t v76 = v121;
                sub_21936067C(v73, v121, type metadata accessor for CableRelayConnectionRequest);
              }
              uint64_t v80 = v127;
              uint64_t v81 = *(void *)(v76 + *(int *)(v62 + 20));
              swift_bridgeObjectRetain();
              sub_21936074C(v76, type metadata accessor for CableRelayConnectionRequest);
              uint64_t v82 = sub_2193592B8(v81);
              uint64_t v84 = v83;
              swift_bridgeObjectRelease();
              if (v84)
              {
                uint64_t v85 = *(int *)(v80 + 24);
                os_log_t v86 = v128;
                unint64_t v87 = (uint64_t *)((char *)v128 + v85);
                unint64_t v88 = v87[1];
                if (v88 >> 60 == 15)
                {
                  swift_bridgeObjectRelease();
                  unint64_t v89 = sub_2193E24D0();
                  os_log_type_t v90 = sub_2193E2AE0();
                  if (os_log_type_enabled(v89, v90))
                  {
                    uint64_t v91 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)uint64_t v91 = 0;
                    _os_log_impl(&dword_219326000, v89, v90, "Could not read access token for relay", v91, 2u);
                    MEMORY[0x21D48A390](v91, -1, -1);
                  }

                  sub_219358E88(4);
                  sub_21934CEB0(v115, v113);

                  os_log_t v92 = v86;
                  goto LABEL_56;
                }
                uint64_t v124 = *v87;
                uint64_t v127 = v82;
                uint64_t v96 = *((void *)v114 + 3);
                unint64_t v97 = *((void *)v114 + 4);
                sub_21934CE48(v124, v88);
                sub_21934CDF0(v96, v97);
                uint64_t v126 = sub_2193E2050();
                uint64_t v125 = v98;
                sub_219348A70(v96, v97);
                uint64_t v99 = v118;
                uint64_t v100 = v117;
                uint64_t v101 = v119;
                (*(void (**)(char *, uint64_t, uint64_t))(v118 + 16))(v117, *(void *)&v33[OBJC_IVAR____TtC26AuthenticationServicesCore20ASCABLEAuthenticator_cryptographyManager]+ OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_tunnelID, v119);
                sub_2193E2670();
                long long v102 = v131[0];
                v123 = (char *)sub_2193E2050();
                uint64_t v104 = v103;
                sub_219348A70(v102, *((unint64_t *)&v102 + 1));
                (*(void (**)(char *, uint64_t))(v99 + 8))(v100, v101);
                uint64_t v105 = v124;
                uint64_t v106 = sub_2193E2040();
                uint64_t v108 = v107;
                uint64_t v109 = sub_2193E1F70();
                sub_219356108(v127, v84, v126, v125, v123, v104, v106, v108, v109, v110);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_21934CEB0(v105, v88);

                swift_bridgeObjectRelease();
              }
              else
              {
                int v93 = sub_2193E24D0();
                os_log_type_t v94 = sub_2193E2AE0();
                if (os_log_type_enabled(v93, v94))
                {
                  unint64_t v95 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)unint64_t v95 = 0;
                  _os_log_impl(&dword_219326000, v93, v94, "Could not find usable IP address", v95, 2u);
                  MEMORY[0x21D48A390](v95, -1, -1);
                }

                sub_219358E88(4);
              }
              sub_21934CEB0(v115, v113);
            }
            os_log_t v92 = v128;
LABEL_56:
            sub_21936074C((uint64_t)v92, type metadata accessor for CableRelayPushMessage);
            uint64_t v58 = (uint64_t)v114;
            goto LABEL_33;
          }
        }
      }
      else
      {
        sub_219360620((uint64_t)&v133, &qword_267C18E40);
      }
      unint64_t v55 = sub_2193E24D0();
      os_log_type_t v56 = sub_2193E2AE0();
      if (os_log_type_enabled(v55, v56))
      {
        uint64_t v57 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v57 = 0;
        _os_log_impl(&dword_219326000, v55, v56, "Could not read protobuf payload", v57, 2u);
        MEMORY[0x21D48A390](v57, -1, -1);
      }

      sub_219358E88(4);
    }
    else
    {
      id v52 = sub_2193E24D0();
      os_log_type_t v53 = sub_2193E2AE0();
      if (os_log_type_enabled(v52, v53))
      {
        uint64_t v54 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v54 = 0;
        _os_log_impl(&dword_219326000, v52, v53, "Push unexpectedly had nil message", v54, 2u);
        MEMORY[0x21D48A390](v54, -1, -1);
      }

      sub_219358E88(1);
    }

    uint64_t v58 = (uint64_t)v22;
LABEL_33:
    sub_21936074C(v58, (uint64_t (*)(void))type metadata accessor for ASCABLEAdvertisement);
    return;
  }
  os_log_t v128 = (os_log_t)sub_2193E24D0();
  os_log_type_t v38 = sub_2193E2AF0();
  if (os_log_type_enabled(v128, v38))
  {
    id v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v39 = 0;
    _os_log_impl(&dword_219326000, v128, v38, "Authenticator is nil.", v39, 2u);
    MEMORY[0x21D48A390](v39, -1, -1);
  }
  os_log_t v40 = v128;
}

uint64_t sub_21935FD68(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E20);
  uint64_t v25 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  id v26 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E08);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t result = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v24 - v17;
  uint64_t v27 = result;
  if (a1)
  {
    uint64_t v19 = a2 - (void)a1 - a3;
    if (__OFSUB__(a2 - (void)a1, a3))
    {
      __break(1u);
      return result;
    }
    uint64_t v20 = &a1[a3];
    a1 = &v20[v19];
  }
  else
  {
    uint64_t v20 = 0;
  }
  sub_219360574(a4, (uint64_t)&v24 - v17, &qword_267C18E08);
  sub_219360574((uint64_t)v18, (uint64_t)v15, &qword_267C18E08);
  unint64_t v21 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v22 = swift_allocObject();
  sub_219360140((uint64_t)v18, v22 + v21, &qword_267C18E08);
  if (v20)
  {
    sub_219360574((uint64_t)v15, (uint64_t)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_267C18E08);
    sub_21935B188(&v29, v20, a1 - v20);
    uint64_t v23 = v29;
    swift_release();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v26, v15, v28);
    sub_219360528(&qword_267C18E28, &qword_267C18E20);
    sub_2193E29D0();
    swift_release();
    uint64_t v23 = v29;
  }
  sub_219360620((uint64_t)v15, &qword_267C18E08);
  return v23;
}

uint64_t sub_219360060()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C18E08) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_219360140(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2193601A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_2193601F8(uint64_t a1)
{
  sub_21935BF90(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(unsigned char *)(a1 + 216));
  return a1;
}

uint64_t sub_219360274(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_219360284(uint64_t result, unint64_t a2)
{
  uint64_t v2 = (a2 >> 60) & 3;
  if (v2)
  {
    if (v2 != 1) {
      return result;
    }
    a2 &= 0xCFFFFFFFFFFFFFFFLL;
  }
  return sub_219348A70(result, a2);
}

uint64_t sub_2193602A0()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_2193602D8(uint64_t a1, uint64_t a2)
{
  sub_219356A0C(a1, a2, v2);
}

uint64_t sub_2193602E0()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_219360328(uint64_t a1, uint64_t a2)
{
  return sub_2193B9710(a1, a2, *(void *)(v2 + 16), *(void (**)(uint64_t, uint64_t))(v2 + 24));
}

uint64_t sub_219360334(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_219360344(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_2193603AC(void *a1)
{
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_2193603CC()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_219360404(uint64_t a1, uint64_t a2)
{
  sub_219352B34(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_21936040C()
{
  unint64_t result = qword_267C18E78;
  if (!qword_267C18E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18E78);
  }
  return result;
}

uint64_t sub_219360460(uint64_t a1, uint64_t a2)
{
  long long v5 = *(_OWORD *)*(void *)(v2 + 16);
  v4[2] = &v5;
  return sub_21935A35C((uint64_t (*)(uint64_t, uint64_t))sub_2193604B8, (uint64_t)v4, a1, a2);
}

uint64_t sub_2193604B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v7 = *(uint64_t **)(v3 + 16);
  unint64_t v8 = *v7;
  unint64_t v9 = v7[1];
  sub_21934CDF0(*v7, v9);
  uint64_t result = sub_21935B428(a3, a1, a2, v8, v9);
  a3[3] = result;
  return result;
}

uint64_t sub_219360528(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_21936056C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  sub_2193556F0(a1, a2, a3, a4, v4);
}

uint64_t sub_219360574(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2193605D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_219360620(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21936067C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2193606E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21936074C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2193607AC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

double sub_2193607E8(uint64_t a1)
{
  *(void *)(a1 + 208) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(unsigned char *)(a1 + 216) = -1;
  return result;
}

uint64_t *sub_219360818(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  sub_219348A70(*a1, a1[1]);
  sub_219348A70(v2, v3);
  return a1;
}

uint64_t sub_21936087C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6174614468747561;
    }
    else {
      uint64_t v3 = 0x746D7453747461;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE800000000000000;
    }
    else {
      unint64_t v4 = 0xE700000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6174614468747561;
      }
      else {
        uint64_t v6 = 0x746D7453747461;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE800000000000000;
      }
      else {
        unint64_t v7 = 0xE700000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE300000000000000;
    uint64_t v3 = 7630182;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE300000000000000;
  if (v3 != 7630182)
  {
LABEL_21:
    char v8 = sub_2193E3140();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_219360988(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 6777953;
  }
  else {
    uint64_t v3 = 1701869940;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE300000000000000;
  }
  if (a2) {
    uint64_t v5 = 6777953;
  }
  else {
    uint64_t v5 = 1701869940;
  }
  if (a2) {
    unint64_t v6 = 0xE300000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_2193E3140();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_219360A20(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 25705;
    }
    else {
      uint64_t v3 = 0x726F70736E617274;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE200000000000000;
    }
    else {
      unint64_t v4 = 0xEA00000000007374;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 25705;
      }
      else {
        uint64_t v6 = 0x726F70736E617274;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE200000000000000;
      }
      else {
        unint64_t v7 = 0xEA00000000007374;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 1701869940;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 1701869940)
  {
LABEL_21:
    char v8 = sub_2193E3140();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_219360B1C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6572726566657270;
    }
    else {
      uint64_t v3 = 0x6172756F63736964;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE900000000000064;
    }
    else {
      unint64_t v4 = 0xEB00000000646567;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6572726566657270;
      }
      else {
        uint64_t v6 = 0x6172756F63736964;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE900000000000064;
      }
      else {
        unint64_t v7 = 0xEB00000000646567;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE800000000000000;
    uint64_t v3 = 0x6465726975716572;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE800000000000000;
  if (v3 != 0x6465726975716572)
  {
LABEL_21:
    char v8 = sub_2193E3140();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_219360C50(char a1, char a2)
{
  if (a1) {
    unint64_t v2 = 0xEC0000007465672ELL;
  }
  else {
    unint64_t v2 = 0xEF6574616572632ELL;
  }
  if (a2) {
    unint64_t v3 = 0xEC0000007465672ELL;
  }
  else {
    unint64_t v3 = 0xEF6574616572632ELL;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_2193E3140();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_219360CFC(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701869940;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1701869940;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x676E656C6C616863;
      unint64_t v3 = 0xE900000000000065;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6E696769726FLL;
      break;
    case 3:
      uint64_t v5 = 0x69724F73736F7263;
      unint64_t v3 = 0xEB000000006E6967;
      break;
    case 4:
      uint64_t v5 = 0x696769724F706F74;
      unint64_t v3 = 0xE90000000000006ELL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE900000000000065;
      if (v5 == 0x676E656C6C616863) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x6E696769726FLL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x69724F73736F7263;
      unint64_t v6 = 0xEB000000006E6967;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE90000000000006ELL;
      if (v5 != 0x696769724F706F74) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_2193E3140();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_219360ED8()
{
  sub_2193607AC(0, (unint64_t *)&qword_267C18E58);
  uint64_t v0 = (void *)sub_2193E2B60();
  uint64_t v1 = (void *)sub_2193E2B60();
  char v2 = sub_2193E2B80();

  return v2 & 1;
}

uint64_t sub_219360F54(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x74726F70707573;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x74726F70707573;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1684104562;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6574697277;
      break;
    case 3:
      uint64_t v5 = 0x6C616E696769726FLL;
      unint64_t v3 = 0xEC000000657A6953;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1684104562) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x6574697277;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEC000000657A6953;
      if (v5 == 0x6C616E696769726FLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_2193E3140();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2193610DC(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 6452085;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 6452085;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 6514286;
      break;
    case 2:
      uint64_t v5 = 6646882;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6C616E7265746E69;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x646972627968;
      break;
    case 5:
      uint64_t v5 = 0x61632D7472616D73;
      unint64_t v3 = 0xEA00000000006472;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 6514286) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      if (v5 != 6646882) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x6C616E7265746E69) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x646972627968;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xEA00000000006472;
      if (v5 != 0x61632D7472616D73) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_2193E3140();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2193612A8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x646E6F636573;
  }
  else {
    uint64_t v3 = 0x7473726966;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x646E6F636573;
  }
  else {
    uint64_t v5 = 0x7473726966;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_2193E3140();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_219361348(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000010;
  }
  else {
    unint64_t v3 = 1818326629;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0x80000002193F02F0;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000010;
  }
  else {
    unint64_t v5 = 1818326629;
  }
  if (a2) {
    unint64_t v6 = 0x80000002193F02F0;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_2193E3140();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2193613EC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xE900000000000062;
  uint64_t v3 = 0x6F6C42656772616CLL;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 6713968;
    }
    else {
      uint64_t v5 = 0x6469707061;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE300000000000000;
    }
    else {
      unint64_t v6 = 0xE500000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x6F6C42656772616CLL;
  unint64_t v6 = 0xE900000000000062;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 6713968;
    }
    else {
      uint64_t v3 = 0x6469707061;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE300000000000000;
    }
    else {
      unint64_t v2 = 0xE500000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_2193E3140();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2193614F0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 6713968;
  }
  else {
    uint64_t v3 = 0x6F6C42656772616CLL;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000062;
  }
  else {
    unint64_t v4 = 0xE300000000000000;
  }
  if (a2) {
    uint64_t v5 = 6713968;
  }
  else {
    uint64_t v5 = 0x6F6C42656772616CLL;
  }
  if (a2) {
    unint64_t v6 = 0xE300000000000000;
  }
  else {
    unint64_t v6 = 0xE900000000000062;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_2193E3140();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_219361594(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 1701602409;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 1701602409;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000010;
      unint64_t v6 = "allocatingServer";
      goto LABEL_5;
    case 2:
      char v7 = "listeningForRelayPush";
      goto LABEL_7;
    case 3:
      unint64_t v5 = 0xD00000000000001ALL;
      unint64_t v6 = "performingInitialHandshake";
LABEL_5:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    case 4:
      char v7 = "connectionEstablished";
LABEL_7:
      unint64_t v3 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000015;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xD000000000000010;
      unint64_t v9 = "allocatingServer";
      goto LABEL_12;
    case 2:
      uint64_t v10 = "listeningForRelayPush";
      goto LABEL_16;
    case 3:
      unint64_t v2 = 0xD00000000000001ALL;
      unint64_t v9 = "performingInitialHandshake";
LABEL_12:
      unint64_t v8 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      goto LABEL_13;
    case 4:
      uint64_t v10 = "connectionEstablished";
LABEL_16:
      unint64_t v8 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      if (v5 == 0xD000000000000015) {
        goto LABEL_17;
      }
      goto LABEL_19;
    default:
LABEL_13:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_17:
      if (v3 == v8) {
        char v11 = 1;
      }
      else {
LABEL_19:
      }
        char v11 = sub_2193E3140();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v11 & 1;
  }
}

uint64_t sub_21936172C(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 25453;
  }
  else {
    uint64_t v2 = 24935;
  }
  if (a2) {
    uint64_t v3 = 25453;
  }
  else {
    uint64_t v3 = 24935;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_2193E3140();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_219361794(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000011;
  unint64_t v3 = 0x80000002193F0180;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000011;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000012;
      unint64_t v6 = "bluetoothOnAndIdle";
      goto LABEL_10;
    case 2:
      unint64_t v5 = 0xD00000000000001ALL;
      unint64_t v6 = "waitingForBluetoothPowerOn";
      goto LABEL_10;
    case 3:
      unint64_t v5 = 0xD000000000000022;
      unint64_t v6 = "listeningForBluetoothAdvertisement";
      goto LABEL_10;
    case 4:
      unint64_t v5 = 0xD000000000000010;
      unint64_t v6 = "openingWebSocket";
      goto LABEL_10;
    case 5:
      unint64_t v5 = 0xD00000000000001ALL;
      unint64_t v6 = "performingInitialHandshake";
      goto LABEL_10;
    case 6:
      unint64_t v5 = 0xD000000000000020;
      unint64_t v6 = "listeningForPostHandshakeMessage";
      goto LABEL_10;
    case 7:
      unint64_t v5 = 0xD000000000000015;
      unint64_t v6 = "connectionEstablished";
      goto LABEL_10;
    case 8:
      unint64_t v6 = "transactionFailed";
LABEL_10:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000002193F0180;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xD000000000000012;
      unint64_t v8 = "bluetoothOnAndIdle";
      goto LABEL_20;
    case 2:
      unint64_t v2 = 0xD00000000000001ALL;
      unint64_t v8 = "waitingForBluetoothPowerOn";
      goto LABEL_20;
    case 3:
      unint64_t v2 = 0xD000000000000022;
      unint64_t v8 = "listeningForBluetoothAdvertisement";
      goto LABEL_20;
    case 4:
      unint64_t v2 = 0xD000000000000010;
      unint64_t v8 = "openingWebSocket";
      goto LABEL_20;
    case 5:
      unint64_t v2 = 0xD00000000000001ALL;
      unint64_t v8 = "performingInitialHandshake";
      goto LABEL_20;
    case 6:
      unint64_t v2 = 0xD000000000000020;
      unint64_t v8 = "listeningForPostHandshakeMessage";
      goto LABEL_20;
    case 7:
      unint64_t v2 = 0xD000000000000015;
      unint64_t v8 = "connectionEstablished";
      goto LABEL_20;
    case 8:
      unint64_t v8 = "transactionFailed";
LABEL_20:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_2193E3140();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

void sub_2193619B0()
{
  sub_2193607AC(0, (unint64_t *)&qword_267C18E58);
  id v0 = (id)sub_2193E2B60();
  sub_2193E2B90();
}

uint64_t sub_219361A2C()
{
  sub_2193E28D0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_219361B08()
{
  sub_2193E28D0();

  return swift_bridgeObjectRelease();
}

void sub_219361C24(uint64_t a1)
{
}

void sub_219361C38(uint64_t a1)
{
}

void sub_219361C4C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = sub_21935B74C(a2);
  unint64_t v6 = v5;
  unint64_t v7 = (void *)sub_2193E2110();
  id v8 = objc_msgSend(self, sel_UUIDWithData_, v7);
  sub_219348A70(v4, v6);

  *a3 = v8;
}

unint64_t ASCABLEClient.ClientError.init(rawValue:)(unint64_t a1)
{
  return sub_219367038(a1);
}

unint64_t static ASCABLEClient.ClientError._nsErrorDomain.getter()
{
  return 0xD000000000000034;
}

uint64_t sub_219361D0C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_21936A30C();

  return MEMORY[0x270EEEA70](a1, a2, v4);
}

unint64_t sub_219361D58@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_219367038(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_219361D8C(uint64_t a1)
{
  unint64_t v2 = sub_21936A30C();

  return MEMORY[0x270EEEA80](a1, v2);
}

uint64_t sub_219361DC8(uint64_t a1)
{
  unint64_t v2 = sub_21936A30C();

  return MEMORY[0x270EEEA78](a1, v2);
}

unint64_t sub_219361E04()
{
  return 0xD000000000000034;
}

uint64_t sub_219361E20(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_21936A30C();

  return MEMORY[0x270EEEA68](a1, a2, v4);
}

BOOL ASCABLEClient.OperationType.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

uint64_t sub_219361E98()
{
  return sub_2193E3230();
}

uint64_t sub_219361EE0()
{
  return sub_2193E3220();
}

uint64_t sub_219361F0C()
{
  return sub_2193E3230();
}

void *sub_219361F50@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 1 && *result != 0;
  *(void *)a2 = *result == 1;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2193620A4@<X0>(uint64_t a1@<X8>)
{
  return sub_219371058(a1);
}

uint64_t ASCABLEClient.__allocating_init(delegate:isRegistrationRequest:)(uint64_t a1, int a2)
{
  id v5 = objc_allocWithZone(v2);
  return ASCABLEClient.init(delegate:isRegistrationRequest:)(a1, a2);
}

uint64_t ASCABLEClient.init(delegate:isRegistrationRequest:)(uint64_t a1, int a2)
{
  uint64_t v35 = a1;
  int v34 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27188);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v33 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27190);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2193E2760();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2193E26C0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_2193E26A0();
  uint64_t v15 = *(void *)(v32 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v32);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v31 - v19;
  if (qword_26AC26F80 != -1) {
    swift_once();
  }
  uint64_t v21 = __swift_project_value_buffer(v11, (uint64_t)qword_26AC27258);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v21, v11);
  sub_2193E2690();
  sub_2193E2750();
  uint64_t v22 = v32;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v32);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v6, v10, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  uint64_t v23 = sub_2193E2730();
  uint64_t v24 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v33, 1, 1, v23);
  type metadata accessor for ASCABLECryptographyManager();
  swift_allocObject();
  uint64_t v25 = sub_21936A724((uint64_t)v18, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v22);
  id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEF00]), sel_init);
  uint64_t v27 = (objc_class *)type metadata accessor for ASCABLEClient();
  memset(v36, 0, sizeof(v36));
  uint64_t v37 = 0;
  id v28 = objc_allocWithZone(v27);
  uint64_t v29 = sub_219367094(v35, v25, v26, (uint64_t)v36, v34 & 1);
  swift_unknownObjectRelease();
  swift_release();

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v29;
}

id sub_219362630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (void *)(v5 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentRelyingPartyIdentifier);
  *uint64_t v9 = a2;
  v9[1] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = v5 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentOperationType;
  *(void *)uint64_t v10 = a1;
  *(unsigned char *)(v10 + 8) = 0;
  uint64_t v11 = (void *)(v5 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_completionHandler);
  uint64_t v12 = *(void *)(v5 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_completionHandler);
  void *v11 = a4;
  v11[1] = a5;
  swift_retain();
  sub_219360334(v12);
  sub_219362DB8();
  uint64_t v13 = *(void **)(v5 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_powerLogger);

  return objc_msgSend(v13, sel_logAuthenticationStartedEventIfNeeded);
}

void sub_2193627B4()
{
}

unint64_t sub_21936280C(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 3:
      unint64_t result = 0xD000000000000022;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 6:
      unint64_t result = 0xD000000000000020;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2193628F4(unsigned __int8 *a1, char *a2)
{
  return sub_219361794(*a1, *a2);
}

uint64_t sub_219362900()
{
  return sub_2193E3230();
}

uint64_t sub_219362948()
{
  return sub_219361B08();
}

uint64_t sub_219362950()
{
  return sub_2193E3230();
}

uint64_t sub_219362994@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_219367B50();
  *a1 = result;
  return result;
}

unint64_t sub_2193629C4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_21936280C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_2193629F0(char a1)
{
  if (qword_26AC26F98 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_2193E24F0();
  __swift_project_value_buffer(v3, (uint64_t)qword_26AC29118);
  uint64_t v15 = v1;
  unint64_t v4 = sub_2193E24D0();
  os_log_type_t v5 = sub_2193E2AC0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = 0xD000000000000011;
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v16 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    unint64_t v9 = 0x80000002193F0180;
    uint64_t v10 = v8;
    uint64_t v11 = 0xD000000000000011;
    switch(a1)
    {
      case 1:
        uint64_t v11 = 0xD000000000000012;
        uint64_t v12 = "bluetoothOnAndIdle";
        goto LABEL_16;
      case 2:
        uint64_t v11 = 0xD00000000000001ALL;
        uint64_t v12 = "waitingForBluetoothPowerOn";
        goto LABEL_16;
      case 3:
        uint64_t v11 = 0xD000000000000022;
        uint64_t v12 = "listeningForBluetoothAdvertisement";
        goto LABEL_16;
      case 4:
        uint64_t v11 = 0xD000000000000010;
        uint64_t v12 = "openingWebSocket";
        goto LABEL_16;
      case 5:
        uint64_t v11 = 0xD00000000000001ALL;
        uint64_t v12 = "performingInitialHandshake";
        goto LABEL_16;
      case 6:
        uint64_t v11 = 0xD000000000000020;
        uint64_t v12 = "listeningForPostHandshakeMessage";
        goto LABEL_16;
      case 7:
        uint64_t v11 = 0xD000000000000015;
        uint64_t v12 = "connectionEstablished";
        goto LABEL_16;
      case 8:
        uint64_t v12 = "transactionFailed";
LABEL_16:
        unint64_t v9 = (unint64_t)(v12 - 32) | 0x8000000000000000;
        break;
      default:
        break;
    }
    sub_21934C764(v11, v9, &v16);
    sub_2193E2C00();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    unint64_t v13 = 0x80000002193F0180;
    switch(v15[OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentState])
    {
      case 1:
        uint64_t v6 = 0xD000000000000012;
        uint64_t v14 = "bluetoothOnAndIdle";
        goto LABEL_26;
      case 2:
        uint64_t v6 = 0xD00000000000001ALL;
        uint64_t v14 = "waitingForBluetoothPowerOn";
        goto LABEL_26;
      case 3:
        uint64_t v6 = 0xD000000000000022;
        uint64_t v14 = "listeningForBluetoothAdvertisement";
        goto LABEL_26;
      case 4:
        uint64_t v6 = 0xD000000000000010;
        uint64_t v14 = "openingWebSocket";
        goto LABEL_26;
      case 5:
        uint64_t v6 = 0xD00000000000001ALL;
        uint64_t v14 = "performingInitialHandshake";
        goto LABEL_26;
      case 6:
        uint64_t v6 = 0xD000000000000020;
        uint64_t v14 = "listeningForPostHandshakeMessage";
        goto LABEL_26;
      case 7:
        uint64_t v6 = 0xD000000000000015;
        uint64_t v14 = "connectionEstablished";
        goto LABEL_26;
      case 8:
        uint64_t v14 = "transactionFailed";
LABEL_26:
        unint64_t v13 = (unint64_t)(v14 - 32) | 0x8000000000000000;
        break;
      default:
        break;
    }
    sub_21934C764(v6, v13, &v16);
    sub_2193E2C00();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_219326000, v4, v5, "Changing caBLE client state from %s to %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x21D48A390](v10, -1, -1);
    MEMORY[0x21D48A390](v7, -1, -1);
  }
  else
  {
  }
}

void sub_219362DB8()
{
  uint64_t v1 = OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentState;
  switch(*(unsigned char *)(v0 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentState))
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      goto LABEL_2;
    case 8:
      if (0x80000002193F0260 == 0x80000002193F0180) {
        goto LABEL_11;
      }
LABEL_2:
      char v2 = sub_2193E3140();
      swift_bridgeObjectRelease();
      if (v2) {
        goto LABEL_12;
      }
      char v3 = *(unsigned char *)(v0 + v1);
      *(unsigned char *)(v0 + v1) = 3;
      sub_2193629F0(v3);
      unint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_bluetoothManager);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C19010);
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_2193E7550;
      if (qword_267C18990 != -1) {
        swift_once();
      }
      uint64_t v6 = (void *)qword_267C29580;
      *(void *)(v5 + 32) = qword_267C29580;
      uint64_t v7 = qword_267C18998;
      id v8 = v6;
      if (v7 != -1) {
        swift_once();
      }
      unint64_t v9 = (void *)qword_267C29588;
      *(void *)(v5 + 40) = qword_267C29588;
      sub_2193E2A20();
      sub_2193607AC(0, &qword_267C19018);
      id v10 = v9;
      id v12 = (id)sub_2193E2A00();
      swift_bridgeObjectRelease();
      objc_msgSend(v4, sel_scanForPeripheralsWithServices_options_, v12, 0);

      break;
    default:
LABEL_11:
      swift_bridgeObjectRelease();
LABEL_12:
      char v11 = *(unsigned char *)(v0 + v1);
      *(unsigned char *)(v0 + v1) = 2;
      sub_2193629F0(v11);
      break;
  }
}

void sub_219363080(void *a1)
{
  uint64_t v2 = v1;
  if (qword_26AC26F98 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_2193E24F0();
  __swift_project_value_buffer(v4, (uint64_t)qword_26AC29118);
  id v5 = a1;
  uint64_t v6 = sub_2193E24D0();
  os_log_type_t v7 = sub_2193E2AC0();
  id v8 = &selRef_extensionSupportsConditionalPasskeyRegistration_;
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v9 = swift_slowAlloc();
    id v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412546;
    id v11 = v5;
    sub_2193E2C00();
    void *v10 = v5;

    *(_WORD *)(v9 + 12) = 2048;
    objc_msgSend(v11, sel_state);

    sub_2193E2C00();
    _os_log_impl(&dword_219326000, v6, v7, "%@ changed state to %ld", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27170);
    swift_arrayDestroy();
    MEMORY[0x21D48A390](v10, -1, -1);
    uint64_t v12 = v9;
    id v8 = &selRef_extensionSupportsConditionalPasskeyRegistration_;
    MEMORY[0x21D48A390](v12, -1, -1);
  }
  else
  {
  }
  id v13 = [v5 v8[289]];
  uint64_t v14 = OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentState;
  char v15 = *(unsigned char *)(v2 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentState);
  if (v13 == (id)5)
  {
    switch(*(unsigned char *)(v2 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentState))
    {
      case 2:
        goto LABEL_13;
      case 5:
        if (0x80000002193F0140 != 0x80000002193F01C0) {
          goto LABEL_10;
        }
LABEL_13:
        swift_bridgeObjectRelease();
        goto LABEL_14;
      default:
LABEL_10:
        char v17 = sub_2193E3140();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0)
        {
          char v16 = *(unsigned char *)(v2 + v14);
          *(unsigned char *)(v2 + v14) = 1;
          goto LABEL_12;
        }
LABEL_14:
        sub_219362DB8();
        break;
    }
  }
  else
  {
    *(unsigned char *)(v2 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentState) = 0;
    char v16 = v15;
LABEL_12:
    sub_2193629F0(v16);
  }
}

void sub_219363454(uint64_t a1, void *a2)
{
}

void sub_2193634CC(uint64_t a1, void *a2, uint64_t a3)
{
}

void sub_2193634D8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = a3 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x21D48A480](v5);
  if (v6)
  {
    os_log_type_t v7 = v6;
    if (a2 && (a1 == 0x6261632E6F646966 && a2 == 0xEA0000000000656CLL || (sub_2193E3140() & 1) != 0))
    {
      sub_2193638AC();
    }
    else
    {
      if (qword_26AC26F98 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_2193E24F0();
      __swift_project_value_buffer(v11, (uint64_t)qword_26AC29118);
      swift_bridgeObjectRetain_n();
      uint64_t v12 = sub_2193E24D0();
      os_log_type_t v13 = sub_2193E2AE0();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        uint64_t v17 = v15;
        *(_DWORD *)uint64_t v14 = 136315138;
        if (a2)
        {
          unint64_t v16 = a2;
        }
        else
        {
          a1 = 7104878;
          unint64_t v16 = 0xE300000000000000;
        }
        swift_bridgeObjectRetain();
        sub_21934C764(a1, v16, &v17);
        sub_2193E2C00();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_219326000, v12, v13, "Received socket connection with unexpected protocol: %s", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x21D48A390](v15, -1, -1);
        MEMORY[0x21D48A390](v14, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_219367648(0);
    }
  }
  else
  {
    if (qword_26AC26F98 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_2193E24F0();
    __swift_project_value_buffer(v8, (uint64_t)qword_26AC29118);
    os_log_type_t v7 = sub_2193E24D0();
    os_log_type_t v9 = sub_2193E2B00();
    if (os_log_type_enabled(v7, v9))
    {
      id v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v10 = 0;
      _os_log_impl(&dword_219326000, v7, v9, "Client was deinitialized while waiting for initial connection.", v10, 2u);
      MEMORY[0x21D48A390](v10, -1, -1);
    }
  }
}

void sub_2193638AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2193E2B30();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27230);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ASCABLEAdvertisement();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v1 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_authenticatorAdvertisement;
  swift_beginAccess();
  sub_219360574(v13, (uint64_t)v8, (uint64_t *)&unk_26AC27230);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_219360620((uint64_t)v8, (uint64_t *)&unk_26AC27230);
    if (qword_26AC26F98 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_2193E24F0();
    __swift_project_value_buffer(v14, (uint64_t)qword_26AC29118);
    uint64_t v15 = sub_2193E24D0();
    os_log_type_t v16 = sub_2193E2AE0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_219326000, v15, v16, "Unexpectedly tried to perform initial handshake without an advertisement", v17, 2u);
      MEMORY[0x21D48A390](v17, -1, -1);
    }

    sub_219367648(0);
  }
  else
  {
    sub_2193698C8((uint64_t)v8, (uint64_t)v12);
    uint64_t v18 = *(void **)(v1 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_webSocket);
    if (v18)
    {
      uint64_t v38 = v3;
      char v19 = *(unsigned char *)(v1 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentState);
      *(unsigned char *)(v1 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentState) = 5;
      uint64_t v20 = v18;
      sub_2193629F0(v19);
      uint64_t v21 = (uint64_t *)&v12[*(int *)(v9 + 32)];
      uint64_t v22 = *v21;
      unint64_t v23 = v21[1];
      sub_21934CDF0(*v21, v23);
      uint64_t v24 = sub_21936BBDC(v22, v23);
      unint64_t v26 = v25;
      sub_219348A70(v22, v23);
      uint64_t v27 = sub_21936BDA4(v24, v26);
      v37[1] = *(void *)&v20[OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_webSocketTask];
      *uint64_t v5 = v27;
      v5[1] = v32;
      unint64_t v33 = v32;
      v37[0] = v32;
      uint64_t v34 = v38;
      uint64_t v35 = v27;
      (*(void (**)(uint64_t *, void, uint64_t))(v38 + 104))(v5, *MEMORY[0x263F07CB8], v2);
      *(void *)(swift_allocObject() + 16) = v20;
      os_log_type_t v36 = v20;
      sub_21934CDF0(v35, v33);
      sub_2193E2B20();
      swift_release();
      (*(void (**)(uint64_t *, uint64_t))(v34 + 8))(v5, v2);

      sub_219348A70(v35, v37[0]);
      sub_219348A70(v24, v26);
    }
    else
    {
      if (qword_26AC26F98 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_2193E24F0();
      __swift_project_value_buffer(v28, (uint64_t)qword_26AC29118);
      uint64_t v29 = sub_2193E24D0();
      os_log_type_t v30 = sub_2193E2AE0();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v31 = 0;
        _os_log_impl(&dword_219326000, v29, v30, "Unexpectedly tried to perform initial handshake without web socket", v31, 2u);
        MEMORY[0x21D48A390](v31, -1, -1);
      }

      sub_219367648(0);
    }
    sub_21936992C((uint64_t)v12);
  }
}

void sub_219363F1C()
{
  sub_21936CF44();
  char v1 = *(unsigned char *)(v0 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentState);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentState) = 6;

  sub_2193629F0(v1);
}

void sub_219364120(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_2193E2B30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)(v3 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_webSocket);
  if (v10)
  {
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentOperationType + 8))
    {
      uint64_t v11 = qword_26AC26F98;
      id v64 = v10;
      if (v11 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_2193E24F0();
      __swift_project_value_buffer(v12, (uint64_t)qword_26AC29118);
      uint64_t v13 = sub_2193E24D0();
      os_log_type_t v14 = sub_2193E2AE0();
      if (!os_log_type_enabled(v13, v14)) {
        goto LABEL_22;
      }
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      os_log_type_t v16 = "Unexpectedly received postHandshake message without a current operation.";
LABEL_21:
      _os_log_impl(&dword_219326000, v13, v14, v16, v15, 2u);
      MEMORY[0x21D48A390](v15, -1, -1);
LABEL_22:

      sub_219367648(0);
      os_log_type_t v30 = v64;

      return;
    }
    unint64_t v21 = *(void *)(v3 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentOperationType);
    uint64_t v22 = MEMORY[0x21D48A480](v3 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_delegate);
    if (!v22)
    {
      uint64_t v28 = qword_26AC26F98;
      id v64 = v10;
      if (v28 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_2193E24F0();
      __swift_project_value_buffer(v29, (uint64_t)qword_26AC29118);
      uint64_t v13 = sub_2193E24D0();
      os_log_type_t v14 = sub_2193E2AE0();
      if (!os_log_type_enabled(v13, v14)) {
        goto LABEL_22;
      }
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      os_log_type_t v16 = "Delegate no longer exists.";
      goto LABEL_21;
    }
    unint64_t v23 = (void *)v22;
    uint64_t v24 = *(void *)(v3 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_cryptographyManager);
    id v25 = v10;
    sub_21936D610(a1, a2, (uint64_t)v69);
    id v64 = v25;
    long long v77 = v72;
    long long v78 = v73;
    uint64_t v79 = v74;
    long long v75 = v70;
    long long v76 = v71;
    uint64_t v26 = sub_21938795C();
    id v63 = v23;
    if (v21)
    {
      if (v21 != 1)
      {
LABEL_32:
        uint64_t v65 = v21;
        swift_bridgeObjectRetain();
        sub_2193E3150();
        __break(1u);
        return;
      }
      uint64_t v27 = &selRef_encodeGetAssertionCTAPCommandForAuthenticatorWithUserVerificationAvailability_authenticatorSupportedExtensions_;
    }
    else
    {
      uint64_t v27 = &selRef_encodeMakeCredentialCTAPCommandForAuthenticatorWithUserVerificationAvailability_authenticatorSupportedExtensions_;
    }
    uint64_t v62 = v24;
    swift_bridgeObjectRetain();
    uint64_t v31 = (void *)sub_2193E2A00();
    swift_bridgeObjectRelease();
    id v32 = objc_msgSend(v63, *v27, v26, v31);

    id v33 = objc_msgSend(v32, sel_first);
    uint64_t v34 = sub_2193E2130();
    unint64_t v21 = v35;

    os_log_type_t v36 = (uint64_t *)(v3 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_clientDataJSON);
    uint64_t v37 = *(void *)(v3 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_clientDataJSON);
    unint64_t v38 = *(void *)(v3 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_clientDataJSON + 8);
    uint64_t *v36 = v34;
    v36[1] = v21;
    sub_21934CEB0(v37, v38);
    id v61 = v32;
    id v39 = objc_msgSend(v32, sel_second);
    if (v39)
    {
      os_log_t v40 = v39;
      uint64_t v41 = sub_2193E2130();
      unint64_t v43 = v42;

      char v44 = *(unsigned char *)(v3 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentState);
      *(unsigned char *)(v3 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentState) = 7;
      sub_2193629F0(v44);
      objc_msgSend(v63, sel_cableClientWillAuthenticate_, v3);
      sub_21934CDF0(v41, v43);
      sub_21934CDF0(v41, v43);
      uint64_t v45 = sub_21935B74C((uint64_t)&unk_26CAB4650);
      unint64_t v47 = v46;
      uint64_t v65 = v45;
      unint64_t v66 = v46;
      sub_21934CDF0(v41, v43);
      sub_21934CDF0(v45, v47);
      sub_21935AB18(v41, v43);
      sub_219348A70(v41, v43);
      sub_219348A70(v45, v47);
      unint64_t v60 = v43;
      sub_219348A70(v41, v43);
      uint64_t v48 = v65;
      unint64_t v21 = v66;
      uint64_t v58 = sub_21936EF7C(v65, v66);
      uint64_t v67 = v58;
      unint64_t v59 = v49;
      unint64_t v68 = v49;
      uint64_t v50 = v62 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_noiseTransportCipher;
      swift_beginAccess();
      uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC270F0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 48))(v50, 1, v51) != 1)
      {
        sub_21935B908();
        uint64_t v52 = sub_2193E2540();
        unint64_t v54 = v53;
        swift_endAccess();
        sub_219348A70(v48, v21);
        sub_219348A70(v58, v59);
        unint64_t v55 = v60;
        sub_219348A70(v41, v60);
        os_log_type_t v56 = v64;
        *uint64_t v9 = v52;
        v9[1] = v54;
        (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F07CB8], v6);
        *(void *)(swift_allocObject() + 16) = v56;
        id v57 = v56;
        sub_21934CDF0(v52, v54);
        sub_2193E2B20();
        swift_release();
        (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);

        sub_219348A70(v41, v55);
        sub_219348A70(v52, v54);
        swift_unknownObjectRelease();
        sub_219369840(v69);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_32;
  }
  if (qword_26AC26F98 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_2193E24F0();
  __swift_project_value_buffer(v17, (uint64_t)qword_26AC29118);
  uint64_t v18 = sub_2193E24D0();
  os_log_type_t v19 = sub_2193E2AE0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_219326000, v18, v19, "Unexpectedly received posthandshake message without a valid websocket.", v20, 2u);
    MEMORY[0x21D48A390](v20, -1, -1);
  }

  sub_219367648(0);
}

void sub_219364B14(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_21936D360(a1, a2, 1);
  uint64_t v5 = v3;
  unint64_t v6 = v4;
  uint64_t v7 = (v4 >> 60) & 3;
  if (!v7)
  {
    unint64_t v12 = *(void *)(v2 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_clientDataJSON + 8);
    if (v12 >> 60 == 15
      || (*(unsigned char *)(v2 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentOperationType + 8) & 1) != 0)
    {
      sub_21934CDF0(v3, v4);
      if (qword_26AC26F98 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_2193E24F0();
      __swift_project_value_buffer(v13, (uint64_t)qword_26AC29118);
      os_log_type_t v14 = sub_2193E24D0();
      os_log_type_t v15 = sub_2193E2AE0();
      if (os_log_type_enabled(v14, v15))
      {
        os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v16 = 0;
        _os_log_impl(&dword_219326000, v14, v15, "Missing clientDataJSON or current operation type", v16, 2u);
        MEMORY[0x21D48A390](v16, -1, -1);
      }

      sub_219367648(0);
      sub_219360284(v5, v6);
    }
    else
    {
      uint64_t v21 = *(void *)(v2 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_clientDataJSON);
      uint64_t v22 = *(void *)(v2 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentOperationType);
      sub_219369824(v3, v4);
      sub_21934CE48(v21, v12);
      sub_2193653D0(v5, v6, v21, v12, v22);
      sub_219360284(v5, v6);
      sub_21934CEB0(v21, v12);
    }
    goto LABEL_23;
  }
  if (v7 == 1)
  {
    if (qword_26AC26F98 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_2193E24F0();
    __swift_project_value_buffer(v8, (uint64_t)qword_26AC29118);
    uint64_t v9 = sub_2193E24D0();
    os_log_type_t v10 = sub_2193E2B00();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_219326000, v9, v10, "Received unsupported caBLE update message. Dropping.", v11, 2u);
      MEMORY[0x21D48A390](v11, -1, -1);
    }

LABEL_23:
    sub_219360284(v5, v6);
    return;
  }
  if (qword_26AC26F98 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_2193E24F0();
  __swift_project_value_buffer(v17, (uint64_t)qword_26AC29118);
  uint64_t v18 = sub_2193E24D0();
  os_log_type_t v19 = sub_2193E2AE0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_219326000, v18, v19, "Unexpectedly received shutdown from authenticator.", v20, 2u);
    MEMORY[0x21D48A390](v20, -1, -1);
  }

  sub_219367648(0);
}

void sub_219365060()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2193E2B30();
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  MEMORY[0x270FA5388](v2);
  unint64_t v4 = (uint64_t *)((char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_cryptographyManager);
  uint64_t v6 = sub_21935B74C((uint64_t)&unk_26CAB4678);
  unint64_t v8 = v7;
  uint64_t v9 = sub_21936EF7C(v6, v7);
  unint64_t v11 = v10;
  uint64_t v23 = v9;
  unint64_t v24 = v10;
  uint64_t v12 = v5 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_noiseTransportCipher;
  swift_beginAccess();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC270F0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13) == 1)
  {
    __break(1u);
  }
  else
  {
    sub_21935B908();
    uint64_t v14 = sub_2193E2540();
    unint64_t v16 = v15;
    swift_endAccess();
    sub_219348A70(v6, v8);
    sub_219348A70(v9, v11);
    uint64_t v17 = *(void **)(v1 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_webSocket);
    if (v17)
    {
      uint64_t *v4 = v14;
      v4[1] = v16;
      uint64_t v19 = v21;
      uint64_t v18 = v22;
      (*(void (**)(uint64_t *, void, uint64_t))(v21 + 104))(v4, *MEMORY[0x263F07CB8], v22);
      *(void *)(swift_allocObject() + 16) = v17;
      id v20 = v17;
      sub_21934CDF0(v14, v16);
      sub_2193E2B20();
      swift_release();
      (*(void (**)(uint64_t *, uint64_t))(v19 + 8))(v4, v18);
      sub_219348A70(v14, v16);
    }
    else
    {
      sub_219348A70(v14, v16);
    }
  }
}

void sub_2193653D0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  if (!*(void *)(v5 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentRelyingPartyIdentifier + 8))
  {
    if (qword_26AC26F98 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_2193E24F0();
    __swift_project_value_buffer(v15, (uint64_t)qword_26AC29118);
    unint64_t v16 = sub_2193E24D0();
    os_log_type_t v17 = sub_2193E2AE0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_219326000, v16, v17, "Unexpectedly received authenticator response without a relying party identifier.", v18, 2u);
      MEMORY[0x21D48A390](v18, -1, -1);
    }

    uint64_t v13 = 0;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  sub_21934CDF0(a1, a2);
  uint64_t v12 = sub_21936A57C(a1, a2);
  sub_219348A70(a1, a2);
  if ((v12 & 0x100) == 0 && sub_2193AEA8C(v12) == 3)
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = 5;
LABEL_12:
    sub_219367648(v13);
    return;
  }
  if (a5 == 1)
  {
    uint64_t v91 = a3;
    unint64_t v93 = a4;
    sub_21934CDF0(a1, a2);
    sub_21934CDF0(a1, a2);
    sub_21934CDF0(a1, a2);
    sub_21936E4F4(1, a1, a2, (uint64_t *)&v97);
    long long v14 = v97;
    sub_2193E2230();
    swift_allocObject();
    sub_2193E2220();
    sub_2193693BC();
    sub_2193E2200();
    sub_219348A70(v14, *((unint64_t *)&v14 + 1));
    swift_release();
    long long v19 = v120;
    long long v20 = v121;
    unint64_t v86 = v123;
    uint64_t v89 = *((void *)&v122 + 1);
    long long v21 = v124;
    uint64_t v60 = v122;
    uint64_t v76 = v125;
    uint64_t v79 = *((void *)&v123 + 1);
    unint64_t v81 = v126;
    uint64_t v84 = *((void *)&v125 + 1);
    uint64_t v59 = *((void *)&v126 + 1);
    long long v119 = *(_OWORD *)&v127[8];
    uint64_t v22 = *(void *)v127;
    uint64_t v68 = v128;
    uint64_t v69 = *(void *)&v127[24];
    uint64_t v66 = v130;
    uint64_t v67 = v129;
    uint64_t v65 = v131;
    uint64_t v62 = v133;
    uint64_t v63 = v132;
    uint64_t v72 = v135;
    uint64_t v74 = v134;
    uint64_t v70 = v137;
    uint64_t v71 = v136;
    int v23 = v138;
    sub_21934CDF0(a1, a2);
    a5 = sub_21936A57C(a1, a2);
    sub_219348A70(a1, a2);
    if ((a5 & 0x100) == 0)
    {
      sub_219348A70(a1, a2);
      char v58 = a5;
      LOBYTE(v113) = a5;
      *((void *)&v113 + 1) = a1;
      *(void *)v114 = a2;
      *(_OWORD *)&v114[8] = v19;
      uint64_t v64 = v20;
      *(_OWORD *)&v114[24] = v20;
      *(void *)&v114[40] = v60;
      *(void *)&v114[48] = v89;
      *(void *)&v114[56] = v86;
      *(void *)&v114[64] = v79;
      *(_OWORD *)&v114[72] = v21;
      *(void *)&v114[88] = v76;
      *(void *)&v114[96] = v84;
      *(void *)&v114[104] = v81;
      *(void *)&v114[112] = v59;
      *(void *)&v114[120] = v22;
      *(_OWORD *)&v114[128] = v119;
      *(void *)&v114[144] = v69;
      *(void *)&v114[152] = v68;
      *(void *)&long long v115 = v67;
      *((void *)&v115 + 1) = v66;
      *(void *)&long long v116 = v65;
      *((void *)&v116 + 1) = v63;
      *(void *)&long long v117 = v62;
      *((void *)&v117 + 1) = v74;
      *(void *)uint64_t v118 = v72;
      *(void *)&v118[8] = v71;
      *(void *)&v118[16] = v70;
      v118[24] = v23;
      long long v150 = v115;
      long long v149 = *(_OWORD *)&v114[144];
      long long v148 = v119;
      long long v147 = *(_OWORD *)&v114[112];
      long long v142 = *(_OWORD *)&v114[32];
      long long v141 = *(_OWORD *)&v114[16];
      long long v140 = *(_OWORD *)v114;
      long long v139 = v113;
      long long v146 = *(_OWORD *)&v114[96];
      long long v145 = *(_OWORD *)&v114[80];
      long long v144 = *(_OWORD *)&v114[64];
      long long v143 = *(_OWORD *)&v114[48];
      *(_OWORD *)((char *)v153 + 9) = *(_OWORD *)&v118[9];
      v153[0] = *(_OWORD *)v118;
      long long v152 = v117;
      long long v151 = v116;
      if ((sub_2193663F0() - 1) >= 7u)
      {
        unint64_t v61 = *((void *)&v20 + 1);
        if (v76)
        {
          sub_21934CDF0(v84, v81);
        }
        else
        {
          unint64_t v81 = 0xC000000000000000;
          uint64_t v84 = 0;
        }
        if (*((void *)&v19 + 1))
        {
          sub_21934CDF0(v20, *((unint64_t *)&v20 + 1));
        }
        else
        {
          uint64_t v64 = 0;
          unint64_t v61 = 0xC000000000000000;
        }
        if (v23 == 3)
        {
          sub_21934CDF0(v89, v86);
          sub_21934CDF0(v79, v21);
          long long v77 = 0;
        }
        else
        {
          *(void *)&long long v105 = v69;
          *((void *)&v105 + 1) = v68;
          *(void *)&long long v106 = v67;
          *((void *)&v106 + 1) = v66;
          *(void *)&long long v107 = v65;
          BYTE8(v107) = v63;
          *(void *)&long long v108 = v62;
          *((void *)&v108 + 1) = v74;
          *(void *)&long long v109 = v72;
          *((void *)&v109 + 1) = v71;
          *(void *)&long long v110 = v70;
          BYTE8(v110) = v23;
          sub_21934CDF0(v89, v86);
          sub_21934CDF0(v79, v21);
          long long v77 = sub_2193923A8();
        }
        id v75 = objc_allocWithZone((Class)ASCPlatformPublicKeyCredentialAssertion);
        sub_21934CDF0(a3, a4);
        uint64_t v37 = @"cross-platform";
        long long v73 = (void *)sub_2193E2830();
        swift_bridgeObjectRelease();
        unint64_t v38 = (void *)sub_2193E2110();
        id v39 = (void *)sub_2193E2110();
        os_log_t v40 = (void *)sub_2193E2110();
        uint64_t v41 = (void *)sub_2193E2110();
        sub_219348A70(v91, v93);
        unint64_t v95 = (void *)sub_2193E2110();
        LOBYTE(v57) = 0;
        id v42 = objc_msgSend(v75, sel_initWithRelyingPartyIdentifier_authenticatorData_signature_userHandle_rawClientDataJSON_credentialID_extensions_attachment_isExternal_, v73, v38, v39, v40, v41, v95, v77, v37, v57);

        sub_219348A70(v64, v61);
        sub_219348A70(v84, v81);
        sub_219348A70(v79, v21);
        sub_219348A70(v89, v86);

        sub_219366E98((uint64_t)v42, v6);
      }
      else
      {
        swift_bridgeObjectRelease();
        if (qword_26AC26F98 != -1) {
          swift_once();
        }
        uint64_t v24 = sub_2193E24F0();
        __swift_project_value_buffer(v24, (uint64_t)qword_26AC29118);
        sub_219369410((uint64_t)&v113);
        id v25 = sub_2193E24D0();
        os_log_type_t v26 = sub_2193E2AE0();
        if (os_log_type_enabled(v25, v26))
        {
          uint64_t v27 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v27 = 16777472;
          LOBYTE(v105) = v58;
          sub_2193E2C00();
          sub_21935C930((uint64_t)&v113);
          _os_log_impl(&dword_219326000, v25, v26, "Received error from authenticator: %hhu", v27, 5u);
          MEMORY[0x21D48A390](v27, -1, -1);
        }
        else
        {
          sub_21935C930((uint64_t)&v113);
        }

        sub_219367648(2);
      }
      sub_21935C930((uint64_t)&v113);
      return;
    }
    __break(1u);
    goto LABEL_54;
  }
  if (a5)
  {
LABEL_55:
    *(void *)&long long v139 = a5;
    sub_2193E3150();
    __break(1u);
    return;
  }
  sub_21934CDF0(a1, a2);
  sub_21934CDF0(a1, a2);
  sub_21934CDF0(a1, a2);
  sub_21936E4F4(1, a1, a2, (uint64_t *)&v119);
  sub_2193AA894(v119, *((unint64_t *)&v119 + 1), (uint64_t)&v120);
  uint64_t v92 = a3;
  unint64_t v94 = a4;
  long long v111 = v126;
  *(_OWORD *)id v112 = *(_OWORD *)v127;
  *(_OWORD *)&v112[9] = *(_OWORD *)&v127[9];
  long long v107 = v122;
  long long v108 = v123;
  long long v109 = v124;
  long long v110 = v125;
  long long v105 = v120;
  long long v106 = v121;
  sub_21934CDF0(a1, a2);
  __int16 v28 = sub_21936A57C(a1, a2);
  sub_219348A70(a1, a2);
  if ((v28 & 0x100) != 0)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  sub_219348A70(a1, a2);
  *(_OWORD *)&v114[104] = v126;
  *(_OWORD *)&v114[88] = v125;
  *(_OWORD *)&v114[40] = v122;
  *(_OWORD *)&v114[24] = v121;
  *(_OWORD *)&v114[120] = *(_OWORD *)v127;
  *(_OWORD *)&v114[129] = *(_OWORD *)&v127[9];
  *(_OWORD *)&v114[56] = v123;
  LOBYTE(v113) = v28;
  *((void *)&v113 + 1) = a1;
  *(void *)v114 = a2;
  *(_OWORD *)&v114[72] = v124;
  *(_OWORD *)&v114[8] = v120;
  long long v147 = *(_OWORD *)&v114[112];
  long long v148 = *(_OWORD *)&v114[128];
  LOBYTE(v149) = v127[24];
  long long v143 = *(_OWORD *)&v114[48];
  long long v144 = *(_OWORD *)&v114[64];
  long long v146 = *(_OWORD *)&v114[96];
  long long v145 = *(_OWORD *)&v114[80];
  long long v139 = v113;
  long long v140 = *(_OWORD *)v114;
  long long v142 = *(_OWORD *)&v114[32];
  long long v141 = *(_OWORD *)&v114[16];
  if ((sub_2193662C0() - 1) >= 7u)
  {
    long long v103 = v111;
    v104[0] = *(_OWORD *)v112;
    *(_OWORD *)((char *)v104 + 9) = *(_OWORD *)&v112[9];
    long long v99 = v107;
    long long v100 = v108;
    long long v101 = v109;
    long long v102 = v110;
    long long v97 = v105;
    long long v98 = v106;
    sub_2193AA15C();
    uint64_t v34 = v33;
    unint64_t v90 = v35;
    long long v36 = v106;
    sub_21935B9B4((uint64_t)&v105);
    sub_21934CDF0(v36, *((unint64_t *)&v36 + 1));
    ASCTAPAuthData.init(data:)(v36, *((unint64_t *)&v36 + 1), (uint64_t)&v97);
    uint64_t v43 = v34;
    long long v44 = v97;
    uint64_t v45 = *((void *)&v98 + 1);
    uint64_t v46 = *((void *)&v99 + 1);
    unint64_t v47 = v99;
    uint64_t v48 = *((void *)&v100 + 1);
    unint64_t v49 = v100;
    uint64_t v87 = *((void *)&v101 + 1);
    unint64_t v82 = v101;
    unint64_t v85 = v102;
    if ((unint64_t)v99 >> 60 == 15)
    {
      sub_219348A70(v97, *((unint64_t *)&v97 + 1));
      sub_219369780(v45, v47, v46, v49, v48, v82);
      sub_21934CEB0(v87, v85);
      sub_219369684((uint64_t)&v105);
      uint64_t v46 = 0;
      unint64_t v49 = 0xC000000000000000;
    }
    else
    {
      sub_21934CDF0(*((uint64_t *)&v99 + 1), v100);
      sub_219348A70(v44, *((unint64_t *)&v44 + 1));
      sub_219369780(v45, v47, v46, v49, v48, v82);
      sub_21934CEB0(v87, v85);
      sub_219369684((uint64_t)&v105);
    }
    uint64_t v88 = v46;
    if (v112[24] == 3)
    {
      uint64_t v83 = 0;
    }
    else
    {
      long long v97 = v108;
      long long v98 = v109;
      *(void *)&long long v99 = v110;
      BYTE8(v99) = BYTE8(v110);
      long long v100 = v111;
      long long v101 = *(_OWORD *)v112;
      *(void *)&long long v102 = *(void *)&v112[16];
      BYTE8(v102) = v112[24];
      uint64_t v83 = sub_21939220C();
    }
    id v80 = objc_allocWithZone((Class)ASCPlatformPublicKeyCredentialRegistration);
    uint64_t v50 = @"cross-platform";
    sub_21934CDF0(v92, v94);
    uint64_t v51 = (void *)sub_2193E2830();
    swift_bridgeObjectRelease();
    long long v78 = (void *)sub_2193E2110();
    uint64_t v96 = v43;
    uint64_t v52 = (void *)sub_2193E2110();
    sub_219348A70(v92, v94);
    unint64_t v53 = (void *)sub_2193E2110();
    unint64_t v54 = (void *)sub_2193E2A00();
    LOBYTE(v56) = 0;
    id v55 = objc_msgSend(v80, sel_initWithRelyingPartyIdentifier_attestationObject_rawClientDataJSON_credentialID_transports_extensions_attachment_isExternal_, v51, v78, v52, v53, v54, v83, v50, v56);

    sub_219348A70(v88, v49);
    sub_219348A70(v96, v90);

    sub_219366E98((uint64_t)v55, v6);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_26AC26F98 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_2193E24F0();
    __swift_project_value_buffer(v29, (uint64_t)qword_26AC29118);
    sub_219369578((uint64_t)&v113);
    os_log_type_t v30 = sub_2193E24D0();
    os_log_type_t v31 = sub_2193E2AE0();
    if (os_log_type_enabled(v30, v31))
    {
      id v32 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v32 = 16777472;
      LOBYTE(v97) = v28;
      sub_2193E2C00();
      sub_21935BD58((uint64_t)&v113);
      _os_log_impl(&dword_219326000, v30, v31, "Received error from authenticator: %hhu", v32, 5u);
      MEMORY[0x21D48A390](v32, -1, -1);
    }
    else
    {
      sub_21935BD58((uint64_t)&v113);
    }

    sub_219367648(2);
  }
  sub_21935BD58((uint64_t)&v113);
}

uint64_t sub_2193662C0()
{
  uint64_t result = *v0;
  switch(*v0)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 1;
      break;
    case 2:
    case 3:
    case 4:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xA:
    case 0xB:
    case 0xC:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
    case 0x15:
    case 0x16:
    case 0x17:
    case 0x18:
    case 0x1A:
    case 0x1B:
    case 0x1C:
    case 0x1D:
    case 0x1E:
    case 0x1F:
    case 0x20:
    case 0x21:
    case 0x23:
    case 0x24:
    case 0x25:
    case 0x26:
    case 0x27:
    case 0x28:
    case 0x29:
    case 0x2A:
    case 0x2B:
    case 0x2C:
    case 0x2D:
    case 0x2E:
      goto LABEL_5;
    case 5:
      uint64_t result = 2;
      break;
    case 0x19:
      uint64_t result = 3;
      break;
    case 0x22:
      uint64_t result = 4;
      break;
    case 0x2F:
      uint64_t result = 5;
      break;
    default:
      if (result == 127) {
        uint64_t result = 6;
      }
      else {
LABEL_5:
      }
        uint64_t result = 7;
      break;
  }
  return result;
}

uint64_t sub_2193663F0()
{
  uint64_t result = *v0;
  switch(*v0)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 1;
      break;
    case 2:
    case 3:
    case 4:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xA:
    case 0xB:
    case 0xC:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
    case 0x15:
    case 0x16:
    case 0x17:
    case 0x18:
    case 0x1A:
    case 0x1B:
    case 0x1C:
    case 0x1D:
    case 0x1E:
    case 0x1F:
    case 0x20:
    case 0x21:
    case 0x23:
    case 0x24:
    case 0x25:
    case 0x26:
    case 0x27:
    case 0x28:
    case 0x29:
    case 0x2A:
    case 0x2B:
    case 0x2C:
    case 0x2D:
    case 0x2E:
      goto LABEL_5;
    case 5:
      uint64_t result = 2;
      break;
    case 0x19:
      uint64_t result = 3;
      break;
    case 0x22:
      uint64_t result = 4;
      break;
    case 0x2F:
      uint64_t result = 5;
      break;
    default:
      if (result == 127) {
        uint64_t result = 6;
      }
      else {
LABEL_5:
      }
        uint64_t result = 7;
      break;
  }
  return result;
}

uint64_t sub_219366520()
{
  uint64_t v0 = sub_2193E1DC0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2193E1DB0();
  sub_2193E1DA0();
  type metadata accessor for ASCABLEAdvertisement();
  uint64_t v4 = sub_2193E1F70();
  MEMORY[0x21D4883C0](v4);
  uint64_t v9 = 0;
  unint64_t v10 = 0xE000000000000000;
  sub_2193E2D90();
  swift_bridgeObjectRelease();
  uint64_t v9 = 0x632F656C6261632FLL;
  unint64_t v10 = 0xEF2F7463656E6E6FLL;
  sub_2193E2050();
  sub_2193E2920();
  swift_bridgeObjectRelease();
  sub_2193E2920();
  sub_2193E2670();
  uint64_t v5 = v8[2];
  unint64_t v6 = v8[3];
  sub_2193E2050();
  sub_219348A70(v5, v6);
  sub_2193E2920();
  swift_bridgeObjectRelease();
  sub_2193E1D90();
  sub_2193E1D70();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_219366720()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27230);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_powerLogger), sel_logAuthenticationFinishedEventIfNeeded);
  char v5 = *(unsigned char *)(v0 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentState);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentState) = 0;
  sub_2193629F0(v5);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_bluetoothManager), sel_stopScan);
  unint64_t v6 = (void *)(v0 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentRelyingPartyIdentifier);
  void *v6 = 0;
  v6[1] = 0;
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentOperationType;
  *(void *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 8) = 1;
  uint64_t v8 = type metadata accessor for ASCABLEAdvertisement();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v9 = v0 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_authenticatorAdvertisement;
  swift_beginAccess();
  sub_219360344((uint64_t)v4, v9);
  swift_endAccess();
  unint64_t v10 = (void *)(v1 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_completionHandler);
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_completionHandler);
  void *v10 = 0;
  v10[1] = 0;
  sub_219360334(v11);
  uint64_t v12 = OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_webSocket;
  uint64_t v13 = *(void **)(v1 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_webSocket);
  if (v13)
  {
    uint64_t v14 = qword_267C189A8;
    uint64_t v15 = v13;
    if (v14 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_2193E24F0();
    __swift_project_value_buffer(v16, (uint64_t)qword_267C29598);
    os_log_type_t v17 = sub_2193E24D0();
    os_log_type_t v18 = sub_2193E2B00();
    if (os_log_type_enabled(v17, v18))
    {
      long long v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v19 = 0;
      _os_log_impl(&dword_219326000, v17, v18, "Asked to close socket", v19, 2u);
      MEMORY[0x21D48A390](v19, -1, -1);
    }

    v15[OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_isConnected] = 0;
    objc_msgSend(*(id *)&v15[OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_webSocketTask], sel_cancelWithCloseCode_reason_, 1000, 0);

    uint64_t v13 = *(void **)(v1 + v12);
  }
  *(void *)(v1 + v12) = 0;
}

id ASCABLEClient.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void ASCABLEClient.init()()
{
}

id ASCABLEClient.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ASCABLEClient();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_219366B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_219366B8C(uint64_t a1, uint64_t a2, unint64_t a3)
{
}

void sub_219366B98(uint64_t a1, void *a2)
{
}

unint64_t sub_219366BA0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C19000);
  uint64_t v2 = sub_2193E2F50();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_219360574(v6, (uint64_t)&v15, &qword_267C19008);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_219366CD8(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_21936A4F8(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_219366CD8(uint64_t a1, uint64_t a2)
{
  sub_2193E3210();
  sub_2193E28D0();
  uint64_t v4 = sub_2193E3230();

  return sub_219366D50(a1, a2, v4);
}

unint64_t sub_219366D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_2193E3140() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_2193E3140() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_2193E3140()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

void sub_219366E98(uint64_t a1, uint64_t a2)
{
  if (qword_26AC26F98 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_2193E24F0();
  __swift_project_value_buffer(v4, (uint64_t)qword_26AC29118);
  uint64_t v5 = sub_2193E24D0();
  os_log_type_t v6 = sub_2193E2B00();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_219326000, v5, v6, "Transaction succeeded.", v7, 2u);
    MEMORY[0x21D48A390](v7, -1, -1);
  }

  uint64_t v8 = *(void (**)(uint64_t, void))(a2
                                              + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_completionHandler);
  if (v8)
  {
    swift_retain();
    v8(a1, 0);
    sub_219360334((uint64_t)v8);
  }
  else
  {
    uint64_t v9 = sub_2193E24D0();
    os_log_type_t v10 = sub_2193E2AE0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_219326000, v9, v10, "Unexpectedly finished a transaction without a completion handler.", v11, 2u);
      MEMORY[0x21D48A390](v11, -1, -1);
    }
  }
  sub_219365060();
  sub_219366720();
}

unint64_t sub_219367038(unint64_t result)
{
  if (result > 6) {
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ASCABLEClient()
{
  uint64_t result = qword_26AC27210;
  if (!qword_26AC27210) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_219367094(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, int a5)
{
  int v49 = a5;
  uint64_t v48 = a4;
  uint64_t v46 = a3;
  uint64_t v50 = a1;
  uint64_t v7 = sub_2193E21C0();
  uint64_t v52 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v51 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2193E26A0();
  uint64_t v55 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2193E2730();
  uint64_t v54 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  uint64_t v15 = &v5[OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentRelyingPartyIdentifier];
  *(void *)uint64_t v15 = 0;
  *((void *)v15 + 1) = 0;
  uint64_t v16 = &v5[OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentOperationType];
  *(void *)uint64_t v16 = 0;
  v16[8] = 1;
  *(_OWORD *)&v5[OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_clientDataJSON] = xmmword_2193E7220;
  *(void *)&v5[OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_webSocket] = 0;
  long long v17 = &v5[OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_authenticatorAdvertisement];
  uint64_t v18 = type metadata accessor for ASCABLEAdvertisement();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  long long v19 = &v5[OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_completionHandler];
  *(void *)long long v19 = 0;
  *((void *)v19 + 1) = 0;
  uint64_t v20 = OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_powerLogger;
  id v21 = objc_allocWithZone((Class)_ASCABLEPowerLogger);
  uint64_t v22 = v5;
  *(void *)&v5[v20] = objc_msgSend(v21, sel_init);
  uint64_t v23 = (uint64_t)&v22[OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_testDelegate];
  *(void *)(v23 + 32) = 0;
  *(_OWORD *)uint64_t v23 = 0u;
  *(_OWORD *)(v23 + 16) = 0u;
  v22[OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentState] = 0;
  swift_unknownObjectWeakAssign();
  *(void *)&v22[OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_cryptographyManager] = a2;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 16);
  uint64_t v47 = v12;
  v24(v14, a2 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_qrPublicKey, v12);
  id v25 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
  uint64_t v45 = v11;
  uint64_t v50 = v9;
  v25(v11, a2 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_qrSymmetricKey, v9);
  uint64_t v26 = qword_26AC26F70;
  swift_retain();
  if (v26 != -1) {
    swift_once();
  }
  unint64_t v27 = *(void *)(qword_26AC290D0 + 16);
  if (v27 >= 0x100) {
    goto LABEL_11;
  }
  __int16 v28 = v51;
  sub_2193E21B0();
  sub_2193E21A0();
  double v30 = v29;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v28, v53);
  if ((~*(void *)&v30 & 0x7FF0000000000000) != 0)
  {
    if (v30 > -9.22337204e18)
    {
      if (v30 < 9.22337204e18)
      {
        os_log_type_t v31 = v46;
        LODWORD(v53) = v49 & 1;
        uint64_t v52 = (uint64_t)v30;
        id v32 = v14;
        uint64_t v33 = sub_2193E2710();
        uint64_t v35 = v34;
        long long v36 = v45;
        sub_2193E2670();
        uint64_t v38 = v57;
        uint64_t v37 = v58;
        (*(void (**)(char *, uint64_t))(v55 + 8))(v36, v50);
        (*(void (**)(char *, uint64_t))(v54 + 8))(v32, v47);
        id v39 = &v22[OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_qrCodeStruct];
        *(void *)id v39 = v33;
        *((void *)v39 + 1) = v35;
        *((void *)v39 + 2) = v38;
        *((void *)v39 + 3) = v37;
        v39[32] = v27;
        *((void *)v39 + 5) = v52;
        *((_WORD *)v39 + 24) = 0;
        v39[50] = v53;
        *(void *)&v22[OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_bluetoothManager] = v31;
        swift_beginAccess();
        id v40 = v31;
        uint64_t v41 = v48;
        sub_21936A508(v48, v23);
        swift_endAccess();

        id v42 = (objc_class *)type metadata accessor for ASCABLEClient();
        v56.receiver = v22;
        v56.super_class = v42;
        id v43 = objc_msgSendSuper2(&v56, sel_init);
        objc_msgSend(v40, sel_setDelegate_, v43);
        sub_219360620(v41, (uint64_t *)&unk_26AC27240);
        return (uint64_t)v43;
      }
      goto LABEL_10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_10:
  __break(1u);
LABEL_11:
  uint64_t result = sub_2193E2EE0();
  __break(1u);
  return result;
}

void sub_219367648(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentState;
  switch(*(unsigned char *)(v1 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentState))
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      goto LABEL_6;
    case 8:
      goto LABEL_3;
    default:
      if (0x80000002193F0180 == 0x80000002193F0260)
      {
LABEL_3:
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_6:
        char v4 = sub_2193E3140();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          if (qword_26AC26F98 != -1) {
            swift_once();
          }
          uint64_t v5 = sub_2193E24F0();
          __swift_project_value_buffer(v5, (uint64_t)qword_26AC29118);
          os_log_type_t v6 = sub_2193E24D0();
          os_log_type_t v7 = sub_2193E2AE0();
          if (os_log_type_enabled(v6, v7))
          {
            uint64_t v8 = (uint8_t *)swift_slowAlloc();
            uint64_t v9 = swift_slowAlloc();
            long long v19 = (void *)v9;
            *(_DWORD *)uint64_t v8 = 136315138;
            sub_219368E90();
            uint64_t v10 = sub_2193E31B0();
            sub_21934C764(v10, v11, (uint64_t *)&v19);
            sub_2193E2C00();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_219326000, v6, v7, "caBLE transaction failed: %s", v8, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x21D48A390](v9, -1, -1);
            MEMORY[0x21D48A390](v8, -1, -1);
          }

          char v12 = *(unsigned char *)(v1 + v3);
          *(unsigned char *)(v1 + v3) = 8;
          sub_2193629F0(v12);
          switch(a1)
          {
            case 0:
            case 6:
              sub_219368E90();
              uint64_t v13 = (void *)swift_allocError();
              *uint64_t v14 = 0;
              break;
            case 1:
              sub_219368E90();
              uint64_t v13 = (void *)swift_allocError();
              uint64_t v16 = 1;
              goto LABEL_16;
            case 2:
              sub_219368E90();
              uint64_t v13 = (void *)swift_allocError();
              uint64_t v16 = 2;
              goto LABEL_16;
            case 3:
              sub_219368E90();
              uint64_t v13 = (void *)swift_allocError();
              uint64_t v16 = 3;
LABEL_16:
              uint64_t *v15 = v16;
              break;
            case 4:
            case 5:
              type metadata accessor for ASCAuthorizationError(0);
              sub_219366BA0(MEMORY[0x263F8EE78]);
              sub_21936A4B0(&qword_26AC27030, type metadata accessor for ASCAuthorizationError);
              sub_2193E1F50();
              uint64_t v13 = v19;
              break;
            default:
              long long v19 = (void *)a1;
              sub_2193E3150();
              __break(1u);
              JUMPOUT(0x219367B10);
          }
          long long v17 = *(void (**)(void, void *))(v1
                                                      + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_completionHandler);
          if (v17)
          {
            sub_219360274(*(void *)(v1 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_completionHandler));
            id v18 = v13;
            v17(0, v13);
            sub_219360334((uint64_t)v17);
          }
          sub_219366720();
        }
      }
      return;
  }
}

uint64_t sub_219367B50()
{
  unint64_t v0 = sub_2193E2F70();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

void sub_219367B9C(void *a1)
{
  if (qword_26AC26F98 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_2193E24F0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26AC29118);
  id v3 = a1;
  id v4 = a1;
  uint64_t v5 = sub_2193E24D0();
  os_log_type_t v6 = sub_2193E2AE0();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)os_log_type_t v7 = 136315138;
    if (a1)
    {
      swift_getErrorValue();
      id v9 = a1;
      uint64_t v10 = sub_2193E31B0();
      unint64_t v12 = v11;
    }
    else
    {
      unint64_t v12 = 0xE500000000000000;
      uint64_t v10 = 0x3E6C696E3CLL;
    }
    sub_21934C764(v10, v12, &v13);
    sub_2193E2C00();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_219326000, v5, v6, "Unable to start BLE scanning: %s.", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D48A390](v8, -1, -1);
    MEMORY[0x21D48A390](v7, -1, -1);
  }
  else
  {
  }
  sub_219367648(0);
}

void sub_219367DAC(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v124 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27160);
  MEMORY[0x270FA5388](v5 - 8);
  long long v121 = (char *)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2193E1FF0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v118 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v119 = (uint64_t)&v111 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v111 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27230);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v117 = (uint64_t)&v111 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  long long v19 = (char *)&v111 - v18;
  uint64_t v20 = type metadata accessor for ASCABLEAdvertisement();
  uint64_t v122 = *(void *)(v20 - 8);
  long long v123 = (void *)v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v111 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentState;
  uint64_t v23 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentState);
  long long v120 = v19;
  switch(v23)
  {
    case 3:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    default:
      char v24 = sub_2193E3140();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0) {
        return;
      }
LABEL_4:
      if (qword_26AC26F98 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_2193E24F0();
      uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)qword_26AC29118);
      id v27 = a1;
      __int16 v28 = sub_2193E24D0();
      os_log_type_t v29 = sub_2193E2AD0();
      BOOL v30 = os_log_type_enabled(v28, v29);
      long long v115 = v14;
      if (v30)
      {
        uint64_t v114 = v26;
        uint64_t v31 = swift_slowAlloc();
        uint64_t v112 = v3;
        id v32 = (uint8_t *)v31;
        uint64_t v33 = swift_slowAlloc();
        long long v113 = v22;
        unint64_t v111 = v7;
        uint64_t v34 = (void *)v33;
        *(_DWORD *)id v32 = 138412290;
        *(void *)&long long v128 = v27;
        id v35 = v27;
        sub_2193E2C00();
        *uint64_t v34 = v27;

        uint64_t v26 = v114;
        _os_log_impl(&dword_219326000, v28, v29, "Central manager discovered peripheral: %@", v32, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27170);
        swift_arrayDestroy();
        long long v36 = v34;
        uint64_t v7 = v111;
        uint64_t v22 = v113;
        MEMORY[0x21D48A390](v36, -1, -1);
        uint64_t v37 = v32;
        uint64_t v3 = v112;
        MEMORY[0x21D48A390](v37, -1, -1);
      }
      else
      {
      }
      uint64_t v38 = v124;
      uint64_t v39 = sub_2193E2840();
      if (*(void *)(v38 + 16) && (uint64_t v41 = sub_21938452C(v39, v40), (v42 & 1) != 0))
      {
        sub_21934F0D8(*(void *)(v38 + 56) + 32 * v41, (uint64_t)&v128);
      }
      else
      {
        long long v128 = 0u;
        long long v129 = 0u;
      }
      swift_bridgeObjectRelease();
      if (!*((void *)&v129 + 1))
      {
        sub_219360620((uint64_t)&v128, &qword_267C18E40);
        goto LABEL_20;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C18FF8);
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_20:
        uint64_t v50 = sub_2193E24D0();
        os_log_type_t v51 = sub_2193E2AC0();
        if (!os_log_type_enabled(v50, v51)) {
          goto LABEL_23;
        }
        uint64_t v52 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v52 = 0;
        uint64_t v53 = "Found unexpected advertisement.";
        goto LABEL_22;
      }
      uint64_t v43 = v125[0];
      if (qword_267C18998 == -1)
      {
        if (!*(void *)(v125[0] + 16)) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_once();
        if (!*(void *)(v43 + 16))
        {
LABEL_26:
          if (qword_267C18990 == -1)
          {
            if (*(void *)(v43 + 16))
            {
LABEL_28:
              id v54 = (id)qword_267C29580;
              unint64_t v55 = sub_219385A9C((uint64_t)v54);
              if (v56)
              {
                uint64_t v57 = (uint64_t *)(*(void *)(v43 + 56) + 16 * v55);
                unint64_t v48 = *v57;
                unint64_t v49 = v57[1];
                sub_21934CDF0(*v57, v49);

                swift_bridgeObjectRelease();
                goto LABEL_30;
              }
            }
          }
          else
          {
            swift_once();
            if (*(void *)(v43 + 16)) {
              goto LABEL_28;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v50 = sub_2193E24D0();
          os_log_type_t v51 = sub_2193E2AC0();
          if (!os_log_type_enabled(v50, v51)) {
            goto LABEL_23;
          }
          uint64_t v52 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v52 = 0;
          uint64_t v53 = "Found advertisemnt without caBLE UUID.";
LABEL_22:
          _os_log_impl(&dword_219326000, v50, v51, v53, v52, 2u);
          MEMORY[0x21D48A390](v52, -1, -1);
          goto LABEL_23;
        }
      }
      id v44 = (id)qword_267C29588;
      unint64_t v45 = sub_219385A9C((uint64_t)v44);
      if ((v46 & 1) == 0)
      {

        goto LABEL_26;
      }
      uint64_t v47 = (uint64_t *)(*(void *)(v43 + 56) + 16 * v45);
      unint64_t v48 = *v47;
      unint64_t v49 = v47[1];
      sub_21934CDF0(*v47, v49);
      swift_bridgeObjectRelease();

LABEL_30:
      uint64_t v58 = (uint64_t)v120;
      sub_21936AF38(v48, v49, (uint64_t)v120);
      int v59 = (*(uint64_t (**)(uint64_t, uint64_t, void *))(v122 + 48))(v58, 1, v123);
      uint64_t v60 = (uint64_t)v121;
      if (v59 != 1)
      {
        sub_2193698C8(v58, (uint64_t)v22);
        sub_219366520();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v60, 1, v7) == 1)
        {
          sub_219360620(v60, &qword_26AC27160);
          uint64_t v63 = sub_2193E24D0();
          os_log_type_t v64 = sub_2193E2AE0();
          if (os_log_type_enabled(v63, v64))
          {
            uint64_t v65 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v65 = 0;
            _os_log_impl(&dword_219326000, v63, v64, "Could not get URL from advertisement.", v65, 2u);
            MEMORY[0x21D48A390](v65, -1, -1);
          }

          sub_219367648(1);
          sub_21934CEB0(v48, v49);
        }
        else
        {
          uint64_t v114 = v26;
          uint64_t v66 = v115;
          (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v115, v60, v7);
          uint64_t v67 = MEMORY[0x21D48A480](v3 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_delegate);
          if (v67)
          {
            uint64_t v68 = (void *)v67;
            long long v121 = (char *)v48;
            objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_bluetoothManager), sel_stopScan);
            char v69 = *(unsigned char *)(v3 + v116);
            *(unsigned char *)(v3 + v116) = 4;
            sub_2193629F0(v69);
            long long v113 = v22;
            uint64_t v70 = v117;
            sub_21936A360((uint64_t)v22, v117);
            (*(void (**)(uint64_t, void, uint64_t, void *))(v122 + 56))(v70, 0, 1, v123);
            uint64_t v71 = v3 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_authenticatorAdvertisement;
            swift_beginAccess();
            sub_219360344(v70, v71);
            swift_endAccess();
            objc_msgSend(v68, sel_cableClientWillConnect_, v3);
            uint64_t v124 = v8;
            uint64_t v72 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 16);
            v72(v119, v66, v7);
            id v73 = objc_msgSend(self, sel_ephemeralSessionConfiguration);
            id v74 = objc_msgSend(self, sel_sessionWithConfiguration_, v73);

            uint64_t v75 = v3 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_testDelegate;
            swift_beginAccess();
            sub_219360574(v75, (uint64_t)v125, (uint64_t *)&unk_26AC27240);
            uint64_t v76 = v126;
            unint64_t v111 = v49;
            if (v126)
            {
              uint64_t v77 = v7;
              uint64_t v78 = v127;
              uint64_t v79 = __swift_project_boxed_opaque_existential_1Tm(v125, v126);
              *((void *)&v129 + 1) = v76;
              uint64_t v80 = *(void *)(v78 + 8);
              uint64_t v7 = v77;
              uint64_t v130 = v80;
              boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v128);
              (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v76 - 8) + 16))(boxed_opaque_existential_1, v79, v76);
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v125);
            }
            else
            {
              sub_219360620((uint64_t)v125, (uint64_t *)&unk_26AC27240);
              long long v128 = 0u;
              long long v129 = 0u;
              uint64_t v130 = 0;
            }
            unint64_t v85 = sub_219391490(MEMORY[0x263F8EE78]);
            id v86 = objc_allocWithZone((Class)type metadata accessor for ASWebSocket());
            uint64_t v87 = sub_2193BAB44(v119, (uint64_t)&unk_26CAB45F8, v85, v74, 0, 0, (uint64_t)&v128);

            uint64_t v88 = OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_webSocket;
            uint64_t v89 = *(void **)(v3 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_webSocket);
            *(void *)(v3 + OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_webSocket) = v87;

            uint64_t v90 = *(void *)(v3 + v88);
            if (v90)
            {
              long long v123 = v68;
              *(void *)(v90 + OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_delegate + 8) = &off_26CAB5508;
              swift_unknownObjectWeakAssign();
              uint64_t v91 = v118;
              v72((uint64_t)v118, v115, v7);
              uint64_t v92 = sub_2193E24D0();
              uint64_t v93 = v7;
              os_log_type_t v94 = sub_2193E2B00();
              if (os_log_type_enabled(v92, v94))
              {
                unint64_t v95 = (uint8_t *)swift_slowAlloc();
                uint64_t v96 = swift_slowAlloc();
                uint64_t v112 = v3;
                uint64_t v97 = v96;
                *(void *)&long long v128 = v96;
                *(_DWORD *)unint64_t v95 = 136315138;
                sub_21936A4B0(&qword_267C18E70, MEMORY[0x263F06EA8]);
                uint64_t v98 = sub_2193E3100();
                v125[0] = sub_21934C764(v98, v99, (uint64_t *)&v128);
                sub_2193E2C00();
                swift_bridgeObjectRelease();
                long long v100 = *(void (**)(char *, uint64_t))(v124 + 8);
                v100(v91, v93);
                _os_log_impl(&dword_219326000, v92, v94, "Connecting to relay at %s", v95, 0xCu);
                swift_arrayDestroy();
                uint64_t v101 = v97;
                uint64_t v3 = v112;
                MEMORY[0x21D48A390](v101, -1, -1);
                MEMORY[0x21D48A390](v95, -1, -1);
              }
              else
              {
                long long v100 = *(void (**)(char *, uint64_t))(v124 + 8);
                v100(v91, v93);
              }

              uint64_t v102 = (uint64_t)v121;
              long long v103 = *(char **)(v3 + v88);
              uint64_t v104 = v115;
              if (v103)
              {
                uint64_t v105 = swift_allocObject();
                swift_unknownObjectWeakInit();
                long long v106 = *(void **)&v103[OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_webSocketTask];
                long long v107 = v103;
                swift_retain();
                objc_msgSend(v106, sel_resume);
                long long v108 = (uint64_t (*)(uint64_t, uint64_t))swift_allocObject();
                *((void *)v108 + 2) = v107;
                *((void *)v108 + 3) = sub_21936A3FC;
                *((void *)v108 + 4) = v105;
                long long v109 = (uint64_t (**)(uint64_t, uint64_t))&v107[OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_connectionCompletionHandler];
                uint64_t v110 = *(void *)&v107[OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_connectionCompletionHandler];
                *long long v109 = sub_219360328;
                v109[1] = v108;
                sub_219360334(v110);
                sub_21934CEB0(v102, v111);
                swift_unknownObjectRelease();
                v100(v104, v93);
                sub_21936992C((uint64_t)v113);
                swift_release();
                return;
              }
            }
            else
            {
              __break(1u);
            }
            __break(1u);
            JUMPOUT(0x219368D08);
          }
          unint64_t v82 = sub_2193E24D0();
          os_log_type_t v83 = sub_2193E2AE0();
          if (os_log_type_enabled(v82, v83))
          {
            uint64_t v84 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v84 = 0;
            _os_log_impl(&dword_219326000, v82, v83, "Delegate no longer exists.", v84, 2u);
            MEMORY[0x21D48A390](v84, -1, -1);
          }

          sub_219367648(0);
          sub_21934CEB0(v48, v49);
          (*(void (**)(char *, uint64_t))(v8 + 8))(v115, v7);
        }
        sub_21936992C((uint64_t)v22);
        return;
      }
      sub_219360620(v58, (uint64_t *)&unk_26AC27230);
      uint64_t v50 = sub_2193E24D0();
      os_log_type_t v61 = sub_2193E2B00();
      if (os_log_type_enabled(v50, v61))
      {
        uint64_t v62 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v62 = 0;
        _os_log_impl(&dword_219326000, v50, v61, "Could not decrypt caBLE advertisement.", v62, 2u);
        MEMORY[0x21D48A390](v62, -1, -1);
      }
      sub_21934CEB0(v48, v49);
LABEL_23:

      return;
  }
}

unint64_t sub_219368D30()
{
  unint64_t result = qword_26AC271B0;
  if (!qword_26AC271B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC271B0);
  }
  return result;
}

unint64_t sub_219368D88()
{
  unint64_t result = qword_26AC271B8;
  if (!qword_26AC271B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC271B8);
  }
  return result;
}

unint64_t sub_219368DE0()
{
  unint64_t result = qword_26AC271C0;
  if (!qword_26AC271C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC271C0);
  }
  return result;
}

unint64_t sub_219368E38()
{
  unint64_t result = qword_26AC271C8;
  if (!qword_26AC271C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC271C8);
  }
  return result;
}

unint64_t sub_219368E90()
{
  unint64_t result = qword_26AC271D8;
  if (!qword_26AC271D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC271D8);
  }
  return result;
}

unint64_t sub_219368EE8()
{
  unint64_t result = qword_267C18EE0;
  if (!qword_267C18EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18EE0);
  }
  return result;
}

uint64_t sub_219368F3C()
{
  return type metadata accessor for ASCABLEClient();
}

void sub_219368F44()
{
  sub_21935CDF4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ASCABLEClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ASCABLEClient);
}

uint64_t dispatch thunk of ASCABLEClient.qrCodeURL.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ASCABLEClient.performAuthenticationOperation(_:forRelyingPartyIdentifier:completionHandler:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ASCABLEClient.cancelIfNecessary()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ASCABLEClient.centralManagerDidUpdateState(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of ASCABLEClient.centralManager(_:didFailToScanWithError:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of ASCABLEClient.centralManager(_:didDiscover:advertisementData:rssi:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1C8))();
}

ValueMetadata *type metadata accessor for ASCABLEClient.ClientError()
{
  return &type metadata for ASCABLEClient.ClientError;
}

ValueMetadata *type metadata accessor for ASCABLEClient.OperationType()
{
  return &type metadata for ASCABLEClient.OperationType;
}

uint64_t getEnumTagSinglePayload for ASCABLEClient.CABLEState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ASCABLEClient.CABLEState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21936932CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCABLEClient.CABLEState()
{
  return &type metadata for ASCABLEClient.CABLEState;
}

unint64_t sub_219369368()
{
  unint64_t result = qword_267C18FD8;
  if (!qword_267C18FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18FD8);
  }
  return result;
}

unint64_t sub_2193693BC()
{
  unint64_t result = qword_267C18FE8;
  if (!qword_267C18FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C18FE8);
  }
  return result;
}

uint64_t sub_219369410(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  unint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  unint64_t v7 = *(void *)(a1 + 72);
  uint64_t v8 = *(void *)(a1 + 80);
  unint64_t v9 = *(void *)(a1 + 88);
  uint64_t v14 = *(void *)(a1 + 104);
  uint64_t v15 = *(void *)(a1 + 96);
  unint64_t v12 = *(void *)(a1 + 120);
  uint64_t v13 = *(void *)(a1 + 112);
  uint64_t v24 = *(void *)(a1 + 168);
  uint64_t v25 = *(void *)(a1 + 160);
  uint64_t v22 = *(void *)(a1 + 184);
  uint64_t v23 = *(void *)(a1 + 176);
  uint64_t v20 = *(void *)(a1 + 200);
  uint64_t v21 = *(void *)(a1 + 192);
  uint64_t v18 = *(void *)(a1 + 216);
  uint64_t v19 = *(void *)(a1 + 208);
  long long v17 = *(_OWORD *)(a1 + 224);
  uint64_t v16 = *(void *)(a1 + 240);
  char v11 = *(unsigned char *)(a1 + 248);
  sub_21934CDF0(*(void *)(a1 + 8), *(void *)(a1 + 16));
  sub_21935C2BC(v2, v3, v4, v5);
  sub_21934CDF0(v6, v7);
  sub_21934CDF0(v8, v9);
  sub_21935C31C(v15, v14, v13, v12);
  sub_21935BC70(v25, v24, v23, v22, v21, v20, v19, v18, v17, *((uint64_t *)&v17 + 1), v16, v11, (void (*)(void))sub_21935BAB0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BACC);
  return a1;
}

uint64_t sub_219369578(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  unint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  unint64_t v5 = *(void *)(a1 + 64);
  uint64_t v17 = *(void *)(a1 + 72);
  uint64_t v6 = *(void *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 96);
  uint64_t v15 = *(void *)(a1 + 104);
  uint64_t v16 = *(void *)(a1 + 80);
  uint64_t v13 = *(void *)(a1 + 120);
  uint64_t v14 = *(void *)(a1 + 112);
  uint64_t v12 = *(void *)(a1 + 128);
  long long v11 = *(_OWORD *)(a1 + 136);
  uint64_t v8 = *(void *)(a1 + 152);
  char v9 = *(unsigned char *)(a1 + 160);
  sub_21934CDF0(*(void *)(a1 + 8), *(void *)(a1 + 16));
  swift_bridgeObjectRetain();
  sub_21934CDF0(v2, v3);
  sub_21934CDF0(v4, v5);
  sub_21935BC70(v17, v16, v6, v7, v15, v14, v13, v12, v11, *((uint64_t *)&v11 + 1), v8, v9, (void (*)(void))sub_21935BAB0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BACC);
  return a1;
}

uint64_t sub_219369684(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  unint64_t v5 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v7 = *(void *)(a1 + 72);
  uint64_t v8 = *(void *)(a1 + 80);
  uint64_t v15 = *(void *)(a1 + 88);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 104);
  uint64_t v14 = *(void *)(a1 + 96);
  long long v12 = *(_OWORD *)(a1 + 112);
  uint64_t v9 = *(void *)(a1 + 128);
  char v10 = *(unsigned char *)(a1 + 136);
  swift_bridgeObjectRelease();
  sub_219348A70(v2, v3);
  sub_219348A70(v4, v5);
  sub_21935BC70(v17, v16, v6, v7, v8, v15, v14, v13, v12, *((uint64_t *)&v12 + 1), v9, v10, (void (*)(void))sub_21935BD18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BD34);
  return a1;
}

uint64_t sub_219369780(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  if (a2 >> 60 != 15)
  {
    sub_219348A70(result, a2);
    sub_219348A70(a3, a4);
    return sub_219348A70(a5, a6);
  }
  return result;
}

uint64_t sub_2193697EC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_219369824(uint64_t result, unint64_t a2)
{
  uint64_t v2 = (a2 >> 60) & 3;
  if (v2)
  {
    if (v2 != 1) {
      return result;
    }
    a2 &= 0xCFFFFFFFFFFFFFFFLL;
  }
  return sub_21934CDF0(result, a2);
}

uint64_t *sub_219369840(uint64_t *a1)
{
  uint64_t v2 = a1[4];
  unint64_t v3 = a1[5];
  sub_21934CEB0(*a1, a1[1]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_219348A70(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2193698C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ASCABLEAdvertisement();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21936992C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ASCABLEAdvertisement();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_219369988()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2193699C0(uint64_t a1)
{
  return a1;
}

void sub_2193699E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentState;
  uint64_t v4 = v2;
  switch(v2[OBJC_IVAR____TtC26AuthenticationServicesCore13ASCABLEClient_currentState])
  {
    case 5u:
      sub_219363F1C();
      break;
    case 6u:
      sub_219364120(a1, a2);
      break;
    case 7u:
      sub_219364B14(a1, a2);
      break;
    case 8u:
      if (qword_26AC26F98 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_2193E24F0();
      __swift_project_value_buffer(v16, (uint64_t)qword_26AC29118);
      uint64_t v26 = v2;
      uint64_t v17 = sub_2193E24D0();
      os_log_type_t v18 = sub_2193E2AE0();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = 0xD000000000000011;
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        uint64_t v21 = swift_slowAlloc();
        uint64_t v27 = v21;
        *(_DWORD *)uint64_t v20 = 136315138;
        uint64_t v22 = v4[v3];
        unint64_t v23 = 0x80000002193F0180;
        uint64_t v24 = v21;
        switch(v22)
        {
          case 1:
            uint64_t v19 = 0xD000000000000012;
            uint64_t v25 = "bluetoothOnAndIdle";
            goto LABEL_42;
          case 2:
            uint64_t v19 = 0xD00000000000001ALL;
            uint64_t v25 = "waitingForBluetoothPowerOn";
            goto LABEL_42;
          case 3:
            uint64_t v19 = 0xD000000000000022;
            uint64_t v25 = "listeningForBluetoothAdvertisement";
            goto LABEL_42;
          case 4:
            uint64_t v19 = 0xD000000000000010;
            uint64_t v25 = "openingWebSocket";
            goto LABEL_42;
          case 5:
            uint64_t v19 = 0xD00000000000001ALL;
            uint64_t v25 = "performingInitialHandshake";
            goto LABEL_42;
          case 6:
            uint64_t v19 = 0xD000000000000020;
            uint64_t v25 = "listeningForPostHandshakeMessage";
            goto LABEL_42;
          case 7:
            uint64_t v19 = 0xD000000000000015;
            uint64_t v25 = "connectionEstablished";
            goto LABEL_42;
          case 8:
            uint64_t v25 = "transactionFailed";
LABEL_42:
            unint64_t v23 = (unint64_t)(v25 - 32) | 0x8000000000000000;
            break;
          default:
            break;
        }
        sub_21934C764(v19, v23, &v27);
        sub_2193E2C00();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_219326000, v17, v18, "Unexpectedly received socket message while in state %s", v20, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x21D48A390](v24, -1, -1);
        MEMORY[0x21D48A390](v20, -1, -1);
      }
      else
      {
      }
      break;
    default:
      if (qword_26AC26F98 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_2193E24F0();
      __swift_project_value_buffer(v5, (uint64_t)qword_26AC29118);
      uint64_t v6 = v2;
      uint64_t v7 = sub_2193E24D0();
      os_log_type_t v8 = sub_2193E2AE0();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = 0xD000000000000011;
        char v10 = (uint8_t *)swift_slowAlloc();
        uint64_t v11 = swift_slowAlloc();
        uint64_t v27 = v11;
        *(_DWORD *)char v10 = 136315138;
        uint64_t v12 = v4[v3];
        unint64_t v13 = 0x80000002193F0180;
        uint64_t v14 = v11;
        switch(v12)
        {
          case 1:
            uint64_t v9 = 0xD000000000000012;
            uint64_t v15 = "bluetoothOnAndIdle";
            goto LABEL_32;
          case 2:
            uint64_t v9 = 0xD00000000000001ALL;
            uint64_t v15 = "waitingForBluetoothPowerOn";
            goto LABEL_32;
          case 3:
            uint64_t v9 = 0xD000000000000022;
            uint64_t v15 = "listeningForBluetoothAdvertisement";
            goto LABEL_32;
          case 4:
            uint64_t v9 = 0xD000000000000010;
            uint64_t v15 = "openingWebSocket";
            goto LABEL_32;
          case 5:
            uint64_t v9 = 0xD00000000000001ALL;
            uint64_t v15 = "performingInitialHandshake";
            goto LABEL_32;
          case 6:
            uint64_t v9 = 0xD000000000000020;
            uint64_t v15 = "listeningForPostHandshakeMessage";
            goto LABEL_32;
          case 7:
            uint64_t v9 = 0xD000000000000015;
            uint64_t v15 = "connectionEstablished";
            goto LABEL_32;
          case 8:
            uint64_t v15 = "transactionFailed";
LABEL_32:
            unint64_t v13 = (unint64_t)(v15 - 32) | 0x8000000000000000;
            break;
          default:
            break;
        }
        sub_21934C764(v9, v13, &v27);
        sub_2193E2C00();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_219326000, v7, v8, "Unexpectedly received socket message while in state %s", v10, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x21D48A390](v14, -1, -1);
        MEMORY[0x21D48A390](v10, -1, -1);
      }
      else
      {
      }
      sub_219367648(0);
      break;
  }
}

void sub_219369FA8(uint64_t a1, unint64_t a2)
{
  if (qword_26AC26F98 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_2193E24F0();
  __swift_project_value_buffer(v4, (uint64_t)qword_26AC29118);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_2193E24D0();
  os_log_type_t v6 = sub_2193E2AE0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_21934C764(a1, a2, &v9);
    sub_2193E2C00();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_219326000, v5, v6, "Unexpectedly received string frame: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D48A390](v8, -1, -1);
    MEMORY[0x21D48A390](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_219367648(3);
}

void sub_21936A168(void *a1)
{
  if (qword_26AC26F98 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_2193E24F0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26AC29118);
  id v3 = a1;
  uint64_t v4 = sub_2193E24D0();
  os_log_type_t v5 = sub_2193E2AE0();
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v6 = 138412290;
    uint64_t v8 = sub_2193E1F60();
    sub_2193E2C00();
    void *v7 = v8;

    _os_log_impl(&dword_219326000, v4, v5, "Networking error: %@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27170);
    swift_arrayDestroy();
    MEMORY[0x21D48A390](v7, -1, -1);
    MEMORY[0x21D48A390](v6, -1, -1);
  }
  else
  {
  }
  sub_219367648(3);
}

unint64_t sub_21936A30C()
{
  unint64_t result = qword_26AC27250;
  if (!qword_26AC27250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC27250);
  }
  return result;
}

uint64_t sub_21936A360(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ASCABLEAdvertisement();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21936A3C4()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_21936A3FC(uint64_t a1, unint64_t a2)
{
  sub_2193634D8(a1, a2, v2);
}

uint64_t sub_21936A404()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_21936A4B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_OWORD *sub_21936A4F8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_21936A508(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_21936A57C(uint64_t a1, unint64_t a2)
{
  int v2 = 1;
  unsigned __int8 v3 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v4 = (int)a1;
      if ((int)a1 != a1 >> 32) {
        goto LABEL_15;
      }
      unsigned __int8 v3 = 0;
      return v3 | (v2 << 8);
    case 2uLL:
      uint64_t v4 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      if (v4 != v5)
      {
        if (a2 >> 62 == 2)
        {
          if (v4 >= v5) {
            goto LABEL_23;
          }
          uint64_t v6 = sub_2193E1DF0();
          if (!v6) {
            goto LABEL_25;
          }
          uint64_t v7 = v6;
          a1 = sub_2193E1E20();
          uint64_t v8 = v4 - a1;
          if (!__OFSUB__(v4, a1)) {
            goto LABEL_19;
          }
          __break(1u);
        }
LABEL_15:
        if (v4 < (int)a1 || v4 >= a1 >> 32)
        {
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
        }
        uint64_t v9 = sub_2193E1DF0();
        if (v9)
        {
          uint64_t v7 = v9;
          uint64_t v10 = sub_2193E1E20();
          uint64_t v8 = v4 - v10;
          if (!__OFSUB__(v4, v10))
          {
LABEL_19:
            int v2 = 0;
            unsigned __int8 v3 = *(unsigned char *)(v7 + v8);
            return v3 | (v2 << 8);
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_25:
        __break(1u);
        JUMPOUT(0x21936A6C4);
      }
      unsigned __int8 v3 = 0;
      int v2 = 1;
      return v3 | (v2 << 8);
    case 3uLL:
      return v3 | (v2 << 8);
    default:
      int v2 = (a2 & 0xFF000000000000) == 0;
      if ((a2 & 0xFF000000000000) != 0) {
        unsigned __int8 v3 = a1;
      }
      else {
        unsigned __int8 v3 = 0;
      }
      return v3 | (v2 << 8);
  }
}

uint64_t sub_21936A6D4()
{
  uint64_t v0 = sub_2193E26C0();
  __swift_allocate_value_buffer(v0, qword_26AC27258);
  __swift_project_value_buffer(v0, (uint64_t)qword_26AC27258);
  return sub_2193E26B0();
}

uint64_t sub_21936A724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v64 = a3;
  uint64_t v65 = a1;
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27430);
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v57 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2193E26A0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v60 = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  int v59 = (char *)v54 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27190);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27188);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v63 = (uint64_t)v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v54 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)v54 - v21;
  uint64_t v23 = sub_2193E2730();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  char v56 = (char *)v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = v4 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_noiseManager;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC272C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
  uint64_t v28 = v4 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_noiseTransportCipher;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC270F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
  uint64_t v61 = v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v4 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_qrSymmetricKey, v65, v7);
  uint64_t v55 = v4;
  sub_219360574(a2, v4 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_qrPrivateKey, &qword_26AC27190);
  uint64_t v62 = a2;
  sub_219360574(a2, (uint64_t)v14, &qword_26AC27190);
  uint64_t v30 = sub_2193E2760();
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v14, 1, v30) == 1)
  {
    sub_219360620((uint64_t)v14, &qword_26AC27190);
    uint64_t v32 = 1;
  }
  else
  {
    sub_2193E2740();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v30);
    uint64_t v32 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v22, v32, 1, v23);
  sub_219360574(v64, (uint64_t)v20, &qword_26AC27188);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  int v34 = v33(v22, 1, v23);
  uint64_t v35 = v63;
  if (v34 != 1)
  {
    uint64_t v37 = v7;
    sub_219360620((uint64_t)v20, &qword_26AC27188);
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
    uint64_t v39 = v56;
    v38(v56, v22, v23);
    goto LABEL_8;
  }
  sub_219360574((uint64_t)v20, v63, &qword_26AC27188);
  uint64_t result = v33((char *)v35, 1, v23);
  if (result != 1)
  {
    uint64_t v37 = v7;
    sub_219360620((uint64_t)v20, &qword_26AC27188);
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
    uint64_t v39 = v56;
    v38(v56, (char *)v35, v23);
    sub_219360620((uint64_t)v22, &qword_26AC27188);
LABEL_8:
    uint64_t v40 = v55;
    v38((char *)(v55 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_qrPublicKey), v39, v23);
    uint64_t v41 = sub_21935B74C((uint64_t)&unk_26CAB4158);
    unint64_t v43 = v42;
    uint64_t v66 = v41;
    unint64_t v67 = v42;
    v54[1] = sub_2193E2780();
    uint64_t v63 = sub_21936F188((unint64_t *)&qword_26AC274F0, MEMORY[0x263F047F8]);
    char v56 = (char *)sub_21935B908();
    id v44 = v59;
    uint64_t v45 = v65;
    sub_2193E26E0();
    sub_219348A70(v41, v43);
    uint64_t v47 = v57;
    uint64_t v46 = v58;
    sub_2193E2670();
    unint64_t v48 = &v47[*(int *)(v46 + 48)];
    uint64_t v49 = v61;
    uint64_t v50 = *(void (**)(uint64_t, char *, uint64_t))(v61 + 32);
    v50(v40 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_eidAESKey, v47, v37);
    v50(v40 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_eidHMACKey, v48, v37);
    uint64_t v66 = sub_21935B74C((uint64_t)&unk_26CAB4180);
    unint64_t v67 = v51;
    uint64_t v52 = v60;
    sub_2193E26E0();
    sub_219360620(v64, &qword_26AC27188);
    sub_219360620(v62, &qword_26AC27190);
    uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
    v53(v45, v37);
    sub_219348A70(v66, v67);
    v53((uint64_t)v44, v37);
    v50(v40 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_tunnelID, v52, v37);
    return v40;
  }
  __break(1u);
  return result;
}

uint64_t sub_21936AE74()
{
  return sub_2193E2680();
}

uint64_t sub_21936AF38@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5 = v3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E08);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E20);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v17) = HIDWORD(a1) - a1;
      if (!__OFSUB__(HIDWORD(a1), a1))
      {
        uint64_t v17 = (int)v17;
        goto LABEL_6;
      }
      __break(1u);
      goto LABEL_32;
    case 2uLL:
      uint64_t v19 = *(void *)(a1 + 16);
      uint64_t v18 = *(void *)(a1 + 24);
      BOOL v20 = __OFSUB__(v18, v19);
      uint64_t v17 = v18 - v19;
      if (!v20) {
        goto LABEL_6;
      }
LABEL_32:
      __break(1u);
      goto LABEL_33;
    case 3uLL:
      goto LABEL_14;
    default:
      uint64_t v17 = BYTE6(a2);
LABEL_6:
      if (v17 == 20)
      {
        uint64_t v78 = a3;
        uint64_t v79 = v14;
        uint64_t v21 = v13;
        uint64_t v22 = v16;
        uint64_t v23 = sub_2193E20F0();
        unint64_t v25 = v24;
        uint64_t v26 = sub_2193E20F0();
        unint64_t v28 = v27;
        unint64_t v73 = v25;
        uint64_t v74 = v23;
        uint64_t v81 = v23;
        unint64_t v82 = v25;
        sub_2193E2780();
        sub_21936F188((unint64_t *)&qword_26AC274F0, MEMORY[0x263F047F8]);
        sub_21935B908();
        uint64_t v4 = v79;
        sub_2193E2700();
        uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
        uint64_t v75 = v22;
        uint64_t v76 = v21;
        v29(v11, v22, v21);
        *(void *)&v11[*(int *)(v9 + 36)] = 4;
        a2 = sub_219351504((uint64_t)v11);
        a1 = v30;
        uint64_t v9 = v26;
        unint64_t v77 = v28;
        if (sub_219379924(v26, v28, a2, v30))
        {
          unint64_t v31 = a1;
          sub_2193E2670();
          uint64_t v32 = v81;
          unint64_t v33 = v82;
          unint64_t v34 = v73;
          uint64_t v35 = v74;
          uint64_t v36 = sub_21936F3A4(v74, v73, v81, v82, 0);
          unint64_t v38 = v37;
          sub_219348A70(v32, v33);
          if (v38 >> 60 != 15)
          {
            sub_21934FE6C(v36, v38, v78);
            sub_219348A70(v35, v34);
            sub_219348A70(a2, v31);
            sub_219348A70(v9, v77);
            return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v75, v76);
          }
          uint64_t v39 = v79;
          if (qword_26AC26F98 != -1) {
            swift_once();
          }
          uint64_t v40 = sub_2193E24F0();
          __swift_project_value_buffer(v40, (uint64_t)qword_26AC29118);
          uint64_t v41 = sub_2193E24D0();
          os_log_type_t v42 = sub_2193E2AE0();
          if (os_log_type_enabled(v41, v42))
          {
            unint64_t v43 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)unint64_t v43 = 0;
            _os_log_impl(&dword_219326000, v41, v42, "Could not decrypt caBLE advertisement.", v43, 2u);
            MEMORY[0x21D48A390](v43, -1, -1);
          }
          sub_219348A70(v35, v34);

          sub_219348A70(a2, v31);
          sub_219348A70(v9, v77);
          (*(void (**)(char *, uint64_t))(v39 + 8))(v75, v76);
        }
        else
        {
          unint64_t v5 = v73;
          if (qword_26AC26F98 != -1) {
LABEL_33:
          }
            swift_once();
          uint64_t v50 = sub_2193E24F0();
          __swift_project_value_buffer(v50, (uint64_t)qword_26AC29118);
          uint64_t v51 = v9;
          unint64_t v52 = v77;
          sub_21934CDF0(v9, v77);
          sub_21934CDF0(a2, a1);
          sub_21934CDF0(v9, v52);
          sub_21934CDF0(a2, a1);
          uint64_t v53 = sub_2193E24D0();
          os_log_type_t v54 = sub_2193E2AE0();
          int v55 = v54;
          if (os_log_type_enabled(v53, v54))
          {
            unint64_t v56 = a1;
            uint64_t v57 = swift_slowAlloc();
            uint64_t v72 = swift_slowAlloc();
            uint64_t v81 = v72;
            *(_DWORD *)uint64_t v57 = 136315394;
            sub_21934CDF0(v51, v52);
            uint64_t v58 = sub_2193E2090();
            int v71 = v55;
            unint64_t v60 = v59;
            sub_219348A70(v51, v52);
            uint64_t v80 = sub_21934C764(v58, v60, &v81);
            sub_2193E2C00();
            swift_bridgeObjectRelease();
            sub_219348A70(v51, v52);
            sub_219348A70(v51, v52);
            *(_WORD *)(v57 + 12) = 2080;
            uint64_t v70 = v57 + 14;
            sub_21934CDF0(a2, v56);
            uint64_t v61 = sub_2193E2090();
            unint64_t v63 = v62;
            sub_219348A70(a2, v56);
            uint64_t v80 = sub_21934C764(v61, v63, &v81);
            sub_2193E2C00();
            swift_bridgeObjectRelease();
            sub_219348A70(a2, v56);
            sub_219348A70(a2, v56);
            _os_log_impl(&dword_219326000, v53, (os_log_type_t)v71, "caBLE HMAC tag mismatch. Expected %s got %s.", (uint8_t *)v57, 0x16u);
            uint64_t v64 = v72;
            swift_arrayDestroy();
            MEMORY[0x21D48A390](v64, -1, -1);
            MEMORY[0x21D48A390](v57, -1, -1);
            sub_219348A70(v74, v5);

            sub_219348A70(a2, v56);
            sub_219348A70(v51, v52);
            (*(void (**)(char *, uint64_t))(v79 + 8))(v75, v76);
          }
          else
          {
            sub_219348A70(v74, v5);

            sub_219348A70(a2, a1);
            sub_219348A70(a2, a1);
            sub_219348A70(v9, v52);
            sub_219348A70(v9, v52);
            sub_219348A70(a2, a1);
            sub_219348A70(v9, v52);
            (*(void (**)(char *, uint64_t))(v4 + 8))(v75, v76);
          }
        }
        uint64_t v66 = type metadata accessor for ASCABLEAdvertisement();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v78, 1, 1, v66);
      }
      else
      {
LABEL_14:
        if (qword_26AC26F98 != -1) {
          swift_once();
        }
        uint64_t v44 = sub_2193E24F0();
        __swift_project_value_buffer(v44, (uint64_t)qword_26AC29118);
        sub_21934CDF0(a1, a2);
        uint64_t v45 = sub_2193E24D0();
        os_log_type_t v46 = sub_2193E2AE0();
        if (os_log_type_enabled(v45, v46))
        {
          uint64_t v47 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v47 = 134217984;
          unint64_t v48 = v47;
          uint64_t v49 = 0;
          switch(a2 >> 62)
          {
            case 1uLL:
              LODWORD(v49) = HIDWORD(a1) - a1;
              if (__OFSUB__(HIDWORD(a1), a1))
              {
                __break(1u);
LABEL_35:
                __break(1u);
                JUMPOUT(0x21936B85CLL);
              }
              uint64_t v49 = (int)v49;
LABEL_29:
              uint64_t v81 = v49;
              sub_2193E2C00();
              sub_219348A70(a1, a2);
              _os_log_impl(&dword_219326000, v45, v46, "Could not decrypt caBLE advertisement of incorrect size: %ld", v48, 0xCu);
              MEMORY[0x21D48A390](v48, -1, -1);
              break;
            case 2uLL:
              uint64_t v68 = *(void *)(a1 + 16);
              uint64_t v67 = *(void *)(a1 + 24);
              BOOL v20 = __OFSUB__(v67, v68);
              uint64_t v49 = v67 - v68;
              if (!v20) {
                goto LABEL_29;
              }
              goto LABEL_35;
            case 3uLL:
              goto LABEL_29;
            default:
              uint64_t v49 = BYTE6(a2);
              goto LABEL_29;
          }
        }
        else
        {
          sub_219348A70(a1, a2);
        }

        uint64_t v69 = type metadata accessor for ASCABLEAdvertisement();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(a3, 1, 1, v69);
      }
  }
}

uint64_t sub_21936B87C(uint64_t a1)
{
  v21[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E08);
  MEMORY[0x270FA5388](v21[0]);
  unint64_t v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E20);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ASCABLEAdvertisement() + 32));
  uint64_t v9 = *v8;
  unint64_t v10 = v8[1];
  sub_2193E2670();
  uint64_t v11 = v22;
  unint64_t v12 = v23;
  uint64_t v13 = sub_21936F3A4(v9, v10, v22, v23, 1);
  unint64_t v15 = v14;
  sub_219348A70(v11, v12);
  if (v15 >> 60 == 15)
  {
    if (qword_26AC26F98 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_2193E24F0();
    __swift_project_value_buffer(v16, (uint64_t)qword_26AC29118);
    uint64_t v17 = sub_2193E24D0();
    os_log_type_t v18 = sub_2193E2AE0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_219326000, v17, v18, "Could not encrypte caBLE advertisement.", v19, 2u);
      MEMORY[0x21D48A390](v19, -1, -1);
    }

    return 0;
  }
  else
  {
    uint64_t v22 = v13;
    unint64_t v23 = v15;
    sub_2193E2780();
    sub_21936F188((unint64_t *)&qword_26AC274F0, MEMORY[0x263F047F8]);
    sub_21935B908();
    sub_2193E2700();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v7, v4);
    *(void *)&v3[*(int *)(v21[0] + 36)] = 4;
    uint64_t v22 = v13;
    unint64_t v23 = v15;
    sub_21934CDF0(v13, v15);
    sub_21935AD3C((uint64_t)v3);
    sub_219360620((uint64_t)v3, &qword_267C18E08);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_21934CEB0(v13, v15);
    return v22;
  }
}

uint64_t sub_21936BBDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193E26A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  uint64_t v8 = sub_21935B74C((uint64_t)&unk_26CAB43A0);
  unint64_t v10 = v9;
  v13[2] = v8;
  v13[3] = v9;
  sub_2193E2780();
  sub_21936F188((unint64_t *)&qword_26AC274F0, MEMORY[0x263F047F8]);
  sub_21935B908();
  sub_2193E26F0();
  sub_219348A70(v8, v10);
  sub_2193E2670();
  uint64_t v11 = v14;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v11;
}

uint64_t sub_21936BDA4(uint64_t a1, unint64_t a2)
{
  unint64_t v71 = a2;
  uint64_t v61 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27420);
  MEMORY[0x270FA5388](v3 - 8);
  v55[0] = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27188);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v65 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v72 = (char *)v55 - v8;
  uint64_t v9 = sub_2193E2550();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2193E2560();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v69 = (char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27428);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v64 = (uint64_t)v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  unint64_t v63 = (char *)v55 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27190);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  unint64_t v62 = (char *)v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v70 = (char *)v55 - v23;
  MEMORY[0x270FA5388](v22);
  unint64_t v25 = (char *)v55 - v24;
  uint64_t v26 = sub_2193E2760();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)v55 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = v2;
  sub_219360574(v2 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_qrPrivateKey, (uint64_t)v25, &qword_26AC27190);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1) {
    goto LABEL_7;
  }
  uint64_t v67 = v27;
  uint64_t v68 = v29;
  unint64_t v30 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
  uint64_t v57 = (char *)v26;
  v30(v29, v25, v26);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F31AC8], v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C190A0);
  uint64_t v31 = sub_2193E2580();
  uint64_t v32 = *(void *)(v31 - 8);
  unint64_t v33 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v34 = swift_allocObject();
  long long v56 = xmmword_2193E7190;
  *(_OWORD *)(v34 + 16) = xmmword_2193E7190;
  (*(void (**)(unint64_t, void, uint64_t))(v32 + 104))(v34 + v33, *MEMORY[0x263F31AD0], v31);
  sub_2193E2570();
  uint64_t v35 = sub_21935B74C((uint64_t)&unk_26CAB4628);
  uint64_t v59 = v36;
  uint64_t v60 = v35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C190A8);
  uint64_t v37 = swift_allocObject();
  uint64_t v58 = v37;
  *(_OWORD *)(v37 + 16) = v56;
  uint64_t v38 = v61;
  unint64_t v39 = v71;
  *(void *)(v37 + 32) = v61;
  *(void *)(v37 + 40) = v39;
  uint64_t v40 = v67;
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, char *))(v67 + 56);
  unint64_t v25 = v57;
  v41(v70, 1, 1, v57);
  uint64_t v42 = sub_2193E2730();
  unint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56);
  v43(v72, 1, 1, v42);
  uint64_t v44 = *(void (**)(char *, char *, char *))(v40 + 16);
  uint64_t v45 = v62;
  v44(v62, v68, v25);
  v41(v45, 0, 1, v25);
  v43(v65, 1, 1, v42);
  sub_21934CDF0(v38, v71);
  sub_2193E2770();
  sub_2193E26D0();
  sub_2193E2780();
  sub_21936F188(&qword_267C190B0, MEMORY[0x263F046F0]);
  sub_21936F188(&qword_267C190B8, MEMORY[0x263F047F8]);
  uint64_t v46 = (uint64_t)v63;
  sub_2193E2520();
  (*(void (**)(char *, char *))(v67 + 8))(v68, v25);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC272C8);
  uint64_t v48 = *(void *)(v47 - 8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v46, 0, 1, v47);
  uint64_t v49 = v64;
  sub_219360140(v46, v64, &qword_26AC27428);
  uint64_t v50 = v66 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_noiseManager;
  swift_beginAccess();
  sub_21936F120(v49, v50);
  swift_endAccess();
  swift_beginAccess();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v50, 1, v47) == 1)
  {
    __break(1u);
LABEL_7:
    sub_219360620((uint64_t)v25, &qword_26AC27190);
    uint64_t result = sub_2193E2EF0();
    __break(1u);
    return result;
  }
  uint64_t v51 = v55[0];
  uint64_t v52 = v55[1];
  uint64_t v53 = sub_2193E2510();
  swift_endAccess();
  if (!v52) {
    sub_219360620(v51, &qword_26AC27420);
  }
  return v53;
}

uint64_t sub_21936C5F0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v81 = a2;
  unint64_t v96 = a4;
  uint64_t v84 = a3;
  uint64_t v80 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27420);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  unint64_t v77 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v76 = (uint64_t)&v75 - v8;
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19098);
  uint64_t v9 = MEMORY[0x270FA5388](v94);
  uint64_t v79 = (uint64_t *)((char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v78 = (uint64_t *)((char *)&v75 - v12);
  MEMORY[0x270FA5388](v11);
  unint64_t v95 = (uint64_t *)((char *)&v75 - v13);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27188);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v91 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v97 = (char *)&v75 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27190);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v21 = (char *)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v85 = v21;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v75 - v22;
  id v86 = (char *)&v75 - v22;
  uint64_t v24 = sub_2193E2550();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_2193E2560();
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v89 = (char *)&v75 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27428);
  uint64_t v31 = MEMORY[0x270FA5388](v30 - 8);
  uint64_t v92 = (uint64_t)&v75 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v90 = (char *)&v75 - v33;
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v27, *MEMORY[0x263F31AC8], v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C190A0);
  uint64_t v34 = sub_2193E2580();
  uint64_t v35 = *(void *)(v34 - 8);
  unint64_t v36 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  uint64_t v37 = swift_allocObject();
  long long v83 = xmmword_2193E7190;
  *(_OWORD *)(v37 + 16) = xmmword_2193E7190;
  (*(void (**)(unint64_t, void, uint64_t))(v35 + 104))(v37 + v36, *MEMORY[0x263F31AD0], v34);
  sub_2193E2570();
  uint64_t v38 = sub_21935B74C((uint64_t)&unk_26CAB43C8);
  uint64_t v87 = v39;
  uint64_t v88 = v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C190A8);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = v83;
  unint64_t v41 = v96;
  *(void *)(v40 + 32) = a3;
  *(void *)(v40 + 40) = v41;
  uint64_t v42 = sub_2193E2760();
  unint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56);
  v43(v23, 1, 1, v42);
  uint64_t v44 = sub_2193E2730();
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56);
  v46(v97, 1, 1, v44);
  v43(v21, 1, 1, v42);
  uint64_t v47 = v93;
  uint64_t v48 = v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v91, v93 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_qrPublicKey, v44);
  v46(v48, 0, 1, v44);
  sub_21934CDF0(v84, v96);
  sub_2193E2770();
  sub_2193E26D0();
  sub_2193E2780();
  sub_21936F188(&qword_267C190B0, MEMORY[0x263F046F0]);
  sub_21936F188(&qword_267C190B8, MEMORY[0x263F047F8]);
  uint64_t v49 = v90;
  sub_2193E2520();
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC272C8);
  uint64_t v51 = *(void *)(v50 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v49, 0, 1, v50);
  uint64_t v52 = (uint64_t)v49;
  uint64_t v53 = v92;
  sub_219360140(v52, v92, &qword_26AC27428);
  uint64_t v54 = v47 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_noiseManager;
  swift_beginAccess();
  sub_21936F120(v53, v54);
  swift_endAccess();
  swift_beginAccess();
  int v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  uint64_t result = v55(v54, 1, v50);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v57 = (uint64_t)v95 + *(int *)(v94 + 48);
    uint64_t v58 = v82;
    uint64_t v59 = sub_2193E2500();
    if (v58)
    {
      swift_endAccess();
      return v54;
    }
    uint64_t v61 = v59;
    unint64_t v62 = v60;
    unint64_t v96 = 0;
    swift_endAccess();
    unint64_t v63 = v95;
    *unint64_t v95 = v61;
    v63[1] = v62;
    uint64_t v97 = (char *)v55;
    uint64_t v64 = v94;
    uint64_t v65 = (uint64_t)v78;
    uint64_t v66 = (uint64_t)v78 + *(int *)(v94 + 48);
    uint64_t *v78 = v61;
    *(void *)(v65 + 8) = v62;
    sub_219360574(v57, v66, &qword_26AC27420);
    sub_21934CDF0(v61, v62);
    sub_219360620(v65, &qword_267C19098);
    uint64_t v67 = (uint64_t)v79;
    uint64_t v68 = (uint64_t)v79 + *(int *)(v64 + 48);
    uint64_t v69 = *v63;
    unint64_t v70 = v63[1];
    *uint64_t v79 = v69;
    *(void *)(v67 + 8) = v70;
    sub_219360574(v57, v68, &qword_26AC27420);
    sub_21934CDF0(v69, v70);
    sub_219360620(v67, &qword_267C19098);
    swift_beginAccess();
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v97)(v54, 1, v50);
    if (result != 1)
    {
      uint64_t v71 = (uint64_t)v77;
      unint64_t v72 = v96;
      uint64_t v54 = sub_2193E2510();
      swift_endAccess();
      sub_219360620((uint64_t)v95, &qword_267C19098);
      if (!v72)
      {
        uint64_t v73 = v76;
        sub_219360140(v71, v76, &qword_26AC27420);
        uint64_t v74 = v93 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_noiseTransportCipher;
        swift_beginAccess();
        sub_21936F0B8(v73, v74);
        swift_endAccess();
        sub_219360620(v73, &qword_26AC27420);
      }
      return v54;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21936CF44()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27420);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = v0 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_noiseManager;
  swift_beginAccess();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC272C8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = sub_2193E2500();
    if (v1)
    {
      return swift_endAccess();
    }
    else
    {
      uint64_t v13 = v11;
      unint64_t v14 = v12;
      swift_endAccess();
      sub_219348A70(v13, v14);
      sub_219360140((uint64_t)v5, (uint64_t)v7, &qword_26AC27420);
      uint64_t v15 = v0 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_noiseTransportCipher;
      swift_beginAccess();
      sub_21936F0B8((uint64_t)v7, v15);
      swift_endAccess();
      return sub_219360620((uint64_t)v7, &qword_26AC27420);
    }
  }
  return result;
}

uint64_t sub_21936D110(long long *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2193E2250();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = a1[3];
  long long v23 = a1[2];
  long long v24 = v9;
  long long v25 = a1[4];
  uint64_t v26 = *((void *)a1 + 10);
  long long v10 = a1[1];
  long long v21 = *a1;
  long long v22 = v10;
  sub_2193E22A0();
  swift_allocObject();
  sub_2193E2290();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F2BE88], v5);
  sub_2193E2260();
  sub_21936EAE8();
  uint64_t v11 = sub_2193E2270();
  unint64_t v13 = v12;
  swift_release();
  if (v2) {
    return v11;
  }
  uint64_t v14 = sub_21936EF7C(v11, v13);
  unint64_t v16 = v15;
  sub_219348A70(v11, v13);
  v20[0] = v14;
  v20[1] = v16;
  uint64_t v17 = v3 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_noiseTransportCipher;
  swift_beginAccess();
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC270F0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18);
  if (result != 1)
  {
    sub_21935B908();
    uint64_t v11 = sub_2193E2540();
    swift_endAccess();
    sub_219348A70(v14, v16);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_21936D360(uint64_t a1, uint64_t a2, char a3)
{
  v17[3] = a1;
  v17[4] = a2;
  uint64_t v6 = v3 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_noiseTransportCipher;
  swift_beginAccess();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC270F0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (result == 1) {
    goto LABEL_20;
  }
  sub_21935B908();
  uint64_t v9 = sub_2193E2530();
  unint64_t v11 = v10;
  uint64_t result = swift_endAccess();
  if (v4) {
    return result;
  }
  sub_21934CDF0(v9, v11);
  uint64_t v12 = v9;
  unint64_t v13 = v11;
  if (a3)
  {
    __int16 v14 = sub_21936D7F8(v9, v11);
    uint64_t result = sub_219348A70(v9, v11);
    if ((v14 & 0x100) != 0)
    {
      sub_21934CDF0(v9, v11);
      uint64_t v12 = v9;
      unint64_t v13 = v11;
      goto LABEL_8;
    }
    if ((((v14 + 1) >> 8) & 1) == 0)
    {
      sub_21934CDF0(v9, v11);
      sub_21936D9D8((v14 + 1), v9, v11, v17);
      uint64_t v12 = v17[0];
      unint64_t v13 = v17[1];
      goto LABEL_8;
    }
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
LABEL_8:
  sub_21934CDF0(v12, v13);
  __int16 v15 = sub_21936A57C(v12, v13);
  sub_219348A70(v12, v13);
  if ((v15 & 0x100) != 0)
  {
    sub_21936EA94();
    swift_allocError();
    unsigned char *v16 = 0;
  }
  else
  {
    if (!(_BYTE)v15)
    {
      sub_219348A70(v12, v13);
      sub_219348A70(v9, v11);
      return 0;
    }
    if (v15 == 1 || v15 == 2)
    {
      sub_21936E4F4(1, v12, v13, v17);
      sub_219348A70(v9, v11);
      return v17[0];
    }
    sub_21936EA94();
    swift_allocError();
    unsigned char *v16 = v15;
  }
  v16[1] = HIBYTE(v15) & 1;
  swift_willThrow();
  sub_219348A70(v12, v13);
  return sub_219348A70(v9, v11);
}

uint64_t sub_21936D610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v6 = v3 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_noiseTransportCipher;
  swift_beginAccess();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC270F0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (result == 1) {
    goto LABEL_9;
  }
  sub_21935B908();
  uint64_t v9 = sub_2193E2530();
  unint64_t v11 = v10;
  uint64_t result = swift_endAccess();
  if (v4) {
    return result;
  }
  sub_21934CDF0(v9, v11);
  __int16 v12 = sub_21936D7F8(v9, v11);
  uint64_t result = sub_219348A70(v9, v11);
  if ((v12 & 0x100) == 0)
  {
    if ((((v12 + 1) >> 8) & 1) == 0)
    {
      sub_21936D9D8((v12 + 1), v9, v11, (uint64_t *)&v19);
      unint64_t v11 = *((void *)&v19 + 1);
      uint64_t v9 = v19;
      goto LABEL_6;
    }
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
LABEL_6:
  sub_2193E2230();
  swift_allocObject();
  sub_2193E2220();
  sub_21936E4A0();
  sub_2193E2200();
  sub_219348A70(v9, v11);
  uint64_t result = swift_release();
  uint64_t v13 = v20;
  uint64_t v14 = v23;
  char v15 = v24;
  long long v16 = v21;
  long long v17 = v22;
  long long v18 = v25;
  *(_OWORD *)a3 = v19;
  *(void *)(a3 + 16) = v13;
  *(_OWORD *)(a3 + 24) = v16;
  *(_OWORD *)(a3 + 40) = v17;
  *(void *)(a3 + 56) = v14;
  *(unsigned char *)(a3 + 64) = v15;
  *(_OWORD *)(a3 + 72) = v18;
  return result;
}

uint64_t sub_21936D7F8(uint64_t a1, unint64_t a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  int v2 = 1;
  int v3 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (!((a1 ^ (unint64_t)(a1 << 32)) >> 32)) {
        goto LABEL_5;
      }
      goto LABEL_16;
    case 2uLL:
      uint64_t v5 = *(void *)(a1 + 16);
      uint64_t v4 = *(void *)(a1 + 24);
      if (v5 != v4)
      {
        if (a2 >> 62 == 2)
        {
          uint64_t v6 = v4 - 1;
          if (__OFSUB__(v4, 1))
          {
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
          if (v6 < v5)
          {
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
          }
          if (v6 >= v4) {
            goto LABEL_25;
          }
          uint64_t v7 = sub_2193E1DF0();
          if (!v7) {
            goto LABEL_27;
          }
          uint64_t v8 = v7;
          a1 = sub_2193E1E20();
          uint64_t v9 = v6 - a1;
          if (!__OFSUB__(v6, a1)) {
            goto LABEL_19;
          }
          __break(1u);
        }
LABEL_16:
        uint64_t v10 = a1 >> 32;
        if (a1 >> 32 <= (int)a1)
        {
          __break(1u);
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
        uint64_t v11 = sub_2193E1DF0();
        if (v11)
        {
          uint64_t v8 = v11;
          uint64_t v12 = v10 - 1;
          uint64_t v13 = sub_2193E1E20();
          uint64_t v9 = v12 - v13;
          if (!__OFSUB__(v12, v13))
          {
LABEL_19:
            int v2 = 0;
            int v3 = *(unsigned __int8 *)(v8 + v9);
            return v3 | (v2 << 8);
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_27:
        __break(1u);
        JUMPOUT(0x21936D9C8);
      }
      int v3 = 0;
      int v2 = 1;
      return v3 | (v2 << 8);
    case 3uLL:
      return v3 | (v2 << 8);
    default:
      if ((a2 & 0xFF000000000000) != 0)
      {
        int v2 = 0;
        uint64_t v15 = a1;
        __int16 v16 = a2;
        char v17 = BYTE2(a2);
        char v18 = BYTE3(a2);
        char v19 = BYTE4(a2);
        char v20 = BYTE5(a2);
        int v3 = *((unsigned __int8 *)&v15 + BYTE6(a2) - 1);
      }
      else
      {
LABEL_5:
        int v3 = 0;
      }
      return v3 | (v2 << 8);
  }
}

uint64_t sub_21936D9D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a1 < 0)
  {
LABEL_14:
    __break(1u);
    JUMPOUT(0x21936DB48);
  }
  unint64_t v5 = a3 >> 62;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = a2 >> 32;
      uint64_t v8 = (int)a2;
      break;
    case 2uLL:
      uint64_t v8 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v8 = 0;
      uint64_t v9 = BYTE6(a3);
      break;
  }
  uint64_t v10 = -a1;
  uint64_t v11 = sub_21936E92C(v9, v8, a2, a3);
  if (v11 > 0 || v11 <= v10)
  {
    uint64_t v12 = sub_21936EA18(v9, v10, a2, a3);
    uint64_t v13 = 0;
    switch((int)v5)
    {
      case 1:
        uint64_t v13 = (int)a2;
        break;
      case 2:
        uint64_t v13 = *(void *)(a2 + 16);
        break;
      default:
        break;
    }
    if (v12 < v13)
    {
      __break(1u);
      goto LABEL_14;
    }
  }
  uint64_t v14 = sub_2193E20F0();
  uint64_t v16 = v15;
  uint64_t result = sub_219348A70(a2, a3);
  *a4 = v14;
  a4[1] = v16;
  return result;
}

uint64_t sub_21936DB78@<X0>(const void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, unint64_t a7@<X6>, char **a8@<X7>, _DWORD *a9@<X8>)
{
  v28[2] = *MEMORY[0x263EF8340];
  switch(a4 >> 62)
  {
    case 1uLL:
      if (a3 >> 32 < (int)a3) {
        __break(1u);
      }
      sub_21934CDF0(a6, a7);
      sub_21934CDF0(a3, a4);
      int v21 = sub_21936F1D0((int)a3, a3 >> 32, a4 & 0x3FFFFFFFFFFFFFFFLL, a5 & 1, a3, a4, a1, a2, a6, a7, a8);
      if (v9) {
        goto LABEL_16;
      }
      int v19 = v21;
      goto LABEL_11;
    case 2uLL:
      uint64_t v17 = *(void *)(a3 + 16);
      uint64_t v22 = *(void *)(a3 + 24);
      sub_21934CDF0(a6, a7);
      sub_21934CDF0(a3, a4);
      swift_retain();
      swift_retain();
      int v18 = sub_21936F1D0(v17, v22, a4 & 0x3FFFFFFFFFFFFFFFLL, a5 & 1, a3, a4, a1, a2, a6, a7, a8);
      if (v9) {
        goto LABEL_15;
      }
      int v19 = v18;
      swift_release();
      swift_release();
LABEL_11:
      sub_219348A70(a3, a4);
      uint64_t result = sub_219348A70(a6, a7);
      break;
    case 3uLL:
      memset(v28, 0, 14);
      sub_21934CDF0(a6, a7);
      sub_21936DED8(v28, a5 & 1, a3, a4, a1, a6, &v27, a7, a8);
      goto LABEL_6;
    default:
      v28[0] = a3;
      LOWORD(v28[1]) = a4;
      BYTE2(v28[1]) = BYTE2(a4);
      BYTE3(v28[1]) = BYTE3(a4);
      BYTE4(v28[1]) = BYTE4(a4);
      BYTE5(v28[1]) = BYTE5(a4);
      sub_21934CDF0(a6, a7);
      sub_21936DED8(v28, a5 & 1, a3, a4, a1, a6, &v27, a7, a8);
LABEL_6:
      if (v9)
      {
        sub_219348A70(a3, a4);
        sub_219348A70(a6, a7);
        __break(1u);
LABEL_15:
        sub_219348A70(a3, a4);
        sub_219348A70(a6, a7);
        swift_release();
        swift_release();
        __break(1u);
LABEL_16:
        sub_219348A70(a6, a7);
        sub_219348A70(a3, a4);
        __break(1u);
        JUMPOUT(0x21936DEC8);
      }
      sub_219348A70(a3, a4);
      uint64_t result = sub_219348A70(a6, a7);
      int v19 = v27;
      break;
  }
  *a9 = v19;
  return result;
}

uint64_t sub_21936DED8@<X0>(const void *a1@<X0>, char a2@<W2>, uint64_t a3@<X3>, unint64_t a4@<X4>, const void *a5@<X5>, uint64_t a6@<X7>, _DWORD *a7@<X8>, unint64_t a8, char **a9)
{
  size_t v9 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a3), a3))
      {
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
        JUMPOUT(0x21936E050);
      }
      size_t v9 = HIDWORD(a3) - (int)a3;
LABEL_6:
      size_t v12 = 0;
      switch(a8 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(a6), a6)) {
            goto LABEL_16;
          }
          size_t v12 = HIDWORD(a6) - (int)a6;
LABEL_11:
          int v19 = *a9;
          size_t dataOutAvailable = *((void *)*a9 + 2);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *a9 = v19;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            int v19 = sub_219386AB4(0, dataOutAvailable, 0, v19);
          }
          *a9 = v19;
          uint64_t result = CCCrypt((a2 & 1) == 0, 0, 0, a1, v9, 0, a5, v12, v19 + 32, dataOutAvailable, 0);
          *a7 = result;
          return result;
        case 2uLL:
          uint64_t v13 = *(void *)(a6 + 16);
          uint64_t v14 = *(void *)(a6 + 24);
          size_t v12 = v14 - v13;
          if (!__OFSUB__(v14, v13)) {
            goto LABEL_11;
          }
          goto LABEL_17;
        case 3uLL:
          goto LABEL_11;
        default:
          size_t v12 = BYTE6(a8);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v11 = *(void *)(a3 + 16);
      uint64_t v10 = *(void *)(a3 + 24);
      size_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_15;
    case 3uLL:
      goto LABEL_6;
    default:
      size_t v9 = BYTE6(a4);
      goto LABEL_6;
  }
}

uint64_t sub_21936E070()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_qrSymmetricKey;
  uint64_t v2 = sub_2193E26A0();
  int v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  sub_219360620(v0 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_qrPrivateKey, &qword_26AC27190);
  uint64_t v4 = v0 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_qrPublicKey;
  uint64_t v5 = sub_2193E2730();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  v3(v0 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_eidAESKey, v2);
  v3(v0 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_eidHMACKey, v2);
  v3(v0 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_tunnelID, v2);
  sub_219360620(v0 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_noiseManager, &qword_26AC27428);
  sub_219360620(v0 + OBJC_IVAR____TtC26AuthenticationServicesCore26ASCABLECryptographyManager_noiseTransportCipher, &qword_26AC27420);
  uint64_t v6 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v7 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v6, v7);
}

uint64_t sub_21936E204()
{
  return type metadata accessor for ASCABLECryptographyManager();
}

uint64_t type metadata accessor for ASCABLECryptographyManager()
{
  uint64_t result = qword_26AC272A8;
  if (!qword_26AC272A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_21936E258()
{
  sub_2193E26A0();
  if (v0 <= 0x3F)
  {
    sub_21936E3F8();
    if (v1 <= 0x3F)
    {
      sub_2193E2730();
      if (v2 <= 0x3F)
      {
        sub_21936E450(319, &qword_26AC272C0, &qword_26AC272C8);
        if (v3 <= 0x3F)
        {
          sub_21936E450(319, qword_26AC272D0, &qword_26AC270F0);
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

void sub_21936E3F8()
{
  if (!qword_26AC272B8)
  {
    sub_2193E2760();
    unint64_t v0 = sub_2193E2BB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC272B8);
    }
  }
}

void sub_21936E450(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v4 = sub_2193E2BB0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_21936E4A0()
{
  unint64_t result = qword_267C19080;
  if (!qword_267C19080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19080);
  }
  return result;
}

uint64_t sub_21936E4F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v5 = a3 >> 62;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v10 = (int)a2;
      uint64_t v9 = a2 >> 32;
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v10 = 0;
      uint64_t v9 = BYTE6(a3);
      break;
  }
  uint64_t v11 = sub_21936E92C(v10, v9, a2, a3);
  if (!a1 || v11 < 0 || v11 >= a1)
  {
    uint64_t v12 = sub_21936EA18(v10, a1, a2, a3);
    uint64_t v13 = 0;
    switch((int)v5)
    {
      case 1:
        uint64_t v13 = a2 >> 32;
        break;
      case 2:
        uint64_t v13 = *(void *)(a2 + 24);
        break;
      case 3:
        break;
      default:
        uint64_t v13 = BYTE6(a3);
        break;
    }
    if (v13 < v12)
    {
LABEL_16:
      __break(1u);
      JUMPOUT(0x21936E674);
    }
  }
  uint64_t v14 = sub_2193E20F0();
  uint64_t v16 = v15;
  uint64_t result = sub_219348A70(a2, a3);
  *a4 = v14;
  a4[1] = v16;
  return result;
}

void *sub_21936E6A4(void *result, int __c)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  unint64_t v2 = result[1];
  unint64_t v4 = result;
  switch(v2 >> 62)
  {
    case 1uLL:
      uint64_t __b = *result;
      uint64_t v19 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t result = sub_21936E898((int *)&__b, __c);
      uint64_t v5 = __b;
      unint64_t v6 = v19 | 0x4000000000000000;
      goto LABEL_4;
    case 2uLL:
      uint64_t __b = *result;
      uint64_t v19 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_2193E2000();
      uint64_t v7 = v19;
      uint64_t v8 = *(void *)(__b + 16);
      uint64_t v9 = *(void *)(__b + 24);
      uint64_t v10 = sub_2193E1DF0();
      if (!v10)
      {
        __break(1u);
        JUMPOUT(0x21936E888);
      }
      uint64_t v11 = v10;
      uint64_t v12 = sub_2193E1E20();
      uint64_t v13 = v8 - v12;
      if (__OFSUB__(v8, v12))
      {
        __break(1u);
LABEL_14:
        __break(1u);
      }
      BOOL v14 = __OFSUB__(v9, v8);
      int64_t v15 = v9 - v8;
      if (v14) {
        goto LABEL_14;
      }
      uint64_t v16 = sub_2193E1E10();
      if (v16 >= v15) {
        size_t v17 = v15;
      }
      else {
        size_t v17 = v16;
      }
      uint64_t result = memset((void *)(v11 + v13), __c, v17);
      void *v4 = __b;
      v4[1] = v7 | 0x8000000000000000;
      return result;
    case 3uLL:
      return result;
    default:
      uint64_t __b = *result;
      LOWORD(v19) = v2;
      BYTE2(v19) = BYTE2(v2);
      BYTE3(v19) = BYTE3(v2);
      BYTE4(v19) = BYTE4(v2);
      BYTE5(v19) = BYTE5(v2);
      BYTE6(v19) = BYTE6(v2);
      uint64_t result = memset(&__b, __c, BYTE6(v2));
      uint64_t v5 = __b;
      unint64_t v6 = v19 | ((unint64_t)BYTE4(v19) << 32) | ((unint64_t)BYTE5(v19) << 40) | ((unint64_t)BYTE6(v19) << 48);
LABEL_4:
      void *v4 = v5;
      v4[1] = v6;
      return result;
  }
}

char *sub_21936E898(int *a1, int a2)
{
  uint64_t result = (char *)sub_2193E2080();
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  if ((int)v6 < (int)v5)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t result = (char *)sub_2193E1DF0();
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v7 = result;
  uint64_t result = (char *)sub_2193E1E20();
  uint64_t v8 = v5 - (void)result;
  if (__OFSUB__(v5, result))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  int64_t v9 = v6 - v5;
  uint64_t v10 = sub_2193E1E10();
  if (v10 >= v9) {
    size_t v11 = v9;
  }
  else {
    size_t v11 = v10;
  }

  return (char *)memset(&v7[v8], a2, v11);
}

uint64_t sub_21936E92C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v5 = (int)a3;
      uint64_t v4 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v5 = *(void *)(a3 + 16);
      uint64_t v4 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v5 = 0;
      uint64_t v4 = BYTE6(a4);
      break;
  }
  if (v4 < a1 || v5 > a1)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v7 = (int)a3;
      uint64_t v6 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(a3 + 16);
      uint64_t v6 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v7 = 0;
      uint64_t v6 = BYTE6(a4);
      break;
  }
  if (v6 < a2 || v7 > a2) {
    goto LABEL_16;
  }
  BOOL v8 = __OFSUB__(a2, a1);
  uint64_t result = a2 - a1;
  if (v8)
  {
LABEL_17:
    __break(1u);
    JUMPOUT(0x21936E9F8);
  }
  return result;
}

uint64_t sub_21936EA18(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v4 = __OFADD__(a1, a2);
  uint64_t result = a1 + a2;
  if (v4)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v7 = (int)a3;
      uint64_t v6 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(a3 + 16);
      uint64_t v6 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v7 = 0;
      uint64_t v6 = BYTE6(a4);
      break;
  }
  if (v6 < result || result < v7)
  {
LABEL_10:
    __break(1u);
    JUMPOUT(0x21936EA84);
  }
  return result;
}

unint64_t sub_21936EA94()
{
  unint64_t result = qword_267C19088;
  if (!qword_267C19088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19088);
  }
  return result;
}

unint64_t sub_21936EAE8()
{
  unint64_t result = qword_267C19090;
  if (!qword_267C19090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19090);
  }
  return result;
}

unint64_t sub_21936EB3C(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  unint64_t result = sub_2193E2900();
  if (v6) {
    unint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }

  return sub_2193E29C0();
}

uint64_t sub_21936EBEC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27188);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v34 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27190);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v35 = (uint64_t)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2193E2730();
  uint64_t v32 = *(void *)(v12 - 8);
  uint64_t v33 = v12;
  MEMORY[0x270FA5388](v12);
  BOOL v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_2193E26A0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  int v21 = (char *)&v30 - v20;
  uint64_t v36 = a1;
  unint64_t v37 = a2;
  sub_21934CDF0(a1, a2);
  uint64_t v22 = MEMORY[0x263F06F78];
  sub_2193E2680();
  uint64_t v36 = a3;
  unint64_t v37 = a4;
  sub_21934CDF0(a3, a4);
  uint64_t v23 = v38;
  sub_2193E2720();
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  }
  else
  {
    char v24 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v31 = v15;
    v24(v19, v21, v15);
    uint64_t v25 = sub_2193E2760();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v35, 1, 1, v25);
    uint64_t v26 = v32;
    uint64_t v27 = v33;
    uint64_t v28 = (uint64_t)v34;
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v34, v14, v33);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v28, 0, 1, v27);
    type metadata accessor for ASCABLECryptographyManager();
    swift_allocObject();
    uint64_t v22 = sub_21936A724((uint64_t)v19, v35, v28);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v31);
  }
  return v22;
}

uint64_t sub_21936EF7C(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v4) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_11:
        __break(1u);
        JUMPOUT(0x21936F0A8);
      }
      uint64_t v4 = (int)v4;
LABEL_6:
      BOOL v8 = -v4 < 0;
      uint64_t v9 = -v4 & 0x1F;
      uint64_t v10 = v4 & 0x1F;
      if (v8) {
        uint64_t v11 = v10;
      }
      else {
        uint64_t v11 = -v9;
      }
      *(void *)&long long v15 = sub_21935B80C(32 - v11);
      *((void *)&v15 + 1) = v12;
      sub_21936E6A4(&v15, 0);
      sub_2193E2100();
      long long v13 = v15;
      sub_21934CDF0(v15, *((unint64_t *)&v15 + 1));
      sub_21934CDF0(a1, a2);
      sub_21935AB18(v13, *((unint64_t *)&v13 + 1));
      sub_219348A70(v13, *((unint64_t *)&v13 + 1));
      sub_219348A70(v13, *((unint64_t *)&v13 + 1));
      return a1;
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v4 = v5 - v6;
      if (!v7) {
        goto LABEL_6;
      }
      goto LABEL_11;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_21936F0B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_21936F120(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_21936F188(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21936F1D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, unint64_t a6, const void *a7, uint64_t a8, uint64_t a9, unint64_t a10, char **a11)
{
  uint64_t result = sub_2193E1DF0();
  uint64_t v18 = (char *)result;
  if (result)
  {
    uint64_t result = sub_2193E1E20();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v18 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_2193E1E10();
  uint64_t result = sub_21936DED8(v18, a4 & 1, a5, a6, a7, a9, &v20, a10, a11);
  if (!v11) {
    return v20;
  }
  return result;
}

uint64_t sub_21936F2C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6, uint64_t a7, unint64_t a8, char **a9)
{
  uint64_t result = sub_2193E1DF0();
  uint64_t v17 = (char *)result;
  if (result)
  {
    uint64_t result = sub_2193E1E20();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v17 += a1 - result;
  }
  BOOL v18 = __OFSUB__(a2, a1);
  uint64_t v19 = a2 - a1;
  if (v18)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v20 = sub_2193E1E10();
  if (v20 >= v19) {
    uint64_t v21 = v19;
  }
  else {
    uint64_t v21 = v20;
  }
  uint64_t v22 = &v17[v21];
  if (v17) {
    uint64_t v23 = (uint64_t)v22;
  }
  else {
    uint64_t v23 = 0;
  }
  uint64_t result = sub_21936DB78(v17, v23, a4, a5, a6 & 1, a7, a8, a9, &v25);
  if (!v24) {
    return v25;
  }
  return result;
}

uint64_t sub_21936F3A4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  v36[1] = *(char **)MEMORY[0x263EF8340];
  uint64_t v5 = a2 >> 62;
  uint64_t v11 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v11) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
      }
      uint64_t v11 = (int)v11;
LABEL_6:
      if (v11 <= 0) {
        uint64_t v15 = -(-v11 & 0xF);
      }
      else {
        uint64_t v15 = v11 & 0xF;
      }
      if (!__OFADD__(v11, v15))
      {
        v36[0] = (char *)sub_2193DF988(0, v11 + v15);
        switch((int)v5)
        {
          case 1:
            if (a1 >> 32 < (int)a1) {
              goto LABEL_42;
            }
            sub_21934CDF0(a3, a4);
            sub_21934CDF0(a1, a2);
            int v18 = sub_21936F2C4((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4, a5 & 1, a1, a2, v36);
LABEL_31:
            LODWORD(v5) = v18;
LABEL_32:
            sub_219348A70(a3, a4);
            sub_219348A70(a1, a2);
            if (!v5)
            {
LABEL_26:
              uint64_t v26 = sub_21935B74C((uint64_t)v36[0]);
              swift_bridgeObjectRelease();
              return v26;
            }
LABEL_33:
            if (qword_26AC26F98 == -1) {
              goto LABEL_34;
            }
            goto LABEL_39;
          case 2:
            uint64_t v5 = *(void *)(a1 + 16);
            uint64_t v17 = *(void *)(a1 + 24);
            sub_21934CDF0(a3, a4);
            sub_21934CDF0(a1, a2);
            swift_retain();
            swift_retain();
            LODWORD(v5) = sub_21936F2C4(v5, v17, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4, a5 & 1, a1, a2, v36);
            swift_release();
            swift_release();
            goto LABEL_32;
          case 3:
            memset(v35, 0, 14);
            switch(a4 >> 62)
            {
              case 1uLL:
                if (a3 >> 32 < (int)a3) {
                  goto LABEL_43;
                }
                sub_21934CDF0(a3, a4);
                int v18 = sub_21936F1D0((int)a3, a3 >> 32, a4 & 0x3FFFFFFFFFFFFFFFLL, a5 & 1, a3, a4, v35, (uint64_t)v35, a1, a2, v36);
                goto LABEL_31;
              case 2uLL:
                uint64_t v19 = *(void *)(a3 + 16);
                uint64_t v20 = *(void *)(a3 + 24);
                sub_21934CDF0(a3, a4);
                swift_retain();
                swift_retain();
                int v21 = sub_21936F1D0(v19, v20, a4 & 0x3FFFFFFFFFFFFFFFLL, a5 & 1, a3, a4, v35, (uint64_t)v35, a1, a2, v36);
                goto LABEL_20;
              case 3uLL:
                memset(v34, 0, 14);
                sub_21934CDF0(a3, a4);
                unint64_t v32 = a2;
                char v16 = a5 & 1;
                goto LABEL_22;
              default:
                v34[0] = a3;
                LOWORD(v34[1]) = a4;
                BYTE2(v34[1]) = BYTE2(a4);
                BYTE3(v34[1]) = BYTE3(a4);
                BYTE4(v34[1]) = BYTE4(a4);
                BYTE5(v34[1]) = BYTE5(a4);
                sub_21934CDF0(a3, a4);
                unint64_t v32 = a2;
                char v16 = a5 & 1;
LABEL_22:
                uint64_t v24 = a3;
                unint64_t v25 = a4;
                goto LABEL_25;
            }
          default:
            v35[0] = a1;
            LOWORD(v35[1]) = a2;
            BYTE2(v35[1]) = BYTE2(a2);
            BYTE3(v35[1]) = BYTE3(a2);
            BYTE4(v35[1]) = BYTE4(a2);
            BYTE5(v35[1]) = BYTE5(a2);
            switch(a4 >> 62)
            {
              case 1uLL:
                if (a3 >> 32 < (int)a3) {
                  goto LABEL_44;
                }
                sub_21934CDF0(a3, a4);
                int v18 = sub_21936F1D0((int)a3, a3 >> 32, a4 & 0x3FFFFFFFFFFFFFFFLL, a5 & 1, a3, a4, v35, (uint64_t)v35 + BYTE6(a2), a1, a2, v36);
                goto LABEL_31;
              case 2uLL:
                uint64_t v22 = *(void *)(a3 + 16);
                uint64_t v23 = *(void *)(a3 + 24);
                sub_21934CDF0(a3, a4);
                swift_retain();
                swift_retain();
                int v21 = sub_21936F1D0(v22, v23, a4 & 0x3FFFFFFFFFFFFFFFLL, a5 & 1, a3, a4, v35, (uint64_t)v35 + BYTE6(a2), a1, a2, v36);
LABEL_20:
                LODWORD(v5) = v21;
                swift_release();
                swift_release();
                goto LABEL_32;
              case 3uLL:
                memset(v34, 0, 14);
                sub_21934CDF0(a3, a4);
                unint64_t v32 = a2;
                char v16 = a5 & 1;
                goto LABEL_24;
              default:
                v34[0] = a3;
                LOWORD(v34[1]) = a4;
                BYTE2(v34[1]) = BYTE2(a4);
                BYTE3(v34[1]) = BYTE3(a4);
                BYTE4(v34[1]) = BYTE4(a4);
                BYTE5(v34[1]) = BYTE5(a4);
                sub_21934CDF0(a3, a4);
                unint64_t v32 = a2;
                char v16 = a5 & 1;
LABEL_24:
                uint64_t v24 = a3;
                unint64_t v25 = a4;
LABEL_25:
                sub_21936DED8(v34, v16, v24, v25, v35, a1, &v33, v32, v36);
                sub_219348A70(a3, a4);
                sub_219348A70(a1, a2);
                LODWORD(v5) = v33;
                if (!v33) {
                  goto LABEL_26;
                }
                goto LABEL_33;
            }
        }
      }
      __break(1u);
LABEL_39:
      swift_once();
LABEL_34:
      uint64_t v27 = sub_2193E24F0();
      __swift_project_value_buffer(v27, (uint64_t)qword_26AC29118);
      uint64_t v28 = sub_2193E24D0();
      os_log_type_t v29 = sub_2193E2AE0();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 67109120;
        LODWORD(v35[0]) = v5;
        sub_2193E2C00();
        _os_log_impl(&dword_219326000, v28, v29, "AES decryption of advertisement: %d", v30, 8u);
        MEMORY[0x21D48A390](v30, -1, -1);
      }

      swift_bridgeObjectRelease();
      return 0;
    case 2uLL:
      uint64_t v13 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      BOOL v14 = __OFSUB__(v12, v13);
      uint64_t v11 = v12 - v13;
      if (!v14) {
        goto LABEL_6;
      }
      goto LABEL_41;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v11 = BYTE6(a2);
      goto LABEL_6;
  }
}

unint64_t sub_21936FBC0()
{
  unint64_t result = qword_26AC27440;
  if (!qword_26AC27440)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AC27438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC27440);
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t destroy for ASCABLEPostHandshakeMessage(uint64_t *a1)
{
  unint64_t v2 = a1[1];
  if (v2 >> 60 != 15) {
    sub_219348A70(*a1, v2);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_219348A70(a1[4], a1[5]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ASCABLEPostHandshakeMessage(uint64_t a1, uint64_t *a2)
{
  unint64_t v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v5 = *a2;
    sub_21934CDF0(*a2, a2[1]);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v4;
  }
  uint64_t v6 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = a2[4];
  unint64_t v8 = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21934CDF0(v7, v8);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  uint64_t v11 = a2[9];
  uint64_t v10 = a2[10];
  *(void *)(a1 + 72) = v11;
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ASCABLEPostHandshakeMessage(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      uint64_t v6 = *(void *)a2;
      sub_21934CDF0(*(void *)a2, *(void *)(a2 + 8));
      uint64_t v7 = *(void *)a1;
      unint64_t v8 = *(void *)(a1 + 8);
      *(void *)a1 = v6;
      *(void *)(a1 + 8) = v4;
      sub_219348A70(v7, v8);
      goto LABEL_8;
    }
    sub_21934DFD8(a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)a2;
  sub_21934CDF0(*(void *)a2, *(void *)(a2 + 8));
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
LABEL_8:
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 32);
  unint64_t v10 = *(void *)(a2 + 40);
  sub_21934CDF0(v9, v10);
  uint64_t v11 = *(void *)(a1 + 32);
  unint64_t v12 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  sub_219348A70(v11, v12);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v13;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ASCABLEPostHandshakeMessage(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  if (v4 >> 60 != 15)
  {
    unint64_t v5 = *(void *)(a2 + 8);
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = *(void *)a1;
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v5;
      sub_219348A70(v6, v4);
      goto LABEL_6;
    }
    sub_21934DFD8(a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a1 + 32);
  unint64_t v8 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  sub_219348A70(v7, v8);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCABLEPostHandshakeMessage(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASCABLEPostHandshakeMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCABLEPostHandshakeMessage()
{
  return &type metadata for ASCABLEPostHandshakeMessage;
}

void *sub_2193700B4@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_2193700D4(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_2193700E0()
{
  if (*v0) {
    return 0xD00000000000001CLL;
  }
  else {
    return 0x676E6964646170;
  }
}

uint64_t sub_219370120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_219370754(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_219370148()
{
  return *v0;
}

uint64_t sub_219370154@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  if (result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!result) {
    char v2 = 0;
  }
  *a2 = v2;
  return result;
}

uint64_t sub_219370170(uint64_t a1)
{
  unint64_t v2 = sub_219370BF0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2193701AC(uint64_t a1)
{
  unint64_t v2 = sub_219370BF0();

  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_2193701E8@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_219370844(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(void *)(a2 + 80) = v8;
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_219370244(void *a1)
{
  return sub_219370290(a1);
}

uint64_t sub_219370290(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v20 = sub_2193E2250();
  uint64_t v19 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  long long v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C190D8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_219370BF0();
  sub_2193E3260();
  sub_219370C98(v3, (uint64_t)v27);
  sub_219370C98((uint64_t)v27, (uint64_t)v21);
  char v28 = 0;
  sub_21934D644();
  sub_2193E30A0();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  long long v11 = *(_OWORD *)(v3 + 32);
  long long v12 = *(_OWORD *)(v3 + 64);
  long long v24 = *(_OWORD *)(v3 + 48);
  long long v25 = v12;
  long long v13 = *(_OWORD *)(v3 + 32);
  v23[0] = *(_OWORD *)(v3 + 16);
  v23[1] = v13;
  long long v14 = *(_OWORD *)(v3 + 64);
  void v21[2] = v24;
  v21[3] = v14;
  uint64_t v26 = *(void *)(v3 + 80);
  uint64_t v22 = *(void *)(v3 + 80);
  v21[0] = v23[0];
  v21[1] = v11;
  sub_2193E22A0();
  swift_allocObject();
  sub_219370D00((uint64_t)v23);
  sub_2193E2290();
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v6, *MEMORY[0x263F2BE88], v20);
  sub_2193E2260();
  sub_219370D7C();
  uint64_t v15 = sub_2193E2270();
  unint64_t v17 = v16;
  swift_release();
  sub_219370DD0((uint64_t)v23);
  *(void *)&v21[0] = v15;
  *((void *)&v21[0] + 1) = v17;
  char v28 = 1;
  sub_2193E30D0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_219348A70(v15, v17);
}

BOOL sub_2193705AC(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  void v7[4] = *(_OWORD *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 80);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 80);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_219370618((uint64_t)v7, (uint64_t)v9);
}

BOOL sub_219370618(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  if (v5 >> 60 == 15)
  {
    if (v7 >> 60 == 15) {
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  if (v7 >> 60 == 15)
  {
LABEL_5:
    sub_21934CE48(*(void *)a1, v5);
    sub_21934CE48(v6, v7);
    sub_21934CEB0(v4, v5);
    sub_21934CEB0(v6, v7);
    return 0;
  }
  sub_21934CE48(*(void *)a1, v5);
  sub_21934CE48(v6, v7);
  char v8 = sub_219379924(v4, v5, v6, v7);
  sub_21934CEB0(v6, v7);
  sub_21934CEB0(v4, v5);
  if ((v8 & 1) == 0) {
    return 0;
  }
LABEL_7:
  long long v9 = *(_OWORD *)(a1 + 64);
  long long v17[2] = *(_OWORD *)(a1 + 48);
  v17[3] = v9;
  uint64_t v18 = *(void *)(a1 + 80);
  long long v10 = *(_OWORD *)(a1 + 32);
  v17[0] = *(_OWORD *)(a1 + 16);
  v17[1] = v10;
  long long v11 = *(_OWORD *)(a2 + 64);
  v15[2] = *(_OWORD *)(a2 + 48);
  v15[3] = v11;
  uint64_t v16 = *(void *)(a2 + 80);
  long long v12 = *(_OWORD *)(a2 + 32);
  v15[0] = *(_OWORD *)(a2 + 16);
  v15[1] = v12;
  return sub_2193881D4((uint64_t)v17, (uint64_t)v15);
}

uint64_t sub_219370754(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E6964646170 && a2 == 0xE700000000000000;
  if (v2 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000002193F0F10)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2193E3140();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_219370844@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C190C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_219370BF0();
  sub_2193E3240();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v34 = a2;
  char v45 = 0;
  sub_21934D774();
  sub_2193E2FE0();
  uint64_t v9 = v35;
  unint64_t v10 = v36;
  char v45 = 1;
  sub_21934CE48(v35, v36);
  sub_2193E3010();
  uint64_t v33 = v9;
  uint64_t v11 = v35;
  unint64_t v12 = v36;
  sub_2193E2230();
  swift_allocObject();
  sub_2193E2220();
  sub_219370C44();
  sub_2193E2200();
  sub_219348A70(v11, v12);
  swift_release();
  uint64_t v13 = v37;
  uint64_t v26 = v35;
  unint64_t v27 = v38;
  uint64_t v28 = v39;
  uint64_t v29 = v37;
  uint64_t v30 = v40;
  unint64_t v31 = v36;
  int v44 = v41;
  uint64_t v14 = v43;
  uint64_t v32 = v42;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v33;
  sub_21934CE48(v33, v10);
  swift_bridgeObjectRetain();
  uint64_t v16 = v26;
  swift_bridgeObjectRetain();
  unint64_t v17 = v27;
  sub_21934CDF0(v13, v27);
  swift_bridgeObjectRetain();
  uint64_t v18 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21934CEB0(v15, v10);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  sub_21934CEB0(v15, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = v29;
  sub_219348A70(v29, v17);
  uint64_t v20 = v14;
  swift_bridgeObjectRelease();
  uint64_t v21 = v32;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v23 = v34;
  *uint64_t v34 = v15;
  v23[1] = v10;
  unint64_t v24 = v31;
  _OWORD v23[2] = v16;
  v23[3] = v24;
  v23[4] = v19;
  v23[5] = v17;
  uint64_t v25 = v30;
  v23[6] = v18;
  v23[7] = v25;
  *((unsigned char *)v23 + 64) = v44;
  v23[9] = v21;
  v23[10] = v20;
  return result;
}

unint64_t sub_219370BF0()
{
  unint64_t result = qword_267C190C8;
  if (!qword_267C190C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C190C8);
  }
  return result;
}

unint64_t sub_219370C44()
{
  unint64_t result = qword_267C190D0;
  if (!qword_267C190D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C190D0);
  }
  return result;
}

uint64_t sub_219370C98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C190E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_219370D00(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21934CDF0(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_219370D7C()
{
  unint64_t result = qword_267C190E8;
  if (!qword_267C190E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C190E8);
  }
  return result;
}

uint64_t sub_219370DD0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_219348A70(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *storeEnumTagSinglePayload for ASCABLEPostHandshakeMessage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x219370F18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCABLEPostHandshakeMessage.CodingKeys()
{
  return &type metadata for ASCABLEPostHandshakeMessage.CodingKeys;
}

unint64_t sub_219370F54()
{
  unint64_t result = qword_267C190F0;
  if (!qword_267C190F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C190F0);
  }
  return result;
}

unint64_t sub_219370FAC()
{
  unint64_t result = qword_267C190F8;
  if (!qword_267C190F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C190F8);
  }
  return result;
}

unint64_t sub_219371004()
{
  unint64_t result = qword_267C19100;
  if (!qword_267C19100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19100);
  }
  return result;
}

uint64_t sub_219371058@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27160);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2193E22A0();
  swift_allocObject();
  sub_2193E2290();
  long long v6 = v1[1];
  long long v14 = *v1;
  long long v15 = v6;
  v16[0] = v1[2];
  *(_DWORD *)((char *)v16 + 15) = *(_DWORD *)((char *)v1 + 47);
  sub_219374678();
  int64_t v7 = sub_2193E2270();
  unint64_t v9 = v8;
  swift_release();
  sub_2193734B4(v7, v9);
  *(void *)&long long v14 = 0x2F3A4F444946;
  *((void *)&v14 + 1) = 0xE600000000000000;
  sub_2193E2920();
  swift_bridgeObjectRelease();
  sub_2193E1FE0();
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_2193E1FF0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v5, 1, v10) == 1)
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_219348A70(v7, v9);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a1, v5, v10);
  }
  return result;
}

void sub_21937123C()
{
  off_26AC27448 = &unk_26CAB4108;
}

unint64_t sub_219371258(char a1)
{
  unint64_t result = 0x654B63696C627570;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x697274656D6D7973;
      break;
    case 2:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 3:
      unint64_t result = 0x54746E6572727563;
      break;
    case 4:
      unint64_t result = 0xD000000000000021;
      break;
    case 5:
      unint64_t result = 0x5474736575716572;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_219371350@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_2193738F0(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_21937137C()
{
  return sub_219371258(*v0);
}

uint64_t sub_219371384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_219373900(a1, a2);
  *a3 = result;
  return result;
}

unint64_t sub_2193713AC@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_2193738F0(a1);
  *a2 = result;
  return result;
}

uint64_t sub_2193713D4(uint64_t a1)
{
  unint64_t v2 = sub_219374480();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_219371410(uint64_t a1)
{
  unint64_t v2 = sub_219374480();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21937144C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  long long v49 = xmmword_2193E7210;
  unint64_t v9 = sub_2193E2BC0();
  if ((v10 & 1) == 0)
  {
    unint64_t v11 = a1;
    while (v9 >> 14 >= v11 >> 14)
    {
      unint64_t v17 = v9;
      unint64_t v18 = sub_2193E2BE0();
      if ((v18 ^ v19) < 0x4000) {
        goto LABEL_30;
      }
      uint64_t v22 = v18;
      uint64_t v23 = v19;
      uint64_t v24 = v20;
      uint64_t v25 = v21;
      unint64_t v26 = sub_219372C58(v18, v19, v20, v21, 10);
      if ((v27 & 0x100) != 0)
      {
        unint64_t v26 = (unint64_t)sub_2193723FC(v22, v23, v24, v25, 10);
        if (v28)
        {
LABEL_9:
          __break(1u);
          goto LABEL_10;
        }
      }
      else if (v27)
      {
        goto LABEL_9;
      }
      uint64_t v12 = sub_219390C48(1, v26);
      sub_2193717E4(1, v12, v13, &v47);
      uint64_t v14 = v47;
      unint64_t v15 = v48;
      sub_21934CDF0(v47, v48);
      uint64_t v4 = (uint64_t)&v49;
      sub_21935AB18(v14, v15);
      sub_219348A70(v14, v15);
      sub_219348A70(v14, v15);
      swift_bridgeObjectRelease();
      unint64_t v9 = sub_2193E2BC0();
      unint64_t v11 = v17;
      if (v16) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    swift_once();
    goto LABEL_13;
  }
LABEL_10:
  unint64_t v17 = a1;
LABEL_11:
  if (v17 >> 14 >= a2 >> 14) {
    return v49;
  }
  uint64_t v4 = sub_2193E2BE0();
  a3 = v29;
  a2 = v30;
  a4 = v31;
  if (qword_26AC26F88 != -1) {
    goto LABEL_31;
  }
LABEL_13:
  uint64_t v32 = off_26AC27448;
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_2193E2BD0();
  uint64_t v34 = v32[2];
  if (!v34)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_219348A70(v49, *((unint64_t *)&v49 + 1));
    return 0;
  }
  if (v32[4] != v33)
  {
    uint64_t v35 = 0;
    uint64_t v36 = v34 - 1;
    while (v36 != v35)
    {
      uint64_t v37 = v32[v35++ + 5];
      if (v37 == v33) {
        goto LABEL_19;
      }
    }
    goto LABEL_24;
  }
  uint64_t v35 = 0;
LABEL_19:
  uint64_t result = swift_bridgeObjectRelease();
  if (__OFADD__(v35, 1))
  {
    __break(1u);
    goto LABEL_33;
  }
  if ((v4 ^ a3) < 0x4000)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t result = sub_219372C58(v4, a3, a2, a4, 10);
  if ((v39 & 0x100) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_2193723FC(v4, a3, a2, a4, 10);
    char v42 = v41;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v42 & 1) == 0)
    {
LABEL_26:
      uint64_t v44 = sub_219390C48(1, (unint64_t)v40);
      uint64_t result = 7 - v35;
      if (!__OFSUB__(8, v35 + 1))
      {
        sub_21936D9D8(result, v44, v43, &v47);
        uint64_t v45 = v47;
        unint64_t v46 = v48;
        sub_21934CDF0(v47, v48);
        sub_21935AB18(v45, v46);
        sub_219348A70(v45, v46);
        sub_219348A70(v45, v46);
        swift_bridgeObjectRelease();
        return v49;
      }
      goto LABEL_34;
    }
  }
  else if ((v39 & 1) == 0)
  {
    uint64_t v40 = (unsigned __int8 *)result;
    goto LABEL_26;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_2193717E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a1 < 0)
  {
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    JUMPOUT(0x2193719C4);
  }
  unint64_t v6 = a3 >> 62;
  uint64_t v8 = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a2) - a2;
      if (__OFSUB__(HIDWORD(a2), a2)) {
        goto LABEL_26;
      }
      uint64_t v8 = (int)v8;
LABEL_7:
      uint64_t v12 = v8 - a1;
      if (__OFSUB__(v8, a1)) {
        goto LABEL_24;
      }
      uint64_t v13 = v6;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      switch((int)v6)
      {
        case 1:
          uint64_t v15 = (int)a2;
          uint64_t v14 = a2 >> 32;
          break;
        case 2:
          uint64_t v15 = *(void *)(a2 + 16);
          uint64_t v14 = *(void *)(a2 + 24);
          break;
        case 3:
          break;
        default:
          uint64_t v15 = 0;
          uint64_t v14 = BYTE6(a3);
          break;
      }
      unint64_t v16 = sub_21936E92C(v15, v14, a2, a3);
      if (v12 >= 1 && (v16 & 0x8000000000000000) == 0 && v16 < (v12 & (unint64_t)~(v12 >> 63)))
      {
        switch(v13)
        {
          case 1:
            uint64_t v17 = a2 >> 32;
            goto LABEL_18;
          case 2:
            uint64_t v17 = *(void *)(a2 + 24);
            goto LABEL_20;
          default:
            goto LABEL_22;
        }
      }
      uint64_t v17 = sub_21936EA18(v15, v12 & ~(v12 >> 63), a2, a3);
      uint64_t v18 = 0;
      switch(v13)
      {
        case 1:
LABEL_18:
          uint64_t v18 = (int)a2;
          break;
        case 2:
LABEL_20:
          uint64_t v18 = *(void *)(a2 + 16);
          break;
        default:
          break;
      }
      if (v17 < v18) {
        goto LABEL_25;
      }
LABEL_22:
      uint64_t v19 = sub_2193E20F0();
      uint64_t v21 = v20;
      uint64_t result = sub_219348A70(a2, a3);
      *a4 = v19;
      a4[1] = v21;
      return result;
    case 2uLL:
      uint64_t v10 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_7;
      }
      goto LABEL_27;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v8 = BYTE6(a3);
      goto LABEL_7;
  }
}

uint64_t sub_219371A04(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27488);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_219374480();
  sub_2193E3260();
  long long v12 = *v3;
  char v11 = 0;
  sub_21934D644();
  sub_2193E30D0();
  if (!v2)
  {
    long long v12 = v3[1];
    char v11 = 1;
    sub_2193E30D0();
    LOBYTE(v12) = 2;
    sub_2193E30F0();
    LOBYTE(v12) = 3;
    sub_2193E3080();
    LOBYTE(v12) = 4;
    sub_2193E3070();
    sub_21937415C((uint64_t)v3 + 50, (uint64_t)&v13);
    sub_21937415C((uint64_t)&v13, (uint64_t)&v12);
    char v11 = 5;
    sub_219374528();
    sub_2193E30A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_219371C60@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_219373BB0(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = v7[0];
    *(_OWORD *)(a2 + 32) = *(_OWORD *)v7;
    *(_DWORD *)(a2 + 47) = *(_DWORD *)((char *)&v7[1] + 7);
  }
  return result;
}

uint64_t sub_219371CB0(void *a1)
{
  return sub_219371A04(a1);
}

BOOL sub_219371CF4(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6[0] = *(_OWORD *)(a1 + 32);
  *(_DWORD *)((char *)v6 + 15) = *(_DWORD *)(a1 + 47);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8[0] = *(_OWORD *)(a2 + 32);
  *(_DWORD *)((char *)v8 + 15) = *(_DWORD *)(a2 + 47);
  return sub_219372D2C((uint64_t)v5, (uint64_t)v7);
}

uint64_t static _ASCABLEQRCodeUtilities.isPasskeyURL(_:)()
{
  sub_2193E1FD0();
  if (!v0) {
    return 0;
  }
  uint64_t v1 = sub_2193E28A0();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  if (v1 == 1868851558 && v3 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_2193E3140();
    swift_bridgeObjectRelease();
    return v5 & 1;
  }
}

uint64_t static _ASCABLEQRCodeUtilities.isPasskeyRegistrationURL(_:)(uint64_t a1)
{
  uint64_t v2 = sub_2193E1FF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v13[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2193E1FD0();
  if (!v6) {
    return 0;
  }
  uint64_t v7 = sub_2193E28A0();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  if (v7 == 1868851558 && v9 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = sub_2193E3140();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v10 & 1) == 0) {
      return result;
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  sub_219373288((uint64_t)v5, (uint64_t)v13);
  sub_219360818(v13);
  sub_21937415C((uint64_t)v14, (uint64_t)&v14[4]);
  sub_21937415C((uint64_t)&v14[4], (uint64_t)&v14[5]);
  return v14[5] & 1;
}

id _ASCABLEQRCodeUtilities.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *sub_219372318(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C18BE0);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  void v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_219372380(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_2193E29A0();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x21D488FB0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unsigned __int8 *sub_2193723FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_219374624();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_2193E29B0();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_21937276C();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (unsigned __int8 *)sub_2193E2E00();
  }
LABEL_7:
  unint64_t v13 = sub_2193724F0(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_2193724F0(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v14 = v9 * a3;
              unsigned __int8 v15 = v11 + v12;
              BOOL v16 = v14 >= v15;
              unint64_t v9 = v14 - v15;
              if (!v16) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_67;
    }
    if (a2)
    {
      unsigned __int8 v26 = a3 + 48;
      unsigned __int8 v27 = a3 + 55;
      unsigned __int8 v28 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v26 = 58;
      }
      else
      {
        unsigned __int8 v28 = 97;
        unsigned __int8 v27 = 65;
      }
      if (result)
      {
        unint64_t v29 = 0;
        do
        {
          unsigned int v30 = *result;
          if (v30 < 0x30 || v30 >= v26)
          {
            if (v30 < 0x41 || v30 >= v27)
            {
              uint64_t v13 = 0;
              if (v30 < 0x61 || v30 >= v28) {
                return (unsigned __int8 *)v13;
              }
              char v31 = -87;
            }
            else
            {
              char v31 = -55;
            }
          }
          else
          {
            char v31 = -48;
          }
          if (!is_mul_ok(v29, a3)) {
            return 0;
          }
          unint64_t v32 = v29 * a3;
          unsigned __int8 v33 = v30 + v31;
          BOOL v16 = __CFADD__(v32, v33);
          unint64_t v29 = v32 + v33;
          if (v16) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v29;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_67:
    __break(1u);
    return result;
  }
  uint64_t v17 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v18 = a3 + 48;
  unsigned __int8 v19 = a3 + 55;
  unsigned __int8 v20 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v18 = 58;
  }
  else
  {
    unsigned __int8 v20 = 97;
    unsigned __int8 v19 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  uint64_t v21 = result + 1;
  do
  {
    unsigned int v22 = *v21;
    if (v22 < 0x30 || v22 >= v18)
    {
      if (v22 < 0x41 || v22 >= v19)
      {
        uint64_t v13 = 0;
        if (v22 < 0x61 || v22 >= v20) {
          return (unsigned __int8 *)v13;
        }
        char v23 = -87;
      }
      else
      {
        char v23 = -55;
      }
    }
    else
    {
      char v23 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v24 = v9 * a3;
    unsigned __int8 v25 = v22 + v23;
    BOOL v16 = __CFADD__(v24, v25);
    unint64_t v9 = v24 + v25;
    if (v16) {
      return 0;
    }
    ++v21;
    --v17;
  }
  while (v17);
  return (unsigned __int8 *)v9;
}

uint64_t sub_21937276C()
{
  unint64_t v0 = sub_2193E29C0();
  uint64_t v4 = sub_2193727EC(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2193727EC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = sub_219372944(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_219372318(v9, 0);
      unint64_t v12 = sub_219372A44((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_2193E2E00();
LABEL_4:
        JUMPOUT(0x21D488F00);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x21D488F00](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x21D488F00]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_219372944(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    uint64_t result = sub_219372380(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    uint64_t result = sub_219372380(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }

  return sub_2193E2980();
}

unint64_t sub_219372A44(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_219372380(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_2193E2990();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_2193E2E00();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_219372380(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_2193E2960();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_219372C58(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, int64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    uint64_t v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    uint64_t v11 = (void *)sub_2193E2E00();
  }
  uint64_t result = sub_219372E68((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    char v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

BOOL sub_219372D2C(uint64_t a1, uint64_t a2)
{
  if ((sub_219379924(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)) & 1) == 0
    || (sub_219379924(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a2 + 16), *(void *)(a2 + 24)) & 1) == 0
    || *(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32))
  {
    return 0;
  }
  char v4 = *(unsigned char *)(a2 + 48);
  if (*(unsigned char *)(a1 + 48))
  {
    if (!*(unsigned char *)(a2 + 48)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 40) != *(void *)(a2 + 40)) {
      char v4 = 1;
    }
    if (v4) {
      return 0;
    }
  }
  int v5 = *(unsigned __int8 *)(a1 + 49);
  int v6 = *(unsigned __int8 *)(a2 + 49);
  if (v5 == 2)
  {
    if (v6 != 2) {
      return 0;
    }
LABEL_15:
    int v9 = *(unsigned __int8 *)(a1 + 50);
    int v10 = *(unsigned __int8 *)(a2 + 50);
    if (v9 == 2) {
      return v10 == 2;
    }
    if (v10 != 2)
    {
      if (v9) {
        uint64_t v11 = 25453;
      }
      else {
        uint64_t v11 = 24935;
      }
      if (v10) {
        uint64_t v12 = 25453;
      }
      else {
        uint64_t v12 = 24935;
      }
      if (v11 == v12)
      {
        swift_bridgeObjectRelease_n();
        return 1;
      }
      char v13 = sub_2193E3140();
      swift_bridgeObjectRelease_n();
      if (v13) {
        return 1;
      }
    }
    return 0;
  }
  BOOL result = 0;
  BOOL v8 = (v5 & 1) == 0;
  if (v6 != 2 && ((v8 ^ v6) & 1) != 0) {
    goto LABEL_15;
  }
  return result;
}

uint64_t sub_219372E68(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, int64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    BOOL result = sub_219372380(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_96;
  }
  BOOL result = sub_2193E2980();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    BOOL result = sub_219372380(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    BOOL result = sub_219372380(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    BOOL result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_92;
  }
  if (v17 < a3 >> 16)
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  BOOL result = sub_2193E2980();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_91;
  }
  if (v18 < v15)
  {
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  char v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    char v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v33 = a6 + 48;
        unsigned __int8 v34 = a6 + 55;
        unsigned __int8 v35 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v33 = 58;
        }
        else
        {
          unsigned __int8 v35 = 97;
          unsigned __int8 v34 = 65;
        }
        if (v19)
        {
          unint64_t v24 = 0;
          uint64_t v36 = v19 + 1;
          uint64_t v37 = result - 1;
          do
          {
            unsigned int v38 = *v36;
            if (v38 < 0x30 || v38 >= v33)
            {
              if (v38 < 0x41 || v38 >= v34)
              {
                uint64_t v29 = 0;
                if (v38 < 0x61 || v38 >= v35) {
                  return v29;
                }
                char v39 = -87;
              }
              else
              {
                char v39 = -55;
              }
            }
            else
            {
              char v39 = -48;
            }
            if (!is_mul_ok(v24, a6)) {
              return 0;
            }
            unint64_t v40 = v24 * a6;
            unsigned __int8 v41 = v38 + v39;
            BOOL v32 = __CFADD__(v40, v41);
            unint64_t v24 = v40 + v41;
            if (v32) {
              return 0;
            }
            ++v36;
            --v37;
          }
          while (v37);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_95;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v42 = a6 + 48;
      unsigned __int8 v43 = a6 + 55;
      unsigned __int8 v44 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v42 = 58;
      }
      else
      {
        unsigned __int8 v44 = 97;
        unsigned __int8 v43 = 65;
      }
      if (v19)
      {
        unint64_t v24 = 0;
        while (1)
        {
          unsigned int v45 = *v19;
          if (v45 < 0x30 || v45 >= v42)
          {
            if (v45 < 0x41 || v45 >= v43)
            {
              uint64_t v29 = 0;
              if (v45 < 0x61 || v45 >= v44) {
                return v29;
              }
              char v46 = -87;
            }
            else
            {
              char v46 = -55;
            }
          }
          else
          {
            char v46 = -48;
          }
          if (!is_mul_ok(v24, a6)) {
            return 0;
          }
          unint64_t v47 = v24 * a6;
          unsigned __int8 v48 = v45 + v46;
          BOOL v32 = __CFADD__(v47, v48);
          unint64_t v24 = v47 + v48;
          if (v32) {
            return 0;
          }
          ++v19;
          if (!--result) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 48;
      unsigned __int8 v22 = a6 + 55;
      unsigned __int8 v23 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v21 = 58;
      }
      else
      {
        unsigned __int8 v23 = 97;
        unsigned __int8 v22 = 65;
      }
      if (v19)
      {
        unint64_t v24 = 0;
        unsigned __int8 v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              uint64_t v29 = 0;
              if (v27 < 0x61 || v27 >= v23) {
                return v29;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          if (!is_mul_ok(v24, a6)) {
            return 0;
          }
          unint64_t v30 = v24 * a6;
          unsigned __int8 v31 = v27 + v28;
          BOOL v32 = v30 >= v31;
          unint64_t v24 = v30 - v31;
          if (!v32) {
            return 0;
          }
          ++v25;
          if (!--v26) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
  return result;
}

uint64_t sub_219373288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_2193E1FC0();
  unint64_t v7 = sub_21936EB3C(1uLL, v5, v6);
  unint64_t v9 = v8;
  unint64_t v11 = v10;
  unint64_t v13 = v12;
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_21937144C(v7, v9, v11, v13);
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();
  if (v16 >> 60 == 15)
  {
    sub_21937457C();
    swift_allocError();
    swift_willThrow();
    uint64_t v17 = sub_2193E1FF0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a1, v17);
  }
  else
  {
    sub_2193E2230();
    swift_allocObject();
    sub_2193E2220();
    sub_2193745D0();
    sub_2193E2200();
    uint64_t v19 = sub_2193E1FF0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a1, v19);
    swift_release();
    uint64_t result = sub_21934CEB0(v14, v16);
    if (!v2)
    {
      *(_OWORD *)a2 = v20;
      *(_OWORD *)(a2 + 16) = v21;
      *(unsigned char *)(a2 + 32) = v22;
      *(void *)(a2 + 40) = v23;
      *(unsigned char *)(a2 + 48) = v24;
      *(_WORD *)(a2 + 49) = v25;
    }
  }
  return result;
}

uint64_t sub_2193734B4(int64_t a1, unint64_t a2)
{
  uint64_t v2 = a2;
  int64_t v3 = a1;
  BOOL v4 = __OFSUB__(HIDWORD(a1), a1);
  BOOL v30 = v4;
  unint64_t v28 = a2 >> 62;
  uint64_t v29 = HIDWORD(a1) - (int)a1;
  uint64_t v5 = BYTE6(a2);
  uint64_t v6 = 7;
  uint64_t v7 = a2 >> 62;
  while (2)
  {
    uint64_t v8 = v6 - 7;
    uint64_t v9 = v5;
    switch(v7)
    {
      case 1:
        uint64_t v9 = v29;
        if (!v30) {
          goto LABEL_9;
        }
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      case 2:
        uint64_t v11 = *(void *)(v3 + 16);
        uint64_t v10 = *(void *)(v3 + 24);
        BOOL v12 = __OFSUB__(v10, v11);
        uint64_t v9 = v10 - v11;
        if (!v12) {
          goto LABEL_9;
        }
        goto LABEL_38;
      case 3:
        goto LABEL_17;
      default:
LABEL_9:
        if (v9 < v6) {
          goto LABEL_13;
        }
        uint64_t v13 = sub_2193E20F0();
        uint64_t v15 = sub_219390798(v13, v14);
        sub_2193E3100();
        sub_2193E2920();
        swift_bridgeObjectRelease();
        sub_2193E2920();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AC274A0);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_2193E7190;
        *(void *)(v16 + 56) = MEMORY[0x263F8E970];
        *(void *)(v16 + 64) = MEMORY[0x263F8E9C0];
        *(void *)(v16 + 32) = v15;
        sub_2193E2860();
        swift_bridgeObjectRelease();
        sub_2193E2920();
        uint64_t v8 = swift_bridgeObjectRelease();
        BOOL v12 = __OFADD__(v6, 7);
        v6 += 7;
        if (!v12) {
          continue;
        }
        __break(1u);
LABEL_13:
        uint64_t v17 = v5;
        if (!v28) {
          goto LABEL_20;
        }
        if (v28 == 1)
        {
          uint64_t v17 = v29;
          if (v30)
          {
            __break(1u);
LABEL_17:
            if (v6 - 7 < 0)
            {
              uint64_t v5 = 0;
              uint64_t v7 = 0;
              goto LABEL_25;
            }
            return 0;
          }
        }
        else
        {
          uint64_t v19 = *(void *)(v3 + 16);
          uint64_t v18 = *(void *)(v3 + 24);
          BOOL v12 = __OFSUB__(v18, v19);
          uint64_t v17 = v18 - v19;
          if (v12)
          {
LABEL_44:
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
            JUMPOUT(0x2193738D0);
          }
        }
LABEL_20:
        if (v8 < v17)
        {
          if (v28)
          {
            if (v28 == 1)
            {
              uint64_t v7 = (int)v3;
              uint64_t v5 = v3 >> 32;
            }
            else
            {
              uint64_t v7 = *(void *)(v3 + 16);
              uint64_t v5 = *(void *)(v3 + 24);
            }
          }
LABEL_25:
          if (v5 < v8 || v5 < v7)
          {
LABEL_39:
            __break(1u);
          }
          else
          {
            uint64_t v2 = sub_2193E20F0();
            int64_t v3 = v20;
            if (qword_26AC26F88 == -1)
            {
LABEL_28:
              uint64_t v21 = 0;
              switch((unint64_t)v3 >> 62)
              {
                case 1uLL:
                  LODWORD(v21) = HIDWORD(v2) - v2;
                  if (__OFSUB__(HIDWORD(v2), v2)) {
                    goto LABEL_45;
                  }
                  uint64_t v21 = (int)v21;
LABEL_33:
                  BOOL v12 = __OFSUB__(v21, 1);
                  unint64_t v24 = v21 - 1;
                  if (v12)
                  {
                    __break(1u);
                  }
                  else if ((v24 & 0x8000000000000000) == 0)
                  {
                    if (v24 < *((void *)off_26AC27448 + 2))
                    {
                      sub_21934CDF0(v2, v3);
                      uint64_t v25 = sub_219390798(v2, v3);
                      sub_2193E3100();
                      sub_2193E2920();
                      swift_bridgeObjectRelease();
                      sub_2193E2920();
                      __swift_instantiateConcreteTypeFromMangledName(&qword_26AC274A0);
                      uint64_t v26 = swift_allocObject();
                      *(_OWORD *)(v26 + 16) = xmmword_2193E7190;
                      *(void *)(v26 + 56) = MEMORY[0x263F8E970];
                      *(void *)(v26 + 64) = MEMORY[0x263F8E9C0];
                      *(void *)(v26 + 32) = v25;
                      sub_2193E2860();
                      swift_bridgeObjectRelease();
                      sub_2193E2920();
                      swift_bridgeObjectRelease();
                      sub_219348A70(v2, v3);
                      return 0;
                    }
                    goto LABEL_43;
                  }
                  __break(1u);
LABEL_43:
                  __break(1u);
                  goto LABEL_44;
                case 2uLL:
                  uint64_t v23 = *(void *)(v2 + 16);
                  uint64_t v22 = *(void *)(v2 + 24);
                  BOOL v12 = __OFSUB__(v22, v23);
                  uint64_t v21 = v22 - v23;
                  if (!v12) {
                    goto LABEL_33;
                  }
                  goto LABEL_46;
                case 3uLL:
                  goto LABEL_33;
                default:
                  uint64_t v21 = BYTE6(v3);
                  goto LABEL_33;
              }
            }
          }
          swift_once();
          goto LABEL_28;
        }
        return 0;
    }
  }
}

unint64_t sub_2193738F0(unint64_t result)
{
  if (result >= 6) {
    return 6;
  }
  return result;
}

uint64_t sub_219373900(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x654B63696C627570 && a2 == 0xE900000000000079;
  if (v2 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697274656D6D7973 && a2 == 0xEC00000079654B63 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000002193F0FB0 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x54746E6572727563 && a2 == 0xEB00000000656D69 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000002193F0FD0 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x5474736575716572 && a2 == 0xEB00000000657079)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_2193E3140();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_219373BB0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19108);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_219374480();
  sub_2193E3240();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v23 = a2;
  char v27 = 0;
  sub_21934D774();
  sub_2193E3010();
  uint64_t v10 = v24;
  unint64_t v9 = v25;
  char v27 = 1;
  sub_21934CDF0(v24, v25);
  sub_2193E3010();
  unint64_t v22 = v9;
  uint64_t v12 = v24;
  unint64_t v11 = v25;
  LOBYTE(v24) = 2;
  sub_21934CDF0(v12, v25);
  int v26 = sub_2193E3030();
  LOBYTE(v24) = 3;
  uint64_t v13 = sub_2193E2FC0();
  int v20 = v14;
  uint64_t v21 = v13;
  LOBYTE(v24) = 4;
  int v19 = sub_2193E2FB0();
  char v27 = 5;
  sub_2193744D4();
  sub_2193E2FE0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v15 = v24;
  unint64_t v16 = v22;
  sub_21934CDF0(v10, v22);
  sub_21934CDF0(v12, v11);
  sub_219348A70(v12, v11);
  sub_219348A70(v10, v16);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  sub_219348A70(v10, v16);
  uint64_t result = sub_219348A70(v12, v11);
  uint64_t v18 = v23;
  *uint64_t v23 = v10;
  v18[1] = v16;
  v18[2] = v12;
  v18[3] = v11;
  *((unsigned char *)v18 + 32) = v26;
  v18[5] = v21;
  *((unsigned char *)v18 + 48) = v20 & 1;
  *((unsigned char *)v18 + 49) = v19;
  *((unsigned char *)v18 + 50) = v15;
  return result;
}

uint64_t _s26AuthenticationServicesCore23_ASCABLEQRCodeUtilitiesC13passkeURLType4fromSo010_ASPasskeyG0V10Foundation3URLV_tFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_2193E1FF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2193E1FD0();
  if (!v6) {
    return 0;
  }
  uint64_t v7 = sub_2193E28A0();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  if (v7 == 1868851558 && v9 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  char v10 = sub_2193E3140();
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0) {
    return 0;
  }
LABEL_6:
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  sub_219373288((uint64_t)v5, (uint64_t)v14);
  sub_219360818(v14);
  sub_21937415C((uint64_t)v15, (uint64_t)&v15[4]);
  sub_21937415C((uint64_t)&v15[4], (uint64_t)&v15[5]);
  uint64_t v12 = 1;
  if (v15[5]) {
    uint64_t v12 = 2;
  }
  if (v15[5] == 2) {
    return 0;
  }
  else {
    return v12;
  }
}

uint64_t sub_21937415C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for _ASCABLEQRCodeUtilities()
{
  return self;
}

uint64_t destroy for ASCABLEQRCode(uint64_t *a1)
{
  sub_219348A70(*a1, a1[1]);
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];

  return sub_219348A70(v2, v3);
}

uint64_t initializeWithCopy for ASCABLEQRCode(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_21934CDF0(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  unint64_t v7 = *(void *)(a2 + 24);
  sub_21934CDF0(v6, v7);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  return a1;
}

uint64_t assignWithCopy for ASCABLEQRCode(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_21934CDF0(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_219348A70(v6, v7);
  uint64_t v8 = *(void *)(a2 + 16);
  unint64_t v9 = *(void *)(a2 + 24);
  sub_21934CDF0(v8, v9);
  uint64_t v10 = *(void *)(a1 + 16);
  unint64_t v11 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  sub_219348A70(v10, v11);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v12 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v12;
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  return a1;
}

__n128 __swift_memcpy51_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 47) = *(_DWORD *)(a2 + 47);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ASCABLEQRCode(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_219348A70(v4, v5);
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_219348A70(v6, v7);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCABLEQRCode(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 51)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 49);
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ASCABLEQRCode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 50) = 0;
    *(_WORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 51) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 51) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 49) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCABLEQRCode()
{
  return &type metadata for ASCABLEQRCode;
}

unint64_t sub_219374480()
{
  unint64_t result = qword_26AC27480;
  if (!qword_26AC27480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC27480);
  }
  return result;
}

unint64_t sub_2193744D4()
{
  unint64_t result = qword_267C19110;
  if (!qword_267C19110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19110);
  }
  return result;
}

unint64_t sub_219374528()
{
  unint64_t result = qword_26AC27490;
  if (!qword_26AC27490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC27490);
  }
  return result;
}

unint64_t sub_21937457C()
{
  unint64_t result = qword_267C19118;
  if (!qword_267C19118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19118);
  }
  return result;
}

unint64_t sub_2193745D0()
{
  unint64_t result = qword_267C19120;
  if (!qword_267C19120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19120);
  }
  return result;
}

unint64_t sub_219374624()
{
  unint64_t result = qword_267C19128;
  if (!qword_267C19128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19128);
  }
  return result;
}

unint64_t sub_219374678()
{
  unint64_t result = qword_26AC27498;
  if (!qword_26AC27498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC27498);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ASCABLEQRCode.URLError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x219374768);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCABLEQRCode.URLError()
{
  return &type metadata for ASCABLEQRCode.URLError;
}

uint64_t getEnumTagSinglePayload for ASCABLEQRCode.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ASCABLEQRCode.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2193748FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCABLEQRCode.CodingKeys()
{
  return &type metadata for ASCABLEQRCode.CodingKeys;
}

unint64_t sub_219374938()
{
  unint64_t result = qword_267C19130;
  if (!qword_267C19130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19130);
  }
  return result;
}

unint64_t sub_219374990()
{
  unint64_t result = qword_267C19138;
  if (!qword_267C19138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19138);
  }
  return result;
}

unint64_t sub_2193749E8()
{
  unint64_t result = qword_26AC274A8;
  if (!qword_26AC274A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC274A8);
  }
  return result;
}

unint64_t sub_219374A40()
{
  unint64_t result = qword_26AC274B0;
  if (!qword_26AC274B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC274B0);
  }
  return result;
}

uint64_t static ASCPublicKeyCredentialAssertionExtensionInputs.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t sub_219374AA4(void *a1)
{
  sub_2193E1D60();
  swift_allocObject();
  sub_2193E1D50();
  type metadata accessor for ASCPublicKeyCredentialAssertionExtensionInputs();
  sub_219379DB4((unint64_t *)&unk_26AC274C0, v2, (void (*)(uint64_t))type metadata accessor for ASCPublicKeyCredentialAssertionExtensionInputs);
  uint64_t v3 = sub_2193E1D40();
  unint64_t v5 = v4;
  swift_release();
  unsigned int v6 = (void *)sub_2193E2110();
  BOOL v7 = (void *)sub_2193E2830();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);

  return sub_219348A70(v3, v5);
}

uint64_t type metadata accessor for ASCPublicKeyCredentialAssertionExtensionInputs()
{
  return self;
}

id ASCPublicKeyCredentialAssertionExtensionInputs.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ASCPublicKeyCredentialAssertionExtensionInputs.init(coder:)(a1);
}

id ASCPublicKeyCredentialAssertionExtensionInputs.init(coder:)(void *a1)
{
  swift_getObjectType();
  sub_219349168();
  id v3 = v1;
  uint64_t v4 = sub_2193E2B50();
  if (v4)
  {
    unint64_t v5 = (void *)v4;
    uint64_t v6 = sub_2193E2130();
    unint64_t v8 = v7;

    sub_2193E1D30();
    swift_allocObject();
    sub_2193E1D20();
    sub_219379DB4((unint64_t *)&unk_26AC274D0, v9, (void (*)(uint64_t))type metadata accessor for ASCPublicKeyCredentialAssertionExtensionInputs);
    sub_2193E1D10();

    swift_release();
    uint64_t v17 = v48[0];
    unsigned __int8 v43 = (objc_class *)type metadata accessor for ASCPublicKeyCredentialAssertionExtensionInputs();
    uint64_t v18 = (char *)objc_allocWithZone(v43);
    int v19 = (uint64_t *)&v18[OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_largeBlob];
    *(_OWORD *)&v18[OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_largeBlob] = xmmword_2193E7E50;
    unint64_t v44 = v8;
    unsigned int v45 = a1;
    int v20 = (uint64_t *)&v18[OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_prf];
    *(_OWORD *)int v20 = 0u;
    *((_OWORD *)v20 + 1) = 0u;
    v20[4] = 1;
    uint64_t v21 = (uint64_t *)(v17
                    + OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_largeBlob);
    uint64_t v22 = v17;
    unsigned __int8 v41 = (void *)v17;
    swift_beginAccess();
    uint64_t v24 = *v21;
    unint64_t v23 = v21[1];
    swift_beginAccess();
    uint64_t v42 = v6;
    uint64_t v26 = *v19;
    unint64_t v25 = v19[1];
    uint64_t *v19 = v24;
    v19[1] = v23;
    unint64_t v40 = v18;
    sub_219379580(v24, v23);
    sub_219379594(v26, v25);
    char v27 = (uint64_t *)(v22
                    + OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_prf);
    swift_beginAccess();
    uint64_t v28 = *v27;
    uint64_t v29 = v27[1];
    uint64_t v30 = v27[2];
    uint64_t v31 = v27[3];
    uint64_t v32 = v27[4];
    swift_beginAccess();
    uint64_t v33 = *v20;
    uint64_t v34 = v20[1];
    uint64_t v35 = v20[2];
    uint64_t v36 = v20[3];
    uint64_t v39 = v20[4];
    uint64_t *v20 = v28;
    v20[1] = v29;
    void v20[2] = v30;
    v20[3] = v31;
    v20[4] = v32;
    sub_2193795F0(v28, v29, v30, v31, v32, (void (*)(void))sub_21937BB04);
    sub_2193795A8(v33, v34, v35, v36, v39, (void (*)(void))sub_21937BB00);

    v46.receiver = v40;
    v46.super_class = v43;
    id v37 = objc_msgSendSuper2(&v46, sel_init);

    sub_219348A70(v42, v44);
    swift_getObjectType();
    swift_deallocPartialClassInstance();
  }
  else
  {

    if (qword_26AC26F98 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_2193E24F0();
    __swift_project_value_buffer(v10, (uint64_t)qword_26AC29118);
    unint64_t v11 = sub_2193E24D0();
    os_log_type_t v12 = sub_2193E2AE0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      v48[0] = v14;
      *(_DWORD *)uint64_t v13 = 136446210;
      uint64_t v15 = sub_2193E3290();
      uint64_t v47 = sub_21934C764(v15, v16, v48);
      sub_2193E2C00();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_219326000, v11, v12, "Could not find encoded json for %{public}s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D48A390](v14, -1, -1);
      MEMORY[0x21D48A390](v13, -1, -1);
    }

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v37;
}

id ASCPublicKeyCredentialAssertionExtensionInputs.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id ASCPublicKeyCredentialAssertionExtensionInputs.init()()
{
  *(_OWORD *)&v0[OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_largeBlob] = xmmword_2193E7E50;
  id v1 = &v0[OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_prf];
  *(_OWORD *)id v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 1;
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for ASCPublicKeyCredentialAssertionExtensionInputs();
  return objc_msgSendSuper2(&v3, sel_init);
}

BOOL sub_2193754B0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_largeBlob;
  swift_beginAccess();
  if (*(void *)(v1 + 8) >> 60 != 11) {
    return 1;
  }
  uint64_t v2 = v0 + OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_prf;
  swift_beginAccess();
  return *(void *)(v2 + 32) != 1;
}

uint64_t sub_2193755C0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_largeBlob;
  swift_beginAccess();
  BOOL v2 = *(void *)(v1 + 8) >> 60 != 11;
  uint64_t v3 = v0 + OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_prf;
  swift_beginAccess();
  if (*(void *)(v3 + 32) == 1) {
    return v2;
  }
  else {
    return 2;
  }
}

uint64_t sub_21937564C()
{
  swift_getObjectType();
  uint64_t v1 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_largeBlob);
  swift_beginAccess();
  unint64_t v2 = v1[1];
  if (v2 >> 60 == 11) {
    return 0;
  }
  uint64_t v3 = *v1;
  if (v2 >> 60 == 15)
  {
    uint64_t v13 = *v1;
    unint64_t v14 = v1[1];
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    unint64_t v8 = 0xF000000000000000;
    char v9 = 1;
    uint64_t v10 = 1;
  }
  else
  {
    sub_21934CE48(v3, v2);
    sub_21934CDF0(v3, v2);
    ASCTAPLargeBlobExtensionInput.init(support:read:uncompressedWrite:)(0, 0, 2, v3, v2, (uint64_t)&v15);
    uint64_t v13 = v3;
    unint64_t v14 = v2;
    uint64_t v7 = v15;
    uint64_t v6 = v16;
    uint64_t v10 = v17;
    uint64_t v5 = v18;
    unint64_t v8 = v19;
    uint64_t v4 = v20;
    char v9 = v21;
  }
  uint64_t v15 = v7;
  uint64_t v16 = v6;
  uint64_t v17 = v10;
  uint64_t v18 = v5;
  unint64_t v19 = v8;
  uint64_t v20 = v4;
  char v21 = v9;
  long long v22 = 0u;
  long long v23 = 0u;
  uint64_t v24 = 1;
  v25[0] = 1;
  uint64_t v12 = ASCTAPExtensionInput.encode(for:)(v25);
  sub_219379594(v13, v14);
  sub_21934CEC4(v7, v6, v10, v5, v8);
  sub_2193795A8(0, 0, 0, 0, 1, (void (*)(void))sub_21934CF58);
  return v12;
}

uint64_t sub_219375A60()
{
  swift_getObjectType();
  uint64_t v1 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_largeBlob);
  swift_beginAccess();
  unint64_t v2 = v1[1];
  if (v2 >> 60 == 11)
  {
    uint64_t v3 = 0;
    uint64_t v44 = 0;
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    uint64_t v6 = 0;
    char v41 = 0;
    uint64_t v7 = 1;
  }
  else
  {
    uint64_t v8 = *v1;
    if (v2 >> 60 == 15)
    {
      sub_219379594(v8, v2);
      uint64_t v3 = 0;
      uint64_t v7 = 0;
      uint64_t v4 = 0;
      uint64_t v6 = 0;
      unint64_t v5 = 0xF000000000000000;
      uint64_t v44 = 1;
      char v9 = 1;
    }
    else
    {
      sub_21934CE48(v8, v2);
      ASCTAPLargeBlobExtensionInput.init(support:read:uncompressedWrite:)(0, 0, 2, v8, v2, (uint64_t)&v45);
      uint64_t v3 = v45;
      uint64_t v7 = v46;
      uint64_t v44 = v47;
      uint64_t v4 = v48;
      unint64_t v5 = v49;
      uint64_t v6 = v50;
      char v9 = v51;
    }
    char v41 = v9;
  }
  uint64_t v10 = (uint64_t *)(v0 + OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_prf);
  swift_beginAccess();
  uint64_t v11 = v10[4];
  uint64_t v34 = v4;
  uint64_t v43 = v6;
  uint64_t v38 = v7;
  if (v11 == 1)
  {
    unint64_t v12 = v5;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v40 = 1;
    uint64_t v17 = v44;
    char v18 = v41;
  }
  else
  {
    unint64_t v36 = v5;
    uint64_t v33 = v3;
    uint64_t v19 = *v10;
    unint64_t v20 = v10[1];
    uint64_t v21 = v10[2];
    unint64_t v22 = v10[3];
    if (v20 >> 60 == 15)
    {
      uint64_t v23 = v10[2];
      sub_21934D03C(*v10, v10[1], v23, v10[3]);
      swift_bridgeObjectRetain();
      uint64_t v39 = 0;
      uint64_t v42 = 0;
      uint64_t v24 = 0;
      unint64_t v35 = 0xF000000000000000;
    }
    else
    {
      uint64_t v45 = *v10;
      uint64_t v46 = v20;
      uint64_t v47 = v21;
      unint64_t v48 = v22;
      sub_2193795F0(v19, v20, v21, v22, v11, (void (*)(void))sub_21937BB04);
      sub_21934D03C(v19, v20, v21, v22);
      uint64_t v39 = ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues.salt1.getter();
      unint64_t v35 = v25;
      uint64_t v45 = v19;
      uint64_t v46 = v20;
      uint64_t v47 = v21;
      unint64_t v48 = v22;
      uint64_t v42 = ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues.salt2.getter();
      uint64_t v24 = v26;
      uint64_t v23 = v21;
      sub_21934CF58(v19, v20, v21, v22);
    }
    uint64_t v17 = v44;
    char v18 = v41;
    unint64_t v12 = v36;
    if (v11)
    {
      uint64_t v40 = sub_21934D08C(v11);
      sub_2193795A8(v19, v20, v23, v22, v11, (void (*)(void))sub_21937BB00);
    }
    else
    {
      sub_2193795A8(v19, v20, v23, v22, 0, (void (*)(void))sub_21937BB00);
      uint64_t v40 = 0;
    }
    uint64_t v3 = v33;
    uint64_t v7 = v38;
    uint64_t v13 = v39;
    uint64_t v14 = v35;
    uint64_t v15 = v42;
    uint64_t v16 = v24;
  }
  uint64_t v45 = v3;
  uint64_t v46 = v7;
  uint64_t v47 = v17;
  unint64_t v48 = v34;
  unint64_t v49 = v12;
  uint64_t v50 = v43;
  char v51 = v18;
  uint64_t v52 = v13;
  uint64_t v53 = v14;
  uint64_t v54 = v15;
  uint64_t v55 = v16;
  uint64_t v56 = v40;
  LOBYTE(v57) = 0;
  uint64_t v27 = v17;
  uint64_t v28 = v15;
  uint64_t v29 = v17;
  uint64_t v30 = v16;
  sub_21934CFA8(v3, v7, v29, v34, v12);
  uint64_t v37 = v30;
  sub_2193795F0(v13, v14, v28, v30, v40, (void (*)(void))sub_21934D03C);
  uint64_t v31 = ASCTAPExtensionInput.encode(for:)((char *)&v57);
  sub_21934CEC4(v3, v38, v27, v34, v12);
  sub_2193795A8(v13, v14, v28, v37, v40, (void (*)(void))sub_21934CF58);
  sub_21934CEC4(v3, v38, v27, v34, v12);
  sub_2193795A8(v13, v14, v28, v37, v40, (void (*)(void))sub_21934CF58);
  return v31;
}

id sub_219376170(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v4 = a1;
  uint64_t v5 = a3();
  unint64_t v7 = v6;

  if (v7 >> 60 == 15)
  {
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = (void *)sub_2193E2110();
    sub_21934CEB0(v5, v7);
  }

  return v8;
}

uint64_t sub_2193761FC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1
                 + OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_largeBlob);
  swift_beginAccess();
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  *a2 = *v3;
  a2[1] = v5;
  return sub_219379580(v4, v5);
}

uint64_t sub_219376254(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = (uint64_t *)(*a2
                 + OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_largeBlob);
  swift_beginAccess();
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  uint64_t *v4 = v2;
  v4[1] = v3;
  sub_219379580(v2, v3);
  return sub_219379594(v5, v6);
}

uint64_t sub_2193762D0@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v3 = (uint64_t *)(v1
                 + OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_largeBlob);
  swift_beginAccess();
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_219379580(v4, v5);
}

uint64_t sub_219376324(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = (uint64_t *)(v1
                 + OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_largeBlob);
  swift_beginAccess();
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  uint64_t *v4 = v2;
  v4[1] = v3;
  return sub_219379594(v5, v6);
}

uint64_t (*sub_219376380())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2193763DC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_prf);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  *a2 = *v3;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  a2[4] = v8;
  return sub_2193795F0(v4, v5, v6, v7, v8, (void (*)(void))sub_21937BB04);
}

uint64_t sub_219376458(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_prf);
  swift_beginAccess();
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  uint64_t v10 = v7[2];
  uint64_t v11 = v7[3];
  uint64_t v13 = v7[4];
  uint64_t *v7 = v2;
  v7[1] = v3;
  _OWORD v7[2] = v4;
  double v7[3] = v5;
  void v7[4] = v6;
  sub_2193795F0(v2, v3, v4, v5, v6, (void (*)(void))sub_21937BB04);
  return sub_2193795A8(v8, v9, v10, v11, v13, (void (*)(void))sub_21937BB00);
}

uint64_t sub_219376540@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_prf);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_2193795F0(v4, v5, v6, v7, v8, (void (*)(void))sub_21937BB04);
}

uint64_t sub_2193765B8(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  long long v12 = *(_OWORD *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_prf);
  swift_beginAccess();
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  uint64_t v8 = v5[2];
  uint64_t v9 = v5[3];
  uint64_t v10 = v5[4];
  *uint64_t v5 = v2;
  v5[1] = v3;
  *((_OWORD *)v5 + 1) = v12;
  v5[4] = v4;
  return sub_2193795A8(v6, v7, v8, v9, v10, (void (*)(void))sub_21937BB00);
}

uint64_t (*sub_219376650())()
{
  return j__swift_endAccess;
}

uint64_t static ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.Operation.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  if (v3 >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      sub_21934CE48(*(void *)a2, *(void *)(a2 + 8));
      sub_21934CE48(v2, v3);
      char v6 = sub_219379924(v2, v3, v4, v5);
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  if (v5 >> 60 != 15)
  {
LABEL_5:
    sub_21934CE48(*(void *)a2, *(void *)(a2 + 8));
    sub_21934CE48(v2, v3);
    char v6 = 0;
    goto LABEL_7;
  }
  char v6 = 1;
LABEL_7:
  sub_21934CEB0(v2, v3);
  sub_21934CEB0(v4, v5);
  return v6 & 1;
}

uint64_t sub_219376778()
{
  if (*v0) {
    return 0x6574697277;
  }
  else {
    return 1684104562;
  }
}

uint64_t sub_2193767A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21937B824(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2193767D0(uint64_t a1)
{
  unint64_t v2 = sub_219379BBC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21937680C(uint64_t a1)
{
  unint64_t v2 = sub_219379BBC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_219376848(uint64_t a1)
{
  unint64_t v2 = sub_219379C64();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_219376884(uint64_t a1)
{
  unint64_t v2 = sub_219379C64();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2193768C8()
{
  return 12383;
}

uint64_t sub_2193768D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2193E3140();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_219376954(uint64_t a1)
{
  unint64_t v2 = sub_219379C10();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_219376990(uint64_t a1)
{
  unint64_t v2 = sub_219379C10();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.Operation.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19168);
  uint64_t v21 = *(void *)(v3 - 8);
  uint64_t v22 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v20 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19170);
  uint64_t v18 = *(void *)(v5 - 8);
  uint64_t v19 = v5;
  MEMORY[0x270FA5388](v5);
  char v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19178);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = v1[1];
  uint64_t v17 = *v1;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_219379BBC();
  sub_2193E3260();
  if (v12 >> 60 == 15)
  {
    LOBYTE(v23) = 0;
    sub_219379C64();
    sub_2193E3050();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    LOBYTE(v23) = 1;
    uint64_t v14 = v17;
    sub_21934CDF0(v17, v12);
    sub_219379C10();
    uint64_t v15 = v20;
    sub_2193E3050();
    uint64_t v23 = v14;
    unint64_t v24 = v12;
    sub_21934D644();
    uint64_t v16 = v22;
    sub_2193E30D0();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v16);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return sub_21934CEB0(v14, v12);
  }
}

uint64_t ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.Operation.init(from:)@<X0>(void *a1@<X0>, long long *a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C191A0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  uint64_t v27 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C191A8);
  uint64_t v29 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C191B0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v30 = a1;
  __swift_project_boxed_opaque_existential_1Tm(a1, v14);
  sub_219379BBC();
  uint64_t v15 = v32;
  sub_2193E3240();
  if (v15) {
    goto LABEL_7;
  }
  uint64_t v16 = v29;
  uint64_t v32 = v11;
  uint64_t v17 = sub_2193E3040();
  if (*(void *)(v17 + 16) != 1)
  {
    uint64_t v18 = sub_2193E2DD0();
    swift_allocError();
    unint64_t v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C18A90);
    void *v20 = &type metadata for ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.Operation;
    sub_2193E2F90();
    sub_2193E2DC0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, *MEMORY[0x263F8DCB0], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v10);
LABEL_7:
    uint64_t v21 = (uint64_t)v30;
    return __swift_destroy_boxed_opaque_existential_1Tm(v21);
  }
  if (*(unsigned char *)(v17 + 32))
  {
    LOBYTE(v31) = 1;
    sub_219379C10();
    sub_2193E2F80();
    sub_21934D774();
    uint64_t v23 = v26;
    sub_2193E3010();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v23);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v10);
    long long v24 = v31;
  }
  else
  {
    LOBYTE(v31) = 0;
    sub_219379C64();
    sub_2193E2F80();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v7);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v10);
    long long v24 = xmmword_2193E7220;
  }
  uint64_t v21 = (uint64_t)v30;
  *uint64_t v28 = v24;
  return __swift_destroy_boxed_opaque_existential_1Tm(v21);
}

uint64_t sub_219377188@<X0>(void *a1@<X0>, long long *a2@<X8>)
{
  return ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.Operation.init(from:)(a1, a2);
}

uint64_t sub_2193771A0(void *a1)
{
  return ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.Operation.encode(to:)(a1);
}

uint64_t sub_2193771B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  if (v3 >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      sub_21934CE48(*(void *)a2, *(void *)(a2 + 8));
      sub_21934CE48(v2, v3);
      char v6 = sub_219379924(v2, v3, v4, v5);
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  if (v5 >> 60 != 15)
  {
LABEL_5:
    sub_21934CE48(*(void *)a2, *(void *)(a2 + 8));
    sub_21934CE48(v2, v3);
    char v6 = 0;
    goto LABEL_7;
  }
  char v6 = 1;
LABEL_7:
  sub_21934CEB0(v2, v3);
  sub_21934CEB0(v4, v5);
  return v6 & 1;
}

__n128 ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.init(operation:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.operation.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_21934CE48(v2, v3);
}

uint64_t ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.operation.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_21934CEB0(*(void *)v1, *(void *)(v1 + 8));
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  return result;
}

uint64_t (*ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.operation.modify())()
{
  return nullsub_1;
}

uint64_t sub_2193772F0()
{
  return 0x6F6974617265706FLL;
}

uint64_t sub_21937730C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6F6974617265706FLL && a2 == 0xE90000000000006ELL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2193E3140();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2193773B0(uint64_t a1)
{
  unint64_t v2 = sub_219379CB8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2193773EC(uint64_t a1)
{
  unint64_t v2 = sub_219379CB8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C191C8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_219379CB8();
  sub_2193E3260();
  v10[0] = v8;
  v10[1] = v7;
  sub_219379D0C();
  sub_2193E30D0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C191E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_219379CB8();
  sub_2193E3240();
  if (!v2)
  {
    sub_219379D60();
    sub_2193E3010();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_2193776E0@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.init(from:)(a1, a2);
}

uint64_t sub_2193776F8(void *a1)
{
  return ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.encode(to:)(a1);
}

uint64_t sub_219377710()
{
  uint64_t v0 = sub_2193E2880();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2193E2870();
  uint64_t v4 = sub_2193E2850();
  unint64_t v6 = v5;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v6 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = sub_21935B74C((uint64_t)&unk_26CAB4050);
    unint64_t v10 = v9;
    qword_267C19140 = v4;
    unk_267C19148 = v6;
    sub_21934CE48(v4, v6);
    sub_21934CDF0(v8, v10);
    sub_21935AB18(v8, v10);
    sub_219348A70(v8, v10);
    sub_219348A70(v8, v10);
    return sub_21934CEB0(v4, v6);
  }
  return result;
}

uint64_t ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues.init(saltInput1:saltInput2:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues.saltInput1.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_21934CDF0(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues.saltInput1.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_219348A70(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues.saltInput1.modify())()
{
  return nullsub_1;
}

uint64_t ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues.saltInput2.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_21934CE48(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues.saltInput2.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_21934CEB0(*(void *)(v2 + 16), *(void *)(v2 + 24));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues.saltInput2.modify())()
{
  return nullsub_1;
}

uint64_t ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues.salt1.getter()
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v1 = sub_2193E2780();
  uint64_t v22 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2193E2660();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v0;
  unint64_t v9 = v0[1];
  if (qword_267C189A0 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_267C19140;
  unint64_t v11 = unk_267C19148;
  uint64_t v24 = qword_267C19140;
  unint64_t v25 = unk_267C19148;
  sub_21934CDF0(qword_267C19140, unk_267C19148);
  sub_21934CDF0(v10, v11);
  sub_21934CDF0(v8, v9);
  sub_21935AB18(v8, v9);
  sub_219348A70(v8, v9);
  sub_219348A70(v10, v11);
  uint64_t v12 = v24;
  unint64_t v13 = v25;
  sub_219379DB4((unint64_t *)&qword_26AC274F0, 255, MEMORY[0x263F047F8]);
  sub_2193E2640();
  switch(v13 >> 62)
  {
    case 1uLL:
      if (v12 >> 32 < (int)v12) {
        __break(1u);
      }
      uint64_t v21 = v5;
      sub_21934CDF0(v12, v13);
      uint64_t v5 = v21;
      sub_2193796B0((int)v12, v12 >> 32);
      goto LABEL_8;
    case 2uLL:
      uint64_t v21 = v5;
      uint64_t v14 = *(void *)(v12 + 16);
      uint64_t v15 = *(void *)(v12 + 24);
      sub_21934CDF0(v12, v13);
      swift_retain();
      swift_retain();
      uint64_t v16 = v15;
      uint64_t v5 = v21;
      sub_2193796B0(v14, v16);
      swift_release();
      swift_release();
LABEL_8:
      sub_219348A70(v12, v13);
      goto LABEL_11;
    case 3uLL:
      memset(v23, 0, 14);
      goto LABEL_10;
    default:
      v23[0] = v12;
      LOWORD(v23[1]) = v13;
      BYTE2(v23[1]) = BYTE2(v13);
      BYTE3(v23[1]) = BYTE3(v13);
      BYTE4(v23[1]) = BYTE4(v13);
      BYTE5(v23[1]) = BYTE5(v13);
LABEL_10:
      sub_2193E2620();
      sub_219348A70(v12, v13);
LABEL_11:
      sub_2193E2630();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v3, v1);
      sub_219348A70(v12, v13);
      uint64_t v26 = v4;
      uint64_t v27 = sub_219379DB4(&qword_267C191F8, 255, MEMORY[0x263F045C0]);
      uint64_t v17 = __swift_allocate_boxed_opaque_existential_1(&v24);
      (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(v17, v7, v4);
      __swift_project_boxed_opaque_existential_1Tm(&v24, v26);
      sub_2193E1E40();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      uint64_t v18 = v23[0];
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v24);
      return v18;
  }
}

uint64_t ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues.salt2.getter()
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v1 = sub_2193E2780();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2193E2660();
  uint64_t v5 = MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v0 + 16);
  unint64_t v10 = *(void *)(v0 + 24);
  if (v10 >> 60 != 15)
  {
    uint64_t v23 = v5;
    uint64_t v24 = v2;
    uint64_t v25 = v6;
    sub_21934CDF0(v9, v10);
    if (qword_267C189A0 != -1) {
      swift_once();
    }
    uint64_t v11 = qword_267C19140;
    unint64_t v12 = unk_267C19148;
    uint64_t v27 = qword_267C19140;
    unint64_t v28 = unk_267C19148;
    sub_21934CDF0(qword_267C19140, unk_267C19148);
    sub_21934CE48(v9, v10);
    sub_21934CDF0(v11, v12);
    sub_21935AB18(v9, v10);
    sub_21934CEB0(v9, v10);
    sub_219348A70(v11, v12);
    uint64_t v13 = v27;
    unint64_t v14 = v28;
    sub_219379DB4((unint64_t *)&qword_26AC274F0, 255, MEMORY[0x263F047F8]);
    sub_2193E2640();
    switch(v14 >> 62)
    {
      case 1uLL:
        if (v13 >> 32 < (int)v13) {
          __break(1u);
        }
        unint64_t v22 = v14 & 0x3FFFFFFFFFFFFFFFLL;
        sub_21934CDF0(v13, v14);
        sub_2193796B0((int)v13, v13 >> 32);
        goto LABEL_9;
      case 2uLL:
        uint64_t v15 = *(void *)(v13 + 16);
        unint64_t v22 = *(void *)(v13 + 24);
        sub_21934CDF0(v13, v14);
        swift_retain();
        swift_retain();
        sub_2193796B0(v15, v22);
        swift_release();
        swift_release();
LABEL_9:
        sub_219348A70(v13, v14);
        goto LABEL_12;
      case 3uLL:
        memset(v26, 0, 14);
        goto LABEL_11;
      default:
        v26[0] = v13;
        LOWORD(v26[1]) = v14;
        BYTE2(v26[1]) = BYTE2(v14);
        BYTE3(v26[1]) = BYTE3(v14);
        BYTE4(v26[1]) = BYTE4(v14);
        BYTE5(v26[1]) = BYTE5(v14);
LABEL_11:
        sub_2193E2620();
        sub_219348A70(v13, v14);
LABEL_12:
        sub_2193E2630();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v1);
        sub_219348A70(v13, v14);
        uint64_t v16 = v23;
        uint64_t v29 = v23;
        uint64_t v30 = sub_219379DB4(&qword_267C191F8, 255, MEMORY[0x263F045C0]);
        uint64_t v17 = __swift_allocate_boxed_opaque_existential_1(&v27);
        uint64_t v18 = v25;
        (*(void (**)(uint64_t *, char *, uint64_t))(v25 + 16))(v17, v8, v16);
        __swift_project_boxed_opaque_existential_1Tm(&v27, v29);
        sub_2193E1E40();
        (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v16);
        uint64_t v19 = v26[0];
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v27);
        sub_21934CEB0(v9, v10);
        uint64_t v9 = v19;
        break;
    }
  }
  return v9;
}

uint64_t sub_219378394()
{
  return 0x75706E49746C6173;
}

uint64_t sub_2193783C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21937B900(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2193783E8(uint64_t a1)
{
  unint64_t v2 = sub_219379DFC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_219378424(uint64_t a1)
{
  unint64_t v2 = sub_219379DFC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19200);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  uint64_t v9 = v1[2];
  uint64_t v13 = v1[3];
  uint64_t v14 = v9;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_219379DFC();
  sub_2193E3260();
  uint64_t v16 = v8;
  uint64_t v17 = v7;
  char v18 = 0;
  sub_21934D644();
  uint64_t v10 = v15;
  sub_2193E30D0();
  if (!v10)
  {
    uint64_t v16 = v14;
    uint64_t v17 = v13;
    char v18 = 1;
    sub_2193E30A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19210);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_219379DFC();
  sub_2193E3240();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    uint64_t v15 = 0;
    unint64_t v16 = 0xF000000000000000;
  }
  else
  {
    char v18 = a2;
    char v21 = 0;
    sub_21934D774();
    sub_2193E3010();
    uint64_t v10 = v19;
    unint64_t v11 = v20;
    char v21 = 1;
    sub_21934CDF0(v19, v20);
    sub_2193E2FE0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v12 = v19;
    unint64_t v13 = v20;
    sub_21934CE48(v19, v20);
    sub_21934CEB0(0, 0xF000000000000000);
    sub_21934CDF0(v10, v11);
    sub_21934CE48(v12, v13);
    sub_21934CEB0(v12, v13);
    sub_219348A70(v10, v11);
    uint64_t v14 = v18;
    uint64_t *v18 = v10;
    v14[1] = v11;
    void v14[2] = v12;
    void v14[3] = v13;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    sub_219348A70(v10, v11);
    uint64_t v15 = v12;
    unint64_t v16 = v13;
  }
  return sub_21934CEB0(v15, v16);
}

uint64_t sub_219378880@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues.init(from:)(a1, a2);
}

uint64_t sub_219378898(void *a1)
{
  return ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues.encode(to:)(a1);
}

uint64_t ASCPublicKeyCredentialAssertionExtensionInputs.PRF.inputValues.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  unint64_t v5 = v1[3];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_21934D03C(v2, v3, v4, v5);
}

uint64_t ASCPublicKeyCredentialAssertionExtensionInputs.PRF.perCredentialInputValues.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 ASCPublicKeyCredentialAssertionExtensionInputs.PRF.init(inputValues:perCredentialInputValues:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __n128 result = *(__n128 *)a1;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v4;
  *(void *)(a3 + 32) = a2;
  return result;
}

uint64_t sub_2193788DC()
{
  if (*v0) {
    return 0xD000000000000018;
  }
  else {
    return 0x6C61567475706E69;
  }
}

uint64_t sub_219378924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21937B9F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21937894C(uint64_t a1)
{
  unint64_t v2 = sub_219379E50();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_219378988(uint64_t a1)
{
  unint64_t v2 = sub_219379E50();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASCPublicKeyCredentialAssertionExtensionInputs.PRF.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19218);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = *v1;
  uint64_t v8 = *((void *)v1 + 2);
  uint64_t v7 = *((void *)v1 + 3);
  uint64_t v12 = *((void *)v1 + 4);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_219379E50();
  sub_2193E3260();
  long long v15 = v13;
  uint64_t v16 = v8;
  uint64_t v17 = v7;
  char v18 = 0;
  sub_21934D5A8();
  uint64_t v9 = v14;
  sub_2193E30A0();
  if (!v9)
  {
    *(void *)&long long v15 = v12;
    char v18 = 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C19230);
    sub_21934D6EC((unint64_t *)&unk_267C18AE0, (void (*)(void))sub_21934D644, (void (*)(void))sub_21934D5A8);
    sub_2193E30A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ASCPublicKeyCredentialAssertionExtensionInputs.PRF.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19240);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_219379E50();
  sub_2193E3240();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  char v27 = 0;
  sub_21934D698();
  sub_2193E2FE0();
  uint64_t v9 = v23;
  uint64_t v19 = a2;
  unint64_t v20 = v24;
  uint64_t v11 = v25;
  unint64_t v10 = v26;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C19230);
  char v27 = 1;
  uint64_t v21 = v9;
  uint64_t v22 = v11;
  uint64_t v12 = v9;
  unint64_t v13 = v20;
  sub_21934D03C(v12, v20, v11, v10);
  sub_21934D6EC((unint64_t *)&unk_267C18B00, (void (*)(void))sub_21934D774, (void (*)(void))sub_21934D698);
  sub_2193E2FE0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v22;
  uint64_t v14 = v23;
  uint64_t v16 = v21;
  sub_21934D03C(v21, v13, v22, v10);
  swift_bridgeObjectRetain();
  sub_21934CF58(v16, v13, v15, v10);
  uint64_t v17 = v19;
  uint64_t *v19 = v16;
  v17[1] = v13;
  long long v17[2] = v15;
  v17[3] = v10;
  _OWORD v17[4] = v14;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  sub_21934CF58(v16, v13, v15, v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_219378EA4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ASCPublicKeyCredentialAssertionExtensionInputs.PRF.init(from:)(a1, a2);
}

uint64_t sub_219378EBC(void *a1)
{
  return ASCPublicKeyCredentialAssertionExtensionInputs.PRF.encode(to:)(a1);
}

uint64_t sub_219378ED4(uint64_t a1)
{
  unint64_t v2 = sub_219379EA4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_219378F10(uint64_t a1)
{
  unint64_t v2 = sub_219379EA4();

  return MEMORY[0x270FA00B8](a1, v2);
}

id ASCPublicKeyCredentialAssertionExtensionInputs.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ASCPublicKeyCredentialAssertionExtensionInputs();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_219378FE4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC274F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_219379EA4();
  sub_2193E3260();
  uint64_t v9 = (long long *)(v3
                  + OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_largeBlob);
  swift_beginAccess();
  long long v15 = *v9;
  char v18 = 0;
  sub_219379EF8();
  sub_2193E30A0();
  if (!v2)
  {
    unint64_t v10 = (long long *)(v3
                     + OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_prf);
    swift_beginAccess();
    uint64_t v11 = *((void *)v10 + 4);
    long long v12 = v10[1];
    long long v15 = *v10;
    long long v16 = v12;
    uint64_t v17 = v11;
    v14[15] = 1;
    sub_219379F4C();
    sub_2193E30A0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

id ASCPublicKeyCredentialAssertionExtensionInputs.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ASCPublicKeyCredentialAssertionExtensionInputs.init(from:)(a1);
}

id ASCPublicKeyCredentialAssertionExtensionInputs.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27518);
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = &v1[OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_largeBlob];
  *(_OWORD *)&v1[OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_largeBlob] = xmmword_2193E7E50;
  uint64_t v8 = (uint64_t *)&v1[OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_prf];
  *(_OWORD *)uint64_t v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  void v8[4] = 1;
  uint64_t v9 = a1[3];
  uint64_t v34 = a1;
  __swift_project_boxed_opaque_existential_1Tm(a1, v9);
  sub_219379EA4();
  uint64_t v42 = v1;
  uint64_t v33 = v6;
  sub_2193E3240();
  if (v2)
  {
    id v29 = v42;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
    sub_219379594(*(void *)v7, *((void *)v7 + 1));
    sub_2193795A8(*v8, v8[1], v8[2], v8[3], v8[4], (void (*)(void))sub_21937BB00);

    type metadata accessor for ASCPublicKeyCredentialAssertionExtensionInputs();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = v31;
    char v41 = 0;
    sub_219379FA0();
    uint64_t v11 = v32;
    sub_2193E2FE0();
    uint64_t v12 = v37;
    uint64_t v13 = v38;
    swift_beginAccess();
    uint64_t v14 = *(void *)v7;
    unint64_t v15 = *((void *)v7 + 1);
    *(void *)uint64_t v7 = v12;
    *((void *)v7 + 1) = v13;
    long long v16 = v33;
    sub_219379594(v14, v15);
    char v36 = 1;
    sub_219379FF4();
    sub_2193E2FE0();
    uint64_t v19 = v37;
    uint64_t v18 = v38;
    unint64_t v20 = v16;
    long long v30 = v39;
    uint64_t v21 = v40;
    swift_beginAccess();
    uint64_t v22 = *v8;
    uint64_t v23 = v8[1];
    uint64_t v24 = v8[2];
    uint64_t v25 = v8[3];
    uint64_t v26 = v8[4];
    *uint64_t v8 = v19;
    v8[1] = v18;
    *((_OWORD *)v8 + 1) = v30;
    void v8[4] = v21;
    sub_2193795A8(v22, v23, v24, v25, v26, (void (*)(void))sub_21937BB00);
    char v27 = v42;

    unint64_t v28 = (objc_class *)type metadata accessor for ASCPublicKeyCredentialAssertionExtensionInputs();
    v35.receiver = v27;
    v35.super_class = v28;
    id v29 = objc_msgSendSuper2(&v35, sel_init);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v20, v11);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
  }
  return v29;
}

id sub_219379508@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for ASCPublicKeyCredentialAssertionExtensionInputs());
  id result = ASCPublicKeyCredentialAssertionExtensionInputs.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_21937955C(void *a1)
{
  return sub_219378FE4(a1);
}

uint64_t sub_219379580(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_21934CE48(a1, a2);
  }
  return a1;
}

uint64_t sub_219379594(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_21934CEB0(a1, a2);
  }
  return a1;
}

uint64_t sub_2193795A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  if (a5 != 1)
  {
    a6();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2193795F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  if (a5 != 1)
  {
    a6();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unsigned char *sub_219379638@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_2193A2A18(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_2193A2ADC((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_2193A2B58((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_2193796B0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2193E1DF0();
  if (!result || (uint64_t result = sub_2193E1E20(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_2193E1E10();
      sub_2193E2780();
      sub_219379DB4((unint64_t *)&qword_26AC274F0, 255, MEMORY[0x263F047F8]);
      return sub_2193E2620();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_219379794(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_2193842B8((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_21937986C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_2193E1DF0();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_2193E1E20();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_2193E1E10();
  sub_2193842B8(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_219379924(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x219379B8CLL);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_21934CDF0(a3, a4);
                  sub_21934CDF0(a1, a2);
                  char v17 = sub_21937986C((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_219348A70(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_21934CDF0(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_21937986C(v21, v22, v20, a3, a4);
                  sub_219348A70(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_21934CDF0(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_21934CDF0(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_219379794(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_219348A70(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

unint64_t sub_219379BBC()
{
  unint64_t result = qword_267C19180;
  if (!qword_267C19180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19180);
  }
  return result;
}

unint64_t sub_219379C10()
{
  unint64_t result = qword_267C19188;
  if (!qword_267C19188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19188);
  }
  return result;
}

unint64_t sub_219379C64()
{
  unint64_t result = qword_267C19198;
  if (!qword_267C19198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19198);
  }
  return result;
}

unint64_t sub_219379CB8()
{
  unint64_t result = qword_267C191D0;
  if (!qword_267C191D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C191D0);
  }
  return result;
}

unint64_t sub_219379D0C()
{
  unint64_t result = qword_267C191D8;
  if (!qword_267C191D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C191D8);
  }
  return result;
}

unint64_t sub_219379D60()
{
  unint64_t result = qword_267C191E8;
  if (!qword_267C191E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C191E8);
  }
  return result;
}

uint64_t sub_219379DB4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_219379DFC()
{
  unint64_t result = qword_267C19208;
  if (!qword_267C19208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19208);
  }
  return result;
}

unint64_t sub_219379E50()
{
  unint64_t result = qword_267C19220;
  if (!qword_267C19220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19220);
  }
  return result;
}

unint64_t sub_219379EA4()
{
  unint64_t result = qword_26AC27500;
  if (!qword_26AC27500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC27500);
  }
  return result;
}

unint64_t sub_219379EF8()
{
  unint64_t result = qword_26AC27508;
  if (!qword_26AC27508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC27508);
  }
  return result;
}

unint64_t sub_219379F4C()
{
  unint64_t result = qword_26AC27510;
  if (!qword_26AC27510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC27510);
  }
  return result;
}

unint64_t sub_219379FA0()
{
  unint64_t result = qword_26AC27520;
  if (!qword_26AC27520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC27520);
  }
  return result;
}

unint64_t sub_219379FF4()
{
  unint64_t result = qword_26AC27528;
  if (!qword_26AC27528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC27528);
  }
  return result;
}

uint64_t method lookup function for ASCPublicKeyCredentialAssertionExtensionInputs(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ASCPublicKeyCredentialAssertionExtensionInputs);
}

uint64_t dispatch thunk of ASCPublicKeyCredentialAssertionExtensionInputs.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialAssertionExtensionInputs.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialAssertionExtensionInputs.hasAtLeastOneExtension.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialAssertionExtensionInputs.caBLEAuthenticatorMinimumRequirement.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialAssertionExtensionInputs.cborForWebKit()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialAssertionExtensionInputs.cborForHybrid()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialAssertionExtensionInputs.largeBlob.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialAssertionExtensionInputs.largeBlob.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialAssertionExtensionInputs.largeBlob.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialAssertionExtensionInputs.prf.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialAssertionExtensionInputs.prf.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialAssertionExtensionInputs.prf.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialAssertionExtensionInputs.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialAssertionExtensionInputs.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t *destroy for ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob(uint64_t *result)
{
  unint64_t v1 = result[1];
  if (v1 >> 60 != 15) {
    return (uint64_t *)sub_219348A70(*result, v1);
  }
  return result;
}

uint64_t _s26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputsC9LargeBlobVwCP_0(uint64_t a1, uint64_t *a2)
{
  unint64_t v3 = a2[1];
  if (v3 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v4 = *a2;
    sub_21934CDF0(*a2, a2[1]);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v3;
  }
  return a1;
}

uint64_t *assignWithCopy for ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if ((unint64_t)a1[1] >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      uint64_t v6 = *(void *)a2;
      sub_21934CDF0(*(void *)a2, *(void *)(a2 + 8));
      uint64_t v7 = *a1;
      unint64_t v8 = a1[1];
      *a1 = v6;
      a1[1] = v4;
      sub_219348A70(v7, v8);
      return a1;
    }
    sub_21934DFD8((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  uint64_t v5 = *(void *)a2;
  sub_21934CDF0(*(void *)a2, *(void *)(a2 + 8));
  *a1 = v5;
  a1[1] = v4;
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t *assignWithTake for ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a1[1];
  if (v4 >> 60 != 15)
  {
    unint64_t v5 = a2[1];
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_219348A70(v6, v4);
      return a1;
    }
    sub_21934DFD8((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 12);
  }
  uint64_t v3 = *(void *)(a1 + 8) >> 60;
  if (((4 * v3) & 0xC) != 0) {
    int v4 = 14 - ((4 * v3) & 0xC | (v3 >> 2));
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(void *)__n128 result = a2 - 12;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob()
{
  return &type metadata for ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob;
}

uint64_t *destroy for ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.Operation(uint64_t *result)
{
  unint64_t v1 = result[1];
  if ((v1 & 0x3000000000000000) == 0) {
    return (uint64_t *)sub_219348A70(*result, v1);
  }
  return result;
}

uint64_t _s26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputsC9LargeBlobV9OperationOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = a2[1];
  if ((v3 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v4 = *a2;
    sub_21934CDF0(*a2, a2[1]);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v3;
  }
  return a1;
}

uint64_t *assignWithCopy for ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.Operation(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a1[1];
  unint64_t v5 = a2[1];
  uint64_t v6 = v5 & 0x3000000000000000;
  if ((v4 & 0x3000000000000000) == 0)
  {
    if (!v6)
    {
      uint64_t v9 = *a2;
      sub_21934CDF0(v9, v5);
      uint64_t v10 = *a1;
      unint64_t v11 = a1[1];
      *a1 = v9;
      a1[1] = v5;
      sub_219348A70(v10, v11);
      return a1;
    }
    sub_219348A70(*a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  uint64_t v7 = *a2;
  sub_21934CDF0(v7, v5);
  *a1 = v7;
  a1[1] = v5;
  return a1;
}

uint64_t *assignWithTake for ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.Operation(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a1[1];
  if ((v4 & 0x3000000000000000) == 0)
  {
    uint64_t v5 = a2[1];
    if ((v5 & 0x3000000000000000) == 0)
    {
      uint64_t v7 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_219348A70(v7, v4);
      return a1;
    }
    sub_219348A70(*a1, v4);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.Operation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 12);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  if (v3 + 1 >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.Operation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 12;
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

uint64_t sub_21937A790(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8) >> 60;
  if (((4 * v1) & 0xC) != 0) {
    return 16 - ((4 * v1) & 0xC | (v1 >> 2));
  }
  else {
    return 0;
  }
}

void *sub_21937A7B8(void *result, unsigned int a2)
{
  if (a2 > 0xC)
  {
    *__n128 result = a2 - 13;
    result[1] = 0;
  }
  else if (a2)
  {
    *__n128 result = 0;
    result[1] = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.Operation()
{
  return &type metadata for ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.Operation;
}

uint64_t destroy for ASCPublicKeyCredentialAssertionExtensionInputs.PRF(uint64_t *a1)
{
  unint64_t v2 = a1[1];
  if (v2 >> 60 != 15)
  {
    sub_219348A70(*a1, v2);
    unint64_t v3 = a1[3];
    if (v3 >> 60 != 15) {
      sub_219348A70(a1[2], v3);
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ASCPublicKeyCredentialAssertionExtensionInputs.PRF(uint64_t a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    long long v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    uint64_t v6 = *a2;
    sub_21934CDF0(*a2, a2[1]);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v4;
    uint64_t v7 = a2 + 2;
    unint64_t v8 = a2[3];
    if (v8 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v7;
    }
    else
    {
      uint64_t v9 = *v7;
      sub_21934CDF0(*v7, a2[3]);
      *(void *)(a1 + 16) = v9;
      *(void *)(a1 + 24) = v8;
    }
  }
  *(void *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ASCPublicKeyCredentialAssertionExtensionInputs.PRF(uint64_t a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (*(void *)(a1 + 8) >> 60 != 15)
  {
    if (v4 >> 60 == 15)
    {
      sub_21934E02C(a1);
      long long v6 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      goto LABEL_17;
    }
    uint64_t v10 = *a2;
    sub_21934CDF0(*a2, a2[1]);
    uint64_t v11 = *(void *)a1;
    unint64_t v12 = *(void *)(a1 + 8);
    *(void *)a1 = v10;
    *(void *)(a1 + 8) = v4;
    sub_219348A70(v11, v12);
    uint64_t v13 = a2 + 2;
    unint64_t v9 = a2[3];
    if (*(void *)(a1 + 24) >> 60 == 15)
    {
      if (v9 >> 60 != 15)
      {
        uint64_t v14 = *v13;
        goto LABEL_12;
      }
    }
    else
    {
      if (v9 >> 60 != 15)
      {
        uint64_t v15 = *v13;
        sub_21934CDF0(*v13, a2[3]);
        uint64_t v16 = *(void *)(a1 + 16);
        unint64_t v17 = *(void *)(a1 + 24);
        *(void *)(a1 + 16) = v15;
        *(void *)(a1 + 24) = v9;
        sub_219348A70(v16, v17);
        goto LABEL_17;
      }
      sub_21934DFD8(a1 + 16);
    }
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v13;
    goto LABEL_17;
  }
  if (v4 >> 60 != 15)
  {
    uint64_t v7 = *a2;
    sub_21934CDF0(*a2, a2[1]);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v4;
    unint64_t v8 = a2 + 2;
    unint64_t v9 = a2[3];
    if (v9 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 16) = *v8;
      goto LABEL_17;
    }
    uint64_t v14 = *(void *)v8;
LABEL_12:
    sub_21934CDF0(v14, v9);
    *(void *)(a1 + 16) = v14;
    *(void *)(a1 + 24) = v9;
    goto LABEL_17;
  }
  long long v5 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
LABEL_17:
  *(void *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ASCPublicKeyCredentialAssertionExtensionInputs.PRF(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  if (v4 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v5 = *(void *)(a2 + 8);
  if (v5 >> 60 == 15)
  {
    sub_21934E02C(a1);
LABEL_4:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_10;
  }
  uint64_t v7 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  sub_219348A70(v7, v4);
  unint64_t v8 = (void *)(a2 + 16);
  unint64_t v9 = *(void *)(a1 + 24);
  if (v9 >> 60 != 15)
  {
    unint64_t v10 = *(void *)(a2 + 24);
    if (v10 >> 60 != 15)
    {
      uint64_t v11 = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = *v8;
      *(void *)(a1 + 24) = v10;
      sub_219348A70(v11, v9);
      goto LABEL_10;
    }
    sub_21934DFD8(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v8;
LABEL_10:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCPublicKeyCredentialAssertionExtensionInputs.PRF(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ASCPublicKeyCredentialAssertionExtensionInputs.PRF(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 32) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialAssertionExtensionInputs.PRF()
{
  return &type metadata for ASCPublicKeyCredentialAssertionExtensionInputs.PRF;
}

uint64_t destroy for ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues(uint64_t *a1)
{
  uint64_t result = sub_219348A70(*a1, a1[1]);
  unint64_t v3 = a1[3];
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = a1[2];
    return sub_219348A70(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_21934CDF0(*a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  long long v6 = a2 + 2;
  unint64_t v7 = a2[3];
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
  }
  else
  {
    uint64_t v8 = *v6;
    sub_21934CDF0(*v6, v7);
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v7;
  }
  return a1;
}

uint64_t *assignWithCopy for ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_21934CDF0(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_219348A70(v6, v7);
  uint64_t v8 = a2 + 2;
  unint64_t v9 = a2[3];
  if ((unint64_t)a1[3] >> 60 != 15)
  {
    if (v9 >> 60 != 15)
    {
      uint64_t v11 = *v8;
      sub_21934CDF0(*v8, v9);
      uint64_t v12 = a1[2];
      unint64_t v13 = a1[3];
      a1[2] = v11;
      a1[3] = v9;
      sub_219348A70(v12, v13);
      return a1;
    }
    sub_21934DFD8((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v9 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v8;
    return a1;
  }
  uint64_t v10 = *v8;
  sub_21934CDF0(*v8, v9);
  a1[2] = v10;
  a1[3] = v9;
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t *assignWithTake for ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_219348A70(v4, v5);
  uint64_t v6 = (uint64_t *)(a2 + 16);
  unint64_t v7 = a1[3];
  if (v7 >> 60 != 15)
  {
    unint64_t v8 = *(void *)(a2 + 24);
    if (v8 >> 60 != 15)
    {
      uint64_t v9 = a1[2];
      a1[2] = *v6;
      a1[3] = v8;
      sub_219348A70(v9, v7);
      return a1;
    }
    sub_21934DFD8((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues()
{
  return &type metadata for ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialAssertionExtensionInputs.CodingKeys()
{
  return &type metadata for ASCPublicKeyCredentialAssertionExtensionInputs.CodingKeys;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialAssertionExtensionInputs.PRF.CodingKeys()
{
  return &type metadata for ASCPublicKeyCredentialAssertionExtensionInputs.PRF.CodingKeys;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues.CodingKeys()
{
  return &type metadata for ASCPublicKeyCredentialAssertionExtensionInputs.PRF.InputValues.CodingKeys;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.CodingKeys()
{
  return &type metadata for ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.CodingKeys;
}

unsigned char *_s26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputsC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21937B028);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.Operation.CodingKeys()
{
  return &type metadata for ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.Operation.CodingKeys;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.Operation.ReadCodingKeys()
{
  return &type metadata for ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.Operation.ReadCodingKeys;
}

unsigned char *_s26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputsC9LargeBlobV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x21937B10CLL);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.Operation.WriteCodingKeys()
{
  return &type metadata for ASCPublicKeyCredentialAssertionExtensionInputs.LargeBlob.Operation.WriteCodingKeys;
}

unint64_t sub_21937B148()
{
  unint64_t result = qword_267C19248;
  if (!qword_267C19248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19248);
  }
  return result;
}

unint64_t sub_21937B1A0()
{
  unint64_t result = qword_267C19250;
  if (!qword_267C19250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19250);
  }
  return result;
}

unint64_t sub_21937B1F8()
{
  unint64_t result = qword_267C19258;
  if (!qword_267C19258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19258);
  }
  return result;
}

unint64_t sub_21937B250()
{
  unint64_t result = qword_267C19260;
  if (!qword_267C19260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19260);
  }
  return result;
}

unint64_t sub_21937B2A8()
{
  unint64_t result = qword_267C19268;
  if (!qword_267C19268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19268);
  }
  return result;
}

unint64_t sub_21937B300()
{
  unint64_t result = qword_267C19270;
  if (!qword_267C19270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19270);
  }
  return result;
}

unint64_t sub_21937B358()
{
  unint64_t result = qword_26AC27558;
  if (!qword_26AC27558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC27558);
  }
  return result;
}

unint64_t sub_21937B3B0()
{
  unint64_t result = qword_26AC27560;
  if (!qword_26AC27560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC27560);
  }
  return result;
}

unint64_t sub_21937B408()
{
  unint64_t result = qword_267C19278;
  if (!qword_267C19278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19278);
  }
  return result;
}

unint64_t sub_21937B460()
{
  unint64_t result = qword_267C19280;
  if (!qword_267C19280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19280);
  }
  return result;
}

unint64_t sub_21937B4B8()
{
  unint64_t result = qword_267C19288;
  if (!qword_267C19288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19288);
  }
  return result;
}

unint64_t sub_21937B510()
{
  unint64_t result = qword_267C19290;
  if (!qword_267C19290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19290);
  }
  return result;
}

unint64_t sub_21937B568()
{
  unint64_t result = qword_267C19298;
  if (!qword_267C19298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19298);
  }
  return result;
}

unint64_t sub_21937B5C0()
{
  unint64_t result = qword_267C192A0;
  if (!qword_267C192A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C192A0);
  }
  return result;
}

unint64_t sub_21937B618()
{
  unint64_t result = qword_267C192A8;
  if (!qword_267C192A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C192A8);
  }
  return result;
}

unint64_t sub_21937B670()
{
  unint64_t result = qword_267C192B0;
  if (!qword_267C192B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C192B0);
  }
  return result;
}

unint64_t sub_21937B6C8()
{
  unint64_t result = qword_267C192B8;
  if (!qword_267C192B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C192B8);
  }
  return result;
}

unint64_t sub_21937B720()
{
  unint64_t result = qword_267C192C0;
  if (!qword_267C192C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C192C0);
  }
  return result;
}

unint64_t sub_21937B778()
{
  unint64_t result = qword_267C192C8;
  if (!qword_267C192C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C192C8);
  }
  return result;
}

unint64_t sub_21937B7D0()
{
  unint64_t result = qword_267C192D0;
  if (!qword_267C192D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C192D0);
  }
  return result;
}

uint64_t sub_21937B824(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684104562 && a2 == 0xE400000000000000;
  if (v2 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574697277 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2193E3140();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_21937B900(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x75706E49746C6173 && a2 == 0xEA00000000003174;
  if (v2 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x75706E49746C6173 && a2 == 0xEA00000000003274)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2193E3140();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_21937B9F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C61567475706E69 && a2 == 0xEB00000000736575;
  if (v2 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002193F0570)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2193E3140();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ASCABLERequestType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21937BBD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCABLERequestType()
{
  return &type metadata for ASCABLERequestType;
}

uint64_t sub_21937BC10(char *a1, char *a2)
{
  return sub_21936172C(*a1, *a2);
}

uint64_t sub_21937BC1C()
{
  return sub_2193E3230();
}

uint64_t sub_21937BC7C()
{
  sub_2193E28D0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21937BCC0()
{
  return sub_2193E3230();
}

uint64_t sub_21937BD1C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_2193E2F70();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_21937BD7C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 24935;
  if (*v1) {
    uint64_t v2 = 25453;
  }
  *a1 = v2;
  a1[1] = 0xE200000000000000;
}

uint64_t sub_21937BD9C()
{
  return sub_2193E29F0();
}

uint64_t sub_21937BDFC()
{
  return sub_2193E29E0();
}

unint64_t sub_21937BE50()
{
  unint64_t result = qword_267C192D8;
  if (!qword_267C192D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C192D8);
  }
  return result;
}

unint64_t sub_21937BEA4()
{
  unint64_t result = qword_26AC27568;
  if (!qword_26AC27568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC27568);
  }
  return result;
}

uint64_t static ASCPublicKeyCredentialRegistrationExtensionOutputs.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t sub_21937BF08(void *a1)
{
  sub_2193E1D60();
  swift_allocObject();
  sub_2193E1D50();
  type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs(0);
  sub_21937C320((unint64_t *)&unk_267C192E0, (void (*)(uint64_t))type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs);
  uint64_t v2 = sub_2193E1D40();
  unint64_t v4 = v3;
  swift_release();
  uint64_t v5 = (void *)sub_2193E2110();
  unsigned int v6 = (void *)sub_2193E2830();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  return sub_219348A70(v2, v4);
}

uint64_t type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs(uint64_t a1)
{
  return sub_21937EAB4(a1, (uint64_t *)&unk_267C19390);
}

id ASCPublicKeyCredentialRegistrationExtensionOutputs.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ASCPublicKeyCredentialRegistrationExtensionOutputs.init(coder:)(a1);
}

id ASCPublicKeyCredentialRegistrationExtensionOutputs.init(coder:)(void *a1)
{
  swift_getObjectType();
  sub_219349168();
  id v3 = v1;
  uint64_t v4 = sub_2193E2B50();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    uint64_t v6 = sub_2193E2130();
    unint64_t v8 = v7;

    sub_2193E1D30();
    swift_allocObject();
    sub_2193E1D20();
    sub_21937C320(&qword_267C192F0, (void (*)(uint64_t))type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs);
    sub_2193E1D10();

    swift_release();
    id v9 = objc_allocWithZone((Class)type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs(0));
    id v10 = sub_21937E8F4((uint64_t)v12);

    sub_219348A70(v6, v8);
    swift_getObjectType();
    swift_deallocPartialClassInstance();
  }
  else
  {

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v10;
}

uint64_t sub_21937C320(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21937C3F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C192F8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = 0x6F69736E65747845;
  unint64_t v17 = 0xEF0A207B203A736ELL;
  id v9 = (unsigned char *)(v0
               + OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_largeBlob);
  swift_beginAccess();
  if (*v9 != 2)
  {
    unint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    sub_2193E2D90();
    swift_bridgeObjectRelease();
    unint64_t v14 = 0xD000000000000017;
    unint64_t v15 = 0x80000002193F1140;
    sub_2193E2920();
    swift_bridgeObjectRelease();
    unint64_t v14 = 9;
    unint64_t v15 = 0xE100000000000000;
    sub_2193E2920();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2193E2920();
    swift_bridgeObjectRelease();
    sub_2193E2920();
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = v1 + OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_prf;
  swift_beginAccess();
  sub_219360574(v10, (uint64_t)v4, &qword_267C192F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_219360620((uint64_t)v4, &qword_267C192F8);
  }
  else
  {
    sub_21937EAEC((uint64_t)v4, (uint64_t)v8);
    unint64_t v12 = 0;
    unint64_t v13 = 0xE000000000000000;
    sub_2193E2D90();
    swift_bridgeObjectRelease();
    unint64_t v12 = 0xD000000000000011;
    unint64_t v13 = 0x80000002193F1120;
    sub_2193E2920();
    swift_bridgeObjectRelease();
    unint64_t v12 = 9;
    unint64_t v13 = 0xE100000000000000;
    sub_2193E2920();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2193E2920();
    swift_bridgeObjectRelease();
    sub_2193E2920();
    swift_bridgeObjectRelease();
    sub_21937EB50((uint64_t)v8);
  }
  unint64_t v12 = v16;
  unint64_t v13 = v17;
  swift_bridgeObjectRetain();
  sub_2193E2920();
  swift_bridgeObjectRelease();
  return v12;
}

unint64_t ASCPublicKeyCredentialRegistrationExtensionOutputs.LargeBlob.description.getter()
{
  return 0xD000000000000017;
}

unint64_t ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF.description.getter()
{
  return 0xD000000000000011;
}

id ASCPublicKeyCredentialRegistrationExtensionOutputs.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id ASCPublicKeyCredentialRegistrationExtensionOutputs.init()()
{
  v0[OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_largeBlob] = 2;
  id v1 = &v0[OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_prf];
  uint64_t v2 = type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs(0);
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t sub_21937CA34@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = (unsigned char *)(v1
               + OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_largeBlob);
  uint64_t result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_21937CA84(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(v1
               + OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_largeBlob);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t (*sub_21937CAD8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_21937CB34(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C192F8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_219360574(a1, (uint64_t)v6, &qword_267C192F8);
  uint64_t v7 = *a2 + OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_prf;
  swift_beginAccess();
  sub_21937EBAC((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t sub_21937CBFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_prf;
  swift_beginAccess();
  return sub_219360574(v3, a1, &qword_267C192F8);
}

uint64_t sub_21937CC58(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_prf;
  swift_beginAccess();
  sub_21937EBAC(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_21937CCB4())()
{
  return j__swift_endAccess;
}

uint64_t sub_21937CD10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19320);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v40 = (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v36 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C192F8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (unsigned __int8 *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v15 = (unsigned __int8 *)(v1
                          + OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_largeBlob);
  swift_beginAccess();
  int v16 = *v15;
  BOOL v17 = v16 == 2;
  uint64_t v18 = v16 & 1;
  if (v17) {
    uint64_t v18 = 3;
  }
  uint64_t v41 = v18;
  if (v17) {
    unint64_t v19 = 0;
  }
  else {
    unint64_t v19 = 0xF000000000000000;
  }
  if (v17) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = 2;
  }
  uint64_t v42 = v20;
  int v21 = !v17;
  uint64_t v22 = v1 + OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_prf;
  swift_beginAccess();
  sub_219360574(v22, (uint64_t)v10, &qword_267C192F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    uint64_t result = sub_219360620((uint64_t)v10, &qword_267C192F8);
    uint64_t v24 = 0;
    unint64_t v25 = 0;
    uint64_t v26 = 0;
    unint64_t v27 = 0;
    uint64_t v28 = 3;
  }
  else
  {
    unint64_t v38 = v19;
    int v39 = v21;
    sub_21937EAEC((uint64_t)v10, (uint64_t)v14);
    uint64_t v37 = *v14;
    sub_219360574((uint64_t)&v14[*(int *)(v11 + 20)], (uint64_t)v7, &qword_267C19320);
    uint64_t v29 = sub_2193E26A0();
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    if (v31(v7, 1, v29) == 1)
    {
      sub_219360620((uint64_t)v7, &qword_267C19320);
      uint64_t v24 = 0;
      unint64_t v25 = 0xF000000000000000;
    }
    else
    {
      sub_2193E2670();
      unint64_t v25 = v44;
      uint64_t v32 = v7;
      uint64_t v24 = v43;
      (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
    }
    uint64_t v33 = (uint64_t)&v14[*(int *)(v11 + 24)];
    uint64_t v34 = v40;
    sub_219360574(v33, v40, &qword_267C19320);
    if (v31((char *)v34, 1, v29) == 1)
    {
      sub_219360620(v34, &qword_267C19320);
      uint64_t v26 = 0;
      unint64_t v27 = 0xF000000000000000;
    }
    else
    {
      sub_2193E2670();
      uint64_t v26 = v43;
      unint64_t v27 = v44;
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v34, v29);
    }
    LOBYTE(v21) = v39;
    unint64_t v19 = v38;
    if (v25 >> 60 == 15)
    {
      sub_21934CEB0(v26, v27);
      uint64_t v24 = 0;
      uint64_t v26 = 0;
      unint64_t v27 = 0;
      unint64_t v25 = 0xF000000000000000;
    }
    uint64_t result = sub_21937EB50((uint64_t)v14);
    uint64_t v28 = v37;
  }
  *(void *)a1 = v41;
  *(void *)(a1 + 8) = 0;
  uint64_t v35 = v42;
  *(void *)(a1 + 16) = v19;
  *(void *)(a1 + 24) = v35;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = v21;
  *(void *)(a1 + 48) = v28;
  *(void *)(a1 + 56) = v24;
  *(void *)(a1 + 64) = v25;
  *(void *)(a1 + 72) = v26;
  *(void *)(a1 + 80) = v27;
  *(unsigned char *)(a1 + 88) = 2;
  return result;
}

uint64_t ASCPublicKeyCredentialRegistrationExtensionOutputs.LargeBlob.isSupported.getter()
{
  return *v0;
}

AuthenticationServicesCore::ASCPublicKeyCredentialRegistrationExtensionOutputs::LargeBlob __swiftcall ASCPublicKeyCredentialRegistrationExtensionOutputs.LargeBlob.init(isSupported:)(AuthenticationServicesCore::ASCPublicKeyCredentialRegistrationExtensionOutputs::LargeBlob isSupported)
{
  v1->isSupported = isSupported.isSupported;
  return isSupported;
}

uint64_t sub_21937D180()
{
  return 0x726F707075537369;
}

uint64_t sub_21937D1A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x726F707075537369 && a2 == 0xEB00000000646574)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2193E3140();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_21937D250(uint64_t a1)
{
  unint64_t v2 = sub_21937EC14();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21937D28C(uint64_t a1)
{
  unint64_t v2 = sub_21937EC14();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASCPublicKeyCredentialRegistrationExtensionOutputs.LargeBlob.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19308);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_21937EC14();
  sub_2193E3260();
  sub_2193E30C0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t ASCPublicKeyCredentialRegistrationExtensionOutputs.LargeBlob.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19318);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_21937EC14();
  sub_2193E3240();
  if (!v2)
  {
    char v9 = sub_2193E3000();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_21937D550@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ASCPublicKeyCredentialRegistrationExtensionOutputs.LargeBlob.init(from:)(a1, a2);
}

uint64_t sub_21937D568(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19308);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_21937EC14();
  sub_2193E3260();
  sub_2193E30C0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_21937D6A0()
{
  uint64_t v1 = 0x31746572636573;
  if (*v0 != 1) {
    uint64_t v1 = 0x32746572636573;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x726F707075537369;
  }
}

uint64_t sub_21937D704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2193807F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21937D72C(uint64_t a1)
{
  unint64_t v2 = sub_21937ECD0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21937D768(uint64_t a1)
{
  unint64_t v2 = sub_21937ECD0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF.isSupported.getter()
{
  return *v0;
}

uint64_t ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF.secret1.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(0);
  return sub_219360574(v1 + *(int *)(v3 + 20), a1, &qword_267C19320);
}

uint64_t ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF.secret2.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(0);
  return sub_219360574(v1 + *(int *)(v3 + 24), a1, &qword_267C19320);
}

uint64_t ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF.init(isSupported:secret1:secret2:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  *a4 = a1;
  uint64_t v7 = type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(0);
  sub_21937EC68(a2, (uint64_t)&a4[*(int *)(v7 + 20)]);
  uint64_t v8 = (uint64_t)&a4[*(int *)(v7 + 24)];

  return sub_21937EC68(a3, v8);
}

uint64_t ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19320);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v30 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19328);
  uint64_t v36 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_21937ECD0();
  sub_2193E3240();
  if (v2)
  {
    uint64_t v16 = (uint64_t)a1;
  }
  else
  {
    uint64_t v35 = v9;
    uint64_t v13 = v7;
    uint64_t v15 = v36;
    unint64_t v14 = v37;
    LOBYTE(v38) = 0;
    int v40 = sub_2193E3000();
    char v41 = 1;
    sub_21934D774();
    sub_2193E2FE0();
    unint64_t v33 = v39;
    uint64_t v34 = v38;
    char v41 = 2;
    sub_2193E2FE0();
    unint64_t v18 = v39;
    uint64_t v31 = a1;
    uint64_t v32 = v38;
    unint64_t v19 = v14;
    uint64_t v20 = (uint64_t)v35;
    uint64_t v21 = v15;
    unint64_t v22 = v33;
    if (v33 >> 60 == 15)
    {
      uint64_t v23 = sub_2193E26A0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v20, 1, 1, v23);
    }
    else
    {
      uint64_t v38 = v34;
      unint64_t v39 = v33;
      sub_21934CDF0(v34, v33);
      sub_2193E2680();
      uint64_t v24 = sub_2193E26A0();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v20, 0, 1, v24);
    }
    if (v18 >> 60 == 15)
    {
      uint64_t v25 = sub_2193E26A0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v13, 1, 1, v25);
      uint64_t v26 = (uint64_t)v13;
      uint64_t v27 = v32;
    }
    else
    {
      uint64_t v26 = (uint64_t)v13;
      uint64_t v27 = v32;
      uint64_t v38 = v32;
      unint64_t v39 = v18;
      sub_21934CDF0(v32, v18);
      sub_2193E2680();
      uint64_t v28 = sub_2193E26A0();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v26, 0, 1, v28);
    }
    sub_21934CEB0(v34, v22);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v10);
    sub_21934CEB0(v27, v18);
    unsigned char *v19 = v40 & 1;
    uint64_t v29 = type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(0);
    sub_21937EC68((uint64_t)v35, (uint64_t)&v19[*(int *)(v29 + 20)]);
    sub_21937EC68(v26, (uint64_t)&v19[*(int *)(v29 + 24)]);
    uint64_t v16 = (uint64_t)v31;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm(v16);
}

uint64_t ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19320);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v28 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C19340);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_21937ECD0();
  sub_2193E3260();
  LOBYTE(v36) = 0;
  uint64_t v14 = v35;
  sub_2193E30C0();
  if (!v14)
  {
    uint64_t v34 = v7;
    uint64_t v35 = v11;
    uint64_t v15 = type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(0);
    uint64_t v16 = *(int *)(v15 + 20);
    uint64_t v33 = v2;
    sub_219360574(v2 + v16, (uint64_t)v9, &qword_267C19320);
    uint64_t v17 = sub_2193E26A0();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
    uint64_t v31 = v18 + 48;
    int v19 = v30(v9, 1, v17);
    uint64_t v32 = v17;
    uint64_t v29 = v18;
    if (v19 == 1)
    {
      sub_219360620((uint64_t)v9, &qword_267C19320);
      uint64_t v20 = 0;
      unint64_t v21 = 0xF000000000000000;
    }
    else
    {
      uint64_t v28 = v15;
      sub_2193E2670();
      uint64_t v20 = v36;
      unint64_t v21 = v37;
      uint64_t v15 = v28;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v17);
    }
    uint64_t v36 = v20;
    unint64_t v37 = v21;
    char v38 = 1;
    sub_21934D644();
    sub_2193E30A0();
    sub_21934CEB0(v20, v21);
    uint64_t v22 = (uint64_t)v34;
    sub_219360574(v33 + *(int *)(v15 + 24), (uint64_t)v34, &qword_267C19320);
    uint64_t v23 = v32;
    int v24 = v30((char *)v22, 1, v32);
    uint64_t v11 = v35;
    if (v24 == 1)
    {
      sub_219360620(v22, &qword_267C19320);
      uint64_t v25 = 0;
      unint64_t v26 = 0xF000000000000000;
    }
    else
    {
      sub_2193E2670();
      uint64_t v25 = v36;
      unint64_t v26 = v37;
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v22, v23);
    }
    uint64_t v36 = v25;
    unint64_t v37 = v26;
    char v38 = 2;
    sub_2193E30A0();
    sub_21934CEB0(v25, v26);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_21937E11C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF.init(from:)(a1, a2);
}

uint64_t sub_21937E134(void *a1)
{
  return ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF.encode(to:)(a1);
}

uint64_t sub_21937E150(uint64_t a1)
{
  unint64_t v2 = sub_21937ED24();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21937E18C(uint64_t a1)
{
  unint64_t v2 = sub_21937ED24();

  return MEMORY[0x270FA00B8](a1, v2);
}

id ASCPublicKeyCredentialRegistrationExtensionOutputs.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_21937E22C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C192F8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19350);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_21937ED24();
  sub_2193E3260();
  uint64_t v12 = (unsigned char *)(v3
                + OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_largeBlob);
  swift_beginAccess();
  v15[0] = *v12;
  char v16 = 0;
  sub_21937ED78();
  sub_2193E30A0();
  if (!v2)
  {
    uint64_t v13 = v3 + OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_prf;
    swift_beginAccess();
    sub_219360574(v13, (uint64_t)v7, &qword_267C192F8);
    char v16 = 1;
    type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(0);
    sub_21937C320(&qword_267C19368, (void (*)(uint64_t))type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF);
    sub_2193E30A0();
    sub_219360620((uint64_t)v7, &qword_267C192F8);
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
}

id ASCPublicKeyCredentialRegistrationExtensionOutputs.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ASCPublicKeyCredentialRegistrationExtensionOutputs.init(from:)(a1);
}

id ASCPublicKeyCredentialRegistrationExtensionOutputs.init(from:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C192F8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19370);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = &v1[OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_largeBlob];
  v1[OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_largeBlob] = 2;
  uint64_t v11 = &v1[OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_prf];
  uint64_t v12 = type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(0);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  uint64_t v28 = v11;
  v13(v11, 1, 1, v12);
  uint64_t v14 = a1[3];
  uint64_t v27 = a1;
  __swift_project_boxed_opaque_existential_1Tm(a1, v14);
  sub_21937ED24();
  id v15 = v2;
  unint64_t v26 = v9;
  uint64_t v16 = v32;
  sub_2193E3240();
  if (v16)
  {
    id v22 = v28;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
    sub_219360620((uint64_t)v22, &qword_267C192F8);

    type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v31 = 0;
    sub_21937EDCC();
    uint64_t v17 = v25;
    sub_2193E2FE0();
    char v18 = v30;
    swift_beginAccess();
    char *v10 = v18;
    char v30 = 1;
    sub_21937C320((unint64_t *)&unk_267C19380, (void (*)(uint64_t))type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF);
    sub_2193E2FE0();
    uint64_t v20 = (uint64_t)v28;
    swift_beginAccess();
    sub_21937EBAC((uint64_t)v6, v20);
    swift_endAccess();

    unint64_t v21 = (objc_class *)type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs(0);
    v29.receiver = v15;
    v29.super_class = v21;
    id v22 = objc_msgSendSuper2(&v29, sel_init);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v17);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
  }
  return v22;
}

id sub_21937E878@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs(0));
  id result = ASCPublicKeyCredentialRegistrationExtensionOutputs.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_21937E8D0(void *a1)
{
  return sub_21937E22C(a1);
}

id sub_21937E8F4(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C192F8);
  MEMORY[0x270FA5388](v3 - 8);
  id v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = &v1[OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_largeBlob];
  v1[OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_largeBlob] = 2;
  uint64_t v7 = (uint64_t)&v1[OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_prf];
  uint64_t v8 = type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = (unsigned char *)(a1
               + OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_largeBlob);
  swift_beginAccess();
  LOBYTE(v9) = *v9;
  swift_beginAccess();
  unsigned char *v6 = (_BYTE)v9;
  uint64_t v10 = a1 + OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_prf;
  swift_beginAccess();
  sub_219360574(v10, (uint64_t)v5, &qword_267C192F8);
  swift_beginAccess();
  uint64_t v11 = v1;
  sub_21937EBAC((uint64_t)v5, v7);
  swift_endAccess();

  uint64_t v12 = (objc_class *)type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs(0);
  v14.receiver = v11;
  v14.super_class = v12;
  return objc_msgSendSuper2(&v14, sel_init);
}

uint64_t type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(uint64_t a1)
{
  return sub_21937EAB4(a1, (uint64_t *)&unk_267C193B0);
}

uint64_t sub_21937EAB4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21937EAEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21937EB50(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21937EBAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C192F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_21937EC14()
{
  unint64_t result = qword_267C19310;
  if (!qword_267C19310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19310);
  }
  return result;
}

uint64_t sub_21937EC68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_21937ECD0()
{
  unint64_t result = qword_267C19330;
  if (!qword_267C19330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19330);
  }
  return result;
}

unint64_t sub_21937ED24()
{
  unint64_t result = qword_267C19358;
  if (!qword_267C19358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19358);
  }
  return result;
}

unint64_t sub_21937ED78()
{
  unint64_t result = qword_267C19360;
  if (!qword_267C19360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19360);
  }
  return result;
}

unint64_t sub_21937EDCC()
{
  unint64_t result = qword_267C19378;
  if (!qword_267C19378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19378);
  }
  return result;
}

uint64_t sub_21937EE20@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1
               + OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_largeBlob);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_21937EE74(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2
               + OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_largeBlob);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t sub_21937EEC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_prf;
  swift_beginAccess();
  return sub_219360574(v3, a2, &qword_267C192F8);
}

uint64_t sub_21937EF28()
{
  return type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs(0);
}

void sub_21937EF30()
{
  sub_2193801B0(319, (unint64_t *)&unk_267C193A0, (void (*)(uint64_t))type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ASCPublicKeyCredentialRegistrationExtensionOutputs(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ASCPublicKeyCredentialRegistrationExtensionOutputs);
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionOutputs.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionOutputs.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionOutputs.largeBlob.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionOutputs.largeBlob.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionOutputs.largeBlob.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionOutputs.prf.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionOutputs.prf.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionOutputs.prf.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionOutputs.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ASCPublicKeyCredentialRegistrationExtensionOutputs.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t getEnumTagSinglePayload for ASCPublicKeyCredentialRegistrationExtensionOutputs.LargeBlob(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ASCPublicKeyCredentialRegistrationExtensionOutputs.LargeBlob(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21937F35CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.LargeBlob()
{
  return &type metadata for ASCPublicKeyCredentialRegistrationExtensionOutputs.LargeBlob;
}

uint64_t *initializeBufferWithCopyOfBuffer for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    uint64_t *v4 = *a2;
    unsigned int v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = *(int *)(a3 + 20);
    int v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_2193E26A0();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19320);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v15 = *(int *)(a3 + 24);
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (char *)a2 + v15;
    if (v12(v17, 1, v10))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19320);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v17, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
    }
  }
  return v4;
}

uint64_t destroy for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_2193E26A0();
  uint64_t v10 = *(void *)(v5 - 8);
  unsigned int v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

unsigned char *initializeWithCopy for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  int v8 = &a2[v6];
  uint64_t v9 = sub_2193E26A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19320);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  if (v11(v15, 1, v9))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19320);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v14, v15, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

unsigned char *assignWithCopy for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  int v8 = &a2[v6];
  uint64_t v9 = sub_2193E26A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19320);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19320);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

unsigned char *initializeWithTake for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  int v8 = &a2[v6];
  uint64_t v9 = sub_2193E26A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19320);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  if (v11(v15, 1, v9))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19320);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

unsigned char *assignWithTake for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  int v8 = &a2[v6];
  uint64_t v9 = sub_2193E26A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19320);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19320);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v16, v17, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21937FF8C);
}

uint64_t sub_21937FF8C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19320);
    uint64_t v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    int v13 = &a1[*(int *)(a3 + 20)];
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_219380054);
}

unsigned char *sub_219380054(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19320);
    int v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_2193800FC()
{
  sub_2193801B0(319, &qword_267C193C0, MEMORY[0x263F04620]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_2193801B0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2193E2BB0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ASCPublicKeyCredentialRegistrationExtensionOutputs.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2193802D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.CodingKeys()
{
  return &type metadata for ASCPublicKeyCredentialRegistrationExtensionOutputs.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2193803D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF.CodingKeys()
{
  return &type metadata for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ASCPublicKeyCredentialRegistrationExtensionOutputs.LargeBlob.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2193804A8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.LargeBlob.CodingKeys()
{
  return &type metadata for ASCPublicKeyCredentialRegistrationExtensionOutputs.LargeBlob.CodingKeys;
}

unint64_t sub_2193804E4()
{
  unint64_t result = qword_267C193C8;
  if (!qword_267C193C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C193C8);
  }
  return result;
}

unint64_t sub_21938053C()
{
  unint64_t result = qword_267C193D0;
  if (!qword_267C193D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C193D0);
  }
  return result;
}

unint64_t sub_219380594()
{
  unint64_t result = qword_267C193D8;
  if (!qword_267C193D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C193D8);
  }
  return result;
}

unint64_t sub_2193805EC()
{
  unint64_t result = qword_267C193E0;
  if (!qword_267C193E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C193E0);
  }
  return result;
}

unint64_t sub_219380644()
{
  unint64_t result = qword_267C193E8;
  if (!qword_267C193E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C193E8);
  }
  return result;
}

unint64_t sub_21938069C()
{
  unint64_t result = qword_267C193F0;
  if (!qword_267C193F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C193F0);
  }
  return result;
}

unint64_t sub_2193806F4()
{
  unint64_t result = qword_267C193F8;
  if (!qword_267C193F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C193F8);
  }
  return result;
}

unint64_t sub_21938074C()
{
  unint64_t result = qword_267C19400;
  if (!qword_267C19400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19400);
  }
  return result;
}

unint64_t sub_2193807A4()
{
  unint64_t result = qword_267C19408;
  if (!qword_267C19408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_267C19408);
  }
  return result;
}

uint64_t sub_2193807F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F707075537369 && a2 == 0xEB00000000646574;
  if (v2 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x31746572636573 && a2 == 0xE700000000000000 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x32746572636573 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2193E3140();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_219380968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v28 = a6;
  uint64_t v29 = a7;
  uint64_t v26 = a1;
  uint64_t v27 = a4;
  uint64_t v12 = sub_2193E1FF0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27638);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_2193E2A60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v12);
  unint64_t v19 = (*(unsigned __int8 *)(v13 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v20 = (char *)swift_allocObject();
  *((void *)v20 + 2) = 0;
  *((void *)v20 + 3) = 0;
  uint64_t v21 = v26;
  *((void *)v20 + 4) = v8;
  *((void *)v20 + 5) = v21;
  uint64_t v22 = v27;
  *((void *)v20 + 6) = a2;
  *((void *)v20 + 7) = v22;
  *((void *)v20 + 8) = a5;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v20[v19], (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  uint64_t v23 = &v20[(v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v24 = v29;
  *(void *)uint64_t v23 = v28;
  *((void *)v23 + 1) = v24;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_219380F74((uint64_t)v17, (uint64_t)&unk_267C19418, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_219380B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 72) = v12;
  *(_OWORD *)(v8 + 56) = v11;
  *(void *)(v8 + 40) = a7;
  *(void *)(v8 + 48) = a8;
  *(void *)(v8 + 24) = a5;
  *(void *)(v8 + 32) = a6;
  *(void *)(v8 + 16) = a4;
  *(void *)(v8 + 80) = type metadata accessor for ASPasswordSignInEventCollector.SignInEvent();
  *(void *)(v8 + 88) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_219380C48, 0, 0);
}

uint64_t sub_219380C48()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = (void *)v0[11];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[3];
  uint64_t v12 = v0[5];
  uint64_t v13 = v0[2];
  swift_bridgeObjectRetain();
  sub_2193E21B0();
  uint64_t v7 = (char *)v1 + *(int *)(v2 + 28);
  uint64_t v8 = sub_2193E1FF0();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, v4, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  *uint64_t v1 = v6;
  v1[1] = v5;
  uint64_t v10 = (void *)((char *)v1 + *(int *)(v2 + 24));
  void *v10 = v12;
  v10[1] = v3;
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_219380D94, v13, 0);
}

uint64_t sub_219380D94()
{
  uint64_t v1 = v0[11];
  sub_219381C14(v1, v0[8], v0[9]);
  sub_219384624(v1);
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_219380E14(uint64_t a1)
{
  sub_2193E1FF0();
  uint64_t v3 = v1[3];
  uint64_t v11 = v1[2];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v8 = v1[8];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_219387958;
  return sub_219380B98(a1, v11, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_219380F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2A60();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_2193E2A50();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_219360620(a1, &qword_26AC27638);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2193E2A40();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_2193813F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v25 = a7;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27638);
  MEMORY[0x270FA5388](v17 - 8);
  unint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_2193E2A60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  uint64_t v21 = (void *)swift_allocObject();
  void v21[2] = 0;
  v21[3] = 0;
  _OWORD v21[4] = a3;
  v21[5] = a4;
  v21[6] = v9;
  v21[7] = a1;
  v21[8] = a2;
  v21[9] = a5;
  uint64_t v22 = v25;
  v21[10] = a6;
  v21[11] = v22;
  v21[12] = a8;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_219380F74((uint64_t)v19, (uint64_t)&unk_267C19428, (uint64_t)v21);
  return swift_release();
}

uint64_t sub_219381568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 72) = v13;
  *(void *)(v8 + 80) = v14;
  *(_OWORD *)(v8 + 56) = v12;
  *(void *)(v8 + 40) = a7;
  *(void *)(v8 + 48) = a8;
  *(void *)(v8 + 24) = a5;
  *(void *)(v8 + 32) = a6;
  *(void *)(v8 + 16) = a4;
  *(void *)(v8 + 88) = type metadata accessor for ASPasswordSignInEventCollector.SignInEvent();
  *(void *)(v8 + 96) = swift_task_alloc();
  uint64_t v9 = sub_2193E1DC0();
  *(void *)(v8 + 104) = v9;
  *(void *)(v8 + 112) = *(void *)(v9 - 8);
  *(void *)(v8 + 120) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27160);
  *(void *)(v8 + 128) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2193816A4, 0, 0);
}

uint64_t sub_2193816A4()
{
  uint64_t v1 = v0[3];
  if (v1)
  {
    uint64_t v2 = v0[15];
    uint64_t v3 = v0[13];
    uint64_t v4 = v0[14];
    uint64_t v5 = v0[2];
    sub_2193E1DB0();
    sub_2193E1DA0();
    swift_bridgeObjectRetain();
    MEMORY[0x21D4883C0](v5, v1);
    sub_2193E1D70();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }
  else
  {
    uint64_t v6 = v0[16];
    uint64_t v7 = sub_2193E1FF0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  }
  uint64_t v8 = v0[16];
  uint64_t v10 = v0[11];
  uint64_t v9 = (void *)v0[12];
  uint64_t v12 = v0[7];
  uint64_t v11 = v0[8];
  uint64_t v14 = v0[5];
  uint64_t v13 = v0[6];
  uint64_t v15 = v0[4];
  swift_bridgeObjectRetain();
  sub_2193E21B0();
  sub_2193845BC(v8, (uint64_t)v9 + *(int *)(v10 + 28));
  *uint64_t v9 = v14;
  v9[1] = v13;
  uint64_t v16 = (void *)((char *)v9 + *(int *)(v10 + 24));
  void *v16 = v12;
  v16[1] = v11;
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_219381828, v15, 0);
}

uint64_t sub_219381828()
{
  uint64_t v1 = v0[12];
  sub_219381C14(v1, v0[9], v0[10]);
  sub_219384624(v1);
  return MEMORY[0x270FA2498](sub_2193818A4, 0, 0);
}

uint64_t sub_2193818A4()
{
  sub_219360620(*(void *)(v0 + 128), &qword_26AC27160);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_219381938(uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v12 = v1[2];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_219387958;
  return sub_219381568(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_219381C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for ASPasswordSignInEventCollector.SignInEvent();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v3 + 112);
  uint64_t v13 = *(void *)(v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13
    && (uint64_t v14 = sub_219385910(a2, a3, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_219385AEC), (v15 & 1) != 0))
  {
    uint64_t v16 = *(void *)(*(void *)(v12 + 56) + 8 * v14);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_219384558(a1, (uint64_t)v11);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v16 = sub_219386AC0(0, *(void *)(v16 + 16) + 1, 1, v16);
  }
  unint64_t v18 = *(void *)(v16 + 16);
  unint64_t v17 = *(void *)(v16 + 24);
  if (v18 >= v17 >> 1) {
    uint64_t v16 = sub_219386AC0(v17 > 1, v18 + 1, 1, v16);
  }
  *(void *)(v16 + 16) = v18 + 1;
  sub_219384680((uint64_t)v11, v16+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v18);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = *(void *)(v4 + 112);
  *(void *)(v4 + 112) = 0x8000000000000000;
  sub_2193A01F0(v16, a2, a3, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + 112) = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return sub_219381E70();
}

uint64_t sub_219381E70()
{
  uint64_t v1 = sub_2193E21C0();
  uint64_t v23 = *(void *)(v1 - 8);
  uint64_t v24 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v27 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2193E21B0();
  uint64_t v3 = (uint64_t *)(v0 + 112);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v25 = v4 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v26 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (v8) {
    goto LABEL_6;
  }
LABEL_7:
  if (!__OFADD__(v10++, 1))
  {
    if (v10 >= v26) {
      goto LABEL_25;
    }
    unint64_t v14 = *(void *)(v25 + 8 * v10);
    if (v14)
    {
LABEL_17:
      unint64_t v8 = (v14 - 1) & v14;
      for (unint64_t i = __clz(__rbit64(v14)) + (v10 << 6); ; unint64_t i = v11 | (v10 << 6))
      {
        uint64_t v16 = (uint64_t *)(*(void *)(v4 + 48) + 16 * i);
        uint64_t v18 = *v16;
        uint64_t v17 = v16[1];
        uint64_t v19 = *(void *)(*(void *)(v4 + 56) + 8 * i);
        MEMORY[0x270FA5388](result);
        *(&v22 - 2) = (uint64_t)v27;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_219382258((uint64_t (*)(char *))sub_219387844, (uint64_t)(&v22 - 4), v19);
        if (*(void *)(v20 + 16))
        {
          swift_beginAccess();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v28 = *v3;
          *uint64_t v3 = 0x8000000000000000;
          sub_2193A01F0(v20, v18, v17, isUniquelyReferenced_nonNull_native);
          *uint64_t v3 = v28;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = swift_endAccess();
          if (!v8) {
            goto LABEL_7;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_beginAccess();
          sub_2193B429C(v18, v17);
          swift_endAccess();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (!v8) {
            goto LABEL_7;
          }
        }
LABEL_6:
        unint64_t v11 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
      }
    }
    int64_t v15 = v10 + 1;
    if (v10 + 1 >= v26) {
      goto LABEL_25;
    }
    unint64_t v14 = *(void *)(v25 + 8 * v15);
    if (!v14)
    {
      int64_t v15 = v10 + 2;
      if (v10 + 2 >= v26) {
        goto LABEL_25;
      }
      unint64_t v14 = *(void *)(v25 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v10 + 3;
        if (v10 + 3 < v26)
        {
          unint64_t v14 = *(void *)(v25 + 8 * v15);
          if (v14) {
            goto LABEL_16;
          }
          while (1)
          {
            int64_t v10 = v15 + 1;
            if (__OFADD__(v15, 1)) {
              goto LABEL_27;
            }
            if (v10 >= v26) {
              break;
            }
            unint64_t v14 = *(void *)(v25 + 8 * v10);
            ++v15;
            if (v14) {
              goto LABEL_17;
            }
          }
        }
LABEL_25:
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v27, v24);
      }
    }
LABEL_16:
    int64_t v10 = v15;
    goto LABEL_17;
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2193821C4()
{
  type metadata accessor for ASPasswordSignInEventCollector.SignInEvent();
  uint64_t result = sub_2193E2190();
  if ((~*(void *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 9.22337204e18) {
    return (uint64_t)v1 < 300;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_219382258(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for ASPasswordSignInEventCollector.SignInEvent();
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v25 = MEMORY[0x263F8EE78];
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v14 = 0;
    uint64_t v15 = MEMORY[0x263F8EE78];
    v20[1] = a2;
    uint64_t v21 = a3;
    v20[0] = a1;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v13 = *(void *)(v24 + 72);
      sub_219384558(a3 + v16 + v13 * v14, (uint64_t)v12);
      char v17 = a1(v12);
      if (v3)
      {
        sub_219384624((uint64_t)v12);
        swift_bridgeObjectRelease();
        swift_release();
        return v13;
      }
      if (v17)
      {
        sub_219384680((uint64_t)v12, v23);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_21935A558(0, *(void *)(v15 + 16) + 1, 1);
        }
        uint64_t v15 = v25;
        unint64_t v19 = *(void *)(v25 + 16);
        unint64_t v18 = *(void *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_21935A558(v18 > 1, v19 + 1, 1);
          uint64_t v15 = v25;
        }
        *(void *)(v15 + 16) = v19 + 1;
        uint64_t result = sub_219384680(v23, v15 + v16 + v19 * v13);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = sub_219384624((uint64_t)v12);
      }
      if (v22 == ++v14)
      {
        uint64_t v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_21938248C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[10] = a6;
  v7[11] = v6;
  v7[8] = a4;
  v7[9] = a5;
  v7[6] = a2;
  v7[7] = a3;
  _OWORD v7[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27160);
  v7[12] = swift_task_alloc();
  uint64_t v8 = sub_2193E1FF0();
  v7[13] = v8;
  v7[14] = *(void *)(v8 - 8);
  v7[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C19438);
  v7[16] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for ASPasswordSignInEventCollector.SignInEvent();
  v7[17] = v9;
  v7[18] = *(void *)(v9 - 8);
  v7[19] = swift_task_alloc();
  v7[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_219382624, v6, 0);
}

uint64_t sub_219382624()
{
  unint64_t v1 = 0xD000000000000013;
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  sub_219381E70();
  unint64_t v4 = 0x80000002193F11F0;
  BOOL v5 = v3 == 0x6F632E656C707061 && v2 == 0xE90000000000006DLL;
  if (v5 || (sub_2193E3140() & 1) != 0)
  {
LABEL_23:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v36 = *(uint64_t (**)(unint64_t, unint64_t))(v0 + 8);
    return v36(v1, v4);
  }
  uint64_t v6 = *(void *)(v0 + 88) + 112;
  swift_beginAccess();
  uint64_t v7 = *(void *)v6;
  if (!*(void *)(*(void *)v6 + 16)) {
    goto LABEL_11;
  }
  uint64_t v9 = *(void *)(v0 + 72);
  uint64_t v8 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_219385910(v9, v8, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_219385AEC);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_11:
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 144) + 56))(*(void *)(v0 + 128), 1, 1, *(void *)(v0 + 136));
    goto LABEL_12;
  }
  uint64_t v12 = *(void *)(v0 + 144);
  uint64_t v13 = *(void *)(v0 + 128);
  uint64_t v14 = *(void *)(v0 + 64);
  uint64_t v44 = *(void *)(v0 + 56);
  uint64_t v45 = *(void *)(v0 + 136);
  uint64_t v16 = *(void *)(v0 + 40);
  uint64_t v15 = *(void *)(v0 + 48);
  uint64_t v17 = *(void *)(*(void *)(v7 + 56) + 8 * v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_219383158(v17, v44, v14, v16, v15, v13);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v45) != 1)
  {
    uint64_t v18 = *(void *)(v0 + 160);
    uint64_t v19 = *(void *)(v0 + 136);
    sub_219384680(*(void *)(v0 + 128), v18);
    uint64_t v20 = (unint64_t *)(v18 + *(int *)(v19 + 24));
    unint64_t v1 = *v20;
    unint64_t v4 = v20[1];
    swift_bridgeObjectRetain();
    sub_219384624(v18);
    goto LABEL_23;
  }
LABEL_12:
  sub_219360620(*(void *)(v0 + 128), &qword_267C19438);
  uint64_t v21 = *(void *)v6;
  if (!*(void *)(*(void *)v6 + 16))
  {
LABEL_22:
    unint64_t v1 = 0;
    unint64_t v4 = 0;
    goto LABEL_23;
  }
  uint64_t v23 = *(void *)(v0 + 72);
  uint64_t v22 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_219385910(v23, v22, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_219385AEC);
  if ((v25 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v26 = *(void *)(*(void *)(v21 + 56) + 8 * v24);
  *(void *)(v0 + 168) = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v27 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ASCRelatedOriginFetcher()), sel_init);
  *(void *)(v0 + 176) = v27;
  uint64_t v28 = *(void *)(v26 + 16);
  if (!v28)
  {
LABEL_30:

    goto LABEL_21;
  }
  *(_DWORD *)(v0 + 216) = *(_DWORD *)(*(void *)(v0 + 144) + 80);
  while (1)
  {
    *(void *)(v0 + 184) = v28;
    uint64_t v29 = *(void *)(v0 + 168);
    if (v28 > *(void *)(v29 + 16))
    {
      __break(1u);
      goto LABEL_30;
    }
    uint64_t v30 = *(void *)(v0 + 152);
    uint64_t v31 = *(void *)(v0 + 136);
    uint64_t v32 = *(void *)(v0 + 104);
    uint64_t v33 = *(void *)(v0 + 112);
    uint64_t v34 = *(void *)(v0 + 96);
    sub_219384558(v29+ ((*(unsigned __int8 *)(v0 + 216) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 216))+ *(void *)(*(void *)(v0 + 144) + 72) * (v28 - 1), v30);
    sub_2193845BC(v30 + *(int *)(v31 + 28), v34);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v34, 1, v32) != 1) {
      break;
    }
    uint64_t v35 = *(void *)(v0 + 96);
    sub_219384624(*(void *)(v0 + 152));
    id v27 = (id)sub_219360620(v35, &qword_26AC27160);
    uint64_t v28 = *(void *)(v0 + 184) - 1;
    if (*(void *)(v0 + 184) == 1)
    {

      goto LABEL_21;
    }
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 112) + 32))(*(void *)(v0 + 120), *(void *)(v0 + 96), *(void *)(v0 + 104));
  uint64_t v38 = sub_2193E1F70();
  uint64_t v40 = v39;
  *(void *)(v0 + 192) = v39;
  char v41 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v41;
  *char v41 = v0;
  v41[1] = sub_219382AF8;
  uint64_t v42 = *(void *)(v0 + 56);
  uint64_t v43 = *(void *)(v0 + 64);
  return sub_2193D3EB8(v38, v40, v42, v43);
}

uint64_t sub_219382AF8(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 208) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v4 + 88);
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v6 = sub_219382ECC;
  }
  else
  {
    *(unsigned char *)(v4 + 220) = a1 & 1;
    uint64_t v6 = sub_219382C54;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_219382C54()
{
  char v1 = *(unsigned char *)(v0 + 220);
  (*(void (**)(void, void))(*(void *)(v0 + 112) + 8))(*(void *)(v0 + 120), *(void *)(v0 + 104));
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 152);
    uint64_t v3 = *(void *)(v0 + 136);

    swift_bridgeObjectRelease();
    uint64_t v4 = (uint64_t *)(v2 + *(int *)(v3 + 24));
    uint64_t v6 = *v4;
    uint64_t v5 = v4[1];
    swift_bridgeObjectRetain();
    sub_219384624(v2);
LABEL_3:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v7(v6, v5);
  }
  uint64_t result = sub_219384624(*(void *)(v0 + 152));
  uint64_t v9 = *(void *)(v0 + 184);
  uint64_t v10 = v9 - 1;
  if (v9 == 1)
  {
LABEL_10:

    swift_bridgeObjectRelease();
    uint64_t v6 = 0;
    uint64_t v5 = 0;
    goto LABEL_3;
  }
  while (1)
  {
    *(void *)(v0 + 184) = v10;
    uint64_t v11 = *(void *)(v0 + 168);
    if (v10 > *(void *)(v11 + 16))
    {
      __break(1u);
      return result;
    }
    uint64_t v12 = *(void *)(v0 + 152);
    uint64_t v13 = *(void *)(v0 + 136);
    uint64_t v14 = *(void *)(v0 + 104);
    uint64_t v15 = *(void *)(v0 + 112);
    uint64_t v16 = *(void *)(v0 + 96);
    sub_219384558(v11+ ((*(unsigned __int8 *)(v0 + 216) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 216))+ *(void *)(*(void *)(v0 + 144) + 72) * (v9 - 2), v12);
    sub_2193845BC(v12 + *(int *)(v13 + 28), v16);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v16, 1, v14) != 1) {
      break;
    }
    uint64_t v17 = *(void *)(v0 + 96);
    sub_219384624(*(void *)(v0 + 152));
    uint64_t result = sub_219360620(v17, &qword_26AC27160);
    uint64_t v9 = *(void *)(v0 + 184);
    uint64_t v10 = v9 - 1;
    if (v9 == 1) {
      goto LABEL_10;
    }
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 112) + 32))(*(void *)(v0 + 120), *(void *)(v0 + 96), *(void *)(v0 + 104));
  uint64_t v18 = sub_2193E1F70();
  uint64_t v20 = v19;
  *(void *)(v0 + 192) = v19;
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_219382AF8;
  uint64_t v22 = *(void *)(v0 + 56);
  uint64_t v23 = *(void *)(v0 + 64);
  return sub_2193D3EB8(v18, v20, v22, v23);
}

void sub_219382ECC()
{
  char v1 = *(void **)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 152);
  (*(void (**)(void, void))(*(void *)(v0 + 112) + 8))(*(void *)(v0 + 120), *(void *)(v0 + 104));
  sub_219384624(v2);

  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = v3 - 1;
  if (v3 == 1)
  {
LABEL_5:

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(void (**)(void, void))(v0 + 8);
    v12(0, 0);
  }
  else
  {
    while (1)
    {
      *(void *)(v0 + 184) = v4;
      uint64_t v5 = *(void *)(v0 + 168);
      if (v4 > *(void *)(v5 + 16))
      {
        __break(1u);
        return;
      }
      uint64_t v6 = *(void *)(v0 + 152);
      uint64_t v7 = *(void *)(v0 + 136);
      uint64_t v8 = *(void *)(v0 + 104);
      uint64_t v9 = *(void *)(v0 + 112);
      uint64_t v10 = *(void *)(v0 + 96);
      sub_219384558(v5+ ((*(unsigned __int8 *)(v0 + 216) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 216))+ *(void *)(*(void *)(v0 + 144) + 72) * (v3 - 2), v6);
      sub_2193845BC(v6 + *(int *)(v7 + 28), v10);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) != 1) {
        break;
      }
      uint64_t v11 = *(void *)(v0 + 96);
      sub_219384624(*(void *)(v0 + 152));
      sub_219360620(v11, &qword_26AC27160);
      uint64_t v3 = *(void *)(v0 + 184);
      uint64_t v4 = v3 - 1;
      if (v3 == 1) {
        goto LABEL_5;
      }
    }
    (*(void (**)(void, void, void))(*(void *)(v0 + 112) + 32))(*(void *)(v0 + 120), *(void *)(v0 + 96), *(void *)(v0 + 104));
    uint64_t v13 = sub_2193E1F70();
    uint64_t v15 = v14;
    *(void *)(v0 + 192) = v14;
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v16;
    void *v16 = v0;
    v16[1] = sub_219382AF8;
    uint64_t v17 = *(void *)(v0 + 56);
    uint64_t v18 = *(void *)(v0 + 64);
    sub_2193D3EB8(v13, v15, v17, v18);
  }
}

uint64_t type metadata accessor for ASPasswordSignInEventCollector.SignInEvent()
{
  uint64_t result = qword_267C19458;
  if (!qword_267C19458) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_219383158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v35 = a5;
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v38 = type metadata accessor for ASPasswordSignInEventCollector.SignInEvent();
  uint64_t v10 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v12 = (uint64_t *)((char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27160);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16)
  {
    uint64_t v28 = 1;
    goto LABEL_18;
  }
  uint64_t v33 = v6;
  uint64_t v34 = a4;
  uint64_t v31 = v10;
  uint64_t v32 = a6;
  uint64_t v17 = *(void *)(v10 + 72);
  uint64_t v18 = a1
      + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
      + v17 * (v16 - 1);
  uint64_t v19 = -v17;
  while (1)
  {
    sub_2193845BC(v18 + *(int *)(v38 + 28), (uint64_t)v15);
    uint64_t v20 = sub_2193E1FF0();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v15, 1, v20) == 1)
    {
      sub_219360620((uint64_t)v15, &qword_26AC27160);
      goto LABEL_4;
    }
    sub_2193E1FB0();
    uint64_t v23 = v22;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v20);
    if (!v23) {
      goto LABEL_4;
    }
    uint64_t v24 = (void *)sub_2193E2830();
    char v25 = (void *)sub_2193E2830();
    swift_bridgeObjectRelease();
    unsigned __int8 v26 = objc_msgSend(v24, sel_safari_isHostOrSubdomainOfHost_, v25);

    sub_219384558(v18, (uint64_t)v12);
    if ((v26 & 1) == 0)
    {
      sub_219384624((uint64_t)v12);
      goto LABEL_4;
    }
    if (*v12 == v34 && v12[1] == v35) {
      break;
    }
    char v27 = sub_2193E3140();
    sub_219384624((uint64_t)v12);
    if (v27) {
      goto LABEL_16;
    }
LABEL_4:
    v18 += v19;
    if (!--v16)
    {
      uint64_t v28 = 1;
      a6 = v32;
      goto LABEL_17;
    }
  }
  sub_219384624((uint64_t)v12);
LABEL_16:
  a6 = v32;
  sub_219384558(v18, v32);
  uint64_t v28 = 0;
LABEL_17:
  uint64_t v10 = v31;
LABEL_18:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a6, v28, 1, v38);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_219383468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v9 = type metadata accessor for ASPasswordSignInEventCollector.SignInEvent();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(void *)(v10 + 72);
    uint64_t v12 = (void *)(a1
                   + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
                   + v11 * (v6 - 1));
    uint64_t v13 = -v11;
    while (1)
    {
      BOOL v14 = *v12 == a2 && v12[1] == a3;
      if (v14 || (sub_2193E3140() & 1) != 0) {
        break;
      }
      uint64_t v12 = (void *)((char *)v12 + v13);
      if (!--v6) {
        goto LABEL_9;
      }
    }
    sub_219384558((uint64_t)v12, a4);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a4, 0, 1, v9);
  }
  else
  {
LABEL_9:
    uint64_t v15 = type metadata accessor for ASPasswordSignInEventCollector.SignInEvent();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a4, 1, 1, v15);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_219383774(int a1, int a2, int a3, void *aBlock, uint64_t a5)
{
  _OWORD v5[2] = a5;
  v5[3] = _Block_copy(aBlock);
  uint64_t v6 = sub_2193E2840();
  uint64_t v8 = v7;
  v5[4] = v7;
  uint64_t v9 = sub_2193E2840();
  uint64_t v11 = v10;
  v5[5] = v10;
  uint64_t v12 = sub_2193E2840();
  uint64_t v14 = v13;
  v5[6] = v13;
  swift_retain();
  uint64_t v15 = (void *)swift_task_alloc();
  v5[7] = v15;
  void *v15 = v5;
  v15[1] = sub_219383898;
  return sub_21938248C(v6, v8, v9, v11, v12, v14);
}

uint64_t sub_219383898(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (a2)
  {
    uint64_t v6 = (void *)sub_2193E2830();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(void (***)(void, void))(v4 + 24);
  ((void (**)(void, void *))v7)[2](v7, v6);

  _Block_release(v7);
  uint64_t v8 = *(uint64_t (**)(void))(v5 + 8);
  return v8();
}

uint64_t sub_219383A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[8] = a4;
  v5[9] = v4;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C19438);
  v5[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_219383B00, v4, 0);
}

uint64_t sub_219383B00()
{
  uint64_t v1 = v0[9];
  sub_219381E70();
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 112);
  if (!*(void *)(v2 + 16)) {
    goto LABEL_6;
  }
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_219385910(v4, v3, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_219385AEC);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  uint64_t v7 = v0[10];
  uint64_t v9 = v0[5];
  uint64_t v8 = v0[6];
  uint64_t v10 = *(void *)(*(void *)(v2 + 56) + 8 * v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_219383468(v10, v9, v8, v7);
  swift_bridgeObjectRelease();
  uint64_t v11 = type metadata accessor for ASPasswordSignInEventCollector.SignInEvent();
  int v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v7, 1, v11);
  uint64_t v13 = v0[10];
  if (v12 == 1)
  {
    sub_219360620(v0[10], &qword_267C19438);
LABEL_6:
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    goto LABEL_7;
  }
  uint64_t v18 = (uint64_t *)(v13 + *(int *)(v11 + 24));
  uint64_t v14 = *v18;
  uint64_t v15 = v18[1];
  swift_bridgeObjectRetain();
  sub_219384624(v13);
LABEL_7:
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v16(v14, v15);
}

uint64_t sub_219383E6C(int a1, int a2, void *aBlock, uint64_t a4)
{
  v4[2] = a4;
  void v4[3] = _Block_copy(aBlock);
  uint64_t v5 = sub_2193E2840();
  uint64_t v7 = v6;
  v4[4] = v6;
  uint64_t v8 = sub_2193E2840();
  uint64_t v10 = v9;
  v4[5] = v9;
  swift_retain();
  uint64_t v11 = (void *)swift_task_alloc();
  v4[6] = v11;
  void *v11 = v4;
  v11[1] = sub_219383F68;
  return sub_219383A64(v5, v7, v8, v10);
}

uint64_t sub_219383F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (a2)
  {
    uint64_t v6 = (void *)sub_2193E2830();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(void (***)(void, void))(v4 + 24);
  ((void (**)(void, void *))v7)[2](v7, v6);

  _Block_release(v7);
  uint64_t v8 = *(uint64_t (**)(void))(v5 + 8);
  return v8();
}

id ASPasswordSignInEventCollector.__allocating_init()()
{
  uint64_t v1 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  swift_retain();
  v1[14] = sub_2193915B4(MEMORY[0x263F8EE78]);
  swift_release();
  v3.receiver = v1;
  v3.super_class = v0;
  return objc_msgSendSuper2(&v3, sel_init);
}

id ASPasswordSignInEventCollector.init()()
{
  swift_defaultActor_initialize();
  swift_retain();
  v0[14] = sub_2193915B4(MEMORY[0x263F8EE78]);
  swift_release();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ASPasswordSignInEventCollector();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t ASPasswordSignInEventCollector.deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ASPasswordSignInEventCollector.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return MEMORY[0x270FA2418](v0);
}

uint64_t ASPasswordSignInEventCollector.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_2193842AC()
{
  return v0;
}

uint64_t sub_2193842B8@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_21934CDF0(a2, a3);
      uint64_t v10 = (char *)sub_2193E1DF0();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_2193E1E20();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_2193E1E10();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x21938451CLL);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      uint64_t __s1 = sub_219348A70(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_2193E1DF0();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_2193E1E20();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_2193E1E10();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      uint64_t __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        uint64_t __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_21938452C(uint64_t a1, uint64_t a2)
{
  return sub_219385910(a1, a2, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_219385AEC);
}

uint64_t sub_219384558(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ASPasswordSignInEventCollector.SignInEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2193845BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_219384624(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ASPasswordSignInEventCollector.SignInEvent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_219384680(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ASPasswordSignInEventCollector.SignInEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ASPasswordSignInEventCollector()
{
  return self;
}

uint64_t method lookup function for ASPasswordSignInEventCollector(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ASPasswordSignInEventCollector);
}

uint64_t dispatch thunk of ASPasswordSignInEventCollector.didUseCredential(username:for:from:inBrowser:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ASPasswordSignInEventCollector.didUseCredential(username:for:from:inApp:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ASPasswordSignInEventCollector.providerForRecentlyFilledCredential(withUsername:for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v14 = *(int **)((*MEMORY[0x263F8EED0] & *v6) + 0x98);
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v14 + *v14);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  void *v15 = v7;
  v15[1] = sub_2193848D4;
  return v17(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_2193848D4(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t dispatch thunk of ASPasswordSignInEventCollector.providerForRecentlyFilledCredential(withUsername:forApp:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(int **)((*MEMORY[0x263F8EED0] & *v4) + 0xA0);
  size_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_219387954;
  return v13(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ASPasswordSignInEventCollector.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t *sub_219384B20(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_2193E21C0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (uint64_t *)((char *)v4 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (char *)v4 + v14;
    BOOL v19 = (char *)a2 + v14;
    uint64_t v20 = sub_2193E1FF0();
    uint64_t v21 = *(void *)(v20 - 8);
    size_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    swift_bridgeObjectRetain();
    if (v22(v19, 1, v20))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27160);
      memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
  }
  return v4;
}

uint64_t sub_219384D08(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_2193E21C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = sub_2193E1FF0();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

void *sub_219384E34(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_2193E21C0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (char *)a1 + v13;
  uint64_t v18 = (char *)a2 + v13;
  uint64_t v19 = sub_2193E1FF0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  swift_bridgeObjectRetain();
  if (v21(v18, 1, v19))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27160);
    memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  return a1;
}

void *sub_219384FCC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2193E21C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_2193E1FF0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  LODWORD(v8) = v18(v14, 1, v16);
  int v19 = v18(v15, 1, v16);
  if (!v8)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v14, v15, v16);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27160);
    memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  return a1;
}

_OWORD *sub_2193851D8(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2193E21C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_2193E1FF0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27160);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

void *sub_219385344(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_2193E21C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_2193E1FF0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  LODWORD(v9) = v21(v17, 1, v19);
  int v22 = v21(v18, 1, v19);
  if (!v9)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v17, v18, v19);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27160);
    memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

uint64_t sub_219385530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_219385544);
}

uint64_t sub_219385544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_2193E21C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27160);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_219385674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_219385688);
}

uint64_t sub_219385688(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_2193E21C0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27160);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_2193857B8()
{
  sub_2193E21C0();
  if (v0 <= 0x3F)
  {
    sub_21938588C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_21938588C()
{
  if (!qword_267C19468)
  {
    sub_2193E1FF0();
    unint64_t v0 = sub_2193E2BB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267C19468);
    }
  }
}

uint64_t sub_2193858E4(uint64_t a1, uint64_t a2)
{
  return sub_219385910(a1, a2, MEMORY[0x263F06F38], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_219385BD0);
}

uint64_t sub_219385910(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  sub_2193E3210();
  a3(v10, a1, a2);
  uint64_t v7 = sub_2193E3230();

  return a4(a1, a2, v7);
}

unint64_t sub_2193859A4(uint64_t a1)
{
  sub_2193E2E80();
  uint64_t v2 = sub_2193E27C0();

  return sub_21938656C(a1, v2);
}

unint64_t sub_219385A08(uint64_t a1)
{
  uint64_t v2 = sub_2193E2B70();
  return sub_2193867CC(a1, v2, (unint64_t *)&qword_267C194C8);
}

unint64_t sub_219385A58(uint64_t a1)
{
  uint64_t v2 = sub_2193E2D20();

  return sub_219386704(a1, v2);
}

unint64_t sub_219385A9C(uint64_t a1)
{
  uint64_t v2 = sub_2193E2B70();
  return sub_2193867CC(a1, v2, &qword_267C19018);
}

unint64_t sub_219385AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2193E3140() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2193E3140() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_219385BD0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  __s1[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v7 = v3;
    unint64_t v8 = a2;
    uint64_t v10 = ~v5;
    unint64_t v80 = HIDWORD(a1);
    size_t v86 = HIDWORD(a1) - (int)a1;
    uint64_t v87 = ~v5;
    BOOL v11 = __OFSUB__(HIDWORD(a1), a1);
    BOOL v85 = v11;
    unint64_t v88 = a2 >> 62;
    uint64_t v83 = v3 + 64;
    uint64_t v84 = (int)a1;
    uint64_t v81 = a1 >> 32;
    uint64_t v79 = (a1 >> 32) - (int)a1;
    unint64_t v89 = a2 >> 62;
    size_t __n = BYTE6(a2);
    while (1)
    {
      uint64_t v12 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v6);
      uint64_t v14 = *v12;
      unint64_t v13 = v12[1];
      uint64_t v15 = 0;
      switch(v13 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v14), v14))
          {
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
          }
          uint64_t v15 = HIDWORD(v14) - (int)v14;
LABEL_14:
          sub_21934CDF0(v14, v13);
          break;
        case 2uLL:
          uint64_t v17 = *(void *)(v14 + 16);
          uint64_t v16 = *(void *)(v14 + 24);
          uint64_t v15 = v16 - v17;
          if (!__OFSUB__(v16, v17)) {
            goto LABEL_14;
          }
          goto LABEL_122;
        case 3uLL:
          break;
        default:
          uint64_t v15 = BYTE6(v13);
          break;
      }
      size_t v18 = __n;
      switch(v89)
      {
        case 1uLL:
          size_t v18 = v86;
          if (v85) {
            goto LABEL_123;
          }
          goto LABEL_19;
        case 2uLL:
          uint64_t v20 = *(void *)(a1 + 16);
          uint64_t v19 = *(void *)(a1 + 24);
          BOOL v21 = __OFSUB__(v19, v20);
          size_t v18 = v19 - v20;
          if (!v21) {
            goto LABEL_19;
          }
          goto LABEL_124;
        case 3uLL:
          if (v15) {
            goto LABEL_7;
          }
          goto LABEL_119;
        default:
LABEL_19:
          if (v15 == v18)
          {
            if (v15 < 1)
            {
LABEL_119:
              sub_219348A70(v14, v13);
              return v6;
            }
            switch(v13 >> 62)
            {
              case 1uLL:
                if ((int)v14 > v14 >> 32) {
                  goto LABEL_125;
                }
                uint64_t v26 = sub_2193E1DF0();
                if (v26)
                {
                  uint64_t v27 = v26;
                  uint64_t v28 = sub_2193E1E20();
                  if (__OFSUB__((int)v14, v28)) {
                    goto LABEL_127;
                  }
                  char v29 = (const void *)(v27 + (int)v14 - v28);
                }
                else
                {
                  char v29 = 0;
                }
                sub_2193E1E10();
                if (!v88)
                {
                  LOWORD(__s1[0]) = a1;
                  BYTE2(__s1[0]) = BYTE2(a1);
                  BYTE3(__s1[0]) = BYTE3(a1);
                  BYTE4(__s1[0]) = v80;
                  BYTE5(__s1[0]) = BYTE5(a1);
                  BYTE6(__s1[0]) = BYTE6(a1);
                  HIBYTE(__s1[0]) = HIBYTE(a1);
                  LOWORD(__s1[1]) = v8;
                  BYTE2(__s1[1]) = BYTE2(v8);
                  BYTE3(__s1[1]) = BYTE3(v8);
                  BYTE4(__s1[1]) = BYTE4(v8);
                  BYTE5(__s1[1]) = BYTE5(v8);
                  if (!v29) {
                    goto LABEL_155;
                  }
                  int v46 = memcmp(v29, __s1, __n);
LABEL_102:
                  sub_219348A70(v14, v13);
                  uint64_t v10 = v87;
                  if (!v46) {
                    return v6;
                  }
                  break;
                }
                if (v88 == 1)
                {
                  if (v81 < v84) {
                    goto LABEL_136;
                  }
                  swift_retain();
                  uint64_t v47 = sub_2193E1DF0();
                  if (v47)
                  {
                    uint64_t v48 = sub_2193E1E20();
                    if (__OFSUB__(v84, v48)) {
                      goto LABEL_143;
                    }
                    v47 += v84 - v48;
                  }
                  uint64_t v49 = sub_2193E1E10();
                  size_t v50 = v79;
                  if (v49 < v79) {
                    size_t v50 = v49;
                  }
                  if (!v29) {
                    goto LABEL_148;
                  }
                  if (!v47) {
                    goto LABEL_149;
                  }
                  size_t v39 = v50;
                  uint64_t v40 = v29;
                  uint64_t v38 = (const void *)v47;
LABEL_71:
                  int v46 = memcmp(v40, v38, v39);
                  sub_219348A70(a1, v8);
                  goto LABEL_102;
                }
                uint64_t v69 = *(void *)(a1 + 16);
                uint64_t v78 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                uint64_t v70 = sub_2193E1DF0();
                if (v70)
                {
                  uint64_t v71 = v70;
                  uint64_t v72 = sub_2193E1E20();
                  if (__OFSUB__(v69, v72)) {
                    goto LABEL_142;
                  }
                  uint64_t v73 = (const void *)(v71 + v69 - v72);
                }
                else
                {
                  uint64_t v73 = 0;
                }
                if (__OFSUB__(v78, v69)) {
                  goto LABEL_137;
                }
                uint64_t v74 = sub_2193E1E10();
                if (v74 >= v78 - v69) {
                  size_t v75 = v78 - v69;
                }
                else {
                  size_t v75 = v74;
                }
                if (!v29) {
                  goto LABEL_156;
                }
                uint64_t v4 = v83;
                if (!v73) {
                  goto LABEL_157;
                }
                int v62 = memcmp(v29, v73, v75);
LABEL_115:
                swift_release();
LABEL_116:
                swift_release();
                sub_219348A70(v14, v13);
                unint64_t v8 = a2;
                uint64_t v10 = v87;
                if (!v62) {
                  return v6;
                }
                break;
              case 2uLL:
                uint64_t v30 = *(void *)(v14 + 16);
                swift_retain();
                swift_retain();
                uint64_t v31 = sub_2193E1DF0();
                if (v31)
                {
                  uint64_t v32 = v31;
                  uint64_t v33 = sub_2193E1E20();
                  if (__OFSUB__(v30, v33)) {
                    goto LABEL_126;
                  }
                  uint64_t v34 = (const void *)(v32 + v30 - v33);
                }
                else
                {
                  uint64_t v34 = 0;
                }
                sub_2193E1E10();
                uint64_t v4 = v83;
                if (!v88)
                {
                  LOWORD(__s1[0]) = a1;
                  BYTE2(__s1[0]) = BYTE2(a1);
                  BYTE3(__s1[0]) = BYTE3(a1);
                  BYTE4(__s1[0]) = v80;
                  BYTE5(__s1[0]) = BYTE5(a1);
                  BYTE6(__s1[0]) = BYTE6(a1);
                  HIBYTE(__s1[0]) = HIBYTE(a1);
                  LODWORD(__s1[1]) = a2;
                  WORD2(__s1[1]) = WORD2(a2);
                  if (!v34) {
                    goto LABEL_152;
                  }
                  int v62 = memcmp(v34, __s1, __n);
                  swift_release();
                  goto LABEL_116;
                }
                if (v88 == 1)
                {
                  if (v81 < v84) {
                    goto LABEL_130;
                  }
                  swift_retain();
                  uint64_t v42 = (char *)sub_2193E1DF0();
                  if (v42)
                  {
                    uint64_t v43 = sub_2193E1E20();
                    if (__OFSUB__(v84, v43)) {
                      goto LABEL_141;
                    }
                    v42 += v84 - v43;
                  }
                  uint64_t v44 = sub_2193E1E10();
                  size_t v45 = v79;
                  if (v44 < v79) {
                    size_t v45 = v44;
                  }
                  if (!v34) {
                    goto LABEL_146;
                  }
                  if (!v42) {
                    goto LABEL_147;
                  }
                  int v46 = memcmp(v34, v42, v45);
                  unint64_t v8 = a2;
                  sub_219348A70(a1, a2);
                  swift_release();
                  swift_release();
                  goto LABEL_102;
                }
                uint64_t v63 = *(void *)(a1 + 16);
                uint64_t v77 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                uint64_t v64 = (char *)sub_2193E1DF0();
                if (v64)
                {
                  uint64_t v65 = sub_2193E1E20();
                  if (__OFSUB__(v63, v65)) {
                    goto LABEL_140;
                  }
                  v64 += v63 - v65;
                }
                BOOL v21 = __OFSUB__(v77, v63);
                int64_t v66 = v77 - v63;
                if (v21) {
                  goto LABEL_135;
                }
                uint64_t v67 = sub_2193E1E10();
                if (v67 >= v66) {
                  size_t v68 = v66;
                }
                else {
                  size_t v68 = v67;
                }
                if (!v34) {
                  goto LABEL_153;
                }
                uint64_t v4 = v83;
                if (!v64) {
                  goto LABEL_154;
                }
                int v62 = memcmp(v34, v64, v68);
                swift_release();
                swift_release();
                goto LABEL_115;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v88) {
                  goto LABEL_45;
                }
                if (v88 == 1)
                {
                  if (v81 < v84) {
                    goto LABEL_129;
                  }
                  sub_21934CDF0(a1, v8);
                  uint64_t v35 = sub_2193E1DF0();
                  if (!v35) {
                    goto LABEL_145;
                  }
                  uint64_t v23 = v35;
                  uint64_t v36 = sub_2193E1E20();
                  uint64_t v25 = v84 - v36;
                  if (__OFSUB__(v84, v36)) {
                    goto LABEL_134;
                  }
LABEL_41:
                  uint64_t v37 = sub_2193E1E10();
                  uint64_t v38 = (const void *)(v23 + v25);
                  if (v37 >= v79) {
                    size_t v39 = v79;
                  }
                  else {
                    size_t v39 = v37;
                  }
                  uint64_t v40 = __s1;
                  goto LABEL_71;
                }
                uint64_t v57 = *(void *)(a1 + 16);
                uint64_t v58 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                uint64_t v53 = (char *)sub_2193E1DF0();
                if (v53)
                {
                  uint64_t v59 = sub_2193E1E20();
                  if (__OFSUB__(v57, v59)) {
                    goto LABEL_139;
                  }
                  v53 += v57 - v59;
                }
                BOOL v21 = __OFSUB__(v58, v57);
                int64_t v55 = v58 - v57;
                if (v21) {
                  goto LABEL_132;
                }
                uint64_t v56 = sub_2193E1E10();
                if (!v53) {
                  goto LABEL_151;
                }
LABEL_83:
                if (v56 >= v55) {
                  size_t v60 = v55;
                }
                else {
                  size_t v60 = v56;
                }
                int v61 = memcmp(__s1, v53, v60);
                swift_release();
                swift_release();
                sub_219348A70(v14, v13);
                uint64_t v4 = v83;
                uint64_t v10 = v87;
                if (!v61) {
                  return v6;
                }
                break;
              default:
                __s1[0] = v14;
                LOWORD(__s1[1]) = v13;
                BYTE2(__s1[1]) = BYTE2(v13);
                BYTE3(__s1[1]) = BYTE3(v13);
                BYTE4(__s1[1]) = BYTE4(v13);
                BYTE5(__s1[1]) = BYTE5(v13);
                if (!v88)
                {
LABEL_45:
                  __int16 __s2 = a1;
                  char v92 = BYTE2(a1);
                  char v93 = BYTE3(a1);
                  char v94 = v80;
                  char v95 = BYTE5(a1);
                  char v96 = BYTE6(a1);
                  char v97 = HIBYTE(a1);
                  __int16 v98 = v8;
                  char v99 = BYTE2(v8);
                  char v100 = BYTE3(v8);
                  char v101 = BYTE4(v8);
                  char v102 = BYTE5(v8);
                  int v41 = memcmp(__s1, &__s2, __n);
                  sub_219348A70(v14, v13);
                  if (!v41) {
                    return v6;
                  }
                  break;
                }
                if (v88 == 1)
                {
                  if (v81 < v84) {
                    goto LABEL_128;
                  }
                  sub_21934CDF0(a1, v8);
                  uint64_t v22 = sub_2193E1DF0();
                  if (!v22)
                  {
                    sub_2193E1E10();
                    __break(1u);
LABEL_145:
                    sub_2193E1E10();
                    __break(1u);
LABEL_146:
                    __break(1u);
LABEL_147:
                    __break(1u);
LABEL_148:
                    __break(1u);
LABEL_149:
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
                    JUMPOUT(0x21938653CLL);
                  }
                  uint64_t v23 = v22;
                  uint64_t v24 = sub_2193E1E20();
                  uint64_t v25 = v84 - v24;
                  if (__OFSUB__(v84, v24)) {
                    goto LABEL_133;
                  }
                  goto LABEL_41;
                }
                uint64_t v51 = *(void *)(a1 + 16);
                uint64_t v52 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                uint64_t v53 = (char *)sub_2193E1DF0();
                if (v53)
                {
                  uint64_t v54 = sub_2193E1E20();
                  if (__OFSUB__(v51, v54)) {
                    goto LABEL_138;
                  }
                  v53 += v51 - v54;
                }
                BOOL v21 = __OFSUB__(v52, v51);
                int64_t v55 = v52 - v51;
                if (v21) {
                  goto LABEL_131;
                }
                uint64_t v56 = sub_2193E1E10();
                if (!v53) {
                  goto LABEL_150;
                }
                goto LABEL_83;
            }
          }
          else
          {
LABEL_7:
            sub_219348A70(v14, v13);
          }
          unint64_t v6 = (v6 + 1) & v10;
          if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
            return v6;
          }
          break;
      }
    }
  }
  return v6;
}

unint64_t sub_21938656C(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v4 = sub_2193E2E80();
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v20 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    unint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      uint64_t v16 = v11;
      v12(v7, *(void *)(v22 + 48) + v14 * v9, v4);
      char v17 = sub_2193E2820();
      (*v15)(v7, v4);
      if (v17) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      uint64_t v11 = v16;
    }
    while (((*(void *)(v20 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_219386704(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_219387700(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x21D489370](v9, a1);
      sub_2193601A4((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_2193867CC(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_2193607AC(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_2193E2B80();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_2193E2B80();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

uint64_t sub_2193868E0(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_2193869BC;
  return v6(a1);
}

uint64_t sub_2193869BC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

char *sub_219386AB4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_219386D34(a1, a2, a3, a4, (uint64_t *)&unk_267C18BE0);
}

uint64_t sub_219386AC0(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E88);
  uint64_t v10 = *(void *)(type metadata accessor for ASPasswordSignInEventCollector.SignInEvent() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_2193E2EE0();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for ASPasswordSignInEventCollector.SignInEvent() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_219386E38(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

char *sub_219386D28(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_219386D34(a1, a2, a3, a4, &qword_267C194C0);
}

char *sub_219386D34(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = *((void *)a4 + 3);
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      int64_t v10 = *((void *)a4 + 2);
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v11 = (char *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      *((void *)v11 + 2) = v9;
      *((void *)v11 + 3) = 2 * v12 - 64;
      unint64_t v13 = v11 + 32;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32]) {
          memmove(v13, a4 + 32, v9);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
      unint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_21938775C(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_219386E2C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_219386D34(a1, a2, a3, a4, &qword_267C194B8);
}

uint64_t sub_219386E38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for ASPasswordSignInEventCollector.SignInEvent() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_2193E2F60();
  __break(1u);
  return result;
}

uint64_t sub_219386F90()
{
  _Block_release(*(const void **)(v0 + 32));
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_219386FE0()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = v0[5];
  char v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  void *v6 = v1;
  v6[1] = sub_219387958;
  unint64_t v7 = (uint64_t (*)(int, int, void *, uint64_t))((char *)&dword_267C19470 + dword_267C19470);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_2193870A8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  char v6 = (int *)v1[4];
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_219387958;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_267C1A388 + dword_267C1A388);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_219387174()
{
  _Block_release(*(const void **)(v0 + 40));
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_2193871CC()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v6 = v0[6];
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  void *v7 = v1;
  v7[1] = sub_219387958;
  uint64_t v8 = (uint64_t (*)(int, int, int, void *, uint64_t))((char *)&dword_267C19488 + dword_267C19488);
  return v8(v2, v3, v4, v5, v6);
}

uint64_t sub_219387298()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_219387958;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_267C1A380 + dword_267C1A380);
  return v6(v2, v3, v4);
}

uint64_t objectdestroy_18Tm()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t objectdestroy_3Tm()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 104, 7);
}

uint64_t sub_219387400(uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v12 = v1[2];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_219387504;
  return sub_219381568(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_219387504()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t objectdestroyTm()
{
  uint64_t v1 = sub_2193E1FF0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_219387700(uint64_t a1, uint64_t a2)
{
  return a2;
}

char *sub_21938775C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_2193E2F60();
  __break(1u);
  return result;
}

uint64_t sub_219387844()
{
  return sub_2193821C4() & 1;
}

uint64_t sub_219387864()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_21938789C(uint64_t a1)
{
  size_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_219387504;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_267C194D0 + dword_267C194D0);
  return v6(a1, v4);
}

uint64_t sub_21938795C()
{
  sub_219360140(v0 + 32, (uint64_t)&v5, &qword_267C194E0);
  sub_219360140((uint64_t)&v5, (uint64_t)&v6, &qword_267C194E0);
  uint64_t v1 = v6;
  if (v6 && *(void *)(v6 + 16) && (uint64_t v2 = sub_21938452C(30325, 0xE200000000000000), (v3 & 1) != 0)) {
    return ~*(unsigned __int8 *)(*(void *)(v1 + 56) + v2) & 1;
  }
  else {
    return 2;
  }
}

uint64_t sub_2193879E4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19520);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_219388FDC();
  sub_2193E3260();
  *(void *)&long long v10 = *(void *)v3;
  char v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C194F8);
  sub_219389098(&qword_267C19528, &qword_267C194F8);
  sub_2193E30D0();
  if (!v2)
  {
    sub_219360140(v3 + 8, (uint64_t)v15, &qword_267C19530);
    sub_219360140((uint64_t)v15, (uint64_t)&v10, &qword_267C19530);
    char v11 = 1;
    sub_2193E30A0();
    long long v10 = *(_OWORD *)(v3 + 16);
    char v11 = 2;
    sub_21934D644();
    sub_2193E30D0();
    sub_219360140(v3 + 32, (uint64_t)v14, &qword_267C194E0);
    sub_219360140((uint64_t)v14, (uint64_t)&v10, &qword_267C194E0);
    char v11 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C19500);
    sub_219389030(&qword_267C19538);
    sub_2193E30A0();
    LOBYTE(v10) = 4;
    sub_2193E3090();
    sub_219360140(v3 + 56, (uint64_t)v13, &qword_267C19540);
    sub_219360140((uint64_t)v13, (uint64_t)&v10, &qword_267C19540);
    char v11 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C19510);
    sub_219389098(&qword_267C19548, &qword_267C19510);
    sub_2193E30A0();
    sub_219360140(v3 + 64, (uint64_t)v12, &qword_267C19530);
    sub_219360140((uint64_t)v12, (uint64_t)&v10, &qword_267C19530);
    char v11 = 6;
    sub_2193E30A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

BOOL sub_219387DC4(char *a1, char *a2)
{
  return qword_2193E9050[*a1] == qword_2193E9050[*a2];
}

uint64_t sub_219387DE8()
{
  return sub_2193E3230();
}

uint64_t sub_219387E38()
{
  return sub_2193E3220();
}

uint64_t sub_219387E70()
{
  return sub_2193E3230();
}

uint64_t sub_219387EBC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_219388610(*a1);
  *a2 = result;
  return result;
}

void sub_219387EE8(void *a1@<X8>)
{
  *a1 = qword_2193E9050[*v1];
}

uint64_t sub_219387F00()
{
  uint64_t result = 0x736E6F6973726576;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6F69736E65747865;
      break;
    case 2:
      uint64_t result = 0x646975676161;
      break;
    case 3:
      uint64_t result = 0x736E6F6974706FLL;
      break;
    case 4:
      uint64_t result = 0x617373654D78616DLL;
      break;
    case 5:
      uint64_t result = 0x6F746F72506E6970;
      break;
    case 6:
      uint64_t result = 0x726F70736E617274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_219388000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_219388634(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_219388028()
{
  return qword_2193E9050[*v0];
}

uint64_t sub_219388040@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_219388610(a1);
  *a2 = result;
  return result;
}

uint64_t sub_219388068(uint64_t a1)
{
  unint64_t v2 = sub_219388FDC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2193880A4(uint64_t a1)
{
  unint64_t v2 = sub_219388FDC();

  return MEMORY[0x270FA00B8](a1, v2);
}

__n128 sub_2193880E0@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_219388960(a1, v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(void *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_219388134(void *a1)
{
  return sub_2193879E4(a1);
}

BOOL sub_219388178(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  _OWORD v7[2] = *(_OWORD *)(a1 + 32);
  double v7[3] = v2;
  uint64_t v8 = *(void *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  uint64_t v10 = *(void *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_2193881D4((uint64_t)v7, (uint64_t)v9);
}

BOOL sub_2193881D4(uint64_t a1, uint64_t a2)
{
  if ((sub_2193BC948(*(void **)a1, *(void **)a2) & 1) == 0) {
    return 0;
  }
  long long v4 = *(void **)(a1 + 8);
  long long v5 = *(void **)(a2 + 8);
  if (v4)
  {
    if (!v5 || (sub_2193BC948(v4, v5) & 1) == 0) {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  if (sub_219379924(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a2 + 16), *(void *)(a2 + 24)))
  {
    uint64_t v6 = *(void *)(a2 + 32);
    if (*(void *)(a1 + 32))
    {
      if (!v6) {
        return 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v7 = swift_bridgeObjectRetain();
      char v8 = sub_21939D1E4(v7, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    else if (v6)
    {
      return 0;
    }
    char v9 = *(unsigned char *)(a2 + 48);
    if (*(unsigned char *)(a1 + 48))
    {
      if (!*(unsigned char *)(a2 + 48)) {
        return 0;
      }
    }
    else
    {
      if (*(void *)(a1 + 40) != *(void *)(a2 + 40)) {
        char v9 = 1;
      }
      if (v9) {
        return 0;
      }
    }
    uint64_t v10 = *(void **)(a1 + 56);
    char v11 = *(void **)(a2 + 56);
    if (v10)
    {
      if (!v11 || !sub_2193BCA10(v10, v11)) {
        return 0;
      }
    }
    else if (v11)
    {
      return 0;
    }
    uint64_t v12 = *(void **)(a1 + 64);
    uint64_t v13 = *(void **)(a2 + 64);
    if (v12) {
      return v13 && (sub_2193BC948(v12, v13) & 1) != 0;
    }
    if (!v13) {
      return 1;
    }
  }
  return 0;
}

uint64_t destroy for ASCTAPGetInfoResponse(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_219348A70(*(void *)(a1 + 16), *(void *)(a1 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ASCTAPGetInfoResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21934CDF0(v5, v6);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ASCTAPGetInfoResponse(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  unint64_t v5 = *(void *)(a2 + 24);
  sub_21934CDF0(v4, v5);
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  sub_219348A70(v6, v7);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for ASCTAPGetInfoResponse(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_219348A70(v4, v5);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCTAPGetInfoResponse(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASCTAPGetInfoResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPGetInfoResponse()
{
  return &type metadata for ASCTAPGetInfoResponse;
}

uint64_t sub_219388610(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 8) {
    return 7;
  }
  else {
    return byte_2193E9088[a1 - 1];
  }
}

uint64_t sub_219388634(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736E6F6973726576 && a2 == 0xE800000000000000;
  if (v2 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69736E65747865 && a2 == 0xEA0000000000736ELL || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646975676161 && a2 == 0xE600000000000000 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x617373654D78616DLL && a2 == 0xEE00657A69536567 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F746F72506E6970 && a2 == 0xEC000000736C6F63 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x726F70736E617274 && a2 == 0xEA00000000007374)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_2193E3140();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_219388960@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C194E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_219388FDC();
  sub_2193E3240();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v37 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C194F8);
  char v41 = 0;
  uint64_t v9 = sub_219389098((unint64_t *)&qword_267C1A2E0, &qword_267C194F8);
  sub_2193E3010();
  uint64_t v10 = v38;
  char v41 = 1;
  swift_bridgeObjectRetain();
  sub_2193E2FE0();
  uint64_t v35 = v9;
  uint64_t v36 = v10;
  uint64_t v11 = v38;
  char v41 = 2;
  sub_21934D774();
  swift_bridgeObjectRetain();
  sub_2193E3010();
  uint64_t v34 = v11;
  uint64_t v12 = v38;
  unint64_t v13 = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C19500);
  char v41 = 3;
  uint64_t v33 = v12;
  sub_21934CDF0(v12, v13);
  sub_219389030(&qword_267C19508);
  sub_2193E2FE0();
  unint64_t v31 = v13;
  uint64_t v14 = v38;
  LOBYTE(v38) = 4;
  swift_bridgeObjectRetain();
  uint64_t v30 = 0;
  uint64_t v15 = sub_2193E2FD0();
  uint64_t v32 = v14;
  int v40 = v16;
  uint64_t v29 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C19510);
  char v41 = 5;
  sub_219389098(&qword_267C19518, &qword_267C19510);
  sub_2193E2FE0();
  uint64_t v17 = v38;
  char v41 = 6;
  swift_bridgeObjectRetain();
  sub_2193E2FE0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v18 = v38;
  uint64_t v19 = v17;
  uint64_t v20 = v36;
  swift_bridgeObjectRetain();
  uint64_t v21 = v34;
  swift_bridgeObjectRetain();
  uint64_t v22 = v33;
  unint64_t v23 = v31;
  sub_21934CDF0(v33, v31);
  swift_bridgeObjectRetain();
  sub_219348A70(v22, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_219348A70(v22, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = v32;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v26 = v37;
  *uint64_t v37 = v20;
  v26[1] = v21;
  void v26[2] = v22;
  v26[3] = v23;
  uint64_t v27 = v29;
  v26[4] = v24;
  v26[5] = v27;
  *((unsigned char *)v26 + 48) = v40 & 1;
  v26[7] = v19;
  v26[8] = v18;
  return result;
}

unint64_t sub_219388FDC()
{
  unint64_t result = qword_267C194F0;
  if (!qword_267C194F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C194F0);
  }
  return result;
}

uint64_t sub_219389030(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C19500);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_219389098(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ASCTAPGetInfoResponse.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ASCTAPGetInfoResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x219389254);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPGetInfoResponse.CodingKeys()
{
  return &type metadata for ASCTAPGetInfoResponse.CodingKeys;
}

unint64_t sub_219389290()
{
  unint64_t result = qword_267C19550;
  if (!qword_267C19550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19550);
  }
  return result;
}

unint64_t sub_2193892E8()
{
  unint64_t result = qword_267C19558;
  if (!qword_267C19558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19558);
  }
  return result;
}

unint64_t sub_219389340()
{
  unint64_t result = qword_267C19560;
  if (!qword_267C19560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19560);
  }
  return result;
}

uint64_t sub_219389394@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_21934CDF0(a1, a2);
  __int16 v7 = sub_21936A57C(a1, a2);
  sub_219348A70(a1, a2);
  if ((v7 & 0x100) != 0)
  {
    sub_21938FA18();
    swift_allocError();
    *uint64_t v9 = 256;
    return swift_willThrow();
  }
  if (v7 != 1)
  {
    if (v7 == 2)
    {
      char v8 = 1;
      goto LABEL_7;
    }
    sub_21938FA18();
    swift_allocError();
    *uint64_t v12 = v7;
    v12[1] = 0;
    return swift_willThrow();
  }
  char v8 = 0;
LABEL_7:
  sub_2193E2230();
  swift_allocObject();
  sub_2193E2220();
  if ((v8 & 1) == 0)
  {
    sub_21934CDF0(a1, a2);
    sub_21936E4F4(1, a1, a2, &v42);
    uint64_t v10 = v42;
    unint64_t v11 = v43;
    sub_21938FACC();
    sub_2193E2200();
    if (!v3)
    {
      swift_release();
      sub_219348A70(v10, v11);
      long long v38 = v24;
      long long v39 = v25;
      long long v40 = v26;
      uint64_t v41 = v27;
      long long v34 = v20;
      long long v35 = v21;
      long long v36 = v22;
      long long v37 = v23;
      long long v30 = v16;
      long long v31 = v17;
      long long v32 = v18;
      long long v33 = v19;
      long long v28 = v14;
      long long v29 = v15;
      sub_21938FB20((uint64_t)&v28);
      return sub_21935BE78((uint64_t)&v28, a3);
    }
LABEL_13:
    swift_release();
    return sub_219348A70(v10, v11);
  }
  sub_21934CDF0(a1, a2);
  sub_21936E4F4(1, a1, a2, &v42);
  uint64_t v10 = v42;
  unint64_t v11 = v43;
  sub_21938FA6C();
  sub_2193E2200();
  if (v3) {
    goto LABEL_13;
  }
  swift_release();
  sub_219348A70(v10, v11);
  long long v34 = v20;
  long long v35 = v21;
  long long v36 = v22;
  long long v30 = v16;
  long long v31 = v17;
  long long v32 = v18;
  long long v33 = v19;
  long long v28 = v14;
  long long v29 = v15;
  sub_21938FAC0((uint64_t)&v28);
  return sub_21935BE78((uint64_t)&v28, a3);
}

AuthenticationServicesCore::ASCTAPAuthenticatorMakeCredentialCommand::CodingKeys_optional __swiftcall ASCTAPAuthenticatorMakeCredentialCommand.CodingKeys.init(rawValue:)(Swift::Int rawValue)
{
  unint64_t v2 = 0x605040302010007uLL >> (8 * rawValue);
  if ((unint64_t)rawValue >= 8) {
    LOBYTE(v2) = 7;
  }
  *uint64_t v1 = v2;
  return (AuthenticationServicesCore::ASCTAPAuthenticatorMakeCredentialCommand::CodingKeys_optional)rawValue;
}

AuthenticationServicesCore::ASCTAPAuthenticatorMakeCredentialCommand::CodingKeys_optional __swiftcall ASCTAPAuthenticatorMakeCredentialCommand.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  unint64_t v2 = v1;
  BOOL v3 = stringValue._countAndFlagsBits == 0x6144746E65696C63 && stringValue._object == (void *)0xEE00687361486174;
  if (v3
    || (object = stringValue._object, uint64_t countAndFlagsBits = stringValue._countAndFlagsBits, (sub_2193E3140() & 1) != 0))
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else if (countAndFlagsBits == 0x50676E69796C6572 && object == (void *)0xEC00000079747261 {
         || (sub_2193E3140() & 1) != 0)
  }
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 1;
  }
  else if (countAndFlagsBits == 1919251317 && object == (void *)0xE400000000000000 || (sub_2193E3140() & 1) != 0)
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 2;
  }
  else if (countAndFlagsBits == 0xD00000000000001DLL && object == (void *)0x80000002193F13C0 {
         || (sub_2193E3140() & 1) != 0)
  }
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 3;
  }
  else if (countAndFlagsBits == 0x4C6564756C637865 && object == (void *)0xEB00000000747369 {
         || (sub_2193E3140() & 1) != 0)
  }
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 4;
  }
  else if (countAndFlagsBits == 0x6F69736E65747865 && object == (void *)0xEA0000000000736ELL {
         || (sub_2193E3140() & 1) != 0)
  }
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 5;
  }
  else if (countAndFlagsBits == 0x736E6F6974706FLL && object == (void *)0xE700000000000000)
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 6;
  }
  else
  {
    char v8 = sub_2193E3140();
    result.value = swift_bridgeObjectRelease();
    if (v8) {
      char v7 = 6;
    }
    else {
      char v7 = 7;
    }
  }
  *unint64_t v2 = v7;
  return result;
}

AuthenticationServicesCore::ASCTAPAuthenticatorMakeCredentialCommand::CodingKeys_optional __swiftcall ASCTAPAuthenticatorMakeCredentialCommand.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  char v2 = intValue - 1;
  if ((unint64_t)(intValue - 1) >= 7) {
    char v2 = 7;
  }
  *uint64_t v1 = v2;
  return (AuthenticationServicesCore::ASCTAPAuthenticatorMakeCredentialCommand::CodingKeys_optional)intValue;
}

unint64_t ASCTAPAuthenticatorMakeCredentialCommand.CodingKeys.stringValue.getter()
{
  unint64_t result = 0x6144746E65696C63;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x50676E69796C6572;
      break;
    case 2:
      unint64_t result = 1919251317;
      break;
    case 3:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 4:
      unint64_t result = 0x4C6564756C637865;
      break;
    case 5:
      unint64_t result = 0x6F69736E65747865;
      break;
    case 6:
      unint64_t result = 0x736E6F6974706FLL;
      break;
    default:
      return result;
  }
  return result;
}

AuthenticationServicesCore::ASCTAPAuthenticatorMakeCredentialCommand::CodingKeys_optional sub_219389AE0(Swift::Int *a1)
{
  return ASCTAPAuthenticatorMakeCredentialCommand.CodingKeys.init(rawValue:)(*a1);
}

uint64_t sub_219389AF4(uint64_t a1)
{
  unint64_t v2 = sub_21938C41C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_219389B30(uint64_t a1)
{
  unint64_t v2 = sub_21938C41C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASCTAPAuthenticatorMakeCredentialCommand.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19568);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v9 = v1[2];
  uint64_t v43 = v1[3];
  uint64_t v44 = v9;
  uint64_t v10 = v1[4];
  uint64_t v41 = v1[5];
  uint64_t v42 = v10;
  uint64_t v11 = v1[6];
  uint64_t v39 = v1[7];
  uint64_t v40 = v11;
  uint64_t v12 = v1[8];
  uint64_t v37 = v1[9];
  uint64_t v38 = v12;
  uint64_t v36 = v1[10];
  uint64_t v35 = v1[11];
  uint64_t v34 = v1[12];
  uint64_t v33 = v1[13];
  uint64_t v20 = v1[14];
  uint64_t v21 = v1[15];
  uint64_t v22 = v1[16];
  uint64_t v32 = v1[17];
  uint64_t v31 = v1[18];
  uint64_t v30 = v1[19];
  uint64_t v29 = v1[20];
  uint64_t v28 = v1[21];
  uint64_t v27 = v1[22];
  uint64_t v26 = v1[23];
  uint64_t v25 = v1[24];
  uint64_t v24 = v1[25];
  uint64_t v23 = v1[26];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_21938C41C();
  sub_2193E3260();
  uint64_t v46 = v7;
  uint64_t v47 = v8;
  char v58 = 0;
  sub_21934D644();
  uint64_t v13 = v45;
  sub_2193E30D0();
  if (!v13)
  {
    uint64_t v14 = v37;
    uint64_t v15 = v38;
    uint64_t v17 = v39;
    uint64_t v16 = v40;
    uint64_t v46 = v44;
    uint64_t v47 = v43;
    uint64_t v48 = v42;
    uint64_t v49 = v41;
    char v58 = 1;
    sub_21938C470();
    sub_2193E30D0();
    uint64_t v46 = v16;
    uint64_t v47 = v17;
    uint64_t v48 = v15;
    uint64_t v49 = v14;
    uint64_t v50 = v36;
    uint64_t v51 = v35;
    char v58 = 2;
    sub_21938C4C4();
    sub_2193E30D0();
    uint64_t v46 = v34;
    char v58 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C19588);
    sub_21938C710(&qword_267C19590, &qword_267C19588, (void (*)(void))sub_21938C518);
    sub_2193E30D0();
    uint64_t v46 = v33;
    char v58 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C195A0);
    sub_21938C710(&qword_267C195A8, &qword_267C195A0, (void (*)(void))sub_21938C56C);
    sub_2193E30A0();
    uint64_t v46 = v21;
    uint64_t v47 = v22;
    uint64_t v48 = v32;
    uint64_t v49 = v31;
    uint64_t v50 = v30;
    uint64_t v51 = v29;
    uint64_t v52 = v28;
    uint64_t v53 = v27;
    uint64_t v54 = v26;
    uint64_t v55 = v25;
    uint64_t v56 = v24;
    uint64_t v57 = v23;
    char v58 = 5;
    sub_21938C5C0();
    sub_2193E30A0();
    uint64_t v46 = v20;
    char v58 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C19500);
    sub_219389030(&qword_267C19538);
    sub_2193E30A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void ASCTAPAuthenticatorMakeCredentialCommand.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C195C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v74 = a1;
  __swift_project_boxed_opaque_existential_1Tm(a1, v9);
  sub_21938C41C();
  sub_2193E3240();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v74);
  }
  else
  {
    uint64_t v72 = a2;
    uint64_t v73 = v6;
    LOBYTE(v75) = 0;
    sub_21934D774();
    sub_2193E3010();
    uint64_t v10 = v89;
    uint64_t v11 = v90;
    LOBYTE(v75) = 1;
    sub_21934CDF0(v89, v90);
    sub_21938C614();
    sub_2193E3010();
    *(void *)&long long v70 = v10;
    *((void *)&v70 + 1) = v11;
    uint64_t v12 = v90;
    uint64_t v61 = v89;
    uint64_t v13 = *((void *)&v90 + 1);
    uint64_t v14 = v91;
    LOBYTE(v75) = 2;
    sub_21938C668();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2193E3010();
    uint64_t v57 = v14;
    uint64_t v58 = v12;
    uint64_t v15 = v90;
    uint64_t v49 = v89;
    uint64_t v50 = v13;
    uint64_t v16 = *((void *)&v90 + 1);
    unint64_t v17 = v91;
    uint64_t v18 = v93;
    uint64_t v48 = v92;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C19588);
    LOBYTE(v75) = 3;
    swift_bridgeObjectRetain();
    *(void *)&long long v63 = v16;
    sub_21934CDF0(v16, v17);
    sub_21938C710(&qword_267C195D8, &qword_267C19588, (void (*)(void))sub_21938C6BC);
    swift_bridgeObjectRetain();
    sub_2193E3010();
    int v71 = 1;
    uint64_t v60 = v18;
    *((void *)&v63 + 1) = v17;
    uint64_t v62 = v15;
    uint64_t v19 = v89;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C195A0);
    LOBYTE(v75) = 4;
    sub_21938C710(&qword_267C195E8, &qword_267C195A0, (void (*)(void))sub_21938C77C);
    swift_bridgeObjectRetain();
    sub_2193E2FE0();
    uint64_t v59 = v19;
    uint64_t v20 = v89;
    LOBYTE(v75) = 5;
    sub_21938C7D0();
    swift_bridgeObjectRetain();
    sub_2193E2FE0();
    uint64_t v69 = v20;
    uint64_t v54 = v89;
    long long v55 = v90;
    uint64_t v56 = v91;
    uint64_t v67 = v92;
    uint64_t v68 = v93;
    uint64_t v65 = v94;
    uint64_t v66 = v95;
    uint64_t v21 = v96;
    uint64_t v22 = v97;
    uint64_t v23 = v98;
    uint64_t v24 = v99;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C19500);
    char v114 = 6;
    uint64_t v51 = v24;
    uint64_t v47 = v24;
    uint64_t v25 = v66;
    uint64_t v52 = v23;
    uint64_t v46 = v23;
    uint64_t v53 = v22;
    uint64_t v64 = v21;
    uint64_t v26 = v65;
    sub_21938C824(v54, v55, *((uint64_t *)&v55 + 1), v56, v67, v68, v65, v66, v21, v22, v46, v47, (void (*)(void))sub_21934CFA8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21934CFF8);
    sub_219389030(&qword_267C19508);
    sub_2193E2FE0();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v8, v5);
    uint64_t v73 = v115;
    long long v75 = v70;
    uint64_t v27 = v70;
    *(void *)&long long v76 = v61;
    *((void *)&v76 + 1) = v58;
    *(void *)&long long v77 = v50;
    *((void *)&v77 + 1) = v57;
    *(void *)&long long v78 = v49;
    *((void *)&v78 + 1) = v62;
    long long v79 = v63;
    *(void *)&long long v80 = v48;
    *((void *)&v80 + 1) = v60;
    *(void *)&long long v81 = v59;
    *((void *)&v81 + 1) = v69;
    *(void *)&long long v82 = v115;
    uint64_t v28 = v53;
    *((void *)&v82 + 1) = v54;
    long long v83 = v55;
    *(void *)&long long v84 = v56;
    uint64_t v29 = v67;
    *((void *)&v84 + 1) = v67;
    *(void *)&long long v85 = v68;
    *((void *)&v85 + 1) = v26;
    *(void *)&long long v86 = v25;
    uint64_t v30 = v64;
    *((void *)&v86 + 1) = v64;
    *(void *)&long long v87 = v53;
    uint64_t v31 = v51;
    uint64_t v32 = v52;
    *((void *)&v87 + 1) = v52;
    uint64_t v88 = v51;
    sub_21938C8B0((uint64_t)&v75);
    sub_21938C824(v54, v55, *((uint64_t *)&v55 + 1), v56, v29, v68, v26, v66, v30, v28, v32, v31, (void (*)(void))sub_21934CEC4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21934CF14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v33 = *((void *)&v63 + 1);
    sub_219348A70(v63, *((unint64_t *)&v63 + 1));
    uint64_t v34 = v57;
    swift_bridgeObjectRelease();
    uint64_t v35 = v58;
    swift_bridgeObjectRelease();
    uint64_t v36 = v60;
    swift_bridgeObjectRelease();
    uint64_t v37 = v27;
    uint64_t v38 = *((void *)&v70 + 1);
    sub_219348A70(v27, *((unint64_t *)&v70 + 1));
    long long v39 = v86;
    uint64_t v40 = v72;
    *(_OWORD *)(v72 + 160) = v85;
    *(_OWORD *)(v40 + 176) = v39;
    *(_OWORD *)(v40 + 192) = v87;
    *(void *)(v40 + 208) = v88;
    long long v41 = v82;
    *(_OWORD *)(v40 + 96) = v81;
    *(_OWORD *)(v40 + 112) = v41;
    long long v42 = v84;
    *(_OWORD *)(v40 + 128) = v83;
    *(_OWORD *)(v40 + 144) = v42;
    long long v43 = v78;
    *(_OWORD *)(v40 + 32) = v77;
    *(_OWORD *)(v40 + 48) = v43;
    long long v44 = v80;
    *(_OWORD *)(v40 + 64) = v79;
    *(_OWORD *)(v40 + 80) = v44;
    long long v45 = v76;
    *(_OWORD *)uint64_t v40 = v75;
    *(_OWORD *)(v40 + 16) = v45;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v74);
    uint64_t v89 = v37;
    *(void *)&long long v90 = v38;
    *((void *)&v90 + 1) = v61;
    uint64_t v91 = v35;
    uint64_t v92 = v50;
    uint64_t v93 = v34;
    uint64_t v94 = v49;
    uint64_t v95 = v62;
    uint64_t v96 = v63;
    uint64_t v97 = v33;
    uint64_t v98 = v48;
    uint64_t v99 = v36;
    uint64_t v100 = v59;
    uint64_t v101 = v69;
    uint64_t v102 = v73;
    uint64_t v103 = v54;
    long long v104 = v55;
    uint64_t v105 = v56;
    uint64_t v106 = v67;
    uint64_t v107 = v68;
    uint64_t v108 = v65;
    uint64_t v109 = v66;
    uint64_t v110 = v64;
    uint64_t v111 = v53;
    uint64_t v112 = v52;
    uint64_t v113 = v51;
    sub_21938C9FC((uint64_t)&v89);
  }
}

void sub_21938AC10(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_21938AC28(void *a1)
{
  return ASCTAPAuthenticatorMakeCredentialCommand.encode(to:)(a1);
}

AuthenticationServicesCore::ASCTAPAuthenticatorGetAssertionCommand::CodingKeys_optional __swiftcall ASCTAPAuthenticatorGetAssertionCommand.CodingKeys.init(rawValue:)(Swift::Int rawValue)
{
  unint64_t v2 = 0x40302010005uLL >> (8 * rawValue);
  if ((unint64_t)rawValue >= 6) {
    LOBYTE(v2) = 5;
  }
  *uint64_t v1 = v2;
  return (AuthenticationServicesCore::ASCTAPAuthenticatorGetAssertionCommand::CodingKeys_optional)rawValue;
}

AuthenticationServicesCore::ASCTAPAuthenticatorGetAssertionCommand::CodingKeys_optional __swiftcall ASCTAPAuthenticatorGetAssertionCommand.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  unint64_t v2 = v1;
  BOOL v3 = stringValue._countAndFlagsBits == 0x50676E69796C6572 && stringValue._object == (void *)0xEE00444979747261;
  if (v3
    || (object = stringValue._object, uint64_t countAndFlagsBits = stringValue._countAndFlagsBits, (sub_2193E3140() & 1) != 0))
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else if (countAndFlagsBits == 0x6144746E65696C63 && object == (void *)0xEE00687361486174 {
         || (sub_2193E3140() & 1) != 0)
  }
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 1;
  }
  else if (countAndFlagsBits == 0x73694C776F6C6C61 && object == (void *)0xE900000000000074 {
         || (sub_2193E3140() & 1) != 0)
  }
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 2;
  }
  else if (countAndFlagsBits == 0x6F69736E65747865 && object == (void *)0xEA0000000000736ELL {
         || (sub_2193E3140() & 1) != 0)
  }
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 3;
  }
  else if (countAndFlagsBits == 0x736E6F6974706FLL && object == (void *)0xE700000000000000)
  {
    result.value = swift_bridgeObjectRelease();
    char v7 = 4;
  }
  else
  {
    char v8 = sub_2193E3140();
    result.value = swift_bridgeObjectRelease();
    if (v8) {
      char v7 = 4;
    }
    else {
      char v7 = 5;
    }
  }
  *unint64_t v2 = v7;
  return result;
}

AuthenticationServicesCore::ASCTAPAuthenticatorGetAssertionCommand::CodingKeys_optional __swiftcall ASCTAPAuthenticatorGetAssertionCommand.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  char v2 = intValue - 1;
  if ((unint64_t)(intValue - 1) >= 5) {
    char v2 = 5;
  }
  *uint64_t v1 = v2;
  return (AuthenticationServicesCore::ASCTAPAuthenticatorGetAssertionCommand::CodingKeys_optional)intValue;
}

uint64_t ASCTAPAuthenticatorGetAssertionCommand.CodingKeys.intValue.getter()
{
  return *v0 + 1;
}

uint64_t ASCTAPAuthenticatorGetAssertionCommand.CodingKeys.rawValue.getter()
{
  return *v0 + 1;
}

uint64_t ASCTAPAuthenticatorGetAssertionCommand.CodingKeys.stringValue.getter()
{
  uint64_t result = 0x50676E69796C6572;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6144746E65696C63;
      break;
    case 2:
      uint64_t result = 0x73694C776F6C6C61;
      break;
    case 3:
      uint64_t result = 0x6F69736E65747865;
      break;
    case 4:
      uint64_t result = 0x736E6F6974706FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21938AFFC()
{
  return sub_2193E3230();
}

uint64_t sub_21938B044()
{
  return sub_2193E3220();
}

uint64_t sub_21938B074()
{
  return sub_2193E3230();
}

AuthenticationServicesCore::ASCTAPAuthenticatorGetAssertionCommand::CodingKeys_optional sub_21938B0B8(Swift::Int *a1)
{
  return ASCTAPAuthenticatorGetAssertionCommand.CodingKeys.init(rawValue:)(*a1);
}

void sub_21938B0C0(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

uint64_t sub_21938B0D0()
{
  uint64_t result = 0x50676E69796C6572;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6144746E65696C63;
      break;
    case 2:
      uint64_t result = 0x73694C776F6C6C61;
      break;
    case 3:
      uint64_t result = 0x6F69736E65747865;
      break;
    case 4:
      uint64_t result = 0x736E6F6974706FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21938B1A0()
{
  return *v0 + 1;
}

uint64_t sub_21938B1B4(uint64_t a1)
{
  unint64_t v2 = sub_21938D070();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21938B1F0(uint64_t a1)
{
  unint64_t v2 = sub_21938D070();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASCTAPAuthenticatorGetAssertionCommand.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19600);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  uint64_t v30 = v1[3];
  uint64_t v31 = v7;
  uint64_t v29 = v1[4];
  uint64_t v16 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v27 = v1[7];
  uint64_t v28 = v8;
  uint64_t v9 = v1[8];
  uint64_t v25 = v1[9];
  uint64_t v26 = v9;
  uint64_t v24 = v1[10];
  uint64_t v23 = v1[11];
  uint64_t v22 = v1[12];
  uint64_t v21 = v1[13];
  uint64_t v20 = v1[14];
  uint64_t v19 = v1[15];
  uint64_t v18 = v1[16];
  uint64_t v17 = v1[17];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_21938D070();
  sub_2193E3260();
  LOBYTE(v33) = 0;
  uint64_t v10 = v32;
  sub_2193E30B0();
  if (!v10)
  {
    uint64_t v12 = v28;
    uint64_t v11 = v29;
    uint64_t v13 = v26;
    uint64_t v14 = v27;
    uint64_t v33 = v31;
    uint64_t v34 = v30;
    char v45 = 1;
    sub_21934D644();
    sub_2193E30D0();
    uint64_t v33 = v11;
    char v45 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C195A0);
    sub_21938C710(&qword_267C195A8, &qword_267C195A0, (void (*)(void))sub_21938C56C);
    sub_2193E30A0();
    uint64_t v33 = v12;
    uint64_t v34 = v14;
    uint64_t v35 = v13;
    uint64_t v36 = v25;
    uint64_t v37 = v24;
    uint64_t v38 = v23;
    uint64_t v39 = v22;
    uint64_t v40 = v21;
    uint64_t v41 = v20;
    uint64_t v42 = v19;
    uint64_t v43 = v18;
    uint64_t v44 = v17;
    char v45 = 3;
    sub_21938C5C0();
    sub_2193E30A0();
    uint64_t v33 = v16;
    char v45 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C19500);
    sub_219389030(&qword_267C19538);
    sub_2193E30A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void ASCTAPAuthenticatorGetAssertionCommand.init(from:)(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19610);
  uint64_t v5 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_21938D070();
  uint64_t v58 = v7;
  sub_2193E3240();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    long long v55 = a1;
    uint64_t v56 = v5;
    uint64_t v54 = a2;
    LOBYTE(v68) = 0;
    uint64_t v8 = v57;
    uint64_t v9 = sub_2193E2FF0();
    uint64_t v11 = v10;
    LOBYTE(v59) = 1;
    sub_21934D774();
    swift_bridgeObjectRetain();
    sub_2193E3010();
    uint64_t v43 = v11;
    long long v12 = v68;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C195A0);
    LOBYTE(v59) = 2;
    unint64_t v44 = *((void *)&v12 + 1);
    sub_21934CDF0(v12, *((unint64_t *)&v12 + 1));
    sub_21938C710(&qword_267C195E8, &qword_267C195A0, (void (*)(void))sub_21938C77C);
    uint64_t v42 = 0;
    sub_2193E2FE0();
    uint64_t v45 = v12;
    uint64_t v13 = v68;
    LOBYTE(v59) = 3;
    sub_21938C7D0();
    swift_bridgeObjectRetain();
    sub_2193E2FE0();
    uint64_t v53 = v13;
    long long v48 = v68;
    long long v51 = v69;
    uint64_t v52 = v70;
    uint64_t v49 = v72;
    uint64_t v50 = v71;
    uint64_t v14 = v73;
    uint64_t v47 = *((void *)&v72 + 1);
    uint64_t v16 = *((void *)&v73 + 1);
    uint64_t v15 = v74;
    uint64_t v17 = v75;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C19500);
    char v82 = 4;
    uint64_t v41 = v17;
    uint64_t v39 = v15;
    uint64_t v38 = v15;
    uint64_t v18 = v47;
    uint64_t v40 = v16;
    uint64_t v46 = v14;
    sub_21938C824(v48, *((uint64_t *)&v48 + 1), v51, *((uint64_t *)&v51 + 1), v52, v50, v49, v47, v14, v16, v38, v17, (void (*)(void))sub_21934CFA8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21934CFF8);
    sub_219389030(&qword_267C19508);
    sub_2193E2FE0();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v8);
    uint64_t v57 = v83;
    uint64_t v58 = (char *)v9;
    *(void *)&long long v59 = v9;
    *((void *)&v59 + 1) = v43;
    *(void *)&long long v60 = v45;
    *((void *)&v60 + 1) = v44;
    uint64_t v19 = v18;
    *(void *)&long long v61 = v53;
    *((void *)&v61 + 1) = v83;
    long long v20 = v48;
    long long v62 = v48;
    long long v63 = v51;
    *(void *)&long long v64 = v52;
    *((void *)&v64 + 1) = v50;
    *(void *)&long long v65 = v49;
    *((void *)&v65 + 1) = v18;
    uint64_t v21 = v46;
    uint64_t v23 = v39;
    uint64_t v22 = v40;
    *(void *)&long long v66 = v46;
    *((void *)&v66 + 1) = v40;
    *(void *)&long long v67 = v39;
    *((void *)&v67 + 1) = v41;
    uint64_t v24 = v41;
    sub_21938D0C4((uint64_t)&v59);
    uint64_t v37 = v21;
    uint64_t v25 = v49;
    uint64_t v26 = v50;
    sub_21938C824(v20, *((uint64_t *)&v20 + 1), v51, *((uint64_t *)&v51 + 1), v52, v50, v49, v19, v37, v22, v23, v24, (void (*)(void))sub_21934CEC4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21934CF14);
    uint64_t v27 = v53;
    swift_bridgeObjectRelease();
    unint64_t v29 = v44;
    uint64_t v28 = v45;
    sub_219348A70(v45, v44);
    uint64_t v30 = v43;
    swift_bridgeObjectRelease();
    long long v31 = v66;
    uint64_t v33 = v54;
    uint64_t v32 = (uint64_t)v55;
    v54[6] = v65;
    v33[7] = v31;
    v33[8] = v67;
    long long v34 = v62;
    v33[2] = v61;
    v33[3] = v34;
    long long v35 = v64;
    v33[4] = v63;
    v33[5] = v35;
    long long v36 = v60;
    *uint64_t v33 = v59;
    v33[1] = v36;
    __swift_destroy_boxed_opaque_existential_1Tm(v32);
    *(void *)&long long v68 = v58;
    *((void *)&v68 + 1) = v30;
    *(void *)&long long v69 = v28;
    *((void *)&v69 + 1) = v29;
    uint64_t v70 = v27;
    uint64_t v71 = v57;
    long long v72 = v48;
    long long v73 = v51;
    uint64_t v74 = v52;
    uint64_t v75 = v26;
    uint64_t v76 = v25;
    uint64_t v77 = v47;
    uint64_t v78 = v46;
    uint64_t v79 = v40;
    uint64_t v80 = v39;
    uint64_t v81 = v41;
    sub_21938D1BC((uint64_t)&v68);
  }
}

void sub_21938BD58(void *a1@<X0>, _OWORD *a2@<X8>)
{
}

uint64_t sub_21938BD70(void *a1)
{
  return ASCTAPAuthenticatorGetAssertionCommand.encode(to:)(a1);
}

uint64_t _s26AuthenticationServicesCore40ASCTAPAuthenticatorMakeCredentialCommandV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  uint64_t v69 = a1[7];
  uint64_t v70 = a1[6];
  unint64_t v67 = a1[9];
  uint64_t v68 = a1[8];
  uint64_t v64 = a1[10];
  uint64_t v62 = a1[11];
  uint64_t v60 = a1[12];
  uint64_t v58 = a1[13];
  uint64_t v56 = a1[14];
  uint64_t v54 = a1[16];
  uint64_t v47 = a1[15];
  uint64_t v48 = a1[17];
  uint64_t v49 = a1[18];
  unint64_t v50 = a1[19];
  uint64_t v53 = a1[21];
  uint64_t v44 = a1[22];
  unint64_t v43 = a1[23];
  uint64_t v42 = a1[24];
  unint64_t v46 = a1[25];
  uint64_t v51 = a1[20];
  uint64_t v52 = a1[26];
  uint64_t v7 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v10 = a2[7];
  unint64_t v65 = a2[9];
  uint64_t v66 = a2[8];
  uint64_t v63 = a2[10];
  uint64_t v61 = a2[11];
  uint64_t v59 = a2[12];
  uint64_t v57 = a2[13];
  uint64_t v55 = a2[14];
  uint64_t v45 = a2[16];
  uint64_t v35 = a2[15];
  uint64_t v36 = a2[17];
  uint64_t v37 = a2[18];
  uint64_t v38 = a2[19];
  uint64_t v39 = a2[20];
  uint64_t v40 = a2[21];
  uint64_t v41 = a2[22];
  uint64_t v33 = a2[24];
  uint64_t v34 = a2[23];
  uint64_t v31 = a2[26];
  uint64_t v32 = a2[25];
  if ((sub_219379924(*a1, a1[1], *a2, a2[1]) & 1) == 0) {
    return 0;
  }
  if (v2 == v7 && v3 == v6 || (char v12 = sub_2193E3140(), result = 0, (v12 & 1) != 0))
  {
    if (v5 == v8 && v4 == v9 || (v14 = sub_2193E3140(), uint64_t result = 0, (v14 & 1) != 0))
    {
      if (v70 == v11 && v69 == v10 || (v15 = sub_2193E3140(), uint64_t result = 0, (v15 & 1) != 0))
      {
        if ((sub_219379924(v68, v67, v66, v65) & 1) == 0) {
          return 0;
        }
        if (v64 == v63 && v62 == v61 || (v16 = sub_2193E3140(), uint64_t result = 0, (v16 & 1) != 0))
        {
          if (sub_2193BCA7C(v60, v59))
          {
            if (v58)
            {
              if (!v57) {
                return 0;
              }
              swift_bridgeObjectRetain();
              uint64_t v17 = swift_bridgeObjectRetain();
              char v18 = sub_2193BBBE4(v17, v57);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v18 & 1) == 0) {
                return 0;
              }
            }
            else if (v57)
            {
              return 0;
            }
            if (v56)
            {
              if (!v55) {
                return 0;
              }
              swift_bridgeObjectRetain();
              uint64_t v19 = swift_bridgeObjectRetain();
              char v20 = sub_21939D1E4(v19, v55);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v20 & 1) == 0) {
                return 0;
              }
            }
            else if (v55)
            {
              return 0;
            }
            uint64_t v21 = v54;
            if (v54 == 2)
            {
              uint64_t v23 = v44;
              uint64_t v22 = v45;
              uint64_t v25 = v52;
              uint64_t v24 = v53;
              if (v45 == 2) {
                return 1;
              }
              goto LABEL_31;
            }
            uint64_t v79 = v47;
            uint64_t v80 = v54;
            uint64_t v81 = v48;
            uint64_t v82 = v49;
            unint64_t v83 = v50;
            uint64_t v84 = v51;
            uint64_t v85 = v53;
            uint64_t v23 = v44;
            uint64_t v86 = v44;
            unint64_t v87 = v43;
            uint64_t v88 = v42;
            unint64_t v89 = v46;
            uint64_t v90 = v52;
            if (v45 == 2)
            {
              sub_21934CFA8(v47, v54, v48, v49, v50);
              sub_21934CFF8(v44, v43, v42, v46, v52);
              sub_21934CFA8(v47, v54, v48, v49, v50);
              sub_21934CFF8(v44, v43, v42, v46, v52);
              sub_21934CEC4(v47, v54, v48, v49, v50);
              sub_21934CF14(v44, v43, v42, v46, v52);
              uint64_t v22 = 2;
              uint64_t v25 = v52;
              uint64_t v24 = v53;
              uint64_t v21 = v54;
LABEL_31:
              uint64_t v79 = v47;
              uint64_t v80 = v21;
              uint64_t v81 = v48;
              uint64_t v82 = v49;
              unint64_t v83 = v50;
              uint64_t v84 = v51;
              uint64_t v85 = v24;
              uint64_t v86 = v23;
              unint64_t v87 = v43;
              uint64_t v88 = v42;
              unint64_t v89 = v46;
              uint64_t v90 = v25;
              uint64_t v91 = v35;
              uint64_t v92 = v22;
              uint64_t v93 = v36;
              uint64_t v94 = v37;
              uint64_t v95 = v38;
              uint64_t v96 = v39;
              uint64_t v97 = v40;
              uint64_t v98 = v41;
              uint64_t v99 = v34;
              uint64_t v100 = v33;
              uint64_t v101 = v32;
              uint64_t v102 = v31;
              sub_21938C824(v35, v22, v36, v37, v38, v39, v40, v41, v34, v33, v32, v31, (void (*)(void))sub_21934CFA8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21934CFF8);
              sub_21938FB28((uint64_t)&v79);
              return 0;
            }
            v72[0] = v35;
            v72[1] = v45;
            v72[2] = v36;
            v72[3] = v37;
            v72[4] = v38;
            v72[5] = v39;
            char v73 = v40;
            uint64_t v74 = v41;
            uint64_t v75 = v34;
            uint64_t v76 = v33;
            uint64_t v77 = v32;
            uint64_t v78 = v31;
            sub_21938C824(v47, v54, v48, v49, v50, v51, v53, v44, v43, v42, v46, v52, (void (*)(void))sub_21934CFA8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21934CFF8);
            sub_21934CFA8(v47, v54, v48, v49, v50);
            sub_21934CFF8(v44, v43, v42, v46, v52);
            BOOL v71 = _s26AuthenticationServicesCore20ASCTAPExtensionInputV2eeoiySbAC_ACtFZ_0((uint64_t)&v79, (uint64_t)v72);
            uint64_t v26 = v86;
            unint64_t v27 = v87;
            uint64_t v28 = v88;
            unint64_t v29 = v89;
            uint64_t v30 = v90;
            sub_21934CEC4(v79, v80, v81, v82, v83);
            sub_21934CF14(v26, v27, v28, v29, v30);
            sub_21938C824(v47, v54, v48, v49, v50, v51, v53, v44, v43, v42, v46, v52, (void (*)(void))sub_21934CEC4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21934CF14);
            if (v71) {
              return 1;
            }
          }
          return 0;
        }
      }
    }
  }
  return result;
}

unint64_t sub_21938C41C()
{
  unint64_t result = qword_267C19570;
  if (!qword_267C19570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19570);
  }
  return result;
}

unint64_t sub_21938C470()
{
  unint64_t result = qword_267C19578;
  if (!qword_267C19578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19578);
  }
  return result;
}

unint64_t sub_21938C4C4()
{
  unint64_t result = qword_267C19580;
  if (!qword_267C19580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19580);
  }
  return result;
}

unint64_t sub_21938C518()
{
  unint64_t result = qword_267C19598;
  if (!qword_267C19598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19598);
  }
  return result;
}

unint64_t sub_21938C56C()
{
  unint64_t result = qword_267C195B0;
  if (!qword_267C195B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C195B0);
  }
  return result;
}

unint64_t sub_21938C5C0()
{
  unint64_t result = qword_267C195B8;
  if (!qword_267C195B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C195B8);
  }
  return result;
}

unint64_t sub_21938C614()
{
  unint64_t result = qword_267C195C8;
  if (!qword_267C195C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C195C8);
  }
  return result;
}

unint64_t sub_21938C668()
{
  unint64_t result = qword_267C195D0;
  if (!qword_267C195D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C195D0);
  }
  return result;
}

unint64_t sub_21938C6BC()
{
  unint64_t result = qword_267C195E0;
  if (!qword_267C195E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C195E0);
  }
  return result;
}

uint64_t sub_21938C710(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21938C77C()
{
  unint64_t result = qword_267C195F0;
  if (!qword_267C195F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C195F0);
  }
  return result;
}

unint64_t sub_21938C7D0()
{
  unint64_t result = qword_267C195F8;
  if (!qword_267C195F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C195F8);
  }
  return result;
}

void sub_21938C824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(void), void (*a14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a2 != 2)
  {
    a13();
    a14(a8, a9, a10, a11, a12);
  }
}

uint64_t sub_21938C8B0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  unint64_t v3 = *(void *)(a1 + 72);
  uint64_t v14 = *(void *)(a1 + 128);
  uint64_t v15 = *(void *)(a1 + 120);
  uint64_t v13 = *(void *)(a1 + 136);
  uint64_t v11 = *(void *)(a1 + 152);
  uint64_t v12 = *(void *)(a1 + 144);
  uint64_t v9 = *(void *)(a1 + 168);
  uint64_t v10 = *(void *)(a1 + 160);
  uint64_t v8 = *(void *)(a1 + 176);
  long long v7 = *(_OWORD *)(a1 + 184);
  uint64_t v4 = *(void *)(a1 + 208);
  uint64_t v6 = *(void *)(a1 + 200);
  sub_21934CDF0(*(void *)a1, *(void *)(a1 + 8));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21934CDF0(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21938C824(v15, v14, v13, v12, v11, v10, v9, v8, v7, *((uint64_t *)&v7 + 1), v6, v4, (void (*)(void))sub_21934CFA8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21934CFF8);
  return a1;
}

uint64_t sub_21938C9FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  unint64_t v3 = *(void *)(a1 + 72);
  uint64_t v14 = *(void *)(a1 + 128);
  uint64_t v15 = *(void *)(a1 + 120);
  uint64_t v13 = *(void *)(a1 + 136);
  uint64_t v11 = *(void *)(a1 + 152);
  uint64_t v12 = *(void *)(a1 + 144);
  uint64_t v9 = *(void *)(a1 + 168);
  uint64_t v10 = *(void *)(a1 + 160);
  uint64_t v8 = *(void *)(a1 + 176);
  long long v7 = *(_OWORD *)(a1 + 184);
  uint64_t v5 = *(void *)(a1 + 208);
  uint64_t v6 = *(void *)(a1 + 200);
  sub_219348A70(*(void *)a1, *(void *)(a1 + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_219348A70(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21938C824(v15, v14, v13, v12, v11, v10, v9, v8, v7, *((uint64_t *)&v7 + 1), v6, v5, (void (*)(void))sub_21934CEC4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21934CF14);
  return a1;
}

uint64_t _s26AuthenticationServicesCore38ASCTAPAuthenticatorGetAssertionCommandV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  unint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v52 = a1[7];
  uint64_t v47 = a1[6];
  uint64_t v48 = a1[8];
  uint64_t v41 = a1[9];
  unint64_t v42 = a1[10];
  uint64_t v6 = a1[12];
  uint64_t v7 = a1[13];
  unint64_t v46 = a1[14];
  uint64_t v49 = a1[11];
  uint64_t v50 = a1[15];
  unint64_t v51 = a1[16];
  uint64_t v8 = a2[2];
  unint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v11 = a2[5];
  uint64_t v43 = a2[7];
  uint64_t v45 = a1[17];
  uint64_t v34 = a2[6];
  uint64_t v35 = a2[8];
  uint64_t v36 = a2[9];
  uint64_t v37 = a2[10];
  uint64_t v38 = a2[11];
  uint64_t v39 = a2[12];
  uint64_t v40 = a2[13];
  uint64_t v32 = a2[15];
  uint64_t v33 = a2[14];
  uint64_t v30 = a2[17];
  uint64_t v31 = a2[16];
  if (*a1 == *a2 && a1[1] == a2[1] || (char v12 = sub_2193E3140(), result = 0, (v12 & 1) != 0))
  {
    if (sub_219379924(v2, v4, v8, v9))
    {
      if (v3)
      {
        if (!v10) {
          return 0;
        }
        swift_bridgeObjectRetain();
        uint64_t v14 = swift_bridgeObjectRetain();
        char v15 = sub_2193BBBE4(v14, v10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else if (v10)
      {
        return 0;
      }
      if (v5)
      {
        if (!v11) {
          return 0;
        }
        swift_bridgeObjectRetain();
        uint64_t v16 = swift_bridgeObjectRetain();
        char v17 = sub_21939D1E4(v16, v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0) {
          return 0;
        }
      }
      else if (v11)
      {
        return 0;
      }
      uint64_t v18 = v52;
      if (v52 == 2)
      {
        uint64_t v19 = v43;
        uint64_t v20 = v7;
        uint64_t v21 = v6;
        uint64_t v22 = v49;
        unint64_t v23 = v46;
        if (v43 == 2) {
          return 1;
        }
        goto LABEL_20;
      }
      uint64_t v60 = v47;
      uint64_t v61 = v52;
      uint64_t v62 = v48;
      uint64_t v63 = v41;
      uint64_t v22 = v49;
      unint64_t v64 = v42;
      uint64_t v65 = v49;
      uint64_t v21 = v6;
      uint64_t v66 = v6;
      uint64_t v67 = v7;
      uint64_t v20 = v7;
      unint64_t v23 = v46;
      unint64_t v68 = v46;
      uint64_t v69 = v50;
      unint64_t v70 = v51;
      uint64_t v71 = v45;
      if (v43 == 2)
      {
        sub_21934CFA8(v47, v52, v48, v41, v42);
        sub_21934CFF8(v7, v46, v50, v51, v45);
        sub_21934CFA8(v47, v52, v48, v41, v42);
        sub_21934CFF8(v7, v46, v50, v51, v45);
        sub_21934CEC4(v47, v52, v48, v41, v42);
        sub_21934CF14(v7, v46, v50, v51, v45);
        uint64_t v19 = 2;
        uint64_t v18 = v52;
LABEL_20:
        uint64_t v60 = v47;
        uint64_t v61 = v18;
        uint64_t v62 = v48;
        uint64_t v63 = v41;
        unint64_t v64 = v42;
        uint64_t v65 = v22;
        uint64_t v66 = v21;
        uint64_t v67 = v20;
        unint64_t v68 = v23;
        uint64_t v69 = v50;
        unint64_t v70 = v51;
        uint64_t v71 = v45;
        uint64_t v72 = v34;
        uint64_t v73 = v19;
        uint64_t v74 = v35;
        uint64_t v75 = v36;
        uint64_t v76 = v37;
        uint64_t v77 = v38;
        uint64_t v78 = v39;
        uint64_t v79 = v40;
        uint64_t v80 = v33;
        uint64_t v81 = v32;
        uint64_t v82 = v31;
        uint64_t v83 = v30;
        sub_21938C824(v34, v19, v35, v36, v37, v38, v39, v40, v33, v32, v31, v30, (void (*)(void))sub_21934CFA8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21934CFF8);
        sub_21938FB28((uint64_t)&v60);
        return 0;
      }
      v53[0] = v34;
      v53[1] = v43;
      v53[2] = v35;
      v53[3] = v36;
      v53[4] = v37;
      v53[5] = v38;
      char v54 = v39;
      uint64_t v55 = v40;
      uint64_t v56 = v33;
      uint64_t v57 = v32;
      uint64_t v58 = v31;
      uint64_t v59 = v30;
      sub_21938C824(v47, v52, v48, v41, v42, v49, v21, v7, v46, v50, v51, v45, (void (*)(void))sub_21934CFA8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21934CFF8);
      sub_21934CFA8(v47, v52, v48, v41, v42);
      sub_21934CFF8(v7, v46, v50, v51, v45);
      BOOL v24 = _s26AuthenticationServicesCore20ASCTAPExtensionInputV2eeoiySbAC_ACtFZ_0((uint64_t)&v60, (uint64_t)v53);
      uint64_t v44 = v21;
      uint64_t v25 = v67;
      unint64_t v26 = v68;
      uint64_t v27 = v69;
      unint64_t v28 = v70;
      uint64_t v29 = v71;
      sub_21934CEC4(v60, v61, v62, v63, v64);
      sub_21934CF14(v25, v26, v27, v28, v29);
      sub_21938C824(v47, v52, v48, v41, v42, v49, v44, v7, v46, v50, v51, v45, (void (*)(void))sub_21934CEC4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21934CF14);
      if (v24) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_21938D070()
{
  unint64_t result = qword_267C19608;
  if (!qword_267C19608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19608);
  }
  return result;
}

uint64_t sub_21938D0C4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  uint64_t v6 = *(void *)(a1 + 80);
  uint64_t v13 = *(void *)(a1 + 88);
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v11 = *(void *)(a1 + 104);
  uint64_t v12 = *(void *)(a1 + 96);
  long long v10 = *(_OWORD *)(a1 + 112);
  uint64_t v7 = *(void *)(a1 + 128);
  uint64_t v8 = *(void *)(a1 + 136);
  swift_bridgeObjectRetain();
  sub_21934CDF0(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21938C824(v15, v14, v4, v5, v6, v13, v12, v11, v10, *((uint64_t *)&v10 + 1), v7, v8, (void (*)(void))sub_21934CFA8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21934CFF8);
  return a1;
}

uint64_t sub_21938D1BC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  uint64_t v6 = *(void *)(a1 + 80);
  uint64_t v13 = *(void *)(a1 + 88);
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v11 = *(void *)(a1 + 104);
  uint64_t v12 = *(void *)(a1 + 96);
  long long v10 = *(_OWORD *)(a1 + 112);
  uint64_t v7 = *(void *)(a1 + 128);
  uint64_t v8 = *(void *)(a1 + 136);
  swift_bridgeObjectRelease();
  sub_219348A70(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21938C824(v15, v14, v4, v5, v6, v13, v12, v11, v10, *((uint64_t *)&v10 + 1), v7, v8, (void (*)(void))sub_21934CEC4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21934CF14);
  return a1;
}

unint64_t sub_21938D2B8()
{
  unint64_t result = qword_267C19618;
  if (!qword_267C19618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19618);
  }
  return result;
}

unint64_t sub_21938D310()
{
  unint64_t result = qword_267C19620;
  if (!qword_267C19620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19620);
  }
  return result;
}

unint64_t sub_21938D368()
{
  unint64_t result = qword_267C19628;
  if (!qword_267C19628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19628);
  }
  return result;
}

unint64_t sub_21938D3C0()
{
  unint64_t result = qword_267C19630;
  if (!qword_267C19630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19630);
  }
  return result;
}

unint64_t sub_21938D418()
{
  unint64_t result = qword_267C19638;
  if (!qword_267C19638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19638);
  }
  return result;
}

unint64_t sub_21938D470()
{
  unint64_t result = qword_267C19640;
  if (!qword_267C19640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19640);
  }
  return result;
}

uint64_t destroy for ASCTAPAuthenticatorMakeCredentialCommand(uint64_t *a1)
{
  sub_219348A70(*a1, a1[1]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_219348A70(a1[8], a1[9]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = a1[16];
  if (result != 1)
  {
    if (result == 2) {
      return result;
    }
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v3 = a1[19];
    if (v3 >> 60 != 15) {
      uint64_t result = sub_219348A70(a1[18], v3);
    }
  }
  if (a1[26] != 1)
  {
    unint64_t v4 = a1[23];
    if (v4 >> 60 != 15)
    {
      sub_219348A70(a1[22], v4);
      unint64_t v5 = a1[25];
      if (v5 >> 60 != 15) {
        sub_219348A70(a1[24], v5);
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ASCTAPAuthenticatorMakeCredentialCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_21934CDF0(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(a2 + 64);
  unint64_t v10 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21934CDF0(v9, v10);
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v11;
  uint64_t v12 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v12;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v13 = (_OWORD *)(a1 + 120);
  uint64_t v14 = (_OWORD *)(a2 + 120);
  uint64_t v15 = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15 == 1)
  {
    long long v19 = *(_OWORD *)(a2 + 136);
    *uint64_t v13 = *v14;
    *(_OWORD *)(a1 + 136) = v19;
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  }
  else
  {
    if (v15 == 2)
    {
      long long v16 = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = v16;
      long long v17 = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = v17;
      long long v18 = *(_OWORD *)(a2 + 136);
      *uint64_t v13 = *v14;
      *(_OWORD *)(a1 + 136) = v18;
      return a1;
    }
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v15;
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    uint64_t v20 = (uint64_t *)(a2 + 144);
    unint64_t v21 = *(void *)(a2 + 152);
    swift_bridgeObjectRetain();
    if (v21 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 144) = *(_OWORD *)v20;
    }
    else
    {
      uint64_t v22 = *v20;
      sub_21934CDF0(*v20, v21);
      *(void *)(a1 + 144) = v22;
      *(void *)(a1 + 152) = v21;
    }
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  }
  unint64_t v23 = (_OWORD *)(a1 + 176);
  BOOL v24 = (_OWORD *)(a2 + 176);
  uint64_t v25 = *(void *)(a2 + 208);
  if (v25 == 1)
  {
    long long v26 = *(_OWORD *)(a2 + 192);
    *unint64_t v23 = *v24;
    *(_OWORD *)(a1 + 192) = v26;
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
  }
  else
  {
    unint64_t v27 = *(void *)(a2 + 184);
    if (v27 >> 60 == 15)
    {
      long long v28 = *(_OWORD *)(a2 + 192);
      *unint64_t v23 = *v24;
      *(_OWORD *)(a1 + 192) = v28;
    }
    else
    {
      uint64_t v29 = *(void *)(a2 + 176);
      sub_21934CDF0(v29, *(void *)(a2 + 184));
      *(void *)(a1 + 176) = v29;
      *(void *)(a1 + 184) = v27;
      uint64_t v30 = (uint64_t *)(a2 + 192);
      unint64_t v31 = *(void *)(a2 + 200);
      if (v31 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 192) = *(_OWORD *)v30;
      }
      else
      {
        uint64_t v32 = *v30;
        sub_21934CDF0(*v30, v31);
        *(void *)(a1 + 192) = v32;
        *(void *)(a1 + 200) = v31;
      }
    }
    *(void *)(a1 + 208) = v25;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for ASCTAPAuthenticatorMakeCredentialCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_21934CDF0(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_219348A70(v6, v7);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 64);
  unint64_t v9 = *(void *)(a2 + 72);
  sub_21934CDF0(v8, v9);
  uint64_t v10 = *(void *)(a1 + 64);
  unint64_t v11 = *(void *)(a1 + 72);
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  sub_219348A70(v10, v11);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = (_OWORD *)(a1 + 120);
  uint64_t v13 = (_OWORD *)(a2 + 120);
  uint64_t v14 = *(void *)(a1 + 128);
  uint64_t v15 = *(void *)(a2 + 128);
  if (v14 != 2)
  {
    if (v15 == 2)
    {
      sub_21938DEAC(a1 + 120);
      long long v20 = *(_OWORD *)(a2 + 136);
      *uint64_t v12 = *v13;
      *(_OWORD *)(a1 + 136) = v20;
      long long v21 = *(_OWORD *)(a2 + 200);
      long long v23 = *(_OWORD *)(a2 + 152);
      long long v22 = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = v21;
      *(_OWORD *)(a1 + 152) = v23;
      *(_OWORD *)(a1 + 168) = v22;
      return a1;
    }
    if (v14 == 1)
    {
      if (v15 == 1)
      {
        long long v24 = *v13;
        long long v25 = *(_OWORD *)(a2 + 136);
        long long v26 = *(_OWORD *)(a2 + 152);
        *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
        *(_OWORD *)(a1 + 136) = v25;
        *(_OWORD *)(a1 + 152) = v26;
        *uint64_t v12 = v24;
        goto LABEL_34;
      }
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      uint64_t v44 = (_OWORD *)(a2 + 144);
      unint64_t v45 = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      if (v45 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 144) = *v44;
LABEL_33:
        uint64_t v51 = *(void *)(a2 + 160);
        *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
        *(void *)(a1 + 160) = v51;
LABEL_34:
        uint64_t v52 = (long long *)(a1 + 176);
        uint64_t v53 = (long long *)(a2 + 176);
        uint64_t v54 = *(void *)(a2 + 208);
        if (*(void *)(a1 + 208) == 1)
        {
          if (v54 == 1)
          {
            long long v55 = *v53;
            long long v56 = *(_OWORD *)(a2 + 192);
            *(void *)(a1 + 208) = *(void *)(a2 + 208);
            long long *v52 = v55;
            *(_OWORD *)(a1 + 192) = v56;
            return a1;
          }
          unint64_t v59 = *(void *)(a2 + 184);
          if (v59 >> 60 == 15)
          {
            long long v60 = *(_OWORD *)(a2 + 192);
            long long *v52 = *v53;
            *(_OWORD *)(a1 + 192) = v60;
            goto LABEL_48;
          }
          uint64_t v63 = *(void *)(a2 + 176);
          sub_21934CDF0(v63, *(void *)(a2 + 184));
          *(void *)(a1 + 176) = v63;
          *(void *)(a1 + 184) = v59;
LABEL_45:
          unint64_t v64 = (uint64_t *)(a2 + 192);
          unint64_t v65 = *(void *)(a2 + 200);
          if (v65 >> 60 == 15)
          {
            *(_OWORD *)(a1 + 192) = *(_OWORD *)v64;
          }
          else
          {
            uint64_t v66 = *v64;
            sub_21934CDF0(*v64, *(void *)(a2 + 200));
            *(void *)(a1 + 192) = v66;
            *(void *)(a1 + 200) = v65;
          }
          goto LABEL_48;
        }
        if (v54 == 1)
        {
          sub_21938DE58(a1 + 176);
          uint64_t v57 = *(void *)(a2 + 208);
          long long v58 = *(_OWORD *)(a2 + 192);
          long long *v52 = *v53;
          *(_OWORD *)(a1 + 192) = v58;
          *(void *)(a1 + 208) = v57;
          return a1;
        }
        unint64_t v61 = *(void *)(a2 + 184);
        if (*(void *)(a1 + 184) >> 60 == 15)
        {
          if (v61 >> 60 == 15)
          {
            long long v62 = *(_OWORD *)(a2 + 192);
            long long *v52 = *v53;
            *(_OWORD *)(a1 + 192) = v62;
LABEL_62:
            *(void *)(a1 + 208) = *(void *)(a2 + 208);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            return a1;
          }
          uint64_t v68 = *(void *)(a2 + 176);
          sub_21934CDF0(v68, *(void *)(a2 + 184));
          *(void *)(a1 + 176) = v68;
          *(void *)(a1 + 184) = v61;
          uint64_t v69 = (_OWORD *)(a2 + 192);
          unint64_t v70 = *(void *)(a2 + 200);
          if (v70 >> 60 == 15)
          {
            *(_OWORD *)(a1 + 192) = *v69;
            goto LABEL_62;
          }
          uint64_t v75 = *(void *)v69;
LABEL_57:
          sub_21934CDF0(v75, v70);
          *(void *)(a1 + 192) = v75;
          *(void *)(a1 + 200) = v70;
          goto LABEL_62;
        }
        if (v61 >> 60 == 15)
        {
          sub_21938DE04(a1 + 176);
          long long v67 = *(_OWORD *)(a2 + 192);
          long long *v52 = *v53;
          *(_OWORD *)(a1 + 192) = v67;
          goto LABEL_62;
        }
        uint64_t v71 = *(void *)(a2 + 176);
        sub_21934CDF0(v71, *(void *)(a2 + 184));
        uint64_t v72 = *(void *)(a1 + 176);
        unint64_t v73 = *(void *)(a1 + 184);
        *(void *)(a1 + 176) = v71;
        *(void *)(a1 + 184) = v61;
        sub_219348A70(v72, v73);
        uint64_t v74 = (uint64_t *)(a2 + 192);
        unint64_t v70 = *(void *)(a2 + 200);
        if (*(void *)(a1 + 200) >> 60 == 15)
        {
          if (v70 >> 60 != 15)
          {
            uint64_t v75 = *v74;
            goto LABEL_57;
          }
        }
        else
        {
          if (v70 >> 60 != 15)
          {
            uint64_t v76 = *v74;
            sub_21934CDF0(*v74, *(void *)(a2 + 200));
            uint64_t v77 = *(void *)(a1 + 192);
            unint64_t v78 = *(void *)(a1 + 200);
            *(void *)(a1 + 192) = v76;
            *(void *)(a1 + 200) = v70;
            sub_219348A70(v77, v78);
            goto LABEL_62;
          }
          sub_21934DFD8(a1 + 192);
        }
        *(_OWORD *)(a1 + 192) = *(_OWORD *)v74;
        goto LABEL_62;
      }
      uint64_t v47 = *(void *)v44;
LABEL_28:
      sub_21934CDF0(v47, v45);
      *(void *)(a1 + 144) = v47;
      *(void *)(a1 + 152) = v45;
      goto LABEL_33;
    }
    if (v15 == 1)
    {
      sub_21938DDB0(a1 + 120);
      long long v33 = *(_OWORD *)(a2 + 136);
      long long v32 = *(_OWORD *)(a2 + 152);
      long long v34 = *v13;
      *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
      *(_OWORD *)(a1 + 136) = v33;
      *(_OWORD *)(a1 + 152) = v32;
      *uint64_t v12 = v34;
      goto LABEL_34;
    }
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    unint64_t v46 = (uint64_t *)(a2 + 144);
    unint64_t v45 = *(void *)(a2 + 152);
    if (*(void *)(a1 + 152) >> 60 == 15)
    {
      if (v45 >> 60 != 15)
      {
        uint64_t v47 = *v46;
        goto LABEL_28;
      }
    }
    else
    {
      if (v45 >> 60 != 15)
      {
        uint64_t v48 = *v46;
        sub_21934CDF0(*v46, *(void *)(a2 + 152));
        uint64_t v49 = *(void *)(a1 + 144);
        unint64_t v50 = *(void *)(a1 + 152);
        *(void *)(a1 + 144) = v48;
        *(void *)(a1 + 152) = v45;
        sub_219348A70(v49, v50);
        goto LABEL_33;
      }
      sub_21934DFD8(a1 + 144);
    }
    *(_OWORD *)(a1 + 144) = *(_OWORD *)v46;
    goto LABEL_33;
  }
  if (v15 == 1)
  {
    long long v27 = *v13;
    long long v28 = *(_OWORD *)(a2 + 136);
    long long v29 = *(_OWORD *)(a2 + 152);
    *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
    *(_OWORD *)(a1 + 136) = v28;
    *(_OWORD *)(a1 + 152) = v29;
    *uint64_t v12 = v27;
LABEL_17:
    uint64_t v37 = (long long *)(a1 + 176);
    uint64_t v38 = (long long *)(a2 + 176);
    if (*(void *)(a2 + 208) == 1)
    {
      long long v39 = *v38;
      long long v40 = *(_OWORD *)(a2 + 192);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *uint64_t v37 = v39;
      *(_OWORD *)(a1 + 192) = v40;
      return a1;
    }
    unint64_t v41 = *(void *)(a2 + 184);
    if (v41 >> 60 == 15)
    {
      long long v42 = *(_OWORD *)(a2 + 192);
      *uint64_t v37 = *v38;
      *(_OWORD *)(a1 + 192) = v42;
LABEL_48:
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      swift_bridgeObjectRetain();
      return a1;
    }
    uint64_t v43 = *(void *)(a2 + 176);
    sub_21934CDF0(v43, *(void *)(a2 + 184));
    *(void *)(a1 + 176) = v43;
    *(void *)(a1 + 184) = v41;
    goto LABEL_45;
  }
  if (v15 != 2)
  {
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    uint64_t v30 = (_OWORD *)(a2 + 144);
    unint64_t v31 = *(void *)(a2 + 152);
    swift_bridgeObjectRetain();
    if (v31 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 144) = *v30;
    }
    else
    {
      uint64_t v35 = *(void *)v30;
      sub_21934CDF0(v35, v31);
      *(void *)(a1 + 144) = v35;
      *(void *)(a1 + 152) = v31;
    }
    uint64_t v36 = *(void *)(a2 + 160);
    *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
    *(void *)(a1 + 160) = v36;
    goto LABEL_17;
  }
  long long v16 = *(_OWORD *)(a2 + 136);
  *uint64_t v12 = *v13;
  *(_OWORD *)(a1 + 136) = v16;
  long long v17 = *(_OWORD *)(a2 + 152);
  long long v18 = *(_OWORD *)(a2 + 168);
  long long v19 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v19;
  *(_OWORD *)(a1 + 152) = v17;
  *(_OWORD *)(a1 + 168) = v18;
  return a1;
}

uint64_t sub_21938DDB0(uint64_t a1)
{
  return a1;
}

uint64_t sub_21938DE04(uint64_t a1)
{
  return a1;
}

uint64_t sub_21938DE58(uint64_t a1)
{
  return a1;
}

uint64_t sub_21938DEAC(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy216_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 192);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for ASCTAPAuthenticatorMakeCredentialCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_219348A70(v4, v5);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a1 + 64);
  unint64_t v10 = *(void *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  sub_219348A70(v9, v10);
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  uint64_t v12 = (_OWORD *)(a1 + 120);
  uint64_t v13 = (_OWORD *)(a2 + 120);
  uint64_t v14 = *(void *)(a1 + 128);
  if (v14 == 2) {
    goto LABEL_4;
  }
  uint64_t v15 = *(void *)(a2 + 128);
  if (v15 != 2)
  {
    if (v14 == 1)
    {
LABEL_8:
      long long v19 = *(_OWORD *)(a2 + 136);
      *uint64_t v12 = *v13;
      *(_OWORD *)(a1 + 136) = v19;
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
      goto LABEL_15;
    }
    if (v15 == 1)
    {
      sub_21938DDB0(a1 + 120);
      goto LABEL_8;
    }
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v15;
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    long long v20 = (void *)(a2 + 144);
    unint64_t v21 = *(void *)(a1 + 152);
    if (v21 >> 60 != 15)
    {
      unint64_t v22 = *(void *)(a2 + 152);
      if (v22 >> 60 != 15)
      {
        uint64_t v23 = *(void *)(a1 + 144);
        *(void *)(a1 + 144) = *v20;
        *(void *)(a1 + 152) = v22;
        sub_219348A70(v23, v21);
        goto LABEL_14;
      }
      sub_21934DFD8(a1 + 144);
    }
    *(_OWORD *)(a1 + 144) = *(_OWORD *)v20;
LABEL_14:
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
LABEL_15:
    long long v24 = (_OWORD *)(a1 + 176);
    long long v25 = (_OWORD *)(a2 + 176);
    if (*(void *)(a1 + 208) == 1)
    {
LABEL_18:
      long long v27 = *(_OWORD *)(a2 + 192);
      *long long v24 = *v25;
      *(_OWORD *)(a1 + 192) = v27;
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      return a1;
    }
    uint64_t v26 = *(void *)(a2 + 208);
    if (v26 == 1)
    {
      sub_21938DE58(a1 + 176);
      goto LABEL_18;
    }
    unint64_t v28 = *(void *)(a1 + 184);
    if (v28 >> 60 != 15)
    {
      unint64_t v29 = *(void *)(a2 + 184);
      if (v29 >> 60 != 15)
      {
        uint64_t v31 = *(void *)(a1 + 176);
        *(void *)(a1 + 176) = *(void *)(a2 + 176);
        *(void *)(a1 + 184) = v29;
        sub_219348A70(v31, v28);
        long long v32 = (void *)(a2 + 192);
        unint64_t v33 = *(void *)(a1 + 200);
        if (v33 >> 60 != 15)
        {
          unint64_t v34 = *(void *)(a2 + 200);
          if (v34 >> 60 != 15)
          {
            uint64_t v35 = *(void *)(a1 + 192);
            *(void *)(a1 + 192) = *v32;
            *(void *)(a1 + 200) = v34;
            sub_219348A70(v35, v33);
            goto LABEL_28;
          }
          sub_21934DFD8(a1 + 192);
        }
        *(_OWORD *)(a1 + 192) = *(_OWORD *)v32;
LABEL_28:
        *(void *)(a1 + 208) = v26;
        swift_bridgeObjectRelease();
        return a1;
      }
      sub_21938DE04(a1 + 176);
    }
    long long v30 = *(_OWORD *)(a2 + 192);
    *long long v24 = *v25;
    *(_OWORD *)(a1 + 192) = v30;
    goto LABEL_28;
  }
  sub_21938DEAC(a1 + 120);
LABEL_4:
  long long v16 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v16;
  long long v17 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v17;
  long long v18 = *(_OWORD *)(a2 + 136);
  *uint64_t v12 = *v13;
  *(_OWORD *)(a1 + 136) = v18;
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCTAPAuthenticatorMakeCredentialCommand(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 216)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASCTAPAuthenticatorMakeCredentialCommand(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 216) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 216) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPAuthenticatorMakeCredentialCommand()
{
  return &type metadata for ASCTAPAuthenticatorMakeCredentialCommand;
}

unsigned char *storeEnumTagSinglePayload for ASCTAPAuthenticatorMakeCredentialCommand.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21938E368);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPAuthenticatorMakeCredentialCommand.CodingKeys()
{
  return &type metadata for ASCTAPAuthenticatorMakeCredentialCommand.CodingKeys;
}

uint64_t destroy for ASCTAPAuthenticatorGetAssertionCommand(void *a1)
{
  swift_bridgeObjectRelease();
  sub_219348A70(a1[2], a1[3]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = a1[7];
  if (result != 1)
  {
    if (result == 2) {
      return result;
    }
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v3 = a1[10];
    if (v3 >> 60 != 15) {
      uint64_t result = sub_219348A70(a1[9], v3);
    }
  }
  if (a1[17] != 1)
  {
    unint64_t v4 = a1[14];
    if (v4 >> 60 != 15)
    {
      sub_219348A70(a1[13], v4);
      unint64_t v5 = a1[16];
      if (v5 >> 60 != 15) {
        sub_219348A70(a1[15], v5);
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ASCTAPAuthenticatorGetAssertionCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_21934CDF0(v5, v6);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = (_OWORD *)(a1 + 48);
  uint64_t v9 = (_OWORD *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 == 1)
  {
    long long v14 = *(_OWORD *)(a2 + 64);
    *uint64_t v8 = *v9;
    *(_OWORD *)(a1 + 64) = v14;
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  }
  else
  {
    if (v10 == 2)
    {
      long long v11 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v11;
      long long v12 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v12;
      long long v13 = *(_OWORD *)(a2 + 64);
      *uint64_t v8 = *v9;
      *(_OWORD *)(a1 + 64) = v13;
      return a1;
    }
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v10;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    uint64_t v15 = (uint64_t *)(a2 + 72);
    unint64_t v16 = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
    if (v16 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 72) = *(_OWORD *)v15;
    }
    else
    {
      uint64_t v17 = *v15;
      sub_21934CDF0(*v15, v16);
      *(void *)(a1 + 72) = v17;
      *(void *)(a1 + 80) = v16;
    }
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  }
  long long v18 = (_OWORD *)(a1 + 104);
  long long v19 = (_OWORD *)(a2 + 104);
  uint64_t v20 = *(void *)(a2 + 136);
  if (v20 == 1)
  {
    long long v21 = *(_OWORD *)(a2 + 120);
    _OWORD *v18 = *v19;
    *(_OWORD *)(a1 + 120) = v21;
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
  }
  else
  {
    unint64_t v22 = *(void *)(a2 + 112);
    if (v22 >> 60 == 15)
    {
      long long v23 = *(_OWORD *)(a2 + 120);
      _OWORD *v18 = *v19;
      *(_OWORD *)(a1 + 120) = v23;
    }
    else
    {
      uint64_t v24 = *(void *)(a2 + 104);
      sub_21934CDF0(v24, *(void *)(a2 + 112));
      *(void *)(a1 + 104) = v24;
      *(void *)(a1 + 112) = v22;
      long long v25 = (uint64_t *)(a2 + 120);
      unint64_t v26 = *(void *)(a2 + 128);
      if (v26 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 120) = *(_OWORD *)v25;
      }
      else
      {
        uint64_t v27 = *v25;
        sub_21934CDF0(*v25, v26);
        *(void *)(a1 + 120) = v27;
        *(void *)(a1 + 128) = v26;
      }
    }
    *(void *)(a1 + 136) = v20;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for ASCTAPAuthenticatorGetAssertionCommand(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  unint64_t v5 = *(void *)(a2 + 24);
  sub_21934CDF0(v4, v5);
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  sub_219348A70(v6, v7);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = (_OWORD *)(a1 + 48);
  uint64_t v9 = (_OWORD *)(a2 + 48);
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v11 = *(void *)(a2 + 56);
  if (v10 != 2)
  {
    if (v11 == 2)
    {
      sub_21938DEAC(a1 + 48);
      long long v16 = *(_OWORD *)(a2 + 64);
      *uint64_t v8 = *v9;
      *(_OWORD *)(a1 + 64) = v16;
      long long v17 = *(_OWORD *)(a2 + 128);
      long long v19 = *(_OWORD *)(a2 + 80);
      long long v18 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v17;
      *(_OWORD *)(a1 + 80) = v19;
      *(_OWORD *)(a1 + 96) = v18;
      return a1;
    }
    if (v10 == 1)
    {
      if (v11 == 1)
      {
        long long v20 = *v9;
        long long v21 = *(_OWORD *)(a2 + 64);
        long long v22 = *(_OWORD *)(a2 + 80);
        *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
        *(_OWORD *)(a1 + 64) = v21;
        *(_OWORD *)(a1 + 80) = v22;
        *uint64_t v8 = v20;
        goto LABEL_34;
      }
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      long long v40 = (_OWORD *)(a2 + 72);
      unint64_t v41 = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      if (v41 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 72) = *v40;
LABEL_33:
        uint64_t v47 = *(void *)(a2 + 88);
        *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
        *(void *)(a1 + 88) = v47;
LABEL_34:
        uint64_t v48 = (long long *)(a1 + 104);
        uint64_t v49 = (long long *)(a2 + 104);
        uint64_t v50 = *(void *)(a2 + 136);
        if (*(void *)(a1 + 136) == 1)
        {
          if (v50 == 1)
          {
            long long v51 = *v49;
            long long v52 = *(_OWORD *)(a2 + 120);
            *(void *)(a1 + 136) = *(void *)(a2 + 136);
            *uint64_t v48 = v51;
            *(_OWORD *)(a1 + 120) = v52;
            return a1;
          }
          unint64_t v55 = *(void *)(a2 + 112);
          if (v55 >> 60 == 15)
          {
            long long v56 = *(_OWORD *)(a2 + 120);
            *uint64_t v48 = *v49;
            *(_OWORD *)(a1 + 120) = v56;
            goto LABEL_48;
          }
          uint64_t v59 = *(void *)(a2 + 104);
          sub_21934CDF0(v59, *(void *)(a2 + 112));
          *(void *)(a1 + 104) = v59;
          *(void *)(a1 + 112) = v55;
LABEL_45:
          long long v60 = (uint64_t *)(a2 + 120);
          unint64_t v61 = *(void *)(a2 + 128);
          if (v61 >> 60 == 15)
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)v60;
          }
          else
          {
            uint64_t v62 = *v60;
            sub_21934CDF0(*v60, *(void *)(a2 + 128));
            *(void *)(a1 + 120) = v62;
            *(void *)(a1 + 128) = v61;
          }
          goto LABEL_48;
        }
        if (v50 == 1)
        {
          sub_21938DE58(a1 + 104);
          uint64_t v53 = *(void *)(a2 + 136);
          long long v54 = *(_OWORD *)(a2 + 120);
          *uint64_t v48 = *v49;
          *(_OWORD *)(a1 + 120) = v54;
          *(void *)(a1 + 136) = v53;
          return a1;
        }
        unint64_t v57 = *(void *)(a2 + 112);
        if (*(void *)(a1 + 112) >> 60 == 15)
        {
          if (v57 >> 60 == 15)
          {
            long long v58 = *(_OWORD *)(a2 + 120);
            *uint64_t v48 = *v49;
            *(_OWORD *)(a1 + 120) = v58;
LABEL_62:
            *(void *)(a1 + 136) = *(void *)(a2 + 136);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            return a1;
          }
          uint64_t v64 = *(void *)(a2 + 104);
          sub_21934CDF0(v64, *(void *)(a2 + 112));
          *(void *)(a1 + 104) = v64;
          *(void *)(a1 + 112) = v57;
          unint64_t v65 = (_OWORD *)(a2 + 120);
          unint64_t v66 = *(void *)(a2 + 128);
          if (v66 >> 60 == 15)
          {
            *(_OWORD *)(a1 + 120) = *v65;
            goto LABEL_62;
          }
          uint64_t v71 = *(void *)v65;
LABEL_57:
          sub_21934CDF0(v71, v66);
          *(void *)(a1 + 120) = v71;
          *(void *)(a1 + 128) = v66;
          goto LABEL_62;
        }
        if (v57 >> 60 == 15)
        {
          sub_21938DE04(a1 + 104);
          long long v63 = *(_OWORD *)(a2 + 120);
          *uint64_t v48 = *v49;
          *(_OWORD *)(a1 + 120) = v63;
          goto LABEL_62;
        }
        uint64_t v67 = *(void *)(a2 + 104);
        sub_21934CDF0(v67, *(void *)(a2 + 112));
        uint64_t v68 = *(void *)(a1 + 104);
        unint64_t v69 = *(void *)(a1 + 112);
        *(void *)(a1 + 104) = v67;
        *(void *)(a1 + 112) = v57;
        sub_219348A70(v68, v69);
        unint64_t v70 = (uint64_t *)(a2 + 120);
        unint64_t v66 = *(void *)(a2 + 128);
        if (*(void *)(a1 + 128) >> 60 == 15)
        {
          if (v66 >> 60 != 15)
          {
            uint64_t v71 = *v70;
            goto LABEL_57;
          }
        }
        else
        {
          if (v66 >> 60 != 15)
          {
            uint64_t v72 = *v70;
            sub_21934CDF0(*v70, *(void *)(a2 + 128));
            uint64_t v73 = *(void *)(a1 + 120);
            unint64_t v74 = *(void *)(a1 + 128);
            *(void *)(a1 + 120) = v72;
            *(void *)(a1 + 128) = v66;
            sub_219348A70(v73, v74);
            goto LABEL_62;
          }
          sub_21934DFD8(a1 + 120);
        }
        *(_OWORD *)(a1 + 120) = *(_OWORD *)v70;
        goto LABEL_62;
      }
      uint64_t v43 = *(void *)v40;
LABEL_28:
      sub_21934CDF0(v43, v41);
      *(void *)(a1 + 72) = v43;
      *(void *)(a1 + 80) = v41;
      goto LABEL_33;
    }
    if (v11 == 1)
    {
      sub_21938DDB0(a1 + 48);
      long long v29 = *(_OWORD *)(a2 + 64);
      long long v28 = *(_OWORD *)(a2 + 80);
      long long v30 = *v9;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      *(_OWORD *)(a1 + 64) = v29;
      *(_OWORD *)(a1 + 80) = v28;
      *uint64_t v8 = v30;
      goto LABEL_34;
    }
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    long long v42 = (uint64_t *)(a2 + 72);
    unint64_t v41 = *(void *)(a2 + 80);
    if (*(void *)(a1 + 80) >> 60 == 15)
    {
      if (v41 >> 60 != 15)
      {
        uint64_t v43 = *v42;
        goto LABEL_28;
      }
    }
    else
    {
      if (v41 >> 60 != 15)
      {
        uint64_t v44 = *v42;
        sub_21934CDF0(*v42, *(void *)(a2 + 80));
        uint64_t v45 = *(void *)(a1 + 72);
        unint64_t v46 = *(void *)(a1 + 80);
        *(void *)(a1 + 72) = v44;
        *(void *)(a1 + 80) = v41;
        sub_219348A70(v45, v46);
        goto LABEL_33;
      }
      sub_21934DFD8(a1 + 72);
    }
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v42;
    goto LABEL_33;
  }
  if (v11 == 1)
  {
    long long v23 = *v9;
    long long v24 = *(_OWORD *)(a2 + 64);
    long long v25 = *(_OWORD *)(a2 + 80);
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *(_OWORD *)(a1 + 64) = v24;
    *(_OWORD *)(a1 + 80) = v25;
    *uint64_t v8 = v23;
LABEL_17:
    unint64_t v33 = (long long *)(a1 + 104);
    unint64_t v34 = (long long *)(a2 + 104);
    if (*(void *)(a2 + 136) == 1)
    {
      long long v35 = *v34;
      long long v36 = *(_OWORD *)(a2 + 120);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *unint64_t v33 = v35;
      *(_OWORD *)(a1 + 120) = v36;
      return a1;
    }
    unint64_t v37 = *(void *)(a2 + 112);
    if (v37 >> 60 == 15)
    {
      long long v38 = *(_OWORD *)(a2 + 120);
      *unint64_t v33 = *v34;
      *(_OWORD *)(a1 + 120) = v38;
LABEL_48:
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      return a1;
    }
    uint64_t v39 = *(void *)(a2 + 104);
    sub_21934CDF0(v39, *(void *)(a2 + 112));
    *(void *)(a1 + 104) = v39;
    *(void *)(a1 + 112) = v37;
    goto LABEL_45;
  }
  if (v11 != 2)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    unint64_t v26 = (_OWORD *)(a2 + 72);
    unint64_t v27 = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
    if (v27 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 72) = *v26;
    }
    else
    {
      uint64_t v31 = *(void *)v26;
      sub_21934CDF0(v31, v27);
      *(void *)(a1 + 72) = v31;
      *(void *)(a1 + 80) = v27;
    }
    uint64_t v32 = *(void *)(a2 + 88);
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *(void *)(a1 + 88) = v32;
    goto LABEL_17;
  }
  long long v12 = *(_OWORD *)(a2 + 64);
  *uint64_t v8 = *v9;
  *(_OWORD *)(a1 + 64) = v12;
  long long v13 = *(_OWORD *)(a2 + 80);
  long long v14 = *(_OWORD *)(a2 + 96);
  long long v15 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v15;
  *(_OWORD *)(a1 + 80) = v13;
  *(_OWORD *)(a1 + 96) = v14;
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for ASCTAPAuthenticatorGetAssertionCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v6 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_219348A70(v5, v6);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  long long v7 = (_OWORD *)(a1 + 48);
  uint64_t v8 = (_OWORD *)(a2 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  if (v9 == 2) {
    goto LABEL_4;
  }
  uint64_t v10 = *(void *)(a2 + 56);
  if (v10 != 2)
  {
    if (v9 == 1)
    {
LABEL_8:
      long long v14 = *(_OWORD *)(a2 + 64);
      _OWORD *v7 = *v8;
      *(_OWORD *)(a1 + 64) = v14;
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      goto LABEL_15;
    }
    if (v10 == 1)
    {
      sub_21938DDB0(a1 + 48);
      goto LABEL_8;
    }
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v10;
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    long long v15 = (void *)(a2 + 72);
    unint64_t v16 = *(void *)(a1 + 80);
    if (v16 >> 60 != 15)
    {
      unint64_t v17 = *(void *)(a2 + 80);
      if (v17 >> 60 != 15)
      {
        uint64_t v18 = *(void *)(a1 + 72);
        *(void *)(a1 + 72) = *v15;
        *(void *)(a1 + 80) = v17;
        sub_219348A70(v18, v16);
        goto LABEL_14;
      }
      sub_21934DFD8(a1 + 72);
    }
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v15;
LABEL_14:
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
LABEL_15:
    long long v19 = (_OWORD *)(a1 + 104);
    long long v20 = (_OWORD *)(a2 + 104);
    if (*(void *)(a1 + 136) == 1)
    {
LABEL_18:
      long long v22 = *(_OWORD *)(a2 + 120);
      _OWORD *v19 = *v20;
      *(_OWORD *)(a1 + 120) = v22;
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      return a1;
    }
    uint64_t v21 = *(void *)(a2 + 136);
    if (v21 == 1)
    {
      sub_21938DE58(a1 + 104);
      goto LABEL_18;
    }
    unint64_t v23 = *(void *)(a1 + 112);
    if (v23 >> 60 != 15)
    {
      unint64_t v24 = *(void *)(a2 + 112);
      if (v24 >> 60 != 15)
      {
        uint64_t v26 = *(void *)(a1 + 104);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = v24;
        sub_219348A70(v26, v23);
        unint64_t v27 = (void *)(a2 + 120);
        unint64_t v28 = *(void *)(a1 + 128);
        if (v28 >> 60 != 15)
        {
          unint64_t v29 = *(void *)(a2 + 128);
          if (v29 >> 60 != 15)
          {
            uint64_t v30 = *(void *)(a1 + 120);
            *(void *)(a1 + 120) = *v27;
            *(void *)(a1 + 128) = v29;
            sub_219348A70(v30, v28);
            goto LABEL_28;
          }
          sub_21934DFD8(a1 + 120);
        }
        *(_OWORD *)(a1 + 120) = *(_OWORD *)v27;
LABEL_28:
        *(void *)(a1 + 136) = v21;
        swift_bridgeObjectRelease();
        return a1;
      }
      sub_21938DE04(a1 + 104);
    }
    long long v25 = *(_OWORD *)(a2 + 120);
    _OWORD *v19 = *v20;
    *(_OWORD *)(a1 + 120) = v25;
    goto LABEL_28;
  }
  sub_21938DEAC(a1 + 48);
LABEL_4:
  long long v11 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v11;
  long long v12 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v12;
  long long v13 = *(_OWORD *)(a2 + 64);
  _OWORD *v7 = *v8;
  *(_OWORD *)(a1 + 64) = v13;
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCTAPAuthenticatorGetAssertionCommand(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASCTAPAuthenticatorGetAssertionCommand(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPAuthenticatorGetAssertionCommand()
{
  return &type metadata for ASCTAPAuthenticatorGetAssertionCommand;
}

unsigned char *storeEnumTagSinglePayload for ASCTAPAuthenticatorGetAssertionCommand.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21938EF5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPAuthenticatorGetAssertionCommand.CodingKeys()
{
  return &type metadata for ASCTAPAuthenticatorGetAssertionCommand.CodingKeys;
}

void destroy for ASCTAPCommand(uint64_t a1)
{
  sub_21935C6B8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(unsigned char *)(a1 + 216));
}

uint64_t initializeWithCopy for ASCTAPCommand(uint64_t a1, uint64_t a2)
{
  unint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 112);
  uint64_t v19 = *(void *)(a2 + 120);
  uint64_t v20 = *(void *)(a2 + 128);
  uint64_t v21 = *(void *)(a2 + 136);
  uint64_t v22 = *(void *)(a2 + 144);
  uint64_t v23 = *(void *)(a2 + 152);
  uint64_t v24 = *(void *)(a2 + 160);
  uint64_t v25 = *(void *)(a2 + 168);
  uint64_t v26 = *(void *)(a2 + 176);
  uint64_t v27 = *(void *)(a2 + 184);
  uint64_t v28 = *(void *)(a2 + 192);
  uint64_t v29 = *(void *)(a2 + 200);
  uint64_t v30 = *(void *)(a2 + 208);
  char v31 = *(unsigned char *)(a2 + 216);
  uint64_t v3 = *(void *)(a2 + 64);
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  unint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  sub_21935BF90(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v3, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v3;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = v18;
  *(void *)(a1 + 120) = v19;
  *(void *)(a1 + 128) = v20;
  *(void *)(a1 + 136) = v21;
  *(void *)(a1 + 144) = v22;
  *(void *)(a1 + 152) = v23;
  *(void *)(a1 + 160) = v24;
  *(void *)(a1 + 168) = v25;
  *(void *)(a1 + 176) = v26;
  *(void *)(a1 + 184) = v27;
  *(void *)(a1 + 192) = v28;
  *(void *)(a1 + 200) = v29;
  *(void *)(a1 + 208) = v30;
  *(unsigned char *)(a1 + 216) = v31;
  return a1;
}

uint64_t assignWithCopy for ASCTAPCommand(uint64_t a1, uint64_t a2)
{
  unint64_t v32 = *(void *)(a2 + 72);
  uint64_t v33 = *(void *)(a2 + 80);
  uint64_t v34 = *(void *)(a2 + 88);
  uint64_t v35 = *(void *)(a2 + 96);
  uint64_t v36 = *(void *)(a2 + 104);
  uint64_t v37 = *(void *)(a2 + 112);
  uint64_t v38 = *(void *)(a2 + 120);
  uint64_t v39 = *(void *)(a2 + 128);
  uint64_t v40 = *(void *)(a2 + 136);
  uint64_t v41 = *(void *)(a2 + 144);
  uint64_t v42 = *(void *)(a2 + 152);
  uint64_t v43 = *(void *)(a2 + 160);
  uint64_t v44 = *(void *)(a2 + 168);
  uint64_t v45 = *(void *)(a2 + 176);
  uint64_t v46 = *(void *)(a2 + 184);
  uint64_t v47 = *(void *)(a2 + 192);
  uint64_t v48 = *(void *)(a2 + 200);
  uint64_t v49 = *(void *)(a2 + 208);
  char v50 = *(unsigned char *)(a2 + 216);
  uint64_t v3 = *(void *)(a2 + 64);
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  unint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  sub_21935BF90(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v3, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50);
  uint64_t v12 = *(void *)a1;
  unint64_t v13 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v14 = *(void *)(a1 + 16);
  unint64_t v15 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  *(void *)(a1 + 64) = v3;
  *(void *)(a1 + 72) = v32;
  *(void *)(a1 + 80) = v33;
  *(void *)(a1 + 88) = v34;
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  *(void *)(a1 + 96) = v35;
  *(void *)(a1 + 104) = v36;
  *(void *)(a1 + 112) = v37;
  *(void *)(a1 + 120) = v38;
  long long v24 = *(_OWORD *)(a1 + 128);
  long long v25 = *(_OWORD *)(a1 + 144);
  *(void *)(a1 + 128) = v39;
  *(void *)(a1 + 136) = v40;
  *(void *)(a1 + 144) = v41;
  *(void *)(a1 + 152) = v42;
  long long v26 = *(_OWORD *)(a1 + 160);
  long long v27 = *(_OWORD *)(a1 + 176);
  *(void *)(a1 + 160) = v43;
  *(void *)(a1 + 168) = v44;
  *(void *)(a1 + 176) = v45;
  *(void *)(a1 + 184) = v46;
  long long v28 = *(_OWORD *)(a1 + 192);
  *(void *)(a1 + 192) = v47;
  *(void *)(a1 + 200) = v48;
  uint64_t v29 = *(void *)(a1 + 208);
  *(void *)(a1 + 208) = v49;
  char v30 = *(unsigned char *)(a1 + 216);
  *(unsigned char *)(a1 + 216) = v50;
  sub_21935C6B8(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((unint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    v30);
  return a1;
}

__n128 __swift_memcpy217_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 201) = *(_OWORD *)(a2 + 201);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for ASCTAPCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 208);
  char v5 = *(unsigned char *)(a2 + 216);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  unint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 56);
  long long v14 = *(_OWORD *)(a1 + 64);
  long long v15 = *(_OWORD *)(a1 + 80);
  long long v16 = *(_OWORD *)(a1 + 96);
  long long v17 = *(_OWORD *)(a1 + 112);
  long long v18 = *(_OWORD *)(a1 + 128);
  long long v19 = *(_OWORD *)(a1 + 144);
  long long v20 = *(_OWORD *)(a1 + 160);
  long long v21 = *(_OWORD *)(a1 + 176);
  long long v22 = *(_OWORD *)(a1 + 192);
  uint64_t v23 = *(void *)(a1 + 208);
  char v24 = *(unsigned char *)(a1 + 216);
  long long v25 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v25;
  long long v26 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v26;
  long long v27 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v27;
  long long v28 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v28;
  long long v29 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v29;
  long long v30 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v30;
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(void *)(a1 + 208) = v4;
  *(unsigned char *)(a1 + 216) = v5;
  sub_21935C6B8(v6, v7, v8, v9, v10, v11, v12, v13, v14, *((unint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    v24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCTAPCommand(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 217)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 216);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ASCTAPCommand(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 216) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 217) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 217) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 216) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_21938F53C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 216) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPCommand()
{
  return &type metadata for ASCTAPCommand;
}

uint64_t sub_21938F558(uint64_t a1, uint64_t a2)
{
  sub_21935BE78(a1, (uint64_t)v61);
  sub_21935BE78(a2, (uint64_t)v62);
  sub_21935BE78((uint64_t)v61, (uint64_t)v63);
  sub_21935BE78((uint64_t)v62, (uint64_t)&v64);
  sub_21935BE78((uint64_t)v61, (uint64_t)v65);
  if (sub_21935BED4((uint64_t)v65) == 1)
  {
    unsigned int v3 = (long long *)nullsub_1(v65);
    sub_21935BE78((uint64_t)v62, (uint64_t)v60);
    int v4 = sub_21935BED4((uint64_t)v60);
    char v5 = (long long *)nullsub_1(v60);
    if (v4 == 1)
    {
      long long v6 = v3[7];
      long long v52 = v3[6];
      long long v53 = v6;
      long long v54 = v3[8];
      long long v7 = v3[3];
      long long v48 = v3[2];
      long long v49 = v7;
      long long v8 = v3[5];
      long long v50 = v3[4];
      long long v51 = v8;
      long long v9 = v3[1];
      long long v46 = *v3;
      long long v47 = v9;
      long long v10 = v5[7];
      long long v38 = v5[6];
      long long v39 = v10;
      long long v40 = v5[8];
      long long v11 = v5[3];
      long long v34 = v5[2];
      long long v35 = v11;
      long long v12 = v5[5];
      long long v36 = v5[4];
      long long v37 = v12;
      long long v13 = v5[1];
      long long v32 = *v5;
      long long v33 = v13;
      sub_21938F994((uint64_t)v62, sub_21935BF90);
      sub_21938F994((uint64_t)v61, sub_21935BF90);
      sub_21938F994((uint64_t)v61, sub_21935BF90);
      sub_21938F994((uint64_t)v62, sub_21935BF90);
      char AssertionCommandV2eeoiySbAC_ACtFZ_0 = _s26AuthenticationServicesCore38ASCTAPAuthenticatorGetAssertionCommandV2eeoiySbAC_ACtFZ_0(&v46, &v32);
LABEL_7:
      char v18 = AssertionCommandV2eeoiySbAC_ACtFZ_0;
      sub_21938F828((uint64_t)v63);
      sub_21938F994((uint64_t)v62, sub_21935C6B8);
      sub_21938F994((uint64_t)v61, sub_21935C6B8);
      return v18 & 1;
    }
  }
  else
  {
    uint64_t v15 = nullsub_1(v65);
    sub_21935BE78((uint64_t)v62, (uint64_t)v60);
    int v16 = sub_21935BED4((uint64_t)v60);
    uint64_t v17 = nullsub_1(v60);
    if (v16 != 1)
    {
      long long v19 = *(_OWORD *)(v15 + 176);
      long long v56 = *(_OWORD *)(v15 + 160);
      long long v57 = v19;
      long long v58 = *(_OWORD *)(v15 + 192);
      uint64_t v59 = *(void *)(v15 + 208);
      long long v20 = *(_OWORD *)(v15 + 112);
      long long v52 = *(_OWORD *)(v15 + 96);
      long long v53 = v20;
      long long v21 = *(_OWORD *)(v15 + 144);
      long long v54 = *(_OWORD *)(v15 + 128);
      long long v55 = v21;
      long long v22 = *(_OWORD *)(v15 + 48);
      long long v48 = *(_OWORD *)(v15 + 32);
      long long v49 = v22;
      long long v23 = *(_OWORD *)(v15 + 80);
      long long v50 = *(_OWORD *)(v15 + 64);
      long long v51 = v23;
      long long v24 = *(_OWORD *)(v15 + 16);
      long long v46 = *(_OWORD *)v15;
      long long v47 = v24;
      long long v25 = *(_OWORD *)(v17 + 176);
      long long v42 = *(_OWORD *)(v17 + 160);
      long long v43 = v25;
      long long v44 = *(_OWORD *)(v17 + 192);
      uint64_t v45 = *(void *)(v17 + 208);
      long long v26 = *(_OWORD *)(v17 + 112);
      long long v38 = *(_OWORD *)(v17 + 96);
      long long v39 = v26;
      long long v27 = *(_OWORD *)(v17 + 144);
      long long v40 = *(_OWORD *)(v17 + 128);
      long long v41 = v27;
      long long v28 = *(_OWORD *)(v17 + 48);
      long long v34 = *(_OWORD *)(v17 + 32);
      long long v35 = v28;
      long long v29 = *(_OWORD *)(v17 + 80);
      long long v36 = *(_OWORD *)(v17 + 64);
      long long v37 = v29;
      long long v30 = *(_OWORD *)(v17 + 16);
      long long v32 = *(_OWORD *)v17;
      long long v33 = v30;
      sub_21938F994((uint64_t)v62, sub_21935BF90);
      sub_21938F994((uint64_t)v61, sub_21935BF90);
      sub_21938F994((uint64_t)v61, sub_21935BF90);
      sub_21938F994((uint64_t)v62, sub_21935BF90);
      char AssertionCommandV2eeoiySbAC_ACtFZ_0 = _s26AuthenticationServicesCore40ASCTAPAuthenticatorMakeCredentialCommandV2eeoiySbAC_ACtFZ_0((uint64_t *)&v46, (uint64_t *)&v32);
      goto LABEL_7;
    }
  }
  sub_21938F994((uint64_t)v61, sub_21935BF90);
  sub_21938F994((uint64_t)v62, sub_21935BF90);
  sub_21938F828((uint64_t)v63);
  char v18 = 0;
  return v18 & 1;
}

uint64_t sub_21938F828(uint64_t a1)
{
  uint64_t v21 = *(void *)(a1 + 224);
  unint64_t v2 = *(void *)(a1 + 232);
  uint64_t v3 = *(void *)(a1 + 240);
  unint64_t v4 = *(void *)(a1 + 248);
  uint64_t v5 = *(void *)(a1 + 256);
  uint64_t v6 = *(void *)(a1 + 264);
  uint64_t v7 = *(void *)(a1 + 272);
  uint64_t v8 = *(void *)(a1 + 280);
  long long v19 = *(_OWORD *)(a1 + 304);
  long long v20 = *(_OWORD *)(a1 + 288);
  long long v17 = *(_OWORD *)(a1 + 336);
  long long v18 = *(_OWORD *)(a1 + 320);
  long long v15 = *(_OWORD *)(a1 + 368);
  long long v16 = *(_OWORD *)(a1 + 352);
  long long v13 = *(_OWORD *)(a1 + 400);
  long long v14 = *(_OWORD *)(a1 + 384);
  long long v12 = *(_OWORD *)(a1 + 416);
  uint64_t v9 = *(void *)(a1 + 432);
  char v10 = *(unsigned char *)(a1 + 440);
  sub_21935C6B8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(unsigned char *)(a1 + 216));
  sub_21935C6B8(v21, v2, v3, v4, v5, v6, v7, v8, v20, *((unint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v9,
    v10);
  return a1;
}

uint64_t sub_21938F994(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 216);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    v4);
  return a1;
}

unint64_t sub_21938FA18()
{
  unint64_t result = qword_267C19648;
  if (!qword_267C19648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19648);
  }
  return result;
}

unint64_t sub_21938FA6C()
{
  unint64_t result = qword_267C19650;
  if (!qword_267C19650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19650);
  }
  return result;
}

uint64_t sub_21938FAC0(uint64_t result)
{
  *(unsigned char *)(result + 216) = 1;
  return result;
}

unint64_t sub_21938FACC()
{
  unint64_t result = qword_267C19658;
  if (!qword_267C19658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19658);
  }
  return result;
}

uint64_t sub_21938FB20(uint64_t result)
{
  *(unsigned char *)(result + 216) = 0;
  return result;
}

uint64_t sub_21938FB28(uint64_t a1)
{
  uint64_t v12 = *(void *)(a1 + 104);
  uint64_t v13 = *(void *)(a1 + 96);
  uint64_t v2 = *(void *)(a1 + 120);
  uint64_t v11 = *(void *)(a1 + 112);
  uint64_t v3 = *(void *)(a1 + 128);
  uint64_t v4 = *(void *)(a1 + 136);
  uint64_t v5 = *(void *)(a1 + 144);
  uint64_t v6 = *(void *)(a1 + 152);
  long long v10 = *(_OWORD *)(a1 + 160);
  uint64_t v7 = *(void *)(a1 + 176);
  uint64_t v8 = *(void *)(a1 + 184);
  sub_21938C824(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), (void (*)(void))sub_21934CEC4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21934CF14);
  sub_21938C824(v13, v12, v11, v2, v3, v4, v5, v6, v10, *((uint64_t *)&v10 + 1), v7, v8, (void (*)(void))sub_21934CEC4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21934CF14);
  return a1;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t sub_21938FC38(unsigned __int8 *a1)
{
  if (a1[1]) {
    return (*a1 | (a1[1] << 8)) - 255;
  }
  else {
    return 0;
  }
}

unsigned char *sub_21938FC58(unsigned char *result, int a2)
{
  if (a2)
  {
    *unint64_t result = a2 - 1;
    result[1] = ((unsigned __int16)(a2 - 1) >> 8) + 1;
  }
  else
  {
    result[1] = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPCommandDecodingError()
{
  return &type metadata for ASCTAPCommandDecodingError;
}

uint64_t _s26AuthenticationServicesCore26ASCTAPCommandDecodingErrorOwet_0(unsigned __int16 *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  unsigned int v2 = a2 + 0xFFFF;
  if ((a2 + 0xFFFF) <= 0xFFFEFFFF) {
    unsigned int v3 = 2;
  }
  else {
    unsigned int v3 = 4;
  }
  if (v2 < 0xFF0000) {
    unsigned int v3 = 1;
  }
  if (v2 >= 0x10000) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  switch(v4)
  {
    case 1:
      uint64_t v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((unsigned char *)a1 + 2)) {
        return v4;
      }
      goto LABEL_17;
    case 2:
      uint64_t v4 = a1[1];
      if (!a1[1]) {
        return v4;
      }
      goto LABEL_17;
    case 3:
      __break(1u);
      JUMPOUT(0x21938FD28);
    case 4:
      uint64_t v4 = *(unsigned int *)(a1 + 1);
      if (v4) {
LABEL_17:
      }
        uint64_t v4 = (*a1 | (v4 << 16)) - 0xFFFF;
      break;
    default:
      return v4;
  }
  return v4;
}

uint64_t _s26AuthenticationServicesCore26ASCTAPCommandDecodingErrorOwst_0(uint64_t result, int a2, int a3)
{
  unsigned int v3 = a3 + 0xFFFF;
  if ((a3 + 0xFFFF) <= 0xFFFEFFFF) {
    int v4 = 2;
  }
  else {
    int v4 = 4;
  }
  if (v3 < 0xFF0000) {
    int v4 = 1;
  }
  if (v3 >= 0x10000) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2)
  {
    unsigned int v7 = ((a2 - 1) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 1;
    switch(v6)
    {
      case 1:
        *(unsigned char *)(result + 2) = v7;
        return result;
      case 2:
        *(_WORD *)(result + 2) = v7;
        return result;
      case 3:
        goto LABEL_21;
      case 4:
        *(_DWORD *)(result + 2) = v7;
        return result;
      default:
        return result;
    }
  }
  switch(v6)
  {
    case 1:
      *(unsigned char *)(result + 2) = 0;
      break;
    case 2:
      *(_WORD *)(result + 2) = 0;
      break;
    case 3:
LABEL_21:
      __break(1u);
      JUMPOUT(0x21938FDF8);
    case 4:
      *(_DWORD *)(result + 2) = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCABLEMessageDecodingError()
{
  return &type metadata for ASCABLEMessageDecodingError;
}

__n128 ASCTAPExtensionInput.init(largeBlob:prf:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v3;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)(a1 + 32);
  __n128 result = *(__n128 *)a2;
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a3 + 56) = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 32);
  *(unsigned char *)(a3 + 48) = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(a3 + 72) = v5;
  *(void *)(a3 + 88) = v6;
  return result;
}

uint64_t ASCTAPExtensionInput.encode(for:)(char *a1)
{
  uint64_t v3 = sub_2193E2250();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *a1;
  uint64_t v8 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v31 = v1[4];
  uint64_t v32 = v8;
  uint64_t v30 = v1[5];
  int v29 = *((unsigned __int8 *)v1 + 48);
  uint64_t v12 = v1[7];
  uint64_t v27 = v1[8];
  uint64_t v28 = v12;
  uint64_t v13 = v1[9];
  uint64_t v25 = v1[10];
  uint64_t v26 = v13;
  uint64_t v24 = v1[11];
  sub_2193E22A0();
  swift_allocObject();
  sub_2193E2290();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F2BE88], v3);
  sub_2193E2260();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C19660);
  long long v14 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C19668) - 8);
  unint64_t v15 = (*(unsigned __int8 *)(*(void *)v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v14 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_2193E7190;
  uint64_t v17 = v14[14];
  if (qword_267C18A18 != -1) {
    swift_once();
  }
  unint64_t v18 = v16 + v15;
  uint64_t v19 = v16 + v15 + v17;
  uint64_t v20 = sub_2193E2E80();
  uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_267C1A320);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v21, v20);
  *(void *)(v19 + 24) = &type metadata for CodingUserInfoKey.CBOREncodingFormat;
  *(unsigned char *)uint64_t v19 = v7;
  sub_219391070(v16);
  sub_2193E2280();
  uint64_t v33 = v32;
  uint64_t v34 = v9;
  uint64_t v35 = v10;
  uint64_t v36 = v11;
  uint64_t v37 = v31;
  uint64_t v38 = v30;
  char v39 = v29;
  uint64_t v40 = v28;
  uint64_t v41 = v27;
  uint64_t v42 = v26;
  uint64_t v43 = v25;
  uint64_t v44 = v24;
  sub_21938C5C0();
  uint64_t v22 = sub_2193E2270();
  swift_release();
  return v22;
}

uint64_t ASCTAPLargeBlobExtensionInput.init(support:read:uncompressedWrite:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unint64_t v11 = a5 >> 60;
  if (a5 >> 60 != 15)
  {
    uint64_t v20 = result;
    char v21 = a3;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_2193E2010();
    if (v6)
    {
      sub_21934CEB0(a4, a5);
      return swift_bridgeObjectRelease_n();
    }
    uint64_t v13 = v15;
    unint64_t v14 = v16;
    switch(a5 >> 62)
    {
      case 1uLL:
        sub_21934CEB0(a4, a5);
        if (__OFSUB__(HIDWORD(a4), a4))
        {
          __break(1u);
        }
        else
        {
          uint64_t v12 = HIDWORD(a4) - (int)a4;
LABEL_13:
          if ((v12 & 0x8000000000000000) == 0)
          {
LABEL_14:
            swift_bridgeObjectRelease();
            a3 = v21;
            __n128 result = v20;
            goto LABEL_15;
          }
        }
        sub_2193E2EE0();
        __break(1u);
        JUMPOUT(0x219390354);
      case 2uLL:
        uint64_t v17 = *(void *)(a4 + 16);
        uint64_t v19 = *(void *)(a4 + 24);
        sub_21934CEB0(a4, a5);
        BOOL v18 = __OFSUB__(v19, v17);
        uint64_t v12 = v19 - v17;
        if (!v18) {
          goto LABEL_13;
        }
        __break(1u);
LABEL_10:
        sub_21934CEB0(a4, a5);
        uint64_t v12 = 0;
        goto LABEL_14;
      case 3uLL:
        goto LABEL_10;
      default:
        sub_21934CEB0(a4, a5);
        uint64_t v12 = BYTE6(a5);
        goto LABEL_14;
    }
  }
  uint64_t v12 = 0;
  uint64_t v13 = a4;
  unint64_t v14 = a5;
LABEL_15:
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(unsigned char *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = v13;
  *(void *)(a6 + 32) = v14;
  *(void *)(a6 + 40) = v12;
  *(unsigned char *)(a6 + 48) = v11 > 0xE;
  return result;
}

uint64_t sub_219390364(uint64_t a1)
{
  uint64_t v2 = sub_2193E2660();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  sub_2193A3248(&qword_267C199B0, MEMORY[0x263F045C0]);
  sub_2193E29D0();
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18CD0);
  uint64_t v6 = *(void *)(a1 + *(int *)(result + 36));
  if (!v6 || (unint64_t v7 = *(void *)(v19 + 16), v20 == v7))
  {
    uint64_t v8 = 0;
LABEL_4:
    sub_219360620(a1, &qword_267C18CD0);
    swift_bridgeObjectRelease();
    return v8;
  }
  if (v20 <= v7) {
    unint64_t v9 = *(void *)(v19 + 16);
  }
  else {
    unint64_t v9 = v20;
  }
  if (v20 < v7)
  {
    uint64_t v10 = v19 + 32;
    uint64_t v8 = *(unsigned __int8 *)(v19 + 32 + v20);
    unint64_t v11 = v20 + 1;
    if (v20 + 1 == v7 || v6 == 1) {
      goto LABEL_4;
    }
    if (v11 != v9)
    {
      v8 |= (unint64_t)*(unsigned __int8 *)(v10 + v11) << 8;
      unint64_t v13 = v20 + 2;
      if (v20 + 2 == v7 || v6 == 2) {
        goto LABEL_4;
      }
      if (v13 != v9)
      {
        v8 |= (unint64_t)*(unsigned __int8 *)(v10 + v13) << 16;
        unint64_t v14 = v20 + 3;
        if (v20 + 3 == v7 || v6 == 3) {
          goto LABEL_4;
        }
        if (v14 != v9)
        {
          v8 |= (unint64_t)*(unsigned __int8 *)(v10 + v14) << 24;
          unint64_t v15 = v20 + 4;
          if (v20 + 4 == v7 || v6 == 4) {
            goto LABEL_4;
          }
          if (v15 != v9)
          {
            v8 |= (unint64_t)*(unsigned __int8 *)(v10 + v15) << 32;
            unint64_t v16 = v20 + 5;
            if (v20 + 5 == v7 || v6 == 5) {
              goto LABEL_4;
            }
            if (v16 != v9)
            {
              v8 |= (unint64_t)*(unsigned __int8 *)(v10 + v16) << 40;
              unint64_t v17 = v20 + 6;
              if (v20 + 6 == v7 || v6 == 6) {
                goto LABEL_4;
              }
              if (v17 != v9)
              {
                v8 |= (unint64_t)*(unsigned __int8 *)(v10 + v17) << 48;
                unint64_t v18 = v20 + 7;
                if (v20 + 7 == v7 || v6 == 7) {
                  goto LABEL_4;
                }
                if (v18 != v9)
                {
                  v8 |= (unint64_t)*(unsigned __int8 *)(v10 + v18) << 56;
                  goto LABEL_4;
                }
              }
            }
          }
        }
      }
    }
  }
  __break(1u);
  __break(1u);
  return result;
}

uint64_t sub_2193905D0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_2193E2160();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_21934CDF0(a1, a2);
      break;
    default:
      break;
  }
  sub_2193E2170();
  sub_2193A3248(&qword_26AC276F0, MEMORY[0x263F06F40]);
  sub_2193E2BF0();
  if (v13)
  {
    uint64_t v8 = 0;
  }
  else
  {
    unsigned int v9 = v12;
    sub_2193E2BF0();
    if (v13) {
      uint64_t v8 = v9;
    }
    else {
      uint64_t v8 = v9 | (v12 << 8);
    }
  }
  sub_219348A70(a1, a2);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t sub_219390798(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_2193E2160();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_21934CDF0(a1, a2);
      break;
    default:
      break;
  }
  sub_2193E2170();
  sub_2193A3248(&qword_26AC276F0, MEMORY[0x263F06F40]);
  sub_2193E2BF0();
  if (v12)
  {
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = v11;
    sub_2193E2BF0();
    if ((v12 & 1) == 0)
    {
      v8 |= (unint64_t)v11 << 8;
      sub_2193E2BF0();
      if ((v12 & 1) == 0)
      {
        v8 |= (unint64_t)v11 << 16;
        sub_2193E2BF0();
        if ((v12 & 1) == 0)
        {
          v8 |= (unint64_t)v11 << 24;
          sub_2193E2BF0();
          if ((v12 & 1) == 0)
          {
            v8 |= (unint64_t)v11 << 32;
            sub_2193E2BF0();
            if ((v12 & 1) == 0)
            {
              v8 |= (unint64_t)v11 << 40;
              sub_2193E2BF0();
              if ((v12 & 1) == 0)
              {
                v8 |= (unint64_t)v11 << 48;
                sub_2193E2BF0();
                if ((v12 & 1) == 0) {
                  v8 |= (unint64_t)v11 << 56;
                }
              }
            }
          }
        }
      }
    }
  }
  sub_219348A70(a1, a2);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t sub_219390A24(char a1, unsigned __int16 a2)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  unsigned int v3 = a2;
  long long v15 = xmmword_2193E7210;
  char v4 = a2;
  do
  {
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C199D8);
    void v14[3] = v5;
    v14[4] = sub_219360528((unint64_t *)&qword_267C199E0, &qword_267C199D8);
    LOBYTE(v14[0]) = v4;
    __swift_project_boxed_opaque_existential_1Tm(v14, v5);
    sub_2193E20D0();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
    char v4 = BYTE1(v3);
    BOOL v6 = v3 > 0xFF;
    v3 >>= 8;
  }
  while (v6);
  uint64_t v7 = v15;
  if (a1)
  {
    uint64_t v8 = 0;
    switch(*((void *)&v15 + 1) >> 62)
    {
      case 1:
        LODWORD(v8) = DWORD1(v15) - v15;
        if (__OFSUB__(DWORD1(v15), v15)) {
          goto LABEL_18;
        }
        uint64_t v8 = (int)v8;
LABEL_11:
        int64_t v12 = 2 - v8;
        if (__OFSUB__(2, v8))
        {
          __break(1u);
LABEL_18:
          __break(1u);
LABEL_19:
          __break(1u);
        }
        if (v12 >= 1)
        {
          if (*(void *)(sub_2193DF988(0, v12) + 16))
          {
            sub_2193E20E0();
            uint64_t v7 = v15;
          }
          swift_bridgeObjectRelease();
        }
        break;
      case 2:
        uint64_t v10 = *(void *)(v15 + 16);
        uint64_t v9 = *(void *)(v15 + 24);
        BOOL v11 = __OFSUB__(v9, v10);
        uint64_t v8 = v9 - v10;
        if (!v11) {
          goto LABEL_11;
        }
        goto LABEL_19;
      case 3:
        goto LABEL_11;
      default:
        uint64_t v8 = BYTE14(v15);
        goto LABEL_11;
    }
  }
  return v7;
}

uint64_t sub_219390C48(char a1, unint64_t a2)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v14 = xmmword_2193E7210;
  do
  {
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C199D8);
    v13[3] = v4;
    void v13[4] = sub_219360528((unint64_t *)&qword_267C199E0, &qword_267C199D8);
    LOBYTE(v13[0]) = a2;
    __swift_project_boxed_opaque_existential_1Tm(v13, v4);
    sub_2193E20D0();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    BOOL v5 = a2 > 0xFF;
    a2 >>= 8;
  }
  while (v5);
  uint64_t v6 = v14;
  if (a1)
  {
    uint64_t v7 = 0;
    switch(*((void *)&v14 + 1) >> 62)
    {
      case 1:
        LODWORD(v7) = DWORD1(v14) - v14;
        if (__OFSUB__(DWORD1(v14), v14)) {
          goto LABEL_18;
        }
        uint64_t v7 = (int)v7;
LABEL_11:
        int64_t v11 = 8 - v7;
        if (__OFSUB__(8, v7))
        {
          __break(1u);
LABEL_18:
          __break(1u);
LABEL_19:
          __break(1u);
        }
        if (v11 >= 1)
        {
          if (*(void *)(sub_2193DF988(0, v11) + 16))
          {
            sub_2193E20E0();
            uint64_t v6 = v14;
          }
          swift_bridgeObjectRelease();
        }
        break;
      case 2:
        uint64_t v9 = *(void *)(v14 + 16);
        uint64_t v8 = *(void *)(v14 + 24);
        BOOL v10 = __OFSUB__(v8, v9);
        uint64_t v7 = v8 - v9;
        if (!v10) {
          goto LABEL_11;
        }
        goto LABEL_19;
      case 3:
        goto LABEL_11;
      default:
        uint64_t v7 = BYTE14(v14);
        goto LABEL_11;
    }
  }
  return v6;
}

uint64_t sub_219390E5C(char a1, unsigned int a2)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v14 = xmmword_2193E7210;
  do
  {
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C199D8);
    v13[3] = v4;
    void v13[4] = sub_219360528((unint64_t *)&qword_267C199E0, &qword_267C199D8);
    LOBYTE(v13[0]) = a2;
    __swift_project_boxed_opaque_existential_1Tm(v13, v4);
    sub_2193E20D0();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    BOOL v5 = a2 > 0xFF;
    a2 >>= 8;
  }
  while (v5);
  uint64_t v6 = v14;
  if (a1)
  {
    uint64_t v7 = 0;
    switch(*((void *)&v14 + 1) >> 62)
    {
      case 1:
        LODWORD(v7) = DWORD1(v14) - v14;
        if (__OFSUB__(DWORD1(v14), v14)) {
          goto LABEL_18;
        }
        uint64_t v7 = (int)v7;
LABEL_11:
        int64_t v11 = 4 - v7;
        if (__OFSUB__(4, v7))
        {
          __break(1u);
LABEL_18:
          __break(1u);
LABEL_19:
          __break(1u);
        }
        if (v11 >= 1)
        {
          if (*(void *)(sub_2193DF988(0, v11) + 16))
          {
            sub_2193E20E0();
            uint64_t v6 = v14;
          }
          swift_bridgeObjectRelease();
        }
        break;
      case 2:
        uint64_t v9 = *(void *)(v14 + 16);
        uint64_t v8 = *(void *)(v14 + 24);
        BOOL v10 = __OFSUB__(v8, v9);
        uint64_t v7 = v8 - v9;
        if (!v10) {
          goto LABEL_11;
        }
        goto LABEL_19;
      case 3:
        goto LABEL_11;
      default:
        uint64_t v7 = BYTE14(v14);
        goto LABEL_11;
    }
  }
  return v6;
}

unint64_t sub_219391070(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19668);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388]();
  BOOL v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C19A10);
  uint64_t v6 = sub_2193E2F50();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_219360574(v12, (uint64_t)v5, &qword_267C19668);
    unint64_t result = sub_2193859A4((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_2193E2E80();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    unint64_t result = (unint64_t)sub_21936A4F8(v9, (_OWORD *)(v7[7] + 32 * v16));
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    _OWORD v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_219391270(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C19A00);
  uint64_t v2 = (void *)sub_2193E2F50();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    BOOL v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_219385A08((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21939137C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C199C8);
  uint64_t v2 = (void *)sub_2193E2F50();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_21938452C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_219391490(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C199D0);
  uint64_t v2 = (void *)sub_2193E2F50();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_21938452C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    BOOL v12 = (void *)(v2[7] + 16 * result);
    *BOOL v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2193915B4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C199A8);
  uint64_t v2 = (void *)sub_2193E2F50();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_21938452C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2193916D0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C19000);
  uint64_t v2 = sub_2193E2F50();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_219360574(v6, (uint64_t)&v15, &qword_267C19008);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_21938452C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_21936A4F8(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_219391808(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C18BD8);
  uint64_t v2 = (void *)sub_2193E2F50();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *(v4 - 1);
    uint64_t v6 = *v4;
    uint64_t v7 = v4[1];
    unint64_t v8 = v4[2];
    uint64_t v9 = v4[3];
    unint64_t v10 = v4[4];
    sub_21934CDF0(v5, *v4);
    sub_21934CDF0(v7, v8);
    sub_21934CE48(v9, v10);
    unint64_t result = sub_2193858E4(v5, v6);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v13 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v13 = v5;
    v13[1] = v6;
    uint64_t v14 = (uint64_t *)(v2[7] + 32 * result);
    *uint64_t v14 = v7;
    v14[1] = v8;
    void v14[2] = v9;
    void v14[3] = v10;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v4 += 6;
    v2[2] = v17;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_219391954(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C199F8);
  uint64_t v2 = (void *)sub_2193E2F50();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_21938452C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_219391A70(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C199F0);
  uint64_t v2 = (void *)sub_2193E2F50();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_OWORD *)(a1 + 72);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 5);
    uint64_t v6 = *((void *)v4 - 4);
    uint64_t v7 = *((void *)v4 - 3);
    uint64_t v8 = *((void *)v4 - 2);
    uint64_t v9 = *((void *)v4 - 1);
    long long v17 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_21938452C(v5, v6);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v12 = v5;
    v12[1] = v6;
    uint64_t v13 = v2[7] + 40 * result;
    *(void *)uint64_t v13 = v7;
    *(void *)(v13 + 8) = v8;
    *(void *)(v13 + 16) = v9;
    *(_OWORD *)(v13 + 24) = v17;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v2[2] = v16;
    uint64_t v4 = (_OWORD *)((char *)v4 + 56);
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_219391BD4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AC276F8);
  uint64_t v2 = (void *)sub_2193E2F50();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_21938452C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t ASCTAPAuthenticatorTransport.rawValue.getter()
{
  uint64_t result = 6452085;
  switch(*v0)
  {
    case 1:
      uint64_t result = 6514286;
      break;
    case 2:
      uint64_t result = 6646882;
      break;
    case 3:
      uint64_t result = 0x6C616E7265746E69;
      break;
    case 4:
      uint64_t result = 0x646972627968;
      break;
    case 5:
      uint64_t result = 0x61632D7472616D73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t ASCTAPUserVerificationRequirement.rawValue.getter()
{
  uint64_t v1 = 0x6572726566657270;
  if (*v0 != 1) {
    uint64_t v1 = 0x6172756F63736964;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6465726975716572;
  }
}

char *sub_219391E00()
{
  uint64_t v1 = v0[1];
  uint64_t v23 = v0[7];
  unint64_t v24 = v0[8];
  uint64_t v2 = v0[11];
  unint64_t v21 = v0[10];
  uint64_t v22 = v0[9];
  uint64_t v3 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ASCPublicKeyCredentialAssertionExtensionInputs()), sel_init);
  if (v1 == 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0xB000000000000000;
  }
  else
  {
    sub_2193965F4(v25);
    uint64_t v4 = v25[0];
    uint64_t v5 = v25[1];
  }
  uint64_t v6 = (uint64_t *)&v3[OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_largeBlob];
  uint64_t v7 = 1;
  swift_beginAccess();
  uint64_t v8 = *v6;
  unint64_t v9 = v6[1];
  uint64_t *v6 = v4;
  v6[1] = v5;
  sub_219379594(v8, v9);
  uint64_t v10 = 0;
  unint64_t v11 = 0;
  uint64_t v12 = 0;
  unint64_t v13 = 0;
  if (v2 != 1)
  {
    unint64_t v11 = v24;
    if (v24 >> 60 == 15)
    {
      uint64_t v10 = 0;
      uint64_t v12 = 0;
      unint64_t v13 = 0;
      unint64_t v11 = 0xF000000000000000;
      if (v2)
      {
LABEL_7:
        uint64_t v7 = sub_21939E990(v2);
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v10 = v23;
      sub_21934CDF0(v23, v24);
      unint64_t v13 = v21;
      uint64_t v12 = v22;
      sub_21934CE48(v22, v21);
      if (v2) {
        goto LABEL_7;
      }
    }
    uint64_t v7 = 0;
  }
LABEL_10:
  uint64_t v14 = (uint64_t *)&v3[OBJC_IVAR____TtC26AuthenticationServicesCore46ASCPublicKeyCredentialAssertionExtensionInputs_prf];
  swift_beginAccess();
  uint64_t v15 = *v14;
  uint64_t v16 = v14[1];
  uint64_t v17 = v14[2];
  uint64_t v18 = v14[3];
  uint64_t v19 = v14[4];
  *uint64_t v14 = v10;
  v14[1] = v11;
  void v14[2] = v12;
  void v14[3] = v13;
  v14[4] = v7;
  sub_2193A8EB4(v15, v16, v17, v18, v19, (void (*)(void))sub_21937BB00);
  return v3;
}

char *sub_219391FC8()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = v0[7];
  unint64_t v4 = v0[8];
  uint64_t v5 = v0[9];
  unint64_t v6 = v0[10];
  uint64_t v29 = v0[11];
  uint64_t v7 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionInputs()), sel_init);
  uint64_t v27 = v5;
  uint64_t v28 = v3;
  unint64_t v26 = v6;
  if (v2 >= 2)
  {
    BOOL v10 = v1 == 0x6572726566657270 && v2 == 0xE900000000000064;
    if (v10 || (sub_2193E3140() & 1) != 0)
    {
      unint64_t v8 = v4;
      char v9 = 1;
    }
    else if (v1 == 0x6465726975716572 && v2 == 0xE800000000000000)
    {
      unint64_t v8 = v4;
      char v9 = 0;
    }
    else
    {
      unint64_t v8 = v4;
      if (sub_2193E3140()) {
        char v9 = 0;
      }
      else {
        char v9 = 2;
      }
    }
  }
  else
  {
    unint64_t v8 = v4;
    char v9 = 2;
  }
  unint64_t v11 = &v7[OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_largeBlob];
  uint64_t v12 = 1;
  swift_beginAccess();
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  unint64_t v15 = 0;
  uint64_t v16 = 0;
  unint64_t v17 = 0;
  char *v11 = v9;
  if (v29 != 1)
  {
    if (v8 >> 60 == 15)
    {
      uint64_t v14 = 0;
      uint64_t v16 = 0;
      unint64_t v17 = 0;
      unint64_t v15 = 0xF000000000000000;
      if (v29)
      {
LABEL_12:
        uint64_t v12 = sub_21939E990(v29);
LABEL_15:
        uint64_t v13 = 1;
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v14 = v28;
      sub_21934CDF0(v28, v8);
      unint64_t v17 = v26;
      uint64_t v16 = v27;
      sub_21934CE48(v27, v26);
      unint64_t v15 = v8;
      if (v29) {
        goto LABEL_12;
      }
    }
    uint64_t v12 = 0;
    goto LABEL_15;
  }
LABEL_16:
  uint64_t v18 = (uint64_t *)&v7[OBJC_IVAR____TtC26AuthenticationServicesCore49ASCPublicKeyCredentialRegistrationExtensionInputs_prf];
  swift_beginAccess();
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  unint64_t v21 = v18[2];
  uint64_t v22 = v18[3];
  unint64_t v23 = v18[4];
  uint64_t v24 = v18[5];
  uint64_t *v18 = v13;
  v18[1] = v14;
  v18[2] = v15;
  v18[3] = v16;
  v18[4] = v17;
  v18[5] = v12;
  sub_21934CE5C(v19, v20, v21, v22, v23, v24);
  return v7;
}

char *sub_21939220C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C192F8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = *v0;
  uint64_t v5 = *((unsigned __int8 *)v0 + 48);
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[8];
  uint64_t v8 = v0[9];
  uint64_t v9 = v0[10];
  BOOL v10 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs(0)), sel_init);
  unint64_t v11 = v10;
  if ((v4 & 0xFE) == 2) {
    char v12 = 2;
  }
  else {
    char v12 = v4 & 1;
  }
  uint64_t v13 = &v10[OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_largeBlob];
  swift_beginAccess();
  *uint64_t v13 = v12;
  if (v5 == 3)
  {
    uint64_t v14 = type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v3, 1, 1, v14);
  }
  else
  {
    v17[0] = v5;
    uint64_t v18 = v6;
    uint64_t v19 = v7;
    uint64_t v20 = v8;
    uint64_t v21 = v9;
    sub_219399CDC(v3);
  }
  uint64_t v15 = (uint64_t)&v11[OBJC_IVAR____TtC26AuthenticationServicesCore50ASCPublicKeyCredentialRegistrationExtensionOutputs_prf];
  swift_beginAccess();
  sub_2193A8E50((uint64_t)v3, v15, &qword_267C192F8);
  swift_endAccess();
  return v11;
}

char *sub_2193923A8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C199B8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)v0;
  uint64_t v4 = *(void *)(v0 + 8);
  unint64_t v7 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v8 = *(void *)(v0 + 32);
  char v9 = *(unsigned char *)(v0 + 40);
  uint64_t v10 = *(unsigned __int8 *)(v0 + 48);
  uint64_t v11 = *(void *)(v0 + 56);
  unint64_t v29 = *(void *)(v0 + 64);
  uint64_t v30 = v11;
  uint64_t v12 = *(void *)(v0 + 72);
  uint64_t v13 = *(void *)(v0 + 80);
  uint64_t v28 = v12;
  uint64_t v14 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ASCPublicKeyCredentialAssertionExtensionOutputs(0)), sel_init);
  uint64_t v31 = v10;
  uint64_t v27 = v13;
  if (v5 == 3) {
    goto LABEL_5;
  }
  if (v6 == 2)
  {
    char v32 = v5;
    uint64_t v33 = v4;
    unint64_t v34 = v7;
    LOBYTE(v35) = 2;
    uint64_t v36 = v8;
    char v37 = v9 & 1;
    sub_21934CE48(v4, v7);
    uint64_t v15 = ASCTAPLargeBlobExtensionOutput.uncompressedBlob.getter();
    if (v16 >> 60 == 15)
    {
      sub_21935BD18(v5, v4, v7);
LABEL_5:
      uint64_t v17 = 0;
      unint64_t v18 = 0;
      char v19 = -1;
      goto LABEL_8;
    }
    uint64_t v17 = v15;
    unint64_t v18 = v16;
    sub_21935BD18(v5, v4, v7);
    char v19 = 0;
  }
  else
  {
    unint64_t v18 = 0;
    uint64_t v17 = v6 & 1;
    char v19 = 1;
  }
LABEL_8:
  uint64_t v20 = &v14[OBJC_IVAR____TtC26AuthenticationServicesCore47ASCPublicKeyCredentialAssertionExtensionOutputs_largeBlob];
  swift_beginAccess();
  uint64_t v21 = *(void *)v20;
  unint64_t v22 = *((void *)v20 + 1);
  *(void *)uint64_t v20 = v17;
  *((void *)v20 + 1) = v18;
  unsigned __int8 v23 = v20[16];
  v20[16] = v19;
  sub_2193A8E2C(v21, v22, v23);
  if (v31 == 3)
  {
    uint64_t v24 = type metadata accessor for ASCPublicKeyCredentialAssertionExtensionOutputs.PRF(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v3, 1, 1, v24);
  }
  else
  {
    char v32 = v31;
    uint64_t v33 = v30;
    unint64_t v34 = v29;
    uint64_t v35 = v28;
    uint64_t v36 = v27;
    sub_21939A084((uint64_t)v3);
  }
  uint64_t v25 = (uint64_t)&v14[OBJC_IVAR____TtC26AuthenticationServicesCore47ASCPublicKeyCredentialAssertionExtensionOutputs_prf];
  swift_beginAccess();
  sub_2193A8E50((uint64_t)v3, v25, &qword_267C199B8);
  swift_endAccess();
  return v14;
}

uint64_t sub_219392628@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char v9 = result;
  unint64_t v11 = a3 >> 60;
  if (a3 >> 60 == 15)
  {
    uint64_t v12 = 0;
    uint64_t v13 = a2;
    unint64_t v14 = a3;
LABEL_3:
    *(unsigned char *)a5 = v9;
    *(void *)(a5 + 8) = v13;
    *(void *)(a5 + 16) = v14;
    *(unsigned char *)(a5 + 24) = a4;
    *(void *)(a5 + 32) = v12;
    *(unsigned char *)(a5 + 40) = v11 > 0xE;
    return result;
  }
  uint64_t v15 = sub_2193E2010();
  if (!v5)
  {
    uint64_t v13 = v15;
    unint64_t v14 = v16;
    switch(a3 >> 62)
    {
      case 1uLL:
        uint64_t result = sub_21934CEB0(a2, a3);
        LODWORD(v12) = HIDWORD(a2) - a2;
        if (__OFSUB__(HIDWORD(a2), a2)) {
          goto LABEL_16;
        }
        uint64_t v12 = (int)v12;
        if (((int)v12 & 0x8000000000000000) != 0) {
          goto LABEL_14;
        }
        goto LABEL_3;
      case 2uLL:
        uint64_t v18 = *(void *)(a2 + 24);
        uint64_t v17 = *(void *)(a2 + 16);
        uint64_t result = sub_21934CEB0(a2, a3);
        uint64_t v12 = v18 - v17;
        if (__OFSUB__(v18, v17)) {
          goto LABEL_15;
        }
        if (v12 < 0)
        {
LABEL_14:
          sub_2193E2EE0();
          __break(1u);
LABEL_15:
          __break(1u);
LABEL_16:
          __break(1u);
          JUMPOUT(0x2193927E8);
        }
        return result;
      case 3uLL:
        uint64_t result = sub_21934CEB0(a2, a3);
        uint64_t v12 = 0;
        goto LABEL_3;
      default:
        uint64_t result = sub_21934CEB0(a2, a3);
        uint64_t v12 = BYTE6(a3);
        goto LABEL_3;
    }
    goto LABEL_3;
  }
  return sub_21934CEB0(a2, a3);
}

AuthenticationServicesCore::ASCTAPUserVerificationRequirement_optional __swiftcall ASCTAPUserVerificationRequirement.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_2193E2F70();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_219392858(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_219360B1C(*a1, *a2);
}

uint64_t sub_219392864()
{
  return sub_2193E3230();
}

uint64_t sub_219392914()
{
  sub_2193E28D0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2193929B0()
{
  return sub_2193E3230();
}

AuthenticationServicesCore::ASCTAPUserVerificationRequirement_optional sub_219392A5C(Swift::String *a1)
{
  return ASCTAPUserVerificationRequirement.init(rawValue:)(*a1);
}

void sub_219392A68(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE800000000000000;
  unint64_t v4 = 0xE900000000000064;
  uint64_t v5 = 0x6572726566657270;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6172756F63736964;
    unint64_t v4 = 0xEB00000000646567;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6465726975716572;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_219392AD8(char *a1, char *a2)
{
  return sub_219392AE4(*a1, *a2);
}

uint64_t sub_219392AE4(char a1, char a2)
{
  if (!a2) {
    return 1;
  }
  if (a2 != 1) {
    return 0;
  }
  if (a1)
  {
    char v2 = sub_2193E3140();
    swift_bridgeObjectRelease();
    char v3 = v2 ^ 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_219392BB4(char *a1, char *a2)
{
  return sub_219392BC0(*a1, *a2);
}

uint64_t sub_219392BC0(char a1, char a2)
{
  if (!a1) {
    return 1;
  }
  if (a1 != 1) {
    return 0;
  }
  if (a2)
  {
    char v2 = sub_2193E3140();
    swift_bridgeObjectRelease();
    char v3 = v2 ^ 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_219392C90(char *a1, char *a2)
{
  return sub_219392C9C(*a1, *a2);
}

uint64_t sub_219392C9C(char a1, char a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 == 1)
  {
    if (a1)
    {
      char v2 = sub_2193E3140();
      swift_bridgeObjectRelease();
      return v2 & 1;
    }
    swift_bridgeObjectRelease();
  }
  return 1;
}

void ASCTAPAuthenticatorTransport.wkRepresentation.getter(unsigned char *a1@<X8>)
{
  *a1 = 0x60503020100uLL >> (8 * *v1);
}

uint64_t ASCTAPAuthenticatorTransport.isSecurityKeyTransport.getter()
{
  return (*v0 < 6u) & (0x27u >> *v0);
}

AuthenticationServicesCore::ASCTAPAuthenticatorTransport_optional __swiftcall ASCTAPAuthenticatorTransport.init(rawValue:)(Swift::String rawValue)
{
  char v2 = v1;
  unint64_t v3 = sub_2193E2F70();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *char v2 = v5;
  return result;
}

uint64_t sub_219392DF0(unsigned __int8 *a1, char *a2)
{
  return sub_2193610DC(*a1, *a2);
}

uint64_t sub_219392DFC()
{
  return sub_219352020();
}

uint64_t sub_219392E04()
{
  sub_2193E28D0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_219392EE0()
{
  return sub_21935224C();
}

AuthenticationServicesCore::ASCTAPAuthenticatorTransport_optional sub_219392EE8(Swift::String *a1)
{
  return ASCTAPAuthenticatorTransport.init(rawValue:)(*a1);
}

void sub_219392EF4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 6452085;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 6514286;
      goto LABEL_3;
    case 2:
      *a1 = 6646882;
      a1[1] = 0xE300000000000000;
      break;
    case 3:
      *a1 = 0x6C616E7265746E69;
      a1[1] = 0xE800000000000000;
      break;
    case 4:
      *a1 = 0x646972627968;
      a1[1] = 0xE600000000000000;
      break;
    case 5:
      *a1 = 0x61632D7472616D73;
      a1[1] = 0xEA00000000006472;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE300000000000000;
      break;
  }
}

void ASWKCTAPAuthenticatorTransport.asRepresentation.getter(unsigned char *a1@<X8>)
{
  *a1 = 0x5040403020100uLL >> (8 * *v1);
}

AuthenticationServicesCore::ASWKCTAPAuthenticatorTransport_optional __swiftcall ASWKCTAPAuthenticatorTransport.init(rawValue:)(NSNumber rawValue)
{
  unint64_t v3 = v1;
  sub_2193607AC(0, (unint64_t *)&qword_267C18E58);
  unint64_t v4 = rawValue.super.super.isa;
  char v5 = (void *)sub_2193E2B60();
  char v6 = sub_2193E2B80();

  if (v6)
  {

    char v8 = 0;
  }
  else
  {
    char v9 = v4;
    uint64_t v10 = (void *)sub_2193E2B60();
    char v11 = sub_2193E2B80();

    if (v11)
    {

      char v8 = 1;
    }
    else
    {
      uint64_t v12 = v9;
      uint64_t v13 = (void *)sub_2193E2B60();
      char v14 = sub_2193E2B80();

      if (v14)
      {

        char v8 = 2;
      }
      else
      {
        uint64_t v15 = v12;
        unint64_t v16 = (void *)sub_2193E2B60();
        char v17 = sub_2193E2B80();

        if (v17)
        {

          char v8 = 3;
        }
        else
        {
          uint64_t v18 = v15;
          char v19 = (void *)sub_2193E2B60();
          char v20 = sub_2193E2B80();

          if (v20)
          {

            char v8 = 4;
          }
          else
          {
            uint64_t v21 = v18;
            unint64_t v22 = (void *)sub_2193E2B60();
            char v23 = sub_2193E2B80();

            if (v23)
            {

              char v8 = 5;
            }
            else
            {
              uint64_t v24 = v21;
              uint64_t v25 = (void *)sub_2193E2B60();
              char v26 = sub_2193E2B80();

              if (v26) {
                char v8 = 6;
              }
              else {
                char v8 = 7;
              }
            }
          }
        }
      }
    }
  }
  *unint64_t v3 = v8;
  return result;
}

uint64_t ASWKCTAPAuthenticatorTransport.rawValue.getter()
{
  return sub_2193E2B60();
}

uint64_t sub_2193931F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v12[0] = a4;
  v12[1] = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19930);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193A783C();
  sub_2193E3260();
  char v14 = 0;
  sub_2193E30B0();
  if (!v5)
  {
    char v13 = 1;
    sub_2193E30B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_219393368(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19940);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193A7890();
  sub_2193E3260();
  LOBYTE(v11) = 0;
  sub_2193E30B0();
  if (!v2)
  {
    long long v11 = *(_OWORD *)(v3 + 16);
    v10[15] = 1;
    sub_21934D644();
    sub_2193E30D0();
    LOBYTE(v11) = 2;
    sub_2193E30B0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_219393508(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v12 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19950);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193A78E4();
  sub_2193E3260();
  char v14 = 0;
  sub_2193E30B0();
  if (!v4)
  {
    char v13 = 1;
    sub_2193E30E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_219393678()
{
  return sub_219360ED8();
}

uint64_t sub_219393684()
{
  return sub_2193E3230();
}

void sub_2193936CC()
{
}

uint64_t sub_2193936D4()
{
  return sub_2193E3230();
}

AuthenticationServicesCore::ASWKCTAPAuthenticatorTransport_optional sub_219393718(NSNumber *a1)
{
  return ASWKCTAPAuthenticatorTransport.init(rawValue:)((NSNumber)a1->super.super.isa);
}

uint64_t sub_219393720@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ASWKCTAPAuthenticatorTransport.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_219393748()
{
  if (*v0) {
    return 25705;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_219393770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2193A798C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_219393798(uint64_t a1)
{
  unint64_t v2 = sub_2193A783C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2193937D4(uint64_t a1)
{
  unint64_t v2 = sub_2193A783C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_219393810@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_2193A7A58(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_219393840(void *a1)
{
  return sub_2193931F4(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_219393860(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_2193E3140(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_2193E3140();
    }
  }
  return result;
}

uint64_t sub_219393904()
{
  uint64_t v1 = 25705;
  if (*v0 != 1) {
    uint64_t v1 = 0x4E79616C70736964;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_219393954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2193A7C60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21939397C(uint64_t a1)
{
  unint64_t v2 = sub_2193A7890();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2193939B8(uint64_t a1)
{
  unint64_t v2 = sub_2193A7890();

  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_2193939F4@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_2193A7DA8(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_219393A38(void *a1)
{
  return sub_219393368(a1);
}

uint64_t sub_219393A50(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  _OWORD v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  _OWORD v8[2] = v5;
  return sub_2193A1F3C(v7, v8) & 1;
}

uint64_t sub_219393A98(char *a1, char *a2)
{
  return sub_219360988(*a1, *a2);
}

uint64_t sub_219393AA4()
{
  return sub_2193E3230();
}

uint64_t sub_219393B18()
{
  sub_2193E28D0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_219393B78()
{
  return sub_2193E3230();
}

uint64_t sub_219393BE8@<X0>(char *a1@<X8>)
{
  return sub_219398044(a1);
}

void sub_219393BF4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1701869940;
  if (*v1) {
    uint64_t v2 = 6777953;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE300000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_219393C24()
{
  if (*v0) {
    return 6777953;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_219393C50@<X0>(char *a1@<X8>)
{
  return sub_219398118(a1);
}

uint64_t sub_219393C5C(uint64_t a1)
{
  unint64_t v2 = sub_2193A78E4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_219393C98(uint64_t a1)
{
  unint64_t v2 = sub_2193A78E4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_219393CD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_2193A8084(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(_DWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_219393D04(void *a1)
{
  return sub_219393508(a1, *(void *)v1, *(void *)(v1 + 8), *(_DWORD *)(v1 + 16));
}

BOOL sub_219393D24(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 16);
  int v3 = *(_DWORD *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_2193E3140();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

uint64_t ASCTAPAuthData.Flags.rawValue.getter()
{
  return *v0;
}

uint64_t ASCTAPAuthData.Flags.init(rawValue:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static ASCTAPAuthData.Flags.userPresent.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void static ASCTAPAuthData.Flags.userVerified.getter(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

void static ASCTAPAuthData.Flags.backupEligible.getter(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

void static ASCTAPAuthData.Flags.backupState.getter(unsigned char *a1@<X8>)
{
  *a1 = 16;
}

void static ASCTAPAuthData.Flags.attestedCredentialDataPresent.getter(unsigned char *a1@<X8>)
{
  *a1 = 64;
}

void static ASCTAPAuthData.Flags.extensionDataPresent.getter(unsigned char *a1@<X8>)
{
  *a1 = 0x80;
}

unsigned char *sub_219393DDC@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_219393DE8(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

unsigned char *sub_219393DF0@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

unsigned char *sub_219393E04@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

unsigned char *sub_219393E18@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_219393E2C(unsigned char *a1, unsigned __int8 *a2)
{
  int v3 = *a2;
  int v4 = *v2;
  if ((v4 & v3) != v3) {
    *int v2 = v4 | v3;
  }
  *a1 = v3;
  return (v4 & v3) != v3;
}

unsigned __int8 *sub_219393E5C@<X0>(unsigned __int8 *result@<X0>, unsigned char *a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  int v5 = v4 & v3;
  if ((v4 & v3) != 0) {
    *int v2 = v4 & ~(_BYTE)v3;
  }
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

unsigned __int8 *sub_219393E88@<X0>(unsigned __int8 *result@<X0>, unsigned char *a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  *int v2 = v4 | v3;
  int v5 = v4 & v3;
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

unsigned char *sub_219393EAC(unsigned char *result)
{
  *v1 |= *result;
  return result;
}

unsigned char *sub_219393EC0(unsigned char *result)
{
  *v1 &= *result;
  return result;
}

unsigned char *sub_219393ED4(unsigned char *result)
{
  *v1 ^= *result;
  return result;
}

unsigned char *sub_219393EE8@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_219393EFC(unsigned __int8 *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_219393F10(unsigned char *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_219393F24(unsigned __int8 *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_219393F38()
{
  return *v0 == 0;
}

uint64_t sub_219393F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

unsigned char *sub_219393F60(unsigned char *result)
{
  *v1 &= ~*result;
  return result;
}

unsigned __int8 *sub_219393F74@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_219393F84(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_219393F94@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    int v4 = 0;
    int v5 = (unsigned __int8 *)(a1 + 32);
    do
    {
      int v7 = *v5++;
      int v6 = v7;
      if ((v7 & ~v4) == 0) {
        int v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    LOBYTE(v4) = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t static ASCTAPAuthData.test_rawAuthenticatorData(rpIDHash:flags:counter:credentialData:)(uint64_t a1, unint64_t a2, char *a3, unsigned int a4, uint64_t a5, unint64_t a6)
{
  char v11 = *a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C18BE0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_2193E7190;
  *(unsigned char *)(v12 + 32) = v11;
  uint64_t v13 = sub_21935B74C(v12);
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();
  sub_21934CDF0(a1, a2);
  sub_21935AB18(v13, v15);
  sub_219348A70(v13, v15);
  uint64_t v16 = sub_219390E5C(1, a4);
  uint64_t v18 = sub_21935183C(v16, v17);
  unint64_t v20 = v19;
  sub_21934CDF0(a1, a2);
  sub_21935AB18(v18, v20);
  sub_219348A70(v18, v20);
  sub_219348A70(a1, a2);
  sub_21934CDF0(a1, a2);
  sub_21934CDF0(a5, a6);
  sub_21935AB18(a5, a6);
  sub_219348A70(a5, a6);
  sub_219348A70(a1, a2);
  return a1;
}

uint64_t ASCTAPAuthData.rpIDHash.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_21934CDF0(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

void ASCTAPAuthData.flags.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t ASCTAPAuthData.counter.getter()
{
  return *(unsigned int *)(v0 + 20);
}

void ASCTAPAuthData.attestedCredentialData.getter(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[3];
  unint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  uint64_t v6 = v1[7];
  uint64_t v7 = v1[8];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  sub_2193A9000(v2, v3, v4, v5, v6, v7, (void (*)(void))sub_21934CDF0);
}

uint64_t ASCTAPAuthData.validate(relyingParty:requiredFlags:disallowedFlags:)(uint64_t a1, char *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v52 = a1;
  long long v53 = a2;
  uint64_t v61 = *MEMORY[0x263EF8340];
  uint64_t v7 = sub_2193E2780();
  uint64_t v47 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2193E2660();
  uint64_t v48 = *(void *)(v10 - 8);
  uint64_t v49 = v10;
  MEMORY[0x270FA5388](v10);
  long long v51 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2193E2880();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *a3;
  int v45 = *a4;
  int v46 = v16;
  long long v17 = v4[3];
  long long v57 = v4[2];
  long long v58 = v17;
  long long v59 = v4[4];
  uint64_t v60 = *((void *)v4 + 10);
  long long v18 = v4[1];
  long long v55 = *v4;
  long long v56 = v18;
  sub_2193E2870();
  uint64_t v19 = sub_2193E2850();
  unint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (v21 >> 60 == 15)
  {
    sub_2193E2840();
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C19670);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2193E7190;
    *(void *)(inited + 32) = sub_2193E2840();
    *(void *)(inited + 40) = v23;
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = 0xD000000000000016;
    *(void *)(inited + 56) = 0x80000002193F1410;
    sub_2193916D0(inited);
    id v24 = objc_allocWithZone(MEMORY[0x263F087E8]);
    uint64_t v25 = (void *)sub_2193E2830();
    swift_bridgeObjectRelease();
    char v26 = (void *)sub_2193E2790();
    swift_bridgeObjectRelease();
    objc_msgSend(v24, sel_initWithDomain_code_userInfo_, v25, 14, v26);

    return swift_willThrow();
  }
  sub_2193A3248((unint64_t *)&qword_26AC274F0, MEMORY[0x263F047F8]);
  sub_2193E2640();
  uint64_t v28 = v7;
  unint64_t v29 = v9;
  uint64_t v30 = v50;
  uint64_t v31 = v19;
  switch(v21 >> 62)
  {
    case 1uLL:
      long long v53 = v9;
      if (v19 >> 32 < (int)v19) {
        __break(1u);
      }
      sub_21934CDF0(v19, v21);
      unint64_t v29 = v53;
      sub_2193796B0((int)v19, v19 >> 32);
      break;
    case 2uLL:
      long long v53 = v9;
      uint64_t v32 = *(void *)(v19 + 16);
      uint64_t v33 = *(void *)(v19 + 24);
      sub_21934CE48(v31, v21);
      swift_retain();
      swift_retain();
      uint64_t v34 = v32;
      unint64_t v29 = v53;
      sub_2193796B0(v34, v33);
      if (v30)
      {
        swift_release();
        swift_release();
        __break(1u);
        JUMPOUT(0x2193949D0);
      }
      uint64_t v30 = 0;
      swift_release();
      swift_release();
      break;
    case 3uLL:
      memset(v54, 0, 14);
      goto LABEL_8;
    default:
      v54[0] = v19;
      LOWORD(v54[1]) = v21;
      BYTE2(v54[1]) = BYTE2(v21);
      BYTE3(v54[1]) = BYTE3(v21);
      BYTE4(v54[1]) = BYTE4(v21);
      BYTE5(v54[1]) = BYTE5(v21);
LABEL_8:
      sub_2193E2620();
      break;
  }
  sub_21934CEB0(v31, v21);
  uint64_t v35 = v51;
  sub_2193E2630();
  uint64_t v36 = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v29, v28);
  MEMORY[0x270FA5388](v36);
  *((void *)&v45 - 2) = &v55;
  sub_2193E2650();
  if (v30) {
    goto LABEL_12;
  }
  if ((v46 & ~v56) != 0)
  {
    sub_2193E2840();
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C19670);
    uint64_t v37 = swift_initStackObject();
    *(_OWORD *)(v37 + 16) = xmmword_2193E7190;
    *(void *)(v37 + 32) = sub_2193E2840();
    *(void *)(v37 + 40) = v41;
    *(void *)(v37 + 72) = MEMORY[0x263F8D310];
    unint64_t v39 = 0xD000000000000024;
    uint64_t v40 = "AuthData is missing a required flag.";
  }
  else
  {
    if ((v56 & v45) == 0)
    {
LABEL_12:
      (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v49);
      return sub_21934CEB0(v31, v21);
    }
    sub_2193E2840();
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C19670);
    uint64_t v37 = swift_initStackObject();
    *(_OWORD *)(v37 + 16) = xmmword_2193E7190;
    *(void *)(v37 + 32) = sub_2193E2840();
    *(void *)(v37 + 40) = v38;
    *(void *)(v37 + 72) = MEMORY[0x263F8D310];
    unint64_t v39 = 0xD00000000000002FLL;
    uint64_t v40 = "AuthData has a flag that should not be present.";
  }
  *(void *)(v37 + 48) = v39;
  *(void *)(v37 + 56) = (unint64_t)(v40 - 32) | 0x8000000000000000;
  sub_2193916D0(v37);
  id v42 = objc_allocWithZone(MEMORY[0x263F087E8]);
  uint64_t v43 = (void *)sub_2193E2830();
  swift_bridgeObjectRelease();
  uint64_t v44 = (void *)sub_2193E2790();
  swift_bridgeObjectRelease();
  objc_msgSend(v42, sel_initWithDomain_code_userInfo_, v43, 14, v44);

  swift_willThrow();
  sub_21934CEB0(v31, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v51, v49);
}

uint64_t sub_2193949E0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v23 = MEMORY[0x263F8D3E8];
  uint64_t v24 = MEMORY[0x263F07B80];
  uint64_t v21 = a1;
  unint64_t v22 = a2;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1Tm(&v21, MEMORY[0x263F8D3E8]);
  uint64_t v5 = (unsigned char *)*v4;
  if (*v4 && (uint64_t v6 = (unsigned char *)v4[1], v7 = v6 - v5, v6 != v5))
  {
    if (v7 <= 14)
    {
      uint64_t v8 = sub_2193A2A18(v5, v6);
      unint64_t v9 = v19 & 0xFFFFFFFFFFFFFFLL;
    }
    else if ((unint64_t)v7 >= 0x7FFFFFFF)
    {
      uint64_t v8 = sub_2193A2ADC((uint64_t)v5, (uint64_t)v6);
      unint64_t v9 = v20 | 0x8000000000000000;
    }
    else
    {
      uint64_t v8 = sub_2193A2B58((uint64_t)v5, (uint64_t)v6);
      unint64_t v9 = v18 | 0x4000000000000000;
    }
  }
  else
  {
    uint64_t v8 = 0;
    unint64_t v9 = 0xC000000000000000;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v21);
  if ((sub_219379924(*(void *)a3, *(void *)(a3 + 8), v8, v9) & 1) == 0)
  {
    sub_2193E2840();
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C19670);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2193E7190;
    *(void *)(inited + 32) = sub_2193E2840();
    *(void *)(inited + 40) = v11;
    uint64_t v21 = 0;
    unint64_t v22 = 0xE000000000000000;
    sub_2193E2D90();
    sub_2193E2920();
    sub_2193E2120();
    sub_2193E2920();
    swift_bridgeObjectRelease();
    sub_2193E2920();
    sub_2193E2120();
    sub_2193E2920();
    swift_bridgeObjectRelease();
    sub_2193E2920();
    uint64_t v12 = v21;
    unint64_t v13 = v22;
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = v12;
    *(void *)(inited + 56) = v13;
    sub_2193916D0(inited);
    id v14 = objc_allocWithZone(MEMORY[0x263F087E8]);
    unint64_t v15 = (void *)sub_2193E2830();
    swift_bridgeObjectRelease();
    int v16 = (void *)sub_2193E2790();
    swift_bridgeObjectRelease();
    objc_msgSend(v14, sel_initWithDomain_code_userInfo_, v15, 14, v16);

    swift_willThrow();
  }
  return sub_219348A70(v8, v9);
}

uint64_t ASCTAPAuthData.init(data:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v7) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_23:
        __break(1u);
        JUMPOUT(0x219395024);
      }
      uint64_t v7 = (int)v7;
LABEL_6:
      if (v7 >= 37)
      {
        sub_219395044((uint64_t *)v35, (uint64_t *)&v36, 32, a1, a2);
        long long v37 = v36;
        unint64_t v34 = *((void *)&v35[0] + 1);
        uint64_t v38 = *(void *)&v35[0];
        sub_21934CDF0(*(uint64_t *)&v35[0], *((unint64_t *)&v35[0] + 1));
        char v14 = sub_2193951E8();
        unint64_t v16 = *((void *)&v37 + 1);
        uint64_t v15 = v37;
        sub_21934CDF0(v37, *((unint64_t *)&v37 + 1));
        sub_219395044((uint64_t *)v35, (uint64_t *)&v36, 4, v15, v16);
        sub_219348A70(v15, v16);
        sub_219348A70(v15, v16);
        long long v17 = v35[0];
        unint64_t v18 = *((void *)&v36 + 1);
        uint64_t v19 = v36;
        long long v37 = v36;
        sub_21934CDF0(*(uint64_t *)&v35[0], *((unint64_t *)&v35[0] + 1));
        sub_21934CDF0(v19, v18);
        int v32 = sub_2193A2BF8(v17, *((unint64_t *)&v17 + 1));
        sub_219348A70(v17, *((unint64_t *)&v17 + 1));
        char v33 = v14;
        if ((v14 & 0x40) == 0)
        {
          sub_219348A70(a1, a2);
          sub_219348A70(v19, v18);
          sub_219348A70(v17, *((unint64_t *)&v17 + 1));
          sub_219348A70(v19, v18);
          uint64_t v20 = v38;
          unint64_t v21 = v34;
          uint64_t result = sub_219348A70(v38, v34);
          uint64_t v23 = &unk_2193E7000;
          long long v24 = xmmword_2193E7220;
          long long v25 = 0uLL;
          long long v26 = 0uLL;
          uint64_t v27 = v20;
LABEL_10:
          *(void *)a3 = v27;
          *(void *)(a3 + 8) = v21;
          *(unsigned char *)(a3 + 16) = v33;
          *(_DWORD *)(a3 + 20) = v32;
          *(_OWORD *)(a3 + 24) = v24;
          *(_OWORD *)(a3 + 40) = v25;
          *(_OWORD *)(a3 + 56) = v26;
          *(_OWORD *)(a3 + 72) = v23[34];
          return result;
        }
        uint64_t v27 = v38;
        switch(v18 >> 62)
        {
          case 1uLL:
            if ((int)v19 != v19 >> 32) {
              goto LABEL_13;
            }
            goto LABEL_18;
          case 2uLL:
            if (*(void *)(v19 + 16) == *(void *)(v19 + 24)) {
              goto LABEL_18;
            }
            goto LABEL_13;
          case 3uLL:
            goto LABEL_18;
          default:
            if ((v18 & 0xFF000000000000) != 0)
            {
LABEL_13:
              sub_219395300(v19, v18, (uint64_t)v35);
              sub_219348A70(a1, a2);
              if (!v3)
              {
                sub_219348A70(v17, *((unint64_t *)&v17 + 1));
                sub_219348A70(v19, v18);
                unint64_t v21 = v34;
                uint64_t result = sub_219348A70(v27, v34);
                long long v24 = v35[0];
                long long v25 = v35[1];
                long long v26 = v35[2];
                uint64_t v23 = (_OWORD *)&unk_2193E7000;
                goto LABEL_10;
              }
              unint64_t v28 = v34;
              sub_219348A70(v27, v34);
              sub_219348A70(v17, *((unint64_t *)&v17 + 1));
              uint64_t v29 = v19;
              unint64_t v30 = v18;
            }
            else
            {
LABEL_18:
              sub_219348A70(v19, v18);
              unint64_t v28 = v34;
              sub_219348A70(v27, v34);
              sub_2193A2F00();
              swift_allocError();
              *uint64_t v31 = 1;
              swift_willThrow();
              sub_219348A70(a1, a2);
              sub_219348A70(v17, *((unint64_t *)&v17 + 1));
              unint64_t v30 = *((void *)&v37 + 1);
              uint64_t v29 = v37;
            }
            sub_219348A70(v29, v30);
            uint64_t v12 = v27;
            unint64_t v13 = v28;
            return sub_219348A70(v12, v13);
        }
      }
LABEL_7:
      sub_2193A2F00();
      swift_allocError();
      unsigned char *v11 = 0;
      swift_willThrow();
      uint64_t v12 = a1;
      unint64_t v13 = a2;
      return sub_219348A70(v12, v13);
    case 2uLL:
      uint64_t v9 = *(void *)(a1 + 16);
      uint64_t v8 = *(void *)(a1 + 24);
      BOOL v10 = __OFSUB__(v8, v9);
      uint64_t v7 = v8 - v9;
      if (!v10) {
        goto LABEL_6;
      }
      goto LABEL_23;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v7 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_219395044(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  unint64_t v5 = a5 >> 62;
  unsigned __int8 v6 = BYTE6(a5);
  switch(a5 >> 62)
  {
    case 1uLL:
      uint64_t v11 = (int)a4;
      uint64_t v10 = sub_21936EA18((int)a4, a3, a4, a5);
      break;
    case 2uLL:
      uint64_t v10 = sub_21936EA18(*(void *)(a4 + 16), a3, a4, a5);
LABEL_6:
      uint64_t v11 = *(void *)(a4 + 16);
      break;
    default:
      uint64_t v10 = sub_21936EA18(0, a3, a4, a5);
      uint64_t v11 = 0;
      switch((int)v5)
      {
        case 0:
        case 3:
          goto LABEL_7;
        case 1:
          uint64_t v11 = (int)a4;
          goto LABEL_7;
        case 2:
          goto LABEL_6;
        default:
          JUMPOUT(0);
      }
  }
LABEL_7:
  if (v10 < v11)
  {
    __break(1u);
    goto LABEL_15;
  }
  *a1 = sub_2193E20F0();
  a1[1] = v12;
  uint64_t v13 = 0;
  switch((int)v5)
  {
    case 1:
      uint64_t v13 = a4 >> 32;
      break;
    case 2:
      uint64_t v13 = *(void *)(a4 + 24);
      break;
    case 3:
      break;
    default:
      uint64_t v13 = v6;
      break;
  }
  if (v13 < v10)
  {
LABEL_15:
    __break(1u);
    JUMPOUT(0x2193951B8);
  }
  uint64_t result = sub_2193E20F0();
  *a2 = result;
  a2[1] = v15;
  return result;
}

uint64_t sub_2193951E8()
{
  uint64_t v1 = *(void *)v0;
  unint64_t v2 = *(void *)(v0 + 8);
  unint64_t v3 = v2 >> 62;
  switch(v2 >> 62)
  {
    case 1uLL:
      uint64_t v4 = (int)v1;
      uint64_t v5 = v1 >> 32;
      goto LABEL_5;
    case 2uLL:
      uint64_t v4 = *(void *)(v1 + 16);
      uint64_t v5 = *(void *)(v1 + 24);
      goto LABEL_5;
    case 3uLL:
      goto LABEL_17;
    default:
      uint64_t v4 = 0;
      uint64_t v5 = BYTE6(v2);
LABEL_5:
      if (v4 == v5) {
        goto LABEL_17;
      }
      uint64_t v6 = sub_21936A57C(*(void *)v0, *(void *)(v0 + 8));
      if ((v6 & 0x100) != 0) {
        goto LABEL_16;
      }
      uint64_t v7 = v6;
      if (v3)
      {
        if (v3 == 1)
        {
          uint64_t v8 = (int)v1 + 1;
          uint64_t v9 = v1 >> 32;
        }
        else
        {
          uint64_t v10 = *(void *)(v1 + 16);
          uint64_t v8 = v10 + 1;
          if (__OFADD__(v10, 1))
          {
            __break(1u);
LABEL_16:
            __break(1u);
LABEL_17:
            __break(1u);
LABEL_18:
            __break(1u);
            JUMPOUT(0x2193952F0);
          }
          uint64_t v9 = *(void *)(v1 + 24);
        }
      }
      else
      {
        uint64_t v9 = BYTE6(v2);
        uint64_t v8 = 1;
      }
      if (v9 < v8) {
        goto LABEL_18;
      }
      uint64_t v11 = sub_2193E20F0();
      uint64_t v13 = v12;
      sub_219348A70(v1, v2);
      *(void *)uint64_t v0 = v11;
      *(void *)(v0 + 8) = v13;
      return v7;
  }
}

uint64_t sub_219395300@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v5) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
        JUMPOUT(0x2193955E4);
      }
      uint64_t v5 = (int)v5;
LABEL_6:
      if (v5 < 19)
      {
LABEL_9:
        sub_2193A8FAC();
        swift_allocError();
        swift_willThrow();
        return sub_219348A70(a1, a2);
      }
      else
      {
        sub_219395044((uint64_t *)&v26, (uint64_t *)&v25, 16, a1, a2);
        long long v9 = v25;
        unint64_t v24 = *((void *)&v26 + 1);
        uint64_t v27 = v26;
        sub_21934CDF0(v26, *((unint64_t *)&v26 + 1));
        sub_21934CDF0(v9, *((unint64_t *)&v9 + 1));
        sub_219395044((uint64_t *)&v26, (uint64_t *)&v25, 2, v9, *((unint64_t *)&v9 + 1));
        sub_219348A70(v9, *((unint64_t *)&v9 + 1));
        sub_219348A70(v9, *((unint64_t *)&v9 + 1));
        long long v10 = v26;
        unint64_t v12 = *((void *)&v25 + 1);
        uint64_t v11 = v25;
        sub_21934CDF0(v26, *((unint64_t *)&v26 + 1));
        sub_21934CDF0(v11, v12);
        unsigned int v13 = sub_2193A2BF8(v10, *((unint64_t *)&v10 + 1));
        sub_219348A70(v10, *((unint64_t *)&v10 + 1));
        switch(v12 >> 62)
        {
          case 1uLL:
            LODWORD(v14) = HIDWORD(v11) - v11;
            if (__OFSUB__(HIDWORD(v11), v11)) {
              goto LABEL_21;
            }
            uint64_t v14 = (int)v14;
LABEL_13:
            uint64_t v18 = v13;
            if (v14 >= v13) {
              goto LABEL_18;
            }
LABEL_16:
            sub_219348A70(v11, v12);
            uint64_t v19 = v27;
            sub_219348A70(v27, v24);
            sub_2193A8FAC();
            swift_allocError();
            swift_willThrow();
            sub_219348A70(a1, a2);
            sub_219348A70(v10, *((unint64_t *)&v10 + 1));
            sub_219348A70(v11, v12);
            uint64_t result = sub_219348A70(v19, v24);
            break;
          case 2uLL:
            uint64_t v17 = *(void *)(v11 + 16);
            uint64_t v16 = *(void *)(v11 + 24);
            BOOL v8 = __OFSUB__(v16, v17);
            uint64_t v14 = v16 - v17;
            if (!v8) {
              goto LABEL_13;
            }
            goto LABEL_22;
          case 3uLL:
            if (v13) {
              goto LABEL_16;
            }
            uint64_t v18 = 0;
LABEL_18:
            sub_219395044((uint64_t *)&v26, (uint64_t *)&v25, v18, v11, v12);
            sub_219348A70(v10, *((unint64_t *)&v10 + 1));
            sub_219348A70(v11, v12);
            sub_219348A70(a1, a2);
            sub_219348A70(v11, v12);
            uint64_t v20 = v27;
            uint64_t result = sub_219348A70(v27, v24);
            long long v21 = v25;
            long long v22 = v26;
            *(void *)a3 = v20;
            *(void *)(a3 + 8) = v24;
            *(_OWORD *)(a3 + 16) = v22;
            *(_OWORD *)(a3 + 32) = v21;
            break;
          default:
            uint64_t v14 = BYTE6(v12);
            goto LABEL_13;
        }
      }
      return result;
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v7 = *(void *)(a1 + 24);
      BOOL v8 = __OFSUB__(v7, v6);
      uint64_t v5 = v7 - v6;
      if (!v8) {
        goto LABEL_6;
      }
      goto LABEL_20;
    case 3uLL:
      goto LABEL_9;
    default:
      uint64_t v5 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t static ASCTAPCredentialData.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  unint64_t v5 = a1[5];
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  unint64_t v9 = a2[5];
  if ((sub_219379924(*a1, a1[1], *a2, a2[1]) & 1) == 0 || (sub_219379924(v2, v3, v6, v7) & 1) == 0) {
    return 0;
  }

  return sub_219379924(v4, v5, v8, v9);
}

uint64_t sub_2193956B4()
{
  unint64_t v1 = 0x69746E6564657263;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000013;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x646975676161;
  }
}

uint64_t sub_219395718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2193A8270(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_219395740(uint64_t a1)
{
  unint64_t v2 = sub_2193A2F54();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21939577C(uint64_t a1)
{
  unint64_t v2 = sub_2193A2F54();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASCTAPCredentialData.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19680);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  uint64_t v9 = v1[2];
  uint64_t v18 = v1[3];
  uint64_t v19 = v9;
  uint64_t v10 = v1[4];
  uint64_t v16 = v1[5];
  uint64_t v17 = v10;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193A2F54();
  sub_2193E3260();
  uint64_t v21 = v8;
  uint64_t v22 = v7;
  char v23 = 0;
  sub_21934D644();
  uint64_t v11 = v20;
  sub_2193E30D0();
  if (!v11)
  {
    uint64_t v13 = v16;
    uint64_t v12 = v17;
    uint64_t v21 = v19;
    uint64_t v22 = v18;
    char v23 = 1;
    sub_2193E30D0();
    uint64_t v21 = v12;
    uint64_t v22 = v13;
    char v23 = 2;
    sub_2193E30D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ASCTAPCredentialData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19690);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193A2F54();
  sub_2193E3240();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  char v27 = 0;
  sub_21934D774();
  sub_2193E3010();
  unint64_t v24 = a2;
  uint64_t v10 = v25;
  unint64_t v9 = v26;
  char v27 = 1;
  sub_21934CDF0(v25, v26);
  sub_2193E3010();
  unint64_t v23 = v9;
  uint64_t v11 = v10;
  char v27 = 2;
  uint64_t v12 = v25;
  unint64_t v22 = v26;
  sub_21934CDF0(v25, v26);
  sub_2193E3010();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v13 = v25;
  unint64_t v14 = v26;
  uint64_t v15 = v11;
  uint64_t v16 = v11;
  unint64_t v17 = v23;
  sub_21934CDF0(v16, v23);
  unint64_t v18 = v22;
  sub_21934CDF0(v12, v22);
  sub_21934CDF0(v13, v14);
  sub_219348A70(v12, v18);
  sub_219348A70(v15, v17);
  uint64_t v19 = v24;
  *unint64_t v24 = v15;
  v19[1] = v17;
  v19[2] = v12;
  v19[3] = v18;
  v19[4] = v13;
  v19[5] = v14;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  sub_219348A70(v15, v17);
  sub_219348A70(v12, v18);
  return sub_219348A70(v13, v14);
}

uint64_t sub_219395CC8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ASCTAPCredentialData.init(from:)(a1, a2);
}

uint64_t sub_219395CE0(void *a1)
{
  return ASCTAPCredentialData.encode(to:)(a1);
}

uint64_t sub_219395CF8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  unint64_t v5 = a1[5];
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  unint64_t v9 = a2[5];
  if ((sub_219379924(*a1, a1[1], *a2, a2[1]) & 1) == 0 || (sub_219379924(v2, v3, v6, v7) & 1) == 0) {
    return 0;
  }

  return sub_219379924(v4, v5, v8, v9);
}

uint64_t sub_219395DA8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19960);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193A7938();
  sub_2193E3260();
  LOBYTE(v12) = 0;
  sub_2193E30B0();
  if (!v2)
  {
    long long v12 = *(_OWORD *)(v3 + 16);
    char v11 = 1;
    sub_21934D644();
    sub_2193E30D0();
    sub_219360140(v3 + 32, (uint64_t)v13, &qword_267C19530);
    sub_219360140((uint64_t)v13, (uint64_t)&v12, &qword_267C19530);
    char v11 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C194F8);
    sub_219389098(&qword_267C19528, &qword_267C194F8);
    sub_2193E30A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_219395FB8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_219360A20(*a1, *a2);
}

uint64_t sub_219395FC4()
{
  return sub_2193E3230();
}

uint64_t sub_219396058()
{
  sub_2193E28D0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2193960D8()
{
  return sub_2193E3230();
}

uint64_t sub_219396168@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2193A8BC8();
  *a1 = result;
  return result;
}

void sub_2193961A0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE200000000000000;
  uint64_t v5 = 25705;
  if (v2 != 1)
  {
    uint64_t v5 = 0x726F70736E617274;
    unint64_t v4 = 0xEA00000000007374;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701869940;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_2193961F0()
{
  uint64_t v1 = 25705;
  if (*v0 != 1) {
    uint64_t v1 = 0x726F70736E617274;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_21939623C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2193A8BC8();
  *a1 = result;
  return result;
}

uint64_t sub_21939626C(uint64_t a1)
{
  unint64_t v2 = sub_2193A7938();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2193962A8(uint64_t a1)
{
  unint64_t v2 = sub_2193A7938();

  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_2193962E4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2193A83D4(a1, (uint64_t *)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_21939632C(void *a1)
{
  return sub_219395DA8(a1);
}

uint64_t sub_219396368(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return sub_2193A28D4(v5, v7) & 1;
}

uint64_t sub_2193963B4(char *a1, char *a2)
{
  return sub_2193614F0(*a1, *a2);
}

uint64_t sub_2193963C0()
{
  return sub_2193E3230();
}

uint64_t sub_219396440()
{
  sub_2193E28D0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2193964AC()
{
  return sub_2193E3230();
}

uint64_t sub_219396528@<X0>(char *a1@<X8>)
{
  return sub_219398044(a1);
}

void sub_219396534(uint64_t *a1@<X8>)
{
  uint64_t v2 = 6713968;
  if (!*v1) {
    uint64_t v2 = 0x6F6C42656772616CLL;
  }
  unint64_t v3 = 0xE900000000000062;
  if (*v1) {
    unint64_t v3 = 0xE300000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_219396570@<X0>(char *a1@<X8>)
{
  return sub_219398118(a1);
}

uint64_t sub_21939657C(uint64_t a1)
{
  unint64_t v2 = sub_2193A2FA8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2193965B8(uint64_t a1)
{
  unint64_t v2 = sub_2193A2FA8();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_2193965F4(uint64_t *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 16) == 2)
  {
    unint64_t v3 = *(void *)(v1 + 32);
    if (v3 >> 60 == 15)
    {
      uint64_t v5 = 0;
      unint64_t v7 = 0xB000000000000000;
    }
    else
    {
      uint64_t v4 = *(void *)(v1 + 24);
      sub_21934CDF0(v4, *(void *)(v1 + 32));
      uint64_t v5 = sub_2193E2020();
      unint64_t v7 = v6;
      sub_21934CEB0(v4, v3);
    }
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  *a1 = v5;
  a1[1] = v7;
}

uint64_t ASCTAPExtensionInput.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19698);
  uint64_t v23 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = *v1;
  long long v20 = v1[1];
  long long v21 = v6;
  uint64_t v8 = *((void *)v1 + 4);
  uint64_t v7 = *((void *)v1 + 5);
  char v9 = *((unsigned char *)v1 + 48);
  uint64_t v10 = *((void *)v1 + 7);
  uint64_t v18 = *((void *)v1 + 8);
  uint64_t v19 = v10;
  uint64_t v11 = *((void *)v1 + 9);
  uint64_t v16 = *((void *)v1 + 10);
  uint64_t v17 = v11;
  uint64_t v15 = *((void *)v1 + 11);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193A2FA8();
  sub_2193E3260();
  long long v24 = v21;
  long long v25 = v20;
  uint64_t v26 = v8;
  uint64_t v27 = v7;
  char v28 = v9;
  char v29 = 0;
  sub_2193A2FFC();
  uint64_t v12 = v22;
  sub_2193E30A0();
  if (!v12)
  {
    *(void *)&long long v24 = v19;
    *((void *)&v24 + 1) = v18;
    *(void *)&long long v25 = v17;
    *((void *)&v25 + 1) = v16;
    uint64_t v26 = v15;
    char v29 = 1;
    sub_2193A3050();
    sub_2193E30A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v5, v3);
}

void ASCTAPExtensionInput.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C196B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193A2FA8();
  sub_2193E3240();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    char v46 = 0;
    sub_2193A30A4();
    sub_2193E2FE0();
    uint64_t v9 = v39;
    uint64_t v10 = v40;
    char v46 = 1;
    uint64_t v34 = v41;
    uint64_t v35 = v38;
    uint64_t v36 = v43;
    unint64_t v37 = v42;
    int v45 = v44;
    sub_21934CFA8(v38, v39, v40, v41, v42);
    sub_2193A30F8();
    sub_2193E2FE0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    unint64_t v11 = v39;
    unint64_t v12 = v41;
    uint64_t v32 = v40;
    uint64_t v33 = v38;
    uint64_t v30 = v41;
    uint64_t v31 = v39;
    uint64_t v13 = v42;
    uint64_t v14 = v9;
    uint64_t v15 = v35;
    uint64_t v16 = v10;
    uint64_t v17 = v14;
    uint64_t v28 = v16;
    sub_21934CFA8(v35, v14, v16, v34, v37);
    uint64_t v29 = v13;
    sub_21934CFF8(v33, v11, v32, v12, v13);
    uint64_t v18 = v16;
    uint64_t v19 = v34;
    uint64_t v21 = v36;
    unint64_t v20 = v37;
    LOBYTE(v13) = v45;
    sub_21934CEC4(v15, v17, v18, v34, v37);
    *(void *)a2 = v15;
    *(void *)(a2 + 8) = v17;
    uint64_t v22 = v28;
    *(void *)(a2 + 16) = v28;
    *(void *)(a2 + 24) = v19;
    *(void *)(a2 + 32) = v20;
    *(void *)(a2 + 40) = v21;
    *(unsigned char *)(a2 + 48) = v13;
    uint64_t v24 = v30;
    uint64_t v23 = v31;
    *(void *)(a2 + 56) = v33;
    *(void *)(a2 + 64) = v23;
    *(void *)(a2 + 72) = v32;
    *(void *)(a2 + 80) = v24;
    uint64_t v25 = v29;
    *(void *)(a2 + 88) = v29;
    uint64_t v26 = v25;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    sub_21934CEC4(v35, v17, v22, v19, v37);
    sub_2193A8EB4(v33, v23, v32, v24, v26, (void (*)(void))sub_21934CF58);
  }
}

void sub_219396CAC(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_219396CC4(void *a1)
{
  return ASCTAPExtensionInput.encode(to:)(a1);
}

uint64_t sub_219396CE0(unsigned __int8 *a1, char *a2)
{
  return sub_219360F54(*a1, *a2);
}

uint64_t sub_219396CEC()
{
  return sub_2193E3230();
}

uint64_t sub_219396DC4()
{
  sub_2193E28D0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_219396E84()
{
  return sub_2193E3230();
}

uint64_t sub_219396F58@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2193A8704();
  *a1 = result;
  return result;
}

void sub_219396F88(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x74726F70707573;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1684104562;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6574697277;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    case 3:
      strcpy((char *)a1, "originalSize");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_219397020()
{
  uint64_t result = 0x74726F70707573;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1684104562;
      break;
    case 2:
      uint64_t result = 0x6574697277;
      break;
    case 3:
      uint64_t result = 0x6C616E696769726FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2193970AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2193A8704();
  *a1 = result;
  return result;
}

void sub_2193970D4(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_2193970E0(uint64_t a1)
{
  unint64_t v2 = sub_2193A314C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21939711C(uint64_t a1)
{
  unint64_t v2 = sub_2193A314C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASCTAPLargeBlobExtensionInput.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C196D0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  unint64_t v37 = a1;
  __swift_project_boxed_opaque_existential_1Tm(a1, v9);
  unint64_t v10 = sub_2193A314C();
  sub_2193E3240();
  if (v2) {
    goto LABEL_3;
  }
  uint64_t v36 = a2;
  LOBYTE(v38) = 0;
  unint64_t v11 = v8;
  uint64_t v12 = sub_2193E2FA0();
  uint64_t v14 = v13;
  uint64_t v15 = v12;
  LOBYTE(v38) = 1;
  uint64_t v16 = v5;
  uint64_t v17 = v11;
  uint64_t v18 = v6;
  int v45 = sub_2193E2FB0();
  char v46 = 2;
  sub_21934D774();
  sub_2193E2FE0();
  unint64_t v21 = v39;
  uint64_t v35 = v38;
  LOBYTE(v38) = 3;
  uint64_t v22 = sub_2193E2FD0();
  if (v23)
  {
    ASCTAPLargeBlobExtensionInput.init(support:read:uncompressedWrite:)(v15, v14, v45, v35, v21, (uint64_t)&v38);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v16);
    uint64_t v29 = v36;
    uint64_t v15 = v38;
    uint64_t v14 = v39;
    char v30 = v40;
    uint64_t v31 = v41;
    unint64_t v32 = v42;
    uint64_t v33 = v43;
    char v34 = v44;
    uint64_t v19 = (uint64_t)v37;
LABEL_10:
    *(void *)uint64_t v29 = v15;
    *(void *)(v29 + 8) = v14;
    *(unsigned char *)(v29 + 16) = v30;
    *(void *)(v29 + 24) = v31;
    *(void *)(v29 + 32) = v32;
    *(void *)(v29 + 40) = v33;
    *(unsigned char *)(v29 + 48) = v34;
    return __swift_destroy_boxed_opaque_existential_1Tm(v19);
  }
  if (v21 >> 60 != 15)
  {
    uint64_t v33 = v22;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v17, v16);
    unint64_t v32 = v21;
    char v34 = 0;
    uint64_t v29 = v36;
    uint64_t v19 = (uint64_t)v37;
    char v30 = v45;
    uint64_t v31 = v35;
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_2193E2DD0();
  swift_allocError();
  uint64_t v25 = v18;
  uint64_t v27 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C196E0);
  *(void *)(v27 + 24) = &type metadata for ASCTAPLargeBlobExtensionInput.CodingKeys;
  *(void *)(v27 + 32) = v10;
  *(unsigned char *)uint64_t v27 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C196E8);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_2193E7190;
  *(void *)(v28 + 56) = &type metadata for ASCTAPLargeBlobExtensionInput.CodingKeys;
  *(void *)(v28 + 64) = v10;
  *(unsigned char *)(v28 + 32) = 2;
  sub_2193E2DC0();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v27, *MEMORY[0x263F8DCA8], v24);
  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v16);
LABEL_3:
  uint64_t v19 = (uint64_t)v37;
  return __swift_destroy_boxed_opaque_existential_1Tm(v19);
}

uint64_t ASCTAPLargeBlobExtensionInput.encode(to:)(void *a1)
{
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C196F0);
  uint64_t v41 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  int v45 = &v37[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_2193E2E80();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v49 = &v37[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v37[-v8];
  uint64_t v10 = *v1;
  uint64_t v42 = v1[1];
  uint64_t v43 = v10;
  int v52 = *((unsigned __int8 *)v1 + 16);
  uint64_t v11 = v1[4];
  *(void *)&long long v40 = v1[3];
  *((void *)&v40 + 1) = v11;
  uint64_t v39 = v1[5];
  int v38 = *((unsigned __int8 *)v1 + 48);
  uint64_t v12 = a1[4];
  uint64_t v47 = __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  uint64_t v48 = v12;
  uint64_t v13 = sub_2193E3250();
  if (qword_267C18A18 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v4, (uint64_t)qword_267C1A320);
  uint64_t v15 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16);
  v15(v9, v14, v4);
  if (*(void *)(v13 + 16) && (unint64_t v16 = sub_2193859A4((uint64_t)v9), (v17 & 1) != 0))
  {
    sub_21934F0D8(*(void *)(v13 + 56) + 32 * v16, (uint64_t)&v50);
  }
  else
  {
    long long v50 = 0u;
    long long v51 = 0u;
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = *(unsigned char **)(v5 + 8);
  ((void (*)(unsigned char *, uint64_t))v18)(v9, v4);
  if (*((void *)&v51 + 1))
  {
    if (swift_dynamicCast())
    {
      char v19 = v53;
      __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
      sub_2193A314C();
      unint64_t v20 = v45;
      sub_2193E3260();
      LOBYTE(v50) = 0;
      uint64_t v21 = v46;
      uint64_t v22 = v44;
      sub_2193E3060();
      if (v22) {
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v41 + 8))(v20, v21);
      }
      LOBYTE(v50) = 1;
      sub_2193E3070();
      unint64_t v23 = *((void *)&v40 + 1);
      if (*((void *)&v40 + 1) >> 60 == 15) {
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v41 + 8))(v20, v21);
      }
      if (v19)
      {
        uint64_t v32 = v40;
        sub_21934CDF0(v40, *((unint64_t *)&v40 + 1));
        uint64_t v34 = sub_2193E2020();
        unint64_t v36 = v35;
        *(void *)&long long v50 = v34;
        *((void *)&v50 + 1) = v35;
        char v53 = 2;
        sub_21934D644();
        sub_2193E30D0();
        (*(void (**)(unsigned char *, uint64_t))(v41 + 8))(v20, v21);
        sub_21934CEB0(v32, v23);
        return sub_219348A70(v34, v36);
      }
      else
      {
        uint64_t v33 = v40;
        long long v50 = v40;
        char v53 = 2;
        sub_21934CDF0(v40, *((unint64_t *)&v40 + 1));
        sub_21934D644();
        sub_2193E30D0();
        *(void *)&long long v50 = v39;
        BYTE8(v50) = v38;
        char v53 = 3;
        __swift_instantiateConcreteTypeFromMangledName(&qword_267C19700);
        sub_219389098(&qword_267C19708, &qword_267C19700);
        sub_2193E30D0();
        (*(void (**)(unsigned char *, uint64_t))(v41 + 8))(v20, v21);
        return sub_21934CEB0(v33, v23);
      }
    }
    int v45 = v18;
  }
  else
  {
    int v45 = v18;
    sub_219360620((uint64_t)&v50, &qword_267C18E40);
  }
  uint64_t v25 = sub_2193E2DF0();
  uint64_t v46 = swift_allocError();
  uint64_t v27 = v26;
  uint64_t v28 = sub_2193E3250();
  uint64_t v29 = (uint64_t)v49;
  v15(v49, v14, v4);
  if (*(void *)(v28 + 16) && (unint64_t v30 = sub_2193859A4(v29), (v31 & 1) != 0))
  {
    sub_21934F0D8(*(void *)(v28 + 56) + 32 * v30, (uint64_t)&v50);
  }
  else
  {
    long long v50 = 0u;
    long long v51 = 0u;
  }
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t, uint64_t))v45)(v29, v4);
  if (*((void *)&v51 + 1))
  {
    sub_21936A4F8(&v50, (_OWORD *)v27);
  }
  else
  {
    *(void *)(v27 + 24) = MEMORY[0x263F8D310];
    *(void *)uint64_t v27 = 7104878;
    *(void *)(v27 + 8) = 0xE300000000000000;
    sub_219360620((uint64_t)&v50, &qword_267C18E40);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C196F8);
  sub_2193E2DC0();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v27, *MEMORY[0x263F8DCE0], v25);
  return swift_willThrow();
}

uint64_t sub_219397C24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ASCTAPLargeBlobExtensionInput.init(from:)(a1, a2);
}

uint64_t sub_219397C3C(void *a1)
{
  return ASCTAPLargeBlobExtensionInput.encode(to:)(a1);
}

uint64_t sub_219397C58(char *a1, char *a2)
{
  return sub_219361348(*a1, *a2);
}

uint64_t sub_219397C64()
{
  return sub_2193E3230();
}

uint64_t sub_219397CE4()
{
  sub_2193E28D0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_219397D50()
{
  return sub_2193E3230();
}

uint64_t sub_219397DCC@<X0>(char *a1@<X8>)
{
  return sub_219398044(a1);
}

void sub_219397DD8(unint64_t *a1@<X8>)
{
  unint64_t v2 = 1818326629;
  if (*v1) {
    unint64_t v2 = 0xD000000000000010;
  }
  unint64_t v3 = 0x80000002193F02F0;
  if (!*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_219397E14()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 1818326629;
  }
}

uint64_t sub_219397E4C@<X0>(char *a1@<X8>)
{
  return sub_219398118(a1);
}

uint64_t sub_219397E58(uint64_t a1)
{
  unint64_t v2 = sub_2193A31A0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_219397E94(uint64_t a1)
{
  unint64_t v2 = sub_2193A31A0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_219397ED0(char *a1, char *a2)
{
  return sub_2193612A8(*a1, *a2);
}

uint64_t sub_219397EDC()
{
  return sub_2193E3230();
}

uint64_t sub_219397F58()
{
  sub_2193E28D0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_219397FC0()
{
  return sub_2193E3230();
}

uint64_t sub_219398038@<X0>(char *a1@<X8>)
{
  return sub_219398044(a1);
}

uint64_t sub_219398044@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_2193E2F70();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_2193980A0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7473726966;
  if (*v1) {
    uint64_t v2 = 0x646E6F636573;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2193980D8()
{
  if (*v0) {
    return 0x646E6F636573;
  }
  else {
    return 0x7473726966;
  }
}

uint64_t sub_21939810C@<X0>(char *a1@<X8>)
{
  return sub_219398118(a1);
}

uint64_t sub_219398118@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_2193E2F70();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_219398178(uint64_t a1)
{
  unint64_t v2 = sub_2193A899C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2193981B4(uint64_t a1)
{
  unint64_t v2 = sub_2193A899C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2193981F0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = a4;
  uint64_t v15 = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C199A0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193A899C();
  sub_2193E3260();
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  char v18 = 0;
  sub_21934D644();
  sub_2193E30D0();
  if (!v5)
  {
    uint64_t v16 = v14;
    uint64_t v17 = v15;
    char v18 = 1;
    sub_2193E30A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_219398390@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_2193A8750(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_2193983C0(void *a1)
{
  return sub_2193981F0(a1, *v1, v1[1], v1[2], v1[3]);
}

BOOL sub_2193983E0(uint64_t a1, uint64_t a2)
{
  return sub_2193A12B0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(void *)(a2 + 24));
}

uint64_t sub_219398400@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ASCTAPPRFExtensionInput.init(from:)(a1, a2);
}

uint64_t ASCTAPPRFExtensionInput.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  long long v125 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19710);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19718);
  uint64_t v126 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  unint64_t v10 = sub_2193A31A0();
  sub_2193E3240();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  unint64_t v121 = v10;
  long long v123 = a1;
  LOBYTE(v131) = 0;
  unint64_t v12 = sub_2193A31F4();
  sub_2193E2FE0();
  uint64_t v13 = (uint64_t)v127;
  unint64_t v14 = v128;
  uint64_t v15 = v9;
  uint64_t v16 = v129;
  unint64_t v17 = v130;
  uint64_t v18 = sub_2193E22D0();
  uint64_t v124 = 0;
  uint64_t v19 = v18;
  LOBYTE(v127) = 1;
  sub_21934D03C(v13, v14, v16, v17);
  sub_2193A3248(&qword_267C19730, MEMORY[0x263F2BE90]);
  uint64_t v20 = v124;
  sub_2193E2FE0();
  uint64_t v124 = v20;
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v126 + 8))(v15, v7);
    sub_21934CF58(v13, v14, v16, v17);
    uint64_t v21 = v16;
LABEL_5:
    uint64_t v22 = (uint64_t)v123;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm(v22);
    return sub_21934CF58(v13, v14, v21, v17);
  }
  uint64_t v116 = v15;
  unint64_t v111 = v17;
  uint64_t v109 = v16;
  unint64_t v110 = v14;
  uint64_t v112 = v13;
  uint64_t v23 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v6, 1, v19) == 1)
  {
    sub_219360620((uint64_t)v6, &qword_267C19710);
    uint64_t v24 = 0;
    uint64_t v25 = v116;
    uint64_t v26 = v125;
    uint64_t v27 = v7;
LABEL_58:
    uint64_t v101 = (uint64_t)v123;
    (*(void (**)(char *, uint64_t))(v126 + 8))(v25, v27);
    unint64_t v103 = v111;
    uint64_t v102 = v112;
    unint64_t v104 = v110;
    uint64_t v105 = v109;
    sub_21934D03C(v112, v110, v109, v111);
    swift_bridgeObjectRetain();
    sub_21934CF58(v102, v104, v105, v103);
    *uint64_t v26 = v102;
    v26[1] = v104;
    void v26[2] = v105;
    v26[3] = v103;
    v26[4] = (uint64_t)v24;
    __swift_destroy_boxed_opaque_existential_1Tm(v101);
    sub_21934CF58(v102, v104, v105, v103);
    return swift_bridgeObjectRelease();
  }
  uint64_t v28 = (void *)sub_2193E22C0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v19);
  id v29 = objc_msgSend(v28, sel_dictionary);

  uint64_t v25 = v116;
  uint64_t v26 = v125;
  if (!v29)
  {
    uint64_t v24 = 0;
    uint64_t v27 = v7;
    goto LABEL_58;
  }
  unint64_t v114 = v12;
  uint64_t v30 = sub_2193607AC(0, (unint64_t *)&qword_267C194C8);
  sub_2193A3290();
  v106[3] = v30;
  unint64_t v31 = sub_2193E27A0();

  uint64_t v32 = (void *)sub_219391808(MEMORY[0x263F8EE78]);
  swift_bridgeObjectRelease();
  if ((v31 & 0xC000000000000001) != 0)
  {
    uint64_t v33 = sub_2193E2EA0();
    unint64_t v108 = 0;
    uint64_t v34 = 0;
    unint64_t v35 = 0;
    unint64_t v31 = v33 | 0x8000000000000000;
  }
  else
  {
    uint64_t v36 = -1 << *(unsigned char *)(v31 + 32);
    uint64_t v37 = *(void *)(v31 + 64);
    unint64_t v108 = v31 + 64;
    uint64_t v38 = ~v36;
    uint64_t v39 = -v36;
    if (v39 < 64) {
      uint64_t v40 = ~(-1 << v39);
    }
    else {
      uint64_t v40 = -1;
    }
    unint64_t v35 = v40 & v37;
    uint64_t v34 = v38;
  }
  uint64_t v27 = v7;
  int64_t v41 = 0;
  v106[4] = v31 & 0x7FFFFFFFFFFFFFFFLL;
  v106[1] = v34;
  int64_t v107 = (unint64_t)(v34 + 64) >> 6;
  v106[2] = MEMORY[0x263F8EE50] + 8;
  uint64_t v113 = v7;
  unint64_t v115 = v31;
  while (1)
  {
    id v117 = (id)v41;
    uint64_t v118 = v35;
    if ((v31 & 0x8000000000000000) != 0)
    {
      uint64_t v53 = sub_2193E2ED0();
      if (!v53) {
        goto LABEL_57;
      }
      uint64_t v55 = v54;
      uint64_t v131 = v53;
      swift_unknownObjectRetain();
      swift_dynamicCast();
      long long v56 = v127;
      swift_unknownObjectRelease();
      uint64_t v131 = v55;
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v122 = v127;
      swift_unknownObjectRelease();
      int64_t v52 = (int64_t)v117;
      uint64_t v120 = v118;
      id v57 = v56;
    }
    else
    {
      if (v35)
      {
        uint64_t v120 = (v35 - 1) & v35;
        unint64_t v51 = __clz(__rbit64(v35)) | (v41 << 6);
        int64_t v52 = v41;
      }
      else
      {
        int64_t v52 = v41 + 1;
        if (__OFADD__(v41, 1)) {
          goto LABEL_61;
        }
        if (v52 >= v107) {
          goto LABEL_57;
        }
        unint64_t v58 = *(void *)(v108 + 8 * v52);
        if (!v58)
        {
          int64_t v59 = v41 + 2;
          if (v41 + 2 >= v107) {
            goto LABEL_57;
          }
          unint64_t v58 = *(void *)(v108 + 8 * v59);
          if (v58) {
            goto LABEL_31;
          }
          int64_t v59 = v41 + 3;
          if (v41 + 3 >= v107) {
            goto LABEL_57;
          }
          unint64_t v58 = *(void *)(v108 + 8 * v59);
          if (v58)
          {
LABEL_31:
            int64_t v52 = v59;
          }
          else
          {
            int64_t v52 = v41 + 4;
            if (v41 + 4 >= v107) {
              goto LABEL_57;
            }
            unint64_t v58 = *(void *)(v108 + 8 * v52);
            if (!v58)
            {
              int64_t v89 = v41 + 5;
              while (v107 != v89)
              {
                unint64_t v58 = *(void *)(v108 + 8 * v89++);
                if (v58)
                {
                  int64_t v52 = v89 - 1;
                  goto LABEL_32;
                }
              }
LABEL_57:
              sub_2193A32F8();
              uint64_t v24 = v32;
              goto LABEL_58;
            }
          }
        }
LABEL_32:
        uint64_t v120 = (v58 - 1) & v58;
        unint64_t v51 = __clz(__rbit64(v58)) + (v52 << 6);
      }
      uint64_t v60 = 8 * v51;
      uint64_t v61 = *(void **)(*(void *)(v31 + 56) + v60);
      id v57 = *(id *)(*(void *)(v31 + 48) + v60);
      id v122 = v61;
    }
    if (!v57) {
      goto LABEL_57;
    }
    uint64_t v62 = v27;
    id v63 = objc_msgSend(v57, sel_data);
    if (!v63)
    {
      unint64_t v14 = v110;
      uint64_t v90 = v57;
      uint64_t v91 = v109;
      sub_21934CF58(v112, v110, v109, v111);
      uint64_t v92 = sub_2193E2DD0();
      uint64_t v93 = swift_allocError();
      uint64_t v95 = v94;
      __swift_instantiateConcreteTypeFromMangledName(&qword_267C196E8);
      uint64_t v96 = swift_allocObject();
      *(_OWORD *)(v96 + 16) = xmmword_2193E7190;
      unint64_t v97 = v121;
      *(void *)(v96 + 56) = &type metadata for ASCTAPPRFExtensionInput.CodingKeys;
      *(void *)(v96 + 64) = v97;
      *(unsigned char *)(v96 + 32) = 1;
      sub_2193E2DC0();
      uint64_t v98 = *(void (**)(uint64_t, void, uint64_t))(*(void *)(v92 - 8) + 104);
      uint64_t v99 = v92;
      uint64_t v21 = v91;
      v98(v95, *MEMORY[0x263F8DCB8], v99);
      uint64_t v124 = v93;
      swift_willThrow();

      sub_2193A32F8();
      (*(void (**)(char *, uint64_t))(v126 + 8))(v25, v27);
      unint64_t v17 = v111;
      uint64_t v13 = v112;
      goto LABEL_5;
    }
    uint64_t v64 = v63;
    int64_t v119 = v52;
    uint64_t v65 = sub_2193E2130();
    unint64_t v67 = v66;

    sub_2193E2230();
    swift_allocObject();
    sub_2193E2220();
    uint64_t v68 = v124;
    sub_2193E2210();
    uint64_t v124 = v68;
    if (v68)
    {
      swift_release();

      sub_219348A70(v65, v67);
      uint64_t v13 = v112;
      unint64_t v14 = v110;
      uint64_t v21 = v109;
      uint64_t v100 = v25;
      unint64_t v17 = v111;
      sub_21934CF58(v112, v110, v109, v111);
      sub_2193A32F8();
      (*(void (**)(char *, uint64_t))(v126 + 8))(v100, v62);
      goto LABEL_5;
    }
    id v117 = v57;
    swift_release();
    if (!v32) {
      break;
    }
    uint64_t v69 = (uint64_t)v127;
    unint64_t v70 = v128;
    uint64_t v72 = v129;
    unint64_t v71 = v130;
    sub_21934CDF0(v65, v67);
    uint64_t v118 = v69;
    sub_21934CDF0(v69, v70);
    unint64_t v73 = v71;
    sub_21934CE48(v72, v71);
    unint64_t v74 = v32;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v127 = v74;
    unint64_t v77 = sub_2193858E4(v65, v67);
    uint64_t v78 = v74[2];
    BOOL v79 = (v76 & 1) == 0;
    uint64_t v80 = v78 + v79;
    if (__OFADD__(v78, v79))
    {
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
      break;
    }
    char v81 = v76;
    if (v74[3] >= v80)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v32 = v127;
        if (v76) {
          goto LABEL_17;
        }
      }
      else
      {
        sub_2193A09C0();
        uint64_t v32 = v127;
        if (v81) {
          goto LABEL_17;
        }
      }
    }
    else
    {
      sub_21939F198(v80, isUniquelyReferenced_nonNull_native);
      uint64_t v82 = sub_2193858E4(v65, v67);
      if ((v81 & 1) != (v83 & 1)) {
        goto LABEL_63;
      }
      unint64_t v77 = v82;
      uint64_t v32 = v127;
      if (v81)
      {
LABEL_17:
        uint64_t v42 = (uint64_t *)(v32[7] + 32 * v77);
        uint64_t v43 = v32;
        uint64_t v44 = v42[2];
        unint64_t v45 = v42[3];
        sub_219348A70(*v42, v42[1]);
        unint64_t v46 = v45;
        uint64_t v32 = v43;
        sub_21934CEB0(v44, v46);
        uint64_t v47 = v118;
        uint64_t *v42 = v118;
        v42[1] = v70;
        v42[2] = v72;
        v42[3] = v73;
        unint64_t v48 = v73;
        uint64_t v49 = v47;
        goto LABEL_18;
      }
    }
    v32[(v77 >> 6) + 8] |= 1 << v77;
    uint64_t v84 = (uint64_t *)(v32[6] + 16 * v77);
    uint64_t *v84 = v65;
    v84[1] = v67;
    uint64_t v85 = (uint64_t *)(v32[7] + 32 * v77);
    uint64_t v49 = v118;
    *uint64_t v85 = v118;
    v85[1] = v70;
    _OWORD v85[2] = v72;
    v85[3] = v73;
    uint64_t v86 = v32[2];
    BOOL v87 = __OFADD__(v86, 1);
    uint64_t v88 = v86 + 1;
    if (v87) {
      goto LABEL_60;
    }
    unint64_t v48 = v73;
    v32[2] = v88;
    sub_21934CDF0(v65, v67);
LABEL_18:
    uint64_t v26 = v125;
    long long v50 = v117;
    swift_bridgeObjectRelease();
    sub_219348A70(v65, v67);

    sub_219348A70(v65, v67);
    sub_219348A70(v49, v70);
    sub_21934CEB0(v72, v48);
    int64_t v41 = v119;
    unint64_t v35 = v120;
    uint64_t v27 = v113;
    unint64_t v31 = v115;
    uint64_t v25 = v116;
  }
  __break(1u);
LABEL_63:
  uint64_t result = sub_2193E3180();
  __break(1u);
  return result;
}

uint64_t sub_219398FE4(void *a1)
{
  return ASCTAPPRFExtensionInput.encode(to:)(a1);
}

uint64_t ASCTAPPRFExtensionInput.encode(to:)(void *a1)
{
  uint64_t v70 = sub_2193E22D0();
  uint64_t v74 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v69 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19740);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v82 = *v1;
  uint64_t v8 = *((void *)v1 + 2);
  unint64_t v9 = *((void *)v1 + 3);
  uint64_t v75 = *((void *)v1 + 4);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193A31A0();
  sub_2193E3260();
  long long v84 = v82;
  uint64_t v85 = v8;
  unint64_t v86 = v9;
  char v87 = 0;
  unint64_t v10 = sub_2193A3300();
  uint64_t v11 = v83;
  sub_2193E30A0();
  if (v11) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v83 = 0;
  uint64_t v68 = v7;
  uint64_t v13 = v75;
  if (!v75) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v68, v4);
  }
  unint64_t v73 = v10;
  uint64_t v66 = v5;
  uint64_t v67 = v4;
  swift_bridgeObjectRetain();
  unint64_t v14 = (void *)sub_219391270(MEMORY[0x263F8EE78]);
  int64_t v15 = 0;
  uint64_t v16 = *(void *)(v13 + 64);
  uint64_t v71 = v13 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v72 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v20 = v74;
  while (1)
  {
    *(void *)&long long v82 = v14;
    if (v19)
    {
      uint64_t v76 = (v19 - 1) & v19;
      int64_t v77 = v15;
      unint64_t v22 = __clz(__rbit64(v19)) | (v15 << 6);
    }
    else
    {
      BOOL v23 = __OFADD__(v15, 1);
      int64_t v24 = v15 + 1;
      if (v23) {
        goto LABEL_49;
      }
      if (v24 >= v72)
      {
LABEL_45:
        swift_release();
        sub_2193607AC(0, (unint64_t *)&qword_267C194C8);
        sub_2193A3290();
        uint64_t v60 = (void *)sub_2193E2790();
        swift_bridgeObjectRelease();
        id v61 = objc_msgSend(self, sel_cborWithDictionary_, v60);

        uint64_t v62 = v69;
        sub_2193E22B0();
        LOBYTE(v84) = 1;
        sub_2193A3248(&qword_267C19750, MEMORY[0x263F2BE90]);
        uint64_t v63 = v67;
        uint64_t v64 = v70;
        uint64_t v65 = v68;
        sub_2193E30D0();
        (*(void (**)(char *, uint64_t))(v20 + 8))(v62, v64);
        return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v65, v63);
      }
      unint64_t v25 = *(void *)(v71 + 8 * v24);
      if (!v25)
      {
        int64_t v26 = v24 + 1;
        if (v24 + 1 >= v72) {
          goto LABEL_45;
        }
        unint64_t v25 = *(void *)(v71 + 8 * v26);
        if (!v25)
        {
          int64_t v26 = v24 + 2;
          if (v24 + 2 >= v72) {
            goto LABEL_45;
          }
          unint64_t v25 = *(void *)(v71 + 8 * v26);
          if (!v25)
          {
            int64_t v26 = v24 + 3;
            if (v24 + 3 >= v72) {
              goto LABEL_45;
            }
            unint64_t v25 = *(void *)(v71 + 8 * v26);
            if (!v25)
            {
              while (1)
              {
                int64_t v24 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_50;
                }
                if (v24 >= v72) {
                  goto LABEL_45;
                }
                unint64_t v25 = *(void *)(v71 + 8 * v24);
                ++v26;
                if (v25) {
                  goto LABEL_21;
                }
              }
            }
          }
        }
        int64_t v24 = v26;
      }
LABEL_21:
      uint64_t v76 = (v25 - 1) & v25;
      int64_t v77 = v24;
      unint64_t v22 = __clz(__rbit64(v25)) + (v24 << 6);
    }
    uint64_t v27 = (uint64_t *)(*(void *)(v13 + 48) + 16 * v22);
    uint64_t v28 = *v27;
    unint64_t v29 = v27[1];
    uint64_t v30 = (uint64_t *)(*(void *)(v13 + 56) + 32 * v22);
    uint64_t v32 = *v30;
    unint64_t v31 = v30[1];
    uint64_t v34 = v30[2];
    unint64_t v33 = v30[3];
    sub_21934CDF0(*v27, v29);
    sub_21934CDF0(v28, v29);
    sub_21934CDF0(v32, v31);
    sub_21934CE48(v34, v33);
    unint64_t v35 = (void *)sub_2193E2110();
    id v36 = objc_msgSend(self, sel_cborWithData_, v35);
    sub_219348A70(v28, v29);

    sub_2193E22A0();
    swift_allocObject();
    sub_2193E2290();
    uint64_t v78 = v32;
    unint64_t v79 = v31;
    *(void *)&long long v84 = v32;
    *((void *)&v84 + 1) = v31;
    unint64_t v80 = v33;
    uint64_t v81 = v34;
    uint64_t v85 = v34;
    unint64_t v86 = v33;
    uint64_t v37 = v83;
    uint64_t v38 = sub_2193E2240();
    if (v37)
    {

      swift_release();
      sub_219348A70(v28, v29);
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v68, v67);
      sub_219348A70(v78, v79);
      return sub_21934CEB0(v81, v80);
    }
    uint64_t v39 = (void *)v38;
    swift_release();
    uint64_t v40 = v82;
    uint64_t v83 = 0;
    if ((v82 & 0xC000000000000001) != 0)
    {
      if ((uint64_t)v82 < 0) {
        uint64_t v41 = v82;
      }
      else {
        uint64_t v41 = v82 & 0xFFFFFFFFFFFFFF8;
      }
      id v42 = v36;
      id v43 = v39;
      uint64_t v44 = sub_2193E2CF0();
      if (__OFADD__(v44, 1)) {
        goto LABEL_47;
      }
      uint64_t v40 = sub_21939FE48(v41, v44 + 1);
    }
    else
    {
      id v45 = v36;
      id v46 = v39;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v84 = v40;
    unint64_t v49 = sub_219385A08((uint64_t)v36);
    uint64_t v50 = *(void *)(v40 + 16);
    BOOL v51 = (v48 & 1) == 0;
    uint64_t v52 = v50 + v51;
    if (__OFADD__(v50, v51)) {
      break;
    }
    char v53 = v48;
    if (*(void *)(v40 + 24) >= v52)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_2193A0660();
      }
    }
    else
    {
      sub_21939EBAC(v52, isUniquelyReferenced_nonNull_native);
      unint64_t v54 = sub_219385A08((uint64_t)v36);
      if ((v53 & 1) != (v55 & 1)) {
        goto LABEL_51;
      }
      unint64_t v49 = v54;
    }
    uint64_t v13 = v75;
    unint64_t v14 = (void *)v84;
    uint64_t v56 = 8 * v49;
    if (v53)
    {
      uint64_t v21 = *(void *)(v84 + 56);

      *(void *)(v21 + v56) = v39;
    }
    else
    {
      *(void *)(v84 + 8 * (v49 >> 6) + 64) |= 1 << v49;
      *(void *)(v14[6] + 8 * v49) = v36;
      *(void *)(v14[7] + 8 * v49) = v39;
      uint64_t v57 = v14[2];
      BOOL v23 = __OFADD__(v57, 1);
      uint64_t v58 = v57 + 1;
      if (v23) {
        goto LABEL_48;
      }
      void v14[2] = v58;
      id v59 = v36;
    }

    swift_bridgeObjectRelease();
    sub_219348A70(v28, v29);

    sub_219348A70(v78, v79);
    sub_21934CEB0(v81, v80);
    uint64_t v20 = v74;
    unint64_t v19 = v76;
    int64_t v15 = v77;
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  sub_2193607AC(0, (unint64_t *)&qword_267C194C8);
  uint64_t result = sub_2193E3180();
  __break(1u);
  return result;
}

uint64_t ASCTAPPRFExtensionOutput.enabled.getter()
{
  return *v0;
}

uint64_t ASCTAPPRFExtensionOutput.results.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[1];
  unint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  unint64_t v5 = v1[4];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_21934D03C(v2, v3, v4, v5);
}

uint64_t ASCTAPPRFExtensionOutput.Results.first.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_21934CDF0(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t ASCTAPPRFExtensionOutput.Results.second.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_21934CE48(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t sub_219399814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2193A89F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21939983C(uint64_t a1)
{
  unint64_t v2 = sub_2193A3354();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_219399878(uint64_t a1)
{
  unint64_t v2 = sub_2193A3354();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASCTAPPRFExtensionOutput.Results.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19758);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  uint64_t v9 = v1[2];
  uint64_t v13 = v1[3];
  uint64_t v14 = v9;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193A3354();
  sub_2193E3260();
  uint64_t v16 = v8;
  uint64_t v17 = v7;
  char v18 = 0;
  sub_21934D644();
  uint64_t v10 = v15;
  sub_2193E30D0();
  if (!v10)
  {
    uint64_t v16 = v14;
    uint64_t v17 = v13;
    char v18 = 1;
    sub_2193E30A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ASCTAPPRFExtensionOutput.Results.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19768);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193A3354();
  sub_2193E3240();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v16 = a2;
  char v19 = 0;
  sub_21934D774();
  sub_2193E3010();
  uint64_t v9 = v17;
  unint64_t v10 = v18;
  char v19 = 1;
  sub_21934CDF0(v17, v18);
  sub_2193E2FE0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v11 = v17;
  unint64_t v12 = v18;
  sub_21934CDF0(v9, v10);
  sub_21934CE48(v11, v12);
  sub_219348A70(v9, v10);
  uint64_t v13 = v16;
  uint64_t *v16 = v9;
  v13[1] = v10;
  v13[2] = v11;
  v13[3] = v12;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  sub_219348A70(v9, v10);
  return sub_21934CEB0(v11, v12);
}

uint64_t sub_219399CA8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ASCTAPPRFExtensionOutput.Results.init(from:)(a1, a2);
}

uint64_t sub_219399CC0(void *a1)
{
  return ASCTAPPRFExtensionOutput.Results.encode(to:)(a1);
}

uint64_t sub_219399CDC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19320);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v28[-v7];
  int v9 = *(unsigned __int8 *)v1;
  if (v9 == 2)
  {
    uint64_t v10 = type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(0);
    uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v12 = v10;
    uint64_t v13 = a1;
    uint64_t v14 = 1;
LABEL_5:
    return v11(v13, v14, 1, v12);
  }
  unint64_t v15 = v1[2];
  char v16 = v9 & 1;
  if (v15 >> 60 == 15)
  {
    uint64_t v17 = type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(0);
    unint64_t v18 = &a1[*(int *)(v17 + 20)];
    uint64_t v19 = sub_2193E26A0();
    uint64_t v20 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
    v20(v18, 1, 1, v19);
    v20(&a1[*(int *)(v17 + 24)], 1, 1, v19);
    *a1 = v16;
    uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v13 = a1;
    uint64_t v14 = 0;
    uint64_t v12 = v17;
    goto LABEL_5;
  }
  int v29 = v9 & 1;
  uint64_t v22 = v1[1];
  uint64_t v24 = v1[3];
  unint64_t v23 = v1[4];
  uint64_t v30 = v22;
  unint64_t v31 = v15;
  sub_21934D03C(v22, v15, v24, v23);
  sub_21934CDF0(v22, v15);
  sub_2193E2680();
  uint64_t v25 = sub_2193E26A0();
  int64_t v26 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  v26(v8, 0, 1, v25);
  if (v23 >> 60 == 15)
  {
    v26(v6, 1, 1, v25);
    sub_21934CF58(v22, v15, v24, v23);
  }
  else
  {
    uint64_t v30 = v24;
    unint64_t v31 = v23;
    sub_21934CDF0(v24, v23);
    sub_21934CDF0(v24, v23);
    sub_2193E2680();
    v26(v6, 0, 1, v25);
    sub_21934CF58(v22, v15, v24, v23);
    sub_21934CEB0(v24, v23);
  }
  *a1 = v29;
  uint64_t v27 = type metadata accessor for ASCPublicKeyCredentialRegistrationExtensionOutputs.PRF(0);
  sub_219360140((uint64_t)v8, (uint64_t)&a1[*(int *)(v27 + 20)], &qword_267C19320);
  sub_219360140((uint64_t)v6, (uint64_t)&a1[*(int *)(v27 + 24)], &qword_267C19320);
  return (*(uint64_t (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(a1, 0, 1, v27);
}

uint64_t sub_21939A084@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19320);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2193E26A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = v1[2];
  if (v10 >> 60 == 15)
  {
    uint64_t v11 = type metadata accessor for ASCPublicKeyCredentialAssertionExtensionOutputs.PRF(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    return v12(a1, 1, 1, v11);
  }
  else
  {
    uint64_t v14 = v1[1];
    uint64_t v16 = v1[3];
    unint64_t v15 = v1[4];
    uint64_t v18 = v14;
    unint64_t v19 = v10;
    sub_21934D03C(v14, v10, v16, v15);
    sub_21934CDF0(v14, v10);
    sub_2193E2680();
    if (v15 >> 60 == 15)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
      sub_21934CF58(v14, v10, v16, v15);
    }
    else
    {
      uint64_t v18 = v16;
      unint64_t v19 = v15;
      sub_21934CDF0(v16, v15);
      sub_21934CDF0(v16, v15);
      sub_2193E2680();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
      sub_21934CF58(v14, v10, v16, v15);
      sub_21934CEB0(v16, v15);
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v9, v6);
    uint64_t v17 = type metadata accessor for ASCPublicKeyCredentialAssertionExtensionOutputs.PRF(0);
    sub_219360140((uint64_t)v5, a1 + *(int *)(v17 + 20), &qword_267C19320);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 0, 1, v17);
  }
}

uint64_t sub_21939A390()
{
  if (*v0) {
    return 0x73746C75736572;
  }
  else {
    return 0x64656C62616E65;
  }
}

uint64_t sub_21939A3C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2193A8AD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21939A3EC(uint64_t a1)
{
  unint64_t v2 = sub_2193A33A8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21939A428(uint64_t a1)
{
  unint64_t v2 = sub_2193A33A8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASCTAPPRFExtensionOutput.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19770);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[1];
  uint64_t v13 = v1[2];
  uint64_t v14 = v8;
  uint64_t v9 = v1[3];
  uint64_t v11 = v1[4];
  uint64_t v12 = v9;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193A33A8();
  sub_2193E3260();
  LOBYTE(v15) = 0;
  sub_2193E3070();
  if (!v2)
  {
    uint64_t v15 = v14;
    uint64_t v16 = v13;
    uint64_t v17 = v12;
    uint64_t v18 = v11;
    char v19 = 1;
    sub_2193A33FC();
    sub_2193E30A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ASCTAPPRFExtensionOutput.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19788);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193A33A8();
  sub_2193E3240();
  if (!v2)
  {
    LOBYTE(v13[0]) = 0;
    char v9 = sub_2193E2FB0();
    char v14 = 1;
    sub_2193A3450();
    sub_2193E2FE0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v10 = v13[0];
    long long v11 = v13[1];
    *(unsigned char *)a2 = v9;
    *(_OWORD *)(a2 + 8) = v10;
    *(_OWORD *)(a2 + 24) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_21939A7CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ASCTAPPRFExtensionOutput.init(from:)(a1, a2);
}

uint64_t sub_21939A7E4(void *a1)
{
  return ASCTAPPRFExtensionOutput.encode(to:)(a1);
}

uint64_t ASCTAPExtensionOutput.largeBlob.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  unint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(v1 + 40);
  return sub_21935BAB0(v2, v3, v4);
}

uint64_t ASCTAPExtensionOutput.prf.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[6];
  uint64_t v3 = v1[7];
  unint64_t v4 = v1[8];
  uint64_t v5 = v1[9];
  unint64_t v6 = v1[10];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  return sub_21935BACC(v2, v3, v4, v5, v6);
}

uint64_t ASCTAPExtensionOutput.appID.getter()
{
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t sub_21939A848(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2193613EC(*a1, *a2);
}

uint64_t sub_21939A854()
{
  return sub_2193E3230();
}

uint64_t sub_21939A8F0()
{
  sub_2193E28D0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21939A978()
{
  return sub_2193E3230();
}

uint64_t sub_21939AA10@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2193A8BC8();
  *a1 = result;
  return result;
}

void sub_21939AA48(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE900000000000062;
  unint64_t v4 = 0xE300000000000000;
  uint64_t v5 = 6713968;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6469707061;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6F6C42656772616CLL;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_21939AAA0()
{
  uint64_t v1 = 6713968;
  if (*v0 != 1) {
    uint64_t v1 = 0x6469707061;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6F6C42656772616CLL;
  }
}

uint64_t sub_21939AAF4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2193A8BC8();
  *a1 = result;
  return result;
}

uint64_t sub_21939AB24(uint64_t a1)
{
  unint64_t v2 = sub_2193A34A4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21939AB60(uint64_t a1)
{
  unint64_t v2 = sub_2193A34A4();

  return MEMORY[0x270FA00B8](a1, v2);
}

AuthenticationServicesCore::ASCPublicKeyCredentialRegistrationExtensionOutputs::LargeBlob_optional __swiftcall ASCTAPLargeBlobExtensionOutput.toASCRegistration()()
{
  int v2 = *v1;
  if (v2 == 2) {
    char v3 = 2;
  }
  else {
    char v3 = v2 & 1;
  }
  *uint64_t v0 = v3;
  return result;
}

void ASCTAPLargeBlobExtensionOutput.toASCAssertion()(uint64_t a1@<X8>)
{
  int v3 = *(unsigned __int8 *)(v1 + 24);
  if (v3 != 2)
  {
    *(void *)a1 = v3 & 1;
    *(void *)(a1 + 8) = 0;
    char v6 = 1;
    goto LABEL_5;
  }
  uint64_t v4 = ASCTAPLargeBlobExtensionOutput.uncompressedBlob.getter();
  if (v5 >> 60 == 15)
  {
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    char v6 = -1;
LABEL_5:
    *(unsigned char *)(a1 + 16) = v6;
    return;
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = 0;
}

uint64_t ASCTAPExtensionOutput.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19798);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = *v1;
  long long v20 = v1[1];
  long long v21 = v7;
  uint64_t v8 = *((void *)v1 + 4);
  char v9 = *((unsigned char *)v1 + 40);
  uint64_t v10 = *((void *)v1 + 6);
  uint64_t v18 = *((void *)v1 + 7);
  uint64_t v19 = v10;
  uint64_t v11 = *((void *)v1 + 8);
  uint64_t v16 = *((void *)v1 + 9);
  uint64_t v17 = v11;
  uint64_t v15 = *((void *)v1 + 10);
  int v27 = *((unsigned __int8 *)v1 + 88);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193A34A4();
  sub_2193E3260();
  long long v23 = v21;
  long long v24 = v20;
  uint64_t v25 = v8;
  char v26 = v9;
  char v28 = 0;
  sub_2193A34F8();
  uint64_t v12 = v22;
  sub_2193E30A0();
  if (!v12)
  {
    *(void *)&long long v23 = v19;
    *((void *)&v23 + 1) = v18;
    *(void *)&long long v24 = v17;
    *((void *)&v24 + 1) = v16;
    uint64_t v25 = v15;
    char v28 = 1;
    sub_2193A354C();
    sub_2193E30A0();
    LOBYTE(v23) = 2;
    sub_2193E3070();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ASCTAPExtensionOutput.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C197B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193A34A4();
  sub_2193E3240();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  char v47 = 0;
  sub_2193A35A0();
  sub_2193E2FE0();
  uint64_t v34 = a2;
  uint64_t v9 = v43;
  unint64_t v10 = v44;
  int v11 = v45;
  char v47 = 1;
  uint64_t v37 = v40;
  uint64_t v38 = v41;
  unint64_t v39 = v42;
  sub_21935BAB0(v40, v41, v42);
  sub_2193A35F4();
  sub_2193E2FE0();
  int v46 = v11;
  unint64_t v32 = v10;
  uint64_t v33 = v9;
  uint64_t v12 = v40;
  uint64_t v13 = v41;
  unint64_t v14 = v42;
  uint64_t v15 = v43;
  LOBYTE(v40) = 2;
  uint64_t v35 = v12;
  unint64_t v36 = v44;
  sub_21935BACC(v12, v41, v42, v43, v44);
  uint64_t v31 = 0;
  int v16 = sub_2193E2FB0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v18 = v37;
  uint64_t v17 = v38;
  LODWORD(v31) = v16;
  sub_21935BAB0(v37, v38, v39);
  uint64_t v19 = v35;
  unint64_t v20 = v36;
  sub_21935BACC(v35, v13, v14, v15, v36);
  sub_21935BD34(v19, v13, v14, v15, v20);
  uint64_t v21 = v17;
  unint64_t v22 = v39;
  unint64_t v24 = v32;
  uint64_t v23 = v33;
  sub_21935BD18(v18, v21, v39);
  uint64_t v25 = v34;
  *uint64_t v34 = v18;
  uint64_t v26 = v38;
  v25[1] = v38;
  v25[2] = v22;
  uint64_t v25[3] = v23;
  v25[4] = v24;
  *((unsigned char *)v25 + 40) = v46;
  uint64_t v27 = v35;
  unint64_t v28 = v36;
  v25[6] = v35;
  v25[7] = v13;
  v25[8] = v14;
  v25[9] = v15;
  v25[10] = v28;
  *((unsigned char *)v25 + 88) = v31;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  sub_21935BD18(v37, v26, v39);
  return sub_21935BD34(v27, v13, v14, v15, v28);
}

uint64_t sub_21939B260@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ASCTAPExtensionOutput.init(from:)(a1, a2);
}

uint64_t sub_21939B278(void *a1)
{
  return ASCTAPExtensionOutput.encode(to:)(a1);
}

uint64_t ASCTAPLargeBlobExtensionOutput.supported.getter()
{
  return *v0;
}

uint64_t ASCTAPLargeBlobExtensionOutput.compressedBlob.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_21934CE48(v1, *(void *)(v0 + 16));
  return v1;
}

uint64_t ASCTAPLargeBlobExtensionOutput.written.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t ASCTAPLargeBlobExtensionOutput.originalSize.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t ASCTAPLargeBlobExtensionOutput.uncompressedBlob.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  unint64_t v2 = *(void *)(v0 + 16);
  if (v2 >> 60 != 15)
  {
    sub_21934CDF0(*(void *)(v0 + 8), *(void *)(v0 + 16));
    uint64_t v3 = sub_2193E2020();
    sub_21934CEB0(v1, v2);
    return v3;
  }
  return v1;
}

uint64_t sub_21939B53C()
{
  uint64_t result = 0x6574726F70707573;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1651469410;
      break;
    case 2:
      uint64_t result = 0x6E657474697277;
      break;
    case 3:
      uint64_t result = 0x6C616E696769726FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21939B5D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2193A8C10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21939B5F8(uint64_t a1)
{
  unint64_t v2 = sub_2193A3648();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21939B634(uint64_t a1)
{
  unint64_t v2 = sub_2193A3648();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASCTAPLargeBlobExtensionOutput.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C197D0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v34 = a1;
  __swift_project_boxed_opaque_existential_1Tm(a1, v9);
  unint64_t v10 = sub_2193A3648();
  sub_2193E3240();
  if (v2) {
    goto LABEL_3;
  }
  uint64_t v33 = a2;
  LOBYTE(v35) = 0;
  uint64_t v11 = sub_2193E2FB0();
  LOBYTE(v35) = 2;
  uint64_t v12 = v5;
  uint64_t v13 = v8;
  uint64_t v14 = v6;
  char v15 = sub_2193E2FB0();
  char v41 = 1;
  sub_21934D774();
  sub_2193E2FE0();
  unint64_t v18 = v36;
  uint64_t v32 = v35;
  LOBYTE(v35) = 3;
  uint64_t v19 = sub_2193E2FD0();
  if (v20)
  {
    sub_219392628(v11, v32, v18, v15, (uint64_t)&v35);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v13, v12);
    uint64_t v26 = v33;
    LOBYTE(v11) = v35;
    uint64_t v28 = v36;
    unint64_t v27 = v37;
    char v15 = v38;
    uint64_t v29 = v39;
    char v30 = v40;
    uint64_t v16 = (uint64_t)v34;
LABEL_10:
    *(unsigned char *)uint64_t v26 = v11;
    *(void *)(v26 + 8) = v28;
    *(void *)(v26 + 16) = v27;
    *(unsigned char *)(v26 + 24) = v15;
    *(void *)(v26 + 32) = v29;
    *(unsigned char *)(v26 + 40) = v30;
    return __swift_destroy_boxed_opaque_existential_1Tm(v16);
  }
  if (v18 >> 60 != 15)
  {
    uint64_t v29 = v19;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v13, v12);
    unint64_t v27 = v18;
    char v30 = 0;
    uint64_t v26 = v33;
    uint64_t v16 = (uint64_t)v34;
    uint64_t v28 = v32;
    goto LABEL_10;
  }
  uint64_t v21 = sub_2193E2DD0();
  swift_allocError();
  uint64_t v22 = v14;
  uint64_t v24 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C196E0);
  *(void *)(v24 + 24) = &type metadata for ASCTAPLargeBlobExtensionOutput.CodingKeys;
  *(void *)(v24 + 32) = v10;
  *(unsigned char *)uint64_t v24 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C196E8);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_2193E7190;
  *(void *)(v25 + 56) = &type metadata for ASCTAPLargeBlobExtensionOutput.CodingKeys;
  *(void *)(v25 + 64) = v10;
  *(unsigned char *)(v25 + 32) = 1;
  sub_2193E2DC0();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v21 - 8) + 104))(v24, *MEMORY[0x263F8DCA8], v21);
  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v12);
LABEL_3:
  uint64_t v16 = (uint64_t)v34;
  return __swift_destroy_boxed_opaque_existential_1Tm(v16);
}

uint64_t ASCTAPLargeBlobExtensionOutput.encode(to:)(void *a1)
{
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C197E0);
  uint64_t v41 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v43 = &v36[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_2193E2E80();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  char v47 = &v36[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v36[-v8];
  int v50 = *v1;
  uint64_t v10 = *((void *)v1 + 2);
  *(void *)&long long v39 = *((void *)v1 + 1);
  *((void *)&v39 + 1) = v10;
  int v40 = v1[24];
  uint64_t v38 = *((void *)v1 + 4);
  int v37 = v1[40];
  uint64_t v11 = a1[4];
  unsigned __int8 v45 = __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  uint64_t v46 = v11;
  uint64_t v12 = sub_2193E3250();
  if (qword_267C18A18 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v4, (uint64_t)qword_267C1A320);
  uint64_t v14 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16);
  v14(v9, v13, v4);
  if (*(void *)(v12 + 16) && (unint64_t v15 = sub_2193859A4((uint64_t)v9), (v16 & 1) != 0))
  {
    sub_21934F0D8(*(void *)(v12 + 56) + 32 * v15, (uint64_t)&v48);
  }
  else
  {
    long long v48 = 0u;
    long long v49 = 0u;
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = *(unsigned char **)(v5 + 8);
  ((void (*)(unsigned char *, uint64_t))v17)(v9, v4);
  if (*((void *)&v49 + 1))
  {
    if (swift_dynamicCast())
    {
      char v18 = v51;
      __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
      sub_2193A3648();
      uint64_t v19 = v43;
      sub_2193E3260();
      LOBYTE(v48) = 0;
      uint64_t v20 = v44;
      uint64_t v21 = v42;
      sub_2193E3070();
      if (v21) {
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v41 + 8))(v19, v20);
      }
      LOBYTE(v48) = 2;
      sub_2193E3070();
      unint64_t v22 = *((void *)&v39 + 1);
      if (*((void *)&v39 + 1) >> 60 == 15) {
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v41 + 8))(v19, v20);
      }
      if (v18)
      {
        uint64_t v31 = v39;
        sub_21934CDF0(v39, *((unint64_t *)&v39 + 1));
        uint64_t v33 = sub_2193E2020();
        unint64_t v35 = v34;
        *(void *)&long long v48 = v33;
        *((void *)&v48 + 1) = v34;
        char v51 = 1;
        sub_21934D644();
        sub_2193E30D0();
        (*(void (**)(unsigned char *, uint64_t))(v41 + 8))(v19, v20);
        sub_21934CEB0(v31, v22);
        return sub_219348A70(v33, v35);
      }
      else
      {
        uint64_t v32 = v39;
        long long v48 = v39;
        char v51 = 1;
        sub_21934CDF0(v39, *((unint64_t *)&v39 + 1));
        sub_21934D644();
        sub_2193E30D0();
        *(void *)&long long v48 = v38;
        BYTE8(v48) = v37;
        char v51 = 3;
        __swift_instantiateConcreteTypeFromMangledName(&qword_267C19700);
        sub_219389098(&qword_267C19708, &qword_267C19700);
        sub_2193E30D0();
        (*(void (**)(unsigned char *, uint64_t))(v41 + 8))(v19, v20);
        return sub_21934CEB0(v32, v22);
      }
    }
    uint64_t v43 = v17;
  }
  else
  {
    uint64_t v43 = v17;
    sub_219360620((uint64_t)&v48, &qword_267C18E40);
  }
  uint64_t v24 = sub_2193E2DF0();
  uint64_t v44 = swift_allocError();
  uint64_t v26 = v25;
  uint64_t v27 = sub_2193E3250();
  uint64_t v28 = (uint64_t)v47;
  v14(v47, v13, v4);
  if (*(void *)(v27 + 16) && (unint64_t v29 = sub_2193859A4(v28), (v30 & 1) != 0))
  {
    sub_21934F0D8(*(void *)(v27 + 56) + 32 * v29, (uint64_t)&v48);
  }
  else
  {
    long long v48 = 0u;
    long long v49 = 0u;
  }
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t, uint64_t))v43)(v28, v4);
  if (*((void *)&v49 + 1))
  {
    sub_21936A4F8(&v48, (_OWORD *)v26);
  }
  else
  {
    *(void *)(v26 + 24) = MEMORY[0x263F8D310];
    *(void *)uint64_t v26 = 7104878;
    *(void *)(v26 + 8) = 0xE300000000000000;
    sub_219360620((uint64_t)&v48, &qword_267C18E40);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C196F8);
  sub_2193E2DC0();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v26, *MEMORY[0x263F8DCE0], v24);
  return swift_willThrow();
}

uint64_t sub_21939C11C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ASCTAPLargeBlobExtensionOutput.init(from:)(a1, a2);
}

uint64_t sub_21939C134(void *a1)
{
  return ASCTAPLargeBlobExtensionOutput.encode(to:)(a1);
}

AuthenticationServicesCore::ASCPublicKeyCredentialClientData::OperationType_optional __swiftcall ASCPublicKeyCredentialClientData.OperationType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_2193E2F70();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t ASCPublicKeyCredentialClientData.OperationType.rawValue.getter()
{
  return 0x6E68747561626577;
}

uint64_t sub_21939C1F0(char *a1, char *a2)
{
  return sub_219360C50(*a1, *a2);
}

uint64_t sub_21939C1FC()
{
  return sub_2193E3230();
}

uint64_t sub_21939C280()
{
  sub_2193E28D0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21939C2F0()
{
  return sub_2193E3230();
}

AuthenticationServicesCore::ASCPublicKeyCredentialClientData::OperationType_optional sub_21939C370(Swift::String *a1)
{
  return ASCPublicKeyCredentialClientData.OperationType.init(rawValue:)(*a1);
}

void sub_21939C37C(void *a1@<X8>)
{
  unint64_t v2 = 0xEF6574616572632ELL;
  if (*v1) {
    unint64_t v2 = 0xEC0000007465672ELL;
  }
  *a1 = 0x6E68747561626577;
  a1[1] = v2;
}

uint64_t sub_21939C3BC()
{
  return sub_2193E29F0();
}

uint64_t sub_21939C41C()
{
  return sub_2193E29E0();
}

uint64_t sub_21939C46C(unsigned __int8 *a1, char *a2)
{
  return sub_219360CFC(*a1, *a2);
}

uint64_t sub_21939C478()
{
  return sub_2193E3230();
}

uint64_t sub_21939C578()
{
  sub_2193E28D0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21939C660()
{
  return sub_2193E3230();
}

uint64_t sub_21939C75C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2193A8DE0();
  *a1 = result;
  return result;
}

void sub_21939C78C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701869940;
  switch(*v1)
  {
    case 1:
      uint64_t v3 = 0x676E656C6C616863;
      unint64_t v2 = 0xE900000000000065;
      goto LABEL_3;
    case 2:
      *a1 = 0x6E696769726FLL;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x69724F73736F7263;
      a1[1] = 0xEB000000006E6967;
      break;
    case 4:
      *a1 = 0x696769724F706F74;
      a1[1] = 0xE90000000000006ELL;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_21939C850()
{
  uint64_t result = 1701869940;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E656C6C616863;
      break;
    case 2:
      uint64_t result = 0x6E696769726FLL;
      break;
    case 3:
      uint64_t result = 0x69724F73736F7263;
      break;
    case 4:
      uint64_t result = 0x696769724F706F74;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21939C904@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2193A8DE0();
  *a1 = result;
  return result;
}

void sub_21939C92C(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

void sub_21939C938(void *a1@<X8>)
{
  *a1 = &unk_26CAB4BC0;
}

uint64_t sub_21939C948(uint64_t a1)
{
  unint64_t v2 = sub_2193A369C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21939C984(uint64_t a1)
{
  unint64_t v2 = sub_2193A369C();

  return MEMORY[0x270FA00B8](a1, v2);
}

unsigned char *ASCPublicKeyCredentialClientData.init(operationType:challenge:origin:topOrigin:isCrossOrigin:)@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  *(unsigned char *)a9 = *result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 40) = a8;
  *(void *)(a9 + 48) = a6;
  *(void *)(a9 + 56) = a7;
  return result;
}

uint64_t ASCPublicKeyCredentialClientData.toWebAuthnJSON()()
{
  uint64_t v1 = sub_2193E2880();
  uint64_t v17 = *(void *)(v1 - 8);
  uint64_t v18 = v1;
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  char v16 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = 0;
  uint64_t v5 = *(void *)(v0 + 8);
  uint64_t v23 = *(void *)(v0 + 16);
  uint64_t v24 = v5;
  uint64_t v22 = *(void *)(v0 + 24);
  BOOL v6 = (*(unsigned char *)(v0 + 40) & 1) == 0;
  uint64_t v7 = 1702195828;
  if ((*(unsigned char *)(v0 + 40) & 1) == 0) {
    uint64_t v7 = 0x65736C6166;
  }
  uint64_t v21 = v7;
  unint64_t v8 = 0xE400000000000000;
  uint64_t v9 = *(void *)(v0 + 48);
  uint64_t v25 = *(void *)(v0 + 56);
  uint64_t v28 = 123;
  unint64_t v29 = 0xE100000000000000;
  if (v6) {
    unint64_t v8 = 0xE500000000000000;
  }
  uint64_t v19 = v9;
  unint64_t v20 = v8;
  while (2)
  {
    uint64_t v10 = byte_26CAB4BE8[v4++ + 32];
    switch(v10)
    {
      case 1:
        uint64_t v26 = 34;
        unint64_t v27 = 0xE100000000000000;
        sub_2193E2040();
        sub_2193E2920();
        swift_bridgeObjectRelease();
        sub_2193E2920();
        goto LABEL_13;
      case 2:
        uint64_t v26 = 34;
        unint64_t v27 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        sub_2193E2920();
        swift_bridgeObjectRelease();
        sub_2193E2920();
        goto LABEL_13;
      case 3:
        uint64_t v26 = 34;
        goto LABEL_14;
      case 4:
        if (!v25) {
          goto LABEL_15;
        }
        uint64_t v26 = 34;
        unint64_t v27 = 0xE100000000000000;
        sub_2193E2920();
        sub_2193E2920();
LABEL_13:
        uint64_t v26 = 34;
LABEL_14:
        unint64_t v27 = 0xE100000000000000;
        sub_2193E2920();
        swift_bridgeObjectRelease();
        sub_2193E2920();
        sub_2193E2920();
        swift_bridgeObjectRelease();
        sub_2193E2920();
        sub_2193E2920();
        uint64_t v2 = swift_bridgeObjectRelease();
LABEL_15:
        if (v4 != 5) {
          continue;
        }
        sub_21939CDB8(v2);
        swift_bridgeObjectRelease();
        sub_2193E2920();
        swift_bridgeObjectRetain();
        uint64_t v11 = v16;
        sub_2193E2870();
        uint64_t v12 = sub_2193E2850();
        unint64_t v14 = v13;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v18);
        if (v14 >> 60 == 15)
        {
          __break(1u);
          JUMPOUT(0x21939CDA4);
        }
        swift_bridgeObjectRelease();
        return v12;
      default:
        uint64_t v26 = 34;
        unint64_t v27 = 0xE100000000000000;
        sub_2193E2920();
        swift_bridgeObjectRelease();
        sub_2193E2920();
        goto LABEL_13;
    }
  }
}

uint64_t sub_21939CDB8(uint64_t a1)
{
  uint64_t v2 = v1[1];
  if ((v2 & 0x2000000000000000) == 0)
  {
    if ((*v1 & 0xFFFFFFFFFFFFLL) != 0) {
      goto LABEL_5;
    }
    __break(1u);
  }
  if ((v2 & 0xF00000000000000) == 0)
  {
    __break(1u);
    return MEMORY[0x270F9D7B8](a1);
  }
LABEL_5:
  a1 = sub_2193E28F0();

  return MEMORY[0x270F9D7B8](a1);
}

uint64_t ASCPublicKeyCredentialClientData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C197E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193A369C();
  sub_2193E3240();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  char v29 = 0;
  sub_2193A36F0();
  sub_2193E3010();
  int v9 = v26;
  char v29 = 1;
  sub_21934D774();
  sub_2193E3010();
  int v28 = v9;
  uint64_t v10 = v26;
  unint64_t v11 = v27;
  LOBYTE(v26) = 2;
  sub_21934CDF0(v10, v27);
  uint64_t v12 = sub_2193E2FF0();
  uint64_t v14 = v13;
  uint64_t v23 = v12;
  unint64_t v25 = v11;
  LOBYTE(v26) = 3;
  swift_bridgeObjectRetain();
  uint64_t v24 = 0;
  HIDWORD(v22) = sub_2193E2FB0();
  uint64_t v24 = v14;
  LOBYTE(v26) = 4;
  uint64_t v15 = sub_2193E2FA0();
  uint64_t v18 = v17;
  uint64_t v19 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  unint64_t v20 = v25;
  sub_21934CDF0(v10, v25);
  swift_bridgeObjectRetain();
  sub_219348A70(v10, v20);
  *(unsigned char *)a2 = v28;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v20;
  uint64_t v21 = v24;
  *(void *)(a2 + 24) = v23;
  *(void *)(a2 + 32) = v21;
  *(unsigned char *)(a2 + 40) = BYTE4(v22);
  *(void *)(a2 + 48) = v19;
  *(void *)(a2 + 56) = v18;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  sub_219348A70(v10, v20);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21939D1CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ASCPublicKeyCredentialClientData.init(from:)(a1, a2);
}

uint64_t sub_21939D1E4(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    int v18 = *(unsigned __int8 *)(*(void *)(v3 + 56) + v11);
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_21938452C(v16, v17);
    char v21 = v20;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || v18 != *(unsigned __int8 *)(*(void *)(a2 + 56) + v19)) {
      return 0;
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_21939D37C(uint64_t a1, uint64_t a2)
{
  __s1[2] = *MEMORY[0x263EF8340];
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v164 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v165 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v166 = a1;
  while (2)
  {
    if (v6)
    {
      uint64_t v168 = (v6 - 1) & v6;
      int64_t v169 = v3;
      unint64_t v7 = __clz(__rbit64(v6)) | (v3 << 6);
    }
    else
    {
      int64_t v8 = v3 + 1;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
LABEL_265:
        __break(1u);
LABEL_266:
        __break(1u);
LABEL_267:
        __break(1u);
LABEL_268:
        __break(1u);
LABEL_269:
        __break(1u);
LABEL_270:
        __break(1u);
LABEL_271:
        __break(1u);
LABEL_272:
        __break(1u);
LABEL_273:
        __break(1u);
LABEL_274:
        __break(1u);
LABEL_275:
        __break(1u);
LABEL_276:
        __break(1u);
LABEL_277:
        __break(1u);
LABEL_278:
        __break(1u);
LABEL_279:
        __break(1u);
LABEL_280:
        __break(1u);
LABEL_281:
        __break(1u);
LABEL_282:
        __break(1u);
LABEL_283:
        __break(1u);
LABEL_284:
        __break(1u);
LABEL_285:
        __break(1u);
LABEL_286:
        __break(1u);
LABEL_287:
        __break(1u);
LABEL_288:
        __break(1u);
LABEL_289:
        __break(1u);
LABEL_290:
        __break(1u);
LABEL_291:
        __break(1u);
LABEL_292:
        __break(1u);
LABEL_293:
        __break(1u);
LABEL_294:
        __break(1u);
LABEL_295:
        __break(1u);
LABEL_296:
        __break(1u);
LABEL_297:
        __break(1u);
LABEL_298:
        __break(1u);
LABEL_299:
        __break(1u);
LABEL_300:
        __break(1u);
LABEL_301:
        __break(1u);
LABEL_302:
        __break(1u);
LABEL_303:
        __break(1u);
LABEL_304:
        __break(1u);
LABEL_305:
        __break(1u);
LABEL_306:
        __break(1u);
LABEL_307:
        __break(1u);
LABEL_308:
        __break(1u);
LABEL_309:
        __break(1u);
LABEL_310:
        __break(1u);
LABEL_311:
        __break(1u);
      }
      if (v8 >= v165) {
        return 1;
      }
      unint64_t v9 = *(void *)(v164 + 8 * v8);
      int64_t v10 = v3 + 1;
      if (!v9)
      {
        int64_t v10 = v3 + 2;
        if (v3 + 2 >= v165) {
          return 1;
        }
        unint64_t v9 = *(void *)(v164 + 8 * v10);
        if (!v9)
        {
          int64_t v10 = v3 + 3;
          if (v3 + 3 >= v165) {
            return 1;
          }
          unint64_t v9 = *(void *)(v164 + 8 * v10);
          if (!v9)
          {
            int64_t v10 = v3 + 4;
            if (v3 + 4 >= v165) {
              return 1;
            }
            unint64_t v9 = *(void *)(v164 + 8 * v10);
            if (!v9)
            {
              uint64_t v11 = v3 + 5;
              if (v3 + 5 >= v165) {
                return 1;
              }
              unint64_t v9 = *(void *)(v164 + 8 * v11);
              if (!v9)
              {
                while (1)
                {
                  int64_t v10 = v11 + 1;
                  if (__OFADD__(v11, 1)) {
                    goto LABEL_277;
                  }
                  if (v10 >= v165) {
                    return 1;
                  }
                  unint64_t v9 = *(void *)(v164 + 8 * v10);
                  ++v11;
                  if (v9) {
                    goto LABEL_25;
                  }
                }
              }
              int64_t v10 = v3 + 5;
            }
          }
        }
      }
LABEL_25:
      uint64_t v168 = (v9 - 1) & v9;
      int64_t v169 = v10;
      unint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
    }
    int64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v7);
    uint64_t v13 = *v12;
    unint64_t v14 = v12[1];
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 56) + 32 * v7);
    uint64_t v17 = *v15;
    unint64_t v16 = v15[1];
    uint64_t v19 = v15[2];
    unint64_t v18 = v15[3];
    sub_21934CDF0(*v12, v14);
    sub_21934CDF0(v17, v16);
    sub_21934CE48(v19, v18);
    uint64_t v20 = sub_2193858E4(v13, v14);
    char v22 = v21;
    sub_219348A70(v13, v14);
    if ((v22 & 1) == 0) {
      goto LABEL_262;
    }
    unint64_t v23 = v16 >> 62;
    uint64_t v24 = (uint64_t *)(*(void *)(v2 + 56) + 32 * v20);
    uint64_t v26 = *v24;
    unint64_t v25 = v24[1];
    uint64_t v27 = v24[2];
    unint64_t v28 = v24[3];
    uint64_t v29 = 0;
    switch(v25 >> 62)
    {
      case 1uLL:
        LODWORD(v29) = HIDWORD(v26) - v26;
        if (__OFSUB__(HIDWORD(v26), v26)) {
          goto LABEL_265;
        }
        uint64_t v29 = (int)v29;
        break;
      case 2uLL:
        uint64_t v31 = *(void *)(v26 + 16);
        uint64_t v30 = *(void *)(v26 + 24);
        BOOL v32 = __OFSUB__(v30, v31);
        uint64_t v29 = v30 - v31;
        if (!v32) {
          break;
        }
        goto LABEL_266;
      case 3uLL:
        break;
      default:
        uint64_t v29 = BYTE6(v25);
        break;
    }
    unint64_t v170 = v24[1];
    uint64_t v171 = *v24;
    switch((int)v23)
    {
      case 1:
        LODWORD(v33) = HIDWORD(v17) - v17;
        if (__OFSUB__(HIDWORD(v17), v17)) {
          goto LABEL_267;
        }
        uint64_t v33 = (int)v33;
LABEL_37:
        if (v29 != v33) {
          goto LABEL_262;
        }
        if (v29 < 1)
        {
LABEL_48:
          sub_21934CDF0(v26, v25);
          sub_21934CE48(v27, v28);
        }
        else
        {
          switch(v25 >> 62)
          {
            case 1uLL:
              if ((int)v26 > v26 >> 32) {
                goto LABEL_273;
              }
              sub_21934CDF0(v26, v25);
              sub_21934CE48(v27, v28);
              sub_21934CDF0(v26, v170);
              uint64_t v53 = sub_2193E1DF0();
              if (v53)
              {
                uint64_t v54 = v53;
                uint64_t v55 = sub_2193E1E20();
                if (__OFSUB__((int)v26, v55)) {
                  goto LABEL_275;
                }
                v155 = (void *)(v54 + (int)v26 - v55);
              }
              else
              {
                v155 = 0;
              }
              sub_2193E1E10();
              if (v23)
              {
                if (v23 == 1)
                {
                  if (v17 >> 32 < (int)v17) {
                    goto LABEL_286;
                  }
                  swift_retain();
                  uint64_t v85 = (char *)sub_2193E1DF0();
                  if (v85)
                  {
                    uint64_t v86 = sub_2193E1E20();
                    if (__OFSUB__((int)v17, v86)) {
                      goto LABEL_295;
                    }
                    v85 += (int)v17 - v86;
                  }
                  uint64_t v87 = sub_2193E1E10();
                  if (v87 >= (v17 >> 32) - (int)v17) {
                    size_t v88 = (v17 >> 32) - (int)v17;
                  }
                  else {
                    size_t v88 = v87;
                  }
                  if (!v155) {
                    goto LABEL_316;
                  }
                  if (!v85) {
                    goto LABEL_317;
                  }
                  int v89 = memcmp(v155, v85, v88);
                  sub_219348A70(v17, v16);
                  sub_219348A70(v26, v170);
                  if (v89) {
                    goto LABEL_261;
                  }
                }
                else
                {
                  uint64_t v105 = *(void *)(v17 + 16);
                  uint64_t v154 = *(void *)(v17 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v106 = (char *)sub_2193E1DF0();
                  if (v106)
                  {
                    uint64_t v107 = sub_2193E1E20();
                    if (__OFSUB__(v105, v107)) {
                      goto LABEL_294;
                    }
                    uint64_t v108 = v27;
                    v106 += v105 - v107;
                  }
                  else
                  {
                    uint64_t v108 = v27;
                  }
                  if (__OFSUB__(v154, v105)) {
                    goto LABEL_287;
                  }
                  uint64_t v148 = sub_2193E1E10();
                  if (v148 >= v154 - v105) {
                    size_t v149 = v154 - v105;
                  }
                  else {
                    size_t v149 = v148;
                  }
                  if (!v155) {
                    goto LABEL_324;
                  }
                  if (!v106) {
                    goto LABEL_325;
                  }
                  uint64_t v27 = v108;
                  int v150 = memcmp(v155, v106, v149);
                  swift_release();
                  swift_release();
                  sub_219348A70(v171, v170);
                  if (v150) {
                    goto LABEL_261;
                  }
                }
              }
              else
              {
                __s1[0] = v17;
                LOWORD(__s1[1]) = v16;
                BYTE2(__s1[1]) = BYTE2(v16);
                BYTE3(__s1[1]) = BYTE3(v16);
                BYTE4(__s1[1]) = BYTE4(v16);
                BYTE5(__s1[1]) = BYTE5(v16);
                if (!v155) {
                  goto LABEL_321;
                }
                int v104 = memcmp(v155, __s1, BYTE6(v16));
                sub_219348A70(v26, v170);
                if (v104) {
                  goto LABEL_261;
                }
              }
              break;
            case 2uLL:
              uint64_t v56 = v24[2];
              uint64_t v57 = *(void *)(v26 + 16);
              sub_21934CDF0(v26, v25);
              sub_21934CE48(v56, v28);
              swift_retain();
              swift_retain();
              uint64_t v58 = sub_2193E1DF0();
              if (v58)
              {
                uint64_t v59 = v58;
                uint64_t v60 = sub_2193E1E20();
                if (__OFSUB__(v57, v60)) {
                  goto LABEL_274;
                }
                v156 = (void *)(v59 + v57 - v60);
              }
              else
              {
                v156 = 0;
              }
              uint64_t v27 = v56;
              sub_2193E1E10();
              if (!v23)
              {
                __s1[0] = v17;
                LOWORD(__s1[1]) = v16;
                BYTE2(__s1[1]) = BYTE2(v16);
                BYTE3(__s1[1]) = BYTE3(v16);
                BYTE4(__s1[1]) = BYTE4(v16);
                BYTE5(__s1[1]) = BYTE5(v16);
                if (!v156) {
                  goto LABEL_318;
                }
                int v84 = memcmp(v156, __s1, BYTE6(v16));
                swift_release();
LABEL_144:
                swift_release();
                if (v84) {
                  goto LABEL_261;
                }
                break;
              }
              if (v23 == 1)
              {
                if (v17 >> 32 < (int)v17) {
                  goto LABEL_280;
                }
                swift_retain();
                unint64_t v80 = (char *)sub_2193E1DF0();
                if (v80)
                {
                  uint64_t v81 = sub_2193E1E20();
                  if (__OFSUB__((int)v17, v81)) {
                    goto LABEL_293;
                  }
                  v80 += (int)v17 - v81;
                }
                uint64_t v27 = v56;
                uint64_t v82 = sub_2193E1E10();
                if (v82 >= (v17 >> 32) - (int)v17) {
                  size_t v83 = (v17 >> 32) - (int)v17;
                }
                else {
                  size_t v83 = v82;
                }
                if (!v156) {
                  goto LABEL_314;
                }
                if (!v80) {
                  goto LABEL_315;
                }
                int v84 = memcmp(v156, v80, v83);
                sub_219348A70(v17, v16);
                swift_release();
                goto LABEL_144;
              }
              uint64_t v97 = *(void *)(v17 + 16);
              uint64_t v96 = *(void *)(v17 + 24);
              swift_retain();
              swift_retain();
              uint64_t v98 = (char *)sub_2193E1DF0();
              if (v98)
              {
                uint64_t v99 = sub_2193E1E20();
                if (__OFSUB__(v97, v99)) {
                  goto LABEL_292;
                }
                v98 += v97 - v99;
              }
              BOOL v32 = __OFSUB__(v96, v97);
              int64_t v100 = v96 - v97;
              if (v32) {
                goto LABEL_285;
              }
              uint64_t v101 = sub_2193E1E10();
              if (v101 >= v100) {
                size_t v102 = v100;
              }
              else {
                size_t v102 = v101;
              }
              if (!v156) {
                goto LABEL_319;
              }
              uint64_t v27 = v56;
              if (!v98) {
                goto LABEL_320;
              }
              int v103 = memcmp(v156, v98, v102);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              if (v103) {
                goto LABEL_261;
              }
              break;
            case 3uLL:
              memset(__s1, 0, 14);
              if (!v23) {
                goto LABEL_91;
              }
              if (v23 == 1)
              {
                uint64_t v36 = (v17 >> 32) - (int)v17;
                if (v17 >> 32 < (int)v17) {
                  goto LABEL_279;
                }
                sub_21934CDF0(v26, v25);
                uint64_t v161 = v27;
                sub_21934CE48(v27, v28);
                sub_21934CDF0(v17, v16);
                uint64_t v61 = sub_2193E1DF0();
                if (!v61) {
                  goto LABEL_313;
                }
                uint64_t v38 = v61;
                uint64_t v62 = sub_2193E1E20();
                uint64_t v40 = (int)v17 - v62;
                if (__OFSUB__((int)v17, v62)) {
                  goto LABEL_284;
                }
                goto LABEL_86;
              }
              uint64_t v94 = *(void *)(v17 + 16);
              v160 = *(char **)(v17 + 24);
              sub_21934CDF0(v26, v25);
              sub_21934CE48(v27, v28);
              swift_retain();
              swift_retain();
              uint64_t v91 = (char *)sub_2193E1DF0();
              if (v91)
              {
                uint64_t v95 = sub_2193E1E20();
                if (__OFSUB__(v94, v95)) {
                  goto LABEL_291;
                }
                uint64_t v93 = v27;
                v91 += v94 - v95;
              }
              else
              {
                uint64_t v93 = v27;
              }
              long long v144 = &v160[-v94];
              if (__OFSUB__(v160, v94)) {
                goto LABEL_282;
              }
              uint64_t v145 = sub_2193E1E10();
              if (!v91) {
                goto LABEL_323;
              }
              goto LABEL_243;
            default:
              __s1[0] = *v24;
              LOWORD(__s1[1]) = v25;
              BYTE2(__s1[1]) = BYTE2(v25);
              BYTE3(__s1[1]) = BYTE3(v25);
              BYTE4(__s1[1]) = BYTE4(v25);
              BYTE5(__s1[1]) = BYTE5(v25);
              if (v23)
              {
                if (v23 == 1)
                {
                  uint64_t v36 = (v17 >> 32) - (int)v17;
                  if (v17 >> 32 < (int)v17) {
                    goto LABEL_278;
                  }
                  sub_21934CDF0(v26, v25);
                  uint64_t v161 = v27;
                  sub_21934CE48(v27, v28);
                  sub_21934CDF0(v17, v16);
                  uint64_t v37 = sub_2193E1DF0();
                  if (!v37)
                  {
                    sub_2193E1E10();
                    __break(1u);
LABEL_313:
                    sub_2193E1E10();
                    __break(1u);
LABEL_314:
                    __break(1u);
LABEL_315:
                    __break(1u);
LABEL_316:
                    __break(1u);
LABEL_317:
                    __break(1u);
LABEL_318:
                    __break(1u);
LABEL_319:
                    __break(1u);
LABEL_320:
                    __break(1u);
LABEL_321:
                    __break(1u);
LABEL_322:
                    __break(1u);
LABEL_323:
                    __break(1u);
LABEL_324:
                    __break(1u);
LABEL_325:
                    __break(1u);
LABEL_326:
                    sub_2193E1E10();
                    __break(1u);
LABEL_327:
                    sub_2193E1E10();
                    __break(1u);
LABEL_328:
                    __break(1u);
LABEL_329:
                    __break(1u);
LABEL_330:
                    __break(1u);
LABEL_331:
                    __break(1u);
LABEL_332:
                    __break(1u);
LABEL_333:
                    __break(1u);
LABEL_334:
                    __break(1u);
LABEL_335:
                    __break(1u);
LABEL_336:
                    __break(1u);
LABEL_337:
                    __break(1u);
LABEL_338:
                    __break(1u);
LABEL_339:
                    __break(1u);
                    JUMPOUT(0x21939E930);
                  }
                  uint64_t v38 = v37;
                  uint64_t v39 = sub_2193E1E20();
                  uint64_t v40 = (int)v17 - v39;
                  if (__OFSUB__((int)v17, v39)) {
                    goto LABEL_283;
                  }
LABEL_86:
                  uint64_t v63 = sub_2193E1E10();
                  if (v63 >= v36) {
                    size_t v64 = v36;
                  }
                  else {
                    size_t v64 = v63;
                  }
                  int v65 = memcmp(__s1, (const void *)(v38 + v40), v64);
                  sub_219348A70(v17, v16);
                  uint64_t v27 = v161;
                  if (v65) {
                    goto LABEL_261;
                  }
                }
                else
                {
                  uint64_t v90 = *(void *)(v17 + 16);
                  v159 = *(char **)(v17 + 24);
                  sub_21934CDF0(v26, v25);
                  sub_21934CE48(v27, v28);
                  swift_retain();
                  swift_retain();
                  uint64_t v91 = (char *)sub_2193E1DF0();
                  if (v91)
                  {
                    uint64_t v92 = sub_2193E1E20();
                    if (__OFSUB__(v90, v92)) {
                      goto LABEL_290;
                    }
                    uint64_t v93 = v27;
                    v91 += v90 - v92;
                  }
                  else
                  {
                    uint64_t v93 = v27;
                  }
                  long long v144 = &v159[-v90];
                  if (__OFSUB__(v159, v90)) {
                    goto LABEL_281;
                  }
                  uint64_t v145 = sub_2193E1E10();
                  if (!v91) {
                    goto LABEL_322;
                  }
LABEL_243:
                  if (v145 >= (uint64_t)v144) {
                    size_t v146 = (size_t)v144;
                  }
                  else {
                    size_t v146 = v145;
                  }
                  int v147 = memcmp(__s1, v91, v146);
                  swift_release();
                  swift_release();
                  uint64_t v27 = v93;
                  if (v147) {
                    goto LABEL_261;
                  }
                }
              }
              else
              {
LABEL_91:
                uint64_t __s2 = v17;
                __int16 v173 = v16;
                char v174 = BYTE2(v16);
                char v175 = BYTE3(v16);
                char v176 = BYTE4(v16);
                char v177 = BYTE5(v16);
                sub_21934CDF0(v26, v25);
                sub_21934CE48(v27, v28);
                if (memcmp(__s1, &__s2, BYTE6(v16))) {
                  goto LABEL_261;
                }
              }
              break;
          }
        }
        if (v28 >> 60 == 15)
        {
          uint64_t v2 = a2;
          if (v18 >> 60 != 15) {
            goto LABEL_258;
          }
LABEL_7:
          sub_219348A70(v171, v170);
          sub_21934CEB0(v27, v28);
          sub_219348A70(v17, v16);
          sub_21934CEB0(v19, v18);
          a1 = v166;
          unint64_t v6 = v168;
          int64_t v3 = v169;
          continue;
        }
        uint64_t v2 = a2;
        if (v18 >> 60 != 15)
        {
          uint64_t v41 = 0;
          switch(v28 >> 62)
          {
            case 1uLL:
              if (__OFSUB__(HIDWORD(v27), v27)) {
                goto LABEL_269;
              }
              uint64_t v41 = HIDWORD(v27) - (int)v27;
LABEL_56:
              sub_21934CDF0(v27, v28);
              sub_21934CDF0(v27, v28);
              break;
            case 2uLL:
              uint64_t v43 = *(void *)(v27 + 16);
              uint64_t v42 = *(void *)(v27 + 24);
              uint64_t v41 = v42 - v43;
              if (!__OFSUB__(v42, v43)) {
                goto LABEL_56;
              }
              goto LABEL_270;
            case 3uLL:
              break;
            default:
              uint64_t v41 = BYTE6(v28);
              break;
          }
          unint64_t v44 = v18 >> 62;
          switch(v18 >> 62)
          {
            case 1uLL:
              LODWORD(v45) = HIDWORD(v19) - v19;
              if (__OFSUB__(HIDWORD(v19), v19)) {
                goto LABEL_271;
              }
              uint64_t v45 = (int)v45;
LABEL_62:
              if (v41 != v45)
              {
LABEL_259:
                sub_21934CEB0(v27, v28);
                uint64_t v152 = v27;
                unint64_t v153 = v28;
                goto LABEL_260;
              }
              if (v41 < 1)
              {
LABEL_73:
                sub_21934CEB0(v27, v28);
                sub_21934CEB0(v27, v28);
                goto LABEL_7;
              }
              switch(v28 >> 62)
              {
                case 1uLL:
                  if ((int)v27 > v27 >> 32) {
                    goto LABEL_276;
                  }
                  uint64_t v66 = v27;
                  sub_21934CDF0(v19, v18);
                  uint64_t v67 = sub_2193E1DF0();
                  if (v67)
                  {
                    uint64_t v68 = v67;
                    uint64_t v69 = sub_2193E1E20();
                    if (__OFSUB__((int)v27, v69)) {
                      goto LABEL_289;
                    }
                    v157 = (void *)(v68 + (int)v27 - v69);
                  }
                  else
                  {
                    v157 = 0;
                  }
                  sub_2193E1E10();
                  uint64_t v2 = a2;
                  if (!v44)
                  {
                    __s1[0] = v19;
                    LOWORD(__s1[1]) = v18;
                    BYTE2(__s1[1]) = BYTE2(v18);
                    BYTE3(__s1[1]) = BYTE3(v18);
                    BYTE4(__s1[1]) = BYTE4(v18);
                    BYTE5(__s1[1]) = BYTE5(v18);
                    if (!v157) {
                      goto LABEL_337;
                    }
                    int v79 = memcmp(v157, __s1, BYTE6(v18));
LABEL_222:
                    sub_21934CEB0(v19, v18);
LABEL_223:
                    sub_21934CEB0(v27, v28);
                    sub_21934CEB0(v27, v28);
                    sub_219348A70(v171, v170);
                    uint64_t v118 = v27;
                    goto LABEL_224;
                  }
                  if (v44 == 1)
                  {
                    if (v19 >> 32 < (int)v19) {
                      goto LABEL_304;
                    }
                    swift_retain();
                    unint64_t v114 = (char *)sub_2193E1DF0();
                    if (v114)
                    {
                      uint64_t v115 = sub_2193E1E20();
                      if (__OFSUB__((int)v19, v115)) {
                        goto LABEL_311;
                      }
                      v114 += (int)v19 - v115;
                    }
                    uint64_t v116 = sub_2193E1E10();
                    int64_t v117 = (v19 >> 32) - (int)v19;
                    if (v116 < v117) {
                      int64_t v117 = v116;
                    }
                    if (!v157) {
                      goto LABEL_330;
                    }
                    if (!v114) {
                      goto LABEL_331;
                    }
                    int v79 = memcmp(v157, v114, v117);
                    sub_21934CEB0(v19, v18);
                    sub_21934CEB0(v19, v18);
                    sub_21934CEB0(v27, v28);
                    sub_21934CEB0(v27, v28);
                    sub_219348A70(v171, v170);
                    uint64_t v118 = v27;
LABEL_224:
                    sub_21934CEB0(v118, v28);
                    sub_219348A70(v17, v16);
                    sub_21934CEB0(v19, v18);
                    a1 = v166;
                    unint64_t v6 = v168;
                    int64_t v3 = v169;
                    if (v79) {
                      return 0;
                    }
                    continue;
                  }
                  uint64_t v137 = *(void *)(v19 + 16);
                  uint64_t v138 = *(void *)(v19 + 24);
                  swift_retain();
                  swift_retain();
                  long long v139 = (char *)sub_2193E1DF0();
                  if (v139)
                  {
                    uint64_t v140 = sub_2193E1E20();
                    if (__OFSUB__(v137, v140)) {
                      goto LABEL_310;
                    }
                    v139 += v137 - v140;
                  }
                  BOOL v32 = __OFSUB__(v138, v137);
                  int64_t v141 = v138 - v137;
                  if (v32) {
                    goto LABEL_305;
                  }
                  uint64_t v142 = sub_2193E1E10();
                  if (v142 >= v141) {
                    size_t v143 = v141;
                  }
                  else {
                    size_t v143 = v142;
                  }
                  uint64_t v2 = a2;
                  if (!v157) {
                    goto LABEL_338;
                  }
                  if (!v139) {
                    goto LABEL_339;
                  }
                  int v129 = memcmp(v157, v139, v143);
                  swift_release();
                  swift_release();
                  sub_21934CEB0(v19, v18);
                  sub_21934CEB0(v66, v28);
                  sub_21934CEB0(v66, v28);
                  sub_219348A70(v171, v170);
                  uint64_t v136 = v66;
LABEL_218:
                  sub_21934CEB0(v136, v28);
                  sub_219348A70(v17, v16);
                  sub_21934CEB0(v19, v18);
                  a1 = v166;
                  unint64_t v6 = v168;
                  int64_t v3 = v169;
                  if (v129) {
                    return 0;
                  }
                  break;
                case 2uLL:
                  uint64_t v70 = v27;
                  uint64_t v71 = *(void *)(v27 + 16);
                  sub_21934CE48(v19, v18);
                  uint64_t v163 = v70;
                  swift_retain();
                  swift_retain();
                  uint64_t v72 = sub_2193E1DF0();
                  if (v72)
                  {
                    uint64_t v73 = v72;
                    uint64_t v74 = sub_2193E1E20();
                    if (__OFSUB__(v71, v74)) {
                      goto LABEL_288;
                    }
                    v158 = (void *)(v73 + v71 - v74);
                  }
                  else
                  {
                    v158 = 0;
                  }
                  uint64_t v109 = v70;
                  sub_2193E1E10();
                  uint64_t v2 = a2;
                  if (v44)
                  {
                    if (v44 == 1)
                    {
                      if (v19 >> 32 < (int)v19) {
                        goto LABEL_298;
                      }
                      swift_retain();
                      unint64_t v110 = (char *)sub_2193E1DF0();
                      if (v110)
                      {
                        uint64_t v111 = sub_2193E1E20();
                        if (__OFSUB__((int)v19, v111)) {
                          goto LABEL_309;
                        }
                        v110 += (int)v19 - v111;
                      }
                      uint64_t v27 = v70;
                      uint64_t v112 = sub_2193E1E10();
                      if (v112 >= (v19 >> 32) - (int)v19) {
                        size_t v113 = (v19 >> 32) - (int)v19;
                      }
                      else {
                        size_t v113 = v112;
                      }
                      if (!v158) {
                        goto LABEL_328;
                      }
                      if (!v110) {
                        goto LABEL_329;
                      }
                      int v79 = memcmp(v158, v110, v113);
                      sub_21934CEB0(v19, v18);
                      swift_release();
                      swift_release();
                      goto LABEL_222;
                    }
                    uint64_t v130 = *(void *)(v19 + 16);
                    uint64_t v131 = *(void *)(v19 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v132 = (char *)sub_2193E1DF0();
                    if (v132)
                    {
                      uint64_t v133 = sub_2193E1E20();
                      if (__OFSUB__(v130, v133)) {
                        goto LABEL_308;
                      }
                      v132 += v130 - v133;
                    }
                    if (__OFSUB__(v131, v130)) {
                      goto LABEL_303;
                    }
                    uint64_t v134 = sub_2193E1E10();
                    if (v134 >= v131 - v130) {
                      size_t v135 = v131 - v130;
                    }
                    else {
                      size_t v135 = v134;
                    }
                    uint64_t v2 = a2;
                    if (!v158) {
                      goto LABEL_335;
                    }
                    uint64_t v109 = v163;
                    if (!v132) {
                      goto LABEL_336;
                    }
                    int v129 = memcmp(v158, v132, v135);
                    swift_release();
                    swift_release();
                    swift_release();
                  }
                  else
                  {
                    __s1[0] = v19;
                    LOWORD(__s1[1]) = v18;
                    BYTE2(__s1[1]) = BYTE2(v18);
                    BYTE3(__s1[1]) = BYTE3(v18);
                    BYTE4(__s1[1]) = BYTE4(v18);
                    BYTE5(__s1[1]) = BYTE5(v18);
                    if (!v158) {
                      goto LABEL_334;
                    }
                    int v129 = memcmp(v158, __s1, BYTE6(v18));
                    swift_release();
                  }
                  swift_release();
                  sub_21934CEB0(v19, v18);
LABEL_217:
                  sub_21934CEB0(v109, v28);
                  sub_21934CEB0(v109, v28);
                  sub_219348A70(v171, v170);
                  uint64_t v136 = v109;
                  goto LABEL_218;
                case 3uLL:
                  memset(__s1, 0, 14);
                  if (!v44) {
                    goto LABEL_163;
                  }
                  uint64_t v162 = v27;
                  if (v44 == 1)
                  {
                    uint64_t v48 = (v19 >> 32) - (int)v19;
                    if (v19 >> 32 < (int)v19) {
                      goto LABEL_297;
                    }
                    sub_21934CDF0(v19, v18);
                    uint64_t v75 = sub_2193E1DF0();
                    if (!v75) {
                      goto LABEL_327;
                    }
                    uint64_t v50 = v75;
                    uint64_t v76 = sub_2193E1E20();
                    uint64_t v52 = (int)v19 - v76;
                    if (__OFSUB__((int)v19, v76)) {
                      goto LABEL_302;
                    }
LABEL_105:
                    uint64_t v77 = sub_2193E1E10();
                    if (v77 >= v48) {
                      size_t v78 = v48;
                    }
                    else {
                      size_t v78 = v77;
                    }
                    int v79 = memcmp(__s1, (const void *)(v50 + v52), v78);
                    sub_21934CEB0(v19, v18);
                    uint64_t v27 = v162;
                    goto LABEL_223;
                  }
                  uint64_t v125 = *(void *)(v19 + 16);
                  uint64_t v126 = *(void *)(v19 + 24);
                  sub_21934CE48(v19, v18);
                  swift_retain();
                  swift_retain();
                  unint64_t v121 = (char *)sub_2193E1DF0();
                  if (v121)
                  {
                    uint64_t v127 = sub_2193E1E20();
                    if (__OFSUB__(v125, v127)) {
                      goto LABEL_307;
                    }
                    v121 += v125 - v127;
                  }
                  int64_t v123 = v126 - v125;
                  if (__OFSUB__(v126, v125)) {
                    goto LABEL_300;
                  }
                  uint64_t v124 = sub_2193E1E10();
                  uint64_t v2 = a2;
                  if (!v121) {
                    goto LABEL_333;
                  }
LABEL_200:
                  if (v124 >= v123) {
                    size_t v128 = v123;
                  }
                  else {
                    size_t v128 = v124;
                  }
                  int v129 = memcmp(__s1, v121, v128);
                  swift_release();
                  swift_release();
                  sub_21934CEB0(v19, v18);
                  uint64_t v109 = v162;
                  goto LABEL_217;
                default:
                  __s1[0] = v27;
                  LOWORD(__s1[1]) = v28;
                  BYTE2(__s1[1]) = BYTE2(v28);
                  BYTE3(__s1[1]) = BYTE3(v28);
                  BYTE4(__s1[1]) = BYTE4(v28);
                  BYTE5(__s1[1]) = BYTE5(v28);
                  if (!v44)
                  {
LABEL_163:
                    uint64_t __s2 = v19;
                    __int16 v173 = v18;
                    char v174 = BYTE2(v18);
                    char v175 = BYTE3(v18);
                    char v176 = BYTE4(v18);
                    char v177 = BYTE5(v18);
                    int v79 = memcmp(__s1, &__s2, BYTE6(v18));
                    goto LABEL_223;
                  }
                  uint64_t v162 = v27;
                  if (v44 == 1)
                  {
                    uint64_t v48 = (v19 >> 32) - (int)v19;
                    if (v19 >> 32 < (int)v19) {
                      goto LABEL_296;
                    }
                    sub_21934CDF0(v19, v18);
                    uint64_t v49 = sub_2193E1DF0();
                    if (!v49) {
                      goto LABEL_326;
                    }
                    uint64_t v50 = v49;
                    uint64_t v51 = sub_2193E1E20();
                    uint64_t v52 = (int)v19 - v51;
                    if (__OFSUB__((int)v19, v51)) {
                      goto LABEL_301;
                    }
                    goto LABEL_105;
                  }
                  uint64_t v119 = *(void *)(v19 + 16);
                  uint64_t v120 = *(void *)(v19 + 24);
                  sub_21934CE48(v19, v18);
                  swift_retain();
                  swift_retain();
                  unint64_t v121 = (char *)sub_2193E1DF0();
                  if (v121)
                  {
                    uint64_t v122 = sub_2193E1E20();
                    if (__OFSUB__(v119, v122)) {
                      goto LABEL_306;
                    }
                    v121 += v119 - v122;
                  }
                  int64_t v123 = v120 - v119;
                  if (__OFSUB__(v120, v119)) {
                    goto LABEL_299;
                  }
                  uint64_t v124 = sub_2193E1E10();
                  uint64_t v2 = a2;
                  if (!v121) {
                    goto LABEL_332;
                  }
                  goto LABEL_200;
              }
              break;
            case 2uLL:
              uint64_t v47 = *(void *)(v19 + 16);
              uint64_t v46 = *(void *)(v19 + 24);
              BOOL v32 = __OFSUB__(v46, v47);
              uint64_t v45 = v46 - v47;
              if (!v32) {
                goto LABEL_62;
              }
              goto LABEL_272;
            case 3uLL:
              if (!v41) {
                goto LABEL_73;
              }
              goto LABEL_259;
            default:
              uint64_t v45 = BYTE6(v18);
              goto LABEL_62;
          }
          continue;
        }
LABEL_258:
        sub_21934CE48(v27, v28);
        sub_21934CE48(v19, v18);
        sub_21934CEB0(v27, v28);
        uint64_t v152 = v19;
        unint64_t v153 = v18;
LABEL_260:
        sub_21934CEB0(v152, v153);
LABEL_261:
        sub_219348A70(v171, v170);
        sub_21934CEB0(v27, v28);
LABEL_262:
        sub_219348A70(v17, v16);
        sub_21934CEB0(v19, v18);
        return 0;
      case 2:
        uint64_t v35 = *(void *)(v17 + 16);
        uint64_t v34 = *(void *)(v17 + 24);
        BOOL v32 = __OFSUB__(v34, v35);
        uint64_t v33 = v34 - v35;
        if (!v32) {
          goto LABEL_37;
        }
        goto LABEL_268;
      case 3:
        if (!v29) {
          goto LABEL_48;
        }
        goto LABEL_262;
      default:
        uint64_t v33 = BYTE6(v16);
        goto LABEL_37;
    }
  }
}

uint64_t sub_21939E990(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C199C0);
  uint64_t result = sub_2193E2F20();
  int64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v26 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = result + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 56) + 32 * i);
    uint64_t v16 = *v15;
    unint64_t v17 = v15[1];
    uint64_t v18 = v15[2];
    unint64_t v19 = v15[3];
    uint64_t v20 = v3[6];
    long long v21 = *(_OWORD *)(*(void *)(a1 + 48) + 16 * i);
    *(void *)(v9 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(_OWORD *)(v20 + 16 * i) = v21;
    char v22 = (uint64_t *)(v3[7] + 32 * i);
    *char v22 = v16;
    v22[1] = v17;
    void v22[2] = v18;
    v22[3] = v19;
    uint64_t v23 = v3[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v25;
    sub_21934CDF0(v21, *((unint64_t *)&v21 + 1));
    sub_21934CDF0(v16, v17);
    uint64_t result = sub_21934CE48(v18, v19);
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v12 >= v27) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v27) {
        return (uint64_t)v3;
      }
      unint64_t v13 = *(void *)(v26 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v27) {
          return (uint64_t)v3;
        }
        unint64_t v13 = *(void *)(v26 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v27) {
    return (uint64_t)v3;
  }
  unint64_t v13 = *(void *)(v26 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v27) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_21939EBAC(uint64_t a1, char a2)
{
  int64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C19A00);
  uint64_t v6 = sub_2193E2F30();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          int64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    BOOL v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    uint64_t result = sub_2193E2B70();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v3 = v36;
  uint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *int64_t v3 = v7;
  return result;
}

uint64_t sub_21939EE80(uint64_t a1, char a2)
{
  int64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C199A8);
  char v36 = a2;
  uint64_t v6 = sub_2193E2F30();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_2193E3210();
    sub_2193E28D0();
    uint64_t result = sub_2193E3230();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *int64_t v3 = v7;
  return result;
}

uint64_t sub_21939F198(uint64_t a1, char a2)
{
  int64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C18BD8);
  char v38 = a2;
  uint64_t v6 = sub_2193E2F30();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v37 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v36) {
          goto LABEL_33;
        }
        unint64_t v23 = v37[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v23 = v37[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_33:
              swift_release();
              int64_t v3 = v2;
              if (v38)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
                if (v35 >= 64) {
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v35;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v37[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v23 = v37[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      long long v29 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v30 = (uint64_t *)(*(void *)(v5 + 56) + 32 * v21);
      uint64_t v31 = *v30;
      unint64_t v32 = v30[1];
      uint64_t v33 = v30[2];
      unint64_t v34 = v30[3];
      long long v39 = v29;
      if ((v38 & 1) == 0)
      {
        sub_21934CDF0(v29, *((unint64_t *)&v29 + 1));
        sub_21934CDF0(v31, v32);
        sub_21934CE48(v33, v34);
      }
      sub_2193E3210();
      sub_2193E2140();
      uint64_t result = sub_2193E3230();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        long long v18 = v39;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        long long v18 = v39;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_OWORD *)(*(void *)(v7 + 48) + 16 * v17) = v18;
      unint64_t v19 = (uint64_t *)(*(void *)(v7 + 56) + 32 * v17);
      uint64_t *v19 = v31;
      v19[1] = v32;
      v19[2] = v33;
      v19[3] = v34;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *int64_t v3 = v7;
  return result;
}

uint64_t sub_21939F4D0(uint64_t a1, char a2)
{
  int64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C199F8);
  char v38 = a2;
  uint64_t v6 = sub_2193E2F30();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          int64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    long long v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    unint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_2193E3210();
    sub_2193E28D0();
    uint64_t result = sub_2193E3230();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    long long v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v3 = v35;
  int64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *int64_t v3 = v7;
  return result;
}

uint64_t sub_21939F7E0(uint64_t a1, char a2)
{
  int64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C199F0);
  char v40 = a2;
  uint64_t v6 = sub_2193E2F30();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              int64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      long long v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 40 * v21;
      uint64_t v33 = *(void *)v32;
      uint64_t v34 = *(void *)(v32 + 8);
      uint64_t v35 = *(void *)(v32 + 16);
      long long v41 = *(_OWORD *)(v32 + 24);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_2193E3210();
      sub_2193E28D0();
      uint64_t result = sub_2193E3230();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      long long v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      void *v18 = v31;
      v18[1] = v30;
      uint64_t v19 = *(void *)(v7 + 56) + 40 * v17;
      *(void *)uint64_t v19 = v33;
      *(void *)(v19 + 8) = v34;
      *(void *)(v19 + 16) = v35;
      *(_OWORD *)(v19 + 24) = v41;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *int64_t v3 = v7;
  return result;
}

uint64_t sub_21939FB30(uint64_t a1, char a2)
{
  int64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AC276F8);
  char v36 = a2;
  uint64_t v6 = sub_2193E2F30();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    long long v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_2193E3210();
    sub_2193E28D0();
    uint64_t result = sub_2193E3230();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    long long v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *int64_t v3 = v7;
  return result;
}

uint64_t sub_21939FE48(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C19A00);
    uint64_t v2 = sub_2193E2F40();
    uint64_t v18 = v2;
    sub_2193E2EA0();
    uint64_t v3 = sub_2193E2ED0();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_2193607AC(0, (unint64_t *)&qword_267C194C8);
      do
      {
        swift_dynamicCast();
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_21939EBAC(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        uint64_t result = sub_2193E2B70();
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_2193E2ED0();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE80];
  }
  return v2;
}

void sub_2193A007C(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_219385A08((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_2193A0660();
LABEL_7:
    BOOL v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_21939EBAC(v12, a3 & 1);
  unint64_t v17 = sub_219385A08((uint64_t)a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_17:
    sub_2193607AC(0, (unint64_t *)&qword_267C194C8);
    sub_2193E3180();
    __break(1u);
    return;
  }
  unint64_t v9 = v17;
  BOOL v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v19 = 8 * v9;
  *(void *)(v15[6] + v19) = a2;
  *(void *)(v15[7] + v19) = a1;
  uint64_t v20 = v15[2];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15[2] = v22;

  id v23 = a2;
}

uint64_t sub_2193A01F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_21938452C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_2193A0808();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_21939EE80(v15, a4 & 1);
  uint64_t v21 = sub_21938452C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_2193E3180();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  id v23 = (uint64_t *)(v18[6] + 16 * v12);
  *id v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2193A0360(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_21938452C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_2193A0D64();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 40 * v12;
      return sub_2193A8F50(a1, v19);
    }
    goto LABEL_13;
  }
  sub_21939F7E0(v15, a4 & 1);
  uint64_t v21 = sub_21938452C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = sub_2193E3180();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  id v23 = (uint64_t *)(v18[6] + 16 * v12);
  *id v23 = a2;
  v23[1] = a3;
  uint64_t v24 = v18[7] + 40 * v12;
  long long v25 = *(_OWORD *)a1;
  long long v26 = *(_OWORD *)(a1 + 16);
  *(void *)(v24 + 32) = *(void *)(a1 + 32);
  *(_OWORD *)uint64_t v24 = v25;
  *(_OWORD *)(v24 + 16) = v26;
  uint64_t v27 = v18[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v18[2] = v29;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2193A04F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_21938452C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_2193A0F5C();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_21939FB30(v15, a4 & 1);
  uint64_t v21 = sub_21938452C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_2193E3180();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  id v23 = (uint64_t *)(v18[6] + 16 * v12);
  *id v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;

  return swift_bridgeObjectRetain();
}

id sub_2193A0660()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C19A00);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2193E2F20();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    char v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2193A0808()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C199A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2193E2F20();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2193A09C0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C18BD8);
  uint64_t v27 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_2193E2F20();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v27 = v3;
    return result;
  }
  id result = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6) {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v12) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v5 + 8 * v24);
    ++v8;
    if (!v25)
    {
      int64_t v8 = v24 + 1;
      if (v24 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v5 + 8 * v8);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v14 = __clz(__rbit64(v25)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = 32 * v14;
    uint64_t v17 = (uint64_t *)(*(void *)(v1 + 56) + v16);
    uint64_t v18 = *v17;
    unint64_t v19 = v17[1];
    uint64_t v20 = v17[2];
    unint64_t v21 = v17[3];
    long long v22 = *(_OWORD *)(*(void *)(v1 + 48) + v15);
    *(_OWORD *)(*(void *)(v3 + 48) + v15) = v22;
    unint64_t v23 = (uint64_t *)(*(void *)(v3 + 56) + v16);
    *unint64_t v23 = v18;
    v23[1] = v19;
    void v23[2] = v20;
    v23[3] = v21;
    sub_21934CDF0(v22, *((unint64_t *)&v22 + 1));
    sub_21934CDF0(v18, v19);
    id result = (void *)sub_21934CE48(v20, v21);
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v12) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v5 + 8 * v26);
  if (v25)
  {
    int64_t v8 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v5 + 8 * v8);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_2193A0BB0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C199F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2193E2F20();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2193A0D64()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C199F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2193E2F20();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 40 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    unint64_t v25 = (void *)(*(void *)(v4 + 48) + v16);
    long long v26 = *(_OWORD *)(v21 + 24);
    *unint64_t v25 = v19;
    v25[1] = v18;
    uint64_t v27 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v27 = v22;
    *(void *)(v27 + 8) = v23;
    *(void *)(v27 + 16) = v24;
    *(_OWORD *)(v27 + 24) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2193A0F5C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AC276F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2193E2F20();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

BOOL _s26AuthenticationServicesCore29ASCTAPLargeBlobExtensionInputV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  unint64_t v5 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  char v8 = *(unsigned char *)(a1 + 48);
  uint64_t v9 = *(void *)(a2 + 8);
  int v10 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v12 = *(void *)(a2 + 24);
  unint64_t v11 = *(void *)(a2 + 32);
  uint64_t v13 = *(void *)(a2 + 40);
  char v14 = *(unsigned char *)(a2 + 48);
  if (!v3)
  {
    if (v9) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v9) {
    return 0;
  }
  if (*(void *)a1 == *(void *)a2 && v3 == v9 || (v15 = sub_2193E3140(), BOOL result = 0, (v15 & 1) != 0))
  {
LABEL_8:
    if (v4 == 2)
    {
      if (v10 != 2) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      if (v10 == 2 || ((((v4 & 1) == 0) ^ v10) & 1) == 0) {
        return result;
      }
    }
    if (v5 >> 60 == 15)
    {
      if (v11 >> 60 == 15)
      {
LABEL_21:
        if ((v8 & 1) == 0)
        {
          if (v7 == v13) {
            char v18 = v14;
          }
          else {
            char v18 = 1;
          }
          return (v18 & 1) == 0;
        }
        return (v14 & 1) != 0;
      }
    }
    else if (v11 >> 60 != 15)
    {
      sub_21934CE48(v6, v5);
      sub_21934CE48(v12, v11);
      char v17 = sub_219379924(v6, v5, v12, v11);
      sub_21934CEB0(v12, v11);
      sub_21934CEB0(v6, v5);
      if ((v17 & 1) == 0) {
        return 0;
      }
      goto LABEL_21;
    }
    sub_21934CE48(v6, v5);
    sub_21934CE48(v12, v11);
    sub_21934CEB0(v6, v5);
    sub_21934CEB0(v12, v11);
    return 0;
  }
  return result;
}

BOOL sub_2193A12B0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8)
{
  if ((sub_219379924(a1, a2, a5, a6) & 1) == 0) {
    return 0;
  }
  if (a4 >> 60 == 15)
  {
    if (a8 >> 60 == 15) {
      return 1;
    }
    goto LABEL_6;
  }
  if (a8 >> 60 == 15)
  {
LABEL_6:
    sub_21934CE48(a3, a4);
    sub_21934CE48(a7, a8);
    sub_21934CEB0(a3, a4);
    sub_21934CEB0(a7, a8);
    return 0;
  }
  sub_21934CE48(a3, a4);
  sub_21934CE48(a7, a8);
  char v12 = sub_219379924(a3, a4, a7, a8);
  sub_21934CEB0(a7, a8);
  sub_21934CEB0(a3, a4);
  return (v12 & 1) != 0;
}

BOOL _s26AuthenticationServicesCore23ASCTAPPRFExtensionInputV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v2 = a1[1];
  uint64_t v5 = a1[2];
  unint64_t v4 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v8 = *a2;
  unint64_t v7 = a2[1];
  uint64_t v10 = a2[2];
  unint64_t v9 = a2[3];
  uint64_t v11 = a2[4];
  if (v2 >> 60 != 15)
  {
    if (v7 >> 60 != 15)
    {
      sub_21934D03C(*a1, v2, v5, v4);
      sub_21934D03C(v8, v7, v10, v9);
      if (sub_219379924(v3, v2, v8, v7))
      {
        if (v4 >> 60 == 15)
        {
          if (v9 >> 60 == 15)
          {
            sub_21934CF58(v8, v7, v10, v9);
            sub_21934CF58(v3, v2, v5, v4);
            goto LABEL_3;
          }
        }
        else if (v9 >> 60 != 15)
        {
          sub_21934CE48(v5, v4);
          sub_21934CE48(v10, v9);
          char v19 = sub_219379924(v5, v4, v10, v9);
          sub_21934CEB0(v10, v9);
          sub_21934CEB0(v5, v4);
          sub_21934CF58(v8, v7, v10, v9);
          sub_21934CF58(v3, v2, v5, v4);
          if ((v19 & 1) == 0) {
            return 0;
          }
          goto LABEL_3;
        }
        sub_21934CE48(v5, v4);
        sub_21934CE48(v10, v9);
        sub_21934CEB0(v5, v4);
        sub_21934CEB0(v10, v9);
      }
      sub_21934CF58(v8, v7, v10, v9);
      uint64_t v14 = v3;
      unint64_t v15 = v2;
      uint64_t v16 = v5;
      unint64_t v17 = v4;
LABEL_18:
      sub_21934CF58(v14, v15, v16, v17);
      return 0;
    }
LABEL_8:
    sub_21934D03C(*a1, v2, v5, v4);
    sub_21934D03C(v8, v7, v10, v9);
    sub_21934CF58(v3, v2, v5, v4);
    uint64_t v14 = v8;
    unint64_t v15 = v7;
    uint64_t v16 = v10;
    unint64_t v17 = v9;
    goto LABEL_18;
  }
  if (v7 >> 60 != 15) {
    goto LABEL_8;
  }
LABEL_3:
  if (v6)
  {
    if (!v11) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v12 = swift_bridgeObjectRetain();
    char v13 = sub_21939D37C(v12, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (v13 & 1) != 0;
  }
  return !v11;
}

BOOL _s26AuthenticationServicesCore20ASCTAPExtensionInputV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  unint64_t v7 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  char v8 = *(unsigned char *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 56);
  unint64_t v9 = *(void *)(a1 + 64);
  uint64_t v12 = *(void *)(a1 + 72);
  unint64_t v11 = *(void *)(a1 + 80);
  uint64_t v13 = *(void *)(a1 + 88);
  uint64_t v14 = *(void *)a2;
  uint64_t v15 = *(void *)(a2 + 8);
  uint64_t v17 = *(void *)(a2 + 16);
  uint64_t v16 = *(void *)(a2 + 24);
  unint64_t v19 = *(void *)(a2 + 32);
  uint64_t v18 = *(void *)(a2 + 40);
  char v20 = *(unsigned char *)(a2 + 48);
  uint64_t v22 = *(void *)(a2 + 56);
  unint64_t v21 = *(void *)(a2 + 64);
  uint64_t v24 = *(void *)(a2 + 72);
  unint64_t v23 = *(void *)(a2 + 80);
  uint64_t v25 = *(void *)(a2 + 88);
  if (v3 != 1)
  {
    uint64_t v79 = *(void *)a1;
    unint64_t v80 = v3;
    uint64_t v81 = v4;
    unint64_t v82 = v5;
    unint64_t v83 = v7;
    uint64_t v84 = v6;
    char v85 = v8;
    if (v15 != 1)
    {
      uint64_t v72 = v14;
      unint64_t v73 = v15;
      LOBYTE(v74) = v17;
      unint64_t v75 = v16;
      unint64_t v76 = v19;
      uint64_t v77 = v18;
      uint64_t v68 = v12;
      unint64_t v69 = v9;
      char v78 = v20 & 1;
      uint64_t v62 = v22;
      unint64_t v63 = v11;
      uint64_t v64 = v24;
      unint64_t v66 = v23;
      uint64_t v26 = v4;
      uint64_t v27 = v2;
      uint64_t v60 = v25;
      uint64_t v61 = v13;
      uint64_t v70 = v10;
      unint64_t v59 = v21;
      sub_21934CFA8(v2, v3, v4, v5, v7);
      swift_bridgeObjectRetain();
      sub_21934CE48(v5, v7);
      BOOL v28 = _s26AuthenticationServicesCore29ASCTAPLargeBlobExtensionInputV2eeoiySbAC_ACtFZ_0((uint64_t)&v79, (uint64_t)&v72);
      uint64_t v29 = v82;
      unint64_t v30 = v83;
      swift_bridgeObjectRelease();
      sub_21934CEB0(v29, v30);
      sub_21934CEC4(v27, v3, v26, v5, v7);
      uint64_t v22 = v62;
      unint64_t v11 = v63;
      unint64_t v21 = v59;
      uint64_t v25 = v60;
      uint64_t v24 = v64;
      unint64_t v23 = v66;
      unint64_t v9 = v69;
      uint64_t v10 = v70;
      uint64_t v12 = v68;
      uint64_t v13 = v61;
      if (!v28) {
        return 0;
      }
      goto LABEL_8;
    }
    uint64_t v65 = v2;
    uint64_t v67 = v4;
    swift_bridgeObjectRetain();
    sub_21934CE48(v5, v7);
    swift_bridgeObjectRetain();
    sub_21934CE48(v5, v7);
    swift_bridgeObjectRelease();
    sub_21934CEB0(v5, v7);
LABEL_6:
    sub_21934CFA8(v14, v15, v17, v16, v19);
    sub_21934CEC4(v65, v3, v67, v5, v7);
    sub_21934CEC4(v14, v15, v17, v16, v19);
    return 0;
  }
  uint64_t v65 = *(void *)a1;
  uint64_t v67 = *(void *)(a1 + 16);
  if (v15 != 1) {
    goto LABEL_6;
  }
LABEL_8:
  if (v13 == 1)
  {
    uint64_t v71 = v10;
    uint64_t v31 = v9;
    uint64_t v32 = v12;
    uint64_t v33 = v11;
    uint64_t v34 = 1;
    if (v25 == 1) {
      return 1;
    }
    goto LABEL_13;
  }
  uint64_t v79 = v10;
  unint64_t v80 = v9;
  uint64_t v81 = v12;
  unint64_t v82 = v11;
  unint64_t v83 = v13;
  if (v25 == 1)
  {
    uint64_t v35 = v22;
    uint64_t v36 = v12;
    uint64_t v37 = v24;
    unint64_t v38 = v11;
    unint64_t v39 = v23;
    uint64_t v40 = v13;
    unint64_t v41 = v9;
    uint64_t v42 = v10;
    unint64_t v43 = v21;
    sub_21934D03C(v10, v9, v12, v11);
    swift_bridgeObjectRetain();
    sub_21934D03C(v42, v41, v36, v38);
    swift_bridgeObjectRetain();
    uint64_t v71 = v42;
    uint64_t v44 = v42;
    uint64_t v31 = v41;
    unint64_t v45 = v41;
    uint64_t v32 = v36;
    uint64_t v46 = v36;
    uint64_t v33 = v38;
    sub_21934CF58(v44, v45, v46, v38);
    uint64_t v34 = v40;
    swift_bridgeObjectRelease();
    uint64_t v22 = v35;
    unint64_t v21 = v43;
    uint64_t v24 = v37;
    unint64_t v23 = v39;
    uint64_t v25 = 1;
LABEL_13:
    uint64_t v47 = v22;
    uint64_t v48 = v24;
    uint64_t v49 = v23;
    uint64_t v50 = v25;
    uint64_t v51 = v21;
    sub_21934CFF8(v22, v21, v24, v23, v25);
    sub_2193A8EB4(v71, v31, v32, v33, v34, (void (*)(void))sub_21934CF58);
    sub_2193A8EB4(v47, v51, v48, v49, v50, (void (*)(void))sub_21934CF58);
    return 0;
  }
  uint64_t v72 = v22;
  unint64_t v73 = v21;
  uint64_t v74 = v24;
  unint64_t v75 = v23;
  unint64_t v76 = v25;
  uint64_t v52 = v12;
  unint64_t v53 = v11;
  uint64_t v54 = v13;
  unint64_t v55 = v9;
  uint64_t v56 = v10;
  sub_21934CFF8(v10, v9, v12, v11, v13);
  sub_21934D03C(v56, v55, v52, v53);
  swift_bridgeObjectRetain();
  BOOL v57 = _s26AuthenticationServicesCore23ASCTAPPRFExtensionInputV2eeoiySbAC_ACtFZ_0(&v79, &v72);
  sub_21934CF58(v79, v80, v81, v82);
  swift_bridgeObjectRelease();
  sub_2193A8EB4(v56, v55, v52, v53, v54, (void (*)(void))sub_21934CF58);
  return v57;
}

BOOL _s26AuthenticationServicesCore14ASCTAPAuthDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 20);
  uint64_t v4 = *(void *)(a1 + 24);
  unint64_t v32 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  unint64_t v5 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  unint64_t v7 = *(void *)(a1 + 64);
  uint64_t v24 = *(void *)(a1 + 72);
  int v9 = *(unsigned __int8 *)(a2 + 16);
  int v10 = *(_DWORD *)(a2 + 20);
  unint64_t v11 = *(void *)(a2 + 32);
  unint64_t v26 = *(void *)(a1 + 80);
  uint64_t v27 = *(void *)(a2 + 24);
  uint64_t v28 = *(void *)(a2 + 40);
  unint64_t v29 = *(void *)(a2 + 48);
  uint64_t v30 = *(void *)(a2 + 56);
  unint64_t v31 = *(void *)(a2 + 64);
  uint64_t v23 = *(void *)(a2 + 72);
  unint64_t v25 = *(void *)(a2 + 80);
  char v12 = sub_219379924(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
  BOOL result = 0;
  if ((v12 & 1) != 0 && v2 == v9 && v3 == v10)
  {
    if (v32 >> 60 == 15)
    {
      if (v11 >> 60 == 15)
      {
LABEL_6:
        if (v26 >> 60 == 15)
        {
          unint64_t v14 = v25;
          if (v25 >> 60 == 15) {
            return 1;
          }
        }
        else
        {
          unint64_t v14 = v25;
          if (v25 >> 60 != 15)
          {
            sub_21934CE48(v24, v26);
            sub_21934CE48(v23, v25);
            char v21 = sub_219379924(v24, v26, v23, v25);
            sub_21934CEB0(v23, v25);
            sub_21934CEB0(v24, v26);
            return (v21 & 1) != 0;
          }
        }
        sub_21934CE48(v24, v26);
        sub_21934CE48(v23, v14);
        sub_21934CEB0(v24, v26);
        sub_21934CEB0(v23, v14);
        return 0;
      }
    }
    else
    {
      if (v11 >> 60 != 15)
      {
        sub_2193A9000(v4, v32, v6, v5, v8, v7, (void (*)(void))sub_21934CDF0);
        sub_2193A9000(v4, v32, v6, v5, v8, v7, (void (*)(void))sub_21934CDF0);
        sub_2193A9000(v27, v11, v28, v29, v30, v31, (void (*)(void))sub_21934CDF0);
        if (sub_219379924(v4, v32, v27, v11) & 1) != 0 && (sub_219379924(v6, v5, v28, v29))
        {
          char v22 = sub_219379924(v8, v7, v30, v31);
          sub_2193A9000(v27, v11, v28, v29, v30, v31, (void (*)(void))sub_219348A70);
          sub_219348A70(v4, v32);
          sub_219348A70(v6, v5);
          sub_219348A70(v8, v7);
          sub_2193A9000(v4, v32, v6, v5, v8, v7, (void (*)(void))sub_219348A70);
          if ((v22 & 1) == 0) {
            return 0;
          }
          goto LABEL_6;
        }
        sub_2193A9000(v27, v11, v28, v29, v30, v31, (void (*)(void))sub_219348A70);
        sub_219348A70(v4, v32);
        sub_219348A70(v6, v5);
        sub_219348A70(v8, v7);
        uint64_t v15 = v4;
        unint64_t v16 = v32;
        uint64_t v17 = v6;
        uint64_t v18 = v5;
        uint64_t v19 = v8;
        uint64_t v20 = v7;
LABEL_17:
        sub_2193A9000(v15, v16, v17, v18, v19, v20, (void (*)(void))sub_219348A70);
        return 0;
      }
      sub_21934CDF0(v4, v32);
      sub_21934CDF0(v6, v5);
      sub_21934CDF0(v8, v7);
      sub_21934CDF0(v4, v32);
      sub_21934CDF0(v6, v5);
      sub_21934CDF0(v8, v7);
      sub_219348A70(v4, v32);
      sub_219348A70(v6, v5);
      sub_219348A70(v8, v7);
    }
    sub_2193A9000(v27, v11, v28, v29, v30, v31, (void (*)(void))sub_21934CDF0);
    sub_2193A9000(v4, v32, v6, v5, v8, v7, (void (*)(void))sub_219348A70);
    uint64_t v15 = v27;
    unint64_t v16 = v11;
    uint64_t v17 = v28;
    uint64_t v18 = v29;
    uint64_t v19 = v30;
    uint64_t v20 = v31;
    goto LABEL_17;
  }
  return result;
}

uint64_t sub_2193A1F3C(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_2193E3140(), result = 0, (v5 & 1) != 0))
  {
    if (sub_219379924(a1[2], a1[3], a2[2], a2[3]))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5])
      {
        return 1;
      }
      else
      {
        return sub_2193E3140();
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

BOOL _s26AuthenticationServicesCore30ASCTAPLargeBlobExtensionOutputV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  uint64_t v4 = *((void *)a1 + 1);
  unint64_t v3 = *((void *)a1 + 2);
  int v5 = a1[24];
  uint64_t v6 = *((void *)a1 + 4);
  unsigned __int8 v7 = a1[40];
  int v8 = *a2;
  uint64_t v10 = *((void *)a2 + 1);
  unint64_t v9 = *((void *)a2 + 2);
  int v11 = a2[24];
  uint64_t v12 = *((void *)a2 + 4);
  char v13 = a2[40];
  if (v2 == 2)
  {
    if (v8 != 2) {
      return 0;
    }
  }
  else
  {
    BOOL result = 0;
    BOOL v15 = (v2 & 1) == 0;
    if (v8 == 2 || ((v15 ^ v8) & 1) == 0) {
      return result;
    }
  }
  if (v3 >> 60 != 15)
  {
    if (v9 >> 60 != 15)
    {
      sub_21934CE48(v4, v3);
      sub_21934CE48(v10, v9);
      char v17 = sub_219379924(v4, v3, v10, v9);
      sub_21934CEB0(v10, v9);
      sub_21934CEB0(v4, v3);
      if ((v17 & 1) == 0) {
        return 0;
      }
      goto LABEL_14;
    }
LABEL_10:
    sub_21934CE48(v4, v3);
    sub_21934CE48(v10, v9);
    sub_21934CEB0(v4, v3);
    sub_21934CEB0(v10, v9);
    return 0;
  }
  if (v9 >> 60 != 15) {
    goto LABEL_10;
  }
LABEL_14:
  if (v5 == 2)
  {
    if (v11 != 2) {
      return 0;
    }
    goto LABEL_19;
  }
  BOOL result = 0;
  if (v11 != 2 && ((((v5 & 1) == 0) ^ v11) & 1) != 0)
  {
LABEL_19:
    if ((v7 & 1) == 0)
    {
      if (v6 == v12) {
        char v16 = v13;
      }
      else {
        char v16 = 1;
      }
      return (v16 & 1) == 0;
    }
    return (v13 & 1) != 0;
  }
  return result;
}

BOOL _s26AuthenticationServicesCore24ASCTAPPRFExtensionOutputV7ResultsV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = a1[2];
  unint64_t v2 = a1[3];
  uint64_t v5 = a2[2];
  unint64_t v4 = a2[3];
  if ((sub_219379924(*a1, a1[1], *a2, a2[1]) & 1) == 0) {
    return 0;
  }
  if (v2 >> 60 == 15)
  {
    if (v4 >> 60 == 15) {
      return 1;
    }
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    sub_21934CE48(v3, v2);
    sub_21934CE48(v5, v4);
    sub_21934CEB0(v3, v2);
    sub_21934CEB0(v5, v4);
    return 0;
  }
  sub_21934CE48(v3, v2);
  sub_21934CE48(v5, v4);
  char v6 = sub_219379924(v3, v2, v5, v4);
  sub_21934CEB0(v5, v4);
  sub_21934CEB0(v3, v2);
  return (v6 & 1) != 0;
}

uint64_t _s26AuthenticationServicesCore24ASCTAPPRFExtensionOutputV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  int v2 = *(unsigned __int8 *)a1;
  uint64_t v4 = a1[1];
  unint64_t v3 = a1[2];
  uint64_t v6 = a1[3];
  unint64_t v5 = a1[4];
  int v7 = *(unsigned __int8 *)a2;
  uint64_t v9 = a2[1];
  unint64_t v8 = a2[2];
  uint64_t v11 = a2[3];
  unint64_t v10 = a2[4];
  if (v2 == 2)
  {
    if (v7 != 2) {
      return 0;
    }
LABEL_6:
    if (v3 >> 60 == 15)
    {
      if (v8 >> 60 == 15) {
        return 1;
      }
      goto LABEL_11;
    }
    if (v8 >> 60 == 15)
    {
      sub_21934CDF0(v4, v3);
      sub_21934CE48(v6, v5);
      sub_21934CDF0(v4, v3);
      sub_21934CE48(v6, v5);
      sub_219348A70(v4, v3);
      sub_21934CEB0(v6, v5);
LABEL_11:
      sub_21934D03C(v9, v8, v11, v10);
      sub_21934CF58(v4, v3, v6, v5);
      uint64_t v14 = v9;
      unint64_t v15 = v8;
      uint64_t v16 = v11;
      unint64_t v17 = v10;
LABEL_21:
      sub_21934CF58(v14, v15, v16, v17);
      return 0;
    }
    sub_21934D03C(v4, v3, v6, v5);
    sub_21934CDF0(v4, v3);
    sub_21934CE48(v6, v5);
    if (sub_219379924(v4, v3, v9, v8))
    {
      if (v5 >> 60 == 15)
      {
        if (v10 >> 60 == 15) {
          goto LABEL_19;
        }
        goto LABEL_17;
      }
      if (v10 >> 60 == 15)
      {
LABEL_17:
        sub_21934CE48(v6, v5);
        sub_21934CE48(v11, v10);
        sub_21934CEB0(v6, v5);
        sub_21934CEB0(v11, v10);
        goto LABEL_20;
      }
      sub_21934CE48(v6, v5);
      sub_21934CE48(v11, v10);
      char v18 = sub_219379924(v6, v5, v11, v10);
      sub_21934CEB0(v11, v10);
      sub_21934CEB0(v6, v5);
      if (v18)
      {
LABEL_19:
        sub_219348A70(v4, v3);
        sub_21934CEB0(v6, v5);
        sub_21934CF58(v4, v3, v6, v5);
        return 1;
      }
    }
LABEL_20:
    sub_219348A70(v4, v3);
    sub_21934CEB0(v6, v5);
    uint64_t v14 = v4;
    unint64_t v15 = v3;
    uint64_t v16 = v6;
    unint64_t v17 = v5;
    goto LABEL_21;
  }
  uint64_t result = 0;
  BOOL v13 = (v2 & 1) == 0;
  if (v7 != 2 && ((v13 ^ v7) & 1) != 0) {
    goto LABEL_6;
  }
  return result;
}

uint64_t _s26AuthenticationServicesCore21ASCTAPExtensionOutputV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  unint64_t v6 = *(void *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  unint64_t v11 = *(void *)(a1 + 64);
  uint64_t v10 = *(void *)(a1 + 72);
  unint64_t v12 = *(void *)(a1 + 80);
  int v13 = *(unsigned __int8 *)(a1 + 88);
  uint64_t v14 = *(void *)a2;
  uint64_t v15 = *(void *)(a2 + 8);
  unint64_t v17 = *(void *)(a2 + 16);
  uint64_t v16 = *(void *)(a2 + 24);
  unint64_t v18 = *(void *)(a2 + 32);
  char v19 = *(unsigned char *)(a2 + 40);
  uint64_t v20 = *(void *)(a2 + 48);
  uint64_t v21 = *(void *)(a2 + 56);
  unint64_t v22 = *(void *)(a2 + 64);
  uint64_t v23 = *(void *)(a2 + 72);
  unint64_t v24 = *(void *)(a2 + 80);
  int v25 = *(unsigned __int8 *)(a2 + 88);
  if (v2 != 3)
  {
    uint64_t v76 = v2;
    uint64_t v77 = v3;
    unint64_t v78 = v5;
    uint64_t v79 = v4;
    unint64_t v80 = v6;
    char v81 = v7;
    if (v14 != 3)
    {
      LOBYTE(v70) = v14;
      uint64_t v71 = v15;
      unint64_t v72 = v17;
      LOBYTE(v73) = v16;
      unint64_t v74 = v18;
      char v75 = v19 & 1;
      unint64_t v67 = v11;
      uint64_t v68 = v20;
      unint64_t v63 = v22;
      uint64_t v64 = v23;
      unint64_t v65 = v12;
      uint64_t v66 = v10;
      unint64_t v61 = v24;
      uint64_t v62 = v21;
      uint64_t v60 = v8;
      uint64_t v26 = v9;
      int v27 = v13;
      int v28 = v25;
      sub_21935BAB0(v2, v3, v5);
      sub_21934CE48(v3, v5);
      BOOL v29 = _s26AuthenticationServicesCore30ASCTAPLargeBlobExtensionOutputV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v76, (unsigned __int8 *)&v70);
      sub_21934CEB0(v77, v78);
      sub_21935BD18(v2, v3, v5);
      unint64_t v11 = v67;
      uint64_t v20 = v68;
      uint64_t v21 = v62;
      unint64_t v22 = v63;
      uint64_t v23 = v64;
      unint64_t v12 = v65;
      uint64_t v8 = v60;
      unint64_t v24 = v61;
      int v25 = v28;
      int v13 = v27;
      uint64_t v9 = v26;
      uint64_t v10 = v66;
      if (!v29) {
        return 0;
      }
      goto LABEL_8;
    }
    sub_21934CE48(v3, v5);
    sub_21934CE48(v3, v5);
    sub_21934CEB0(v3, v5);
LABEL_6:
    sub_21935BAB0(v14, v15, v17);
    sub_21935BD18(v2, v3, v5);
    sub_21935BD18(v14, v15, v17);
    return 0;
  }
  if (*(void *)a2 != 3) {
    goto LABEL_6;
  }
LABEL_8:
  if (v9 == 3)
  {
    uint64_t v30 = v9;
    uint64_t v31 = v8;
    unint64_t v32 = v11;
    uint64_t v33 = v10;
    unint64_t v34 = v12;
    if (v20 == 3)
    {
LABEL_15:
      if (v13 == 2)
      {
        if (v25 != 2) {
          return 0;
        }
      }
      else if (v25 == 2 || ((((v13 & 1) == 0) ^ v25) & 1) == 0)
      {
        return 0;
      }
      return 1;
    }
    goto LABEL_13;
  }
  uint64_t v76 = v9;
  uint64_t v77 = v8;
  unint64_t v78 = v11;
  uint64_t v79 = v10;
  unint64_t v80 = v12;
  if (v20 == 3)
  {
    uint64_t v30 = v9;
    uint64_t v69 = v20;
    unint64_t v35 = v11;
    unint64_t v36 = v22;
    uint64_t v37 = v10;
    uint64_t v38 = v23;
    uint64_t v39 = v21;
    unint64_t v40 = v12;
    uint64_t v41 = v8;
    unint64_t v42 = v24;
    sub_21934D03C(v8, v11, v10, v12);
    sub_21934D03C(v41, v35, v37, v40);
    uint64_t v31 = v41;
    uint64_t v43 = v41;
    unint64_t v32 = v35;
    unint64_t v44 = v35;
    uint64_t v33 = v37;
    uint64_t v45 = v37;
    unint64_t v34 = v40;
    sub_21934CF58(v43, v44, v45, v40);
    uint64_t v20 = v69;
    uint64_t v21 = v39;
    unint64_t v22 = v36;
    uint64_t v23 = v38;
    unint64_t v24 = v42;
LABEL_13:
    uint64_t v46 = v20;
    unint64_t v47 = v22;
    uint64_t v48 = v23;
    uint64_t v49 = v21;
    unint64_t v50 = v24;
    sub_21935BACC(v20, v21, v22, v23, v24);
    sub_21935BD34(v30, v31, v32, v33, v34);
    sub_21935BD34(v46, v49, v47, v48, v50);
    return 0;
  }
  LOBYTE(v70) = v20;
  uint64_t v71 = v21;
  unint64_t v72 = v22;
  uint64_t v73 = v23;
  unint64_t v74 = v24;
  unint64_t v51 = v11;
  uint64_t v52 = v10;
  unint64_t v53 = v12;
  uint64_t v54 = v8;
  uint64_t v55 = v9;
  int v56 = v13;
  int v57 = v25;
  sub_21935BACC(v9, v8, v11, v10, v12);
  sub_21934D03C(v54, v51, v52, v53);
  char v58 = _s26AuthenticationServicesCore24ASCTAPPRFExtensionOutputV2eeoiySbAC_ACtFZ_0(&v76, &v70);
  sub_21934CF58(v77, v78, v79, v80);
  sub_21935BD34(v55, v54, v51, v52, v53);
  int v25 = v57;
  int v13 = v56;
  if (v58) {
    goto LABEL_15;
  }
  return 0;
}

uint64_t sub_2193A28D4(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_2193E3140(), result = 0, (v5 & 1) != 0))
  {
    if (sub_219379924(a1[2], a1[3], a2[2], a2[3]))
    {
      char v7 = (void *)a1[4];
      uint64_t v8 = (void *)a2[4];
      if (v7)
      {
        if (v8 && (sub_2193BC948(v7, v8) & 1) != 0) {
          return 1;
        }
      }
      else if (!v8)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t _s26AuthenticationServicesCore33ASCTAPUserVerificationRequirementO1loiySbAC_ACtFZ_0(unsigned char *a1, unsigned char *a2)
{
  if (!*a1) {
    return 0;
  }
  if (*a1 == 1)
  {
    if (*a2)
    {
      char v2 = sub_2193E3140();
      swift_bridgeObjectRelease();
      return v2 & 1;
    }
    swift_bridgeObjectRelease();
  }
  return 1;
}

uint64_t sub_2193A2A18(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_2193A2ADC(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_2193E1E30();
  swift_allocObject();
  uint64_t result = sub_2193E1DE0();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_2193E20B0();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_2193A2B58(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_2193E1E30();
  swift_allocObject();
  uint64_t result = sub_2193E1DE0();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_2193A2BDC(uint64_t a1, unint64_t a2)
{
  return sub_2193949E0(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_2193A2BF8(uint64_t a1, unint64_t a2)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  unint64_t v2 = a2 >> 62;
  uint64_t v5 = 0;
  uint64_t v21 = a1 >> 32;
  uint64_t v22 = BYTE6(a2);
  switch(a2 >> 62)
  {
    case 1uLL:
      sub_21934CDF0(a1, a2);
      uint64_t v5 = v21;
      break;
    case 2uLL:
      uint64_t v5 = *(void *)(a1 + 24);
      sub_21934CDF0(a1, a2);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v5 = BYTE6(a2);
      break;
  }
  uint64_t v6 = 0;
  unint64_t v7 = -8;
  uint64_t v20 = v5;
  while (2)
  {
    uint64_t v8 = (int)a1;
    switch((int)v2)
    {
      case 0:
        if (!v5) {
          goto LABEL_28;
        }
        BOOL v9 = __OFSUB__(v5--, 1);
        if (v9) {
          goto LABEL_34;
        }
        if (v5 >= v22) {
          goto LABEL_35;
        }
        uint64_t v23 = a1;
        __int16 v24 = a2;
        char v25 = BYTE2(a2);
        char v26 = BYTE3(a2);
        char v27 = BYTE4(a2);
        char v28 = BYTE5(a2);
        int v10 = *((unsigned __int8 *)&v23 + v5);
        goto LABEL_26;
      case 1:
        goto LABEL_12;
      case 2:
        uint64_t v8 = *(void *)(a1 + 16);
LABEL_12:
        if (v5 == v8) {
          goto LABEL_28;
        }
        BOOL v9 = __OFSUB__(v5--, 1);
        if (v9) {
          goto LABEL_33;
        }
        if (v2 == 2)
        {
          if (v5 < *(void *)(a1 + 16)) {
            goto LABEL_36;
          }
          if (v5 >= *(void *)(a1 + 24)) {
            goto LABEL_38;
          }
          uint64_t v11 = sub_2193E1DF0();
          if (!v11) {
            goto LABEL_42;
          }
          uint64_t v12 = v11;
          uint64_t v13 = sub_2193E1E20();
          uint64_t v14 = v5 - v13;
          if (__OFSUB__(v5, v13)) {
            goto LABEL_40;
          }
        }
        else
        {
          if (v5 < (int)a1 || v5 >= v21) {
            goto LABEL_37;
          }
          uint64_t v15 = sub_2193E1DF0();
          if (!v15) {
            goto LABEL_43;
          }
          uint64_t v12 = v15;
          uint64_t v16 = sub_2193E1E20();
          uint64_t v14 = v5 - v16;
          if (__OFSUB__(v5, v16)) {
            goto LABEL_39;
          }
        }
        int v10 = *(unsigned __int8 *)(v12 + v14);
LABEL_26:
        int v17 = v10 << (v7 + 8);
        BOOL v18 = __CFADD__(v6, v17);
        uint64_t v6 = (v6 + v17);
        if (v18)
        {
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
        }
        v7 += 8;
        if (v7 < 0x18) {
          continue;
        }
LABEL_28:
        sub_219348A70(a1, a2);
        return v6;
      case 3:
        sub_219348A70(a1, a2);
        if (v20) {
          goto LABEL_41;
        }
        return 0;
      default:
        JUMPOUT(0);
    }
  }
}

unint64_t sub_2193A2F00()
{
  unint64_t result = qword_267C19678;
  if (!qword_267C19678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19678);
  }
  return result;
}

unint64_t sub_2193A2F54()
{
  unint64_t result = qword_267C19688;
  if (!qword_267C19688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19688);
  }
  return result;
}

unint64_t sub_2193A2FA8()
{
  unint64_t result = qword_267C196A0;
  if (!qword_267C196A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C196A0);
  }
  return result;
}

unint64_t sub_2193A2FFC()
{
  unint64_t result = qword_267C196A8;
  if (!qword_267C196A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C196A8);
  }
  return result;
}

unint64_t sub_2193A3050()
{
  unint64_t result = qword_267C196B0;
  if (!qword_267C196B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C196B0);
  }
  return result;
}

unint64_t sub_2193A30A4()
{
  unint64_t result = qword_267C196C0;
  if (!qword_267C196C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C196C0);
  }
  return result;
}

unint64_t sub_2193A30F8()
{
  unint64_t result = qword_267C196C8;
  if (!qword_267C196C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C196C8);
  }
  return result;
}

unint64_t sub_2193A314C()
{
  unint64_t result = qword_267C196D8;
  if (!qword_267C196D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C196D8);
  }
  return result;
}

unint64_t sub_2193A31A0()
{
  unint64_t result = qword_267C19720;
  if (!qword_267C19720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19720);
  }
  return result;
}

unint64_t sub_2193A31F4()
{
  unint64_t result = qword_267C19728;
  if (!qword_267C19728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19728);
  }
  return result;
}

uint64_t sub_2193A3248(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2193A3290()
{
  unint64_t result = qword_267C19738;
  if (!qword_267C19738)
  {
    sub_2193607AC(255, (unint64_t *)&qword_267C194C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19738);
  }
  return result;
}

uint64_t sub_2193A32F8()
{
  return swift_release();
}

unint64_t sub_2193A3300()
{
  unint64_t result = qword_267C19748;
  if (!qword_267C19748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19748);
  }
  return result;
}

unint64_t sub_2193A3354()
{
  unint64_t result = qword_267C19760;
  if (!qword_267C19760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19760);
  }
  return result;
}

unint64_t sub_2193A33A8()
{
  unint64_t result = qword_267C19778;
  if (!qword_267C19778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19778);
  }
  return result;
}

unint64_t sub_2193A33FC()
{
  unint64_t result = qword_267C19780;
  if (!qword_267C19780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19780);
  }
  return result;
}

unint64_t sub_2193A3450()
{
  unint64_t result = qword_267C19790;
  if (!qword_267C19790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19790);
  }
  return result;
}

unint64_t sub_2193A34A4()
{
  unint64_t result = qword_267C197A0;
  if (!qword_267C197A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C197A0);
  }
  return result;
}

unint64_t sub_2193A34F8()
{
  unint64_t result = qword_267C197A8;
  if (!qword_267C197A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C197A8);
  }
  return result;
}

unint64_t sub_2193A354C()
{
  unint64_t result = qword_267C197B0;
  if (!qword_267C197B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C197B0);
  }
  return result;
}

unint64_t sub_2193A35A0()
{
  unint64_t result = qword_267C197C0;
  if (!qword_267C197C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C197C0);
  }
  return result;
}

unint64_t sub_2193A35F4()
{
  unint64_t result = qword_267C197C8;
  if (!qword_267C197C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C197C8);
  }
  return result;
}

unint64_t sub_2193A3648()
{
  unint64_t result = qword_267C197D8;
  if (!qword_267C197D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C197D8);
  }
  return result;
}

unint64_t sub_2193A369C()
{
  unint64_t result = qword_267C197F0;
  if (!qword_267C197F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C197F0);
  }
  return result;
}

unint64_t sub_2193A36F0()
{
  unint64_t result = qword_267C197F8;
  if (!qword_267C197F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C197F8);
  }
  return result;
}

unint64_t sub_2193A3748()
{
  unint64_t result = qword_267C19800;
  if (!qword_267C19800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19800);
  }
  return result;
}

unint64_t sub_2193A37A0()
{
  unint64_t result = qword_267C19808;
  if (!qword_267C19808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19808);
  }
  return result;
}

unint64_t sub_2193A37F8()
{
  unint64_t result = qword_267C19810;
  if (!qword_267C19810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19810);
  }
  return result;
}

unint64_t sub_2193A3850()
{
  unint64_t result = qword_267C19818;
  if (!qword_267C19818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19818);
  }
  return result;
}

unint64_t sub_2193A38A8()
{
  unint64_t result = qword_267C19820;
  if (!qword_267C19820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19820);
  }
  return result;
}

unint64_t sub_2193A3900()
{
  unint64_t result = qword_267C19828;
  if (!qword_267C19828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19828);
  }
  return result;
}

unint64_t sub_2193A3958()
{
  unint64_t result = qword_267C19830;
  if (!qword_267C19830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19830);
  }
  return result;
}

unint64_t sub_2193A39B0()
{
  unint64_t result = qword_267C19838;
  if (!qword_267C19838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19838);
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPUserVerificationRequirement()
{
  return &type metadata for ASCTAPUserVerificationRequirement;
}

unsigned char *storeEnumTagSinglePayload for ASCTAPAuthenticatorTransport(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2193A3AE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPAuthenticatorTransport()
{
  return &type metadata for ASCTAPAuthenticatorTransport;
}

unsigned char *storeEnumTagSinglePayload for ASWKCTAPAuthenticatorTransport(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2193A3BECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASWKCTAPAuthenticatorTransport()
{
  return &type metadata for ASWKCTAPAuthenticatorTransport;
}

uint64_t destroy for ASCTAPAuthData(uint64_t *a1)
{
  uint64_t result = sub_219348A70(*a1, a1[1]);
  unint64_t v3 = a1[4];
  if (v3 >> 60 != 15)
  {
    sub_219348A70(a1[3], v3);
    sub_219348A70(a1[5], a1[6]);
    uint64_t result = sub_219348A70(a1[7], a1[8]);
  }
  unint64_t v4 = a1[10];
  if (v4 >> 60 != 15)
  {
    uint64_t v5 = a1[9];
    return sub_219348A70(v5, v4);
  }
  return result;
}

uint64_t initializeWithCopy for ASCTAPAuthData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_21934CDF0(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  unint64_t v6 = *(void *)(a2 + 32);
  if (v6 >> 60 == 15)
  {
    long long v7 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v7;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  }
  else
  {
    uint64_t v8 = *(void *)(a2 + 24);
    sub_21934CDF0(v8, *(void *)(a2 + 32));
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = v6;
    uint64_t v9 = *(void *)(a2 + 40);
    unint64_t v10 = *(void *)(a2 + 48);
    sub_21934CDF0(v9, v10);
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = v10;
    uint64_t v11 = *(void *)(a2 + 56);
    unint64_t v12 = *(void *)(a2 + 64);
    sub_21934CDF0(v11, v12);
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = v12;
  }
  uint64_t v13 = (uint64_t *)(a2 + 72);
  unint64_t v14 = *(void *)(a2 + 80);
  if (v14 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v13;
  }
  else
  {
    uint64_t v15 = *v13;
    sub_21934CDF0(*v13, v14);
    *(void *)(a1 + 72) = v15;
    *(void *)(a1 + 80) = v14;
  }
  return a1;
}

uint64_t assignWithCopy for ASCTAPAuthData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_21934CDF0(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_219348A70(v6, v7);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  uint64_t v8 = (long long *)(a1 + 24);
  uint64_t v9 = (long long *)(a2 + 24);
  unint64_t v10 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) >> 60 == 15)
  {
    if (v10 >> 60 == 15)
    {
      long long v11 = *v9;
      long long v12 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = v12;
      *uint64_t v8 = v11;
    }
    else
    {
      uint64_t v15 = *(void *)(a2 + 24);
      sub_21934CDF0(v15, *(void *)(a2 + 32));
      *(void *)(a1 + 24) = v15;
      *(void *)(a1 + 32) = v10;
      uint64_t v16 = *(void *)(a2 + 40);
      unint64_t v17 = *(void *)(a2 + 48);
      sub_21934CDF0(v16, v17);
      *(void *)(a1 + 40) = v16;
      *(void *)(a1 + 48) = v17;
      uint64_t v18 = *(void *)(a2 + 56);
      unint64_t v19 = *(void *)(a2 + 64);
      sub_21934CDF0(v18, v19);
      *(void *)(a1 + 56) = v18;
      *(void *)(a1 + 64) = v19;
    }
  }
  else if (v10 >> 60 == 15)
  {
    sub_2193A3F74((uint64_t *)(a1 + 24));
    long long v14 = *(_OWORD *)(a2 + 40);
    long long v13 = *(_OWORD *)(a2 + 56);
    *uint64_t v8 = *v9;
    *(_OWORD *)(a1 + 40) = v14;
    *(_OWORD *)(a1 + 56) = v13;
  }
  else
  {
    uint64_t v20 = *(void *)(a2 + 24);
    sub_21934CDF0(v20, *(void *)(a2 + 32));
    uint64_t v21 = *(void *)(a1 + 24);
    unint64_t v22 = *(void *)(a1 + 32);
    *(void *)(a1 + 24) = v20;
    *(void *)(a1 + 32) = v10;
    sub_219348A70(v21, v22);
    uint64_t v23 = *(void *)(a2 + 40);
    unint64_t v24 = *(void *)(a2 + 48);
    sub_21934CDF0(v23, v24);
    uint64_t v25 = *(void *)(a1 + 40);
    unint64_t v26 = *(void *)(a1 + 48);
    *(void *)(a1 + 40) = v23;
    *(void *)(a1 + 48) = v24;
    sub_219348A70(v25, v26);
    uint64_t v27 = *(void *)(a2 + 56);
    unint64_t v28 = *(void *)(a2 + 64);
    sub_21934CDF0(v27, v28);
    uint64_t v29 = *(void *)(a1 + 56);
    unint64_t v30 = *(void *)(a1 + 64);
    *(void *)(a1 + 56) = v27;
    *(void *)(a1 + 64) = v28;
    sub_219348A70(v29, v30);
  }
  uint64_t v31 = (uint64_t *)(a2 + 72);
  unint64_t v32 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80) >> 60 != 15)
  {
    if (v32 >> 60 != 15)
    {
      uint64_t v34 = *v31;
      sub_21934CDF0(*v31, v32);
      uint64_t v35 = *(void *)(a1 + 72);
      unint64_t v36 = *(void *)(a1 + 80);
      *(void *)(a1 + 72) = v34;
      *(void *)(a1 + 80) = v32;
      sub_219348A70(v35, v36);
      return a1;
    }
    sub_21934DFD8(a1 + 72);
    goto LABEL_13;
  }
  if (v32 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v31;
    return a1;
  }
  uint64_t v33 = *v31;
  sub_21934CDF0(*v31, v32);
  *(void *)(a1 + 72) = v33;
  *(void *)(a1 + 80) = v32;
  return a1;
}

uint64_t *sub_2193A3F74(uint64_t *a1)
{
  return a1;
}

uint64_t assignWithTake for ASCTAPAuthData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_219348A70(v4, v5);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  unint64_t v6 = *(void *)(a1 + 32);
  if (v6 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v7 = *(void *)(a2 + 32);
  if (v7 >> 60 == 15)
  {
    sub_2193A3F74((uint64_t *)(a1 + 24));
LABEL_4:
    long long v8 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v8;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  sub_219348A70(v9, v6);
  uint64_t v10 = *(void *)(a1 + 40);
  unint64_t v11 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_219348A70(v10, v11);
  uint64_t v12 = *(void *)(a1 + 56);
  unint64_t v13 = *(void *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  sub_219348A70(v12, v13);
LABEL_6:
  long long v14 = (void *)(a2 + 72);
  unint64_t v15 = *(void *)(a1 + 80);
  if (v15 >> 60 != 15)
  {
    unint64_t v16 = *(void *)(a2 + 80);
    if (v16 >> 60 != 15)
    {
      uint64_t v17 = *(void *)(a1 + 72);
      *(void *)(a1 + 72) = *v14;
      *(void *)(a1 + 80) = v16;
      sub_219348A70(v17, v15);
      return a1;
    }
    sub_21934DFD8(a1 + 72);
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)v14;
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCTAPAuthData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 88)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ASCTAPAuthData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 88) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPAuthData()
{
  return &type metadata for ASCTAPAuthData;
}

ValueMetadata *type metadata accessor for ASCTAPAuthData.Flags()
{
  return &type metadata for ASCTAPAuthData.Flags;
}

uint64_t destroy for ASCTAPCredentialData(uint64_t *a1)
{
  sub_219348A70(*a1, a1[1]);
  sub_219348A70(a1[2], a1[3]);
  uint64_t v2 = a1[4];
  unint64_t v3 = a1[5];

  return sub_219348A70(v2, v3);
}

uint64_t *initializeWithCopy for ASCTAPCredentialData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_21934CDF0(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  sub_21934CDF0(v6, v7);
  a1[2] = v6;
  a1[3] = v7;
  uint64_t v9 = a2[4];
  unint64_t v8 = a2[5];
  sub_21934CDF0(v9, v8);
  a1[4] = v9;
  a1[5] = v8;
  return a1;
}

uint64_t *assignWithCopy for ASCTAPCredentialData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_21934CDF0(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_219348A70(v6, v7);
  uint64_t v8 = a2[2];
  unint64_t v9 = a2[3];
  sub_21934CDF0(v8, v9);
  uint64_t v10 = a1[2];
  unint64_t v11 = a1[3];
  a1[2] = v8;
  a1[3] = v9;
  sub_219348A70(v10, v11);
  uint64_t v13 = a2[4];
  unint64_t v12 = a2[5];
  sub_21934CDF0(v13, v12);
  uint64_t v14 = a1[4];
  unint64_t v15 = a1[5];
  a1[4] = v13;
  a1[5] = v12;
  sub_219348A70(v14, v15);
  return a1;
}

uint64_t *assignWithTake for ASCTAPCredentialData(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_219348A70(v4, v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_219348A70(v6, v7);
  uint64_t v8 = a1[4];
  unint64_t v9 = a1[5];
  *((_OWORD *)a1 + 2) = a2[2];
  sub_219348A70(v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCTAPCredentialData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ASCTAPCredentialData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPCredentialData()
{
  return &type metadata for ASCTAPCredentialData;
}

uint64_t destroy for ASCTAPExtensionInput(void *a1)
{
  uint64_t result = a1[1];
  if (result != 1)
  {
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v3 = a1[4];
    if (v3 >> 60 != 15) {
      uint64_t result = sub_219348A70(a1[3], v3);
    }
  }
  if (a1[11] != 1)
  {
    unint64_t v4 = a1[8];
    if (v4 >> 60 != 15)
    {
      sub_219348A70(a1[7], v4);
      unint64_t v5 = a1[10];
      if (v5 >> 60 != 15) {
        sub_219348A70(a1[9], v5);
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ASCTAPExtensionInput(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4 == 1)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    uint64_t v6 = (_OWORD *)(a2 + 24);
    unint64_t v7 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    if (v7 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 24) = *v6;
    }
    else
    {
      uint64_t v8 = *(void *)v6;
      sub_21934CDF0(v8, v7);
      *(void *)(a1 + 24) = v8;
      *(void *)(a1 + 32) = v7;
    }
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
  }
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  unint64_t v9 = (_OWORD *)(a1 + 56);
  uint64_t v10 = (_OWORD *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 88);
  if (v11 == 1)
  {
    long long v12 = *(_OWORD *)(a2 + 72);
    *unint64_t v9 = *v10;
    *(_OWORD *)(a1 + 72) = v12;
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
  }
  else
  {
    unint64_t v13 = *(void *)(a2 + 64);
    if (v13 >> 60 == 15)
    {
      long long v14 = *(_OWORD *)(a2 + 72);
      *unint64_t v9 = *v10;
      *(_OWORD *)(a1 + 72) = v14;
    }
    else
    {
      uint64_t v15 = *(void *)(a2 + 56);
      sub_21934CDF0(v15, *(void *)(a2 + 64));
      *(void *)(a1 + 56) = v15;
      *(void *)(a1 + 64) = v13;
      unint64_t v16 = (uint64_t *)(a2 + 72);
      unint64_t v17 = *(void *)(a2 + 80);
      if (v17 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 72) = *(_OWORD *)v16;
      }
      else
      {
        uint64_t v18 = *v16;
        sub_21934CDF0(*v16, v17);
        *(void *)(a1 + 72) = v18;
        *(void *)(a1 + 80) = v17;
      }
    }
    *(void *)(a1 + 88) = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for ASCTAPExtensionInput(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8) != 1)
  {
    if (v4 == 1)
    {
      sub_21938DDB0(a1);
      long long v9 = a2[1];
      long long v8 = a2[2];
      long long v10 = *a2;
      *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
      *(_OWORD *)(a1 + 16) = v9;
      *(_OWORD *)(a1 + 32) = v8;
      *(_OWORD *)a1 = v10;
      goto LABEL_18;
    }
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    unint64_t v13 = (uint64_t *)a2 + 3;
    unint64_t v12 = *((void *)a2 + 4);
    if (*(void *)(a1 + 32) >> 60 == 15)
    {
      if (v12 >> 60 != 15)
      {
        uint64_t v14 = *v13;
LABEL_12:
        sub_21934CDF0(v14, v12);
        *(void *)(a1 + 24) = v14;
        *(void *)(a1 + 32) = v12;
        goto LABEL_17;
      }
    }
    else
    {
      if (v12 >> 60 != 15)
      {
        uint64_t v15 = *v13;
        sub_21934CDF0(*v13, *((void *)a2 + 4));
        uint64_t v16 = *(void *)(a1 + 24);
        unint64_t v17 = *(void *)(a1 + 32);
        *(void *)(a1 + 24) = v15;
        *(void *)(a1 + 32) = v12;
        sub_219348A70(v16, v17);
        goto LABEL_17;
      }
      sub_21934DFD8(a1 + 24);
    }
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v13;
    goto LABEL_17;
  }
  if (v4 == 1)
  {
    long long v5 = *a2;
    long long v6 = a2[1];
    long long v7 = a2[2];
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = v7;
    *(_OWORD *)a1 = v5;
    goto LABEL_18;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  uint64_t v11 = (uint64_t *)a2 + 3;
  unint64_t v12 = *((void *)a2 + 4);
  swift_bridgeObjectRetain();
  if (v12 >> 60 != 15)
  {
    uint64_t v14 = *v11;
    goto LABEL_12;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v11;
LABEL_17:
  uint64_t v18 = *((void *)a2 + 5);
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(void *)(a1 + 40) = v18;
LABEL_18:
  unint64_t v19 = (_OWORD *)(a1 + 56);
  uint64_t v20 = (long long *)((char *)a2 + 56);
  uint64_t v21 = *((void *)a2 + 11);
  if (*(void *)(a1 + 88) != 1)
  {
    if (v21 == 1)
    {
      sub_21938DE58(a1 + 56);
      uint64_t v24 = *((void *)a2 + 11);
      long long v25 = *(long long *)((char *)a2 + 72);
      _OWORD *v19 = *v20;
      *(_OWORD *)(a1 + 72) = v25;
      *(void *)(a1 + 88) = v24;
      return a1;
    }
    unint64_t v28 = *((void *)a2 + 8);
    if (*(void *)(a1 + 64) >> 60 == 15)
    {
      if (v28 >> 60 == 15)
      {
        long long v29 = *(long long *)((char *)a2 + 72);
        _OWORD *v19 = *v20;
        *(_OWORD *)(a1 + 72) = v29;
LABEL_45:
        *(void *)(a1 + 88) = *((void *)a2 + 11);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return a1;
      }
      uint64_t v34 = *((void *)a2 + 7);
      sub_21934CDF0(v34, *((void *)a2 + 8));
      *(void *)(a1 + 56) = v34;
      *(void *)(a1 + 64) = v28;
      uint64_t v35 = (long long *)((char *)a2 + 72);
      unint64_t v36 = *((void *)a2 + 10);
      if (v36 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 72) = *v35;
        goto LABEL_45;
      }
      uint64_t v42 = *(void *)v35;
LABEL_40:
      sub_21934CDF0(v42, v36);
      *(void *)(a1 + 72) = v42;
      *(void *)(a1 + 80) = v36;
      goto LABEL_45;
    }
    if (v28 >> 60 == 15)
    {
      sub_21938DE04(a1 + 56);
      long long v33 = *(long long *)((char *)a2 + 72);
      _OWORD *v19 = *v20;
      *(_OWORD *)(a1 + 72) = v33;
      goto LABEL_45;
    }
    uint64_t v38 = *((void *)a2 + 7);
    sub_21934CDF0(v38, *((void *)a2 + 8));
    uint64_t v39 = *(void *)(a1 + 56);
    unint64_t v40 = *(void *)(a1 + 64);
    *(void *)(a1 + 56) = v38;
    *(void *)(a1 + 64) = v28;
    sub_219348A70(v39, v40);
    uint64_t v41 = (uint64_t *)a2 + 9;
    unint64_t v36 = *((void *)a2 + 10);
    if (*(void *)(a1 + 80) >> 60 == 15)
    {
      if (v36 >> 60 != 15)
      {
        uint64_t v42 = *v41;
        goto LABEL_40;
      }
    }
    else
    {
      if (v36 >> 60 != 15)
      {
        uint64_t v43 = *v41;
        sub_21934CDF0(*v41, *((void *)a2 + 10));
        uint64_t v44 = *(void *)(a1 + 72);
        unint64_t v45 = *(void *)(a1 + 80);
        *(void *)(a1 + 72) = v43;
        *(void *)(a1 + 80) = v36;
        sub_219348A70(v44, v45);
        goto LABEL_45;
      }
      sub_21934DFD8(a1 + 72);
    }
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v41;
    goto LABEL_45;
  }
  if (v21 == 1)
  {
    long long v22 = *v20;
    long long v23 = *(long long *)((char *)a2 + 72);
    *(void *)(a1 + 88) = *((void *)a2 + 11);
    _OWORD *v19 = v22;
    *(_OWORD *)(a1 + 72) = v23;
  }
  else
  {
    unint64_t v26 = *((void *)a2 + 8);
    if (v26 >> 60 == 15)
    {
      long long v27 = *(long long *)((char *)a2 + 72);
      _OWORD *v19 = *v20;
      *(_OWORD *)(a1 + 72) = v27;
    }
    else
    {
      uint64_t v30 = *((void *)a2 + 7);
      sub_21934CDF0(v30, *((void *)a2 + 8));
      *(void *)(a1 + 56) = v30;
      *(void *)(a1 + 64) = v26;
      uint64_t v31 = (uint64_t *)a2 + 9;
      unint64_t v32 = *((void *)a2 + 10);
      if (v32 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 72) = *(_OWORD *)v31;
      }
      else
      {
        uint64_t v37 = *v31;
        sub_21934CDF0(*v31, *((void *)a2 + 10));
        *(void *)(a1 + 72) = v37;
        *(void *)(a1 + 80) = v32;
      }
    }
    *(void *)(a1 + 88) = *((void *)a2 + 11);
    swift_bridgeObjectRetain();
  }
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for ASCTAPExtensionInput(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) == 1) {
    goto LABEL_4;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4 == 1)
  {
    sub_21938DDB0(a1);
LABEL_4:
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_11;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  long long v6 = (void *)(a2 + 24);
  unint64_t v7 = *(void *)(a1 + 32);
  if (v7 >> 60 != 15)
  {
    unint64_t v8 = *(void *)(a2 + 32);
    if (v8 >> 60 != 15)
    {
      uint64_t v9 = *(void *)(a1 + 24);
      *(void *)(a1 + 24) = *v6;
      *(void *)(a1 + 32) = v8;
      sub_219348A70(v9, v7);
      goto LABEL_10;
    }
    sub_21934DFD8(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v6;
LABEL_10:
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
LABEL_11:
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  long long v10 = (_OWORD *)(a1 + 56);
  uint64_t v11 = (_OWORD *)(a2 + 56);
  if (*(void *)(a1 + 88) != 1)
  {
    uint64_t v12 = *(void *)(a2 + 88);
    if (v12 == 1)
    {
      sub_21938DE58(a1 + 56);
      goto LABEL_14;
    }
    unint64_t v14 = *(void *)(a1 + 64);
    if (v14 >> 60 != 15)
    {
      unint64_t v15 = *(void *)(a2 + 64);
      if (v15 >> 60 != 15)
      {
        uint64_t v17 = *(void *)(a1 + 56);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = v15;
        sub_219348A70(v17, v14);
        uint64_t v18 = (void *)(a2 + 72);
        unint64_t v19 = *(void *)(a1 + 80);
        if (v19 >> 60 != 15)
        {
          unint64_t v20 = *(void *)(a2 + 80);
          if (v20 >> 60 != 15)
          {
            uint64_t v21 = *(void *)(a1 + 72);
            *(void *)(a1 + 72) = *v18;
            *(void *)(a1 + 80) = v20;
            sub_219348A70(v21, v19);
            goto LABEL_24;
          }
          sub_21934DFD8(a1 + 72);
        }
        *(_OWORD *)(a1 + 72) = *(_OWORD *)v18;
LABEL_24:
        *(void *)(a1 + 88) = v12;
        swift_bridgeObjectRelease();
        return a1;
      }
      sub_21938DE04(a1 + 56);
    }
    long long v16 = *(_OWORD *)(a2 + 72);
    _OWORD *v10 = *v11;
    *(_OWORD *)(a1 + 72) = v16;
    goto LABEL_24;
  }
LABEL_14:
  long long v13 = *(_OWORD *)(a2 + 72);
  _OWORD *v10 = *v11;
  *(_OWORD *)(a1 + 72) = v13;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCTAPExtensionInput(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFD && *(unsigned char *)(a1 + 96)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  BOOL v5 = __OFSUB__(v4, 1);
  int v6 = v4 - 1;
  if (v6 < 0 != v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for ASCTAPExtensionInput(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 96) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPExtensionInput()
{
  return &type metadata for ASCTAPExtensionInput;
}

uint64_t destroy for ASCTAPLargeBlobExtensionInput(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 24);
    return sub_219348A70(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for ASCTAPLargeBlobExtensionInput(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  BOOL v5 = (_OWORD *)(a2 + 24);
  unint64_t v6 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *v5;
  }
  else
  {
    uint64_t v7 = *(void *)v5;
    sub_21934CDF0(v7, v6);
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v6;
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t assignWithCopy for ASCTAPLargeBlobExtensionInput(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = (uint64_t *)(a2 + 24);
  unint64_t v5 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_21934CDF0(*v4, *(void *)(a2 + 32));
      uint64_t v8 = *(void *)(a1 + 24);
      unint64_t v9 = *(void *)(a1 + 32);
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = v5;
      sub_219348A70(v8, v9);
      goto LABEL_8;
    }
    sub_21934DFD8(a1 + 24);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  uint64_t v6 = *v4;
  sub_21934CDF0(*v4, *(void *)(a2 + 32));
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v5;
LABEL_8:
  uint64_t v10 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v10;
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ASCTAPLargeBlobExtensionInput(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  unint64_t v5 = (void *)(a2 + 24);
  unint64_t v6 = *(void *)(a1 + 32);
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = *(void *)(a2 + 32);
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *(void *)(a1 + 24);
      *(void *)(a1 + 24) = *v5;
      *(void *)(a1 + 32) = v7;
      sub_219348A70(v8, v6);
      goto LABEL_6;
    }
    sub_21934DFD8(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v5;
LABEL_6:
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCTAPLargeBlobExtensionInput(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ASCTAPLargeBlobExtensionInput(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPLargeBlobExtensionInput()
{
  return &type metadata for ASCTAPLargeBlobExtensionInput;
}

uint64_t assignWithCopy for ASCTAPPRFExtensionInput(uint64_t a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (*(void *)(a1 + 8) >> 60 != 15)
  {
    if (v4 >> 60 == 15)
    {
      sub_21938DE04(a1);
      long long v6 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      goto LABEL_17;
    }
    uint64_t v10 = *a2;
    sub_21934CDF0(*a2, a2[1]);
    uint64_t v11 = *(void *)a1;
    unint64_t v12 = *(void *)(a1 + 8);
    *(void *)a1 = v10;
    *(void *)(a1 + 8) = v4;
    sub_219348A70(v11, v12);
    long long v13 = a2 + 2;
    unint64_t v9 = a2[3];
    if (*(void *)(a1 + 24) >> 60 == 15)
    {
      if (v9 >> 60 != 15)
      {
        uint64_t v14 = *v13;
        goto LABEL_12;
      }
    }
    else
    {
      if (v9 >> 60 != 15)
      {
        uint64_t v15 = *v13;
        sub_21934CDF0(*v13, a2[3]);
        uint64_t v16 = *(void *)(a1 + 16);
        unint64_t v17 = *(void *)(a1 + 24);
        *(void *)(a1 + 16) = v15;
        *(void *)(a1 + 24) = v9;
        sub_219348A70(v16, v17);
        goto LABEL_17;
      }
      sub_21934DFD8(a1 + 16);
    }
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v13;
    goto LABEL_17;
  }
  if (v4 >> 60 != 15)
  {
    uint64_t v7 = *a2;
    sub_21934CDF0(*a2, a2[1]);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v4;
    uint64_t v8 = a2 + 2;
    unint64_t v9 = a2[3];
    if (v9 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 16) = *v8;
      goto LABEL_17;
    }
    uint64_t v14 = *(void *)v8;
LABEL_12:
    sub_21934CDF0(v14, v9);
    *(void *)(a1 + 16) = v14;
    *(void *)(a1 + 24) = v9;
    goto LABEL_17;
  }
  long long v5 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
LABEL_17:
  *(void *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ASCTAPPRFExtensionInput(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  if (v4 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v5 = *(void *)(a2 + 8);
  if (v5 >> 60 == 15)
  {
    sub_21938DE04(a1);
LABEL_4:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_10;
  }
  uint64_t v7 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  sub_219348A70(v7, v4);
  uint64_t v8 = (void *)(a2 + 16);
  unint64_t v9 = *(void *)(a1 + 24);
  if (v9 >> 60 != 15)
  {
    unint64_t v10 = *(void *)(a2 + 24);
    if (v10 >> 60 != 15)
    {
      uint64_t v11 = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = *v8;
      *(void *)(a1 + 24) = v10;
      sub_219348A70(v11, v9);
      goto LABEL_10;
    }
    sub_21934DFD8(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v8;
LABEL_10:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ASCTAPPRFExtensionInput()
{
  return &type metadata for ASCTAPPRFExtensionInput;
}

uint64_t destroy for ASCTAPPRFExtensionOutput(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (v1 >> 60 != 15)
  {
    uint64_t v2 = result;
    __n128 result = sub_219348A70(*(void *)(result + 8), v1);
    unint64_t v3 = *(void *)(v2 + 32);
    if (v3 >> 60 != 15)
    {
      uint64_t v4 = *(void *)(v2 + 24);
      return sub_219348A70(v4, v3);
    }
  }
  return result;
}

uint64_t initializeWithCopy for ASCTAPPRFExtensionOutput(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v4 = *(void *)(a2 + 16);
  if (v4 >> 60 == 15)
  {
    long long v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v5;
  }
  else
  {
    uint64_t v6 = *(void *)(a2 + 8);
    sub_21934CDF0(v6, *(void *)(a2 + 16));
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v4;
    uint64_t v7 = (uint64_t *)(a2 + 24);
    unint64_t v8 = *(void *)(a2 + 32);
    if (v8 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 24) = *(_OWORD *)v7;
    }
    else
    {
      uint64_t v9 = *v7;
      sub_21934CDF0(*v7, v8);
      *(void *)(a1 + 24) = v9;
      *(void *)(a1 + 32) = v8;
    }
  }
  return a1;
}

uint64_t assignWithCopy for ASCTAPPRFExtensionOutput(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v4 = (_OWORD *)(a1 + 8);
  long long v5 = (_OWORD *)(a2 + 8);
  unint64_t v6 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) >> 60 != 15)
  {
    if (v6 >> 60 == 15)
    {
      sub_2193A544C(a1 + 8);
      long long v8 = v5[1];
      _OWORD *v4 = *v5;
      v4[1] = v8;
      return a1;
    }
    uint64_t v12 = *(void *)(a2 + 8);
    sub_21934CDF0(v12, *(void *)(a2 + 16));
    uint64_t v13 = *(void *)(a1 + 8);
    unint64_t v14 = *(void *)(a1 + 16);
    *(void *)(a1 + 8) = v12;
    *(void *)(a1 + 16) = v6;
    sub_219348A70(v13, v14);
    uint64_t v15 = (uint64_t *)(a2 + 24);
    unint64_t v11 = *(void *)(a2 + 32);
    if (*(void *)(a1 + 32) >> 60 == 15)
    {
      if (v11 >> 60 != 15)
      {
        uint64_t v16 = *v15;
        goto LABEL_12;
      }
    }
    else
    {
      if (v11 >> 60 != 15)
      {
        uint64_t v17 = *v15;
        sub_21934CDF0(*v15, v11);
        uint64_t v18 = *(void *)(a1 + 24);
        unint64_t v19 = *(void *)(a1 + 32);
        *(void *)(a1 + 24) = v17;
        *(void *)(a1 + 32) = v11;
        sub_219348A70(v18, v19);
        return a1;
      }
      sub_21934DFD8(a1 + 24);
    }
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v15;
    return a1;
  }
  if (v6 >> 60 != 15)
  {
    uint64_t v9 = *(void *)(a2 + 8);
    sub_21934CDF0(v9, *(void *)(a2 + 16));
    *(void *)(a1 + 8) = v9;
    *(void *)(a1 + 16) = v6;
    unint64_t v10 = (_OWORD *)(a2 + 24);
    unint64_t v11 = *(void *)(a2 + 32);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 24) = *v10;
      return a1;
    }
    uint64_t v16 = *(void *)v10;
LABEL_12:
    sub_21934CDF0(v16, v11);
    *(void *)(a1 + 24) = v16;
    *(void *)(a1 + 32) = v11;
    return a1;
  }
  long long v7 = *(_OWORD *)(a2 + 24);
  _OWORD *v4 = *v5;
  *(_OWORD *)(a1 + 24) = v7;
  return a1;
}

uint64_t sub_2193A544C(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for ASCTAPPRFExtensionOutput(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v4 = (_OWORD *)(a1 + 8);
  long long v5 = (_OWORD *)(a2 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  if (v6 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v7 = *(void *)(a2 + 16);
  if (v7 >> 60 == 15)
  {
    sub_2193A544C(a1 + 8);
LABEL_4:
    long long v8 = v5[1];
    _OWORD *v4 = *v5;
    v4[1] = v8;
    return a1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;
  sub_219348A70(v9, v6);
  unint64_t v10 = (void *)(a2 + 24);
  unint64_t v11 = *(void *)(a1 + 32);
  if (v11 >> 60 != 15)
  {
    unint64_t v12 = *(void *)(a2 + 32);
    if (v12 >> 60 != 15)
    {
      uint64_t v13 = *(void *)(a1 + 24);
      *(void *)(a1 + 24) = *v10;
      *(void *)(a1 + 32) = v12;
      sub_219348A70(v13, v11);
      return a1;
    }
    sub_21934DFD8(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v10;
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCTAPPRFExtensionOutput(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && a1[40]) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *a1;
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ASCTAPPRFExtensionOutput(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPPRFExtensionOutput()
{
  return &type metadata for ASCTAPPRFExtensionOutput;
}

ValueMetadata *type metadata accessor for ASCTAPPRFExtensionOutput.Results()
{
  return &type metadata for ASCTAPPRFExtensionOutput.Results;
}

uint64_t destroy for ASCTAPExtensionOutput(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)result != 3)
  {
    unint64_t v2 = *(void *)(result + 16);
    if (v2 >> 60 != 15) {
      __n128 result = sub_219348A70(*(void *)(result + 8), v2);
    }
  }
  if (*(unsigned char *)(v1 + 48) != 3)
  {
    unint64_t v3 = *(void *)(v1 + 64);
    if (v3 >> 60 != 15)
    {
      __n128 result = sub_219348A70(*(void *)(v1 + 56), v3);
      unint64_t v4 = *(void *)(v1 + 80);
      if (v4 >> 60 != 15)
      {
        uint64_t v5 = *(void *)(v1 + 72);
        return sub_219348A70(v5, v4);
      }
    }
  }
  return result;
}

uint64_t initializeWithCopy for ASCTAPExtensionOutput(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4 = *a2;
  if (v4 == 3)
  {
    long long v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    *(unsigned char *)a1 = v4;
    unint64_t v6 = (uint64_t *)(a2 + 8);
    unint64_t v7 = *((void *)a2 + 2);
    if (v7 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 8) = *(_OWORD *)v6;
    }
    else
    {
      uint64_t v8 = *v6;
      sub_21934CDF0(*v6, *((void *)a2 + 2));
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = v7;
    }
    *(unsigned char *)(a1 + 24) = a2[24];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(unsigned char *)(a1 + 40) = a2[40];
  }
  uint64_t v9 = a2[48];
  if (v9 == 3)
  {
    long long v10 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v10;
    *(void *)(a1 + 80) = *((void *)a2 + 10);
  }
  else
  {
    *(unsigned char *)(a1 + 48) = v9;
    unint64_t v11 = *((void *)a2 + 8);
    if (v11 >> 60 == 15)
    {
      long long v12 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = v12;
    }
    else
    {
      uint64_t v13 = *((void *)a2 + 7);
      sub_21934CDF0(v13, *((void *)a2 + 8));
      *(void *)(a1 + 56) = v13;
      *(void *)(a1 + 64) = v11;
      unint64_t v14 = (uint64_t *)(a2 + 72);
      unint64_t v15 = *((void *)a2 + 10);
      if (v15 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 72) = *(_OWORD *)v14;
      }
      else
      {
        uint64_t v16 = *v14;
        sub_21934CDF0(*v14, *((void *)a2 + 10));
        *(void *)(a1 + 72) = v16;
        *(void *)(a1 + 80) = v15;
      }
    }
  }
  *(unsigned char *)(a1 + 88) = a2[88];
  return a1;
}

uint64_t assignWithCopy for ASCTAPExtensionOutput(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4 = *a2;
  if (*(unsigned char *)a1 != 3)
  {
    if (v4 == 3)
    {
      sub_2193A5B18(a1);
      long long v7 = *(_OWORD *)(a2 + 25);
      long long v8 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(_OWORD *)(a1 + 25) = v7;
      goto LABEL_18;
    }
    *(unsigned char *)a1 = v4;
    unint64_t v11 = (_OWORD *)(a1 + 8);
    long long v12 = (uint64_t *)(a2 + 8);
    unint64_t v10 = *((void *)a2 + 2);
    if (*(void *)(a1 + 16) >> 60 == 15)
    {
      if (v10 >> 60 != 15)
      {
        uint64_t v13 = *v12;
LABEL_12:
        sub_21934CDF0(v13, v10);
        *(void *)(a1 + 8) = v13;
        *(void *)(a1 + 16) = v10;
        goto LABEL_17;
      }
    }
    else
    {
      if (v10 >> 60 != 15)
      {
        uint64_t v14 = *v12;
        sub_21934CDF0(*v12, *((void *)a2 + 2));
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v16 = *(void *)(a1 + 16);
        *(void *)(a1 + 8) = v14;
        *(void *)(a1 + 16) = v10;
        sub_219348A70(v15, v16);
        goto LABEL_17;
      }
      sub_21934DFD8(a1 + 8);
    }
    _OWORD *v11 = *(_OWORD *)v12;
    goto LABEL_17;
  }
  if (v4 == 3)
  {
    long long v5 = *(_OWORD *)a2;
    long long v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_18;
  }
  *(unsigned char *)a1 = v4;
  uint64_t v9 = (uint64_t *)(a2 + 8);
  unint64_t v10 = *((void *)a2 + 2);
  if (v10 >> 60 != 15)
  {
    uint64_t v13 = *v9;
    goto LABEL_12;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v9;
LABEL_17:
  *(unsigned char *)(a1 + 24) = a2[24];
  uint64_t v17 = *((void *)a2 + 4);
  *(unsigned char *)(a1 + 40) = a2[40];
  *(void *)(a1 + 32) = v17;
LABEL_18:
  uint64_t v18 = (_OWORD *)(a1 + 48);
  unint64_t v20 = a2 + 48;
  uint64_t v19 = a2[48];
  if (*(unsigned char *)(a1 + 48) != 3)
  {
    if (v19 == 3)
    {
      sub_2193A5B54(a1 + 48);
      uint64_t v23 = *((void *)a2 + 10);
      long long v24 = *((_OWORD *)a2 + 4);
      _OWORD *v18 = *v20;
      *(_OWORD *)(a1 + 64) = v24;
      *(void *)(a1 + 80) = v23;
      goto LABEL_41;
    }
    *(unsigned char *)(a1 + 48) = v19;
    long long v27 = (_OWORD *)(a1 + 56);
    unint64_t v28 = a2 + 56;
    unint64_t v25 = *((void *)a2 + 8);
    if (*(void *)(a1 + 64) >> 60 != 15)
    {
      if (v25 >> 60 == 15)
      {
        sub_2193A544C(a1 + 56);
        long long v33 = *(_OWORD *)(a2 + 72);
        *long long v27 = *v28;
        *(_OWORD *)(a1 + 72) = v33;
        goto LABEL_41;
      }
      uint64_t v35 = *((void *)a2 + 7);
      sub_21934CDF0(v35, *((void *)a2 + 8));
      uint64_t v36 = *(void *)(a1 + 56);
      unint64_t v37 = *(void *)(a1 + 64);
      *(void *)(a1 + 56) = v35;
      *(void *)(a1 + 64) = v25;
      sub_219348A70(v36, v37);
      uint64_t v38 = (uint64_t *)(a2 + 72);
      unint64_t v32 = *((void *)a2 + 10);
      if (*(void *)(a1 + 80) >> 60 == 15)
      {
        if (v32 >> 60 != 15)
        {
          uint64_t v34 = *v38;
          goto LABEL_33;
        }
      }
      else
      {
        if (v32 >> 60 != 15)
        {
          uint64_t v39 = *v38;
          sub_21934CDF0(*v38, *((void *)a2 + 10));
          uint64_t v40 = *(void *)(a1 + 72);
          unint64_t v41 = *(void *)(a1 + 80);
          *(void *)(a1 + 72) = v39;
          *(void *)(a1 + 80) = v32;
          sub_219348A70(v40, v41);
          goto LABEL_41;
        }
        sub_21934DFD8(a1 + 72);
      }
      *(_OWORD *)(a1 + 72) = *(_OWORD *)v38;
      goto LABEL_41;
    }
    if (v25 >> 60 == 15)
    {
      long long v29 = *(_OWORD *)(a2 + 72);
      *long long v27 = *v28;
      *(_OWORD *)(a1 + 72) = v29;
      goto LABEL_41;
    }
LABEL_28:
    uint64_t v30 = *((void *)a2 + 7);
    sub_21934CDF0(v30, v25);
    *(void *)(a1 + 56) = v30;
    *(void *)(a1 + 64) = v25;
    uint64_t v31 = a2 + 72;
    unint64_t v32 = *((void *)a2 + 10);
    if (v32 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 72) = *v31;
      goto LABEL_41;
    }
    uint64_t v34 = *(void *)v31;
LABEL_33:
    sub_21934CDF0(v34, v32);
    *(void *)(a1 + 72) = v34;
    *(void *)(a1 + 80) = v32;
    goto LABEL_41;
  }
  if (v19 != 3)
  {
    *(unsigned char *)(a1 + 48) = v19;
    unint64_t v25 = *((void *)a2 + 8);
    if (v25 >> 60 == 15)
    {
      long long v26 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = v26;
      goto LABEL_41;
    }
    goto LABEL_28;
  }
  long long v21 = *v20;
  long long v22 = *((_OWORD *)a2 + 4);
  *(void *)(a1 + 80) = *((void *)a2 + 10);
  _OWORD *v18 = v21;
  *(_OWORD *)(a1 + 64) = v22;
LABEL_41:
  *(unsigned char *)(a1 + 88) = a2[88];
  return a1;
}

uint64_t sub_2193A5B18(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >> 60 != 15) {
    sub_219348A70(*(void *)(a1 + 8), v2);
  }
  return a1;
}

uint64_t sub_2193A5B54(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ASCTAPExtensionOutput(uint64_t a1, unsigned __int8 *a2)
{
  if (*(unsigned char *)a1 == 3) {
    goto LABEL_4;
  }
  uint64_t v4 = *a2;
  if (v4 == 3)
  {
    sub_2193A5B18(a1);
LABEL_4:
    long long v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    goto LABEL_11;
  }
  *(unsigned char *)a1 = v4;
  long long v6 = (_OWORD *)(a1 + 8);
  long long v7 = a2 + 8;
  unint64_t v8 = *(void *)(a1 + 16);
  if (v8 >> 60 != 15)
  {
    unint64_t v9 = *((void *)a2 + 2);
    if (v9 >> 60 != 15)
    {
      uint64_t v10 = *(void *)(a1 + 8);
      *(void *)(a1 + 8) = *v7;
      *(void *)(a1 + 16) = v9;
      sub_219348A70(v10, v8);
      goto LABEL_10;
    }
    sub_21934DFD8(a1 + 8);
  }
  _OWORD *v6 = *(_OWORD *)v7;
LABEL_10:
  *(unsigned char *)(a1 + 24) = a2[24];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(unsigned char *)(a1 + 40) = a2[40];
LABEL_11:
  uint64_t v11 = a2[48];
  if (*(unsigned char *)(a1 + 48) == 3)
  {
LABEL_14:
    long long v12 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v12;
    *(void *)(a1 + 80) = *((void *)a2 + 10);
    goto LABEL_24;
  }
  if (v11 == 3)
  {
    sub_2193A5B54(a1 + 48);
    goto LABEL_14;
  }
  *(unsigned char *)(a1 + 48) = v11;
  unint64_t v13 = *(void *)(a1 + 64);
  if (v13 >> 60 == 15)
  {
LABEL_18:
    long long v15 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v15;
    goto LABEL_24;
  }
  unint64_t v14 = *((void *)a2 + 8);
  if (v14 >> 60 == 15)
  {
    sub_2193A544C(a1 + 56);
    goto LABEL_18;
  }
  uint64_t v16 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(void *)(a1 + 64) = v14;
  sub_219348A70(v16, v13);
  uint64_t v17 = a2 + 72;
  unint64_t v18 = *(void *)(a1 + 80);
  if (v18 >> 60 != 15)
  {
    unint64_t v19 = *((void *)a2 + 10);
    if (v19 >> 60 != 15)
    {
      uint64_t v20 = *(void *)(a1 + 72);
      *(void *)(a1 + 72) = *v17;
      *(void *)(a1 + 80) = v19;
      sub_219348A70(v20, v18);
      goto LABEL_24;
    }
    sub_21934DFD8(a1 + 72);
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)v17;
LABEL_24:
  *(unsigned char *)(a1 + 88) = a2[88];
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCTAPExtensionOutput(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 89)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 88);
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ASCTAPExtensionOutput(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 89) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 88) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPExtensionOutput()
{
  return &type metadata for ASCTAPExtensionOutput;
}

uint64_t destroy for ASCTAPLargeBlobExtensionOutput(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (v1 >> 60 != 15) {
    return sub_219348A70(*(void *)(result + 8), v1);
  }
  return result;
}

uint64_t initializeWithCopy for ASCTAPLargeBlobExtensionOutput(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  int v4 = (uint64_t *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)v4;
  }
  else
  {
    uint64_t v6 = *v4;
    sub_21934CDF0(*v4, *(void *)(a2 + 16));
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v5;
  }
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for ASCTAPLargeBlobExtensionOutput(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  int v4 = (_OWORD *)(a1 + 8);
  unint64_t v5 = (uint64_t *)(a2 + 8);
  unint64_t v6 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) >> 60 != 15)
  {
    if (v6 >> 60 != 15)
    {
      uint64_t v8 = *v5;
      sub_21934CDF0(*v5, *(void *)(a2 + 16));
      uint64_t v9 = *(void *)(a1 + 8);
      unint64_t v10 = *(void *)(a1 + 16);
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = v6;
      sub_219348A70(v9, v10);
      goto LABEL_8;
    }
    sub_21934DFD8(a1 + 8);
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
LABEL_6:
    _OWORD *v4 = *(_OWORD *)v5;
    goto LABEL_8;
  }
  uint64_t v7 = *v5;
  sub_21934CDF0(*v5, *(void *)(a2 + 16));
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v6;
LABEL_8:
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v11 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v11;
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ASCTAPLargeBlobExtensionOutput(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  int v4 = (_OWORD *)(a1 + 8);
  unint64_t v5 = (void *)(a2 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = *(void *)(a2 + 16);
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *(void *)(a1 + 8);
      *(void *)(a1 + 8) = *v5;
      *(void *)(a1 + 16) = v7;
      sub_219348A70(v8, v6);
      goto LABEL_6;
    }
    sub_21934DFD8(a1 + 8);
  }
  _OWORD *v4 = *(_OWORD *)v5;
LABEL_6:
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCTAPLargeBlobExtensionOutput(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && a1[41]) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *a1;
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ASCTAPLargeBlobExtensionOutput(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPLargeBlobExtensionOutput()
{
  return &type metadata for ASCTAPLargeBlobExtensionOutput;
}

uint64_t destroy for ASCPublicKeyCredentialClientData(uint64_t a1)
{
  sub_219348A70(*(void *)(a1 + 8), *(void *)(a1 + 16));
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ASCPublicKeyCredentialClientData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  sub_21934CDF0(v4, v5);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ASCPublicKeyCredentialClientData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  sub_21934CDF0(v4, v5);
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  sub_219348A70(v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ASCPublicKeyCredentialClientData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_219348A70(v4, v5);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCPublicKeyCredentialClientData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASCPublicKeyCredentialClientData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialClientData()
{
  return &type metadata for ASCPublicKeyCredentialClientData;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialClientData.OperationType()
{
  return &type metadata for ASCPublicKeyCredentialClientData.OperationType;
}

unsigned char *storeEnumTagSinglePayload for ASCPublicKeyCredentialClientData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2193A6464);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCPublicKeyCredentialClientData.CodingKeys()
{
  return &type metadata for ASCPublicKeyCredentialClientData.CodingKeys;
}

ValueMetadata *type metadata accessor for ASCTAPLargeBlobExtensionOutput.CodingKeys()
{
  return &type metadata for ASCTAPLargeBlobExtensionOutput.CodingKeys;
}

ValueMetadata *type metadata accessor for ASCTAPExtensionOutput.CodingKeys()
{
  return &type metadata for ASCTAPExtensionOutput.CodingKeys;
}

ValueMetadata *type metadata accessor for ASCTAPPRFExtensionOutput.CodingKeys()
{
  return &type metadata for ASCTAPPRFExtensionOutput.CodingKeys;
}

ValueMetadata *type metadata accessor for ASCTAPPRFExtensionOutput.Results.CodingKeys()
{
  return &type metadata for ASCTAPPRFExtensionOutput.Results.CodingKeys;
}

ValueMetadata *type metadata accessor for ASCTAPPRFExtensionInput.PRFValues()
{
  return &type metadata for ASCTAPPRFExtensionInput.PRFValues;
}

ValueMetadata *type metadata accessor for ASCTAPPRFExtensionInput.CodingKeys()
{
  return &type metadata for ASCTAPPRFExtensionInput.CodingKeys;
}

uint64_t _s26AuthenticationServicesCore30ASCTAPLargeBlobExtensionOutputV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s26AuthenticationServicesCore30ASCTAPLargeBlobExtensionOutputV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2193A6660);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPLargeBlobExtensionInput.CodingKeys()
{
  return &type metadata for ASCTAPLargeBlobExtensionInput.CodingKeys;
}

ValueMetadata *type metadata accessor for ASCTAPExtensionInput.CodingKeys()
{
  return &type metadata for ASCTAPExtensionInput.CodingKeys;
}

ValueMetadata *type metadata accessor for ASCTAPCredentialData.CodingKeys()
{
  return &type metadata for ASCTAPCredentialData.CodingKeys;
}

ValueMetadata *type metadata accessor for ASCTAPAuthData.DecodingError()
{
  return &type metadata for ASCTAPAuthData.DecodingError;
}

uint64_t destroy for ASCTAPPublicKeyCredentialDescriptor(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_219348A70(*(void *)(a1 + 16), *(void *)(a1 + 24));

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ASCTAPPublicKeyCredentialDescriptor(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  swift_bridgeObjectRetain();
  sub_21934CDF0(v5, v6);
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ASCTAPPublicKeyCredentialDescriptor(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  sub_21934CDF0(v4, v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  a1[2] = v4;
  a1[3] = v5;
  sub_219348A70(v6, v7);
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ASCTAPPublicKeyCredentialDescriptor(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a1[2];
  unint64_t v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_219348A70(v5, v6);
  a1[4] = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCTAPPublicKeyCredentialDescriptor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASCTAPPublicKeyCredentialDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPPublicKeyCredentialDescriptor()
{
  return &type metadata for ASCTAPPublicKeyCredentialDescriptor;
}

uint64_t destroy for ASCTAPPublicKeyCredentialParameters()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s26AuthenticationServicesCore35ASCTAPPublicKeyCredentialParametersVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ASCTAPPublicKeyCredentialParameters(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy20_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ASCTAPPublicKeyCredentialParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCTAPPublicKeyCredentialParameters(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 20)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASCTAPPublicKeyCredentialParameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 20) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 20) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPPublicKeyCredentialParameters()
{
  return &type metadata for ASCTAPPublicKeyCredentialParameters;
}

uint64_t destroy for ASCTAPUserEntity(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_219348A70(*(void *)(a1 + 16), *(void *)(a1 + 24));

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ASCTAPUserEntity(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  swift_bridgeObjectRetain();
  sub_21934CDF0(v5, v6);
  a1[2] = v5;
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ASCTAPUserEntity(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  sub_21934CDF0(v4, v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  a1[2] = v4;
  a1[3] = v5;
  sub_219348A70(v6, v7);
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ASCTAPUserEntity(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a1[2];
  unint64_t v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_219348A70(v5, v6);
  uint64_t v7 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCTAPUserEntity(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASCTAPUserEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPUserEntity()
{
  return &type metadata for ASCTAPUserEntity;
}

uint64_t destroy for ASCTAPRelyingPartyEntity()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ASCTAPRelyingPartyEntity(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ASCTAPRelyingPartyEntity(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ASCTAPRelyingPartyEntity(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCTAPRelyingPartyEntity(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASCTAPRelyingPartyEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPRelyingPartyEntity()
{
  return &type metadata for ASCTAPRelyingPartyEntity;
}

unint64_t sub_2193A6E64()
{
  unint64_t result = qword_267C19840;
  if (!qword_267C19840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19840);
  }
  return result;
}

unint64_t sub_2193A6EBC()
{
  unint64_t result = qword_267C19848;
  if (!qword_267C19848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19848);
  }
  return result;
}

unint64_t sub_2193A6F14()
{
  unint64_t result = qword_267C19850;
  if (!qword_267C19850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19850);
  }
  return result;
}

unint64_t sub_2193A6F6C()
{
  unint64_t result = qword_267C19858;
  if (!qword_267C19858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19858);
  }
  return result;
}

unint64_t sub_2193A6FC4()
{
  unint64_t result = qword_267C19860;
  if (!qword_267C19860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19860);
  }
  return result;
}

unint64_t sub_2193A701C()
{
  unint64_t result = qword_267C19868;
  if (!qword_267C19868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19868);
  }
  return result;
}

unint64_t sub_2193A7074()
{
  unint64_t result = qword_267C19870;
  if (!qword_267C19870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19870);
  }
  return result;
}

unint64_t sub_2193A70CC()
{
  unint64_t result = qword_267C19878;
  if (!qword_267C19878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19878);
  }
  return result;
}

unint64_t sub_2193A7124()
{
  unint64_t result = qword_267C19880;
  if (!qword_267C19880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19880);
  }
  return result;
}

uint64_t sub_2193A7178()
{
  return sub_219360528(&qword_267C19888, &qword_267C19890);
}

unint64_t sub_2193A71B8()
{
  unint64_t result = qword_267C19898;
  if (!qword_267C19898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19898);
  }
  return result;
}

unint64_t sub_2193A7210()
{
  unint64_t result = qword_267C198A0;
  if (!qword_267C198A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C198A0);
  }
  return result;
}

unint64_t sub_2193A7268()
{
  unint64_t result = qword_267C198A8;
  if (!qword_267C198A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C198A8);
  }
  return result;
}

unint64_t sub_2193A72C0()
{
  unint64_t result = qword_267C198B0;
  if (!qword_267C198B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C198B0);
  }
  return result;
}

unint64_t sub_2193A7318()
{
  unint64_t result = qword_267C198B8;
  if (!qword_267C198B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C198B8);
  }
  return result;
}

unint64_t sub_2193A7370()
{
  unint64_t result = qword_267C198C0;
  if (!qword_267C198C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C198C0);
  }
  return result;
}

unint64_t sub_2193A73C8()
{
  unint64_t result = qword_267C198C8;
  if (!qword_267C198C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C198C8);
  }
  return result;
}

unint64_t sub_2193A7420()
{
  unint64_t result = qword_267C198D0;
  if (!qword_267C198D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C198D0);
  }
  return result;
}

unint64_t sub_2193A7478()
{
  unint64_t result = qword_267C198D8;
  if (!qword_267C198D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C198D8);
  }
  return result;
}

unint64_t sub_2193A74D0()
{
  unint64_t result = qword_267C198E0;
  if (!qword_267C198E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C198E0);
  }
  return result;
}

unint64_t sub_2193A7528()
{
  unint64_t result = qword_267C198E8;
  if (!qword_267C198E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C198E8);
  }
  return result;
}

unint64_t sub_2193A7580()
{
  unint64_t result = qword_267C198F0;
  if (!qword_267C198F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C198F0);
  }
  return result;
}

unint64_t sub_2193A75D8()
{
  unint64_t result = qword_267C198F8;
  if (!qword_267C198F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C198F8);
  }
  return result;
}

unint64_t sub_2193A7630()
{
  unint64_t result = qword_267C19900;
  if (!qword_267C19900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19900);
  }
  return result;
}

unint64_t sub_2193A7688()
{
  unint64_t result = qword_267C19908;
  if (!qword_267C19908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19908);
  }
  return result;
}

unint64_t sub_2193A76E0()
{
  unint64_t result = qword_267C19910;
  if (!qword_267C19910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19910);
  }
  return result;
}

unint64_t sub_2193A7738()
{
  unint64_t result = qword_267C19918;
  if (!qword_267C19918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19918);
  }
  return result;
}

unint64_t sub_2193A7790()
{
  unint64_t result = qword_267C19920;
  if (!qword_267C19920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19920);
  }
  return result;
}

unint64_t sub_2193A77E8()
{
  unint64_t result = qword_267C19928;
  if (!qword_267C19928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19928);
  }
  return result;
}

unint64_t sub_2193A783C()
{
  unint64_t result = qword_267C19938;
  if (!qword_267C19938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19938);
  }
  return result;
}

unint64_t sub_2193A7890()
{
  unint64_t result = qword_267C19948;
  if (!qword_267C19948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19948);
  }
  return result;
}

unint64_t sub_2193A78E4()
{
  unint64_t result = qword_267C19958;
  if (!qword_267C19958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19958);
  }
  return result;
}

unint64_t sub_2193A7938()
{
  unint64_t result = qword_267C19968;
  if (!qword_267C19968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19968);
  }
  return result;
}

uint64_t sub_2193A798C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2193E3140();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2193A7A58(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19970);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193A783C();
  sub_2193E3240();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    uint64_t v7 = sub_2193E2FF0();
    char v10 = 1;
    swift_bridgeObjectRetain();
    sub_2193E2FF0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_2193A7C60(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2193E3140();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2193A7DA8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19978);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193A7890();
  sub_2193E3240();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  LOBYTE(v24) = 0;
  uint64_t v9 = sub_2193E2FF0();
  uint64_t v11 = v10;
  uint64_t v23 = v9;
  char v26 = 1;
  sub_21934D774();
  swift_bridgeObjectRetain();
  sub_2193E3010();
  uint64_t v12 = v24;
  LOBYTE(v24) = 2;
  unint64_t v21 = v25;
  uint64_t v22 = v12;
  sub_21934CDF0(v12, v25);
  uint64_t v13 = sub_2193E2FF0();
  uint64_t v15 = v14;
  uint64_t v16 = v13;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  unint64_t v18 = v21;
  uint64_t v17 = v22;
  sub_21934CDF0(v22, v21);
  swift_bridgeObjectRetain();
  sub_219348A70(v17, v18);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  sub_219348A70(v17, v18);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v23;
  a2[1] = v11;
  a2[2] = v17;
  a2[3] = v18;
  a2[4] = v16;
  a2[5] = v15;
  return result;
}

uint64_t sub_2193A8084(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19980);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193A78E4();
  sub_2193E3240();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    v9[15] = 0;
    uint64_t v7 = sub_2193E2FF0();
    v9[14] = 1;
    swift_bridgeObjectRetain();
    sub_2193E3020();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_2193A8270(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x646975676161 && a2 == 0xE600000000000000;
  if (v2 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69746E6564657263 && a2 == 0xEC00000044496C61 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002193F1520)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2193E3140();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2193A83D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19988);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193A7938();
  sub_2193E3240();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  LOBYTE(v22) = 0;
  uint64_t v9 = sub_2193E2FF0();
  uint64_t v11 = v10;
  uint64_t v21 = v9;
  char v24 = 1;
  sub_21934D774();
  swift_bridgeObjectRetain();
  sub_2193E3010();
  uint64_t v12 = v22;
  unint64_t v13 = v23;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C194F8);
  unint64_t v19 = v13;
  char v24 = 2;
  uint64_t v20 = v12;
  sub_21934CDF0(v12, v13);
  sub_219389098((unint64_t *)&qword_267C1A2E0, &qword_267C194F8);
  sub_2193E2FE0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v14 = v22;
  swift_bridgeObjectRetain();
  unint64_t v16 = v19;
  uint64_t v15 = v20;
  sub_21934CDF0(v20, v19);
  swift_bridgeObjectRetain();
  sub_219348A70(v15, v16);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  sub_219348A70(v15, v16);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v21;
  a2[1] = v11;
  a2[2] = v15;
  a2[3] = v16;
  a2[4] = v14;
  return result;
}

uint64_t sub_2193A8704()
{
  unint64_t v0 = sub_2193E2F70();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_2193A8750(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19990);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_1Tm(a1, v7);
  sub_2193A899C();
  sub_2193E3240();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    char v14 = 0;
    sub_21934D774();
    sub_2193E3010();
    uint64_t v7 = v12;
    unint64_t v9 = v13;
    char v14 = 1;
    sub_21934CDF0(v12, v13);
    sub_2193E2FE0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v10 = v12;
    unint64_t v11 = v13;
    sub_21934CDF0(v7, v9);
    sub_21934CE48(v10, v11);
    sub_219348A70(v7, v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    sub_219348A70(v7, v9);
    sub_21934CEB0(v10, v11);
  }
  return v7;
}

unint64_t sub_2193A899C()
{
  unint64_t result = qword_267C19998;
  if (!qword_267C19998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19998);
  }
  return result;
}

uint64_t sub_2193A89F0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7473726966 && a2 == 0xE500000000000000;
  if (v2 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646E6F636573 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2193E3140();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2193A8AD4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64656C62616E65 && a2 == 0xE700000000000000;
  if (v2 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746C75736572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2193E3140();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2193A8BC8()
{
  unint64_t v0 = sub_2193E2F70();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_2193A8C10(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6574726F70707573 && a2 == 0xE900000000000064;
  if (v2 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1651469410 && a2 == 0xE400000000000000 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E657474697277 && a2 == 0xE700000000000000 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C616E696769726FLL && a2 == 0xEC000000657A6953)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_2193E3140();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_2193A8DE0()
{
  unint64_t v0 = sub_2193E2F70();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_2193A8E2C(uint64_t result, unint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_2193A8E44(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_2193A8E44(uint64_t a1, unint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return sub_21934CEB0(a1, a2);
  }
  return a1;
}

uint64_t sub_2193A8E50(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_2193A8EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  if (a5 != 1)
  {
    a6();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_2193A8EFC()
{
  unint64_t result = qword_267C199E8;
  if (!qword_267C199E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C199E8);
  }
  return result;
}

uint64_t sub_2193A8F50(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_2193A8FAC()
{
  unint64_t result = qword_267C19A08;
  if (!qword_267C19A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19A08);
  }
  return result;
}

void sub_2193A9000(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void))
{
  if (a2 >> 60 != 15)
  {
    a7();
    ((void (*)(uint64_t, uint64_t))a7)(a3, a4);
    ((void (*)(uint64_t, uint64_t))a7)(a5, a6);
  }
}

unsigned char *storeEnumTagSinglePayload for ASCTAPCredentialData.DecodingError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2193A912CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPCredentialData.DecodingError()
{
  return &type metadata for ASCTAPCredentialData.DecodingError;
}

ValueMetadata *type metadata accessor for ASCTAPPRFExtensionInput.PRFValues.CodingKeys()
{
  return &type metadata for ASCTAPPRFExtensionInput.PRFValues.CodingKeys;
}

ValueMetadata *type metadata accessor for ASCTAPPublicKeyCredentialDescriptor.CodingKeys()
{
  return &type metadata for ASCTAPPublicKeyCredentialDescriptor.CodingKeys;
}

ValueMetadata *type metadata accessor for ASCTAPPublicKeyCredentialParameters.CodingKeys()
{
  return &type metadata for ASCTAPPublicKeyCredentialParameters.CodingKeys;
}

unsigned char *_s26AuthenticationServicesCore33ASCTAPUserVerificationRequirementOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2193A9260);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPUserEntity.CodingKeys()
{
  return &type metadata for ASCTAPUserEntity.CodingKeys;
}

unsigned char *_s26AuthenticationServicesCore32ASCPublicKeyCredentialClientDataV13OperationTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2193A9364);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPRelyingPartyEntity.CodingKeys()
{
  return &type metadata for ASCTAPRelyingPartyEntity.CodingKeys;
}

unint64_t sub_2193A93A0()
{
  unint64_t result = qword_267C19A18;
  if (!qword_267C19A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19A18);
  }
  return result;
}

unint64_t sub_2193A93F8()
{
  unint64_t result = qword_267C19A20;
  if (!qword_267C19A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19A20);
  }
  return result;
}

unint64_t sub_2193A9450()
{
  unint64_t result = qword_267C19A28;
  if (!qword_267C19A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19A28);
  }
  return result;
}

unint64_t sub_2193A94A8()
{
  unint64_t result = qword_267C19A30;
  if (!qword_267C19A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19A30);
  }
  return result;
}

unint64_t sub_2193A9500()
{
  unint64_t result = qword_267C19A38;
  if (!qword_267C19A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19A38);
  }
  return result;
}

unint64_t sub_2193A9558()
{
  unint64_t result = qword_267C19A40;
  if (!qword_267C19A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19A40);
  }
  return result;
}

unint64_t sub_2193A95B0()
{
  unint64_t result = qword_267C19A48;
  if (!qword_267C19A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19A48);
  }
  return result;
}

unint64_t sub_2193A9608()
{
  unint64_t result = qword_267C19A50;
  if (!qword_267C19A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19A50);
  }
  return result;
}

unint64_t sub_2193A9660()
{
  unint64_t result = qword_267C19A58;
  if (!qword_267C19A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19A58);
  }
  return result;
}

unint64_t sub_2193A96B8()
{
  unint64_t result = qword_267C19A60;
  if (!qword_267C19A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19A60);
  }
  return result;
}

unint64_t sub_2193A9710()
{
  unint64_t result = qword_267C19A68;
  if (!qword_267C19A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19A68);
  }
  return result;
}

unint64_t sub_2193A9768()
{
  unint64_t result = qword_267C19A70;
  if (!qword_267C19A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19A70);
  }
  return result;
}

unint64_t sub_2193A97C0()
{
  unint64_t result = qword_267C19A78;
  if (!qword_267C19A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19A78);
  }
  return result;
}

unint64_t sub_2193A9818()
{
  unint64_t result = qword_267C19A80;
  if (!qword_267C19A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19A80);
  }
  return result;
}

unint64_t sub_2193A9870()
{
  unint64_t result = qword_267C19A88;
  if (!qword_267C19A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19A88);
  }
  return result;
}

unint64_t sub_2193A98C8()
{
  unint64_t result = qword_267C19A90;
  if (!qword_267C19A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19A90);
  }
  return result;
}

void sub_2193A9920(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  id v10 = objc_msgSend(a1, sel_extensions);
  char v43 = a2;
  if (v10)
  {
    sub_2193DA170((uint64_t)v53);

    id v10 = (id)v53[0];
    uint64_t v11 = v53[1];
    uint64_t v12 = v53[2];
    uint64_t v13 = v53[3];
    uint64_t v14 = v53[4];
    uint64_t v15 = v54;
    uint64_t v16 = v55;
    uint64_t v17 = v56;
    uint64_t v18 = v57;
    uint64_t v19 = v58;
    uint64_t v20 = v59;
    char v21 = v60;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    char v21 = 3;
  }
  char v22 = v21;
  uint64_t v23 = v20;
  uint64_t v24 = v19;
  uint64_t v44 = v18;
  uint64_t v45 = v13;
  uint64_t v49 = v17;
  uint64_t v50 = v12;
  uint64_t v46 = v14;
  uint64_t v47 = v15;
  uint64_t v48 = v16;
  sub_2193AEC64((uint64_t)v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, (void (*)(void))sub_21935BAB0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BACC);
  uint64_t v52 = a3;
  unint64_t v51 = a4;
  if (a4 >> 60 == 15)
  {
    id v25 = objc_msgSend(a1, sel_credentialID);
    uint64_t v52 = sub_2193E2130();
    unint64_t v51 = v26;
  }
  sub_21934CE48(a3, a4);
  id v27 = objc_msgSend(a1, sel_authenticatorData);
  uint64_t v28 = sub_2193E2130();
  uint64_t v41 = v29;
  uint64_t v42 = v28;

  id v30 = objc_msgSend(a1, sel_signature);
  uint64_t v31 = sub_2193E2130();
  uint64_t v39 = v32;
  uint64_t v40 = v31;

  id v33 = objc_msgSend(a1, sel_userHandle);
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v35 = sub_2193E2130();
    uint64_t v37 = v36;
    uint64_t v38 = v35;

    sub_21934CEB0(a3, a4);
    sub_2193AEC64((uint64_t)v10, v11, v50, v45, v46, v47, v48, v49, v44, v24, v23, v22, (void (*)(void))sub_21935BD18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BD34);
    LOBYTE(v53[0]) = 1;
    *(_OWORD *)a5 = xmmword_2193EB5C0;
    *(void *)(a5 + 16) = v52;
    *(void *)(a5 + 24) = v51;
    *(void *)(a5 + 32) = 0;
    *(void *)(a5 + 40) = v42;
    *(void *)(a5 + 48) = v41;
    *(void *)(a5 + 56) = v40;
    *(void *)(a5 + 64) = v39;
    *(_OWORD *)(a5 + 72) = xmmword_2193EB5D0;
    *(void *)(a5 + 88) = v38;
    *(void *)(a5 + 96) = v37;
    *(_OWORD *)(a5 + 104) = xmmword_2193EB5D0;
    *(void *)(a5 + 120) = 0;
    *(unsigned char *)(a5 + 128) = 1;
    *(unsigned char *)(a5 + 129) = v43;
    *(void *)(a5 + 136) = v10;
    *(void *)(a5 + 144) = v11;
    *(void *)(a5 + 152) = v50;
    *(void *)(a5 + 160) = v45;
    *(void *)(a5 + 168) = v46;
    *(void *)(a5 + 176) = v47;
    *(void *)(a5 + 184) = v48;
    *(void *)(a5 + 192) = v49;
    *(void *)(a5 + 200) = v44;
    *(void *)(a5 + 208) = v24;
    *(void *)(a5 + 216) = v23;
    *(unsigned char *)(a5 + 224) = v22;
  }
  else
  {
    sub_2193AEC64((uint64_t)v10, v11, v50, v45, v46, v47, v48, v49, v44, v24, v23, v22, (void (*)(void))sub_21935BD18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BD34);
    sub_2193AEC64((uint64_t)v10, v11, v50, v45, v46, v47, v48, v49, v44, v24, v23, v22, (void (*)(void))sub_21935BD18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BD34);
    __break(1u);
  }
}

uint64_t sub_2193A9CF0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_attestationObject);
  uint64_t v5 = sub_2193E2130();
  unint64_t v7 = v6;

  ASCTAPAuthenticatorMakeCredentialResponse.init(attestationObject:)(v5, v7, (uint64_t)v71);
  sub_2193ADDAC((uint64_t)v71, (uint64_t)v72);
  sub_2193ADDAC((uint64_t)v72, (uint64_t)v73);
  if (sub_21935B99C((uint64_t)v73) == 1)
  {

    return sub_2193ADDAC((uint64_t)v72, a2);
  }
  else
  {
    uint64_t v44 = (_OWORD *)a2;
    sub_2193ADDAC((uint64_t)v72, (uint64_t)v67);
    uint64_t v45 = v67[0];
    uint64_t v9 = v67[2];
    unint64_t v10 = v67[3];
    uint64_t v11 = v67[4];
    unint64_t v12 = v67[5];
    uint64_t v50 = v67[1];
    swift_bridgeObjectRetain();
    unint64_t v48 = v10;
    uint64_t v49 = v9;
    sub_21934CDF0(v9, v10);
    unint64_t v46 = v12;
    uint64_t v47 = v11;
    sub_21934CDF0(v11, v12);
    id v13 = objc_msgSend(a1, sel_extensions);
    if (v13)
    {
      sub_21937CD10((uint64_t)v59);

      uint64_t v14 = v59[0];
      uint64_t v15 = v59[1];
      uint64_t v16 = v59[2];
      uint64_t v17 = v59[3];
      uint64_t v18 = v59[4];
      uint64_t v19 = v60;
      uint64_t v20 = v61;
      id v13 = v62;
      uint64_t v21 = v63;
      uint64_t v22 = v64;
      uint64_t v23 = v65;
      char v24 = v66;
    }
    else
    {

      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      char v24 = 3;
    }
    uint64_t v32 = v21;
    uint64_t v33 = v22;
    uint64_t v34 = v23;
    char v35 = v24;
    uint64_t v42 = v67[7];
    uint64_t v43 = v67[6];
    uint64_t v40 = v67[9];
    uint64_t v41 = v67[8];
    uint64_t v38 = v67[11];
    uint64_t v39 = v67[10];
    uint64_t v36 = v67[13];
    uint64_t v37 = v67[12];
    long long v31 = v68;
    uint64_t v25 = v69;
    char v26 = v70;
    sub_2193AEC64(v14, v15, v16, v17, v18, v19, v20, (uint64_t)v13, v21, v22, v23, v24, (void (*)(void))sub_21935BAB0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BACC);
    sub_2193AEC64(v43, v42, v41, v40, v39, v38, v37, v36, v31, *((uint64_t *)&v31 + 1), v25, v26, (void (*)(void))sub_21935BD18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BD34);
    *(void *)&long long v51 = v45;
    *((void *)&v51 + 1) = v50;
    *(void *)&long long v52 = v49;
    *((void *)&v52 + 1) = v48;
    *(void *)&long long v53 = v47;
    *((void *)&v53 + 1) = v46;
    *(void *)&long long v54 = v14;
    *((void *)&v54 + 1) = v15;
    *(void *)&long long v55 = v16;
    *((void *)&v55 + 1) = v17;
    *(void *)&long long v56 = v18;
    *((void *)&v56 + 1) = v19;
    *(void *)&long long v57 = v20;
    *((void *)&v57 + 1) = v13;
    *(void *)uint64_t v58 = v32;
    *(void *)&v58[8] = v33;
    *(void *)&v58[16] = v34;
    v58[24] = v35;
    sub_21935B9B4((uint64_t)&v51);
    sub_2193AEC64(v14, v15, v16, v17, v18, v19, v20, (uint64_t)v13, v32, v33, v34, v35, (void (*)(void))sub_21935BD18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BD34);
    sub_219348A70(v47, v46);
    sub_219348A70(v49, v48);
    swift_bridgeObjectRelease();
    long long v27 = *(_OWORD *)v58;
    v44[6] = v57;
    v44[7] = v27;
    *(_OWORD *)((char *)v44 + 121) = *(_OWORD *)&v58[9];
    long long v28 = v54;
    v44[2] = v53;
    v44[3] = v28;
    long long v29 = v56;
    v44[4] = v55;
    v44[5] = v29;
    long long v30 = v52;
    *uint64_t v44 = v51;
    v44[1] = v30;
    nullsub_1(v44);
    return sub_219369684((uint64_t)&v51);
  }
}

void *sub_2193AA094(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v6 = sub_219385A08((uint64_t)a1);
      if (v7)
      {
        uint64_t v5 = *(void **)(*(void *)(a2 + 56) + 8 * v6);
        id v8 = v5;
        return v5;
      }
    }
    return 0;
  }
  id v3 = a1;
  uint64_t v4 = sub_2193E2EC0();

  if (!v4) {
    return 0;
  }
  sub_2193ADE14();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v5 = v10;
  swift_unknownObjectRelease();
  return v5;
}

void sub_2193AA15C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  id v3 = (void *)sub_2193E2830();
  swift_bridgeObjectRelease();
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_cborWithUTF8String_, v3);

  sub_21934CDF0(v1, v2);
  unint64_t v6 = (void *)sub_2193E2110();
  id v7 = objc_msgSend(v4, sel_cborWithData_, v6);
  sub_219348A70(v1, v2);

  id v8 = (void *)sub_2193E2110();
  id v9 = objc_msgSend(v4, sel_decodeFromData_, v8);

  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C19AA8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2193E7180;
    uint64_t v11 = (void *)sub_2193E2830();
    id v12 = objc_msgSend(v4, sel_cborWithUTF8String_, v11);

    *(void *)(inited + 32) = v12;
    *(void *)(inited + 40) = v5;
    id v13 = v5;
    uint64_t v14 = (void *)sub_2193E2830();
    id v15 = objc_msgSend(v4, sel_cborWithUTF8String_, v14);

    *(void *)(inited + 48) = v15;
    *(void *)(inited + 56) = v7;
    id v16 = v7;
    uint64_t v17 = (void *)sub_2193E2830();
    id v18 = objc_msgSend(v4, sel_cborWithUTF8String_, v17);

    *(void *)(inited + 64) = v18;
    *(void *)(inited + 72) = v9;
    id v19 = v9;
    sub_219391270(inited);
    sub_2193ADE14();
    sub_2193A3290();
    uint64_t v20 = (void *)sub_2193E2790();
    swift_bridgeObjectRelease();
    id v21 = objc_msgSend(v4, sel_cborWithDictionary_, v20);

    id v22 = v21;
    sub_2193E2070();
    if (v23 >> 60 != 15)
    {

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t ASCTAPAuthenticatorMakeCredentialResponse.attestationFormat.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ASCTAPAuthenticatorMakeCredentialResponse.attestationFormat.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ASCTAPAuthenticatorMakeCredentialResponse.attestationFormat.modify())()
{
  return nullsub_1;
}

uint64_t ASCTAPAuthenticatorMakeCredentialResponse.authData.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_21934CDF0(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t ASCTAPAuthenticatorMakeCredentialResponse.authData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_219348A70(*(void *)(v2 + 16), *(void *)(v2 + 24));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ASCTAPAuthenticatorMakeCredentialResponse.authData.modify())()
{
  return nullsub_1;
}

uint64_t ASCTAPAuthenticatorMakeCredentialResponse.attestationStatement.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_21934CDF0(v1, *(void *)(v0 + 40));
  return v1;
}

uint64_t ASCTAPAuthenticatorMakeCredentialResponse.attestationStatement.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_219348A70(*(void *)(v2 + 32), *(void *)(v2 + 40));
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ASCTAPAuthenticatorMakeCredentialResponse.attestationStatement.modify())()
{
  return nullsub_1;
}

uint64_t ASCTAPAuthenticatorMakeCredentialResponse.WebAuthnCodingKeys.rawValue.getter()
{
  uint64_t v1 = 0x6174614468747561;
  if (*v0 != 1) {
    uint64_t v1 = 0x746D7453747461;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 7630182;
  }
}

AuthenticationServicesCore::ASCTAPAuthenticatorMakeCredentialResponse::WebAuthnCodingKeys_optional __swiftcall ASCTAPAuthenticatorMakeCredentialResponse.WebAuthnCodingKeys.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_2193E2F70();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_2193AA664(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21936087C(*a1, *a2);
}

uint64_t sub_2193AA670()
{
  return sub_2193E3230();
}

uint64_t sub_2193AA70C()
{
  sub_2193E28D0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2193AA794()
{
  return sub_2193E3230();
}

AuthenticationServicesCore::ASCTAPAuthenticatorMakeCredentialResponse::WebAuthnCodingKeys_optional sub_2193AA82C(Swift::String *a1)
{
  return ASCTAPAuthenticatorMakeCredentialResponse.WebAuthnCodingKeys.init(rawValue:)(*a1);
}

void sub_2193AA838(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE300000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x6174614468747561;
  if (v2 != 1)
  {
    uint64_t v5 = 0x746D7453747461;
    unint64_t v4 = 0xE700000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 7630182;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

void sub_2193AA894(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = self;
  id v8 = (void *)sub_2193E2110();
  id v9 = objc_msgSend(v7, sel_decodeFromData_, v8);

  if (!v9 || (id v10 = objc_msgSend(v9, sel_dictionary), v9, !v10))
  {
    sub_2193AEBBC();
    swift_allocError();
    *long long v29 = 0;
    v29[1] = 0;
LABEL_14:
    swift_willThrow();
    uint64_t v27 = a1;
    unint64_t v28 = a2;
    goto LABEL_15;
  }
  sub_2193ADE14();
  sub_2193A3290();
  uint64_t v11 = sub_2193E27A0();

  id v12 = objc_msgSend(v7, sel_cborWithInteger_, 1);
  id v13 = sub_2193AA094(v12, v11);

  if (!v13 || (id v14 = objc_msgSend(v13, sel_string), v13, !v14))
  {
    swift_bridgeObjectRelease();
    sub_2193AEBBC();
    swift_allocError();
    *long long v30 = 0xD000000000000011;
    v30[1] = 0x80000002193F1580;
    goto LABEL_14;
  }
  uint64_t v54 = sub_2193E2840();
  uint64_t v16 = v15;

  id v17 = objc_msgSend(v7, sel_cborWithInteger_, 2);
  id v18 = sub_2193AA094(v17, v11);

  if (!v18 || (id v19 = objc_msgSend(v18, sel_data), v18, !v19))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2193AEBBC();
    swift_allocError();
    *long long v31 = xmmword_2193EB5E0;
    goto LABEL_14;
  }
  uint64_t v44 = sub_2193E2130();
  unint64_t v45 = v20;

  id v21 = objc_msgSend(v7, sel_cborWithInteger_, 3);
  id v22 = sub_2193AA094(v21, v11);

  if (!v22)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2193AEBBC();
    swift_allocError();
    *char v26 = 0xD000000000000014;
    v26[1] = 0x80000002193F15A0;
    swift_willThrow();
    sub_219348A70(a1, a2);
    uint64_t v27 = v44;
    unint64_t v28 = v45;
LABEL_15:
    sub_219348A70(v27, v28);
LABEL_16:
    sub_2193AEC64(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, (void (*)(void))sub_21935BD18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BD34);
    return;
  }
  id v23 = v22;
  uint64_t v24 = sub_2193E2070();
  if (v25 >> 60 == 15)
  {

    goto LABEL_10;
  }
  uint64_t v42 = v24;
  unint64_t v43 = v25;
  id v32 = objc_msgSend(v7, sel_cborWithInteger_, 6);
  uint64_t v33 = sub_2193AA094(v32, v11);

  swift_bridgeObjectRelease();
  if (v33)
  {
    sub_2193E2230();
    swift_allocObject();
    sub_2193E2220();
    sub_2193AEC10();
    sub_2193E2210();
    if (v3)
    {
      sub_219348A70(a1, a2);

      sub_219348A70(v44, v45);
      sub_21934CEB0(v42, v43);
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_219348A70(a1, a2);
    swift_release();

    long long v37 = v46;
    long long v39 = v47;
    uint64_t v34 = v48;
    uint64_t v35 = v49;
    long long v40 = v50;
    long long v41 = v51;
    uint64_t v36 = v52;
    char v38 = v53;
  }
  else
  {
    sub_219348A70(a1, a2);

    uint64_t v34 = 0;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    long long v37 = 0uLL;
    char v38 = 3;
    long long v39 = 0uLL;
    long long v40 = 0uLL;
    long long v41 = 0uLL;
  }
  *(void *)a3 = v54;
  *(void *)(a3 + 8) = v16;
  *(void *)(a3 + 16) = v44;
  *(void *)(a3 + 24) = v45;
  *(void *)(a3 + 32) = v42;
  *(void *)(a3 + 40) = v43;
  *(_OWORD *)(a3 + 48) = v37;
  *(_OWORD *)(a3 + 64) = v39;
  *(void *)(a3 + 80) = v34;
  *(void *)(a3 + 88) = v35;
  *(_OWORD *)(a3 + 96) = v40;
  *(_OWORD *)(a3 + 112) = v41;
  *(void *)(a3 + 128) = v36;
  *(unsigned char *)(a3 + 136) = v38;
}

void sub_2193AAD88()
{
  uint64_t v51 = sub_2193E2250();
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  unsigned __int8 v49 = (char *)&v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  uint64_t v59 = *(void *)(v0 + 48);
  uint64_t v60 = *(void *)(v0 + 56);
  unint64_t v61 = *(void *)(v0 + 64);
  uint64_t v62 = *(void *)(v0 + 72);
  uint64_t v54 = *(void *)(v0 + 80);
  uint64_t v52 = *(void *)(v0 + 88);
  uint64_t v53 = *(void *)(v0 + 96);
  uint64_t v55 = *(void *)(v0 + 104);
  unint64_t v58 = *(void *)(v0 + 112);
  uint64_t v57 = *(void *)(v0 + 120);
  unint64_t v56 = *(void *)(v0 + 128);
  int v4 = *(unsigned __int8 *)(v0 + 136);
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_2193E2830();
  swift_bridgeObjectRelease();
  BOOL v6 = self;
  id v7 = objc_msgSend(v6, sel_cborWithUTF8String_, v5);

  sub_21934CDF0(v3, v2);
  id v8 = (void *)sub_2193E2110();
  id v9 = objc_msgSend(v6, sel_cborWithData_, v8);
  sub_219348A70(v3, v2);

  id v10 = (void *)sub_2193E2110();
  id v11 = objc_msgSend(v6, sel_decodeFromData_, v10);

  if (!v11) {
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C19AA8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2193E7180;
  *(void *)(inited + 32) = objc_msgSend(v6, sel_cborWithInteger_, 1);
  *(void *)(inited + 40) = v7;
  id v13 = v7;
  *(void *)(inited + 48) = objc_msgSend(v6, sel_cborWithInteger_, 2);
  *(void *)(inited + 56) = v9;
  id v14 = v9;
  *(void *)(inited + 64) = objc_msgSend(v6, sel_cborWithInteger_, 3);
  *(void *)(inited + 72) = v11;
  id v15 = v11;
  uint64_t v16 = sub_219391270(inited);
  if (v4 == 3) {
    goto LABEL_15;
  }
  id v45 = v15;
  id v46 = v14;
  id v47 = v13;
  int v48 = v4;
  sub_2193E22A0();
  swift_allocObject();
  uint64_t v17 = v52;
  sub_21935BAB0(v59, v60, v61);
  uint64_t v18 = v53;
  sub_21935BACC(v53, v55, v58, v57, v56);
  sub_2193E2290();
  (*(void (**)(char *, void, uint64_t))(v50 + 104))(v49, *MEMORY[0x263F2BE88], v51);
  sub_2193E2260();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C19660);
  id v19 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C19668) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(*(void *)v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v19 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_2193E7190;
  unint64_t v22 = v21 + v20;
  unint64_t v23 = v22 + v19[14];
  if (qword_267C18A18 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_2193E2E80();
  uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_267C1A320);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v25, v24);
  *(void *)(v23 + 24) = &type metadata for CodingUserInfoKey.CBOREncodingFormat;
  *(unsigned char *)unint64_t v23 = 0;
  sub_219391070(v21);
  sub_2193E2280();
  uint64_t v63 = v59;
  uint64_t v64 = v60;
  unint64_t v65 = v61;
  uint64_t v26 = v54;
  uint64_t v66 = v62;
  uint64_t v67 = v54;
  char v68 = v17;
  uint64_t v27 = v55;
  uint64_t v69 = v18;
  uint64_t v70 = v55;
  unint64_t v71 = v58;
  uint64_t v72 = v57;
  unint64_t v73 = v56;
  char v28 = v48;
  char v74 = v48;
  sub_2193AEE6C();
  uint64_t v29 = v75;
  uint64_t v30 = sub_2193E2240();
  uint64_t v75 = v29;
  if (v29)
  {
    swift_release();

    swift_bridgeObjectRelease();
    sub_2193AEC64(v59, v60, v61, v62, v26, v17, v18, v27, v58, v57, v56, v28, (void (*)(void))sub_21935BD18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BD34);
    return;
  }
  long long v31 = (void *)v30;
  id v32 = objc_msgSend(v6, sel_cborWithInteger_, 6);
  if ((v16 & 0xC000000000000001) == 0)
  {
    id v39 = v31;
    uint64_t v36 = v62;
    uint64_t v37 = v61;
    uint64_t v38 = v60;
    goto LABEL_14;
  }
  if (v16 < 0) {
    uint64_t v33 = v16;
  }
  else {
    uint64_t v33 = v16 & 0xFFFFFFFFFFFFFF8;
  }
  id v34 = v31;
  uint64_t v35 = sub_2193E2CF0();
  uint64_t v36 = v62;
  uint64_t v37 = v61;
  uint64_t v38 = v60;
  if (__OFADD__(v35, 1))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v16 = sub_21939FE48(v33, v35 + 1);
LABEL_14:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v63 = v16;
  sub_2193A007C((uint64_t)v31, v32, isUniquelyReferenced_nonNull_native);
  swift_release();

  swift_bridgeObjectRelease();
  sub_2193AEC64(v59, v38, v37, v36, v54, v52, v53, v55, v58, v57, v56, v48, (void (*)(void))sub_21935BD18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BD34);
  id v13 = v47;
  id v14 = v46;
  id v15 = v45;
LABEL_15:
  sub_2193ADE14();
  sub_2193A3290();
  swift_bridgeObjectRetain();
  long long v41 = (void *)sub_2193E2790();
  swift_bridgeObjectRelease();
  id v42 = objc_msgSend(v6, sel_cborWithDictionary_, v41);

  sub_2193E2070();
  if (v43 >> 60 != 15)
  {

    swift_bridgeObjectRelease();
    return;
  }
LABEL_19:
  __break(1u);
}

unint64_t sub_2193AB624(char a1)
{
  unint64_t result = 0x69746E6564657263;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6174614468747561;
      break;
    case 2:
      unint64_t result = 0x727574616E676973;
      break;
    case 3:
      unint64_t result = 1919251317;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0x656C655372657375;
      break;
    case 6:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2193AB720(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19AE8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = *v1;
  long long v40 = v1[1];
  long long v41 = v8;
  uint64_t v10 = *((void *)v1 + 4);
  uint64_t v9 = *((void *)v1 + 5);
  uint64_t v38 = *((void *)v1 + 6);
  uint64_t v39 = v9;
  uint64_t v11 = *((void *)v1 + 7);
  uint64_t v36 = *((void *)v1 + 8);
  uint64_t v37 = v11;
  uint64_t v35 = *((void *)v1 + 9);
  uint64_t v30 = *((void *)v1 + 10);
  uint64_t v31 = *((void *)v1 + 11);
  uint64_t v34 = *((void *)v1 + 12);
  uint64_t v33 = *((void *)v1 + 13);
  uint64_t v32 = *((void *)v1 + 14);
  uint64_t v29 = *((void *)v1 + 15);
  int v52 = *((unsigned __int8 *)v1 + 128);
  int v28 = *((unsigned __int8 *)v1 + 129);
  long long v17 = *(long long *)((char *)v1 + 136);
  uint64_t v27 = *((void *)v1 + 19);
  uint64_t v26 = *((void *)v1 + 20);
  uint64_t v25 = *((void *)v1 + 21);
  uint64_t v24 = *((void *)v1 + 22);
  uint64_t v23 = *((void *)v1 + 23);
  uint64_t v22 = *((void *)v1 + 24);
  uint64_t v21 = *((void *)v1 + 25);
  uint64_t v20 = *((void *)v1 + 26);
  uint64_t v19 = *((void *)v1 + 27);
  int v18 = *((unsigned __int8 *)v1 + 224);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193AFEF0();
  uint64_t v12 = v4;
  sub_2193E3260();
  long long v42 = v41;
  long long v43 = v40;
  uint64_t v44 = v10;
  char v53 = 0;
  sub_21938C56C();
  sub_2193E30A0();
  if (!v2)
  {
    uint64_t v14 = v36;
    uint64_t v13 = v37;
    uint64_t v15 = v35;
    *(void *)&long long v42 = v39;
    *((void *)&v42 + 1) = v38;
    char v53 = 1;
    sub_21934D644();
    sub_2193E30D0();
    *(void *)&long long v42 = v13;
    *((void *)&v42 + 1) = v14;
    char v53 = 2;
    sub_2193E30D0();
    *(void *)&long long v42 = v15;
    *((void *)&v42 + 1) = v30;
    *(void *)&long long v43 = v31;
    *((void *)&v43 + 1) = v34;
    uint64_t v44 = v33;
    uint64_t v45 = v32;
    char v53 = 3;
    sub_21938C4C4();
    sub_2193E30A0();
    LOBYTE(v42) = 4;
    sub_2193E3090();
    LOBYTE(v42) = 5;
    sub_2193E3070();
    long long v42 = v17;
    *(void *)&long long v43 = v27;
    *((void *)&v43 + 1) = v26;
    uint64_t v44 = v25;
    uint64_t v45 = v24;
    uint64_t v46 = v23;
    uint64_t v47 = v22;
    uint64_t v48 = v21;
    uint64_t v49 = v20;
    uint64_t v50 = v19;
    char v51 = v18;
    char v53 = 6;
    sub_2193AEE6C();
    sub_2193E30A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

void sub_2193ABBA8(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19AD8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v137 = 1;
  uint64_t v9 = a1[3];
  uint64_t v75 = a1;
  __swift_project_boxed_opaque_existential_1Tm(a1, v9);
  sub_2193AFEF0();
  sub_2193E3240();
  if (v2)
  {
    uint64_t v76 = v2;
    uint64_t v78 = 0;
    uint64_t v79 = 0;
    unint64_t v81 = 0;
    long long v80 = 0uLL;
    uint64_t v77 = 0;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v75);
    sub_21935C4C0(0, 0, 0, 0);
    sub_21935C520(v77, v80, *((uint64_t *)&v80 + 1), v81);
    sub_2193AEC64(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, (void (*)(void))sub_21935BD18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BD34);
  }
  else
  {
    uint64_t v70 = a2;
    LOBYTE(v82) = 0;
    sub_21938C77C();
    sub_2193E2FE0();
    uint64_t v10 = v97;
    uint64_t v11 = v100;
    LOBYTE(v82) = 1;
    uint64_t v12 = v98;
    unint64_t v68 = v99;
    uint64_t v69 = *((void *)&v98 + 1);
    sub_21935C2BC(v97, v98, *((uint64_t *)&v98 + 1), v99);
    unint64_t v81 = sub_21934D774();
    sub_2193E3010();
    uint64_t v65 = v10;
    uint64_t v66 = v11;
    uint64_t v67 = v12;
    uint64_t v13 = v97;
    unint64_t v14 = v98;
    LOBYTE(v82) = 2;
    sub_21934CDF0(v97, v98);
    sub_2193E3010();
    unint64_t v71 = v14;
    uint64_t v72 = v13;
    uint64_t v15 = v97;
    unint64_t v16 = v98;
    LOBYTE(v82) = 3;
    sub_21934CDF0(v97, v98);
    sub_21938C668();
    sub_2193E2FE0();
    uint64_t v73 = v15;
    unint64_t v74 = v16;
    uint64_t v17 = v97;
    uint64_t v18 = v100;
    uint64_t v19 = v101;
    LOBYTE(v97) = 4;
    long long v80 = v98;
    unint64_t v81 = v99;
    sub_21935C31C(v17, v98, *((uint64_t *)&v98 + 1), v99);
    uint64_t v20 = sub_2193E2FD0();
    uint64_t v78 = v18;
    uint64_t v79 = v19;
    uint64_t v77 = v17;
    uint64_t v64 = v20;
    char v137 = v21 & 1;
    LOBYTE(v97) = 5;
    LODWORD(v18) = v21;
    LODWORD(v19) = sub_2193E2FB0();
    int v63 = v18;
    char v138 = 6;
    sub_2193AEC10();
    sub_2193E2FE0();
    uint64_t v76 = 0;
    unint64_t v22 = v74;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v54 = v127;
    uint64_t v55 = v126;
    uint64_t v24 = v128;
    uint64_t v23 = v129;
    uint64_t v26 = v130;
    uint64_t v25 = v131;
    uint64_t v27 = v132;
    uint64_t v56 = v134;
    long long v57 = v135;
    int v58 = v136;
    uint64_t v59 = v129;
    uint64_t v60 = v132;
    uint64_t v61 = v131;
    uint64_t v62 = v130;
    uint64_t v28 = v133;
    sub_2193AEC64(v126, v127, v128, v129, v130, v131, v132, v133, v134, v135, *((uint64_t *)&v135 + 1), v136, (void (*)(void))sub_21935BAB0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BACC);
    uint64_t v50 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BD34;
    uint64_t v49 = (void (*)(void))sub_21935BD18;
    sub_2193AEC64(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, (void (*)(void))sub_21935BD18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BD34);
    *(void *)&long long v82 = v65;
    *((void *)&v82 + 1) = v67;
    *(void *)&long long v83 = v69;
    *((void *)&v83 + 1) = v68;
    *(void *)&long long v84 = v66;
    *((void *)&v84 + 1) = v72;
    *(void *)&long long v85 = v71;
    *((void *)&v85 + 1) = v73;
    *(void *)&long long v86 = v22;
    *((void *)&v86 + 1) = v77;
    long long v87 = v80;
    int v53 = v19;
    *(void *)&long long v88 = v81;
    *((void *)&v88 + 1) = v78;
    *(void *)&long long v89 = v79;
    *((void *)&v89 + 1) = v64;
    LOBYTE(v90) = v63 & 1;
    BYTE1(v90) = v19;
    uint64_t v30 = v54;
    uint64_t v29 = v55;
    *((void *)&v90 + 1) = v55;
    *(void *)&long long v91 = v54;
    uint64_t v52 = v24;
    *((void *)&v91 + 1) = v24;
    *(void *)&long long v92 = v23;
    *((void *)&v92 + 1) = v26;
    *(void *)&long long v93 = v25;
    *((void *)&v93 + 1) = v27;
    *(void *)&long long v94 = v28;
    uint64_t v32 = v56;
    uint64_t v31 = v57;
    *((void *)&v94 + 1) = v56;
    long long v95 = v57;
    uint64_t v33 = *((void *)&v57 + 1);
    LOBYTE(v25) = v58;
    char v96 = v58;
    sub_21935C178((uint64_t)&v82);
    uint64_t v51 = v28;
    sub_2193AEC64(v29, v30, v24, v59, v62, v61, v60, v28, v32, v31, v33, v25, v49, v50);
    sub_21935C520(v77, v80, *((uint64_t *)&v80 + 1), v81);
    sub_219348A70(v73, v74);
    unint64_t v34 = v71;
    uint64_t v35 = v72;
    sub_219348A70(v72, v71);
    uint64_t v37 = v65;
    uint64_t v36 = v66;
    uint64_t v39 = v67;
    unint64_t v38 = v68;
    uint64_t v40 = v69;
    sub_21935C4C0(v65, v67, v69, v68);
    long long v41 = v95;
    uint64_t v42 = v70;
    *(_OWORD *)(v70 + 192) = v94;
    *(_OWORD *)(v42 + 208) = v41;
    *(unsigned char *)(v42 + 224) = v96;
    long long v43 = v91;
    *(_OWORD *)(v42 + 128) = v90;
    *(_OWORD *)(v42 + 144) = v43;
    long long v44 = v93;
    *(_OWORD *)(v42 + 160) = v92;
    *(_OWORD *)(v42 + 176) = v44;
    long long v45 = v87;
    *(_OWORD *)(v42 + 64) = v86;
    *(_OWORD *)(v42 + 80) = v45;
    long long v46 = v89;
    *(_OWORD *)(v42 + 96) = v88;
    *(_OWORD *)(v42 + 112) = v46;
    long long v47 = v83;
    *(_OWORD *)uint64_t v42 = v82;
    *(_OWORD *)(v42 + 16) = v47;
    long long v48 = v85;
    *(_OWORD *)(v42 + 32) = v84;
    *(_OWORD *)(v42 + 48) = v48;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v75);
    uint64_t v97 = v37;
    *(void *)&long long v98 = v39;
    *((void *)&v98 + 1) = v40;
    unint64_t v99 = v38;
    uint64_t v100 = v36;
    uint64_t v101 = v35;
    unint64_t v102 = v34;
    uint64_t v103 = v73;
    unint64_t v104 = v74;
    uint64_t v105 = v77;
    long long v106 = v80;
    unint64_t v107 = v81;
    uint64_t v108 = v78;
    uint64_t v109 = v79;
    uint64_t v110 = v64;
    char v111 = v137;
    char v112 = v53;
    int v113 = v139;
    __int16 v114 = v140;
    uint64_t v115 = v55;
    uint64_t v116 = v54;
    uint64_t v117 = v52;
    uint64_t v118 = v59;
    uint64_t v119 = v62;
    uint64_t v120 = v61;
    uint64_t v121 = v60;
    uint64_t v122 = v51;
    uint64_t v123 = v56;
    long long v124 = v57;
    char v125 = v58;
    sub_21935C37C((uint64_t)&v97);
  }
}

BOOL sub_2193AC5FC(char *a1, char *a2)
{
  return qword_2193EB9C0[*a1] == qword_2193EB9C0[*a2];
}

uint64_t sub_2193AC620()
{
  return sub_2193E3230();
}

uint64_t sub_2193AC670()
{
  return sub_2193E3220();
}

uint64_t sub_2193AC6A8()
{
  return sub_2193E3230();
}

uint64_t sub_2193AC6F4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_2193B0150(*a1);
  *a2 = result;
  return result;
}

void sub_2193AC720(void *a1@<X8>)
{
  *a1 = qword_2193EB9C0[*v1];
}

unint64_t sub_2193AC738()
{
  return sub_2193AB624(*v0);
}

uint64_t sub_2193AC740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2193B017C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2193AC768()
{
  return qword_2193EB9C0[*v0];
}

uint64_t sub_2193AC780@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_2193B0150(a1);
  *a2 = result;
  return result;
}

uint64_t sub_2193AC7A8(uint64_t a1)
{
  unint64_t v2 = sub_2193AFEF0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2193AC7E4(uint64_t a1)
{
  unint64_t v2 = sub_2193AFEF0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2193AC820()
{
  uint64_t v1 = sub_2193E2250();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v5 = v0[13];
  long long v36 = v0[12];
  long long v37 = v5;
  char v38 = *((unsigned char *)v0 + 224);
  long long v6 = v0[9];
  long long v32 = v0[8];
  long long v33 = v6;
  long long v7 = v0[11];
  long long v34 = v0[10];
  long long v35 = v7;
  long long v8 = v0[5];
  long long v28 = v0[4];
  long long v29 = v8;
  long long v9 = v0[7];
  long long v30 = v0[6];
  long long v31 = v9;
  long long v10 = v0[1];
  long long v24 = *v0;
  long long v25 = v10;
  long long v11 = v0[3];
  long long v26 = v0[2];
  long long v27 = v11;
  sub_2193E22A0();
  swift_allocObject();
  sub_2193E2290();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F2BE88], v1);
  sub_2193E2260();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C19660);
  uint64_t v12 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C19668) - 8);
  unint64_t v13 = (*(unsigned __int8 *)(*(void *)v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_2193E7190;
  uint64_t v15 = v12[14];
  if (qword_267C18A18 != -1) {
    swift_once();
  }
  unint64_t v16 = v14 + v13;
  uint64_t v17 = v14 + v13 + v15;
  uint64_t v18 = sub_2193E2E80();
  uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_267C1A320);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v19, v18);
  *(void *)(v17 + 24) = &type metadata for CodingUserInfoKey.CBOREncodingFormat;
  *(unsigned char *)uint64_t v17 = 0;
  sub_219391070(v14);
  sub_2193E2280();
  v22[12] = v36;
  v22[13] = v37;
  char v23 = v38;
  v22[8] = v32;
  v22[9] = v33;
  v22[10] = v34;
  v22[11] = v35;
  v22[4] = v28;
  v22[5] = v29;
  v22[6] = v30;
  v22[7] = v31;
  v22[0] = v24;
  v22[1] = v25;
  void v22[2] = v26;
  v22[3] = v27;
  sub_2193AEE18();
  uint64_t v20 = sub_2193E2270();
  swift_release();
  return v20;
}

void sub_2193ACB14(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_2193ACB2C(void *a1)
{
  return sub_2193AB720(a1);
}

uint64_t ASCTAPAuthenticatorMakeCredentialResponse.init(attestationObject:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v6 = self;
  long long v7 = (void *)sub_2193E2110();
  id v8 = objc_msgSend(v6, sel_decodeFromData_, v7);

  if (!v8) {
    goto LABEL_9;
  }
  id v9 = objc_msgSend(v8, sel_dictionary);

  if (!v9) {
    goto LABEL_9;
  }
  sub_2193ADE14();
  sub_2193A3290();
  uint64_t v10 = sub_2193E27A0();

  long long v11 = (void *)sub_2193E2830();
  id v12 = objc_msgSend(v6, sel_cborWithUTF8String_, v11);

  unint64_t v13 = sub_2193AA094(v12, v10);
  if (!v13 || (id v14 = objc_msgSend(v13, sel_string), v13, !v14))
  {
    swift_bridgeObjectRelease();
LABEL_9:
    sub_219348A70(a1, a2);
    goto LABEL_10;
  }
  uint64_t v15 = sub_2193E2840();
  uint64_t v17 = v16;

  uint64_t v18 = (void *)sub_2193E2830();
  id v19 = objc_msgSend(v6, sel_cborWithUTF8String_, v18);

  uint64_t v20 = sub_2193AA094(v19, v10);
  if (!v20)
  {
    sub_219348A70(a1, a2);
    swift_bridgeObjectRelease();
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  id v21 = v20;
  uint64_t v22 = sub_2193E2070();
  if (v23 >> 60 != 15)
  {
    unint64_t v25 = v23;
    uint64_t v33 = v15;
    uint64_t v34 = v22;
    long long v26 = (void *)sub_2193E2830();
    id v27 = objc_msgSend(v6, sel_cborWithUTF8String_, v26);

    long long v28 = sub_2193AA094(v27, v10);
    swift_bridgeObjectRelease();
    if (v28)
    {
      id v29 = objc_msgSend(v28, sel_data);

      if (v29)
      {
        uint64_t v30 = sub_2193E2130();
        uint64_t v32 = v31;
        sub_219348A70(a1, a2);

        *(void *)&long long v35 = v33;
        *((void *)&v35 + 1) = v17;
        uint64_t v36 = v30;
        uint64_t v37 = v32;
        uint64_t v38 = v34;
        unint64_t v39 = v25;
        long long v40 = 0u;
        long long v41 = 0u;
        long long v42 = 0u;
        long long v43 = 0u;
        long long v44 = 0u;
        uint64_t v45 = 0;
        char v46 = 3;
        nullsub_1(&v35);
        return sub_2193ADDAC((uint64_t)&v35, a3);
      }
    }
    sub_219348A70(a1, a2);
    sub_21934CEB0(v34, v25);

    goto LABEL_17;
  }
  sub_219348A70(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_10:
  sub_2193ADD90(&v35);
  return sub_2193ADDAC((uint64_t)&v35, a3);
}

uint64_t sub_2193ACEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  char v138 = *(void **)(a1 + 32);
  unint64_t v139 = *(void *)(a1 + 24);
  unint64_t v136 = *(void *)(a1 + 48);
  uint64_t v137 = *(void *)(a1 + 40);
  unint64_t v130 = *(void *)(a1 + 64);
  uint64_t v131 = *(void *)(a1 + 56);
  uint64_t v132 = *(void *)(a1 + 80);
  uint64_t v123 = *(void *)(a1 + 88);
  unint64_t v124 = *(void *)(a1 + 96);
  uint64_t v120 = *(void *)(a1 + 104);
  uint64_t v125 = *(void *)(a1 + 112);
  uint64_t v126 = *(void *)(a1 + 72);
  uint64_t v113 = *(void *)(a1 + 120);
  char v115 = *(unsigned char *)(a1 + 128);
  int v114 = *(unsigned __int8 *)(a1 + 129);
  uint64_t v6 = *(void *)(a1 + 136);
  uint64_t v5 = *(void *)(a1 + 144);
  unint64_t v8 = *(void *)(a1 + 152);
  uint64_t v7 = *(void *)(a1 + 160);
  uint64_t v10 = *(void *)(a1 + 168);
  uint64_t v9 = *(void *)(a1 + 176);
  uint64_t v12 = *(void *)(a1 + 184);
  uint64_t v11 = *(void *)(a1 + 192);
  unint64_t v13 = *(void *)(a1 + 200);
  uint64_t v14 = *(void *)(a1 + 208);
  unint64_t v15 = *(void *)(a1 + 216);
  int v16 = *(unsigned __int8 *)(a1 + 224);
  uint64_t v18 = *(void *)a2;
  uint64_t v17 = *(void *)(a2 + 8);
  uint64_t v19 = *(void *)(a2 + 16);
  unint64_t v20 = *(void *)(a2 + 24);
  id v21 = *(void **)(a2 + 32);
  unint64_t v134 = *(void *)(a2 + 48);
  uint64_t v135 = *(void *)(a2 + 40);
  unint64_t v128 = *(void *)(a2 + 64);
  uint64_t v129 = *(void *)(a2 + 56);
  uint64_t v127 = *(void *)(a2 + 72);
  uint64_t v133 = *(void *)(a2 + 80);
  uint64_t v121 = *(void *)(a2 + 88);
  unint64_t v122 = *(void *)(a2 + 96);
  uint64_t v118 = *(void *)(a2 + 104);
  uint64_t v119 = *(void *)(a2 + 112);
  int v116 = *(unsigned __int8 *)(a2 + 128);
  int v117 = *(unsigned __int8 *)(a2 + 129);
  uint64_t v110 = *(void *)(a2 + 136);
  uint64_t v22 = *(void *)(a2 + 152);
  uint64_t v111 = *(void *)(a2 + 144);
  uint64_t v112 = *(void *)(a2 + 120);
  uint64_t v24 = *(void *)(a2 + 160);
  uint64_t v23 = *(void *)(a2 + 168);
  uint64_t v26 = *(void *)(a2 + 176);
  uint64_t v25 = *(void *)(a2 + 184);
  uint64_t v27 = *(void *)(a2 + 192);
  uint64_t v109 = *(void *)(a2 + 200);
  uint64_t v28 = *(void *)(a2 + 208);
  uint64_t v108 = *(void *)(a2 + 216);
  int v29 = *(unsigned __int8 *)(a2 + 224);
  if (!v3)
  {
    if (!v17) {
      goto LABEL_19;
    }
    goto LABEL_12;
  }
  if (!v17)
  {
LABEL_12:
    sub_21935C2BC(v2, v3, v4, v139);
    sub_21935C2BC(v18, v17, v19, v20);
    sub_21935C4C0(v2, v3, v4, v139);
    sub_21935C4C0(v18, v17, v19, v20);
    return 0;
  }
  unint64_t v104 = v13;
  uint64_t v106 = *(void *)(a2 + 208);
  uint64_t v78 = *(void *)(a2 + 160);
  uint64_t v72 = *(void *)(a2 + 168);
  uint64_t v74 = *(void *)(a2 + 176);
  uint64_t v80 = *(void *)(a2 + 184);
  uint64_t v76 = *(void *)(a2 + 192);
  int v82 = v16;
  unint64_t v96 = v15;
  unint64_t v98 = v8;
  uint64_t v84 = v14;
  uint64_t v86 = v6;
  uint64_t v88 = v5;
  uint64_t v90 = v9;
  uint64_t v100 = v7;
  uint64_t v102 = v10;
  uint64_t v92 = v12;
  uint64_t v94 = v11;
  if (v2 != v18 || v3 != v17)
  {
    char v30 = sub_2193E3140();
    uint64_t result = 0;
    if ((v30 & 1) == 0) {
      return result;
    }
  }
  uint64_t v32 = v2;
  uint64_t v33 = v2;
  uint64_t v34 = v4;
  sub_21935C2BC(v32, v3, v4, v139);
  sub_21935C2BC(v18, v17, v19, v20);
  if ((sub_219379924(v4, v139, v19, v20) & 1) == 0)
  {
    sub_21935C4C0(v18, v17, v19, v20);
    uint64_t v36 = v33;
    uint64_t v37 = v3;
    uint64_t v38 = v4;
    unint64_t v39 = v139;
LABEL_14:
    sub_21935C4C0(v36, v37, v38, v39);
    return 0;
  }
  uint64_t v35 = v33;
  if (!v138)
  {
    uint64_t v28 = v106;
    if (!v21)
    {
      sub_21935C4C0(v18, v17, v19, v20);
      sub_21935C4C0(v35, v3, v34, v139);
      uint64_t v12 = v92;
      uint64_t v11 = v94;
      uint64_t v5 = v88;
      uint64_t v9 = v90;
      uint64_t v7 = v100;
      uint64_t v10 = v102;
      unint64_t v15 = v96;
      unint64_t v8 = v98;
      uint64_t v14 = v84;
      uint64_t v6 = v86;
      unint64_t v13 = v104;
      int v16 = v82;
      uint64_t v26 = v74;
      uint64_t v27 = v76;
      uint64_t v24 = v78;
      uint64_t v25 = v80;
      uint64_t v23 = v72;
      goto LABEL_19;
    }
    sub_21935C4C0(v18, v17, v19, v20);
    sub_21935C4C0(v35, v3, v34, v139);
    return 0;
  }
  uint64_t v28 = v106;
  if (!v21)
  {
    sub_21935C4C0(v18, v17, v19, v20);
    uint64_t v36 = v35;
    uint64_t v37 = v3;
    uint64_t v38 = v34;
    unint64_t v39 = v139;
    goto LABEL_14;
  }
  char v71 = sub_2193BC948(v138, v21);
  sub_21935C4C0(v18, v17, v19, v20);
  sub_21935C4C0(v35, v3, v34, v139);
  uint64_t v12 = v92;
  uint64_t v11 = v94;
  uint64_t v5 = v88;
  uint64_t v9 = v90;
  uint64_t v7 = v100;
  uint64_t v10 = v102;
  unint64_t v15 = v96;
  unint64_t v8 = v98;
  uint64_t v14 = v84;
  uint64_t v6 = v86;
  unint64_t v13 = v104;
  int v16 = v82;
  uint64_t v26 = v74;
  uint64_t v27 = v76;
  uint64_t v24 = v78;
  uint64_t v25 = v80;
  uint64_t v23 = v72;
  if ((v71 & 1) == 0) {
    return 0;
  }
LABEL_19:
  uint64_t v93 = v12;
  uint64_t v95 = v11;
  int v83 = v16;
  uint64_t v89 = v5;
  uint64_t v91 = v9;
  uint64_t v101 = v7;
  uint64_t v103 = v10;
  unint64_t v97 = v15;
  unint64_t v99 = v8;
  unint64_t v105 = v13;
  uint64_t v107 = v28;
  uint64_t v85 = v14;
  uint64_t v87 = v6;
  int v40 = v29;
  uint64_t v79 = v24;
  uint64_t v73 = v23;
  uint64_t v75 = v26;
  uint64_t v81 = v25;
  uint64_t v77 = v27;
  if ((sub_219379924(v137, v136, v135, v134) & 1) == 0 || (sub_219379924(v131, v130, v129, v128) & 1) == 0) {
    return 0;
  }
  if (v132)
  {
    if (v133)
    {
      if (v126 != v127 || v132 != v133)
      {
        char v41 = sub_2193E3140();
        uint64_t result = 0;
        if ((v41 & 1) == 0) {
          return result;
        }
      }
      sub_21935C31C(v126, v132, v123, v124);
      sub_21935C31C(v127, v133, v121, v122);
      if (sub_219379924(v123, v124, v121, v122))
      {
        if (v120 == v118 && v125 == v119)
        {
          sub_21935C520(v127, v133, v121, v122);
          sub_21935C520(v126, v132, v123, v124);
        }
        else
        {
          char v46 = sub_2193E3140();
          sub_21935C520(v127, v133, v121, v122);
          sub_21935C520(v126, v132, v123, v124);
          uint64_t result = 0;
          if ((v46 & 1) == 0) {
            return result;
          }
        }
        goto LABEL_37;
      }
      sub_21935C520(v127, v133, v121, v122);
      uint64_t v42 = v126;
      uint64_t v43 = v132;
      uint64_t v44 = v123;
      unint64_t v45 = v124;
      goto LABEL_33;
    }
LABEL_31:
    sub_21935C31C(v126, v132, v123, v124);
    sub_21935C31C(v127, v133, v121, v122);
    sub_21935C520(v126, v132, v123, v124);
    uint64_t v42 = v127;
    uint64_t v43 = v133;
    uint64_t v44 = v121;
    unint64_t v45 = v122;
LABEL_33:
    sub_21935C520(v42, v43, v44, v45);
    return 0;
  }
  if (v133) {
    goto LABEL_31;
  }
LABEL_37:
  if (v115)
  {
    int v47 = v117;
    if (!v116) {
      return 0;
    }
  }
  else
  {
    char v48 = v116;
    if (v113 != v112) {
      char v48 = 1;
    }
    int v47 = v117;
    if (v48) {
      return 0;
    }
  }
  if (v114 == 2)
  {
    if (v47 != 2) {
      return 0;
    }
LABEL_48:
    char v49 = v83;
    if (v83 == 3)
    {
      char v50 = v40;
      BOOL v51 = v40 == 3;
      uint64_t v53 = v93;
      uint64_t v52 = v95;
      uint64_t v55 = v89;
      uint64_t v54 = v91;
      uint64_t v57 = v101;
      uint64_t v56 = v103;
      unint64_t v59 = v97;
      unint64_t v58 = v99;
      uint64_t v61 = v85;
      uint64_t v60 = v87;
      unint64_t v62 = v105;
      uint64_t v63 = v79;
      uint64_t v64 = v81;
      if (!v51) {
        goto LABEL_54;
      }
    }
    else
    {
      uint64_t v148 = v87;
      uint64_t v149 = v89;
      unint64_t v150 = v99;
      uint64_t v151 = v101;
      uint64_t v152 = v103;
      uint64_t v153 = v91;
      uint64_t v154 = v93;
      uint64_t v155 = v95;
      unint64_t v156 = v105;
      uint64_t v157 = v85;
      unint64_t v158 = v97;
      char v159 = v83;
      if (v40 == 3)
      {
        sub_21935BAB0(v87, v89, v99);
        sub_21935BACC(v93, v95, v105, v85, v97);
        sub_21935BAB0(v87, v89, v99);
        sub_21935BACC(v93, v95, v105, v85, v97);
        sub_21935BD18(v87, v89, v99);
        sub_21935BD34(v93, v95, v105, v85, v97);
        char v50 = 3;
        char v49 = v83;
        unint64_t v59 = v97;
        unint64_t v58 = v99;
        uint64_t v61 = v85;
        uint64_t v60 = v87;
        uint64_t v56 = v103;
        unint64_t v62 = v105;
        uint64_t v55 = v89;
        uint64_t v54 = v91;
        uint64_t v57 = v101;
        uint64_t v53 = v93;
        uint64_t v52 = v95;
        uint64_t v63 = v79;
        uint64_t v64 = v81;
LABEL_54:
        uint64_t v148 = v60;
        uint64_t v149 = v55;
        unint64_t v150 = v58;
        uint64_t v151 = v57;
        uint64_t v152 = v56;
        uint64_t v153 = v54;
        uint64_t v154 = v53;
        uint64_t v155 = v52;
        unint64_t v156 = v62;
        uint64_t v157 = v61;
        unint64_t v158 = v59;
        char v159 = v49;
        uint64_t v160 = v110;
        uint64_t v161 = v111;
        uint64_t v162 = v22;
        uint64_t v163 = v63;
        uint64_t v164 = v73;
        uint64_t v165 = v75;
        uint64_t v166 = v64;
        uint64_t v167 = v77;
        uint64_t v168 = v109;
        uint64_t v169 = v107;
        uint64_t v170 = v108;
        char v171 = v50;
        sub_2193AEC64(v110, v111, v22, v63, v73, v75, v64, v77, v109, v107, v108, v50, (void (*)(void))sub_21935BAB0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BACC);
        sub_2193AED0C((uint64_t)&v148);
        return 0;
      }
      v140[0] = v110;
      v140[1] = v111;
      v140[2] = v22;
      v140[3] = v79;
      v140[4] = v73;
      char v141 = v75;
      uint64_t v142 = v81;
      uint64_t v143 = v77;
      uint64_t v144 = v109;
      uint64_t v145 = v28;
      uint64_t v146 = v108;
      char v147 = v40;
      sub_2193AEC64(v87, v89, v99, v101, v103, v91, v93, v95, v105, v85, v97, v83, (void (*)(void))sub_21935BAB0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BACC);
      sub_21935BAB0(v87, v89, v99);
      sub_21935BACC(v93, v95, v105, v85, v97);
      char v65 = _s26AuthenticationServicesCore21ASCTAPExtensionOutputV2eeoiySbAC_ACtFZ_0((uint64_t)&v148, (uint64_t)v140);
      uint64_t v66 = v154;
      uint64_t v67 = v155;
      unint64_t v68 = v156;
      uint64_t v69 = v157;
      unint64_t v70 = v158;
      sub_21935BD18(v148, v149, v150);
      sub_21935BD34(v66, v67, v68, v69, v70);
      sub_2193AEC64(v87, v89, v99, v101, v103, v91, v93, v95, v105, v85, v97, v83, (void (*)(void))sub_21935BD18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BD34);
      if ((v65 & 1) == 0) {
        return 0;
      }
    }
    return 1;
  }
  uint64_t result = 0;
  if (v47 != 2 && ((((v114 & 1) == 0) ^ v47) & 1) != 0) {
    goto LABEL_48;
  }
  return result;
}

BOOL _s26AuthenticationServicesCore41ASCTAPAuthenticatorMakeCredentialResponseV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  unint64_t v5 = *(void *)(a1 + 40);
  uint64_t v51 = *(void *)(a1 + 56);
  unint64_t v52 = *(void *)(a1 + 64);
  uint64_t v53 = *(void *)(a1 + 72);
  uint64_t v54 = *(void *)(a1 + 80);
  uint64_t v6 = *(void *)(a1 + 96);
  uint64_t v55 = *(void *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 104);
  unint64_t v47 = *(void *)(a1 + 112);
  uint64_t v48 = *(void *)(a1 + 48);
  uint64_t v46 = *(void *)(a1 + 120);
  unint64_t v56 = *(void *)(a1 + 128);
  int v57 = *(unsigned __int8 *)(a1 + 136);
  uint64_t v8 = *(void *)(a2 + 16);
  unint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  unint64_t v11 = *(void *)(a2 + 40);
  uint64_t v38 = *(void *)(a2 + 48);
  uint64_t v39 = *(void *)(a2 + 56);
  uint64_t v40 = *(void *)(a2 + 64);
  uint64_t v41 = *(void *)(a2 + 72);
  uint64_t v42 = *(void *)(a2 + 80);
  uint64_t v43 = *(void *)(a2 + 88);
  uint64_t v44 = *(void *)(a2 + 96);
  uint64_t v45 = *(void *)(a2 + 104);
  uint64_t v36 = *(void *)(a2 + 120);
  uint64_t v37 = *(void *)(a2 + 112);
  uint64_t v35 = *(void *)(a2 + 128);
  int v49 = *(unsigned __int8 *)(a2 + 136);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v12 = sub_2193E3140(), result = 0, (v12 & 1) != 0))
  {
    if (sub_219379924(v2, v3, v8, v9) & 1) != 0 && (sub_219379924(v4, v5, v10, v11))
    {
      char v14 = v57;
      if (v57 == 3)
      {
        char v15 = v49;
        uint64_t v16 = v7;
        uint64_t v17 = v6;
        uint64_t v19 = v54;
        uint64_t v18 = v55;
        unint64_t v21 = v52;
        uint64_t v20 = v53;
        uint64_t v22 = v51;
        unint64_t v24 = v47;
        uint64_t v23 = v48;
        uint64_t v25 = v46;
        if (v49 == 3) {
          return 1;
        }
      }
      else
      {
        uint64_t v23 = v48;
        uint64_t v22 = v51;
        unint64_t v21 = v52;
        uint64_t v66 = v48;
        uint64_t v67 = v51;
        uint64_t v20 = v53;
        uint64_t v19 = v54;
        unint64_t v68 = v52;
        uint64_t v69 = v53;
        uint64_t v18 = v55;
        uint64_t v70 = v54;
        uint64_t v71 = v55;
        uint64_t v26 = v6;
        uint64_t v72 = v6;
        uint64_t v73 = v7;
        uint64_t v27 = v7;
        uint64_t v25 = v46;
        unint64_t v24 = v47;
        unint64_t v74 = v47;
        uint64_t v75 = v46;
        unint64_t v76 = v56;
        char v77 = v57;
        if (v49 != 3)
        {
          v58[0] = v38;
          v58[1] = v39;
          v58[2] = v40;
          v58[3] = v41;
          v58[4] = v42;
          char v59 = v43;
          uint64_t v60 = v44;
          uint64_t v61 = v45;
          uint64_t v62 = v37;
          uint64_t v63 = v36;
          uint64_t v64 = v35;
          char v65 = v49;
          uint64_t v28 = v26;
          sub_2193AEC64(v48, v51, v52, v53, v54, v55, v26, v27, v47, v46, v56, v57, (void (*)(void))sub_21935BAB0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BACC);
          sub_21935BAB0(v48, v51, v52);
          sub_21935BACC(v28, v27, v47, v46, v56);
          char v50 = _s26AuthenticationServicesCore21ASCTAPExtensionOutputV2eeoiySbAC_ACtFZ_0((uint64_t)&v66, (uint64_t)v58);
          uint64_t v29 = v72;
          uint64_t v30 = v73;
          unint64_t v31 = v74;
          uint64_t v32 = v75;
          unint64_t v33 = v76;
          sub_21935BD18(v66, v67, v68);
          sub_21935BD34(v29, v30, v31, v32, v33);
          sub_2193AEC64(v48, v51, v52, v53, v54, v55, v28, v27, v47, v46, v56, v57, (void (*)(void))sub_21935BD18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BD34);
          return (v50 & 1) != 0;
        }
        uint64_t v16 = v27;
        uint64_t v34 = v26;
        sub_21935BAB0(v48, v51, v52);
        sub_21935BACC(v34, v27, v47, v46, v56);
        sub_21935BAB0(v48, v51, v52);
        sub_21935BACC(v34, v27, v47, v46, v56);
        sub_21935BD18(v48, v51, v52);
        sub_21935BD34(v34, v27, v47, v46, v56);
        uint64_t v17 = v34;
        char v15 = 3;
        char v14 = v57;
      }
      uint64_t v66 = v23;
      uint64_t v67 = v22;
      unint64_t v68 = v21;
      uint64_t v69 = v20;
      uint64_t v70 = v19;
      uint64_t v71 = v18;
      uint64_t v72 = v17;
      uint64_t v73 = v16;
      unint64_t v74 = v24;
      uint64_t v75 = v25;
      unint64_t v76 = v56;
      char v77 = v14;
      uint64_t v78 = v38;
      uint64_t v79 = v39;
      uint64_t v80 = v40;
      uint64_t v81 = v41;
      uint64_t v82 = v42;
      uint64_t v83 = v43;
      uint64_t v84 = v44;
      uint64_t v85 = v45;
      uint64_t v86 = v37;
      uint64_t v87 = v36;
      uint64_t v88 = v35;
      char v89 = v15;
      sub_2193AEC64(v38, v39, v40, v41, v42, v43, v44, v45, v37, v36, v35, v15, (void (*)(void))sub_21935BAB0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BACC);
      sub_2193AED0C((uint64_t)&v66);
    }
    return 0;
  }
  return result;
}

double sub_2193ADD90(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 121) = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_2193ADDAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18D00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2193ADE14()
{
  unint64_t result = qword_267C194C8;
  if (!qword_267C194C8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267C194C8);
  }
  return result;
}

unint64_t sub_2193ADE58()
{
  unint64_t result = qword_267C19A98;
  if (!qword_267C19A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19A98);
  }
  return result;
}

unint64_t sub_2193ADEAC(uint64_t a1)
{
  unint64_t result = sub_2193ADED4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2193ADED4()
{
  unint64_t result = qword_267C19AA0;
  if (!qword_267C19AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19AA0);
  }
  return result;
}

uint64_t destroy for ASCTAPAuthenticatorMakeCredentialResponse(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_219348A70(*(void *)(a1 + 16), *(void *)(a1 + 24));
  uint64_t result = sub_219348A70(*(void *)(a1 + 32), *(void *)(a1 + 40));
  if (*(unsigned char *)(a1 + 136) != 3)
  {
    if (*(unsigned char *)(a1 + 48) != 3)
    {
      unint64_t v3 = *(void *)(a1 + 64);
      if (v3 >> 60 != 15) {
        uint64_t result = sub_219348A70(*(void *)(a1 + 56), v3);
      }
    }
    if (*(unsigned char *)(a1 + 96) != 3)
    {
      unint64_t v4 = *(void *)(a1 + 112);
      if (v4 >> 60 != 15)
      {
        uint64_t result = sub_219348A70(*(void *)(a1 + 104), v4);
        unint64_t v5 = *(void *)(a1 + 128);
        if (v5 >> 60 != 15)
        {
          uint64_t v6 = *(void *)(a1 + 120);
          return sub_219348A70(v6, v5);
        }
      }
    }
  }
  return result;
}

uint64_t initializeWithCopy for ASCTAPAuthenticatorMakeCredentialResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_21934CDF0(v5, v6);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  unint64_t v8 = *(void *)(a2 + 40);
  sub_21934CDF0(v7, v8);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  unint64_t v9 = (_OWORD *)(a1 + 48);
  uint64_t v10 = (unsigned __int8 *)(a2 + 48);
  int v11 = *(unsigned __int8 *)(a2 + 136);
  if (v11 == 3)
  {
    long long v12 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v12;
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    long long v13 = *(_OWORD *)(a2 + 64);
    *unint64_t v9 = *(_OWORD *)v10;
    *(_OWORD *)(a1 + 64) = v13;
  }
  else
  {
    uint64_t v14 = *v10;
    if (v14 == 3)
    {
      long long v15 = *(_OWORD *)(a2 + 64);
      *unint64_t v9 = *(_OWORD *)v10;
      *(_OWORD *)(a1 + 64) = v15;
      *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
    }
    else
    {
      *(unsigned char *)(a1 + 48) = v14;
      uint64_t v16 = (uint64_t *)(a2 + 56);
      unint64_t v17 = *(void *)(a2 + 64);
      if (v17 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 56) = *(_OWORD *)v16;
      }
      else
      {
        uint64_t v18 = *v16;
        sub_21934CDF0(*v16, *(void *)(a2 + 64));
        *(void *)(a1 + 56) = v18;
        *(void *)(a1 + 64) = v17;
      }
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    }
    uint64_t v19 = *(unsigned __int8 *)(a2 + 96);
    if (v19 == 3)
    {
      long long v20 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v20;
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
    }
    else
    {
      *(unsigned char *)(a1 + 96) = v19;
      unint64_t v21 = *(void *)(a2 + 112);
      if (v21 >> 60 == 15)
      {
        long long v22 = *(_OWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 120) = v22;
      }
      else
      {
        uint64_t v23 = *(void *)(a2 + 104);
        sub_21934CDF0(v23, *(void *)(a2 + 112));
        *(void *)(a1 + 104) = v23;
        *(void *)(a1 + 112) = v21;
        unint64_t v24 = (uint64_t *)(a2 + 120);
        unint64_t v25 = *(void *)(a2 + 128);
        if (v25 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)v24;
        }
        else
        {
          uint64_t v26 = *v24;
          sub_21934CDF0(*v24, v25);
          *(void *)(a1 + 120) = v26;
          *(void *)(a1 + 128) = v25;
        }
      }
    }
    *(unsigned char *)(a1 + 136) = v11;
  }
  return a1;
}

uint64_t assignWithCopy for ASCTAPAuthenticatorMakeCredentialResponse(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  unint64_t v5 = *(void *)(a2 + 24);
  sub_21934CDF0(v4, v5);
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  sub_219348A70(v6, v7);
  uint64_t v8 = *(void *)(a2 + 32);
  unint64_t v9 = *(void *)(a2 + 40);
  sub_21934CDF0(v8, v9);
  uint64_t v10 = *(void *)(a1 + 32);
  unint64_t v11 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  sub_219348A70(v10, v11);
  long long v12 = (_OWORD *)(a1 + 48);
  long long v13 = (unsigned __int8 *)(a2 + 48);
  int v14 = *(unsigned __int8 *)(a2 + 136);
  if (*(unsigned char *)(a1 + 136) != 3)
  {
    if (v14 == 3)
    {
      sub_2193AE618(a1 + 48);
      long long v19 = *(_OWORD *)(a2 + 64);
      *long long v12 = *(_OWORD *)v13;
      *(_OWORD *)(a1 + 64) = v19;
      long long v21 = *(_OWORD *)(a2 + 96);
      long long v20 = *(_OWORD *)(a2 + 112);
      long long v22 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
      *(_OWORD *)(a1 + 96) = v21;
      *(_OWORD *)(a1 + 112) = v20;
      *(_OWORD *)(a1 + 80) = v22;
      return a1;
    }
    uint64_t v26 = *v13;
    if (*(unsigned char *)v12 == 3)
    {
      if (v26 == 3)
      {
        long long v27 = *(_OWORD *)v13;
        long long v28 = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
        *long long v12 = v27;
        *(_OWORD *)(a1 + 64) = v28;
LABEL_32:
        uint64_t v46 = (_OWORD *)(a1 + 96);
        uint64_t v48 = (_OWORD *)(a2 + 96);
        uint64_t v47 = *(unsigned __int8 *)(a2 + 96);
        if (*(unsigned char *)(a1 + 96) != 3)
        {
          if (v47 == 3)
          {
            sub_2193A5B54(a1 + 96);
            uint64_t v51 = *(void *)(a2 + 128);
            long long v52 = *(_OWORD *)(a2 + 112);
            *uint64_t v46 = *v48;
            *(_OWORD *)(a1 + 112) = v52;
            *(void *)(a1 + 128) = v51;
            goto LABEL_56;
          }
          *(unsigned char *)(a1 + 96) = v47;
          uint64_t v55 = (_OWORD *)(a1 + 104);
          unint64_t v56 = (_OWORD *)(a2 + 104);
          unint64_t v53 = *(void *)(a2 + 112);
          if (*(void *)(a1 + 112) >> 60 != 15)
          {
            if (v53 >> 60 == 15)
            {
              sub_2193A544C(a1 + 104);
              long long v62 = *(_OWORD *)(a2 + 120);
              *uint64_t v55 = *v56;
              *(_OWORD *)(a1 + 120) = v62;
              goto LABEL_56;
            }
            uint64_t v63 = *(void *)(a2 + 104);
            sub_21934CDF0(v63, *(void *)(a2 + 112));
            uint64_t v64 = *(void *)(a1 + 104);
            unint64_t v65 = *(void *)(a1 + 112);
            *(void *)(a1 + 104) = v63;
            *(void *)(a1 + 112) = v53;
            sub_219348A70(v64, v65);
            uint64_t v66 = (uint64_t *)(a2 + 120);
            unint64_t v60 = *(void *)(a2 + 128);
            if (*(void *)(a1 + 128) >> 60 == 15)
            {
              if (v60 >> 60 != 15)
              {
                uint64_t v61 = *v66;
                goto LABEL_46;
              }
            }
            else
            {
              if (v60 >> 60 != 15)
              {
                uint64_t v67 = *v66;
                sub_21934CDF0(*v66, *(void *)(a2 + 128));
                uint64_t v68 = *(void *)(a1 + 120);
                unint64_t v69 = *(void *)(a1 + 128);
                *(void *)(a1 + 120) = v67;
                *(void *)(a1 + 128) = v60;
                sub_219348A70(v68, v69);
                goto LABEL_56;
              }
              sub_21934DFD8(a1 + 120);
            }
            *(_OWORD *)(a1 + 120) = *(_OWORD *)v66;
            goto LABEL_56;
          }
          if (v53 >> 60 == 15)
          {
            long long v57 = *(_OWORD *)(a2 + 120);
            *uint64_t v55 = *v56;
            *(_OWORD *)(a1 + 120) = v57;
            goto LABEL_56;
          }
LABEL_43:
          uint64_t v58 = *(void *)(a2 + 104);
          sub_21934CDF0(v58, v53);
          *(void *)(a1 + 104) = v58;
          *(void *)(a1 + 112) = v53;
          char v59 = (_OWORD *)(a2 + 120);
          unint64_t v60 = *(void *)(a2 + 128);
          if (v60 >> 60 == 15)
          {
            *(_OWORD *)(a1 + 120) = *v59;
            goto LABEL_56;
          }
          uint64_t v61 = *(void *)v59;
LABEL_46:
          sub_21934CDF0(v61, v60);
          *(void *)(a1 + 120) = v61;
          *(void *)(a1 + 128) = v60;
          goto LABEL_56;
        }
        if (v47 == 3)
        {
          long long v49 = *v48;
          long long v50 = *(_OWORD *)(a2 + 112);
          *(void *)(a1 + 128) = *(void *)(a2 + 128);
          *uint64_t v46 = v49;
          *(_OWORD *)(a1 + 112) = v50;
          goto LABEL_56;
        }
        *(unsigned char *)(a1 + 96) = v47;
LABEL_38:
        unint64_t v53 = *(void *)(a2 + 112);
        if (v53 >> 60 == 15)
        {
          long long v54 = *(_OWORD *)(a2 + 120);
          *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
          *(_OWORD *)(a1 + 120) = v54;
          goto LABEL_56;
        }
        goto LABEL_43;
      }
      *(unsigned char *)(a1 + 48) = v26;
      unint64_t v33 = (_OWORD *)(a2 + 56);
      unint64_t v34 = *(void *)(a2 + 64);
      if (v34 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 56) = *v33;
LABEL_31:
        *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
        uint64_t v45 = *(void *)(a2 + 80);
        *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
        *(void *)(a1 + 80) = v45;
        goto LABEL_32;
      }
      uint64_t v41 = *(void *)v33;
LABEL_26:
      sub_21934CDF0(v41, v34);
      *(void *)(a1 + 56) = v41;
      *(void *)(a1 + 64) = v34;
      goto LABEL_31;
    }
    if (v26 == 3)
    {
      sub_2193A5B18(a1 + 48);
      long long v31 = *(_OWORD *)(a2 + 73);
      long long v32 = *(_OWORD *)(a2 + 64);
      *long long v12 = *(_OWORD *)v13;
      *(_OWORD *)(a1 + 64) = v32;
      *(_OWORD *)(a1 + 73) = v31;
      goto LABEL_32;
    }
    *(unsigned char *)(a1 + 48) = v26;
    uint64_t v40 = (uint64_t *)(a2 + 56);
    unint64_t v34 = *(void *)(a2 + 64);
    if (*(void *)(a1 + 64) >> 60 == 15)
    {
      if (v34 >> 60 != 15)
      {
        uint64_t v41 = *v40;
        goto LABEL_26;
      }
    }
    else
    {
      if (v34 >> 60 != 15)
      {
        uint64_t v42 = *v40;
        sub_21934CDF0(*v40, *(void *)(a2 + 64));
        uint64_t v43 = *(void *)(a1 + 56);
        unint64_t v44 = *(void *)(a1 + 64);
        *(void *)(a1 + 56) = v42;
        *(void *)(a1 + 64) = v34;
        sub_219348A70(v43, v44);
        goto LABEL_31;
      }
      sub_21934DFD8(a1 + 56);
    }
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v40;
    goto LABEL_31;
  }
  if (v14 != 3)
  {
    uint64_t v23 = *v13;
    if (v23 == 3)
    {
      long long v24 = *(_OWORD *)v13;
      long long v25 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
      *long long v12 = v24;
      *(_OWORD *)(a1 + 64) = v25;
    }
    else
    {
      *(unsigned char *)(a1 + 48) = v23;
      uint64_t v29 = (uint64_t *)(a2 + 56);
      unint64_t v30 = *(void *)(a2 + 64);
      if (v30 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 56) = *(_OWORD *)v29;
      }
      else
      {
        uint64_t v35 = *v29;
        sub_21934CDF0(*v29, *(void *)(a2 + 64));
        *(void *)(a1 + 56) = v35;
        *(void *)(a1 + 64) = v30;
      }
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      uint64_t v36 = *(void *)(a2 + 80);
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(void *)(a1 + 80) = v36;
    }
    uint64_t v37 = *(unsigned __int8 *)(a2 + 96);
    if (v37 == 3)
    {
      long long v38 = *(_OWORD *)(a2 + 96);
      long long v39 = *(_OWORD *)(a2 + 112);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(_OWORD *)(a1 + 96) = v38;
      *(_OWORD *)(a1 + 112) = v39;
LABEL_56:
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      return a1;
    }
    *(unsigned char *)(a1 + 96) = v37;
    goto LABEL_38;
  }
  long long v15 = *(_OWORD *)(a2 + 64);
  *long long v12 = *(_OWORD *)v13;
  *(_OWORD *)(a1 + 64) = v15;
  long long v16 = *(_OWORD *)(a2 + 80);
  long long v17 = *(_OWORD *)(a2 + 96);
  long long v18 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_OWORD *)(a1 + 96) = v17;
  *(_OWORD *)(a1 + 112) = v18;
  *(_OWORD *)(a1 + 80) = v16;
  return a1;
}

uint64_t sub_2193AE618(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy137_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for ASCTAPAuthenticatorMakeCredentialResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v6 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_219348A70(v5, v6);
  uint64_t v7 = *(void *)(a1 + 32);
  unint64_t v8 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  sub_219348A70(v7, v8);
  unint64_t v9 = (_OWORD *)(a1 + 48);
  uint64_t v10 = (unsigned __int8 *)(a2 + 48);
  if (*(unsigned char *)(a1 + 136) == 3) {
    goto LABEL_4;
  }
  int v11 = *(unsigned __int8 *)(a2 + 136);
  if (v11 != 3)
  {
    if (*(unsigned char *)v9 == 3)
    {
LABEL_8:
      long long v15 = *(_OWORD *)(a2 + 64);
      *unint64_t v9 = *(_OWORD *)v10;
      *(_OWORD *)(a1 + 64) = v15;
      *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
      goto LABEL_15;
    }
    uint64_t v14 = *v10;
    if (v14 == 3)
    {
      sub_2193A5B18(a1 + 48);
      goto LABEL_8;
    }
    *(unsigned char *)(a1 + 48) = v14;
    long long v16 = (void *)(a2 + 56);
    unint64_t v17 = *(void *)(a1 + 64);
    if (v17 >> 60 != 15)
    {
      unint64_t v18 = *(void *)(a2 + 64);
      if (v18 >> 60 != 15)
      {
        uint64_t v19 = *(void *)(a1 + 56);
        *(void *)(a1 + 56) = *v16;
        *(void *)(a1 + 64) = v18;
        sub_219348A70(v19, v17);
        goto LABEL_14;
      }
      sub_21934DFD8(a1 + 56);
    }
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v16;
LABEL_14:
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
LABEL_15:
    uint64_t v20 = *(unsigned __int8 *)(a2 + 96);
    if (*(unsigned char *)(a1 + 96) != 3)
    {
      if (v20 != 3)
      {
        *(unsigned char *)(a1 + 96) = v20;
        unint64_t v22 = *(void *)(a1 + 112);
        if (v22 >> 60 != 15)
        {
          unint64_t v23 = *(void *)(a2 + 112);
          if (v23 >> 60 != 15)
          {
            uint64_t v25 = *(void *)(a1 + 104);
            *(void *)(a1 + 104) = *(void *)(a2 + 104);
            *(void *)(a1 + 112) = v23;
            sub_219348A70(v25, v22);
            uint64_t v26 = (void *)(a2 + 120);
            unint64_t v27 = *(void *)(a1 + 128);
            if (v27 >> 60 != 15)
            {
              unint64_t v28 = *(void *)(a2 + 128);
              if (v28 >> 60 != 15)
              {
                uint64_t v29 = *(void *)(a1 + 120);
                *(void *)(a1 + 120) = *v26;
                *(void *)(a1 + 128) = v28;
                sub_219348A70(v29, v27);
                goto LABEL_28;
              }
              sub_21934DFD8(a1 + 120);
            }
            *(_OWORD *)(a1 + 120) = *(_OWORD *)v26;
LABEL_28:
            *(unsigned char *)(a1 + 136) = v11;
            return a1;
          }
          sub_2193A544C(a1 + 104);
        }
        long long v24 = *(_OWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 120) = v24;
        goto LABEL_28;
      }
      sub_2193A5B54(a1 + 96);
    }
    long long v21 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v21;
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    goto LABEL_28;
  }
  sub_2193AE618(a1 + 48);
LABEL_4:
  long long v12 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v12;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  long long v13 = *(_OWORD *)(a2 + 64);
  *unint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(a1 + 64) = v13;
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCTAPAuthenticatorMakeCredentialResponse(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 137)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASCTAPAuthenticatorMakeCredentialResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 136) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 137) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 137) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPAuthenticatorMakeCredentialResponse()
{
  return &type metadata for ASCTAPAuthenticatorMakeCredentialResponse;
}

unsigned char *storeEnumTagSinglePayload for ASCTAPAuthenticatorMakeCredentialResponse.WebAuthnCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2193AEA54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPAuthenticatorMakeCredentialResponse.WebAuthnCodingKeys()
{
  return &type metadata for ASCTAPAuthenticatorMakeCredentialResponse.WebAuthnCodingKeys;
}

uint64_t sub_2193AEA8C(uint64_t result)
{
  switch((char)result)
  {
    case 0:
      __n128 result = 0;
      break;
    case 1:
      return result;
    case 2:
    case 3:
    case 4:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
      goto LABEL_5;
    case 5:
      __n128 result = 2;
      break;
    case 25:
      __n128 result = 3;
      break;
    case 34:
      __n128 result = 4;
      break;
    case 47:
      __n128 result = 5;
      break;
    default:
      if (result == 127) {
        __n128 result = 6;
      }
      else {
LABEL_5:
      }
        __n128 result = 7;
      break;
  }
  return result;
}

unint64_t sub_2193AEBBC()
{
  unint64_t result = qword_267C19AB0;
  if (!qword_267C19AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19AB0);
  }
  return result;
}

unint64_t sub_2193AEC10()
{
  unint64_t result = qword_267C19AB8;
  if (!qword_267C19AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19AB8);
  }
  return result;
}

void sub_2193AEC64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, void (*a13)(void), void (*a14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a12 != 3)
  {
    a13();
    a14(a7, a8, a9, a10, a11);
  }
}

uint64_t sub_2193AED0C(uint64_t a1)
{
  uint64_t v12 = *(void *)(a1 + 104);
  uint64_t v13 = *(void *)(a1 + 96);
  uint64_t v2 = *(void *)(a1 + 120);
  uint64_t v11 = *(void *)(a1 + 112);
  uint64_t v3 = *(void *)(a1 + 128);
  uint64_t v4 = *(void *)(a1 + 136);
  uint64_t v5 = *(void *)(a1 + 144);
  uint64_t v6 = *(void *)(a1 + 152);
  long long v10 = *(_OWORD *)(a1 + 160);
  uint64_t v7 = *(void *)(a1 + 176);
  char v8 = *(unsigned char *)(a1 + 184);
  sub_2193AEC64(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(unsigned char *)(a1 + 88), (void (*)(void))sub_21935BD18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BD34);
  sub_2193AEC64(v13, v12, v11, v2, v3, v4, v5, v6, v10, *((uint64_t *)&v10 + 1), v7, v8, (void (*)(void))sub_21935BD18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21935BD34);
  return a1;
}

unint64_t sub_2193AEE18()
{
  unint64_t result = qword_267C19AC0;
  if (!qword_267C19AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19AC0);
  }
  return result;
}

unint64_t sub_2193AEE6C()
{
  unint64_t result = qword_267C19AC8;
  if (!qword_267C19AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19AC8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ASCTAPAuthenticatorMakeCredentialResponse.DecodingError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ASCTAPAuthenticatorMakeCredentialResponse.DecodingError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ASCTAPAuthenticatorMakeCredentialResponse.DecodingError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCTAPAuthenticatorMakeCredentialResponse.DecodingError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ASCTAPAuthenticatorMakeCredentialResponse.DecodingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void *sub_2193AF00C(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPAuthenticatorMakeCredentialResponse.DecodingError()
{
  return &type metadata for ASCTAPAuthenticatorMakeCredentialResponse.DecodingError;
}

uint64_t destroy for ASCTAPAuthenticatorGetAssertionResponse(uint64_t a1)
{
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    sub_219348A70(*(void *)(a1 + 16), *(void *)(a1 + 24));
    swift_bridgeObjectRelease();
  }
  sub_219348A70(*(void *)(a1 + 40), *(void *)(a1 + 48));
  sub_219348A70(*(void *)(a1 + 56), *(void *)(a1 + 64));
  uint64_t result = *(void *)(a1 + 80);
  if (result)
  {
    swift_bridgeObjectRelease();
    sub_219348A70(*(void *)(a1 + 88), *(void *)(a1 + 96));
    uint64_t result = swift_bridgeObjectRelease();
  }
  if (*(unsigned char *)(a1 + 224) != 3)
  {
    if (*(unsigned char *)(a1 + 136) != 3)
    {
      unint64_t v3 = *(void *)(a1 + 152);
      if (v3 >> 60 != 15) {
        uint64_t result = sub_219348A70(*(void *)(a1 + 144), v3);
      }
    }
    if (*(unsigned char *)(a1 + 184) != 3)
    {
      unint64_t v4 = *(void *)(a1 + 200);
      if (v4 >> 60 != 15)
      {
        uint64_t result = sub_219348A70(*(void *)(a1 + 192), v4);
        unint64_t v5 = *(void *)(a1 + 216);
        if (v5 >> 60 != 15)
        {
          uint64_t v6 = *(void *)(a1 + 208);
          return sub_219348A70(v6, v5);
        }
      }
    }
  }
  return result;
}

uint64_t initializeWithCopy for ASCTAPAuthenticatorGetAssertionResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    uint64_t v5 = *(void *)(a2 + 16);
    unint64_t v6 = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    sub_21934CDF0(v5, v6);
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  uint64_t v8 = *(void *)(a2 + 40);
  unint64_t v9 = *(void *)(a2 + 48);
  sub_21934CDF0(v8, v9);
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  uint64_t v10 = *(void *)(a2 + 56);
  unint64_t v11 = *(void *)(a2 + 64);
  sub_21934CDF0(v10, v11);
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  uint64_t v12 = *(void *)(a2 + 80);
  if (v12)
  {
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v12;
    uint64_t v13 = *(void *)(a2 + 88);
    unint64_t v14 = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    sub_21934CDF0(v13, v14);
    *(void *)(a1 + 88) = v13;
    *(void *)(a1 + 96) = v14;
    uint64_t v15 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v15;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v16 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v16;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  }
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  unint64_t v17 = (_OWORD *)(a1 + 136);
  unint64_t v18 = (unsigned __int8 *)(a2 + 136);
  int v19 = *(unsigned __int8 *)(a2 + 224);
  if (v19 == 3)
  {
    long long v20 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v20;
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 209) = *(_OWORD *)(a2 + 209);
    long long v21 = *(_OWORD *)(a2 + 152);
    _OWORD *v17 = *(_OWORD *)v18;
    *(_OWORD *)(a1 + 152) = v21;
  }
  else
  {
    uint64_t v22 = *v18;
    if (v22 == 3)
    {
      long long v23 = *(_OWORD *)(a2 + 152);
      _OWORD *v17 = *(_OWORD *)v18;
      *(_OWORD *)(a1 + 152) = v23;
      *(_OWORD *)(a1 + 161) = *(_OWORD *)(a2 + 161);
    }
    else
    {
      *(unsigned char *)(a1 + 136) = v22;
      long long v24 = (uint64_t *)(a2 + 144);
      unint64_t v25 = *(void *)(a2 + 152);
      if (v25 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 144) = *(_OWORD *)v24;
      }
      else
      {
        uint64_t v26 = *v24;
        sub_21934CDF0(*v24, *(void *)(a2 + 152));
        *(void *)(a1 + 144) = v26;
        *(void *)(a1 + 152) = v25;
      }
      *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    }
    uint64_t v27 = *(unsigned __int8 *)(a2 + 184);
    if (v27 == 3)
    {
      long long v28 = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = v28;
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
    }
    else
    {
      *(unsigned char *)(a1 + 184) = v27;
      unint64_t v29 = *(void *)(a2 + 200);
      if (v29 >> 60 == 15)
      {
        long long v30 = *(_OWORD *)(a2 + 208);
        *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
        *(_OWORD *)(a1 + 208) = v30;
      }
      else
      {
        uint64_t v31 = *(void *)(a2 + 192);
        sub_21934CDF0(v31, *(void *)(a2 + 200));
        *(void *)(a1 + 192) = v31;
        *(void *)(a1 + 200) = v29;
        long long v32 = (uint64_t *)(a2 + 208);
        unint64_t v33 = *(void *)(a2 + 216);
        if (v33 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 208) = *(_OWORD *)v32;
        }
        else
        {
          uint64_t v34 = *v32;
          sub_21934CDF0(*v32, v33);
          *(void *)(a1 + 208) = v34;
          *(void *)(a1 + 216) = v33;
        }
      }
    }
    *(unsigned char *)(a1 + 224) = v19;
  }
  return a1;
}

uint64_t assignWithCopy for ASCTAPAuthenticatorGetAssertionResponse(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8))
  {
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v5 = *((void *)a2 + 2);
      unint64_t v6 = *((void *)a2 + 3);
      sub_21934CDF0(v5, v6);
      uint64_t v7 = *(void *)(a1 + 16);
      unint64_t v8 = *(void *)(a1 + 24);
      *(void *)(a1 + 16) = v5;
      *(void *)(a1 + 24) = v6;
      sub_219348A70(v7, v8);
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2193AF9A0(a1);
      uint64_t v11 = *((void *)a2 + 4);
      long long v12 = a2[1];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v12;
      *(void *)(a1 + 32) = v11;
    }
  }
  else if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    uint64_t v9 = *((void *)a2 + 2);
    unint64_t v10 = *((void *)a2 + 3);
    swift_bridgeObjectRetain();
    sub_21934CDF0(v9, v10);
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *a2;
    long long v14 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v13;
    *(_OWORD *)(a1 + 16) = v14;
  }
  uint64_t v15 = *((void *)a2 + 5);
  unint64_t v16 = *((void *)a2 + 6);
  sub_21934CDF0(v15, v16);
  uint64_t v17 = *(void *)(a1 + 40);
  unint64_t v18 = *(void *)(a1 + 48);
  *(void *)(a1 + 40) = v15;
  *(void *)(a1 + 48) = v16;
  sub_219348A70(v17, v18);
  uint64_t v19 = *((void *)a2 + 7);
  unint64_t v20 = *((void *)a2 + 8);
  sub_21934CDF0(v19, v20);
  uint64_t v21 = *(void *)(a1 + 56);
  unint64_t v22 = *(void *)(a1 + 64);
  *(void *)(a1 + 56) = v19;
  *(void *)(a1 + 64) = v20;
  sub_219348A70(v21, v22);
  long long v23 = (_OWORD *)(a1 + 72);
  long long v24 = (long long *)((char *)a2 + 72);
  uint64_t v25 = *((void *)a2 + 10);
  if (*(void *)(a1 + 80))
  {
    if (v25)
    {
      *(void *)(a1 + 72) = *((void *)a2 + 9);
      *(void *)(a1 + 80) = *((void *)a2 + 10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v26 = *((void *)a2 + 11);
      unint64_t v27 = *((void *)a2 + 12);
      sub_21934CDF0(v26, v27);
      uint64_t v28 = *(void *)(a1 + 88);
      unint64_t v29 = *(void *)(a1 + 96);
      *(void *)(a1 + 88) = v26;
      *(void *)(a1 + 96) = v27;
      sub_219348A70(v28, v29);
      *(void *)(a1 + 104) = *((void *)a2 + 13);
      *(void *)(a1 + 112) = *((void *)a2 + 14);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2193AF9F4(a1 + 72);
      long long v33 = *(long long *)((char *)a2 + 88);
      long long v32 = *(long long *)((char *)a2 + 104);
      *long long v23 = *v24;
      *(_OWORD *)(a1 + 88) = v33;
      *(_OWORD *)(a1 + 104) = v32;
    }
  }
  else if (v25)
  {
    *(void *)(a1 + 72) = *((void *)a2 + 9);
    *(void *)(a1 + 80) = *((void *)a2 + 10);
    uint64_t v30 = *((void *)a2 + 11);
    unint64_t v31 = *((void *)a2 + 12);
    swift_bridgeObjectRetain();
    sub_21934CDF0(v30, v31);
    *(void *)(a1 + 88) = v30;
    *(void *)(a1 + 96) = v31;
    *(void *)(a1 + 104) = *((void *)a2 + 13);
    *(void *)(a1 + 112) = *((void *)a2 + 14);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v34 = *v24;
    long long v35 = *(long long *)((char *)a2 + 104);
    *(_OWORD *)(a1 + 88) = *(long long *)((char *)a2 + 88);
    *(_OWORD *)(a1 + 104) = v35;
    *long long v23 = v34;
  }
  uint64_t v36 = *((void *)a2 + 15);
  *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
  *(void *)(a1 + 120) = v36;
  *(unsigned char *)(a1 + 129) = *((unsigned char *)a2 + 129);
  uint64_t v37 = (_OWORD *)(a1 + 136);
  long long v38 = (unsigned __int8 *)a2 + 136;
  int v39 = *((unsigned __int8 *)a2 + 224);
  if (*(unsigned char *)(a1 + 224) != 3)
  {
    if (v39 == 3)
    {
      sub_2193AE618(a1 + 136);
      long long v44 = *(long long *)((char *)a2 + 152);
      *uint64_t v37 = *(_OWORD *)v38;
      *(_OWORD *)(a1 + 152) = v44;
      long long v46 = *(long long *)((char *)a2 + 184);
      long long v45 = *(long long *)((char *)a2 + 200);
      long long v47 = *(long long *)((char *)a2 + 168);
      *(_OWORD *)(a1 + 209) = *(long long *)((char *)a2 + 209);
      *(_OWORD *)(a1 + 184) = v46;
      *(_OWORD *)(a1 + 200) = v45;
      *(_OWORD *)(a1 + 168) = v47;
      return a1;
    }
    uint64_t v51 = *v38;
    if (*(unsigned char *)v37 == 3)
    {
      if (v51 == 3)
      {
        long long v52 = *(_OWORD *)v38;
        long long v53 = *(long long *)((char *)a2 + 152);
        *(_OWORD *)(a1 + 161) = *(long long *)((char *)a2 + 161);
        *uint64_t v37 = v52;
        *(_OWORD *)(a1 + 152) = v53;
LABEL_46:
        uint64_t v71 = (_OWORD *)(a1 + 184);
        uint64_t v73 = (long long *)((char *)a2 + 184);
        uint64_t v72 = *((unsigned __int8 *)a2 + 184);
        if (*(unsigned char *)(a1 + 184) != 3)
        {
          if (v72 == 3)
          {
            sub_2193A5B54(a1 + 184);
            uint64_t v76 = *((void *)a2 + 27);
            long long v77 = *(long long *)((char *)a2 + 200);
            *uint64_t v71 = *v73;
            *(_OWORD *)(a1 + 200) = v77;
            *(void *)(a1 + 216) = v76;
            goto LABEL_70;
          }
          *(unsigned char *)(a1 + 184) = v72;
          uint64_t v80 = (_OWORD *)(a1 + 192);
          uint64_t v81 = a2 + 12;
          unint64_t v78 = *((void *)a2 + 25);
          if (*(void *)(a1 + 200) >> 60 != 15)
          {
            if (v78 >> 60 == 15)
            {
              sub_2193A544C(a1 + 192);
              long long v87 = a2[13];
              *uint64_t v80 = *v81;
              *(_OWORD *)(a1 + 208) = v87;
              goto LABEL_70;
            }
            uint64_t v88 = *((void *)a2 + 24);
            sub_21934CDF0(v88, *((void *)a2 + 25));
            uint64_t v89 = *(void *)(a1 + 192);
            unint64_t v90 = *(void *)(a1 + 200);
            *(void *)(a1 + 192) = v88;
            *(void *)(a1 + 200) = v78;
            sub_219348A70(v89, v90);
            uint64_t v91 = (uint64_t *)(a2 + 13);
            unint64_t v85 = *((void *)a2 + 27);
            if (*(void *)(a1 + 216) >> 60 == 15)
            {
              if (v85 >> 60 != 15)
              {
                uint64_t v86 = *v91;
                goto LABEL_60;
              }
            }
            else
            {
              if (v85 >> 60 != 15)
              {
                uint64_t v92 = *v91;
                sub_21934CDF0(*v91, *((void *)a2 + 27));
                uint64_t v93 = *(void *)(a1 + 208);
                unint64_t v94 = *(void *)(a1 + 216);
                *(void *)(a1 + 208) = v92;
                *(void *)(a1 + 216) = v85;
                sub_219348A70(v93, v94);
                goto LABEL_70;
              }
              sub_21934DFD8(a1 + 208);
            }
            *(_OWORD *)(a1 + 208) = *(_OWORD *)v91;
            goto LABEL_70;
          }
          if (v78 >> 60 == 15)
          {
            long long v82 = a2[13];
            *uint64_t v80 = *v81;
            *(_OWORD *)(a1 + 208) = v82;
            goto LABEL_70;
          }
LABEL_57:
          uint64_t v83 = *((void *)a2 + 24);
          sub_21934CDF0(v83, v78);
          *(void *)(a1 + 192) = v83;
          *(void *)(a1 + 200) = v78;
          uint64_t v84 = a2 + 13;
          unint64_t v85 = *((void *)a2 + 27);
          if (v85 >> 60 == 15)
          {
            *(_OWORD *)(a1 + 208) = *v84;
            goto LABEL_70;
          }
          uint64_t v86 = *(void *)v84;
LABEL_60:
          sub_21934CDF0(v86, v85);
          *(void *)(a1 + 208) = v86;
          *(void *)(a1 + 216) = v85;
          goto LABEL_70;
        }
        if (v72 == 3)
        {
          long long v74 = *v73;
          long long v75 = *(long long *)((char *)a2 + 200);
          *(void *)(a1 + 216) = *((void *)a2 + 27);
          *uint64_t v71 = v74;
          *(_OWORD *)(a1 + 200) = v75;
          goto LABEL_70;
        }
        *(unsigned char *)(a1 + 184) = v72;
LABEL_52:
        unint64_t v78 = *((void *)a2 + 25);
        if (v78 >> 60 == 15)
        {
          long long v79 = a2[13];
          *(_OWORD *)(a1 + 192) = a2[12];
          *(_OWORD *)(a1 + 208) = v79;
          goto LABEL_70;
        }
        goto LABEL_57;
      }
      *(unsigned char *)(a1 + 136) = v51;
      uint64_t v58 = a2 + 9;
      unint64_t v59 = *((void *)a2 + 19);
      if (v59 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 144) = *v58;
LABEL_45:
        *(unsigned char *)(a1 + 160) = *((unsigned char *)a2 + 160);
        uint64_t v70 = *((void *)a2 + 21);
        *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
        *(void *)(a1 + 168) = v70;
        goto LABEL_46;
      }
      uint64_t v66 = *(void *)v58;
LABEL_40:
      sub_21934CDF0(v66, v59);
      *(void *)(a1 + 144) = v66;
      *(void *)(a1 + 152) = v59;
      goto LABEL_45;
    }
    if (v51 == 3)
    {
      sub_2193A5B18(a1 + 136);
      long long v56 = *(long long *)((char *)a2 + 161);
      long long v57 = *(long long *)((char *)a2 + 152);
      *uint64_t v37 = *(_OWORD *)v38;
      *(_OWORD *)(a1 + 152) = v57;
      *(_OWORD *)(a1 + 161) = v56;
      goto LABEL_46;
    }
    *(unsigned char *)(a1 + 136) = v51;
    unint64_t v65 = (uint64_t *)(a2 + 9);
    unint64_t v59 = *((void *)a2 + 19);
    if (*(void *)(a1 + 152) >> 60 == 15)
    {
      if (v59 >> 60 != 15)
      {
        uint64_t v66 = *v65;
        goto LABEL_40;
      }
    }
    else
    {
      if (v59 >> 60 != 15)
      {
        uint64_t v67 = *v65;
        sub_21934CDF0(*v65, *((void *)a2 + 19));
        uint64_t v68 = *(void *)(a1 + 144);
        unint64_t v69 = *(void *)(a1 + 152);
        *(void *)(a1 + 144) = v67;
        *(void *)(a1 + 152) = v59;
        sub_219348A70(v68, v69);
        goto LABEL_45;
      }
      sub_21934DFD8(a1 + 144);
    }
    *(_OWORD *)(a1 + 144) = *(_OWORD *)v65;
    goto LABEL_45;
  }
  if (v39 != 3)
  {
    uint64_t v48 = *v38;
    if (v48 == 3)
    {
      long long v49 = *(_OWORD *)v38;
      long long v50 = *(long long *)((char *)a2 + 152);
      *(_OWORD *)(a1 + 161) = *(long long *)((char *)a2 + 161);
      *uint64_t v37 = v49;
      *(_OWORD *)(a1 + 152) = v50;
    }
    else
    {
      *(unsigned char *)(a1 + 136) = v48;
      long long v54 = (uint64_t *)(a2 + 9);
      unint64_t v55 = *((void *)a2 + 19);
      if (v55 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 144) = *(_OWORD *)v54;
      }
      else
      {
        uint64_t v60 = *v54;
        sub_21934CDF0(*v54, *((void *)a2 + 19));
        *(void *)(a1 + 144) = v60;
        *(void *)(a1 + 152) = v55;
      }
      *(unsigned char *)(a1 + 160) = *((unsigned char *)a2 + 160);
      uint64_t v61 = *((void *)a2 + 21);
      *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
      *(void *)(a1 + 168) = v61;
    }
    uint64_t v62 = *((unsigned __int8 *)a2 + 184);
    if (v62 == 3)
    {
      long long v63 = *(long long *)((char *)a2 + 184);
      long long v64 = *(long long *)((char *)a2 + 200);
      *(void *)(a1 + 216) = *((void *)a2 + 27);
      *(_OWORD *)(a1 + 184) = v63;
      *(_OWORD *)(a1 + 200) = v64;
LABEL_70:
      *(unsigned char *)(a1 + 224) = *((unsigned char *)a2 + 224);
      return a1;
    }
    *(unsigned char *)(a1 + 184) = v62;
    goto LABEL_52;
  }
  long long v40 = *(long long *)((char *)a2 + 152);
  *uint64_t v37 = *(_OWORD *)v38;
  *(_OWORD *)(a1 + 152) = v40;
  long long v41 = *(long long *)((char *)a2 + 168);
  long long v42 = *(long long *)((char *)a2 + 184);
  long long v43 = *(long long *)((char *)a2 + 200);
  *(_OWORD *)(a1 + 209) = *(long long *)((char *)a2 + 209);
  *(_OWORD *)(a1 + 184) = v42;
  *(_OWORD *)(a1 + 200) = v43;
  *(_OWORD *)(a1 + 168) = v41;
  return a1;
}

uint64_t sub_2193AF9A0(uint64_t a1)
{
  return a1;
}

uint64_t sub_2193AF9F4(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy225_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __n128 result = (__n128)a2[11];
  long long v11 = a2[12];
  long long v12 = a2[13];
  *(unsigned char *)(a1 + 224) = *((unsigned char *)a2 + 224);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t assignWithTake for ASCTAPAuthenticatorGetAssertionResponse(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8))
  {
    uint64_t v4 = *(void *)(a2 + 8);
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      uint64_t v5 = *(void *)(a1 + 16);
      unint64_t v6 = *(void *)(a1 + 24);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      sub_219348A70(v5, v6);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_2193AF9A0(a1);
  }
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
LABEL_6:
  uint64_t v8 = *(void *)(a1 + 40);
  unint64_t v9 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_219348A70(v8, v9);
  uint64_t v10 = *(void *)(a1 + 56);
  unint64_t v11 = *(void *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  sub_219348A70(v10, v11);
  if (*(void *)(a1 + 80))
  {
    uint64_t v12 = *(void *)(a2 + 80);
    if (v12)
    {
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v12;
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a1 + 88);
      unint64_t v14 = *(void *)(a1 + 96);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      sub_219348A70(v13, v14);
      uint64_t v15 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v15;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_2193AF9F4(a1 + 72);
  }
  long long v16 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v16;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
LABEL_11:
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  uint64_t v17 = (unsigned char *)(a1 + 136);
  unint64_t v18 = (unsigned __int8 *)(a2 + 136);
  if (*(unsigned char *)(a1 + 224) != 3)
  {
    int v19 = *(unsigned __int8 *)(a2 + 224);
    if (v19 == 3)
    {
      sub_2193AE618(a1 + 136);
      goto LABEL_14;
    }
    if (*v17 == 3) {
      goto LABEL_18;
    }
    uint64_t v22 = *v18;
    if (v22 == 3)
    {
      sub_2193A5B18(a1 + 136);
LABEL_18:
      long long v23 = *(_OWORD *)(a2 + 152);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *(_OWORD *)(a1 + 152) = v23;
      *(_OWORD *)(a1 + 161) = *(_OWORD *)(a2 + 161);
      goto LABEL_25;
    }
    *(unsigned char *)(a1 + 136) = v22;
    long long v24 = (void *)(a2 + 144);
    unint64_t v25 = *(void *)(a1 + 152);
    if (v25 >> 60 != 15)
    {
      unint64_t v26 = *(void *)(a2 + 152);
      if (v26 >> 60 != 15)
      {
        uint64_t v27 = *(void *)(a1 + 144);
        *(void *)(a1 + 144) = *v24;
        *(void *)(a1 + 152) = v26;
        sub_219348A70(v27, v25);
        goto LABEL_24;
      }
      sub_21934DFD8(a1 + 144);
    }
    *(_OWORD *)(a1 + 144) = *(_OWORD *)v24;
LABEL_24:
    *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
LABEL_25:
    uint64_t v28 = *(unsigned __int8 *)(a2 + 184);
    if (*(unsigned char *)(a1 + 184) != 3)
    {
      if (v28 != 3)
      {
        *(unsigned char *)(a1 + 184) = v28;
        unint64_t v30 = *(void *)(a1 + 200);
        if (v30 >> 60 != 15)
        {
          unint64_t v31 = *(void *)(a2 + 200);
          if (v31 >> 60 != 15)
          {
            uint64_t v33 = *(void *)(a1 + 192);
            *(void *)(a1 + 192) = *(void *)(a2 + 192);
            *(void *)(a1 + 200) = v31;
            sub_219348A70(v33, v30);
            long long v34 = (void *)(a2 + 208);
            unint64_t v35 = *(void *)(a1 + 216);
            if (v35 >> 60 != 15)
            {
              unint64_t v36 = *(void *)(a2 + 216);
              if (v36 >> 60 != 15)
              {
                uint64_t v37 = *(void *)(a1 + 208);
                *(void *)(a1 + 208) = *v34;
                *(void *)(a1 + 216) = v36;
                sub_219348A70(v37, v35);
                goto LABEL_38;
              }
              sub_21934DFD8(a1 + 208);
            }
            *(_OWORD *)(a1 + 208) = *(_OWORD *)v34;
LABEL_38:
            *(unsigned char *)(a1 + 224) = v19;
            return a1;
          }
          sub_2193A544C(a1 + 192);
        }
        long long v32 = *(_OWORD *)(a2 + 208);
        *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
        *(_OWORD *)(a1 + 208) = v32;
        goto LABEL_38;
      }
      sub_2193A5B54(a1 + 184);
    }
    long long v29 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v29;
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    goto LABEL_38;
  }
LABEL_14:
  long long v20 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v20;
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 209) = *(_OWORD *)(a2 + 209);
  long long v21 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(a1 + 152) = v21;
  return a1;
}

uint64_t getEnumTagSinglePayload for ASCTAPAuthenticatorGetAssertionResponse(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 225)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ASCTAPAuthenticatorGetAssertionResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 224) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 225) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 225) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPAuthenticatorGetAssertionResponse()
{
  return &type metadata for ASCTAPAuthenticatorGetAssertionResponse;
}

unint64_t sub_2193AFE74(uint64_t a1)
{
  unint64_t result = sub_2193AFE9C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2193AFE9C()
{
  unint64_t result = qword_267C19AD0;
  if (!qword_267C19AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19AD0);
  }
  return result;
}

unint64_t sub_2193AFEF0()
{
  unint64_t result = qword_267C19AE0;
  if (!qword_267C19AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19AE0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ASCTAPAuthenticatorGetAssertionResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2193B0010);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASCTAPAuthenticatorGetAssertionResponse.CodingKeys()
{
  return &type metadata for ASCTAPAuthenticatorGetAssertionResponse.CodingKeys;
}

unint64_t sub_2193B004C()
{
  unint64_t result = qword_267C19AF0;
  if (!qword_267C19AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19AF0);
  }
  return result;
}

unint64_t sub_2193B00A4()
{
  unint64_t result = qword_267C19AF8;
  if (!qword_267C19AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19AF8);
  }
  return result;
}

unint64_t sub_2193B00FC()
{
  unint64_t result = qword_267C19B00;
  if (!qword_267C19B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19B00);
  }
  return result;
}

uint64_t sub_2193B0150(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 8) {
    return 7;
  }
  else {
    return (0x607050403020100uLL >> (8 * (a1 - 1)));
  }
}

uint64_t sub_2193B017C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x69746E6564657263 && a2 == 0xEA00000000006C61;
  if (v2 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614468747561 && a2 == 0xE800000000000000 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x727574616E676973 && a2 == 0xE900000000000065 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1919251317 && a2 == 0xE400000000000000 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002193F15C0 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656C655372657375 && a2 == 0xEC00000064657463 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002193F15E0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_2193E3140();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_2193B047C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    sub_2193E2E30();
    uint64_t v4 = a1 + 32;
    sub_2193B1938();
    do
    {
      ++v4;
      sub_2193E2B60();
      sub_2193E2E10();
      sub_2193E2E40();
      sub_2193E2E50();
      sub_2193E2E20();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

uint64_t sub_2193B0550(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_21935A518(0, v2, 0);
    uint64_t result = v11;
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      int v5 = *v4++;
      unint64_t v6 = 0xE300000000000000;
      uint64_t v7 = 6452085;
      switch(v5)
      {
        case 1:
          uint64_t v7 = 6514286;
          break;
        case 2:
          uint64_t v7 = 6646882;
          break;
        case 3:
          unint64_t v6 = 0xE800000000000000;
          uint64_t v7 = 0x6C616E7265746E69;
          break;
        case 4:
        case 5:
          unint64_t v6 = 0xE600000000000000;
          uint64_t v7 = 0x646972627968;
          break;
        case 6:
          unint64_t v6 = 0xEA00000000006472;
          uint64_t v7 = 0x61632D7472616D73;
          break;
        default:
          break;
      }
      uint64_t v12 = result;
      unint64_t v9 = *(void *)(result + 16);
      unint64_t v8 = *(void *)(result + 24);
      if (v9 >= v8 >> 1)
      {
        sub_21935A518(v8 > 1, v9 + 1, 1);
        uint64_t result = v12;
      }
      *(void *)(result + 16) = v9 + 1;
      uint64_t v10 = result + 16 * v9;
      *(void *)(v10 + 32) = v7;
      *(void *)(v10 + 40) = v6;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t static ASCWebKitSPISupport.alternateLargeBlobIfNecessary(for:clientDataHash:)()
{
  return 0;
}

uint64_t static ASCWebKitSPISupport.entepriseAttestationIdentityPersistentReference(for:)()
{
  id v0 = objc_msgSend(self, sel_sharedManager);
  uint64_t v1 = (void *)sub_2193E2830();
  id v2 = objc_msgSend(v0, sel_entepriseAttestationIdentityPersistentReferenceForRelyingParty_, v1);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_2193E2130();

  return v3;
}

uint64_t static ASCWebKitSPISupport.getClientCapabilities(for:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_2193B08F4, 0, 0);
}

uint64_t sub_2193B08F4()
{
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v1 = (void *)sub_2193E2830();
  unsigned int v2 = objc_msgSend(ObjCClassFromMetadata, sel_arePasskeysDisallowedForRelyingParty_, v1);

  uint64_t v3 = v2 ^ 1;
  uint64_t v4 = (void *)sub_219391954(MEMORY[0x263F8EE78]);
  uint64_t v5 = 0;
  while (1)
  {
    while (1)
    {
      unint64_t v8 = (char *)&unk_26CAB4C78 + v5++;
      uint64_t v9 = 0xD000000000000022;
      uint64_t v10 = 0x80000002193F1640;
      uint64_t v11 = v3;
      switch(v8[32])
      {
        case 1:
          uint64_t v10 = 0xEF74726F70736E61;
          uint64_t v9 = 0x7254646972627968;
          uint64_t v11 = v3;
          break;
        case 2:
          uint64_t v9 = 0xD00000000000001CLL;
          uint64_t v10 = 0x80000002193F1620;
          uint64_t v11 = v3;
          break;
        case 3:
          uint64_t v10 = 0xEE007465476C616ELL;
          uint64_t v9 = 0x6F697469646E6F63;
          uint64_t v11 = v3;
          break;
        case 4:
          uint64_t v10 = 0x80000002193F1600;
          uint64_t v11 = v3;
          uint64_t v9 = 0xD000000000000011;
          break;
        case 5:
          uint64_t v10 = 0xEE00736E69676972;
          uint64_t v9 = 0x4F646574616C6572;
          uint64_t v11 = 1;
          break;
        default:
          break;
      }
      id v12 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v11);
      if (v12) {
        break;
      }
      swift_bridgeObjectRetain();
      unint64_t v23 = sub_21938452C(v9, v10);
      char v25 = v24;
      swift_bridgeObjectRelease();
      if ((v25 & 1) == 0) {
        goto LABEL_4;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_2193A0BB0();
      }
      swift_bridgeObjectRelease();
      unint64_t v26 = *(void **)(v4[7] + 8 * v23);
      sub_2193B12C0(v23, (uint64_t)v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if (v5 == 6)
      {
LABEL_28:
        unint64_t v31 = *(uint64_t (**)(void *))(v33 + 8);
        return v31(v4);
      }
    }
    id v13 = v12;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v16 = sub_21938452C(v9, v10);
    uint64_t v17 = v4[2];
    BOOL v18 = (v15 & 1) == 0;
    uint64_t v19 = v17 + v18;
    if (__OFADD__(v17, v18))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      JUMPOUT(0x2193B0CE0);
    }
    char v20 = v15;
    if (v4[3] < v19) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v15 & 1) == 0) {
        goto LABEL_24;
      }
    }
    else
    {
      sub_2193A0BB0();
      if ((v20 & 1) == 0)
      {
LABEL_24:
        v4[(v16 >> 6) + 8] |= 1 << v16;
        uint64_t v27 = (uint64_t *)(v4[6] + 16 * v16);
        *uint64_t v27 = v9;
        v27[1] = v10;
        *(void *)(v4[7] + 8 * v16) = v13;
        uint64_t v28 = v4[2];
        BOOL v29 = __OFADD__(v28, 1);
        uint64_t v30 = v28 + 1;
        if (v29) {
          goto LABEL_35;
        }
        v4[2] = v30;
        swift_bridgeObjectRetain();
        goto LABEL_3;
      }
    }
LABEL_2:
    uint64_t v6 = v4[7];
    uint64_t v7 = 8 * v16;

    *(void *)(v6 + v7) = v13;
LABEL_3:
    swift_bridgeObjectRelease();
LABEL_4:
    swift_bridgeObjectRelease();
    if (v5 == 6) {
      goto LABEL_28;
    }
  }
  sub_21939F4D0(v19, isUniquelyReferenced_nonNull_native);
  uint64_t v21 = sub_21938452C(v9, v10);
  if ((v20 & 1) == (v22 & 1))
  {
    unint64_t v16 = v21;
    if ((v20 & 1) == 0) {
      goto LABEL_24;
    }
    goto LABEL_2;
  }
  return sub_2193E3180();
}

uint64_t sub_2193B0E70(int a1, void *aBlock)
{
  v2[2] = _Block_copy(aBlock);
  uint64_t v3 = sub_2193E2840();
  uint64_t v5 = v4;
  v2[3] = v4;
  uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
  uint64_t v7 = (void *)swift_task_alloc();
  v2[4] = v7;
  void *v7 = v2;
  _OWORD v7[3] = v5;
  _OWORD v7[4] = ObjCClassMetadata;
  v7[1] = sub_2193B0F54;
  _OWORD v7[2] = v3;
  return MEMORY[0x270FA2498](sub_2193B08F4, 0, 0);
}

uint64_t sub_2193B0F54()
{
  uint64_t v1 = *(void (***)(void, void))(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_2193B1938();
  unsigned int v2 = (void *)sub_2193E2790();
  swift_bridgeObjectRelease();
  ((void (**)(void, void *))v1)[2](v1, v2);

  _Block_release(v1);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

BOOL static ASCWebKitSPISupport.shouldApplyWorkaroundFor134591531()()
{
  id v0 = objc_msgSend(self, sel_processInfo);
  objc_msgSend(v0, sel_operatingSystemVersion);
  uint64_t v1 = v4;
  uint64_t v2 = v5;

  if (v1 == 15) {
    return v2 < 2;
  }
  else {
    return v1 < 15;
  }
}

unint64_t sub_2193B12C0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_2193E2CC0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_2193E3210();
        swift_bridgeObjectRetain();
        sub_2193E28D0();
        uint64_t v9 = sub_2193E3230();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          id v12 = (_OWORD *)(v11 + 16 * v3);
          id v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *id v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          char v15 = (void *)(v14 + 8 * v3);
          unint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            void *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  uint64_t *v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2193B1498(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_2193E2CC0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_2193E3210();
        swift_bridgeObjectRetain();
        sub_2193E28D0();
        uint64_t v11 = sub_2193E3230();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          uint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          char v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            *uint64_t v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          unint64_t v17 = v16 + 40 * v3;
          uint64_t v18 = (long long *)(v16 + 40 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            long long v9 = *v18;
            long long v10 = v18[1];
            *(void *)(v17 + 32) = *((void *)v18 + 4);
            *(_OWORD *)unint64_t v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  uint64_t *v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t _sSo19ASCWebKitSPISupportC26AuthenticationServicesCoreE12wkTransports4fromSaySo8NSNumberCGSaySSG_tFZ_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = swift_bridgeObjectRetain() + 40;
    int64_t v3 = (char *)MEMORY[0x263F8EE78];
    do
    {
      swift_bridgeObjectRetain();
      unint64_t v4 = sub_2193E2F70();
      swift_bridgeObjectRelease();
      if (v4 <= 5)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int64_t v3 = sub_219386D28(0, *((void *)v3 + 2) + 1, 1, v3);
        }
        unint64_t v6 = *((void *)v3 + 2);
        unint64_t v5 = *((void *)v3 + 3);
        if (v6 >= v5 >> 1) {
          int64_t v3 = sub_219386D28((char *)(v5 > 1), v6 + 1, 1, v3);
        }
        *((void *)v3 + 2) = v6 + 1;
        v3[v6 + 32] = v4;
      }
      v2 += 16;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    int64_t v3 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v7 = sub_2193B047C((uint64_t)v3);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t _sSo19ASCWebKitSPISupportC26AuthenticationServicesCoreE12asTransports4fromSaySSGSaySo8NSNumberCG_tFZ_0(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_16:
    unint64_t v5 = (char *)MEMORY[0x263F8EE78];
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_2193B0550((uint64_t)v5);
    swift_bridgeObjectRelease();
    return v9;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_2193E2F10();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_16;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    unint64_t v5 = (char *)MEMORY[0x263F8EE78];
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x21D4893F0](v4, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v4 + 32);
      }
      ASWKCTAPAuthenticatorTransport.init(rawValue:)((NSNumber)v6);
      if (v10 != 7)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v5 = sub_219386E2C(0, *((void *)v5 + 2) + 1, 1, v5);
        }
        unint64_t v8 = *((void *)v5 + 2);
        unint64_t v7 = *((void *)v5 + 3);
        if (v8 >= v7 >> 1) {
          unint64_t v5 = sub_219386E2C((char *)(v7 > 1), v8 + 1, 1, v5);
        }
        *((void *)v5 + 2) = v8 + 1;
        v5[v8 + 32] = v10;
      }
      ++v4;
    }
    while (v2 != v4);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

unint64_t sub_2193B1938()
{
  unint64_t result = qword_267C18E58;
  if (!qword_267C18E58)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267C18E58);
  }
  return result;
}

uint64_t sub_2193B1978()
{
  _Block_release(*(const void **)(v0 + 24));

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2193B19B8()
{
  uint64_t v2 = *(void *)(v0 + 16);
  int64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_219387958;
  unint64_t v5 = (uint64_t (*)(int, void *))((char *)&dword_267C19B10 + dword_267C19B10);
  return v5(v2, v3);
}

uint64_t sub_2193B1A74(uint64_t a1)
{
  return sub_2193B1AE8(a1, qword_26AC29118);
}

uint64_t sub_2193B1AA0(uint64_t a1)
{
  return sub_2193B1AE8(a1, qword_26AC29130);
}

uint64_t sub_2193B1AC4(uint64_t a1)
{
  return sub_2193B1AE8(a1, qword_267C29598);
}

uint64_t sub_2193B1AE8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_2193E24F0();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_2193E24E0();
}

uint64_t sub_2193B1B60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v30 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v31 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  while (1)
  {
LABEL_4:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (i << 6);
    }
    else
    {
      int64_t v13 = i + 1;
      if (__OFADD__(i, 1)) {
        goto LABEL_40;
      }
      if (v13 >= v31)
      {
LABEL_38:
        swift_bridgeObjectRelease();
        uint64_t result = swift_release();
        *(void *)(a4 + 32) = 0;
        *(_OWORD *)a4 = 0u;
        *(_OWORD *)(a4 + 16) = 0u;
        return result;
      }
      unint64_t v14 = *(void *)(v30 + 8 * v13);
      ++i;
      if (!v14)
      {
        int64_t i = v13 + 1;
        if (v13 + 1 >= v31) {
          goto LABEL_38;
        }
        unint64_t v14 = *(void *)(v30 + 8 * i);
        if (!v14)
        {
          int64_t i = v13 + 2;
          if (v13 + 2 >= v31) {
            goto LABEL_38;
          }
          unint64_t v14 = *(void *)(v30 + 8 * i);
          if (!v14)
          {
            int64_t i = v13 + 3;
            if (v13 + 3 >= v31) {
              goto LABEL_38;
            }
            unint64_t v14 = *(void *)(v30 + 8 * i);
            if (!v14)
            {
              int64_t v15 = v13 + 4;
              if (v15 >= v31) {
                goto LABEL_38;
              }
              unint64_t v14 = *(void *)(v30 + 8 * v15);
              for (int64_t i = v15; !v14; ++v15)
              {
                int64_t i = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_41;
                }
                if (i >= v31) {
                  goto LABEL_38;
                }
                unint64_t v14 = *(void *)(v30 + 8 * i);
              }
            }
          }
        }
      }
      unint64_t v8 = (v14 - 1) & v14;
      unint64_t v12 = __clz(__rbit64(v14)) + (i << 6);
    }
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 56) + 40 * v12);
    unint64_t v17 = (void *)v16[4];
    uint64_t v18 = v17[2];
    if (v18)
    {
      uint64_t v28 = v16[1];
      uint64_t v29 = *v16;
      uint64_t v26 = v16[3];
      uint64_t v27 = v16[2];
      BOOL v19 = v17[4] == a2 && v17[5] == a3;
      if (v19 || (v20 = i, uint64_t result = sub_2193E3140(), (result & 1) != 0))
      {
LABEL_37:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t result = swift_release();
        *(void *)a4 = v29;
        *(void *)(a4 + 8) = v28;
        *(void *)(a4 + 16) = v27;
        *(void *)(a4 + 24) = v26;
        *(void *)(a4 + 32) = v17;
        return result;
      }
      int64_t i = v20;
      if (v18 != 1) {
        break;
      }
    }
  }
  uint64_t v21 = v17 + 7;
  uint64_t v22 = 1;
  while (1)
  {
    uint64_t v23 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (*(v21 - 1) == a2 && *v21 == a3) {
      goto LABEL_37;
    }
    uint64_t result = sub_2193E3140();
    if (result) {
      goto LABEL_37;
    }
    v21 += 2;
    ++v22;
    if (v23 == v18)
    {
      int64_t i = v20;
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

char *static ASManagedConfiguration.loadFromDisk(plistURL:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27160);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)v43 - v7;
  uint64_t v9 = sub_2193E1FF0();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (v11(a1, 1, v9) == 1)
  {
    sub_2193B264C();
    swift_allocError();
    swift_willThrow();
    return v8;
  }
  uint64_t v48 = v6;
  uint64_t v49 = a1;
  sub_2193845BC(a1, (uint64_t)v8);
  uint64_t result = (char *)((uint64_t (*)(char *, uint64_t, uint64_t))v11)(v8, 1, v9);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v13 = sub_2193E2060();
  if (!v1)
  {
    uint64_t v23 = v13;
    unint64_t v24 = v14;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    sub_2193E1EB0();
    swift_allocObject();
    sub_21934CDF0(v23, v24);
    sub_2193E1EA0();
    type metadata accessor for ASManagedConfiguration();
    sub_2193B60B4(&qword_267C19B28, (void (*)(uint64_t))type metadata accessor for ASManagedConfiguration);
    sub_2193E1E90();
    sub_219348A70(v23, v24);
    swift_release();
    sub_219348A70(v23, v24);
    return (char *)v53;
  }
  int64_t v15 = *(void (**)(char *, uint64_t))(v10 + 8);
  v15(v8, v9);
  id v53 = v1;
  id v16 = v1;
  unint64_t v8 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_26AC27168);
  sub_2193607AC(0, (unint64_t *)&qword_26AC27700);
  if (!swift_dynamicCast())
  {

    return v8;
  }
  long long v47 = (void (*)(uint64_t, uint64_t))v15;

  unint64_t v17 = v52;
  id v18 = [v52 domain];
  uint64_t v19 = sub_2193E2840();
  uint64_t v21 = v20;

  if (v19 == sub_2193E2840() && v21 == v22)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v25 = sub_2193E3140();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0) {
      goto LABEL_17;
    }
  }
  if ([v17 code] == (id)260)
  {
    if (qword_26AC26FA0 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_2193E24F0();
    __swift_project_value_buffer(v26, (uint64_t)qword_26AC29130);
    uint64_t v27 = sub_2193E24D0();
    os_log_type_t v28 = sub_2193E2B00();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_219326000, v27, v28, "Managed configuration file does not exist.", v29, 2u);
      MEMORY[0x21D48A390](v29, -1, -1);
      uint64_t v30 = v17;
    }
    else
    {
      uint64_t v30 = v27;
      uint64_t v27 = v17;
    }
    goto LABEL_24;
  }
LABEL_17:
  if (qword_26AC26FA0 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_2193E24F0();
  __swift_project_value_buffer(v31, (uint64_t)qword_26AC29130);
  uint64_t v30 = v17;
  uint64_t v27 = sub_2193E24D0();
  os_log_type_t v32 = sub_2193E2AF0();
  int v33 = v32;
  if (os_log_type_enabled(v27, v32))
  {
    uint64_t v34 = swift_slowAlloc();
    int v46 = v33;
    unint64_t v35 = (uint8_t *)v34;
    long long v44 = (void *)swift_slowAlloc();
    long long v45 = v35;
    *(_DWORD *)unint64_t v35 = 138412290;
    v43[1] = v35 + 4;
    long long v50 = v30;
    v43[0] = v30;
    sub_2193E2C00();
    unint64_t v36 = v44;
    *long long v44 = v30;
    uint64_t v37 = v43[0];

    long long v38 = v45;
    _os_log_impl(&dword_219326000, v27, (os_log_type_t)v46, "Could not read managed configuration file: %@", v45, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27170);
    swift_arrayDestroy();
    MEMORY[0x21D48A390](v36, -1, -1);
    MEMORY[0x21D48A390](v38, -1, -1);
    uint64_t v30 = v37;
  }
  else
  {

    uint64_t v27 = v30;
  }
LABEL_24:
  uint64_t v39 = (uint64_t)v48;

  sub_2193845BC(v49, v39);
  uint64_t result = (char *)((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(v39, 1, v9);
  if (result != 1)
  {
    unint64_t v40 = sub_219391A70(MEMORY[0x263F8EE78]);
    long long v41 = (objc_class *)type metadata accessor for ASManagedConfiguration();
    long long v42 = (char *)objc_allocWithZone(v41);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(&v42[OBJC_IVAR____TtC26AuthenticationServicesCore22ASManagedConfiguration_plistURL], v39, v9);
    *(void *)&v42[OBJC_IVAR____TtC26AuthenticationServicesCore22ASManagedConfiguration_declarationKeyToPasskeyAttestationConfigurationKey] = v40;
    v51.receiver = v42;
    v51.super_class = v41;
    unint64_t v8 = (char *)objc_msgSendSuper2(&v51, sel_init);
    v47(v39, v9);
    return v8;
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t sub_2193B264C()
{
  unint64_t result = qword_267C19B20;
  if (!qword_267C19B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19B20);
  }
  return result;
}

uint64_t type metadata accessor for ASManagedConfiguration()
{
  uint64_t result = qword_26AC27730;
  if (!qword_26AC27730) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2193B2864()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_2193B28B4(v0);
}

uint64_t sub_2193B28B4(uint64_t a1)
{
  uint64_t result = sub_2193E2AA0();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    unint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_2193B4488(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2193B2A4C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  LOBYTE(a1) = sub_2193B5DD8(v4, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1 & 1;
}

uint64_t sub_2193B2B84(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_2193B1B60(v4, a1, a2, (uint64_t)&v9);
  swift_bridgeObjectRelease();
  uint64_t v5 = v10;
  if (!v10) {
    return 0;
  }
  uint64_t v6 = v9;
  uint64_t v7 = sub_2193E20A0();
  sub_2193B5FC8(v6, v5);
  return v7;
}

uint64_t sub_2193B2DC4(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v2;
  uint64_t v9 = *(void *)(a1 + 32);
  long long v3 = v8[0];
  uint64_t v4 = (uint64_t *)(v1
                 + OBJC_IVAR____TtC26AuthenticationServicesCore22ASManagedConfiguration_declarationKeyToPasskeyAttestationConfigurationKey);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_2193B6018((uint64_t)v8);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v4;
  uint64_t *v4 = 0x8000000000000000;
  sub_2193A0360((uint64_t)v8, v3, *((uint64_t *)&v3 + 1), isUniquelyReferenced_nonNull_native);
  uint64_t *v4 = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return sub_2193B2F5C();
}

uint64_t sub_2193B2EA4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  sub_2193B436C(a1, a2, (uint64_t)v7);
  uint64_t v4 = v7[0];
  uint64_t v5 = v7[1];
  swift_endAccess();
  sub_2193B5FC8(v4, v5);
  return sub_2193B2F5C();
}

uint64_t sub_2193B2F5C()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_2193E1FF0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2193E1EE0();
  swift_allocObject();
  sub_2193E1ED0();
  uint64_t v22 = v0;
  type metadata accessor for ASManagedConfiguration();
  sub_2193B60B4(&qword_267C19BD8, (void (*)(uint64_t))type metadata accessor for ASManagedConfiguration);
  uint64_t v7 = sub_2193E1EC0();
  if (v1)
  {
    swift_release();
    if (qword_26AC26FA0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_2193E24F0();
    __swift_project_value_buffer(v11, (uint64_t)qword_26AC29130);
    id v12 = v1;
    id v13 = v1;
    int64_t v14 = sub_2193E24D0();
    os_log_type_t v15 = sub_2193E2AE0();
    if (os_log_type_enabled(v14, v15))
    {
      int64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      *(_DWORD *)int64_t v16 = 138412290;
      id v18 = v1;
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v22 = v19;
      sub_2193E2C00();
      void *v17 = v19;

      _os_log_impl(&dword_219326000, v14, v15, "Could not save managed settings: %@", v16, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27170);
      swift_arrayDestroy();
      MEMORY[0x21D48A390](v17, -1, -1);
      MEMORY[0x21D48A390](v16, -1, -1);
    }
    else
    {
    }
    return swift_willThrow();
  }
  else
  {
    uint64_t v9 = v7;
    unint64_t v10 = v8;
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2 + OBJC_IVAR____TtC26AuthenticationServicesCore22ASManagedConfiguration_plistURL, v3);
    sub_2193E2150();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return sub_219348A70(v9, v10);
  }
}

id ASManagedConfiguration.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void ASManagedConfiguration.init()()
{
}

uint64_t sub_2193B3358()
{
  if (*v0) {
    return 0xD000000000000032;
  }
  else {
    return 0x4C52557473696C70;
  }
}

uint64_t sub_2193B3398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2193B6C00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2193B33C0(uint64_t a1)
{
  unint64_t v2 = sub_2193B6060();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2193B33FC(uint64_t a1)
{
  unint64_t v2 = sub_2193B6060();

  return MEMORY[0x270FA00B8](a1, v2);
}

id ASManagedConfiguration.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ASManagedConfiguration();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2193B34F0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2193E1FF0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19B30);
  uint64_t v15 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193B6060();
  sub_2193E3260();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2 + OBJC_IVAR____TtC26AuthenticationServicesCore22ASManagedConfiguration_plistURL, v4);
  char v17 = 0;
  sub_2193B60B4(&qword_267C19B40, MEMORY[0x263F06EA8]);
  uint64_t v11 = v14;
  sub_2193E30D0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!v11)
  {
    id v12 = (uint64_t *)(v2
                    + OBJC_IVAR____TtC26AuthenticationServicesCore22ASManagedConfiguration_declarationKeyToPasskeyAttestationConfigurationKey);
    swift_beginAccess();
    uint64_t v18 = *v12;
    char v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C19B48);
    sub_2193B6150(&qword_267C19B50, (void (*)(void))sub_2193B60FC);
    sub_2193E30D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v10, v8);
}

void *ASManagedConfiguration.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ASManagedConfiguration.init(from:)(a1);
}

void *ASManagedConfiguration.init(from:)(void *a1)
{
  id v3 = v1;
  uint64_t v19 = sub_2193E1FF0();
  uint64_t v17 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19B60);
  uint64_t v16 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193B6060();
  uint64_t v8 = v3;
  sub_2193E3240();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);

    type metadata accessor for ASManagedConfiguration();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v9 = v16;
    uint64_t v10 = v17;
    LOBYTE(v22) = 0;
    sub_2193B60B4(&qword_267C19B68, MEMORY[0x263F06EA8]);
    uint64_t v11 = v18;
    sub_2193E3010();
    id v13 = *(void (**)(void))(v10 + 32);
    uint64_t v15 = &v8[OBJC_IVAR____TtC26AuthenticationServicesCore22ASManagedConfiguration_plistURL];
    v13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C19B48);
    char v21 = 1;
    sub_2193B6150(&qword_267C19B70, (void (*)(void))sub_2193B61CC);
    sub_2193E3010();
    *(void *)&v8[OBJC_IVAR____TtC26AuthenticationServicesCore22ASManagedConfiguration_declarationKeyToPasskeyAttestationConfigurationKey] = v22;

    uint64_t v14 = (objc_class *)type metadata accessor for ASManagedConfiguration();
    v20.receiver = v8;
    v20.super_class = v14;
    uint64_t v7 = objc_msgSendSuper2(&v20, sel_init);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v11);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  return v7;
}

void *sub_2193B3BE8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for ASManagedConfiguration());
  uint64_t result = ASManagedConfiguration.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_2193B3C40(void *a1)
{
  return sub_2193B34F0(a1);
}

void __swiftcall ASPasskeyAttestationConfiguration.init(declarationKey:attestationIdentityPersistentReference:relyingParties:)(AuthenticationServicesCore::ASPasskeyAttestationConfiguration *__return_ptr retstr, Swift::String declarationKey, Swift::String attestationIdentityPersistentReference, Swift::OpaquePointer relyingParties)
{
  retstr->declarationKey = declarationKey;
  retstr->attestationIdentityPersistentReference = attestationIdentityPersistentReference;
  retstr->relyingParties = relyingParties;
}

uint64_t sub_2193B3C74()
{
  unint64_t v1 = 0xD000000000000026;
  if (*v0 != 1) {
    unint64_t v1 = 0x50676E69796C6572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746172616C636564;
  }
}

uint64_t sub_2193B3CEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2193B6CF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2193B3D14(uint64_t a1)
{
  unint64_t v2 = sub_2193B6220();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2193B3D50(uint64_t a1)
{
  unint64_t v2 = sub_2193B6220();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ASPasskeyAttestationConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19B80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  uint64_t v13 = v1[3];
  uint64_t v14 = v7;
  uint64_t v12 = v1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193B6220();
  sub_2193E3260();
  char v19 = 0;
  uint64_t v8 = v15;
  sub_2193E30B0();
  if (!v8)
  {
    uint64_t v9 = v12;
    char v18 = 1;
    sub_2193E30B0();
    uint64_t v16 = v9;
    char v17 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C194F8);
    sub_2193B6274(&qword_267C19528);
    sub_2193E30D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ASPasskeyAttestationConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19B90);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_2193B6220();
  sub_2193E3240();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  char v24 = 0;
  uint64_t v9 = sub_2193E2FF0();
  uint64_t v11 = v10;
  uint64_t v20 = v9;
  char v23 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_2193E2FF0();
  uint64_t v14 = v13;
  uint64_t v18 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C194F8);
  char v22 = 2;
  sub_2193B6274((unint64_t *)&qword_267C1A2E0);
  uint64_t v19 = v14;
  swift_bridgeObjectRetain();
  sub_2193E3010();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = v19;
  *a2 = v20;
  a2[1] = v11;
  a2[2] = v18;
  a2[3] = v16;
  a2[4] = v15;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2193B426C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ASPasskeyAttestationConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2193B4284(void *a1)
{
  return ASPasskeyAttestationConfiguration.encode(to:)(a1);
}

uint64_t sub_2193B429C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_21938452C(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2193A0808();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_2193B12C0(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_2193B436C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_21938452C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v15 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_2193A0D64();
      uint64_t v11 = v15;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56) + 40 * v8;
    uint64_t v13 = *(void *)(v12 + 16);
    *(_OWORD *)a3 = *(_OWORD *)v12;
    *(void *)(a3 + 16) = v13;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(v12 + 24);
    sub_2193B1498(v8, v11);
    uint64_t *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_2193B4488(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_2193E3210();
  swift_bridgeObjectRetain();
  sub_2193E28D0();
  uint64_t v8 = sub_2193E3230();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_2193E3140() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_2193E3140() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_2193B50D4(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_2193B4638(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_2193E2D00();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_2193607AC(0, (unint64_t *)&unk_26AC27780);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_2193E2CF0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_2193B48D8(v7, result + 1);
    uint64_t v27 = v21;
    if (*(void *)(v21 + 24) <= *(void *)(v21 + 16))
    {
      id v25 = v8;
      sub_2193B4DB0();
      uint64_t v22 = v27;
    }
    else
    {
      uint64_t v22 = v21;
      id v23 = v8;
    }
    sub_2193B5050((uint64_t)v8, v22);
    *uint64_t v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_2193E2B70();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_2193607AC(0, (unint64_t *)&unk_26AC27780);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_2193E2B80();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        BOOL v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_2193E2B80();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_2193B5270((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_2193B48D8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C19BD0);
    uint64_t v2 = sub_2193E2D70();
    uint64_t v14 = v2;
    sub_2193E2CE0();
    if (sub_2193E2D10())
    {
      sub_2193607AC(0, (unint64_t *)&unk_26AC27780);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_2193B4DB0();
          uint64_t v2 = v14;
        }
        uint64_t result = sub_2193E2B70();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_2193E2D10());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v2;
}

uint64_t sub_2193B4AD0()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27748);
  uint64_t v3 = sub_2193E2D60();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                unint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_2193E3210();
      sub_2193E28D0();
      uint64_t result = sub_2193E3230();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v4;
  return result;
}

uint64_t sub_2193B4DB0()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C19BD0);
  uint64_t v3 = sub_2193E2D60();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                unint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = sub_2193E2B70();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v4;
  return result;
}

unint64_t sub_2193B5050(uint64_t a1, uint64_t a2)
{
  sub_2193E2B70();
  unint64_t result = sub_2193E2CD0();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_2193B50D4(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_2193B4AD0();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (uint64_t)sub_2193B53F8();
      goto LABEL_22;
    }
    sub_2193B5758();
  }
  uint64_t v11 = *v4;
  sub_2193E3210();
  sub_2193E28D0();
  unint64_t result = sub_2193E3230();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (unint64_t result = sub_2193E3140(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = sub_2193E3170();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          unint64_t result = sub_2193E3140();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *unint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void sub_2193B5270(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_2193B4DB0();
  }
  else
  {
    if (v7 > v6)
    {
      sub_2193B55AC();
      goto LABEL_14;
    }
    sub_2193B5A08();
  }
  uint64_t v8 = *v3;
  uint64_t v9 = sub_2193E2B70();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_2193607AC(0, (unint64_t *)&unk_26AC27780);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_2193E2B80();

    if (v12)
    {
LABEL_13:
      sub_2193E3170();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_2193E2B80();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

void *sub_2193B53F8()
{
  unint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27748);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2193E2D50();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_2193B55AC()
{
  unint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C19BD0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2193E2D50();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2193B5758()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27748);
  uint64_t v3 = sub_2193E2D60();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_2193E3210();
    swift_bridgeObjectRetain();
    sub_2193E28D0();
    uint64_t result = sub_2193E3230();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    unint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2193B5A08()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C19BD0);
  uint64_t v3 = sub_2193E2D60();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *unint64_t v1 = v4;
    return result;
  }
  BOOL v27 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    id v19 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_2193E2B70();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    unint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2193B5C84(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_2193E2F10();
    swift_bridgeObjectRelease();
  }
  sub_2193607AC(0, (unint64_t *)&unk_26AC27780);
  sub_2193B6E88();
  uint64_t result = sub_2193E2AA0();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_2193E2F10();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = (void *)MEMORY[0x21D4893F0](i, a1);
        sub_2193B4638(&v9, v6);
      }
    }
    else
    {
      uint64_t v7 = (void **)(a1 + 32);
      do
      {
        unint64_t v8 = *v7++;
        sub_2193B4638(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2193B5DD8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = result;
  int64_t v6 = 0;
  uint64_t v7 = result + 64;
  uint64_t v8 = 1 << *(unsigned char *)(result + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(result + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  int64_t v24 = v11;
  uint64_t v25 = result;
  while (1)
  {
LABEL_4:
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
    }
    else
    {
      int64_t v14 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_41;
      }
      if (v14 >= v11) {
        return 0;
      }
      unint64_t v15 = *(void *)(v7 + 8 * v14);
      ++v6;
      if (!v15)
      {
        int64_t v6 = v14 + 1;
        if (v14 + 1 >= v11) {
          return 0;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v6);
        if (!v15)
        {
          int64_t v6 = v14 + 2;
          if (v14 + 2 >= v11) {
            return 0;
          }
          unint64_t v15 = *(void *)(v7 + 8 * v6);
          if (!v15)
          {
            int64_t v6 = v14 + 3;
            if (v14 + 3 >= v11) {
              return 0;
            }
            unint64_t v15 = *(void *)(v7 + 8 * v6);
            if (!v15)
            {
              int64_t v16 = v14 + 4;
              if (v16 >= v11) {
                return 0;
              }
              unint64_t v15 = *(void *)(v7 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  int64_t v6 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_42;
                  }
                  if (v6 >= v11) {
                    return 0;
                  }
                  unint64_t v15 = *(void *)(v7 + 8 * v6);
                  ++v16;
                  if (v15) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v6 = v16;
            }
          }
        }
      }
LABEL_21:
      unint64_t v10 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
    }
    unint64_t v17 = *(void **)(*(void *)(v5 + 56) + 40 * v13 + 32);
    uint64_t v18 = v17[2];
    if (v18)
    {
      if (v17[4] == a2 && v17[5] == a3) {
        return 1;
      }
      uint64_t result = sub_2193E3140();
      if (result) {
        return 1;
      }
      if (v18 != 1) {
        break;
      }
    }
  }
  uint64_t v20 = v17 + 7;
  uint64_t v21 = 1;
  while (1)
  {
    uint64_t v22 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (*(v20 - 1) == a2 && *v20 == a3) {
      return 1;
    }
    uint64_t result = sub_2193E3140();
    if (result) {
      return 1;
    }
    v20 += 2;
    ++v21;
    if (v22 == v18)
    {
      int64_t v11 = v24;
      uint64_t v5 = v25;
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_2193B5FC8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2193B6018(uint64_t a1)
{
  return a1;
}

unint64_t sub_2193B6060()
{
  unint64_t result = qword_267C19B38;
  if (!qword_267C19B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19B38);
  }
  return result;
}

uint64_t sub_2193B60B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2193B60FC()
{
  unint64_t result = qword_267C19B58;
  if (!qword_267C19B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19B58);
  }
  return result;
}

uint64_t sub_2193B6150(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C19B48);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2193B61CC()
{
  unint64_t result = qword_267C19B78;
  if (!qword_267C19B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19B78);
  }
  return result;
}

unint64_t sub_2193B6220()
{
  unint64_t result = qword_267C19B88;
  if (!qword_267C19B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19B88);
  }
  return result;
}

uint64_t sub_2193B6274(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C194F8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2193B62D8()
{
  return type metadata accessor for ASManagedConfiguration();
}

uint64_t sub_2193B62E0()
{
  uint64_t result = sub_2193E1FF0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ASManagedConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ASManagedConfiguration);
}

uint64_t dispatch thunk of ASManagedConfiguration.allDeclarationKeys.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ASManagedConfiguration.isConfiguredForEnterpriseAttestation(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ASManagedConfiguration.entepriseAttestationIdentityPersistentReference(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ASManagedConfiguration.save(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ASManagedConfiguration.deletePasskeyAttestationConfiguration(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ASManagedConfiguration.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ASManagedConfiguration.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t destroy for ASPasskeyAttestationConfiguration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ASPasskeyAttestationConfiguration(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ASPasskeyAttestationConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ASPasskeyAttestationConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ASPasskeyAttestationConfiguration()
{
  return &type metadata for ASPasskeyAttestationConfiguration;
}

unsigned char *storeEnumTagSinglePayload for ASPasskeyAttestationConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2193B6788);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASPasskeyAttestationConfiguration.CodingKeys()
{
  return &type metadata for ASPasskeyAttestationConfiguration.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ASManagedConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2193B688CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASManagedConfiguration.CodingKeys()
{
  return &type metadata for ASManagedConfiguration.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ASManagedConfiguration.ManagedConfigurationError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2193B6960);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ASManagedConfiguration.ManagedConfigurationError()
{
  return &type metadata for ASManagedConfiguration.ManagedConfigurationError;
}

unint64_t sub_2193B699C()
{
  unint64_t result = qword_267C19B98;
  if (!qword_267C19B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19B98);
  }
  return result;
}

unint64_t sub_2193B69F4()
{
  unint64_t result = qword_267C19BA0;
  if (!qword_267C19BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19BA0);
  }
  return result;
}

unint64_t sub_2193B6A4C()
{
  unint64_t result = qword_267C19BA8;
  if (!qword_267C19BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19BA8);
  }
  return result;
}

unint64_t sub_2193B6AA4()
{
  unint64_t result = qword_267C19BB0;
  if (!qword_267C19BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19BB0);
  }
  return result;
}

unint64_t sub_2193B6AFC()
{
  unint64_t result = qword_267C19BB8;
  if (!qword_267C19BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19BB8);
  }
  return result;
}

unint64_t sub_2193B6B54()
{
  unint64_t result = qword_267C19BC0;
  if (!qword_267C19BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19BC0);
  }
  return result;
}

unint64_t sub_2193B6BAC()
{
  unint64_t result = qword_267C19BC8;
  if (!qword_267C19BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19BC8);
  }
  return result;
}

uint64_t sub_2193B6C00(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4C52557473696C70 && a2 == 0xE800000000000000;
  if (v2 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000032 && a2 == 0x80000002193F17D0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2193E3140();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2193B6CF0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746172616C636564 && a2 == 0xEE0079654B6E6F69;
  if (v2 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x80000002193F1810 || (sub_2193E3140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x50676E69796C6572 && a2 == 0xEE00736569747261)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2193E3140();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_2193B6E88()
{
  unint64_t result = qword_26AC27740;
  if (!qword_26AC27740)
  {
    sub_2193607AC(255, (unint64_t *)&unk_26AC27780);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC27740);
  }
  return result;
}

void sub_2193B6EF0(uint64_t a1, void *a2)
{
  int v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

id sub_2193B6F5C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27160);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  id v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  char v6 = (char *)&v16 - v5;
  uint64_t v7 = self;
  uint64_t v8 = v0;
  id v9 = objc_msgSend(v7, sel_defaultManager);
  id v10 = objc_msgSend(v9, sel_as_authenticationServicesManagedConfigurationURL);

  if (v10)
  {
    sub_2193E1FA0();

    uint64_t v11 = sub_2193E1FF0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 0, 1, v11);
  }
  else
  {
    uint64_t v12 = sub_2193E1FF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 1, 1, v12);
  }
  type metadata accessor for ASManagedConfiguration();
  sub_2193B9154((uint64_t)v4, (uint64_t)v6);
  unint64_t v13 = static ASManagedConfiguration.loadFromDisk(plistURL:)((uint64_t)v6);
  sub_2193513F0((uint64_t)v6);
  *(void *)&v8[OBJC_IVAR____TtC26AuthenticationServicesCore39ASPasskeyConfigurationSubscriberAdapter_currentConfiguration] = v13;

  int64_t v14 = (objc_class *)type metadata accessor for ASPasskeyConfigurationSubscriberAdapter();
  v17.receiver = v8;
  v17.super_class = v14;
  return objc_msgSendSuper2(&v17, sel_init);
}

uint64_t sub_2193B72F8()
{
  uint64_t v1 = *(void *)(v0
                 + OBJC_IVAR____TtC26AuthenticationServicesCore39ASPasskeyConfigurationSubscriberAdapter_currentConfiguration);
  unint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    goto LABEL_11;
  }
  swift_beginAccess();
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_2193B28B4(v3);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5)
  {
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:
    uint64_t v16 = sub_2193B5C84(v2);
    swift_bridgeObjectRelease();
    return v16;
  }
  unint64_t v17 = v2;
  sub_2193E2E30();
  int64_t v6 = sub_2193B8144(v4);
  int v8 = v7;
  char v10 = v9 & 1;
  uint64_t result = self;
  uint64_t v12 = (void *)result;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v4 + 32))
  {
    if (((*(void *)(v4 + 56 + (((unint64_t)v6 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
      goto LABEL_13;
    }
    if (*(_DWORD *)(v4 + 36) != v8) {
      goto LABEL_14;
    }
    swift_bridgeObjectRetain();
    unint64_t v13 = (void *)sub_2193E2830();
    objc_msgSend(v12, sel_newDeclarationKey_, v13);
    swift_bridgeObjectRelease();

    sub_2193E2E10();
    sub_2193E2E40();
    sub_2193E2E50();
    sub_2193E2E20();
    uint64_t result = sub_2193B81E4(v6, v8, v10 & 1, v4);
    int64_t v6 = result;
    int v8 = v14;
    char v10 = v15 & 1;
    if (!--v5)
    {
      sub_2193B82C8(result, v14, v15 & 1);
      unint64_t v2 = v17;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

id sub_2193B7564(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  swift_beginAccess();
  uint64_t v12 = *(void *)(a4 + 16);
  unint64_t v13 = *(void *)(a4 + 24);
  *(void *)(a4 + 16) = a1;
  *(void *)(a4 + 24) = a2;
  sub_21934CE48(a1, a2);
  sub_21934CEB0(v12, v13);
  swift_beginAccess();
  uint64_t v14 = *(void **)(a5 + 16);
  *(void *)(a5 + 16) = a3;
  id v15 = a3;

  return objc_msgSend(a6, sel_complete);
}

uint64_t sub_2193B7634(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v6 = v4;
    uint64_t v4 = (void *)sub_2193E2130();
    unint64_t v8 = v7;
  }
  else
  {
    swift_retain();
    unint64_t v8 = 0xF000000000000000;
  }
  id v9 = a3;
  v5(v4, v8, a3);

  sub_21934CEB0((uint64_t)v4, v8);

  return swift_release();
}

void sub_2193B7784(void *a1, uint64_t a2)
{
  if (qword_26AC26FA0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_2193E24F0();
  __swift_project_value_buffer(v3, (uint64_t)qword_26AC29130);
  id v4 = a1;
  uint64_t v5 = sub_2193E24D0();
  os_log_type_t v6 = sub_2193E2B00();
  unint64_t v40 = v4;
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    unint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412546;
    id v9 = v4;
    sub_2193E2C00();
    *unint64_t v8 = v4;

    *(_WORD *)(v7 + 12) = 2048;
    uint64_t aBlock = a2;
    sub_2193E2C00();
    _os_log_impl(&dword_219326000, v5, v6, "Removing declaration: %@, scope: %ld", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27170);
    swift_arrayDestroy();
    MEMORY[0x21D48A390](v8, -1, -1);
    MEMORY[0x21D48A390](v7, -1, -1);
  }
  else
  {
  }
  sub_2193607AC(0, &qword_267C19C50);
  if (objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_respondsToSelector_, sel_unassignAssets_scope_completionHandler_))
  {
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = 0;
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F635D8]), sel_init);
    uint64_t v12 = self;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v10;
    *(void *)(v13 + 24) = v11;
    int v46 = sub_2193B80D0;
    uint64_t v47 = v13;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v43 = 1107296256;
    long long v44 = sub_2193B6EF0;
    long long v45 = &block_descriptor_0;
    uint64_t v14 = _Block_copy(&aBlock);
    swift_retain();
    id v15 = v11;
    swift_release();
    objc_msgSend(v12, sel_unassignAssets_scope_completionHandler_, v40, a2, v14);
    _Block_release(v14);
    objc_msgSend(v15, sel_waitForCompletion);
    swift_beginAccess();
    long long v38 = v15;
    if (*(void *)(v10 + 16))
    {
      swift_retain_n();
      uint64_t v16 = sub_2193E24D0();
      os_log_type_t v17 = sub_2193E2AE0();
      if (!os_log_type_enabled(v16, v17))
      {

        swift_release_n();
LABEL_23:
        sub_2193B80F0();
        swift_allocError();
        *uint64_t v37 = 2;
        swift_willThrow();
        swift_release();

        return;
      }
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t aBlock = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      uint64_t v20 = *(void **)(v10 + 16);
      if (v20)
      {
        swift_getErrorValue();
        id v21 = v20;
        uint64_t v22 = sub_2193E31B0();
        unint64_t v24 = v23;
      }
      else
      {
        unint64_t v24 = 0xE500000000000000;
        uint64_t v22 = 0x3E6C696E3CLL;
      }
      sub_21934C764(v22, v24, &aBlock);
      sub_2193E2C00();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_219326000, v16, v17, "Unable to remove attestation certification from keychain: %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x21D48A390](v19, -1, -1);
    }
    else
    {
      uint64_t v28 = *(void **)(v39
                     + OBJC_IVAR____TtC26AuthenticationServicesCore39ASPasskeyConfigurationSubscriberAdapter_currentConfiguration);
      if (v28)
      {
        id v29 = v28;
        id v30 = objc_msgSend(v40, sel_key);
        uint64_t v31 = sub_2193E2840();
        uint64_t v33 = v32;

        swift_beginAccess();
        sub_2193B436C(v31, v33, (uint64_t)&aBlock);
        uint64_t v34 = aBlock;
        uint64_t v35 = v43;
        swift_endAccess();
        sub_2193B5FC8(v34, v35);
        sub_2193B2F5C();
        swift_release();

        swift_bridgeObjectRelease();
        return;
      }
      uint64_t v16 = sub_2193E24D0();
      os_log_type_t v36 = sub_2193E2AF0();
      if (!os_log_type_enabled(v16, v36)) {
        goto LABEL_22;
      }
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_219326000, v16, v36, "Existing configuration is invalid", v18, 2u);
    }
    MEMORY[0x21D48A390](v18, -1, -1);
LABEL_22:

    goto LABEL_23;
  }
  uint64_t v25 = sub_2193E24D0();
  os_log_type_t v26 = sub_2193E2AF0();
  if (os_log_type_enabled(v25, v26))
  {
    BOOL v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v27 = 0;
    _os_log_impl(&dword_219326000, v25, v26, "RemoteManagement is too old on this build. Please update.", v27, 2u);
    MEMORY[0x21D48A390](v27, -1, -1);
  }
}

id sub_2193B7E30(void *a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  os_log_type_t v6 = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = a1;
  id v7 = a1;

  return objc_msgSend(a3, sel_complete);
}

id sub_2193B7FF0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ASPasskeyConfigurationSubscriberAdapter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ASPasskeyConfigurationSubscriberAdapter()
{
  return self;
}

uint64_t sub_2193B8058()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2193B8090()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

id sub_2193B80D0(void *a1)
{
  return sub_2193B7E30(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t sub_2193B80F0()
{
  unint64_t result = qword_267C19C58;
  if (!qword_267C19C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19C58);
  }
  return result;
}

uint64_t sub_2193B8144(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  id v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_2193B81E4(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (unint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_2193B82C8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_2193B82D4(void *a1, uint64_t a2)
{
  sub_2193607AC(0, (unint64_t *)&unk_267C19C68);
  if (!objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_respondsToSelector_, sel_resolveKeychainAsset_assetIdentifier_accessGroup_completionHandler_))
  {
    if (qword_26AC26FA0 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_2193E24F0();
    __swift_project_value_buffer(v16, (uint64_t)qword_26AC29130);
    os_log_type_t v17 = sub_2193E24D0();
    os_log_type_t v18 = sub_2193E2AF0();
    if (!os_log_type_enabled(v17, v18)) {
      goto LABEL_13;
    }
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    uint64_t v20 = "RemoteManagement is too old on this build. Please update.";
    goto LABEL_12;
  }
  if (a2 != 1)
  {
    if (qword_26AC26FA0 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_2193E24F0();
    __swift_project_value_buffer(v22, (uint64_t)qword_26AC29130);
    unint64_t v23 = sub_2193E24D0();
    os_log_type_t v24 = sub_2193E2AE0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_219326000, v23, v24, "Attempted to use passkey attestation configuration for unexpected scope", v25, 2u);
      MEMORY[0x21D48A390](v25, -1, -1);
    }

    sub_2193B80F0();
    swift_allocError();
    *os_log_type_t v26 = 0;
    goto LABEL_19;
  }
  unint64_t v5 = *(void **)(v2
                + OBJC_IVAR____TtC26AuthenticationServicesCore39ASPasskeyConfigurationSubscriberAdapter_currentConfiguration);
  if (!v5)
  {
    if (qword_26AC26FA0 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_2193E24F0();
    __swift_project_value_buffer(v27, (uint64_t)qword_26AC29130);
    os_log_type_t v17 = sub_2193E24D0();
    os_log_type_t v18 = sub_2193E2AF0();
    if (!os_log_type_enabled(v17, v18)) {
      goto LABEL_13;
    }
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    uint64_t v20 = "Existing configuration is invalid";
LABEL_12:
    _os_log_impl(&dword_219326000, v17, v18, v20, v19, 2u);
    MEMORY[0x21D48A390](v19, -1, -1);
LABEL_13:

    sub_2193B80F0();
    swift_allocError();
    *id v21 = 2;
LABEL_19:
    swift_willThrow();
    return;
  }
  uint64_t v6 = qword_26AC26FA0;
  unint64_t v7 = v5;
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_2193E24F0();
  __swift_project_value_buffer(v8, (uint64_t)qword_26AC29130);
  id v9 = a1;
  unint64_t v10 = sub_2193E24D0();
  os_log_type_t v11 = sub_2193E2B00();
  id v93 = v9;
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 138412546;
    uint64_t v14 = v7;
    id v15 = v9;
    sub_2193E2C00();
    *uint64_t v13 = v9;

    unint64_t v7 = v14;
    *(_WORD *)(v12 + 12) = 2048;
    aBlock[0] = 1;
    sub_2193E2C00();
    _os_log_impl(&dword_219326000, v10, v11, "Applying configuration: %@, scope: %ld", (uint8_t *)v12, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27170);
    swift_arrayDestroy();
    MEMORY[0x21D48A390](v13, -1, -1);
    MEMORY[0x21D48A390](v12, -1, -1);
  }
  else
  {
  }
  uint64_t v28 = self;
  id v29 = (void *)sub_2193E2830();
  id v30 = objc_msgSend(v28, sel_newDeclarationKeyWithSubscriberIdentifier_reference_, v29, v9);
  uint64_t v31 = v9;
  uint64_t v32 = v30;

  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_2193E7220;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = 0;
  uint64_t v35 = (void **)(v34 + 16);
  id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F635D8]), sel_init);
  id v37 = objc_msgSend(v31, sel_declaration);
  v98[7] = &unk_26CACEFC8;
  long long v38 = (void *)swift_dynamicCastObjCProtocolConditional();
  if (v38
    && (uint64_t v39 = v38,
        uint64_t v92 = v37,
        (objc_msgSend(v38, sel_respondsToSelector_, sel_payloadAttestationIdentityAssetReference) & 1) != 0))
  {
    unint64_t v90 = v32;
    uint64_t v91 = v34;
    id v40 = objc_msgSend(v39, sel_payloadAttestationIdentityAssetReference);
    sub_2193E2840();

    if (objc_msgSend(v39, sel_respondsToSelector_, sel_payloadRelyingParties))
    {
      id v41 = objc_msgSend(v39, sel_payloadRelyingParties);
      uint64_t v42 = sub_2193E2A10();

      uint64_t v43 = (void *)sub_2193E2830();
      swift_bridgeObjectRelease();
      id v44 = objc_msgSend(v93, sel_assetWithIdentifier_, v43);

      if (!v44)
      {
        swift_bridgeObjectRelease();
        unint64_t v65 = sub_2193E24D0();
        os_log_type_t v66 = sub_2193E2AE0();
        if (os_log_type_enabled(v65, v66))
        {
          uint64_t v67 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v67 = 0;
          _os_log_impl(&dword_219326000, v65, v66, "Could not find attestation certificate reference", v67, 2u);
          MEMORY[0x21D48A390](v67, -1, -1);
        }

        sub_2193B80F0();
        swift_allocError();
        *uint64_t v68 = 0;
        swift_willThrow();

        swift_release();
        swift_release();

        unint64_t v69 = v92;
        goto LABEL_55;
      }
      uint64_t v89 = v7;
      id v87 = v44;
      id v45 = objc_msgSend(v44, sel_declarationIdentifier);
      if (!v45)
      {
        sub_2193E2840();
        id v45 = (id)sub_2193E2830();
        swift_bridgeObjectRelease();
      }
      id v88 = self;
      int v46 = (void *)sub_2193E2830();
      uint64_t v47 = (void *)swift_allocObject();
      v47[2] = v33;
      v47[3] = v91;
      v47[4] = v36;
      aBlock[4] = sub_2193B9148;
      aBlock[5] = v47;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_2193B7634;
      aBlock[3] = &block_descriptor_18;
      uint64_t v48 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      id v49 = v36;
      swift_release();
      objc_msgSend(v88, sel_resolveKeychainAsset_assetIdentifier_accessGroup_completionHandler_, v93, v45, v46, v48);
      _Block_release(v48);

      objc_msgSend(v49, sel_waitForCompletion);
      swift_beginAccess();
      unint64_t v50 = *(void *)(v33 + 24);
      if (v50 >> 60 == 15)
      {
        swift_bridgeObjectRelease();
        swift_retain_n();
        objc_super v51 = sub_2193E24D0();
        os_log_type_t v52 = sub_2193E2AE0();
        id v53 = v89;
        if (os_log_type_enabled(v51, v52))
        {
          id v94 = v49;
          long long v54 = (uint8_t *)swift_slowAlloc();
          uint64_t v55 = swift_slowAlloc();
          uint64_t v96 = v55;
          *(_DWORD *)long long v54 = 136315138;
          swift_beginAccess();
          long long v56 = *v35;
          if (*v35)
          {
            swift_getErrorValue();
            id v57 = v56;
            uint64_t v58 = sub_2193E31B0();
            unint64_t v60 = v59;
          }
          else
          {
            unint64_t v60 = 0xE500000000000000;
            uint64_t v58 = 0x3E6C696E3CLL;
          }
          sub_21934C764(v58, v60, &v96);
          sub_2193E2C00();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_219326000, v51, v52, "Could not resolve attestation certificate asset: %s", v54, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x21D48A390](v55, -1, -1);
          MEMORY[0x21D48A390](v54, -1, -1);

          id v53 = v89;
          uint64_t v81 = v90;
          id v49 = v94;
        }
        else
        {

          swift_release_n();
          uint64_t v81 = v90;
        }
        sub_2193B80F0();
        swift_allocError();
        *uint64_t v86 = 1;
        swift_willThrow();

        swift_release();
      }
      else
      {
        uint64_t v70 = *(void *)(v33 + 16);
        uint64_t v71 = *(void *)(v42 + 16);
        sub_21934CDF0(v70, v50);
        if (v71)
        {
          id v95 = v49;
          id v72 = objc_msgSend(v90, sel_key);
          uint64_t v73 = sub_2193E2840();
          uint64_t v75 = v74;

          uint64_t v76 = sub_2193E2120();
          v98[0] = v73;
          v98[1] = v75;
          v98[2] = v76;
          v98[3] = v77;
          v98[4] = v42;
          unint64_t v78 = (uint64_t *)&v89[OBJC_IVAR____TtC26AuthenticationServicesCore22ASManagedConfiguration_declarationKeyToPasskeyAttestationConfigurationKey];
          swift_beginAccess();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v96 = *v78;
          uint64_t *v78 = 0x8000000000000000;
          sub_2193A0360((uint64_t)v98, v73, v75, isUniquelyReferenced_nonNull_native);
          uint64_t *v78 = v96;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
          sub_2193B2F5C();

          sub_21934CEB0(v70, v50);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          uint64_t v80 = v90;
LABEL_54:

          unint64_t v69 = v87;
LABEL_55:

          return;
        }
        swift_bridgeObjectRelease();
        long long v82 = sub_2193E24D0();
        os_log_type_t v83 = sub_2193E2AE0();
        if (os_log_type_enabled(v82, v83))
        {
          uint64_t v84 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v84 = 0;
          _os_log_impl(&dword_219326000, v82, v83, "No relying parties specified", v84, 2u);
          MEMORY[0x21D48A390](v84, -1, -1);
        }

        sub_2193B80F0();
        swift_allocError();
        *unint64_t v85 = 0;
        swift_willThrow();
        sub_21934CEB0(v70, v50);

        swift_release();
      }
      swift_release();

      uint64_t v80 = v92;
      goto LABEL_54;
    }

    swift_bridgeObjectRelease();
  }
  else
  {
  }
  uint64_t v61 = sub_2193E24D0();
  os_log_type_t v62 = sub_2193E2AE0();
  if (os_log_type_enabled(v61, v62))
  {
    long long v63 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v63 = 0;
    _os_log_impl(&dword_219326000, v61, v62, "Could not find expected declaration", v63, 2u);
    MEMORY[0x21D48A390](v63, -1, -1);
  }

  sub_2193B80F0();
  swift_allocError();
  *long long v64 = 0;
  swift_willThrow();

  swift_release();
  swift_release();
}

uint64_t sub_2193B90B8()
{
  unint64_t v1 = *(void *)(v0 + 24);
  if (v1 >> 60 != 15) {
    sub_219348A70(*(void *)(v0 + 16), v1);
  }

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2193B9100()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

id sub_2193B9148(uint64_t a1, unint64_t a2, void *a3)
{
  return sub_2193B7564(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void **)(v3 + 32));
}

uint64_t sub_2193B9154(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for ASPasskeyConfigurationSubscriberAdapter.AdapterError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2193B9288);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASPasskeyConfigurationSubscriberAdapter.AdapterError()
{
  return &type metadata for ASPasskeyConfigurationSubscriberAdapter.AdapterError;
}

unint64_t sub_2193B92C4()
{
  unint64_t result = qword_267C19C78;
  if (!qword_267C19C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19C78);
  }
  return result;
}

uint64_t static ASPasskeyConfigurationSubscriberApplicator.supportedConfigurationTypes()()
{
  uint64_t v0 = sub_2193B9548((uint64_t)&unk_26CAB4D50);
  swift_arrayDestroy();
  return v0;
}

id ASPasskeyConfigurationSubscriberApplicator.__allocating_init(adapter:inPlaceUpdates:)(uint64_t a1, char a2)
{
  id v3 = objc_msgSend(objc_allocWithZone(v2), sel_initWithAdapter_inPlaceUpdates_, a1, a2 & 1);
  swift_unknownObjectRelease();
  return v3;
}

void ASPasskeyConfigurationSubscriberApplicator.init(adapter:inPlaceUpdates:)()
{
}

id ASPasskeyConfigurationSubscriberApplicator.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ASPasskeyConfigurationSubscriberApplicator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2193B9548(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27748);
    uint64_t v3 = sub_2193E2D80();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      unsigned int v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_2193E3210();
      swift_bridgeObjectRetain();
      sub_2193E28D0();
      uint64_t result = sub_2193E3230();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_2193E3140(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_2193E3140();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      id v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *id v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t type metadata accessor for ASPasskeyConfigurationSubscriberApplicator()
{
  return self;
}

uint64_t sub_2193B9710(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  if (qword_267C189A8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_2193E24F0();
  __swift_project_value_buffer(v8, (uint64_t)qword_267C29598);
  swift_bridgeObjectRetain_n();
  id v9 = sub_2193E24D0();
  os_log_type_t v10 = sub_2193E2AC0();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v18 = v12;
    *(_DWORD *)unint64_t v11 = 136315138;
    if (a2)
    {
      swift_bridgeObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27168);
      if (swift_dynamicCast())
      {
        swift_getErrorValue();
        uint64_t v13 = sub_2193E31B0();
        unint64_t v15 = v14;

        swift_bridgeObjectRelease();
      }
      else
      {
        sub_2193E2E60();
        swift_bridgeObjectRelease();
        uint64_t v13 = 0;
        unint64_t v15 = 0xE000000000000000;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v15 = 0xE500000000000000;
      uint64_t v13 = 0x3E6C696E3CLL;
    }
    sub_21934C764(v13, v15, &v18);
    sub_2193E2C00();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_219326000, v9, v10, "Socket connected with protocol: %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D48A390](v12, -1, -1);
    MEMORY[0x21D48A390](v11, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *(unsigned char *)(a3 + OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_isConnected) = 1;
  if (a4) {
    a4(a1, a2);
  }
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_2193E2B40();
  return swift_release_n();
}

uint64_t sub_2193B9A28(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v3 = (void *)result;
    if (qword_267C189A8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_2193E24F0();
    __swift_project_value_buffer(v4, (uint64_t)qword_267C29598);
    id v5 = v3;
    unsigned int v6 = sub_2193E24D0();
    os_log_type_t v7 = sub_2193E2AE0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      id v9 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412290;
      uint64_t v13 = sub_2193E1F60();
      sub_2193E2C00();
      *id v9 = v13;

      _os_log_impl(&dword_219326000, v6, v7, "Send error: %@", v8, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27170);
      swift_arrayDestroy();
      MEMORY[0x21D48A390](v9, -1, -1);
      MEMORY[0x21D48A390](v8, -1, -1);
    }
    else
    {
    }
    uint64_t v10 = a2 + OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_delegate;
    uint64_t result = MEMORY[0x21D48A480](a2 + OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_delegate);
    if (result)
    {
      uint64_t v11 = *(void *)(v10 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v11 + 24))(a2, v3, ObjectType, v11);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_2193B9C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C19E30);
  MEMORY[0x270FA5388](v4);
  unsigned int v6 = (char *)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x21D48A480](a2 + 16);
  if (!v7) {
    return;
  }
  uint64_t v8 = v7;
  sub_219360574(a1, (uint64_t)v6, (uint64_t *)&unk_267C19E30);
  id v9 = &unk_267C19000;
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v20 = sub_2193E2B30();
    uint64_t v21 = *(void *)(v20 - 8);
    int v22 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v6, v20);
    if (v22 == *MEMORY[0x263F07CB8])
    {
      (*(void (**)(char *, uint64_t))(v21 + 96))(v6, v20);
      id v24 = *(id *)v6;
      unint64_t v23 = *((void *)v6 + 1);
      uint64_t v25 = (char *)v8 + OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_delegate;
      if (MEMORY[0x21D48A480]((char *)v8 + OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_delegate))
      {
        uint64_t v26 = *((void *)v25 + 1);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(NSObject *, id, unint64_t, uint64_t, uint64_t))(v26 + 8))(v8, v24, v23, ObjectType, v26);
        swift_unknownObjectRelease();
      }
      sub_219348A70((uint64_t)v24, v23);
    }
    else if (v22 == *MEMORY[0x263F07CC0])
    {
      (*(void (**)(char *, uint64_t))(v21 + 96))(v6, v20);
      id v29 = *(id *)v6;
      uint64_t v28 = *((void *)v6 + 1);
      id v30 = (char *)v8 + OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_delegate;
      if (MEMORY[0x21D48A480]((char *)v8 + OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_delegate))
      {
        uint64_t v31 = *((void *)v30 + 1);
        uint64_t v32 = swift_getObjectType();
        (*(void (**)(NSObject *, id, uint64_t, uint64_t, uint64_t))(v31 + 16))(v8, v29, v28, v32, v31);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      if (qword_267C189A8 != -1) {
        swift_once();
      }
      uint64_t v49 = sub_2193E24F0();
      __swift_project_value_buffer(v49, (uint64_t)qword_267C29598);
      unint64_t v50 = sub_2193E24D0();
      os_log_type_t v51 = sub_2193E2AF0();
      if (os_log_type_enabled(v50, v51))
      {
        os_log_type_t v52 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v52 = 0;
        _os_log_impl(&dword_219326000, v50, v51, "Received response with unknown type", v52, 2u);
        MEMORY[0x21D48A390](v52, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v20);
    }
    goto LABEL_36;
  }
  id v57 = *(id *)v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27168);
  sub_2193BB9B4();
  if (!swift_dynamicCast())
  {
    sub_2193E3130();
    __break(1u);
    return;
  }
  uint64_t v10 = (void *)v56[3];
  if (qword_267C189A8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_2193E24F0();
  uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)qword_267C29598);
  uint64_t v13 = v10;
  unint64_t v14 = sub_2193E24D0();
  os_log_type_t v15 = sub_2193E2AE0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    v56[1] = v12;
    v56[2] = v13;
    uint64_t v18 = (void *)v17;
    *(_DWORD *)uint64_t v16 = 138412290;
    uint64_t v19 = v13;
    id v9 = (void *)&unk_267C19000;
    sub_2193E2C00();
    void *v18 = v13;

    _os_log_impl(&dword_219326000, v14, v15, "Receive error: %@", v16, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AC27170);
    swift_arrayDestroy();
    MEMORY[0x21D48A390](v18, -1, -1);
    MEMORY[0x21D48A390](v16, -1, -1);
  }
  else
  {

    unint64_t v14 = v13;
  }

  id v33 = [v13 domain];
  uint64_t v34 = sub_2193E2840();
  uint64_t v36 = v35;

  if (v34 == sub_2193E1CA0() && v36 == v37)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v38 = sub_2193E3140();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v38 & 1) == 0)
    {
LABEL_25:
      id v44 = (char *)v8 + OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_delegate;
      if (MEMORY[0x21D48A480]((char *)v8 + OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_delegate))
      {
        uint64_t v45 = *((void *)v44 + 1);
        uint64_t v46 = swift_getObjectType();
        uint64_t v47 = *(void (**)(NSObject *, NSObject *, uint64_t, uint64_t))(v45 + 24);
        uint64_t v48 = v13;
        v47(v8, v48, v46, v45);
        swift_unknownObjectRelease();
      }
      *((unsigned char *)&v8->isa + v9[427]) = 0;

LABEL_36:
      if (*((unsigned char *)&v8->isa + v9[427]) == 1)
      {
        swift_allocObject();
        swift_unknownObjectWeakInit();
        swift_retain();
        sub_2193E2B40();

        swift_release_n();
      }
      else
      {
      }
      return;
    }
  }
  id v39 = [v13 code];
  sub_2193E1CB0();
  if (v39 != (id)(int)sub_2193E2590()) {
    goto LABEL_25;
  }
  char v40 = *((unsigned char *)&v8->isa + v9[427]);
  id v41 = sub_2193E24D0();
  if (v40)
  {
    os_log_type_t v42 = sub_2193E2AE0();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl(&dword_219326000, v41, v42, "Socket unexpectedly disconnected", v43, 2u);
      MEMORY[0x21D48A390](v43, -1, -1);
    }

    goto LABEL_25;
  }
  os_log_type_t v53 = sub_2193E2AC0();
  if (os_log_type_enabled(v41, v53))
  {
    long long v54 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v54 = 0;
    _os_log_impl(&dword_219326000, v41, v53, "Ignoring disconnection after socket closed.", v54, 2u);
    MEMORY[0x21D48A390](v54, -1, -1);
    uint64_t v55 = v13;
  }
  else
  {
    uint64_t v55 = v41;
    id v41 = v8;
    uint64_t v8 = v13;
  }
}

uint64_t sub_2193BA674(void *a1, void *a2, void *a3, void *aBlock, void *a5)
{
  v5[4] = a3;
  v5[5] = a5;
  _OWORD v5[2] = a1;
  v5[3] = a2;
  v5[6] = _Block_copy(aBlock);
  os_log_type_t v15 = (uint64_t (*)(uint64_t))((char *)&dword_267C19E10 + dword_267C19E10);
  id v10 = a1;
  id v11 = a2;
  id v12 = a3;
  a5;
  uint64_t v13 = (void *)swift_task_alloc();
  v5[7] = v13;
  *uint64_t v13 = v5;
  v13[1] = sub_2193BA768;
  return v15((uint64_t)v12);
}

uint64_t sub_2193BA768(uint64_t a1, void *a2)
{
  uint64_t v5 = *(void (***)(void, void, void))(*v2 + 48);
  unsigned int v6 = *(void **)(*v2 + 40);
  uint64_t v7 = *(void **)(*v2 + 32);
  uint64_t v8 = *(void **)(*v2 + 24);
  id v9 = *(void **)(*v2 + 16);
  uint64_t v12 = *v2;
  swift_task_dealloc();

  ((void (**)(void, uint64_t, void *))v5)[2](v5, a1, a2);
  _Block_release(v5);

  id v10 = *(uint64_t (**)(void))(v12 + 8);
  return v10();
}

id sub_2193BA944()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ASWebSocket();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ASWebSocket()
{
  return self;
}

uint64_t sub_2193BAA1C()
{
  _Block_release(*(const void **)(v0 + 40));

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_2193BAA74()
{
  objc_super v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)v0[5];
  unsigned int v6 = (void *)v0[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  void *v7 = v1;
  v7[1] = sub_219387504;
  uint64_t v8 = (uint64_t (*)(void *, void *, void *, void *, void *))((char *)&dword_267C19DF0 + dword_267C19DF0);
  return v8(v2, v3, v4, v5, v6);
}

uint64_t sub_2193BAB44(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v68 = a6;
  uint64_t v66 = a2;
  uint64_t v13 = sub_2193E1FF0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_2193E1D00();
  uint64_t v69 = *(void *)(v17 - 8);
  uint64_t v70 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  v59[0] = (char *)v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v59 - v20;
  *(void *)&v7[OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v7[OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_isConnected] = 0;
  int v22 = &v7[OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_connectionCompletionHandler];
  *int v22 = 0;
  v22[1] = 0;
  unint64_t v23 = &v7[OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_testDelegate];
  *(_OWORD *)unint64_t v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  *((void *)v23 + 4) = 0;
  uint64_t v64 = a7;
  v59[1] = a5;
  uint64_t v67 = (uint64_t)v23;
  if (a4)
  {
    id v24 = v7;
    id v25 = a4;
  }
  else
  {
    uint64_t v26 = self;
    uint64_t v27 = v7;
    id v25 = objc_msgSend(v26, sel_sharedSession);
  }
  uint64_t v61 = v7;
  uint64_t v60 = OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_urlSession;
  *(void *)&v7[OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_urlSession] = v25;
  uint64_t v62 = v14;
  uint64_t v63 = v13;
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v65 = a1;
  v28(v16, a1, v13);
  id v29 = a4;
  uint64_t result = sub_2193E1CD0();
  int64_t v31 = 0;
  uint64_t v32 = a3 + 64;
  uint64_t v33 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v34 = -1;
  if (v33 < 64) {
    uint64_t v34 = ~(-1 << v33);
  }
  uint64_t v35 = v34 & *(void *)(a3 + 64);
  int64_t v36 = (unint64_t)(v33 + 63) >> 6;
  while (1)
  {
    if (v35)
    {
      v35 &= v35 - 1;
      goto LABEL_8;
    }
    int64_t v37 = v31 + 1;
    if (__OFADD__(v31, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v37 >= v36) {
      goto LABEL_24;
    }
    uint64_t v38 = *(void *)(v32 + 8 * v37);
    ++v31;
    if (!v38)
    {
      int64_t v31 = v37 + 1;
      if (v37 + 1 >= v36) {
        goto LABEL_24;
      }
      uint64_t v38 = *(void *)(v32 + 8 * v31);
      if (!v38)
      {
        int64_t v31 = v37 + 2;
        if (v37 + 2 >= v36) {
          goto LABEL_24;
        }
        uint64_t v38 = *(void *)(v32 + 8 * v31);
        if (!v38) {
          break;
        }
      }
    }
LABEL_23:
    uint64_t v35 = (v38 - 1) & v38;
LABEL_8:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2193E1CE0();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v39 = v37 + 3;
  if (v39 < v36)
  {
    uint64_t v38 = *(void *)(v32 + 8 * v39);
    if (!v38)
    {
      while (1)
      {
        int64_t v31 = v39 + 1;
        if (__OFADD__(v39, 1)) {
          goto LABEL_33;
        }
        if (v31 >= v36) {
          goto LABEL_24;
        }
        uint64_t v38 = *(void *)(v32 + 8 * v31);
        ++v39;
        if (v38) {
          goto LABEL_23;
        }
      }
    }
    int64_t v31 = v39;
    goto LABEL_23;
  }
LABEL_24:
  swift_release();
  if (*(void *)(v66 + 16))
  {
    v74[0] = v66;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267C194F8);
    sub_2193BBA5C();
    sub_2193E27E0();
    swift_bridgeObjectRelease();
    sub_2193E1CE0();
  }
  swift_bridgeObjectRelease();
  uint64_t v41 = v64;
  uint64_t v40 = v65;
  uint64_t v43 = v62;
  uint64_t v42 = v63;
  id v44 = v61;
  sub_219360574(v64, (uint64_t)&v72, &qword_267C19E18);
  if (v73)
  {
    sub_21935D0F0(&v72, (uint64_t)v74);
    uint64_t v45 = v75;
    uint64_t v46 = v76;
    __swift_project_boxed_opaque_existential_1Tm(v74, v75);
    uint64_t v47 = v59[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 8))(v21, v45, v46);
    uint64_t v49 = v69;
    uint64_t v48 = v70;
    (*(void (**)(char *, uint64_t))(v69 + 8))(v21, v70);
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v21, v47, v48);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v74);
  }
  else
  {
    sub_2193BB85C((uint64_t)&v72);
  }
  id v50 = *(id *)&v44[v60];
  os_log_type_t v51 = (void *)sub_2193E1CC0();
  id v52 = objc_msgSend(v50, sel_webSocketTaskWithRequest_, v51);

  *(void *)&v44[OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_webSocketTask] = v52;
  if (v68)
  {
    uint64_t v53 = sub_2193E28B0();
    id v54 = v52;
    swift_bridgeObjectRelease();
    nw_endpoint_t host = nw_endpoint_create_host((const char *)(v53 + 32), "https");
    swift_release();
    objc_msgSend(v54, sel_set_hostOverride_, host);

    swift_unknownObjectRelease();
  }
  uint64_t v56 = v67;
  swift_beginAccess();
  sub_2193BB9F4(v41, v56);
  swift_endAccess();

  id v57 = (objc_class *)type metadata accessor for ASWebSocket();
  v71.receiver = v44;
  v71.super_class = v57;
  uint64_t v58 = (char *)objc_msgSendSuper2(&v71, sel_init);
  objc_msgSend(*(id *)&v58[OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_webSocketTask], sel_setDelegate_, v58);
  sub_2193BB85C(v41);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v40, v42);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v21, v70);
  return (uint64_t)v58;
}

void sub_2193BB1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_267C189A8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_2193E24F0();
  __swift_project_value_buffer(v6, (uint64_t)qword_267C29598);
  uint64_t v7 = sub_2193E24D0();
  os_log_type_t v8 = sub_2193E2AC0();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v9 = 0;
    _os_log_impl(&dword_219326000, v7, v8, "Opened socket", v9, 2u);
    MEMORY[0x21D48A390](v9, -1, -1);
  }

  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v3
                                                + OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_connectionCompletionHandler);
  if (v10)
  {
    swift_retain();
    v10(a1, a2);
    sub_219360334((uint64_t)v10);
  }
}

void sub_2193BB2E8(void *a1)
{
  uint64_t v2 = v1;
  if (qword_267C189A8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_2193E24F0();
  __swift_project_value_buffer(v4, (uint64_t)qword_267C29598);
  id v5 = a1;
  id v6 = a1;
  uint64_t v7 = sub_2193E24D0();
  os_log_type_t v8 = sub_2193E2AE0();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v21 = v10;
    *(_DWORD *)id v9 = 136315138;
    if (a1)
    {
      swift_getErrorValue();
      id v11 = a1;
      uint64_t v12 = sub_2193E31B0();
      unint64_t v14 = v13;
    }
    else
    {
      unint64_t v14 = 0xE500000000000000;
      uint64_t v12 = 0x3E6C696E3CLL;
    }
    sub_21934C764(v12, v14, &v21);
    sub_2193E2C00();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_219326000, v7, v8, "Could not connect: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x21D48A390](v10, -1, -1);
    MEMORY[0x21D48A390](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v15 = v2 + OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_delegate;
  if (MEMORY[0x21D48A480](v2 + OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_delegate))
  {
    uint64_t v16 = *(void *)(v15 + 8);
    uint64_t v17 = a1;
    if (!a1)
    {
      sub_2193BB920();
      uint64_t v17 = (void *)swift_allocError();
    }
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v19 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v16 + 24);
    id v20 = a1;
    v19(v2, v17, ObjectType, v16);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_2193BB57C(uint64_t a1)
{
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = v1;
  return MEMORY[0x270FA2498](sub_2193BB59C, 0, 0);
}

void sub_2193BB59C()
{
  if (qword_267C189A8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_2193E24F0();
  __swift_project_value_buffer(v1, (uint64_t)qword_267C29598);
  uint64_t v2 = sub_2193E24D0();
  os_log_type_t v3 = sub_2193E2AC0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_219326000, v2, v3, "Received server challenge", v4, 2u);
    MEMORY[0x21D48A390](v4, -1, -1);
  }
  uint64_t v5 = v0[16];

  uint64_t v6 = v5 + OBJC_IVAR____TtC26AuthenticationServicesCore11ASWebSocket_testDelegate;
  swift_beginAccess();
  sub_219360574(v6, (uint64_t)(v0 + 2), &qword_267C19E18);
  if (!v0[5])
  {
    sub_2193BB85C((uint64_t)(v0 + 2));
    goto LABEL_12;
  }
  uint64_t v7 = v0[15];
  sub_2193BB8BC((uint64_t)(v0 + 2), (uint64_t)(v0 + 7));
  sub_2193BB85C((uint64_t)(v0 + 2));
  uint64_t v8 = v0[10];
  uint64_t v9 = v0[11];
  __swift_project_boxed_opaque_existential_1Tm(v0 + 7, v8);
  LOBYTE(v7) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v8, v9);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 7));
  if ((v7 & 1) == 0)
  {
LABEL_12:
    id v16 = 0;
    uint64_t v17 = 1;
    goto LABEL_13;
  }
  uint64_t v10 = sub_2193E24D0();
  os_log_type_t v11 = sub_2193E2AC0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_219326000, v10, v11, "Overriding trust for test server", v12, 2u);
    MEMORY[0x21D48A390](v12, -1, -1);
  }
  unint64_t v13 = (void *)v0[15];

  id v14 = objc_msgSend(v13, sel_protectionSpace);
  id v15 = objc_msgSend(v14, sel_serverTrust);

  if (!v15)
  {
    __break(1u);
    return;
  }
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08BB8]), sel_initWithTrust_, v15);

  uint64_t v17 = 0;
LABEL_13:
  uint64_t v18 = (void (*)(uint64_t, id))v0[1];
  v18(v17, v16);
}

uint64_t sub_2193BB85C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19E18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2193BB8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_2193BB920()
{
  unint64_t result = qword_267C19E20;
  if (!qword_267C19E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19E20);
  }
  return result;
}

uint64_t sub_2193BB974()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_2193BB9AC(uint64_t a1)
{
  sub_2193B9C18(a1, v1);
}

unint64_t sub_2193BB9B4()
{
  unint64_t result = qword_26AC27700;
  if (!qword_26AC27700)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC27700);
  }
  return result;
}

uint64_t sub_2193BB9F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C19E18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_2193BBA5C()
{
  unint64_t result = qword_267C19E40;
  if (!qword_267C19E40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267C194F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19E40);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ASWebSocket.SocketError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2193BBB54);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ASWebSocket.SocketError()
{
  return &type metadata for ASWebSocket.SocketError;
}

unint64_t sub_2193BBB90()
{
  unint64_t result = qword_267C19E48;
  if (!qword_267C19E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C19E48);
  }
  return result;
}

uint64_t sub_2193BBBE4(uint64_t a1, uint64_t a2)
{
  __s1[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = 0;
  uint64_t v90 = a2 + 32;
  uint64_t v91 = a1 + 32;
  uint64_t v89 = *(void *)(a1 + 16);
  while (2)
  {
    unsigned int v4 = (void *)(v91 + 40 * v3);
    uint64_t v6 = v4[2];
    unint64_t v5 = v4[3];
    uint64_t v7 = (void *)v4[4];
    uint64_t v8 = (void *)(v90 + 40 * v3);
    uint64_t v10 = v8[2];
    unint64_t v9 = v8[3];
    os_log_type_t v11 = (void *)v8[4];
    BOOL v12 = *v4 == *v8 && v4[1] == v8[1];
    if (!v12 && (sub_2193E3140() & 1) == 0) {
      return 0;
    }
    uint64_t v13 = v3 + 1;
    uint64_t v14 = 0;
    switch(v5 >> 62)
    {
      case 1uLL:
        LODWORD(v14) = HIDWORD(v6) - v6;
        if (__OFSUB__(HIDWORD(v6), v6))
        {
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
        }
        uint64_t v14 = (int)v14;
        break;
      case 2uLL:
        uint64_t v16 = *(void *)(v6 + 16);
        uint64_t v15 = *(void *)(v6 + 24);
        BOOL v17 = __OFSUB__(v15, v16);
        uint64_t v14 = v15 - v16;
        if (!v17) {
          break;
        }
        goto LABEL_160;
      case 3uLL:
        break;
      default:
        uint64_t v14 = BYTE6(v5);
        break;
    }
    unint64_t v18 = v9 >> 62;
    uint64_t v92 = v13;
    switch(v9 >> 62)
    {
      case 1uLL:
        LODWORD(v19) = HIDWORD(v10) - v10;
        if (__OFSUB__(HIDWORD(v10), v10)) {
          goto LABEL_161;
        }
        uint64_t v19 = (int)v19;
LABEL_21:
        if (v14 != v19) {
          return 0;
        }
        if (v14 < 1)
        {
LABEL_32:
          swift_bridgeObjectRetain();
          sub_21934CDF0(v6, v5);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_21934CDF0(v10, v9);
          swift_bridgeObjectRetain();
          goto LABEL_126;
        }
        break;
      case 2uLL:
        uint64_t v21 = *(void *)(v10 + 16);
        uint64_t v20 = *(void *)(v10 + 24);
        BOOL v17 = __OFSUB__(v20, v21);
        uint64_t v19 = v20 - v21;
        if (!v17) {
          goto LABEL_21;
        }
        goto LABEL_162;
      case 3uLL:
        if (!v14) {
          goto LABEL_32;
        }
        return 0;
      default:
        uint64_t v19 = BYTE6(v9);
        goto LABEL_21;
    }
    switch(v5 >> 62)
    {
      case 1uLL:
        if ((int)v6 > v6 >> 32) {
          goto LABEL_163;
        }
        swift_bridgeObjectRetain();
        sub_21934CDF0(v6, v5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_21934CDF0(v10, v9);
        swift_bridgeObjectRetain();
        sub_21934CDF0(v6, v5);
        uint64_t v26 = (char *)sub_2193E1DF0();
        if (!v26) {
          goto LABEL_37;
        }
        uint64_t v27 = sub_2193E1E20();
        if (__OFSUB__((int)v6, v27)) {
          goto LABEL_165;
        }
        v26 += (int)v6 - v27;
LABEL_37:
        uint64_t v2 = v89;
        sub_2193E1E10();
        if (!v18)
        {
          __s1[0] = v10;
          LOWORD(__s1[1]) = v9;
          BYTE2(__s1[1]) = BYTE2(v9);
          BYTE3(__s1[1]) = BYTE3(v9);
          BYTE4(__s1[1]) = BYTE4(v9);
          BYTE5(__s1[1]) = BYTE5(v9);
          if (!v26) {
            goto LABEL_186;
          }
          int v43 = memcmp(v26, __s1, BYTE6(v9));
          goto LABEL_123;
        }
        uint64_t v86 = v26;
        if (v18 == 1)
        {
          if (v10 >> 32 < (int)v10) {
            goto LABEL_173;
          }
          swift_retain();
          uint64_t v28 = sub_2193E1DF0();
          if (v28)
          {
            uint64_t v29 = v28;
            uint64_t v30 = sub_2193E1E20();
            if (__OFSUB__((int)v10, v30)) {
              goto LABEL_181;
            }
            int64_t v31 = (const void *)(v29 + (int)v10 - v30);
          }
          else
          {
            int64_t v31 = 0;
          }
          uint64_t v74 = sub_2193E1E10();
          if (v74 >= (v10 >> 32) - (int)v10) {
            size_t v75 = (v10 >> 32) - (int)v10;
          }
          else {
            size_t v75 = v74;
          }
          if (!v86) {
            goto LABEL_194;
          }
          uint64_t v2 = v89;
          if (!v31) {
            goto LABEL_195;
          }
          int v43 = memcmp(v86, v31, v75);
          sub_219348A70(v10, v9);
LABEL_123:
          uint64_t v44 = v6;
          unint64_t v45 = v5;
LABEL_124:
          sub_219348A70(v44, v45);
          goto LABEL_125;
        }
        uint64_t v62 = *(void *)(v10 + 16);
        uint64_t v84 = *(void **)(v10 + 24);
        swift_retain();
        swift_retain();
        uint64_t v63 = sub_2193E1DF0();
        if (v63)
        {
          uint64_t v64 = v63;
          uint64_t v65 = sub_2193E1E20();
          if (__OFSUB__(v62, v65)) {
            goto LABEL_180;
          }
          uint64_t v66 = (const void *)(v64 + v62 - v65);
        }
        else
        {
          uint64_t v66 = 0;
        }
        if (__OFSUB__(v84, v62)) {
          goto LABEL_175;
        }
        uint64_t v72 = sub_2193E1E10();
        if (v72 >= (uint64_t)v84 - v62) {
          size_t v73 = (size_t)v84 - v62;
        }
        else {
          size_t v73 = v72;
        }
        uint64_t v2 = v89;
        if (!v86) {
          goto LABEL_192;
        }
        if (!v66) {
          goto LABEL_193;
        }
        int v56 = memcmp(v86, v66, v73);
        swift_release();
        swift_release();
        sub_219348A70(v6, v5);
LABEL_99:
        if (v56) {
          goto LABEL_155;
        }
        goto LABEL_126;
      case 2uLL:
        uint64_t v32 = *(void *)(v6 + 16);
        swift_bridgeObjectRetain();
        sub_21934CDF0(v6, v5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_21934CDF0(v10, v9);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        uint64_t v33 = (char *)sub_2193E1DF0();
        if (!v33) {
          goto LABEL_46;
        }
        uint64_t v34 = sub_2193E1E20();
        if (__OFSUB__(v32, v34)) {
          goto LABEL_164;
        }
        v33 += v32 - v34;
LABEL_46:
        uint64_t v2 = v89;
        sub_2193E1E10();
        if (!v18)
        {
          __s1[0] = v10;
          LOWORD(__s1[1]) = v9;
          BYTE2(__s1[1]) = BYTE2(v9);
          BYTE3(__s1[1]) = BYTE3(v9);
          BYTE4(__s1[1]) = BYTE4(v9);
          BYTE5(__s1[1]) = BYTE5(v9);
          if (!v33) {
            goto LABEL_185;
          }
          int v56 = memcmp(v33, __s1, BYTE6(v9));
          swift_release();
LABEL_98:
          swift_release();
          goto LABEL_99;
        }
        os_log_type_t v83 = v33;
        if (v18 != 1)
        {
          uint64_t v57 = *(void *)(v10 + 16);
          uint64_t v82 = *(void *)(v10 + 24);
          swift_retain();
          swift_retain();
          uint64_t v58 = sub_2193E1DF0();
          if (v58)
          {
            uint64_t v59 = v58;
            uint64_t v60 = sub_2193E1E20();
            if (__OFSUB__(v57, v60)) {
              goto LABEL_178;
            }
            uint64_t v61 = (const void *)(v59 + v57 - v60);
          }
          else
          {
            uint64_t v61 = 0;
          }
          if (__OFSUB__(v82, v57)) {
            goto LABEL_174;
          }
          uint64_t v68 = sub_2193E1E10();
          if (v68 >= v82 - v57) {
            size_t v69 = v82 - v57;
          }
          else {
            size_t v69 = v68;
          }
          uint64_t v2 = v89;
          if (!v83) {
            goto LABEL_188;
          }
          if (!v61) {
            goto LABEL_189;
          }
          int v56 = memcmp(v83, v61, v69);
          swift_release();
          swift_release();
LABEL_97:
          swift_release();
          goto LABEL_98;
        }
        if (v10 >> 32 < (int)v10) {
          goto LABEL_168;
        }
        swift_retain();
        uint64_t v35 = sub_2193E1DF0();
        if (v35)
        {
          uint64_t v36 = v35;
          uint64_t v37 = sub_2193E1E20();
          if (__OFSUB__((int)v10, v37)) {
            goto LABEL_179;
          }
          uint64_t v38 = (const void *)(v36 + (int)v10 - v37);
        }
        else
        {
          uint64_t v38 = 0;
        }
        uint64_t v70 = sub_2193E1E10();
        if (v70 >= (v10 >> 32) - (int)v10) {
          size_t v71 = (v10 >> 32) - (int)v10;
        }
        else {
          size_t v71 = v70;
        }
        if (!v83) {
          goto LABEL_190;
        }
        uint64_t v2 = v89;
        if (!v38) {
          goto LABEL_191;
        }
        int v43 = memcmp(v83, v38, v71);
        sub_219348A70(v10, v9);
        swift_release();
        swift_release();
LABEL_125:
        if (v43) {
          goto LABEL_155;
        }
LABEL_126:
        if (!v7)
        {
          swift_bridgeObjectRelease();
          sub_219348A70(v10, v9);
          swift_bridgeObjectRelease();
          uint64_t v3 = v92;
          if (v11) {
            goto LABEL_156;
          }
          swift_bridgeObjectRelease();
          sub_219348A70(v6, v5);
          swift_bridgeObjectRelease();
          if (v92 == v2) {
            return 1;
          }
          continue;
        }
        if (!v11) {
          goto LABEL_155;
        }
        uint64_t v76 = v7[2];
        if (v76 != v11[2]) {
          goto LABEL_155;
        }
        if (!v76 || v7 == v11) {
          goto LABEL_5;
        }
        BOOL v77 = v7[4] == v11[4] && v7[5] == v11[5];
        if (!v77 && (sub_2193E3140() & 1) == 0) {
          goto LABEL_155;
        }
        if (v76 == 1) {
          goto LABEL_5;
        }
        if ((v7[6] != v11[6] || v7[7] != v11[7]) && (sub_2193E3140() & 1) == 0) {
          goto LABEL_155;
        }
        uint64_t v78 = v76 - 2;
        if (!v78)
        {
LABEL_5:
          swift_bridgeObjectRelease();
          sub_219348A70(v10, v9);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_219348A70(v6, v5);
          swift_bridgeObjectRelease();
          uint64_t v3 = v92;
          if (v92 == v2) {
            return 1;
          }
          continue;
        }
        uint64_t v79 = 0;
        while (1)
        {
          BOOL v80 = v7[v79 + 8] == v11[v79 + 8] && v7[v79 + 9] == v11[v79 + 9];
          if (!v80 && (sub_2193E3140() & 1) == 0) {
            break;
          }
          v79 += 2;
          if (!--v78) {
            goto LABEL_5;
          }
        }
LABEL_155:
        swift_bridgeObjectRelease();
        sub_219348A70(v10, v9);
        swift_bridgeObjectRelease();
LABEL_156:
        swift_bridgeObjectRelease();
        sub_219348A70(v6, v5);
        swift_bridgeObjectRelease();
        return 0;
      case 3uLL:
        memset(__s1, 0, 14);
        if (!v18) {
          goto LABEL_61;
        }
        if (v18 == 1)
        {
          unint64_t v85 = (void *)((v10 >> 32) - (int)v10);
          if (v10 >> 32 < (int)v10) {
            goto LABEL_167;
          }
          swift_bridgeObjectRetain();
          sub_21934CDF0(v6, v5);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_21934CDF0(v10, v9);
          swift_bridgeObjectRetain();
          sub_21934CDF0(v10, v9);
          uint64_t v39 = sub_2193E1DF0();
          if (!v39) {
            goto LABEL_183;
          }
          uint64_t v23 = v39;
          uint64_t v40 = sub_2193E1E20();
          uint64_t v25 = (int)v10 - v40;
          if (__OFSUB__((int)v10, v40)) {
            goto LABEL_172;
          }
LABEL_57:
          uint64_t v41 = sub_2193E1E10();
          if (v41 >= (uint64_t)v85) {
            size_t v42 = (size_t)v85;
          }
          else {
            size_t v42 = v41;
          }
          int v43 = memcmp(__s1, (const void *)(v23 + v25), v42);
          uint64_t v44 = v10;
          unint64_t v45 = v9;
          goto LABEL_124;
        }
        uint64_t v52 = *(void *)(v10 + 16);
        id v88 = *(char **)(v10 + 24);
        swift_bridgeObjectRetain();
        sub_21934CDF0(v6, v5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_21934CDF0(v10, v9);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        os_log_type_t v51 = (char *)sub_2193E1DF0();
        if (v51)
        {
          uint64_t v53 = sub_2193E1E20();
          if (__OFSUB__(v52, v53)) {
            goto LABEL_177;
          }
          v51 += v52 - v53;
        }
        BOOL v17 = __OFSUB__(v88, v52);
        id v54 = &v88[-v52];
        if (v17) {
          goto LABEL_169;
        }
        uint64_t v55 = sub_2193E1E10();
        if (!v51) {
          goto LABEL_184;
        }
LABEL_85:
        if (v55 >= (uint64_t)v54) {
          size_t v67 = (size_t)v54;
        }
        else {
          size_t v67 = v55;
        }
        int v56 = memcmp(__s1, v51, v67);
        goto LABEL_97;
      default:
        __s1[0] = v6;
        LOWORD(__s1[1]) = v5;
        BYTE2(__s1[1]) = BYTE2(v5);
        BYTE3(__s1[1]) = BYTE3(v5);
        BYTE4(__s1[1]) = BYTE4(v5);
        BYTE5(__s1[1]) = BYTE5(v5);
        if (!v18)
        {
LABEL_61:
          uint64_t __s2 = v10;
          __int16 v94 = v9;
          char v95 = BYTE2(v9);
          char v96 = BYTE3(v9);
          char v97 = BYTE4(v9);
          char v98 = BYTE5(v9);
          swift_bridgeObjectRetain();
          sub_21934CDF0(v6, v5);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_21934CDF0(v10, v9);
          swift_bridgeObjectRetain();
          if (memcmp(__s1, &__s2, BYTE6(v9))) {
            goto LABEL_155;
          }
          goto LABEL_126;
        }
        if (v18 == 1)
        {
          unint64_t v85 = (void *)((v10 >> 32) - (int)v10);
          if (v10 >> 32 < (int)v10) {
            goto LABEL_166;
          }
          swift_bridgeObjectRetain();
          sub_21934CDF0(v6, v5);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_21934CDF0(v10, v9);
          swift_bridgeObjectRetain();
          sub_21934CDF0(v10, v9);
          uint64_t v22 = sub_2193E1DF0();
          if (!v22)
          {
            sub_2193E1E10();
            __break(1u);
LABEL_183:
            sub_2193E1E10();
            __break(1u);
LABEL_184:
            __break(1u);
LABEL_185:
            __break(1u);
LABEL_186:
            __break(1u);
LABEL_187:
            __break(1u);
LABEL_188:
            __break(1u);
LABEL_189:
            __break(1u);
LABEL_190:
            __break(1u);
LABEL_191:
            __break(1u);
LABEL_192:
            __break(1u);
LABEL_193:
            __break(1u);
LABEL_194:
            __break(1u);
LABEL_195:
            __break(1u);
            JUMPOUT(0x2193BC918);
          }
          uint64_t v23 = v22;
          uint64_t v24 = sub_2193E1E20();
          uint64_t v25 = (int)v10 - v24;
          if (__OFSUB__((int)v10, v24)) {
            goto LABEL_171;
          }
          goto LABEL_57;
        }
        uint64_t v46 = *(void *)(v10 + 16);
        id v87 = *(char **)(v10 + 24);
        swift_bridgeObjectRetain();
        sub_21934CDF0(v6, v5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_21934CDF0(v10, v9);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        uint64_t v47 = sub_2193E1DF0();
        if (v47)
        {
          uint64_t v48 = v47;
          uint64_t v49 = sub_2193E1E20();
          if (__OFSUB__(v46, v49)) {
            goto LABEL_176;
          }
          uint64_t v50 = v46;
          os_log_type_t v51 = (char *)(v48 + v46 - v49);
        }
        else
        {
          uint64_t v50 = v46;
          os_log_type_t v51 = 0;
        }
        id v54 = &v87[-v50];
        if (__OFSUB__(v87, v50)) {
          goto LABEL_170;
        }
        uint64_t v55 = sub_2193E1E10();
        if (!v51) {
          goto LABEL_187;
        }
        goto LABEL_85;
    }
  }
}

uint64_t sub_2193BC948(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_2193E3140(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    unint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_2193E3140() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

BOOL sub_2193BCA10(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  uint64_t v3 = a1 + 5;
  unsigned int v4 = a2 + 5;
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    uint64_t v8 = *v3++;
    uint64_t v7 = v8;
    uint64_t v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_2193BCA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  int v5 = *(_DWORD *)(a1 + 48);
  int v6 = *(_DWORD *)(a2 + 48);
  if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40))
  {
    if (v5 == v6) {
      goto LABEL_12;
    }
    return 0;
  }
  char v8 = sub_2193E3140();
  uint64_t result = 0;
  if ((v8 & 1) != 0 && v5 == v6)
  {
LABEL_12:
    uint64_t v10 = v2 - 1;
    if (v10)
    {
      BOOL v11 = (_DWORD *)(a2 + 72);
      for (uint64_t i = (_DWORD *)(a1 + 72); ; i += 6)
      {
        int v13 = *i;
        int v14 = *v11;
        if (*((void *)i - 2) == *((void *)v11 - 2) && *((void *)i - 1) == *((void *)v11 - 1))
        {
          if (v13 != v14) {
            return 0;
          }
        }
        else
        {
          char v16 = sub_2193E3140();
          uint64_t result = 0;
          if ((v16 & 1) == 0 || v13 != v14) {
            return result;
          }
        }
        v11 += 6;
        uint64_t result = 1;
        if (!--v10) {
          return result;
        }
      }
    }
    return 1;
  }
  return result;
}

uint64_t sub_2193BCB94(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2193C9B78();

  return MEMORY[0x270F44AF0](a1, a2, v4);
}

void sub_2193BCBE4(void *a1@<X8>)
{
  *a1 = &unk_26CAB4DB0;
}

uint64_t sub_2193BCBF4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CableRequest.StateDeleteRequest(0);
  MEMORY[0x270FA5388](v2);
  unint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CableRequest.AllocationRequest(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CableRequest.OneOf_Request(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  BOOL v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  int v14 = (char *)&v21 - v13;
  MEMORY[0x270FA5388](v12);
  char v16 = (char *)&v21 - v15;
  sub_2193C9AF0(v1, (uint64_t)&v21 - v15, type metadata accessor for CableRequest.OneOf_Request);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2193C9AF0(v1, (uint64_t)v11, type metadata accessor for CableRequest.OneOf_Request);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2193C69E0((uint64_t)v11, (uint64_t)v4, type metadata accessor for CableRequest.StateDeleteRequest);
      BOOL v17 = *(void *)&v4[*(int *)(v2 + 20) + 8] >> 60 != 15;
      unint64_t v18 = type metadata accessor for CableRequest.StateDeleteRequest;
      uint64_t v19 = (uint64_t)v4;
LABEL_9:
      sub_2193C6980(v19, v18);
      sub_2193C6980((uint64_t)v16, type metadata accessor for CableRequest.OneOf_Request);
      return v17;
    }
    sub_2193C6980((uint64_t)v11, type metadata accessor for CableRequest.OneOf_Request);
    __break(1u);
  }
  else
  {
    sub_2193C9AF0(v1, (uint64_t)v14, type metadata accessor for CableRequest.OneOf_Request);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_2193C69E0((uint64_t)v14, (uint64_t)v7, type metadata accessor for CableRequest.AllocationRequest);
      BOOL v17 = *(void *)&v7[*(int *)(v5 + 20) + 8] >> 60 != 15 && v7[*(int *)(v5 + 24)] != 2;
      unint64_t v18 = type metadata accessor for CableRequest.AllocationRequest;
      uint64_t v19 = (uint64_t)v7;
      goto LABEL_9;
    }
  }
  uint64_t result = sub_2193C6980((uint64_t)v14, type metadata accessor for CableRequest.OneOf_Request);
  __break(1u);
  return result;
}

uint64_t sub_2193BCF20()
{
  return sub_2193E3230();
}

uint64_t sub_2193BCF84(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2193C9A9C();

  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t sub_2193BCFD0()
{
  return sub_2193E3230();
}

unint64_t sub_2193BD030@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_2193D3D10(a1);
  *a2 = result;
  return result;
}

uint64_t sub_2193BD058()
{
  return *v0;
}

unint64_t sub_2193BD060@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_2193D3D10(*a1);
  *a2 = result;
  return result;
}

void sub_2193BD08C(void *a1@<X8>)
{
  *a1 = &unk_26CAB4DD8;
}

uint64_t sub_2193BD09C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
  MEMORY[0x270FA5388](v2);
  unint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  BOOL v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  int v14 = (char *)&v21 - v13;
  MEMORY[0x270FA5388](v12);
  char v16 = (char *)&v21 - v15;
  sub_2193C9AF0(v1, (uint64_t)&v21 - v15, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2193C9AF0(v1, (uint64_t)v11, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2193C69E0((uint64_t)v11, (uint64_t)v4, type metadata accessor for CableRelayConnectionRequest.StateAssisted);
      BOOL v17 = *(void *)&v4[*(int *)(v2 + 20) + 8] >> 60 != 15 && *(void *)&v4[*(int *)(v2 + 24) + 8] >> 60 != 15;
      unint64_t v18 = type metadata accessor for CableRelayConnectionRequest.StateAssisted;
      uint64_t v19 = (uint64_t)v4;
LABEL_12:
      sub_2193C6980(v19, v18);
      sub_2193C6980((uint64_t)v16, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
      return v17;
    }
    sub_2193C6980((uint64_t)v11, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
    __break(1u);
  }
  else
  {
    sub_2193C9AF0(v1, (uint64_t)v14, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_2193C69E0((uint64_t)v14, (uint64_t)v7, type metadata accessor for CableRelayConnectionRequest.QRAssisted);
      BOOL v17 = *(void *)&v7[*(int *)(v5 + 20) + 8] >> 60 != 15 && *(void *)&v7[*(int *)(v5 + 24) + 8] >> 60 != 15;
      unint64_t v18 = type metadata accessor for CableRelayConnectionRequest.QRAssisted;
      uint64_t v19 = (uint64_t)v7;
      goto LABEL_12;
    }
  }
  uint64_t result = sub_2193C6980((uint64_t)v14, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
  __break(1u);
  return result;
}

uint64_t sub_2193BD3F0()
{
  uint64_t v0 = sub_2193E24C0();
  __swift_allocate_value_buffer(v0, qword_267C295B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_267C295B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A078);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C1A080) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2193EC060;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "UNSPECIFIED";
  *(void *)(v6 + 8) = 11;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_2193E2490();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "SUCCESS";
  *(void *)(v10 + 8) = 7;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  BOOL v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  void *v11 = 2;
  *(void *)uint64_t v12 = "BAD_REQUEST";
  *((void *)v12 + 1) = 11;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  int v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 3;
  *(void *)int v14 = "INTERNAL_ERROR";
  *((void *)v14 + 1) = 14;
  unsigned char v14[16] = 2;
  v9();
  uint64_t v15 = v5 + 4 * v2 + v1[14];
  *(void *)(v5 + 4 * v2) = 4;
  *(void *)uint64_t v15 = "NOT_FOUND";
  *(void *)(v15 + 8) = 9;
  *(unsigned char *)(v15 + 16) = 2;
  v9();
  return sub_2193E24A0();
}

uint64_t sub_2193BD670@<X0>(uint64_t a1@<X8>)
{
  return sub_2193C5884(&qword_267C189B0, (uint64_t)qword_267C295B0, a1);
}

uint64_t sub_2193BD694()
{
  uint64_t v0 = sub_2193E24C0();
  __swift_allocate_value_buffer(v0, qword_267C295C8);
  __swift_project_value_buffer(v0, (uint64_t)qword_267C295C8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A078);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C1A080) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2193E7180;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 1;
  *(void *)unint64_t v6 = "request_uuid";
  *(void *)(v6 + 8) = 12;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = sub_2193E2490();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "allocation_request";
  *((void *)v10 + 1) = 18;
  unsigned char v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "state_delete_request";
  *(void *)(v11 + 8) = 20;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_2193E24A0();
}

uint64_t sub_2193BD898()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E90);
  MEMORY[0x270FA5388](v1 - 8);
  unint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CableRequest.OneOf_Request(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + *(int *)(type metadata accessor for CableRequest(0) + 24) + 8) >> 60 != 15)
  {
    sub_219360574(v0, (uint64_t)v3, &qword_267C18E90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_219360620((uint64_t)v3, &qword_267C18E90);
      return 1;
    }
    sub_2193C69E0((uint64_t)v3, (uint64_t)v7, type metadata accessor for CableRequest.OneOf_Request);
    char v8 = sub_2193BCBF4();
    sub_2193C6980((uint64_t)v7, type metadata accessor for CableRequest.OneOf_Request);
    if (v8) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_2193BDA4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  while (1)
  {
    uint64_t result = sub_2193E2360();
    uint64_t v9 = v4;
    if (v4 || (v11 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 3:
        sub_2193BE0A4(v5, a1, a2, a3);
LABEL_3:
        uint64_t v9 = 0;
        break;
      case 2:
        sub_2193BDB2C(v5, a1, a2, a3);
        goto LABEL_3;
      case 1:
        type metadata accessor for CableRequest(0);
        sub_2193E23A0();
        goto LABEL_3;
    }
    uint64_t v4 = v9;
  }
}

uint64_t sub_2193BDB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a4;
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  uint64_t v5 = type metadata accessor for CableRequest.AllocationRequest(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v41 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v44 = (char *)&v37 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E90);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CableRequest.OneOf_Request(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  BOOL v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v37 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A090);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v42 = (uint64_t)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v37 - v23;
  uint64_t v43 = v6;
  uint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v46 = v5;
  uint64_t v26 = v5;
  uint64_t v27 = v25;
  v25((char *)&v37 - v23, 1, 1, v26);
  uint64_t v40 = a1;
  sub_219360574(a1, (uint64_t)v12, &qword_267C18E90);
  uint64_t v39 = v14;
  int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v28 == 1)
  {
    sub_219360620((uint64_t)v12, &qword_267C18E90);
    uint64_t v29 = v13;
    uint64_t v30 = v46;
  }
  else
  {
    uint64_t v38 = v27;
    uint64_t v31 = (uint64_t)v44;
    sub_2193C69E0((uint64_t)v12, (uint64_t)v19, type metadata accessor for CableRequest.OneOf_Request);
    sub_2193C69E0((uint64_t)v19, (uint64_t)v17, type metadata accessor for CableRequest.OneOf_Request);
    uint64_t v29 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2193C6980((uint64_t)v17, type metadata accessor for CableRequest.OneOf_Request);
      uint64_t v30 = v46;
    }
    else
    {
      sub_219360620((uint64_t)v24, &qword_267C1A090);
      sub_2193C69E0((uint64_t)v17, v31, type metadata accessor for CableRequest.AllocationRequest);
      sub_2193C69E0(v31, (uint64_t)v24, type metadata accessor for CableRequest.AllocationRequest);
      uint64_t v30 = v46;
      v38(v24, 0, 1, v46);
    }
  }
  uint64_t v32 = v45;
  sub_2193C5B68(&qword_267C1A028, (void (*)(uint64_t))type metadata accessor for CableRequest.AllocationRequest);
  sub_2193E23D0();
  if (v32) {
    return sub_219360620((uint64_t)v24, &qword_267C1A090);
  }
  uint64_t v34 = v42;
  sub_219360574((uint64_t)v24, v42, &qword_267C1A090);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v34, 1, v30) == 1)
  {
    sub_219360620((uint64_t)v24, &qword_267C1A090);
    return sub_219360620(v34, &qword_267C1A090);
  }
  else
  {
    uint64_t v35 = v41;
    sub_2193C69E0(v34, v41, type metadata accessor for CableRequest.AllocationRequest);
    if (v28 != 1) {
      sub_2193E2370();
    }
    sub_219360620((uint64_t)v24, &qword_267C1A090);
    uint64_t v36 = v40;
    sub_219360620(v40, &qword_267C18E90);
    sub_2193C69E0(v35, v36, type metadata accessor for CableRequest.AllocationRequest);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v29);
  }
}

uint64_t sub_2193BE0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a4;
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  uint64_t v5 = type metadata accessor for CableRequest.StateDeleteRequest(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v41 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v44 = (char *)&v37 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E90);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CableRequest.OneOf_Request(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  BOOL v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v37 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A098);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v42 = (uint64_t)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v37 - v23;
  uint64_t v43 = v6;
  uint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v46 = v5;
  uint64_t v26 = v5;
  uint64_t v27 = v25;
  v25((char *)&v37 - v23, 1, 1, v26);
  uint64_t v40 = a1;
  sub_219360574(a1, (uint64_t)v12, &qword_267C18E90);
  uint64_t v39 = v14;
  int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v28 == 1)
  {
    sub_219360620((uint64_t)v12, &qword_267C18E90);
    uint64_t v29 = v13;
  }
  else
  {
    uint64_t v38 = v27;
    uint64_t v30 = (uint64_t)v44;
    sub_2193C69E0((uint64_t)v12, (uint64_t)v19, type metadata accessor for CableRequest.OneOf_Request);
    sub_2193C69E0((uint64_t)v19, (uint64_t)v17, type metadata accessor for CableRequest.OneOf_Request);
    uint64_t v29 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_219360620((uint64_t)v24, &qword_267C1A098);
      sub_2193C69E0((uint64_t)v17, v30, type metadata accessor for CableRequest.StateDeleteRequest);
      sub_2193C69E0(v30, (uint64_t)v24, type metadata accessor for CableRequest.StateDeleteRequest);
      uint64_t v31 = v46;
      v38(v24, 0, 1, v46);
      goto LABEL_7;
    }
    sub_2193C6980((uint64_t)v17, type metadata accessor for CableRequest.OneOf_Request);
  }
  uint64_t v31 = v46;
LABEL_7:
  uint64_t v32 = v45;
  sub_2193C5B68(&qword_267C1A008, (void (*)(uint64_t))type metadata accessor for CableRequest.StateDeleteRequest);
  sub_2193E23D0();
  if (v32) {
    return sub_219360620((uint64_t)v24, &qword_267C1A098);
  }
  uint64_t v34 = v42;
  sub_219360574((uint64_t)v24, v42, &qword_267C1A098);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v34, 1, v31) == 1)
  {
    sub_219360620((uint64_t)v24, &qword_267C1A098);
    return sub_219360620(v34, &qword_267C1A098);
  }
  else
  {
    uint64_t v35 = v41;
    sub_2193C69E0(v34, v41, type metadata accessor for CableRequest.StateDeleteRequest);
    if (v28 != 1) {
      sub_2193E2370();
    }
    sub_219360620((uint64_t)v24, &qword_267C1A098);
    uint64_t v36 = v40;
    sub_219360620(v40, &qword_267C18E90);
    sub_2193C69E0(v35, v36, type metadata accessor for CableRequest.StateDeleteRequest);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v29);
  }
}

uint64_t sub_2193BE618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E90);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_2193C0DD0(v3, a1, a2, a3, type metadata accessor for CableRequest);
  if (!v4)
  {
    sub_219360574(v3, (uint64_t)v10, &qword_267C18E90);
    uint64_t v12 = type metadata accessor for CableRequest.OneOf_Request(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12) != 1)
    {
      if (swift_getEnumCaseMultiPayload() == 1) {
        sub_2193BE9FC(v3);
      }
      else {
        sub_2193BE7D8(v3);
      }
      sub_2193C6980((uint64_t)v10, type metadata accessor for CableRequest.OneOf_Request);
    }
    type metadata accessor for CableRequest(0);
    return sub_2193E22E0();
  }
  return result;
}

uint64_t sub_2193BE7D8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E90);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CableRequest.AllocationRequest(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_219360574(a1, (uint64_t)v4, &qword_267C18E90);
  uint64_t v8 = type metadata accessor for CableRequest.OneOf_Request(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_219360620((uint64_t)v4, &qword_267C18E90);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_2193C69E0((uint64_t)v4, (uint64_t)v7, type metadata accessor for CableRequest.AllocationRequest);
    sub_2193C5B68(&qword_267C1A028, (void (*)(uint64_t))type metadata accessor for CableRequest.AllocationRequest);
    sub_2193E2480();
    return sub_2193C6980((uint64_t)v7, type metadata accessor for CableRequest.AllocationRequest);
  }
  uint64_t result = sub_2193C6980((uint64_t)v4, type metadata accessor for CableRequest.OneOf_Request);
  __break(1u);
  return result;
}

uint64_t sub_2193BE9FC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E90);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CableRequest.StateDeleteRequest(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_219360574(a1, (uint64_t)v4, &qword_267C18E90);
  uint64_t v8 = type metadata accessor for CableRequest.OneOf_Request(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_219360620((uint64_t)v4, &qword_267C18E90);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2193C69E0((uint64_t)v4, (uint64_t)v7, type metadata accessor for CableRequest.StateDeleteRequest);
    sub_2193C5B68(&qword_267C1A008, (void (*)(uint64_t))type metadata accessor for CableRequest.StateDeleteRequest);
    sub_2193E2480();
    return sub_2193C6980((uint64_t)v7, type metadata accessor for CableRequest.StateDeleteRequest);
  }
  uint64_t result = sub_2193C6980((uint64_t)v4, type metadata accessor for CableRequest.OneOf_Request);
  __break(1u);
  return result;
}

double sub_2193BEC20@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CableRequest.OneOf_Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a2, 1, 1, v4);
  sub_2193E22F0();
  double result = 0.0;
  *(_OWORD *)(a2 + *(int *)(a1 + 24)) = xmmword_2193E7220;
  return result;
}

uint64_t sub_2193BECA0()
{
  return 0x716552656C626143;
}

uint64_t (*sub_2193BECCC())()
{
  return nullsub_1;
}

uint64_t sub_2193BECF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2193BDA4C(a1, a2, a3);
}

uint64_t sub_2193BED08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2193BE618(a1, a2, a3);
}

uint64_t sub_2193BED24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193C5B68(&qword_267C1A088, (void (*)(uint64_t))type metadata accessor for CableRequest);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2193BEDA4@<X0>(uint64_t a1@<X8>)
{
  return sub_2193C5884(&qword_267C189B8, (uint64_t)qword_267C295C8, a1);
}

uint64_t sub_2193BEDC8(uint64_t a1)
{
  uint64_t v2 = sub_2193C5B68(&qword_267C18E98, (void (*)(uint64_t))type metadata accessor for CableRequest);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2193BEE38()
{
  sub_2193C5B68(&qword_267C18E98, (void (*)(uint64_t))type metadata accessor for CableRequest);

  return sub_2193E2420();
}

uint64_t sub_2193BEEBC()
{
  uint64_t v0 = sub_2193E24C0();
  __swift_allocate_value_buffer(v0, qword_267C295E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_267C295E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A078);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C1A080) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2193E7170;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "tunnel_id";
  *(void *)(v6 + 8) = 9;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = sub_2193E2490();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "use_state_assisted";
  *((void *)v10 + 1) = 18;
  unsigned char v10[16] = 2;
  v9();
  return sub_2193E24A0();
}

uint64_t sub_2193BF074()
{
  while (1)
  {
    uint64_t result = sub_2193E2360();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      type metadata accessor for CableRequest.AllocationRequest(0);
      sub_2193E2380();
    }
    else if (result == 1)
    {
      type metadata accessor for CableRequest.AllocationRequest(0);
      sub_2193E23A0();
    }
    uint64_t v0 = 0;
  }
  return result;
}

uint64_t sub_2193BF144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_2193BF714(v3, a1, a2, a3, type metadata accessor for CableRequest.AllocationRequest);
  if (!v4)
  {
    sub_2193BF1C8(v3);
    return sub_2193E22E0();
  }
  return result;
}

uint64_t sub_2193BF1C8(uint64_t a1)
{
  uint64_t result = type metadata accessor for CableRequest.AllocationRequest(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 24)) != 2) {
    return sub_2193E2430();
  }
  return result;
}

double sub_2193BF240@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2193E22F0();
  double result = 0.0;
  uint64_t v5 = *(int *)(a1 + 24);
  *(_OWORD *)(a2 + *(int *)(a1 + 20)) = xmmword_2193E7220;
  *(unsigned char *)(a2 + v5) = 2;
  return result;
}

unint64_t sub_2193BF280()
{
  return 0xD00000000000001ELL;
}

BOOL sub_2193BF29C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 20) + 8) >> 60 != 15 && *(unsigned char *)(v1 + *(int *)(a1 + 24)) != 2;
}

uint64_t (*sub_2193BF2D8())()
{
  return nullsub_1;
}

uint64_t sub_2193BF2F8()
{
  return sub_2193BF074();
}

uint64_t sub_2193BF310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2193BF144(a1, a2, a3);
}

uint64_t sub_2193BF328(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193C5B68(&qword_267C1A0B8, (void (*)(uint64_t))type metadata accessor for CableRequest.AllocationRequest);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2193BF3A4@<X0>(uint64_t a1@<X8>)
{
  return sub_2193C5884(&qword_267C189C0, (uint64_t)qword_267C295E0, a1);
}

uint64_t sub_2193BF3C8(uint64_t a1)
{
  uint64_t v2 = sub_2193C5B68(&qword_267C1A028, (void (*)(uint64_t))type metadata accessor for CableRequest.AllocationRequest);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2193BF434()
{
  sub_2193C5B68(&qword_267C1A028, (void (*)(uint64_t))type metadata accessor for CableRequest.AllocationRequest);

  return sub_2193E2420();
}

uint64_t sub_2193BF4B4()
{
  uint64_t v0 = sub_2193E24C0();
  __swift_allocate_value_buffer(v0, qword_267C295F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_267C295F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A078);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C1A080) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2193E7190;
  unint64_t v4 = v3 + v2 + v1[14];
  *(void *)(v3 + v2) = 1;
  *(void *)unint64_t v4 = "contact_id";
  *(void *)(v4 + 8) = 10;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = *MEMORY[0x263F50728];
  uint64_t v6 = sub_2193E2490();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v4, v5, v6);
  return sub_2193E24A0();
}

uint64_t sub_2193BF610()
{
  while (1)
  {
    uint64_t result = sub_2193E2360();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1)
    {
      type metadata accessor for CableRequest.StateDeleteRequest(0);
      sub_2193E23A0();
    }
    uint64_t v0 = 0;
  }
  return result;
}

uint64_t sub_2193BF6A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_2193BF714(v3, a1, a2, a3, type metadata accessor for CableRequest.StateDeleteRequest);
  if (!v4) {
    return sub_2193E22E0();
  }
  return result;
}

uint64_t sub_2193BF714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t result = a5(0);
  uint64_t v7 = a1 + *(int *)(result + 20);
  unint64_t v8 = *(void *)(v7 + 8);
  if (v8 >> 60 != 15)
  {
    uint64_t v9 = *(void *)v7;
    sub_21934CDF0(*(void *)v7, *(void *)(v7 + 8));
    sub_2193E2450();
    return sub_21934CEB0(v9, v8);
  }
  return result;
}

double sub_2193BF7B8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2193E22F0();
  double result = 0.0;
  *(_OWORD *)(a2 + *(int *)(a1 + 20)) = xmmword_2193E7220;
  return result;
}

unint64_t sub_2193BF7F0()
{
  return 0xD00000000000001FLL;
}

BOOL sub_2193BF80C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 20) + 8) >> 60 != 15;
}

uint64_t sub_2193BF828()
{
  return sub_2193BF610();
}

uint64_t sub_2193BF840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2193BF6A8(a1, a2, a3);
}

uint64_t sub_2193BF858(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193C5B68(&qword_267C1A0C0, (void (*)(uint64_t))type metadata accessor for CableRequest.StateDeleteRequest);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2193BF8D4@<X0>(uint64_t a1@<X8>)
{
  return sub_2193C5884(&qword_267C189C8, (uint64_t)qword_267C295F8, a1);
}

uint64_t sub_2193BF8F8(uint64_t a1)
{
  uint64_t v2 = sub_2193C5B68(&qword_267C1A008, (void (*)(uint64_t))type metadata accessor for CableRequest.StateDeleteRequest);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2193BF964()
{
  sub_2193C5B68(&qword_267C1A008, (void (*)(uint64_t))type metadata accessor for CableRequest.StateDeleteRequest);

  return sub_2193E2420();
}

uint64_t sub_2193BF9E4()
{
  uint64_t v0 = sub_2193E24C0();
  __swift_allocate_value_buffer(v0, qword_267C29610);
  __swift_project_value_buffer(v0, (uint64_t)qword_267C29610);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A078);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C1A080) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2193EC070;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "request_uuid";
  *(void *)(v6 + 8) = 12;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = sub_2193E2490();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "status";
  *(void *)(v10 + 8) = 6;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  void *v11 = 3;
  *(void *)uint64_t v12 = "allocation_response";
  *((void *)v12 + 1) = 19;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "state_delete_response";
  *((void *)v14 + 1) = 21;
  unsigned char v14[16] = 2;
  v9();
  return sub_2193E24A0();
}

uint64_t sub_2193BFC24()
{
  uint64_t v1 = type metadata accessor for CableResponse.AllocationResponse(0);
  MEMORY[0x270FA5388](v1);
  unint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A0D0);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CableResponse.OneOf_Response(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v17 - v12;
  uint64_t v14 = type metadata accessor for CableResponse(0);
  if (*(void *)(v0 + *(int *)(v14 + 24) + 8) >> 60 == 15 || *(unsigned char *)(v0 + *(int *)(v14 + 28)) == 5) {
    return 0;
  }
  sub_219360574(v0, (uint64_t)v6, &qword_267C1A0D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_219360620((uint64_t)v6, &qword_267C1A0D0);
  }
  else
  {
    sub_2193C69E0((uint64_t)v6, (uint64_t)v13, type metadata accessor for CableResponse.OneOf_Response);
    sub_2193C9AF0((uint64_t)v13, (uint64_t)v11, type metadata accessor for CableResponse.OneOf_Response);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2193C6980((uint64_t)v11, type metadata accessor for CableResponse.OneOf_Response);
      sub_2193C6980((uint64_t)v13, type metadata accessor for CableResponse.OneOf_Response);
    }
    else
    {
      sub_2193C69E0((uint64_t)v11, (uint64_t)v3, type metadata accessor for CableResponse.AllocationResponse);
      if (*(void *)&v3[*(int *)(v1 + 20) + 8] >> 60 == 15)
      {
        sub_2193C6980((uint64_t)v3, type metadata accessor for CableResponse.AllocationResponse);
        sub_2193C6980((uint64_t)v13, type metadata accessor for CableResponse.OneOf_Response);
        return 0;
      }
      char v16 = v3[*(int *)(v1 + 24) + 4];
      sub_2193C6980((uint64_t)v3, type metadata accessor for CableResponse.AllocationResponse);
      sub_2193C6980((uint64_t)v13, type metadata accessor for CableResponse.OneOf_Response);
      if (v16) {
        return 0;
      }
    }
  }
  return 1;
}

uint64_t sub_2193BFF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  while (1)
  {
    uint64_t result = sub_2193E2360();
    if (v4 || (v10 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        type metadata accessor for CableResponse(0);
        sub_2193E23A0();
        break;
      case 2:
        sub_2193C008C();
        break;
      case 3:
        sub_2193C0104(v5, a1, a2, a3);
        break;
      case 4:
        sub_2193C067C(v5, a1, a2, a3);
        break;
      default:
        continue;
    }
  }
}

uint64_t sub_2193C008C()
{
  return sub_2193E2390();
}

uint64_t sub_2193C0104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a4;
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  uint64_t v5 = type metadata accessor for CableResponse.AllocationResponse(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v41 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v44 = (char *)&v37 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A0D0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CableResponse.OneOf_Response(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v37 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18EA0);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v42 = (uint64_t)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v37 - v23;
  uint64_t v43 = v6;
  uint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v46 = v5;
  uint64_t v26 = v5;
  uint64_t v27 = v25;
  v25((char *)&v37 - v23, 1, 1, v26);
  uint64_t v40 = a1;
  sub_219360574(a1, (uint64_t)v12, &qword_267C1A0D0);
  uint64_t v39 = v14;
  int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v28 == 1)
  {
    sub_219360620((uint64_t)v12, &qword_267C1A0D0);
    uint64_t v29 = v13;
    uint64_t v30 = v46;
  }
  else
  {
    uint64_t v38 = v27;
    uint64_t v31 = (uint64_t)v44;
    sub_2193C69E0((uint64_t)v12, (uint64_t)v19, type metadata accessor for CableResponse.OneOf_Response);
    sub_2193C69E0((uint64_t)v19, (uint64_t)v17, type metadata accessor for CableResponse.OneOf_Response);
    uint64_t v29 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2193C6980((uint64_t)v17, type metadata accessor for CableResponse.OneOf_Response);
      uint64_t v30 = v46;
    }
    else
    {
      sub_219360620((uint64_t)v24, &qword_267C18EA0);
      sub_2193C69E0((uint64_t)v17, v31, type metadata accessor for CableResponse.AllocationResponse);
      sub_2193C69E0(v31, (uint64_t)v24, type metadata accessor for CableResponse.AllocationResponse);
      uint64_t v30 = v46;
      v38(v24, 0, 1, v46);
    }
  }
  uint64_t v32 = v45;
  sub_2193C5B68(&qword_267C19FD0, (void (*)(uint64_t))type metadata accessor for CableResponse.AllocationResponse);
  sub_2193E23D0();
  if (v32) {
    return sub_219360620((uint64_t)v24, &qword_267C18EA0);
  }
  uint64_t v34 = v42;
  sub_219360574((uint64_t)v24, v42, &qword_267C18EA0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v34, 1, v30) == 1)
  {
    sub_219360620((uint64_t)v24, &qword_267C18EA0);
    return sub_219360620(v34, &qword_267C18EA0);
  }
  else
  {
    uint64_t v35 = v41;
    sub_2193C69E0(v34, v41, type metadata accessor for CableResponse.AllocationResponse);
    if (v28 != 1) {
      sub_2193E2370();
    }
    sub_219360620((uint64_t)v24, &qword_267C18EA0);
    uint64_t v36 = v40;
    sub_219360620(v40, &qword_267C1A0D0);
    sub_2193C69E0(v35, v36, type metadata accessor for CableResponse.AllocationResponse);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v29);
  }
}

uint64_t sub_2193C067C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a4;
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  uint64_t v5 = type metadata accessor for CableResponse.StateDeleteResponse(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v41 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v44 = (char *)&v37 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A0D0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CableResponse.OneOf_Response(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v37 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A0E0);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v42 = (uint64_t)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v37 - v23;
  uint64_t v43 = v6;
  uint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v46 = v5;
  uint64_t v26 = v5;
  uint64_t v27 = v25;
  v25((char *)&v37 - v23, 1, 1, v26);
  uint64_t v40 = a1;
  sub_219360574(a1, (uint64_t)v12, &qword_267C1A0D0);
  uint64_t v39 = v14;
  int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v28 == 1)
  {
    sub_219360620((uint64_t)v12, &qword_267C1A0D0);
    uint64_t v29 = v13;
  }
  else
  {
    uint64_t v38 = v27;
    uint64_t v30 = (uint64_t)v44;
    sub_2193C69E0((uint64_t)v12, (uint64_t)v19, type metadata accessor for CableResponse.OneOf_Response);
    sub_2193C69E0((uint64_t)v19, (uint64_t)v17, type metadata accessor for CableResponse.OneOf_Response);
    uint64_t v29 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_219360620((uint64_t)v24, &qword_267C1A0E0);
      sub_2193C69E0((uint64_t)v17, v30, type metadata accessor for CableResponse.StateDeleteResponse);
      sub_2193C69E0(v30, (uint64_t)v24, type metadata accessor for CableResponse.StateDeleteResponse);
      uint64_t v31 = v46;
      v38(v24, 0, 1, v46);
      goto LABEL_7;
    }
    sub_2193C6980((uint64_t)v17, type metadata accessor for CableResponse.OneOf_Response);
  }
  uint64_t v31 = v46;
LABEL_7:
  uint64_t v32 = v45;
  sub_2193C5B68(&qword_267C19FB0, (void (*)(uint64_t))type metadata accessor for CableResponse.StateDeleteResponse);
  sub_2193E23D0();
  if (v32) {
    return sub_219360620((uint64_t)v24, &qword_267C1A0E0);
  }
  uint64_t v34 = v42;
  sub_219360574((uint64_t)v24, v42, &qword_267C1A0E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v34, 1, v31) == 1)
  {
    sub_219360620((uint64_t)v24, &qword_267C1A0E0);
    return sub_219360620(v34, &qword_267C1A0E0);
  }
  else
  {
    uint64_t v35 = v41;
    sub_2193C69E0(v34, v41, type metadata accessor for CableResponse.StateDeleteResponse);
    if (v28 != 1) {
      sub_2193E2370();
    }
    sub_219360620((uint64_t)v24, &qword_267C1A0E0);
    uint64_t v36 = v40;
    sub_219360620(v40, &qword_267C1A0D0);
    sub_2193C69E0(v35, v36, type metadata accessor for CableResponse.StateDeleteResponse);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v29);
  }
}

uint64_t sub_2193C0BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A0D0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_2193C0DD0(v3, a1, a2, a3, type metadata accessor for CableResponse);
  if (!v4)
  {
    sub_2193C0E84(v3);
    sub_219360574(v3, (uint64_t)v10, &qword_267C1A0D0);
    uint64_t v12 = type metadata accessor for CableResponse.OneOf_Response(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12) != 1)
    {
      if (swift_getEnumCaseMultiPayload() == 1) {
        sub_2193C1134(v3);
      }
      else {
        sub_2193C0F10(v3);
      }
      sub_2193C6980((uint64_t)v10, type metadata accessor for CableResponse.OneOf_Response);
    }
    type metadata accessor for CableResponse(0);
    return sub_2193E22E0();
  }
  return result;
}

uint64_t sub_2193C0DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t result = a5(0);
  uint64_t v7 = a1 + *(int *)(result + 24);
  unint64_t v8 = *(void *)(v7 + 8);
  if (v8 >> 60 != 15)
  {
    uint64_t v9 = *(void *)v7;
    sub_21934CDF0(*(void *)v7, *(void *)(v7 + 8));
    sub_2193E2450();
    return sub_21934CEB0(v9, v8);
  }
  return result;
}

uint64_t sub_2193C0E84(uint64_t a1)
{
  uint64_t result = type metadata accessor for CableResponse(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 28)) != 5)
  {
    sub_2193C9A9C();
    return sub_2193E2440();
  }
  return result;
}

uint64_t sub_2193C0F10(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A0D0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CableResponse.AllocationResponse(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_219360574(a1, (uint64_t)v4, &qword_267C1A0D0);
  uint64_t v8 = type metadata accessor for CableResponse.OneOf_Response(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_219360620((uint64_t)v4, &qword_267C1A0D0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_2193C69E0((uint64_t)v4, (uint64_t)v7, type metadata accessor for CableResponse.AllocationResponse);
    sub_2193C5B68(&qword_267C19FD0, (void (*)(uint64_t))type metadata accessor for CableResponse.AllocationResponse);
    sub_2193E2480();
    return sub_2193C6980((uint64_t)v7, type metadata accessor for CableResponse.AllocationResponse);
  }
  uint64_t result = sub_2193C6980((uint64_t)v4, type metadata accessor for CableResponse.OneOf_Response);
  __break(1u);
  return result;
}

uint64_t sub_2193C1134(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A0D0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CableResponse.StateDeleteResponse(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_219360574(a1, (uint64_t)v4, &qword_267C1A0D0);
  uint64_t v8 = type metadata accessor for CableResponse.OneOf_Response(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_219360620((uint64_t)v4, &qword_267C1A0D0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2193C69E0((uint64_t)v4, (uint64_t)v7, type metadata accessor for CableResponse.StateDeleteResponse);
    sub_2193C5B68(&qword_267C19FB0, (void (*)(uint64_t))type metadata accessor for CableResponse.StateDeleteResponse);
    sub_2193E2480();
    return sub_2193C6980((uint64_t)v7, type metadata accessor for CableResponse.StateDeleteResponse);
  }
  uint64_t result = sub_2193C6980((uint64_t)v4, type metadata accessor for CableResponse.OneOf_Response);
  __break(1u);
  return result;
}

double sub_2193C1358@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CableResponse.OneOf_Response(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a2, 1, 1, v4);
  sub_2193E22F0();
  double result = 0.0;
  uint64_t v6 = *(int *)(a1 + 28);
  *(_OWORD *)(a2 + *(int *)(a1 + 24)) = xmmword_2193E7220;
  *(unsigned char *)(a2 + v6) = 5;
  return result;
}

uint64_t sub_2193C13E0()
{
  return 0x736552656C626143;
}

uint64_t sub_2193C1408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_2193E2300();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_2193C1478(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 20);
  uint64_t v5 = sub_2193E2300();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t sub_2193C14E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2193BFF54(a1, a2, a3);
}

uint64_t sub_2193C1500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2193C0BF0(a1, a2, a3);
}

uint64_t sub_2193C1518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193C5B68(&qword_267C1A0C8, (void (*)(uint64_t))type metadata accessor for CableResponse);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2193C1594@<X0>(uint64_t a1@<X8>)
{
  return sub_2193C5884(&qword_267C189D0, (uint64_t)qword_267C29610, a1);
}

uint64_t sub_2193C15B8(uint64_t a1)
{
  uint64_t v2 = sub_2193C5B68(&qword_267C18EB0, (void (*)(uint64_t))type metadata accessor for CableResponse);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2193C1624()
{
  sub_2193C5B68(&qword_267C18EB0, (void (*)(uint64_t))type metadata accessor for CableResponse);

  return sub_2193E2420();
}

uint64_t sub_2193C16A4()
{
  uint64_t v0 = sub_2193E24C0();
  __swift_allocate_value_buffer(v0, qword_267C29628);
  __swift_project_value_buffer(v0, (uint64_t)qword_267C29628);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A078);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C1A080) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2193EC060;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "RESPONSE_STATUS_UNSPECIFIED";
  *(void *)(v6 + 8) = 27;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_2193E2490();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "SUCCESS";
  *(void *)(v10 + 8) = 7;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  void *v11 = 2;
  *(void *)uint64_t v12 = "BAD_REQUEST";
  *((void *)v12 + 1) = 11;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 3;
  *(void *)uint64_t v14 = "INTERNAL_ERROR";
  *((void *)v14 + 1) = 14;
  unsigned char v14[16] = 2;
  v9();
  uint64_t v15 = v5 + 4 * v2 + v1[14];
  *(void *)(v5 + 4 * v2) = 4;
  *(void *)uint64_t v15 = "RATE_LIMITED";
  *(void *)(v15 + 8) = 12;
  *(unsigned char *)(v15 + 16) = 2;
  v9();
  return sub_2193E24A0();
}

uint64_t sub_2193C1924@<X0>(uint64_t a1@<X8>)
{
  return sub_2193C5884(&qword_267C189D8, (uint64_t)qword_267C29628, a1);
}

uint64_t sub_2193C1948()
{
  uint64_t v0 = sub_2193E24C0();
  __swift_allocate_value_buffer(v0, qword_267C29640);
  __swift_project_value_buffer(v0, (uint64_t)qword_267C29640);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A078);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C1A080) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2193E7180;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 1;
  *(void *)unint64_t v6 = "routing_id";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = sub_2193E2490();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "encoded_domain";
  *((void *)v10 + 1) = 14;
  unsigned char v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "contact_id";
  *(void *)(v11 + 8) = 10;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_2193E24A0();
}

uint64_t sub_2193C1B4C()
{
  while (1)
  {
    uint64_t result = sub_2193E2360();
    if (v0 || (v2 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 3:
        goto LABEL_2;
      case 2:
        type metadata accessor for CableResponse.AllocationResponse(0);
        sub_2193E23C0();
        break;
      case 1:
LABEL_2:
        type metadata accessor for CableResponse.AllocationResponse(0);
        sub_2193E23A0();
        break;
    }
    uint64_t v0 = 0;
  }
}

uint64_t sub_2193C1C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_2193BF714(v3, a1, a2, a3, type metadata accessor for CableResponse.AllocationResponse);
  if (!v4)
  {
    sub_2193C1CE8(v3);
    sub_2193C3A24(v3, a1, a2, a3, type metadata accessor for CableResponse.AllocationResponse);
    return sub_2193E22E0();
  }
  return result;
}

uint64_t sub_2193C1CE8(uint64_t a1)
{
  uint64_t result = type metadata accessor for CableResponse.AllocationResponse(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 24) + 4) & 1) == 0) {
    return sub_2193E2470();
  }
  return result;
}

double sub_2193C1D60@<D0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2193E22F0();
  double result = 0.0;
  uint64_t v5 = a1[6];
  *(_OWORD *)(a2 + a1[5]) = xmmword_2193E7220;
  uint64_t v6 = a2 + v5;
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  *(_OWORD *)(a2 + a1[7]) = xmmword_2193E7220;
  return result;
}

unint64_t sub_2193C1DB0()
{
  return 0xD000000000000020;
}

uint64_t sub_2193C1DCC(uint64_t a1)
{
  if (*(void *)(v1 + *(int *)(a1 + 20) + 8) >> 60 == 15) {
    return 0;
  }
  else {
    return (*(unsigned __int8 *)(v1 + *(int *)(a1 + 24) + 4) ^ 1) & 1;
  }
}

uint64_t sub_2193C1E04()
{
  return sub_2193C1B4C();
}

uint64_t sub_2193C1E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2193C1C34(a1, a2, a3);
}

uint64_t sub_2193C1E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193C5B68(&qword_267C1A0F8, (void (*)(uint64_t))type metadata accessor for CableResponse.AllocationResponse);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2193C1EB0@<X0>(uint64_t a1@<X8>)
{
  return sub_2193C5884(&qword_267C189E0, (uint64_t)qword_267C29640, a1);
}

uint64_t sub_2193C1ED4(uint64_t a1)
{
  uint64_t v2 = sub_2193C5B68(&qword_267C19FD0, (void (*)(uint64_t))type metadata accessor for CableResponse.AllocationResponse);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2193C1F40()
{
  sub_2193C5B68(&qword_267C19FD0, (void (*)(uint64_t))type metadata accessor for CableResponse.AllocationResponse);

  return sub_2193E2420();
}

uint64_t sub_2193C1FC0()
{
  uint64_t v0 = sub_2193E24C0();
  __swift_allocate_value_buffer(v0, qword_267C29658);
  __swift_project_value_buffer(v0, (uint64_t)qword_267C29658);
  return sub_2193E24B0();
}

uint64_t sub_2193C200C()
{
  do
    uint64_t result = sub_2193E2360();
  while (!v0 && (v2 & 1) == 0);
  return result;
}

uint64_t sub_2193C2050()
{
  return sub_2193E22E0();
}

unint64_t sub_2193C206C()
{
  return 0xD000000000000021;
}

uint64_t sub_2193C208C()
{
  return sub_2193C200C();
}

uint64_t sub_2193C20A4()
{
  return sub_2193C2050();
}

uint64_t sub_2193C20BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193C5B68(&qword_267C1A100, (void (*)(uint64_t))type metadata accessor for CableResponse.StateDeleteResponse);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2193C2138@<X0>(uint64_t a1@<X8>)
{
  return sub_2193C5884(&qword_267C189E8, (uint64_t)qword_267C29658, a1);
}

uint64_t sub_2193C215C(uint64_t a1)
{
  uint64_t v2 = sub_2193C5B68(&qword_267C19FB0, (void (*)(uint64_t))type metadata accessor for CableResponse.StateDeleteResponse);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2193C21C8()
{
  sub_2193C5B68(&qword_267C19FB0, (void (*)(uint64_t))type metadata accessor for CableResponse.StateDeleteResponse);

  return sub_2193E2420();
}

uint64_t sub_2193C2244(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193E2300();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v14 - v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v14 - v9, a1, v4);
  v11(v8, a2, v4);
  sub_2193C5B68(&qword_267C1A0A8, MEMORY[0x263F50560]);
  LOBYTE(a2) = sub_2193E2820();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  v12(v10, v4);
  return a2 & 1;
}

uint64_t sub_2193C23D0()
{
  uint64_t v0 = sub_2193E24C0();
  __swift_allocate_value_buffer(v0, qword_267C29670);
  __swift_project_value_buffer(v0, (uint64_t)qword_267C29670);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A078);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C1A080) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2193EC070;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "qr_assisted";
  *(void *)(v6 + 8) = 11;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = sub_2193E2490();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "state_assisted";
  *(void *)(v10 + 8) = 14;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  void *v11 = 3;
  *(void *)uint64_t v12 = "relay_ips";
  *((void *)v12 + 1) = 9;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "request_uuid";
  *((void *)v14 + 1) = 12;
  unsigned char v14[16] = 2;
  v9();
  return sub_2193E24A0();
}

uint64_t sub_2193C2608()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A110);
  MEMORY[0x270FA5388](v1 - 8);
  unint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + *(int *)(type metadata accessor for CableRelayConnectionRequest(0) + 28) + 8) >> 60 != 15)
  {
    sub_219360574(v0, (uint64_t)v3, &qword_267C1A110);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_219360620((uint64_t)v3, &qword_267C1A110);
      return 1;
    }
    sub_2193C69E0((uint64_t)v3, (uint64_t)v7, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
    char v8 = sub_2193BD09C();
    sub_2193C6980((uint64_t)v7, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
    if (v8) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_2193C27BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  while (1)
  {
    uint64_t result = sub_2193E2360();
    if (v4 || (v10 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        sub_2193C28FC(v5, a1, a2, a3);
        break;
      case 2:
        sub_2193C2E74(v5, a1, a2, a3);
        break;
      case 3:
        type metadata accessor for CableRelayConnectionRequest(0);
        sub_2193E23B0();
        break;
      case 4:
        type metadata accessor for CableRelayConnectionRequest(0);
        sub_2193E23A0();
        break;
      default:
        continue;
    }
  }
}

uint64_t sub_2193C28FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a4;
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  uint64_t v5 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v41 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v44 = (char *)&v37 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A110);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v37 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A118);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v42 = (uint64_t)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v37 - v23;
  uint64_t v43 = v6;
  uint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v46 = v5;
  uint64_t v26 = v5;
  uint64_t v27 = v25;
  v25((char *)&v37 - v23, 1, 1, v26);
  uint64_t v40 = a1;
  sub_219360574(a1, (uint64_t)v12, &qword_267C1A110);
  uint64_t v39 = v14;
  int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v28 == 1)
  {
    sub_219360620((uint64_t)v12, &qword_267C1A110);
    uint64_t v29 = v13;
    uint64_t v30 = v46;
  }
  else
  {
    uint64_t v38 = v27;
    uint64_t v31 = (uint64_t)v44;
    sub_2193C69E0((uint64_t)v12, (uint64_t)v19, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
    sub_2193C69E0((uint64_t)v19, (uint64_t)v17, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
    uint64_t v29 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2193C6980((uint64_t)v17, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
      uint64_t v30 = v46;
    }
    else
    {
      sub_219360620((uint64_t)v24, &qword_267C1A118);
      sub_2193C69E0((uint64_t)v17, v31, type metadata accessor for CableRelayConnectionRequest.QRAssisted);
      sub_2193C69E0(v31, (uint64_t)v24, type metadata accessor for CableRelayConnectionRequest.QRAssisted);
      uint64_t v30 = v46;
      v38(v24, 0, 1, v46);
    }
  }
  uint64_t v32 = v45;
  sub_2193C5B68(&qword_267C19F70, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest.QRAssisted);
  sub_2193E23D0();
  if (v32) {
    return sub_219360620((uint64_t)v24, &qword_267C1A118);
  }
  uint64_t v34 = v42;
  sub_219360574((uint64_t)v24, v42, &qword_267C1A118);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v34, 1, v30) == 1)
  {
    sub_219360620((uint64_t)v24, &qword_267C1A118);
    return sub_219360620(v34, &qword_267C1A118);
  }
  else
  {
    uint64_t v35 = v41;
    sub_2193C69E0(v34, v41, type metadata accessor for CableRelayConnectionRequest.QRAssisted);
    if (v28 != 1) {
      sub_2193E2370();
    }
    sub_219360620((uint64_t)v24, &qword_267C1A118);
    uint64_t v36 = v40;
    sub_219360620(v40, &qword_267C1A110);
    sub_2193C69E0(v35, v36, type metadata accessor for CableRelayConnectionRequest.QRAssisted);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v29);
  }
}

uint64_t sub_2193C2E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a4;
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  uint64_t v5 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v41 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v44 = (char *)&v37 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A110);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v37 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A120);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v42 = (uint64_t)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v37 - v23;
  uint64_t v43 = v6;
  uint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v46 = v5;
  uint64_t v26 = v5;
  uint64_t v27 = v25;
  v25((char *)&v37 - v23, 1, 1, v26);
  uint64_t v40 = a1;
  sub_219360574(a1, (uint64_t)v12, &qword_267C1A110);
  uint64_t v39 = v14;
  int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v28 == 1)
  {
    sub_219360620((uint64_t)v12, &qword_267C1A110);
    uint64_t v29 = v13;
  }
  else
  {
    uint64_t v38 = v27;
    uint64_t v30 = (uint64_t)v44;
    sub_2193C69E0((uint64_t)v12, (uint64_t)v19, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
    sub_2193C69E0((uint64_t)v19, (uint64_t)v17, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
    uint64_t v29 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_219360620((uint64_t)v24, &qword_267C1A120);
      sub_2193C69E0((uint64_t)v17, v30, type metadata accessor for CableRelayConnectionRequest.StateAssisted);
      sub_2193C69E0(v30, (uint64_t)v24, type metadata accessor for CableRelayConnectionRequest.StateAssisted);
      uint64_t v31 = v46;
      v38(v24, 0, 1, v46);
      goto LABEL_7;
    }
    sub_2193C6980((uint64_t)v17, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
  }
  uint64_t v31 = v46;
LABEL_7:
  uint64_t v32 = v45;
  sub_2193C5B68(&qword_267C19F50, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest.StateAssisted);
  sub_2193E23D0();
  if (v32) {
    return sub_219360620((uint64_t)v24, &qword_267C1A120);
  }
  uint64_t v34 = v42;
  sub_219360574((uint64_t)v24, v42, &qword_267C1A120);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v34, 1, v31) == 1)
  {
    sub_219360620((uint64_t)v24, &qword_267C1A120);
    return sub_219360620(v34, &qword_267C1A120);
  }
  else
  {
    uint64_t v35 = v41;
    sub_2193C69E0(v34, v41, type metadata accessor for CableRelayConnectionRequest.StateAssisted);
    if (v28 != 1) {
      sub_2193E2370();
    }
    sub_219360620((uint64_t)v24, &qword_267C1A120);
    uint64_t v36 = v40;
    sub_219360620(v40, &qword_267C1A110);
    sub_2193C69E0(v35, v36, type metadata accessor for CableRelayConnectionRequest.StateAssisted);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v29);
  }
}

uint64_t sub_2193C33E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A110);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_219360574(v3, (uint64_t)v11, &qword_267C1A110);
  uint64_t v12 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12) == 1) {
    goto LABEL_12;
  }
  if (swift_getEnumCaseMultiPayload() == 1) {
    sub_2193C3800(v3);
  }
  else {
    sub_2193C35DC(v3);
  }
  uint64_t v5 = v4;
  uint64_t result = sub_2193C6980((uint64_t)v11, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
  if (!v4)
  {
LABEL_12:
    if (!*(void *)(*(void *)(v3 + *(int *)(type metadata accessor for CableRelayConnectionRequest(0) + 20)) + 16)
      || (uint64_t result = sub_2193E2460(), !v5))
    {
      uint64_t result = sub_2193C3A24(v3, a1, a2, a3, type metadata accessor for CableRelayConnectionRequest);
      if (!v5) {
        return sub_2193E22E0();
      }
    }
  }
  return result;
}

uint64_t sub_2193C35DC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A110);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_219360574(a1, (uint64_t)v4, &qword_267C1A110);
  uint64_t v8 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_219360620((uint64_t)v4, &qword_267C1A110);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_2193C69E0((uint64_t)v4, (uint64_t)v7, type metadata accessor for CableRelayConnectionRequest.QRAssisted);
    sub_2193C5B68(&qword_267C19F70, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest.QRAssisted);
    sub_2193E2480();
    return sub_2193C6980((uint64_t)v7, type metadata accessor for CableRelayConnectionRequest.QRAssisted);
  }
  uint64_t result = sub_2193C6980((uint64_t)v4, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
  __break(1u);
  return result;
}

uint64_t sub_2193C3800(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A110);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_219360574(a1, (uint64_t)v4, &qword_267C1A110);
  uint64_t v8 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_219360620((uint64_t)v4, &qword_267C1A110);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2193C69E0((uint64_t)v4, (uint64_t)v7, type metadata accessor for CableRelayConnectionRequest.StateAssisted);
    sub_2193C5B68(&qword_267C19F50, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest.StateAssisted);
    sub_2193E2480();
    return sub_2193C6980((uint64_t)v7, type metadata accessor for CableRelayConnectionRequest.StateAssisted);
  }
  uint64_t result = sub_2193C6980((uint64_t)v4, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
  __break(1u);
  return result;
}

uint64_t sub_2193C3A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t result = a5(0);
  uint64_t v7 = a1 + *(int *)(result + 28);
  unint64_t v8 = *(void *)(v7 + 8);
  if (v8 >> 60 != 15)
  {
    uint64_t v9 = *(void *)v7;
    sub_21934CDF0(*(void *)v7, *(void *)(v7 + 8));
    sub_2193E2450();
    return sub_21934CEB0(v9, v8);
  }
  return result;
}

double sub_2193C3ADC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a2, 1, 1, v4);
  *(void *)(a2 + *(int *)(a1 + 20)) = MEMORY[0x263F8EE78];
  sub_2193E22F0();
  double result = 0.0;
  *(_OWORD *)(a2 + *(int *)(a1 + 28)) = xmmword_2193E7220;
  return result;
}

unint64_t sub_2193C3B68()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_2193C3B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = sub_2193E2300();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_2193C3BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 24);
  uint64_t v5 = sub_2193E2300();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*sub_2193C3C68())()
{
  return nullsub_1;
}

uint64_t sub_2193C3C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2193C27BC(a1, a2, a3);
}

uint64_t sub_2193C3CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2193C33E8(a1, a2, a3);
}

uint64_t sub_2193C3CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193C5B68(&qword_267C1A108, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2193C3D38@<X0>(uint64_t a1@<X8>)
{
  return sub_2193C5884(&qword_267C189F0, (uint64_t)qword_267C29670, a1);
}

uint64_t sub_2193C3D5C(uint64_t a1)
{
  uint64_t v2 = sub_2193C5B68(&qword_267C19F90, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2193C3DC8()
{
  sub_2193C5B68(&qword_267C19F90, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest);

  return sub_2193E2420();
}

uint64_t sub_2193C3E48(uint64_t a1)
{
  return sub_2193C3E68(a1, qword_267C29688, (uint64_t)"routing_id", (uint64_t)"tunnel_id", 9);
}

uint64_t sub_2193C3E68(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_2193E24C0();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A078);
  unint64_t v8 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C1A080) - 8);
  uint64_t v9 = *(void *)(*(void *)v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(*(void *)v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_2193E7170;
  uint64_t v12 = (void *)(v11 + v10);
  unint64_t v13 = v11 + v10 + v8[14];
  *uint64_t v12 = 1;
  *(void *)unint64_t v13 = a3;
  *(void *)(v13 + 8) = 10;
  *(unsigned char *)(v13 + 16) = 2;
  uint64_t v14 = *MEMORY[0x263F50728];
  uint64_t v15 = sub_2193E2490();
  uint64_t v16 = *(void (**)(void))(*(void *)(v15 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v16)(v13, v14, v15);
  uint64_t v17 = (char *)v12 + v9 + v8[14];
  *(void *)((char *)v12 + v9) = 2;
  *(void *)uint64_t v17 = a4;
  *((void *)v17 + 1) = a5;
  v17[16] = 2;
  v16();
  return sub_2193E24A0();
}

uint64_t sub_2193C4018(uint64_t a1, uint64_t a2)
{
  return sub_2193C6CD8(a1, a2, type metadata accessor for CableRelayConnectionRequest.QRAssisted) & 1;
}

unint64_t sub_2193C404C()
{
  return 0xD000000000000026;
}

uint64_t sub_2193C406C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2193C4284(a1, a2, a3, (void (*)(void))type metadata accessor for CableRelayConnectionRequest.QRAssisted);
}

uint64_t sub_2193C4098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2193C4340(a1, a2, a3, type metadata accessor for CableRelayConnectionRequest.QRAssisted, type metadata accessor for CableRelayConnectionRequest.QRAssisted);
}

uint64_t sub_2193C40D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193C5B68(&qword_267C1A138, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest.QRAssisted);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2193C4154@<X0>(uint64_t a1@<X8>)
{
  return sub_2193C5884(&qword_267C189F8, (uint64_t)qword_267C29688, a1);
}

uint64_t sub_2193C4178(uint64_t a1)
{
  uint64_t v2 = sub_2193C5B68(&qword_267C19F70, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest.QRAssisted);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2193C41E4()
{
  sub_2193C5B68(&qword_267C19F70, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest.QRAssisted);

  return sub_2193E2420();
}

uint64_t sub_2193C4264(uint64_t a1)
{
  return sub_2193C3E68(a1, qword_267C296A0, (uint64_t)"contact_id", (uint64_t)"client_payload", 14);
}

uint64_t sub_2193C4284(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  while (1)
  {
    uint64_t result = sub_2193E2360();
    if (v4 || (v7 & 1) != 0) {
      break;
    }
    if (result == 2 || result == 1)
    {
      a4(0);
      sub_2193E23A0();
    }
    uint64_t v4 = 0;
  }
  return result;
}

uint64_t sub_2193C4340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t result = sub_2193BF714(v5, a1, a2, a3, a4);
  if (!v6)
  {
    sub_2193C0DD0(v5, a1, a2, a3, a5);
    return sub_2193E22E0();
  }
  return result;
}

double sub_2193C43C0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2193E22F0();
  double result = 0.0;
  uint64_t v5 = *(int *)(a1 + 24);
  *(_OWORD *)(a2 + *(int *)(a1 + 20)) = xmmword_2193E7220;
  *(_OWORD *)(a2 + v5) = xmmword_2193E7220;
  return result;
}

unint64_t sub_2193C43FC()
{
  return 0xD000000000000029;
}

BOOL sub_2193C4418(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 20) + 8) >> 60 != 15 && *(void *)(v1 + *(int *)(a1 + 24) + 8) >> 60 != 15;
}

uint64_t sub_2193C4454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2193C4284(a1, a2, a3, (void (*)(void))type metadata accessor for CableRelayConnectionRequest.StateAssisted);
}

uint64_t sub_2193C4480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2193C4340(a1, a2, a3, type metadata accessor for CableRelayConnectionRequest.StateAssisted, type metadata accessor for CableRelayConnectionRequest.StateAssisted);
}

uint64_t sub_2193C44C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193C5B68(&qword_267C1A140, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest.StateAssisted);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2193C453C@<X0>(uint64_t a1@<X8>)
{
  return sub_2193C5884(&qword_267C18A00, (uint64_t)qword_267C296A0, a1);
}

uint64_t sub_2193C4560(uint64_t a1)
{
  uint64_t v2 = sub_2193C5B68(&qword_267C19F50, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest.StateAssisted);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2193C45CC()
{
  sub_2193C5B68(&qword_267C19F50, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest.StateAssisted);

  return sub_2193E2420();
}

uint64_t sub_2193C4648(uint64_t a1, uint64_t a2)
{
  return sub_2193C6CD8(a1, a2, type metadata accessor for CableRelayConnectionRequest.StateAssisted) & 1;
}

uint64_t sub_2193C4678()
{
  uint64_t v0 = sub_2193E24C0();
  __swift_allocate_value_buffer(v0, qword_267C296B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_267C296B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A078);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C1A080) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2193E7170;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "status";
  *(void *)(v6 + 8) = 6;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_2193E2490();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 4;
  *(void *)unint64_t v10 = "request_uuid";
  *((void *)v10 + 1) = 12;
  unsigned char v10[16] = 2;
  v9();
  return sub_2193E24A0();
}

uint64_t sub_2193C483C()
{
  while (1)
  {
    uint64_t result = sub_2193E2360();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 4)
    {
      type metadata accessor for CableRelayConnectionResponse(0);
      sub_2193E23A0();
    }
    else if (result == 1)
    {
      sub_2193C4904();
    }
    uint64_t v0 = 0;
  }
  return result;
}

uint64_t sub_2193C4904()
{
  return sub_2193E2390();
}

uint64_t sub_2193C497C(uint64_t a1)
{
  uint64_t result = type metadata accessor for CableRelayConnectionResponse(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 20)) != 5)
  {
    sub_2193C9B78();
    return sub_2193E2440();
  }
  return result;
}

double sub_2193C4A08@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2193E22F0();
  uint64_t v4 = *(int *)(a1 + 24);
  *(unsigned char *)(a2 + *(int *)(a1 + 20)) = 5;
  double result = 0.0;
  *(_OWORD *)(a2 + v4) = xmmword_2193E7220;
  return result;
}

unint64_t sub_2193C4A48()
{
  return 0xD00000000000001CLL;
}

BOOL sub_2193C4A64(uint64_t a1)
{
  return *(unsigned char *)(v1 + *(int *)(a1 + 20)) != 5 && *(void *)(v1 + *(int *)(a1 + 24) + 8) >> 60 != 15;
}

uint64_t sub_2193C4A98()
{
  return sub_2193C483C();
}

uint64_t sub_2193C4AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2193C537C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2193C497C, type metadata accessor for CableRelayConnectionResponse);
}

uint64_t sub_2193C4AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193C5B68(&qword_267C1A148, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionResponse);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2193C4B70@<X0>(uint64_t a1@<X8>)
{
  return sub_2193C5884(&qword_267C18A08, (uint64_t)qword_267C296B8, a1);
}

uint64_t sub_2193C4B94(uint64_t a1)
{
  uint64_t v2 = sub_2193C5B68(&qword_267C19F30, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionResponse);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2193C4C00()
{
  sub_2193C5B68(&qword_267C19F30, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionResponse);

  return sub_2193E2420();
}

uint64_t sub_2193C4C80()
{
  uint64_t v0 = sub_2193E24C0();
  __swift_allocate_value_buffer(v0, qword_267C296D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_267C296D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A078);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_267C1A080) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2193E7170;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "connection";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_2193E2490();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "access_token";
  *((void *)v10 + 1) = 12;
  unsigned char v10[16] = 2;
  v9();
  return sub_2193E24A0();
}

uint64_t sub_2193C4E40()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A110);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v27 = (uint64_t)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v24 = (uint64_t)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CableRelayConnectionRequest(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v28 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C18E30);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = type metadata accessor for CableRelayPushMessage(0);
  uint64_t v15 = v0 + *(int *)(v14 + 20);
  sub_219360574(v15, (uint64_t)v13, (uint64_t *)&unk_267C18E30);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  int v17 = v16(v13, 1, v5);
  sub_219360620((uint64_t)v13, (uint64_t *)&unk_267C18E30);
  if (v17 != 1 && *(void *)(v0 + *(int *)(v14 + 24) + 8) >> 60 != 15)
  {
    sub_219360574(v15, (uint64_t)v11, (uint64_t *)&unk_267C18E30);
    if (v16(v11, 1, v5) == 1)
    {
      sub_219360620((uint64_t)v11, (uint64_t *)&unk_267C18E30);
      return 1;
    }
    uint64_t v18 = v28;
    sub_2193C69E0((uint64_t)v11, v28, type metadata accessor for CableRelayConnectionRequest);
    if (*(void *)(v18 + *(int *)(v5 + 28) + 8) >> 60 != 15)
    {
      uint64_t v19 = v27;
      sub_219360574(v18, v27, &qword_267C1A110);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v19, 1, v26) == 1)
      {
        sub_219360620(v19, &qword_267C1A110);
LABEL_9:
        sub_2193C6980(v18, type metadata accessor for CableRelayConnectionRequest);
        return 1;
      }
      uint64_t v20 = v24;
      sub_2193C69E0(v19, v24, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
      char v21 = sub_2193BD09C();
      sub_2193C6980(v20, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
      if (v21) {
        goto LABEL_9;
      }
    }
    sub_2193C6980(v18, type metadata accessor for CableRelayConnectionRequest);
  }
  return 0;
}

uint64_t sub_2193C5204()
{
  while (1)
  {
    uint64_t result = sub_2193E2360();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      type metadata accessor for CableRelayPushMessage(0);
      sub_2193E23A0();
    }
    else if (result == 1)
    {
      sub_2193C52CC();
    }
    uint64_t v0 = 0;
  }
  return result;
}

uint64_t sub_2193C52CC()
{
  return sub_2193E23D0();
}

uint64_t sub_2193C537C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a5)(void))
{
  uint64_t result = a4(v5, a1, a2, a3);
  if (!v6)
  {
    sub_2193C0DD0(v5, a1, a2, a3, a5);
    return sub_2193E22E0();
  }
  return result;
}

uint64_t sub_2193C540C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C18E30);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CableRelayConnectionRequest(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CableRelayPushMessage(0);
  sub_219360574(a1 + *(int *)(v12 + 20), (uint64_t)v7, (uint64_t *)&unk_267C18E30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_219360620((uint64_t)v7, (uint64_t *)&unk_267C18E30);
  }
  sub_2193C69E0((uint64_t)v7, (uint64_t)v11, type metadata accessor for CableRelayConnectionRequest);
  sub_2193C5B68(&qword_267C19F90, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest);
  sub_2193E2480();
  return sub_2193C6980((uint64_t)v11, type metadata accessor for CableRelayConnectionRequest);
}

double sub_2193C5610@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2193E22F0();
  uint64_t v4 = a2 + *(int *)(a1 + 20);
  uint64_t v5 = type metadata accessor for CableRelayConnectionRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  double result = 0.0;
  *(_OWORD *)(a2 + *(int *)(a1 + 24)) = xmmword_2193E7220;
  return result;
}

unint64_t sub_2193C5698()
{
  return 0xD000000000000015;
}

uint64_t sub_2193C56B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2193E2300();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_2193C5720(uint64_t a1)
{
  uint64_t v3 = sub_2193E2300();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t sub_2193C5788()
{
  return sub_2193C5204();
}

uint64_t sub_2193C57A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2193C537C(a1, a2, a3, sub_2193C540C, type metadata accessor for CableRelayPushMessage);
}

uint64_t sub_2193C57E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193C5B68(&qword_267C1A158, (void (*)(uint64_t))type metadata accessor for CableRelayPushMessage);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2193C5860@<X0>(uint64_t a1@<X8>)
{
  return sub_2193C5884(&qword_267C18A10, (uint64_t)qword_267C296D0, a1);
}

uint64_t sub_2193C5884@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_2193E24C0();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_2193C5920(uint64_t a1)
{
  uint64_t v2 = sub_2193C5B68(&qword_267C18E48, (void (*)(uint64_t))type metadata accessor for CableRelayPushMessage);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2193C598C()
{
  return sub_2193E3230();
}

uint64_t sub_2193C59E4()
{
  sub_2193C5B68(&qword_267C18E48, (void (*)(uint64_t))type metadata accessor for CableRelayPushMessage);

  return sub_2193E2420();
}

uint64_t sub_2193C5A60()
{
  return sub_2193E3230();
}

uint64_t sub_2193C5AB8()
{
  return sub_2193C5B68(&qword_267C19F10, (void (*)(uint64_t))type metadata accessor for CableRelayPushMessage);
}

uint64_t type metadata accessor for CableRelayPushMessage(uint64_t a1)
{
  return sub_21937EAB4(a1, (uint64_t *)&unk_267C1A240);
}

uint64_t sub_2193C5B20()
{
  return sub_2193C5B68(&qword_267C18E48, (void (*)(uint64_t))type metadata accessor for CableRelayPushMessage);
}

uint64_t sub_2193C5B68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2193C5BB0()
{
  return sub_2193C5B68(&qword_267C19F18, (void (*)(uint64_t))type metadata accessor for CableRelayPushMessage);
}

uint64_t sub_2193C5BF8()
{
  return sub_2193C5B68(&qword_267C19F20, (void (*)(uint64_t))type metadata accessor for CableRelayPushMessage);
}

uint64_t sub_2193C5C40()
{
  return sub_2193C5B68(&qword_267C19F28, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionResponse);
}

uint64_t type metadata accessor for CableRelayConnectionResponse(uint64_t a1)
{
  return sub_21937EAB4(a1, (uint64_t *)&unk_267C1A230);
}

uint64_t sub_2193C5CA8()
{
  return sub_2193C5B68(&qword_267C19F30, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionResponse);
}

uint64_t sub_2193C5CF0()
{
  return sub_2193C5B68(&qword_267C19F38, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionResponse);
}

uint64_t sub_2193C5D38()
{
  return sub_2193C5B68(&qword_267C19F40, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionResponse);
}

uint64_t sub_2193C5D80()
{
  return sub_2193C5B68(&qword_267C19F48, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest.StateAssisted);
}

uint64_t type metadata accessor for CableRelayConnectionRequest.StateAssisted(uint64_t a1)
{
  return sub_21937EAB4(a1, (uint64_t *)&unk_267C1A220);
}

uint64_t sub_2193C5DE8()
{
  return sub_2193C5B68(&qword_267C19F50, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest.StateAssisted);
}

uint64_t sub_2193C5E30()
{
  return sub_2193C5B68(&qword_267C19F58, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest.StateAssisted);
}

uint64_t sub_2193C5E78()
{
  return sub_2193C5B68(&qword_267C19F60, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest.StateAssisted);
}

uint64_t sub_2193C5EC0()
{
  return sub_2193C5B68(&qword_267C19F68, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest.QRAssisted);
}

uint64_t type metadata accessor for CableRelayConnectionRequest.QRAssisted(uint64_t a1)
{
  return sub_21937EAB4(a1, (uint64_t *)&unk_267C1A210);
}

uint64_t sub_2193C5F28()
{
  return sub_2193C5B68(&qword_267C19F70, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest.QRAssisted);
}

uint64_t sub_2193C5F70()
{
  return sub_2193C5B68(&qword_267C19F78, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest.QRAssisted);
}

uint64_t sub_2193C5FB8()
{
  return sub_2193C5B68(&qword_267C19F80, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest.QRAssisted);
}

uint64_t sub_2193C6000()
{
  return sub_2193C5B68(&qword_267C19F88, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest);
}

uint64_t type metadata accessor for CableRelayConnectionRequest(uint64_t a1)
{
  return sub_21937EAB4(a1, (uint64_t *)&unk_267C1A1F8);
}

uint64_t sub_2193C6068()
{
  return sub_2193C5B68(&qword_267C19F90, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest);
}

uint64_t sub_2193C60B0()
{
  return sub_2193C5B68(&qword_267C19F98, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest);
}

uint64_t sub_2193C60F8()
{
  return sub_2193C5B68(&qword_267C19FA0, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest);
}

uint64_t sub_2193C6140()
{
  return sub_2193C5B68(&qword_267C19FA8, (void (*)(uint64_t))type metadata accessor for CableResponse.StateDeleteResponse);
}

uint64_t type metadata accessor for CableResponse.StateDeleteResponse(uint64_t a1)
{
  return sub_21937EAB4(a1, (uint64_t *)&unk_267C1A1E8);
}

uint64_t sub_2193C61A8()
{
  return sub_2193C5B68(&qword_267C19FB0, (void (*)(uint64_t))type metadata accessor for CableResponse.StateDeleteResponse);
}

uint64_t sub_2193C61F0()
{
  return sub_2193C5B68(&qword_267C19FB8, (void (*)(uint64_t))type metadata accessor for CableResponse.StateDeleteResponse);
}

uint64_t sub_2193C6238()
{
  return sub_2193C5B68(&qword_267C19FC0, (void (*)(uint64_t))type metadata accessor for CableResponse.StateDeleteResponse);
}

uint64_t sub_2193C6280()
{
  return sub_2193C5B68(&qword_267C19FC8, (void (*)(uint64_t))type metadata accessor for CableResponse.AllocationResponse);
}

uint64_t type metadata accessor for CableResponse.AllocationResponse(uint64_t a1)
{
  return sub_21937EAB4(a1, (uint64_t *)&unk_267C1A258);
}

uint64_t sub_2193C62E8()
{
  return sub_2193C5B68(&qword_267C19FD0, (void (*)(uint64_t))type metadata accessor for CableResponse.AllocationResponse);
}

uint64_t sub_2193C6330()
{
  return sub_2193C5B68(&qword_267C19FD8, (void (*)(uint64_t))type metadata accessor for CableResponse.AllocationResponse);
}

uint64_t sub_2193C6378()
{
  return sub_2193C5B68(&qword_267C19FE0, (void (*)(uint64_t))type metadata accessor for CableResponse.AllocationResponse);
}

uint64_t sub_2193C63C0()
{
  return sub_2193C5B68(&qword_267C19FE8, (void (*)(uint64_t))type metadata accessor for CableResponse);
}

uint64_t type metadata accessor for CableResponse(uint64_t a1)
{
  return sub_21937EAB4(a1, (uint64_t *)&unk_267C1A1D0);
}

uint64_t sub_2193C6428()
{
  return sub_2193C5B68(&qword_267C18EB0, (void (*)(uint64_t))type metadata accessor for CableResponse);
}

uint64_t sub_2193C6470()
{
  return sub_2193C5B68(&qword_267C19FF0, (void (*)(uint64_t))type metadata accessor for CableResponse);
}

uint64_t sub_2193C64B8()
{
  return sub_2193C5B68(&qword_267C19FF8, (void (*)(uint64_t))type metadata accessor for CableResponse);
}

uint64_t sub_2193C6500()
{
  return sub_2193C5B68(&qword_267C1A000, (void (*)(uint64_t))type metadata accessor for CableRequest.StateDeleteRequest);
}

uint64_t type metadata accessor for CableRequest.StateDeleteRequest(uint64_t a1)
{
  return sub_21937EAB4(a1, (uint64_t *)&unk_267C1A1C0);
}

uint64_t sub_2193C6568()
{
  return sub_2193C5B68(&qword_267C1A008, (void (*)(uint64_t))type metadata accessor for CableRequest.StateDeleteRequest);
}

uint64_t sub_2193C65B0()
{
  return sub_2193C5B68(&qword_267C1A010, (void (*)(uint64_t))type metadata accessor for CableRequest.StateDeleteRequest);
}

uint64_t sub_2193C65F8()
{
  return sub_2193C5B68(&qword_267C1A018, (void (*)(uint64_t))type metadata accessor for CableRequest.StateDeleteRequest);
}

uint64_t sub_2193C6640()
{
  return sub_2193C5B68(&qword_267C1A020, (void (*)(uint64_t))type metadata accessor for CableRequest.AllocationRequest);
}

uint64_t type metadata accessor for CableRequest.AllocationRequest(uint64_t a1)
{
  return sub_21937EAB4(a1, (uint64_t *)&unk_267C1A1B0);
}

uint64_t sub_2193C66A8()
{
  return sub_2193C5B68(&qword_267C1A028, (void (*)(uint64_t))type metadata accessor for CableRequest.AllocationRequest);
}

uint64_t sub_2193C66F0()
{
  return sub_2193C5B68(&qword_267C1A030, (void (*)(uint64_t))type metadata accessor for CableRequest.AllocationRequest);
}

uint64_t sub_2193C6738()
{
  return sub_2193C5B68(&qword_267C1A038, (void (*)(uint64_t))type metadata accessor for CableRequest.AllocationRequest);
}

uint64_t sub_2193C6780()
{
  return sub_2193C5B68(&qword_267C1A040, (void (*)(uint64_t))type metadata accessor for CableRequest);
}

uint64_t type metadata accessor for CableRequest(uint64_t a1)
{
  return sub_21937EAB4(a1, (uint64_t *)&unk_267C1A198);
}

uint64_t sub_2193C67E8()
{
  return sub_2193C5B68(&qword_267C18E98, (void (*)(uint64_t))type metadata accessor for CableRequest);
}

uint64_t sub_2193C6830()
{
  return sub_2193C5B68(&qword_267C1A048, (void (*)(uint64_t))type metadata accessor for CableRequest);
}

uint64_t sub_2193C6878()
{
  return sub_2193C5B68(&qword_267C1A050, (void (*)(uint64_t))type metadata accessor for CableRequest);
}

uint64_t sub_2193C68C0()
{
  return sub_2193C6910(&qword_267C1A058, &qword_267C1A060);
}

uint64_t sub_2193C68E8()
{
  return sub_2193C6910(&qword_267C1A068, &qword_267C1A070);
}

uint64_t sub_2193C6910(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for CableRequest.OneOf_Request(uint64_t a1)
{
  return sub_21937EAB4(a1, (uint64_t *)&unk_267C1A188);
}

uint64_t sub_2193C6980(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2193C69E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2193C6A48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193E2300();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = &v26[-v9];
  uint64_t v11 = type metadata accessor for CableRelayConnectionResponse(0);
  uint64_t v12 = *(int *)(v11 + 20);
  int v13 = *(unsigned __int8 *)(a1 + v12);
  int v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 5)
  {
    if (v14 != 5) {
      goto LABEL_14;
    }
  }
  else if (v14 == 5 || v13 != v14)
  {
    goto LABEL_14;
  }
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = *(void *)(a1 + v16);
  unint64_t v18 = *(void *)(a1 + v16 + 8);
  uint64_t v19 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v19;
  unint64_t v21 = v19[1];
  if (v18 >> 60 == 15)
  {
    if (v21 >> 60 == 15) {
      goto LABEL_17;
    }
    goto LABEL_13;
  }
  if (v21 >> 60 == 15)
  {
LABEL_13:
    sub_21934CE48(v17, v18);
    sub_21934CE48(v20, v21);
    sub_21934CEB0(v17, v18);
    sub_21934CEB0(v20, v21);
    goto LABEL_14;
  }
  sub_21934CE48(v17, v18);
  sub_21934CE48(v20, v21);
  int v27 = sub_219379924(v17, v18, v20, v21);
  sub_21934CEB0(v20, v21);
  sub_21934CEB0(v17, v18);
  if (v27)
  {
LABEL_17:
    uint64_t v24 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16);
    v24(v10, a1, v4);
    v24(v8, a2, v4);
    sub_2193C5B68(&qword_267C1A0A8, MEMORY[0x263F50560]);
    char v22 = sub_2193E2820();
    uint64_t v25 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
    v25(v8, v4);
    v25(v10, v4);
    return v22 & 1;
  }
LABEL_14:
  char v22 = 0;
  return v22 & 1;
}

uint64_t sub_2193C6CD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = sub_2193E2300();
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v34 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t v11 = a3(0);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = *(void *)(a1 + v12);
  unint64_t v14 = *(void *)(a1 + v12 + 8);
  uint64_t v15 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v15;
  unint64_t v17 = v15[1];
  if (v14 >> 60 != 15)
  {
    if (v17 >> 60 != 15)
    {
      sub_21934CE48(v13, v14);
      sub_21934CE48(v16, v17);
      char v20 = sub_219379924(v13, v14, v16, v17);
      sub_21934CEB0(v16, v17);
      sub_21934CEB0(v13, v14);
      if ((v20 & 1) == 0) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
LABEL_5:
    sub_21934CE48(v13, v14);
    sub_21934CE48(v16, v17);
    sub_21934CEB0(v13, v14);
    uint64_t v18 = v16;
    unint64_t v19 = v17;
LABEL_12:
    sub_21934CEB0(v18, v19);
    goto LABEL_13;
  }
  if (v17 >> 60 != 15) {
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v21 = *(int *)(v11 + 24);
  uint64_t v22 = *(void *)(a1 + v21);
  unint64_t v23 = *(void *)(a1 + v21 + 8);
  uint64_t v24 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v24;
  unint64_t v26 = v24[1];
  if (v23 >> 60 == 15)
  {
    if (v26 >> 60 == 15) {
      goto LABEL_16;
    }
    goto LABEL_11;
  }
  if (v26 >> 60 == 15)
  {
LABEL_11:
    sub_21934CE48(v22, v23);
    sub_21934CE48(v25, v26);
    sub_21934CEB0(v22, v23);
    uint64_t v18 = v25;
    unint64_t v19 = v26;
    goto LABEL_12;
  }
  sub_21934CE48(v22, v23);
  sub_21934CE48(v25, v26);
  char v29 = sub_219379924(v22, v23, v25, v26);
  sub_21934CEB0(v25, v26);
  sub_21934CEB0(v22, v23);
  if (v29)
  {
LABEL_16:
    uint64_t v30 = v35;
    uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
    v31(v10, a1, v6);
    uint64_t v32 = v34;
    v31(v34, a2, v6);
    sub_2193C5B68(&qword_267C1A0A8, MEMORY[0x263F50560]);
    char v27 = sub_2193E2820();
    uint64_t v33 = *(void (**)(char *, uint64_t))(v30 + 8);
    v33(v32, v6);
    v33(v10, v6);
    return v27 & 1;
  }
LABEL_13:
  char v27 = 0;
  return v27 & 1;
}

uint64_t sub_2193C7008(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A130);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  unint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v19[*(int *)(v17 + 56)];
  sub_2193C9AF0(a1, (uint64_t)v19, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
  sub_2193C9AF0(a2, v20, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2193C9AF0((uint64_t)v19, (uint64_t)v13, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2193C69E0(v20, (uint64_t)v6, type metadata accessor for CableRelayConnectionRequest.StateAssisted);
      char v21 = sub_2193C6CD8((uint64_t)v13, (uint64_t)v6, type metadata accessor for CableRelayConnectionRequest.StateAssisted);
      sub_2193C6980((uint64_t)v6, type metadata accessor for CableRelayConnectionRequest.StateAssisted);
      uint64_t v22 = (uint64_t)v13;
      unint64_t v23 = type metadata accessor for CableRelayConnectionRequest.StateAssisted;
LABEL_9:
      sub_2193C6980(v22, v23);
      sub_2193C6980((uint64_t)v19, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
      return v21 & 1;
    }
    uint64_t v24 = type metadata accessor for CableRelayConnectionRequest.StateAssisted;
    uint64_t v25 = (uint64_t)v13;
  }
  else
  {
    sub_2193C9AF0((uint64_t)v19, (uint64_t)v15, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_2193C69E0(v20, (uint64_t)v9, type metadata accessor for CableRelayConnectionRequest.QRAssisted);
      char v21 = sub_2193C6CD8((uint64_t)v15, (uint64_t)v9, type metadata accessor for CableRelayConnectionRequest.QRAssisted);
      sub_2193C6980((uint64_t)v9, type metadata accessor for CableRelayConnectionRequest.QRAssisted);
      uint64_t v22 = (uint64_t)v15;
      unint64_t v23 = type metadata accessor for CableRelayConnectionRequest.QRAssisted;
      goto LABEL_9;
    }
    uint64_t v24 = type metadata accessor for CableRelayConnectionRequest.QRAssisted;
    uint64_t v25 = (uint64_t)v15;
  }
  sub_2193C6980(v25, v24);
  sub_219360620((uint64_t)v19, &qword_267C1A130);
  char v21 = 0;
  return v21 & 1;
}

uint64_t sub_2193C7394(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193E2300();
  uint64_t v51 = *(void *)(v4 - 8);
  uint64_t v52 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v50 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v49 = (char *)&v48 - v7;
  uint64_t v8 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v55 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A128);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A110);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  char v21 = (char *)&v48 - v20;
  MEMORY[0x270FA5388](v19);
  unint64_t v23 = (char *)&v48 - v22;
  uint64_t v53 = a1;
  sub_219360574(a1, (uint64_t)&v48 - v22, &qword_267C1A110);
  uint64_t v54 = a2;
  sub_219360574(a2, (uint64_t)v21, &qword_267C1A110);
  uint64_t v24 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_219360574((uint64_t)v23, (uint64_t)v14, &qword_267C1A110);
  sub_219360574((uint64_t)v21, v24, &qword_267C1A110);
  uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v25((uint64_t)v14, 1, v8) != 1)
  {
    uint64_t v26 = (uint64_t)v55;
    sub_219360574((uint64_t)v14, (uint64_t)v18, &qword_267C1A110);
    if (v25(v24, 1, v8) != 1)
    {
      uint64_t v27 = v26;
      sub_2193C69E0(v24, v26, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
      char v28 = sub_2193C7008((uint64_t)v18, v26);
      sub_2193C6980(v27, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
      sub_219360620((uint64_t)v21, &qword_267C1A110);
      sub_219360620((uint64_t)v23, &qword_267C1A110);
      sub_2193C6980((uint64_t)v18, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
      sub_219360620((uint64_t)v14, &qword_267C1A110);
      if ((v28 & 1) == 0) {
        goto LABEL_14;
      }
      goto LABEL_8;
    }
    sub_219360620((uint64_t)v21, &qword_267C1A110);
    sub_219360620((uint64_t)v23, &qword_267C1A110);
    sub_2193C6980((uint64_t)v18, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
LABEL_6:
    sub_219360620((uint64_t)v14, &qword_267C1A128);
    goto LABEL_14;
  }
  sub_219360620((uint64_t)v21, &qword_267C1A110);
  sub_219360620((uint64_t)v23, &qword_267C1A110);
  if (v25(v24, 1, v8) != 1) {
    goto LABEL_6;
  }
  sub_219360620((uint64_t)v14, &qword_267C1A110);
LABEL_8:
  char v29 = (int *)type metadata accessor for CableRelayConnectionRequest(0);
  uint64_t v30 = v53;
  uint64_t v31 = v54;
  if (sub_2193BC948(*(void **)(v53 + v29[5]), *(void **)(v54 + v29[5])))
  {
    uint64_t v32 = v29[7];
    uint64_t v33 = *(void *)(v30 + v32);
    unint64_t v34 = *(void *)(v30 + v32 + 8);
    uint64_t v35 = (uint64_t *)(v31 + v32);
    uint64_t v36 = *v35;
    unint64_t v37 = v35[1];
    if (v34 >> 60 == 15)
    {
      if (v37 >> 60 == 15) {
        goto LABEL_17;
      }
      goto LABEL_13;
    }
    if (v37 >> 60 == 15)
    {
LABEL_13:
      sub_21934CE48(v33, v34);
      sub_21934CE48(v36, v37);
      sub_21934CEB0(v33, v34);
      sub_21934CEB0(v36, v37);
      goto LABEL_14;
    }
    sub_21934CE48(v33, v34);
    sub_21934CE48(v36, v37);
    char v40 = sub_219379924(v33, v34, v36, v37);
    sub_21934CEB0(v36, v37);
    sub_21934CEB0(v33, v34);
    if (v40)
    {
LABEL_17:
      uint64_t v41 = v30 + v29[6];
      uint64_t v43 = v51;
      uint64_t v42 = v52;
      uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 16);
      uint64_t v45 = v49;
      v44(v49, v41, v52);
      uint64_t v46 = v50;
      v44(v50, v31 + v29[6], v42);
      sub_2193C5B68(&qword_267C1A0A8, MEMORY[0x263F50560]);
      char v38 = sub_2193E2820();
      uint64_t v47 = *(void (**)(char *, uint64_t))(v43 + 8);
      v47(v46, v42);
      v47(v45, v42);
      return v38 & 1;
    }
  }
LABEL_14:
  char v38 = 0;
  return v38 & 1;
}

uint64_t sub_2193C7958(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193E2300();
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v49 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v48 = (char *)&v48 - v7;
  uint64_t v8 = type metadata accessor for CableRelayConnectionRequest(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v52 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A160);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C18E30);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v55 = (uint64_t)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v48 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v48 - v21;
  uint64_t v23 = type metadata accessor for CableRelayPushMessage(0);
  uint64_t v24 = *(int *)(v23 + 20);
  uint64_t v53 = a1;
  sub_219360574(a1 + v24, (uint64_t)v22, (uint64_t *)&unk_267C18E30);
  uint64_t v25 = *(int *)(v23 + 20);
  uint64_t v54 = a2;
  sub_219360574(a2 + v25, (uint64_t)v20, (uint64_t *)&unk_267C18E30);
  uint64_t v26 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_219360574((uint64_t)v22, (uint64_t)v14, (uint64_t *)&unk_267C18E30);
  sub_219360574((uint64_t)v20, v26, (uint64_t *)&unk_267C18E30);
  uint64_t v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v27((uint64_t)v14, 1, v8) != 1)
  {
    uint64_t v28 = v55;
    sub_219360574((uint64_t)v14, v55, (uint64_t *)&unk_267C18E30);
    if (v27(v26, 1, v8) != 1)
    {
      uint64_t v29 = v52;
      sub_2193C69E0(v26, v52, type metadata accessor for CableRelayConnectionRequest);
      char v30 = sub_2193C7394(v28, v29);
      sub_2193C6980(v29, type metadata accessor for CableRelayConnectionRequest);
      sub_219360620((uint64_t)v20, (uint64_t *)&unk_267C18E30);
      sub_219360620((uint64_t)v22, (uint64_t *)&unk_267C18E30);
      sub_2193C6980(v28, type metadata accessor for CableRelayConnectionRequest);
      sub_219360620((uint64_t)v14, (uint64_t *)&unk_267C18E30);
      if ((v30 & 1) == 0) {
        goto LABEL_13;
      }
      goto LABEL_8;
    }
    sub_219360620((uint64_t)v20, (uint64_t *)&unk_267C18E30);
    sub_219360620((uint64_t)v22, (uint64_t *)&unk_267C18E30);
    sub_2193C6980(v28, type metadata accessor for CableRelayConnectionRequest);
LABEL_6:
    sub_219360620((uint64_t)v14, &qword_267C1A160);
    goto LABEL_13;
  }
  sub_219360620((uint64_t)v20, (uint64_t *)&unk_267C18E30);
  sub_219360620((uint64_t)v22, (uint64_t *)&unk_267C18E30);
  if (v27(v26, 1, v8) != 1) {
    goto LABEL_6;
  }
  sub_219360620((uint64_t)v14, (uint64_t *)&unk_267C18E30);
LABEL_8:
  uint64_t v31 = *(int *)(v23 + 24);
  uint64_t v33 = v53;
  uint64_t v32 = v54;
  uint64_t v34 = *(void *)(v53 + v31);
  unint64_t v35 = *(void *)(v53 + v31 + 8);
  uint64_t v36 = (uint64_t *)(v54 + v31);
  uint64_t v37 = *v36;
  unint64_t v38 = v36[1];
  if (v35 >> 60 == 15)
  {
    if (v38 >> 60 == 15) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  if (v38 >> 60 == 15)
  {
LABEL_12:
    sub_21934CE48(v34, v35);
    sub_21934CE48(v37, v38);
    sub_21934CEB0(v34, v35);
    sub_21934CEB0(v37, v38);
    goto LABEL_13;
  }
  sub_21934CE48(v34, v35);
  sub_21934CE48(v37, v38);
  char v41 = sub_219379924(v34, v35, v37, v38);
  sub_21934CEB0(v37, v38);
  sub_21934CEB0(v34, v35);
  if (v41)
  {
LABEL_16:
    uint64_t v43 = v50;
    uint64_t v42 = v51;
    uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
    uint64_t v45 = v48;
    v44(v48, v33, v51);
    uint64_t v46 = v49;
    v44(v49, v32, v42);
    sub_2193C5B68(&qword_267C1A0A8, MEMORY[0x263F50560]);
    char v39 = sub_2193E2820();
    uint64_t v47 = *(void (**)(char *, uint64_t))(v43 + 8);
    v47(v46, v42);
    v47(v45, v42);
    return v39 & 1;
  }
LABEL_13:
  char v39 = 0;
  return v39 & 1;
}

uint64_t sub_2193C7F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193E2300();
  uint64_t v60 = *(void *)(v4 - 8);
  uint64_t v61 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v59 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v58 = (char *)&v56 - v7;
  uint64_t v8 = type metadata accessor for CableResponse.OneOf_Response(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v63 = v8;
  uint64_t v64 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v57 = (uint64_t)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A0E8);
  MEMORY[0x270FA5388](v11);
  uint64_t v65 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A0D0);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v56 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v62 = (uint64_t)&v56 - v20;
  uint64_t v21 = type metadata accessor for CableResponse(0);
  uint64_t v22 = *(int *)(v21 + 24);
  uint64_t v23 = a1;
  uint64_t v24 = a1 + v22;
  uint64_t v25 = *(void *)(a1 + v22);
  unint64_t v26 = *(void *)(v24 + 8);
  uint64_t v27 = a2;
  uint64_t v28 = (uint64_t *)(a2 + v22);
  uint64_t v29 = *v28;
  unint64_t v30 = v28[1];
  if (v26 >> 60 == 15)
  {
    if (v30 >> 60 == 15) {
      goto LABEL_9;
    }
LABEL_5:
    sub_21934CE48(v25, *(void *)(v24 + 8));
    sub_21934CE48(v29, v30);
    sub_21934CEB0(v25, v26);
    sub_21934CEB0(v29, v30);
    goto LABEL_6;
  }
  if (v30 >> 60 == 15) {
    goto LABEL_5;
  }
  uint64_t v56 = v21;
  sub_21934CE48(v25, v26);
  sub_21934CE48(v29, v30);
  char v33 = sub_219379924(v25, v26, v29, v30);
  sub_21934CEB0(v29, v30);
  sub_21934CEB0(v25, v26);
  uint64_t v21 = v56;
  if ((v33 & 1) == 0) {
    goto LABEL_6;
  }
LABEL_9:
  uint64_t v34 = *(int *)(v21 + 28);
  uint64_t v35 = v23;
  int v36 = *(unsigned __int8 *)(v23 + v34);
  uint64_t v37 = v27;
  int v38 = *(unsigned __int8 *)(v27 + v34);
  if (v36 == 5)
  {
    uint64_t v40 = v64;
    uint64_t v39 = (uint64_t)v65;
    uint64_t v41 = (uint64_t)v16;
    if (v38 != 5) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
  char v31 = 0;
  uint64_t v40 = v64;
  uint64_t v39 = (uint64_t)v65;
  if (v38 != 5)
  {
    uint64_t v41 = (uint64_t)v16;
    if (v36 == v38)
    {
LABEL_14:
      uint64_t v56 = v21;
      uint64_t v42 = v62;
      sub_219360574(v35, v62, &qword_267C1A0D0);
      sub_219360574(v37, (uint64_t)v19, &qword_267C1A0D0);
      uint64_t v43 = v39 + *(int *)(v11 + 48);
      sub_219360574(v42, v39, &qword_267C1A0D0);
      sub_219360574((uint64_t)v19, v43, &qword_267C1A0D0);
      uint64_t v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
      uint64_t v45 = v63;
      if (v44(v39, 1, v63) == 1)
      {
        sub_219360620((uint64_t)v19, &qword_267C1A0D0);
        sub_219360620(v42, &qword_267C1A0D0);
        if (v44(v43, 1, v45) == 1)
        {
          sub_219360620(v39, &qword_267C1A0D0);
LABEL_21:
          uint64_t v48 = v56;
          uint64_t v49 = v35 + *(int *)(v56 + 20);
          uint64_t v51 = v60;
          uint64_t v50 = v61;
          uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
          uint64_t v53 = v58;
          v52(v58, v49, v61);
          uint64_t v54 = v59;
          v52(v59, v37 + *(int *)(v48 + 20), v50);
          sub_2193C5B68(&qword_267C1A0A8, MEMORY[0x263F50560]);
          char v31 = sub_2193E2820();
          uint64_t v55 = *(void (**)(char *, uint64_t))(v51 + 8);
          v55(v54, v50);
          v55(v53, v50);
          return v31 & 1;
        }
      }
      else
      {
        sub_219360574(v39, v41, &qword_267C1A0D0);
        if (v44(v43, 1, v45) != 1)
        {
          uint64_t v46 = v57;
          sub_2193C69E0(v43, v57, type metadata accessor for CableResponse.OneOf_Response);
          char v47 = sub_2193C8534(v41, v46);
          sub_2193C6980(v46, type metadata accessor for CableResponse.OneOf_Response);
          sub_219360620((uint64_t)v19, &qword_267C1A0D0);
          sub_219360620(v42, &qword_267C1A0D0);
          sub_2193C6980(v41, type metadata accessor for CableResponse.OneOf_Response);
          sub_219360620(v39, &qword_267C1A0D0);
          if (v47) {
            goto LABEL_21;
          }
          goto LABEL_6;
        }
        sub_219360620((uint64_t)v19, &qword_267C1A0D0);
        sub_219360620(v42, &qword_267C1A0D0);
        sub_2193C6980(v41, type metadata accessor for CableResponse.OneOf_Response);
      }
      sub_219360620(v39, &qword_267C1A0E8);
LABEL_6:
      char v31 = 0;
    }
  }
  return v31 & 1;
}

uint64_t sub_2193C8534(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CableResponse.StateDeleteResponse(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CableResponse.AllocationResponse(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CableResponse.OneOf_Response(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A0F0);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v19[*(int *)(v17 + 56)];
  sub_2193C9AF0(a1, (uint64_t)v19, type metadata accessor for CableResponse.OneOf_Response);
  sub_2193C9AF0(a2, v20, type metadata accessor for CableResponse.OneOf_Response);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2193C9AF0((uint64_t)v19, (uint64_t)v13, type metadata accessor for CableResponse.OneOf_Response);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2193C69E0(v20, (uint64_t)v6, type metadata accessor for CableResponse.StateDeleteResponse);
      sub_2193E2300();
      sub_2193C5B68(&qword_267C1A0A8, MEMORY[0x263F50560]);
      char v21 = sub_2193E2820();
      sub_2193C6980((uint64_t)v6, type metadata accessor for CableResponse.StateDeleteResponse);
      uint64_t v22 = (uint64_t)v13;
      uint64_t v23 = type metadata accessor for CableResponse.StateDeleteResponse;
LABEL_9:
      sub_2193C6980(v22, v23);
      sub_2193C6980((uint64_t)v19, type metadata accessor for CableResponse.OneOf_Response);
      return v21 & 1;
    }
    uint64_t v24 = type metadata accessor for CableResponse.StateDeleteResponse;
    uint64_t v25 = (uint64_t)v13;
  }
  else
  {
    sub_2193C9AF0((uint64_t)v19, (uint64_t)v15, type metadata accessor for CableResponse.OneOf_Response);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_2193C69E0(v20, (uint64_t)v9, type metadata accessor for CableResponse.AllocationResponse);
      char v21 = sub_2193C88E0((uint64_t)v15, (uint64_t)v9);
      sub_2193C6980((uint64_t)v9, type metadata accessor for CableResponse.AllocationResponse);
      uint64_t v22 = (uint64_t)v15;
      uint64_t v23 = type metadata accessor for CableResponse.AllocationResponse;
      goto LABEL_9;
    }
    uint64_t v24 = type metadata accessor for CableResponse.AllocationResponse;
    uint64_t v25 = (uint64_t)v15;
  }
  sub_2193C6980(v25, v24);
  sub_219360620((uint64_t)v19, &qword_267C1A0F0);
  char v21 = 0;
  return v21 & 1;
}

uint64_t sub_2193C88E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193E2300();
  uint64_t v39 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v39 - v8;
  uint64_t v10 = (int *)type metadata accessor for CableResponse.AllocationResponse(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = *(void *)(a1 + v11);
  unint64_t v13 = *(void *)(a1 + v11 + 8);
  uint64_t v14 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v14;
  unint64_t v16 = v14[1];
  uint64_t v40 = v4;
  if (v13 >> 60 == 15)
  {
    if (v16 >> 60 == 15) {
      goto LABEL_10;
    }
LABEL_5:
    sub_21934CE48(v12, v13);
    sub_21934CE48(v15, v16);
    sub_21934CEB0(v12, v13);
    uint64_t v17 = v15;
    unint64_t v18 = v16;
LABEL_6:
    sub_21934CEB0(v17, v18);
    goto LABEL_7;
  }
  if (v16 >> 60 == 15) {
    goto LABEL_5;
  }
  sub_21934CE48(v12, v13);
  sub_21934CE48(v15, v16);
  char v21 = sub_219379924(v12, v13, v15, v16);
  sub_21934CEB0(v15, v16);
  sub_21934CEB0(v12, v13);
  if ((v21 & 1) == 0) {
    goto LABEL_7;
  }
LABEL_10:
  uint64_t v22 = v10[6];
  uint64_t v23 = (_DWORD *)(a1 + v22);
  char v24 = *(unsigned char *)(a1 + v22 + 4);
  uint64_t v25 = (_DWORD *)(a2 + v22);
  int v26 = *(unsigned __int8 *)(a2 + v22 + 4);
  if (v24)
  {
    if (!v26) {
      goto LABEL_7;
    }
  }
  else
  {
    if (*v23 != *v25) {
      LOBYTE(v26) = 1;
    }
    if (v26) {
      goto LABEL_7;
    }
  }
  uint64_t v27 = v10[7];
  uint64_t v28 = *(void *)(a1 + v27);
  unint64_t v29 = *(void *)(a1 + v27 + 8);
  unint64_t v30 = (uint64_t *)(a2 + v27);
  uint64_t v31 = *v30;
  unint64_t v32 = v30[1];
  if (v29 >> 60 == 15)
  {
    if (v32 >> 60 == 15) {
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  if (v32 >> 60 == 15)
  {
LABEL_20:
    sub_21934CE48(v28, v29);
    sub_21934CE48(v31, v32);
    sub_21934CEB0(v28, v29);
    uint64_t v17 = v31;
    unint64_t v18 = v32;
    goto LABEL_6;
  }
  sub_21934CE48(v28, v29);
  sub_21934CE48(v31, v32);
  char v33 = sub_219379924(v28, v29, v31, v32);
  sub_21934CEB0(v31, v32);
  sub_21934CEB0(v28, v29);
  if (v33)
  {
LABEL_22:
    uint64_t v34 = v39;
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
    uint64_t v36 = a1;
    uint64_t v37 = v40;
    v35(v9, v36, v40);
    v35(v7, a2, v37);
    sub_2193C5B68(&qword_267C1A0A8, MEMORY[0x263F50560]);
    char v19 = sub_2193E2820();
    int v38 = *(void (**)(char *, uint64_t))(v34 + 8);
    v38(v7, v37);
    v38(v9, v37);
    return v19 & 1;
  }
LABEL_7:
  char v19 = 0;
  return v19 & 1;
}

uint64_t sub_2193C8C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193E2300();
  uint64_t v54 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v53 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v52 = (char *)&v50 - v7;
  uint64_t v8 = type metadata accessor for CableRequest.OneOf_Request(0);
  uint64_t v57 = *(void *)(v8 - 8);
  uint64_t v58 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v50 = (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A0A0);
  MEMORY[0x270FA5388](v10);
  uint64_t v59 = (uint64_t)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E90);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v56 = (uint64_t)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v50 - v16;
  MEMORY[0x270FA5388](v15);
  char v19 = (char *)&v50 - v18;
  uint64_t v51 = type metadata accessor for CableRequest(0);
  uint64_t v20 = *(int *)(v51 + 24);
  uint64_t v21 = a1;
  uint64_t v22 = a1 + v20;
  uint64_t v23 = *(void *)(a1 + v20);
  unint64_t v24 = *(void *)(v22 + 8);
  uint64_t v25 = a2;
  int v26 = (uint64_t *)(a2 + v20);
  uint64_t v27 = *v26;
  unint64_t v28 = v26[1];
  if (v24 >> 60 != 15)
  {
    if (v28 >> 60 != 15)
    {
      sub_21934CE48(v23, *(void *)(v22 + 8));
      sub_21934CE48(v27, v28);
      char v29 = sub_219379924(v23, v24, v27, v28);
      sub_21934CEB0(v27, v28);
      sub_21934CEB0(v23, v24);
      if ((v29 & 1) == 0) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
LABEL_5:
    sub_21934CE48(v23, *(void *)(v22 + 8));
    sub_21934CE48(v27, v28);
    sub_21934CEB0(v23, v24);
    sub_21934CEB0(v27, v28);
    goto LABEL_13;
  }
  if (v28 >> 60 != 15) {
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v30 = v21;
  sub_219360574(v21, (uint64_t)v19, &qword_267C18E90);
  uint64_t v31 = v25;
  sub_219360574(v25, (uint64_t)v17, &qword_267C18E90);
  uint64_t v32 = v59;
  uint64_t v33 = v59 + *(int *)(v10 + 48);
  sub_219360574((uint64_t)v19, v59, &qword_267C18E90);
  sub_219360574((uint64_t)v17, v33, &qword_267C18E90);
  uint64_t v34 = v58;
  uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  if (v35(v32, 1, v58) == 1)
  {
    sub_219360620((uint64_t)v17, &qword_267C18E90);
    sub_219360620((uint64_t)v19, &qword_267C18E90);
    if (v35(v33, 1, v34) == 1)
    {
      sub_219360620(v32, &qword_267C18E90);
LABEL_16:
      uint64_t v42 = v51;
      uint64_t v43 = v52;
      uint64_t v45 = v54;
      uint64_t v44 = v55;
      uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 16);
      v46(v52, v30 + *(int *)(v51 + 20), v55);
      uint64_t v47 = v31 + *(int *)(v42 + 20);
      uint64_t v48 = v53;
      v46(v53, v47, v44);
      sub_2193C5B68(&qword_267C1A0A8, MEMORY[0x263F50560]);
      char v37 = sub_2193E2820();
      uint64_t v49 = *(void (**)(char *, uint64_t))(v45 + 8);
      v49(v48, v44);
      v49(v43, v44);
      return v37 & 1;
    }
    goto LABEL_12;
  }
  uint64_t v36 = v56;
  sub_219360574(v32, v56, &qword_267C18E90);
  if (v35(v33, 1, v34) == 1)
  {
    sub_219360620((uint64_t)v17, &qword_267C18E90);
    sub_219360620((uint64_t)v19, &qword_267C18E90);
    sub_2193C6980(v36, type metadata accessor for CableRequest.OneOf_Request);
LABEL_12:
    sub_219360620(v32, &qword_267C1A0A0);
    goto LABEL_13;
  }
  uint64_t v39 = v50;
  sub_2193C69E0(v33, v50, type metadata accessor for CableRequest.OneOf_Request);
  uint64_t v40 = v36;
  char v41 = sub_2193C920C(v36, v39);
  sub_2193C6980(v39, type metadata accessor for CableRequest.OneOf_Request);
  sub_219360620((uint64_t)v17, &qword_267C18E90);
  sub_219360620((uint64_t)v19, &qword_267C18E90);
  sub_2193C6980(v40, type metadata accessor for CableRequest.OneOf_Request);
  sub_219360620(v32, &qword_267C18E90);
  if (v41) {
    goto LABEL_16;
  }
LABEL_13:
  char v37 = 0;
  return v37 & 1;
}

uint64_t sub_2193C920C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CableRequest.StateDeleteRequest(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CableRequest.AllocationRequest(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CableRequest.OneOf_Request(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A0B0);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  char v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v19[*(int *)(v17 + 56)];
  sub_2193C9AF0(a1, (uint64_t)v19, type metadata accessor for CableRequest.OneOf_Request);
  sub_2193C9AF0(a2, v20, type metadata accessor for CableRequest.OneOf_Request);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2193C9AF0((uint64_t)v19, (uint64_t)v13, type metadata accessor for CableRequest.OneOf_Request);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2193C69E0(v20, (uint64_t)v6, type metadata accessor for CableRequest.StateDeleteRequest);
      char v21 = sub_2193C9570((uint64_t)v13, (uint64_t)v6);
      sub_2193C6980((uint64_t)v6, type metadata accessor for CableRequest.StateDeleteRequest);
      uint64_t v22 = (uint64_t)v13;
      uint64_t v23 = type metadata accessor for CableRequest.StateDeleteRequest;
LABEL_9:
      sub_2193C6980(v22, v23);
      sub_2193C6980((uint64_t)v19, type metadata accessor for CableRequest.OneOf_Request);
      return v21 & 1;
    }
    unint64_t v24 = type metadata accessor for CableRequest.StateDeleteRequest;
    uint64_t v25 = (uint64_t)v13;
  }
  else
  {
    sub_2193C9AF0((uint64_t)v19, (uint64_t)v15, type metadata accessor for CableRequest.OneOf_Request);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_2193C69E0(v20, (uint64_t)v9, type metadata accessor for CableRequest.AllocationRequest);
      char v21 = sub_2193C97D8((uint64_t)v15, (uint64_t)v9);
      sub_2193C6980((uint64_t)v9, type metadata accessor for CableRequest.AllocationRequest);
      uint64_t v22 = (uint64_t)v15;
      uint64_t v23 = type metadata accessor for CableRequest.AllocationRequest;
      goto LABEL_9;
    }
    unint64_t v24 = type metadata accessor for CableRequest.AllocationRequest;
    uint64_t v25 = (uint64_t)v15;
  }
  sub_2193C6980(v25, v24);
  sub_219360620((uint64_t)v19, &qword_267C1A0B0);
  char v21 = 0;
  return v21 & 1;
}

uint64_t sub_2193C9570(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193E2300();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = &v21[-v9];
  uint64_t v11 = *(int *)(type metadata accessor for CableRequest.StateDeleteRequest(0) + 20);
  uint64_t v12 = *(void *)(a1 + v11);
  unint64_t v13 = *(void *)(a1 + v11 + 8);
  uint64_t v14 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v14;
  unint64_t v16 = v14[1];
  if (v13 >> 60 == 15)
  {
    if (v16 >> 60 == 15) {
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  if (v16 >> 60 == 15)
  {
LABEL_5:
    sub_21934CE48(v12, v13);
    sub_21934CE48(v15, v16);
    sub_21934CEB0(v12, v13);
    sub_21934CEB0(v15, v16);
LABEL_8:
    char v18 = 0;
    return v18 & 1;
  }
  sub_21934CE48(v12, v13);
  sub_21934CE48(v15, v16);
  int v22 = sub_219379924(v12, v13, v15, v16);
  sub_21934CEB0(v15, v16);
  sub_21934CEB0(v12, v13);
  if ((v22 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v17 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16);
  v17(v10, a1, v4);
  v17(v8, a2, v4);
  sub_2193C5B68(&qword_267C1A0A8, MEMORY[0x263F50560]);
  char v18 = sub_2193E2820();
  char v19 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v19(v8, v4);
  v19(v10, v4);
  return v18 & 1;
}

uint64_t sub_2193C97D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193E2300();
  uint64_t v27 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v25[-v8];
  uint64_t v10 = type metadata accessor for CableRequest.AllocationRequest(0);
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = *(void *)(a1 + v11);
  unint64_t v13 = *(void *)(a1 + v11 + 8);
  uint64_t v14 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v14;
  unint64_t v16 = v14[1];
  if (v13 >> 60 != 15)
  {
    if (v16 >> 60 != 15)
    {
      sub_21934CE48(v12, v13);
      sub_21934CE48(v15, v16);
      int v26 = sub_219379924(v12, v13, v15, v16);
      sub_21934CEB0(v15, v16);
      sub_21934CEB0(v12, v13);
      if ((v26 & 1) == 0) {
        goto LABEL_6;
      }
      goto LABEL_9;
    }
LABEL_5:
    sub_21934CE48(v12, v13);
    sub_21934CE48(v15, v16);
    sub_21934CEB0(v12, v13);
    sub_21934CEB0(v15, v16);
    goto LABEL_6;
  }
  if (v16 >> 60 != 15) {
    goto LABEL_5;
  }
LABEL_9:
  uint64_t v19 = *(int *)(v10 + 24);
  int v20 = *(unsigned __int8 *)(a1 + v19);
  int v21 = *(unsigned __int8 *)(a2 + v19);
  if (v20 == 2)
  {
    if (v21 == 2)
    {
LABEL_14:
      uint64_t v22 = v27;
      uint64_t v23 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v27 + 16);
      v23(v9, a1, v4);
      v23(v7, a2, v4);
      sub_2193C5B68(&qword_267C1A0A8, MEMORY[0x263F50560]);
      char v17 = sub_2193E2820();
      unint64_t v24 = *(void (**)(unsigned char *, uint64_t))(v22 + 8);
      v24(v7, v4);
      v24(v9, v4);
      return v17 & 1;
    }
  }
  else if (v21 != 2 && ((((v21 & 1) == 0) ^ v20) & 1) != 0)
  {
    goto LABEL_14;
  }
LABEL_6:
  char v17 = 0;
  return v17 & 1;
}

uint64_t type metadata accessor for CableResponse.OneOf_Response(uint64_t a1)
{
  return sub_21937EAB4(a1, (uint64_t *)&unk_267C1A178);
}

unint64_t sub_2193C9A9C()
{
  unint64_t result = qword_267C1A0D8;
  if (!qword_267C1A0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C1A0D8);
  }
  return result;
}

uint64_t sub_2193C9AF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for CableRelayConnectionRequest.OneOf_Message(uint64_t a1)
{
  return sub_21937EAB4(a1, (uint64_t *)&unk_267C1A168);
}

unint64_t sub_2193C9B78()
{
  unint64_t result = qword_267C1A150;
  if (!qword_267C1A150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C1A150);
  }
  return result;
}

uint64_t *sub_2193C9BCC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = sub_2193E2300();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
      uint64_t v9 = *(int *)(v8 + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      unint64_t v12 = *((void *)v11 + 1);
      if (v12 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      }
      else
      {
        uint64_t v19 = *(void *)v11;
        sub_21934CDF0(*(void *)v11, *((void *)v11 + 1));
        *(void *)uint64_t v10 = v19;
        *((void *)v10 + 1) = v12;
      }
      uint64_t v20 = *(int *)(v8 + 24);
      int v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      unint64_t v23 = *((void *)v22 + 1);
      if (v23 >> 60 == 15)
      {
        *(_OWORD *)int v21 = *(_OWORD *)v22;
      }
      else
      {
        uint64_t v29 = *(void *)v22;
        sub_21934CDF0(*(void *)v22, *((void *)v22 + 1));
        *(void *)int v21 = v29;
        *((void *)v21 + 1) = v23;
      }
    }
    else
    {
      uint64_t v14 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
      uint64_t v15 = *(int *)(v14 + 20);
      unint64_t v16 = (char *)a1 + v15;
      char v17 = (char *)a2 + v15;
      unint64_t v18 = *((void *)v17 + 1);
      if (v18 >> 60 == 15)
      {
        *(_OWORD *)unint64_t v16 = *(_OWORD *)v17;
      }
      else
      {
        uint64_t v24 = *(void *)v17;
        sub_21934CDF0(*(void *)v17, *((void *)v17 + 1));
        *(void *)unint64_t v16 = v24;
        *((void *)v16 + 1) = v18;
      }
      uint64_t v25 = *(int *)(v14 + 24);
      int v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      unint64_t v28 = *((void *)v27 + 1);
      if (v28 >> 60 == 15)
      {
        *(_OWORD *)int v26 = *(_OWORD *)v27;
      }
      else
      {
        uint64_t v30 = *(void *)v27;
        sub_21934CDF0(*(void *)v27, *((void *)v27 + 1));
        *(void *)int v26 = v30;
        *((void *)v26 + 1) = v28;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2193C9DDC(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v3 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  if (EnumCaseMultiPayload == 1) {
    uint64_t result = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
  }
  else {
    uint64_t result = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
  }
  uint64_t v5 = result;
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(result + 20));
  unint64_t v7 = v6[1];
  if (v7 >> 60 != 15) {
    uint64_t result = sub_219348A70(*v6, v7);
  }
  uint64_t v8 = (uint64_t *)(a1 + *(int *)(v5 + 24));
  unint64_t v9 = v8[1];
  if (v9 >> 60 != 15)
  {
    uint64_t v10 = *v8;
    return sub_219348A70(v10, v9);
  }
  return result;
}

uint64_t sub_2193C9EB4(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
    uint64_t v7 = *(int *)(v6 + 20);
    uint64_t v8 = a1 + v7;
    unint64_t v9 = (uint64_t *)(a2 + v7);
    unint64_t v10 = v9[1];
    if (v10 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    }
    else
    {
      uint64_t v16 = *v9;
      sub_21934CDF0(*v9, v9[1]);
      *(void *)uint64_t v8 = v16;
      *(void *)(v8 + 8) = v10;
    }
    uint64_t v17 = *(int *)(v6 + 24);
    uint64_t v18 = a1 + v17;
    uint64_t v19 = (uint64_t *)(a2 + v17);
    unint64_t v20 = v19[1];
    if (v20 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    }
    else
    {
      uint64_t v26 = *v19;
      sub_21934CDF0(*v19, v19[1]);
      *(void *)uint64_t v18 = v26;
      *(void *)(v18 + 8) = v20;
    }
  }
  else
  {
    uint64_t v11 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
    uint64_t v12 = *(int *)(v11 + 20);
    uint64_t v13 = a1 + v12;
    uint64_t v14 = (uint64_t *)(a2 + v12);
    unint64_t v15 = v14[1];
    if (v15 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    }
    else
    {
      uint64_t v21 = *v14;
      sub_21934CDF0(*v14, v14[1]);
      *(void *)uint64_t v13 = v21;
      *(void *)(v13 + 8) = v15;
    }
    uint64_t v22 = *(int *)(v11 + 24);
    uint64_t v23 = a1 + v22;
    uint64_t v24 = (uint64_t *)(a2 + v22);
    unint64_t v25 = v24[1];
    if (v25 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    }
    else
    {
      uint64_t v27 = *v24;
      sub_21934CDF0(*v24, v24[1]);
      *(void *)uint64_t v23 = v27;
      *(void *)(v23 + 8) = v25;
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2193CA070(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2193C6980(a1, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_2193E2300();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v6 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
      uint64_t v7 = *(int *)(v6 + 20);
      uint64_t v8 = a1 + v7;
      unint64_t v9 = (uint64_t *)(a2 + v7);
      unint64_t v10 = v9[1];
      if (v10 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      }
      else
      {
        uint64_t v16 = *v9;
        sub_21934CDF0(*v9, v9[1]);
        *(void *)uint64_t v8 = v16;
        *(void *)(v8 + 8) = v10;
      }
      uint64_t v17 = *(int *)(v6 + 24);
      uint64_t v18 = a1 + v17;
      uint64_t v19 = (uint64_t *)(a2 + v17);
      unint64_t v20 = v19[1];
      if (v20 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      }
      else
      {
        uint64_t v26 = *v19;
        sub_21934CDF0(*v19, v19[1]);
        *(void *)uint64_t v18 = v26;
        *(void *)(v18 + 8) = v20;
      }
    }
    else
    {
      uint64_t v11 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
      uint64_t v12 = *(int *)(v11 + 20);
      uint64_t v13 = a1 + v12;
      uint64_t v14 = (uint64_t *)(a2 + v12);
      unint64_t v15 = v14[1];
      if (v15 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      }
      else
      {
        uint64_t v21 = *v14;
        sub_21934CDF0(*v14, v14[1]);
        *(void *)uint64_t v13 = v21;
        *(void *)(v13 + 8) = v15;
      }
      uint64_t v22 = *(int *)(v11 + 24);
      uint64_t v23 = a1 + v22;
      uint64_t v24 = (uint64_t *)(a2 + v22);
      unint64_t v25 = v24[1];
      if (v25 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      }
      else
      {
        uint64_t v27 = *v24;
        sub_21934CDF0(*v24, v24[1]);
        *(void *)uint64_t v23 = v27;
        *(void *)(v23 + 8) = v25;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2193CA250(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1) {
    uint64_t v6 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
  }
  else {
    uint64_t v6 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
  }
  *(_OWORD *)(a1 + *(int *)(v6 + 20)) = *(_OWORD *)(a2 + *(int *)(v6 + 20));
  *(_OWORD *)(a1 + *(int *)(v6 + 24)) = *(_OWORD *)(a2 + *(int *)(v6 + 24));
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2193CA318(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2193C6980(a1, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_2193E2300();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1) {
      uint64_t v6 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
    }
    else {
      uint64_t v6 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
    }
    *(_OWORD *)(a1 + *(int *)(v6 + 20)) = *(_OWORD *)(a2 + *(int *)(v6 + 20));
    *(_OWORD *)(a1 + *(int *)(v6 + 24)) = *(_OWORD *)(a2 + *(int *)(v6 + 24));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2193CA410()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2193CA420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2193CABAC(a1, a2, a3, type metadata accessor for CableRelayConnectionRequest.QRAssisted, type metadata accessor for CableRelayConnectionRequest.StateAssisted);
}

uint64_t *sub_2193CA44C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = sub_2193E2300();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    if (EnumCaseMultiPayload != 1)
    {
      unint64_t v9 = (int *)type metadata accessor for CableResponse.AllocationResponse(0);
      uint64_t v10 = v9[5];
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      unint64_t v13 = *((void *)v12 + 1);
      if (v13 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      }
      else
      {
        uint64_t v14 = *(void *)v12;
        sub_21934CDF0(*(void *)v12, *((void *)v12 + 1));
        *(void *)uint64_t v11 = v14;
        *((void *)v11 + 1) = v13;
      }
      uint64_t v15 = v9[6];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
      v16[4] = v17[4];
      uint64_t v18 = v9[7];
      uint64_t v19 = (char *)a1 + v18;
      unint64_t v20 = (char *)a2 + v18;
      unint64_t v21 = *((void *)v20 + 1);
      if (v21 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      }
      else
      {
        uint64_t v22 = *(void *)v20;
        sub_21934CDF0(*(void *)v20, *((void *)v20 + 1));
        *(void *)uint64_t v19 = v22;
        *((void *)v19 + 1) = v21;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2193CA5F4(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v3 = sub_2193E2300();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t result = type metadata accessor for CableResponse.AllocationResponse(0);
    uint64_t v5 = result;
    uint64_t v6 = (uint64_t *)(a1 + *(int *)(result + 20));
    unint64_t v7 = v6[1];
    if (v7 >> 60 != 15) {
      uint64_t result = sub_219348A70(*v6, v7);
    }
    uint64_t v8 = (uint64_t *)(a1 + *(int *)(v5 + 28));
    unint64_t v9 = v8[1];
    if (v9 >> 60 != 15)
    {
      uint64_t v10 = *v8;
      return sub_219348A70(v10, v9);
    }
  }
  return result;
}

uint64_t sub_2193CA6C0(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v6 = (int *)type metadata accessor for CableResponse.AllocationResponse(0);
    uint64_t v7 = v6[5];
    uint64_t v8 = a1 + v7;
    unint64_t v9 = (uint64_t *)(a2 + v7);
    unint64_t v10 = v9[1];
    if (v10 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    }
    else
    {
      uint64_t v11 = *v9;
      sub_21934CDF0(*v9, v9[1]);
      *(void *)uint64_t v8 = v11;
      *(void *)(v8 + 8) = v10;
    }
    uint64_t v12 = v6[6];
    uint64_t v13 = a1 + v12;
    uint64_t v14 = a2 + v12;
    *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
    *(unsigned char *)(v13 + 4) = *(unsigned char *)(v14 + 4);
    uint64_t v15 = v6[7];
    uint64_t v16 = a1 + v15;
    uint64_t v17 = (uint64_t *)(a2 + v15);
    unint64_t v18 = v17[1];
    if (v18 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    }
    else
    {
      uint64_t v19 = *v17;
      sub_21934CDF0(*v17, v17[1]);
      *(void *)uint64_t v16 = v19;
      *(void *)(v16 + 8) = v18;
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2193CA818(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2193C6980(a1, type metadata accessor for CableResponse.OneOf_Response);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_2193E2300();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v6 = (int *)type metadata accessor for CableResponse.AllocationResponse(0);
      uint64_t v7 = v6[5];
      uint64_t v8 = a1 + v7;
      unint64_t v9 = (uint64_t *)(a2 + v7);
      unint64_t v10 = v9[1];
      if (v10 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      }
      else
      {
        uint64_t v11 = *v9;
        sub_21934CDF0(*v9, v9[1]);
        *(void *)uint64_t v8 = v11;
        *(void *)(v8 + 8) = v10;
      }
      uint64_t v12 = v6[6];
      uint64_t v13 = a1 + v12;
      uint64_t v14 = (int *)(a2 + v12);
      int v15 = *v14;
      *(unsigned char *)(v13 + 4) = *((unsigned char *)v14 + 4);
      *(_DWORD *)uint64_t v13 = v15;
      uint64_t v16 = v6[7];
      uint64_t v17 = a1 + v16;
      unint64_t v18 = (uint64_t *)(a2 + v16);
      unint64_t v19 = v18[1];
      if (v19 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      }
      else
      {
        uint64_t v20 = *v18;
        sub_21934CDF0(*v18, v18[1]);
        *(void *)uint64_t v17 = v20;
        *(void *)(v17 + 8) = v19;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2193CA994(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v6 = (int *)type metadata accessor for CableResponse.AllocationResponse(0);
    *(_OWORD *)(a1 + v6[5]) = *(_OWORD *)(a2 + v6[5]);
    uint64_t v7 = v6[6];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = a2 + v7;
    *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
    *(unsigned char *)(v8 + 4) = *(unsigned char *)(v9 + 4);
    *(_OWORD *)(a1 + v6[7]) = *(_OWORD *)(a2 + v6[7]);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2193CAA78(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2193C6980(a1, type metadata accessor for CableResponse.OneOf_Response);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_2193E2300();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v6 = (int *)type metadata accessor for CableResponse.AllocationResponse(0);
      *(_OWORD *)(a1 + v6[5]) = *(_OWORD *)(a2 + v6[5]);
      uint64_t v7 = v6[6];
      uint64_t v8 = a1 + v7;
      uint64_t v9 = a2 + v7;
      *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
      *(unsigned char *)(v8 + 4) = *(unsigned char *)(v9 + 4);
      *(_OWORD *)(a1 + v6[7]) = *(_OWORD *)(a2 + v6[7]);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2193CAB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2193CABAC(a1, a2, a3, type metadata accessor for CableResponse.AllocationResponse, MEMORY[0x263F50560]);
}

uint64_t sub_2193CABAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t))
{
  uint64_t result = a4(319);
  if (v7 <= 0x3F)
  {
    uint64_t result = a5(319);
    if (v8 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_2193CAC7C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = sub_2193E2300();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = *(int *)(type metadata accessor for CableRequest.StateDeleteRequest(0) + 20);
      uint64_t v9 = (char *)a1 + v8;
      unint64_t v10 = (char *)a2 + v8;
      unint64_t v11 = *((void *)v10 + 1);
      if (v11 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      }
      else
      {
        uint64_t v18 = *(void *)v10;
        sub_21934CDF0(*(void *)v10, *((void *)v10 + 1));
        *(void *)uint64_t v9 = v18;
        *((void *)v9 + 1) = v11;
      }
    }
    else
    {
      uint64_t v13 = type metadata accessor for CableRequest.AllocationRequest(0);
      uint64_t v14 = *(int *)(v13 + 20);
      int v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      unint64_t v17 = *((void *)v16 + 1);
      if (v17 >> 60 == 15)
      {
        *(_OWORD *)int v15 = *(_OWORD *)v16;
      }
      else
      {
        uint64_t v19 = *(void *)v16;
        sub_21934CDF0(*(void *)v16, *((void *)v16 + 1));
        *(void *)int v15 = v19;
        *((void *)v15 + 1) = v17;
      }
      *((unsigned char *)a1 + *(int *)(v13 + 24)) = *((unsigned char *)a2 + *(int *)(v13 + 24));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2193CAE1C(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v3 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  if (EnumCaseMultiPayload == 1) {
    uint64_t result = type metadata accessor for CableRequest.StateDeleteRequest(0);
  }
  else {
    uint64_t result = type metadata accessor for CableRequest.AllocationRequest(0);
  }
  int v5 = (uint64_t *)(a1 + *(int *)(result + 20));
  unint64_t v6 = v5[1];
  if (v6 >> 60 != 15)
  {
    uint64_t v7 = *v5;
    return sub_219348A70(v7, v6);
  }
  return result;
}

uint64_t sub_2193CAED0(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = *(int *)(type metadata accessor for CableRequest.StateDeleteRequest(0) + 20);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t *)(a2 + v6);
    unint64_t v9 = v8[1];
    if (v9 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    }
    else
    {
      uint64_t v15 = *v8;
      sub_21934CDF0(*v8, v8[1]);
      *(void *)uint64_t v7 = v15;
      *(void *)(v7 + 8) = v9;
    }
  }
  else
  {
    uint64_t v10 = type metadata accessor for CableRequest.AllocationRequest(0);
    uint64_t v11 = *(int *)(v10 + 20);
    uint64_t v12 = a1 + v11;
    uint64_t v13 = (uint64_t *)(a2 + v11);
    unint64_t v14 = v13[1];
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    }
    else
    {
      uint64_t v16 = *v13;
      sub_21934CDF0(*v13, v13[1]);
      *(void *)uint64_t v12 = v16;
      *(void *)(v12 + 8) = v14;
    }
    *(unsigned char *)(a1 + *(int *)(v10 + 24)) = *(unsigned char *)(a2 + *(int *)(v10 + 24));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2193CB018(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2193C6980(a1, type metadata accessor for CableRequest.OneOf_Request);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_2193E2300();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v6 = *(int *)(type metadata accessor for CableRequest.StateDeleteRequest(0) + 20);
      uint64_t v7 = a1 + v6;
      uint64_t v8 = (uint64_t *)(a2 + v6);
      unint64_t v9 = v8[1];
      if (v9 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      }
      else
      {
        uint64_t v15 = *v8;
        sub_21934CDF0(*v8, v8[1]);
        *(void *)uint64_t v7 = v15;
        *(void *)(v7 + 8) = v9;
      }
    }
    else
    {
      uint64_t v10 = type metadata accessor for CableRequest.AllocationRequest(0);
      uint64_t v11 = *(int *)(v10 + 20);
      uint64_t v12 = a1 + v11;
      uint64_t v13 = (uint64_t *)(a2 + v11);
      unint64_t v14 = v13[1];
      if (v14 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      }
      else
      {
        uint64_t v16 = *v13;
        sub_21934CDF0(*v13, v13[1]);
        *(void *)uint64_t v12 = v16;
        *(void *)(v12 + 8) = v14;
      }
      *(unsigned char *)(a1 + *(int *)(v10 + 24)) = *(unsigned char *)(a2 + *(int *)(v10 + 24));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2193CB184(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = type metadata accessor for CableRequest.StateDeleteRequest(0);
    *(_OWORD *)(a1 + *(int *)(v6 + 20)) = *(_OWORD *)(a2 + *(int *)(v6 + 20));
  }
  else
  {
    uint64_t v7 = type metadata accessor for CableRequest.AllocationRequest(0);
    *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
    *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2193CB258(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2193C6980(a1, type metadata accessor for CableRequest.OneOf_Request);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_2193E2300();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v6 = type metadata accessor for CableRequest.StateDeleteRequest(0);
      *(_OWORD *)(a1 + *(int *)(v6 + 20)) = *(_OWORD *)(a2 + *(int *)(v6 + 20));
    }
    else
    {
      uint64_t v7 = type metadata accessor for CableRequest.AllocationRequest(0);
      *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
      *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2193CB350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_2193CB378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_2193CB3A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2193CABAC(a1, a2, a3, type metadata accessor for CableRequest.AllocationRequest, type metadata accessor for CableRequest.StateDeleteRequest);
}

ValueMetadata *type metadata accessor for RelayRequestResponseStatus()
{
  return &type metadata for RelayRequestResponseStatus;
}

uint64_t *sub_2193CB3E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for CableRequest.OneOf_Request(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E90);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v12 = sub_2193E2300();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v13 = *(int *)(type metadata accessor for CableRequest.StateDeleteRequest(0) + 20);
        unint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        unint64_t v16 = *((void *)v15 + 1);
        if (v16 >> 60 == 15)
        {
          *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
        }
        else
        {
          uint64_t v22 = *(void *)v15;
          sub_21934CDF0(*(void *)v15, *((void *)v15 + 1));
          *(void *)unint64_t v14 = v22;
          *((void *)v14 + 1) = v16;
        }
      }
      else
      {
        uint64_t v17 = type metadata accessor for CableRequest.AllocationRequest(0);
        uint64_t v18 = *(int *)(v17 + 20);
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        unint64_t v21 = *((void *)v20 + 1);
        if (v21 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
        }
        else
        {
          uint64_t v23 = *(void *)v20;
          sub_21934CDF0(*(void *)v20, *((void *)v20 + 1));
          *(void *)uint64_t v19 = v23;
          *((void *)v19 + 1) = v21;
        }
        *((unsigned char *)a1 + *(int *)(v17 + 24)) = *((unsigned char *)a2 + *(int *)(v17 + 24));
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v24 = *(int *)(a3 + 20);
    unint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_2193E2300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = *(int *)(a3 + 24);
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    unint64_t v31 = *((void *)v30 + 1);
    if (v31 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    }
    else
    {
      uint64_t v32 = *(void *)v30;
      sub_21934CDF0(*(void *)v30, *((void *)v30 + 1));
      *(void *)uint64_t v29 = v32;
      *((void *)v29 + 1) = v31;
    }
  }
  return a1;
}

uint64_t sub_2193CB6C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CableRequest.OneOf_Request(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v6 = sub_2193E2300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    uint64_t v7 = EnumCaseMultiPayload == 1
       ? type metadata accessor for CableRequest.StateDeleteRequest(0)
       : type metadata accessor for CableRequest.AllocationRequest(0);
    uint64_t v8 = (uint64_t *)(a1 + *(int *)(v7 + 20));
    unint64_t v9 = v8[1];
    if (v9 >> 60 != 15) {
      sub_219348A70(*v8, v9);
    }
  }
  uint64_t v10 = a1 + *(int *)(a2 + 20);
  uint64_t v11 = sub_2193E2300();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v13 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  unint64_t v14 = v13[1];
  if (v14 >> 60 != 15)
  {
    uint64_t v15 = *v13;
    return sub_219348A70(v15, v14);
  }
  return result;
}

char *sub_2193CB838(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CableRequest.OneOf_Request(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E90);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v10 = sub_2193E2300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = *(int *)(type metadata accessor for CableRequest.StateDeleteRequest(0) + 20);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      unint64_t v14 = *((void *)v13 + 1);
      if (v14 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      }
      else
      {
        uint64_t v20 = *(void *)v13;
        sub_21934CDF0(*(void *)v13, *((void *)v13 + 1));
        *(void *)uint64_t v12 = v20;
        *((void *)v12 + 1) = v14;
      }
    }
    else
    {
      uint64_t v15 = type metadata accessor for CableRequest.AllocationRequest(0);
      uint64_t v16 = *(int *)(v15 + 20);
      uint64_t v17 = &a1[v16];
      uint64_t v18 = &a2[v16];
      unint64_t v19 = *((void *)v18 + 1);
      if (v19 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      }
      else
      {
        uint64_t v21 = *(void *)v18;
        sub_21934CDF0(*(void *)v18, *((void *)v18 + 1));
        *(void *)uint64_t v17 = v21;
        *((void *)v17 + 1) = v19;
      }
      a1[*(int *)(v15 + 24)] = a2[*(int *)(v15 + 24)];
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v22 = *(int *)(a3 + 20);
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = sub_2193E2300();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  uint64_t v26 = *(int *)(a3 + 24);
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  unint64_t v29 = *((void *)v28 + 1);
  if (v29 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  }
  else
  {
    uint64_t v30 = *(void *)v28;
    sub_21934CDF0(*(void *)v28, *((void *)v28 + 1));
    *(void *)uint64_t v27 = v30;
    *((void *)v27 + 1) = v29;
  }
  return a1;
}

unsigned char *sub_2193CBACC(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CableRequest.OneOf_Request(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v12 = sub_2193E2300();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v13 = *(int *)(type metadata accessor for CableRequest.StateDeleteRequest(0) + 20);
        unint64_t v14 = &a1[v13];
        uint64_t v15 = &a2[v13];
        unint64_t v16 = *((void *)v15 + 1);
        if (v16 >> 60 == 15)
        {
          *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
        }
        else
        {
          uint64_t v29 = *(void *)v15;
          sub_21934CDF0(*(void *)v15, *((void *)v15 + 1));
          *(void *)unint64_t v14 = v29;
          *((void *)v14 + 1) = v16;
        }
      }
      else
      {
        uint64_t v24 = type metadata accessor for CableRequest.AllocationRequest(0);
        uint64_t v25 = *(int *)(v24 + 20);
        uint64_t v26 = &a1[v25];
        uint64_t v27 = &a2[v25];
        unint64_t v28 = *((void *)v27 + 1);
        if (v28 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
        }
        else
        {
          uint64_t v30 = *(void *)v27;
          sub_21934CDF0(*(void *)v27, *((void *)v27 + 1));
          *(void *)uint64_t v26 = v30;
          *((void *)v26 + 1) = v28;
        }
        a1[*(int *)(v24 + 24)] = a2[*(int *)(v24 + 24)];
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_20;
    }
LABEL_8:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E90);
    memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_20;
  }
  if (v10)
  {
    sub_2193C6980((uint64_t)a1, type metadata accessor for CableRequest.OneOf_Request);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_2193C6980((uint64_t)a1, type metadata accessor for CableRequest.OneOf_Request);
    int v18 = swift_getEnumCaseMultiPayload();
    uint64_t v19 = sub_2193E2300();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
    if (v18 == 1)
    {
      uint64_t v20 = *(int *)(type metadata accessor for CableRequest.StateDeleteRequest(0) + 20);
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      unint64_t v23 = *((void *)v22 + 1);
      if (v23 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
      }
      else
      {
        uint64_t v49 = *(void *)v22;
        sub_21934CDF0(*(void *)v22, *((void *)v22 + 1));
        *(void *)uint64_t v21 = v49;
        *((void *)v21 + 1) = v23;
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      uint64_t v44 = type metadata accessor for CableRequest.AllocationRequest(0);
      uint64_t v45 = *(int *)(v44 + 20);
      uint64_t v46 = &a1[v45];
      uint64_t v47 = &a2[v45];
      unint64_t v48 = *((void *)v47 + 1);
      if (v48 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
      }
      else
      {
        uint64_t v50 = *(void *)v47;
        sub_21934CDF0(*(void *)v47, *((void *)v47 + 1));
        *(void *)uint64_t v46 = v50;
        *((void *)v46 + 1) = v48;
      }
      a1[*(int *)(v44 + 24)] = a2[*(int *)(v44 + 24)];
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_20:
  uint64_t v31 = *(int *)(a3 + 20);
  uint64_t v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  uint64_t v34 = sub_2193E2300();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = *(int *)(a3 + 24);
  uint64_t v36 = (uint64_t *)&a1[v35];
  char v37 = (uint64_t *)&a2[v35];
  unint64_t v38 = *(void *)&a2[v35 + 8];
  if (*(void *)&a1[v35 + 8] >> 60 != 15)
  {
    if (v38 >> 60 != 15)
    {
      uint64_t v40 = *v37;
      sub_21934CDF0(v40, v38);
      uint64_t v41 = *v36;
      unint64_t v42 = v36[1];
      uint64_t *v36 = v40;
      v36[1] = v38;
      sub_219348A70(v41, v42);
      return a1;
    }
    sub_21934DFD8((uint64_t)v36);
    goto LABEL_25;
  }
  if (v38 >> 60 == 15)
  {
LABEL_25:
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
    return a1;
  }
  uint64_t v39 = *v37;
  sub_21934CDF0(v39, v38);
  uint64_t *v36 = v39;
  v36[1] = v38;
  return a1;
}

char *sub_2193CBF1C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CableRequest.OneOf_Request(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E90);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v10 = sub_2193E2300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = type metadata accessor for CableRequest.StateDeleteRequest(0);
      *(_OWORD *)&a1[*(int *)(v11 + 20)] = *(_OWORD *)&a2[*(int *)(v11 + 20)];
    }
    else
    {
      uint64_t v12 = type metadata accessor for CableRequest.AllocationRequest(0);
      *(_OWORD *)&a1[*(int *)(v12 + 20)] = *(_OWORD *)&a2[*(int *)(v12 + 20)];
      a1[*(int *)(v12 + 24)] = a2[*(int *)(v12 + 24)];
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v13 = *(int *)(a3 + 20);
  unint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_2193E2300();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

unsigned char *sub_2193CC10C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CableRequest.OneOf_Request(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v12 = sub_2193E2300();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v13 = type metadata accessor for CableRequest.StateDeleteRequest(0);
        *(_OWORD *)&a1[*(int *)(v13 + 20)] = *(_OWORD *)&a2[*(int *)(v13 + 20)];
      }
      else
      {
        uint64_t v18 = type metadata accessor for CableRequest.AllocationRequest(0);
        *(_OWORD *)&a1[*(int *)(v18 + 20)] = *(_OWORD *)&a2[*(int *)(v18 + 20)];
        a1[*(int *)(v18 + 24)] = a2[*(int *)(v18 + 24)];
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_14;
    }
LABEL_7:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E90);
    memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_14;
  }
  if (v10)
  {
    sub_2193C6980((uint64_t)a1, type metadata accessor for CableRequest.OneOf_Request);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_2193C6980((uint64_t)a1, type metadata accessor for CableRequest.OneOf_Request);
    int v15 = swift_getEnumCaseMultiPayload();
    uint64_t v16 = sub_2193E2300();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
    if (v15 == 1)
    {
      uint64_t v17 = type metadata accessor for CableRequest.StateDeleteRequest(0);
      *(_OWORD *)&a1[*(int *)(v17 + 20)] = *(_OWORD *)&a2[*(int *)(v17 + 20)];
    }
    else
    {
      uint64_t v30 = type metadata accessor for CableRequest.AllocationRequest(0);
      *(_OWORD *)&a1[*(int *)(v30 + 20)] = *(_OWORD *)&a2[*(int *)(v30 + 20)];
      a1[*(int *)(v30 + 24)] = a2[*(int *)(v30 + 24)];
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_14:
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_2193E2300();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = *(int *)(a3 + 24);
  uint64_t v24 = (uint64_t *)&a1[v23];
  uint64_t v25 = (uint64_t *)&a2[v23];
  unint64_t v26 = *(void *)&a1[v23 + 8];
  if (v26 >> 60 != 15)
  {
    unint64_t v27 = v25[1];
    if (v27 >> 60 != 15)
    {
      uint64_t v28 = *v24;
      *uint64_t v24 = *v25;
      v24[1] = v27;
      sub_219348A70(v28, v26);
      return a1;
    }
    sub_21934DFD8((uint64_t)v24);
  }
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  return a1;
}

uint64_t sub_2193CC45C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2193CC470);
}

uint64_t sub_2193CC470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E90);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_2193E2300();
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      uint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8) >> 60;
      BOOL v15 = ((4 * v14) & 0xC) == 0;
      unsigned int v16 = ((4 * v14) & 0xC | (v14 >> 2)) ^ 0xF;
      if (v15) {
        return 0;
      }
      else {
        return v16;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_2193CC594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2193CC5A8);
}

uint64_t sub_2193CC5A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C18E90);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_2193E2300();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      BOOL v15 = (void *)(a1 + *(int *)(a4 + 24));
      void *v15 = 0;
      v15[1] = (unint64_t)((~a2 >> 2) & 3 | (4 * ~a2)) << 60;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_2193CC6CC()
{
  sub_2193CE764(319, &qword_267C1A1A8, (void (*)(uint64_t))type metadata accessor for CableRequest.OneOf_Request);
  if (v0 <= 0x3F)
  {
    sub_2193E2300();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_2193CC7B8(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2193E2300();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    unint64_t v11 = *((void *)v10 + 1);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    }
    else
    {
      uint64_t v13 = *(void *)v10;
      sub_21934CDF0(*(void *)v10, *((void *)v10 + 1));
      *(void *)uint64_t v9 = v13;
      *((void *)v9 + 1) = v11;
    }
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_2193CC8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = v9[1];
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }
  else
  {
    uint64_t v11 = *v9;
    sub_21934CDF0(*v9, v9[1]);
    *(void *)uint64_t v8 = v11;
    *(void *)(v8 + 8) = v10;
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_2193CC98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = *(void *)(a2 + v7 + 8);
  if (*(void *)(a1 + v7 + 8) >> 60 != 15)
  {
    if (v10 >> 60 != 15)
    {
      uint64_t v12 = *v9;
      sub_21934CDF0(v12, v10);
      uint64_t v13 = *v8;
      unint64_t v14 = v8[1];
      *uint64_t v8 = v12;
      v8[1] = v10;
      sub_219348A70(v13, v14);
      goto LABEL_8;
    }
    sub_21934DFD8((uint64_t)v8);
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  uint64_t v11 = *v9;
  sub_21934CDF0(v11, v10);
  *uint64_t v8 = v11;
  v8[1] = v10;
LABEL_8:
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_2193CCA90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t sub_2193CCB14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = *(void *)(a1 + v7 + 8);
  if (v10 >> 60 != 15)
  {
    unint64_t v11 = v9[1];
    if (v11 >> 60 != 15)
    {
      uint64_t v12 = *v8;
      *uint64_t v8 = *v9;
      v8[1] = v11;
      sub_219348A70(v12, v10);
      goto LABEL_6;
    }
    sub_21934DFD8((uint64_t)v8);
  }
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
LABEL_6:
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_2193CCBE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2193CCBFC);
}

uint64_t sub_2193CCBFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 2) {
      int v11 = ((v10 + 2147483646) & 0x7FFFFFFF) - 1;
    }
    else {
      int v11 = -2;
    }
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_2193CCCD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2193CCCEC);
}

uint64_t sub_2193CCCEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2193E2300();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 2;
  }
  return result;
}

uint64_t sub_2193CCDA8()
{
  return sub_2193D0FC8();
}

uint64_t *sub_2193CCDBC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2193E2300();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    unsigned int v10 = (char *)a2 + v8;
    unint64_t v11 = *((void *)v10 + 1);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    }
    else
    {
      uint64_t v13 = *(void *)v10;
      sub_21934CDF0(*(void *)v10, *((void *)v10 + 1));
      *(void *)uint64_t v9 = v13;
      *((void *)v9 + 1) = v11;
    }
  }
  return a1;
}

uint64_t sub_2193CCEB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193E2300();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  unint64_t v7 = v6[1];
  if (v7 >> 60 != 15)
  {
    uint64_t v8 = *v6;
    return sub_219348A70(v8, v7);
  }
  return result;
}

uint64_t sub_2193CCF4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = v9[1];
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }
  else
  {
    uint64_t v11 = *v9;
    sub_21934CDF0(*v9, v9[1]);
    *(void *)uint64_t v8 = v11;
    *(void *)(v8 + 8) = v10;
  }
  return a1;
}

uint64_t sub_2193CCFF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = *(void *)(a2 + v7 + 8);
  if (*(void *)(a1 + v7 + 8) >> 60 != 15)
  {
    if (v10 >> 60 != 15)
    {
      uint64_t v12 = *v9;
      sub_21934CDF0(v12, v10);
      uint64_t v13 = *v8;
      unint64_t v14 = v8[1];
      *uint64_t v8 = v12;
      v8[1] = v10;
      sub_219348A70(v13, v14);
      return a1;
    }
    sub_21934DFD8((uint64_t)v8);
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    return a1;
  }
  uint64_t v11 = *v9;
  sub_21934CDF0(v11, v10);
  *uint64_t v8 = v11;
  v8[1] = v10;
  return a1;
}

uint64_t sub_2193CD0E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_2193CD164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = *(void *)(a1 + v7 + 8);
  if (v10 >> 60 != 15)
  {
    unint64_t v11 = v9[1];
    if (v11 >> 60 != 15)
    {
      uint64_t v12 = *v8;
      *uint64_t v8 = *v9;
      v8[1] = v11;
      sub_219348A70(v12, v10);
      return a1;
    }
    sub_21934DFD8((uint64_t)v8);
  }
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  return a1;
}

uint64_t sub_2193CD224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_13Tm);
}

uint64_t sub_2193CD23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_14Tm);
}

uint64_t sub_2193CD254()
{
  uint64_t result = sub_2193E2300();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2193CD2E8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for CableResponse.OneOf_Response(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A0D0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v12 = sub_2193E2300();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v13 = (int *)type metadata accessor for CableResponse.AllocationResponse(0);
        uint64_t v14 = v13[5];
        BOOL v15 = (char *)a1 + v14;
        unsigned int v16 = (char *)a2 + v14;
        unint64_t v17 = *((void *)v16 + 1);
        if (v17 >> 60 == 15)
        {
          *(_OWORD *)BOOL v15 = *(_OWORD *)v16;
        }
        else
        {
          uint64_t v18 = *(void *)v16;
          sub_21934CDF0(*(void *)v16, *((void *)v16 + 1));
          *(void *)BOOL v15 = v18;
          *((void *)v15 + 1) = v17;
        }
        uint64_t v19 = v13[6];
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
        v20[4] = v21[4];
        uint64_t v22 = v13[7];
        uint64_t v23 = (char *)a1 + v22;
        uint64_t v24 = (char *)a2 + v22;
        unint64_t v25 = *((void *)v24 + 1);
        if (v25 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
        }
        else
        {
          uint64_t v26 = *(void *)v24;
          sub_21934CDF0(*(void *)v24, *((void *)v24 + 1));
          *(void *)uint64_t v23 = v26;
          *((void *)v23 + 1) = v25;
        }
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v27 = a3[5];
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    uint64_t v30 = sub_2193E2300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    uint64_t v31 = a3[6];
    uint64_t v32 = (char *)a1 + v31;
    uint64_t v33 = (char *)a2 + v31;
    unint64_t v34 = *((void *)v33 + 1);
    if (v34 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
    }
    else
    {
      uint64_t v35 = *(void *)v33;
      sub_21934CDF0(*(void *)v33, *((void *)v33 + 1));
      *(void *)uint64_t v32 = v35;
      *((void *)v32 + 1) = v34;
    }
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_2193CD5E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CableResponse.OneOf_Response(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v6 = sub_2193E2300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v7 = type metadata accessor for CableResponse.AllocationResponse(0);
      uint64_t v8 = (uint64_t *)(a1 + *(int *)(v7 + 20));
      unint64_t v9 = v8[1];
      if (v9 >> 60 != 15) {
        sub_219348A70(*v8, v9);
      }
      uint64_t v10 = (uint64_t *)(a1 + *(int *)(v7 + 28));
      unint64_t v11 = v10[1];
      if (v11 >> 60 != 15) {
        sub_219348A70(*v10, v11);
      }
    }
  }
  uint64_t v12 = a1 + *(int *)(a2 + 20);
  uint64_t v13 = sub_2193E2300();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  BOOL v15 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  unint64_t v16 = v15[1];
  if (v16 >> 60 != 15)
  {
    uint64_t v17 = *v15;
    return sub_219348A70(v17, v16);
  }
  return result;
}

char *sub_2193CD770(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CableResponse.OneOf_Response(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A0D0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v10 = sub_2193E2300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    if (EnumCaseMultiPayload != 1)
    {
      unint64_t v11 = (int *)type metadata accessor for CableResponse.AllocationResponse(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      unint64_t v15 = *((void *)v14 + 1);
      if (v15 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      }
      else
      {
        uint64_t v16 = *(void *)v14;
        sub_21934CDF0(*(void *)v14, *((void *)v14 + 1));
        *(void *)uint64_t v13 = v16;
        *((void *)v13 + 1) = v15;
      }
      uint64_t v17 = v11[6];
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
      v18[4] = v19[4];
      uint64_t v20 = v11[7];
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      unint64_t v23 = *((void *)v22 + 1);
      if (v23 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
      }
      else
      {
        uint64_t v24 = *(void *)v22;
        sub_21934CDF0(*(void *)v22, *((void *)v22 + 1));
        *(void *)uint64_t v21 = v24;
        *((void *)v21 + 1) = v23;
      }
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v25 = a3[5];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = sub_2193E2300();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  uint64_t v29 = a3[6];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  unint64_t v32 = *((void *)v31 + 1);
  if (v32 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  }
  else
  {
    uint64_t v33 = *(void *)v31;
    sub_21934CDF0(*(void *)v31, *((void *)v31 + 1));
    *(void *)uint64_t v30 = v33;
    *((void *)v30 + 1) = v32;
  }
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *sub_2193CDA20(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CableResponse.OneOf_Response(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v12 = sub_2193E2300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v16 = (int *)type metadata accessor for CableResponse.AllocationResponse(0);
        uint64_t v17 = v16[5];
        uint64_t v18 = &a1[v17];
        uint64_t v19 = &a2[v17];
        unint64_t v20 = *((void *)v19 + 1);
        if (v20 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
        }
        else
        {
          uint64_t v21 = *(void *)v19;
          sub_21934CDF0(*(void *)v19, *((void *)v19 + 1));
          *(void *)uint64_t v18 = v21;
          *((void *)v18 + 1) = v20;
        }
        uint64_t v22 = v16[6];
        unint64_t v23 = &a1[v22];
        uint64_t v24 = &a2[v22];
        int v25 = *(_DWORD *)v24;
        v23[4] = v24[4];
        *(_DWORD *)unint64_t v23 = v25;
        uint64_t v26 = v16[7];
        uint64_t v27 = &a1[v26];
        uint64_t v28 = &a2[v26];
        unint64_t v29 = *((void *)v28 + 1);
        if (v29 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
        }
        else
        {
          uint64_t v30 = *(void *)v28;
          sub_21934CDF0(*(void *)v28, *((void *)v28 + 1));
          *(void *)uint64_t v27 = v30;
          *((void *)v27 + 1) = v29;
        }
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_18;
    }
LABEL_7:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A0D0);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_18;
  }
  if (v10)
  {
    sub_2193C6980((uint64_t)a1, type metadata accessor for CableResponse.OneOf_Response);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_2193C6980((uint64_t)a1, type metadata accessor for CableResponse.OneOf_Response);
    int v14 = swift_getEnumCaseMultiPayload();
    uint64_t v15 = sub_2193E2300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
    if (v14 != 1)
    {
      uint64_t v44 = (int *)type metadata accessor for CableResponse.AllocationResponse(0);
      uint64_t v45 = v44[5];
      uint64_t v46 = &a1[v45];
      uint64_t v47 = &a2[v45];
      unint64_t v48 = *((void *)v47 + 1);
      if (v48 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
      }
      else
      {
        uint64_t v49 = *(void *)v47;
        sub_21934CDF0(*(void *)v47, *((void *)v47 + 1));
        *(void *)uint64_t v46 = v49;
        *((void *)v46 + 1) = v48;
      }
      uint64_t v50 = v44[6];
      uint64_t v51 = &a1[v50];
      uint64_t v52 = &a2[v50];
      int v53 = *(_DWORD *)v52;
      v51[4] = v52[4];
      *(_DWORD *)uint64_t v51 = v53;
      uint64_t v54 = v44[7];
      uint64_t v55 = &a1[v54];
      uint64_t v56 = &a2[v54];
      unint64_t v57 = *((void *)v56 + 1);
      if (v57 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
      }
      else
      {
        uint64_t v58 = *(void *)v56;
        sub_21934CDF0(*(void *)v56, *((void *)v56 + 1));
        *(void *)uint64_t v55 = v58;
        *((void *)v55 + 1) = v57;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_18:
  uint64_t v31 = a3[5];
  unint64_t v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  uint64_t v34 = sub_2193E2300();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[6];
  uint64_t v36 = (uint64_t *)&a1[v35];
  char v37 = (uint64_t *)&a2[v35];
  unint64_t v38 = *(void *)&a2[v35 + 8];
  if (*(void *)&a1[v35 + 8] >> 60 != 15)
  {
    if (v38 >> 60 != 15)
    {
      uint64_t v40 = *v37;
      sub_21934CDF0(v40, v38);
      uint64_t v41 = *v36;
      unint64_t v42 = v36[1];
      uint64_t *v36 = v40;
      v36[1] = v38;
      sub_219348A70(v41, v42);
      goto LABEL_25;
    }
    sub_21934DFD8((uint64_t)v36);
    goto LABEL_23;
  }
  if (v38 >> 60 == 15)
  {
LABEL_23:
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
    goto LABEL_25;
  }
  uint64_t v39 = *v37;
  sub_21934CDF0(v39, v38);
  uint64_t *v36 = v39;
  v36[1] = v38;
LABEL_25:
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *sub_2193CDE94(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CableResponse.OneOf_Response(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A0D0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v10 = sub_2193E2300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
    if (EnumCaseMultiPayload != 1)
    {
      unint64_t v11 = (int *)type metadata accessor for CableResponse.AllocationResponse(0);
      *(_OWORD *)&a1[v11[5]] = *(_OWORD *)&a2[v11[5]];
      uint64_t v12 = v11[6];
      uint64_t v13 = &a1[v12];
      int v14 = &a2[v12];
      *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
      void v13[4] = v14[4];
      *(_OWORD *)&a1[v11[7]] = *(_OWORD *)&a2[v11[7]];
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v15 = a3[5];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_2193E2300();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  a1[v19] = a2[v19];
  return a1;
}

char *sub_2193CE09C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CableResponse.OneOf_Response(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v12 = sub_2193E2300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v16 = (int *)type metadata accessor for CableResponse.AllocationResponse(0);
        *(_OWORD *)&a1[v16[5]] = *(_OWORD *)&a2[v16[5]];
        uint64_t v17 = v16[6];
        uint64_t v18 = &a1[v17];
        uint64_t v19 = &a2[v17];
        *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
        v18[4] = v19[4];
        *(_OWORD *)&a1[v16[7]] = *(_OWORD *)&a2[v16[7]];
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_14;
    }
LABEL_7:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A0D0);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_14;
  }
  if (v10)
  {
    sub_2193C6980((uint64_t)a1, type metadata accessor for CableResponse.OneOf_Response);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_2193C6980((uint64_t)a1, type metadata accessor for CableResponse.OneOf_Response);
    int v14 = swift_getEnumCaseMultiPayload();
    uint64_t v15 = sub_2193E2300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
    if (v14 != 1)
    {
      uint64_t v31 = (int *)type metadata accessor for CableResponse.AllocationResponse(0);
      *(_OWORD *)&a1[v31[5]] = *(_OWORD *)&a2[v31[5]];
      uint64_t v32 = v31[6];
      uint64_t v33 = &a1[v32];
      uint64_t v34 = &a2[v32];
      *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
      v33[4] = v34[4];
      *(_OWORD *)&a1[v31[7]] = *(_OWORD *)&a2[v31[7]];
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_14:
  uint64_t v20 = a3[5];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = sub_2193E2300();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  uint64_t v24 = a3[6];
  int v25 = (uint64_t *)&a1[v24];
  uint64_t v26 = (uint64_t *)&a2[v24];
  unint64_t v27 = *(void *)&a1[v24 + 8];
  if (v27 >> 60 != 15)
  {
    unint64_t v28 = v26[1];
    if (v28 >> 60 != 15)
    {
      uint64_t v29 = *v25;
      *int v25 = *v26;
      v25[1] = v28;
      sub_219348A70(v29, v27);
      goto LABEL_19;
    }
    sub_21934DFD8((uint64_t)v25);
  }
  *(_OWORD *)int v25 = *(_OWORD *)v26;
LABEL_19:
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

uint64_t sub_2193CE410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2193CE424);
}

uint64_t sub_2193CE424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A0D0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_2193E2300();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28)) <= 5u) {
    int v14 = 5;
  }
  else {
    int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  }
  unsigned int v15 = v14 - 5;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28)) >= 5u) {
    return v15;
  }
  else {
    return 0;
  }
}

uint64_t sub_2193CE544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2193CE558);
}

uint64_t sub_2193CE558(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A0D0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_2193E2300();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 5;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_2193CE66C()
{
  sub_2193CE764(319, &qword_267C1A1E0, (void (*)(uint64_t))type metadata accessor for CableResponse.OneOf_Response);
  if (v0 <= 0x3F)
  {
    sub_2193E2300();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_2193CE764(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2193E2BB0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *_s26AuthenticationServicesCore13CableResponseV14ResponseStatusOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2193CE884);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CableResponse.ResponseStatus()
{
  return &type metadata for CableResponse.ResponseStatus;
}

uint64_t sub_2193CE8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193E2300();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_2193CE928(uint64_t a1)
{
  uint64_t v2 = sub_2193E2300();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_2193CE98C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_2193CE9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_2193CEA54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_2193CEAB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_2193CEB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2193CEB30);
}

uint64_t sub_2193CEB30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193E2300();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_2193CEB9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2193CEBB0);
}

uint64_t sub_2193CEBB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193E2300();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_2193CEC20()
{
  uint64_t result = sub_2193E2300();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2193CECAC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A110);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v12 = sub_2193E2300();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v13 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
        uint64_t v14 = *(int *)(v13 + 20);
        unsigned int v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        unint64_t v17 = *((void *)v16 + 1);
        if (v17 >> 60 == 15)
        {
          *(_OWORD *)unsigned int v15 = *(_OWORD *)v16;
        }
        else
        {
          uint64_t v23 = *(void *)v16;
          sub_21934CDF0(*(void *)v16, *((void *)v16 + 1));
          *(void *)unsigned int v15 = v23;
          *((void *)v15 + 1) = v17;
        }
        uint64_t v24 = *(int *)(v13 + 24);
        int v25 = (char *)a1 + v24;
        uint64_t v26 = (char *)a2 + v24;
        unint64_t v27 = *((void *)v26 + 1);
        if (v27 >> 60 == 15)
        {
          *(_OWORD *)int v25 = *(_OWORD *)v26;
        }
        else
        {
          uint64_t v33 = *(void *)v26;
          sub_21934CDF0(*(void *)v26, *((void *)v26 + 1));
          *(void *)int v25 = v33;
          *((void *)v25 + 1) = v27;
        }
      }
      else
      {
        uint64_t v18 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
        uint64_t v19 = *(int *)(v18 + 20);
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        unint64_t v22 = *((void *)v21 + 1);
        if (v22 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
        }
        else
        {
          uint64_t v28 = *(void *)v21;
          sub_21934CDF0(*(void *)v21, *((void *)v21 + 1));
          *(void *)uint64_t v20 = v28;
          *((void *)v20 + 1) = v22;
        }
        uint64_t v29 = *(int *)(v18 + 24);
        uint64_t v30 = (char *)a1 + v29;
        uint64_t v31 = (char *)a2 + v29;
        unint64_t v32 = *((void *)v31 + 1);
        if (v32 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
        }
        else
        {
          uint64_t v34 = *(void *)v31;
          sub_21934CDF0(*(void *)v31, *((void *)v31 + 1));
          *(void *)uint64_t v30 = v34;
          *((void *)v30 + 1) = v32;
        }
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v35 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v36 = (char *)a1 + v35;
    char v37 = (char *)a2 + v35;
    uint64_t v38 = sub_2193E2300();
    uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
    swift_bridgeObjectRetain();
    v39(v36, v37, v38);
    uint64_t v40 = a3[7];
    uint64_t v41 = (char *)a1 + v40;
    unint64_t v42 = (char *)a2 + v40;
    unint64_t v43 = *((void *)v42 + 1);
    if (v43 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
    }
    else
    {
      uint64_t v44 = *(void *)v42;
      sub_21934CDF0(*(void *)v42, *((void *)v42 + 1));
      *(void *)uint64_t v41 = v44;
      *((void *)v41 + 1) = v43;
    }
  }
  return a1;
}

uint64_t sub_2193CF018(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v6 = sub_2193E2300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    if (EnumCaseMultiPayload == 1) {
      uint64_t v7 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
    }
    else {
      uint64_t v7 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
    }
    uint64_t v8 = v7;
    uint64_t v9 = (uint64_t *)(a1 + *(int *)(v7 + 20));
    unint64_t v10 = v9[1];
    if (v10 >> 60 != 15) {
      sub_219348A70(*v9, v10);
    }
    uint64_t v11 = (uint64_t *)(a1 + *(int *)(v8 + 24));
    unint64_t v12 = v11[1];
    if (v12 >> 60 != 15) {
      sub_219348A70(*v11, v12);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = a1 + *(int *)(a2 + 24);
  uint64_t v14 = sub_2193E2300();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v16 = (uint64_t *)(a1 + *(int *)(a2 + 28));
  unint64_t v17 = v16[1];
  if (v17 >> 60 != 15)
  {
    uint64_t v18 = *v16;
    return sub_219348A70(v18, v17);
  }
  return result;
}

char *sub_2193CF1B8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A110);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v10 = sub_2193E2300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
      uint64_t v12 = *(int *)(v11 + 20);
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      unint64_t v15 = *((void *)v14 + 1);
      if (v15 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      }
      else
      {
        uint64_t v21 = *(void *)v14;
        sub_21934CDF0(*(void *)v14, *((void *)v14 + 1));
        *(void *)uint64_t v13 = v21;
        *((void *)v13 + 1) = v15;
      }
      uint64_t v22 = *(int *)(v11 + 24);
      uint64_t v23 = &a1[v22];
      uint64_t v24 = &a2[v22];
      unint64_t v25 = *((void *)v24 + 1);
      if (v25 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      }
      else
      {
        uint64_t v31 = *(void *)v24;
        sub_21934CDF0(*(void *)v24, *((void *)v24 + 1));
        *(void *)uint64_t v23 = v31;
        *((void *)v23 + 1) = v25;
      }
    }
    else
    {
      uint64_t v16 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
      uint64_t v17 = *(int *)(v16 + 20);
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      unint64_t v20 = *((void *)v19 + 1);
      if (v20 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      }
      else
      {
        uint64_t v26 = *(void *)v19;
        sub_21934CDF0(*(void *)v19, *((void *)v19 + 1));
        *(void *)uint64_t v18 = v26;
        *((void *)v18 + 1) = v20;
      }
      uint64_t v27 = *(int *)(v16 + 24);
      uint64_t v28 = &a1[v27];
      uint64_t v29 = &a2[v27];
      unint64_t v30 = *((void *)v29 + 1);
      if (v30 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
      }
      else
      {
        uint64_t v32 = *(void *)v29;
        sub_21934CDF0(*(void *)v29, *((void *)v29 + 1));
        *(void *)uint64_t v28 = v32;
        *((void *)v28 + 1) = v30;
      }
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v33 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  uint64_t v36 = sub_2193E2300();
  char v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
  swift_bridgeObjectRetain();
  v37(v34, v35, v36);
  uint64_t v38 = a3[7];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  unint64_t v41 = *((void *)v40 + 1);
  if (v41 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  }
  else
  {
    uint64_t v42 = *(void *)v40;
    sub_21934CDF0(*(void *)v40, *((void *)v40 + 1));
    *(void *)uint64_t v39 = v42;
    *((void *)v39 + 1) = v41;
  }
  return a1;
}

char *sub_2193CF4D4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v12 = sub_2193E2300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v13 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
        uint64_t v14 = *(int *)(v13 + 20);
        unint64_t v15 = &a1[v14];
        uint64_t v16 = &a2[v14];
        unint64_t v17 = *((void *)v16 + 1);
        if (v17 >> 60 == 15)
        {
          *(_OWORD *)unint64_t v15 = *(_OWORD *)v16;
        }
        else
        {
          uint64_t v31 = *(void *)v16;
          sub_21934CDF0(*(void *)v16, *((void *)v16 + 1));
          *(void *)unint64_t v15 = v31;
          *((void *)v15 + 1) = v17;
        }
        uint64_t v32 = *(int *)(v13 + 24);
        uint64_t v33 = &a1[v32];
        uint64_t v34 = &a2[v32];
        unint64_t v35 = *((void *)v34 + 1);
        if (v35 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
LABEL_22:
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t v26 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
        uint64_t v27 = *(int *)(v26 + 20);
        uint64_t v28 = &a1[v27];
        uint64_t v29 = &a2[v27];
        unint64_t v30 = *((void *)v29 + 1);
        if (v30 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
        }
        else
        {
          uint64_t v36 = *(void *)v29;
          sub_21934CDF0(*(void *)v29, *((void *)v29 + 1));
          *(void *)uint64_t v28 = v36;
          *((void *)v28 + 1) = v30;
        }
        uint64_t v37 = *(int *)(v26 + 24);
        uint64_t v33 = &a1[v37];
        uint64_t v34 = &a2[v37];
        unint64_t v35 = *((void *)v34 + 1);
        if (v35 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
          goto LABEL_22;
        }
      }
      uint64_t v38 = *(void *)v34;
      sub_21934CDF0(*(void *)v34, *((void *)v34 + 1));
      *(void *)uint64_t v33 = v38;
      *((void *)v33 + 1) = v35;
      goto LABEL_22;
    }
LABEL_8:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A110);
    memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_23;
  }
  if (v10)
  {
    sub_2193C6980((uint64_t)a1, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
    goto LABEL_8;
  }
  if (a1 == a2) {
    goto LABEL_23;
  }
  sub_2193C6980((uint64_t)a1, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
  int v19 = swift_getEnumCaseMultiPayload();
  uint64_t v20 = sub_2193E2300();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
  if (v19 != 1)
  {
    uint64_t v52 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
    uint64_t v53 = *(int *)(v52 + 20);
    uint64_t v54 = &a1[v53];
    uint64_t v55 = &a2[v53];
    unint64_t v56 = *((void *)v55 + 1);
    if (v56 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
    }
    else
    {
      uint64_t v62 = *(void *)v55;
      sub_21934CDF0(*(void *)v55, *((void *)v55 + 1));
      *(void *)uint64_t v54 = v62;
      *((void *)v54 + 1) = v56;
    }
    uint64_t v63 = *(int *)(v52 + 24);
    uint64_t v59 = &a1[v63];
    uint64_t v60 = &a2[v63];
    unint64_t v61 = *((void *)v60 + 1);
    if (v61 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
      goto LABEL_40;
    }
LABEL_39:
    uint64_t v64 = *(void *)v60;
    sub_21934CDF0(*(void *)v60, *((void *)v60 + 1));
    *(void *)uint64_t v59 = v64;
    *((void *)v59 + 1) = v61;
    goto LABEL_40;
  }
  uint64_t v21 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
  uint64_t v22 = *(int *)(v21 + 20);
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  unint64_t v25 = *((void *)v24 + 1);
  if (v25 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  }
  else
  {
    uint64_t v57 = *(void *)v24;
    sub_21934CDF0(*(void *)v24, *((void *)v24 + 1));
    *(void *)uint64_t v23 = v57;
    *((void *)v23 + 1) = v25;
  }
  uint64_t v58 = *(int *)(v21 + 24);
  uint64_t v59 = &a1[v58];
  uint64_t v60 = &a2[v58];
  unint64_t v61 = *((void *)v60 + 1);
  if (v61 >> 60 != 15) {
    goto LABEL_39;
  }
  *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
LABEL_40:
  swift_storeEnumTagMultiPayload();
LABEL_23:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[6];
  uint64_t v40 = &a1[v39];
  unint64_t v41 = &a2[v39];
  uint64_t v42 = sub_2193E2300();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[7];
  uint64_t v44 = (uint64_t *)&a1[v43];
  uint64_t v45 = (uint64_t *)&a2[v43];
  unint64_t v46 = *(void *)&a2[v43 + 8];
  if (*(void *)&a1[v43 + 8] >> 60 != 15)
  {
    if (v46 >> 60 != 15)
    {
      uint64_t v48 = *v45;
      sub_21934CDF0(v48, v46);
      uint64_t v49 = *v44;
      unint64_t v50 = v44[1];
      *uint64_t v44 = v48;
      v44[1] = v46;
      sub_219348A70(v49, v50);
      return a1;
    }
    sub_21934DFD8((uint64_t)v44);
    goto LABEL_28;
  }
  if (v46 >> 60 == 15)
  {
LABEL_28:
    *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
    return a1;
  }
  uint64_t v47 = *v45;
  sub_21934CDF0(v47, v46);
  *uint64_t v44 = v47;
  v44[1] = v46;
  return a1;
}

char *sub_2193CFA24(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A110);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v10 = sub_2193E2300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
    if (EnumCaseMultiPayload == 1) {
      uint64_t v11 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
    }
    else {
      uint64_t v11 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
    }
    *(_OWORD *)&a1[*(int *)(v11 + 20)] = *(_OWORD *)&a2[*(int *)(v11 + 20)];
    *(_OWORD *)&a1[*(int *)(v11 + 24)] = *(_OWORD *)&a2[*(int *)(v11 + 24)];
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v12 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_2193E2300();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  return a1;
}

char *sub_2193CFC10(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v12 = sub_2193E2300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
      if (EnumCaseMultiPayload == 1) {
        uint64_t v13 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
      }
      else {
        uint64_t v13 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
      }
      *(_OWORD *)&a1[*(int *)(v13 + 20)] = *(_OWORD *)&a2[*(int *)(v13 + 20)];
      *(_OWORD *)&a1[*(int *)(v13 + 24)] = *(_OWORD *)&a2[*(int *)(v13 + 24)];
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_14;
    }
LABEL_7:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A110);
    memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_14;
  }
  if (v10)
  {
    sub_2193C6980((uint64_t)a1, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_2193C6980((uint64_t)a1, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
    int v15 = swift_getEnumCaseMultiPayload();
    uint64_t v16 = sub_2193E2300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
    if (v15 == 1) {
      uint64_t v17 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
    }
    else {
      uint64_t v17 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
    }
    *(_OWORD *)&a1[*(int *)(v17 + 20)] = *(_OWORD *)&a2[*(int *)(v17 + 20)];
    *(_OWORD *)&a1[*(int *)(v17 + 24)] = *(_OWORD *)&a2[*(int *)(v17 + 24)];
    swift_storeEnumTagMultiPayload();
  }
LABEL_14:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[6];
  int v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_2193E2300();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  uint64_t v22 = a3[7];
  uint64_t v23 = (uint64_t *)&a1[v22];
  uint64_t v24 = (uint64_t *)&a2[v22];
  unint64_t v25 = *(void *)&a1[v22 + 8];
  if (v25 >> 60 != 15)
  {
    unint64_t v26 = v24[1];
    if (v26 >> 60 != 15)
    {
      uint64_t v27 = *v23;
      *uint64_t v23 = *v24;
      v23[1] = v26;
      sub_219348A70(v27, v25);
      return a1;
    }
    sub_21934DFD8((uint64_t)v23);
  }
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  return a1;
}

uint64_t sub_2193CFF74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2193CFF88);
}

uint64_t sub_2193CFF88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A110);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_2193E2300();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_2193D00B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2193D00CC);
}

uint64_t sub_2193D00CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A110);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_2193E2300();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_2193D01FC()
{
  sub_2193CE764(319, &qword_267C1A208, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
  if (v0 <= 0x3F)
  {
    sub_2193E2300();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_2193D030C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_13Tm_0);
}

uint64_t sub_2193D0324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_14Tm_0);
}

uint64_t sub_2193D033C()
{
  return sub_2193D0FC8();
}

uint64_t *sub_2193D034C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2193E2300();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    unint64_t v11 = *((void *)v10 + 1);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    }
    else
    {
      uint64_t v13 = *(void *)v10;
      sub_21934CDF0(*(void *)v10, *((void *)v10 + 1));
      *(void *)uint64_t v9 = v13;
      *((void *)v9 + 1) = v11;
    }
    uint64_t v14 = *(int *)(a3 + 24);
    int v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    unint64_t v17 = *((void *)v16 + 1);
    if (v17 >> 60 == 15)
    {
      *(_OWORD *)int v15 = *(_OWORD *)v16;
    }
    else
    {
      uint64_t v18 = *(void *)v16;
      sub_21934CDF0(*(void *)v16, *((void *)v16 + 1));
      *(void *)int v15 = v18;
      *((void *)v15 + 1) = v17;
    }
  }
  return a1;
}

uint64_t sub_2193D048C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193E2300();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  unint64_t v7 = v6[1];
  if (v7 >> 60 != 15) {
    uint64_t result = sub_219348A70(*v6, v7);
  }
  uint64_t v8 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  unint64_t v9 = v8[1];
  if (v9 >> 60 != 15)
  {
    uint64_t v10 = *v8;
    return sub_219348A70(v10, v9);
  }
  return result;
}

uint64_t sub_2193D0540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  unint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = v9[1];
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }
  else
  {
    uint64_t v11 = *v9;
    sub_21934CDF0(*v9, v9[1]);
    *(void *)uint64_t v8 = v11;
    *(void *)(v8 + 8) = v10;
  }
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (uint64_t *)(a2 + v12);
  unint64_t v15 = v14[1];
  if (v15 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  }
  else
  {
    uint64_t v16 = *v14;
    sub_21934CDF0(*v14, v14[1]);
    *(void *)uint64_t v13 = v16;
    *(void *)(v13 + 8) = v15;
  }
  return a1;
}

uint64_t sub_2193D0630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  unint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = *(void *)(a2 + v7 + 8);
  if (*(void *)(a1 + v7 + 8) >> 60 == 15)
  {
    if (v10 >> 60 != 15)
    {
      uint64_t v11 = *v9;
      sub_21934CDF0(v11, v10);
      *uint64_t v8 = v11;
      v8[1] = v10;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
    sub_21934DFD8((uint64_t)v8);
LABEL_6:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  uint64_t v12 = *v9;
  sub_21934CDF0(v12, v10);
  uint64_t v13 = *v8;
  unint64_t v14 = v8[1];
  *uint64_t v8 = v12;
  v8[1] = v10;
  sub_219348A70(v13, v14);
LABEL_8:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (uint64_t *)(a1 + v15);
  unint64_t v17 = (uint64_t *)(a2 + v15);
  unint64_t v18 = *(void *)(a2 + v15 + 8);
  if (*(void *)(a1 + v15 + 8) >> 60 != 15)
  {
    if (v18 >> 60 != 15)
    {
      uint64_t v20 = *v17;
      sub_21934CDF0(v20, v18);
      uint64_t v21 = *v16;
      unint64_t v22 = v16[1];
      uint64_t *v16 = v20;
      v16[1] = v18;
      sub_219348A70(v21, v22);
      return a1;
    }
    sub_21934DFD8((uint64_t)v16);
    goto LABEL_13;
  }
  if (v18 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    return a1;
  }
  uint64_t v19 = *v17;
  sub_21934CDF0(v19, v18);
  uint64_t *v16 = v19;
  v16[1] = v18;
  return a1;
}

uint64_t sub_2193D07A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_2193D082C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  unint64_t v10 = *(void *)(a1 + v7 + 8);
  if (v10 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v11 = *(void *)(v9 + 8);
  if (v11 >> 60 == 15)
  {
    sub_21934DFD8(v8);
LABEL_4:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)v8;
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = v11;
  sub_219348A70(v12, v10);
LABEL_6:
  uint64_t v13 = *(int *)(a3 + 24);
  unint64_t v14 = (uint64_t *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  unint64_t v16 = *(void *)(a1 + v13 + 8);
  if (v16 >> 60 != 15)
  {
    unint64_t v17 = v15[1];
    if (v17 >> 60 != 15)
    {
      uint64_t v18 = *v14;
      *unint64_t v14 = *v15;
      v14[1] = v17;
      sub_219348A70(v18, v16);
      return a1;
    }
    sub_21934DFD8((uint64_t)v14);
  }
  *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
  return a1;
}

uint64_t sub_2193D0944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_13Tm_1);
}

uint64_t sub_2193D095C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_14Tm_1);
}

void *sub_2193D0974(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2193E2300();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (void *)((char *)a2 + v8);
    unint64_t v11 = *(void *)((char *)a2 + v8 + 8);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    }
    else
    {
      uint64_t v13 = *v10;
      sub_21934CDF0(*v10, v11);
      *(void *)uint64_t v9 = v13;
      *((void *)v9 + 1) = v11;
    }
  }
  return a1;
}

uint64_t sub_2193D0A78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193E2300();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  unint64_t v7 = v6[1];
  if (v7 >> 60 != 15)
  {
    uint64_t v8 = *v6;
    return sub_219348A70(v8, v7);
  }
  return result;
}

uint64_t sub_2193D0B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = *(void *)(a2 + v7 + 8);
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }
  else
  {
    uint64_t v11 = *v9;
    sub_21934CDF0(*v9, v10);
    *(void *)uint64_t v8 = v11;
    *(void *)(v8 + 8) = v10;
  }
  return a1;
}

uint64_t sub_2193D0BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = *(void *)(a2 + v7 + 8);
  if (*(void *)(a1 + v7 + 8) >> 60 != 15)
  {
    if (v10 >> 60 != 15)
    {
      uint64_t v12 = *v9;
      sub_21934CDF0(v12, v10);
      uint64_t v13 = *v8;
      unint64_t v14 = v8[1];
      *uint64_t v8 = v12;
      v8[1] = v10;
      sub_219348A70(v13, v14);
      return a1;
    }
    sub_21934DFD8((uint64_t)v8);
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    return a1;
  }
  uint64_t v11 = *v9;
  sub_21934CDF0(v11, v10);
  *uint64_t v8 = v11;
  v8[1] = v10;
  return a1;
}

uint64_t sub_2193D0CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_2193D0D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = *(void *)(a1 + v7 + 8);
  if (v10 >> 60 != 15)
  {
    unint64_t v11 = v9[1];
    if (v11 >> 60 != 15)
    {
      uint64_t v12 = *v8;
      *uint64_t v8 = *v9;
      v8[1] = v11;
      sub_219348A70(v12, v10);
      return a1;
    }
    sub_21934DFD8((uint64_t)v8);
  }
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  return a1;
}

uint64_t sub_2193D0E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2193D0E1C);
}

uint64_t sub_2193D0E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) <= 5u) {
      int v10 = 5;
    }
    else {
      int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    }
    unsigned int v11 = v10 - 5;
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) >= 5u) {
      return v11;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_2193D0EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2193D0EF8);
}

uint64_t sub_2193D0EF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2193E2300();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 5;
  }
  return result;
}

uint64_t sub_2193D0FB4()
{
  return sub_2193D0FC8();
}

uint64_t sub_2193D0FC8()
{
  uint64_t result = sub_2193E2300();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2193D1068(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2193E2300();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    int v10 = (char *)a1 + v9;
    unsigned int v11 = (char *)a2 + v9;
    uint64_t v12 = (int *)type metadata accessor for CableRelayConnectionRequest(0);
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C18E30);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v63 = v13;
      uint64_t v16 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
      uint64_t v17 = *(void *)(v16 - 8);
      uint64_t v64 = (void (*)(char *, char *, uint64_t))v8;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v11, 1, v16))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A110);
        memcpy(v10, v11, *(void *)(*(void *)(v18 - 8) + 64));
        uint64_t v19 = v63;
      }
      else
      {
        uint64_t v62 = v17;
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v21 = (void (*)(char *, char *, uint64_t))v8;
        int v22 = EnumCaseMultiPayload;
        v21(v10, v11, v7);
        uint64_t v61 = v16;
        if (v22 == 1)
        {
          uint64_t v23 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
          uint64_t v24 = *(int *)(v23 + 20);
          unint64_t v25 = &v10[v24];
          unint64_t v26 = (uint64_t *)&v11[v24];
          unint64_t v27 = v26[1];
          uint64_t v19 = v63;
          if (v27 >> 60 == 15)
          {
            *(_OWORD *)unint64_t v25 = *(_OWORD *)v26;
          }
          else
          {
            uint64_t v55 = *v26;
            uint64_t v57 = v23;
            sub_21934CDF0(*v26, v27);
            uint64_t v23 = v57;
            *(void *)unint64_t v25 = v55;
            *((void *)v25 + 1) = v27;
          }
          uint64_t v33 = *(int *)(v23 + 24);
          uint64_t v34 = &v10[v33];
          unint64_t v35 = (uint64_t *)&v11[v33];
          unint64_t v36 = v35[1];
          if (v36 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
          }
          else
          {
            uint64_t v59 = *v35;
            sub_21934CDF0(*v35, v36);
            *(void *)uint64_t v34 = v59;
            *((void *)v34 + 1) = v36;
          }
        }
        else
        {
          uint64_t v28 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
          uint64_t v29 = *(int *)(v28 + 20);
          unint64_t v30 = &v10[v29];
          uint64_t v31 = (uint64_t *)&v11[v29];
          unint64_t v32 = v31[1];
          uint64_t v19 = v63;
          if (v32 >> 60 == 15)
          {
            *(_OWORD *)unint64_t v30 = *(_OWORD *)v31;
          }
          else
          {
            uint64_t v56 = *v31;
            uint64_t v58 = v28;
            sub_21934CDF0(*v31, v32);
            uint64_t v28 = v58;
            *(void *)unint64_t v30 = v56;
            *((void *)v30 + 1) = v32;
          }
          uint64_t v37 = *(int *)(v28 + 24);
          uint64_t v38 = &v10[v37];
          uint64_t v39 = (uint64_t *)&v11[v37];
          unint64_t v40 = v39[1];
          if (v40 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
          }
          else
          {
            uint64_t v60 = *v39;
            sub_21934CDF0(*v39, v40);
            *(void *)uint64_t v38 = v60;
            *((void *)v38 + 1) = v40;
          }
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v10, 0, 1, v61);
      }
      *(void *)&v10[v12[5]] = *(void *)&v11[v12[5]];
      uint64_t v41 = v12[6];
      uint64_t v42 = &v10[v41];
      uint64_t v43 = &v11[v41];
      swift_bridgeObjectRetain();
      v64(v42, v43, v7);
      uint64_t v44 = v12[7];
      uint64_t v45 = &v10[v44];
      unint64_t v46 = &v11[v44];
      unint64_t v47 = *((void *)v46 + 1);
      if (v47 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
      }
      else
      {
        uint64_t v48 = *(void *)v46;
        sub_21934CDF0(*(void *)v46, *((void *)v46 + 1));
        *(void *)uint64_t v45 = v48;
        *((void *)v45 + 1) = v47;
      }
      (*(void (**)(char *, void, uint64_t, int *))(v19 + 56))(v10, 0, 1, v12);
    }
    uint64_t v49 = *(int *)(a3 + 24);
    unint64_t v50 = (char *)a1 + v49;
    uint64_t v51 = (char *)a2 + v49;
    unint64_t v52 = *((void *)v51 + 1);
    if (v52 >> 60 == 15)
    {
      *(_OWORD *)unint64_t v50 = *(_OWORD *)v51;
    }
    else
    {
      uint64_t v53 = *(void *)v51;
      sub_21934CDF0(*(void *)v51, *((void *)v51 + 1));
      *(void *)unint64_t v50 = v53;
      *((void *)v50 + 1) = v52;
    }
  }
  return a1;
}

uint64_t sub_2193D1504(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193E2300();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = type metadata accessor for CableRelayConnectionRequest(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v6, 1, v9))
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v5(v6, v4);
      if (EnumCaseMultiPayload == 1) {
        uint64_t v11 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
      }
      else {
        uint64_t v11 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
      }
      uint64_t v12 = v11;
      uint64_t v13 = (uint64_t *)(v6 + *(int *)(v11 + 20));
      unint64_t v14 = v13[1];
      if (v14 >> 60 != 15) {
        sub_219348A70(*v13, v14);
      }
      uint64_t v15 = (uint64_t *)(v6 + *(int *)(v12 + 24));
      unint64_t v16 = v15[1];
      if (v16 >> 60 != 15) {
        sub_219348A70(*v15, v16);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v5)(v6 + *(int *)(v7 + 24), v4);
    uint64_t v17 = (uint64_t *)(v6 + *(int *)(v7 + 28));
    unint64_t v18 = v17[1];
    if (v18 >> 60 != 15) {
      uint64_t result = sub_219348A70(*v17, v18);
    }
  }
  uint64_t v19 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  unint64_t v20 = v19[1];
  if (v20 >> 60 != 15)
  {
    uint64_t v21 = *v19;
    return sub_219348A70(v21, v20);
  }
  return result;
}

uint64_t sub_2193D1718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)(a1 + v8);
  int v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CableRelayConnectionRequest(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C18E30);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v58 = (void (*)(char *, char *, uint64_t))v7;
    uint64_t v14 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v57 = a3;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A110);
      memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v58(v9, v10, v6);
      uint64_t v56 = v14;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v18 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
        uint64_t v19 = *(int *)(v18 + 20);
        unint64_t v20 = &v9[v19];
        uint64_t v21 = (uint64_t *)&v10[v19];
        unint64_t v22 = v21[1];
        if (v22 >> 60 == 15)
        {
          *(_OWORD *)unint64_t v20 = *(_OWORD *)v21;
        }
        else
        {
          uint64_t v50 = *v21;
          uint64_t v52 = v18;
          sub_21934CDF0(*v21, v22);
          uint64_t v18 = v52;
          *(void *)unint64_t v20 = v50;
          *((void *)v20 + 1) = v22;
        }
        uint64_t v28 = *(int *)(v18 + 24);
        uint64_t v29 = &v9[v28];
        unint64_t v30 = (uint64_t *)&v10[v28];
        unint64_t v31 = v30[1];
        if (v31 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
        }
        else
        {
          uint64_t v54 = *v30;
          sub_21934CDF0(*v30, v31);
          *(void *)uint64_t v29 = v54;
          *((void *)v29 + 1) = v31;
        }
      }
      else
      {
        uint64_t v23 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
        uint64_t v24 = *(int *)(v23 + 20);
        unint64_t v25 = &v9[v24];
        unint64_t v26 = (uint64_t *)&v10[v24];
        unint64_t v27 = v26[1];
        if (v27 >> 60 == 15)
        {
          *(_OWORD *)unint64_t v25 = *(_OWORD *)v26;
        }
        else
        {
          uint64_t v51 = *v26;
          uint64_t v53 = v23;
          sub_21934CDF0(*v26, v27);
          uint64_t v23 = v53;
          *(void *)unint64_t v25 = v51;
          *((void *)v25 + 1) = v27;
        }
        uint64_t v32 = *(int *)(v23 + 24);
        uint64_t v33 = &v9[v32];
        uint64_t v34 = (uint64_t *)&v10[v32];
        unint64_t v35 = v34[1];
        if (v35 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
        }
        else
        {
          uint64_t v55 = *v34;
          sub_21934CDF0(*v34, v35);
          *(void *)uint64_t v33 = v55;
          *((void *)v33 + 1) = v35;
        }
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v56);
    }
    *(void *)&v9[v11[5]] = *(void *)&v10[v11[5]];
    uint64_t v36 = v11[6];
    uint64_t v37 = &v9[v36];
    uint64_t v38 = &v10[v36];
    swift_bridgeObjectRetain();
    v58(v37, v38, v6);
    uint64_t v39 = v11[7];
    unint64_t v40 = &v9[v39];
    uint64_t v41 = &v10[v39];
    unint64_t v42 = *((void *)v41 + 1);
    if (v42 >> 60 == 15)
    {
      *(_OWORD *)unint64_t v40 = *(_OWORD *)v41;
    }
    else
    {
      uint64_t v43 = *(void *)v41;
      sub_21934CDF0(*(void *)v41, *((void *)v41 + 1));
      *(void *)unint64_t v40 = v43;
      *((void *)v40 + 1) = v42;
    }
    a3 = v57;
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v44 = *(int *)(a3 + 24);
  uint64_t v45 = a1 + v44;
  unint64_t v46 = (uint64_t *)(a2 + v44);
  unint64_t v47 = v46[1];
  if (v47 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
  }
  else
  {
    uint64_t v48 = *v46;
    sub_21934CDF0(*v46, v46[1]);
    *(void *)uint64_t v45 = v48;
    *(void *)(v45 + 8) = v47;
  }
  return a1;
}

uint64_t sub_2193D1B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  uint64_t v122 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v122 + 24);
  uint64_t v8 = v6;
  v7(a1, a2);
  uint64_t v130 = a3;
  uint64_t v131 = a1;
  uint64_t v9 = *(int *)(a3 + 20);
  int v10 = (char *)(a1 + v9);
  uint64_t v129 = a2;
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for CableRelayConnectionRequest(0);
  uint64_t v13 = *((void *)v12 - 1);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, int *))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      uint64_t v17 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v11, 1, v17))
      {
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A110);
        memcpy(v10, v11, *(void *)(*(void *)(v19 - 8) + 64));
        uint64_t v20 = v8;
        uint64_t v21 = v131;
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v20 = v8;
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v10, v11, v8);
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v37 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
          uint64_t v38 = *(int *)(v37 + 20);
          uint64_t v39 = &v10[v38];
          unint64_t v40 = (uint64_t *)&v11[v38];
          unint64_t v41 = v40[1];
          if (v41 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
          }
          else
          {
            uint64_t v118 = *v40;
            sub_21934CDF0(*v40, v41);
            *(void *)uint64_t v39 = v118;
            *((void *)v39 + 1) = v41;
          }
          uint64_t v21 = v131;
          uint64_t v48 = *(int *)(v37 + 24);
          uint64_t v49 = &v10[v48];
          uint64_t v50 = (uint64_t *)&v11[v48];
          unint64_t v51 = v50[1];
          if (v51 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
          }
          else
          {
            uint64_t v132 = *v50;
            sub_21934CDF0(*v50, v51);
            *(void *)uint64_t v49 = v132;
            *((void *)v49 + 1) = v51;
          }
        }
        else
        {
          uint64_t v43 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
          uint64_t v44 = *(int *)(v43 + 20);
          uint64_t v45 = &v10[v44];
          unint64_t v46 = (uint64_t *)&v11[v44];
          unint64_t v47 = v46[1];
          if (v47 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
          }
          else
          {
            uint64_t v119 = *v46;
            sub_21934CDF0(*v46, v47);
            *(void *)uint64_t v45 = v119;
            *((void *)v45 + 1) = v47;
          }
          uint64_t v21 = v131;
          uint64_t v52 = *(int *)(v43 + 24);
          uint64_t v53 = &v10[v52];
          uint64_t v54 = (uint64_t *)&v11[v52];
          unint64_t v55 = v54[1];
          if (v55 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
          }
          else
          {
            uint64_t v133 = *v54;
            sub_21934CDF0(*v54, v55);
            *(void *)uint64_t v53 = v133;
            *((void *)v53 + 1) = v55;
          }
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v10, 0, 1, v17);
      }
      *(void *)&v10[v12[5]] = *(void *)&v11[v12[5]];
      uint64_t v56 = v12[6];
      uint64_t v57 = &v10[v56];
      uint64_t v58 = &v11[v56];
      uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v122 + 16);
      swift_bridgeObjectRetain();
      v59(v57, v58, v20);
      uint64_t v60 = v12[7];
      uint64_t v61 = &v10[v60];
      uint64_t v62 = &v11[v60];
      unint64_t v63 = *((void *)v62 + 1);
      if (v63 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
      }
      else
      {
        uint64_t v64 = *(void *)v62;
        sub_21934CDF0(*(void *)v62, *((void *)v62 + 1));
        *(void *)uint64_t v61 = v64;
        *((void *)v61 + 1) = v63;
      }
      uint64_t v24 = v129;
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_70;
    }
LABEL_7:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C18E30);
    memcpy(v10, v11, *(void *)(*(void *)(v22 - 8) + 64));
    uint64_t v24 = v129;
    uint64_t v23 = v130;
    uint64_t v21 = v131;
    goto LABEL_71;
  }
  if (v16)
  {
    sub_2193C6980((uint64_t)v10, type metadata accessor for CableRelayConnectionRequest);
    goto LABEL_7;
  }
  uint64_t v25 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
  uint64_t v117 = *(void *)(v25 - 8);
  unint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v117 + 48);
  int v27 = v26(v10, 1, v25);
  int v28 = v26(v11, 1, v25);
  if (v27)
  {
    if (!v28)
    {
      int v29 = swift_getEnumCaseMultiPayload();
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v10, v11, v8);
      uint64_t v24 = v129;
      unint64_t v30 = (void (*)(char *, char *, uint64_t))v7;
      uint64_t v116 = v25;
      if (v29 == 1)
      {
        uint64_t v31 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
        uint64_t v32 = *(int *)(v31 + 20);
        uint64_t v33 = &v10[v32];
        uint64_t v34 = (uint64_t *)&v11[v32];
        unint64_t v35 = v34[1];
        if (v35 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
        }
        else
        {
          uint64_t v123 = *v34;
          sub_21934CDF0(*v34, v35);
          *(void *)uint64_t v33 = v123;
          *((void *)v33 + 1) = v35;
        }
        uint64_t v76 = *(int *)(v31 + 24);
        BOOL v77 = &v10[v76];
        uint64_t v78 = &v11[v76];
        unint64_t v79 = *((void *)v78 + 1);
        if (v79 >> 60 == 15)
        {
          *(_OWORD *)BOOL v77 = *(_OWORD *)v78;
        }
        else
        {
          uint64_t v84 = *(void *)v78;
          sub_21934CDF0(*(void *)v78, *((void *)v78 + 1));
          *(void *)BOOL v77 = v84;
          *((void *)v77 + 1) = v79;
        }
      }
      else
      {
        uint64_t v71 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
        uint64_t v72 = *(int *)(v71 + 20);
        size_t v73 = &v10[v72];
        uint64_t v74 = (uint64_t *)&v11[v72];
        unint64_t v75 = v74[1];
        if (v75 >> 60 == 15)
        {
          *(_OWORD *)size_t v73 = *(_OWORD *)v74;
        }
        else
        {
          uint64_t v124 = *v74;
          sub_21934CDF0(*v74, v75);
          *(void *)size_t v73 = v124;
          *((void *)v73 + 1) = v75;
        }
        uint64_t v80 = *(int *)(v71 + 24);
        uint64_t v81 = &v10[v80];
        uint64_t v82 = &v11[v80];
        unint64_t v83 = *((void *)v82 + 1);
        if (v83 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v81 = *(_OWORD *)v82;
        }
        else
        {
          uint64_t v85 = *(void *)v82;
          sub_21934CDF0(*(void *)v82, *((void *)v82 + 1));
          *(void *)uint64_t v81 = v85;
          *((void *)v81 + 1) = v83;
        }
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v117 + 56))(v10, 0, 1, v116);
      goto LABEL_63;
    }
LABEL_18:
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A110);
    memcpy(v10, v11, *(void *)(*(void *)(v42 - 8) + 64));
    uint64_t v24 = v129;
    unint64_t v30 = (void (*)(char *, char *, uint64_t))v7;
    goto LABEL_63;
  }
  if (v28)
  {
    sub_2193C6980((uint64_t)v10, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
    goto LABEL_18;
  }
  uint64_t v24 = v129;
  unint64_t v30 = (void (*)(char *, char *, uint64_t))v7;
  if (v131 != v129)
  {
    sub_2193C6980((uint64_t)v10, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
    int v65 = swift_getEnumCaseMultiPayload();
    (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v10, v11, v8);
    if (v65 == 1)
    {
      uint64_t v66 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
      uint64_t v67 = *(int *)(v66 + 20);
      uint64_t v68 = &v10[v67];
      size_t v69 = (uint64_t *)&v11[v67];
      unint64_t v70 = v69[1];
      if (v70 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
      }
      else
      {
        uint64_t v120 = *v69;
        uint64_t v125 = v66;
        sub_21934CDF0(*v69, v70);
        uint64_t v66 = v125;
        *(void *)uint64_t v68 = v120;
        *((void *)v68 + 1) = v70;
      }
      uint64_t v91 = *(int *)(v66 + 24);
      uint64_t v92 = &v10[v91];
      id v93 = (uint64_t *)&v11[v91];
      unint64_t v94 = v93[1];
      if (v94 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v92 = *(_OWORD *)v93;
      }
      else
      {
        uint64_t v127 = *v93;
        sub_21934CDF0(*v93, v94);
        *(void *)uint64_t v92 = v127;
        *((void *)v92 + 1) = v94;
      }
    }
    else
    {
      uint64_t v86 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
      uint64_t v87 = *(int *)(v86 + 20);
      id v88 = &v10[v87];
      uint64_t v89 = (uint64_t *)&v11[v87];
      unint64_t v90 = v89[1];
      if (v90 >> 60 == 15)
      {
        *(_OWORD *)id v88 = *(_OWORD *)v89;
      }
      else
      {
        uint64_t v121 = *v89;
        uint64_t v126 = v86;
        sub_21934CDF0(*v89, v90);
        uint64_t v86 = v126;
        *(void *)id v88 = v121;
        *((void *)v88 + 1) = v90;
      }
      uint64_t v95 = *(int *)(v86 + 24);
      char v96 = &v10[v95];
      char v97 = (uint64_t *)&v11[v95];
      unint64_t v98 = v97[1];
      if (v98 >> 60 == 15)
      {
        *(_OWORD *)char v96 = *(_OWORD *)v97;
      }
      else
      {
        uint64_t v128 = *v97;
        sub_21934CDF0(*v97, v98);
        *(void *)char v96 = v128;
        *((void *)v96 + 1) = v98;
      }
    }
    swift_storeEnumTagMultiPayload();
    unint64_t v30 = (void (*)(char *, char *, uint64_t))v7;
  }
LABEL_63:
  *(void *)&v10[v12[5]] = *(void *)&v11[v12[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30(&v10[v12[6]], &v11[v12[6]], v8);
  uint64_t v99 = v12[7];
  uint64_t v100 = (uint64_t *)&v10[v99];
  uint64_t v101 = (uint64_t *)&v11[v99];
  unint64_t v102 = *(void *)&v11[v99 + 8];
  if ((unint64_t)v100[1] >> 60 != 15)
  {
    uint64_t v21 = v131;
    if (v102 >> 60 != 15)
    {
      uint64_t v104 = *v101;
      sub_21934CDF0(*v101, v102);
      uint64_t v105 = *v100;
      unint64_t v106 = v100[1];
      *uint64_t v100 = v104;
      v100[1] = v102;
      sub_219348A70(v105, v106);
      goto LABEL_70;
    }
    sub_21934DFD8((uint64_t)v100);
    goto LABEL_68;
  }
  uint64_t v21 = v131;
  if (v102 >> 60 == 15)
  {
LABEL_68:
    *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
    goto LABEL_70;
  }
  uint64_t v103 = *v101;
  sub_21934CDF0(*v101, v102);
  *uint64_t v100 = v103;
  v100[1] = v102;
LABEL_70:
  uint64_t v23 = v130;
LABEL_71:
  uint64_t v107 = *(int *)(v23 + 24);
  uint64_t v108 = (uint64_t *)(v21 + v107);
  uint64_t v109 = (uint64_t *)(v24 + v107);
  unint64_t v110 = *(void *)(v24 + v107 + 8);
  if (*(void *)(v21 + v107 + 8) >> 60 != 15)
  {
    if (v110 >> 60 != 15)
    {
      uint64_t v112 = *v109;
      sub_21934CDF0(v112, v110);
      uint64_t v113 = *v108;
      unint64_t v114 = v108[1];
      *uint64_t v108 = v112;
      v108[1] = v110;
      sub_219348A70(v113, v114);
      return v21;
    }
    sub_21934DFD8((uint64_t)v108);
    goto LABEL_76;
  }
  if (v110 >> 60 == 15)
  {
LABEL_76:
    *(_OWORD *)uint64_t v108 = *(_OWORD *)v109;
    return v21;
  }
  uint64_t v111 = *v109;
  sub_21934CDF0(v111, v110);
  *uint64_t v108 = v111;
  v108[1] = v110;
  return v21;
}

uint64_t sub_2193D2564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)(a1 + v8);
  int v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CableRelayConnectionRequest(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C18E30);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v20 = a3;
    uint64_t v14 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
    uint64_t v19 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v10, 1, v14))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A110);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v7((uint64_t)v9, (uint64_t)v10, v6);
      if (EnumCaseMultiPayload == 1) {
        uint64_t v16 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
      }
      else {
        uint64_t v16 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
      }
      *(_OWORD *)&v9[*(int *)(v16 + 20)] = *(_OWORD *)&v10[*(int *)(v16 + 20)];
      *(_OWORD *)&v9[*(int *)(v16 + 24)] = *(_OWORD *)&v10[*(int *)(v16 + 24)];
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v9, 0, 1, v14);
    }
    a3 = v20;
    *(void *)&v9[v11[5]] = *(void *)&v10[v11[5]];
    v7((uint64_t)&v9[v11[6]], (uint64_t)&v10[v11[6]], v6);
    *(_OWORD *)&v9[v11[7]] = *(_OWORD *)&v10[v11[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_2193D2830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  uint64_t v54 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v54 + 40);
  uint64_t v55 = v6;
  v7(a1, a2);
  uint64_t v56 = a3;
  uint64_t v57 = a1;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = a2;
  uint64_t v11 = (char *)(a2 + v8);
  uint64_t v12 = (int *)type metadata accessor for CableRelayConnectionRequest(0);
  uint64_t v13 = *((void *)v12 - 1);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, int *))(v13 + 48);
  int v15 = v14(v9, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_2193C6980((uint64_t)v9, type metadata accessor for CableRelayConnectionRequest);
      goto LABEL_7;
    }
    uint64_t v25 = v7;
    uint64_t v26 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
    uint64_t v51 = *(void *)(v26 - 8);
    int v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
    int v28 = v27(v9, 1, v26);
    uint64_t v52 = v26;
    int v29 = v27(v11, 1, v26);
    uint64_t v23 = v10;
    uint64_t v21 = v57;
    if (v28)
    {
      if (!v29)
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v9, v11, v55);
        uint64_t v31 = (void (*)(char *, char *, uint64_t))v25;
        if (EnumCaseMultiPayload == 1) {
          uint64_t v32 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
        }
        else {
          uint64_t v32 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
        }
        *(_OWORD *)&v9[*(int *)(v32 + 20)] = *(_OWORD *)&v11[*(int *)(v32 + 20)];
        *(_OWORD *)&v9[*(int *)(v32 + 24)] = *(_OWORD *)&v11[*(int *)(v32 + 24)];
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v9, 0, 1, v52);
        goto LABEL_26;
      }
    }
    else
    {
      if (!v29)
      {
        uint64_t v31 = (void (*)(char *, char *, uint64_t))v25;
        if (v57 != v10)
        {
          sub_2193C6980((uint64_t)v9, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
          int v36 = swift_getEnumCaseMultiPayload();
          (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v9, v11, v55);
          if (v36 == 1) {
            uint64_t v37 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
          }
          else {
            uint64_t v37 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
          }
          *(_OWORD *)&v9[*(int *)(v37 + 20)] = *(_OWORD *)&v11[*(int *)(v37 + 20)];
          *(_OWORD *)&v9[*(int *)(v37 + 24)] = *(_OWORD *)&v11[*(int *)(v37 + 24)];
          swift_storeEnumTagMultiPayload();
        }
LABEL_26:
        *(void *)&v9[v12[5]] = *(void *)&v11[v12[5]];
        swift_bridgeObjectRelease();
        v31(&v9[v12[6]], &v11[v12[6]], v55);
        uint64_t v38 = v12[7];
        uint64_t v39 = (uint64_t *)&v9[v38];
        unint64_t v40 = (uint64_t *)&v11[v38];
        unint64_t v41 = v39[1];
        if (v41 >> 60 != 15)
        {
          unint64_t v42 = v40[1];
          if (v42 >> 60 != 15)
          {
            uint64_t v43 = *v39;
            uint64_t *v39 = *v40;
            v39[1] = v42;
            sub_219348A70(v43, v41);
            goto LABEL_31;
          }
          sub_21934DFD8((uint64_t)v39);
        }
        *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
LABEL_31:
        uint64_t v22 = v56;
        goto LABEL_32;
      }
      sub_2193C6980((uint64_t)v9, type metadata accessor for CableRelayConnectionRequest.OneOf_Message);
    }
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A110);
    memcpy(v9, v11, *(void *)(*(void *)(v35 - 8) + 64));
    uint64_t v31 = (void (*)(char *, char *, uint64_t))v25;
    goto LABEL_26;
  }
  if (v16)
  {
LABEL_7:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C18E30);
    memcpy(v9, v11, *(void *)(*(void *)(v24 - 8) + 64));
    uint64_t v22 = v56;
    uint64_t v21 = v57;
    uint64_t v23 = v10;
    goto LABEL_32;
  }
  uint64_t v17 = type metadata accessor for CableRelayConnectionRequest.OneOf_Message(0);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v11, 1, v17))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_267C1A110);
    memcpy(v9, v11, *(void *)(*(void *)(v19 - 8) + 64));
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
    uint64_t v22 = v56;
    uint64_t v21 = v57;
    uint64_t v23 = v10;
  }
  else
  {
    int v33 = swift_getEnumCaseMultiPayload();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
    v20(v9, v11, v55);
    uint64_t v53 = v18;
    if (v33 == 1) {
      uint64_t v34 = type metadata accessor for CableRelayConnectionRequest.StateAssisted(0);
    }
    else {
      uint64_t v34 = type metadata accessor for CableRelayConnectionRequest.QRAssisted(0);
    }
    uint64_t v22 = v56;
    uint64_t v21 = v57;
    uint64_t v23 = v10;
    *(_OWORD *)&v9[*(int *)(v34 + 20)] = *(_OWORD *)&v11[*(int *)(v34 + 20)];
    *(_OWORD *)&v9[*(int *)(v34 + 24)] = *(_OWORD *)&v11[*(int *)(v34 + 24)];
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v9, 0, 1, v17);
  }
  *(void *)&v9[v12[5]] = *(void *)&v11[v12[5]];
  v20(&v9[v12[6]], &v11[v12[6]], v55);
  *(_OWORD *)&v9[v12[7]] = *(_OWORD *)&v11[v12[7]];
  (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v9, 0, 1, v12);
LABEL_32:
  uint64_t v44 = *(int *)(v22 + 24);
  uint64_t v45 = (uint64_t *)(v21 + v44);
  unint64_t v46 = (uint64_t *)(v23 + v44);
  unint64_t v47 = *(void *)(v21 + v44 + 8);
  if (v47 >> 60 != 15)
  {
    unint64_t v48 = v46[1];
    if (v48 >> 60 != 15)
    {
      uint64_t v49 = *v45;
      *uint64_t v45 = *v46;
      v45[1] = v48;
      sub_219348A70(v49, v47);
      return v21;
    }
    sub_21934DFD8((uint64_t)v45);
  }
  *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
  return v21;
}

uint64_t sub_2193D2EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2193D2ED8);
}

uint64_t sub_2193D2ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C18E30);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      uint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8) >> 60;
      BOOL v15 = ((4 * v14) & 0xC) == 0;
      unsigned int v16 = ((4 * v14) & 0xC | (v14 >> 2)) ^ 0xF;
      if (v15) {
        return 0;
      }
      else {
        return v16;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_2193D2FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2193D3010);
}

uint64_t sub_2193D3010(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_2193E2300();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_267C18E30);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      BOOL v15 = (void *)(a1 + *(int *)(a4 + 24));
      void *v15 = 0;
      v15[1] = (unint64_t)((~a2 >> 2) & 3 | (4 * ~a2)) << 60;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_2193D3134()
{
  sub_2193E2300();
  if (v0 <= 0x3F)
  {
    sub_2193CE764(319, &qword_267C1A250, (void (*)(uint64_t))type metadata accessor for CableRelayConnectionRequest);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_2193D3220(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2193E2300();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    unint64_t v11 = *((void *)v10 + 1);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    }
    else
    {
      uint64_t v13 = *(void *)v10;
      sub_21934CDF0(*(void *)v10, *((void *)v10 + 1));
      *(void *)uint64_t v9 = v13;
      *((void *)v9 + 1) = v11;
    }
    uint64_t v14 = a3[6];
    uint64_t v15 = a3[7];
    unsigned int v16 = (char *)a1 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(_DWORD *)unsigned int v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    uint64_t v18 = (char *)a1 + v15;
    uint64_t v19 = (uint64_t *)((char *)a2 + v15);
    unint64_t v20 = *(uint64_t *)((char *)a2 + v15 + 8);
    if (v20 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    }
    else
    {
      uint64_t v21 = *v19;
      sub_21934CDF0(*v19, v20);
      *(void *)uint64_t v18 = v21;
      *((void *)v18 + 1) = v20;
    }
  }
  return a1;
}

uint64_t sub_2193D3378(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2193E2300();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  unint64_t v7 = v6[1];
  if (v7 >> 60 != 15) {
    uint64_t result = sub_219348A70(*v6, v7);
  }
  uint64_t v8 = (uint64_t *)(a1 + *(int *)(a2 + 28));
  unint64_t v9 = v8[1];
  if (v9 >> 60 != 15)
  {
    uint64_t v10 = *v8;
    return sub_219348A70(v10, v9);
  }
  return result;
}

uint64_t sub_2193D342C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  unint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = v9[1];
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }
  else
  {
    uint64_t v11 = *v9;
    sub_21934CDF0(*v9, v9[1]);
    *(void *)uint64_t v8 = v11;
    *(void *)(v8 + 8) = v10;
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(unsigned char *)(v14 + 4) = *(unsigned char *)(v15 + 4);
  uint64_t v16 = a1 + v13;
  uint64_t v17 = (uint64_t *)(a2 + v13);
  unint64_t v18 = *(void *)(a2 + v13 + 8);
  if (v18 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  }
  else
  {
    uint64_t v19 = *v17;
    sub_21934CDF0(*v17, v18);
    *(void *)uint64_t v16 = v19;
    *(void *)(v16 + 8) = v18;
  }
  return a1;
}

uint64_t sub_2193D3534(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (uint64_t *)(a1 + v7);
  unint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = *(void *)(a2 + v7 + 8);
  if (*(void *)(a1 + v7 + 8) >> 60 == 15)
  {
    if (v10 >> 60 != 15)
    {
      uint64_t v11 = *v9;
      sub_21934CDF0(v11, v10);
      *uint64_t v8 = v11;
      v8[1] = v10;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
    sub_21934DFD8((uint64_t)v8);
LABEL_6:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  uint64_t v12 = *v9;
  sub_21934CDF0(v12, v10);
  uint64_t v13 = *v8;
  unint64_t v14 = v8[1];
  *uint64_t v8 = v12;
  v8[1] = v10;
  sub_219348A70(v13, v14);
LABEL_8:
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (int *)(a2 + v15);
  int v18 = *v17;
  *(unsigned char *)(v16 + 4) = *((unsigned char *)v17 + 4);
  *(_DWORD *)uint64_t v16 = v18;
  uint64_t v19 = a3[7];
  unint64_t v20 = (uint64_t *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  unint64_t v22 = *(void *)(a2 + v19 + 8);
  if (*(void *)(a1 + v19 + 8) >> 60 != 15)
  {
    if (v22 >> 60 != 15)
    {
      uint64_t v24 = *v21;
      sub_21934CDF0(v24, v22);
      uint64_t v25 = *v20;
      unint64_t v26 = v20[1];
      uint64_t *v20 = v24;
      v20[1] = v22;
      sub_219348A70(v25, v26);
      return a1;
    }
    sub_21934DFD8((uint64_t)v20);
    goto LABEL_13;
  }
  if (v22 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)unint64_t v20 = *(_OWORD *)v21;
    return a1;
  }
  uint64_t v23 = *v21;
  sub_21934CDF0(v23, v22);
  uint64_t *v20 = v23;
  v20[1] = v22;
  return a1;
}

uint64_t sub_2193D36C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)(v8 + 4) = *(unsigned char *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_2193D3768(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2193E2300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  unint64_t v10 = *(void *)(a1 + v7 + 8);
  if (v10 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v11 = *(void *)(v9 + 8);
  if (v11 >> 60 == 15)
  {
    sub_21934DFD8(v8);
LABEL_4:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)v8;
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = v11;
  sub_219348A70(v12, v10);
LABEL_6:
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(unsigned char *)(v15 + 4) = *(unsigned char *)(v16 + 4);
  uint64_t v17 = (uint64_t *)(a1 + v14);
  int v18 = (uint64_t *)(a2 + v14);
  unint64_t v19 = *(void *)(a1 + v14 + 8);
  if (v19 >> 60 != 15)
  {
    unint64_t v20 = v18[1];
    if (v20 >> 60 != 15)
    {
      uint64_t v21 = *v17;
      uint64_t *v17 = *v18;
      v17[1] = v20;
      sub_219348A70(v21, v19);
      return a1;
    }
    sub_21934DFD8((uint64_t)v17);
  }
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  return a1;
}

uint64_t sub_2193D3898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2193D38AC);
}

uint64_t __swift_get_extra_inhabitant_index_13Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2193E2300();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8) >> 60;
    BOOL v11 = ((4 * v10) & 0xC) == 0;
    unsigned int v12 = ((4 * v10) & 0xC | (v10 >> 2)) ^ 0xF;
    if (v11) {
      return 0;
    }
    else {
      return v12;
    }
  }
}

uint64_t sub_2193D397C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2193D3990);
}

uint64_t __swift_store_extra_inhabitant_index_14Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2193E2300();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    BOOL v11 = (void *)(a1 + *(int *)(a4 + 20));
    void *v11 = 0;
    v11[1] = (unint64_t)((~a2 >> 2) & 3 | (4 * ~a2)) << 60;
  }
  return result;
}

uint64_t sub_2193D3A60()
{
  uint64_t result = sub_2193E2300();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_2193D3B04()
{
  unint64_t result = qword_267C1A268;
  if (!qword_267C1A268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C1A268);
  }
  return result;
}

unint64_t sub_2193D3B5C()
{
  unint64_t result = qword_267C1A270;
  if (!qword_267C1A270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C1A270);
  }
  return result;
}

unint64_t sub_2193D3BB4()
{
  unint64_t result = qword_267C1A278;
  if (!qword_267C1A278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C1A278);
  }
  return result;
}

unint64_t sub_2193D3C0C()
{
  unint64_t result = qword_267C1A280;
  if (!qword_267C1A280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C1A280);
  }
  return result;
}

unint64_t sub_2193D3C64()
{
  unint64_t result = qword_267C1A288;
  if (!qword_267C1A288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C1A288);
  }
  return result;
}

unint64_t sub_2193D3CBC()
{
  unint64_t result = qword_267C1A290;
  if (!qword_267C1A290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C1A290);
  }
  return result;
}

unint64_t sub_2193D3D10(unint64_t result)
{
  if (result >= 5) {
    return 5;
  }
  return result;
}

id ASCRelatedOriginFetcher.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

uint64_t sub_2193D3D64()
{
  return 0x736E696769726FLL;
}

uint64_t sub_2193D3D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x736E696769726FLL && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_2193E3140();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2193D3E14(uint64_t a1)
{
  unint64_t v2 = sub_2193D57BC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2193D3E50(uint64_t a1)
{
  unint64_t v2 = sub_2193D57BC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_2193D3E8C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_2193D5644(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_2193D3EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  uint64_t v6 = sub_2193E1D00();
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27160);
  v5[11] = swift_task_alloc();
  uint64_t v7 = sub_2193E1FF0();
  v5[12] = v7;
  v5[13] = *(void *)(v7 - 8);
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  uint64_t v8 = sub_2193E1DC0();
  v5[16] = v8;
  v5[17] = *(void *)(v8 - 8);
  v5[18] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2193D4078, 0, 0);
}

uint64_t sub_2193D4078()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[11];
  uint64_t v5 = v0[5];
  uint64_t v4 = v0[6];
  sub_2193E1DB0();
  sub_2193E1DA0();
  swift_bridgeObjectRetain();
  MEMORY[0x21D4883C0](v5, v4);
  sub_2193E1D90();
  sub_2193E1D70();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_2193513F0(v0[11]);
    if (qword_26AC26F98 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_2193E24F0();
    __swift_project_value_buffer(v6, (uint64_t)qword_26AC29118);
    uint64_t v7 = sub_2193E24D0();
    os_log_type_t v8 = sub_2193E2AE0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_219326000, v7, v8, "Failed to create /.well-known/webauthn URL", v9, 2u);
      MEMORY[0x21D48A390](v9, -1, -1);
    }
    uint64_t v11 = v0[17];
    uint64_t v10 = v0[18];
    uint64_t v12 = v0[16];

    sub_2193E2840();
    id v13 = objc_allocWithZone(MEMORY[0x263F087E8]);
    uint64_t v14 = (void *)sub_2193E2830();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_initWithDomain_code_userInfo_, v14, 1, 0);

    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15(0);
  }
  else
  {
    uint64_t v18 = v0[14];
    uint64_t v17 = v0[15];
    uint64_t v19 = v0[12];
    uint64_t v20 = v0[13];
    uint64_t v21 = v0[7];
    (*(void (**)(uint64_t, void, uint64_t))(v20 + 32))(v17, v0[11], v19);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v18, v17, v19);
    sub_2193E1CD0();
    sub_2193E1CF0();
    id v22 = objc_msgSend(self, sel_defaultSessionConfiguration);
    v0[19] = v22;
    v0[20] = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, v22, v21, 0);
    uint64_t v23 = (void *)swift_task_alloc();
    v0[21] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_2193D4470;
    uint64_t v24 = v0[10];
    return MEMORY[0x270EF1EB0](v24, 0);
  }
}

uint64_t sub_2193D4470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[22] = a1;
  v5[23] = a2;
  v5[24] = a3;
  v5[25] = v3;
  swift_task_dealloc();
  if (v3) {
    uint64_t v6 = sub_2193D487C;
  }
  else {
    uint64_t v6 = sub_2193D4588;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_2193D4588()
{
  uint64_t v1 = *(void *)(v0 + 200);
  sub_2193E1D30();
  swift_allocObject();
  sub_2193E1D20();
  sub_2193D4FC8();
  sub_2193E1D10();
  if (v1)
  {
    unint64_t v2 = *(void *)(v0 + 184);
    uint64_t v3 = *(void *)(v0 + 176);
    uint64_t v4 = *(void **)(v0 + 152);
    uint64_t v5 = *(void *)(v0 + 136);
    uint64_t v32 = *(void *)(v0 + 128);
    uint64_t v34 = *(void *)(v0 + 144);
    uint64_t v30 = *(void *)(v0 + 120);
    uint64_t v6 = *(void *)(v0 + 104);
    int v27 = *(void **)(v0 + 192);
    uint64_t v28 = *(void *)(v0 + 96);
    uint64_t v8 = *(void *)(v0 + 72);
    uint64_t v7 = *(void *)(v0 + 80);
    uint64_t v9 = *(void *)(v0 + 64);

    swift_release();
    sub_219348A70(v3, v2);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v30, v28);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v34, v32);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v11 = 0;
  }
  else
  {
    swift_release();
    uint64_t v12 = *(void *)(v0 + 16);
    id v13 = objc_allocWithZone(NSURL);
    swift_bridgeObjectRetain();
    uint64_t v14 = (void *)sub_2193E2830();
    swift_bridgeObjectRelease();
    id v15 = objc_msgSend(v13, sel_initWithString_, v14);

    uint64_t v16 = *(void **)(v0 + 160);
    if (v15)
    {
      char v29 = sub_2193D501C(v15, v12);

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();

      char v29 = 0;
    }
    uint64_t v17 = *(void **)(v0 + 192);
    uint64_t v18 = *(void *)(v0 + 144);
    uint64_t v19 = *(void **)(v0 + 152);
    uint64_t v20 = *(void *)(v0 + 136);
    uint64_t v21 = *(void *)(v0 + 120);
    uint64_t v33 = *(void *)(v0 + 128);
    uint64_t v22 = *(void *)(v0 + 104);
    uint64_t v31 = *(void *)(v0 + 96);
    uint64_t v23 = *(void *)(v0 + 80);
    uint64_t v25 = *(void *)(v0 + 64);
    uint64_t v24 = *(void *)(v0 + 72);
    sub_219348A70(*(void *)(v0 + 176), *(void *)(v0 + 184));

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v31);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v33);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v11 = v29 & 1;
  }
  return v10(v11);
}

uint64_t sub_2193D487C()
{
  uint64_t v1 = *(void **)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v12 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 104);
  uint64_t v7 = *(void *)(v0 + 72);
  uint64_t v8 = *(void *)(v0 + 80);
  uint64_t v9 = *(void *)(v0 + 64);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10(0);
}

uint64_t sub_2193D4B1C(int a1, int a2, void *aBlock, void *a4)
{
  v4[2] = a4;
  void v4[3] = _Block_copy(aBlock);
  uint64_t v6 = sub_2193E2840();
  uint64_t v8 = v7;
  v4[4] = v7;
  uint64_t v9 = sub_2193E2840();
  uint64_t v11 = v10;
  v4[5] = v10;
  a4;
  uint64_t v12 = (void *)swift_task_alloc();
  v4[6] = v12;
  *uint64_t v12 = v4;
  v12[1] = sub_2193D4C18;
  return sub_2193D3EB8(v6, v8, v9, v11);
}

uint64_t sub_2193D4C18(char a1)
{
  uint64_t v3 = v1;
  uint64_t v6 = *v2;
  uint64_t v5 = *v2;
  uint64_t v7 = *(void **)(*v2 + 16);
  uint64_t v8 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v5 + 24);
  if (v3)
  {
    uint64_t v10 = (void *)sub_2193E1F60();

    (*(void (**)(uint64_t, void, void *))(v9 + 16))(v9, 0, v10);
  }
  else
  {
    (*(void (**)(uint64_t, void, void))(v9 + 16))(v9, a1 & 1, 0);
  }
  _Block_release(*(const void **)(v6 + 24));
  uint64_t v11 = *(uint64_t (**)(void))(v8 + 8);
  return v11();
}

uint64_t sub_2193D4DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_2193E3210();
    sub_2193E28D0();
    uint64_t v6 = sub_2193E3230();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_2193E3140() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_2193E3140() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

id ASCRelatedOriginFetcher.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ASCRelatedOriginFetcher();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ASCRelatedOriginFetcher.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ASCRelatedOriginFetcher();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_2193D4FC8()
{
  unint64_t result = qword_267C1A2B0;
  if (!qword_267C1A2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267C1A2B0);
  }
  return result;
}

uint64_t sub_2193D501C(void *a1, uint64_t a2)
{
  id v33 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AC27160);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2193E1FF0();
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x263F8EE88];
  uint64_t v10 = *(void *)(a2 + 16);
  if (v10)
  {
    uint64_t v11 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    BOOL v12 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v13 = (void (**)(char *, uint64_t))(v7 + 8);
    swift_bridgeObjectRetain();
    v32[1] = a2;
    uint64_t v14 = a2 + 40;
    uint64_t v34 = v12;
    uint64_t v35 = v13;
    while (1)
    {
      swift_bridgeObjectRetain();
      sub_2193E1FE0();
      swift_bridgeObjectRelease();
      if ((*v11)(v5, 1, v6) == 1)
      {
        sub_2193513F0((uint64_t)v5);
      }
      else
      {
        (*v12)(v9, v5, v6);
        sub_2193E1FB0();
        if (!v15) {
          goto LABEL_12;
        }
        uint64_t v16 = (void *)sub_2193E2830();
        swift_bridgeObjectRelease();
        id v17 = objc_msgSend(v16, sel_safari_stringByRemovingTopLevelDomainFromHost);

        if (!v17) {
          goto LABEL_12;
        }
        uint64_t v18 = sub_2193E2840();
        uint64_t v20 = v19;

        v38[0] = v18;
        v38[1] = v20;
        uint64_t v36 = 46;
        unint64_t v37 = 0xE100000000000000;
        sub_2193D5994();
        uint64_t v21 = sub_2193E2C20();
        swift_bridgeObjectRelease();
        uint64_t v22 = *(void *)(v21 + 16);
        if (!v22)
        {
          swift_bridgeObjectRelease();
          uint64_t v13 = v35;
LABEL_12:
          (*v13)(v9, v6);
          goto LABEL_4;
        }
        uint64_t v23 = v21 + 16 * v22;
        uint64_t v25 = *(void *)(v23 + 16);
        uint64_t v24 = *(void *)(v23 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v26 = v39;
        swift_bridgeObjectRetain();
        char v27 = sub_2193D4DE8(v25, v24, v26);
        swift_bridgeObjectRelease();
        if (v27)
        {
          swift_bridgeObjectRelease();
          BOOL v12 = v34;
          goto LABEL_16;
        }
        BOOL v12 = v34;
        if (*(void *)(v26 + 16) != 5)
        {
          sub_2193B4488(v38, v25, v24);
          swift_bridgeObjectRelease();
LABEL_16:
          uint64_t v13 = v35;
          uint64_t v28 = (void *)sub_2193E1F80();
          unsigned int v29 = objc_msgSend(v33, sel_safari_hasSameOriginAsURL_, v28);

          (*v13)(v9, v6);
          if (v29)
          {
            swift_bridgeObjectRelease();
            uint64_t v30 = 1;
            goto LABEL_21;
          }
          goto LABEL_4;
        }
        uint64_t v13 = v35;
        (*v35)(v9, v6);
        swift_bridgeObjectRelease();
      }
LABEL_4:
      v14 += 16;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        uint64_t v30 = 0;
        goto LABEL_21;
      }
    }
  }
  uint64_t v30 = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v30;
}