uint64_t type metadata accessor for Sentencepiece_TrainerSpec(uint64_t a1)
{
  return sub_2613C25C4(a1, (uint64_t *)&unk_26A917AF0);
}

uint64_t type metadata accessor for Sentencepiece_TrainerSpec._StorageClass()
{
  return self;
}

uint64_t sub_2613B9F2C()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Sentencepiece_TrainerSpec(0) + 24));
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 56) == 4) {
    return 0;
  }
  else {
    return *(unsigned __int8 *)(v1 + 56);
  }
}

BOOL sub_2613B9F80(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2613B9F98(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2613CC5E8();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

void sub_2613B9FE8(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_2613B9FF0@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_2613C2250(a1);
  *a2 = result;
  return result;
}

uint64_t sub_2613BA018()
{
  return *v0 + 1;
}

uint64_t sub_2613BA024@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_2613C2250(*a1);
  *a2 = result;
  return result;
}

void sub_2613BA050(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

uint64_t sub_2613BA060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2613BFB2C(a1, MEMORY[0x263F50588], a2);
}

uint64_t sub_2613BA078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2613BFBA0(a1, a2, a3, MEMORY[0x263F50588]);
}

uint64_t (*sub_2613BA090())()
{
  return nullsub_1;
}

void sub_2613BA0B8(void *a1@<X8>)
{
  *a1 = &unk_270D54AF8;
}

uint64_t sub_2613BA0C8(uint64_t (*a1)(void))
{
  v2 = (uint64_t *)(v1 + *(int *)(a1(0) + 24));
  if (v2[1]) {
    uint64_t v3 = *v2;
  }
  else {
    uint64_t v3 = 0;
  }
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t (*sub_2613BA12C())()
{
  return nullsub_1;
}

uint64_t sub_2613BA150@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2613C23AC(&qword_26A914880);
  MEMORY[0x270FA5388](v3 - 8);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Sentencepiece_ModelProto(0);
  sub_2613C2540(v1 + *(int *)(v6 + 28), (uint64_t)v5, &qword_26A914880);
  uint64_t v7 = type metadata accessor for Sentencepiece_TrainerSpec(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_2613C2410((uint64_t)v5, a1, type metadata accessor for Sentencepiece_TrainerSpec);
  }
  sub_2614D4D58();
  sub_2614D4DA8();
  uint64_t v8 = *(int *)(v7 + 24);
  if (qword_26A916018 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_26A916020;
  swift_retain();
  return sub_2613CC6A0((uint64_t)v5, &qword_26A914880);
}

uint64_t sub_2613BA2B8()
{
  return sub_2613BA0C8(type metadata accessor for Sentencepiece_ModelProto.SentencePiece);
}

float sub_2613BA2D0()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Sentencepiece_ModelProto.SentencePiece(0) + 28);
  float result = *(float *)v1;
  if (*(unsigned char *)(v1 + 4)) {
    return 0.0;
  }
  return result;
}

BOOL sub_2613BA308(char *a1, char *a2)
{
  return qword_2614D9130[*a1] == qword_2614D9130[*a2];
}

uint64_t sub_2613BA32C()
{
  return sub_2614D60B8();
}

uint64_t sub_2613BA390(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2613CC594();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t sub_2613BA3DC()
{
  return sub_2614D60B8();
}

uint64_t sub_2613BA43C@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_2613C25FC(a1);
  *a2 = result;
  return result;
}

uint64_t sub_2613BA464()
{
  return qword_2614D9130[*v0];
}

uint64_t sub_2613BA478@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_2613C25FC(*a1);
  *a2 = result;
  return result;
}

void sub_2613BA4A4(void *a1@<X8>)
{
  *a1 = qword_2614D9130[*v1];
}

uint64_t sub_2613BA4BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = sub_2614D4DB8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_2613BA52C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 24);
  uint64_t v5 = sub_2614D4DB8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

void sub_2613BA59C(void *a1@<X8>)
{
  *a1 = &unk_270D54B20;
}

uint64_t sub_2613BA5AC()
{
  uint64_t v0 = sub_2614D4FC8();
  sub_2613CC63C(v0, qword_26A920068);
  sub_2613C2624(v0, (uint64_t)qword_26A920068);
  sub_2613C23AC(&qword_26A914A00);
  uint64_t v1 = (int *)(sub_2613C23AC(&qword_26A914A08) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v94 = swift_allocObject();
  *(_OWORD *)(v94 + 16) = xmmword_2614D81B0;
  unint64_t v4 = v94 + v3;
  unint64_t v5 = v94 + v3 + v1[14];
  *(void *)(v94 + v3) = 1;
  *(void *)unint64_t v5 = "input";
  *(void *)(v5 + 8) = 5;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = *MEMORY[0x263F50718];
  uint64_t v7 = sub_2614D4FA8();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v94 + v3 + v2 + v1[14];
  *(void *)(v4 + v2) = 7;
  *(void *)unint64_t v9 = "input_format";
  *(void *)(v9 + 8) = 12;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v94 + v3 + 2 * v2);
  v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 2;
  *(void *)v11 = "model_prefix";
  *((void *)v11 + 1) = 12;
  v11[16] = 2;
  v8();
  v12 = (void *)(v94 + v3 + 3 * v2);
  v13 = (char *)v12 + v1[14];
  void *v12 = 3;
  *(void *)v13 = "model_type";
  *((void *)v13 + 1) = 10;
  v13[16] = 2;
  v8();
  v14 = (void *)(v94 + v3 + 4 * v2);
  v15 = (char *)v14 + v1[14];
  void *v14 = 4;
  *(void *)v15 = "vocab_size";
  *((void *)v15 + 1) = 10;
  v15[16] = 2;
  v8();
  v16 = (void *)(v94 + v3 + 5 * v2);
  v17 = (char *)v16 + v1[14];
  void *v16 = 5;
  *(void *)v17 = "accept_language";
  *((void *)v17 + 1) = 15;
  v17[16] = 2;
  v8();
  v18 = (void *)(v94 + v3 + 6 * v2);
  v19 = (char *)v18 + v1[14];
  void *v18 = 6;
  *(void *)v19 = "self_test_sample_size";
  *((void *)v19 + 1) = 21;
  v19[16] = 2;
  v8();
  v20 = (void *)(v94 + v3 + 7 * v2);
  v21 = (char *)v20 + v1[14];
  void *v20 = 50;
  *(void *)v21 = "enable_differential_privacy";
  *((void *)v21 + 1) = 27;
  v21[16] = 2;
  v8();
  uint64_t v22 = v94 + v3 + 8 * v2 + v1[14];
  *(void *)(v4 + 8 * v2) = 51;
  *(void *)uint64_t v22 = "differential_privacy_noise_level";
  *(void *)(v22 + 8) = 32;
  *(unsigned char *)(v22 + 16) = 2;
  v8();
  v23 = (void *)(v94 + v3 + 9 * v2);
  v24 = (char *)v23 + v1[14];
  void *v23 = 52;
  *(void *)v24 = "differential_privacy_clipping_threshold";
  *((void *)v24 + 1) = 39;
  v24[16] = 2;
  v8();
  v25 = (void *)(v94 + v3 + 10 * v2);
  v26 = (char *)v25 + v1[14];
  void *v25 = 10;
  *(void *)v26 = "character_coverage";
  *((void *)v26 + 1) = 18;
  v26[16] = 2;
  v8();
  v27 = (void *)(v94 + v3 + 11 * v2);
  v28 = (char *)v27 + v1[14];
  void *v27 = 11;
  *(void *)v28 = "input_sentence_size";
  *((void *)v28 + 1) = 19;
  v28[16] = 2;
  v8();
  v29 = (void *)(v94 + v3 + 12 * v2);
  v30 = (char *)v29 + v1[14];
  void *v29 = 19;
  *(void *)v30 = "shuffle_input_sentence";
  *((void *)v30 + 1) = 22;
  v30[16] = 2;
  v8();
  v31 = (void *)(v94 + v3 + 13 * v2);
  v32 = (char *)v31 + v1[14];
  void *v31 = 12;
  *(void *)v32 = "mining_sentence_size";
  *((void *)v32 + 1) = 20;
  v32[16] = 2;
  v8();
  v33 = (void *)(v94 + v3 + 14 * v2);
  v34 = (char *)v33 + v1[14];
  void *v33 = 13;
  *(void *)v34 = "training_sentence_size";
  *((void *)v34 + 1) = 22;
  v34[16] = 2;
  v8();
  v35 = (void *)(v94 + v3 + 15 * v2);
  v36 = (char *)v35 + v1[14];
  void *v35 = 14;
  *(void *)v36 = "seed_sentencepiece_size";
  *((void *)v36 + 1) = 23;
  v36[16] = 2;
  v8();
  uint64_t v37 = v94 + v3 + 16 * v2 + v1[14];
  *(void *)(v4 + 16 * v2) = 15;
  *(void *)uint64_t v37 = "shrinking_factor";
  *(void *)(v37 + 8) = 16;
  *(unsigned char *)(v37 + 16) = 2;
  v8();
  v38 = (void *)(v94 + v3 + 17 * v2);
  v39 = (char *)v38 + v1[14];
  void *v38 = 18;
  *(void *)v39 = "max_sentence_length";
  *((void *)v39 + 1) = 19;
  v39[16] = 2;
  v8();
  v40 = (void *)(v94 + v3 + 18 * v2);
  v41 = (char *)v40 + v1[14];
  void *v40 = 16;
  *(void *)v41 = "num_threads";
  *((void *)v41 + 1) = 11;
  v41[16] = 2;
  v8();
  v42 = (void *)(v94 + v3 + 19 * v2);
  v43 = (char *)v42 + v1[14];
  void *v42 = 17;
  *(void *)v43 = "num_sub_iterations";
  *((void *)v43 + 1) = 18;
  v43[16] = 2;
  v8();
  v44 = (void *)(v94 + v3 + 20 * v2);
  v45 = (char *)v44 + v1[14];
  void *v44 = 20;
  *(void *)v45 = "max_sentencepiece_length";
  *((void *)v45 + 1) = 24;
  v45[16] = 2;
  v8();
  v46 = (void *)(v94 + v3 + 21 * v2);
  v47 = (char *)v46 + v1[14];
  void *v46 = 21;
  *(void *)v47 = "split_by_unicode_script";
  *((void *)v47 + 1) = 23;
  v47[16] = 2;
  v8();
  v48 = (void *)(v94 + v3 + 22 * v2);
  v49 = (char *)v48 + v1[14];
  void *v48 = 23;
  *(void *)v49 = "split_by_number";
  *((void *)v49 + 1) = 15;
  v49[16] = 2;
  v8();
  v50 = (void *)(v94 + v3 + 23 * v2);
  v51 = (char *)v50 + v1[14];
  void *v50 = 22;
  *(void *)v51 = "split_by_whitespace";
  *((void *)v51 + 1) = 19;
  v51[16] = 2;
  v8();
  v52 = (void *)(v94 + v3 + 24 * v2);
  v53 = (char *)v52 + v1[14];
  void *v52 = 24;
  *(void *)v53 = "treat_whitespace_as_suffix";
  *((void *)v53 + 1) = 26;
  v53[16] = 2;
  v8();
  v54 = (void *)(v94 + v3 + 25 * v2);
  v55 = (char *)v54 + v1[14];
  void *v54 = 26;
  *(void *)v55 = "allow_whitespace_only_pieces";
  *((void *)v55 + 1) = 28;
  v55[16] = 2;
  v8();
  v56 = (void *)(v94 + v3 + 26 * v2);
  v57 = (char *)v56 + v1[14];
  void *v56 = 25;
  *(void *)v57 = "split_digits";
  *((void *)v57 + 1) = 12;
  v57[16] = 2;
  v8();
  v58 = (void *)(v94 + v3 + 27 * v2);
  v59 = (char *)v58 + v1[14];
  void *v58 = 53;
  *(void *)v59 = "pretokenization_delimiter";
  *((void *)v59 + 1) = 25;
  v59[16] = 2;
  v8();
  v60 = (void *)(v94 + v3 + 28 * v2);
  v61 = (char *)v60 + v1[14];
  void *v60 = 30;
  *(void *)v61 = "control_symbols";
  *((void *)v61 + 1) = 15;
  v61[16] = 2;
  v8();
  v62 = (void *)(v94 + v3 + 29 * v2);
  v63 = (char *)v62 + v1[14];
  void *v62 = 31;
  *(void *)v63 = "user_defined_symbols";
  *((void *)v63 + 1) = 20;
  v63[16] = 2;
  v8();
  v64 = (void *)(v94 + v3 + 30 * v2);
  v65 = (char *)v64 + v1[14];
  void *v64 = 36;
  *(void *)v65 = "required_chars";
  *((void *)v65 + 1) = 14;
  v65[16] = 2;
  v8();
  v66 = (void *)(v94 + v3 + 31 * v2);
  v67 = (char *)v66 + v1[14];
  void *v66 = 35;
  *(void *)v67 = "byte_fallback";
  *((void *)v67 + 1) = 13;
  v67[16] = 2;
  v8();
  uint64_t v68 = v94 + v3 + 32 * v2 + v1[14];
  *(void *)(v4 + 32 * v2) = 32;
  *(void *)uint64_t v68 = "vocabulary_output_piece_score";
  *(void *)(v68 + 8) = 29;
  *(unsigned char *)(v68 + 16) = 2;
  v8();
  v69 = (void *)(v94 + v3 + 33 * v2);
  v70 = (char *)v69 + v1[14];
  void *v69 = 33;
  *(void *)v70 = "hard_vocab_limit";
  *((void *)v70 + 1) = 16;
  v70[16] = 2;
  v8();
  v71 = (void *)(v94 + v3 + 34 * v2);
  v72 = (char *)v71 + v1[14];
  void *v71 = 34;
  *(void *)v72 = "use_all_vocab";
  *((void *)v72 + 1) = 13;
  v72[16] = 2;
  v8();
  v73 = (void *)(v94 + v3 + 35 * v2);
  v74 = (char *)v73 + v1[14];
  void *v73 = 40;
  *(void *)v74 = "unk_id";
  *((void *)v74 + 1) = 6;
  v74[16] = 2;
  v8();
  v75 = (void *)(v94 + v3 + 36 * v2);
  v76 = (char *)v75 + v1[14];
  void *v75 = 41;
  *(void *)v76 = "bos_id";
  *((void *)v76 + 1) = 6;
  v76[16] = 2;
  v8();
  v77 = (void *)(v94 + v3 + 37 * v2);
  v78 = (char *)v77 + v1[14];
  void *v77 = 42;
  *(void *)v78 = "eos_id";
  *((void *)v78 + 1) = 6;
  v78[16] = 2;
  v8();
  v79 = (void *)(v94 + v3 + 38 * v2);
  v80 = (char *)v79 + v1[14];
  void *v79 = 43;
  *(void *)v80 = "pad_id";
  *((void *)v80 + 1) = 6;
  v80[16] = 2;
  v8();
  v81 = (void *)(v94 + v3 + 39 * v2);
  v82 = (char *)v81 + v1[14];
  void *v81 = 45;
  *(void *)v82 = "unk_piece";
  *((void *)v82 + 1) = 9;
  v82[16] = 2;
  v8();
  v83 = (void *)(v94 + v3 + 40 * v2);
  v84 = (char *)v83 + v1[14];
  void *v83 = 46;
  *(void *)v84 = "bos_piece";
  *((void *)v84 + 1) = 9;
  v84[16] = 2;
  v8();
  v85 = (void *)(v94 + v3 + 41 * v2);
  v86 = (char *)v85 + v1[14];
  void *v85 = 47;
  *(void *)v86 = "eos_piece";
  *((void *)v86 + 1) = 9;
  v86[16] = 2;
  v8();
  v87 = (void *)(v94 + v3 + 42 * v2);
  v88 = (char *)v87 + v1[14];
  void *v87 = 48;
  *(void *)v88 = "pad_piece";
  *((void *)v88 + 1) = 9;
  v88[16] = 2;
  v8();
  v89 = (void *)(v94 + v3 + 43 * v2);
  v90 = (char *)v89 + v1[14];
  void *v89 = 44;
  *(void *)v90 = "unk_surface";
  *((void *)v90 + 1) = 11;
  v90[16] = 2;
  v8();
  v91 = (void *)(v94 + v3 + 44 * v2);
  v92 = (char *)v91 + v1[14];
  void *v91 = 49;
  *(void *)v92 = "train_extremely_large_corpus";
  *((void *)v92 + 1) = 28;
  v92[16] = 2;
  v8();
  return sub_2614D4FB8();
}

double sub_2613BB1C4()
{
  type metadata accessor for Sentencepiece_TrainerSpec._StorageClass();
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = MEMORY[0x263F8EE78];
  *(void *)(v0 + 16) = MEMORY[0x263F8EE78];
  double result = 0.0;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(unsigned char *)(v0 + 56) = 4;
  *(_DWORD *)(v0 + 60) = 0;
  *(unsigned char *)(v0 + 64) = 1;
  *(void *)(v0 + 72) = v1;
  *(_DWORD *)(v0 + 80) = 0;
  *(_WORD *)(v0 + 84) = 513;
  *(_DWORD *)(v0 + 88) = 0;
  *(unsigned char *)(v0 + 92) = 1;
  *(void *)(v0 + 96) = 0;
  *(unsigned char *)(v0 + 104) = 1;
  *(_DWORD *)(v0 + 108) = 0;
  *(unsigned char *)(v0 + 112) = 1;
  *(void *)(v0 + 120) = 0;
  *(_WORD *)(v0 + 128) = 513;
  *(_DWORD *)(v0 + 132) = 0;
  *(unsigned char *)(v0 + 136) = 1;
  *(_DWORD *)(v0 + 140) = 0;
  *(unsigned char *)(v0 + 144) = 1;
  *(_DWORD *)(v0 + 148) = 0;
  *(unsigned char *)(v0 + 152) = 1;
  *(_DWORD *)(v0 + 156) = 0;
  *(unsigned char *)(v0 + 160) = 1;
  *(_DWORD *)(v0 + 164) = 0;
  *(unsigned char *)(v0 + 168) = 1;
  *(_DWORD *)(v0 + 172) = 0;
  *(unsigned char *)(v0 + 176) = 1;
  *(_DWORD *)(v0 + 180) = 0;
  *(unsigned char *)(v0 + 184) = 1;
  *(_DWORD *)(v0 + 188) = 0;
  *(unsigned char *)(v0 + 192) = 1;
  *(_WORD *)(v0 + 197) = 514;
  *(_DWORD *)(v0 + 193) = 33686018;
  *(void *)(v0 + 200) = 0;
  *(void *)(v0 + 208) = 0;
  *(void *)(v0 + 216) = v1;
  *(void *)(v0 + 224) = v1;
  *(void *)(v0 + 232) = 0;
  *(void *)(v0 + 240) = 0;
  *(void *)(v0 + 248) = 33686018;
  *(unsigned char *)(v0 + 256) = 1;
  *(_DWORD *)(v0 + 260) = 0;
  *(unsigned char *)(v0 + 264) = 1;
  *(_DWORD *)(v0 + 268) = 0;
  *(unsigned char *)(v0 + 272) = 1;
  *(_DWORD *)(v0 + 276) = 0;
  *(unsigned char *)(v0 + 280) = 1;
  *(_OWORD *)(v0 + 288) = 0u;
  *(_OWORD *)(v0 + 304) = 0u;
  *(_OWORD *)(v0 + 320) = 0u;
  *(_OWORD *)(v0 + 336) = 0u;
  *(_OWORD *)(v0 + 352) = 0u;
  *(unsigned char *)(v0 + 368) = 2;
  qword_26A916020 = v0;
  return result;
}

uint64_t sub_2613BB2E0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2613BB378()
{
  uint64_t v2 = v0;
  uint64_t v3 = *(int *)(type metadata accessor for Sentencepiece_TrainerSpec(0) + 24);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Sentencepiece_TrainerSpec._StorageClass();
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = swift_retain();
    sub_2613C1568(v5);
    swift_release();
    *(void *)(v2 + v3) = v4;
    swift_release();
  }
  swift_retain();
  uint64_t v6 = sub_2614D4DF8();
  uint64_t v8 = v1;
  if (!v1)
  {
    uint64_t v10 = v6;
    while ((v7 & 1) == 0)
    {
      switch(v10)
      {
        case 1:
        case 5:
        case 30:
        case 31:
          swift_beginAccess();
          uint64_t v11 = v8;
          sub_2614D4E68();
          goto LABEL_17;
        case 2:
        case 7:
        case 36:
        case 44:
        case 45:
        case 46:
        case 47:
        case 48:
        case 53:
          swift_beginAccess();
          uint64_t v11 = v8;
          sub_2614D4E78();
          goto LABEL_17;
        case 3:
          swift_beginAccess();
          sub_2613CC5E8();
          uint64_t v11 = v8;
          sub_2614D4E28();
          goto LABEL_17;
        case 4:
        case 6:
        case 12:
        case 13:
        case 14:
        case 16:
        case 17:
        case 18:
        case 20:
        case 40:
        case 41:
        case 42:
        case 43:
          swift_beginAccess();
          uint64_t v11 = v8;
          sub_2614D4E58();
          goto LABEL_17;
        case 10:
        case 15:
        case 51:
          swift_beginAccess();
          uint64_t v11 = v8;
          sub_2614D4E48();
          goto LABEL_17;
        case 11:
        case 52:
          swift_beginAccess();
          uint64_t v11 = v8;
          sub_2614D4E88();
          goto LABEL_17;
        case 19:
        case 21:
        case 22:
        case 23:
        case 24:
        case 25:
        case 26:
        case 32:
        case 33:
        case 34:
        case 35:
        case 49:
        case 50:
          swift_beginAccess();
          uint64_t v11 = v8;
          sub_2614D4E18();
LABEL_17:
          uint64_t v8 = v11;
          swift_endAccess();
          break;
        default:
          if ((unint64_t)(v10 - 200) <= 0x1FFFFF37)
          {
            sub_2613C489C(&qword_26A9148F0, (void (*)(uint64_t))type metadata accessor for Sentencepiece_TrainerSpec);
            sub_2614D4E08();
          }
          break;
      }
      uint64_t v10 = sub_2614D4DF8();
    }
  }
  return swift_release();
}

uint64_t sub_2613BBA70()
{
  uint64_t v2 = *(void *)(v0 + *(int *)(type metadata accessor for Sentencepiece_TrainerSpec(0) + 24));
  swift_retain();
  swift_beginAccess();
  if (*(void *)(*(void *)(v2 + 16) + 16))
  {
    swift_bridgeObjectRetain();
    sub_2614D4F58();
    if (v1)
    {
      swift_bridgeObjectRelease();
      return swift_release();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(void *)(v2 + 48))
  {
    swift_bridgeObjectRetain();
    sub_2614D4F68();
    swift_bridgeObjectRelease();
  }
  if (v1) {
    return swift_release();
  }
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 56) != 4)
  {
    sub_2613CC5E8();
    sub_2614D4F18();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v2 + 64) & 1) == 0) {
    sub_2614D4F48();
  }
  swift_beginAccess();
  if (*(void *)(*(void *)(v2 + 72) + 16))
  {
    swift_bridgeObjectRetain();
    sub_2614D4F58();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v2 + 84) & 1) == 0) {
    sub_2614D4F48();
  }
  swift_beginAccess();
  if (*(void *)(v2 + 32))
  {
    swift_bridgeObjectRetain();
    sub_2614D4F68();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v2 + 112) & 1) == 0) {
    sub_2614D4F38();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v2 + 128) & 1) == 0) {
    sub_2614D4F78();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v2 + 136) & 1) == 0) {
    sub_2614D4F48();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v2 + 144) & 1) == 0) {
    sub_2614D4F48();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v2 + 152) & 1) == 0) {
    sub_2614D4F48();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v2 + 160) & 1) == 0) {
    sub_2614D4F38();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v2 + 176) & 1) == 0) {
    sub_2614D4F48();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v2 + 184) & 1) == 0) {
    sub_2614D4F48();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v2 + 168) & 1) == 0) {
    sub_2614D4F48();
  }
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 129) != 2) {
    sub_2614D4F08();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v2 + 192) & 1) == 0) {
    sub_2614D4F48();
  }
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 193) != 2) {
    sub_2614D4F08();
  }
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 195) != 2) {
    sub_2614D4F08();
  }
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 194) != 2) {
    sub_2614D4F08();
  }
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 196) != 2) {
    sub_2614D4F08();
  }
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 198) != 2) {
    sub_2614D4F08();
  }
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 197) != 2) {
    sub_2614D4F08();
  }
  swift_beginAccess();
  if (*(void *)(*(void *)(v2 + 216) + 16))
  {
    swift_bridgeObjectRetain();
    sub_2614D4F58();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(void *)(*(void *)(v2 + 224) + 16))
  {
    swift_bridgeObjectRetain();
    sub_2614D4F58();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 249) != 2) {
    sub_2614D4F08();
  }
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 250) != 2) {
    sub_2614D4F08();
  }
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 251) != 2) {
    sub_2614D4F08();
  }
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 248) != 2) {
    sub_2614D4F08();
  }
  swift_beginAccess();
  if (*(void *)(v2 + 240))
  {
    swift_bridgeObjectRetain();
    sub_2614D4F68();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v2 + 256) & 1) == 0) {
    sub_2614D4F48();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v2 + 264) & 1) == 0) {
    sub_2614D4F48();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v2 + 272) & 1) == 0) {
    sub_2614D4F48();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v2 + 280) & 1) == 0) {
    sub_2614D4F48();
  }
  swift_beginAccess();
  if (*(void *)(v2 + 360))
  {
    swift_bridgeObjectRetain();
    sub_2614D4F68();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(void *)(v2 + 296))
  {
    swift_bridgeObjectRetain();
    sub_2614D4F68();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(void *)(v2 + 312))
  {
    swift_bridgeObjectRetain();
    sub_2614D4F68();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(void *)(v2 + 328))
  {
    swift_bridgeObjectRetain();
    sub_2614D4F68();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(void *)(v2 + 344))
  {
    swift_bridgeObjectRetain();
    sub_2614D4F68();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 368) != 2) {
    sub_2614D4F08();
  }
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 85) != 2) {
    sub_2614D4F08();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v2 + 92) & 1) == 0) {
    sub_2614D4F38();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v2 + 104) & 1) == 0) {
    sub_2614D4F78();
  }
  swift_beginAccess();
  if (*(void *)(v2 + 208))
  {
    swift_bridgeObjectRetain();
    sub_2614D4F68();
    swift_bridgeObjectRelease();
  }
  sub_2614D4EF8();
  swift_release();
  return sub_2614D4D48();
}

uint64_t sub_2613BC7AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2614D4D58();
  sub_2614D4DA8();
  uint64_t v4 = *(int *)(a1 + 24);
  if (qword_26A916018 != -1) {
    swift_once();
  }
  *(void *)(a2 + v4) = qword_26A916020;
  return swift_retain();
}

unint64_t sub_2613BC830()
{
  return 0xD000000000000019;
}

uint64_t (*sub_2613BC854())()
{
  return nullsub_1;
}

uint64_t sub_2613BC874()
{
  return sub_2613BB378();
}

uint64_t sub_2613BC88C()
{
  return sub_2613BBA70();
}

uint64_t sub_2613BC8A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2613C489C(&qword_26A9149E8, (void (*)(uint64_t))type metadata accessor for Sentencepiece_TrainerSpec);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2613BC928@<X0>(uint64_t a1@<X8>)
{
  return sub_2613C0A4C(&qword_26A916010, (uint64_t)qword_26A920068, a1);
}

uint64_t sub_2613BC94C(uint64_t a1)
{
  uint64_t v2 = sub_2613C489C(&qword_26A9148F0, (void (*)(uint64_t))type metadata accessor for Sentencepiece_TrainerSpec);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2613BC9BC()
{
  sub_2613C489C(&qword_26A9148F0, (void (*)(uint64_t))type metadata accessor for Sentencepiece_TrainerSpec);
  return sub_2614D4EE8();
}

uint64_t sub_2613BCA40()
{
  uint64_t v0 = sub_2614D4FC8();
  sub_2613CC63C(v0, qword_26A920080);
  sub_2613C2624(v0, (uint64_t)qword_26A920080);
  sub_2613C23AC(&qword_26A914A00);
  uint64_t v1 = (int *)(sub_2613C23AC(&qword_26A914A08) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2614D81C0;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "UNIGRAM";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_2614D4FA8();
  unint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "BPE";
  *(void *)(v10 + 8) = 3;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  v12 = (char *)v11 + v1[14];
  void *v11 = 3;
  *(void *)v12 = "WORD";
  *((void *)v12 + 1) = 4;
  v12[16] = 2;
  v9();
  v13 = (void *)(v5 + 3 * v2);
  v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)v14 = "CHAR";
  *((void *)v14 + 1) = 4;
  v14[16] = 2;
  v9();
  return sub_2614D4FB8();
}

uint64_t sub_2613BCC78@<X0>(uint64_t a1@<X8>)
{
  return sub_2613C0A4C(&qword_26A916028, (uint64_t)qword_26A920080, a1);
}

uint64_t sub_2613BCC9C()
{
  uint64_t v0 = sub_2614D4FC8();
  sub_2613CC63C(v0, qword_26A920098);
  sub_2613C2624(v0, (uint64_t)qword_26A920098);
  sub_2613C23AC(&qword_26A914A00);
  uint64_t v1 = (int *)(sub_2613C23AC(&qword_26A914A08) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2614D81D0;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "name";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_2614D4FA8();
  unint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "precompiled_charsmap";
  *(void *)(v10 + 8) = 20;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  v12 = (char *)v11 + v1[14];
  void *v11 = 3;
  *(void *)v12 = "add_dummy_prefix";
  *((void *)v12 + 1) = 16;
  v12[16] = 2;
  v9();
  v13 = (void *)(v5 + 3 * v2);
  v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)v14 = "remove_extra_whitespaces";
  *((void *)v14 + 1) = 24;
  v14[16] = 2;
  v9();
  v15 = (void *)(v5 + 4 * v2);
  v16 = (char *)v15 + v1[14];
  void *v15 = 5;
  *(void *)v16 = "escape_whitespaces";
  *((void *)v16 + 1) = 18;
  v16[16] = 2;
  v9();
  v17 = (void *)(v5 + 5 * v2);
  v18 = (char *)v17 + v1[14];
  void *v17 = 6;
  *(void *)v18 = "normalization_rule_tsv";
  *((void *)v18 + 1) = 22;
  v18[16] = 2;
  v9();
  return sub_2614D4FB8();
}

uint64_t sub_2613BCF64()
{
  uint64_t result = sub_2614D4DF8();
  if (!v0)
  {
    uint64_t v3 = result;
    while ((v2 & 1) == 0)
    {
      switch(v3)
      {
        case 1:
        case 6:
          type metadata accessor for Sentencepiece_NormalizerSpec(0);
          sub_2614D4E78();
          break;
        case 2:
          type metadata accessor for Sentencepiece_NormalizerSpec(0);
          sub_2614D4E38();
          break;
        case 3:
        case 4:
        case 5:
          type metadata accessor for Sentencepiece_NormalizerSpec(0);
          sub_2614D4E18();
          break;
        default:
          if ((unint64_t)(v3 - 200) <= 0x1FFFFF37)
          {
            type metadata accessor for Sentencepiece_NormalizerSpec(0);
            sub_2613C489C(&qword_26A914908, (void (*)(uint64_t))type metadata accessor for Sentencepiece_NormalizerSpec);
            sub_2614D4E08();
          }
          break;
      }
      uint64_t result = sub_2614D4DF8();
      uint64_t v3 = result;
    }
  }
  return result;
}

uint64_t sub_2613BD16C()
{
  uint64_t result = type metadata accessor for Sentencepiece_NormalizerSpec(0);
  uint64_t v3 = (int *)result;
  if (*(void *)(v0 + *(int *)(result + 24) + 8)) {
    uint64_t result = sub_2614D4F68();
  }
  if (!v1)
  {
    uint64_t v4 = v0 + v3[7];
    unint64_t v5 = *(void *)(v4 + 8);
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = *(void *)v4;
      sub_2613C22A8(*(void *)v4, *(void *)(v4 + 8));
      sub_2614D4F28();
      sub_2613C2300(v6, v5);
    }
    if (*(unsigned char *)(v0 + v3[8]) != 2) {
      sub_2614D4F08();
    }
    if (*(unsigned char *)(v0 + v3[9]) != 2) {
      sub_2614D4F08();
    }
    sub_2613BD334(v0);
    sub_2613BD3AC(v0);
    sub_2614D4EF8();
    return sub_2614D4D48();
  }
  return result;
}

uint64_t sub_2613BD334(uint64_t a1)
{
  uint64_t result = type metadata accessor for Sentencepiece_NormalizerSpec(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 40)) != 2) {
    return sub_2614D4F08();
  }
  return result;
}

uint64_t sub_2613BD3AC(uint64_t a1)
{
  uint64_t result = type metadata accessor for Sentencepiece_NormalizerSpec(0);
  if (*(void *)(a1 + *(int *)(result + 44) + 8)) {
    return sub_2614D4F68();
  }
  return result;
}

double sub_2613BD424@<D0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2614D4D58();
  sub_2614D4DA8();
  uint64_t v4 = a1[7];
  unint64_t v5 = (void *)(a2 + a1[6]);
  void *v5 = 0;
  v5[1] = 0;
  double result = 0.0;
  *(_OWORD *)(a2 + v4) = xmmword_2614D81A0;
  uint64_t v7 = a1[9];
  *(unsigned char *)(a2 + a1[8]) = 2;
  *(unsigned char *)(a2 + v7) = 2;
  uint64_t v8 = a1[11];
  *(unsigned char *)(a2 + a1[10]) = 2;
  unint64_t v9 = (void *)(a2 + v8);
  *unint64_t v9 = 0;
  v9[1] = 0;
  return result;
}

unint64_t sub_2613BD490()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_2613BD4AC()
{
  return sub_2613BCF64();
}

uint64_t sub_2613BD4C4()
{
  return sub_2613BD16C();
}

uint64_t sub_2613BD4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2613C489C(&qword_26A9149E0, (void (*)(uint64_t))type metadata accessor for Sentencepiece_NormalizerSpec);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2613BD558@<X0>(uint64_t a1@<X8>)
{
  return sub_2613C0A4C(&qword_26A916030, (uint64_t)qword_26A920098, a1);
}

uint64_t sub_2613BD57C(uint64_t a1)
{
  uint64_t v2 = sub_2613C489C(&qword_26A914908, (void (*)(uint64_t))type metadata accessor for Sentencepiece_NormalizerSpec);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2613BD5E8()
{
  sub_2613C489C(&qword_26A914908, (void (*)(uint64_t))type metadata accessor for Sentencepiece_NormalizerSpec);
  return sub_2614D4EE8();
}

uint64_t sub_2613BD668()
{
  uint64_t v0 = sub_2614D4FC8();
  sub_2613CC63C(v0, qword_26A9200B0);
  sub_2613C2624(v0, (uint64_t)qword_26A9200B0);
  sub_2613C23AC(&qword_26A914A00);
  uint64_t v1 = (int *)(sub_2613C23AC(&qword_26A914A08) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2614D81E0;
  unint64_t v4 = v3 + v2 + v1[14];
  *(void *)(v3 + v2) = 1;
  *(void *)unint64_t v4 = "samples";
  *(void *)(v4 + 8) = 7;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = *MEMORY[0x263F50718];
  uint64_t v6 = sub_2614D4FA8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v4, v5, v6);
  return sub_2614D4FB8();
}

uint64_t sub_2613BD7C4()
{
  uint64_t result = sub_2614D4DF8();
  uint64_t v3 = v0;
  if (!v0)
  {
    for (uint64_t i = result; ; uint64_t i = result)
    {
      if (v2) {
        return result;
      }
      if (i == 1) {
        break;
      }
      if ((unint64_t)(i - 200) < 0x1FFFFF38)
      {
        type metadata accessor for Sentencepiece_SelfTestData(0);
        sub_2613C489C(&qword_26A914910, (void (*)(uint64_t))type metadata accessor for Sentencepiece_SelfTestData);
        uint64_t v5 = v3;
        sub_2614D4E08();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_2614D4DF8();
    }
    type metadata accessor for Sentencepiece_SelfTestData.Sample(0);
    sub_2613C489C(&qword_26A9148A8, (void (*)(uint64_t))type metadata accessor for Sentencepiece_SelfTestData.Sample);
    uint64_t v5 = v3;
    sub_2614D4E98();
LABEL_5:
    uint64_t v3 = v5;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_2613BD93C()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for Sentencepiece_SelfTestData.Sample(0),
        sub_2613C489C(&qword_26A9148A8, (void (*)(uint64_t))type metadata accessor for Sentencepiece_SelfTestData.Sample), uint64_t result = sub_2614D4F88(), !v1))
  {
    type metadata accessor for Sentencepiece_SelfTestData(0);
    uint64_t result = sub_2614D4EF8();
    if (!v1) {
      return sub_2614D4D48();
    }
  }
  return result;
}

uint64_t sub_2613BDA58@<X0>(void *a1@<X8>)
{
  *a1 = MEMORY[0x263F8EE78];
  sub_2614D4D58();
  return sub_2614D4DA8();
}

unint64_t sub_2613BDAA0()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_2613BDABC()
{
  return sub_2614D4D98() & 1;
}

uint64_t sub_2613BDAE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2613BFB2C(a1, MEMORY[0x263F50560], a2);
}

uint64_t sub_2613BDB00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2613BFBA0(a1, a2, a3, MEMORY[0x263F50560]);
}

uint64_t sub_2613BDB18()
{
  return sub_2613BD7C4();
}

uint64_t sub_2613BDB30()
{
  return sub_2613BD93C();
}

uint64_t sub_2613BDB48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2613C489C(&qword_26A9149D8, (void (*)(uint64_t))type metadata accessor for Sentencepiece_SelfTestData);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2613BDBC4@<X0>(uint64_t a1@<X8>)
{
  return sub_2613C0A4C(&qword_26A916038, (uint64_t)qword_26A9200B0, a1);
}

uint64_t sub_2613BDBE8(uint64_t a1)
{
  uint64_t v2 = sub_2613C489C(&qword_26A914910, (void (*)(uint64_t))type metadata accessor for Sentencepiece_SelfTestData);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2613BDC54()
{
  sub_2613C489C(&qword_26A914910, (void (*)(uint64_t))type metadata accessor for Sentencepiece_SelfTestData);
  return sub_2614D4EE8();
}

uint64_t sub_2613BDCD4()
{
  uint64_t result = sub_2614D54D8();
  qword_26A9200C8 = 0xD00000000000001ALL;
  unk_26A9200D0 = 0x80000002614DF9C0;
  return result;
}

uint64_t sub_2613BDD40()
{
  uint64_t v0 = sub_2614D4FC8();
  sub_2613CC63C(v0, qword_26A9200D8);
  sub_2613C2624(v0, (uint64_t)qword_26A9200D8);
  sub_2613C23AC(&qword_26A914A00);
  uint64_t v1 = (int *)(sub_2613C23AC(&qword_26A914A08) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2614D81F0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  void *v5 = 1;
  *(void *)unint64_t v6 = "input";
  *(void *)(v6 + 8) = 5;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_2614D4FA8();
  unint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "expected";
  *((void *)v10 + 1) = 8;
  v10[16] = 2;
  v9();
  return sub_2614D4FB8();
}

uint64_t sub_2613BDEF8()
{
  while (1)
  {
    uint64_t result = sub_2614D4DF8();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 2 || result == 1)
    {
      type metadata accessor for Sentencepiece_SelfTestData.Sample(0);
      sub_2614D4E78();
    }
    uint64_t v0 = 0;
  }
  return result;
}

uint64_t sub_2613BDFA8()
{
  uint64_t result = type metadata accessor for Sentencepiece_SelfTestData.Sample(0);
  uint64_t v3 = result;
  if (*(void *)(v0 + *(int *)(result + 20) + 8)) {
    uint64_t result = sub_2614D4F68();
  }
  if (!v1)
  {
    if (*(void *)(v0 + *(int *)(v3 + 24) + 8)) {
      sub_2614D4F68();
    }
    return sub_2614D4D48();
  }
  return result;
}

uint64_t sub_2613BE074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_2614D4D58();
  uint64_t v5 = *(int *)(a1 + 24);
  unint64_t v6 = (void *)(a2 + *(int *)(a1 + 20));
  *unint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = (void *)(a2 + v5);
  *uint64_t v7 = 0;
  v7[1] = 0;
  return result;
}

uint64_t sub_2613BE0B0(uint64_t a1, uint64_t a2)
{
  return sub_2613C03BC(a1, a2, &qword_26A916040, &qword_26A9200C8);
}

uint64_t sub_2613BE0DC()
{
  return sub_2613BDEF8();
}

uint64_t sub_2613BE0F4()
{
  return sub_2613BDFA8();
}

uint64_t sub_2613BE10C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2613C489C(&qword_26A9149D0, (void (*)(uint64_t))type metadata accessor for Sentencepiece_SelfTestData.Sample);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2613BE188@<X0>(uint64_t a1@<X8>)
{
  return sub_2613C0A4C(&qword_26A916048, (uint64_t)qword_26A9200D8, a1);
}

uint64_t sub_2613BE1AC(uint64_t a1)
{
  uint64_t v2 = sub_2613C489C(&qword_26A9148A8, (void (*)(uint64_t))type metadata accessor for Sentencepiece_SelfTestData.Sample);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2613BE218()
{
  sub_2613C489C(&qword_26A9148A8, (void (*)(uint64_t))type metadata accessor for Sentencepiece_SelfTestData.Sample);
  return sub_2614D4EE8();
}

uint64_t sub_2613BE298()
{
  uint64_t v0 = sub_2614D4FC8();
  sub_2613CC63C(v0, qword_26A9200F0);
  sub_2613C2624(v0, (uint64_t)qword_26A9200F0);
  sub_2613C23AC(&qword_26A914A00);
  uint64_t v1 = (int *)(sub_2613C23AC(&qword_26A914A08) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2614D8200;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "pieces";
  *(void *)(v6 + 8) = 6;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_2614D4FA8();
  unint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "trainer_spec";
  *(void *)(v10 + 8) = 12;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  v12 = (char *)v11 + v1[14];
  void *v11 = 3;
  *(void *)v12 = "normalizer_spec";
  *((void *)v12 + 1) = 15;
  v12[16] = 2;
  v9();
  v13 = (void *)(v5 + 3 * v2);
  v14 = (char *)v13 + v1[14];
  void *v13 = 4;
  *(void *)v14 = "self_test_data";
  *((void *)v14 + 1) = 14;
  v14[16] = 2;
  v9();
  uint64_t v15 = v5 + 4 * v2 + v1[14];
  *(void *)(v5 + 4 * v2) = 5;
  *(void *)uint64_t v15 = "denormalizer_spec";
  *(void *)(v15 + 8) = 17;
  *(unsigned char *)(v15 + 16) = 2;
  v9();
  return sub_2614D4FB8();
}

uint64_t sub_2613BE528()
{
  sub_2613C23AC(&qword_26A914890);
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v45 = (uint64_t)&v39 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for Sentencepiece_SelfTestData(0);
  uint64_t v47 = *(void *)(v44 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  v50 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2613C23AC(&qword_26A914888);
  uint64_t v3 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  v49 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v46 = (uint64_t)&v39 - v5;
  uint64_t v6 = type metadata accessor for Sentencepiece_NormalizerSpec(0);
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v39 - v10;
  uint64_t v12 = sub_2613C23AC(&qword_26A914880);
  MEMORY[0x270FA5388](v12 - 8);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Sentencepiece_TrainerSpec(0);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (int *)type metadata accessor for Sentencepiece_ModelProto(0);
  if ((sub_2614D4D98() & 1) == 0) {
    goto LABEL_14;
  }
  v41 = v18;
  uint64_t v42 = v16;
  v43 = v11;
  v20 = v50;
  v40 = v9;
  sub_2613BEB1C(*v0);
  char v21 = sub_2614D4D38();
  swift_bridgeObjectRelease();
  if ((v21 & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v22 = v0;
  sub_2613C2540((uint64_t)v0 + v19[7], (uint64_t)v14, &qword_26A914880);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v14, 1, v15) == 1)
  {
    sub_2613CC6A0((uint64_t)v14, &qword_26A914880);
    uint64_t v23 = (uint64_t)v49;
    uint64_t v24 = (uint64_t)v20;
    uint64_t v25 = (uint64_t)v43;
  }
  else
  {
    uint64_t v26 = (uint64_t)v14;
    uint64_t v27 = (uint64_t)v41;
    sub_2613C2410(v26, (uint64_t)v41, type metadata accessor for Sentencepiece_TrainerSpec);
    char v28 = sub_2614D4D98();
    sub_2613C24E0(v27, type metadata accessor for Sentencepiece_TrainerSpec);
    uint64_t v23 = (uint64_t)v49;
    uint64_t v24 = (uint64_t)v20;
    uint64_t v25 = (uint64_t)v43;
    if ((v28 & 1) == 0) {
      goto LABEL_14;
    }
  }
  uint64_t v29 = v46;
  sub_2613C2540((uint64_t)v22 + v19[8], v46, &qword_26A914888);
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
  uint64_t v31 = v6;
  if (v30(v29, 1, v6) == 1)
  {
    sub_2613CC6A0(v29, &qword_26A914888);
    uint64_t v32 = v47;
  }
  else
  {
    sub_2613C2410(v29, v25, type metadata accessor for Sentencepiece_NormalizerSpec);
    char v33 = sub_2614D4D98();
    sub_2613C24E0(v25, type metadata accessor for Sentencepiece_NormalizerSpec);
    uint64_t v32 = v47;
    if ((v33 & 1) == 0) {
      goto LABEL_14;
    }
  }
  uint64_t v34 = v45;
  sub_2613C2540((uint64_t)v22 + v19[9], v45, &qword_26A914890);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v34, 1, v44) == 1)
  {
    sub_2613CC6A0(v34, &qword_26A914890);
    goto LABEL_12;
  }
  sub_2613C2410(v34, v24, type metadata accessor for Sentencepiece_SelfTestData);
  char v35 = sub_2614D4D98();
  sub_2613C24E0(v24, type metadata accessor for Sentencepiece_SelfTestData);
  if ((v35 & 1) == 0)
  {
LABEL_14:
    char v36 = 0;
    return v36 & 1;
  }
LABEL_12:
  sub_2613C2540((uint64_t)v22 + v19[10], v23, &qword_26A914888);
  if (v30(v23, 1, v31) == 1)
  {
    sub_2613CC6A0(v23, &qword_26A914888);
    char v36 = 1;
  }
  else
  {
    uint64_t v38 = (uint64_t)v40;
    sub_2613C2410(v23, (uint64_t)v40, type metadata accessor for Sentencepiece_NormalizerSpec);
    char v36 = sub_2614D4D98();
    sub_2613C24E0(v38, type metadata accessor for Sentencepiece_NormalizerSpec);
  }
  return v36 & 1;
}

uint64_t sub_2613BEB1C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Sentencepiece_ModelProto.SentencePiece(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_2613C1410(0, v6, 0);
    uint64_t v7 = v17;
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_2613C2478(v8, (uint64_t)v5, type metadata accessor for Sentencepiece_ModelProto.SentencePiece);
      uint64_t v17 = v7;
      unint64_t v11 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_2613C1410((void *)(v10 > 1), v11 + 1, 1);
        uint64_t v7 = v17;
      }
      uint64_t v15 = v2;
      uint64_t v16 = sub_2613C489C(&qword_26A9148C0, (void (*)(uint64_t))type metadata accessor for Sentencepiece_ModelProto.SentencePiece);
      uint64_t v12 = sub_2613CC6FC((uint64_t *)&v14);
      sub_2613C2478((uint64_t)v5, (uint64_t)v12, type metadata accessor for Sentencepiece_ModelProto.SentencePiece);
      *(void *)(v7 + 16) = v11 + 1;
      sub_2613CC760(&v14, v7 + 40 * v11 + 32);
      sub_2613C24E0((uint64_t)v5, type metadata accessor for Sentencepiece_ModelProto.SentencePiece);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_2613BED10()
{
  uint64_t result = sub_2614D4DF8();
  if (!v0)
  {
    uint64_t v3 = result;
    while ((v2 & 1) == 0)
    {
      switch(v3)
      {
        case 1:
          type metadata accessor for Sentencepiece_ModelProto.SentencePiece(0);
          sub_2613C489C(&qword_26A9148C0, (void (*)(uint64_t))type metadata accessor for Sentencepiece_ModelProto.SentencePiece);
          sub_2614D4E98();
          break;
        case 2:
          type metadata accessor for Sentencepiece_ModelProto(0);
          type metadata accessor for Sentencepiece_TrainerSpec(0);
          uint64_t v4 = (void (*)(uint64_t))type metadata accessor for Sentencepiece_TrainerSpec;
          uint64_t v5 = &qword_26A9148F0;
          goto LABEL_10;
        case 3:
        case 5:
          type metadata accessor for Sentencepiece_ModelProto(0);
          type metadata accessor for Sentencepiece_NormalizerSpec(0);
          uint64_t v4 = (void (*)(uint64_t))type metadata accessor for Sentencepiece_NormalizerSpec;
          uint64_t v5 = &qword_26A914908;
          goto LABEL_10;
        case 4:
          type metadata accessor for Sentencepiece_ModelProto(0);
          type metadata accessor for Sentencepiece_SelfTestData(0);
          uint64_t v4 = (void (*)(uint64_t))type metadata accessor for Sentencepiece_SelfTestData;
          uint64_t v5 = &qword_26A914910;
LABEL_10:
          sub_2613C489C(v5, v4);
          sub_2614D4EA8();
          break;
        default:
          if ((unint64_t)(v3 - 200) <= 0x1FFFFF37)
          {
            type metadata accessor for Sentencepiece_ModelProto(0);
            sub_2613C489C((unint64_t *)&qword_26A914930, (void (*)(uint64_t))type metadata accessor for Sentencepiece_ModelProto);
            sub_2614D4E08();
          }
          break;
      }
      uint64_t result = sub_2614D4DF8();
      uint64_t v3 = result;
    }
  }
  return result;
}

uint64_t sub_2613BEFF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(*(void *)v3 + 16)
    || (type metadata accessor for Sentencepiece_ModelProto.SentencePiece(0),
        sub_2613C489C(&qword_26A9148C0, (void (*)(uint64_t))type metadata accessor for Sentencepiece_ModelProto.SentencePiece), uint64_t result = sub_2614D4F88(), !v4))
  {
    uint64_t result = sub_2613BF190(v3, a1, a2, a3);
    if (!v4)
    {
      sub_2613BF394(v3, a1, a2, a3);
      sub_2613BF598(v3, a1, a2, a3);
      sub_2613BF79C(v3, a1, a2, a3);
      type metadata accessor for Sentencepiece_ModelProto(0);
      sub_2614D4EF8();
      return sub_2614D4D48();
    }
  }
  return result;
}

uint64_t sub_2613BF190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = sub_2613C23AC(&qword_26A914880);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Sentencepiece_TrainerSpec(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Sentencepiece_ModelProto(0);
  sub_2613C2540(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_26A914880);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_2613CC6A0((uint64_t)v7, &qword_26A914880);
  }
  sub_2613C2410((uint64_t)v7, (uint64_t)v11, type metadata accessor for Sentencepiece_TrainerSpec);
  sub_2613C489C(&qword_26A9148F0, (void (*)(uint64_t))type metadata accessor for Sentencepiece_TrainerSpec);
  sub_2614D4F98();
  return sub_2613C24E0((uint64_t)v11, type metadata accessor for Sentencepiece_TrainerSpec);
}

uint64_t sub_2613BF394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = sub_2613C23AC(&qword_26A914888);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Sentencepiece_NormalizerSpec(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Sentencepiece_ModelProto(0);
  sub_2613C2540(a1 + *(int *)(v12 + 32), (uint64_t)v7, &qword_26A914888);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_2613CC6A0((uint64_t)v7, &qword_26A914888);
  }
  sub_2613C2410((uint64_t)v7, (uint64_t)v11, type metadata accessor for Sentencepiece_NormalizerSpec);
  sub_2613C489C(&qword_26A914908, (void (*)(uint64_t))type metadata accessor for Sentencepiece_NormalizerSpec);
  sub_2614D4F98();
  return sub_2613C24E0((uint64_t)v11, type metadata accessor for Sentencepiece_NormalizerSpec);
}

uint64_t sub_2613BF598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = sub_2613C23AC(&qword_26A914890);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Sentencepiece_SelfTestData(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Sentencepiece_ModelProto(0);
  sub_2613C2540(a1 + *(int *)(v12 + 36), (uint64_t)v7, &qword_26A914890);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_2613CC6A0((uint64_t)v7, &qword_26A914890);
  }
  sub_2613C2410((uint64_t)v7, (uint64_t)v11, type metadata accessor for Sentencepiece_SelfTestData);
  sub_2613C489C(&qword_26A914910, (void (*)(uint64_t))type metadata accessor for Sentencepiece_SelfTestData);
  sub_2614D4F98();
  return sub_2613C24E0((uint64_t)v11, type metadata accessor for Sentencepiece_SelfTestData);
}

uint64_t sub_2613BF79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = sub_2613C23AC(&qword_26A914888);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Sentencepiece_NormalizerSpec(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Sentencepiece_ModelProto(0);
  sub_2613C2540(a1 + *(int *)(v12 + 40), (uint64_t)v7, &qword_26A914888);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_2613CC6A0((uint64_t)v7, &qword_26A914888);
  }
  sub_2613C2410((uint64_t)v7, (uint64_t)v11, type metadata accessor for Sentencepiece_NormalizerSpec);
  sub_2613C489C(&qword_26A914908, (void (*)(uint64_t))type metadata accessor for Sentencepiece_NormalizerSpec);
  sub_2614D4F98();
  return sub_2613C24E0((uint64_t)v11, type metadata accessor for Sentencepiece_NormalizerSpec);
}

uint64_t sub_2613BF9A0@<X0>(int *a1@<X0>, void *a2@<X8>)
{
  *a2 = MEMORY[0x263F8EE78];
  sub_2614D4D58();
  sub_2614D4DA8();
  uint64_t v4 = (char *)a2 + a1[7];
  uint64_t v5 = type metadata accessor for Sentencepiece_TrainerSpec(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = (char *)a2 + a1[8];
  uint64_t v7 = type metadata accessor for Sentencepiece_NormalizerSpec(0);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  ((void (*)(void *__return_ptr, char *, uint64_t, uint64_t, uint64_t))v12)((void *)(v7 - 8), v6, 1, 1, v7);
  uint64_t v8 = (char *)a2 + a1[9];
  uint64_t v9 = type metadata accessor for Sentencepiece_SelfTestData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = (char *)a2 + a1[10];
  return v12(v10, 1, 1, v7);
}

unint64_t sub_2613BFB0C()
{
  return 0xD000000000000018;
}

uint64_t sub_2613BFB2C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3 + *(int *)(a1 + 20);
  uint64_t v6 = a2(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  return v7(a3, v5, v6);
}

uint64_t sub_2613BFBA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = v4 + *(int *)(a2 + 20);
  uint64_t v7 = a4(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40);
  return v8(v6, a1, v7);
}

uint64_t sub_2613BFC14()
{
  return sub_2613BED10();
}

uint64_t sub_2613BFC2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2613BEFF4(a1, a2, a3);
}

uint64_t sub_2613BFC44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2613C489C(&qword_26A9149C8, (void (*)(uint64_t))type metadata accessor for Sentencepiece_ModelProto);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2613BFCC0@<X0>(uint64_t a1@<X8>)
{
  return sub_2613C0A4C(&qword_26A916050, (uint64_t)qword_26A9200F0, a1);
}

uint64_t sub_2613BFCE4(uint64_t a1)
{
  uint64_t v2 = sub_2613C489C((unint64_t *)&qword_26A914930, (void (*)(uint64_t))type metadata accessor for Sentencepiece_ModelProto);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2613BFD50()
{
  sub_2613C489C((unint64_t *)&qword_26A914930, (void (*)(uint64_t))type metadata accessor for Sentencepiece_ModelProto);
  return sub_2614D4EE8();
}

uint64_t sub_2613BFDD0()
{
  uint64_t result = sub_2614D54D8();
  qword_26A920108 = 0xD000000000000018;
  unk_26A920110 = 0x80000002614DF9E0;
  return result;
}

uint64_t sub_2613BFE48()
{
  uint64_t v0 = sub_2614D4FC8();
  sub_2613CC63C(v0, qword_26A920118);
  sub_2613C2624(v0, (uint64_t)qword_26A920118);
  sub_2613C23AC(&qword_26A914A00);
  uint64_t v1 = (int *)(sub_2613C23AC(&qword_26A914A08) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2614D8210;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  void *v5 = 1;
  *(void *)unint64_t v6 = "piece";
  *(void *)(v6 + 8) = 5;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_2614D4FA8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "score";
  *((void *)v10 + 1) = 5;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "type";
  *(void *)(v11 + 8) = 4;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_2614D4FB8();
}

uint64_t sub_2613C004C()
{
  uint64_t result = sub_2614D4DF8();
  uint64_t v3 = v0;
  if (!v0)
  {
    for (uint64_t i = result; ; uint64_t i = result)
    {
      if (v2) {
        return result;
      }
      switch(i)
      {
        case 3:
          type metadata accessor for Sentencepiece_ModelProto.SentencePiece(0);
          sub_2613CC594();
          uint64_t v5 = v3;
          sub_2614D4E28();
          break;
        case 2:
          type metadata accessor for Sentencepiece_ModelProto.SentencePiece(0);
          uint64_t v5 = v3;
          sub_2614D4E48();
          break;
        case 1:
          type metadata accessor for Sentencepiece_ModelProto.SentencePiece(0);
          uint64_t v5 = v3;
          sub_2614D4E78();
          break;
        default:
          if ((unint64_t)(i - 200) >= 0x1FFFFF38) {
            goto LABEL_14;
          }
          type metadata accessor for Sentencepiece_ModelProto.SentencePiece(0);
          sub_2613C489C(&qword_26A9148C0, (void (*)(uint64_t))type metadata accessor for Sentencepiece_ModelProto.SentencePiece);
          uint64_t v5 = v3;
          sub_2614D4E08();
          break;
      }
      uint64_t v3 = v5;
LABEL_14:
      uint64_t result = sub_2614D4DF8();
    }
  }
  return result;
}

uint64_t sub_2613C01F4()
{
  uint64_t result = type metadata accessor for Sentencepiece_ModelProto.SentencePiece(0);
  uint64_t v3 = result;
  if (*(void *)(v0 + *(int *)(result + 24) + 8)) {
    uint64_t result = sub_2614D4F68();
  }
  if (!v1)
  {
    if ((*(unsigned char *)(v0 + *(int *)(v3 + 28) + 4) & 1) == 0) {
      sub_2614D4F38();
    }
    if (*(unsigned char *)(v0 + *(int *)(v3 + 32)) != 6)
    {
      sub_2613CC594();
      sub_2614D4F18();
    }
    sub_2614D4EF8();
    return sub_2614D4D48();
  }
  return result;
}

uint64_t sub_2613C0338@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2614D4D58();
  uint64_t result = sub_2614D4DA8();
  uint64_t v5 = a1[7];
  unint64_t v6 = (void *)(a2 + a1[6]);
  *unint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = a2 + v5;
  *(_DWORD *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 4) = 1;
  *(unsigned char *)(a2 + a1[8]) = 6;
  return result;
}

uint64_t sub_2613C0394(uint64_t a1, uint64_t a2)
{
  return sub_2613C03BC(a1, a2, &qword_26A916058, &qword_26A920108);
}

uint64_t sub_2613C03BC(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4)
{
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v5 = *a4;
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_2613C0414()
{
  return sub_2614D4D98() & 1;
}

uint64_t sub_2613C0440@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2614D4D68();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t sub_2613C04A8(uint64_t a1)
{
  uint64_t v3 = sub_2614D4D68();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t sub_2613C0510()
{
  return sub_2613C004C();
}

uint64_t sub_2613C0528()
{
  return sub_2613C01F4();
}

uint64_t sub_2613C0540(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2613C489C(&qword_26A9149C0, (void (*)(uint64_t))type metadata accessor for Sentencepiece_ModelProto.SentencePiece);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2613C05BC@<X0>(uint64_t a1@<X8>)
{
  return sub_2613C0A4C(&qword_26A916060, (uint64_t)qword_26A920118, a1);
}

uint64_t sub_2613C05E0(uint64_t a1)
{
  uint64_t v2 = sub_2613C489C(&qword_26A9148C0, (void (*)(uint64_t))type metadata accessor for Sentencepiece_ModelProto.SentencePiece);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2613C064C()
{
  return sub_2614D60B8();
}

uint64_t sub_2613C06A4()
{
  sub_2613C489C(&qword_26A9148C0, (void (*)(uint64_t))type metadata accessor for Sentencepiece_ModelProto.SentencePiece);
  return sub_2614D4EE8();
}

uint64_t sub_2613C0720()
{
  return sub_2614D60B8();
}

uint64_t sub_2613C0778()
{
  uint64_t v0 = sub_2614D4FC8();
  sub_2613CC63C(v0, qword_26A920130);
  sub_2613C2624(v0, (uint64_t)qword_26A920130);
  sub_2613C23AC(&qword_26A914A00);
  uint64_t v1 = (int *)(sub_2613C23AC(&qword_26A914A08) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_2614D81D0;
  unint64_t v4 = v19 + v3;
  unint64_t v5 = v19 + v3 + v1[14];
  *(void *)(v19 + v3) = 1;
  *(void *)unint64_t v5 = "NORMAL";
  *(void *)(v5 + 8) = 6;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = *MEMORY[0x263F50718];
  uint64_t v7 = sub_2614D4FA8();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "UNKNOWN";
  *(void *)(v9 + 8) = 7;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)uint64_t v11 = "CONTROL";
  *((void *)v11 + 1) = 7;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  void *v12 = 4;
  *(void *)uint64_t v13 = "USER_DEFINED";
  *((void *)v13 + 1) = 12;
  v13[16] = 2;
  v8();
  long long v14 = (void *)(v4 + 4 * v2);
  uint64_t v15 = (char *)v14 + v1[14];
  void *v14 = 5;
  *(void *)uint64_t v15 = "UNUSED";
  *((void *)v15 + 1) = 6;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v4 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  void *v16 = 6;
  *(void *)uint64_t v17 = "BYTE";
  *((void *)v17 + 1) = 4;
  v17[16] = 2;
  v8();
  return sub_2614D4FB8();
}

uint64_t sub_2613C0A28@<X0>(uint64_t a1@<X8>)
{
  return sub_2613C0A4C(qword_26A916068, (uint64_t)qword_26A920130, a1);
}

uint64_t sub_2613C0A4C@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_2614D4FC8();
  uint64_t v6 = sub_2613C2624(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t sub_2613C0AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Sentencepiece_SelfTestData.Sample(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (v11 && a1 != a2)
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      while (1)
      {
        sub_2613C2478(a1 + v12, (uint64_t)v10, type metadata accessor for Sentencepiece_SelfTestData.Sample);
        sub_2613C2478(a2 + v12, (uint64_t)v7, type metadata accessor for Sentencepiece_SelfTestData.Sample);
        uint64_t v15 = *(int *)(v4 + 20);
        uint64_t v16 = &v10[v15];
        uint64_t v17 = *(void *)&v10[v15 + 8];
        v18 = &v7[v15];
        uint64_t v19 = *((void *)v18 + 1);
        if (v17)
        {
          if (!v19
            || (*(void *)v16 == *(void *)v18 ? (BOOL v20 = v17 == v19) : (BOOL v20 = 0), !v20 && (sub_2614D5FB8() & 1) == 0))
          {
LABEL_30:
            sub_2613C24E0((uint64_t)v7, type metadata accessor for Sentencepiece_SelfTestData.Sample);
            sub_2613C24E0((uint64_t)v10, type metadata accessor for Sentencepiece_SelfTestData.Sample);
            goto LABEL_31;
          }
        }
        else if (v19)
        {
          goto LABEL_30;
        }
        uint64_t v21 = *(int *)(v4 + 24);
        uint64_t v22 = &v10[v21];
        uint64_t v23 = *(void *)&v10[v21 + 8];
        uint64_t v24 = &v7[v21];
        uint64_t v25 = *((void *)v24 + 1);
        if (v23)
        {
          if (!v25) {
            goto LABEL_30;
          }
          BOOL v26 = *(void *)v22 == *(void *)v24 && v23 == v25;
          if (!v26 && (sub_2614D5FB8() & 1) == 0) {
            goto LABEL_30;
          }
        }
        else if (v25)
        {
          goto LABEL_30;
        }
        sub_2614D4D68();
        sub_2613C489C(&qword_26A914A10, MEMORY[0x263F50560]);
        char v27 = sub_2614D5348();
        sub_2613C24E0((uint64_t)v7, type metadata accessor for Sentencepiece_SelfTestData.Sample);
        sub_2613C24E0((uint64_t)v10, type metadata accessor for Sentencepiece_SelfTestData.Sample);
        BOOL v29 = v14-- != 0;
        if (v27)
        {
          v12 += v13;
          if (v29) {
            continue;
          }
        }
        return v27 & 1;
      }
    }
    char v27 = 1;
  }
  else
  {
LABEL_31:
    char v27 = 0;
  }
  return v27 & 1;
}

uint64_t sub_2613C0D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for Sentencepiece_ModelProto.SentencePiece(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v32 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (v11 && a1 != a2)
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v33 = *(void *)(v8 + 72);
      uint64_t v13 = v11 - 1;
      while (1)
      {
        sub_2613C2478(a1 + v12, (uint64_t)v10, type metadata accessor for Sentencepiece_ModelProto.SentencePiece);
        sub_2613C2478(a2 + v12, (uint64_t)v7, type metadata accessor for Sentencepiece_ModelProto.SentencePiece);
        uint64_t v14 = v4[6];
        uint64_t v15 = &v10[v14];
        uint64_t v16 = *(void *)&v10[v14 + 8];
        uint64_t v17 = &v7[v14];
        uint64_t v18 = *((void *)v17 + 1);
        if (v16)
        {
          if (!v18) {
            goto LABEL_33;
          }
          BOOL v19 = *(void *)v15 == *(void *)v17 && v16 == v18;
          if (!v19 && (sub_2614D5FB8() & 1) == 0) {
            goto LABEL_33;
          }
        }
        else if (v18)
        {
          goto LABEL_33;
        }
        uint64_t v20 = v4[7];
        uint64_t v21 = (float *)&v10[v20];
        char v22 = v10[v20 + 4];
        uint64_t v23 = (float *)&v7[v20];
        int v24 = v7[v20 + 4];
        if (v22)
        {
          if (!v24) {
            goto LABEL_33;
          }
        }
        else
        {
          if (*v21 != *v23) {
            LOBYTE(v24) = 1;
          }
          if (v24)
          {
LABEL_33:
            sub_2613C24E0((uint64_t)v7, type metadata accessor for Sentencepiece_ModelProto.SentencePiece);
            sub_2613C24E0((uint64_t)v10, type metadata accessor for Sentencepiece_ModelProto.SentencePiece);
            goto LABEL_34;
          }
        }
        uint64_t v25 = v4[8];
        uint64_t v26 = v10[v25];
        uint64_t v27 = v7[v25];
        if (v26 == 6)
        {
          if (v27 != 6) {
            goto LABEL_33;
          }
        }
        else if (v27 == 6 || qword_2614D9130[v26] != qword_2614D9130[v27])
        {
          goto LABEL_33;
        }
        sub_2614D4D68();
        sub_2613C489C(&qword_26A914A10, MEMORY[0x263F50560]);
        if ((sub_2614D5348() & 1) == 0) {
          goto LABEL_33;
        }
        sub_2614D4DB8();
        sub_2613C489C(&qword_26A914A18, MEMORY[0x263F50588]);
        char v28 = sub_2614D5348();
        sub_2613C24E0((uint64_t)v7, type metadata accessor for Sentencepiece_ModelProto.SentencePiece);
        sub_2613C24E0((uint64_t)v10, type metadata accessor for Sentencepiece_ModelProto.SentencePiece);
        BOOL v30 = v13-- != 0;
        if (v28)
        {
          v12 += v33;
          if (v30) {
            continue;
          }
        }
        return v28 & 1;
      }
    }
    char v28 = 1;
  }
  else
  {
LABEL_34:
    char v28 = 0;
  }
  return v28 & 1;
}

uint64_t sub_2613C10D4(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_2614D5FB8(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a1 + 7;
    for (uint64_t i = a2 + 7; ; i += 2)
    {
      BOOL v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_2614D5FB8() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_2613C119C@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_2613C22A8(a2, a3);
      uint64_t v10 = (char *)sub_2614D4B88();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_2614D4BA8();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_2614D4B98();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x2613C1400);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_2613C2314(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_2614D4B88();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_2614D4BA8();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_2614D4B98();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

void *sub_2613C1410(void *a1, int64_t a2, char a3)
{
  uint64_t result = sub_2613C1430(a1, a2, a3, *v3);
  *unint64_t v3 = result;
  return result;
}

void *sub_2613C1430(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2613C23AC(&qword_26A914A38);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_2613C23AC(&qword_26A914A40);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

uint64_t sub_2613C1568(uint64_t a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = MEMORY[0x263F8EE78];
  *(void *)(v1 + 16) = MEMORY[0x263F8EE78];
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(unsigned char *)(v1 + 56) = 4;
  *(_DWORD *)(v1 + 60) = 0;
  *(unsigned char *)(v1 + 64) = 1;
  *(void *)(v1 + 72) = v3;
  *(_DWORD *)(v1 + 80) = 0;
  *(_WORD *)(v1 + 84) = 513;
  *(_DWORD *)(v1 + 88) = 0;
  *(unsigned char *)(v1 + 92) = 1;
  *(void *)(v1 + 96) = 0;
  char v30 = (unsigned char *)(a1 + 256);
  *(unsigned char *)(v1 + 104) = 1;
  *(_DWORD *)(v1 + 108) = 0;
  *(unsigned char *)(v1 + 112) = 1;
  *(void *)(v1 + 120) = 0;
  *(_WORD *)(v1 + 128) = 513;
  *(_DWORD *)(v1 + 132) = 0;
  *(_DWORD *)(v1 + 140) = 0;
  *(unsigned char *)(v1 + 136) = 1;
  *(unsigned char *)(v1 + 144) = 1;
  *(_DWORD *)(v1 + 148) = 0;
  *(unsigned char *)(v1 + 152) = 1;
  *(_DWORD *)(v1 + 156) = 0;
  *(_DWORD *)(v1 + 164) = 0;
  *(unsigned char *)(v1 + 160) = 1;
  *(unsigned char *)(v1 + 168) = 1;
  *(_DWORD *)(v1 + 172) = 0;
  *(unsigned char *)(v1 + 176) = 1;
  *(_DWORD *)(v1 + 180) = 0;
  *(_DWORD *)(v1 + 188) = 0;
  *(unsigned char *)(v1 + 184) = 1;
  *(unsigned char *)(v1 + 192) = 1;
  *(_WORD *)(v1 + 197) = 514;
  *(_DWORD *)(v1 + 193) = 33686018;
  *(void *)(v1 + 200) = 0;
  *(void *)(v1 + 216) = v3;
  *(void *)(v1 + 224) = v3;
  *(void *)(v1 + 208) = 0;
  *(unsigned char *)(v1 + 256) = 1;
  *(unsigned char *)(v1 + 264) = 1;
  *(unsigned char *)(v1 + 272) = 1;
  *(unsigned char *)(v1 + 280) = 1;
  *(unsigned char *)(v1 + 368) = 2;
  *(void *)(v1 + 240) = 0;
  *(void *)(v1 + 232) = 0;
  *(void *)(v1 + 248) = 33686018;
  *(_DWORD *)(v1 + 260) = 0;
  *(_DWORD *)(v1 + 268) = 0;
  *(_DWORD *)(v1 + 276) = 0;
  *(_OWORD *)(v1 + 288) = 0u;
  *(_OWORD *)(v1 + 304) = 0u;
  *(_OWORD *)(v1 + 320) = 0u;
  *(_OWORD *)(v1 + 336) = 0u;
  *(_OWORD *)(v1 + 352) = 0u;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 + 16);
  swift_beginAccess();
  *(void *)(v1 + 16) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v5 = *(void *)(v2 + 32);
  swift_beginAccess();
  *(void *)(v1 + 24) = v6;
  *(void *)(v1 + 32) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v8 = *(void *)(v2 + 40);
  uint64_t v7 = *(void *)(v2 + 48);
  swift_beginAccess();
  *(void *)(v1 + 40) = v8;
  *(void *)(v1 + 48) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  LOBYTE(v7) = *(unsigned char *)(v2 + 56);
  swift_beginAccess();
  *(unsigned char *)(v1 + 56) = v7;
  swift_beginAccess();
  LODWORD(v7) = *(_DWORD *)(v2 + 60);
  char v9 = *(unsigned char *)(v2 + 64);
  swift_beginAccess();
  *(_DWORD *)(v1 + 60) = v7;
  *(unsigned char *)(v1 + 64) = v9;
  swift_beginAccess();
  uint64_t v10 = *(void *)(v2 + 72);
  swift_beginAccess();
  *(void *)(v1 + 72) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  LODWORD(v10) = *(_DWORD *)(v2 + 80);
  LOBYTE(v7) = *(unsigned char *)(v2 + 84);
  swift_beginAccess();
  *(_DWORD *)(v1 + 80) = v10;
  *(unsigned char *)(v1 + 84) = v7;
  swift_beginAccess();
  LOBYTE(v10) = *(unsigned char *)(v2 + 85);
  swift_beginAccess();
  *(unsigned char *)(v1 + 85) = v10;
  swift_beginAccess();
  LODWORD(v10) = *(_DWORD *)(v2 + 88);
  LOBYTE(v7) = *(unsigned char *)(v2 + 92);
  swift_beginAccess();
  *(_DWORD *)(v1 + 88) = v10;
  *(unsigned char *)(v1 + 92) = v7;
  swift_beginAccess();
  uint64_t v11 = *(void *)(v2 + 96);
  LOBYTE(v7) = *(unsigned char *)(v2 + 104);
  swift_beginAccess();
  *(void *)(v1 + 96) = v11;
  *(unsigned char *)(v1 + 104) = v7;
  swift_beginAccess();
  LODWORD(v11) = *(_DWORD *)(v2 + 108);
  LOBYTE(v7) = *(unsigned char *)(v2 + 112);
  swift_beginAccess();
  *(_DWORD *)(v1 + 108) = v11;
  *(unsigned char *)(v1 + 112) = v7;
  swift_beginAccess();
  uint64_t v12 = *(void *)(v2 + 120);
  LOBYTE(v7) = *(unsigned char *)(v2 + 128);
  swift_beginAccess();
  *(void *)(v1 + 120) = v12;
  *(unsigned char *)(v1 + 128) = v7;
  swift_beginAccess();
  LOBYTE(v12) = *(unsigned char *)(v2 + 129);
  swift_beginAccess();
  *(unsigned char *)(v1 + 129) = v12;
  swift_beginAccess();
  LODWORD(v12) = *(_DWORD *)(v2 + 132);
  LOBYTE(v7) = *(unsigned char *)(v2 + 136);
  swift_beginAccess();
  *(_DWORD *)(v1 + 132) = v12;
  *(unsigned char *)(v1 + 136) = v7;
  swift_beginAccess();
  LODWORD(v12) = *(_DWORD *)(v2 + 140);
  LOBYTE(v7) = *(unsigned char *)(v2 + 144);
  swift_beginAccess();
  *(_DWORD *)(v1 + 140) = v12;
  *(unsigned char *)(v1 + 144) = v7;
  swift_beginAccess();
  LODWORD(v12) = *(_DWORD *)(v2 + 148);
  LOBYTE(v7) = *(unsigned char *)(v2 + 152);
  swift_beginAccess();
  *(_DWORD *)(v1 + 148) = v12;
  *(unsigned char *)(v1 + 152) = v7;
  swift_beginAccess();
  LODWORD(v12) = *(_DWORD *)(v2 + 156);
  LOBYTE(v7) = *(unsigned char *)(v2 + 160);
  swift_beginAccess();
  *(_DWORD *)(v1 + 156) = v12;
  *(unsigned char *)(v1 + 160) = v7;
  swift_beginAccess();
  LODWORD(v12) = *(_DWORD *)(v2 + 164);
  LOBYTE(v7) = *(unsigned char *)(v2 + 168);
  swift_beginAccess();
  *(_DWORD *)(v1 + 164) = v12;
  *(unsigned char *)(v1 + 168) = v7;
  swift_beginAccess();
  LODWORD(v12) = *(_DWORD *)(v2 + 172);
  LOBYTE(v7) = *(unsigned char *)(v2 + 176);
  swift_beginAccess();
  *(_DWORD *)(v1 + 172) = v12;
  *(unsigned char *)(v1 + 176) = v7;
  swift_beginAccess();
  LODWORD(v12) = *(_DWORD *)(v2 + 180);
  LOBYTE(v7) = *(unsigned char *)(v2 + 184);
  swift_beginAccess();
  *(_DWORD *)(v1 + 180) = v12;
  *(unsigned char *)(v1 + 184) = v7;
  swift_beginAccess();
  LODWORD(v12) = *(_DWORD *)(v2 + 188);
  LOBYTE(v7) = *(unsigned char *)(v2 + 192);
  swift_beginAccess();
  *(_DWORD *)(v1 + 188) = v12;
  *(unsigned char *)(v1 + 192) = v7;
  swift_beginAccess();
  LOBYTE(v12) = *(unsigned char *)(v2 + 193);
  swift_beginAccess();
  *(unsigned char *)(v1 + 193) = v12;
  swift_beginAccess();
  LOBYTE(v12) = *(unsigned char *)(v2 + 194);
  swift_beginAccess();
  *(unsigned char *)(v1 + 194) = v12;
  swift_beginAccess();
  LOBYTE(v12) = *(unsigned char *)(v2 + 195);
  swift_beginAccess();
  *(unsigned char *)(v1 + 195) = v12;
  swift_beginAccess();
  LOBYTE(v12) = *(unsigned char *)(v2 + 196);
  swift_beginAccess();
  *(unsigned char *)(v1 + 196) = v12;
  swift_beginAccess();
  LOBYTE(v12) = *(unsigned char *)(v2 + 197);
  swift_beginAccess();
  *(unsigned char *)(v1 + 197) = v12;
  swift_beginAccess();
  LOBYTE(v12) = *(unsigned char *)(v2 + 198);
  swift_beginAccess();
  *(unsigned char *)(v1 + 198) = v12;
  swift_beginAccess();
  uint64_t v14 = *(void *)(v2 + 200);
  uint64_t v13 = *(void *)(v2 + 208);
  swift_beginAccess();
  *(void *)(v1 + 200) = v14;
  *(void *)(v1 + 208) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v15 = *(void *)(v2 + 216);
  swift_beginAccess();
  *(void *)(v1 + 216) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v16 = *(void *)(v2 + 224);
  swift_beginAccess();
  *(void *)(v1 + 224) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v18 = *(void *)(v2 + 232);
  uint64_t v17 = *(void *)(v2 + 240);
  swift_beginAccess();
  *(void *)(v1 + 232) = v18;
  *(void *)(v1 + 240) = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  LOBYTE(v17) = *(unsigned char *)(v2 + 248);
  swift_beginAccess();
  *(unsigned char *)(v1 + 248) = v17;
  swift_beginAccess();
  LOBYTE(v17) = *(unsigned char *)(v2 + 249);
  swift_beginAccess();
  *(unsigned char *)(v1 + 249) = v17;
  swift_beginAccess();
  LOBYTE(v17) = *(unsigned char *)(v2 + 250);
  swift_beginAccess();
  *(unsigned char *)(v1 + 250) = v17;
  swift_beginAccess();
  LOBYTE(v17) = *(unsigned char *)(v2 + 251);
  swift_beginAccess();
  *(unsigned char *)(v1 + 251) = v17;
  swift_beginAccess();
  LODWORD(v17) = *(_DWORD *)(v2 + 252);
  LOBYTE(v7) = *(unsigned char *)(v2 + 256);
  swift_beginAccess();
  *(_DWORD *)(v1 + 252) = v17;
  *(unsigned char *)(v1 + 256) = v7;
  swift_beginAccess();
  LODWORD(v17) = *(_DWORD *)(v2 + 260);
  LOBYTE(v7) = v30[8];
  swift_beginAccess();
  *(_DWORD *)(v1 + 260) = v17;
  *(unsigned char *)(v1 + 264) = v7;
  swift_beginAccess();
  LODWORD(v17) = *(_DWORD *)(v2 + 268);
  LOBYTE(v7) = v30[16];
  swift_beginAccess();
  *(_DWORD *)(v1 + 268) = v17;
  *(unsigned char *)(v1 + 272) = v7;
  swift_beginAccess();
  LODWORD(v17) = *(_DWORD *)(v2 + 276);
  LOBYTE(v7) = v30[24];
  swift_beginAccess();
  *(_DWORD *)(v1 + 276) = v17;
  *(unsigned char *)(v1 + 280) = v7;
  swift_beginAccess();
  uint64_t v20 = *(void *)(v2 + 288);
  uint64_t v19 = *(void *)(v2 + 296);
  swift_beginAccess();
  *(void *)(v1 + 288) = v20;
  *(void *)(v1 + 296) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v22 = *(void *)(v2 + 304);
  uint64_t v21 = *(void *)(v2 + 312);
  swift_beginAccess();
  *(void *)(v1 + 304) = v22;
  *(void *)(v1 + 312) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v24 = *(void *)(v2 + 320);
  uint64_t v23 = *(void *)(v2 + 328);
  swift_beginAccess();
  *(void *)(v1 + 320) = v24;
  *(void *)(v1 + 328) = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v26 = *(void *)(v2 + 336);
  uint64_t v25 = *(void *)(v2 + 344);
  swift_beginAccess();
  *(void *)(v1 + 336) = v26;
  *(void *)(v1 + 344) = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v28 = *(void *)(v2 + 352);
  uint64_t v27 = *(void *)(v2 + 360);
  swift_beginAccess();
  *(void *)(v1 + 352) = v28;
  *(void *)(v1 + 360) = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  LOBYTE(v2) = *(unsigned char *)(v2 + 368);
  swift_beginAccess();
  *(unsigned char *)(v1 + 368) = v2;
  return v1;
}

uint64_t sub_2613C2250(unint64_t a1)
{
  if (a1 >= 5) {
    return 4;
  }
  else {
    return (0x302010004uLL >> (8 * a1));
  }
}

uint64_t type metadata accessor for Sentencepiece_NormalizerSpec(uint64_t a1)
{
  return sub_2613C25C4(a1, (uint64_t *)&unk_26A917B00);
}

uint64_t sub_2613C2294(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_2613C22A8(a1, a2);
  }
  return a1;
}

uint64_t sub_2613C22A8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_2613C2300(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_2613C2314(a1, a2);
  }
  return a1;
}

uint64_t sub_2613C2314(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t type metadata accessor for Sentencepiece_SelfTestData(uint64_t a1)
{
  return sub_2613C25C4(a1, (uint64_t *)&unk_26A917B10);
}

uint64_t type metadata accessor for Sentencepiece_SelfTestData.Sample(uint64_t a1)
{
  return sub_2613C25C4(a1, (uint64_t *)&unk_26A917B20);
}

uint64_t sub_2613C23AC(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t type metadata accessor for Sentencepiece_ModelProto(uint64_t a1)
{
  return sub_2613C25C4(a1, (uint64_t *)&unk_26A917B30);
}

uint64_t sub_2613C2410(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2613C2478(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2613C24E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2613C2540(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_2613C23AC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for Sentencepiece_ModelProto.SentencePiece(uint64_t a1)
{
  return sub_2613C25C4(a1, (uint64_t *)&unk_26A917B40);
}

uint64_t sub_2613C25C4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2613C25FC(unint64_t a1)
{
  if (a1 >= 7) {
    return 6;
  }
  else {
    return (0x4050302010006uLL >> (8 * a1));
  }
}

uint64_t sub_2613C2624(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_2613C265C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_2613C119C((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_2613C2734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_2614D4B88();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_2614D4BA8();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_2614D4B98();
  sub_2613C119C(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_2613C27EC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x2613C2A54);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_2613C22A8(a3, a4);
                  sub_2613C22A8(a1, a2);
                  char v17 = sub_2613C2734((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_2613C2314(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_2613C22A8(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_2613C2734(v21, v22, v20, a3, a4);
                  sub_2613C2314(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_2613C22A8(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_2613C22A8(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_2613C265C(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_2613C2314(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_2613C2A84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2614D4DB8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v56[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = &v56[-v9];
  uint64_t v11 = sub_2614D4D68();
  uint64_t v62 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = &v56[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = &v56[-v15];
  char v17 = (int *)type metadata accessor for Sentencepiece_NormalizerSpec(0);
  uint64_t v18 = v17[6];
  unint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = *(void *)(a1 + v18 + 8);
  uint64_t v21 = (void *)(a2 + v18);
  uint64_t v22 = v21[1];
  if (!v20)
  {
    v60 = v10;
    v61 = v8;
    if (v22) {
      goto LABEL_15;
    }
    goto LABEL_10;
  }
  if (!v22) {
    goto LABEL_15;
  }
  v60 = v10;
  v61 = v8;
  BOOL v23 = *v19 == *v21 && v20 == v22;
  if (v23 || (char v24 = 0, (sub_2614D5FB8() & 1) != 0))
  {
LABEL_10:
    uint64_t v58 = v5;
    uint64_t v59 = v4;
    uint64_t v25 = v17[7];
    uint64_t v27 = *(void *)(a1 + v25);
    unint64_t v26 = *(void *)(a1 + v25 + 8);
    uint64_t v28 = (uint64_t *)(a2 + v25);
    uint64_t v29 = *v28;
    unint64_t v30 = v28[1];
    if (v26 >> 60 == 15)
    {
      if (v30 >> 60 == 15)
      {
LABEL_18:
        uint64_t v32 = v17[8];
        int v33 = *(unsigned __int8 *)(a1 + v32);
        int v34 = *(unsigned __int8 *)(a2 + v32);
        if (v33 == 2)
        {
          uint64_t v36 = v58;
          uint64_t v35 = v59;
          if (v34 != 2) {
            goto LABEL_15;
          }
        }
        else
        {
          uint64_t v36 = v58;
          uint64_t v35 = v59;
          if (v34 == 2 || ((((v34 & 1) == 0) ^ v33) & 1) == 0) {
            goto LABEL_15;
          }
        }
        uint64_t v37 = v17[9];
        int v38 = *(unsigned __int8 *)(a1 + v37);
        int v39 = *(unsigned __int8 *)(a2 + v37);
        if (v38 == 2)
        {
          if (v39 != 2) {
            goto LABEL_15;
          }
        }
        else if (v39 == 2 || ((((v39 & 1) == 0) ^ v38) & 1) == 0)
        {
          goto LABEL_15;
        }
        uint64_t v40 = v17[10];
        int v41 = *(unsigned __int8 *)(a1 + v40);
        int v42 = *(unsigned __int8 *)(a2 + v40);
        if (v41 == 2)
        {
          if (v42 != 2) {
            goto LABEL_15;
          }
        }
        else if (v42 == 2 || ((((v42 & 1) == 0) ^ v41) & 1) == 0)
        {
          goto LABEL_15;
        }
        uint64_t v43 = v17[11];
        uint64_t v44 = (void *)(a1 + v43);
        uint64_t v45 = *(void *)(a1 + v43 + 8);
        uint64_t v46 = (void *)(a2 + v43);
        uint64_t v47 = v46[1];
        if (v45)
        {
          if (v47)
          {
            if (*v44 != *v46 || v45 != v47)
            {
              char v24 = 0;
              if ((sub_2614D5FB8() & 1) == 0) {
                return v24 & 1;
              }
            }
            goto LABEL_40;
          }
        }
        else if (!v47)
        {
LABEL_40:
          uint64_t v48 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v62 + 16);
          v48(v16, a1, v11);
          v48(v14, a2, v11);
          sub_2613C489C(&qword_26A914A10, MEMORY[0x263F50560]);
          char v49 = sub_2614D5348();
          v50 = *(void (**)(unsigned char *, uint64_t))(v62 + 8);
          v50(v14, v11);
          v50(v16, v11);
          if (v49)
          {
            uint64_t v51 = a1 + v17[5];
            v52 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v36 + 16);
            v53 = v60;
            v52(v60, v51, v35);
            v54 = v61;
            v52(v61, a2 + v17[5], v35);
            sub_2613C489C(&qword_26A914A18, MEMORY[0x263F50588]);
            char v24 = sub_2614D5348();
            v55 = *(void (**)(unsigned char *, uint64_t))(v36 + 8);
            v55(v54, v35);
            v55(v53, v35);
            return v24 & 1;
          }
        }
LABEL_15:
        char v24 = 0;
        return v24 & 1;
      }
    }
    else if (v30 >> 60 != 15)
    {
      sub_2613C2294(v27, v26);
      sub_2613C2294(v29, v30);
      int v57 = sub_2613C27EC(v27, v26, v29, v30);
      sub_2613C2300(v29, v30);
      sub_2613C2300(v27, v26);
      if ((v57 & 1) == 0) {
        goto LABEL_15;
      }
      goto LABEL_18;
    }
    sub_2613C2294(v27, v26);
    sub_2613C2294(v29, v30);
    sub_2613C2300(v27, v26);
    sub_2613C2300(v29, v30);
    goto LABEL_15;
  }
  return v24 & 1;
}

uint64_t sub_2613C2FA4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_2614D4DB8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = sub_2614D4D68();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  char v17 = (char *)&v31 - v16;
  if ((sub_2613C0AE8(*a1, *a2) & 1) == 0) {
    goto LABEL_4;
  }
  uint64_t v32 = v10;
  int v33 = v8;
  uint64_t v34 = v5;
  uint64_t v18 = type metadata accessor for Sentencepiece_SelfTestData(0);
  unint64_t v19 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v19(v17, (char *)a1 + *(int *)(v18 + 20), v11);
  v19(v15, (char *)a2 + *(int *)(v18 + 20), v11);
  sub_2613C489C(&qword_26A914A10, MEMORY[0x263F50560]);
  char v20 = sub_2614D5348();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21(v15, v11);
  v21(v17, v11);
  if (v20)
  {
    uint64_t v22 = (char *)a1 + *(int *)(v18 + 24);
    uint64_t v23 = v34;
    char v24 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
    uint64_t v25 = v32;
    v24(v32, v22, v4);
    unint64_t v26 = (char *)a2 + *(int *)(v18 + 24);
    uint64_t v27 = v33;
    v24(v33, v26, v4);
    sub_2613C489C(&qword_26A914A18, MEMORY[0x263F50588]);
    char v28 = sub_2614D5348();
    uint64_t v29 = *(void (**)(char *, uint64_t))(v23 + 8);
    v29(v27, v4);
    v29(v25, v4);
  }
  else
  {
LABEL_4:
    char v28 = 0;
  }
  return v28 & 1;
}

uint64_t sub_2613C32D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2614D4D68();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = type metadata accessor for Sentencepiece_SelfTestData.Sample(0);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = *(void *)(a1 + v12 + 8);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  if (!v14)
  {
    if (v16) {
      goto LABEL_19;
    }
    goto LABEL_10;
  }
  if (!v16) {
    goto LABEL_19;
  }
  BOOL v17 = *v13 == *v15 && v14 == v16;
  if (v17 || (char v18 = 0, (sub_2614D5FB8() & 1) != 0))
  {
LABEL_10:
    uint64_t v19 = *(int *)(v11 + 24);
    char v20 = (void *)(a1 + v19);
    uint64_t v21 = *(void *)(a1 + v19 + 8);
    uint64_t v22 = (void *)(a2 + v19);
    uint64_t v23 = v22[1];
    if (v21)
    {
      if (v23)
      {
        if (*v20 != *v22 || v21 != v23)
        {
          char v18 = 0;
          if ((sub_2614D5FB8() & 1) == 0) {
            return v18 & 1;
          }
        }
LABEL_20:
        uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v25(v10, a1, v4);
        v25(v8, a2, v4);
        sub_2613C489C(&qword_26A914A10, MEMORY[0x263F50560]);
        char v18 = sub_2614D5348();
        unint64_t v26 = *(void (**)(char *, uint64_t))(v5 + 8);
        v26(v8, v4);
        v26(v10, v4);
        return v18 & 1;
      }
    }
    else if (!v23)
    {
      goto LABEL_20;
    }
LABEL_19:
    char v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_2613C3504(uint64_t a1, uint64_t a2)
{
  uint64_t v140 = sub_2614D4DB8();
  uint64_t v4 = *(void *)(v140 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v140);
  v142 = &v132[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  v141 = &v132[-v7];
  uint64_t v8 = sub_2614D4D68();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v132[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v132[-v13];
  uint64_t v139 = type metadata accessor for Sentencepiece_TrainerSpec(0);
  uint64_t v15 = *(int *)(v139 + 24);
  uint64_t v16 = *(void *)(a1 + v15);
  uint64_t v17 = *(void *)(a2 + v15);
  if (v16 == v17)
  {
LABEL_249:
    uint64_t v118 = v9;
    v119 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16);
    v119(v14, a1, v8);
    v119(v12, a2, v8);
    sub_2613C489C(&qword_26A914A10, MEMORY[0x263F50560]);
    char v120 = sub_2614D5348();
    v121 = *(void (**)(unsigned char *, uint64_t))(v118 + 8);
    v121(v12, v8);
    v121(v14, v8);
    if (v120)
    {
      uint64_t v122 = v139;
      uint64_t v123 = a1 + *(int *)(v139 + 20);
      v124 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16);
      uint64_t v125 = v140;
      v126 = v141;
      v124(v141, v123, v140);
      uint64_t v127 = a2 + *(int *)(v122 + 20);
      v128 = v142;
      v124(v142, v127, v125);
      sub_2613C489C(&qword_26A914A18, MEMORY[0x263F50588]);
      uint64_t v129 = v4;
      char v23 = sub_2614D5348();
      v130 = *(void (**)(unsigned char *, uint64_t))(v129 + 8);
      v130(v128, v125);
      v130(v126, v125);
      return v23 & 1;
    }
LABEL_251:
    char v23 = 0;
    return v23 & 1;
  }
  uint64_t v138 = v9;
  swift_beginAccess();
  char v18 = *(void **)(v16 + 16);
  swift_beginAccess();
  if ((sub_2613C10D4(v18, *(void **)(v17 + 16)) & 1) == 0) {
    goto LABEL_251;
  }
  uint64_t v137 = v4;
  swift_beginAccess();
  uint64_t v19 = *(void *)(v16 + 24);
  uint64_t v20 = *(void *)(v16 + 32);
  swift_beginAccess();
  uint64_t v21 = *(void *)(v17 + 32);
  if (!v20)
  {
    if (v21) {
      goto LABEL_251;
    }
LABEL_12:
    swift_beginAccess();
    uint64_t v25 = *(void *)(v16 + 40);
    uint64_t v24 = *(void *)(v16 + 48);
    swift_beginAccess();
    uint64_t v26 = *(void *)(v17 + 48);
    if (v24)
    {
      if (!v26) {
        goto LABEL_251;
      }
      if (v25 != *(void *)(v17 + 40) || v24 != v26)
      {
        char v23 = 0;
        if ((sub_2614D5FB8() & 1) == 0) {
          return v23 & 1;
        }
      }
    }
    else if (v26)
    {
      goto LABEL_251;
    }
    swift_beginAccess();
    int v27 = *(unsigned __int8 *)(v16 + 56);
    swift_beginAccess();
    int v28 = *(unsigned __int8 *)(v17 + 56);
    if (v27 == 4)
    {
      if (v28 != 4) {
        goto LABEL_251;
      }
    }
    else
    {
      char v23 = 0;
      if (v28 == 4 || v27 != v28) {
        return v23 & 1;
      }
    }
    swift_beginAccess();
    LODWORD(v136) = *(_DWORD *)(v16 + 60);
    char v29 = *(unsigned char *)(v16 + 64);
    swift_beginAccess();
    char v30 = *(unsigned char *)(v17 + 64);
    if (v29)
    {
      if (!*(unsigned char *)(v17 + 64)) {
        goto LABEL_251;
      }
    }
    else
    {
      if (v136 != *(_DWORD *)(v17 + 60)) {
        char v30 = 1;
      }
      if (v30) {
        goto LABEL_251;
      }
    }
    swift_beginAccess();
    uint64_t v31 = *(void **)(v16 + 72);
    swift_beginAccess();
    if ((sub_2613C10D4(v31, *(void **)(v17 + 72)) & 1) == 0) {
      goto LABEL_251;
    }
    swift_beginAccess();
    LODWORD(v136) = *(_DWORD *)(v16 + 80);
    char v32 = *(unsigned char *)(v16 + 84);
    swift_beginAccess();
    char v33 = *(unsigned char *)(v17 + 84);
    if (v32)
    {
      if (!*(unsigned char *)(v17 + 84)) {
        goto LABEL_251;
      }
    }
    else
    {
      if (v136 != *(_DWORD *)(v17 + 80)) {
        char v33 = 1;
      }
      if (v33) {
        goto LABEL_251;
      }
    }
    swift_beginAccess();
    int v34 = *(unsigned __int8 *)(v16 + 85);
    swift_beginAccess();
    int v35 = *(unsigned __int8 *)(v17 + 85);
    if (v34 == 2)
    {
      if (v35 != 2) {
        goto LABEL_251;
      }
    }
    else if (v35 == 2 || ((v34 ^ ((v35 & 1) == 0)) & 1) == 0)
    {
      goto LABEL_251;
    }
    swift_beginAccess();
    float v36 = *(float *)(v16 + 88);
    char v37 = *(unsigned char *)(v16 + 92);
    swift_beginAccess();
    char v38 = *(unsigned char *)(v17 + 92);
    if (v37)
    {
      if (!*(unsigned char *)(v17 + 92)) {
        goto LABEL_251;
      }
    }
    else
    {
      if (v36 != *(float *)(v17 + 88)) {
        char v38 = 1;
      }
      if (v38) {
        goto LABEL_251;
      }
    }
    swift_beginAccess();
    uint64_t v136 = *(void *)(v16 + 96);
    char v39 = *(unsigned char *)(v16 + 104);
    swift_beginAccess();
    char v40 = *(unsigned char *)(v17 + 104);
    if (v39)
    {
      if (!*(unsigned char *)(v17 + 104)) {
        goto LABEL_251;
      }
    }
    else
    {
      if (v136 != *(void *)(v17 + 96)) {
        char v40 = 1;
      }
      if (v40) {
        goto LABEL_251;
      }
    }
    swift_beginAccess();
    float v41 = *(float *)(v16 + 108);
    char v42 = *(unsigned char *)(v16 + 112);
    swift_beginAccess();
    char v43 = *(unsigned char *)(v17 + 112);
    if (v42)
    {
      if (!*(unsigned char *)(v17 + 112)) {
        goto LABEL_251;
      }
    }
    else
    {
      if (v41 != *(float *)(v17 + 108)) {
        char v43 = 1;
      }
      if (v43) {
        goto LABEL_251;
      }
    }
    swift_beginAccess();
    uint64_t v136 = *(void *)(v16 + 120);
    char v44 = *(unsigned char *)(v16 + 128);
    swift_beginAccess();
    char v45 = *(unsigned char *)(v17 + 128);
    if (v44)
    {
      if (!*(unsigned char *)(v17 + 128)) {
        goto LABEL_251;
      }
    }
    else
    {
      if (v136 != *(void *)(v17 + 120)) {
        char v45 = 1;
      }
      if (v45) {
        goto LABEL_251;
      }
    }
    swift_beginAccess();
    int v46 = *(unsigned __int8 *)(v16 + 129);
    swift_beginAccess();
    int v47 = *(unsigned __int8 *)(v17 + 129);
    if (v46 == 2)
    {
      if (v47 != 2) {
        goto LABEL_251;
      }
    }
    else if (v47 == 2 || ((v46 ^ ((v47 & 1) == 0)) & 1) == 0)
    {
      goto LABEL_251;
    }
    swift_beginAccess();
    LODWORD(v136) = *(_DWORD *)(v16 + 132);
    char v48 = *(unsigned char *)(v16 + 136);
    swift_beginAccess();
    char v49 = *(unsigned char *)(v17 + 136);
    if (v48)
    {
      if (!*(unsigned char *)(v17 + 136)) {
        goto LABEL_251;
      }
    }
    else
    {
      if (v136 != *(_DWORD *)(v17 + 132)) {
        char v49 = 1;
      }
      if (v49) {
        goto LABEL_251;
      }
    }
    swift_beginAccess();
    LODWORD(v136) = *(_DWORD *)(v16 + 140);
    char v50 = *(unsigned char *)(v16 + 144);
    swift_beginAccess();
    char v51 = *(unsigned char *)(v17 + 144);
    if (v50)
    {
      if (!*(unsigned char *)(v17 + 144)) {
        goto LABEL_251;
      }
    }
    else
    {
      if (v136 != *(_DWORD *)(v17 + 140)) {
        char v51 = 1;
      }
      if (v51) {
        goto LABEL_251;
      }
    }
    swift_beginAccess();
    LODWORD(v136) = *(_DWORD *)(v16 + 148);
    char v52 = *(unsigned char *)(v16 + 152);
    swift_beginAccess();
    char v53 = *(unsigned char *)(v17 + 152);
    if (v52)
    {
      if (!*(unsigned char *)(v17 + 152)) {
        goto LABEL_251;
      }
    }
    else
    {
      if (v136 != *(_DWORD *)(v17 + 148)) {
        char v53 = 1;
      }
      if (v53) {
        goto LABEL_251;
      }
    }
    swift_beginAccess();
    float v54 = *(float *)(v16 + 156);
    char v55 = *(unsigned char *)(v16 + 160);
    swift_beginAccess();
    char v56 = *(unsigned char *)(v17 + 160);
    if (v55)
    {
      if (!*(unsigned char *)(v17 + 160)) {
        goto LABEL_251;
      }
    }
    else
    {
      if (v54 != *(float *)(v17 + 156)) {
        char v56 = 1;
      }
      if (v56) {
        goto LABEL_251;
      }
    }
    swift_beginAccess();
    LODWORD(v136) = *(_DWORD *)(v16 + 164);
    char v57 = *(unsigned char *)(v16 + 168);
    swift_beginAccess();
    char v58 = *(unsigned char *)(v17 + 168);
    if (v57)
    {
      if (!*(unsigned char *)(v17 + 168)) {
        goto LABEL_251;
      }
    }
    else
    {
      if (v136 != *(_DWORD *)(v17 + 164)) {
        char v58 = 1;
      }
      if (v58) {
        goto LABEL_251;
      }
    }
    swift_beginAccess();
    LODWORD(v136) = *(_DWORD *)(v16 + 172);
    char v59 = *(unsigned char *)(v16 + 176);
    swift_beginAccess();
    char v60 = *(unsigned char *)(v17 + 176);
    if (v59)
    {
      if (!*(unsigned char *)(v17 + 176)) {
        goto LABEL_251;
      }
    }
    else
    {
      if (v136 != *(_DWORD *)(v17 + 172)) {
        char v60 = 1;
      }
      if (v60) {
        goto LABEL_251;
      }
    }
    swift_beginAccess();
    LODWORD(v136) = *(_DWORD *)(v16 + 180);
    char v61 = *(unsigned char *)(v16 + 184);
    swift_beginAccess();
    char v62 = *(unsigned char *)(v17 + 184);
    if (v61)
    {
      if (!*(unsigned char *)(v17 + 184)) {
        goto LABEL_251;
      }
    }
    else
    {
      if (v136 != *(_DWORD *)(v17 + 180)) {
        char v62 = 1;
      }
      if (v62) {
        goto LABEL_251;
      }
    }
    swift_beginAccess();
    LODWORD(v136) = *(_DWORD *)(v16 + 188);
    char v63 = *(unsigned char *)(v16 + 192);
    swift_beginAccess();
    char v64 = *(unsigned char *)(v17 + 192);
    if (v63)
    {
      if (!*(unsigned char *)(v17 + 192)) {
        goto LABEL_251;
      }
    }
    else
    {
      if (v136 != *(_DWORD *)(v17 + 188)) {
        char v64 = 1;
      }
      if (v64) {
        goto LABEL_251;
      }
    }
    swift_beginAccess();
    int v65 = *(unsigned __int8 *)(v16 + 193);
    swift_beginAccess();
    int v66 = *(unsigned __int8 *)(v17 + 193);
    if (v65 == 2)
    {
      if (v66 != 2) {
        goto LABEL_251;
      }
    }
    else if (v66 == 2 || ((v65 ^ ((v66 & 1) == 0)) & 1) == 0)
    {
      goto LABEL_251;
    }
    swift_beginAccess();
    int v67 = *(unsigned __int8 *)(v16 + 194);
    swift_beginAccess();
    int v68 = *(unsigned __int8 *)(v17 + 194);
    if (v67 == 2)
    {
      if (v68 != 2) {
        goto LABEL_251;
      }
    }
    else if (v68 == 2 || ((v67 ^ ((v68 & 1) == 0)) & 1) == 0)
    {
      goto LABEL_251;
    }
    swift_beginAccess();
    int v69 = *(unsigned __int8 *)(v16 + 195);
    swift_beginAccess();
    int v70 = *(unsigned __int8 *)(v17 + 195);
    if (v69 == 2)
    {
      if (v70 != 2) {
        goto LABEL_251;
      }
    }
    else if (v70 == 2 || ((v69 ^ ((v70 & 1) == 0)) & 1) == 0)
    {
      goto LABEL_251;
    }
    swift_beginAccess();
    int v71 = *(unsigned __int8 *)(v16 + 196);
    swift_beginAccess();
    int v72 = *(unsigned __int8 *)(v17 + 196);
    if (v71 == 2)
    {
      if (v72 != 2) {
        goto LABEL_251;
      }
    }
    else if (v72 == 2 || ((v71 ^ ((v72 & 1) == 0)) & 1) == 0)
    {
      goto LABEL_251;
    }
    swift_beginAccess();
    int v73 = *(unsigned __int8 *)(v16 + 197);
    swift_beginAccess();
    int v74 = *(unsigned __int8 *)(v17 + 197);
    if (v73 == 2)
    {
      if (v74 != 2) {
        goto LABEL_251;
      }
    }
    else if (v74 == 2 || ((v73 ^ ((v74 & 1) == 0)) & 1) == 0)
    {
      goto LABEL_251;
    }
    swift_beginAccess();
    int v75 = *(unsigned __int8 *)(v16 + 198);
    swift_beginAccess();
    int v76 = *(unsigned __int8 *)(v17 + 198);
    if (v75 == 2)
    {
      if (v76 != 2) {
        goto LABEL_251;
      }
    }
    else if (v76 == 2 || ((v75 ^ ((v76 & 1) == 0)) & 1) == 0)
    {
      goto LABEL_251;
    }
    swift_beginAccess();
    uint64_t v77 = *(void *)(v16 + 200);
    uint64_t v78 = *(void *)(v16 + 208);
    swift_beginAccess();
    uint64_t v79 = *(void *)(v17 + 208);
    if (v78)
    {
      if (!v79) {
        goto LABEL_251;
      }
      if (v77 != *(void *)(v17 + 200) || v78 != v79)
      {
        char v23 = 0;
        if ((sub_2614D5FB8() & 1) == 0) {
          return v23 & 1;
        }
      }
    }
    else if (v79)
    {
      goto LABEL_251;
    }
    swift_beginAccess();
    v80 = *(void **)(v16 + 216);
    swift_beginAccess();
    if ((sub_2613C10D4(v80, *(void **)(v17 + 216)) & 1) == 0) {
      goto LABEL_251;
    }
    swift_beginAccess();
    v81 = *(void **)(v16 + 224);
    swift_beginAccess();
    if ((sub_2613C10D4(v81, *(void **)(v17 + 224)) & 1) == 0) {
      goto LABEL_251;
    }
    swift_beginAccess();
    uint64_t v82 = *(void *)(v16 + 232);
    uint64_t v83 = *(void *)(v16 + 240);
    swift_beginAccess();
    uint64_t v84 = *(void *)(v17 + 240);
    if (v83)
    {
      if (!v84) {
        goto LABEL_251;
      }
      if (v82 != *(void *)(v17 + 232) || v83 != v84)
      {
        char v23 = 0;
        if ((sub_2614D5FB8() & 1) == 0) {
          return v23 & 1;
        }
      }
    }
    else if (v84)
    {
      goto LABEL_251;
    }
    swift_beginAccess();
    int v85 = *(unsigned __int8 *)(v16 + 248);
    swift_beginAccess();
    int v86 = *(unsigned __int8 *)(v17 + 248);
    if (v85 == 2)
    {
      if (v86 != 2) {
        goto LABEL_251;
      }
    }
    else if (v86 == 2 || ((v85 ^ ((v86 & 1) == 0)) & 1) == 0)
    {
      goto LABEL_251;
    }
    swift_beginAccess();
    int v87 = *(unsigned __int8 *)(v16 + 249);
    swift_beginAccess();
    int v88 = *(unsigned __int8 *)(v17 + 249);
    if (v87 == 2)
    {
      if (v88 != 2) {
        goto LABEL_251;
      }
    }
    else if (v88 == 2 || ((v87 ^ ((v88 & 1) == 0)) & 1) == 0)
    {
      goto LABEL_251;
    }
    swift_beginAccess();
    int v89 = *(unsigned __int8 *)(v16 + 250);
    swift_beginAccess();
    int v90 = *(unsigned __int8 *)(v17 + 250);
    if (v89 == 2)
    {
      if (v90 != 2) {
        goto LABEL_251;
      }
    }
    else if (v90 == 2 || ((v89 ^ ((v90 & 1) == 0)) & 1) == 0)
    {
      goto LABEL_251;
    }
    swift_beginAccess();
    int v91 = *(unsigned __int8 *)(v16 + 251);
    swift_beginAccess();
    int v92 = *(unsigned __int8 *)(v17 + 251);
    if (v91 == 2)
    {
      if (v92 != 2) {
        goto LABEL_251;
      }
    }
    else if (v92 == 2 || ((v91 ^ ((v92 & 1) == 0)) & 1) == 0)
    {
      goto LABEL_251;
    }
    swift_beginAccess();
    int v133 = *(_DWORD *)(v16 + 252);
    v134 = (unsigned char *)(v16 + 256);
    LODWORD(v136) = *(unsigned __int8 *)(v16 + 256);
    swift_beginAccess();
    v135 = (unsigned char *)(v17 + 256);
    char v93 = *(unsigned char *)(v17 + 256);
    if (v136)
    {
      if (!*(unsigned char *)(v17 + 256)) {
        goto LABEL_251;
      }
    }
    else
    {
      if (v133 != *(_DWORD *)(v17 + 252)) {
        char v93 = 1;
      }
      if (v93) {
        goto LABEL_251;
      }
    }
    swift_beginAccess();
    LODWORD(v136) = *(_DWORD *)(v16 + 260);
    char v94 = v134[8];
    swift_beginAccess();
    char v95 = v135[8];
    if (v94)
    {
      if (!v135[8]) {
        goto LABEL_251;
      }
    }
    else
    {
      if (v136 != *(_DWORD *)(v17 + 260)) {
        char v95 = 1;
      }
      if (v95) {
        goto LABEL_251;
      }
    }
    swift_beginAccess();
    LODWORD(v136) = *(_DWORD *)(v16 + 268);
    char v96 = v134[16];
    swift_beginAccess();
    char v97 = v135[16];
    if (v96)
    {
      if (!v135[16]) {
        goto LABEL_251;
      }
    }
    else
    {
      if (v136 != *(_DWORD *)(v17 + 268)) {
        char v97 = 1;
      }
      if (v97) {
        goto LABEL_251;
      }
    }
    swift_beginAccess();
    LODWORD(v136) = *(_DWORD *)(v16 + 276);
    char v98 = v134[24];
    swift_beginAccess();
    char v99 = v135[24];
    if (v98)
    {
      if (!v135[24]) {
        goto LABEL_251;
      }
    }
    else
    {
      if (v136 != *(_DWORD *)(v17 + 276)) {
        char v99 = 1;
      }
      if (v99) {
        goto LABEL_251;
      }
    }
    swift_beginAccess();
    uint64_t v100 = *(void *)(v16 + 288);
    uint64_t v101 = *(void *)(v16 + 296);
    swift_beginAccess();
    uint64_t v102 = *(void *)(v17 + 296);
    if (v101)
    {
      if (!v102) {
        goto LABEL_251;
      }
      if (v100 != *(void *)(v17 + 288) || v101 != v102)
      {
        char v23 = 0;
        if ((sub_2614D5FB8() & 1) == 0) {
          return v23 & 1;
        }
      }
    }
    else if (v102)
    {
      goto LABEL_251;
    }
    swift_beginAccess();
    uint64_t v103 = *(void *)(v16 + 304);
    uint64_t v104 = *(void *)(v16 + 312);
    swift_beginAccess();
    uint64_t v105 = *(void *)(v17 + 312);
    if (v104)
    {
      if (!v105) {
        goto LABEL_251;
      }
      if (v103 != *(void *)(v17 + 304) || v104 != v105)
      {
        char v23 = 0;
        if ((sub_2614D5FB8() & 1) == 0) {
          return v23 & 1;
        }
      }
    }
    else if (v105)
    {
      goto LABEL_251;
    }
    swift_beginAccess();
    uint64_t v106 = *(void *)(v16 + 320);
    uint64_t v107 = *(void *)(v16 + 328);
    swift_beginAccess();
    uint64_t v108 = *(void *)(v17 + 328);
    if (v107)
    {
      if (!v108) {
        goto LABEL_251;
      }
      if (v106 != *(void *)(v17 + 320) || v107 != v108)
      {
        char v23 = 0;
        if ((sub_2614D5FB8() & 1) == 0) {
          return v23 & 1;
        }
      }
    }
    else if (v108)
    {
      goto LABEL_251;
    }
    swift_beginAccess();
    uint64_t v109 = *(void *)(v16 + 336);
    uint64_t v110 = *(void *)(v16 + 344);
    swift_beginAccess();
    uint64_t v111 = *(void *)(v17 + 344);
    if (v110)
    {
      if (!v111) {
        goto LABEL_251;
      }
      if (v109 != *(void *)(v17 + 336) || v110 != v111)
      {
        char v23 = 0;
        if ((sub_2614D5FB8() & 1) == 0) {
          return v23 & 1;
        }
      }
    }
    else if (v111)
    {
      goto LABEL_251;
    }
    swift_beginAccess();
    uint64_t v112 = *(void *)(v16 + 352);
    uint64_t v113 = *(void *)(v16 + 360);
    swift_beginAccess();
    uint64_t v114 = *(void *)(v17 + 360);
    if (v113)
    {
      if (!v114) {
        goto LABEL_251;
      }
      if (v112 != *(void *)(v17 + 352) || v113 != v114)
      {
        char v23 = 0;
        if ((sub_2614D5FB8() & 1) == 0) {
          return v23 & 1;
        }
      }
    }
    else if (v114)
    {
      goto LABEL_251;
    }
    swift_beginAccess();
    int v115 = *(unsigned __int8 *)(v16 + 368);
    swift_beginAccess();
    int v116 = *(unsigned __int8 *)(v17 + 368);
    if (v115 == 2)
    {
      uint64_t v4 = v137;
      uint64_t v9 = v138;
      if (v116 != 2) {
        goto LABEL_251;
      }
    }
    else
    {
      if (v116 == 2) {
        goto LABEL_251;
      }
      char v117 = v115 ^ ((v116 & 1) == 0);
      uint64_t v4 = v137;
      uint64_t v9 = v138;
      if ((v117 & 1) == 0) {
        goto LABEL_251;
      }
    }
    goto LABEL_249;
  }
  if (!v21) {
    goto LABEL_251;
  }
  if (v19 == *(void *)(v17 + 24) && v20 == v21) {
    goto LABEL_12;
  }
  char v23 = 0;
  if (sub_2614D5FB8()) {
    goto LABEL_12;
  }
  return v23 & 1;
}

uint64_t sub_2613C489C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2613C48E4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v123 = sub_2614D4DB8();
  uint64_t v122 = *(void *)(v123 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v123);
  v121 = (char *)&v115 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  char v120 = (char *)&v115 - v6;
  uint64_t v126 = sub_2614D4D68();
  uint64_t v125 = *(void *)(v126 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v126);
  v124 = (char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  v134 = (char *)&v115 - v9;
  uint64_t v10 = type metadata accessor for Sentencepiece_SelfTestData(0);
  uint64_t v136 = *(void *)(v10 - 8);
  uint64_t v137 = v10;
  MEMORY[0x270FA5388](v10);
  v128 = (uint64_t *)((char *)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v135 = sub_2613C23AC(&qword_26A914A20);
  MEMORY[0x270FA5388](v135);
  uint64_t v141 = (uint64_t)&v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2613C23AC(&qword_26A914890);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  v131 = (uint64_t *)((char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v139 = (uint64_t)&v115 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v140 = (uint64_t)&v115 - v18;
  uint64_t v147 = type metadata accessor for Sentencepiece_NormalizerSpec(0);
  uint64_t v144 = *(void *)(v147 - 8);
  MEMORY[0x270FA5388](v147);
  uint64_t v133 = (uint64_t)&v115 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_2613C23AC(&qword_26A914A28);
  uint64_t v20 = MEMORY[0x270FA5388](v143);
  uint64_t v130 = (uint64_t)&v115 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  v142 = (char *)&v115 - v22;
  uint64_t v23 = sub_2613C23AC(&qword_26A914888);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  uint64_t v127 = (uint64_t)&v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v132 = (uint64_t)&v115 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v129 = (uint64_t)&v115 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v138 = (uint64_t)&v115 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  int v34 = (char *)&v115 - v33;
  MEMORY[0x270FA5388](v32);
  float v36 = (char *)&v115 - v35;
  uint64_t v37 = type metadata accessor for Sentencepiece_TrainerSpec(0);
  v145 = *(uint64_t **)(v37 - 8);
  uint64_t v146 = v37;
  MEMORY[0x270FA5388](v37);
  char v39 = (char *)&v115 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_2613C23AC(&qword_26A914A30);
  MEMORY[0x270FA5388](v40);
  char v42 = (char *)&v115 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_2613C23AC(&qword_26A914880);
  uint64_t v44 = MEMORY[0x270FA5388](v43 - 8);
  int v46 = (char *)&v115 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = MEMORY[0x270FA5388](v44);
  char v49 = (char *)&v115 - v48;
  MEMORY[0x270FA5388](v47);
  char v51 = (char *)&v115 - v50;
  if ((sub_2613C0D8C(*a1, *a2) & 1) == 0) {
    goto LABEL_17;
  }
  char v117 = v46;
  int v115 = v39;
  uint64_t v118 = v34;
  v119 = v36;
  uint64_t v52 = v147;
  char v53 = (int *)type metadata accessor for Sentencepiece_ModelProto(0);
  uint64_t v54 = v53[7];
  int v116 = a1;
  sub_2613C2540((uint64_t)a1 + v54, (uint64_t)v51, &qword_26A914880);
  sub_2613C2540((uint64_t)a2 + v53[7], (uint64_t)v49, &qword_26A914880);
  uint64_t v55 = (uint64_t)&v42[*(int *)(v40 + 48)];
  sub_2613C2540((uint64_t)v51, (uint64_t)v42, &qword_26A914880);
  sub_2613C2540((uint64_t)v49, v55, &qword_26A914880);
  uint64_t v56 = v146;
  char v57 = (uint64_t (*)(char *, uint64_t, uint64_t))v145[6];
  int v58 = v57(v42, 1, v146);
  v145 = a2;
  if (v58 == 1)
  {
    sub_2613CC6A0((uint64_t)v49, &qword_26A914880);
    sub_2613CC6A0((uint64_t)v51, &qword_26A914880);
    if (v57((char *)v55, 1, v56) == 1)
    {
      sub_2613CC6A0((uint64_t)v42, &qword_26A914880);
      goto LABEL_9;
    }
LABEL_7:
    char v60 = &qword_26A914A30;
LABEL_15:
    uint64_t v72 = (uint64_t)v42;
LABEL_16:
    sub_2613CC6A0(v72, v60);
    goto LABEL_17;
  }
  uint64_t v59 = (uint64_t)v117;
  sub_2613C2540((uint64_t)v42, (uint64_t)v117, &qword_26A914880);
  if (v57((char *)v55, 1, v56) == 1)
  {
    sub_2613CC6A0((uint64_t)v49, &qword_26A914880);
    sub_2613CC6A0((uint64_t)v51, &qword_26A914880);
    sub_2613C24E0(v59, type metadata accessor for Sentencepiece_TrainerSpec);
    goto LABEL_7;
  }
  uint64_t v61 = (uint64_t)v115;
  sub_2613C2410(v55, (uint64_t)v115, type metadata accessor for Sentencepiece_TrainerSpec);
  char v62 = sub_2613C3504(v59, v61);
  sub_2613C24E0(v61, type metadata accessor for Sentencepiece_TrainerSpec);
  sub_2613CC6A0((uint64_t)v49, &qword_26A914880);
  sub_2613CC6A0((uint64_t)v51, &qword_26A914880);
  sub_2613C24E0(v59, type metadata accessor for Sentencepiece_TrainerSpec);
  sub_2613CC6A0((uint64_t)v42, &qword_26A914880);
  if ((v62 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_9:
  char v63 = v116;
  uint64_t v64 = (uint64_t)v119;
  sub_2613C2540((uint64_t)v116 + v53[8], (uint64_t)v119, &qword_26A914888);
  uint64_t v65 = (uint64_t)v118;
  sub_2613C2540((uint64_t)v145 + v53[8], (uint64_t)v118, &qword_26A914888);
  char v42 = v142;
  uint64_t v66 = (uint64_t)&v142[*(int *)(v143 + 48)];
  sub_2613C2540(v64, (uint64_t)v142, &qword_26A914888);
  sub_2613C2540(v65, v66, &qword_26A914888);
  uint64_t v67 = v144 + 48;
  int v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v144 + 48);
  if (v68((uint64_t)v42, 1, v52) == 1)
  {
    sub_2613CC6A0(v65, &qword_26A914888);
    sub_2613CC6A0(v64, &qword_26A914888);
    if (v68(v66, 1, v52) == 1)
    {
      uint64_t v69 = v52;
      int v70 = v68;
      sub_2613CC6A0((uint64_t)v42, &qword_26A914888);
      goto LABEL_20;
    }
    goto LABEL_14;
  }
  uint64_t v71 = v138;
  sub_2613C2540((uint64_t)v42, v138, &qword_26A914888);
  if (v68(v66, 1, v52) == 1)
  {
    sub_2613CC6A0((uint64_t)v118, &qword_26A914888);
    sub_2613CC6A0((uint64_t)v119, &qword_26A914888);
    sub_2613C24E0(v71, type metadata accessor for Sentencepiece_NormalizerSpec);
LABEL_14:
    char v60 = &qword_26A914A28;
    goto LABEL_15;
  }
  uint64_t v69 = v52;
  int v70 = v68;
  uint64_t v75 = (uint64_t)v42;
  uint64_t v76 = v133;
  sub_2613C2410(v66, v133, type metadata accessor for Sentencepiece_NormalizerSpec);
  char v77 = sub_2613C2A84(v71, v76);
  sub_2613C24E0(v76, type metadata accessor for Sentencepiece_NormalizerSpec);
  sub_2613CC6A0((uint64_t)v118, &qword_26A914888);
  sub_2613CC6A0((uint64_t)v119, &qword_26A914888);
  sub_2613C24E0(v71, type metadata accessor for Sentencepiece_NormalizerSpec);
  sub_2613CC6A0(v75, &qword_26A914888);
  if ((v77 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_20:
  uint64_t v144 = v67;
  uint64_t v78 = v140;
  sub_2613C2540((uint64_t)v63 + v53[9], v140, &qword_26A914890);
  uint64_t v79 = v139;
  sub_2613C2540((uint64_t)v145 + v53[9], v139, &qword_26A914890);
  uint64_t v80 = v141;
  uint64_t v81 = v141 + *(int *)(v135 + 48);
  sub_2613C2540(v78, v141, &qword_26A914890);
  sub_2613C2540(v79, v81, &qword_26A914890);
  uint64_t v82 = v137;
  uint64_t v83 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v136 + 48);
  if (v83(v80, 1, v137) == 1)
  {
    sub_2613CC6A0(v79, &qword_26A914890);
    sub_2613CC6A0(v78, &qword_26A914890);
    int v84 = v83(v81, 1, v82);
    int v85 = v134;
    if (v84 == 1)
    {
      sub_2613CC6A0(v141, &qword_26A914890);
      goto LABEL_27;
    }
    goto LABEL_25;
  }
  int v86 = v131;
  sub_2613C2540(v80, (uint64_t)v131, &qword_26A914890);
  int v87 = v83(v81, 1, v82);
  int v85 = v134;
  if (v87 == 1)
  {
    sub_2613CC6A0(v139, &qword_26A914890);
    sub_2613CC6A0(v140, &qword_26A914890);
    sub_2613C24E0((uint64_t)v86, type metadata accessor for Sentencepiece_SelfTestData);
LABEL_25:
    char v60 = &qword_26A914A20;
    uint64_t v72 = v141;
    goto LABEL_16;
  }
  int v88 = v128;
  sub_2613C2410(v81, (uint64_t)v128, type metadata accessor for Sentencepiece_SelfTestData);
  char v89 = sub_2613C2FA4(v86, v88);
  sub_2613C24E0((uint64_t)v88, type metadata accessor for Sentencepiece_SelfTestData);
  sub_2613CC6A0(v139, &qword_26A914890);
  sub_2613CC6A0(v140, &qword_26A914890);
  sub_2613C24E0((uint64_t)v86, type metadata accessor for Sentencepiece_SelfTestData);
  sub_2613CC6A0(v80, &qword_26A914890);
  if ((v89 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_27:
  int v90 = v116;
  uint64_t v91 = v129;
  sub_2613C2540((uint64_t)v116 + v53[10], v129, &qword_26A914888);
  uint64_t v147 = (uint64_t)v53;
  uint64_t v92 = (uint64_t)v145 + v53[10];
  uint64_t v93 = v132;
  sub_2613C2540(v92, v132, &qword_26A914888);
  uint64_t v94 = v130;
  uint64_t v95 = v130 + *(int *)(v143 + 48);
  sub_2613C2540(v91, v130, &qword_26A914888);
  sub_2613C2540(v93, v95, &qword_26A914888);
  if (v70(v94, 1, v69) != 1)
  {
    uint64_t v96 = v127;
    sub_2613C2540(v94, v127, &qword_26A914888);
    if (v70(v95, 1, v69) != 1)
    {
      uint64_t v97 = v133;
      sub_2613C2410(v95, v133, type metadata accessor for Sentencepiece_NormalizerSpec);
      char v98 = sub_2613C2A84(v96, v97);
      sub_2613C24E0(v97, type metadata accessor for Sentencepiece_NormalizerSpec);
      sub_2613CC6A0(v132, &qword_26A914888);
      sub_2613CC6A0(v91, &qword_26A914888);
      sub_2613C24E0(v96, type metadata accessor for Sentencepiece_NormalizerSpec);
      sub_2613CC6A0(v94, &qword_26A914888);
      if ((v98 & 1) == 0) {
        goto LABEL_17;
      }
      goto LABEL_34;
    }
    sub_2613CC6A0(v132, &qword_26A914888);
    sub_2613CC6A0(v91, &qword_26A914888);
    sub_2613C24E0(v96, type metadata accessor for Sentencepiece_NormalizerSpec);
    goto LABEL_32;
  }
  sub_2613CC6A0(v93, &qword_26A914888);
  sub_2613CC6A0(v91, &qword_26A914888);
  if (v70(v95, 1, v69) != 1)
  {
LABEL_32:
    char v60 = &qword_26A914A28;
    uint64_t v72 = v94;
    goto LABEL_16;
  }
  sub_2613CC6A0(v94, &qword_26A914888);
LABEL_34:
  uint64_t v99 = v147;
  uint64_t v100 = v125;
  uint64_t v101 = *(void (**)(char *, char *, uint64_t))(v125 + 16);
  uint64_t v102 = v126;
  v101(v85, (char *)v90 + *(int *)(v147 + 20), v126);
  uint64_t v103 = v145;
  uint64_t v104 = v85;
  uint64_t v105 = v124;
  v101(v124, (char *)v145 + *(int *)(v99 + 20), v102);
  sub_2613C489C(&qword_26A914A10, MEMORY[0x263F50560]);
  char v106 = sub_2614D5348();
  uint64_t v107 = *(void (**)(char *, uint64_t))(v100 + 8);
  v107(v105, v102);
  v107(v104, v102);
  if (v106)
  {
    uint64_t v108 = v122;
    uint64_t v109 = *(void (**)(char *, char *, uint64_t))(v122 + 16);
    uint64_t v110 = v120;
    uint64_t v111 = v123;
    v109(v120, (char *)v90 + *(int *)(v99 + 24), v123);
    uint64_t v112 = (char *)v103 + *(int *)(v99 + 24);
    uint64_t v113 = v121;
    v109(v121, v112, v111);
    sub_2613C489C(&qword_26A914A18, MEMORY[0x263F50588]);
    char v73 = sub_2614D5348();
    uint64_t v114 = *(void (**)(char *, uint64_t))(v108 + 8);
    v114(v113, v111);
    v114(v110, v111);
    return v73 & 1;
  }
LABEL_17:
  char v73 = 0;
  return v73 & 1;
}

uint64_t sub_2613C5970(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2614D4DB8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v39 - v9;
  uint64_t v11 = sub_2614D4D68();
  uint64_t v42 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v39 - v15;
  uint64_t v17 = (int *)type metadata accessor for Sentencepiece_ModelProto.SentencePiece(0);
  uint64_t v18 = v17[6];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = *(void *)(a1 + v18 + 8);
  uint64_t v21 = (void *)(a2 + v18);
  uint64_t v22 = v21[1];
  if (!v20)
  {
    uint64_t v41 = v5;
    if (v22) {
      goto LABEL_23;
    }
    goto LABEL_10;
  }
  if (!v22) {
    goto LABEL_23;
  }
  uint64_t v41 = v5;
  BOOL v23 = *v19 == *v21 && v20 == v22;
  if (v23 || (char v24 = 0, (sub_2614D5FB8() & 1) != 0))
  {
LABEL_10:
    uint64_t v25 = v17[7];
    uint64_t v26 = (float *)(a1 + v25);
    char v27 = *(unsigned char *)(a1 + v25 + 4);
    uint64_t v28 = (float *)(a2 + v25);
    int v29 = *(unsigned __int8 *)(a2 + v25 + 4);
    if (v27)
    {
      if (!v29) {
        goto LABEL_23;
      }
    }
    else
    {
      if (*v26 != *v28) {
        LOBYTE(v29) = 1;
      }
      if (v29) {
        goto LABEL_23;
      }
    }
    uint64_t v30 = v17[8];
    uint64_t v31 = *(char *)(a1 + v30);
    uint64_t v32 = *(char *)(a2 + v30);
    if (v31 == 6)
    {
      if (v32 != 6) {
        goto LABEL_23;
      }
    }
    else if (v32 == 6 || qword_2614D9130[v31] != qword_2614D9130[v32])
    {
      goto LABEL_23;
    }
    uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
    v40(v16, a1, v11);
    v40(v14, a2, v11);
    sub_2613C489C(&qword_26A914A10, MEMORY[0x263F50560]);
    LODWORD(v40) = sub_2614D5348();
    uint64_t v33 = *(void (**)(char *, uint64_t))(v42 + 8);
    v33(v14, v11);
    v33(v16, v11);
    if (v40)
    {
      uint64_t v34 = a1 + v17[5];
      uint64_t v35 = v41;
      float v36 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
      v36(v10, v34, v4);
      v36(v8, a2 + v17[5], v4);
      sub_2613C489C(&qword_26A914A18, MEMORY[0x263F50588]);
      char v24 = sub_2614D5348();
      uint64_t v37 = *(void (**)(char *, uint64_t))(v35 + 8);
      v37(v8, v4);
      v37(v10, v4);
      return v24 & 1;
    }
LABEL_23:
    char v24 = 0;
  }
  return v24 & 1;
}

unint64_t sub_2613C5D54()
{
  unint64_t result = qword_26A9148D8;
  if (!qword_26A9148D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9148D8);
  }
  return result;
}

unint64_t sub_2613C5DAC()
{
  unint64_t result = qword_26A9148E0;
  if (!qword_26A9148E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9148E0);
  }
  return result;
}

unint64_t sub_2613C5E04()
{
  unint64_t result = qword_26A9148E8;
  if (!qword_26A9148E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9148E8);
  }
  return result;
}

uint64_t sub_2613C5E58()
{
  return sub_2613C489C(&qword_26A9148F0, (void (*)(uint64_t))type metadata accessor for Sentencepiece_TrainerSpec);
}

uint64_t sub_2613C5EA0()
{
  return sub_2613C6160(&qword_26A9148F8, &qword_26A914900);
}

uint64_t sub_2613C5EC8(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_2613C5F10()
{
  return sub_2613C489C(&qword_26A914908, (void (*)(uint64_t))type metadata accessor for Sentencepiece_NormalizerSpec);
}

uint64_t sub_2613C5F58()
{
  return sub_2613C489C(&qword_26A914910, (void (*)(uint64_t))type metadata accessor for Sentencepiece_SelfTestData);
}

unint64_t sub_2613C5FA4()
{
  unint64_t result = qword_26A914918;
  if (!qword_26A914918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914918);
  }
  return result;
}

unint64_t sub_2613C5FFC()
{
  unint64_t result = qword_26A914920;
  if (!qword_26A914920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914920);
  }
  return result;
}

unint64_t sub_2613C6054()
{
  unint64_t result = qword_26A914928;
  if (!qword_26A914928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914928);
  }
  return result;
}

uint64_t sub_2613C60A8()
{
  return sub_2613C489C(&qword_26A9148C0, (void (*)(uint64_t))type metadata accessor for Sentencepiece_ModelProto.SentencePiece);
}

uint64_t sub_2613C60F0()
{
  return sub_2613C489C((unint64_t *)&qword_26A914930, (void (*)(uint64_t))type metadata accessor for Sentencepiece_ModelProto);
}

uint64_t sub_2613C6138()
{
  return sub_2613C6160(&qword_26A914938, &qword_26A914940);
}

uint64_t sub_2613C6160(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2613C5EC8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2613C61B0()
{
  return sub_2613C489C(&qword_26A914948, (void (*)(uint64_t))type metadata accessor for Sentencepiece_TrainerSpec);
}

uint64_t sub_2613C61F8()
{
  return sub_2613C489C(&qword_26A914898, (void (*)(uint64_t))type metadata accessor for Sentencepiece_TrainerSpec);
}

uint64_t sub_2613C6240()
{
  return sub_2613C489C(&qword_26A914950, (void (*)(uint64_t))type metadata accessor for Sentencepiece_TrainerSpec);
}

uint64_t sub_2613C6288()
{
  return sub_2613C489C(&qword_26A914958, (void (*)(uint64_t))type metadata accessor for Sentencepiece_NormalizerSpec);
}

uint64_t sub_2613C62D0()
{
  return sub_2613C489C(&qword_26A9148A0, (void (*)(uint64_t))type metadata accessor for Sentencepiece_NormalizerSpec);
}

uint64_t sub_2613C6318()
{
  return sub_2613C489C(&qword_26A914960, (void (*)(uint64_t))type metadata accessor for Sentencepiece_NormalizerSpec);
}

uint64_t sub_2613C6360()
{
  return sub_2613C489C(&qword_26A914968, (void (*)(uint64_t))type metadata accessor for Sentencepiece_SelfTestData);
}

uint64_t sub_2613C63A8()
{
  return sub_2613C489C(&qword_26A9148B0, (void (*)(uint64_t))type metadata accessor for Sentencepiece_SelfTestData);
}

uint64_t sub_2613C63F0()
{
  return sub_2613C489C(&qword_26A914970, (void (*)(uint64_t))type metadata accessor for Sentencepiece_SelfTestData);
}

uint64_t sub_2613C6438()
{
  return sub_2613C489C(&qword_26A914978, (void (*)(uint64_t))type metadata accessor for Sentencepiece_SelfTestData.Sample);
}

uint64_t sub_2613C6480()
{
  return sub_2613C489C(&qword_26A9148A8, (void (*)(uint64_t))type metadata accessor for Sentencepiece_SelfTestData.Sample);
}

uint64_t sub_2613C64C8()
{
  return sub_2613C489C(&qword_26A9148B8, (void (*)(uint64_t))type metadata accessor for Sentencepiece_SelfTestData.Sample);
}

uint64_t sub_2613C6510()
{
  return sub_2613C489C(&qword_26A914980, (void (*)(uint64_t))type metadata accessor for Sentencepiece_SelfTestData.Sample);
}

uint64_t sub_2613C6558()
{
  return sub_2613C489C(&qword_26A914988, (void (*)(uint64_t))type metadata accessor for Sentencepiece_ModelProto);
}

uint64_t sub_2613C65A0()
{
  return sub_2613C489C(&qword_26A9148C8, (void (*)(uint64_t))type metadata accessor for Sentencepiece_ModelProto);
}

uint64_t sub_2613C65E8()
{
  return sub_2613C489C(&qword_26A914990, (void (*)(uint64_t))type metadata accessor for Sentencepiece_ModelProto);
}

uint64_t sub_2613C6630()
{
  return sub_2613C489C(&qword_26A914998, (void (*)(uint64_t))type metadata accessor for Sentencepiece_ModelProto.SentencePiece);
}

uint64_t sub_2613C6678()
{
  return sub_2613C489C(&qword_26A9148D0, (void (*)(uint64_t))type metadata accessor for Sentencepiece_ModelProto.SentencePiece);
}

uint64_t sub_2613C66C0()
{
  return sub_2613C489C(&qword_26A9149A0, (void (*)(uint64_t))type metadata accessor for Sentencepiece_ModelProto.SentencePiece);
}

uint64_t *sub_2613C6708(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_2614D4D68();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_2614D4DB8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  swift_retain();
  return a1;
}

uint64_t sub_2613C6824(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2614D4D68();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_2614D4DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return swift_release();
}

uint64_t sub_2613C68E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2614D4D68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2614D4DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_retain();
  return a1;
}

uint64_t sub_2613C69B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2614D4D68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2614D4DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2613C6A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2614D4D68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2614D4DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_2613C6B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2614D4D68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2614D4DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_2613C6C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2613C6C40);
}

uint64_t sub_2613C6C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2614D4D68();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_2614D4DB8();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_2613C6D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2613C6D68);
}

uint64_t sub_2613C6D68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_2614D4D68();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_2614D4DB8();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_2613C6E78()
{
  uint64_t result = sub_2614D4D68();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2614D4DB8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for Sentencepiece_TrainerSpec.ModelType(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Sentencepiece_TrainerSpec.ModelType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Sentencepiece_TrainerSpec.ModelType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2613C70B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Sentencepiece_TrainerSpec.ModelType()
{
  return &type metadata for Sentencepiece_TrainerSpec.ModelType;
}

void *sub_2613C70F0(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2614D4D68();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_2614D4DB8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (void *)((char *)a1 + v12);
    uint64_t v15 = (void *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    void *v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = (char *)a1 + v13;
    uint64_t v18 = (_OWORD *)((char *)a2 + v13);
    unint64_t v19 = *(void *)((char *)a2 + v13 + 8);
    swift_bridgeObjectRetain();
    if (v19 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v17 = *v18;
    }
    else
    {
      uint64_t v21 = *(void *)v18;
      sub_2613C22A8(v21, v19);
      *(void *)uint64_t v17 = v21;
      *((void *)v17 + 1) = v19;
    }
    uint64_t v22 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *((unsigned char *)a1 + v22) = *((unsigned char *)a2 + v22);
    uint64_t v23 = a3[11];
    *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    char v24 = (void *)((char *)a1 + v23);
    uint64_t v25 = (void *)((char *)a2 + v23);
    uint64_t v26 = v25[1];
    void *v24 = *v25;
    v24[1] = v26;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2613C7284(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2614D4D68();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_2614D4DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = (uint64_t *)(a1 + *(int *)(a2 + 28));
  unint64_t v8 = v7[1];
  if (v8 >> 60 != 15) {
    sub_2613C2314(*v7, v8);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2613C7374(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2614D4D68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2614D4DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v11);
  uint64_t v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  void *v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = a1 + v12;
  uint64_t v17 = (_OWORD *)(a2 + v12);
  unint64_t v18 = *(void *)(a2 + v12 + 8);
  swift_bridgeObjectRetain();
  if (v18 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v16 = *v17;
  }
  else
  {
    uint64_t v19 = *(void *)v17;
    sub_2613C22A8(v19, v18);
    *(void *)uint64_t v16 = v19;
    *(void *)(v16 + 8) = v18;
  }
  uint64_t v20 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  uint64_t v21 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2613C74B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2614D4D68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2614D4DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = (uint64_t *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  unint64_t v17 = *(void *)(a2 + v14 + 8);
  if (*(void *)(a1 + v14 + 8) >> 60 != 15)
  {
    if (v17 >> 60 != 15)
    {
      uint64_t v19 = *v16;
      sub_2613C22A8(v19, v17);
      uint64_t v20 = *v15;
      unint64_t v21 = v15[1];
      uint64_t *v15 = v19;
      v15[1] = v17;
      sub_2613C2314(v20, v21);
      goto LABEL_8;
    }
    sub_2613C7674((uint64_t)v15);
    goto LABEL_6;
  }
  if (v17 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    goto LABEL_8;
  }
  uint64_t v18 = *v16;
  sub_2613C22A8(v18, v17);
  uint64_t *v15 = v18;
  v15[1] = v17;
LABEL_8:
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v22 = a3[11];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  void *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2613C7674(uint64_t a1)
{
  return a1;
}

uint64_t sub_2613C76C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2614D4D68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2614D4DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  return a1;
}

uint64_t sub_2613C77C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2614D4D68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2614D4DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  void *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  unint64_t v17 = (uint64_t *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  unint64_t v19 = *(void *)(a1 + v16 + 8);
  if (v19 >> 60 != 15)
  {
    unint64_t v20 = v18[1];
    if (v20 >> 60 != 15)
    {
      uint64_t v21 = *v17;
      uint64_t *v17 = *v18;
      v17[1] = v20;
      sub_2613C2314(v21, v19);
      goto LABEL_6;
    }
    sub_2613C7674((uint64_t)v17);
  }
  *(_OWORD *)unint64_t v17 = *(_OWORD *)v18;
LABEL_6:
  uint64_t v22 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v22) = *(unsigned char *)(a2 + v22);
  uint64_t v23 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  void *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2613C7928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2613C793C);
}

uint64_t sub_2613C7940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2613C7954);
}

uint64_t sub_2613C7958()
{
  uint64_t result = sub_2614D4D68();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2614D4DB8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2613C7A44(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_2614D4D68();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_2614D4DB8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v7;
}

uint64_t sub_2613C7B80(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_2614D4D68();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_2614D4DB8();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  return v8(v6, v7);
}

void *sub_2613C7C40(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2614D4D68();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_2614D4DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

void *sub_2613C7D30(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2614D4D68();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_2614D4DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

void *sub_2613C7E14(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2614D4D68();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_2614D4DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

void *sub_2613C7EE8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2614D4D68();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_2614D4DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_2613C7FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2613C7FD8);
}

uint64_t sub_2613C7FD8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_2614D4D68();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_2614D4DB8();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_2613C8104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2613C8118);
}

void *sub_2613C8118(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_2614D4D68();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_2614D4DB8();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_2613C8244()
{
  uint64_t result = sub_2614D4D68();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2614D4DB8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2613C831C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2614D4D68();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    void *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2613C840C(uint64_t a1)
{
  uint64_t v2 = sub_2614D4D68();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2613C8494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2614D4D68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2613C8534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2614D4D68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2613C85FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2614D4D68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_2613C8680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2614D4D68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  void *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2613C8728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2613C873C);
}

uint64_t sub_2613C873C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2614D4D68();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_2613C880C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2613C8820);
}

uint64_t sub_2613C8820(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2614D4D68();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t sub_2613C88E0()
{
  uint64_t result = sub_2614D4D68();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_2613C8978(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v25 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_2614D4D68();
    uint64_t v12 = a2;
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v84 = v11;
    v13(v9, v10, v11);
    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)v12 + v14;
    uint64_t v17 = sub_2614D4DB8();
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    uint64_t v19 = a3[7];
    unint64_t v20 = (char *)a1 + v19;
    uint64_t v80 = v12;
    uint64_t v21 = (char *)v12 + v19;
    uint64_t v22 = type metadata accessor for Sentencepiece_TrainerSpec(0);
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v82 = v17;
    uint64_t v83 = v13;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      uint64_t v24 = sub_2613C23AC(&qword_26A914880);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      v13(v20, v21, v84);
      v18(&v20[*(int *)(v22 + 20)], &v21[*(int *)(v22 + 20)], v17);
      *(void *)&v20[*(int *)(v22 + 24)] = *(void *)&v21[*(int *)(v22 + 24)];
      uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56);
      swift_retain();
      v26(v20, 0, 1, v22);
    }
    uint64_t v27 = v18;
    uint64_t v28 = v80;
    uint64_t v29 = a3[8];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)v80 + v29;
    uint64_t v32 = (int *)type metadata accessor for Sentencepiece_NormalizerSpec(0);
    uint64_t v79 = *((void *)v32 - 1);
    uint64_t v81 = *(unsigned int (**)(char *, uint64_t, int *))(v79 + 48);
    if (v81(v31, 1, v32))
    {
      uint64_t v33 = sub_2613C23AC(&qword_26A914888);
      memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      v83(v30, v31, v84);
      v18(&v30[v32[5]], &v31[v32[5]], v17);
      uint64_t v34 = v32[6];
      uint64_t v35 = &v30[v34];
      float v36 = &v31[v34];
      uint64_t v37 = *((void *)v36 + 1);
      *(void *)uint64_t v35 = *(void *)v36;
      *((void *)v35 + 1) = v37;
      uint64_t v38 = v32[7];
      uint64_t v39 = &v30[v38];
      uint64_t v40 = (uint64_t *)&v31[v38];
      unint64_t v41 = *(void *)&v31[v38 + 8];
      swift_bridgeObjectRetain();
      if (v41 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      }
      else
      {
        char v77 = v27;
        uint64_t v42 = *v40;
        sub_2613C22A8(*v40, v41);
        *(void *)uint64_t v39 = v42;
        *((void *)v39 + 1) = v41;
        uint64_t v27 = v77;
      }
      v30[v32[8]] = v31[v32[8]];
      v30[v32[9]] = v31[v32[9]];
      v30[v32[10]] = v31[v32[10]];
      uint64_t v43 = v32[11];
      uint64_t v44 = &v30[v43];
      uint64_t v45 = &v31[v43];
      uint64_t v46 = *((void *)v45 + 1);
      *(void *)uint64_t v44 = *(void *)v45;
      *((void *)v44 + 1) = v46;
      uint64_t v47 = *(void (**)(char *, void, uint64_t, int *))(v79 + 56);
      swift_bridgeObjectRetain();
      v47(v30, 0, 1, v32);
    }
    uint64_t v48 = a3[9];
    char v49 = (void *)((char *)a1 + v48);
    uint64_t v50 = (void *)((char *)v28 + v48);
    uint64_t v51 = type metadata accessor for Sentencepiece_SelfTestData(0);
    uint64_t v52 = *(void *)(v51 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
    {
      uint64_t v53 = sub_2613C23AC(&qword_26A914890);
      memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      void *v49 = *v50;
      uint64_t v54 = *(int *)(v51 + 20);
      uint64_t v78 = v27;
      uint64_t v55 = (char *)v49 + v54;
      uint64_t v56 = (char *)v50 + v54;
      swift_bridgeObjectRetain();
      char v57 = v55;
      uint64_t v27 = v78;
      v83(v57, v56, v84);
      v78((char *)v49 + *(int *)(v51 + 24), (char *)v50 + *(int *)(v51 + 24), v82);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
    }
    uint64_t v25 = a1;
    uint64_t v58 = a3[10];
    uint64_t v59 = (char *)a1 + v58;
    char v60 = (char *)v28 + v58;
    if (v81(v60, 1, v32))
    {
      uint64_t v61 = sub_2613C23AC(&qword_26A914888);
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      v83(v59, v60, v84);
      v27(&v59[v32[5]], &v60[v32[5]], v82);
      uint64_t v62 = v32[6];
      char v63 = &v59[v62];
      uint64_t v64 = &v60[v62];
      uint64_t v65 = *((void *)v64 + 1);
      *(void *)char v63 = *(void *)v64;
      *((void *)v63 + 1) = v65;
      uint64_t v66 = v32[7];
      uint64_t v67 = &v59[v66];
      int v68 = &v60[v66];
      unint64_t v69 = *(void *)&v60[v66 + 8];
      swift_bridgeObjectRetain();
      if (v69 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
      }
      else
      {
        uint64_t v70 = *(void *)v68;
        sub_2613C22A8(v70, v69);
        *(void *)uint64_t v67 = v70;
        *((void *)v67 + 1) = v69;
      }
      v59[v32[8]] = v60[v32[8]];
      v59[v32[9]] = v60[v32[9]];
      v59[v32[10]] = v60[v32[10]];
      uint64_t v71 = v32[11];
      uint64_t v72 = &v59[v71];
      char v73 = &v60[v71];
      uint64_t v74 = *((void *)v73 + 1);
      *(void *)uint64_t v72 = *(void *)v73;
      *((void *)v72 + 1) = v74;
      uint64_t v75 = *(void (**)(char *, void, uint64_t, int *))(v79 + 56);
      swift_bridgeObjectRetain();
      v75(v59, 0, 1, v32);
    }
  }
  return v25;
}

uint64_t sub_2613C9008(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_2614D4D68();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_2614D4DB8();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v23(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = type metadata accessor for Sentencepiece_TrainerSpec(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v6(v9, v5);
    v23(v9 + *(int *)(v10 + 20), v8);
    swift_release();
  }
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = type metadata accessor for Sentencepiece_NormalizerSpec(0);
  uint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
  if (!v13(v11, 1, v12))
  {
    v6(v11, v5);
    v23(v11 + *(int *)(v12 + 20), v8);
    swift_bridgeObjectRelease();
    uint64_t v14 = (uint64_t *)(v11 + *(int *)(v12 + 28));
    unint64_t v15 = v14[1];
    if (v15 >> 60 != 15) {
      sub_2613C2314(*v14, v15);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v16 = v6;
  uint64_t v17 = a1 + a2[9];
  uint64_t v18 = type metadata accessor for Sentencepiece_SelfTestData(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18))
  {
    swift_bridgeObjectRelease();
    v16(v17 + *(int *)(v18 + 20), v5);
    v23(v17 + *(int *)(v18 + 24), v8);
  }
  uint64_t v19 = a1 + a2[10];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(v19, 1, v12);
  if (!result)
  {
    v16(v19, v5);
    v23(v19 + *(int *)(v12 + 20), v8);
    swift_bridgeObjectRelease();
    uint64_t v21 = (uint64_t *)(v19 + *(int *)(v12 + 28));
    unint64_t v22 = v21[1];
    if (v22 >> 60 != 15) {
      sub_2613C2314(*v21, v22);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_2613C9384(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2614D4D68();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  uint64_t v85 = v9;
  uint64_t v79 = v10;
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_2614D4DB8();
  unint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  v15(v12, v13, v14);
  uint64_t v80 = a3;
  uint64_t v16 = a3[7];
  int v86 = a1;
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v83 = a2;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = type metadata accessor for Sentencepiece_TrainerSpec(0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v82 = v14;
  uint64_t v84 = v15;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = sub_2613C23AC(&qword_26A914880);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    v79(v17, v18, v85);
    v15(&v17[*(int *)(v19 + 20)], &v18[*(int *)(v19 + 20)], v14);
    *(void *)&v17[*(int *)(v19 + 24)] = *(void *)&v18[*(int *)(v19 + 24)];
    unint64_t v22 = *(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56);
    swift_retain();
    v22(v17, 0, 1, v19);
  }
  uint64_t v23 = v83;
  uint64_t v24 = v80;
  uint64_t v25 = v80[8];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)v83 + v25;
  uint64_t v28 = (int *)type metadata accessor for Sentencepiece_NormalizerSpec(0);
  uint64_t v29 = *((void *)v28 - 1);
  uint64_t v81 = *(unsigned int (**)(char *, uint64_t, int *))(v29 + 48);
  if (v81(v27, 1, v28))
  {
    uint64_t v30 = sub_2613C23AC(&qword_26A914888);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    uint64_t v31 = v79;
  }
  else
  {
    v79(v26, v27, v85);
    uint64_t v31 = v79;
    v84(&v26[v28[5]], &v27[v28[5]], v14);
    uint64_t v32 = v28[6];
    uint64_t v33 = &v26[v32];
    uint64_t v34 = &v27[v32];
    uint64_t v35 = *((void *)v34 + 1);
    *(void *)uint64_t v33 = *(void *)v34;
    *((void *)v33 + 1) = v35;
    uint64_t v36 = v28[7];
    uint64_t v37 = &v26[v36];
    uint64_t v38 = (uint64_t *)&v27[v36];
    unint64_t v39 = *(void *)&v27[v36 + 8];
    swift_bridgeObjectRetain();
    if (v39 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    }
    else
    {
      uint64_t v40 = v24;
      uint64_t v41 = *v38;
      sub_2613C22A8(*v38, v39);
      *(void *)uint64_t v37 = v41;
      *((void *)v37 + 1) = v39;
      uint64_t v24 = v40;
      uint64_t v31 = v79;
      uint64_t v23 = v83;
    }
    v26[v28[8]] = v27[v28[8]];
    v26[v28[9]] = v27[v28[9]];
    v26[v28[10]] = v27[v28[10]];
    uint64_t v42 = v28[11];
    uint64_t v43 = &v26[v42];
    uint64_t v44 = &v27[v42];
    uint64_t v45 = *((void *)v44 + 1);
    *(void *)uint64_t v43 = *(void *)v44;
    *((void *)v43 + 1) = v45;
    uint64_t v46 = *(void (**)(char *, void, uint64_t, int *))(v29 + 56);
    swift_bridgeObjectRetain();
    v46(v26, 0, 1, v28);
  }
  uint64_t v47 = v24[9];
  uint64_t v48 = (void *)((char *)v86 + v47);
  char v49 = (void *)((char *)v23 + v47);
  uint64_t v50 = type metadata accessor for Sentencepiece_SelfTestData(0);
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v78 = v29;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
  {
    uint64_t v52 = sub_2613C23AC(&qword_26A914890);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
    uint64_t v53 = v84;
  }
  else
  {
    void *v48 = *v49;
    uint64_t v54 = *(int *)(v50 + 20);
    uint64_t v55 = v31;
    uint64_t v56 = (char *)v48 + v54;
    char v57 = (char *)v49 + v54;
    swift_bridgeObjectRetain();
    uint64_t v58 = v57;
    uint64_t v31 = v55;
    v55(v56, v58, v85);
    uint64_t v53 = v84;
    v84((char *)v48 + *(int *)(v50 + 24), (char *)v49 + *(int *)(v50 + 24), v82);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  }
  uint64_t v59 = v24[10];
  char v60 = (char *)v86 + v59;
  uint64_t v61 = (char *)v23 + v59;
  if (v81(v61, 1, v28))
  {
    uint64_t v62 = sub_2613C23AC(&qword_26A914888);
    memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
  }
  else
  {
    v31(v60, v61, v85);
    v53(&v60[v28[5]], &v61[v28[5]], v82);
    uint64_t v63 = v28[6];
    uint64_t v64 = &v60[v63];
    uint64_t v65 = &v61[v63];
    uint64_t v66 = *((void *)v65 + 1);
    *(void *)uint64_t v64 = *(void *)v65;
    *((void *)v64 + 1) = v66;
    uint64_t v67 = v28[7];
    int v68 = &v60[v67];
    unint64_t v69 = &v61[v67];
    unint64_t v70 = *(void *)&v61[v67 + 8];
    swift_bridgeObjectRetain();
    if (v70 >> 60 == 15)
    {
      *(_OWORD *)int v68 = *(_OWORD *)v69;
    }
    else
    {
      uint64_t v71 = *(void *)v69;
      sub_2613C22A8(v71, v70);
      *(void *)int v68 = v71;
      *((void *)v68 + 1) = v70;
    }
    v60[v28[8]] = v61[v28[8]];
    v60[v28[9]] = v61[v28[9]];
    v60[v28[10]] = v61[v28[10]];
    uint64_t v72 = v28[11];
    char v73 = &v60[v72];
    uint64_t v74 = &v61[v72];
    uint64_t v75 = *((void *)v74 + 1);
    *(void *)char v73 = *(void *)v74;
    *((void *)v73 + 1) = v75;
    uint64_t v76 = *(void (**)(char *, void, uint64_t, int *))(v78 + 56);
    swift_bridgeObjectRetain();
    v76(v60, 0, 1, v28);
  }
  return v86;
}

char *sub_2613C99F4(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)v5 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2614D4D68();
  uint64_t v113 = *(void *)(v9 - 8);
  uint64_t v110 = *(void (**)(char *, char *, uint64_t))(v113 + 24);
  v110(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)v5 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_2614D4DB8();
  uint64_t v112 = *(void *)(v13 - 8);
  uint64_t v117 = v13;
  uint64_t v109 = *(void (**)(char *, char *))(v112 + 24);
  v109(v11, v12);
  int v116 = a3;
  uint64_t v14 = a3[7];
  unint64_t v15 = (char *)v5 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for Sentencepiece_TrainerSpec(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v15, v16, v9);
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(&v15[*(int *)(v17 + 20)], &v16[*(int *)(v17 + 20)], v117);
      *(void *)&v15[*(int *)(v17 + 24)] = *(void *)&v16[*(int *)(v17 + 24)];
      unint64_t v22 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
      swift_retain();
      v22(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    sub_2613C24E0((uint64_t)v15, type metadata accessor for Sentencepiece_TrainerSpec);
LABEL_6:
    uint64_t v23 = sub_2613C23AC(&qword_26A914880);
    memcpy(v15, v16, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  v110(v15, v16, v9);
  ((void (*)(char *, char *, uint64_t))v109)(&v15[*(int *)(v17 + 20)], &v16[*(int *)(v17 + 20)], v117);
  *(void *)&v15[*(int *)(v17 + 24)] = *(void *)&v16[*(int *)(v17 + 24)];
  swift_retain();
  swift_release();
LABEL_7:
  uint64_t v24 = v116;
  uint64_t v25 = v116[8];
  uint64_t v26 = (char *)v5 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = (int *)type metadata accessor for Sentencepiece_NormalizerSpec(0);
  uint64_t v29 = *((void *)v28 - 1);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t, int *))(v29 + 48);
  int v31 = v30(v26, 1, v28);
  uint64_t v114 = v30;
  int v32 = v30(v27, 1, v28);
  uint64_t v111 = v9;
  uint64_t v108 = v29;
  if (!v31)
  {
    if (v32)
    {
      sub_2613C24E0((uint64_t)v26, type metadata accessor for Sentencepiece_NormalizerSpec);
      goto LABEL_13;
    }
    uint64_t v41 = v5;
    v110(v26, v27, v9);
    ((void (*)(char *, char *, uint64_t))v109)(&v26[v28[5]], &v27[v28[5]], v117);
    uint64_t v42 = v28[6];
    uint64_t v43 = &v26[v42];
    uint64_t v44 = &v27[v42];
    *(void *)uint64_t v43 = *(void *)v44;
    *((void *)v43 + 1) = *((void *)v44 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v45 = v28[7];
    uint64_t v46 = (uint64_t *)&v26[v45];
    uint64_t v47 = (uint64_t *)&v27[v45];
    unint64_t v48 = *(void *)&v27[v45 + 8];
    if (*(void *)&v26[v45 + 8] >> 60 == 15)
    {
      if (v48 >> 60 != 15)
      {
        uint64_t v49 = *v47;
        sub_2613C22A8(v49, v48);
        uint64_t *v46 = v49;
        v46[1] = v48;
LABEL_24:
        uint64_t v5 = v41;
        v26[v28[8]] = v27[v28[8]];
        v26[v28[9]] = v27[v28[9]];
        v26[v28[10]] = v27[v28[10]];
        uint64_t v59 = v28[11];
        char v60 = &v26[v59];
        uint64_t v61 = &v27[v59];
        *(void *)char v60 = *(void *)v61;
        *((void *)v60 + 1) = *((void *)v61 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v24 = v116;
        goto LABEL_25;
      }
    }
    else
    {
      if (v48 >> 60 != 15)
      {
        uint64_t v56 = *v47;
        sub_2613C22A8(v56, v48);
        uint64_t v57 = *v46;
        unint64_t v58 = v46[1];
        uint64_t *v46 = v56;
        v46[1] = v48;
        sub_2613C2314(v57, v58);
        goto LABEL_24;
      }
      sub_2613C7674((uint64_t)v46);
    }
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
    goto LABEL_24;
  }
  if (v32)
  {
LABEL_13:
    uint64_t v40 = sub_2613C23AC(&qword_26A914888);
    memcpy(v26, v27, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v26, v27, v9);
  (*(void (**)(char *, char *, uint64_t))(v112 + 16))(&v26[v28[5]], &v27[v28[5]], v117);
  uint64_t v33 = v28[6];
  uint64_t v34 = &v26[v33];
  uint64_t v35 = &v27[v33];
  *(void *)uint64_t v34 = *(void *)v35;
  *((void *)v34 + 1) = *((void *)v35 + 1);
  uint64_t v36 = v28[7];
  uint64_t v37 = &v26[v36];
  uint64_t v38 = (uint64_t *)&v27[v36];
  unint64_t v39 = *(void *)&v27[v36 + 8];
  swift_bridgeObjectRetain();
  if (v39 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  }
  else
  {
    uint64_t v50 = v5;
    uint64_t v51 = *v38;
    sub_2613C22A8(*v38, v39);
    *(void *)uint64_t v37 = v51;
    *((void *)v37 + 1) = v39;
    uint64_t v5 = v50;
    uint64_t v24 = v116;
  }
  v26[v28[8]] = v27[v28[8]];
  v26[v28[9]] = v27[v28[9]];
  v26[v28[10]] = v27[v28[10]];
  uint64_t v52 = v28[11];
  uint64_t v53 = &v26[v52];
  uint64_t v54 = &v27[v52];
  *(void *)uint64_t v53 = *(void *)v54;
  *((void *)v53 + 1) = *((void *)v54 + 1);
  uint64_t v55 = *(void (**)(char *, void, uint64_t, int *))(v29 + 56);
  swift_bridgeObjectRetain();
  v55(v26, 0, 1, v28);
LABEL_25:
  uint64_t v62 = v24[9];
  int v115 = (char *)v5;
  uint64_t v63 = (char *)v5 + v62;
  uint64_t v64 = (char *)a2 + v62;
  uint64_t v65 = type metadata accessor for Sentencepiece_SelfTestData(0);
  uint64_t v66 = *(void *)(v65 - 8);
  uint64_t v67 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48);
  int v68 = v67(v63, 1, v65);
  int v69 = v67(v64, 1, v65);
  if (v68)
  {
    if (!v69)
    {
      *(void *)uint64_t v63 = *(void *)v64;
      uint64_t v70 = *(int *)(v65 + 20);
      uint64_t v71 = &v63[v70];
      uint64_t v72 = &v64[v70];
      char v73 = *(void (**)(char *, char *, uint64_t))(v113 + 16);
      swift_bridgeObjectRetain();
      v73(v71, v72, v111);
      uint64_t v24 = v116;
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(&v63[*(int *)(v65 + 24)], &v64[*(int *)(v65 + 24)], v117);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v69)
  {
    sub_2613C24E0((uint64_t)v63, type metadata accessor for Sentencepiece_SelfTestData);
LABEL_30:
    uint64_t v74 = sub_2613C23AC(&qword_26A914890);
    memcpy(v63, v64, *(void *)(*(void *)(v74 - 8) + 64));
    goto LABEL_31;
  }
  *(void *)uint64_t v63 = *(void *)v64;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v110(&v63[*(int *)(v65 + 20)], &v64[*(int *)(v65 + 20)], v111);
  ((void (*)(char *, char *, uint64_t))v109)(&v63[*(int *)(v65 + 24)], &v64[*(int *)(v65 + 24)], v117);
LABEL_31:
  uint64_t v75 = v24[10];
  uint64_t v76 = &v115[v75];
  char v77 = (char *)a2 + v75;
  int v78 = v114(&v115[v75], 1, v28);
  int v79 = v114(v77, 1, v28);
  if (!v78)
  {
    if (v79)
    {
      sub_2613C24E0((uint64_t)v76, type metadata accessor for Sentencepiece_NormalizerSpec);
      goto LABEL_37;
    }
    v110(v76, v77, v111);
    ((void (*)(char *, char *, uint64_t))v109)(&v76[v28[5]], &v77[v28[5]], v117);
    uint64_t v88 = v28[6];
    char v89 = &v76[v88];
    int v90 = &v77[v88];
    *(void *)char v89 = *(void *)v90;
    *((void *)v89 + 1) = *((void *)v90 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v91 = v28[7];
    uint64_t v92 = (uint64_t *)&v76[v91];
    uint64_t v93 = (uint64_t *)&v77[v91];
    unint64_t v94 = *(void *)&v77[v91 + 8];
    if (*(void *)&v76[v91 + 8] >> 60 == 15)
    {
      if (v94 >> 60 != 15)
      {
        uint64_t v95 = *v93;
        sub_2613C22A8(*v93, v94);
        uint64_t *v92 = v95;
        v92[1] = v94;
LABEL_48:
        v76[v28[8]] = v77[v28[8]];
        v76[v28[9]] = v77[v28[9]];
        v76[v28[10]] = v77[v28[10]];
        uint64_t v104 = v28[11];
        uint64_t v105 = &v76[v104];
        char v106 = &v77[v104];
        *(void *)uint64_t v105 = *(void *)v106;
        *((void *)v105 + 1) = *((void *)v106 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return v115;
      }
    }
    else
    {
      if (v94 >> 60 != 15)
      {
        uint64_t v101 = *v93;
        sub_2613C22A8(*v93, v94);
        uint64_t v102 = *v92;
        unint64_t v103 = v92[1];
        uint64_t *v92 = v101;
        v92[1] = v94;
        sub_2613C2314(v102, v103);
        goto LABEL_48;
      }
      sub_2613C7674((uint64_t)v92);
    }
    *(_OWORD *)uint64_t v92 = *(_OWORD *)v93;
    goto LABEL_48;
  }
  if (v79)
  {
LABEL_37:
    uint64_t v87 = sub_2613C23AC(&qword_26A914888);
    memcpy(v76, v77, *(void *)(*(void *)(v87 - 8) + 64));
    return v115;
  }
  (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v76, v77, v111);
  (*(void (**)(char *, char *, uint64_t))(v112 + 16))(&v76[v28[5]], &v77[v28[5]], v117);
  uint64_t v80 = v28[6];
  uint64_t v81 = &v76[v80];
  uint64_t v82 = &v77[v80];
  *(void *)uint64_t v81 = *(void *)v82;
  *((void *)v81 + 1) = *((void *)v82 + 1);
  uint64_t v83 = v28[7];
  uint64_t v84 = &v76[v83];
  uint64_t v85 = &v77[v83];
  unint64_t v86 = *(void *)&v77[v83 + 8];
  swift_bridgeObjectRetain();
  if (v86 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v84 = *(_OWORD *)v85;
  }
  else
  {
    uint64_t v96 = *(void *)v85;
    sub_2613C22A8(v96, v86);
    *(void *)uint64_t v84 = v96;
    *((void *)v84 + 1) = v86;
  }
  v76[v28[8]] = v77[v28[8]];
  v76[v28[9]] = v77[v28[9]];
  v76[v28[10]] = v77[v28[10]];
  uint64_t v97 = v28[11];
  char v98 = &v76[v97];
  uint64_t v99 = &v77[v97];
  *(void *)char v98 = *(void *)v99;
  *((void *)v98 + 1) = *((void *)v99 + 1);
  uint64_t v100 = *(void (**)(char *, void, uint64_t, int *))(v108 + 56);
  swift_bridgeObjectRetain();
  v100(v76, 0, 1, v28);
  return v115;
}

void *sub_2613CA4F8(void *a1, char *a2, int *a3)
{
  *a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_2614D4D68();
  uint64_t v10 = *(void (**)(char *, char *))(*(void *)(v9 - 8) + 32);
  uint64_t v49 = v9;
  v10(v7, v8);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_2614D4DB8();
  unint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  uint64_t v46 = a1;
  uint64_t v47 = a3;
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v44 = a2;
  uint64_t v18 = &a2[v16];
  uint64_t v19 = type metadata accessor for Sentencepiece_TrainerSpec(0);
  uint64_t v20 = *(void *)(v19 - 8);
  unint64_t v48 = (void (*)(char *, char *, uint64_t))v10;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = sub_2613C23AC(&qword_26A914880);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    uint64_t v22 = v49;
  }
  else
  {
    uint64_t v22 = v49;
    ((void (*)(char *, char *, uint64_t))v10)(v17, v18, v49);
    v15(&v17[*(int *)(v19 + 20)], &v18[*(int *)(v19 + 20)], v14);
    *(void *)&v17[*(int *)(v19 + 24)] = *(void *)&v18[*(int *)(v19 + 24)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v23 = v47[8];
  uint64_t v24 = (char *)v46 + v23;
  uint64_t v25 = &v44[v23];
  uint64_t v26 = (int *)type metadata accessor for Sentencepiece_NormalizerSpec(0);
  uint64_t v27 = *((void *)v26 - 1);
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, int *))(v27 + 48);
  uint64_t v45 = v27;
  if (v28(v25, 1, v26))
  {
    uint64_t v29 = sub_2613C23AC(&qword_26A914888);
    memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    v48(v24, v25, v22);
    v15(&v24[v26[5]], &v25[v26[5]], v14);
    *(_OWORD *)&v24[v26[6]] = *(_OWORD *)&v25[v26[6]];
    *(_OWORD *)&v24[v26[7]] = *(_OWORD *)&v25[v26[7]];
    v24[v26[8]] = v25[v26[8]];
    v24[v26[9]] = v25[v26[9]];
    v24[v26[10]] = v25[v26[10]];
    *(_OWORD *)&v24[v26[11]] = *(_OWORD *)&v25[v26[11]];
    (*(void (**)(char *, void, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
  }
  uint64_t v30 = v47[9];
  int v31 = (void *)((char *)v46 + v30);
  int v32 = &v44[v30];
  uint64_t v33 = type metadata accessor for Sentencepiece_SelfTestData(0);
  uint64_t v34 = *(void *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    uint64_t v35 = sub_2613C23AC(&qword_26A914890);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    uint64_t v36 = v14;
  }
  else
  {
    void *v31 = *(void *)v32;
    v48((char *)v31 + *(int *)(v33 + 20), &v32[*(int *)(v33 + 20)], v49);
    uint64_t v37 = *(int *)(v33 + 24);
    uint64_t v38 = &v32[v37];
    uint64_t v36 = v14;
    v15((char *)v31 + v37, v38, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  uint64_t v39 = v47[10];
  uint64_t v40 = (char *)v46 + v39;
  uint64_t v41 = &v44[v39];
  if (v28(&v44[v39], 1, v26))
  {
    uint64_t v42 = sub_2613C23AC(&qword_26A914888);
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    v48(v40, v41, v49);
    v15(&v40[v26[5]], &v41[v26[5]], v36);
    *(_OWORD *)&v40[v26[6]] = *(_OWORD *)&v41[v26[6]];
    *(_OWORD *)&v40[v26[7]] = *(_OWORD *)&v41[v26[7]];
    v40[v26[8]] = v41[v26[8]];
    v40[v26[9]] = v41[v26[9]];
    v40[v26[10]] = v41[v26[10]];
    *(_OWORD *)&v40[v26[11]] = *(_OWORD *)&v41[v26[11]];
    (*(void (**)(char *, void, uint64_t, int *))(v45 + 56))(v40, 0, 1, v26);
  }
  return v46;
}

char *sub_2613CAA7C(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2614D4D68();
  uint64_t v87 = *(void *)(v9 - 8);
  uint64_t v85 = *(void (**)(char *, char *, uint64_t))(v87 + 40);
  v85(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_2614D4DB8();
  uint64_t v86 = *(void *)(v13 - 8);
  uint64_t v91 = v13;
  uint64_t v84 = *(void (**)(char *, char *))(v86 + 40);
  v84(v11, v12);
  uint64_t v92 = a3;
  uint64_t v14 = a3[7];
  unint64_t v15 = &a1[v14];
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for Sentencepiece_TrainerSpec(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v15, v16, v9);
      (*(void (**)(char *, char *, uint64_t))(v86 + 32))(&v15[*(int *)(v17 + 20)], &v16[*(int *)(v17 + 20)], v91);
      *(void *)&v15[*(int *)(v17 + 24)] = *(void *)&v16[*(int *)(v17 + 24)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    sub_2613C24E0((uint64_t)v15, type metadata accessor for Sentencepiece_TrainerSpec);
LABEL_6:
    uint64_t v22 = sub_2613C23AC(&qword_26A914880);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v85(v15, v16, v9);
  ((void (*)(char *, char *, uint64_t))v84)(&v15[*(int *)(v17 + 20)], &v16[*(int *)(v17 + 20)], v91);
  *(void *)&v15[*(int *)(v17 + 24)] = *(void *)&v16[*(int *)(v17 + 24)];
  swift_release();
LABEL_7:
  uint64_t v23 = v92[8];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = (int *)type metadata accessor for Sentencepiece_NormalizerSpec(0);
  uint64_t v27 = *((void *)v26 - 1);
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, int *))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  uint64_t v88 = v28;
  int v30 = v28(v25, 1, v26);
  uint64_t v89 = v9;
  uint64_t v83 = v27;
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v24, v25, v9);
      (*(void (**)(char *, char *, uint64_t))(v86 + 32))(&v24[v26[5]], &v25[v26[5]], v91);
      *(_OWORD *)&v24[v26[6]] = *(_OWORD *)&v25[v26[6]];
      *(_OWORD *)&v24[v26[7]] = *(_OWORD *)&v25[v26[7]];
      v24[v26[8]] = v25[v26[8]];
      v24[v26[9]] = v25[v26[9]];
      v24[v26[10]] = v25[v26[10]];
      *(_OWORD *)&v24[v26[11]] = *(_OWORD *)&v25[v26[11]];
      (*(void (**)(char *, void, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
LABEL_13:
      int v32 = v92;
      goto LABEL_14;
    }
LABEL_12:
    uint64_t v31 = sub_2613C23AC(&qword_26A914888);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  if (v30)
  {
    sub_2613C24E0((uint64_t)v24, type metadata accessor for Sentencepiece_NormalizerSpec);
    goto LABEL_12;
  }
  v85(v24, v25, v9);
  ((void (*)(char *, char *, uint64_t))v84)(&v24[v26[5]], &v25[v26[5]], v91);
  uint64_t v51 = v26[6];
  uint64_t v52 = &v24[v51];
  uint64_t v53 = (uint64_t *)&v25[v51];
  uint64_t v55 = *v53;
  uint64_t v54 = v53[1];
  *(void *)uint64_t v52 = v55;
  *((void *)v52 + 1) = v54;
  swift_bridgeObjectRelease();
  uint64_t v56 = v26[7];
  uint64_t v57 = (uint64_t)&v24[v56];
  unint64_t v58 = &v25[v56];
  unint64_t v59 = *(void *)&v24[v56 + 8];
  if (v59 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
    int v32 = v92;
  }
  else
  {
    unint64_t v70 = *((void *)v58 + 1);
    int v32 = v92;
    if (v70 >> 60 == 15)
    {
      sub_2613C7674(v57);
      *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
    }
    else
    {
      uint64_t v77 = *(void *)v57;
      *(void *)uint64_t v57 = *(void *)v58;
      *(void *)(v57 + 8) = v70;
      sub_2613C2314(v77, v59);
    }
  }
  v24[v26[8]] = v25[v26[8]];
  v24[v26[9]] = v25[v26[9]];
  v24[v26[10]] = v25[v26[10]];
  uint64_t v78 = v26[11];
  int v79 = &v24[v78];
  uint64_t v80 = (uint64_t *)&v25[v78];
  uint64_t v82 = *v80;
  uint64_t v81 = v80[1];
  *(void *)int v79 = v82;
  *((void *)v79 + 1) = v81;
  swift_bridgeObjectRelease();
LABEL_14:
  uint64_t v33 = v32[9];
  int v90 = a1;
  uint64_t v34 = &a1[v33];
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = type metadata accessor for Sentencepiece_SelfTestData(0);
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  int v39 = v38(v34, 1, v36);
  int v40 = v38(v35, 1, v36);
  if (v39)
  {
    if (!v40)
    {
      *(void *)uint64_t v34 = *(void *)v35;
      uint64_t v41 = v89;
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(&v34[*(int *)(v36 + 20)], &v35[*(int *)(v36 + 20)], v89);
      (*(void (**)(char *, char *, uint64_t))(v86 + 32))(&v34[*(int *)(v36 + 24)], &v35[*(int *)(v36 + 24)], v91);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      uint64_t v42 = v90;
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v40)
  {
    sub_2613C24E0((uint64_t)v34, type metadata accessor for Sentencepiece_SelfTestData);
LABEL_19:
    uint64_t v43 = sub_2613C23AC(&qword_26A914890);
    memcpy(v34, v35, *(void *)(*(void *)(v43 - 8) + 64));
    uint64_t v41 = v89;
    uint64_t v42 = v90;
    goto LABEL_20;
  }
  *(void *)uint64_t v34 = *(void *)v35;
  swift_bridgeObjectRelease();
  uint64_t v41 = v89;
  v85(&v34[*(int *)(v36 + 20)], &v35[*(int *)(v36 + 20)], v89);
  ((void (*)(char *, char *, uint64_t))v84)(&v34[*(int *)(v36 + 24)], &v35[*(int *)(v36 + 24)], v91);
  uint64_t v42 = v90;
LABEL_20:
  uint64_t v44 = v92[10];
  uint64_t v45 = &v42[v44];
  uint64_t v46 = (char *)a2 + v44;
  int v47 = v88(&v42[v44], 1, v26);
  int v48 = v88(v46, 1, v26);
  if (!v47)
  {
    if (v48)
    {
      sub_2613C24E0((uint64_t)v45, type metadata accessor for Sentencepiece_NormalizerSpec);
      goto LABEL_25;
    }
    v85(v45, v46, v41);
    ((void (*)(char *, char *, uint64_t))v84)(&v45[v26[5]], &v46[v26[5]], v91);
    uint64_t v60 = v26[6];
    uint64_t v61 = &v45[v60];
    uint64_t v62 = (uint64_t *)&v46[v60];
    uint64_t v64 = *v62;
    uint64_t v63 = v62[1];
    *(void *)uint64_t v61 = v64;
    *((void *)v61 + 1) = v63;
    swift_bridgeObjectRelease();
    uint64_t v65 = v26[7];
    uint64_t v66 = (uint64_t *)&v45[v65];
    uint64_t v67 = (uint64_t *)&v46[v65];
    unint64_t v68 = *(void *)&v45[v65 + 8];
    if (v68 >> 60 != 15)
    {
      unint64_t v69 = v67[1];
      if (v69 >> 60 != 15)
      {
        uint64_t v71 = *v66;
        uint64_t *v66 = *v67;
        v66[1] = v69;
        sub_2613C2314(v71, v68);
        goto LABEL_38;
      }
      sub_2613C7674((uint64_t)v66);
    }
    *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
LABEL_38:
    v45[v26[8]] = v46[v26[8]];
    v45[v26[9]] = v46[v26[9]];
    v45[v26[10]] = v46[v26[10]];
    uint64_t v72 = v26[11];
    char v73 = &v45[v72];
    uint64_t v74 = (uint64_t *)&v46[v72];
    uint64_t v76 = *v74;
    uint64_t v75 = v74[1];
    *(void *)char v73 = v76;
    *((void *)v73 + 1) = v75;
    swift_bridgeObjectRelease();
    return v42;
  }
  if (v48)
  {
LABEL_25:
    uint64_t v49 = sub_2613C23AC(&qword_26A914888);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
    return v42;
  }
  (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v45, v46, v41);
  (*(void (**)(char *, char *, uint64_t))(v86 + 32))(&v45[v26[5]], &v46[v26[5]], v91);
  *(_OWORD *)&v45[v26[6]] = *(_OWORD *)&v46[v26[6]];
  *(_OWORD *)&v45[v26[7]] = *(_OWORD *)&v46[v26[7]];
  v45[v26[8]] = v46[v26[8]];
  v45[v26[9]] = v46[v26[9]];
  v45[v26[10]] = v46[v26[10]];
  *(_OWORD *)&v45[v26[11]] = *(_OWORD *)&v46[v26[11]];
  (*(void (**)(char *, void, uint64_t, int *))(v83 + 56))(v45, 0, 1, v26);
  return v42;
}

uint64_t sub_2613CB404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2613CB418);
}

uint64_t sub_2613CB418(char *a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_2614D4D68();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_13:
    unint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    return v15(&a1[v11], a2, v9);
  }
  uint64_t v12 = sub_2614D4DB8();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_13;
  }
  uint64_t v13 = sub_2613C23AC(&qword_26A914880);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_13;
  }
  uint64_t v14 = sub_2613C23AC(&qword_26A914888);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a3[8];
    goto LABEL_13;
  }
  uint64_t v16 = sub_2613C23AC(&qword_26A914890);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = &a1[a3[9]];
  return v17(v19, a2, v18);
}

uint64_t sub_2613CB634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2613CB648);
}

char *sub_2613CB648(char *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_2614D4D68();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_11:
    unint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (char *)v15(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = sub_2614D4DB8();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_11;
  }
  uint64_t v13 = sub_2613C23AC(&qword_26A914880);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_11;
  }
  uint64_t v14 = sub_2613C23AC(&qword_26A914888);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a3)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a4[8];
    goto LABEL_11;
  }
  uint64_t v16 = sub_2613C23AC(&qword_26A914890);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = &v5[a4[9]];
  return (char *)v17(v19, a2, a2, v18);
}

void sub_2613CB864()
{
  sub_2614D4D68();
  if (v0 <= 0x3F)
  {
    sub_2614D4DB8();
    if (v1 <= 0x3F)
    {
      sub_2613CBA44(319, &qword_26A9149A8, (void (*)(uint64_t))type metadata accessor for Sentencepiece_TrainerSpec);
      if (v2 <= 0x3F)
      {
        sub_2613CBA44(319, &qword_26A9149B0, (void (*)(uint64_t))type metadata accessor for Sentencepiece_NormalizerSpec);
        if (v3 <= 0x3F)
        {
          sub_2613CBA44(319, &qword_26A9149B8, (void (*)(uint64_t))type metadata accessor for Sentencepiece_SelfTestData);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_2613CBA44(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2614D5AD8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_2613CBA98(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2614D4D68();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_2614D4DB8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (void *)((char *)a1 + v12);
    unint64_t v15 = (void *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    void *v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = (char *)a1 + v13;
    uint64_t v18 = (char *)a2 + v13;
    v17[4] = v18[4];
    *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2613CBBE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2614D4D68();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_2614D4DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2613CBCA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2614D4D68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2614D4DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v11);
  uint64_t v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  void *v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  *(unsigned char *)(v16 + 4) = *(unsigned char *)(v17 + 4);
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2613CBDA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2614D4D68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2614D4DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (int *)(a2 + v14);
  int v17 = *v16;
  *(unsigned char *)(v15 + 4) = *((unsigned char *)v16 + 4);
  *(_DWORD *)uint64_t v15 = v17;
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_2613CBEB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2614D4D68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2614D4DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)(v12 + 4) = *(unsigned char *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_2613CBFA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2614D4D68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2614D4DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  void *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(unsigned char *)(v18 + 4) = *(unsigned char *)(v19 + 4);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  return a1;
}

uint64_t sub_2613CC0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2613CC0B8);
}

uint64_t sub_2613CC0BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2614D4D68();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_2614D4DB8();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  int v15 = v14 - 1;
  if (v15 < 0) {
    int v15 = -1;
  }
  return (v15 + 1);
}

uint64_t sub_2613CC1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2613CC1F4);
}

uint64_t sub_2613CC1F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_2614D4D68();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_2614D4DB8();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = a2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_2613CC30C()
{
  uint64_t result = sub_2614D4D68();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2614D4DB8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Sentencepiece_ModelProto.SentencePiece.TypeEnum(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Sentencepiece_ModelProto.SentencePiece.TypeEnum(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2613CC54CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

uint64_t sub_2613CC574(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_2613CC57C(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Sentencepiece_ModelProto.SentencePiece.TypeEnum()
{
  return &type metadata for Sentencepiece_ModelProto.SentencePiece.TypeEnum;
}

unint64_t sub_2613CC594()
{
  unint64_t result = qword_26A9149F0;
  if (!qword_26A9149F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9149F0);
  }
  return result;
}

unint64_t sub_2613CC5E8()
{
  unint64_t result = qword_26A9149F8;
  if (!qword_26A9149F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9149F8);
  }
  return result;
}

uint64_t *sub_2613CC63C(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_2613CC6A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_2613C23AC(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_2613CC6FC(uint64_t *a1)
{
  unint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_2613CC760(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_2613CC788()
{
  unint64_t v1 = *v0;
  uint64_t v2 = *((void *)*v0 + 2);
  if (v2)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v1 = sub_2613D8E30((uint64_t)v1);
    }
    bzero(v1 + 32, 4 * v2);
    *unint64_t v0 = v1;
  }
}

uint64_t sub_2613CC7E4()
{
  return sub_261473274((uint64_t (*)(void))sub_2613D8E44);
}

uint64_t sub_2613CC874()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2613CC8C0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613CC914())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CC968()
{
  swift_beginAccess();
  return *(void *)(v0 + 32);
}

uint64_t sub_2613CC99C(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*sub_2613CC9DC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CCA30()
{
  swift_beginAccess();
  return *(void *)(v0 + 40);
}

uint64_t sub_2613CCA64(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*sub_2613CCAA4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CCAF8()
{
  swift_beginAccess();
  return *(void *)(v0 + 48);
}

uint64_t sub_2613CCB2C(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*sub_2613CCB6C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CCBC0()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2613CCC0C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613CCC60())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CCCB4()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2613CCD00(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613CCD54())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CCDA8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2613CCDE0(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 88) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613CCE28())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CCE7C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2613CCEB4(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 96) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613CCEFC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CCF50()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2613CCF9C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613CCFF0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CD044()
{
  swift_beginAccess();
  return *(void *)(v0 + 120);
}

uint64_t sub_2613CD078(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 120) = a1;
  return result;
}

uint64_t (*sub_2613CD0B8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CD10C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2613CD158(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613CD1AC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CD200()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2613CD24C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 144) = a1;
  *(void *)(v2 + 152) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613CD2A0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CD2F4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2613CD32C(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 160) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613CD374())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CD3C8()
{
  swift_beginAccess();
  return *(void *)(v0 + 168);
}

uint64_t sub_2613CD3FC(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 168) = a1;
  return result;
}

uint64_t (*sub_2613CD43C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CD490()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2613CD4DC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 176) = a1;
  *(void *)(v2 + 184) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613CD530())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CD584()
{
  swift_beginAccess();
  return *(void *)(v0 + 192);
}

uint64_t sub_2613CD5BC(uint64_t a1, char a2)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v2 + 192) = a1;
  *(unsigned char *)(v2 + 200) = a2 & 1;
  return result;
}

uint64_t (*sub_2613CD610())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CD664()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 208);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2613CD6B0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 208) = a1;
  *(void *)(v2 + 216) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613CD704())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CD758()
{
  swift_beginAccess();
  return *(void *)(v0 + 224);
}

uint64_t sub_2613CD790(uint64_t a1, char a2)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v2 + 224) = a1;
  *(unsigned char *)(v2 + 232) = a2 & 1;
  return result;
}

uint64_t (*sub_2613CD7E4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CD838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16))
  {
    long long v12 = 0u;
    long long v13 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2613D8F00(a1, a2);
  if ((v7 & 1) == 0)
  {
    long long v12 = 0u;
    long long v13 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_2613DD768(*(void *)(a3 + 56) + 32 * v6, (uint64_t)&v12);
  swift_bridgeObjectRelease();
  if (!*((void *)&v13 + 1))
  {
LABEL_8:
    sub_2613DD864((uint64_t)&v12);
    goto LABEL_9;
  }
  if (swift_dynamicCast()) {
    return v11;
  }
LABEL_9:
  *(void *)&long long v12 = 0;
  *((void *)&v12 + 1) = 0xE000000000000000;
  sub_2614D5C38();
  swift_bridgeObjectRelease();
  *(void *)&long long v12 = 0x742064656C696146;
  *((void *)&v12 + 1) = 0xEF2064616572206FLL;
  sub_2614D54D8();
  sub_2614D54D8();
  long long v9 = v12;
  sub_2613DC2B8();
  swift_allocError();
  *uint64_t v10 = v9;
  return swift_willThrow();
}

void *sub_2613CD9B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16))
  {
    long long v15 = 0u;
    long long v16 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2613D8F00(a1, a2);
  if ((v7 & 1) == 0)
  {
    long long v15 = 0u;
    long long v16 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_2613DD768(*(void *)(a3 + 56) + 32 * v6, (uint64_t)&v15);
  swift_bridgeObjectRelease();
  if (!*((void *)&v16 + 1))
  {
LABEL_8:
    sub_2613DD864((uint64_t)&v15);
LABEL_9:
    if (*(void *)(a3 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v9 = sub_2613D8F00(a1, a2);
      if (v10)
      {
        sub_2613DD768(*(void *)(a3 + 56) + 32 * v9, (uint64_t)&v15);
      }
      else
      {
        long long v15 = 0u;
        long long v16 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v16 + 1))
      {
        sub_2613C23AC(&qword_26A914A70);
        if (swift_dynamicCast())
        {
          if (v14[2] == 2 && (v14[4] == a1 && v14[5] == a2 || (sub_2614D5FB8() & 1) != 0))
          {
            uint64_t v8 = v14[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            return (void *)v8;
          }
          swift_bridgeObjectRelease();
        }
LABEL_22:
        *(void *)&long long v15 = 0;
        *((void *)&v15 + 1) = 0xE000000000000000;
        sub_2614D5C38();
        swift_bridgeObjectRelease();
        *(void *)&long long v15 = 0x742064656C696146;
        *((void *)&v15 + 1) = 0xEF2064616572206FLL;
        sub_2614D54D8();
        sub_2614D54D8();
        uint64_t v8 = *((void *)&v15 + 1);
        uint64_t v11 = v15;
        sub_2613DC2B8();
        swift_allocError();
        void *v12 = v11;
        v12[1] = v8;
        swift_willThrow();
        return (void *)v8;
      }
    }
    else
    {
      long long v15 = 0u;
      long long v16 = 0u;
    }
    sub_2613DD864((uint64_t)&v15);
    goto LABEL_22;
  }
  if (!swift_dynamicCast()) {
    goto LABEL_9;
  }
  return v14;
}

uint64_t sub_2613CDC1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16))
  {
    long long v25 = 0u;
    long long v26 = 0u;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2613D8F00(a1, a2);
  if ((v7 & 1) == 0)
  {
    long long v25 = 0u;
    long long v26 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  sub_2613DD768(*(void *)(a3 + 56) + 32 * v6, (uint64_t)&v25);
  swift_bridgeObjectRelease();
  if (!*((void *)&v26 + 1))
  {
LABEL_13:
    sub_2613DD864((uint64_t)&v25);
    goto LABEL_14;
  }
  sub_2613C23AC(&qword_26A914B00);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_14:
    *(void *)&long long v25 = 0;
    *((void *)&v25 + 1) = 0xE000000000000000;
    sub_2614D5C38();
    swift_bridgeObjectRelease();
    *(void *)&long long v25 = 0x742064656C696146;
    *((void *)&v25 + 1) = 0xEF2064616572206FLL;
    sub_2614D54D8();
    sub_2614D54D8();
    uint64_t v22 = *((void *)&v25 + 1);
    uint64_t v10 = v25;
    sub_2613DC2B8();
    swift_allocError();
    void *v23 = v10;
    v23[1] = v22;
    swift_willThrow();
    return v10;
  }
  uint64_t v8 = v27;
  int64_t v9 = *(void *)(v27 + 16);
  if (v9)
  {
    *(void *)&long long v25 = MEMORY[0x263F8EE78];
    sub_2613D913C(0, v9, 0);
    uint64_t v10 = v25;
    uint64_t v11 = (uint64_t *)(v8 + 56);
    do
    {
      uint64_t v12 = *(v11 - 3);
      uint64_t v13 = *(v11 - 2);
      uint64_t v14 = *(v11 - 1);
      uint64_t v15 = *v11;
      swift_bridgeObjectRetain();
      uint64_t v16 = MEMORY[0x263E36570](v12, v13, v14, v15);
      uint64_t v18 = v17;
      swift_bridgeObjectRelease();
      *(void *)&long long v25 = v10;
      unint64_t v20 = *(void *)(v10 + 16);
      unint64_t v19 = *(void *)(v10 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_2613D913C(v19 > 1, v20 + 1, 1);
        uint64_t v10 = v25;
      }
      *(void *)(v10 + 16) = v20 + 1;
      uint64_t v21 = v10 + 16 * v20;
      *(void *)(v21 + 32) = v16;
      *(void *)(v21 + 40) = v18;
      v11 += 4;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v10;
}

uint64_t sub_2613CDE88(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (!v4) {
    return v5;
  }
  uint64_t v6 = a2;
  uint64_t v7 = result;
  uint64_t v28 = MEMORY[0x263F8EE78];
  uint64_t result = sub_2613D919C(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = v28;
    if (v6 <= v7) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = v6;
    }
    uint64_t v23 = v8;
    uint64_t v24 = v6;
    uint64_t v9 = v7;
    while (v6 != v9)
    {
      if (v7 < 0) {
        goto LABEL_35;
      }
      if ((unint64_t)v9 >= *(void *)(*(void *)a3 + 16)) {
        goto LABEL_36;
      }
      uint64_t v10 = *(void *)(*(void *)(*(void *)a3 + 8 * v9 + 32) + 16);
      uint64_t v11 = v9 * v10;
      if ((unsigned __int128)(v9 * (__int128)v10) >> 64 != (v9 * v10) >> 63) {
        goto LABEL_37;
      }
      uint64_t v12 = v11 + v10;
      if (__OFADD__(v11, v10)) {
        goto LABEL_38;
      }
      uint64_t v13 = *(void *)(*(void *)(*(void *)a3 + 8 * v9 + 32) + 16);
      if (v12 < v11) {
        goto LABEL_39;
      }
      if (v11 < 0) {
        goto LABEL_40;
      }
      uint64_t v14 = *a4;
      unint64_t v15 = *(void *)(*a4 + 16);
      if (v15 < v11 || (uint64_t)v15 < v12) {
        goto LABEL_41;
      }
      uint64_t v17 = v7;
      sub_2614D5FE8();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v18 = swift_dynamicCastClass();
      if (!v18)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = MEMORY[0x263F8EE78];
      }
      uint64_t v19 = *(void *)(v18 + 16);
      swift_release();
      if (v19 == v13)
      {
        uint64_t v20 = swift_dynamicCastClass();
        if (!v20)
        {
          swift_bridgeObjectRelease();
          uint64_t v20 = MEMORY[0x263F8EE78];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = sub_2613DAF94(v14, v14 + 32, v11, (2 * v12) | 1);
      }
      uint64_t result = swift_bridgeObjectRelease();
      if (v27)
      {
        swift_release();
        return v5;
      }
      unint64_t v22 = *(void *)(v28 + 16);
      unint64_t v21 = *(void *)(v28 + 24);
      if (v22 >= v21 >> 1) {
        uint64_t result = sub_2613D919C(v21 > 1, v22 + 1, 1);
      }
      *(void *)(v28 + 16) = v22 + 1;
      *(void *)(v28 + 8 * v22 + 32) = v20;
      uint64_t v7 = v17;
      uint64_t v6 = v24;
      if (v24 < v7) {
        goto LABEL_42;
      }
      if (v23 == v9) {
        goto LABEL_43;
      }
      if (v24 == ++v9) {
        return v5;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_2613CE0E0(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)sub_2614D5C98();
      }
      uint64_t v7 = (uint64_t)sub_2613D985C(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        unint64_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              uint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = (uint64_t)sub_2613D9774(result, a2, 10);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

BOOL sub_2613CE330()
{
  (*(void (**)(void))(*(void *)v0 + 560))();
  uint64_t v2 = v1;
  uint64_t v3 = swift_bridgeObjectRelease();
  if (!v2) {
    return 0;
  }
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)v0 + 584))(v3);
  if (v5) {
    return 0;
  }
  (*(void (**)(uint64_t))(*(void *)v0 + 608))(v4);
  uint64_t v7 = v6;
  uint64_t v8 = swift_bridgeObjectRelease();
  if (!v7) {
    return 0;
  }
  (*(void (**)(uint64_t))(*(void *)v0 + 632))(v8);
  return (v9 & 1) == 0;
}

unint64_t sub_2613CE430(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6172467475706E69;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x65764F656D617266;
      break;
    case 4:
      unint64_t result = 1802723693;
      break;
    case 5:
      unint64_t result = 0x6465626D45736F70;
      break;
    case 6:
      unint64_t result = 0x6168536574617473;
      break;
    case 7:
      unint64_t result = 0x6174537475706E69;
      break;
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    case 9:
      unint64_t result = 0x6D69447475706E69;
      break;
    case 10:
      unint64_t result = 0x656D726F666E6F63;
      break;
    case 11:
      unint64_t result = 0x6574736F50435463;
      break;
    case 12:
      unint64_t result = 0x745374757074756FLL;
      break;
    case 13:
      unint64_t result = 0x694474757074756FLL;
      break;
    case 14:
      unint64_t result = 0xD000000000000011;
      break;
    case 15:
      unint64_t result = 0xD000000000000013;
      break;
    case 16:
      unint64_t result = 0xD000000000000014;
      break;
    case 17:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      unint64_t result = 0x6165467475706E69;
      break;
  }
  return result;
}

uint64_t sub_2613CE690()
{
  return sub_2614D60B8();
}

uint64_t sub_2613CE6D8()
{
  return sub_2614D6098();
}

uint64_t sub_2613CE704()
{
  return sub_2614D60B8();
}

unint64_t sub_2613CE748()
{
  return sub_2613CE430(*v0);
}

uint64_t sub_2613CE750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2613DC410(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2613CE778()
{
  return 0;
}

void sub_2613CE784(unsigned char *a1@<X8>)
{
  *a1 = 18;
}

uint64_t sub_2613CE790(uint64_t a1)
{
  unint64_t v2 = sub_2613DBF68();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2613CE7CC(uint64_t a1)
{
  unint64_t v2 = sub_2613DBF68();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2613CE808()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2613CE878()
{
  sub_2613CE808();
  return swift_deallocClassInstance();
}

uint64_t sub_2613CE8AC(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_2613CE8FC(a1);
  return v2;
}

void *sub_2613CE8FC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2613C23AC(&qword_26A914A48);
  uint64_t v76 = *(void *)(v4 - 8);
  uint64_t v77 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v99 = (char *)v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v2 + 16) = 0;
  uint64_t v74 = v2 + 16;
  *(_OWORD *)(v2 + 32) = 0u;
  char v73 = (uint64_t *)(v2 + 32);
  *(_OWORD *)(v2 + 48) = 0u;
  uint64_t v72 = (uint64_t *)(v2 + 48);
  *(void *)(v2 + 24) = 0xE000000000000000;
  *(void *)(v2 + 64) = 0xE000000000000000;
  *(void *)(v2 + 72) = 0;
  uint64_t v71 = v2 + 72;
  *(void *)(v2 + 80) = 0xE000000000000000;
  uint64_t v6 = MEMORY[0x263F8EE78];
  *(void *)(v2 + 88) = MEMORY[0x263F8EE78];
  uint64_t v75 = (void *)(v2 + 88);
  *(void *)(v2 + 96) = v6;
  unint64_t v70 = (void *)(v2 + 96);
  *(void *)(v2 + 104) = 0;
  uint64_t v69 = v2 + 104;
  *(void *)(v2 + 112) = 0xE000000000000000;
  *(void *)(v2 + 128) = 0;
  uint64_t v67 = v2 + 128;
  *(void *)(v2 + 120) = 0;
  unint64_t v68 = (uint64_t *)(v2 + 120);
  *(void *)(v2 + 136) = 0xE000000000000000;
  *(void *)(v2 + 144) = 0;
  *(void *)(v2 + 152) = 0xE000000000000000;
  *(void *)(v2 + 160) = v6;
  *(_OWORD *)(v2 + 184) = 0u;
  *(_OWORD *)(v2 + 168) = 0u;
  *(void *)(v2 + 208) = 0;
  *(unsigned char *)(v2 + 200) = 1;
  *(void *)(v2 + 224) = 0;
  *(void *)(v2 + 216) = 0;
  *(unsigned char *)(v2 + 232) = 1;
  uint64_t v7 = a1[3];
  uint64_t v78 = a1[4];
  uint64_t v80 = a1;
  sub_2613DBF24(a1, v7);
  sub_2613DBF68();
  uint64_t v8 = v79;
  sub_2614D60D8();
  if (v8)
  {
    swift_release();
    char v9 = (void *)v2;
  }
  else
  {
    uint64_t v65 = (void *)(v2 + 160);
    uint64_t v66 = v2 + 144;
    uint64_t v78 = v2 + 208;
    int v79 = (void *)v2;
    v63[1] = v2 + 224;
    uint64_t v64 = (uint64_t *)(v2 + 168);
    uint64_t v11 = v75;
    uint64_t v10 = v76;
    char v98 = 0;
    uint64_t v12 = sub_2614D5E98();
    uint64_t v14 = v13;
    swift_beginAccess();
    unint64_t v15 = v79;
    v79[2] = v12;
    v15[3] = v14;
    swift_bridgeObjectRelease();
    char v97 = 1;
    uint64_t v17 = sub_2614D5EB8();
    uint64_t v18 = v73;
    swift_beginAccess();
    uint64_t *v18 = v17;
    char v96 = 2;
    uint64_t v19 = sub_2614D5EB8();
    uint64_t v20 = v78;
    swift_beginAccess();
    *(void *)(v20 - 168) = v19;
    char v95 = 3;
    uint64_t v21 = sub_2614D5EB8();
    char v22 = v72;
    swift_beginAccess();
    *char v22 = v21;
    char v94 = 4;
    uint64_t v23 = sub_2614D5E98();
    uint64_t v25 = v24;
    swift_beginAccess();
    v15[7] = v23;
    v15[8] = v25;
    swift_bridgeObjectRelease();
    char v93 = 5;
    uint64_t v26 = sub_2614D5E98();
    uint64_t v28 = v27;
    swift_beginAccess();
    v15[9] = v26;
    v15[10] = v28;
    swift_bridgeObjectRelease();
    sub_2613C23AC(&qword_26A914A50);
    char v92 = 6;
    sub_2613DBFBC();
    sub_2614D5EC8();
    uint64_t v29 = v91;
    swift_beginAccess();
    void *v11 = v29;
    swift_bridgeObjectRelease();
    sub_2613C23AC(&qword_26A914A70);
    LOBYTE(v91) = 7;
    sub_2613DC048(&qword_26A914A78, &qword_26A914A70);
    sub_2614D5EC8();
    uint64_t v30 = v90;
    uint64_t v31 = v70;
    swift_beginAccess();
    void *v31 = v30;
    swift_bridgeObjectRelease();
    LOBYTE(v90) = 8;
    uint64_t v32 = sub_2614D5E98();
    uint64_t v34 = v33;
    swift_beginAccess();
    uint64_t v35 = v79;
    v79[13] = v32;
    v35[14] = v34;
    swift_bridgeObjectRelease();
    char v89 = 9;
    uint64_t v36 = sub_2614D5EB8();
    uint64_t v37 = v68;
    swift_beginAccess();
    *uint64_t v37 = v36;
    char v88 = 10;
    uint64_t v38 = sub_2614D5E98();
    uint64_t v40 = v39;
    swift_beginAccess();
    uint64_t v41 = v79;
    v79[16] = v38;
    v41[17] = v40;
    swift_bridgeObjectRelease();
    char v87 = 11;
    uint64_t v42 = sub_2614D5E98();
    uint64_t v44 = v43;
    swift_beginAccess();
    uint64_t v45 = v79;
    v79[18] = v42;
    v45[19] = v44;
    swift_bridgeObjectRelease();
    char v86 = 12;
    sub_2614D5EC8();
    uint64_t v46 = v85;
    int v47 = v65;
    swift_beginAccess();
    void *v47 = v46;
    swift_bridgeObjectRelease();
    LOBYTE(v85) = 13;
    uint64_t v48 = sub_2614D5EB8();
    uint64_t v49 = v64;
    swift_beginAccess();
    uint64_t *v49 = v48;
    char v84 = 14;
    uint64_t v50 = sub_2614D5E38();
    uint64_t v52 = v51;
    swift_beginAccess();
    uint64_t v53 = v79;
    v79[22] = v50;
    v53[23] = v52;
    swift_bridgeObjectRelease();
    char v83 = 15;
    uint64_t v54 = sub_2614D5E68();
    LOBYTE(v52) = v55;
    swift_beginAccess();
    uint64_t v56 = v79;
    v79[24] = v54;
    *((unsigned char *)v56 + 200) = v52 & 1;
    char v82 = 16;
    uint64_t v57 = sub_2614D5E38();
    uint64_t v59 = v58;
    swift_beginAccess();
    uint64_t v60 = v79;
    v79[26] = v57;
    v60[27] = v59;
    swift_bridgeObjectRelease();
    char v81 = 17;
    uint64_t v61 = sub_2614D5E68();
    LOBYTE(v59) = v62;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v99, v77);
    swift_beginAccess();
    char v9 = v79;
    v79[28] = v61;
    *((unsigned char *)v9 + 232) = v59 & 1;
  }
  sub_2613DD718((uint64_t)v80);
  return v9;
}

uint64_t sub_2613CF230@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 672))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_2613CF26C@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  uint64_t v10 = *(void *)(v1 + 72);
  uint64_t v11 = *(void *)(v1 + 80);
  char v12 = *(unsigned char *)(v1 + 88);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 72) = v12;
  return sub_2613DC0AC(v3, v4, v5, v6, v7);
}

uint64_t sub_2613CF2E4(long long *a1)
{
  uint64_t v2 = *((void *)a1 + 2);
  long long v13 = *(long long *)((char *)a1 + 24);
  long long v14 = *a1;
  uint64_t v3 = *((void *)a1 + 5);
  long long v12 = a1[3];
  uint64_t v4 = *((void *)a1 + 8);
  char v5 = *((unsigned char *)a1 + 72);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v9 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 48);
  *(_OWORD *)(v1 + 16) = v14;
  *(void *)(v1 + 32) = v2;
  *(_OWORD *)(v1 + 40) = v13;
  *(void *)(v1 + 56) = v3;
  *(_OWORD *)(v1 + 64) = v12;
  *(void *)(v1 + 80) = v4;
  *(unsigned char *)(v1 + 88) = v5;
  return sub_2613DC0FC(v6, v7, v8, v9, v10);
}

uint64_t sub_2613CF3A0@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = v1[12];
  uint64_t v4 = v1[13];
  uint64_t v5 = v1[14];
  uint64_t v6 = v1[15];
  uint64_t v8 = v1[16];
  uint64_t v7 = v1[17];
  uint64_t result = sub_2613DC14C(v3, v4);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v8;
  a1[5] = v7;
  return result;
}

uint64_t sub_2613CF428(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 96);
  uint64_t v4 = *(void *)(v1 + 104);
  sub_2613DC1BC(a1, v1 + 96);
  return sub_2613DC224(v3, v4);
}

uint64_t sub_2613CF4B4()
{
  return swift_retain();
}

uint64_t sub_2613CF4EC(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 176) = a1;
  return swift_release();
}

uint64_t sub_2613CF534()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 184);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2613CF580(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 184) = a1;
  *(void *)(v2 + 192) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613CF5D4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CF628()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2613CF660(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 200) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613CF6A8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CF6FC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2613CF734(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 224) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2613CF77C()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 232);
}

uint64_t sub_2613CF7B0(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 232) = a1;
  return result;
}

uint64_t (*sub_2613CF7F0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CF844()
{
  swift_beginAccess();
  return *(void *)(v0 + 240);
}

uint64_t sub_2613CF878(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 240) = a1;
  return result;
}

uint64_t (*sub_2613CF8B8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CF90C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2613CF944(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 248) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613CF98C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CF9E0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2613CFA18(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 256) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613CFA60())()
{
  return j_j__swift_endAccess;
}

float VACTCEncoder.fbankSil.getter()
{
  return -87.337;
}

uint64_t sub_2613CFAC4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2613CFAFC(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 272) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613CFB44())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CFB98()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2613CFBD0(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 280) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613CFC18())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CFC6C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2613CFCA4(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 288) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613CFCEC())()
{
  return j__swift_endAccess;
}

uint64_t sub_2613CFD44()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2613CFD7C(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 296) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613CFDC4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CFE18()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2613CFE50(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 304) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613CFE98())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CFEEC()
{
  swift_beginAccess();
  return *(void *)(v0 + 312);
}

uint64_t sub_2613CFF20(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 312) = a1;
  return result;
}

uint64_t (*sub_2613CFF60())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613CFFB4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2613CFFEC(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 320) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613D0034())()
{
  return j_j__swift_endAccess;
}

float sub_2613D0088()
{
  swift_beginAccess();
  return *(float *)(v0 + 328);
}

uint64_t sub_2613D00BC(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 328) = a1;
  return result;
}

uint64_t (*sub_2613D00FC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613D0150()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 332);
}

uint64_t sub_2613D0184(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 332) = a1;
  return result;
}

uint64_t (*sub_2613D01C4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613D0218()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 333);
}

uint64_t sub_2613D024C(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 333) = a1;
  return result;
}

uint64_t (*sub_2613D028C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613D02E0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2613D0318(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 336) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613D0360())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613D03B4()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 344);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2613D0400(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 344) = a1;
  *(void *)(v2 + 352) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613D0454())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613D04A8()
{
  return 0;
}

uint64_t sub_2613D04B0(uint64_t a1, int a2)
{
  uint64_t v4 = swift_allocObject();
  sub_2613D0508(a1, a2);
  return v4;
}

unint64_t sub_2613D0508(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  LODWORD(v184) = a2;
  uint64_t v204 = sub_2614D50C8();
  uint64_t v185 = *(void *)(v204 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v204);
  uint64_t v7 = (uint8_t *)&v162 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  *(void *)&long long v183 = (char *)&v162 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v162 - v10;
  *(_OWORD *)(v2 + 16) = 0u;
  uint64_t v12 = v2 + 16;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 73) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  v180 = (uint64_t *)(v2 + 176);
  *(_OWORD *)(v2 + 208) = 0u;
  uint64_t v181 = v2 + 208;
  *(void *)(v2 + 144) = 0;
  *(void *)(v2 + 152) = 0xE000000000000000;
  *(void *)(v2 + 240) = -1;
  v182 = (unint64_t *)(v2 + 240);
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 217) = 0u;
  uint64_t v13 = MEMORY[0x263F8EE80];
  *(void *)(v2 + 248) = MEMORY[0x263F8EE80];
  *(void *)(v2 + 256) = v13;
  *(_DWORD *)(v2 + 264) = -1028740016;
  uint64_t v14 = MEMORY[0x263F8EE78];
  *(void *)(v2 + 272) = MEMORY[0x263F8EE78];
  *(void *)(v2 + 280) = v14;
  *(void *)(v2 + 288) = v14;
  *(void *)(v2 + 296) = v14;
  *(void *)(v2 + 304) = v14;
  *(void *)(v2 + 312) = -1;
  *(void *)(v2 + 320) = v14;
  *(_DWORD *)(v2 + 328) = 0;
  *(_WORD *)(v2 + 332) = 0;
  *(void *)(v2 + 336) = v14;
  strcpy((char *)(v2 + 344), "ctc_activation");
  *(unsigned char *)(v2 + 359) = -18;
  type metadata accessor for VATinyASRFeatureExtract();
  *(void *)(v2 + 160) = VATinyASRFeatureExtract.__allocating_init()();
  char v15 = (*(uint64_t (**)(void))(*(void *)a1 + 456))();
  uint64_t v16 = swift_beginAccess();
  *(unsigned char *)(v12 + 317) = v15 & 1;
  if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 312))(v16))
  {
    *(void *)&long long v179 = v11;
    type metadata accessor for VAEspressoUtilsV2();
    uint64_t v17 = (*(uint64_t (**)(void))(*(void *)a1 + 192))();
    unint64_t v19 = v18;
    char v20 = sub_2613D04A8();
    uint64_t v21 = v186;
    sub_26148DB30(v17, v19, v20 & 1, (uint64_t *)&v197);
    if (v21) {
      goto LABEL_6;
    }
    uint64_t v184 = a1;
    long long v186 = v197;
    long long v183 = v199;
    uint64_t v174 = v198;
    v177 = v200;
    uint64_t v178 = 0;
    swift_bridgeObjectRelease();
    v203[0] = v197;
    uint64_t v201 = v199;
    uint64_t v202 = v198;
    swift_beginAccess();
    uint64_t v31 = *(void *)(v3 + 96);
    uint64_t v32 = *(void *)(v3 + 104);
    uint64_t v33 = *(uint64_t (**)(void))(v3 + 112);
    uint64_t v175 = *(void *)(v3 + 136);
    v176 = v33;
    *(_OWORD *)(v3 + 96) = v186;
    *(void *)(v3 + 112) = v174;
    *(_OWORD *)(v3 + 120) = v183;
    *(void *)(v3 + 136) = v177;
    sub_2613DC30C((uint64_t)v203);
    sub_2613DC338((uint64_t)&v202);
    sub_2613DC338((uint64_t)&v201);
    swift_retain();
    swift_retain();
    sub_2613DC224(v31, v32);
    uint64_t v34 = sub_26146718C();
    uint64_t v35 = v185;
    uint64_t v36 = v204;
    (*(void (**)(void, uint64_t, uint64_t))(v185 + 16))(v179, v34, v204);
    sub_2613DC30C((uint64_t)v203);
    sub_2613DC338((uint64_t)&v202);
    sub_2613DC338((uint64_t)&v201);
    swift_retain();
    swift_retain();
    sub_2613DC30C((uint64_t)v203);
    sub_2613DC338((uint64_t)&v202);
    sub_2613DC338((uint64_t)&v201);
    swift_retain();
    swift_retain();
    uint64_t v37 = sub_2614D50A8();
    os_log_type_t v38 = sub_2614D5968();
    if (os_log_type_enabled(v37, v38))
    {
      *(void *)&long long v186 = v37;
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v183 = swift_slowAlloc();
      *(void *)&long long v189 = v183;
      v177 = v39;
      *(_DWORD *)uint64_t v39 = 136315138;
      uint64_t v40 = sub_26148D760();
      v187[0] = sub_2613D875C(v40, v41, (uint64_t *)&v189);
      sub_2614D5B58();
      swift_bridgeObjectRelease();
      sub_2613DC364((uint64_t)v203);
      sub_2613DC390((uint64_t)&v202);
      sub_2613DC390((uint64_t)&v201);
      swift_release();
      swift_release();
      sub_2613DC364((uint64_t)v203);
      sub_2613DC390((uint64_t)&v202);
      sub_2613DC390((uint64_t)&v201);
      swift_release();
      swift_release();
      uint64_t v42 = (void *)v186;
      os_log_type_t v43 = v38;
      uint64_t v44 = v177;
      _os_log_impl(&dword_2613B8000, (os_log_t)v186, v43, "tASR model description: %s", v177, 0xCu);
      uint64_t v45 = v183;
      swift_arrayDestroy();
      MEMORY[0x263E38060](v45, -1, -1);
      MEMORY[0x263E38060](v44, -1, -1);

      uint64_t v46 = (*(uint64_t (**)(void, uint64_t))(v185 + 8))(v179, v204);
    }
    else
    {
      sub_2613DC364((uint64_t)v203);
      sub_2613DC390((uint64_t)&v202);
      sub_2613DC390((uint64_t)&v201);
      swift_release();
      swift_release();
      sub_2613DC364((uint64_t)v203);
      sub_2613DC390((uint64_t)&v202);
      sub_2613DC390((uint64_t)&v201);

      swift_release();
      swift_release();
      uint64_t v46 = (*(uint64_t (**)(void, uint64_t))(v35 + 8))(v179, v36);
    }
    (*(void (**)(uint64_t))(*(void *)v184 + 544))(v46);
    uint64_t v78 = v178;
    uint64_t v79 = sub_2613DB1EC();
    if (v78)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_2613DC364((uint64_t)v203);
      sub_2613DC390((uint64_t)&v202);
      sub_2613DC390((uint64_t)&v201);
      swift_release();
      swift_release();
      goto LABEL_8;
    }
    uint64_t v83 = v79;
    sub_2613DC364((uint64_t)v203);
    sub_2613DC390((uint64_t)&v202);
    sub_2613DC390((uint64_t)&v201);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
    v177 = v7;
    *(void *)&long long v179 = type metadata accessor for VAEspressoUtils();
    char v22 = (uint64_t (**)(void))(*(void *)a1 + 192);
    v176 = *v22;
    uint64_t v23 = v176();
    unint64_t v25 = v24;
    uint64_t v26 = (*(void *(**)(uint64_t *__return_ptr))(*(void *)a1 + 336))(v188);
    LOBYTE(v187[0]) = v188[0];
    uint64_t v27 = (*(uint64_t (**)(void *))(*(void *)a1 + 360))(v26);
    uint64_t v28 = v186;
    static VAEspressoUtils.loadModel(_:computeUnits:espressoPrefix:debug:)(v23, v25, (char *)v187, v27, v29, v184 & 1, &v189);
    if (v28)
    {
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
LABEL_7:
      swift_release();
LABEL_8:
      sub_2613DC0FC(*(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48));
      sub_2613DC224(*(void *)(v3 + 96), *(void *)(v3 + 104));
      swift_bridgeObjectRelease();

      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for VACTCEncoder();
      swift_deallocPartialClassInstance();
      return v3;
    }
    uint64_t v175 = (uint64_t)v22;
    uint64_t v178 = 0;
    uint64_t v184 = a1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v186 = v189;
    uint64_t v47 = v190;
    uint64_t v48 = v191;
    uint64_t v49 = v192;
    uint64_t v50 = v193;
    long long v179 = v194;
    uint64_t v51 = v195;
    char v52 = v196;
    swift_beginAccess();
    uint64_t v53 = *(void *)(v3 + 16);
    uint64_t v54 = *(void *)(v3 + 24);
    uint64_t v55 = *(void *)(v3 + 32);
    uint64_t v56 = *(void *)(v3 + 40);
    uint64_t v57 = *(void *)(v3 + 48);
    *(_OWORD *)(v3 + 16) = v186;
    *(void *)(v3 + 32) = v47;
    *(void *)(v3 + 40) = v48;
    *(void *)(v3 + 48) = v49;
    *(void *)(v3 + 56) = v50;
    *(_OWORD *)(v3 + 64) = v179;
    *(void *)(v3 + 80) = v51;
    *(unsigned char *)(v3 + 88) = v52;
    sub_2613DC0FC(v53, v54, v55, v56, v57);
    *(void *)&long long v186 = *(void *)(v3 + 48);
    if (!(void)v186)
    {
      *(void *)&long long v189 = 0;
      *((void *)&v189 + 1) = 0xE000000000000000;
      sub_2614D5C38();
      uint64_t v80 = swift_bridgeObjectRelease();
      *(void *)&long long v189 = 0x742064656C696146;
      *((void *)&v189 + 1) = 0xEF2064616F6C206FLL;
      ((void (*)(uint64_t))v176)(v80);
      sub_2614D54D8();
      swift_bridgeObjectRelease();
      long long v81 = v189;
      sub_2613DC2B8();
      swift_allocError();
      _OWORD *v82 = v81;
      swift_willThrow();
      goto LABEL_7;
    }
    uint64_t v58 = *(void *)(v3 + 24);
    *(void *)&long long v173 = *(void *)(v3 + 16);
    *((void *)&v173 + 1) = v58;
    uint64_t v59 = *(void *)(v3 + 32);
    v176 = *(uint64_t (**)(void))(v3 + 40);
    uint64_t v60 = *(void *)(v3 + 56);
    unint64_t v61 = *(void *)(v3 + 64);
    uint64_t v174 = v59;
    uint64_t v175 = v60;
    uint64_t v62 = *(void *)(v3 + 80);
    *(void *)&long long v179 = *(void *)(v3 + 72);
    int v63 = *(unsigned __int8 *)(v3 + 88);
    int v172 = v63 & 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v64 = sub_26146718C();
    uint64_t v65 = v185;
    uint64_t v66 = *(void (**)(uint8_t *, uint64_t, uint64_t))(v185 + 16);
    uint64_t v168 = v64;
    v166 = v66;
    v167 = (uint8_t *)(v185 + 16);
    ((void (*)(void))v66)(v183);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_2614D50A8();
    os_log_type_t v68 = sub_2614D5958();
    int v69 = v68;
    BOOL v70 = os_log_type_enabled(v67, v68);
    uint64_t v170 = v62;
    unint64_t v171 = v61;
    int v169 = v63;
    if (v70)
    {
      uint64_t v71 = swift_slowAlloc();
      uint64_t v165 = swift_slowAlloc();
      *(void *)&long long v189 = v165;
      *(_DWORD *)uint64_t v71 = 136315394;
      int v164 = v69;
      swift_bridgeObjectRetain();
      os_log_t v163 = v67;
      v187[0] = sub_2613D875C(v175, v61, (uint64_t *)&v189);
      uint64_t v72 = v204;
      sub_2614D5B58();
      swift_bridgeObjectRelease();
      *(_WORD *)(v71 + 12) = 1024;
      LODWORD(v187[0]) = v172;
      sub_2614D5B58();
      sub_2613DC0FC(v173, *((uint64_t *)&v173 + 1), v174, (uint64_t)v176, v186);
      os_log_t v73 = v163;
      _os_log_impl(&dword_2613B8000, v163, (os_log_type_t)v164, "Loaded %s, aneChosen=%{BOOL}d", (uint8_t *)v71, 0x12u);
      uint64_t v74 = v165;
      swift_arrayDestroy();
      MEMORY[0x263E38060](v74, -1, -1);
      uint64_t v75 = v71;
      uint64_t v76 = v185;
      MEMORY[0x263E38060](v75, -1, -1);

      uint64_t v77 = *(void (**)(uint8_t *, uint64_t))(v76 + 8);
      v77((uint8_t *)v183, v72);
    }
    else
    {
      sub_2613DC0FC(v173, *((uint64_t *)&v173 + 1), v174, (uint64_t)v176, v186);

      uint64_t v77 = *(void (**)(uint8_t *, uint64_t))(v65 + 8);
      uint64_t v72 = v204;
      v77((uint8_t *)v183, v204);
    }
    char v84 = v177;
    v166(v177, v168, v72);
    swift_bridgeObjectRetain_n();
    uint64_t v85 = sub_2614D50A8();
    os_log_type_t v86 = sub_2614D5968();
    if (os_log_type_enabled(v85, v86))
    {
      char v87 = (uint8_t *)swift_slowAlloc();
      uint64_t v168 = swift_slowAlloc();
      *(void *)&long long v189 = v168;
      v167 = v87;
      *(_DWORD *)char v87 = 136315138;
      uint64_t v165 = (uint64_t)(v87 + 4);
      *(void *)&long long v183 = v77;
      swift_bridgeObjectRetain();
      v166 = (void (*)(uint8_t *, uint64_t, uint64_t))(MEMORY[0x263F8EE58] + 8);
      uint64_t v88 = sub_2614D52F8();
      unint64_t v90 = v89;
      swift_bridgeObjectRelease();
      v187[0] = sub_2613D875C(v88, v90, (uint64_t *)&v189);
      sub_2614D5B58();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v91 = v167;
      _os_log_impl(&dword_2613B8000, v85, v86, "tASR model config: %s", v167, 0xCu);
      uint64_t v92 = v168;
      swift_arrayDestroy();
      MEMORY[0x263E38060](v92, -1, -1);
      MEMORY[0x263E38060](v91, -1, -1);

      ((void (*)(uint8_t *, uint64_t))v183)(v177, v204);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v77(v84, v72);
    }
    uint64_t v93 = v174;
    long long v94 = v173;
    long long v189 = v173;
    uint64_t v190 = v174;
    unsigned int v191 = v176;
    uint64_t v192 = v186;
    uint64_t v193 = v175;
    *(void *)&long long v194 = v171;
    uint64_t v95 = v178;
    *((void *)&v194 + 1) = v179;
    uint64_t v195 = v170;
    char v196 = v172;
    uint64_t v96 = sub_2613DB348((uint64_t)&v189);
    if (v95)
    {
      swift_release();
      sub_2613DC0FC(v94, *((uint64_t *)&v94 + 1), v93, (uint64_t)v176, v186);
      goto LABEL_8;
    }
    uint64_t v83 = v96;
    sub_2613DC0FC(v94, *((uint64_t *)&v94 + 1), v93, (uint64_t)v176, v186);
  }
  *(void *)(v3 + 168) = v83;
  char v97 = *(uint64_t (**)(uint64_t))(*(void *)v83 + 664);
  uint64_t v98 = swift_retain();
  char v99 = v97(v98);
  swift_release();
  uint64_t v100 = swift_beginAccess();
  *(unsigned char *)(v3 + 232) = v99 & 1;
  if ((v99 & 1) == 0)
  {
LABEL_31:
    v121 = *(uint64_t (**)(uint64_t))(**(void **)(v3 + 168) + 368);
    uint64_t v122 = swift_retain();
    uint64_t v123 = (void *)v121(v122);
    unint64_t result = swift_release();
    if (!v123[2])
    {
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
      goto LABEL_79;
    }
    uint64_t v124 = v123[4];
    uint64_t v125 = *(void *)(v124 + 16);
    if (v125)
    {
      uint64_t v126 = (uint64_t *)(v124 + 32);
      uint64_t v127 = 1;
      while (1)
      {
        uint64_t v128 = *v126++;
        unint64_t result = v127 * v128;
        if ((unsigned __int128)(v127 * (__int128)v128) >> 64 != (v127 * v128) >> 63) {
          break;
        }
        uint64_t v127 = result;
        if (!--v125) {
          goto LABEL_38;
        }
      }
      __break(1u);
    }
    else
    {
      unint64_t result = 1;
LABEL_38:
      uint64_t v129 = sub_2613D1B04(result, 0);
      swift_beginAccess();
      *(void *)(v12 + 256) = v129;
      unint64_t result = swift_bridgeObjectRelease();
      if (v123[2] < 2uLL) {
        goto LABEL_75;
      }
      uint64_t v130 = v123[5];
      uint64_t v131 = *(void *)(v130 + 16);
      if (!v131)
      {
        unint64_t result = 1;
LABEL_45:
        uint64_t v135 = sub_2613D1B04(result, 0);
        swift_beginAccess();
        *(void *)(v12 + 264) = v135;
        unint64_t result = swift_bridgeObjectRelease();
        if (v123[2] < 3uLL) {
          goto LABEL_76;
        }
        uint64_t v136 = v123[6];
        uint64_t v137 = *(void *)(v136 + 16);
        if (!v137)
        {
          unint64_t result = 1;
LABEL_52:
          uint64_t v141 = sub_2613D1B04(result, 0);
          swift_beginAccess();
          *(void *)(v12 + 272) = v141;
          unint64_t result = swift_bridgeObjectRelease();
          if (v123[2] < 4uLL) {
            goto LABEL_77;
          }
          uint64_t v142 = v123[7];
          uint64_t v143 = *(void *)(v142 + 16);
          if (!v143)
          {
            unint64_t result = 1;
LABEL_59:
            uint64_t v147 = sub_2613D1B04(result, 0);
            swift_beginAccess();
            *(void *)(v12 + 280) = v147;
            unint64_t result = swift_bridgeObjectRelease();
            if (v123[2] < 5uLL) {
              goto LABEL_78;
            }
            uint64_t v148 = v123[8];
            swift_bridgeObjectRetain();
            unint64_t result = swift_bridgeObjectRelease();
            uint64_t v149 = *(void *)(v148 + 16);
            if (!v149)
            {
              swift_bridgeObjectRelease();
              float v154 = 1.0;
LABEL_66:
              sub_2613DAB88(0.0, v154, 1.0);
              uint64_t v156 = v155;
              swift_beginAccess();
              *(void *)(v12 + 288) = v156;
              swift_bridgeObjectRelease();
              type metadata accessor for VABundleUtil();
              (*(void (**)(void))(*(void *)v184 + 288))();
              uint64_t v157 = static VABundleUtil.bundlePathFallback(path:)();
              unint64_t v159 = v158;
              swift_bridgeObjectRelease();
              sub_2613D1CEC(v157, v159);
              swift_bridgeObjectRelease();
              sub_2613D289C();
              swift_release();
              return v3;
            }
            uint64_t v150 = 0;
            uint64_t v151 = 1;
            while (1)
            {
              uint64_t v152 = *(void *)(v148 + 8 * v150 + 32);
              uint64_t v153 = v151 * v152;
              if ((unsigned __int128)(v151 * (__int128)v152) >> 64 != (v151 * v152) >> 63) {
                goto LABEL_73;
              }
              ++v150;
              v151 *= v152;
              if (v149 == v150)
              {
                swift_bridgeObjectRelease();
                float v154 = (float)v153;
                goto LABEL_66;
              }
            }
          }
          uint64_t v144 = (uint64_t *)(v142 + 32);
          uint64_t v145 = 1;
          while (1)
          {
            uint64_t v146 = *v144++;
            unint64_t result = v145 * v146;
            if ((unsigned __int128)(v145 * (__int128)v146) >> 64 != (v145 * v146) >> 63) {
              break;
            }
            uint64_t v145 = result;
            if (!--v143) {
              goto LABEL_59;
            }
          }
LABEL_72:
          __break(1u);
LABEL_73:
          __break(1u);
          goto LABEL_74;
        }
        uint64_t v138 = (uint64_t *)(v136 + 32);
        uint64_t v139 = 1;
        while (1)
        {
          uint64_t v140 = *v138++;
          unint64_t result = v139 * v140;
          if ((unsigned __int128)(v139 * (__int128)v140) >> 64 != (v139 * v140) >> 63) {
            break;
          }
          uint64_t v139 = result;
          if (!--v137) {
            goto LABEL_52;
          }
        }
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
      uint64_t v132 = (uint64_t *)(v130 + 32);
      uint64_t v133 = 1;
      while (1)
      {
        uint64_t v134 = *v132++;
        unint64_t result = v133 * v134;
        if ((unsigned __int128)(v133 * (__int128)v134) >> 64 != (v133 * v134) >> 63) {
          break;
        }
        uint64_t v133 = result;
        if (!--v131) {
          goto LABEL_45;
        }
      }
    }
    __break(1u);
    goto LABEL_71;
  }
  uint64_t v101 = (*(uint64_t (**)(uint64_t))(**(void **)(v3 + 168) + 560))(v100);
  uint64_t v103 = v102;
  swift_beginAccess();
  *(void *)(v3 + 184) = v101;
  *(void *)(v3 + 192) = v103;
  uint64_t v104 = swift_bridgeObjectRelease();
  uint64_t v105 = *(void *)(v3 + 168);
  unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v105 + 584))(v104);
  if (v106)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  unint64_t v107 = result;
  *(void *)&long long v186 = v12 + 216;
  uint64_t v108 = v182;
  uint64_t v109 = swift_beginAccess();
  *(void *)(v3 + 240) = v107;
  uint64_t v110 = (*(uint64_t (**)(uint64_t))(*(void *)v105 + 608))(v109);
  uint64_t v112 = v111;
  swift_beginAccess();
  *(void *)(v3 + 208) = v110;
  *(void *)(v3 + 216) = v112;
  uint64_t v113 = swift_bridgeObjectRelease();
  unint64_t result = (*(uint64_t (**)(uint64_t))(**(void **)(v3 + 168) + 632))(v113);
  if ((v114 & 1) == 0)
  {
    unint64_t v115 = result;
    uint64_t v116 = sub_2613D1B04(*v108, 0);
    uint64_t v117 = sub_2613D1BF8(v116, v115);
    swift_beginAccess();
    *(void *)(v12 + 184) = v117;
    swift_bridgeObjectRelease();
    uint64_t v118 = sub_2613D1B04(v115, 0);
    swift_beginAccess();
    *(void *)(v12 + 208) = v118;
    swift_bridgeObjectRelease();
    type metadata accessor for VAContextEncoder();
    uint64_t v119 = *v108;
    uint64_t v120 = swift_retain();
    uint64_t v160 = VAContextEncoder.__allocating_init(config:outputDim:)(v120, v119);
    v161 = v180;
    swift_beginAccess();
    uint64_t *v161 = v160;
    swift_release();
    if (!*v161) {
      *(unsigned char *)long long v186 = 0;
    }
    goto LABEL_31;
  }
LABEL_80:
  __break(1u);
  return result;
}

uint64_t sub_2613D1B04(unint64_t a1, int32x2_t a2)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_2614D5D58();
    __break(1u);
    return result;
  }
  if (!a1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_2614D56C8();
  *(void *)(result + 16) = a1;
  uint64_t v4 = (__int32 *)(result + 32);
  if (a1 < 8)
  {
    unint64_t v5 = 0;
    __int32 v6 = a2.i32[0];
LABEL_9:
    unint64_t v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  v4 += a1 & 0xFFFFFFFFFFFFFFF8;
  __int32 v6 = a2.i32[0];
  int32x4_t v7 = vdupq_lane_s32(a2, 0);
  uint64_t v8 = (int32x4_t *)(result + 48);
  unint64_t v9 = a1 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    *uint64_t v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v5 != a1) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2613D1BF8(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = sub_2614D5D58();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      sub_2613C23AC(&qword_26A914AB8);
      uint64_t v4 = (void *)sub_2614D56C8();
      unint64_t v5 = v4;
      v4[2] = a2;
      v4[4] = a1;
      if (a2 != 1)
      {
        v4[5] = a1;
        uint64_t v6 = a2 - 2;
        if (v6)
        {
          int32x4_t v7 = v4 + 6;
          do
          {
            *v7++ = a1;
            swift_bridgeObjectRetain();
            --v6;
          }
          while (v6);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x263F8EE78];
    }
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_2613D1CEC(uint64_t a1, unint64_t a2)
{
  uint64_t v6 = sub_2614D50C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2614D5408();
  MEMORY[0x270FA5388](v10 - 8);
  sub_2614D53F8();
  uint64_t result = sub_2614D5358();
  if (v3) {
    return result;
  }
  uint64_t v13 = result;
  unint64_t v14 = v12;
  uint64_t v120 = v2;
  uint64_t v111 = a1;
  unint64_t v118 = a2;
  uint64_t v126 = 10;
  uint64_t v127 = 0xE100000000000000;
  MEMORY[0x270FA5388](result);
  uint64_t v108 = &v126;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_2613D7D10(0x7FFFFFFFFFFFFFFFLL, 1, sub_2613DD7C4, (uint64_t)v106, v13, v14);
  uint64_t v119 = 0;
  swift_bridgeObjectRelease();
  uint64_t v116 = *(void *)(v15 + 16);
  uint64_t v117 = v9;
  if (!v116)
  {
LABEL_93:
    swift_bridgeObjectRelease();
    uint64_t v97 = sub_26146718C();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v97, v6);
    uint64_t v98 = v120;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    char v99 = sub_2614D50A8();
    os_log_type_t v100 = sub_2614D5968();
    if (os_log_type_enabled(v99, v100))
    {
      uint64_t v101 = swift_slowAlloc();
      uint64_t v125 = swift_slowAlloc();
      uint64_t v126 = v125;
      *(_DWORD *)uint64_t v101 = 134218242;
      uint64_t v102 = v7;
      uint64_t v103 = *(void *)((*(uint64_t (**)(void))(*(void *)v98 + 536))() + 16);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v128 = v103;
      sub_2614D5B58();
      swift_release();
      *(_WORD *)(v101 + 12) = 2080;
      unint64_t v104 = v118;
      swift_bridgeObjectRetain();
      uint64_t v128 = sub_2613D875C(v111, v104, &v126);
      sub_2614D5B58();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2613B8000, v99, v100, "Loaded %ld symbols from %s", (uint8_t *)v101, 0x16u);
      uint64_t v105 = v125;
      swift_arrayDestroy();
      MEMORY[0x263E38060](v105, -1, -1);
      MEMORY[0x263E38060](v101, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v117, v6);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
  unint64_t v16 = 0;
  uint64_t v114 = v6;
  uint64_t v115 = v15 + 32;
  uint64_t v109 = (char *)&v126 + 2;
  uint64_t v110 = (char *)&v126 + 3;
  uint64_t v112 = v15;
  uint64_t v113 = v7;
  while (2)
  {
    if (v16 >= *(void *)(v15 + 16))
    {
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
      goto LABEL_101;
    }
    unint64_t v121 = v16;
    uint64_t v17 = (unint64_t *)(v115 + 32 * v16);
    unint64_t v18 = *v17;
    unint64_t v19 = v17[1] >> 14;
    if (v19 == *v17 >> 14)
    {
      char v20 = (void *)MEMORY[0x263F8EE78];
      goto LABEL_32;
    }
    unint64_t v21 = v17[3];
    uint64_t v125 = v17[2];
    swift_bridgeObjectRetain_n();
    unint64_t v22 = v18;
    unint64_t v23 = v18;
    unint64_t v24 = v18;
    uint64_t v124 = (void *)MEMORY[0x263F8EE78];
    unint64_t v122 = v21;
    do
    {
      while (1)
      {
        if (sub_2614D5B28() == 9 && v27 == 0xE100000000000000)
        {
          swift_bridgeObjectRelease();
          break;
        }
        char v28 = sub_2614D5FB8();
        swift_bridgeObjectRelease();
        if (v28) {
          break;
        }
        unint64_t v22 = sub_2614D5AF8();
        if (v19 == v22 >> 14) {
          goto LABEL_23;
        }
      }
      if (v23 >> 14 != v22 >> 14)
      {
        if (v22 >> 14 < v23 >> 14) {
          goto LABEL_103;
        }
        uint64_t v29 = sub_2614D5B38();
        uint64_t v31 = v30;
        uint64_t v33 = v32;
        uint64_t v123 = v34;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v35 = v124;
        }
        else {
          uint64_t v35 = sub_2613D8420(0, v124[2] + 1, 1, v124);
        }
        unint64_t v37 = v35[2];
        unint64_t v36 = v35[3];
        if (v37 >= v36 >> 1) {
          uint64_t v35 = sub_2613D8420((void *)(v36 > 1), v37 + 1, 1, v35);
        }
        v35[2] = v37 + 1;
        uint64_t v124 = v35;
        unint64_t v25 = &v35[4 * v37];
        v25[4] = v29;
        v25[5] = v31;
        uint64_t v26 = v123;
        v25[6] = v33;
        v25[7] = v26;
      }
      unint64_t v22 = sub_2614D5AF8();
      unint64_t v23 = v22;
      unint64_t v24 = v22;
    }
    while (v19 != v22 >> 14);
LABEL_23:
    if (v19 == v23 >> 14)
    {
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    if (v19 < v24 >> 14) {
      goto LABEL_103;
    }
    uint64_t v38 = sub_2614D5B38();
    uint64_t v40 = v39;
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    swift_bridgeObjectRelease();
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v45 = v124;
    }
    else {
      uint64_t v45 = sub_2613D8420(0, v124[2] + 1, 1, v124);
    }
    unint64_t v47 = v45[2];
    unint64_t v46 = v45[3];
    if (v47 >= v46 >> 1) {
      uint64_t v45 = sub_2613D8420((void *)(v46 > 1), v47 + 1, 1, v45);
    }
    v45[2] = v47 + 1;
    uint64_t v124 = v45;
    uint64_t v48 = &v45[4 * v47];
    v48[4] = v38;
    v48[5] = v40;
    v48[6] = v42;
    v48[7] = v44;
LABEL_31:
    swift_bridgeObjectRelease();
    char v20 = v124;
LABEL_32:
    if (v20[2] < 2uLL) {
      goto LABEL_98;
    }
    uint64_t v50 = v20[8];
    uint64_t v49 = v20[9];
    uint64_t v51 = v20[10];
    uint64_t v52 = v20[11];
    uint64_t v53 = v20;
    swift_bridgeObjectRetain();
    uint64_t v54 = MEMORY[0x263E36570](v50, v49, v51, v52);
    unint64_t v56 = v55;
    swift_bridgeObjectRelease();
    uint64_t v57 = HIBYTE(v56) & 0xF;
    uint64_t v58 = v54 & 0xFFFFFFFFFFFFLL;
    if ((v56 & 0x2000000000000000) != 0) {
      uint64_t v59 = HIBYTE(v56) & 0xF;
    }
    else {
      uint64_t v59 = v54 & 0xFFFFFFFFFFFFLL;
    }
    if (!v59)
    {
      swift_bridgeObjectRelease();
      uint64_t v69 = 0;
      char v68 = 1;
      goto LABEL_69;
    }
    if ((v56 & 0x1000000000000000) != 0)
    {
      uint64_t v62 = (uint64_t)sub_2613D9774(v54, v56, 10);
      LOBYTE(v54) = v96;
      goto LABEL_66;
    }
    if ((v56 & 0x2000000000000000) == 0)
    {
      if ((v54 & 0x1000000000000000) != 0) {
        uint64_t v60 = (unsigned __int8 *)((v56 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v60 = (unsigned __int8 *)sub_2614D5C98();
      }
      uint64_t v61 = v119;
      uint64_t v62 = (uint64_t)sub_2613D985C(v60, v58, 10);
      uint64_t v119 = v61;
      LOBYTE(v54) = v63 & 1;
LABEL_66:
      swift_bridgeObjectRelease();
      char v68 = v54 & 1;
      if (v54) {
        uint64_t v69 = 0;
      }
      else {
        uint64_t v69 = v62;
      }
LABEL_69:
      uint64_t v6 = v114;
      unint64_t v70 = v121;
      uint64_t v71 = v53;
      if (!v53[2]) {
        goto LABEL_99;
      }
      uint64_t v72 = v53[4];
      uint64_t v73 = v53[5];
      uint64_t v74 = v53[6];
      uint64_t v75 = v71[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v76 = MEMORY[0x263E36570](v72, v73, v74, v75);
      uint64_t v78 = v77;
      swift_bridgeObjectRelease();
      if (v68) {
        goto LABEL_102;
      }
      unint64_t v16 = v70 + 1;
      uint64_t v79 = v120;
      uint64_t v80 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))(*(void *)v120 + 576))(&v126);
      char v82 = v81;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v128 = *v82;
      uint64_t *v82 = 0x8000000000000000;
      sub_2613DA108(v69, v76, v78, isUniquelyReferenced_nonNull_native);
      uint64_t *v82 = v128;
      swift_bridgeObjectRelease();
      v80(&v126, 0);
      char v84 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))(*(void *)v79 + 552))(&v126);
      os_log_type_t v86 = v85;
      char v87 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v128 = *v86;
      uint64_t *v86 = 0x8000000000000000;
      sub_2613D9FC4(v76, v78, v69, v87);
      uint64_t *v86 = v128;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v84(&v126, 0);
      unint64_t v9 = v117;
      uint64_t v15 = v112;
      uint64_t v7 = v113;
      if (v16 == v116) {
        goto LABEL_93;
      }
      continue;
    }
    break;
  }
  uint64_t v126 = v54;
  uint64_t v127 = v56 & 0xFFFFFFFFFFFFFFLL;
  if (v54 != 43)
  {
    if (v54 != 45)
    {
      if (v57 && (v54 - 48) <= 9u)
      {
        uint64_t v62 = (v54 - 48);
        if (v57 == 1) {
          goto LABEL_65;
        }
        if ((BYTE1(v54) - 48) <= 9u)
        {
          uint64_t v62 = 10 * (v54 - 48) + (BYTE1(v54) - 48);
          uint64_t v88 = v57 - 2;
          if (v88)
          {
            unint64_t v89 = (unsigned __int8 *)v109;
            while (1)
            {
              unsigned int v90 = *v89 - 48;
              if (v90 > 9) {
                goto LABEL_63;
              }
              uint64_t v91 = 10 * v62;
              if ((unsigned __int128)(v62 * (__int128)10) >> 64 != (10 * v62) >> 63) {
                goto LABEL_63;
              }
              uint64_t v62 = v91 + v90;
              if (__OFADD__(v91, v90)) {
                goto LABEL_63;
              }
              LOBYTE(v54) = 0;
              ++v89;
              if (!--v88) {
                goto LABEL_66;
              }
            }
          }
          goto LABEL_65;
        }
      }
LABEL_63:
      uint64_t v62 = 0;
      LOBYTE(v54) = 1;
      goto LABEL_66;
    }
    if (v57)
    {
      if (v57 != 1 && (BYTE1(v54) - 48) <= 9u)
      {
        if (v57 == 2)
        {
          LOBYTE(v54) = 0;
          uint64_t v62 = -(uint64_t)(BYTE1(v54) - 48);
          goto LABEL_66;
        }
        if ((BYTE2(v54) - 48) <= 9u)
        {
          uint64_t v62 = -10 * (BYTE1(v54) - 48) - (BYTE2(v54) - 48);
          uint64_t v92 = v57 - 3;
          if (v92)
          {
            uint64_t v93 = (unsigned __int8 *)v110;
            while (1)
            {
              unsigned int v94 = *v93 - 48;
              if (v94 > 9) {
                goto LABEL_63;
              }
              uint64_t v95 = 10 * v62;
              if ((unsigned __int128)(v62 * (__int128)10) >> 64 != (10 * v62) >> 63) {
                goto LABEL_63;
              }
              uint64_t v62 = v95 - v94;
              if (__OFSUB__(v95, v94)) {
                goto LABEL_63;
              }
              LOBYTE(v54) = 0;
              ++v93;
              if (!--v92) {
                goto LABEL_66;
              }
            }
          }
LABEL_65:
          LOBYTE(v54) = 0;
          goto LABEL_66;
        }
      }
      goto LABEL_63;
    }
    goto LABEL_100;
  }
  if (v57)
  {
    if (v57 != 1 && (BYTE1(v54) - 48) <= 9u)
    {
      uint64_t v62 = (BYTE1(v54) - 48);
      if (v57 == 2) {
        goto LABEL_65;
      }
      if ((BYTE2(v54) - 48) <= 9u)
      {
        uint64_t v62 = 10 * (BYTE1(v54) - 48) + (BYTE2(v54) - 48);
        uint64_t v64 = v57 - 3;
        if (v64)
        {
          uint64_t v65 = (unsigned __int8 *)v110;
          while (1)
          {
            unsigned int v66 = *v65 - 48;
            if (v66 > 9) {
              goto LABEL_63;
            }
            uint64_t v67 = 10 * v62;
            if ((unsigned __int128)(v62 * (__int128)10) >> 64 != (10 * v62) >> 63) {
              goto LABEL_63;
            }
            uint64_t v62 = v67 + v66;
            if (__OFADD__(v67, v66)) {
              goto LABEL_63;
            }
            LOBYTE(v54) = 0;
            ++v65;
            if (!--v64) {
              goto LABEL_66;
            }
          }
        }
        goto LABEL_65;
      }
    }
    goto LABEL_63;
  }
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  LODWORD(v108) = 0;
  uint64_t v107 = 754;
  v106[0] = 2;
  uint64_t result = sub_2614D5D58();
  __break(1u);
  return result;
}

uint64_t sub_2613D289C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)v0 + 736))(MEMORY[0x263F8EE78]);
  (*(void (**)(uint64_t, double))(*(void *)v0 + 760))(v2, 0.0);
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v0 + 712))(-1);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)v0 + 656);
  uint64_t v5 = *(void *)(v4(v3) + 16);
  uint64_t v6 = swift_bridgeObjectRelease();
  if (v5)
  {
    unint64_t v7 = 0;
    uint64_t v8 = *(uint64_t (**)(unsigned char *))(*(void *)v0 + 672);
    while (1)
    {
      uint64_t v9 = *(void *)(v4(v6) + 16);
      swift_bridgeObjectRelease();
      float v10 = (uint64_t)v7 >= v9 - 8 ? 1.0 : 0.0;
      uint64_t v11 = (uint64_t (*)(unsigned char *, void))v8(v20);
      uint64_t v13 = v12;
      uint64_t v14 = *v12;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t *v13 = v14;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_2613D8E30(v14);
        uint64_t v14 = result;
        uint64_t *v13 = result;
      }
      if (v7 >= *(void *)(v14 + 16)) {
        break;
      }
      *(float *)(v14 + 4 * v7 + 32) = v10;
      uint64_t v6 = v11(v20, 0);
      if (v5 == ++v7) {
        goto LABEL_10;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_10:
    unint64_t v16 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v1 + 648))(v20);
    sub_2613CC788();
    v16(v20, 0);
    uint64_t v17 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v1 + 600))(v20);
    sub_2613CC788();
    v17(v20, 0);
    unint64_t v18 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v1 + 624))(v20);
    sub_2613CC788();
    v18(v20, 0);
    unint64_t v19 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v1 + 696))(v20);
    sub_2613CC788();
    v19(v20, 0);
    return (*(uint64_t (**)(void, unint64_t))(*(void *)v1 + 352))(0, 0xE000000000000000);
  }
  return result;
}

unint64_t static VACTCEncoder.build(config:debug:)(uint64_t a1, char a2)
{
  if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 480))(a1))
  {
    type metadata accessor for VATransducer();
    uint64_t v5 = swift_retain();
    unint64_t v6 = VATransducer.__allocating_init(config:debug:)(v5);
    if (!v2) {
      return v6;
    }
  }
  else
  {
    type metadata accessor for VACTCEncoder();
    uint64_t v3 = swift_allocObject();
    uint64_t v7 = swift_retain();
    sub_2613D0508(v7, a2 & 1);
  }
  return v3;
}

uint64_t sub_2613D2D3C(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v65 = a1;
  uint64_t v7 = sub_2614D50C8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v61 - v12;
  uint64_t v76 = sub_2614D4B78();
  uint64_t v14 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v69 = (char *)v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    char v63 = v13;
    uint64_t v64 = v7;
    unint64_t v16 = *(uint64_t (**)(uint64_t))(*(void *)v5 + 368);
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v68 = v16(v17);
    if (!v68)
    {
      swift_bridgeObjectRelease();
      uint64_t v53 = sub_26146718C();
      uint64_t v54 = v8;
      uint64_t v55 = v64;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v53, v64);
      unint64_t v56 = sub_2614D50A8();
      os_log_type_t v57 = sub_2614D5978();
      if (os_log_type_enabled(v56, v57))
      {
        uint64_t v58 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v58 = 0;
        _os_log_impl(&dword_2613B8000, v56, v57, "Context encoder not initialized. Ignoring setContext", v58, 2u);
        MEMORY[0x263E38060](v58, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v11, v55);
    }
    v61[0] = v8;
    (*(void (**)(uint64_t))(*(void *)v5 + 496))(1);
    uint64_t v74 = v65;
    unint64_t v75 = a2;
    unint64_t v62 = a2;
    uint64_t v72 = 44;
    unint64_t v73 = 0xE100000000000000;
    unint64_t v18 = (void (*)(uint64_t *, void))sub_2613DC3BC();
    uint64_t v19 = sub_2614D5B88();
    uint64_t v67 = *(void *)(v19 + 16);
    v61[1] = v19;
    if (!v67)
    {
LABEL_22:
      swift_bridgeObjectRelease();
      uint64_t v44 = sub_26146718C();
      uint64_t v45 = v61[0];
      unint64_t v46 = v63;
      uint64_t v47 = v64;
      (*(void (**)(char *, uint64_t, uint64_t))(v61[0] + 16))(v63, v44, v64);
      unint64_t v48 = v62;
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_2614D50A8();
      os_log_type_t v50 = sub_2614D5958();
      if (os_log_type_enabled(v49, v50))
      {
        uint64_t v51 = (uint8_t *)swift_slowAlloc();
        uint64_t v52 = swift_slowAlloc();
        uint64_t v74 = v52;
        *(_DWORD *)uint64_t v51 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v72 = sub_2613D875C(v65, v48, &v74);
        sub_2614D5B58();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_2613B8000, v49, v50, "Using contextual bias: %s", v51, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x263E38060](v52, -1, -1);
        MEMORY[0x263E38060](v51, -1, -1);
        swift_release();

        return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v63, v64);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v46, v47);
      }
    }
    unint64_t v20 = 0;
    unsigned int v66 = (void (**)(char *, uint64_t))(v14 + 8);
    unint64_t v21 = (uint64_t *)(v19 + 40);
    while (1)
    {
      uint64_t v74 = sub_2614D5428();
      unint64_t v75 = v22;
      uint64_t v72 = 95;
      unint64_t v73 = 0xE100000000000000;
      uint64_t v70 = 32;
      unint64_t v71 = 0xE100000000000000;
      uint64_t v23 = sub_2614D5BB8();
      unint64_t v25 = v24;
      swift_bridgeObjectRelease();
      uint64_t v74 = v23;
      unint64_t v75 = v25;
      uint64_t v26 = v69;
      sub_2614D4AF8();
      uint64_t v27 = sub_2614D5BA8();
      unint64_t v29 = v28;
      (*v66)(v26, v76);
      swift_bridgeObjectRelease();
      uint64_t v30 = v68;
      swift_retain();
      uint64_t v31 = sub_2613DCC2C(v27, v29, v30);
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release_n();
        return swift_bridgeObjectRelease();
      }
      uint64_t v32 = v31;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v34 = (void *)(*(uint64_t (**)(uint64_t *))(*(void *)v5 + 432))(&v74);
      uint64_t v35 = *v33;
      if (*v33)
      {
        unint64_t v36 = v33;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        void *v36 = v35;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v35 = sub_2613D8EC8(v35);
          void *v36 = v35;
        }
        if (v20 >= v35[2])
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          uint64_t result = (uint64_t)sub_2613D8EC8(v34);
          uint64_t *v21 = result;
          if (!*(void *)(result + 16)) {
            goto LABEL_36;
          }
LABEL_21:
          sub_2613CC788();
          v18(&v74, 0);
LABEL_28:
          uint64_t v59 = (uint64_t (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))(*(void *)v5 + 480))(&v74);
          if (*v60) {
            sub_2613CC788();
          }
          return v59(&v74, 0);
        }
        v35[v20 + 4] = v32;
      }
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t *, void))v34)(&v74, 0);
      uint64_t v34 = (void *)(*(uint64_t (**)(uint64_t *))(*(void *)v5 + 480))(&v74);
      uint64_t v39 = *v38;
      uint64_t v4 = 0;
      if (*v38)
      {
        uint64_t v40 = v38;
        char v41 = swift_isUniquelyReferenced_nonNull_native();
        char *v40 = v39;
        if ((v41 & 1) == 0)
        {
          uint64_t v39 = sub_2613D8E30((uint64_t)v39);
          char *v40 = v39;
        }
        if (v20 >= *((void *)v39 + 2)) {
          goto LABEL_34;
        }
        *(_DWORD *)&v39[4 * v20 + 32] = 1065353216;
      }
      ((void (*)(uint64_t *, void))v34)(&v74, 0);
      ++v20;
      v21 += 2;
      if (v67 == v20) {
        goto LABEL_22;
      }
    }
  }
  unint64_t v18 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))(*(void *)v5 + 432))(&v74);
  uint64_t v34 = (void *)*v42;
  if (!*v42)
  {
    v18(&v74, 0);
    goto LABEL_28;
  }
  unint64_t v21 = v42;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v21 = (uint64_t)v34;
  if ((result & 1) == 0) {
    goto LABEL_35;
  }
  if (v34[2]) {
    goto LABEL_21;
  }
LABEL_36:
  __break(1u);
  return result;
}

void *sub_2613D3584()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_2614D50C8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)v0 + 824))(v5);
  uint64_t v61 = *(void *)(v8 + 16);
  if (!v61)
  {
    swift_bridgeObjectRelease();
    return (void *)MEMORY[0x263F8EE78];
  }
  v49[1] = v1;
  uint64_t v62 = 0;
  unint64_t v10 = 0;
  uint64_t v11 = *(uint64_t (**)(void))(*(void *)v0 + 536);
  uint64_t v58 = *(void *)v0 + 536;
  uint64_t v59 = v11;
  uint64_t v60 = v8 + 32;
  uint64_t v54 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v55 = (void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  unint64_t v56 = (void *)MEMORY[0x263F8EE78];
  float v12 = 0.0;
  *(void *)&long long v9 = 136315138;
  long long v52 = v9;
  os_log_type_t v50 = v7;
  uint64_t v51 = MEMORY[0x263F8EE58] + 8;
  uint64_t v57 = v8;
  uint64_t v53 = v3;
  while (v10 < *(void *)(v8 + 16))
  {
    uint64_t v13 = *(void *)(v60 + 8 * v10);
    uint64_t v14 = *(void *)(v13 + 16);
    if (!v14) {
      goto LABEL_51;
    }
    float v15 = *(float *)(v13 + 32);
    uint64_t v16 = v14 - 1;
    if (v16)
    {
      uint64_t v18 = 0;
      uint64_t v17 = 0;
      uint64_t v19 = v13 + 36;
      do
      {
        float v20 = *(float *)(v19 + 4 * v18);
        if (v15 < v20) {
          uint64_t v17 = v18 + 1;
        }
        uint64_t v21 = v18 + 1;
        if (v15 < v20) {
          float v15 = *(float *)(v19 + 4 * v18);
        }
        ++v18;
      }
      while (v16 != v21);
    }
    else
    {
      uint64_t v17 = 0;
    }
    uint64_t v22 = v59();
    if (*(void *)(v22 + 16) && (unint64_t v23 = sub_2613D8F78(v17), (v24 & 1) != 0))
    {
      unint64_t v25 = (uint64_t *)(*(void *)(v22 + 56) + 16 * v23);
      uint64_t v26 = *v25;
      unint64_t v27 = v25[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v27)
      {
        if (v26 == 0x3E6B6E616C623CLL && v27 == 0xE700000000000000)
        {
          char v29 = 0;
          unint64_t v27 = 0xE700000000000000;
          uint64_t v26 = 0x3E6B6E616C623CLL;
LABEL_29:
          uint64_t v30 = v62;
          goto LABEL_30;
        }
        char v29 = 0;
        if (sub_2614D5FB8()) {
          goto LABEL_29;
        }
        uint64_t v30 = v62;
        if (v62) {
          goto LABEL_30;
        }
LABEL_27:
        uint64_t v30 = mach_absolute_time();
        goto LABEL_30;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v26 = 0;
    }
    uint64_t v30 = v62;
    unint64_t v27 = 0;
    char v29 = 1;
    if (!v62) {
      goto LABEL_27;
    }
LABEL_30:
    uint64_t v62 = v30;
    if (v17 < 1 || v17 == (*(uint64_t (**)(void))(*(void *)v2 + 704))())
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v31 = (*(uint64_t (**)(void))(*(void *)v2 + 344))();
      if (v29) {
        goto LABEL_52;
      }
      if (v31 == v26 && v27 == v32)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v34 = sub_2614D5FB8();
        swift_bridgeObjectRelease();
        if ((v34 & 1) == 0)
        {
          swift_bridgeObjectRetain();
          if (swift_isUniquelyReferenced_nonNull_native()) {
            uint64_t v35 = v56;
          }
          else {
            uint64_t v35 = sub_2613D864C(0, v56[2] + 1, 1, v56);
          }
          unint64_t v37 = v35[2];
          unint64_t v36 = v35[3];
          if (v37 >= v36 >> 1) {
            uint64_t v35 = sub_2613D864C((void *)(v36 > 1), v37 + 1, 1, v35);
          }
          v35[2] = v37 + 1;
          unint64_t v56 = v35;
          uint64_t v38 = &v35[2 * v37];
          v38[4] = v26;
          v38[5] = v27;
          (*(void (**)(uint64_t, unint64_t))(*(void *)v2 + 352))(v26, v27);
          goto LABEL_4;
        }
      }
      uint64_t v39 = sub_26146718C();
      (*v55)(v7, v39, v3);
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_2614D50A8();
      char v41 = v7;
      os_log_type_t v42 = sub_2614D5958();
      if (os_log_type_enabled(v40, v42))
      {
        uint64_t v43 = swift_slowAlloc();
        uint64_t v44 = swift_slowAlloc();
        uint64_t v65 = v44;
        *(_DWORD *)uint64_t v43 = v52;
        uint64_t v63 = v26;
        unint64_t v64 = v27;
        swift_bridgeObjectRetain();
        sub_2613C23AC(&qword_26A914A98);
        uint64_t v45 = sub_2614D5418();
        *(void *)(v43 + 4) = sub_2613D875C(v45, v46, &v65);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2613B8000, v40, v42, "Skipping repeated fragment \"%s\"", (uint8_t *)v43, 0xCu);
        swift_arrayDestroy();
        uint64_t v47 = v44;
        uint64_t v3 = v53;
        MEMORY[0x263E38060](v47, -1, -1);
        MEMORY[0x263E38060](v43, -1, -1);

        uint64_t v7 = v50;
        (*v54)(v50, v3);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*v54)(v41, v3);
        uint64_t v7 = v41;
      }
    }
LABEL_4:
    ++v10;
    (*(void (**)(uint64_t))(*(void *)v2 + 712))(v17);
    float v12 = v12 - v15;
    uint64_t v8 = v57;
    if (v10 == v61)
    {
      swift_bridgeObjectRelease();
      return v56;
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  uint64_t result = (void *)swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

void *sub_2613D3BCC(void *a1)
{
  void (**v9)(uint64_t *__return_ptr);
  void (*v10)(uint64_t *__return_ptr);
  uint64_t v11;
  void *result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t i;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void v56[3];
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74[6];
  void v75[6];
  _OWORD v76[3];
  long long v77;
  long long v78;
  long long v79;
  char v80[8];
  uint64_t v81;
  long long v82;
  uint64_t v83;
  uint64_t v84;
  long long v85;
  uint64_t v86;
  uint64_t v87;

  uint64_t v5 = v1;
  uint64_t v6 = a1;
  unint64_t v7 = a1[2];
  uint64_t v8 = *(void *)(v1 + 168);
  if (v7 != (*(uint64_t (**)(void))(*(void *)v8 + 248))())
  {
    __break(1u);
    goto LABEL_21;
  }
  if (!v7)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v7 = *(void *)(v6[4] + 16);
  if (v7 != (*(uint64_t (**)(void))(*(void *)v8 + 440))())
  {
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRelease();
    char v34 = MEMORY[0x263F8EE78];
    goto LABEL_24;
  }
  long long v9 = (void (**)(uint64_t *__return_ptr))(*(void *)v5 + 320);
  unint64_t v10 = *v9;
  (*v9)(v74);
  sub_2613DD400(v74);
  uint64_t v11 = sub_2613DC1BC((uint64_t)v74, (uint64_t)v80);
  if (!v81)
  {
    uint64_t v21 = v5;
    uint64_t result = (*(void *(**)(uint64_t *__return_ptr, uint64_t))(*(void *)v5 + 296))(&v64, v11);
    uint64_t v22 = v68;
    if (v68)
    {
      unint64_t v23 = v66;
      char v24 = v67;
      uint64_t v26 = v64;
      unint64_t v25 = v65;
      v56[0] = v64;
      v56[1] = v65;
      v56[2] = v66;
      uint64_t v57 = v67;
      uint64_t v58 = v68;
      uint64_t v59 = v69;
      uint64_t v60 = v70;
      uint64_t v61 = v71;
      uint64_t v62 = v72;
      uint64_t v63 = v73 & 1;
      sub_2613D4A24((uint64_t)v6, (uint64_t)v56);
      uint64_t result = (void *)sub_2613DC0FC(v26, v25, v23, v24, v22);
      if (v2) {
        return result;
      }
      return (void *)(*(uint64_t (**)(void *))(*(void *)v21 + 888))(result);
    }
    goto LABEL_31;
  }
  ((void (*)(void *__return_ptr, uint64_t))v10)(v75, v11);
  uint64_t result = (void *)sub_2613DC1BC((uint64_t)v75, (uint64_t)v76);
  if (!*((void *)&v76[0] + 1))
  {
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v77 = v76[0];
  uint64_t v78 = v76[1];
  uint64_t v79 = v76[2];
  uint64_t v13 = sub_26148D8C4(1952540006, 0xE400000000000000);
  uint64_t v4 = v2;
  if (v2) {
    goto LABEL_8;
  }
  uint64_t v14 = v13;
  sub_2613C23AC(&qword_26A914AA8);
  float v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_2614D81E0;
  *(void *)(v15 + 32) = v6;
  uint64_t v16 = *(void (**)(uint64_t))(*(void *)v14 + 648);
  swift_bridgeObjectRetain();
  v16(v15);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v17 = sub_26148D8C4(0x6E695F736B73616DLL, 0xE800000000000000);
  unint64_t v7 = 0xE90000000000006ELL;
  (*(void (**)(void))(*(void *)v5 + 656))();
  (*(void (**)(void))(*(void *)v17 + 624))();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v18 = sub_26148D8C4(0x695F74657366666FLL, 0xE90000000000006ELL);
  unint64_t v3 = 0xD000000000000010;
  (*(void (**)(void))(*(void *)v5 + 680))();
  (*(void (**)(void))(*(void *)v18 + 624))();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v19 = sub_26148D8C4(0xD000000000000010, 0x80000002614E07B0);
  (*(void (**)(void))(*(void *)v5 + 584))();
  (*(void (**)(void))(*(void *)v19 + 624))();
  swift_bridgeObjectRelease();
  swift_release();
  float v20 = sub_26148D8C4(0xD000000000000012, 0x80000002614E07D0);
  (*(void (**)(void))(*(void *)v5 + 608))();
  (*(void (**)(void))(*(void *)v20 + 624))();
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v27 = sub_26148D8C4(0x686361635F6E6E63, 0xEC0000006E695F65);
  (*(void (**)(void))(*(void *)v5 + 632))();
  (*(void (**)(void))(*(void *)v27 + 624))();
  swift_bridgeObjectRelease();
  unint64_t v28 = swift_release();
  if (((*(uint64_t (**)(uint64_t))(*(void *)v5 + 488))(v28) & 1) == 0) {
    goto LABEL_28;
  }
  uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v5 + 392))();
  if (!v29)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v6 = (void *)sub_26148D8C4((uint64_t)result, v29);
  uint64_t v30 = swift_bridgeObjectRelease();
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v5 + 416))(v30);
  if (!result)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  unint64_t v64 = MEMORY[0x263F8EE78];
  uint64_t v31 = result[2];
  if (!v31) {
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v31; ++i)
  {
    uint64_t v33 = swift_bridgeObjectRetain();
    sub_2613D64FC(v33);
  }
  swift_bridgeObjectRelease_n();
  char v34 = v64;
LABEL_24:
  (*(void (**)(uint64_t))(*v6 + 624))(v34);
  swift_bridgeObjectRelease();
  uint64_t v35 = swift_release();
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v5 + 440))(v35);
  if (!v36)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  unint64_t v37 = sub_26148D8C4((uint64_t)result, v36);
  uint64_t v38 = swift_bridgeObjectRelease();
  if (v4)
  {
LABEL_8:
    uint64_t v85 = v77;
    sub_2613DC364((uint64_t)&v85);
    os_log_type_t v86 = v78;
    sub_2613DC390((uint64_t)&v86);
    char v87 = *((void *)&v78 + 1);
    sub_2613DC390((uint64_t)&v87);
    swift_release();
    return (void *)swift_release();
  }
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v5 + 464))(v38);
  if (!result)
  {
LABEL_36:
    __break(1u);
    return result;
  }
  (*(void (**)(void))(*(void *)v37 + 624))();
  swift_bridgeObjectRelease();
  swift_release();
LABEL_28:
  uint64_t v39 = sub_261431BD8();
  uint64_t v40 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 848))(v39);
  os_log_type_t v42 = sub_26148D9F8(v40, v41);
  uint64_t v43 = swift_bridgeObjectRelease();
  uint64_t v44 = (*(uint64_t (**)(uint64_t))(*(void *)v42 + 744))(v43);
  uint64_t result = (void *)swift_release();
  if (!*(void *)(v44 + 16))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v45 = *(void *)(v44 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)v5 + 832))(v45);
  unint64_t v46 = sub_26148D9F8(v3 + 1, 0x80000002614E07F0);
  uint64_t v47 = (*(uint64_t (**)(uint64_t))(*(void *)v46 + 720))(v46);
  swift_release();
  (*(void (**)(uint64_t))(*(void *)v5 + 592))(v47);
  unint64_t v48 = sub_26148D9F8(v3 + 3, 0x80000002614E0810);
  uint64_t v49 = (*(uint64_t (**)(uint64_t))(*(void *)v48 + 720))(v48);
  swift_release();
  (*(void (**)(uint64_t))(*(void *)v5 + 616))(v49);
  os_log_type_t v50 = sub_26148D9F8(0x686361635F6E6E63, 0xED000074756F5F65);
  uint64_t v51 = (*(uint64_t (**)(uint64_t))(*(void *)v50 + 720))(v50);
  swift_release();
  (*(void (**)(uint64_t))(*(void *)v5 + 640))(v51);
  long long v52 = sub_26148D9F8(0x756F5F736B73616DLL, v7 + 6);
  uint64_t v53 = (*(uint64_t (**)(uint64_t))(*(void *)v52 + 720))(v52);
  swift_release();
  (*(void (**)(uint64_t))(*(void *)v5 + 664))(v53);
  uint64_t v54 = sub_26148D9F8(0x6F5F74657366666FLL, 0xEA00000000007475);
  uint64_t v55 = (*(uint64_t (**)(uint64_t))(*(void *)v54 + 720))(v54);
  swift_release();
  uint64_t v21 = v5;
  (*(void (**)(uint64_t))(*(void *)v5 + 688))(v55);
  char v82 = v77;
  sub_2613DC364((uint64_t)&v82);
  uint64_t v83 = v78;
  sub_2613DC390((uint64_t)&v83);
  char v84 = *((void *)&v78 + 1);
  sub_2613DC390((uint64_t)&v84);
  swift_release();
  uint64_t result = (void *)swift_release();
  return (void *)(*(uint64_t (**)(void *))(*(void *)v21 + 888))(result);
}

uint64_t sub_2613D4A24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v6 = *(void *)a2;
  int v7 = *(_DWORD *)(a2 + 24);
  sub_26147355C();
  sub_261473574();
  uint64_t result = sub_26147357C((uint64_t)&v48);
  if (v3) {
    return result;
  }
  if (*(void *)(a1 + 16) && *(void *)(*(void *)(a1 + 32) + 16))
  {
    MEMORY[0x270FA5388](result);
    sub_261473274((uint64_t (*)(void))sub_2613DD99C);
  }
  sub_261473574();
  sub_26147357C((uint64_t)&v49);
  int v62 = v7;
  uint64_t v46 = v6;
  long long v9 = (uint64_t (**)(unsigned char *))(*v4 + 672);
  unint64_t v10 = *v9;
  uint64_t v11 = (void (*)(unsigned char *, void))(*v9)(v47);
  MEMORY[0x270FA5388](v11);
  sub_261473274((uint64_t (*)(void))sub_2613DD438);
  uint64_t v45 = v4;
  v11(v47, 0);
  sub_261473574();
  sub_26147357C((uint64_t)&v50);
  float v12 = (void *)(*v4 + 696);
  uint64_t v13 = (uint64_t (*)(unsigned char *))*v12;
  uint64_t v14 = (void (*)(unsigned char *, void))((uint64_t (*)(unsigned char *))*v12)(v47);
  MEMORY[0x270FA5388](v14);
  sub_261473274((uint64_t (*)(void))sub_2613DD96C);
  v14(v47, 0);
  sub_261473574();
  sub_26147357C((uint64_t)&v51);
  float v15 = (uint64_t (**)(unsigned char *))(*v4 + 600);
  uint64_t v16 = *v15;
  uint64_t v43 = (void (*)(unsigned char *, void))(*v15)(v47);
  MEMORY[0x270FA5388](v43);
  sub_261473274((uint64_t (*)(void))sub_2613DD96C);
  v43(v47, 0);
  sub_261473574();
  sub_26147357C((uint64_t)&v52);
  uint64_t v17 = (uint64_t (**)(unsigned char *))(*v45 + 624);
  uint64_t v44 = *v17;
  uint64_t v18 = (void (*)(unsigned char *, void))(*v17)(v47);
  MEMORY[0x270FA5388](v18);
  sub_261473274((uint64_t (*)(void))sub_2613DD96C);
  v18(v47, 0);
  sub_261473574();
  sub_26147357C((uint64_t)&v53);
  os_log_type_t v42 = v13;
  uint64_t v19 = (uint64_t (**)(unsigned char *))(*v45 + 648);
  float v20 = *v19;
  uint64_t v21 = (uint64_t (*)(unsigned char *, void))(*v19)(v47);
  MEMORY[0x270FA5388](v21);
  sub_261473274((uint64_t (*)(void))sub_2613DD96C);
  uint64_t v22 = v21(v47, 0);
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(*v45 + 488))(v22);
  if (v23)
  {
    uint64_t result = (*(uint64_t (**)(void))(*v45 + 392))();
    if (v24)
    {
      sub_261473574();
      sub_26147357C((uint64_t)&v54);
      uint64_t v25 = swift_bridgeObjectRelease();
      uint64_t result = (*(uint64_t (**)(uint64_t))(*v45 + 440))(v25);
      if (v26)
      {
        sub_261473574();
        sub_26147357C((uint64_t)&v55);
        uint64_t v27 = swift_bridgeObjectRelease();
        uint64_t result = (*(uint64_t (**)(uint64_t))(*v45 + 416))(v27);
        if (result)
        {
          if (*(void *)(result + 16) && *(void *)(*(void *)(result + 32) + 16))
          {
            MEMORY[0x270FA5388](result);
            sub_261473274((uint64_t (*)(void))sub_2613DD99C);
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          uint64_t result = (*(uint64_t (**)(unsigned char *))(*v45 + 480))(v47);
          if (*v28)
          {
            char v29 = (uint64_t (*)(unsigned char *, void))result;
            MEMORY[0x270FA5388](result);
            sub_261473274((uint64_t (*)(void))sub_2613DD96C);
            uint64_t v23 = v29(v47, 0);
            goto LABEL_17;
          }
LABEL_23:
          __break(1u);
          return result;
        }
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
LABEL_17:
  (*(void (**)(uint64_t))(*v45 + 848))(v23);
  sub_261473568();
  sub_261473574();
  sub_26147357C((uint64_t)v56);
  swift_bridgeObjectRelease();
  sub_261473574();
  sub_26147357C((uint64_t)&v57);
  sub_261473574();
  sub_26147357C((uint64_t)&v58);
  sub_261473574();
  sub_26147357C((uint64_t)&v59);
  sub_261473574();
  sub_26147357C((uint64_t)&v60);
  sub_261473574();
  sub_26147357C((uint64_t)v61);
  uint64_t v30 = sub_2614734AC(v46);
  uint64_t v31 = *(void *)((*(uint64_t (**)(uint64_t))(*v45 + 824))(v30) + 16);
  swift_bridgeObjectRelease();
  if (!v31)
  {
    uint64_t v32 = v56[3];
    uint64_t v33 = sub_2613D1B04(v56[2], 0);
    uint64_t v34 = sub_2613D1BF8(v33, v32);
    (*(void (**)(uint64_t))(*v45 + 832))(v34);
  }
  uint64_t v35 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*v45 + 840))(v47);
  sub_2613DD650((uint64_t)v56, v36);
  v35(v47, 0);
  unint64_t v37 = (void (*)(unsigned char *, void))v16(v47);
  MEMORY[0x270FA5388](v37);
  sub_261473274((uint64_t (*)(void))sub_2613DD984);
  v37(v47, 0);
  uint64_t v38 = (void (*)(unsigned char *, void))v44(v47);
  MEMORY[0x270FA5388](v38);
  sub_261473274((uint64_t (*)(void))sub_2613DD984);
  v38(v47, 0);
  uint64_t v39 = (void (*)(unsigned char *, void))v20(v47);
  MEMORY[0x270FA5388](v39);
  sub_261473274((uint64_t (*)(void))sub_2613DD984);
  v39(v47, 0);
  uint64_t v40 = (void (*)(unsigned char *, void))v10(v47);
  MEMORY[0x270FA5388](v40);
  sub_261473274((uint64_t (*)(void))sub_2613DD984);
  v40(v47, 0);
  char v41 = (uint64_t (*)(unsigned char *, void))v42(v47);
  MEMORY[0x270FA5388](v41);
  sub_261473274((uint64_t (*)(void))sub_2613DD984);
  return v41(v47, 0);
}

uint64_t sub_2613D59A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v7 = sub_2613D289C();
  uint64_t v40 = a1;
  int64_t v8 = *(void *)(a1 + 16);
  long long v9 = *(void **)(v3 + 160);
  unint64_t v10 = (void *)MEMORY[0x263F8EED0];
  uint64_t result = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v9) + 0x80))(v7);
  if (!result)
  {
LABEL_45:
    __break(1u);
    return result;
  }
  uint64_t v12 = result;
  uint64_t v34 = v5;
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  if (result >= 1 && v8 != 0)
  {
    int64_t v17 = 0;
    uint64_t v38 = v9;
    int64_t v39 = v8;
    uint64_t v37 = result;
    while (1)
    {
      unint64_t v18 = __OFADD__(v17, v12) ? ((v17 + v12) >> 63) ^ 0x8000000000000000 : v17 + v12;
      uint64_t v19 = *(uint64_t (**)(void))((*v10 & *v9) + 0x88);
      uint64_t result = v19();
      if (__OFADD__(v17, result)) {
        break;
      }
      os_log_type_t v42 = v13;
      if (v8 >= v17 + result) {
        int64_t v20 = v17 + result;
      }
      else {
        int64_t v20 = v8;
      }
      if (v20 < v17) {
        goto LABEL_42;
      }
      if (v17 < 0) {
        goto LABEL_43;
      }
      int64_t v41 = v18;
      uint64_t v21 = (char *)MEMORY[0x263F8EE78];
      uint64_t v22 = v20 - v17;
      if (v20 != v17)
      {
        uint64_t v43 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        uint64_t result = sub_2613D917C(0, v22 & ~(v22 >> 63), 0);
        if (v22 < 0) {
          goto LABEL_44;
        }
        uint64_t v21 = (char *)v43;
        uint64_t result = v40;
        while (v20 != v17)
        {
          __int16 v23 = *(_WORD *)(result + 2 * v17 + 32);
          unint64_t v25 = *(void *)(v43 + 16);
          unint64_t v24 = *(void *)(v43 + 24);
          if (v25 >= v24 >> 1)
          {
            sub_2613D917C(v24 > 1, v25 + 1, 1);
            uint64_t result = v40;
          }
          *(void *)(v43 + 16) = v25 + 1;
          *(float *)(v43 + 4 * v25 + 32) = (float)v23;
          if (v20 == ++v17)
          {
            uint64_t result = swift_bridgeObjectRelease();
            goto LABEL_26;
          }
        }
        __break(1u);
        break;
      }
LABEL_26:
      uint64_t v26 = *((void *)v21 + 2);
      long long v9 = v38;
      uint64_t v27 = ((uint64_t (*)(uint64_t))v19)(result);
      unint64_t v10 = (void *)MEMORY[0x263F8EED0];
      uint64_t v13 = v42;
      uint64_t v12 = v37;
      if (v26 < v27)
      {
        do
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v21 = sub_2613D8310(0, *((void *)v21 + 2) + 1, 1, v21);
          }
          unint64_t v29 = *((void *)v21 + 2);
          unint64_t v28 = *((void *)v21 + 3);
          uint64_t v30 = v29 + 1;
          if (v29 >= v28 >> 1) {
            uint64_t v21 = sub_2613D8310((char *)(v28 > 1), v29 + 1, 1, v21);
          }
          *((void *)v21 + 2) = v30;
          *(_DWORD *)&v21[4 * v29 + 32] = 0;
        }
        while (v30 < v19());
      }
      uint64_t v31 = (*(uint64_t (**)(char *))((*v10 & *v38) + 0x170))(v21);
      swift_bridgeObjectRelease();
      int64_t v8 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_2613D8530(0, v42[2] + 1, 1, v42, &qword_26A914AB0, &qword_26A914AB8);
      }
      unint64_t v33 = v13[2];
      unint64_t v32 = v13[3];
      if (v33 >= v32 >> 1) {
        uint64_t v13 = sub_2613D8530((void *)(v32 > 1), v33 + 1, 1, v13, &qword_26A914AB0, &qword_26A914AB8);
      }
      v13[2] = v33 + 1;
      v13[v33 + 4] = v31;
      int64_t v17 = v41;
      if (v41 >= v39) {
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
LABEL_7:
  uint64_t v15 = v34;
  uint64_t v16 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)v34 + 912))(v13, a2, a3);
  if (!v4) {
    uint64_t v15 = v16;
  }
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_2613D5DA0(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, float), uint64_t a3)
{
  uint64_t v5 = v4;
  uint64_t v65 = a3;
  unsigned int v66 = a2;
  uint64_t v64 = sub_2614D4B78();
  uint64_t v61 = *(void *)(v64 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v64);
  uint64_t v63 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = MEMORY[0x263F8EE78];
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v69 = v3;
  uint64_t v10 = *(void *)(v3 + 168);
  uint64_t v11 = *(uint64_t (**)(void))(*(void *)v10 + 248);
  uint64_t v12 = ((uint64_t (*)(uint64_t))v11)(v7);
  uint64_t v13 = (*(uint64_t (**)(void))(*(void *)v10 + 296))();
  uint64_t v14 = v12 - v13;
  if (__OFSUB__(v12, v13))
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (!v14)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    uint64_t result = sub_2614D5D58();
    __break(1u);
    return result;
  }
  if (v14 >= 1 && v9 != 0)
  {
    uint64_t v17 = 0;
    uint64_t v60 = a1 + 32;
    int v62 = (void (**)(char *, uint64_t))(v61 + 8);
    float v18 = 0.0;
    uint64_t v71 = a1;
    uint64_t v67 = v14;
    int64_t v68 = v9;
    while (1)
    {
      unint64_t v19 = v17 + v14;
      if (__OFADD__(v17, v14)) {
        unint64_t v19 = ((v17 + v14) >> 63) ^ 0x8000000000000000;
      }
      int64_t v70 = v19;
      uint64_t v20 = v11();
      if (__OFADD__(v17, v20))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      if (v9 >= v17 + v20) {
        uint64_t v9 = v17 + v20;
      }
      if (v9 < v17) {
        goto LABEL_42;
      }
      if (v17 < 0) {
        goto LABEL_43;
      }
      sub_2614D5FE8();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v21 = swift_dynamicCastClass();
      if (!v21)
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = MEMORY[0x263F8EE78];
      }
      uint64_t v22 = *(void *)(v21 + 16);
      swift_release();
      if (v22 == v9 - v17)
      {
        __int16 v23 = (void *)swift_dynamicCastClass();
        if (!v23)
        {
          swift_bridgeObjectRelease();
          __int16 v23 = (void *)MEMORY[0x263F8EE78];
        }
      }
      else
      {
        uint64_t v49 = v71;
        swift_bridgeObjectRelease();
        __int16 v23 = (void *)sub_2613DAE10(v49, v60, v17, (2 * v9) | 1);
      }
      uint64_t v72 = v5;
      uint64_t v24 = swift_bridgeObjectRelease();
      uint64_t v25 = v23[2];
      if (v25 < ((uint64_t (*)(uint64_t))v11)(v24)) {
        break;
      }
LABEL_33:
      uint64_t v33 = v72;
      uint64_t v34 = sub_2613D3BCC(v23);
      uint64_t v5 = v33;
      if (v33)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (uint64_t)v23;
      }
      uint64_t v36 = v34;
      float v37 = v35;
      swift_bridgeObjectRelease();
      float v18 = v18 + v37;
      if (v36[2])
      {
        uint64_t v38 = swift_bridgeObjectRetain();
        sub_2613D6644(v38);
        uint64_t v77 = (uint64_t)v36;
        sub_2613C23AC(&qword_26A914A70);
        sub_2613DCEC0();
        uint64_t v39 = sub_2614D5338();
        uint64_t v41 = v40;
        swift_bridgeObjectRelease();
        uint64_t v77 = v39;
        uint64_t v78 = v41;
        uint64_t v75 = 8492770;
        unint64_t v76 = 0xA300000000000000;
        uint64_t v73 = 32;
        unint64_t v74 = 0xE100000000000000;
        sub_2613DC3BC();
        uint64_t v72 = 0;
        uint64_t v42 = sub_2614D5BB8();
        uint64_t v44 = v43;
        swift_bridgeObjectRelease();
        uint64_t v77 = v42;
        uint64_t v78 = v44;
        uint64_t v45 = v63;
        sub_2614D4AF8();
        uint64_t v5 = v72;
        uint64_t v46 = sub_2614D5BA8();
        uint64_t v48 = v47;
        (*v62)(v45, v64);
        swift_bridgeObjectRelease();
        v66(v46, v48, 0, v18);
      }
      swift_bridgeObjectRelease();
      uint64_t v17 = v70;
      uint64_t v14 = v67;
      uint64_t v9 = v68;
      if (v70 >= v68)
      {
        uint64_t v16 = v79;
        goto LABEL_39;
      }
    }
    uint64_t v26 = *(uint64_t (**)(void))(*(void *)v10 + 440);
    while (1)
    {
      uint64_t v27 = v26();
      if (v27 < 0) {
        goto LABEL_46;
      }
      uint64_t v28 = v27;
      if (v27)
      {
        uint64_t v29 = sub_2614D56C8();
        *(void *)(v29 + 16) = v28;
        memset_pattern16((void *)(v29 + 32), &unk_2614D9180, 4 * v28);
      }
      else
      {
        uint64_t v29 = MEMORY[0x263F8EE78];
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        __int16 v23 = sub_2613D8530(0, v23[2] + 1, 1, v23, &qword_26A914AB0, &qword_26A914AB8);
      }
      unint64_t v31 = v23[2];
      unint64_t v30 = v23[3];
      uint64_t v32 = v31 + 1;
      if (v31 >= v30 >> 1) {
        __int16 v23 = sub_2613D8530((void *)(v30 > 1), v31 + 1, 1, v23, &qword_26A914AB0, &qword_26A914AB8);
      }
      v23[2] = v32;
      v23[v31 + 4] = v29;
      if (v32 >= v11()) {
        goto LABEL_33;
      }
    }
  }
  float v18 = 0.0;
  uint64_t v16 = MEMORY[0x263F8EE78];
LABEL_39:
  uint64_t v77 = v16;
  sub_2613C23AC(&qword_26A914A70);
  sub_2613DCEC0();
  uint64_t v50 = sub_2614D5338();
  uint64_t v52 = v51;
  swift_bridgeObjectRelease();
  uint64_t v77 = v50;
  uint64_t v78 = v52;
  uint64_t v75 = 8492770;
  unint64_t v76 = 0xA300000000000000;
  uint64_t v73 = 32;
  unint64_t v74 = 0xE100000000000000;
  sub_2613DC3BC();
  uint64_t v53 = sub_2614D5BB8();
  uint64_t v55 = v54;
  swift_bridgeObjectRelease();
  uint64_t v77 = v53;
  uint64_t v78 = v55;
  unint64_t v56 = v63;
  sub_2614D4AF8();
  __int16 v23 = (void *)sub_2614D5BA8();
  uint64_t v58 = v57;
  (*(void (**)(char *, uint64_t))(v61 + 8))(v56, v64);
  swift_bridgeObjectRelease();
  v66((uint64_t)v23, v58, 1, v18);
  (*(void (**)(void, unint64_t))(*(void *)v69 + 352))(0, 0xE000000000000000);
  return (uint64_t)v23;
}

uint64_t sub_2613D64FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_2613D8310(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = &v3[4 * v8 + 32];
  if (a1 + 32 < (unint64_t)&v9[4 * v2] && (unint64_t)v9 < a1 + 32 + 4 * v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), 4 * v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_2614D5DE8();
  __break(1u);
  return result;
}

uint64_t sub_2613D6644(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_2613D864C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_2614D5DE8();
  __break(1u);
  return result;
}

uint64_t sub_2613D6798()
{
  return sub_2613D289C();
}

void sub_2613D67C0(void *a1@<X0>, uint64_t a2@<X8>)
{
  int64_t v4 = v2;
  uint64_t v7 = sub_2614D4B78();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2613D3BCC(a1);
  if (!v3)
  {
    uint64_t v14 = (uint64_t)v11;
    float v15 = v13;
    uint64_t v16 = v12;
    uint64_t v65 = v8;
    uint64_t v17 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))(*v4 + 768))(&v72);
    float *v18 = v15 + *v18;
    v17(&v72, 0);
    uint64_t v19 = *(void *)(v14 + 16);
    uint64_t v66 = 0;
    uint64_t v67 = v16;
    if (v19)
    {
      (*(void (**)(void))(*v4 + 784))(0);
      uint64_t v20 = *(uint64_t (**)(uint64_t *))(*v4 + 744);
      swift_bridgeObjectRetain();
      uint64_t v21 = v20(&v72);
      uint64_t v64 = a2;
      uint64_t v22 = (uint64_t (*)(uint64_t *, void))v21;
      sub_2613D6644(v14);
      uint64_t v23 = v22(&v72, 0);
      uint64_t v72 = (*(uint64_t (**)(uint64_t))(*v4 + 728))(v23);
      sub_2613C23AC(&qword_26A914A70);
      sub_2613DCEC0();
      uint64_t v24 = sub_2614D5338();
      uint64_t v26 = v25;
      swift_bridgeObjectRelease();
      uint64_t v72 = v24;
      uint64_t v73 = v26;
      uint64_t v70 = 8492770;
      unint64_t v71 = 0xA300000000000000;
      uint64_t v68 = 32;
      unint64_t v69 = 0xE100000000000000;
      sub_2613DC3BC();
      uint64_t v27 = sub_2614D5BB8();
      uint64_t v29 = v28;
      swift_bridgeObjectRelease();
      uint64_t v72 = v27;
      uint64_t v73 = v29;
      sub_2614D4AF8();
      sub_2614D5BA8();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v10, v7);
      swift_bridgeObjectRelease();
      uint64_t v30 = sub_2614D5428();
      uint64_t v32 = v31;
      swift_bridgeObjectRelease();
      uint64_t v72 = v30;
      uint64_t v73 = v32;
      uint64_t v70 = 0x696D72657465645CLL;
      unint64_t v71 = 0xEB0000000072656ELL;
      uint64_t v68 = 0;
      unint64_t v69 = 0xE000000000000000;
      a2 = v64;
      uint64_t v33 = sub_2614D5BB8();
      unint64_t v35 = v34;
      swift_bridgeObjectRelease();
      uint64_t v36 = swift_bridgeObjectRelease();
      char v37 = 0;
    }
    else
    {
      uint64_t v38 = swift_bridgeObjectRelease();
      uint64_t v39 = (uint64_t (**)(uint64_t))(*v4 + 728);
      uint64_t v40 = *v39;
      uint64_t v41 = *(void *)((*v39)(v38) + 16);
      uint64_t v36 = swift_bridgeObjectRelease();
      unint64_t v35 = 0xE000000000000000;
      if (v41)
      {
        uint64_t v64 = a2;
        uint64_t v72 = v40(v36);
        sub_2613C23AC(&qword_26A914A70);
        sub_2613DCEC0();
        uint64_t v42 = sub_2614D5338();
        uint64_t v44 = v43;
        swift_bridgeObjectRelease();
        uint64_t v72 = v42;
        uint64_t v73 = v44;
        uint64_t v70 = 8492770;
        unint64_t v71 = 0xA300000000000000;
        uint64_t v68 = 32;
        unint64_t v69 = 0xE100000000000000;
        sub_2613DC3BC();
        uint64_t v45 = sub_2614D5BB8();
        uint64_t v47 = v46;
        swift_bridgeObjectRelease();
        uint64_t v72 = v45;
        uint64_t v73 = v47;
        sub_2614D4AF8();
        sub_2614D5BA8();
        (*(void (**)(char *, uint64_t))(v65 + 8))(v10, v7);
        swift_bridgeObjectRelease();
        uint64_t v48 = sub_2614D5428();
        uint64_t v50 = v49;
        swift_bridgeObjectRelease();
        uint64_t v72 = v48;
        uint64_t v73 = v50;
        uint64_t v70 = 0x696D72657465645CLL;
        unint64_t v71 = 0xEB0000000072656ELL;
        uint64_t v68 = 0;
        unint64_t v69 = 0xE000000000000000;
        uint64_t v33 = sub_2614D5BB8();
        unint64_t v35 = v51;
        uint64_t v36 = swift_bridgeObjectRelease();
        uint64_t v52 = HIBYTE(v35) & 0xF;
        if ((v35 & 0x2000000000000000) == 0) {
          uint64_t v52 = v33 & 0xFFFFFFFFFFFFLL;
        }
        if (v52)
        {
          char v53 = (*(uint64_t (**)(uint64_t))(*v4 + 800))(v36);
          uint64_t v54 = *v4;
          if (v53)
          {
            char v55 = (*(uint64_t (**)(void))(v54 + 776))();
            unint64_t v56 = *(uint64_t (**)(uint64_t))(*v4 + 784);
            a2 = v64;
            if (v55)
            {
              v56(0);
              (*(void (**)(void, unint64_t))(*v4 + 352))(0, 0xE000000000000000);
              uint64_t v57 = (uint64_t (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))(*v4 + 744))(&v72);
              void *v58 = MEMORY[0x263F8EE78];
              swift_bridgeObjectRelease();
              uint64_t v59 = v57(&v72, 0);
              uint64_t v36 = (*(uint64_t (**)(uint64_t, double))(*v4 + 760))(v59, 0.0);
              char v37 = 1;
            }
            else
            {
              uint64_t v36 = v56(1);
              char v37 = 0;
            }
          }
          else
          {
            (*(void (**)(void, unint64_t))(v54 + 352))(0, 0xE000000000000000);
            uint64_t v60 = (uint64_t (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))(*v4 + 744))(&v72);
            void *v61 = MEMORY[0x263F8EE78];
            swift_bridgeObjectRelease();
            uint64_t v62 = v60(&v72, 0);
            uint64_t v36 = (*(uint64_t (**)(uint64_t, double))(*v4 + 760))(v62, 0.0);
            char v37 = 1;
            a2 = v64;
          }
        }
        else
        {
          char v37 = 0;
          a2 = v64;
        }
      }
      else
      {
        char v37 = 0;
        uint64_t v33 = 0;
      }
    }
    float v63 = (*(float (**)(uint64_t))(*v4 + 752))(v36);
    *(void *)a2 = v33;
    *(void *)(a2 + 8) = v35;
    *(float *)(a2 + 16) = v63;
    *(unsigned char *)(a2 + 20) = v37;
    *(void *)(a2 + 24) = v67;
  }
}

float sub_2613D7088()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2614D4B78();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)v0 + 728))(v4);
  sub_2613C23AC(&qword_26A914A70);
  sub_2613DCEC0();
  uint64_t v7 = sub_2614D5338();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t v17 = v7;
  uint64_t v18 = v9;
  v16[4] = 8492770;
  v16[5] = 0xA300000000000000;
  v16[2] = 32;
  v16[3] = 0xE100000000000000;
  sub_2613DC3BC();
  uint64_t v10 = sub_2614D5BB8();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  uint64_t v17 = v10;
  uint64_t v18 = v12;
  sub_2614D4AF8();
  sub_2614D5BA8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  uint64_t v13 = swift_bridgeObjectRelease();
  float v14 = (*(float (**)(uint64_t))(*(void *)v1 + 752))(v13);
  sub_2613D289C();
  return v14;
}

uint64_t VACTCEncoder.deinit()
{
  sub_2613DC0FC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
  sub_2613DC224(*(void *)(v0 + 96), *(void *)(v0 + 104));
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t VACTCEncoder.__deallocating_deinit()
{
  VACTCEncoder.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2613D7400()
{
  return sub_261473274((uint64_t (*)(void))sub_2613DCF48);
}

uint64_t sub_2613D7484(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    uint64_t v3 = result;
    uint64_t v4 = 0;
    uint64_t v5 = a2 + 32;
    while (v3)
    {
      uint64_t v6 = *(void *)(*(void *)v5 + 16);
      uint64_t v7 = (char *)(v3 + 4 * v4);
      uint64_t v8 = (char *)(*(void *)v5 + 32);
      if (v8 < &v7[4 * v6] && v7 < &v8[4 * v6]) {
        goto LABEL_14;
      }
      uint64_t result = (uint64_t)memcpy(v7, v8, 4 * v6);
      BOOL v10 = __OFADD__(v4, v6);
      v4 += v6;
      if (v10)
      {
        __break(1u);
        break;
      }
      v5 += 8;
      if (!--v2) {
        return result;
      }
    }
    __break(1u);
LABEL_14:
    uint64_t result = sub_2614D5DE8();
    __break(1u);
  }
  return result;
}

void *sub_2613D7560(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2614D50C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(*(void *)a3 + 16);
  if (v10 <= a2)
  {
    if (a1)
    {
      uint64_t v17 = (char *)(*(void *)a3 + 32);
      size_t v18 = 4 * v10;
      uint64_t v19 = &a1[4 * v10];
      uint64_t v20 = &v17[4 * v10];
      if (v17 >= v19 || v20 <= a1) {
        return memcpy(a1, v17, v18);
      }
    }
    else
    {
      __break(1u);
    }
    uint64_t result = (void *)sub_2614D5DE8();
    __break(1u);
  }
  else
  {
    uint64_t v11 = sub_26146718C();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
    uint64_t v12 = sub_2614D50A8();
    os_log_type_t v13 = sub_2614D5978();
    if (os_log_type_enabled(v12, v13))
    {
      float v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)float v14 = 0;
      _os_log_impl(&dword_2613B8000, v12, v13, "Input array size exceeds buffer capacity", v14, 2u);
      MEMORY[0x263E38060](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_2613DC2B8();
    swift_allocError();
    void *v15 = 0xD000000000000028;
    v15[1] = 0x80000002614E0870;
    return (void *)swift_willThrow();
  }
  return result;
}

uint64_t sub_2613D77A0(char *a1, int64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2614D50C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(*(void *)a3 + 16);
  if (v10 <= a2)
  {
    uint64_t v17 = sub_2613D1B04(v10, 0);
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if (a1) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_2613D8E30(v17);
      if (a1)
      {
LABEL_7:
        size_t v18 = (char *)(v17 + 32);
        size_t v19 = 4 * *(void *)(*(void *)a3 + 16);
        if (v17 + 32 + v19 <= (unint64_t)a1 || v18 >= &a1[v19])
        {
          memcpy(v18, a1, v19);
          *(void *)a3 = v17;
          return swift_bridgeObjectRelease();
        }
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_15:
    uint64_t result = sub_2614D5DE8();
    __break(1u);
    return result;
  }
  uint64_t v11 = sub_26146718C();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  uint64_t v12 = sub_2614D50A8();
  os_log_type_t v13 = sub_2614D5978();
  if (os_log_type_enabled(v12, v13))
  {
    float v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)float v14 = 0;
    _os_log_impl(&dword_2613B8000, v12, v13, "Output array size exceeds buffer capacity", v14, 2u);
    MEMORY[0x263E38060](v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_2613DC2B8();
  swift_allocError();
  void *v15 = 0xD000000000000029;
  v15[1] = 0x80000002614E0780;
  return swift_willThrow();
}

uint64_t sub_2613D7A1C(char *a1, int64_t a2, int64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_2614D50C8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a2 >= a3)
  {
    uint64_t v18 = sub_2613D1B04(a3, 0);
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if (a1)
      {
LABEL_7:
        if ((a3 & 0x8000000000000000) == 0)
        {
          size_t v19 = (char *)(v18 + 32);
          size_t v20 = 4 * a3;
          if (v18 + 32 + 4 * a3 <= (unint64_t)a1 || v19 >= &a1[v20])
          {
            memcpy(v19, a1, v20);
            uint64_t v22 = v18;
            *(void *)a4 = sub_2613CDE88(0, *(void *)(*(void *)a4 + 16), a4, &v22);
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
        }
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v18 = (uint64_t)sub_2613D8E30(v18);
      if (a1) {
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_13:
    uint64_t result = sub_2614D5DE8();
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_26146718C();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  os_log_type_t v13 = sub_2614D50A8();
  os_log_type_t v14 = sub_2614D5978();
  if (os_log_type_enabled(v13, v14))
  {
    float v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)float v15 = 0;
    _os_log_impl(&dword_2613B8000, v13, v14, "Output array size exceeds buffer capacity", v15, 2u);
    MEMORY[0x263E38060](v15, -1, -1);
  }

  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  sub_2613DC2B8();
  swift_allocError();
  void *v16 = 0xD000000000000029;
  v16[1] = 0x80000002614E0780;
  return swift_willThrow();
}

uint64_t sub_2613D7D10(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x263F8EE78];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_2613D81B4(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    os_log_type_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  os_log_type_t v13 = (void *)MEMORY[0x263F8EE78];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_2614D5588();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_2614D5498();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_2614D5498();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_2614D55B8();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    os_log_type_t v13 = sub_2613D8420(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    os_log_type_t v13 = sub_2613D8420((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  v13[2] = v27 + 1;
  uint64_t v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_2614D5498();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_2614D55B8();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      os_log_type_t v13 = sub_2613D8420(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      os_log_type_t v13 = sub_2613D8420((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    v13[2] = v39 + 1;
    uint64_t v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_2614D5D58();
  __break(1u);
LABEL_42:
  uint64_t result = sub_2614D5D58();
  __break(1u);
  return result;
}

uint64_t sub_2613D81B4(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_2614D55B8();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_2613D8420(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_2613D8420((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    void v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_2614D5D58();
  __break(1u);
  return result;
}

char *sub_2613D8310(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2613C23AC(&qword_26A914AC0);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32]) {
          memmove(v13, a4 + 32, 4 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_2613DB100(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2613D8420(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2613C23AC(&qword_26A914AE8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2613DCB38(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2613D8530(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_2613C23AC(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = j__malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      unint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      unint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2613DD454(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_2613D864C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2613C23AC(&qword_26A914AC8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2613DD55C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2613D875C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_2613D8830(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_2613DD768((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_2613DD768((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_2613DD718((uint64_t)v12);
  return v7;
}

uint64_t sub_2613D8830(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_2614D5B68();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_2613D89EC(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_2614D5C98();
  if (!v8)
  {
    sub_2614D5D58();
    __break(1u);
LABEL_17:
    uint64_t result = sub_2614D5DE8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_2613D89EC(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_2613D8A84(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2613D8CE0(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_2613D8CE0(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2613D8A84(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_2613D8BFC(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_2614D5C48();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_2614D5D58();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_2614D5508();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_2614D5DE8();
    __break(1u);
LABEL_14:
    uint64_t result = sub_2614D5D58();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_2613D8BFC(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_2613C23AC(&qword_26A914AD0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_2613D8C64(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_2614D5558();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x263E36650](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_2613D8CE0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_2613C23AC(&qword_26A914AD0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2614D5DE8();
  __break(1u);
  return result;
}

char *sub_2613D8E30(uint64_t a1)
{
  return sub_2613D8310(0, *(void *)(a1 + 16), 0, (char *)a1);
}

__n128 sub_2613D8E44(__n128 *a1)
{
  uint64_t v2 = *(__n128 **)(v1 + 16);
  unint64_t v3 = v2[1].n128_u64[0];
  if (v3)
  {
    if (v3 < 8 || (unint64_t)((char *)a1 - (char *)v2 - 32) < 0x20)
    {
      uint64_t v4 = 0;
LABEL_5:
      uint64_t v5 = (unsigned __int32 *)a1 + v4;
      unint64_t v6 = (unsigned __int32 *)&v2[2] + v4;
      unint64_t v7 = v3 - v4;
      do
      {
        unsigned __int32 v8 = *v6++;
        result.n128_u32[0] = v8;
        *v5++ = v8;
        --v7;
      }
      while (v7);
      return result;
    }
    uint64_t v4 = v3 & 0x7FFFFFFFFFFFFFF8;
    uint64_t v10 = v2 + 3;
    size_t v11 = a1 + 1;
    uint64_t v12 = v3 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      __n128 result = v10[-1];
      __n128 v13 = *v10;
      v11[-1] = result;
      __n128 *v11 = v13;
      v10 += 2;
      v11 += 2;
      v12 -= 8;
    }
    while (v12);
    if (v3 != v4) {
      goto LABEL_5;
    }
  }
  return result;
}

void *sub_2613D8EC8(void *a1)
{
  return sub_2613D8530(0, a1[2], 0, a1, &qword_26A914AB0, &qword_26A914AB8);
}

unint64_t sub_2613D8F00(uint64_t a1, uint64_t a2)
{
  sub_2614D6088();
  sub_2614D5478();
  uint64_t v4 = sub_2614D60B8();
  return sub_2613D8FBC(a1, a2, v4);
}

unint64_t sub_2613D8F78(uint64_t a1)
{
  uint64_t v2 = sub_2614D6078();
  return sub_2613D90A0(a1, v2);
}

unint64_t sub_2613D8FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2614D5FB8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        __n128 v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2614D5FB8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_2613D90A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_2613D913C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2613D91BC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2613D915C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2613D9328(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2613D917C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2613D9488(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2613D919C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2613D95E8(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2613D91BC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2613C23AC(&qword_26A914AC8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  __n128 v13 = v10 + 32;
  BOOL v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2614D5DE8();
  __break(1u);
  return result;
}

uint64_t sub_2613D9328(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2613C23AC(&qword_26A914B10);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  __n128 v13 = v10 + 32;
  BOOL v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2614D5DE8();
  __break(1u);
  return result;
}

uint64_t sub_2613D9488(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2613C23AC(&qword_26A914AC0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  __n128 v13 = v10 + 32;
  BOOL v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2614D5DE8();
  __break(1u);
  return result;
}

uint64_t sub_2613D95E8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2613C23AC(&qword_26A914AB0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_2613C23AC(&qword_26A914AB8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2614D5DE8();
  __break(1u);
  return result;
}

unsigned __int8 *sub_2613D9774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_2614D55A8();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    int64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_2613D9AD8();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    int64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    int64_t v7 = (unsigned __int8 *)sub_2614D5C98();
  }
LABEL_7:
  int64_t v11 = sub_2613D985C(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_2613D985C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  char v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_2613D9AD8()
{
  unint64_t v0 = sub_2614D55B8();
  uint64_t v4 = sub_2613D9B58(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2613D9B58(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_2613D9CB0(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_2613D8BFC(v9, 0);
      unint64_t v12 = sub_2613D9DB0((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_2614D5C98();
LABEL_4:
        JUMPOUT(0x263E36590);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x263E36590](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x263E36590]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_2613D9CB0(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_2613D8C64(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_2613D8C64(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t sub_2613D9DB0(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_2613D8C64(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_2614D5548();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_2614D5C98();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_2613D8C64(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_2614D5518();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2613D9FC4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_2613D8F78(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_2613DA828();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      char v19 = (uint64_t *)(v18[7] + 16 * v12);
      uint64_t result = *v19;
      uint64_t *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(void *)(v18[6] + 8 * v12) = a3;
    unint64_t v23 = (uint64_t *)(v18[7] + 16 * v12);
    uint64_t *v23 = a1;
    v23[1] = a2;
    uint64_t v24 = v18[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (!v25)
    {
      uint64_t result = 0;
      v18[2] = v26;
      return result;
    }
    goto LABEL_14;
  }
  sub_2613DA264(v15, a4 & 1);
  unint64_t v21 = sub_2613D8F78(a3);
  if ((v16 & 1) == (v22 & 1))
  {
    unint64_t v12 = v21;
    unint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_2614D5FF8();
  __break(1u);
  return result;
}

uint64_t sub_2613DA108(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_2613D8F00(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  uint64_t v14 = v13 + ((v11 ^ 1) & 1);
  if (__OFADD__(v13, (v11 ^ 1) & 1))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unsigned __int8 v15 = v11;
  uint64_t v16 = *(void *)(v10 + 24);
  if (v16 >= v14 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v16 >= v14 && (a4 & 1) == 0)
  {
    sub_2613DA9D8();
LABEL_7:
    uint64_t v17 = (void *)*v5;
    if (v15)
    {
LABEL_8:
      uint64_t v18 = v17[7];
      uint64_t result = *(void *)(v18 + 8 * v12);
      *(void *)(v18 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v17[(v12 >> 6) + 8] |= 1 << v12;
    char v22 = (uint64_t *)(v17[6] + 16 * v12);
    *char v22 = a2;
    v22[1] = a3;
    *(void *)(v17[7] + 8 * v12) = a1;
    uint64_t v23 = v17[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (!v24)
    {
      v17[2] = v25;
      swift_bridgeObjectRetain();
      return 0;
    }
    goto LABEL_14;
  }
  sub_2613DA51C(v14, a4 & 1);
  unint64_t v20 = sub_2613D8F00(a2, a3);
  if ((v15 & 1) == (v21 & 1))
  {
    unint64_t v12 = v20;
    uint64_t v17 = (void *)*v5;
    if (v15) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_2614D5FF8();
  __break(1u);
  return result;
}

uint64_t sub_2613DA264(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_2613C23AC(&qword_26A914AD8);
  uint64_t result = sub_2614D5DC8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v34 = (uint64_t *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v9;
    uint64_t v32 = v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = v34[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero(v34, 8 * v33);
                }
                else {
                  uint64_t *v34 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v21 = v34[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      uint64_t v28 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v19);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_2614D6078();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      uint64_t v17 = (void *)(*(void *)(v7 + 56) + 16 * v16);
      void *v17 = v29;
      v17[1] = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_2613DA51C(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_2613C23AC(&qword_26A914AE0);
  char v37 = a2;
  uint64_t v6 = sub_2614D5DC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          unint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_2614D6088();
    sub_2614D5478();
    uint64_t result = sub_2614D60B8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v3 = v34;
  int64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

void *sub_2613DA828()
{
  unint64_t v1 = v0;
  sub_2613C23AC(&qword_26A914AD8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2614D5DB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    int64_t v22 = (void *)(*(void *)(v4 + 56) + v18);
    *int64_t v22 = v21;
    v22[1] = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2613DA9D8()
{
  unint64_t v1 = v0;
  sub_2613C23AC(&qword_26A914AE0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2614D5DB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_2613DAB88(float a1, float a2, float a3)
{
  BOOL v6 = a1 <= a2;
  if (a3 > 0.0) {
    BOOL v6 = a1 >= a2;
  }
  if (!v6)
  {
    uint64_t v7 = -1;
    do
    {
      uint64_t v8 = ++v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
        goto LABEL_45;
      }
      float v9 = a1 + (float)((float)v8 * a3);
      BOOL v10 = v9 <= a2;
      if (a3 > 0.0) {
        BOOL v10 = v9 >= a2;
      }
    }
    while (!v10);
    if (v8 <= 0) {
      goto LABEL_18;
    }
    sub_2613C23AC(&qword_26A914AC0);
    uint64_t v11 = (float *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 29;
    }
    uint64_t v14 = v13 >> 2;
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * v14;
    unint64_t v15 = v11 + 8;
    uint64_t v16 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v8;
    uint64_t v17 = -1;
    float v18 = a1;
    while (1)
    {
      BOOL v19 = v18 <= a2;
      if (a3 > 0.0) {
        BOOL v19 = v18 >= a2;
      }
      if (v19) {
        goto LABEL_47;
      }
      float v20 = a1 + (float)((float)(v17 + 2) * a3);
      *v15++ = v18;
      ++v17;
      float v18 = v20;
      if (v7 == v17) {
        goto LABEL_19;
      }
    }
  }
LABEL_18:
  uint64_t v8 = 0;
  uint64_t v11 = (float *)MEMORY[0x263F8EE78];
  unint64_t v15 = (float *)(MEMORY[0x263F8EE78] + 32);
  uint64_t v16 = *(void *)(MEMORY[0x263F8EE78] + 24) >> 1;
  float v20 = a1;
LABEL_19:
  BOOL v21 = v20 <= a2;
  if (a3 > 0.0) {
    BOOL v21 = v20 >= a2;
  }
  if (!v21)
  {
    while (!__OFADD__(v8, 1))
    {
      if (!v16)
      {
        unint64_t v22 = *((void *)v11 + 3);
        if ((uint64_t)((v22 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_48;
        }
        int64_t v23 = v22 & 0xFFFFFFFFFFFFFFFELL;
        if (v23 <= 1) {
          uint64_t v24 = 1;
        }
        else {
          uint64_t v24 = v23;
        }
        sub_2613C23AC(&qword_26A914AC0);
        int64_t v25 = (float *)swift_allocObject();
        int64_t v26 = j__malloc_size(v25);
        uint64_t v27 = v26 - 32;
        if (v26 < 32) {
          uint64_t v27 = v26 - 29;
        }
        uint64_t v28 = v27 >> 2;
        *((void *)v25 + 2) = v24;
        *((void *)v25 + 3) = 2 * (v27 >> 2);
        unint64_t v29 = (unint64_t)(v25 + 8);
        uint64_t v30 = *((void *)v11 + 3) >> 1;
        if (*((void *)v11 + 2))
        {
          uint64_t v31 = v11 + 8;
          if (v25 != v11 || v29 >= (unint64_t)v31 + 4 * v30) {
            memmove(v25 + 8, v31, 4 * v30);
          }
          *((void *)v11 + 2) = 0;
        }
        unint64_t v15 = (float *)(v29 + 4 * v30);
        uint64_t v16 = (v28 & 0x7FFFFFFFFFFFFFFFLL) - v30;
        swift_release();
        uint64_t v11 = v25;
      }
      BOOL v32 = __OFSUB__(v16--, 1);
      if (v32) {
        goto LABEL_46;
      }
      *v15++ = v20;
      float v20 = a1 + (float)((float)(v8 + 1) * a3);
      BOOL v33 = v20 <= a2;
      if (a3 > 0.0) {
        BOOL v33 = v20 >= a2;
      }
      ++v8;
      if (v33) {
        goto LABEL_40;
      }
    }
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
LABEL_40:
  unint64_t v34 = *((void *)v11 + 3);
  if (v34 >= 2)
  {
    unint64_t v35 = v34 >> 1;
    BOOL v32 = __OFSUB__(v35, v16);
    unint64_t v36 = v35 - v16;
    if (v32)
    {
LABEL_49:
      __break(1u);
      return;
    }
    *((void *)v11 + 2) = v36;
  }
}

uint64_t sub_2613DAE10(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v8 = v5;
    if (v5 <= 0)
    {
      float v9 = (void *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        sub_2613C23AC(&qword_26A914AB8);
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      sub_2613C23AC(&qword_26A914AB0);
      float v9 = (void *)swift_allocObject();
      int64_t v10 = j__malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 3);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_2614D5DE8();
  __break(1u);
  return result;
}

uint64_t sub_2613DAF94(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v8 = 4 * v5;
    if (v5 <= 0)
    {
      float v9 = (char *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = v9 + 32;
        uint64_t v13 = (char *)(a2 + 4 * a3);
        if (v13 < &v9[v8 + 32] && v12 < &v13[v8]) {
          goto LABEL_19;
        }
        memcpy(v12, v13, 4 * v5);
        return (uint64_t)v9;
      }
    }
    else
    {
      sub_2613C23AC(&qword_26A914AC0);
      float v9 = (char *)swift_allocObject();
      int64_t v10 = j__malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 29;
      }
      *((void *)v9 + 2) = v5;
      *((void *)v9 + 3) = 2 * (v11 >> 2);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_2614D5DE8();
  __break(1u);
  return result;
}

char *sub_2613DB100(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_2614D5DE8();
  __break(1u);
  return result;
}

uint64_t sub_2613DB1EC()
{
  uint64_t v1 = type metadata accessor for VABundleUtil();
  static VABundleUtil.bundlePathFallback(path:)();
  if (!v0)
  {
    type metadata accessor for VACTCEncoderConfig();
    unint64_t v2 = sub_2613DD8C4();
    sub_261418A5C(v2, &v6);
    swift_bridgeObjectRelease();
    uint64_t v1 = v6;
    if (v7)
    {
      if (v6 == 0x8000000000000000)
      {
        sub_2614D5C38();
        swift_bridgeObjectRelease();
        sub_2614D54D8();
        uint64_t v1 = 0x80000002614E0C00;
        sub_2613DC2B8();
        swift_allocError();
        *uint64_t v3 = 0xD00000000000001ALL;
        v3[1] = 0x80000002614E0C00;
      }
      else
      {
        sub_2613DD918();
        swift_allocError();
        *uint64_t v4 = v1;
      }
      swift_willThrow();
    }
  }
  return v1;
}

uint64_t sub_2613DB348(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  type metadata accessor for VACTCEncoderConfig();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0xE000000000000000;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(void *)(v3 + 64) = 0xE000000000000000;
  *(void *)(v3 + 72) = 0;
  uint64_t v4 = MEMORY[0x263F8EE78];
  *(void *)(v3 + 80) = 0xE000000000000000;
  *(void *)(v3 + 88) = v4;
  *(void *)(v3 + 96) = v4;
  *(void *)(v3 + 104) = 0;
  *(void *)(v3 + 112) = 0xE000000000000000;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(void *)(v3 + 136) = 0xE000000000000000;
  *(void *)(v3 + 144) = 0;
  *(void *)(v3 + 152) = 0xE000000000000000;
  *(void *)(v3 + 160) = v4;
  *(_OWORD *)(v3 + 184) = 0u;
  *(_OWORD *)(v3 + 168) = 0u;
  *(unsigned char *)(v3 + 200) = 1;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 208) = 0;
  *(unsigned char *)(v3 + 232) = 1;
  uint64_t v5 = sub_2613CD9B0(0x65467475706E493CLL, 0xEC0000003E737461, v2);
  if (v1) {
    goto LABEL_32;
  }
  (*(void (**)(void *))(*(void *)v3 + 232))(v5);
  uint64_t v6 = sub_2613CD838(0xD000000000000011, 0x80000002614E0AF0, v2);
  (*(void (**)(uint64_t))(*(void *)v3 + 256))(v6);
  uint64_t v7 = sub_2613CD838(0xD000000000000018, 0x80000002614E0B10, v2);
  (*(void (**)(uint64_t))(*(void *)v3 + 280))(v7);
  uint64_t v8 = sub_2613CD838(0x764F656D6172463CLL, 0xEE003E70616C7265, v2);
  (*(void (**)(uint64_t))(*(void *)v3 + 304))(v8);
  float v9 = sub_2613CD9B0(0x3E6B73614D3CLL, 0xE600000000000000, v2);
  (*(void (**)(void *))(*(void *)v3 + 328))(v9);
  int64_t v10 = sub_2613CD9B0(0xD000000000000010, 0x80000002614E0B30, v2);
  (*(void (**)(void *))(*(void *)v3 + 352))(v10);
  (*(void (**)(void))(*(void *)v3 + 376))(MEMORY[0x263F8EE78]);
  if (!*(void *)(v2 + 16)
    || (unint64_t v11 = sub_2613D8F00(0x685365746174533CLL, 0xED00003E73657061), (v12 & 1) == 0)
    || (sub_2613DD768(*(void *)(v2 + 56) + 32 * v11, (uint64_t)v69),
        sub_2613C23AC(&qword_26A914AF0),
        (swift_dynamicCast() & 1) == 0))
  {
LABEL_31:
    sub_2613DC2B8();
    swift_allocError();
    void *v45 = 0xD000000000000026;
    v45[1] = 0x80000002614E0B50;
    swift_willThrow();
LABEL_32:
    swift_release();
    return v3;
  }
  unint64_t v13 = v67;
  uint64_t v64 = *(void *)(v67 + 16);
  if (!v64)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    unint64_t v13 = 0xD000000000000026;
    uint64_t v33 = sub_2613CDC1C(0x74537475706E493CLL, 0xED00003E73657461, v2);
    (*(void (**)(uint64_t))(*(void *)v3 + 400))(v33);
    (*(void (**)(uint64_t, unint64_t))(*(void *)v3 + 424))(0x432C522C31, 0xE500000000000000);
    uint64_t v34 = sub_2613CD838(0x69447475706E493CLL, 0xEA00000000003E6DLL, v2);
    (*(void (**)(uint64_t))(*(void *)v3 + 448))(v34);
    unint64_t v35 = sub_2613CD9B0(0x6D726F666E6F433CLL, 0xEE003E74754F7265, v2);
    (*(void (**)(void *))(*(void *)v3 + 472))(v35);
    unint64_t v36 = sub_2613CD9B0(0x74736F504354433CLL, 0xEF3E73726F697265, v2);
    (*(void (**)(void *))(*(void *)v3 + 496))(v36);
    uint64_t v37 = sub_2613CDC1C(0x5374757074754F3CLL, 0xEE003E7365746174, v2);
    (*(void (**)(uint64_t))(*(void *)v3 + 520))(v37);
    uint64_t v38 = sub_2613CD838(0x4474757074754F3CLL, 0xEB000000003E6D69, v2);
    (*(void (**)(uint64_t))(*(void *)v3 + 544))(v38);
    if (*(void *)(v2 + 16) && (unint64_t v39 = sub_2613D8F00(0xD000000000000013, 0x80000002614E0B80), (v40 & 1) != 0))
    {
      sub_2613DD768(*(void *)(v2 + 56) + 32 * v39, (uint64_t)v69);
      int v41 = swift_dynamicCast();
      BOOL v42 = v41 == 0;
      if (v41) {
        uint64_t v43 = v67;
      }
      else {
        uint64_t v43 = 0;
      }
      if (v42) {
        unint64_t v44 = 0;
      }
      else {
        unint64_t v44 = v68;
      }
    }
    else
    {
LABEL_35:
      uint64_t v43 = 0;
      unint64_t v44 = 0;
    }
    (*(void (**)(uint64_t, unint64_t))(*(void *)v3 + 568))(v43, v44);
    if (*(void *)(v2 + 16) && (unint64_t v46 = sub_2613D8F00(v13 - 17, 0x80000002614E0BA0), (v47 & 1) != 0))
    {
      sub_2613DD768(*(void *)(v2 + 56) + 32 * v46, (uint64_t)v69);
      int v48 = swift_dynamicCast();
      if (v48) {
        uint64_t v49 = v67;
      }
      else {
        uint64_t v49 = 0;
      }
      uint64_t v50 = v48 ^ 1u;
    }
    else
    {
      uint64_t v49 = 0;
      uint64_t v50 = 1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v3 + 592))(v49, v50);
    if (*(void *)(v2 + 16) && (unint64_t v51 = sub_2613D8F00(v13 - 16, 0x80000002614E0BC0), (v52 & 1) != 0))
    {
      sub_2613DD768(*(void *)(v2 + 56) + 32 * v51, (uint64_t)v69);
      int v53 = swift_dynamicCast();
      BOOL v54 = v53 == 0;
      if (v53) {
        uint64_t v55 = v67;
      }
      else {
        uint64_t v55 = 0;
      }
      if (v54) {
        unint64_t v56 = 0;
      }
      else {
        unint64_t v56 = v68;
      }
    }
    else
    {
      uint64_t v55 = 0;
      unint64_t v56 = 0;
    }
    (*(void (**)(uint64_t, unint64_t))(*(void *)v3 + 616))(v55, v56);
    if (*(void *)(v2 + 16) && (unint64_t v57 = sub_2613D8F00(v13 - 13, 0x80000002614E0BE0), (v58 & 1) != 0))
    {
      sub_2613DD768(*(void *)(v2 + 56) + 32 * v57, (uint64_t)v69);
      int v59 = swift_dynamicCast();
      if (v59) {
        uint64_t v60 = v67;
      }
      else {
        uint64_t v60 = 0;
      }
      uint64_t v61 = v59 ^ 1u;
    }
    else
    {
      uint64_t v60 = 0;
      uint64_t v61 = 1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v3 + 640))(v60, v61);
    return v3;
  }
  unint64_t v14 = 0;
  uint64_t v63 = v67 + 32;
  unint64_t v62 = v67;
  while (1)
  {
    if (v14 >= *(void *)(v13 + 16))
    {
      __break(1u);
      goto LABEL_35;
    }
    sub_2613DD768(v63 + 32 * v14, (uint64_t)v69);
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    unint64_t v70 = v14;
    v69[0] = v67;
    v69[1] = v68;
    uint64_t v67 = 44;
    unint64_t v68 = 0xE100000000000000;
    sub_2613DC3BC();
    uint64_t v15 = sub_2614D5B88();
    swift_bridgeObjectRelease();
    int64_t v16 = *(void *)(v15 + 16);
    if (v16) {
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v65 = MEMORY[0x263F8EE78];
LABEL_17:
    uint64_t v66 = (void (*)(void *, void))(*(uint64_t (**)(void *))(*(void *)v3 + 384))(v69);
    uint64_t v28 = v27;
    unint64_t v29 = *v27;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    void *v28 = v29;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v29 = sub_2613D8530(0, v29[2] + 1, 1, v29, &qword_26A914B08, &qword_26A914A68);
      void *v28 = v29;
    }
    unint64_t v32 = v29[2];
    unint64_t v31 = v29[3];
    if (v32 >= v31 >> 1)
    {
      unint64_t v29 = sub_2613D8530((void *)(v31 > 1), v32 + 1, 1, v29, &qword_26A914B08, &qword_26A914A68);
      void *v28 = v29;
    }
    unint64_t v13 = v62;
    unint64_t v14 = v70 + 1;
    v29[2] = v32 + 1;
    v29[v32 + 4] = v65;
    v66(v69, 0);
    if (v14 == v64) {
      goto LABEL_22;
    }
  }
  v69[0] = MEMORY[0x263F8EE78];
  sub_2613D915C(0, v16, 0);
  uint64_t v17 = v69[0];
  float v18 = (unint64_t *)(v15 + 40);
  while (1)
  {
    uint64_t v19 = v17;
    uint64_t v21 = *(v18 - 1);
    unint64_t v20 = *v18;
    swift_bridgeObjectRetain();
    uint64_t result = sub_2613CE0E0(v21, v20);
    if (v23) {
      break;
    }
    uint64_t v24 = result;
    uint64_t v17 = v19;
    v69[0] = v19;
    unint64_t v26 = *(void *)(v19 + 16);
    unint64_t v25 = *(void *)(v19 + 24);
    if (v26 >= v25 >> 1)
    {
      sub_2613D915C(v25 > 1, v26 + 1, 1);
      uint64_t v17 = v69[0];
    }
    v18 += 2;
    *(void *)(v17 + 16) = v26 + 1;
    *(void *)(v17 + 8 * v26 + 32) = v24;
    if (!--v16)
    {
      uint64_t v65 = v17;
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

void *sub_2613DBF24(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_2613DBF68()
{
  unint64_t result = qword_26A917B50[0];
  if (!qword_26A917B50[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A917B50);
  }
  return result;
}

unint64_t sub_2613DBFBC()
{
  unint64_t result = qword_26A914A58;
  if (!qword_26A914A58)
  {
    sub_2613C5EC8(&qword_26A914A50);
    sub_2613DC048((unint64_t *)&qword_26A914A60, &qword_26A914A68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914A58);
  }
  return result;
}

uint64_t sub_2613DC048(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2613C5EC8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2613DC0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2613DC0FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2613DC14C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_2613DC1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2613C23AC(&qword_26A914A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2613DC224(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for VACTCEncoder()
{
  return self;
}

unint64_t sub_2613DC2B8()
{
  unint64_t result = qword_26A914A88;
  if (!qword_26A914A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914A88);
  }
  return result;
}

uint64_t sub_2613DC30C(uint64_t a1)
{
  return a1;
}

uint64_t sub_2613DC338(uint64_t a1)
{
  return a1;
}

uint64_t sub_2613DC364(uint64_t a1)
{
  return a1;
}

uint64_t sub_2613DC390(uint64_t a1)
{
  return a1;
}

unint64_t sub_2613DC3BC()
{
  unint64_t result = qword_26A914A90;
  if (!qword_26A914A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914A90);
  }
  return result;
}

uint64_t sub_2613DC410(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6165467475706E69 && a2 == 0xEA00000000007374;
  if (v3 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6172467475706E69 && a2 == 0xEF746E756F43656DLL || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002614E0430 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65764F656D617266 && a2 == 0xEC00000070616C72 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1802723693 && a2 == 0xE400000000000000 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6465626D45736F70 && a2 == 0xEE0074657366664FLL || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6168536574617473 && a2 == 0xEB00000000736570 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6174537475706E69 && a2 == 0xEB00000000736574 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002614E0480 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6D69447475706E69 && a2 == 0xE800000000000000 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x656D726F666E6F63 && a2 == 0xEC00000074754F72 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6574736F50435463 && a2 == 0xED000073726F6972 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x745374757074756FLL && a2 == 0xEC00000073657461 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x694474757074756FLL && a2 == 0xE90000000000006DLL || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002614E04D0 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002614E04F0 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002614E0510 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002614E0530)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else
  {
    char v6 = sub_2614D5FB8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 17;
    }
    else {
      return 18;
    }
  }
}

uint64_t sub_2613DCB38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2614D5DE8();
  __break(1u);
  return result;
}

uint64_t sub_2613DCC2C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v22 = a1;
  uint64_t v6 = sub_2614D50C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  float v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_26146718C();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  swift_bridgeObjectRetain_n();
  unint64_t v11 = sub_2614D50A8();
  os_log_type_t v12 = sub_2614D5968();
  if (os_log_type_enabled(v11, v12))
  {
    unint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v20 = v6;
    uint64_t v15 = v14;
    uint64_t v24 = v14;
    uint64_t v21 = v3;
    *(_DWORD *)unint64_t v13 = 136315138;
    v19[1] = v13 + 4;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_2613D875C(v22, a2, &v24);
    sub_2614D5B58();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2613B8000, v11, v12, "Computing context vector for \"%s\"", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x263E38060](v15, -1, -1);
    MEMORY[0x263E38060](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v20);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  int64_t v16 = *(uint64_t (**)(uint64_t, unint64_t))(*(void *)a3 + 152);
  swift_retain();
  uint64_t v17 = v16(v22, a2);
  swift_release();
  return v17;
}

unint64_t sub_2613DCEC0()
{
  unint64_t result = qword_26A914AA0;
  if (!qword_26A914AA0)
  {
    sub_2613C5EC8(&qword_26A914A70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914AA0);
  }
  return result;
}

uint64_t sub_2613DCF1C(uint64_t a1)
{
  return sub_2613D7484(a1, *(void *)(v1 + 16));
}

uint64_t sub_2613DCF48(char *a1, int64_t a2)
{
  return sub_2613D77A0(a1, a2, *(void *)(v2 + 16));
}

uint64_t type metadata accessor for VACTCEncoderConfig()
{
  return self;
}

uint64_t method lookup function for VACTCEncoder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VACTCEncoder);
}

uint64_t dispatch thunk of VACTCEncoder.setContext(context:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 880))();
}

uint64_t dispatch thunk of VACTCEncoder.greedyDecodeChunk()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 888))();
}

uint64_t dispatch thunk of VACTCEncoder.batchDecodeFromBytes(data:hypothesis:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 904))();
}

uint64_t dispatch thunk of VACTCEncoder.batchDecodeFromFeatures(features:hypothesis:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 912))();
}

uint64_t dispatch thunk of VACTCEncoder.startStreaming()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 920))();
}

uint64_t dispatch thunk of VACTCEncoder.streamingDecodeFromFeatures(features:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 928))();
}

uint64_t dispatch thunk of VACTCEncoder.stopStreaming()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 936))();
}

uint64_t getEnumTagSinglePayload for VACTCEncoderConfig.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VACTCEncoderConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *unint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2613DD2C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VACTCEncoderConfig.CodingKeys()
{
  return &type metadata for VACTCEncoderConfig.CodingKeys;
}

unint64_t sub_2613DD2FC()
{
  unint64_t result = qword_26A917CE0[0];
  if (!qword_26A917CE0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A917CE0);
  }
  return result;
}

unint64_t sub_2613DD354()
{
  unint64_t result = qword_26A917DF0;
  if (!qword_26A917DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A917DF0);
  }
  return result;
}

unint64_t sub_2613DD3AC()
{
  unint64_t result = qword_26A917DF8[0];
  if (!qword_26A917DF8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A917DF8);
  }
  return result;
}

uint64_t *sub_2613DD400(uint64_t *a1)
{
  return a1;
}

void *sub_2613DD438(char *a1, uint64_t a2)
{
  return sub_2613D7560(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_2613DD454(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      sub_2613C23AC(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_2614D5DE8();
  __break(1u);
  return result;
}

uint64_t sub_2613DD55C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2614D5DE8();
  __break(1u);
  return result;
}

uint64_t sub_2613DD650(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)a2 + 16);
  if (v2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = *(void *)a2 + 32;
    while (1)
    {
      uint64_t v5 = *(void *)(*(void *)v4 + 16);
      BOOL v6 = __OFADD__(v3, v5);
      v3 += v5;
      if (v6) {
        break;
      }
      v4 += 8;
      if (!--v2) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_5:
    MEMORY[0x270FA5388](result);
    return sub_261473274((uint64_t (*)(void))sub_2613DD6FC);
  }
  return result;
}

uint64_t sub_2613DD6FC(char *a1, int64_t a2)
{
  return sub_2613D7A1C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_2613DD718(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_2613DD768(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2613DD7C4(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_2614D5FB8() & 1;
  }
}

uint64_t sub_2613DD81C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2613DD854()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2613DD864(uint64_t a1)
{
  uint64_t v2 = sub_2613C23AC(&qword_26A914AF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2613DD8C4()
{
  unint64_t result = qword_26A914B18;
  if (!qword_26A914B18)
  {
    type metadata accessor for VACTCEncoderConfig();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914B18);
  }
  return result;
}

unint64_t sub_2613DD918()
{
  unint64_t result = qword_26A914B20;
  if (!qword_26A914B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914B20);
  }
  return result;
}

void *sub_2613DD96C(char *a1, uint64_t a2)
{
  return sub_2613DD438(a1, a2);
}

uint64_t sub_2613DD984(char *a1, int64_t a2)
{
  return sub_2613DCF48(a1, a2);
}

uint64_t sub_2613DD99C(uint64_t a1)
{
  return sub_2613DCF1C(a1);
}

uint64_t sub_2613DD9C8()
{
  swift_beginAccess();
  return *(void *)(v0 + 160);
}

uint64_t sub_2613DD9FC(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 160) = a1;
  return result;
}

uint64_t (*sub_2613DDA3C())()
{
  return j__swift_endAccess;
}

uint64_t VAContextEncoder.__allocating_init(config:outputDim:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  VAContextEncoder.init(config:outputDim:)(a1, a2);
  return v4;
}

void *VAContextEncoder.init(config:outputDim:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  v2[19] = 64;
  (*(void (**)(void))(*(void *)a1 + 536))();
  if (v3) {
    goto LABEL_3;
  }
  type metadata accessor for VABundleUtil();
  static VABundleUtil.bundlePathFallback(path:)();
  swift_bridgeObjectRelease();
  v2[20] = a2;
  type metadata accessor for VASentencePieceModel();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = MEMORY[0x263F8EE80];
  *(void *)(v8 + 16) = MEMORY[0x263F8EE80];
  *(void *)(v8 + 24) = v9;
  *(void *)(v8 + 32) = v9;
  *(_WORD *)(v8 + 40) = 256;
  v2[18] = v8;
  swift_retain();
  sub_2613E019C();
  swift_release();
  uint64_t v10 = swift_bridgeObjectRelease();
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 216))(v10);
  if (!v12)
  {
    sub_2613DC2B8();
    swift_allocError();
    void *v18 = 0xD00000000000001FLL;
    v18[1] = 0x80000002614E0C20;
    swift_willThrow();
    swift_release();
LABEL_3:
    swift_release();
    type metadata accessor for VAContextEncoder();
    swift_deallocPartialClassInstance();
    return v4;
  }
  uint64_t v13 = v11;
  unint64_t v14 = v12;
  if ((*(uint64_t (**)(void))(*(void *)a1 + 312))())
  {
    type metadata accessor for VAEspressoUtilsV2();
    char v15 = sub_2613D04A8();
    sub_26148DB30(v13, v14, v15 & 1, &v38);
    uint64_t v16 = v38;
    uint64_t v17 = v41;
    swift_bridgeObjectRelease();
    swift_release();
    v4[12] = v16;
    *(_OWORD *)(v4 + 13) = v39;
    *(_OWORD *)(v4 + 15) = v40;
    v4[17] = v17;
    *((_OWORD *)v4 + 1) = 0u;
    *((_OWORD *)v4 + 2) = 0u;
    *((_OWORD *)v4 + 3) = 0u;
    *((_OWORD *)v4 + 4) = 0u;
    *(_OWORD *)((char *)v4 + 73) = 0u;
  }
  else
  {
    type metadata accessor for VAEspressoUtils();
    uint64_t v19 = (*(void *(**)(char *__return_ptr))(*(void *)a1 + 336))(&v30);
    char v29 = v30;
    uint64_t v20 = (*(uint64_t (**)(void *))(*(void *)a1 + 360))(v19);
    uint64_t v22 = v21;
    char v23 = sub_2613D04A8();
    static VAEspressoUtils.loadModel(_:computeUnits:espressoPrefix:debug:)(v13, v14, &v29, v20, v22, v23 & 1, &v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v24 = v32;
    uint64_t v25 = v33;
    long long v26 = v34;
    uint64_t v27 = v35;
    char v28 = v37;
    *((_OWORD *)v4 + 1) = v31;
    v4[4] = v24;
    v4[5] = v25;
    *((_OWORD *)v4 + 3) = v26;
    v4[8] = v27;
    *(_OWORD *)(v4 + 9) = v36;
    *((unsigned char *)v4 + 88) = v28;
    *((_OWORD *)v4 + 7) = 0u;
    *((_OWORD *)v4 + 8) = 0u;
    *((_OWORD *)v4 + 6) = 0u;
  }
  return v4;
}

uint64_t type metadata accessor for VAContextEncoder()
{
  return self;
}

uint64_t VASentencePieceModel.__allocating_init(_:)(char a1)
{
  uint64_t result = swift_allocObject();
  uint64_t v3 = MEMORY[0x263F8EE80];
  *(void *)(result + 16) = MEMORY[0x263F8EE80];
  *(void *)(result + 24) = v3;
  *(void *)(result + 32) = v3;
  *(unsigned char *)(result + 41) = 1;
  *(unsigned char *)(result + 40) = a1;
  return result;
}

uint64_t type metadata accessor for VASentencePieceModel()
{
  return self;
}

uint64_t sub_2613DDF44()
{
  uint64_t v2 = v1;
  uint64_t v3 = (*(uint64_t (**)(void))(**(void **)(v0 + 144) + 248))();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v0 + 48);
  if (v5)
  {
    char v6 = *(unsigned char *)(v0 + 88);
    uint64_t v7 = *(void *)(v0 + 80);
    uint64_t v9 = *(void *)(v0 + 64);
    uint64_t v8 = *(void *)(v0 + 56);
    uint64_t v17 = *(void *)(v0 + 72);
    uint64_t v16 = *(void *)(v0 + 40);
    uint64_t v30 = *(void *)(v0 + 32);
    uint64_t v18 = *(void *)(v0 + 24);
    v19[0] = *(void *)(v0 + 16);
    uint64_t v10 = v19[0];
    v19[1] = v18;
    void v19[2] = v30;
    int v20 = v16;
    uint64_t v21 = v5;
    uint64_t v22 = v8;
    uint64_t v23 = v9;
    uint64_t v24 = v17;
    uint64_t v25 = v7;
    char v26 = v6 & 1;
    uint64_t v11 = *(uint64_t (**)(uint64_t, void *))(*(void *)v0 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v2 = v11(v4, v19);
    sub_2613DC0FC(v10, v18, v30, v16, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 104);
    if (v12)
    {
      v27[0] = *(void *)(v0 + 96);
      v27[1] = v12;
      long long v13 = *(_OWORD *)(v0 + 128);
      long long v28 = *(_OWORD *)(v0 + 112);
      long long v29 = v13;
      uint64_t v2 = (*(uint64_t (**)(uint64_t, void *))(*(void *)v0 + 160))(v3, v27);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_2613DC2B8();
      swift_allocError();
      void *v14 = 0xD000000000000028;
      v14[1] = 0x80000002614E0C40;
      swift_willThrow();
    }
  }
  return v2;
}

uint64_t sub_2613DE15C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v19 = MEMORY[0x263F8EE78];
    sub_2613D917C(0, v2, 0);
    uint64_t v3 = v19;
    uint64_t v5 = (uint64_t *)(a1 + 32);
    unint64_t v6 = *(void *)(v19 + 16);
    unint64_t v7 = v2;
    do
    {
      uint64_t v9 = *v5++;
      uint64_t v8 = v9;
      unint64_t v10 = *(void *)(v19 + 24);
      if (v6 >= v10 >> 1) {
        sub_2613D917C(v10 > 1, v6 + 1, 1);
      }
      *(void *)(v19 + 16) = v6 + 1;
      *(float *)(v19 + 4 * v6++ + 32) = (float)v8;
      --v7;
    }
    while (v7);
  }
  uint64_t v11 = sub_2613D1B04(64 - v2, 0);
  uint64_t v12 = swift_bridgeObjectRetain();
  sub_2613D64FC(v12);
  v13.i32[0] = 1.0;
  uint64_t v20 = sub_2613D1B04(v2, v13);
  sub_2613D64FC(v11);
  uint64_t v14 = sub_26148D8C4(0x73657361726870, 0xE700000000000000);
  if (v1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)v14 + 624))(v3);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_26148D8C4(0x6D5F657361726870, 0xEB000000006B7361);
    (*(void (**)(uint64_t))(*(void *)v15 + 624))(v20);
    swift_release();
    swift_bridgeObjectRelease();
    sub_261431BD8();
    uint64_t v17 = sub_26148D9F8(0x626D655F787463, 0xE700000000000000);
    uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)v17 + 720))(v17);
    swift_release();
    return v18;
  }
}

uint64_t sub_2613DE424(uint64_t a1, uint64_t a2, float a3)
{
  if (a2 < 0)
  {
    uint64_t result = sub_2614D5D58();
    __break(1u);
  }
  else
  {
    uint64_t v3 = a2;
    if (a2)
    {
      sub_2613C23AC(&qword_26A914B50);
      uint64_t result = sub_2614D56C8();
      *(void *)(result + 16) = v3;
      uint64_t v7 = 32;
      do
      {
        uint64_t v8 = result + v7;
        *(float *)uint64_t v8 = a3;
        *(void *)(v8 + 8) = a1;
        v7 += 16;
        --v3;
      }
      while (v3);
    }
    else
    {
      return MEMORY[0x263F8EE78];
    }
  }
  return result;
}

uint64_t sub_2613DE4F0(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  sub_26147355C();
  sub_261473574();
  uint64_t result = sub_26147357C((uint64_t)&v13);
  if (!v3)
  {
    sub_261473574();
    v12[1] = v12;
    uint64_t v7 = sub_26147357C((uint64_t)&v14);
    MEMORY[0x270FA5388](v7);
    v11[2] = a1;
    v11[3] = v2;
    uint64_t v8 = sub_261473274((uint64_t (*)(void))sub_2613E1198);
    MEMORY[0x270FA5388](v8);
    v11[-2] = a1;
    v11[-1] = v2;
    sub_261473274((uint64_t (*)(void))sub_2613E126C);
    sub_261473568();
    sub_261473574();
    sub_26147357C((uint64_t)v15);
    uint64_t v9 = sub_2614734AC(v5);
    unint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 120))(v9);
    uint64_t v16 = sub_2613D1B04(v10, 0);
    MEMORY[0x270FA5388](v16);
    v11[-2] = &v16;
    sub_261473274((uint64_t (*)(void))sub_2613E1300);
    return v16;
  }
  return result;
}

uint64_t *VAContextEncoder.deinit()
{
  sub_2613DC0FC(v0[2], v0[3], v0[4], v0[5], v0[6]);
  sub_2613DC224(v0[12], v0[13]);
  swift_release();
  return v0;
}

uint64_t VAContextEncoder.__deallocating_deinit()
{
  sub_2613DC0FC(v0[2], v0[3], v0[4], v0[5], v0[6]);
  sub_2613DC224(v0[12], v0[13]);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2613DE85C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2613DE894(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2613DE8DC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2613DE914(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613DE95C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613DE9B0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2613DE9E8(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2613DEA30()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t sub_2613DEA64(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 41) = a1;
  return result;
}

uint64_t (*sub_2613DEAA4())()
{
  return j_j__swift_endAccess;
}

uint64_t VASentencePieceModel.init(_:)(char a1)
{
  uint64_t v2 = MEMORY[0x263F8EE80];
  *(void *)(v1 + 16) = MEMORY[0x263F8EE80];
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v2;
  *(unsigned char *)(v1 + 41) = 1;
  *(unsigned char *)(v1 + 40) = a1;
  return v1;
}

uint64_t sub_2613DEB1C()
{
  uint64_t v1 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v0 + 184))(v5);
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  *uint64_t v3 = MEMORY[0x263F8EE80];
  return v1(v5, 0);
}

uint64_t sub_2613DEBA4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2614D50C8();
  char v82 = *(void (***)(char *, uint64_t))(v2 - 8);
  MEMORY[0x270FA5388](v2);
  os_log_type_t v86 = (char *)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = 8492770;
  unint64_t v91 = 0xA300000000000000;
  sub_2614D54D8();
  uint64_t v5 = v90;
  uint64_t v4 = v91;
  unint64_t v6 = *(uint64_t (**)(uint64_t))(*(void *)v0 + 144);
  uint64_t v7 = *(void *)v0 + 144;
  uint64_t v8 = swift_bridgeObjectRetain();
  char v84 = v6;
  *(void *)&long long v88 = v7;
  uint64_t v9 = v6(v8);
  if (*(void *)(v9 + 16))
  {
    unint64_t v10 = sub_2613D8F00(v5, v4);
    if (v11)
    {
      uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 16 * v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2613C23AC(&qword_26A914AC8);
      uint64_t v13 = swift_allocObject();
      long long v88 = xmmword_2614D81E0;
      *(_OWORD *)(v13 + 16) = xmmword_2614D81E0;
      *(void *)(v13 + 32) = v5;
      *(void *)(v13 + 40) = v4;
      sub_2613C23AC(&qword_26A914B10);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = v88;
      *(void *)(v14 + 32) = v12;
      return v13;
    }
  }
  uint64_t v83 = v2;
  uint64_t v79 = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(uint64_t (**)(uint64_t))(*(void *)v1 + 168);
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = v15(v16);
  if (*(void *)(v17 + 16))
  {
    unint64_t v18 = sub_2613D8F00(v5, v4);
    if (v19)
    {
      uint64_t v13 = *(void *)(*(void *)(v17 + 56) + 24 * v18);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      return v13;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_2614D5488();
  uint64_t v21 = (void *)MEMORY[0x263F8EE78];
  char v87 = v1;
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v90 = MEMORY[0x263F8EE78];
    uint64_t result = sub_2613D913C(0, result & ~(result >> 63), 0);
    uint64_t v23 = v84;
    if (v22 < 0) {
      goto LABEL_58;
    }
    uint64_t v21 = (void *)v90;
    do
    {
      uint64_t v24 = sub_2614D5588();
      uint64_t v26 = v25;
      uint64_t v90 = (uint64_t)v21;
      unint64_t v28 = v21[2];
      unint64_t v27 = v21[3];
      if (v28 >= v27 >> 1)
      {
        sub_2613D913C(v27 > 1, v28 + 1, 1);
        uint64_t v21 = (void *)v90;
      }
      v21[2] = v28 + 1;
      long long v29 = &v21[2 * v28];
      v29[4] = v24;
      v29[5] = v26;
      uint64_t result = sub_2614D5498();
      --v22;
    }
    while (v22);
    uint64_t v1 = v87;
  }
  else
  {
    uint64_t v23 = v84;
  }
  uint64_t v77 = v5;
  uint64_t v78 = v4;
  uint64_t v92 = v21;
  float v30 = 0.0;
  while (1)
  {
    long long v31 = v86;
    uint64_t v32 = v21[2];
    uint64_t v33 = v32 - 1;
    uint64_t v85 = v21;
    if (v32 == 1) {
      goto LABEL_36;
    }
    if (!v32) {
      goto LABEL_53;
    }
    unint64_t v34 = 0;
    uint64_t v35 = v21 + 4;
    long long v36 = v21 + 7;
    unint64_t v37 = -1;
    float v38 = 3.4028e38;
    do
    {
      if (v34 >= v21[2])
      {
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
        return result;
      }
      unint64_t v39 = *(v36 - 2);
      uint64_t v90 = *(v36 - 3);
      unint64_t v91 = v39;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_2614D54D8();
      uint64_t v1 = v87;
      swift_bridgeObjectRelease();
      uint64_t v40 = swift_bridgeObjectRelease();
      uint64_t v41 = v90;
      uint64_t v42 = v91;
      uint64_t v43 = v23(v40);
      if (*(void *)(v43 + 16) && (unint64_t v44 = sub_2613D8F00(v41, v42), (v45 & 1) != 0))
      {
        float v46 = *(float *)(*(void *)(v43 + 56) + 16 * v44 + 8);
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v46 < v38)
        {
          unint64_t v37 = v34;
          float v38 = v46;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
      }
      ++v34;
      v36 += 2;
      uint64_t v21 = v85;
      long long v31 = v86;
    }
    while (v33 != v34);
    if (v37 == -1) {
      break;
    }
    if ((v37 & 0x8000000000000000) != 0) {
      goto LABEL_54;
    }
    unint64_t v47 = v85[2];
    if (v37 >= v47) {
      goto LABEL_55;
    }
    if (v37 + 1 >= v47) {
      goto LABEL_56;
    }
    unint64_t v48 = v35[2 * v37 + 1];
    uint64_t v90 = v35[2 * v37];
    unint64_t v91 = v48;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_2614D54D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v49 = v90;
    unint64_t v50 = v91;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_2613E13E8(v85);
      uint64_t v85 = (void *)result;
    }
    uint64_t v1 = v87;
    unint64_t v51 = v85;
    if (v37 >= v85[2]) {
      goto LABEL_57;
    }
    char v52 = &v85[2 * v37];
    v52[4] = v49;
    v52[5] = v50;
    swift_bridgeObjectRelease();
    uint64_t v92 = v51;
    sub_2613DF454(v37 + 1);
    uint64_t result = swift_bridgeObjectRelease();
    float v30 = v30 + v38;
    uint64_t v21 = v92;
  }
  uint64_t v32 = v85[2];
  if (!v32) {
    goto LABEL_47;
  }
LABEL_36:
  os_log_type_t v86 = (char *)(v82 + 2);
  ++v82;
  swift_bridgeObjectRetain();
  int v53 = v21 + 5;
  *(void *)&long long v54 = 136315138;
  long long v81 = v54;
  uint64_t v80 = MEMORY[0x263F8EE58] + 8;
  uint64_t v55 = v83;
  while (2)
  {
    uint64_t v57 = *(v53 - 1);
    unint64_t v56 = *v53;
    uint64_t v58 = swift_bridgeObjectRetain_n();
    if (*(void *)(v23(v58) + 16))
    {
      sub_2613D8F00(v57, v56);
      char v60 = v59;
      swift_bridgeObjectRelease();
      if (v60)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_39;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v61 = sub_26146718C();
    (*(void (**)(char *, uint64_t, uint64_t))v86)(v31, v61, v55);
    swift_bridgeObjectRetain();
    unint64_t v62 = sub_2614D50A8();
    uint64_t v63 = v31;
    os_log_type_t v64 = sub_2614D5978();
    if (os_log_type_enabled(v62, v64))
    {
      uint64_t v65 = swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      uint64_t v90 = v66;
      *(_DWORD *)uint64_t v65 = v81;
      swift_bridgeObjectRetain();
      *(void *)(v65 + 4) = sub_2613D875C(v57, v56, &v90);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2613B8000, v62, v64, "Missing key %s", (uint8_t *)v65, 0xCu);
      swift_arrayDestroy();
      uint64_t v67 = v66;
      uint64_t v1 = v87;
      MEMORY[0x263E38060](v67, -1, -1);
      MEMORY[0x263E38060](v65, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*v82)(v63, v55);
    long long v31 = v63;
    uint64_t v23 = v84;
LABEL_39:
    v53 += 2;
    if (--v32) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = v92;
LABEL_47:
  swift_retain();
  uint64_t v68 = swift_bridgeObjectRetain();
  uint64_t v69 = sub_2613E2108(v68, (uint64_t)v1);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v70 = v78;
  uint64_t v71 = v77;
  if (v1[40] == 1)
  {
    uint64_t v72 = *(uint64_t (**)(uint64_t *))(*(void *)v1 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v73 = (void (*)(uint64_t *, void))v72(&v90);
    uint64_t v75 = v74;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v89 = *v75;
    uint64_t *v75 = 0x8000000000000000;
    sub_2613E1A7C((uint64_t)v21, v69, v71, v70, isUniquelyReferenced_nonNull_native, v30);
    uint64_t *v75 = v89;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v73(&v90, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return (uint64_t)v92;
}

uint64_t sub_2613DF454(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_2613E13E8(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t v7 = &v3[2 * a1];
      uint64_t v8 = v7[4];
      memmove(v7 + 4, v7 + 6, 16 * v6);
      v3[2] = v5;
      *uint64_t v1 = v3;
      return v8;
    }
  }
  uint64_t result = sub_2614D5DE8();
  __break(1u);
  return result;
}

float sub_2613DF534(uint64_t a1)
{
  uint64_t v78 = 8492770;
  unint64_t v79 = 0xA300000000000000;
  sub_2614D54D8();
  unint64_t v4 = 0xA300000000000000;
  unint64_t v5 = *(uint64_t (**)(uint64_t))(*(void *)v1 + 144);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v73 = v5;
  unint64_t v74 = v1;
  uint64_t v7 = v5(v6);
  if (!*(void *)(v7 + 16) || (unint64_t v8 = sub_2613D8F00(8492770, 0xA300000000000000), (v9 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v14 = *(void *)(*(void *)v74 + 168);
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = ((uint64_t (*)(uint64_t))v14)(v15);
    if (*(void *)(v16 + 16))
    {
      unint64_t v17 = sub_2613D8F00(8492770, 0xA300000000000000);
      if (v18)
      {
        float v3 = *(float *)(*(void *)(v16 + 56) + 24 * v17 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
LABEL_60:
        swift_bridgeObjectRelease();
        return v3;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_2614D5488();
    unint64_t v20 = MEMORY[0x263F8EE78];
    if (v19)
    {
      uint64_t v21 = v19;
      uint64_t v78 = MEMORY[0x263F8EE78];
      uint64_t v16 = (uint64_t)&v78;
      sub_2613D913C(0, v19 & ~(v19 >> 63), 0);
      if (v21 < 0) {
        goto LABEL_83;
      }
      unint64_t v20 = v78;
      uint64_t v16 = a1;
      do
      {
        uint64_t v22 = sub_2614D5588();
        uint64_t v24 = v23;
        uint64_t v78 = v20;
        unint64_t v26 = *(void *)(v20 + 16);
        unint64_t v25 = *(void *)(v20 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_2613D913C(v25 > 1, v26 + 1, 1);
          uint64_t v16 = a1;
          unint64_t v20 = v78;
        }
        *(void *)(v20 + 16) = v26 + 1;
        unint64_t v27 = v20 + 16 * v26;
        *(void *)(v27 + 32) = v22;
        *(void *)(v27 + 40) = v24;
        uint64_t v2 = (void *)sub_2614D5498();
        --v21;
      }
      while (v21);
    }
    uint64_t v28 = *(void *)(v20 + 16);
    unint64_t v14 = sub_2613DE424(-1, v28 + 1, 3.4028e38);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_81;
    }
    uint64_t v29 = *(void *)(v14 + 16);
    if (v29)
    {
LABEL_15:
      *(_DWORD *)(v14 + 32) = 0;
      unint64_t v71 = v14 + 32;
      *(void *)(v14 + 40) = -1;
      unint64_t v72 = v14;
      uint64_t v67 = v4;
      if (!v28) {
        goto LABEL_40;
      }
      unint64_t v4 = 0;
      unint64_t v30 = v14 + 48;
      uint64_t v31 = 3;
      do
      {
        sub_2613C23AC(&qword_26A914B28);
        unint64_t v32 = *(void *)(v20 + 16);
        if (v32 <= v4 || v32 < v28) {
          goto LABEL_77;
        }
        unint64_t v68 = v4 + 1;
        if (v4) {
          unint64_t v34 = 0xE000000000000000;
        }
        else {
          unint64_t v34 = 0xA300000000000000;
        }
        uint64_t v35 = 8492770;
        if (v4) {
          uint64_t v35 = 0;
        }
        uint64_t v75 = v35;
        sub_2613E1FC0();
        uint64_t v69 = v31;
        unint64_t v70 = v30;
        unint64_t v36 = v4;
        do
        {
          ++v36;
          uint64_t v78 = v20;
          unint64_t v79 = v20 + 32;
          unint64_t v80 = v4;
          uint64_t v81 = v31;
          swift_bridgeObjectRetain();
          sub_2614D5338();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v78 = v75;
          unint64_t v79 = v34;
          swift_bridgeObjectRetain();
          sub_2614D54D8();
          swift_bridgeObjectRelease();
          uint64_t v37 = swift_bridgeObjectRelease();
          uint64_t v2 = (void *)v78;
          unint64_t v14 = v79;
          uint64_t v16 = v73(v37);
          if (*(void *)(v16 + 16) && (unint64_t v38 = sub_2613D8F00((uint64_t)v2, v14), (v39 & 1) != 0))
          {
            float v3 = *(float *)(*(void *)(v16 + 56) + 16 * v38 + 8);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v40 = *(void *)(v72 + 16);
            if (v4 >= v40)
            {
              __break(1u);
LABEL_72:
              __break(1u);
LABEL_73:
              __break(1u);
LABEL_74:
              __break(1u);
LABEL_75:
              __break(1u);
LABEL_76:
              __break(1u);
LABEL_77:
              __break(1u);
LABEL_78:
              __break(1u);
LABEL_79:
              __break(1u);
LABEL_80:
              __break(1u);
LABEL_81:
              unint64_t v14 = (unint64_t)sub_2613E13FC((void *)v14);
              uint64_t v29 = *(void *)(v14 + 16);
              if (!v29) {
                goto LABEL_82;
              }
              goto LABEL_15;
            }
            if (v36 >= v40) {
              goto LABEL_72;
            }
            float v41 = v3 + *(float *)(v71 + 16 * v4);
            if (v41 < *(float *)v30)
            {
              *(float *)unint64_t v30 = v41;
              *(void *)(v30 + 8) = v4;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v30 += 16;
          v31 += 2;
        }
        while (v28 != v36);
        unint64_t v30 = v70 + 16;
        uint64_t v31 = v69 + 2;
        ++v4;
      }
      while (v68 != v28);
      uint64_t v29 = *(void *)(v72 + 16);
      if (v29)
      {
LABEL_40:
        unint64_t v42 = v29 - 1;
        unint64_t v4 = v20 + 32;
        float v3 = 0.0;
        uint64_t v2 = (void *)MEMORY[0x263F8EE78];
        uint64_t v28 = (uint64_t)&qword_26A914B28;
        while (1)
        {
          unint64_t v43 = v71 + 16 * v42;
          float v44 = *(float *)v43;
          unint64_t v45 = *(void *)(v43 + 8);
          if (v45 == -1) {
            break;
          }
          if ((uint64_t)v42 <= (uint64_t)v45) {
            goto LABEL_73;
          }
          if ((v45 & 0x8000000000000000) != 0) {
            goto LABEL_74;
          }
          unint64_t v46 = *(void *)(v20 + 16);
          if (v46 < v45 || v46 < v42) {
            goto LABEL_75;
          }
          uint64_t v78 = v20;
          unint64_t v79 = v20 + 32;
          unint64_t v80 = v45;
          uint64_t v81 = (2 * v42) | 1;
          sub_2613C23AC(&qword_26A914B28);
          sub_2613E1FC0();
          swift_bridgeObjectRetain();
          uint64_t v16 = sub_2614D5338();
          uint64_t v49 = v48;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v2 = sub_2613D864C(0, v2[2] + 1, 1, v2);
          }
          unint64_t v51 = v2[2];
          unint64_t v50 = v2[3];
          unint64_t v14 = v51 + 1;
          unint64_t v52 = v72;
          if (v51 >= v50 >> 1)
          {
            uint64_t v2 = sub_2613D864C((void *)(v50 > 1), v51 + 1, 1, v2);
            unint64_t v52 = v72;
          }
          v2[2] = v14;
          int v53 = &v2[2 * v51];
          v53[4] = v16;
          v53[5] = v49;
          float v3 = v3 + v44;
          unint64_t v42 = v45;
          if (v45 >= *(void *)(v52 + 16)) {
            goto LABEL_76;
          }
        }
        swift_bridgeObjectRelease();
        float v3 = v3 + v44;
        uint64_t v16 = v2[2];
        if (!v16) {
          goto LABEL_57;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v2 = (void *)MEMORY[0x263F8EE78];
        float v3 = 0.0;
        uint64_t v16 = *(void *)(MEMORY[0x263F8EE78] + 16);
        if (!v16)
        {
LABEL_57:
          swift_retain();
          uint64_t v54 = swift_bridgeObjectRetain();
          uint64_t v55 = sub_2613E2108(v54, (uint64_t)v74);
          swift_bridgeObjectRelease();
          swift_release();
          if (v74[40])
          {
            unint64_t v56 = *(uint64_t (**)(uint64_t *))(*(void *)v74 + 184);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v57 = (void (*)(uint64_t *, void))v56(&v78);
            char v59 = v58;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v77 = *v59;
            uint64_t *v59 = 0x8000000000000000;
            sub_2613E1A7C((uint64_t)v2, v55, 8492770, v67, isUniquelyReferenced_nonNull_native, v3);
            uint64_t *v59 = v77;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v57(&v78, 0);
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          goto LABEL_60;
        }
      }
      unint64_t v14 = v16 - 1;
      if (v16 == 1) {
        goto LABEL_57;
      }
      if (swift_isUniquelyReferenced_nonNull_native())
      {
LABEL_63:
        uint64_t v16 = (uint64_t)&v2[2 * v16 + 3];
        unint64_t v62 = v2 + 5;
        uint64_t v28 = 1;
        while (1)
        {
          if (v28 - 1 != v14)
          {
            unint64_t v64 = v2[2];
            if (v28 - 1 >= v64) {
              goto LABEL_78;
            }
            if (v14 >= v64) {
              goto LABEL_79;
            }
            unint64_t v4 = *(v62 - 1);
            uint64_t v65 = *v62;
            uint64_t v66 = *(void *)v16;
            *(v62 - 1) = *(void *)(v16 - 8);
            uint64_t *v62 = v66;
            unint64_t v20 = v2[2];
            swift_bridgeObjectRetain();
            if (v14 >= v20) {
              goto LABEL_80;
            }
            *(void *)(v16 - 8) = v4;
            *(void *)uint64_t v16 = v65;
            swift_bridgeObjectRelease();
          }
          --v14;
          v16 -= 16;
          v62 += 2;
          if (v28++ >= (uint64_t)v14) {
            goto LABEL_57;
          }
        }
      }
LABEL_84:
      uint64_t v2 = sub_2613E13E8(v2);
      goto LABEL_63;
    }
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  uint64_t v10 = *(void *)(v7 + 56) + 16 * v8;
  uint64_t v11 = *(void *)v10;
  float v3 = *(float *)(v10 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2613C23AC(&qword_26A914AC8);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_2614D81E0;
  *(void *)(v12 + 32) = 8492770;
  *(void *)(v12 + 40) = 0xA300000000000000;
  sub_2613C23AC(&qword_26A914B10);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_2614D81E0;
  *(void *)(v13 + 32) = v11;
  return v3;
}

uint64_t sub_2613DFD60(uint64_t a1, uint64_t a2)
{
  float v3 = v2;
  uint64_t v6 = sub_2614D4B78();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[2] = a2;
  uint64_t v22 = MEMORY[0x263F8EE78];
  v21[1] = a1;
  sub_2614D4AF8();
  sub_2613DC3BC();
  uint64_t v10 = sub_2614D5B78();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t))(*v3 + 192);
    uint64_t v13 = (uint64_t *)(v10 + 40);
    do
    {
      uint64_t v16 = *(v13 - 1);
      uint64_t v15 = *v13;
      uint64_t v17 = swift_bridgeObjectRetain();
      char v18 = v12(v17);
      uint64_t v19 = *v3;
      if (v18) {
        (*(void (**)(uint64_t, uint64_t))(v19 + 232))(v16, v15);
      }
      else {
        (*(void (**)(uint64_t, uint64_t))(v19 + 240))(v16, v15);
      }
      v13 += 2;
      swift_bridgeObjectRelease();
      uint64_t v14 = swift_bridgeObjectRetain();
      sub_2613DFF6C(v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v11;
    }
    while (v11);
  }
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_2613DFF6C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  float v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  float v3 = sub_2613E1088(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v10 = &v3[v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + 8 * v8) {
    goto LABEL_24;
  }
  memcpy(v10, (const void *)(a1 + 32), 8 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_2614D5DE8();
  __break(1u);
  return result;
}

uint64_t sub_2613E00B8(uint64_t a1)
{
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v10 = MEMORY[0x263F8EE78];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    int64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v1 + 248);
    swift_bridgeObjectRetain();
    uint64_t v6 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v7 = *(v6 - 1);
      uint64_t v8 = *v6;
      swift_bridgeObjectRetain();
      uint64_t v9 = v5(v7, v8);
      swift_bridgeObjectRelease();
      sub_2613DFF6C(v9);
      v6 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

uint64_t sub_2613E0190()
{
  return 0;
}

uint64_t sub_2613E019C()
{
  uint64_t v1 = type metadata accessor for Sentencepiece_ModelProto.SentencePiece(0);
  uint64_t v125 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v126 = (uint64_t)&v106 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_2614D50C8();
  uint64_t v118 = *(void *)(v116 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v116);
  uint64_t v117 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v123 = (char *)&v106 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v124 = (char *)&v106 - v7;
  uint64_t v8 = type metadata accessor for Sentencepiece_TrainerSpec(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2614D4D88();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v12 = type metadata accessor for Sentencepiece_ModelProto(0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_2614D4C78();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  char v18 = (char *)&v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2614D4C28();
  uint64_t v19 = sub_2614D4C88();
  if (v0)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    return 1;
  }
  unint64_t v21 = v20;
  unint64_t v122 = v10;
  uint64_t v114 = v16;
  uint64_t v115 = v15;
  uint64_t v132 = 0;
  memset(v131, 0, sizeof(v131));
  uint64_t v22 = v19;
  sub_2613C22A8(v19, v20);
  sub_2614D4D78();
  sub_2613E2278();
  sub_2614D4EC8();
  uint64_t v23 = v14;
  uint64_t v110 = 0;
  uint64_t v111 = v22;
  unint64_t v112 = v21;
  uint64_t v113 = v18;
  uint64_t v24 = (uint64_t)v122;
  sub_2613BA150((uint64_t)v122);
  char v25 = sub_2613B9F2C();
  sub_2613E2388(v24, type metadata accessor for Sentencepiece_TrainerSpec);
  char v130 = v25;
  char v129 = 1;
  sub_2613C5E04();
  sub_2614D55E8();
  sub_2614D55E8();
  if (*(void **)&v131[0] != v128)
  {
    sub_2613BA150(v24);
    char v91 = sub_2613B9F2C();
    sub_2613E2388(v24, type metadata accessor for Sentencepiece_TrainerSpec);
    char v130 = v91;
    char v129 = 0;
    sub_2614D55E8();
    sub_2614D55E8();
    unint64_t v26 = v127;
    unint64_t v34 = v117;
    uint64_t v28 = v118;
    if (*(void **)&v131[0] != v128)
    {
      *(void *)&v131[0] = 0;
      *((void *)&v131[0] + 1) = 0xE000000000000000;
      sub_2614D5C38();
      sub_2614D54D8();
      sub_2613BA150(v24);
      char v102 = sub_2613B9F2C();
      sub_2613E2388(v24, type metadata accessor for Sentencepiece_TrainerSpec);
      LOBYTE(v128) = v102;
      sub_2614D5D48();
      long long v103 = v131[0];
      sub_2613E22D0();
      swift_allocError();
      *unint64_t v104 = v103;
      swift_willThrow();
      sub_2613C2314(v111, v112);
      sub_2613E2388((uint64_t)v14, type metadata accessor for Sentencepiece_ModelProto);
      (*(void (**)(char *, uint64_t))(v114 + 8))(v113, v115);
      return 1;
    }
    (*(void (**)(void))(*(void *)v127 + 200))(0);
    uint64_t v92 = sub_26146718C();
    uint64_t v29 = v123;
    uint64_t v30 = v116;
    uint64_t v108 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
    v108(v123, v92, v116);
    uint64_t v31 = sub_2614D50A8();
    os_log_type_t v32 = sub_2614D5968();
    if (!os_log_type_enabled(v31, v32)) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  unint64_t v26 = v127;
  (*(void (**)(uint64_t))(*(void *)v127 + 200))(1);
  uint64_t v27 = sub_26146718C();
  uint64_t v28 = v118;
  uint64_t v29 = v124;
  uint64_t v30 = v116;
  uint64_t v108 = *(void (**)(char *, uint64_t, uint64_t))(v118 + 16);
  v108(v124, v27, v116);
  uint64_t v31 = sub_2614D50A8();
  os_log_type_t v32 = sub_2614D5968();
  BOOL v33 = os_log_type_enabled(v31, v32);
  unint64_t v34 = v117;
  if (v33)
  {
LABEL_5:
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl(&dword_2613B8000, v31, v32, "Using BPE segmentation model", v35, 2u);
    MEMORY[0x263E38060](v35, -1, -1);
  }
LABEL_6:

  uint64_t v107 = *(void (**)(char *, uint64_t))(v28 + 8);
  v107(v29, v30);
  uint64_t v36 = *(void *)v23;
  uint64_t v37 = *(char **)(*(void *)v23 + 16);
  unint64_t v38 = v23;
  uint64_t v40 = v114;
  uint64_t v39 = v115;
  uint64_t v124 = v37;
  uint64_t v109 = (uint64_t)v38;
  if (!v37)
  {
LABEL_34:
    uint64_t v93 = sub_26146718C();
    v108(v34, v93, v30);
    swift_retain_n();
    unsigned int v94 = sub_2614D50A8();
    os_log_type_t v95 = sub_2614D5968();
    if (os_log_type_enabled(v94, v95))
    {
      char v96 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)char v96 = 134217984;
      uint64_t v127 = v96 + 4;
      uint64_t v97 = *(void *)((*(uint64_t (**)(void))(*(void *)v26 + 120))() + 16);
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)&v131[0] = v97;
      uint64_t v98 = v40;
      uint64_t v99 = v109;
      uint64_t v100 = v115;
      unint64_t v34 = v117;
      sub_2614D5B58();
      swift_release();
      _os_log_impl(&dword_2613B8000, v94, v95, "Loaded %ld symbols", v96, 0xCu);
      uint64_t v101 = v96;
      uint64_t v30 = v116;
      MEMORY[0x263E38060](v101, -1, -1);
    }
    else
    {

      swift_release_n();
      uint64_t v98 = v40;
      uint64_t v100 = v39;
      uint64_t v99 = v109;
    }
    sub_2613C2314(v111, v112);
    v107(v34, v30);
    sub_2613E2388(v99, type metadata accessor for Sentencepiece_ModelProto);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v113, v100);
    return 1;
  }
  float v41 = *(char **)(*(void *)v26 + 136);
  unint64_t v122 = (char *)(*(void *)v26 + 136);
  uint64_t v123 = v41;
  uint64_t v120 = (uint64_t (*)(_OWORD *))*((void *)v122 + 3);
  unint64_t v121 = v122 + 24;
  uint64_t v42 = v36 + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
  uint64_t v119 = *(void *)(v125 + 72);
  uint64_t v106 = v36;
  swift_bridgeObjectRetain();
  uint64_t v43 = 0;
  uint64_t v44 = v126;
  while (1)
  {
    uint64_t v125 = v42;
    sub_2613E2324(v42, v44);
    uint64_t v46 = sub_2613BA2B8();
    uint64_t v48 = v47;
    uint64_t v49 = (void (*)(_OWORD *, void))((uint64_t (*)(_OWORD *))v123)(v131);
    unint64_t v51 = v50;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v128 = (void *)*v51;
    int v53 = v128;
    void *v51 = 0x8000000000000000;
    unint64_t v55 = sub_2613D8F78(v43);
    uint64_t v56 = v53[2];
    BOOL v57 = (v54 & 1) == 0;
    uint64_t v58 = v56 + v57;
    if (__OFADD__(v56, v57)) {
      break;
    }
    char v59 = v54;
    if (v53[3] >= v58)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        unint64_t v62 = v128;
        if (v54) {
          goto LABEL_17;
        }
      }
      else
      {
        sub_2613DA828();
        unint64_t v62 = v128;
        if (v59) {
          goto LABEL_17;
        }
      }
    }
    else
    {
      sub_2613DA264(v58, isUniquelyReferenced_nonNull_native);
      unint64_t v60 = sub_2613D8F78(v43);
      if ((v59 & 1) != (v61 & 1)) {
        goto LABEL_44;
      }
      unint64_t v55 = v60;
      unint64_t v62 = v128;
      if (v59)
      {
LABEL_17:
        uint64_t v63 = (uint64_t *)(v62[7] + 16 * v55);
        swift_bridgeObjectRelease();
        uint64_t *v63 = v46;
        v63[1] = v48;
        goto LABEL_21;
      }
    }
    v62[(v55 >> 6) + 8] |= 1 << v55;
    *(void *)(v62[6] + 8 * v55) = v43;
    unint64_t v64 = (uint64_t *)(v62[7] + 16 * v55);
    uint64_t *v64 = v46;
    v64[1] = v48;
    uint64_t v65 = v62[2];
    BOOL v66 = __OFADD__(v65, 1);
    uint64_t v67 = v65 + 1;
    if (v66) {
      goto LABEL_42;
    }
    v62[2] = v67;
LABEL_21:
    void *v51 = v62;
    swift_bridgeObjectRelease();
    v49(v131, 0);
    uint64_t v68 = sub_2613BA2B8();
    uint64_t v70 = v69;
    float v71 = sub_2613BA2D0();
    unint64_t v72 = (void (*)(_OWORD *, void))v120(v131);
    unint64_t v74 = v73;
    char v75 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v128 = (void *)*v74;
    unint64_t v76 = v128;
    void *v74 = 0x8000000000000000;
    unint64_t v78 = sub_2613D8F00(v68, v70);
    uint64_t v79 = v76[2];
    BOOL v80 = (v77 & 1) == 0;
    uint64_t v81 = v79 + v80;
    if (__OFADD__(v79, v80)) {
      goto LABEL_41;
    }
    char v82 = v77;
    if (v76[3] >= v81)
    {
      if ((v75 & 1) == 0) {
        sub_2613E1C28();
      }
    }
    else
    {
      sub_2613E1410(v81, v75);
      unint64_t v83 = sub_2613D8F00(v68, v70);
      if ((v82 & 1) != (v84 & 1)) {
        goto LABEL_45;
      }
      unint64_t v78 = v83;
    }
    float v85 = -v71;
    os_log_type_t v86 = v128;
    if (v82)
    {
      uint64_t v45 = v128[7] + 16 * v78;
      *(void *)uint64_t v45 = v43;
      *(float *)(v45 + 8) = v85;
    }
    else
    {
      v128[(v78 >> 6) + 8] |= 1 << v78;
      char v87 = (uint64_t *)(v86[6] + 16 * v78);
      uint64_t *v87 = v68;
      v87[1] = v70;
      uint64_t v88 = v86[7] + 16 * v78;
      *(void *)uint64_t v88 = v43;
      *(float *)(v88 + 8) = v85;
      uint64_t v89 = v86[2];
      BOOL v66 = __OFADD__(v89, 1);
      uint64_t v90 = v89 + 1;
      if (v66) {
        goto LABEL_43;
      }
      v86[2] = v90;
      swift_bridgeObjectRetain();
    }
    ++v43;
    void *v74 = v86;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v72(v131, 0);
    uint64_t v44 = v126;
    sub_2613E2388(v126, type metadata accessor for Sentencepiece_ModelProto.SentencePiece);
    uint64_t v42 = v125 + v119;
    unint64_t v26 = v127;
    if (v124 == (char *)v43)
    {
      swift_bridgeObjectRelease();
      uint64_t v40 = v114;
      uint64_t v39 = v115;
      uint64_t v30 = v116;
      unint64_t v34 = v117;
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  sub_2614D5FF8();
  __break(1u);
LABEL_45:
  uint64_t result = sub_2614D5FF8();
  __break(1u);
  return result;
}

uint64_t sub_2613E0EB4()
{
  uint64_t v1 = *(void *)((*(uint64_t (**)(void))(*(void *)v0 + 144))() + 16);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t VASentencePieceModel.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t VASentencePieceModel.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void *sub_2613E0F78(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2613C23AC(&qword_26A914B48);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2613E201C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2613E1088(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2613C23AC(&qword_26A914B10);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2613E2760(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void sub_2613E1198(unint64_t a1)
{
  uint64_t v2 = *(int64x2_t **)(v1 + 16);
  unint64_t v3 = v2[1].u64[0];
  if (!v3)
  {
LABEL_17:
    bzero((void *)(a1 + 4 * v3), 256 - 4 * v3);
    return;
  }
  if (v3 < 0xC
    || ((unint64_t)&v2[2] + 8 * v3 > a1 ? (BOOL v4 = (unint64_t)&v2[2] >= a1 + 4 * v3) : (BOOL v4 = 1), !v4))
  {
    uint64_t v5 = 0;
LABEL_13:
    uint64_t v13 = (float *)(a1 + 4 * v5);
    uint64_t v14 = &v2[2].i64[v5];
    unint64_t v15 = v3 - v5;
    do
    {
      uint64_t v16 = *v14++;
      *v13++ = (float)v16;
      --v15;
    }
    while (v15);
    goto LABEL_15;
  }
  uint64_t v5 = v3 & 0x7FFFFFFFFFFFFFF8;
  unint64_t v6 = v2 + 4;
  uint64_t v7 = (float32x4_t *)(a1 + 16);
  uint64_t v8 = v3 & 0x7FFFFFFFFFFFFFF8;
  do
  {
    int64x2_t v10 = v6[-2];
    int64x2_t v9 = v6[-1];
    int64x2_t v12 = *v6;
    int64x2_t v11 = v6[1];
    v6 += 4;
    v7[-1] = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_s64(v10)), vcvtq_f64_s64(v9));
    *uint64_t v7 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_s64(v12)), vcvtq_f64_s64(v11));
    v7 += 2;
    v8 -= 8;
  }
  while (v8);
  if (v3 != v5) {
    goto LABEL_13;
  }
LABEL_15:
  if (v3 <= 0x40)
  {
    if (v3 == 64) {
      return;
    }
    goto LABEL_17;
  }
  __break(1u);
}

void sub_2613E126C(char *__b)
{
  unint64_t v3 = *(void *)(*(void *)(v1 + 16) + 16);
  if (!v3)
  {
    uint64_t v4 = 0;
LABEL_6:
    bzero(&__b[v4], 256 - v4);
    return;
  }
  uint64_t v4 = 4 * v3;
  memset_pattern16(__b, &unk_2614D9480, 4 * v3);
  if (v3 > 0x40)
  {
    __break(1u);
    return;
  }
  if (v3 != 64) {
    goto LABEL_6;
  }
}

uint64_t sub_2613E1300(uint64_t result)
{
  uint64_t v2 = *(uint64_t **)(v1 + 16);
  uint64_t v3 = *v2;
  unint64_t v4 = *(void *)(*v2 + 16);
  if (v4)
  {
    uint64_t v5 = result;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t *v2 = v3;
    if (result)
    {
      if (v4 < 8) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t result = (uint64_t)sub_2613D8E30(v3);
      uint64_t v3 = result;
      if (v4 < 8) {
        goto LABEL_5;
      }
    }
    if ((unint64_t)(v3 - v5) < 0xFFFFFFFFFFFFFFE0)
    {
      uint64_t v6 = v4 & 0x7FFFFFFFFFFFFFF8;
      int64x2_t v11 = (long long *)(v5 + 16);
      int64x2_t v12 = (_OWORD *)(v3 + 48);
      uint64_t v13 = v4 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        long long v14 = *v11;
        *(v12 - 1) = *(v11 - 1);
        _OWORD *v12 = v14;
        v11 += 2;
        v12 += 2;
        v13 -= 8;
      }
      while (v13);
      if (v4 == v6) {
        goto LABEL_8;
      }
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = 0;
LABEL_6:
    uint64_t v7 = (_DWORD *)(4 * v6 + v3 + 32);
    uint64_t v8 = (int *)(v5 + 4 * v6);
    unint64_t v9 = v4 - v6;
    do
    {
      int v10 = *v8++;
      *v7++ = v10;
      --v9;
    }
    while (v9);
LABEL_8:
    uint64_t *v2 = v3;
  }
  return result;
}

void *sub_2613E13E8(void *a1)
{
  return sub_2613D864C(0, a1[2], 0, a1);
}

void *sub_2613E13FC(void *a1)
{
  return sub_2613E0F78(0, a1[2], 0, a1);
}

uint64_t sub_2613E1410(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_2613C23AC(&qword_26A914B40);
  char v42 = a2;
  uint64_t v6 = sub_2614D5DC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    uint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    os_log_type_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = *(void *)(v5 + 56) + v31;
    uint64_t v36 = *(void *)v35;
    int v37 = *(_DWORD *)(v35 + 8);
    if ((v42 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_2614D6088();
    sub_2614D5478();
    uint64_t result = sub_2614D60B8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    void *v19 = v34;
    v19[1] = v33;
    uint64_t v20 = *(void *)(v7 + 56) + v18;
    *(void *)uint64_t v20 = v36;
    *(_DWORD *)(v20 + 8) = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2613E173C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_2613C23AC(&qword_26A914B58);
  char v41 = a2;
  uint64_t v6 = sub_2614D5DC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v40 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v38 = v2;
  int64_t v39 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v39) {
      break;
    }
    int64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v40 + 8 * v22);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v39) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v40 + 8 * v13);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v38;
          if ((v41 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v40 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v39) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v40 + 8 * v13);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(v5 + 56) + 24 * v21;
    uint64_t v35 = *(void *)v33;
    uint64_t v34 = *(void *)(v33 + 8);
    int v36 = *(_DWORD *)(v33 + 16);
    if ((v41 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_2614D6088();
    sub_2614D5478();
    uint64_t result = sub_2614D60B8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v32;
    v18[1] = v31;
    uint64_t v19 = *(void *)(v7 + 56) + 24 * v17;
    *(void *)uint64_t v19 = v35;
    *(void *)(v19 + 8) = v34;
    *(_DWORD *)(v19 + 16) = v36;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v38;
  int64_t v23 = (void *)(v5 + 64);
  if ((v41 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
  if (v37 >= 64) {
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v37;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2613E1A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, float a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_2613D8F00(a3, a4);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= v19 && (a5 & 1) == 0)
  {
    sub_2613E1DE4();
LABEL_7:
    int64_t v22 = (void *)*v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7] + 24 * v16;
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)uint64_t v23 = a1;
      *(void *)(v23 + 8) = a2;
      *(float *)(v23 + 16) = a6;
      return result;
    }
    goto LABEL_11;
  }
  sub_2613E173C(v19, a5 & 1);
  unint64_t v25 = sub_2613D8F00(a3, a4);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_17:
    uint64_t result = sub_2614D5FF8();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  int64_t v22 = (void *)*v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  unint64_t v27 = (uint64_t *)(v22[6] + 16 * v16);
  uint64_t *v27 = a3;
  v27[1] = a4;
  uint64_t v28 = v22[7] + 24 * v16;
  *(void *)uint64_t v28 = a1;
  *(void *)(v28 + 8) = a2;
  *(float *)(v28 + 16) = a6;
  uint64_t v29 = v22[2];
  BOOL v30 = __OFADD__(v29, 1);
  uint64_t v31 = v29 + 1;
  if (v30)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v22[2] = v31;
  return swift_bridgeObjectRetain();
}

void *sub_2613E1C28()
{
  uint64_t v1 = v0;
  sub_2613C23AC(&qword_26A914B40);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2614D5DB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = *(void *)(v2 + 56) + v16;
    uint64_t v21 = *(void *)v20;
    int v22 = *(_DWORD *)(v20 + 8);
    uint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    void *v23 = v19;
    v23[1] = v18;
    uint64_t v24 = *(void *)(v4 + 56) + v16;
    *(void *)uint64_t v24 = v21;
    *(_DWORD *)(v24 + 8) = v22;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2613E1DE4()
{
  uint64_t v1 = v0;
  sub_2613C23AC(&qword_26A914B58);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2614D5DB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 56);
    uint64_t v18 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = v18[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v17 + v20);
    uint64_t v22 = *(void *)(v17 + v20 + 8);
    int v23 = *(_DWORD *)(v17 + v20 + 16);
    uint64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    void *v24 = *v18;
    v24[1] = v19;
    uint64_t v25 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v25 = v21;
    *(void *)(v25 + 8) = v22;
    *(_DWORD *)(v25 + 16) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_2613E1FC0()
{
  unint64_t result = qword_26A914B30;
  if (!qword_26A914B30)
  {
    sub_2613C5EC8(&qword_26A914B28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914B30);
  }
  return result;
}

char *sub_2613E201C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  unint64_t result = (char *)sub_2614D5DE8();
  __break(1u);
  return result;
}

uint64_t sub_2613E2108(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v19 = MEMORY[0x263F8EE78];
  sub_2613D915C(0, v2, 0);
  uint64_t v3 = v19;
  uint64_t v18 = *(uint64_t (**)(uint64_t))(*(void *)a2 + 144);
  size_t v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v8 = *(v6 - 1);
    uint64_t v7 = *v6;
    uint64_t v9 = swift_bridgeObjectRetain_n();
    uint64_t v10 = a2;
    uint64_t v11 = v18(v9);
    if (!*(void *)(v11 + 16)) {
      break;
    }
    unint64_t v12 = sub_2613D8F00(v8, v7);
    if ((v13 & 1) == 0) {
      break;
    }
    uint64_t v14 = *(void *)(*(void *)(v11 + 56) + 16 * v12);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    unint64_t v16 = *(void *)(v19 + 16);
    unint64_t v15 = *(void *)(v19 + 24);
    if (v16 >= v15 >> 1) {
      sub_2613D915C(v15 > 1, v16 + 1, 1);
    }
    v6 += 2;
    *(void *)(v19 + 16) = v16 + 1;
    *(void *)(v19 + 8 * v16 + 32) = v14;
    --v2;
    a2 = v10;
    if (!v2) {
      return v3;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

unint64_t sub_2613E2278()
{
  unint64_t result = qword_26A914930;
  if (!qword_26A914930)
  {
    type metadata accessor for Sentencepiece_ModelProto(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914930);
  }
  return result;
}

unint64_t sub_2613E22D0()
{
  unint64_t result = qword_26A914B38;
  if (!qword_26A914B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914B38);
  }
  return result;
}

uint64_t sub_2613E2324(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Sentencepiece_ModelProto.SentencePiece(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2613E2388(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *initializeBufferWithCopyOfBuffer for VASentencePieceError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for VASentencePieceError()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for VASentencePieceError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for VASentencePieceError(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for VASentencePieceError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VASentencePieceError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VASentencePieceError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VASentencePieceError()
{
  return &type metadata for VASentencePieceError;
}

uint64_t method lookup function for VAContextEncoder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VAContextEncoder);
}

uint64_t dispatch thunk of VAContextEncoder.__allocating_init(config:outputDim:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of VAContextEncoder.computeCtxEmbedding(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t method lookup function for VASentencePieceModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VASentencePieceModel);
}

uint64_t dispatch thunk of VASentencePieceModel.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of VASentencePieceModel.clearCache()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of VASentencePieceModel.encodeWordBpe(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of VASentencePieceModel.encodeWord(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of VASentencePieceModel.encode(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of VASentencePieceModel.decode(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of VASentencePieceModel.readTokenizerModelProtobuf(path:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))() & 1;
}

uint64_t dispatch thunk of VASentencePieceModel.count.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

char *sub_2613E2760(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  __n128 result = (char *)sub_2614D5DE8();
  __break(1u);
  return result;
}

uint64_t sub_2613E2854@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x2A0))();
  *a2 = result;
  return result;
}

uint64_t sub_2613E28B8(uint64_t a1, void **a2)
{
  unint64_t v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & **a2) + 0x2A8);
  uint64_t v3 = swift_unknownObjectRetain();
  return v2(v3);
}

uint64_t sub_2613E2924()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_tasrDelegate;
  swift_beginAccess();
  return MEMORY[0x263E38150](v1);
}

uint64_t sub_2613E2970()
{
  return swift_unknownObjectRelease();
}

void (*sub_2613E29CC(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_tasrDelegate;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x263E38150](v5);
  return sub_2613E2A50;
}

void sub_2613E2A50(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_2613E2AD0()
{
  return sub_2613E2B50();
}

uint64_t sub_2613E2ADC(uint64_t a1)
{
  return sub_2613E2BA4(a1, &OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_audioDebugBytesBeforeSpeech);
}

uint64_t (*sub_2613E2AE8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613E2B44()
{
  return sub_2613E2B50();
}

uint64_t sub_2613E2B50()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2613E2B98(uint64_t a1)
{
  return sub_2613E2BA4(a1, &OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_audioDebugBytesDuringSpeech);
}

uint64_t sub_2613E2BA4(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)(v2 + *a2);
  swift_beginAccess();
  *uint64_t v4 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613E2BF4())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_2613E2C50(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_2613C23AC(&qword_26A914C08);
  uint64_t v2 = (void *)sub_2614D5DD8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_2613D8F00(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    unint64_t v12 = (void *)(v2[7] + 16 * result);
    void *v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_2613E2D74()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2613E2DC0(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_fuzzyKeywordsWithSpaces);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613E2E14())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613E2E70()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_loopStartTime;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_2613E2EB8(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_loopStartTime);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_2613E2F04())()
{
  return j__swift_endAccess;
}

uint64_t sub_2613E2F60()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_blockInferenceRequestPending);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_2613E2FA8(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_blockInferenceRequestPending);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_2613E2FF4())()
{
  return j_j__swift_endAccess;
}

unsigned char *sub_2613E3050(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v9 = objc_allocWithZone(v4);
  return sub_2613E30B4(a1, a2, a3, a4);
}

unsigned char *sub_2613E30B4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = (uint64_t)&v5[OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_tasrDelegate];
  swift_unknownObjectWeakInit();
  *(void *)&v5[OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_vadModel] = 0;
  v5[OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_mustWaitForFinalToStopInference] = 0;
  v5[OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_usedPartialAsFinal] = 0;
  uint64_t v21 = OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_timingInfo;
  *(void *)&v5[OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_timingInfo] = 0;
  *(void *)&v5[OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_lastModelInputBeforeStartOfSpeech] = 0;
  *(void *)&v5[OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_lastModelInputBeforeUnblock] = 0;
  *(void *)&v5[OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_audioDebugBytesBeforeSpeech] = 0;
  *(void *)&v5[OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_audioDebugBytesDuringSpeech] = 0;
  uint64_t v9 = OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_fuzzyKeywordsWithSpaces;
  char v10 = v5;
  *(void *)&v5[v9] = sub_2613E2C50(MEMORY[0x263F8EE78]);
  *(void *)&v10[OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_loopStartTime] = 0;
  v10[OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_blockInferenceRequestPending] = 0;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  uint64_t v11 = (uint64_t)&v10[OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_strategyProvider];
  uint64_t v24 = a3;
  uint64_t v12 = sub_2613E3434(a3, (uint64_t)&v10[OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_strategyProvider]);
  uint64_t v13 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *a4) + 0xB0))(v12);
  uint64_t v14 = v13;
  if (v13)
  {
    *(void *)&v10[OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_tasrConfig] = v13;
    uint64_t v15 = *(uint64_t (**)(uint64_t))(*(void *)v13 + 480);
    uint64_t v16 = swift_retain();
    if (v15(v16)) {
      type metadata accessor for VATransducer();
    }
    else {
      type metadata accessor for VACTCEncoder();
    }
    unint64_t v18 = static VACTCEncoder.build(config:debug:)(v14, 0);
    if (!v20)
    {
      *(void *)&v10[OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_tasrModel] = v18;

      sub_2614A6C74(v23);
      char v10 = sub_2614A6D00(a1, a4, (uint64_t)v23);
      swift_release();
      swift_unknownObjectRelease();
      sub_2613DD718(v24);
      return v10;
    }
    swift_unknownObjectRelease();

    swift_release();
  }
  else
  {
    sub_2613DC2B8();
    swift_allocError();
    void *v17 = 0xD000000000000013;
    v17[1] = 0x80000002614E0D70;
    swift_willThrow();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
  sub_2613DD718(v24);
  sub_2613E3498(v8);
  sub_2613DD718(v11);
  if (v14) {
    swift_release();
  }
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  type metadata accessor for VATinyASRSpotter();
  swift_deallocPartialClassInstance();
  return v10;
}

uint64_t sub_2613E3434(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2613E3498(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for VATinyASRSpotter()
{
  return self;
}

unsigned char *static VATinyASRSpotter.buildForConfig(delegate:tasrDelegate:tasrConfig:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VAStrategyProviderPassthrough();
  uint64_t v5 = sub_26141BF64();
  type metadata accessor for VAConfiguration();
  uint64_t v6 = static VAConfiguration.buildForTasr(tasrConfig:)();
  v9[3] = v4;
  v9[4] = &protocol witness table for VAStrategyProviderPassthrough;
  v9[0] = v5;
  id v7 = objc_allocWithZone((Class)type metadata accessor for VATinyASRSpotter());
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return sub_2613E30B4(a1, a2, (uint64_t)v9, v6);
}

uint64_t sub_2613E35A8(uint64_t *a1)
{
  uint64_t v2 = sub_2613C23AC(&qword_26A914BD8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *a1;
  int v6 = *((_DWORD *)a1 + 2);
  char v7 = *((unsigned char *)a1 + 12);
  char v8 = *((unsigned char *)a1 + 13);
  uint64_t v9 = a1[2];
  uint64_t v10 = a1[3];
  char v11 = *((unsigned char *)a1 + 32);
  uint64_t v12 = a1[5];
  LODWORD(v3) = *((unsigned __int8 *)a1 + 48);
  int v13 = *((unsigned __int8 *)a1 + 49);
  int v14 = *((_DWORD *)a1 + 13);
  int v15 = *((unsigned __int8 *)a1 + 56);
  uint64_t v16 = a1[8];
  uint64_t v17 = a1[9];
  int v18 = *((unsigned __int8 *)a1 + 80);
  int v19 = *((unsigned __int8 *)a1 + 81);
  int v20 = *((unsigned __int8 *)a1 + 82);
  int v21 = *((unsigned __int8 *)a1 + 83);
  int v22 = *((unsigned __int8 *)a1 + 84);
  int v23 = *((unsigned __int8 *)a1 + 85);
  int v24 = *((unsigned __int8 *)a1 + 86);
  uint64_t v52 = *a1;
  int v53 = v6;
  char v54 = v7;
  char v55 = v8;
  uint64_t v56 = v9;
  uint64_t v57 = v10;
  char v58 = v11;
  uint64_t v59 = v12;
  int v49 = v13;
  int v50 = v3;
  char v60 = v3;
  char v61 = v13;
  int v62 = v14;
  int v48 = v15;
  char v63 = v15;
  uint64_t v46 = v17;
  uint64_t v47 = v16;
  uint64_t v64 = v16;
  uint64_t v65 = v17;
  int v44 = v19;
  int v45 = v18;
  char v66 = v18;
  char v67 = v19;
  int v42 = v21;
  int v43 = v20;
  char v68 = v20;
  char v69 = v21;
  int v40 = v23;
  int v41 = v22;
  char v70 = v22;
  char v71 = v23;
  int v39 = v24;
  char v72 = v24;
  if ((VARuntimeParameters.allKeywordsAreValid.getter() & 1) == 0)
  {
    sub_2613DC2B8();
    swift_allocError();
    unint64_t v36 = 0xD00000000000006DLL;
    uint64_t v37 = "Keywords should be lower case and should not contain spaces to ensure model compatibility and API consistency";
    goto LABEL_6;
  }
  uint64_t v38 = v4;
  uint64_t v52 = v5;
  int v53 = v6;
  char v54 = v7;
  char v55 = v8;
  uint64_t v56 = v9;
  uint64_t v57 = v10;
  char v58 = v11;
  uint64_t v59 = v12;
  char v60 = v50;
  char v61 = v49;
  int v62 = v14;
  char v63 = v48;
  uint64_t v64 = v47;
  uint64_t v65 = v46;
  char v66 = v45;
  char v67 = v44;
  char v68 = v43;
  char v69 = v42;
  char v70 = v41;
  char v71 = v40;
  char v72 = v39;
  uint64_t v25 = v73;
  int64_t v26 = (void *)MEMORY[0x263F8EED0];
  uint64_t v27 = v51;
  uint64_t result = (*(uint64_t (**)(uint64_t *))((*MEMORY[0x263F8EED0] & *v73) + 0x3F8))(&v52);
  if (!v27)
  {
    uint64_t v29 = sub_2614D5788();
    uint64_t v30 = (uint64_t)v38;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v38, 1, 1, v29);
    uint64_t v31 = (void *)swift_allocObject();
    v31[2] = 0;
    v31[3] = 0;
    v31[4] = v25;
    uint64_t v32 = v25;
    uint64_t v33 = sub_2613E3FD0(v30, (uint64_t)&unk_26A914BE8, (uint64_t)v31);
    uint64_t v34 = (*(uint64_t (**)(uint64_t))((*v26 & *v32) + 0x138))(v33);
    uint64_t result = (*(uint64_t (**)(uint64_t))((*v26 & *v32) + 0x130))(v34);
    if (!result)
    {
      sub_2613DC2B8();
      swift_allocError();
      unint64_t v36 = 0xD00000000000001DLL;
      uint64_t v37 = "Failed to create keyword task";
LABEL_6:
      unint64_t *v35 = v36;
      v35[1] = (unint64_t)(v37 - 32) | 0x8000000000000000;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_2613E3988(uint64_t a1)
{
  v1[3] = a1;
  uint64_t v2 = sub_2614D50C8();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v1[7] = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2613E3A78;
  return sub_2613E5D18();
}

uint64_t sub_2613E3A78()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2613E3BFC;
  }
  else {
    uint64_t v2 = sub_2613E3B8C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2613E3B8C()
{
  **(unsigned char **)(v0 + 24) = 1;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2613E3BFC()
{
  uint64_t v1 = (void *)v0[8];
  uint64_t v3 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v4 = v0[4];
  uint64_t v5 = sub_26146718C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  id v6 = v1;
  id v7 = v1;
  char v8 = sub_2614D50A8();
  os_log_type_t v9 = sub_2614D5978();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (void *)v0[8];
    char v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)char v11 = 138412290;
    id v13 = v10;
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v14;
    sub_2614D5B58();
    void *v12 = v14;

    _os_log_impl(&dword_2613B8000, v8, v9, "Error processing audio: %@", v11, 0xCu);
    sub_2613C23AC(&qword_26A914C10);
    swift_arrayDestroy();
    MEMORY[0x263E38060](v12, -1, -1);
    MEMORY[0x263E38060](v11, -1, -1);
  }
  else
  {
    int v15 = (void *)v0[8];
  }
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_2613E3DFC()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2613E3E3C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2613E3EDC;
  return sub_2613E3988(a1);
}

uint64_t sub_2613E3EDC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_2613E3FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2614D5788();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_2614D5778();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_2613ECF18(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2614D5748();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

void sub_2613E414C(uint64_t a1)
{
  void (*v122)(double *__return_ptr, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  char *v129;
  void *v130;
  double v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  uint64_t v150;
  int v151;
  int v152;
  int v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t (*v156)(double *);
  uint64_t v157;
  unint64_t v158;
  void v159[2];
  double v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char v164;
  uint64_t v165;
  char v166;
  char v167;
  int v168;
  char v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  char v173;
  char v174;
  char v175;
  char v176;
  char v177;
  char v178;
  char *v179;

  uint64_t v2 = v1;
  uint64_t v139 = sub_2614D50C8();
  uint64_t v138 = *(void *)(v139 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v139);
  uint64_t v127 = (char *)&v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  char v129 = (char *)&v126 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v128 = (char *)&v126 - v9;
  double v10 = *(double *)a1;
  int v11 = *(_DWORD *)(a1 + 8);
  int v12 = *(unsigned __int8 *)(a1 + 12);
  int v13 = *(unsigned __int8 *)(a1 + 13);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  int v16 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v143 = *(void *)(a1 + 40);
  uint64_t v142 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v141 = *(unsigned __int8 *)(a1 + 49);
  int v17 = *(_DWORD *)(a1 + 52);
  uint64_t v151 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v144 = *(void *)(a1 + 64);
  uint64_t v150 = *(void *)(a1 + 72);
  uint64_t v149 = *(unsigned __int8 *)(a1 + 80);
  uint64_t v148 = *(unsigned __int8 *)(a1 + 81);
  uint64_t v152 = *(unsigned __int8 *)(a1 + 82);
  uint64_t v147 = *(unsigned __int8 *)(a1 + 83);
  uint64_t v146 = *(unsigned __int8 *)(a1 + 84);
  uint64_t v145 = *(unsigned __int8 *)(a1 + 85);
  uint64_t v153 = *(unsigned __int8 *)(a1 + 86);
  uint64_t v18 = (void *)MEMORY[0x263F8EED0];
  int v19 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v1) + 0x78))(v8);
  if (!v19)
  {
    sub_2613DC2B8();
    swift_allocError();
    void *v47 = 0xD000000000000011;
    v47[1] = 0x80000002614E0E20;
    swift_willThrow();
    return;
  }
  char v130 = v19;
  int v20 = *(uint64_t (**)(double *))((*v18 & *v1) + 0x3B8);
  uint64_t v155 = (*v18 & *v1) + 952;
  uint64_t v156 = v20;
  int v21 = (void (*)(double *, void))v20(&v160);
  int v23 = v22;
  swift_bridgeObjectRelease();
  void *v23 = MEMORY[0x263F8EE80];
  v21(&v160, 0);
  uint64_t v131 = v10;
  uint64_t v160 = v10;
  LODWORD(v161) = v11;
  uint64_t v137 = v12;
  BYTE4(v161) = v12;
  uint64_t v136 = v13;
  BYTE5(v161) = v13;
  uint64_t v132 = v14;
  uint64_t v162 = v14;
  os_log_t v163 = v15;
  uint64_t v135 = v15;
  uint64_t v133 = v16;
  int v164 = v16;
  uint64_t v165 = v143;
  v166 = v142;
  v167 = v141;
  uint64_t v168 = v17;
  int v169 = v151;
  uint64_t v170 = v144;
  unint64_t v171 = v150;
  int v172 = v149;
  long long v173 = v148;
  uint64_t v174 = v152;
  uint64_t v175 = v147;
  v176 = v146;
  v177 = v145;
  uint64_t v178 = v153;
  uint64_t v134 = VARuntimeParameters.keywordsNoThresholds.getter();
  uint64_t v24 = *(void *)(v134 + 16);
  uint64_t v25 = v2;
  if (v24)
  {
    float v154 = sub_2613DC3BC();
    int64_t v26 = (uint64_t *)(v134 + 40);
    do
    {
      uint64_t v28 = *v26;
      uint64_t v160 = *((double *)v26 - 1);
      uint64_t v27 = *(void *)&v160;
      v161 = v28;
      v159[0] = 95;
      v159[1] = 0xE100000000000000;
      uint64_t v157 = 32;
      unint64_t v158 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_2614D5BB8();
      sub_2614D5428();
      swift_bridgeObjectRelease();
      uint64_t v29 = sub_2613EBDEC();
      uint64_t v31 = v30;
      swift_bridgeObjectRelease();
      long long v179 = (char *)v156(&v160);
      uint64_t v32 = v25;
      uint64_t v34 = v33;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v159[0] = *v34;
      void *v34 = 0x8000000000000000;
      sub_2613EB680(v27, v28, v29, v31, isUniquelyReferenced_nonNull_native);
      void *v34 = v159[0];
      uint64_t v25 = v32;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ((void (*)(double *, void))v179)(&v160, 0);
      v26 += 2;
      --v24;
    }
    while (v24);
  }
  swift_bridgeObjectRelease();
  char v36 = v153;
  if (v153)
  {
    uint64_t v37 = v25;
    if (*((unsigned char *)v25 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_mustWaitForFinalToStopInference) == 1)
    {
      uint64_t v38 = sub_26146718C();
      int v39 = v128;
      (*(void (**)(char *, uint64_t, uint64_t))(v138 + 16))(v128, v38, v139);
      int v40 = sub_2614D50A8();
      os_log_type_t v41 = sub_2614D5968();
      BOOL v42 = os_log_type_enabled(v40, v41);
      uint64_t v43 = v140;
      int v44 = (void *)MEMORY[0x263F8EED0];
      if (v42)
      {
        int v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v45 = 0;
        _os_log_impl(&dword_2613B8000, v40, v41, "block inference requested, but waiting for final", v45, 2u);
        MEMORY[0x263E38060](v45, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v138 + 8))(v39, v139);
      uint64_t v46 = v44;
      (*(void (**)(uint64_t))((*v44 & *v37) + 0x3E0))(1);
    }
    else
    {
      char v69 = (void *)MEMORY[0x263F8EED0];
      (*(void (**)(void))((*MEMORY[0x263F8EED0] & *v25) + 0x3E0))(0);
      uint64_t v70 = v140;
      sub_2613E545C();
      uint64_t v43 = v70;
      if (v70)
      {
LABEL_39:

        return;
      }
      uint64_t v46 = v69;
    }
  }
  else
  {
    uint64_t v48 = sub_26146718C();
    int v49 = v129;
    (*(void (**)(char *, uint64_t, uint64_t))(v138 + 16))(v129, v48, v139);
    int v50 = sub_2614D50A8();
    os_log_type_t v51 = sub_2614D5968();
    uint64_t v37 = v25;
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      _os_log_impl(&dword_2613B8000, v50, v51, "Unblock inference", v52, 2u);
      MEMORY[0x263E38060](v52, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v138 + 8))(v49, v139);
    uint64_t v43 = v140;
    uint64_t v46 = (void *)MEMORY[0x263F8EED0];
  }
  char v53 = v137;
  char v54 = v152;
  uint64_t v55 = OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_tasrConfig;
  uint64_t v56 = *(void (**)(uint64_t))(**(void **)((char *)v37
                                                     + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_tasrConfig)
                                       + 408);
  uint64_t v57 = swift_retain();
  v56(v57);
  uint64_t v59 = v58;
  swift_release();
  swift_bridgeObjectRelease();
  long long v179 = (char *)v55;
  if (v59
    && (char v60 = *(void (**)(uint64_t))(**(void **)((char *)v37 + v55) + 384),
        uint64_t v61 = swift_retain(),
        v60(v61),
        uint64_t v63 = v62,
        swift_release(),
        uint64_t v64 = swift_bridgeObjectRelease(),
        v63))
  {
    uint64_t v65 = v46;
  }
  else
  {
    uint64_t v66 = mach_absolute_time();
    uint64_t v67 = *(void *)((char *)v37 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_tasrModel);
    uint64_t v160 = v131;
    LODWORD(v161) = v11;
    BYTE4(v161) = v53;
    BYTE5(v161) = v136;
    uint64_t v162 = v132;
    os_log_t v163 = v135;
    int v164 = v133;
    uint64_t v165 = v143;
    v166 = v142;
    v167 = v141;
    uint64_t v168 = v17;
    int v169 = v151;
    uint64_t v170 = v144;
    unint64_t v171 = v150;
    int v172 = v149;
    long long v173 = v148;
    uint64_t v174 = v54;
    uint64_t v175 = v147;
    v176 = v146;
    v177 = v145;
    uint64_t v178 = v36;
    swift_retain();
    uint64_t v68 = sub_2614B8BA8();
    (*(void (**)(uint64_t))(*(void *)v67 + 880))(v68);
    if (v43)
    {

      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v71 = sub_26146718C();
    char v72 = v127;
    (*(void (**)(char *, uint64_t, uint64_t))(v138 + 16))(v127, v71, v139);
    uint64_t v73 = sub_2614D50A8();
    os_log_type_t v74 = sub_2614D5958();
    if (os_log_type_enabled(v73, v74))
    {
      char v75 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)char v75 = 134217984;
      type metadata accessor for VARequestContext(0);
      uint64_t v76 = mach_absolute_time();
      BOOL v77 = v76 >= v66;
      unint64_t v78 = v76 - v66;
      if (!v77)
      {
        __break(1u);
        return;
      }
      uint64_t v160 = sub_2613FC478(v78);
      sub_2614D5B58();
      _os_log_impl(&dword_2613B8000, v73, v74, "Updating context took %f secs", v75, 0xCu);
      MEMORY[0x263E38060](v75, -1, -1);
    }

    uint64_t v64 = (*(uint64_t (**)(char *, uint64_t))(v138 + 8))(v72, v139);
    uint64_t v65 = (void *)MEMORY[0x263F8EED0];
  }
  uint64_t v140 = v43;
  uint64_t v79 = *(uint64_t (**)(uint64_t))((*v65 & *v37) + 0x118);
  uint64_t v80 = v79(v64);
  if (v80)
  {
    double v81 = v131;
    uint64_t v160 = v131;
    LODWORD(v161) = v11;
    BYTE4(v161) = v137;
    BYTE5(v161) = v136;
    uint64_t v162 = v132;
    os_log_t v163 = v135;
    char v82 = v133;
    int v164 = v133;
    uint64_t v83 = v143;
    uint64_t v165 = v143;
    char v84 = v142;
    v166 = v142;
    char v85 = v141;
    v167 = v141;
    uint64_t v168 = v17;
    int v169 = v151;
    uint64_t v86 = v144;
    uint64_t v170 = v144;
    unint64_t v171 = v150;
    int v172 = v149;
    long long v173 = v148;
    uint64_t v174 = v152;
    uint64_t v175 = v147;
    v176 = v146;
    v177 = v145;
    uint64_t v178 = v153;
    (*(void (**)(double *))(*(void *)v80 + 312))(&v160);
    swift_release();
  }
  else
  {
    type metadata accessor for VARequestContext(0);
    double v87 = v131;
    uint64_t v160 = v131;
    LODWORD(v161) = v11;
    BYTE4(v161) = v137;
    BYTE5(v161) = v136;
    uint64_t v162 = v132;
    os_log_t v163 = v135;
    int v164 = v133;
    uint64_t v83 = v143;
    uint64_t v165 = v143;
    char v84 = v142;
    v166 = v142;
    char v85 = v141;
    v167 = v141;
    uint64_t v168 = v17;
    int v169 = v151;
    uint64_t v170 = v144;
    unint64_t v171 = v150;
    int v172 = v149;
    long long v173 = v148;
    uint64_t v174 = v152;
    uint64_t v175 = v147;
    v176 = v146;
    v177 = v145;
    uint64_t v178 = v153;
    swift_bridgeObjectRetain();
    uint64_t v88 = v130;
    swift_bridgeObjectRetain();
    uint64_t v156 = v88;
    uint64_t v89 = sub_2613FDF20(v88, (uint64_t *)&v160);
    uint64_t v90 = (*(uint64_t (**)(uint64_t))((*v65 & *v37) + 0x120))(v89);
    uint64_t v91 = v79(v90);
    double v81 = v87;
    uint64_t v86 = v144;
    char v82 = v133;
    uint64_t v92 = v91;
    swift_release();
    if (!v92)
    {
      sub_2613DC2B8();
      swift_allocError();
      void *v119 = 0xD00000000000001DLL;
      v119[1] = 0x80000002614E0E40;
      swift_willThrow();

      return;
    }
  }
  uint64_t v93 = v86;
  uint64_t v95 = *(void *)((char *)v37 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_strategyProvider + 24);
  uint64_t v94 = *(void *)((char *)v37 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_strategyProvider + 32);
  sub_2613DBF24((void *)((char *)v37 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_strategyProvider), v95);
  uint64_t v160 = v81;
  LODWORD(v161) = v11;
  char v96 = v137;
  BYTE4(v161) = v137;
  BYTE5(v161) = v136;
  char v97 = v85;
  uint64_t v98 = v132;
  uint64_t v162 = v132;
  os_log_t v163 = v135;
  int v164 = v82;
  uint64_t v165 = v83;
  v166 = v84;
  v167 = v97;
  char v99 = v97;
  uint64_t v168 = v17;
  char v100 = v151;
  int v169 = v151;
  uint64_t v170 = v93;
  unint64_t v171 = v150;
  int v172 = v149;
  long long v173 = v148;
  char v101 = v152;
  uint64_t v174 = v152;
  uint64_t v175 = v147;
  v176 = v146;
  v177 = v145;
  uint64_t v178 = v153;
  uint64_t v102 = (*(uint64_t (**)(void *, _UNKNOWN **, double *, uint64_t, uint64_t))(v94 + 8))(v37, &protocol witness table for VAKeywordSpotterBase, &v160, v95, v94);
  long long v103 = (void *)MEMORY[0x263F8EED0];
  uint64_t v104 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v37) + 0x150))(v102);
  uint64_t v105 = v98;
  uint64_t v106 = v143;
  char v107 = v142;
  if ((v100 & 1) == 0)
  {
    uint64_t v108 = v143;
    char v109 = v142;
    uint64_t v110 = *(uint64_t (**)(uint64_t))(**(void **)&v179[(void)v37] + 432);
    uint64_t v111 = swift_retain();
    char v112 = v110(v111);
    char v107 = v109;
    uint64_t v106 = v108;
    char v96 = v137;
    uint64_t v104 = swift_release();
    if ((v112 & 1) == 0)
    {
      *(void *)((char *)v37 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_vadModel) = 0;
      char v114 = v133;
      goto LABEL_41;
    }
  }
  uint64_t v113 = OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_vadModel;
  if (!*(void *)((char *)v37 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_vadModel))
  {
    uint64_t v115 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v130) + 0xE0))(v104);
    if (v116)
    {
      uint64_t v117 = v115;
      unint64_t v118 = v116;
    }
    else
    {
      uint64_t v120 = (uint64_t *)sub_2614BF6D4();
      uint64_t v117 = *v120;
      unint64_t v118 = v120[1];
      swift_bridgeObjectRetain();
    }
    uint64_t v121 = v140;
    type metadata accessor for VASilenceModel();
    unint64_t v122 = *(void (**)(double *__return_ptr, uint64_t))(**(void **)&v179[(void)v37] + 504);
    uint64_t v123 = swift_retain();
    v122(&v160, v123);
    swift_release();
    LOBYTE(v159[0]) = LOBYTE(v160);
    uint64_t v124 = sub_26144A108(v117, v118, (unsigned __int8 *)v159);
    if (v121) {
      goto LABEL_39;
    }
    uint64_t v140 = 0;
    *(void *)((char *)v37 + v113) = v124;
    long long v103 = (void *)MEMORY[0x263F8EED0];
    char v96 = v137;
    char v114 = v133;
    uint64_t v106 = v143;
    char v107 = v142;
    char v99 = v141;
    char v101 = v152;
    uint64_t v105 = v132;
LABEL_41:
    swift_release();
    goto LABEL_42;
  }
  long long v103 = (void *)MEMORY[0x263F8EED0];
  char v114 = v133;
LABEL_42:
  uint64_t v160 = v131;
  LODWORD(v161) = v11;
  BYTE4(v161) = v96;
  BYTE5(v161) = v136;
  uint64_t v162 = v105;
  os_log_t v163 = v135;
  int v164 = v114;
  uint64_t v165 = v106;
  v166 = v107;
  v167 = v99;
  uint64_t v168 = v17;
  int v169 = v151;
  uint64_t v170 = v144;
  unint64_t v171 = v150;
  int v172 = v149;
  long long v173 = v148;
  uint64_t v174 = v101;
  uint64_t v175 = v147;
  v176 = v146;
  v177 = v145;
  uint64_t v178 = v153;
  if (sub_2614B8FE8()) {
    uint64_t v125 = MEMORY[0x263F8EE78];
  }
  else {
    uint64_t v125 = 0;
  }
  (*(void (**)(uint64_t))((*v103 & *v37) + 0x380))(v125);
  (*(void (**)(uint64_t))((*v103 & *v37) + 0x398))(v125);
}

uint64_t sub_2613E545C()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_2614D50C8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v34 - v8;
  *((unsigned char *)v0 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_mustWaitForFinalToStopInference) = 0;
  *((unsigned char *)v0 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_usedPartialAsFinal) = 0;
  double v10 = (void *)MEMORY[0x263F8EED0];
  (*(void (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x180))(0);
  (*(void (**)(void))((*v10 & *v0) + 0x198))(0);
  int v11 = *(void **)((char *)v0 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_timingInfo);
  if (v11)
  {
    int v12 = *(void (**)(void))((*v10 & *v11) + 0x268);
    int v13 = v11;
    v12();
  }
  uint64_t v14 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v2
                                                        + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_tasrModel)
                                          + 936);
  uint64_t v15 = swift_retain();
  uint64_t v16 = v14(v15);
  unint64_t v18 = v17;
  char v20 = v19;
  uint64_t result = swift_release();
  if (!v1)
  {
    uint64_t v22 = HIBYTE(v18) & 0xF;
    if ((v18 & 0x2000000000000000) == 0) {
      uint64_t v22 = v16 & 0xFFFFFFFFFFFFLL;
    }
    if (v22)
    {
      uint64_t v23 = sub_26146718C();
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, v23, v3);
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_2614D50A8();
      os_log_type_t v25 = sub_2614D5968();
      int v26 = v25;
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v27 = swift_slowAlloc();
        int v35 = v26;
        uint64_t v28 = v27;
        uint64_t v36 = swift_slowAlloc();
        uint64_t v38 = v36;
        *(_DWORD *)uint64_t v28 = 136315394;
        uint64_t v34 = v28 + 4;
        swift_bridgeObjectRetain();
        uint64_t v37 = sub_2613D875C(v16, v18, &v38);
        sub_2614D5B58();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v28 + 12) = 1024;
        LODWORD(v37) = v20 & 1;
        sub_2614D5B58();
        _os_log_impl(&dword_2613B8000, v24, (os_log_type_t)v35, "Block inference, ignore \"%s\", isFinal %{BOOL}d", (uint8_t *)v28, 0x12u);
        uint64_t v29 = v36;
        swift_arrayDestroy();
        MEMORY[0x263E38060](v29, -1, -1);
        MEMORY[0x263E38060](v28, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v30 = sub_26146718C();
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v30, v3);
      uint64_t v31 = sub_2614D50A8();
      os_log_type_t v32 = sub_2614D5968();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v33 = 0;
        _os_log_impl(&dword_2613B8000, v31, v32, "Block inference", v33, 2u);
        MEMORY[0x263E38060](v33, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
  }
  return result;
}

uint64_t sub_2613E58D8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>, float a4@<S0>)
{
  sub_2614D5428();
  uint64_t v7 = sub_2613EBDEC();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_2613EAE40();
  if (v11)
  {
    uint64_t v33 = v10;
    uint64_t v34 = v11;
    uint64_t v43 = 95;
    unint64_t v44 = 0xE100000000000000;
    uint64_t v41 = 32;
    unint64_t v42 = 0xE100000000000000;
    sub_2613DC3BC();
    if (sub_2614D5BB8() == v7 && v12 == v9)
    {
      swift_bridgeObjectRelease();
      char v15 = 1;
      char v16 = 1;
    }
    else
    {
      char v14 = sub_2614D5FB8();
      swift_bridgeObjectRelease();
      if (v14)
      {
        char v15 = 1;
        char v16 = 1;
      }
      else if (sub_2613E5BB0())
      {
        char v15 = 0;
        char v16 = 1;
      }
      else
      {
        char v15 = sub_2614D5578();
        char v16 = 0;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_2614D5428();
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    uint64_t v33 = v18;
    uint64_t v34 = v20;
    uint64_t v43 = 32;
    unint64_t v44 = 0xE100000000000000;
    uint64_t v41 = 95;
    unint64_t v42 = 0xE100000000000000;
    uint64_t v21 = sub_2614D5BB8();
    uint64_t v23 = v22;
    uint64_t result = swift_bridgeObjectRelease();
    if ((a2 | a1) < 0)
    {
      __break(1u);
    }
    else
    {
      double v24 = sub_26140C3F8();
      double v25 = sub_26140C3F8();
      char v26 = sub_2613F8710();
      uint64_t result = sub_2614967F4(v21, v23, a1, a2, v16, v15 & 1, v26 & 1, (uint64_t)&v33, a4, v24, v25);
      uint64_t v27 = v34;
      uint64_t v28 = v35;
      if (v39) {
        __int16 v29 = 256;
      }
      else {
        __int16 v29 = 0;
      }
      __int16 v30 = v29 | v38;
      BOOL v31 = v40 != 0;
      *(void *)a3 = v33;
      *(void *)(a3 + 8) = v27;
      *(void *)(a3 + 16) = v28;
      *(_OWORD *)(a3 + 24) = v36;
      *(_OWORD *)(a3 + 40) = v37;
      *(unsigned char *)(a3 + 58) = v31;
      *(_WORD *)(a3 + 56) = v30;
    }
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(_OWORD *)(a3 + 43) = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  return result;
}

uint64_t sub_2613E5BB0()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_2614D54F8();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    do
    {
      uint64_t v6 = sub_2614D54F8();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v4 = sub_2614D5FB8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      uint64_t v2 = sub_2614D54F8();
      uint64_t v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_2614D54F8();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  BOOL v10 = v9 == 0;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_2613E5D18()
{
  v1[129] = v0;
  uint64_t v2 = sub_2614D50C8();
  v1[130] = v2;
  v1[131] = *(void *)(v2 - 8);
  v1[132] = swift_task_alloc();
  v1[133] = swift_task_alloc();
  v1[134] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2613E5DF4, 0, 0);
}

void sub_2613E5DF4()
{
  uint64_t v1 = (void *)MEMORY[0x263F8EED0];
  uint64_t v2 = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **(void **)(v0 + 1032)) + 0x78))();
  *(void *)(v0 + 1080) = v2;
  if (!v2)
  {
    sub_2613DC2B8();
    swift_allocError();
    void *v25 = 0xD000000000000011;
    v25[1] = 0x80000002614E0E20;
    swift_willThrow();
    goto LABEL_8;
  }
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(v0 + 1072);
  uint64_t v5 = *(void *)(v0 + 1048);
  uint64_t v6 = *(void *)(v0 + 1040);
  uint64_t v7 = sub_26146718C();
  *(void *)(v0 + 1088) = v7;
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  *(void *)(v0 + 1096) = v8;
  *(void *)(v0 + 1104) = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v8(v4, v7, v6);
  uint64_t v9 = sub_2614D50A8();
  os_log_type_t v10 = sub_2614D5968();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_2613B8000, v9, v10, "Entering StartProcessingAudio()", v11, 2u);
    MEMORY[0x263E38060](v11, -1, -1);
  }
  uint64_t v12 = *(void *)(v0 + 1072);
  uint64_t v13 = *(void *)(v0 + 1048);
  uint64_t v14 = *(void *)(v0 + 1040);
  char v15 = *(void **)(v0 + 1032);

  char v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  *(void *)(v0 + 1112) = v16;
  *(void *)(v0 + 1120) = (v13 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v16(v12, v14);
  *((unsigned char *)v15 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_mustWaitForFinalToStopInference) = 0;
  *((unsigned char *)v15 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_usedPartialAsFinal) = 0;
  (*(void (**)(void))((*v1 & *v15) + 0x180))(0);
  (*(void (**)(void))((*v1 & *v15) + 0x198))(0);
  unint64_t v17 = *(void **)((char *)v15 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_timingInfo);
  if (v17)
  {
    uint64_t v18 = *(void (**)(void))((*v1 & *v17) + 0x268);
    uint64_t v19 = v17;
    v18();
  }
  uint64_t v20 = *(void *)(v0 + 1032);
  uint64_t v21 = OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_lastModelInputBeforeUnblock;
  *(void *)(v0 + 1128) = OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_lastModelInputBeforeUnblock;
  *(void *)(v20 + v21) = 0;
  swift_bridgeObjectRelease();
  *(void *)(v20 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_lastModelInputBeforeStartOfSpeech) = 0;
  swift_bridgeObjectRelease();
  uint64_t v22 = OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_tasrModel;
  *(void *)(v0 + 1136) = OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_tasrModel;
  uint64_t v23 = *(void (**)(uint64_t))(**(void **)(v20 + v22) + 920);
  uint64_t v24 = swift_retain();
  v23(v24);
  *(void *)(v0 + 1144) = 0;
  swift_release();
  type metadata accessor for VACircularMatrixBuffer();
  uint64_t v27 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(v20 + v22) + 168) + 248);
  uint64_t v28 = swift_retain();
  uint64_t v29 = v27(v28);
  swift_release();
  __int16 v30 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(v20 + v22) + 168) + 440);
  uint64_t v31 = swift_retain();
  uint64_t v32 = v30(v31);
  swift_release();
  *(void *)(v0 + 1152) = sub_261488750(v29, v32);
  type metadata accessor for VATinyASRFeatureExtract();
  uint64_t v59 = (void *)VATinyASRFeatureExtract.__allocating_init()();
  *(void *)(v0 + 1160) = v59;
  uint64_t v33 = (void *)MEMORY[0x263F8EED0];
  uint64_t v34 = *(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v3) + 0x80);
  uint64_t v35 = (*MEMORY[0x263F8EED0] & *v3) + 128;
  *(void *)(v0 + 1168) = v34;
  *(void *)(v0 + 1176) = v35 & 0xFFFFFFFFFFFFLL | 0xF95A000000000000;
  long long v36 = (void *)v34();
  uint64_t v37 = (*(uint64_t (**)(void))((*v33 & *v36) + 0x148))();

  *(void *)(v0 + 1184) = sub_261488750(66, v37);
  unsigned __int8 v38 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(v20 + v22) + 168) + 248);
  uint64_t v39 = swift_retain();
  uint64_t v40 = v38(v39);
  swift_release();
  uint64_t v41 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(v20 + v22) + 168) + 296);
  uint64_t v42 = swift_retain();
  uint64_t v43 = v41(v42);
  uint64_t v44 = swift_release();
  BOOL v45 = __OFSUB__(v40, v43);
  uint64_t v46 = v40 - v43;
  *(void *)(v0 + 1192) = v46;
  if (v45)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v46 < 0)
  {
LABEL_21:
    sub_2614D5D58();
    return;
  }
  uint64_t v47 = (void *)((uint64_t (*)(uint64_t))v34)(v44);
  uint64_t v48 = (void *)MEMORY[0x263F8EED0];
  uint64_t v49 = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v47) + 0xD0))();

  uint64_t v50 = v46 * v49;
  if ((unsigned __int128)(v46 * (__int128)v49) >> 64 == (v46 * v49) >> 63)
  {
    *(void *)(v0 + 1200) = v50;
    if (v50 + 0x4000000000000000 >= 0)
    {
      os_log_type_t v51 = *(void **)(v0 + 1032);
      uint64_t v52 = mach_absolute_time();
      uint64_t v53 = (*(uint64_t (**)(uint64_t))((*v48 & *v51) + 0x3C8))(v52);
      char v54 = (void *)(*(uint64_t (**)(uint64_t))((*v48 & *v51) + 0x118))(v53);
      *(void *)(v0 + 1208) = v54;
      if (v54)
      {
        uint64_t v55 = *v54 + 336;
        uint64_t v56 = *(int **)v55;
        *(void *)(v0 + 1216) = *(void *)v55;
        *(void *)(v0 + 1224) = v55 & 0xFFFFFFFFFFFFLL | 0x454C000000000000;
        char v60 = (void (*)(void))((char *)v56 + *v56);
        uint64_t v57 = (void *)swift_task_alloc();
        *(void *)(v0 + 1232) = v57;
        void *v57 = v0;
        v57[1] = sub_2613E666C;
        char v26 = v60;
LABEL_10:
        v26();
        return;
      }
      sub_2613DC2B8();
      swift_allocError();
      void *v58 = 0xD000000000000022;
      v58[1] = 0x80000002614E1140;
      swift_willThrow();
      swift_release();
      swift_release();

LABEL_8:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      char v26 = *(void (**)(void))(v0 + 8);
      goto LABEL_10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_2613E666C(char a1)
{
  *(unsigned char *)(*(void *)v1 + 103) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2613E676C, 0, 0);
}

uint64_t sub_2613E676C()
{
  uint64_t v39 = v0;
  if (*(unsigned char *)(v0 + 103) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 1144);
    (*(void (**)(void, void, void))(v0 + 1096))(*(void *)(v0 + 1056), *(void *)(v0 + 1088), *(void *)(v0 + 1040));
    uint64_t v2 = sub_2614D50A8();
    os_log_type_t v3 = sub_2614D5968();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_2613B8000, v2, v3, "Processing loop done, reset tasr model", v4, 2u);
      MEMORY[0x263E38060](v4, -1, -1);
    }
    uint64_t v5 = *(void *)(v0 + 1136);
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 1112);
    uint64_t v7 = *(void *)(v0 + 1056);
    uint64_t v8 = *(void *)(v0 + 1040);
    uint64_t v9 = *(void *)(v0 + 1032);

    v6(v7, v8);
    os_log_type_t v10 = *(uint64_t (**)(uint64_t))(**(void **)(v9 + v5) + 936);
    uint64_t v11 = swift_retain();
    uint64_t v12 = v10(v11);
    if (v1)
    {
      char v16 = *(void **)(v0 + 1160);
      unint64_t v17 = *(void **)(v0 + 1080);
      swift_release();
      swift_release();

      swift_release();
      swift_release();

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    }
    else
    {
      uint64_t v23 = v12;
      unint64_t v24 = v13;
      float v25 = v15;
      char v26 = v14;
      uint64_t v27 = swift_release();
      uint64_t v28 = HIBYTE(v24) & 0xF;
      if ((v24 & 0x2000000000000000) == 0) {
        uint64_t v28 = v23 & 0xFFFFFFFFFFFFLL;
      }
      uint64_t v29 = (void *)MEMORY[0x263F8EED0];
      if (v28)
      {
        (*(void (**)(void *__return_ptr, uint64_t))(**(void **)(v0 + 1208) + 280))(v37, v27);
        int v30 = v38;
        swift_bridgeObjectRelease();
        uint64_t v31 = swift_bridgeObjectRelease();
        if (v30 == 1) {
          uint64_t v32 = (*(uint64_t (**)(uint64_t))((*v29 & **(void **)(v0 + 1032)) + 0x390))(v31);
        }
        else {
          uint64_t v32 = (*(uint64_t (**)(uint64_t))(**(void **)(v0 + 1208) + 360))(v31);
        }
        (*(void (**)(uint64_t, unint64_t, void, void, void, uint64_t, void, float))((*v29 & **(void **)(v0 + 1032)) + 0x430))(v23, v24, v26 & 1, 0, 0, v32, 0, v25);
        swift_bridgeObjectRelease();
      }
      uint64_t v33 = *(void **)(v0 + 1160);
      uint64_t v34 = *(void **)(v0 + 1080);
      uint64_t v35 = *(void **)(v0 + 1032);
      swift_bridgeObjectRelease();
      (*(void (**)(void))((*v29 & *v35) + 0x200))(0);
      swift_release();
      swift_release();

      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    }
    return v18();
  }
  else
  {
    uint64_t v20 = **(void **)(v0 + 1208) + 352;
    uint64_t v21 = *(int **)v20;
    *(void *)(v0 + 1240) = *(void *)v20;
    *(void *)(v0 + 1248) = v20 & 0xFFFFFFFFFFFFLL | 0x457000000000000;
    *(void *)(v0 + 1256) = OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_tasrConfig;
    *(void *)(v0 + 1264) = OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_vadModel;
    *(void *)(v0 + 1272) = 0;
    *(void *)(v0 + 1280) = 1;
    long long v36 = (int *)((char *)v21 + *v21);
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 1288) = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_2613E6CC4;
    return ((uint64_t (*)(void, uint64_t))v36)(0, 1);
  }
}

uint64_t sub_2613E6CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 1296) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_2613E887C;
  }
  else
  {
    *(void *)(v6 + 1304) = a2;
    *(void *)(v6 + 1312) = a1;
    uint64_t v7 = sub_2613E6DFC;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

void sub_2613E6DFC()
{
  uint64_t v199 = v0;
  uint64_t v2 = *(void *)(v0 + 1312);
  if (v2) {
    uint64_t v3 = *(void *)(v0 + 1304);
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    uint64_t v4 = *(void *)(v0 + 1312);
  }
  else {
    uint64_t v4 = MEMORY[0x263F8EE78];
  }
  unint64_t v5 = *(void *)(v4 + 16);
  if (!v5)
  {
    uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1096);
    uint64_t v48 = *(void *)(v0 + 1088);
    uint64_t v49 = *(void *)(v0 + 1064);
    uint64_t v50 = *(void *)(v0 + 1040);
    swift_bridgeObjectRelease();
    v47(v49, v48, v50);
    os_log_type_t v51 = sub_2614D50A8();
    os_log_type_t v52 = sub_2614D5968();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v53 = 0;
      _os_log_impl(&dword_2613B8000, v51, v52, "processing was stopped, stop predictions", v53, 2u);
      MEMORY[0x263E38060](v53, -1, -1);
    }
    char v54 = *(void (**)(uint64_t, uint64_t))(v0 + 1112);
    uint64_t v55 = *(void *)(v0 + 1064);
    uint64_t v56 = *(void *)(v0 + 1040);

    v54(v55, v56);
    uint64_t v57 = *(void *)(v0 + 1296);
    uint64_t v195 = *(void (**)(void))(v0 + 1280);
    uint64_t v27 = *(void *)(v0 + 1272);
    (*(void (**)(void, void, void))(v0 + 1096))(*(void *)(v0 + 1056), *(void *)(v0 + 1088), *(void *)(v0 + 1040));
    uint64_t v58 = sub_2614D50A8();
    os_log_type_t v59 = sub_2614D5968();
    if (os_log_type_enabled(v58, v59))
    {
      char v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v60 = 0;
      _os_log_impl(&dword_2613B8000, v58, v59, "Processing loop done, reset tasr model", v60, 2u);
      MEMORY[0x263E38060](v60, -1, -1);
    }
    uint64_t v61 = *(void *)(v0 + 1136);
    uint64_t v62 = *(void (**)(uint64_t, uint64_t))(v0 + 1112);
    uint64_t v63 = *(void *)(v0 + 1056);
    uint64_t v64 = *(void *)(v0 + 1040);
    uint64_t v65 = *(void *)(v0 + 1032);

    v62(v63, v64);
    uint64_t v66 = *(uint64_t (**)(uint64_t))(**(void **)(v65 + v61) + 936);
    uint64_t v67 = swift_retain();
    uint64_t v68 = v66(v67);
    uint64_t v6 = v57;
    if (!v57)
    {
      uint64_t v36 = v68;
      unint64_t v16 = (unint64_t)v69;
      float v1 = v71;
      LOBYTE(v11) = v70;
      uint64_t v113 = swift_release();
      uint64_t v114 = HIBYTE(v16) & 0xF;
      if ((v16 & 0x2000000000000000) == 0) {
        uint64_t v114 = v36 & 0xFFFFFFFFFFFFLL;
      }
      if (!v114) {
        goto LABEL_65;
      }
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v0 + 1208) + 280))(v197, v113);
      int v115 = v198;
      swift_bridgeObjectRelease();
      uint64_t v74 = swift_bridgeObjectRelease();
      if (v115 == 1)
      {
        uint64_t v116 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & **(void **)(v0 + 1032)) + 0x390))(v74);
LABEL_61:
        (*(void (**)(uint64_t, unint64_t, uint64_t, void, void (*)(void), uint64_t, uint64_t, float))((*MEMORY[0x263F8EED0] & **(void **)(v0 + 1032)) + 0x430))(v36, v16, v11 & 1, 0, v195, v116, v27, v1);
        if (v6)
        {
          uint64_t v134 = *(void **)(v0 + 1160);
          uint64_t v135 = *(void **)(v0 + 1080);
          swift_release();
          swift_release();

          swift_bridgeObjectRelease();
          swift_release();

          goto LABEL_87;
        }
        swift_bridgeObjectRelease();
LABEL_65:
        uint64_t v138 = *(void **)(v0 + 1160);
        uint64_t v139 = *(void **)(v0 + 1080);
        uint64_t v140 = *(void **)(v0 + 1032);
        swift_bridgeObjectRelease();
        (*(void (**)(void))((*MEMORY[0x263F8EED0] & *v140) + 0x200))(0);
        swift_release();
        swift_release();

        swift_release();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v141 = *(void (**)(void))(v0 + 8);
LABEL_89:
        v141();
        return;
      }
LABEL_60:
      uint64_t v116 = (*(uint64_t (**)(uint64_t))(**(void **)(v0 + 1208) + 360))(v74);
      goto LABEL_61;
    }
    char v72 = *(void **)(v0 + 1160);
    uint64_t v73 = *(void **)(v0 + 1080);
    swift_release();
    swift_release();

    swift_release();
    swift_release();

    goto LABEL_88;
  }
  uint64_t v194 = v3;
  uint64_t v6 = v0 + 192;
  uint64_t v7 = *(void **)(v0 + 1208);
  uint64_t v8 = *(void *)(v0 + 1152);
  uint64_t v9 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & **(void **)(v0 + 1160)) + 0x170))(v4);
  uint64_t v10 = (*(uint64_t (**)(void))(*(void *)v8 + 168))();
  uint64_t v11 = *v7 + 280;
  uint64_t v195 = *(void (**)(void))v11;
  (*(void (**)(uint64_t))v11)(v10);
  int v12 = *(unsigned __int8 *)(v0 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12 == 1
    || (unint64_t v13 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(v0 + 1032) + *(void *)(v0 + 1256)) + 432),
        uint64_t v14 = swift_retain(),
        LOBYTE(v13) = v13(v14),
        swift_release(),
        (v13 & 1) != 0))
  {
    (*(void (**)(uint64_t))(**(void **)(v0 + 1184) + 168))(v9);
  }
  uint64_t v15 = swift_bridgeObjectRelease();
  unint64_t v16 = (unint64_t)v195;
  ((void (*)(uint64_t))v195)(v15);
  int v17 = *(_DWORD *)(v0 + 112);
  char v18 = *(unsigned char *)(v0 + 116);
  char v19 = *(unsigned char *)(v0 + 117);
  char v20 = *(unsigned char *)(v0 + 136);
  uint64_t v21 = *(void *)(v0 + 144);
  char v22 = *(unsigned char *)(v0 + 152);
  char v23 = *(unsigned char *)(v0 + 153);
  int v24 = *(_DWORD *)(v0 + 156);
  char v25 = *(unsigned char *)(v0 + 160);
  uint64_t v26 = *(void *)(v0 + 168);
  uint64_t v27 = *(void *)(v0 + 176);
  __int16 v28 = *(_WORD *)(v0 + 184);
  char v29 = *(unsigned char *)(v0 + 186);
  char v30 = *(unsigned char *)(v0 + 187);
  char v31 = *(unsigned char *)(v0 + 188);
  char v32 = *(unsigned char *)(v0 + 189);
  char v33 = *(unsigned char *)(v0 + 190);
  *(void *)(v0 + 192) = *(void *)(v0 + 104);
  *(_DWORD *)(v0 + 200) = v17;
  *(unsigned char *)(v0 + 204) = v18;
  *(unsigned char *)(v0 + 205) = v19;
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 120);
  *(unsigned char *)(v0 + 224) = v20;
  *(void *)(v0 + 232) = v21;
  *(unsigned char *)(v0 + 240) = v22;
  *(unsigned char *)(v0 + 241) = v23;
  *(_DWORD *)(v0 + 244) = v24;
  *(unsigned char *)(v0 + 248) = v25;
  *(void *)(v0 + 256) = v26;
  *(void *)(v0 + 264) = v27;
  *(_WORD *)(v0 + 272) = v28;
  *(unsigned char *)(v0 + 274) = v29;
  *(unsigned char *)(v0 + 275) = v30;
  *(unsigned char *)(v0 + 276) = v31;
  *(unsigned char *)(v0 + 277) = v32;
  *(unsigned char *)(v0 + 278) = v33;
  char v34 = sub_2614B8FE8();
  swift_bridgeObjectRelease();
  uint64_t v35 = swift_bridgeObjectRelease();
  if (v34)
  {
    uint64_t v36 = MEMORY[0x263F8EED0];
    uint64_t v37 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & **(void **)(v0 + 1032)) + 0x378))(v35);
    if (v37)
    {
      uint64_t v6 = v37;
      unsigned __int8 v38 = *(void **)(v0 + 1032);
      *(void *)(v0 + 1016) = v37;
      uint64_t v39 = (*(uint64_t (**)(void))((*(void *)v36 & *v38) + 0x390))();
      if (!v39)
      {
        uint64_t v120 = *(void **)(v0 + 1160);
        uint64_t v121 = *(void **)(v0 + 1080);
        swift_bridgeObjectRelease();
        sub_2613DC2B8();
        swift_allocError();
        *unint64_t v122 = 0xD00000000000002BLL;
        v122[1] = 0x80000002614E11F0;
        swift_willThrow();
        swift_release();
        swift_release();
        swift_release();

        goto LABEL_87;
      }
      uint64_t v40 = *(void **)(v0 + 1032);
      *(void *)(v0 + 1024) = v39;
      char v41 = (*(uint64_t (**)(void))((*(void *)v36 & *v40) + 0x178))();
      uint64_t v27 = *(void *)(v0 + 1176);
      uint64_t v42 = *(uint64_t (**)(void))(v0 + 1168);
      if (v41)
      {
        uint64_t v43 = (void *)v42();
        unint64_t v44 = (*(uint64_t (**)(void))((*(void *)v36 & *v43) + 0xD0))();

        if ((v44 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else
        {
          if (v5 >= v44) {
            unint64_t v45 = v5 - v44;
          }
          else {
            unint64_t v45 = 0;
          }
          unint64_t v46 = *(void *)(v4 + 16);
          unint64_t v16 = (unint64_t)v195;
          if (v46 >= v45 && v46 >= v5)
          {
            sub_2613EC158(v4, v4 + 32, v45, (2 * v5) | 1);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_58;
          }
        }
        __break(1u);
      }
      else
      {
        uint64_t v126 = swift_bridgeObjectRelease();
        uint64_t v127 = (void *)((uint64_t (*)(uint64_t))v42)(v126);
        unint64_t v128 = (*(uint64_t (**)(void))((*(void *)v36 & *v127) + 0xD0))();

        if ((v128 & 0x8000000000000000) == 0)
        {
          unint64_t v129 = *(void *)(v4 + 16);
          if (v129 >= v128) {
            uint64_t v130 = v129 - v128;
          }
          else {
            uint64_t v130 = 0;
          }
          uint64_t v6 = *(void *)(v0 + 1200);
          sub_2613EC158(v4, v4 + 32, v130, (2 * v129) | 1);
          swift_bridgeObjectRelease();
          uint64_t v131 = *(void *)(*(void *)(v0 + 1016) + 16);
          unint64_t v16 = (unint64_t)v195;
          if (v131 > 2 * v6)
          {
            uint64_t v132 = *(void *)(v0 + 1200);
            unint64_t v133 = v131 - 2 * v132;
            if (__OFSUB__(v131, 2 * v132))
            {
LABEL_97:
              __break(1u);
              goto LABEL_98;
            }
            if (v133)
            {
              if ((v133 & 0x8000000000000000) != 0)
              {
LABEL_98:
                __break(1u);
                goto LABEL_99;
              }
              if (v131 < v133)
              {
LABEL_99:
                __break(1u);
                return;
              }
              sub_2613EC2F0(0, v133);
            }
          }
LABEL_58:
          uint64_t v74 = swift_bridgeObjectRelease();
          unint64_t v75 = *(void *)(v0 + 1192);
          if (!v75) {
            goto LABEL_59;
          }
          goto LABEL_29;
        }
      }
      __break(1u);
      goto LABEL_97;
    }
    uint64_t v117 = *(void **)(v0 + 1160);
    unint64_t v118 = *(void **)(v0 + 1080);
    swift_bridgeObjectRelease();
    sub_2613DC2B8();
    swift_allocError();
    void *v119 = 0xD00000000000002BLL;
    v119[1] = 0x80000002614E11C0;
    swift_willThrow();
    swift_release();
    swift_release();

    swift_release();
LABEL_88:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v141 = *(void (**)(void))(v0 + 8);
    goto LABEL_89;
  }
  uint64_t v74 = swift_bridgeObjectRelease();
  uint64_t v36 = MEMORY[0x263F8EED0];
  unint64_t v75 = *(void *)(v0 + 1192);
  if (!v75)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
LABEL_29:
  if (!(*(void *)(v0 + 1280) % v75))
  {
    ((void (*)(uint64_t))v16)(v74);
    int v78 = *(unsigned __int8 *)(v0 + 366);
    swift_bridgeObjectRelease();
    uint64_t v79 = swift_bridgeObjectRelease();
    if (v78 == 1
      && ((*(uint64_t (**)(uint64_t))((*(void *)v36 & **(void **)(v0 + 1032)) + 0x3D8))(v79) & 1) == 0)
    {
      uint64_t v136 = *(void *)(v0 + 1128);
      uint64_t v137 = *(void *)(v0 + 1032);
      *(void *)(v137 + v136) = (*(uint64_t (**)(void))(**(void **)(v0 + 1152) + 176))();
      uint64_t v76 = *(void *)(v0 + 1296);
LABEL_92:
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    uint64_t v80 = *(void *)(v0 + 1264);
    uint64_t v81 = *(void *)(v0 + 1032);
    ((void (*)(void))v16)();
    int v82 = *(unsigned __int8 *)(v0 + 424);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v193 = *(void *)(v81 + v80);
    if (v82 != 1)
    {
      uint64_t v123 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(v0 + 1032) + *(void *)(v0 + 1256)) + 432);
      swift_retain();
      uint64_t v124 = swift_retain();
      LOBYTE(v123) = v123(v124);
      uint64_t v125 = swift_release();
      if (v123) {
        uint64_t v191 = (*(uint64_t (**)(uint64_t))(**(void **)(v0 + 1184) + 176))(v125);
      }
      else {
        uint64_t v191 = 0;
      }
      uint64_t v142 = *(void *)(v0 + 1296);
      uint64_t v143 = *(void *)(v0 + 1280);
      uint64_t v144 = *(void **)(v0 + 1032);
      uint64_t v145 = (*(uint64_t (**)(void))(**(void **)(v0 + 1152) + 176))();
      v195();
      int v146 = *(_DWORD *)(v0 + 464);
      char v147 = *(unsigned char *)(v0 + 468);
      char v148 = *(unsigned char *)(v0 + 469);
      char v149 = *(unsigned char *)(v0 + 488);
      uint64_t v150 = *(void *)(v0 + 496);
      char v151 = *(unsigned char *)(v0 + 504);
      char v152 = *(unsigned char *)(v0 + 505);
      int v153 = *(_DWORD *)(v0 + 508);
      char v154 = *(unsigned char *)(v0 + 512);
      uint64_t v155 = *(void *)(v0 + 520);
      uint64_t v156 = *(void *)(v0 + 528);
      __int16 v157 = *(_WORD *)(v0 + 536);
      char v158 = *(unsigned char *)(v0 + 538);
      char v159 = *(unsigned char *)(v0 + 539);
      char v160 = *(unsigned char *)(v0 + 540);
      char v161 = *(unsigned char *)(v0 + 541);
      char v162 = *(unsigned char *)(v0 + 542);
      *(void *)(v0 + 544) = *(void *)(v0 + 456);
      *(_DWORD *)(v0 + 552) = v146;
      *(unsigned char *)(v0 + 556) = v147;
      *(unsigned char *)(v0 + 557) = v148;
      *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 472);
      *(unsigned char *)(v0 + 576) = v149;
      *(void *)(v0 + 584) = v150;
      *(unsigned char *)(v0 + 592) = v151;
      *(unsigned char *)(v0 + 593) = v152;
      *(_DWORD *)(v0 + 596) = v153;
      *(unsigned char *)(v0 + 600) = v154;
      *(void *)(v0 + 608) = v155;
      *(void *)(v0 + 616) = v156;
      *(_WORD *)(v0 + 624) = v157;
      *(unsigned char *)(v0 + 626) = v158;
      *(unsigned char *)(v0 + 627) = v159;
      *(unsigned char *)(v0 + 628) = v160;
      *(unsigned char *)(v0 + 629) = v161;
      *(unsigned char *)(v0 + 630) = v162;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((*MEMORY[0x263F8EED0] & *v144)
                                                                                   + 0x428))(v143, v194, v193, v191, v145, v0 + 544);
      if (v142)
      {
        os_log_t v163 = *(void **)(v0 + 1160);
        int v164 = *(void **)(v0 + 1080);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();

        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_87;
      }
      uint64_t v190 = *(void *)(v0 + 984);
      uint64_t v177 = *(void *)(v0 + 992);
      float v175 = *(float *)(v0 + 1000);
      int v178 = *(unsigned __int8 *)(v0 + 1004);
      uint64_t v179 = *(void *)(v0 + 1008);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v180 = swift_bridgeObjectRelease();
      if (v178)
      {
        ((void (*)(uint64_t))v195)(v180);
        int v181 = *(unsigned __int8 *)(v0 + 804);
        swift_bridgeObjectRelease();
        uint64_t v182 = swift_bridgeObjectRelease();
        BOOL v171 = v181 == 1;
        int v172 = (void *)MEMORY[0x263F8EED0];
        if (v171) {
          uint64_t v174 = (*(uint64_t (**)(uint64_t))(**(void **)(v0 + 1208) + 360))(v182);
        }
        else {
          uint64_t v174 = 0;
        }
        uint64_t v176 = 1;
        uint64_t v183 = v194;
      }
      else
      {
        uint64_t v176 = 0;
        uint64_t v174 = 0;
        uint64_t v183 = v194;
        int v172 = (void *)MEMORY[0x263F8EED0];
      }
      uint64_t v166 = v177;
      uint64_t v184 = v179;
      goto LABEL_86;
    }
    uint64_t v189 = *(void *)(v0 + 1296);
    uint64_t v83 = *(void *)(v0 + 1152);
    char v84 = *(void **)(v0 + 1032);
    uint64_t v188 = *(void *)(v0 + 1280);
    char v85 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + 1184) + 176);
    uint64_t v86 = *(void *)(v81 + v80);
    uint64_t v87 = swift_retain();
    uint64_t v88 = v85(v87);
    uint64_t v89 = (*(uint64_t (**)(void))(*(void *)v83 + 176))();
    ((void (*)(void))v16)();
    int v90 = *(_DWORD *)(v0 + 816);
    char v91 = *(unsigned char *)(v0 + 820);
    char v92 = *(unsigned char *)(v0 + 821);
    char v93 = *(unsigned char *)(v0 + 840);
    uint64_t v94 = *(void *)(v0 + 848);
    char v95 = *(unsigned char *)(v0 + 856);
    char v96 = *(unsigned char *)(v0 + 857);
    int v97 = *(_DWORD *)(v0 + 860);
    char v98 = *(unsigned char *)(v0 + 864);
    uint64_t v99 = *(void *)(v0 + 872);
    uint64_t v100 = *(void *)(v0 + 880);
    __int16 v101 = *(_WORD *)(v0 + 888);
    char v102 = *(unsigned char *)(v0 + 890);
    char v103 = *(unsigned char *)(v0 + 891);
    char v104 = *(unsigned char *)(v0 + 892);
    char v105 = *(unsigned char *)(v0 + 893);
    char v106 = *(unsigned char *)(v0 + 894);
    *(void *)(v0 + 896) = *(void *)(v0 + 808);
    *(_DWORD *)(v0 + 904) = v90;
    *(unsigned char *)(v0 + 908) = v91;
    *(unsigned char *)(v0 + 909) = v92;
    *(_OWORD *)(v0 + 912) = *(_OWORD *)(v0 + 824);
    *(unsigned char *)(v0 + 928) = v93;
    *(void *)(v0 + 936) = v94;
    *(unsigned char *)(v0 + 944) = v95;
    *(unsigned char *)(v0 + 945) = v96;
    *(_DWORD *)(v0 + 948) = v97;
    *(unsigned char *)(v0 + 952) = v98;
    *(void *)(v0 + 960) = v99;
    *(void *)(v0 + 968) = v100;
    *(_WORD *)(v0 + 976) = v101;
    *(unsigned char *)(v0 + 978) = v102;
    *(unsigned char *)(v0 + 979) = v103;
    *(unsigned char *)(v0 + 980) = v104;
    *(unsigned char *)(v0 + 981) = v105;
    *(unsigned char *)(v0 + 982) = v106;
    uint64_t v107 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((*MEMORY[0x263F8EED0] & *v84)
                                                                                           + 0x420))(v188, v194, v86, v88, v89, v0 + 896);
    if (v189)
    {
      uint64_t v111 = *(void **)(v0 + 1160);
      char v112 = *(void **)(v0 + 1080);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();

      swift_release();
LABEL_87:
      swift_bridgeObjectRelease();
      goto LABEL_88;
    }
    uint64_t v165 = v107;
    uint64_t v166 = v108;
    unint64_t v167 = v109;
    uint64_t v192 = v110;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    if (!v166)
    {
      uint64_t v76 = 0;
      goto LABEL_31;
    }
    uint64_t v190 = v165;
    if ((v167 & 0x100000000) != 0)
    {
      uint64_t v168 = swift_bridgeObjectRetain();
      ((void (*)(uint64_t))v195)(v168);
      swift_bridgeObjectRelease();
      int v169 = *(unsigned __int8 *)(v0 + 716);
      swift_bridgeObjectRelease();
      uint64_t v170 = swift_bridgeObjectRelease();
      BOOL v171 = v169 == 1;
      int v172 = (void *)MEMORY[0x263F8EED0];
      if (v171)
      {
        uint64_t v173 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & **(void **)(v0 + 1032)) + 0x390))(v170);
        if (!v173)
        {
          uint64_t v185 = *(void **)(v0 + 1160);
          long long v186 = *(void **)(v0 + 1080);
          swift_bridgeObjectRelease();
          sub_2613DC2B8();
          swift_allocError();
          void *v187 = 0xD000000000000046;
          v187[1] = 0x80000002614E1170;
          swift_willThrow();
          swift_release();
          swift_release();
          swift_release();

          goto LABEL_88;
        }
        uint64_t v174 = v173;
        float v175 = *(float *)&v167;
        uint64_t v176 = 1;
        goto LABEL_83;
      }
    }
    else
    {
      int v172 = (void *)MEMORY[0x263F8EED0];
    }
    uint64_t v174 = 0;
    uint64_t v176 = HIDWORD(v167) & 1;
    float v175 = *(float *)&v167;
LABEL_83:
    uint64_t v183 = v194;
    uint64_t v184 = v192;
LABEL_86:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, float))((*v172 & **(void **)(v0 + 1032))
                                                                                                + 0x430))(v190, v166, v176, v184, *(void *)(v0 + 1280), v174, v183, v175);
    swift_bridgeObjectRelease();
    uint64_t v76 = 0;
    goto LABEL_92;
  }
  uint64_t v76 = *(void *)(v0 + 1296);
LABEL_31:
  *(void *)(v0 + 1320) = v76;
  char v196 = (void (*)(void))(*(void *)(v0 + 1216) + **(int **)(v0 + 1216));
  BOOL v77 = (void *)swift_task_alloc();
  *(void *)(v0 + 1328) = v77;
  void *v77 = v0;
  v77[1] = sub_2613E8240;
  v196();
}

uint64_t sub_2613E8240(char a1)
{
  *(unsigned char *)(*(void *)v1 + 191) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2613E8340, 0, 0);
}

void sub_2613E8340()
{
  uint64_t v40 = v0;
  if (*(unsigned char *)(v0 + 191))
  {
    uint64_t v1 = *(void *)(v0 + 1320);
    uint64_t v36 = *(void *)(v0 + 1280);
    if (*(void *)(v0 + 1312)) {
      uint64_t v2 = *(void *)(v0 + 1304);
    }
    else {
      uint64_t v2 = 0;
    }
    (*(void (**)(void, void, void))(v0 + 1096))(*(void *)(v0 + 1056), *(void *)(v0 + 1088), *(void *)(v0 + 1040));
    uint64_t v3 = sub_2614D50A8();
    os_log_type_t v4 = sub_2614D5968();
    if (os_log_type_enabled(v3, v4))
    {
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      _os_log_impl(&dword_2613B8000, v3, v4, "Processing loop done, reset tasr model", v5, 2u);
      MEMORY[0x263E38060](v5, -1, -1);
    }
    uint64_t v6 = *(void *)(v0 + 1136);
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v0 + 1112);
    uint64_t v8 = *(void *)(v0 + 1056);
    uint64_t v9 = *(void *)(v0 + 1040);
    uint64_t v10 = *(void *)(v0 + 1032);

    v7(v8, v9);
    uint64_t v11 = *(uint64_t (**)(uint64_t))(**(void **)(v10 + v6) + 936);
    uint64_t v12 = swift_retain();
    uint64_t v13 = v11(v12);
    if (v1)
    {
      int v17 = *(void **)(v0 + 1160);
      char v18 = *(void **)(v0 + 1080);
      swift_release();
      swift_release();

      swift_release();
      swift_release();

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      char v19 = *(void (**)(void))(v0 + 8);
    }
    else
    {
      uint64_t v23 = v13;
      unint64_t v24 = v14;
      float v25 = v16;
      char v26 = v15;
      uint64_t v27 = swift_release();
      uint64_t v28 = HIBYTE(v24) & 0xF;
      if ((v24 & 0x2000000000000000) == 0) {
        uint64_t v28 = v23 & 0xFFFFFFFFFFFFLL;
      }
      char v29 = (void *)MEMORY[0x263F8EED0];
      if (v28)
      {
        (*(void (**)(void *__return_ptr, uint64_t))(**(void **)(v0 + 1208) + 280))(v38, v27);
        int v30 = v39;
        swift_bridgeObjectRelease();
        uint64_t v31 = swift_bridgeObjectRelease();
        if (v30 == 1) {
          uint64_t v32 = (*(uint64_t (**)(uint64_t))((*v29 & **(void **)(v0 + 1032)) + 0x390))(v31);
        }
        else {
          uint64_t v32 = (*(uint64_t (**)(uint64_t))(**(void **)(v0 + 1208) + 360))(v31);
        }
        (*(void (**)(uint64_t, unint64_t, void, void, uint64_t, uint64_t, uint64_t, float))((*v29 & **(void **)(v0 + 1032)) + 0x430))(v23, v24, v26 & 1, 0, v36, v32, v2, v25);
        swift_bridgeObjectRelease();
      }
      char v33 = *(void **)(v0 + 1160);
      char v34 = *(void **)(v0 + 1080);
      uint64_t v35 = *(void **)(v0 + 1032);
      swift_bridgeObjectRelease();
      (*(void (**)(void))((*v29 & *v35) + 0x200))(0);
      swift_release();
      swift_release();

      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      char v19 = *(void (**)(void))(v0 + 8);
    }
    v19();
  }
  else
  {
    uint64_t v20 = *(void *)(v0 + 1280);
    if (*(void *)(v0 + 1312)) {
      uint64_t v21 = *(void *)(v0 + 1304);
    }
    else {
      uint64_t v21 = 0;
    }
    *(void *)(v0 + 1272) = v21;
    *(void *)(v0 + 1280) = v20 + 1;
    if (v20 == -1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v37 = (void (*)(void, uint64_t))(*(void *)(v0 + 1240) + **(int **)(v0 + 1240));
      char v22 = (void *)swift_task_alloc();
      *(void *)(v0 + 1288) = v22;
      *char v22 = v0;
      v22[1] = sub_2613E6CC4;
      v37(0, 1);
    }
  }
}

uint64_t sub_2613E887C()
{
  uint64_t v1 = (void *)v0[145];
  uint64_t v2 = (void *)v0[135];
  swift_release();
  swift_release();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void *sub_2613E8930(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  void (*v64)(void **__return_ptr, uint64_t);
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  void (*v80)(void **__return_ptr, uint64_t);
  uint64_t v81;
  float v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  const char *v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  uint64_t v93;
  int v94;
  int v95;
  int v96;
  void *v97;
  int v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  uint64_t v111;
  int v112;
  int v113;
  int v114;
  void *v115;
  long long v116;
  long long v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  long long v123;
  char v124;
  uint64_t v125;
  char v126;
  char v127;
  float v128;
  char v129;
  long long v130;
  char v131;
  char v132;
  char v133;
  char v134;
  char v135;
  char v136;
  char v137;
  void *v138;

  uint64_t v8 = v7;
  uint64_t v120 = a1;
  uint64_t v14 = sub_2614D50C8();
  char v15 = a3;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  if (!a3)
  {
    sub_2613DC2B8();
    swift_allocError();
    void *v30 = 0xD000000000000029;
    v30[1] = 0x80000002614E0E60;
    swift_willThrow();
    return v6;
  }
  unint64_t v118 = v6;
  char v102 = v22;
  __int16 v101 = v21;
  uint64_t v100 = a2;
  uint64_t v99 = (char *)&v93 - v19;
  uint64_t v119 = a5;
  char v103 = v20;
  char v104 = v18;
  int v115 = (void *)*a6;
  int v23 = *((_DWORD *)a6 + 2);
  uint64_t v114 = *((unsigned __int8 *)a6 + 12);
  uint64_t v113 = *((unsigned __int8 *)a6 + 13);
  uint64_t v117 = *((_OWORD *)a6 + 1);
  char v112 = *((unsigned __int8 *)a6 + 32);
  uint64_t v111 = a6[5];
  uint64_t v110 = *((unsigned __int8 *)a6 + 48);
  unint64_t v109 = *((unsigned __int8 *)a6 + 49);
  float v24 = *((float *)a6 + 13);
  uint64_t v108 = *((unsigned __int8 *)a6 + 56);
  uint64_t v116 = *((_OWORD *)a6 + 4);
  uint64_t v107 = *((unsigned __int8 *)a6 + 80);
  char v106 = *((unsigned __int8 *)a6 + 81);
  char v105 = *((unsigned __int8 *)a6 + 82);
  int v25 = *((unsigned __int8 *)a6 + 83);
  int v26 = *((unsigned __int8 *)a6 + 84);
  int v27 = *((unsigned __int8 *)a6 + 85);
  int v28 = *((unsigned __int8 *)a6 + 86);
  char v29 = *(void (**)(uint64_t))(*v15 + 128);
  swift_retain();
  uint64_t v6 = v15;
  v29(a4);
  uint64_t v138 = v8;
  if (v8)
  {
    swift_release();
    return v6;
  }
  uint64_t v94 = v28;
  char v95 = v27;
  char v96 = v25;
  int v97 = v15;
  char v98 = v26;
  uint64_t v32 = (void *)MEMORY[0x263F8EED0];
  char v33 = v118;
  int v34 = (*(uint64_t (**)(float))((*MEMORY[0x263F8EED0] & *v118) + 0x208))(v24);
  uint64_t v35 = swift_bridgeObjectRelease();
  if ((v34 & 1) == 0)
  {
    uint64_t v36 = v119;
    int v37 = v98;
    if ((v34 & 0x100) == 0)
    {
      if ((v34 & 0x10000) != 0)
      {
        uint64_t v56 = *(void **)((char *)v33 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_timingInfo);
        if (v56)
        {
          uint64_t v57 = *(void (**)(uint64_t))((*v32 & *v56) + 0x220);
          uint64_t v58 = v119;
          os_log_type_t v59 = v56;
          v57(v120);
          uint64_t v36 = v58;
          int v37 = v98;
        }
      }
      else
      {
        uint64_t v35 = (*(uint64_t (**)(uint64_t))((*v32 & *v33) + 0x178))(v35);
        if ((v35 & 1) == 0)
        {
          *(void *)((char *)v33 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_lastModelInputBeforeStartOfSpeech) = v36;
          swift_bridgeObjectRetain();
          uint64_t v35 = swift_bridgeObjectRelease();
        }
      }
    }
    goto LABEL_21;
  }
  uint64_t v38 = OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_timingInfo;
  unsigned __int8 v39 = *(void **)((char *)v33 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_timingInfo);
  if (v39)
  {
    uint64_t v40 = *(void (**)(void))((*v32 & *v39) + 0x268);
    uint64_t v41 = v39;
    v40();
    uint64_t v32 = (void *)MEMORY[0x263F8EED0];
  }
  type metadata accessor for VATimingInfo();
  uint64_t v42 = (*(uint64_t (**)(void))((*v32 & *v33) + 0x2A0))();
  id v43 = sub_2614B1FA4(v42);
  unint64_t v44 = *(void **)((char *)v33 + v38);
  *(void *)((char *)v33 + v38) = v43;

  unint64_t v45 = *(void **)((char *)v33 + v38);
  unint64_t v46 = v115;
  char v47 = v114;
  char v48 = v113;
  char v49 = v112;
  if (v45)
  {
    uint64_t v50 = *(void (**)(uint64_t))((*v32 & *v45) + 0x200);
    os_log_type_t v51 = v45;
    v50(v120);
  }
  uint64_t v121 = v46;
  LODWORD(v122) = v23;
  BYTE4(v122) = v47;
  BYTE5(v122) = v48;
  uint64_t v123 = v117;
  uint64_t v124 = v49;
  uint64_t v125 = v111;
  uint64_t v126 = v110;
  uint64_t v127 = v109;
  unint64_t v128 = v24;
  unint64_t v129 = v108;
  uint64_t v130 = v116;
  uint64_t v131 = v107;
  uint64_t v132 = v106;
  unint64_t v133 = v105;
  uint64_t v134 = v96;
  int v37 = v98;
  uint64_t v135 = v98;
  uint64_t v136 = v95;
  uint64_t v137 = v94;
  uint64_t v35 = sub_2614B8FE8();
  uint64_t v36 = v119;
  if ((v35 & 1) == 0) {
    goto LABEL_21;
  }
  uint64_t v6 = v33;
  uint64_t v52 = (*(uint64_t (**)(void))((*v32 & *v33) + 0x378))();
  if (!v52)
  {
    sub_2613DC2B8();
    swift_allocError();
    uint64_t v88 = "Expected audioDebugBytesBeforeSpeech to be non-nil";
LABEL_40:
    uint64_t *v87 = 0xD000000000000032;
    v87[1] = (unint64_t)(v88 - 32) | 0x8000000000000000;
    swift_willThrow();
    swift_release();
    return v6;
  }
  uint64_t v53 = v52;
  char v54 = *(uint64_t (**)(uint64_t))((*v32 & *v33) + 0x390);
  uint64_t v55 = swift_bridgeObjectRetain();
  uint64_t v6 = v33;
  if (!v54(v55))
  {
    swift_bridgeObjectRelease_n();
    sub_2613DC2B8();
    swift_allocError();
    uint64_t v88 = "Expected audioDebugBytesDuringSpeech to be non-nil";
    goto LABEL_40;
  }
  swift_bridgeObjectRelease();
  uint64_t v121 = (void *)MEMORY[0x263F8EE78];
  sub_2613D64FC(v53);
  swift_bridgeObjectRelease();
  uint64_t v35 = swift_bridgeObjectRelease();
  int v37 = v98;
LABEL_21:
  if ((*(uint64_t (**)(uint64_t))((*v32 & *v33) + 0x438))(v35))
  {
    uint64_t v60 = OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_lastModelInputBeforeStartOfSpeech;
    uint64_t v61 = *(void *)((char *)v33 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_lastModelInputBeforeStartOfSpeech);
    unint64_t v62 = 0x26A914000uLL;
    if (v61)
    {
      uint64_t v63 = v32;
      uint64_t v6 = *(void **)((char *)v33 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_tasrModel);
      uint64_t v64 = *(void (**)(void **__return_ptr, uint64_t))(*v6 + 928);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v65 = v138;
      v64(&v121, v61);
      if (v65)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        return v6;
      }
      uint64_t v81 = v122;
      uint64_t v138 = v121;
      int v82 = *(float *)&v123;
      uint64_t v83 = v37;
      char v84 = BYTE4(v123);
      *(void *)&uint64_t v117 = *((void *)&v123 + 1);
      swift_release();
      char v85 = swift_bridgeObjectRelease();
      if ((v84 & v83) == 1) {
        uint64_t v86 = (*(uint64_t (**)(uint64_t))((*v63 & *v33) + 0x390))(v85);
      }
      else {
        uint64_t v86 = 0;
      }
      (*(void (**)(void *, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, float))((*v63 & *v33) + 0x430))(v138, v81, v84, v117, v120, v86, v100, v82);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v89 = sub_26146718C();
      (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))(v99, v89, v104);
      int v90 = sub_2614D50A8();
      char v91 = sub_2614D5968();
      if (os_log_type_enabled(v90, v91))
      {
        char v92 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v92 = 0;
        _os_log_impl(&dword_2613B8000, v90, v91, "reset model input from before start of speech after using it", v92, 2u);
        MEMORY[0x263E38060](v92, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v103 + 8))(v99, v104);
      *(void *)((char *)v33 + v60) = 0;
      swift_bridgeObjectRelease();
      uint64_t v36 = v119;
      unint64_t v62 = 0x26A914000;
    }
    uint64_t v80 = *(void (**)(void **__return_ptr, uint64_t))(**(void **)((char *)v33 + *(void *)(v62 + 3024))
                                                                + 928);
    swift_retain();
    v80(&v121, v36);
    uint64_t v6 = v121;
    swift_release();
    swift_release();
    return v6;
  }
  if ((*(uint64_t (**)(void))((*v32 & *v33) + 0x178))())
  {
    uint64_t v66 = sub_26146718C();
    uint64_t v67 = v103;
    uint64_t v68 = v102;
    char v69 = v104;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 16))(v102, v66, v104);
    char v70 = sub_2614D50A8();
    float v71 = sub_2614D5968();
    if (os_log_type_enabled(v70, v71))
    {
      char v72 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v72 = 0;
      _os_log_impl(&dword_2613B8000, v70, v71, "got final result before end of speech, waiting for end of speech", v72, 2u);
      MEMORY[0x263E38060](v72, -1, -1);
    }

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v68, v69);
  }
  else if (*((unsigned char *)v33 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_mustWaitForFinalToStopInference) == 1)
  {
    uint64_t v73 = sub_26146718C();
    uint64_t v74 = v103;
    unint64_t v75 = v101;
    uint64_t v76 = v104;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 16))(v101, v73, v104);
    BOOL v77 = sub_2614D50A8();
    int v78 = sub_2614D5968();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v79 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v79 = 0;
      _os_log_impl(&dword_2613B8000, v77, v78, "speech ended, but waiting for final result", v79, 2u);
      MEMORY[0x263E38060](v79, -1, -1);
    }

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v76);
  }
  else
  {
    swift_release();
  }
  return 0;
}

uint64_t sub_2613E95D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (*a7)(void)@<X8>)
{
  void (*v40)(uint64_t *__return_ptr, uint64_t);
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  float v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint8_t *v57;
  void (*v58)(uint64_t *__return_ptr, uint64_t);
  uint64_t v59;
  uint64_t v60;
  float v61;
  unsigned __int8 v62;
  uint64_t v63;
  char *v64;
  uint64_t (*v65)(void);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  float v74;
  unsigned __int8 v75;
  uint64_t v76;

  uint64_t v9 = v7;
  char v69 = a2;
  float v71 = a1;
  uint64_t v15 = sub_2614D50C8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v67 = v15;
  uint64_t v68 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v70 = *(unsigned __int8 *)(a6 + 84);
  if (a3 && a4)
  {
    float v19 = *(float *)(a6 + 52);
    uint64_t v20 = *(void (**)(uint64_t))(*(void *)a3 + 128);
    swift_retain();
    v20(a4);
    if (v8) {
      return swift_release();
    }
    uint64_t v21 = (void *)MEMORY[0x263F8EED0];
    int v22 = (*(uint64_t (**)(float))((*MEMORY[0x263F8EED0] & *v9) + 0x208))(v19);
    swift_bridgeObjectRelease();
    uint64_t v66 = a5;
    if (v22)
    {
      uint64_t v26 = OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_timingInfo;
      int v27 = *(void **)((char *)v9 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_timingInfo);
      if (v27)
      {
        int v28 = *(void (**)(void))((*v21 & *v27) + 0x268);
        char v29 = v27;
        v28();
        uint64_t v21 = (void *)MEMORY[0x263F8EED0];
      }
      type metadata accessor for VATimingInfo();
      uint64_t v30 = (*(uint64_t (**)(void))((*v21 & *v9) + 0x2A0))();
      id v31 = sub_2614B1FA4(v30);
      uint64_t v32 = *(void **)((char *)v9 + v26);
      *(void *)((char *)v9 + v26) = v31;

      char v33 = *(void **)((char *)v9 + v26);
      if (!v33) {
        goto LABEL_14;
      }
      int v34 = *(void (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v33) + 0x200);
      uint64_t v35 = v33;
      v34(v71);

      uint64_t v36 = *(void **)((char *)v9 + v26);
      if (!v36) {
        goto LABEL_14;
      }
      uint64_t v65 = *(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v9) + 0x3C0);
      int v25 = v36;
      uint64_t v37 = v65();
      (*(void (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v25) + 0x1E0))(v37);
    }
    else
    {
      if ((v22 & 0x10100) != 0x10000) {
        goto LABEL_14;
      }
      int v23 = *(void **)((char *)v9 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_timingInfo);
      if (!v23) {
        goto LABEL_14;
      }
      float v24 = *(void (**)(uint64_t))((*v21 & *v23) + 0x220);
      int v25 = v23;
      v24(v71);
    }

LABEL_14:
    swift_release();
    a5 = v66;
  }
  uint64_t v38 = OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_lastModelInputBeforeUnblock;
  uint64_t v39 = *(void *)((char *)v9 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_lastModelInputBeforeUnblock);
  if (v39)
  {
    uint64_t v65 = a7;
    uint64_t v66 = a5;
    uint64_t v40 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)((char *)v9
                                                                              + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_tasrModel)
                                                                + 928);
    swift_bridgeObjectRetain();
    swift_retain();
    v40(&v72, v39);
    if (v8)
    {
      swift_bridgeObjectRelease();
      return swift_release();
    }
    uint64_t v64 = v18;
    uint64_t v42 = v72;
    id v43 = v73;
    unint64_t v44 = v74;
    unint64_t v45 = v75;
    unint64_t v46 = v76;
    swift_release();
    char v47 = swift_bridgeObjectRelease();
    if (v45 & v70) {
      char v48 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v9) + 0x390))(v47);
    }
    else {
      char v48 = 0;
    }
    char v49 = v46;
    uint64_t v50 = v64;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, float))((*MEMORY[0x263F8EED0] & *v9)
                                                                                                 + 0x430))(v42, v43, v45, v49, v71, v48, v69, v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a7 = v65;
    os_log_type_t v51 = sub_26146718C();
    uint64_t v53 = v67;
    uint64_t v52 = v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v50, v51, v67);
    char v54 = sub_2614D50A8();
    uint64_t v55 = sub_2614D5968();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v56 = 0;
      _os_log_impl(&dword_2613B8000, v54, v55, "reset model input from before unblock after using it", v56, 2u);
      uint64_t v57 = v56;
      uint64_t v52 = v68;
      MEMORY[0x263E38060](v57, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v52 + 8))(v50, v53);
    *(void *)((char *)v9 + v38) = 0;
    swift_bridgeObjectRelease();
    a5 = v66;
  }
  uint64_t v58 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)((char *)v9
                                                                            + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_tasrModel)
                                                              + 928);
  swift_retain();
  v58(&v72, a5);
  os_log_type_t v59 = v72;
  uint64_t v60 = v73;
  uint64_t v61 = v74;
  unint64_t v62 = v75;
  uint64_t v63 = v76;
  uint64_t result = swift_release();
  if (!v8)
  {
    *(void *)a7 = v59;
    *((void *)a7 + 1) = v60;
    *((float *)a7 + 4) = v61;
    *((unsigned char *)a7 + 20) = v62;
    *((void *)a7 + 3) = v63;
  }
  return result;
}

void sub_2613E9C7C(uint64_t a1, unint64_t a2, char a3, float a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void (*v96)(uint64_t *__return_ptr, uint64_t);
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  void *v102;
  void (*v103)(uint64_t, unint64_t);
  void *v104;
  unsigned char v105[12];
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  int v111;
  int v112;
  uint64_t v113;
  int v114;
  int v115;
  int v116;
  long long v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  uint8_t *v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  long long v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unsigned __int16 v136;
  unsigned __int8 v137;
  uint64_t v138;
  uint64_t v139;
  unsigned __int8 v140;
  unsigned __int8 v141;
  unsigned __int8 v142;
  unsigned __int8 v143;
  unsigned __int8 v144;
  unsigned __int8 v145;
  unsigned __int8 v146;
  uint64_t v147;

  uint64_t v8 = v7;
  uint64_t v126 = (uint8_t *)a6;
  uint64_t v14 = sub_2614D50C8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = &v105[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = &v105[-v19];
  uint64_t v21 = HIBYTE(a2) & 0xF;
  unint64_t v128 = a1;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v21 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v21)
  {
    uint64_t v127 = a7;
    uint64_t v22 = sub_26146718C();
    int v23 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 16);
    if (a3)
    {
      v23(v20, v22, v14);
      swift_bridgeObjectRetain_n();
      float v24 = sub_2614D50A8();
      os_log_type_t v25 = sub_2614D5968();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = swift_slowAlloc();
        uint64_t v125 = v7;
        int v27 = (uint8_t *)v26;
        uint64_t v28 = swift_slowAlloc();
        uint64_t v130 = v28;
        *(_DWORD *)int v27 = 136315138;
        uint64_t v126 = v27 + 4;
        swift_bridgeObjectRetain();
        char v147 = sub_2613D875C(v128, a2, &v130);
        sub_2614D5B58();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_2613B8000, v24, v25, "Got tasr final: \"%s\"", v27, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x263E38060](v28, -1, -1);
        char v29 = v27;
        uint64_t v8 = v125;
        MEMORY[0x263E38060](v29, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v20, v14);
      uint64_t v37 = v127;
      uint64_t v38 = v128;
      uint64_t v39 = *(void **)((char *)v129 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_timingInfo);
      if (v39)
      {
        uint64_t v40 = *(void (**)(uint64_t, unint64_t, uint64_t))((*MEMORY[0x263F8EED0] & *v39) + 0x1F8);
        uint64_t v41 = v39;
        v40(v38, a2, 1);
      }
      uint64_t v42 = sub_2613EC6A4(v38, a2, v37, a4);
      if (v8) {
        return;
      }
      uint64_t v32 = (uint64_t)v42;
    }
    else
    {
      v23(v18, v22, v14);
      swift_bridgeObjectRetain_n();
      uint64_t v30 = sub_2614D50A8();
      os_log_type_t v31 = sub_2614D5968();
      uint64_t v32 = v31;
      if (os_log_type_enabled(v30, v31))
      {
        char v33 = (uint8_t *)swift_slowAlloc();
        uint64_t v34 = swift_slowAlloc();
        uint64_t v125 = v7;
        uint64_t v35 = v34;
        uint64_t v130 = v34;
        *(_DWORD *)char v33 = 136315138;
        uint64_t v124 = (uint64_t)(v33 + 4);
        swift_bridgeObjectRetain();
        char v147 = sub_2613D875C(v128, a2, &v130);
        sub_2614D5B58();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_2613B8000, v30, (os_log_type_t)v32, "Got tasr partial: \"%s\"", v33, 0xCu);
        swift_arrayDestroy();
        uint64_t v36 = v35;
        uint64_t v8 = v125;
        MEMORY[0x263E38060](v36, -1, -1);
        MEMORY[0x263E38060](v33, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v43 = (*(uint64_t (**)(unsigned char *, uint64_t))(v15 + 8))(v18, v14);
      uint64_t v44 = v128;
      unint64_t v45 = *(void **)((char *)v129 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_timingInfo);
      unint64_t v46 = (void *)MEMORY[0x263F8EED0];
      if (v45)
      {
        char v47 = *(void (**)(uint64_t, unint64_t, void))((*MEMORY[0x263F8EED0] & *v45) + 0x1F8);
        uint64_t v32 = v8;
        char v48 = v45;
        v47(v44, a2, 0);
      }
      uint64_t v49 = (*(uint64_t (**)(uint64_t))((*v46 & *v129) + 0x118))(v43);
      if (v49)
      {
        (*(void (**)(uint64_t *__return_ptr))(*(void *)v49 + 280))(&v130);
        swift_release();
        uint64_t v50 = v139;
        uint64_t v51 = OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_usedPartialAsFinal;
        uint64_t v52 = v130;
        if (*((unsigned char *)v129 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_usedPartialAsFinal) == 1) {
          goto LABEL_29;
        }
        int v53 = v131;
        int v54 = BYTE4(v131);
        int v55 = BYTE5(v131);
        long long v56 = v132;
        int v57 = v133;
        uint64_t v58 = v134;
        int v59 = v135;
        int v60 = BYTE1(v135);
        int v61 = HIDWORD(v135);
        int v62 = v136;
        uint64_t v63 = v138;
        int v64 = v140;
        int v65 = v141;
        int v66 = v142;
        int v67 = v143;
        int v68 = v144;
        int v69 = v145;
        int v70 = v146;
        *((unsigned char *)v129 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_mustWaitForFinalToStopInference) = 1;
        if (!v69) {
          goto LABEL_29;
        }
        unint64_t v109 = v63;
        uint64_t v110 = v62;
        uint64_t v111 = v60;
        char v112 = v59;
        uint64_t v113 = v58;
        uint64_t v114 = v57;
        int v115 = v55;
        uint64_t v116 = v54;
        uint64_t v117 = v56;
        unint64_t v118 = v68;
        uint64_t v119 = v67;
        uint64_t v120 = v66;
        uint64_t v121 = v65;
        unint64_t v122 = v64;
        uint64_t v123 = v70;
        uint64_t v124 = OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_timingInfo;
        float v71 = *(void **)((char *)v129 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_timingInfo);
        if (v71)
        {
          uint64_t v72 = *v46 & *v71;
          uint64_t v73 = v8;
          uint64_t v74 = *(uint64_t (**)(void))(v72 + 328);
          unint64_t v75 = v71;
          uint64_t v76 = v74();
          uint64_t v8 = v73;
          uint64_t v77 = v76;
        }
        else
        {
          uint64_t v77 = 0;
        }
        uint64_t v80 = v127;
        sub_2613E58D8(v77, (uint64_t)v126, (uint64_t)&v130, a4);
        uint64_t v81 = v131;
        if (v131)
        {
          uint64_t v125 = v8;
          uint64_t v107 = v130;
          uint64_t v126 = (uint8_t *)v134;
          uint64_t v108 = v135;
          int v82 = v136 | (v137 << 16);
          uint64_t v84 = *((void *)&v132 + 1);
          uint64_t v83 = v133;
          char v106 = v132;
          uint64_t v130 = v52;
          LODWORD(v131) = v53;
          BYTE4(v131) = v116;
          BYTE5(v131) = v115;
          uint64_t v132 = v117;
          LOBYTE(v133) = v114;
          uint64_t v134 = v113;
          LOBYTE(v135) = v112;
          BYTE1(v135) = v111;
          HIDWORD(v135) = v61;
          LOBYTE(v136) = v110;
          uint64_t v138 = v109;
          uint64_t v139 = v50;
          uint64_t v140 = v122;
          uint64_t v141 = v121;
          uint64_t v142 = v120;
          uint64_t v143 = v119;
          uint64_t v144 = v118;
          uint64_t v145 = 1;
          int v146 = v123;
          char v85 = sub_2614B8FE8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v86 = 0;
          if (v85)
          {
            uint64_t v87 = v128;
            uint64_t v88 = (void *)MEMORY[0x263F8EED0];
            if (v80) {
              uint64_t v86 = (void *)sub_2613EC44C(v80);
            }
          }
          else
          {
            uint64_t v87 = v128;
            uint64_t v88 = (void *)MEMORY[0x263F8EED0];
          }
          type metadata accessor for VAKeywordResult();
          sub_2613C23AC(&qword_26A914C00);
          uint64_t v99 = swift_allocObject();
          *(_OWORD *)(v99 + 16) = xmmword_2614D81E0;
          *(void *)(v99 + 32) = v107;
          *(void *)(v99 + 40) = v81;
          *(_DWORD *)(v99 + 48) = v106;
          *(void *)(v99 + 56) = v84;
          *(void *)(v99 + 64) = v83;
          uint64_t v100 = v108;
          *(void *)(v99 + 72) = v126;
          *(void *)(v99 + 80) = v100;
          *(unsigned char *)(v99 + 88) = v82 & 1;
          *(unsigned char *)(v99 + 89) = BYTE1(v82) & 1;
          *(unsigned char *)(v99 + 90) = BYTE2(v82) & 1;
          uint64_t v32 = VAKeywordResult.__allocating_init(detections:)(v99);
          __int16 v101 = v129;
          *((unsigned char *)v129 + v51) = 1;
          char v102 = *(void **)((char *)v101 + v124);
          if (v102)
          {
            char v103 = *(void (**)(uint64_t, unint64_t))((*v88 & *v102) + 0x1F0);
            char v104 = v102;
            v103(v87, a2);
          }
          uint64_t v8 = v125;
        }
        else
        {
LABEL_29:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v86 = 0;
          uint64_t v32 = 0;
          uint64_t v87 = v128;
        }
        type metadata accessor for VAASRResult();
        uint64_t v89 = v129;
        char v90 = *((unsigned char *)v129 + v51);
        id v91 = v86;
        swift_bridgeObjectRetain();
        char v92 = sub_2613D04A8();
        id v93 = sub_261480D58(v87, a2, 0, v92 & 1, v90, v90, (uint64_t)v86);
        uint64_t v94 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v89) + 0x2A0))();
        if (v94)
        {
          objc_msgSend(v94, sel_speechResultsWithResult_, v93);

          swift_unknownObjectRelease();
          if (v8) {
            return;
          }
        }
        else
        {

          if (v8) {
            return;
          }
        }
      }
      else
      {
        sub_2613DC2B8();
        uint64_t v78 = swift_allocError();
        void *v79 = 0xD000000000000016;
        v79[1] = 0x80000002614E1270;
        swift_willThrow();
        if (v78) {
          return;
        }
      }
    }
    if (v32)
    {
      char v95 = *(void **)((char *)v129 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_timingInfo);
      if (v95)
      {
        char v96 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v32 + 144);
        int v97 = v95;
        char v98 = swift_retain();
        v96(&v130, v98);
        if (!v131)
        {
          swift_release();
          __break(1u);
          return;
        }
        (*(void (**)(uint64_t, uint64_t))((*MEMORY[0x263F8EED0] & *v97) + 0x1E8))(v130, v131);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_retain();
      }
      (*(void (**)(uint64_t, uint64_t))((*MEMORY[0x263F8EED0] & *v129) + 0x440))(v32, v127);
      swift_release_n();
    }
  }
}

uint64_t sub_2613EA80C()
{
  if ((*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x178))()) {
    return 1;
  }
  else {
    return *((unsigned __int8 *)v0 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_mustWaitForFinalToStopInference);
  }
}

uint64_t sub_2613EA878(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_2614D4CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)MEMORY[0x263F8EED0];
  uint64_t v12 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v2) + 0x118))(v8);
  if (!v12)
  {
    sub_2613DC2B8();
    swift_allocError();
    void *v29 = 0x75716552206C694ELL;
    v29[1] = 0xEF6F666E49747365;
    return swift_willThrow();
  }
  uint64_t v13 = v12;
  uint64_t v14 = (*(uint64_t (**)(void))((*v11 & *v2) + 0x148))();
  if (!v14)
  {
    sub_2613DC2B8();
    swift_allocError();
    void *v30 = 0xD000000000000011;
    v30[1] = 0x80000002614E0F10;
    swift_willThrow();
    return swift_release();
  }
  uint64_t v15 = v14;
  (*(void (**)(void *__return_ptr))(*(void *)a1 + 144))(v40);
  uint64_t v16 = v40[1];
  swift_bridgeObjectRelease();
  if (!v16)
  {
    sub_2613DC2B8();
    swift_allocError();
    void *v31 = 0xD000000000000014;
    v31[1] = 0x80000002614E0F30;
    swift_willThrow();
    goto LABEL_21;
  }
  uint64_t v41 = v3;
  uint64_t v38 = v7;
  uint64_t v39 = v6;
  type metadata accessor for VAInstrumentedKeywordResult();
  uint64_t v17 = (*(uint64_t (**)(void))(*(void *)a1 + 88))();
  uint64_t v18 = (void *)VAInstrumentedKeywordResult.__allocating_init(detections:)(v17);
  if (!a2)
  {
LABEL_18:
    uint64_t v32 = v41;
    uint64_t v33 = (*(uint64_t (**)(void *))(*(void *)v13 + 384))(v18);
    if (v32)
    {
      swift_release();
      swift_release();
      return swift_release();
    }
    (*(void (**)(uint64_t))(*(void *)v13 + 136))(v33);
    (*(void (**)(void *, char *))(*(void *)v15 + 80))(v18, v10);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v39);
    swift_release();
LABEL_21:
    swift_release();
    return swift_release();
  }
  unint64_t v19 = *(void *)(a2 + 16);
  uint64_t v20 = sub_2613EAD54(0, v19);
  uint64_t v21 = (void (**)(uint64_t))(*v18 + 320);
  uint64_t v22 = *v21;
  int v23 = v21;
  (*v21)(v20);
  if (!v19)
  {
    v22(MEMORY[0x263F8EE78]);
    goto LABEL_18;
  }
  uint64_t v34 = v23;
  uint64_t v35 = v22;
  uint64_t v36 = v18;
  uint64_t v37 = v15;
  v40[0] = MEMORY[0x263F8EE78];
  sub_2613EB9C4(0, v19, 0);
  uint64_t result = v40[0];
  os_log_type_t v25 = (float *)(a2 + 32);
  while (1)
  {
    float v26 = *v25;
    if ((~*(_DWORD *)v25 & 0x7F800000) == 0) {
      break;
    }
    if (v26 <= -32769.0) {
      goto LABEL_24;
    }
    if (v26 >= 32768.0) {
      goto LABEL_25;
    }
    v40[0] = result;
    unint64_t v28 = *(void *)(result + 16);
    unint64_t v27 = *(void *)(result + 24);
    if (v28 >= v27 >> 1)
    {
      sub_2613EB9C4(v27 > 1, v28 + 1, 1);
      uint64_t result = v40[0];
    }
    *(void *)(result + 16) = v28 + 1;
    *(_WORD *)(result + 2 * v28 + 32) = (int)v26;
    ++v25;
    if (!--v19)
    {
      uint64_t v18 = v36;
      uint64_t v15 = v37;
      v35(result);
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2613EAD54(unsigned int a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_2614D5D58();
    __break(1u);
    return result;
  }
  if (!a2) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_2614D56C8();
  *(void *)(result + 16) = a2;
  uint64_t v5 = (_WORD *)(result + 32);
  if (a2 < 0x10)
  {
    unint64_t v6 = 0;
LABEL_9:
    unint64_t v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFF0;
  v5 += a2 & 0xFFFFFFFFFFFFFFF0;
  int16x8_t v7 = vdupq_n_s16(a1);
  uint64_t v8 = (int16x8_t *)(result + 48);
  unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFF0;
  do
  {
    v8[-1] = v7;
    *uint64_t v8 = v7;
    v8 += 2;
    v9 -= 16;
  }
  while (v9);
  if (v6 != a2) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_2613EAE40()
{
  float v24 = *(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x3A8);
  uint64_t result = v24();
  uint64_t v2 = result;
  uint64_t v3 = 0;
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(result + 64);
  uint64_t v25 = 0;
  uint64_t v26 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  if ((v7 & v5) != 0) {
    goto LABEL_6;
  }
LABEL_7:
  while (2)
  {
    int64_t v11 = v4 + 1;
    if (!__OFADD__(v4, 1))
    {
      if (v11 < v27)
      {
        unint64_t v12 = *(void *)(v26 + 8 * v11);
        ++v4;
        if (v12) {
          goto LABEL_24;
        }
        int64_t v4 = v11 + 1;
        if (v11 + 1 >= v27) {
          goto LABEL_35;
        }
        unint64_t v12 = *(void *)(v26 + 8 * v4);
        if (v12) {
          goto LABEL_24;
        }
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v27) {
          goto LABEL_35;
        }
        unint64_t v12 = *(void *)(v26 + 8 * v4);
        if (v12) {
          goto LABEL_24;
        }
        int64_t v4 = v11 + 3;
        if (v11 + 3 >= v27) {
          goto LABEL_35;
        }
        unint64_t v12 = *(void *)(v26 + 8 * v4);
        if (v12) {
          goto LABEL_24;
        }
        int64_t v4 = v11 + 4;
        if (v11 + 4 >= v27) {
          goto LABEL_35;
        }
        unint64_t v12 = *(void *)(v26 + 8 * v4);
        if (v12)
        {
LABEL_24:
          unint64_t v8 = (v12 - 1) & v12;
          for (unint64_t i = __clz(__rbit64(v12)) + (v4 << 6); ; unint64_t i = v9 | (v4 << 6))
          {
            uint64_t v14 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
            uint64_t v16 = *v14;
            uint64_t v15 = v14[1];
            sub_2613DC3BC();
            swift_bridgeObjectRetain();
            uint64_t v17 = sub_2614D5BD8();
            if ((v17 & 1) == 0) {
              break;
            }
            if (v3)
            {
              swift_bridgeObjectRetain();
              uint64_t v18 = sub_2614D5488();
              uint64_t v19 = sub_2614D5488();
              swift_bridgeObjectRelease();
              if (v19 >= v18) {
                break;
              }
              uint64_t v17 = swift_bridgeObjectRelease();
            }
            uint64_t v20 = ((uint64_t (*)(uint64_t))v24)(v17);
            if (*(void *)(v20 + 16) && (unint64_t v21 = sub_2613D8F00(v16, v15), (v22 & 1) != 0))
            {
              int v23 = (uint64_t *)(*(void *)(v20 + 56) + 16 * v21);
              uint64_t v3 = v23[1];
              uint64_t v25 = *v23;
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v25 = 0;
              uint64_t v3 = 0;
            }
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (!v8) {
              goto LABEL_7;
            }
LABEL_6:
            unint64_t v9 = __clz(__rbit64(v8));
            v8 &= v8 - 1;
          }
          uint64_t result = swift_bridgeObjectRelease();
          if (!v8) {
            continue;
          }
          goto LABEL_6;
        }
        int64_t v13 = v11 + 5;
        if (v13 < v27)
        {
          unint64_t v12 = *(void *)(v26 + 8 * v13);
          if (v12)
          {
            int64_t v4 = v13;
            goto LABEL_24;
          }
          while (1)
          {
            int64_t v4 = v13 + 1;
            if (__OFADD__(v13, 1)) {
              goto LABEL_37;
            }
            if (v4 >= v27) {
              break;
            }
            unint64_t v12 = *(void *)(v26 + 8 * v4);
            ++v13;
            if (v12) {
              goto LABEL_24;
            }
          }
        }
      }
LABEL_35:
      swift_release();
      return v25;
    }
    break;
  }
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

void sub_2613EB148()
{
}

uint64_t sub_2613EB178()
{
  sub_2613E3498(v0 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_tasrDelegate);
  sub_2613DD718(v0 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_strategyProvider);
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id VATinyASRSpotter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VATinyASRSpotter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2613EB358(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_2613C23AC(&qword_26A914C08);
  char v42 = a2;
  uint64_t v6 = sub_2614D5DC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    float v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_2614D6088();
    sub_2614D5478();
    uint64_t result = sub_2614D60B8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    void *v19 = v34;
    v19[1] = v33;
    uint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    void *v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  float v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2613EB680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_2613D8F00(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_2613EB808();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      unint64_t v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      void *v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_2613EB358(v17, a5 & 1);
  unint64_t v23 = sub_2613D8F00(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_2614D5FF8();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  unint64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  uint64_t *v25 = a3;
  v25[1] = a4;
  int64_t v26 = (void *)(v20[7] + 16 * v14);
  void *v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v29;
  return swift_bridgeObjectRetain();
}

void *sub_2613EB808()
{
  uint64_t v1 = v0;
  sub_2613C23AC(&qword_26A914C08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2614D5DB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    void *v23 = v19;
    v23[1] = v18;
    char v24 = (void *)(*(void *)(v4 + 56) + v16);
    void *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2613EB9C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2613EB9E4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2613EB9E4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2613C23AC(&qword_26A914BF8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[2 * v8]) {
      memmove(v13, v14, 2 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[2 * v8] || v13 >= &v14[2 * v8])
  {
    memcpy(v13, v14, 2 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2614D5DE8();
  __break(1u);
  return result;
}

uint64_t sub_2613EBB40(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v4 = 0;
    uint64_t v5 = a2[2];
    uint64_t v16 = a2 + 7;
    while (1)
    {
      uint64_t v6 = sub_2614D5428();
      uint64_t v8 = v7;
      if (v5)
      {
        uint64_t v9 = v6;
        BOOL v10 = a2[4] == v6 && a2[5] == v7;
        if (v10 || (uint64_t result = sub_2614D5FB8(), (result & 1) != 0))
        {
LABEL_20:
          swift_bridgeObjectRelease();
          return v4;
        }
        if (v5 != 1) {
          break;
        }
      }
LABEL_3:
      swift_bridgeObjectRelease();
      if (++v4 == v2) {
        return 0;
      }
    }
    int64_t v12 = v16;
    uint64_t v13 = 1;
    while (1)
    {
      uint64_t v14 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        break;
      }
      if (*(v12 - 1) == v9 && *v12 == v8) {
        goto LABEL_20;
      }
      uint64_t result = sub_2614D5FB8();
      if (result) {
        goto LABEL_20;
      }
      v12 += 2;
      ++v13;
      if (v14 == v5) {
        goto LABEL_3;
      }
    }
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t sub_2613EBC80(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_2613D864C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (void *)&v16[16 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_2614D5DE8();
  __break(1u);
  return result;
}

uint64_t sub_2613EBDEC()
{
  sub_2613C23AC(&qword_26A914AC8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2614D81C0;
  *(void *)(inited + 32) = 97;
  *(void *)(inited + 40) = 0xE100000000000000;
  *(void *)(inited + 48) = 28257;
  *(void *)(inited + 56) = 0xE200000000000000;
  *(void *)(inited + 64) = 6645876;
  *(void *)(inited + 72) = 0xE300000000000000;
  *(void *)(inited + 80) = 29801;
  *(void *)(inited + 88) = 0xE200000000000000;
  sub_2613DC3BC();
  uint64_t v1 = (void *)sub_2614D5B88();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_2613EBB40(v2, (void *)inited);
  char v5 = v4;
  uint64_t result = swift_bridgeObjectRelease();
  if (v5)
  {
    uint64_t v3 = v1[2];
    int64_t v7 = v3;
    goto LABEL_40;
  }
  int64_t v7 = v3 + 1;
  if (__OFADD__(v3, 1)) {
    goto LABEL_45;
  }
  unint64_t v8 = v1[2];
  if (v7 != v8)
  {
    uint64_t v9 = *(void *)(inited + 32);
    uint64_t v10 = *(void *)(inited + 40);
    unint64_t v30 = v3;
    uint64_t v11 = 2 * v3;
    uint64_t v12 = v3 + 1;
    while ((v7 & 0x8000000000000000) == 0)
    {
      if (v12 >= v8) {
        goto LABEL_42;
      }
      uint64_t v13 = &v1[v11];
      uint64_t v15 = sub_2614D5428();
      BOOL v16 = v9 == v15 && v10 == v14;
      if (v16
        || (uint64_t v17 = v14, (sub_2614D5FB8() & 1) != 0)
        || (*(void *)(inited + 48) == v15 ? (BOOL v18 = *(void *)(inited + 56) == v17) : (BOOL v18 = 0),
            v18
         || (sub_2614D5FB8() & 1) != 0
         || *(void *)(inited + 64) == v15 && *(void *)(inited + 72) == v17
         || (sub_2614D5FB8() & 1) != 0
         || *(void *)(inited + 80) == v15 && *(void *)(inited + 88) == v17
         || (sub_2614D5FB8() & 1) != 0))
      {
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t result = swift_bridgeObjectRelease();
        if (v12 != v30)
        {
          if ((v30 & 0x8000000000000000) != 0) {
            goto LABEL_47;
          }
          unint64_t v20 = v1[2];
          if (v30 >= v20) {
            goto LABEL_48;
          }
          if (v12 >= (uint64_t)v20) {
            goto LABEL_49;
          }
          uint64_t v21 = &v1[2 * v30 + 4];
          uint64_t v22 = v21[1];
          uint64_t v23 = v13[7];
          uint64_t v28 = *v21;
          uint64_t v29 = v13[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v1 = sub_2613E13E8(v1);
          }
          char v24 = &v1[2 * v30];
          v24[4] = v29;
          v24[5] = v23;
          uint64_t result = swift_bridgeObjectRelease();
          if (v12 >= v1[2]) {
            goto LABEL_50;
          }
          int64_t v25 = &v1[v11];
          v25[6] = v28;
          v25[7] = v22;
          uint64_t result = swift_bridgeObjectRelease();
        }
        if (__OFADD__(v30++, 1)) {
          goto LABEL_46;
        }
      }
      int64_t v19 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_43;
      }
      unint64_t v8 = v1[2];
      ++v12;
      v11 += 2;
      if (v19 == v8)
      {
        int64_t v7 = v19;
        uint64_t v3 = v30;
        goto LABEL_39;
      }
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
LABEL_39:
  if (v7 >= v3)
  {
LABEL_40:
    sub_2613EBC80(v3, v7);
    swift_bridgeObjectRelease();
    sub_2613C23AC(&qword_26A914A70);
    sub_2613DCEC0();
    uint64_t v27 = sub_2614D5338();
    swift_bridgeObjectRelease();
    return v27;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
  return result;
}

char *sub_2613EC158(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_24;
  }
  int64_t v7 = *v4;
  int64_t v8 = *((void *)*v4 + 2);
  int64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!result || v9 > *((void *)v7 + 3) >> 1) {
    goto LABEL_8;
  }
  if (v5 == a3)
  {
    while (v6 > 0)
    {
      __break(1u);
LABEL_8:
      if (v8 <= v9) {
        int64_t v13 = v8 + v6;
      }
      else {
        int64_t v13 = v8;
      }
      uint64_t result = sub_2613D8310(result, v13, 1, v7);
      int64_t v7 = result;
      if (v5 != a3) {
        goto LABEL_12;
      }
    }
    goto LABEL_22;
  }
LABEL_12:
  uint64_t v14 = *((void *)v7 + 2);
  if ((*((void *)v7 + 3) >> 1) - v14 < v6) {
    goto LABEL_25;
  }
  if (v6 < 0) {
    goto LABEL_27;
  }
  uint64_t v15 = &v7[4 * v14 + 32];
  BOOL v16 = (char *)(a2 + 4 * a3);
  if (v16 < &v15[4 * v6] && v15 < &v16[4 * v6]) {
    goto LABEL_27;
  }
  uint64_t result = (char *)memcpy(v15, v16, 4 * v6);
  if (!v6)
  {
LABEL_22:
    *char v4 = v7;
    return result;
  }
  uint64_t v18 = *((void *)v7 + 2);
  BOOL v19 = __OFADD__(v18, v6);
  uint64_t v20 = v18 + v6;
  if (!v19)
  {
    *((void *)v7 + 2) = v20;
    goto LABEL_22;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = (char *)sub_2614D5DE8();
  __break(1u);
  return result;
}

char *sub_2613EC2F0(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  char v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *((void *)v4 + 3) >> 1)
  {
    if (!v8) {
      goto LABEL_21;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t result = sub_2613D8310(result, v11, 1, v4);
    char v4 = result;
    if (!v8) {
      goto LABEL_21;
    }
  }
  uint64_t v12 = *((void *)v4 + 2);
  BOOL v13 = __OFSUB__(v12, a2);
  uint64_t v14 = v12 - a2;
  if (v13) {
    goto LABEL_27;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    uint64_t result = &v4[4 * a1 + 32];
    uint64_t v15 = &v4[4 * a2 + 32];
    if (a1 != a2 || result >= &v15[4 * v14]) {
      uint64_t result = (char *)memmove(result, v15, 4 * v14);
    }
    uint64_t v16 = *((void *)v4 + 2);
    BOOL v13 = __OFADD__(v16, v8);
    uint64_t v17 = v16 + v8;
    if (!v13)
    {
      *((void *)v4 + 2) = v17;
LABEL_21:
      uint64_t *v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  uint64_t result = (char *)sub_2614D5DE8();
  __break(1u);
  return result;
}

uint64_t sub_2613EC44C(uint64_t a1)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  unint64_t v2 = *(void *)(a1 + 16);
  sub_2613EAD54(0, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
    sub_2613EB9C4(0, v2, 0);
    uint64_t v3 = (void *)v15;
    char v4 = (float *)(a1 + 32);
    while (1)
    {
      float v5 = *v4;
      if ((~*(_DWORD *)v4 & 0x7F800000) == 0) {
        break;
      }
      if (v5 <= -32769.0) {
        goto LABEL_16;
      }
      if (v5 >= 32768.0) {
        goto LABEL_17;
      }
      uint64_t v15 = (uint64_t)v3;
      unint64_t v7 = v3[2];
      unint64_t v6 = v3[3];
      if (v7 >= v6 >> 1)
      {
        sub_2613EB9C4(v6 > 1, v7 + 1, 1);
        uint64_t v3 = (void *)v15;
      }
      v3[2] = v7 + 1;
      *((_WORD *)v3 + v7 + 16) = (int)v5;
      ++v4;
      if (!--v2) {
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_9:
  uint64_t v15 = 0x40CF400000000000;
  long long v16 = xmmword_2614D95C0;
  long long v17 = xmmword_2614D95D0;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EF9388]), sel_initWithStreamDescription_, &v15);
  if (!v8)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
  }
  unint64_t v9 = v3[2];
  if (HIDWORD(v9))
  {
    uint64_t result = sub_2614D5D58();
    __break(1u);
  }
  else
  {
    uint64_t v10 = v8;
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EF93B0]), sel_initWithPCMFormat_frameCapacity_, v8, v9);
    if (!v11) {
      goto LABEL_19;
    }
    uint64_t v12 = v11;
    BOOL v13 = objc_msgSend(v11, sel_int16ChannelData);
    if (v13) {
      BOOL v13 = (void *)*v13;
    }
    memcpy(v13, v3 + 4, 2 * v9);
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setFrameLength_, v9);

    return (uint64_t)v12;
  }
  return result;
}

char *sub_2613EC6A4(uint64_t a1, uint64_t a2, uint64_t a3, float a4)
{
  uint64_t v6 = v5;
  unint64_t v7 = v4;
  uint64_t v80 = a3;
  uint64_t v11 = sub_2614D50C8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v16 = (void *)MEMORY[0x263F8EED0];
  uint64_t v17 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v4) + 0x118))(v13);
  if (!v17)
  {
    sub_2613DC2B8();
    swift_allocError();
    void *v31 = 0xD000000000000016;
    v31[1] = 0x80000002614E1270;
    swift_willThrow();
    return v15;
  }
  uint64_t v78 = a1;
  uint64_t v79 = a2;
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v17 + 280))(&v81);
  uint64_t v18 = swift_release();
  uint64_t v19 = v81;
  int v20 = v82;
  int v75 = BYTE5(v82);
  LODWORD(v76) = BYTE4(v82);
  uint64_t v73 = v84;
  uint64_t v74 = v83;
  int v72 = v85;
  uint64_t v71 = v86;
  int v70 = v87;
  int v69 = BYTE1(v87);
  int v21 = HIDWORD(v87);
  int v68 = v88;
  uint64_t v22 = v91;
  uint64_t v67 = v90;
  int v66 = v92;
  int v65 = v93;
  int v64 = v94;
  int v63 = v95;
  int v62 = v96;
  int v61 = v97;
  int v60 = v98;
  *((unsigned char *)v4 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_mustWaitForFinalToStopInference) = 0;
  if ((*(uint64_t (**)(uint64_t))((*v16 & *v4) + 0x3D8))(v18))
  {
    uint64_t v23 = v19;
    uint64_t v24 = sub_26146718C();
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v24, v11);
    int64_t v25 = sub_2614D50A8();
    os_log_type_t v26 = sub_2614D5968();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v77 = v5;
      uint64_t v28 = v27;
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl(&dword_2613B8000, v25, v26, "block inference pending till final, ublocked now", v27, 2u);
      uint64_t v29 = v28;
      uint64_t v6 = v77;
      MEMORY[0x263E38060](v29, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    unint64_t v30 = (void *)MEMORY[0x263F8EED0];
    (*(void (**)(void))((*MEMORY[0x263F8EED0] & *v7) + 0x3E0))(0);
    sub_2613E545C();
    if (v6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v15;
    }
    uint64_t v19 = v23;
  }
  else
  {
    unint64_t v30 = (void *)MEMORY[0x263F8EED0];
  }
  uint64_t v81 = v19;
  LODWORD(v82) = v20;
  BYTE4(v82) = v76;
  BYTE5(v82) = v75;
  uint64_t v83 = v74;
  uint64_t v84 = v73;
  LOBYTE(v85) = v72;
  uint64_t v86 = v71;
  LOBYTE(v87) = v70;
  BYTE1(v87) = v69;
  HIDWORD(v87) = v21;
  LOBYTE(v88) = v68;
  uint64_t v90 = v67;
  uint64_t v91 = v22;
  unsigned __int8 v92 = v66;
  unsigned __int8 v93 = v65;
  unsigned __int8 v94 = v64;
  unsigned __int8 v95 = v63;
  unsigned __int8 v96 = v62;
  unsigned __int8 v97 = v61;
  unsigned __int8 v98 = v60;
  char v32 = sub_2614B8FE8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = 0;
  uint64_t v77 = v6;
  if ((v32 & 1) != 0 && v80) {
    uint64_t v33 = (void *)sub_2613EC44C(v80);
  }
  uint64_t v34 = OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_usedPartialAsFinal;
  if (*((unsigned char *)v7 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_usedPartialAsFinal) == 1)
  {
    uint64_t v15 = 0;
    *((unsigned char *)v7 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_usedPartialAsFinal) = 0;
    goto LABEL_23;
  }
  uint64_t v35 = OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_timingInfo;
  uint64_t v36 = *(void **)((char *)v7 + OBJC_IVAR____TtC12VoiceActions16VATinyASRSpotter_timingInfo);
  if (v36)
  {
    uint64_t v37 = *(uint64_t (**)(void))((*v30 & *v36) + 0x148);
    uint64_t v38 = v36;
    uint64_t v39 = v37();

    int64_t v40 = *(void **)((char *)v7 + v35);
    if (v40)
    {
      uint64_t v41 = *(uint64_t (**)(void))((*v30 & *v40) + 0x160);
      char v42 = v40;
      uint64_t v43 = v41();

      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v39 = 0;
  }
  uint64_t v43 = 0;
LABEL_20:
  sub_2613E58D8(v39, v43, (uint64_t)&v81, a4);
  uint64_t v44 = v82;
  if (v82)
  {
    LODWORD(v80) = v89;
    __int16 v45 = v88;
    uint64_t v46 = v86;
    uint64_t v76 = v87;
    uint64_t v48 = v84;
    uint64_t v47 = v85;
    int v49 = v83;
    uint64_t v50 = v81;
    type metadata accessor for VAKeywordResult();
    sub_2613C23AC(&qword_26A914C00);
    uint64_t v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_2614D81E0;
    *(void *)(v51 + 32) = v50;
    *(void *)(v51 + 40) = v44;
    *(_DWORD *)(v51 + 48) = v49;
    *(void *)(v51 + 56) = v48;
    *(void *)(v51 + 64) = v47;
    *(void *)(v51 + 72) = v46;
    unint64_t v30 = (void *)MEMORY[0x263F8EED0];
    *(void *)(v51 + 80) = v76;
    *(unsigned char *)(v51 + 88) = v45 & 1;
    *(unsigned char *)(v51 + 89) = HIBYTE(v45) & 1;
    *(unsigned char *)(v51 + 90) = v80 & 1;
    uint64_t v15 = (char *)VAKeywordResult.__allocating_init(detections:)(v51);
  }
  else
  {
    uint64_t v15 = 0;
  }
LABEL_23:
  type metadata accessor for VAASRResult();
  char v52 = *((unsigned char *)v7 + v34);
  id v53 = v33;
  uint64_t v54 = v79;
  swift_bridgeObjectRetain();
  char v55 = sub_2613D04A8();
  id v56 = sub_261480D58(v78, v54, 1, v55 & 1, v52, v52, (uint64_t)v33);
  int v57 = (void *)(*(uint64_t (**)(void))((*v30 & *v7) + 0x2A0))();
  if (v57)
  {
    objc_msgSend(v57, sel_speechResultsWithResult_, v56);

    swift_unknownObjectRelease();
  }
  else
  {
  }
  return v15;
}

uint64_t method lookup function for VATinyASRSpotter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VATinyASRSpotter);
}

uint64_t dispatch thunk of VATinyASRSpotter.tasrDelegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x2A0))();
}

uint64_t dispatch thunk of VATinyASRSpotter.tasrDelegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x2A8))();
}

uint64_t dispatch thunk of VATinyASRSpotter.tasrDelegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x2B0))();
}

uint64_t dispatch thunk of VATinyASRSpotter.updateRuntimeParameters(runtimeParams:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x3F8))();
}

uint64_t sub_2613ECF18(uint64_t a1)
{
  uint64_t v2 = sub_2613C23AC(&qword_26A914BD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id VASpeechDetectorInput.buffer.getter()
{
  return *v0;
}

uint64_t VASpeechDetectorInput.hostTime.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t VASpeechDetectorInput.init(buffer:hostTime:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t VASpeechDetectorInput.description.getter()
{
  uint64_t v1 = *v0;
  sub_2614D5C38();
  objc_msgSend(v1, sel_frameLength);
  uint64_t v2 = sub_2614D5F88();
  swift_bridgeObjectRelease();
  sub_2614D54D8();
  sub_2614D5F88();
  sub_2614D54D8();
  swift_bridgeObjectRelease();
  return v2;
}

id VASpeechDetectorOutput.buffer.getter()
{
  return *v0;
}

uint64_t VASpeechDetectorOutput.bufferStartTime.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t VASpeechDetectorOutput.startOfSpeechInBuffer.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t VASpeechDetectorOutput.endOfSpeechInBuffer.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t VASpeechDetectorOutput.startOfSpeechTime.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t VASpeechDetectorOutput.startOfSpeechTime.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 24) = result;
  *(unsigned char *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*VASpeechDetectorOutput.startOfSpeechTime.modify())()
{
  return nullsub_1;
}

uint64_t VASpeechDetectorOutput.endOfSpeechTime.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t VASpeechDetectorOutput.startOfSpeechSampleOffsetInBuffer.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t VASpeechDetectorOutput.startOfSpeechSampleOffsetInBuffer.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 56) = result;
  *(unsigned char *)(v2 + 64) = a2 & 1;
  return result;
}

uint64_t (*VASpeechDetectorOutput.startOfSpeechSampleOffsetInBuffer.modify())()
{
  return nullsub_1;
}

uint64_t VASpeechDetectorOutput.startOfSpeechTimeInSecsInBuffer.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t VASpeechDetectorOutput.startOfSpeechTimeInSecsInBuffer.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 72) = result;
  *(unsigned char *)(v2 + 80) = a2 & 1;
  return result;
}

uint64_t (*VASpeechDetectorOutput.startOfSpeechTimeInSecsInBuffer.modify())()
{
  return nullsub_1;
}

uint64_t VASpeechDetectorOutput.endOfSpeechSampleOffsetInBuffer.getter()
{
  return *(void *)(v0 + 88);
}

uint64_t VASpeechDetectorOutput.endOfSpeechSampleOffsetInBuffer.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 88) = result;
  *(unsigned char *)(v2 + 96) = a2 & 1;
  return result;
}

uint64_t (*VASpeechDetectorOutput.endOfSpeechSampleOffsetInBuffer.modify())()
{
  return nullsub_1;
}

uint64_t VASpeechDetectorOutput.endOfSpeechTimeInSecsInBuffer.getter()
{
  return *(void *)(v0 + 104);
}

uint64_t VASpeechDetectorOutput.endOfSpeechTimeInSecsInBuffer.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 104) = result;
  *(unsigned char *)(v2 + 112) = a2 & 1;
  return result;
}

uint64_t (*VASpeechDetectorOutput.endOfSpeechTimeInSecsInBuffer.modify())()
{
  return nullsub_1;
}

unint64_t VASpeechDetectorOutput.averageSilenceProbabilityOver30ms.getter()
{
  return *(unsigned int *)(v0 + 116) | ((unint64_t)*(unsigned __int8 *)(v0 + 120) << 32);
}

uint64_t VASpeechDetectorOutput.averageSilenceProbabilityOver30ms.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 116) = result;
  *(unsigned char *)(v1 + 120) = BYTE4(result) & 1;
  return result;
}

uint64_t (*VASpeechDetectorOutput.averageSilenceProbabilityOver30ms.modify())()
{
  return nullsub_1;
}

uint64_t VASpeechDetectorOutput.afterEndOfSpeech.getter()
{
  return *(unsigned __int8 *)(v0 + 121);
}

uint64_t VASpeechDetectorOutput.afterEndOfSpeech.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 121) = result;
  return result;
}

uint64_t (*VASpeechDetectorOutput.afterEndOfSpeech.modify())()
{
  return nullsub_1;
}

uint64_t VASpeechDetectorOutput.lastAudioAfterEndOfSpeech.getter()
{
  return *(unsigned __int8 *)(v0 + 122);
}

uint64_t VASpeechDetectorOutput.lastAudioAfterEndOfSpeech.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 122) = result;
  return result;
}

uint64_t (*VASpeechDetectorOutput.lastAudioAfterEndOfSpeech.modify())()
{
  return nullsub_1;
}

uint64_t VASpeechDetectorOutput.init(buffer:bufferStartTime:startOfSpeechInBuffer:endOfSpeechInBuffer:startOfSpeechTime:endOfSpeechTime:afterEndOfSpeech:lastAudioAfterEndOfSpeech:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, char a10, char a11)
{
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 17) = a4;
  *(void *)(a9 + 24) = a5;
  *(unsigned char *)(a9 + 32) = a6 & 1;
  *(void *)(a9 + 40) = a7;
  *(unsigned char *)(a9 + 48) = a8 & 1;
  *(void *)(a9 + 56) = 0;
  *(unsigned char *)(a9 + 64) = 1;
  *(void *)(a9 + 72) = 0;
  *(unsigned char *)(a9 + 80) = 1;
  *(void *)(a9 + 88) = 0;
  *(unsigned char *)(a9 + 96) = 1;
  *(void *)(a9 + 104) = 0;
  *(unsigned char *)(a9 + 112) = 1;
  *(_DWORD *)(a9 + 116) = 0;
  *(unsigned char *)(a9 + 120) = 1;
  *(unsigned char *)(a9 + 121) = a10;
  *(unsigned char *)(a9 + 122) = a11;
  return result;
}

uint64_t VASpeechDetectorOutput.description.getter()
{
  id v1 = *(id *)v0;
  if ((*(unsigned char *)(v0 + 16) != 1
     || (*(unsigned char *)(v0 + 32) & 1) != 0
     || (*(unsigned char *)(v0 + 64) & 1) != 0
     || (*(unsigned char *)(v0 + 80) & 1) != 0)
    && (*(unsigned char *)(v0 + 17) != 1
     || (*(unsigned char *)(v0 + 48) & 1) != 0
     || (*(unsigned char *)(v0 + 96) & 1) != 0
     || (*(unsigned char *)(v0 + 112) & 1) != 0))
  {
    if (!*(unsigned char *)(v0 + 122) && !*(unsigned char *)(v0 + 121))
    {
      objc_msgSend(*(id *)v0, sel_frameLength);
      uint64_t v3 = sub_2614D5F88();
      sub_2614D54D8();
      sub_2614D5F88();
      sub_2614D54D8();
      swift_bridgeObjectRelease();
      return v3;
    }
    sub_2614D5C38();
    swift_bridgeObjectRelease();
    uint64_t v3 = 91;
    objc_msgSend(v1, sel_frameLength);
    sub_2614D5F88();
    sub_2614D54D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
    sub_2614D5C38();
    sub_2614D54D8();
    sub_2614D5878();
    sub_2614D54D8();
    objc_msgSend(v1, sel_frameLength);
    sub_2614D5F88();
    sub_2614D54D8();
    swift_bridgeObjectRelease();
    sub_2614D54D8();
    sub_2614D5F88();
    sub_2614D54D8();
    swift_bridgeObjectRelease();
    sub_2614D54D8();
    sub_2614D5F88();
    sub_2614D54D8();
    swift_bridgeObjectRelease();
    sub_2614D54D8();
    sub_2614D5838();
    sub_2614D54D8();
    swift_bridgeObjectRelease();
  }
  sub_2614D54D8();
  return v3;
}

uint64_t sub_2613ED7A8()
{
  return static VAConfiguration.defaultVADFilename.getter();
}

uint64_t VASpeechDetector.__allocating_init(modelFilename:featureCount:)(uint64_t a1, unint64_t a2, char *a3)
{
  uint64_t v6 = swift_allocObject();
  VASpeechDetector.init(modelFilename:featureCount:)(a1, a2, a3);
  return v6;
}

uint64_t VASpeechDetector.init(modelFilename:featureCount:)(uint64_t a1, unint64_t a2, char *a3)
{
  uint64_t v5 = v3;
  char v8 = *a3;
  uint64_t v9 = v5 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_inputStream;
  uint64_t v10 = sub_2613C23AC(&qword_26A914C18);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  uint64_t v27 = v9;
  v11(v9, 1, 1, v10);
  uint64_t v12 = v5 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_inputStreamBuilder;
  uint64_t v13 = sub_2613C23AC(&qword_26A914C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(void *)(v5 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_vadTask) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_ingestionTask) = 0;
  uint64_t v14 = OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_vadModel;
  *(void *)(v5 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_vadModel) = 0;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_speechInProgress) = 0;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_prepareToTurnOffSpeechInProgress) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_floatBuffer) = MEMORY[0x263F8EE78];
  uint64_t v15 = v5 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_outputAudioStream;
  uint64_t v16 = sub_2613C23AC(&qword_26A914C28);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  uint64_t v17 = v5 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_outputAudioStreamBuilder;
  uint64_t v18 = sub_2613C23AC(&qword_26A914C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  *(_DWORD *)(v5 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_minimumSilenceProbability) = 1050253722;
  *(void *)(v5 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_numFramesForAveraging) = 3;
  type metadata accessor for VASilenceModel();
  LOBYTE(v25) = v8;
  uint64_t v19 = sub_26144A108(a1, a2, (unsigned __int8 *)&v25);
  if (!v4)
  {
    *(void *)(v5 + v14) = v19;
    swift_release();
    *(unsigned char *)(v5 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_featureCount) = v8;
    if (*(void *)(v5 + v14))
    {
      type metadata accessor for StopProcessingActor();
      *(void *)(v5 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_stopProcessingActor) = sub_2613FB39C();
      type metadata accessor for VAStrideConfiguration();
      id v20 = static VAStrideConfiguration.forVAD()();
      *(void *)(v5 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_strideConfig) = v20;
      type metadata accessor for IngestionAudioBufferActor(0);
      *(void *)(v5 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_ingestionBufferActor) = sub_2613FBAEC(v20, 0, 0, 1);
      return v5;
    }
    unint64_t v25 = 0;
    unint64_t v26 = 0xE000000000000000;
    sub_2614D5C38();
    swift_bridgeObjectRelease();
    unint64_t v25 = 0xD00000000000001ELL;
    unint64_t v26 = 0x80000002614E1450;
    sub_2614BF6D4();
    swift_bridgeObjectRetain();
    sub_2614D54D8();
    swift_bridgeObjectRelease();
    unint64_t v22 = v25;
    unint64_t v23 = v26;
    sub_2613EDCAC();
    swift_allocError();
    unint64_t *v24 = v22;
    v24[1] = v23;
    swift_willThrow();
  }
  sub_2613CC6A0(v27, &qword_26A914C38);
  sub_2613CC6A0(v12, &qword_26A914C40);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_2613CC6A0(v15, &qword_26A914C48);
  sub_2613CC6A0(v17, &qword_26A914C50);
  type metadata accessor for VASpeechDetector();
  swift_deallocPartialClassInstance();
  return v5;
}

uint64_t type metadata accessor for VASpeechDetector()
{
  uint64_t result = qword_26A918100;
  if (!qword_26A918100) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_2613EDCAC()
{
  unint64_t result = qword_26A914C58;
  if (!qword_26A914C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914C58);
  }
  return result;
}

uint64_t sub_2613EDD00@<X0>(int a1@<W0>, uint64_t a2@<X8>, float a3@<S0>)
{
  LODWORD(v80) = a1;
  v69[0] = a2;
  uint64_t v4 = sub_2613C23AC(&qword_26A914C50);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v87 = (uint64_t)v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v85 = (char *)v69 - v7;
  uint64_t v8 = sub_2613C23AC(&qword_26A914C48);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v88 = (uint64_t)v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v81 = (char *)v69 - v11;
  uint64_t v12 = sub_2613C23AC(&qword_26A914C60);
  uint64_t v78 = *(void *)(v12 - 8);
  uint64_t v79 = (void (*)(void, void, void))v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v77 = (char *)v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_2613C23AC(&qword_26A914C30);
  uint64_t v83 = *(void *)(v14 - 8);
  uint64_t v84 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v82 = (char *)v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_2613C23AC(&qword_26A914C28);
  uint64_t v89 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v76 = (char *)v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_2613C23AC(&qword_26A914BD8);
  MEMORY[0x270FA5388](v17 - 8);
  int v75 = (char *)v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_2613C23AC(&qword_26A914C40);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v71 = (char *)v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  int v72 = (char *)v69 - v22;
  uint64_t v23 = sub_2613C23AC(&qword_26A914C38);
  MEMORY[0x270FA5388](v23 - 8);
  unint64_t v25 = (char *)v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_2613C23AC(&qword_26A914C68);
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)v69 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_2613C23AC(&qword_26A914C20);
  uint64_t v70 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  char v32 = (char *)v69 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_2613C23AC(&qword_26A914C18);
  uint64_t v34 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v36 = (char *)v69 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = *(void (**)(char *))(v27 + 104);
  unsigned int v73 = *MEMORY[0x263F8F580];
  v37(v29);
  sub_2614D5798();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  uint64_t v38 = (uint64_t)v71;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v25, v36, v33);
  uint64_t v39 = v33;
  uint64_t v40 = v74;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v25, 0, 1, v39);
  uint64_t v41 = v70;
  uint64_t v42 = (uint64_t)v72;
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v72, v32, v30);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v42, 0, 1, v30);
  uint64_t v43 = v40 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_inputStream;
  swift_beginAccess();
  sub_2613EFB3C((uint64_t)v25, v43, &qword_26A914C38);
  swift_endAccess();
  uint64_t v44 = v40 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_inputStreamBuilder;
  swift_beginAccess();
  sub_2613EFB3C(v42, v44, &qword_26A914C40);
  swift_endAccess();
  sub_2613C2540(v44, v38, &qword_26A914C40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v38, 1, v30))
  {
    sub_2613CC6A0(v38, &qword_26A914C40);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v32, v38, v30);
    sub_2613CC6A0(v38, &qword_26A914C40);
    sub_2614D57A8();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v30);
  }
  *(float *)(v40 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_minimumSilenceProbability) = a3;
  uint64_t v45 = sub_2614D5788();
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56);
  uint64_t v47 = (uint64_t)v75;
  v46(v75, 1, 1, v45);
  uint64_t v48 = (void *)swift_allocObject();
  v48[2] = 0;
  v48[3] = 0;
  v48[4] = v40;
  swift_retain();
  *(void *)(v40 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_ingestionTask) = sub_2613EF35C(v47, (uint64_t)&unk_26A914C78, (uint64_t)v48);
  swift_release();
  v46((char *)v47, 1, 1, v45);
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = 0;
  *(void *)(v49 + 24) = 0;
  *(void *)(v49 + 32) = v40;
  *(unsigned char *)(v49 + 40) = v80 & 1;
  swift_retain();
  *(void *)(v40 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_vadTask) = sub_2613EF35C(v47, (uint64_t)&unk_26A914C88, v49);
  swift_release();
  uint64_t v51 = v77;
  uint64_t v50 = v78;
  char v52 = v79;
  (*(void (**)(char *, void, void))(v78 + 104))(v77, v73, v79);
  id v53 = v76;
  uint64_t v54 = v82;
  sub_2614D5798();
  (*(void (**)(char *, void (*)(void, void, void)))(v50 + 8))(v51, v52);
  uint64_t v55 = v89;
  uint64_t v56 = (uint64_t)v81;
  uint64_t v57 = v86;
  uint64_t v79 = *(void (**)(void, void, void))(v89 + 32);
  uint64_t v80 = v89 + 32;
  v79(v81, v53, v86);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v56, 0, 1, v57);
  uint64_t v58 = v83;
  uint64_t v59 = v84;
  uint64_t v60 = (uint64_t)v85;
  (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v85, v54, v84);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v60, 0, 1, v59);
  uint64_t v61 = v40 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_outputAudioStream;
  swift_beginAccess();
  sub_2613EFB3C(v56, v61, &qword_26A914C48);
  swift_endAccess();
  uint64_t v62 = v40 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_outputAudioStreamBuilder;
  swift_beginAccess();
  sub_2613EFB3C(v60, v62, &qword_26A914C50);
  swift_endAccess();
  uint64_t v63 = v62;
  uint64_t v64 = v87;
  sub_2613C2540(v63, v87, &qword_26A914C50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v64, 1, v59))
  {
    sub_2613CC6A0(v64, &qword_26A914C50);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v54, v64, v59);
    sub_2613CC6A0(v64, &qword_26A914C50);
    sub_2614D57A8();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v54, v59);
  }
  uint64_t v65 = v61;
  uint64_t v66 = v88;
  sub_2613C2540(v65, v88, &qword_26A914C48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v66, 1, v57) != 1) {
    return ((uint64_t (*)(void, uint64_t, uint64_t))v79)(v69[0], v66, v57);
  }
  sub_2613CC6A0(v66, &qword_26A914C48);
  sub_2613EDCAC();
  swift_allocError();
  void *v67 = 0xD00000000000001ELL;
  v67[1] = 0x80000002614E1470;
  return swift_willThrow();
}

uint64_t sub_2613EE8A8(uint64_t a1)
{
  return sub_2613EFBBC(a1, &qword_26A914CF8, "Input stream finished successfully.", "Input stream was cancelled.");
}

uint64_t sub_2613EE8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a4;
  uint64_t v5 = sub_2613C23AC(&qword_26A914D08);
  v4[11] = v5;
  v4[12] = *(void *)(v5 - 8);
  v4[13] = swift_task_alloc();
  sub_2613C23AC(&qword_26A914C38);
  v4[14] = swift_task_alloc();
  uint64_t v6 = sub_2613C23AC(&qword_26A914C18);
  v4[15] = v6;
  v4[16] = *(void *)(v6 - 8);
  v4[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2613EEA18, 0, 0);
}

uint64_t sub_2613EEA18()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[10] + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_inputStream;
  swift_beginAccess();
  sub_2613C2540(v4, v3, &qword_26A914C38);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_2613CC6A0(v0[14], &qword_26A914C38);
    sub_2613EDCAC();
    swift_allocError();
    void *v5 = 0xD000000000000013;
    v5[1] = 0x80000002614E16F0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    (*(void (**)(void, void, void))(v0[16] + 32))(v0[17], v0[14], v0[15]);
    sub_2614D57D8();
    uint64_t v8 = OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_ingestionBufferActor;
    v0[18] = OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_floatBuffer;
    v0[19] = v8;
    v0[20] = 0;
    uint64_t v9 = (void *)swift_task_alloc();
    v0[21] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_2613EEC28;
    uint64_t v10 = v0[11];
    return MEMORY[0x270FA1F68](v0 + 8, 0, 0, v10);
  }
}

uint64_t sub_2613EEC28()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2613EED24, 0, 0);
}

uint64_t sub_2613EED24()
{
  uint64_t v1 = (void *)v0[8];
  v0[22] = v1;
  if (!v1)
  {
    uint64_t v16 = v0[16];
    uint64_t v15 = v0[17];
    uint64_t v17 = v0[15];
    (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
    goto LABEL_5;
  }
  uint64_t v2 = v0[9];
  uint64_t v3 = (void *)(v0[10] + v0[18]);
  swift_beginAccess();
  v4.super.super.Class isa = (Class)v1;
  Class isa = v4.super.super.isa;
  v4.super._impl = v3;
  VAfp16AVAudioBufferToFP32Array(buffer:floatBuffer:)(v4, v6);
  if (v7)
  {
    uint64_t v9 = v0[16];
    uint64_t v8 = v0[17];
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[12];
    uint64_t v11 = v0[13];
    uint64_t v13 = v0[11];
    swift_endAccess();

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
LABEL_5:
    return v14();
  }
  uint64_t v20 = v0[18];
  uint64_t v19 = v0[19];
  uint64_t v21 = v0[10];
  swift_endAccess();

  uint64_t v22 = *(void *)(v21 + v19);
  v0[23] = v22;
  uint64_t v23 = *(void *)(v21 + v20);
  v0[24] = v23;
  unint64_t v25 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v22 + 432)
                                                 + **(int **)(*(void *)v22 + 432));
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v24 = (void *)swift_task_alloc();
  v0[25] = v24;
  void *v24 = v0;
  v24[1] = sub_2613EEFE4;
  return v25(v23, v2);
}

uint64_t sub_2613EEFE4()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_2613EF1F0;
  }
  else {
    uint64_t v2 = sub_2613EF134;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2613EF134()
{
  *(void *)(v0 + 160) = *(void *)(v0 + 208);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2613EEC28;
  uint64_t v2 = *(void *)(v0 + 88);
  return MEMORY[0x270FA1F68](v0 + 64, 0, 0, v2);
}

uint64_t sub_2613EF1F0()
{
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 88);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_2613EF2C0()
{
  return sub_2613EFA54(40);
}

uint64_t sub_2613EF2C8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2613F49F0;
  return sub_2613EE8C4((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_2613EF35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2614D5788();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_2614D5778();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_2613CC6A0(a1, &qword_26A914BD8);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2614D5748();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_2613EF4E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 144) = a5;
  *(void *)(v5 + 64) = a4;
  uint64_t v7 = sub_2613C23AC(&qword_26A914C30);
  *(void *)(v5 + 72) = v7;
  *(void *)(v5 + 80) = *(void *)(v7 - 8);
  *(void *)(v5 + 88) = swift_task_alloc();
  sub_2613C23AC(&qword_26A914C50);
  *(void *)(v5 + 96) = swift_task_alloc();
  uint64_t v8 = sub_2613C23AC(&qword_26A914C20);
  *(void *)(v5 + 104) = v8;
  *(void *)(v5 + 112) = *(void *)(v8 - 8);
  *(void *)(v5 + 120) = swift_task_alloc();
  sub_2613C23AC(&qword_26A914C40);
  *(void *)(v5 + 128) = swift_task_alloc();
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 136) = v9;
  *uint64_t v9 = v5;
  v9[1] = sub_2613EF6A4;
  return sub_2613F1374(a5);
}

uint64_t sub_2613EF6A4()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_2613EF804, 0, 0);
  }
}

uint64_t sub_2613EF804()
{
  if (*(unsigned char *)(v0 + 144) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 128);
    uint64_t v2 = *(void *)(v0 + 104);
    uint64_t v3 = *(void *)(v0 + 112);
    uint64_t v4 = *(void *)(v0 + 64) + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_inputStreamBuilder;
    swift_beginAccess();
    sub_2613C2540(v4, v1, &qword_26A914C40);
    int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
    uint64_t v6 = *(void *)(v0 + 128);
    if (v5)
    {
      sub_2613CC6A0(*(void *)(v0 + 128), &qword_26A914C40);
    }
    else
    {
      uint64_t v8 = *(void *)(v0 + 112);
      uint64_t v7 = *(void *)(v0 + 120);
      uint64_t v9 = *(void *)(v0 + 104);
      (*(void (**)(uint64_t, void, uint64_t))(v8 + 16))(v7, *(void *)(v0 + 128), v9);
      sub_2613CC6A0(v6, &qword_26A914C40);
      sub_2614D57C8();
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    }
    uint64_t v10 = *(void *)(v0 + 96);
    uint64_t v11 = *(void *)(v0 + 72);
    uint64_t v12 = *(void *)(v0 + 80);
    uint64_t v13 = *(void *)(v0 + 64) + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_outputAudioStreamBuilder;
    swift_beginAccess();
    sub_2613C2540(v13, v10, &qword_26A914C50);
    int v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
    uint64_t v15 = *(void *)(v0 + 96);
    if (v14)
    {
      sub_2613CC6A0(*(void *)(v0 + 96), &qword_26A914C50);
    }
    else
    {
      uint64_t v17 = *(void *)(v0 + 80);
      uint64_t v16 = *(void *)(v0 + 88);
      uint64_t v18 = *(void *)(v0 + 72);
      (*(void (**)(uint64_t, void, uint64_t))(v17 + 16))(v16, *(void *)(v0 + 96), v18);
      sub_2613CC6A0(v15, &qword_26A914C50);
      sub_2614D57C8();
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_2613EFA4C()
{
  return sub_2613EFA54(41);
}

uint64_t sub_2613EFA54(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_2613EFAA0()
{
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 40);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_2613F49F0;
  return sub_2613EF4E4((uint64_t)v4, v5, v6, v2, v3);
}

uint64_t sub_2613EFB3C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_2613C23AC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_2613EFBA0(uint64_t a1)
{
  return sub_2613EFBBC(a1, &qword_26A914D00, "Output stream finished successfully.", "Output stream was cancelled.");
}

uint64_t sub_2613EFBBC(uint64_t a1, uint64_t *a2, const char *a3, const char *a4)
{
  uint64_t v38 = a4;
  uint64_t v7 = sub_2614D50C8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  int v14 = (char *)&v37 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v37 - v15;
  uint64_t v17 = sub_2613C23AC(a2);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a1, v17);
  int v21 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v20, v17);
  if (v21 == *MEMORY[0x263F8F540])
  {
    uint64_t v22 = sub_26146718C();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v16, v22, v7);
    uint64_t v23 = sub_2614D50A8();
    os_log_type_t v24 = sub_2614D5968();
    if (os_log_type_enabled(v23, v24))
    {
      unint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v25 = 0;
      _os_log_impl(&dword_2613B8000, v23, v24, a3, v25, 2u);
      MEMORY[0x263E38060](v25, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v16, v7);
  }
  else
  {
    int v27 = v21;
    int v28 = *MEMORY[0x263F8F548];
    uint64_t v29 = sub_26146718C();
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    if (v27 == v28)
    {
      v30(v14, v29, v7);
      uint64_t v31 = sub_2614D50A8();
      os_log_type_t v32 = sub_2614D5968();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v33 = 0;
        _os_log_impl(&dword_2613B8000, v31, v32, v38, v33, 2u);
        MEMORY[0x263E38060](v33, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v14, v7);
    }
    else
    {
      v30(v11, v29, v7);
      uint64_t v34 = sub_2614D50A8();
      os_log_type_t v35 = sub_2614D5968();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v36 = 0;
        _os_log_impl(&dword_2613B8000, v34, v35, "Unknown termination reason.", v36, 2u);
        MEMORY[0x263E38060](v36, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    }
  }
}

uint64_t sub_2613EFFA0(char *a1, uint64_t a2)
{
  uint64_t v66 = a2;
  uint64_t v67 = a1;
  uint64_t v64 = sub_2614D50C8();
  uint64_t v68 = *(void *)(v64 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v64);
  uint64_t v62 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v61 = (char *)&v58 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v63 = (char *)&v58 - v7;
  uint64_t v8 = sub_2613C23AC(&qword_26A914C90);
  uint64_t v65 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v58 - v12;
  uint64_t v14 = sub_2613C23AC(&qword_26A914C40);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_2613C23AC(&qword_26A914C20);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v2 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_inputStreamBuilder;
  swift_beginAccess();
  uint64_t v22 = v21;
  uint64_t v23 = v18;
  sub_2613C2540(v22, (uint64_t)v16, &qword_26A914C40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_2613CC6A0((uint64_t)v16, &qword_26A914C40);
    sub_2613EDCAC();
    swift_allocError();
    void *v24 = 0xD000000000000022;
    v24[1] = 0x80000002614E1490;
    return swift_willThrow();
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
  int v69 = v67;
  uint64_t v70 = v66;
  uint64_t v26 = v67;
  uint64_t v27 = v23;
  sub_2614D57B8();
  uint64_t v28 = v65;
  (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v11, v13, v8);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t))(v28 + 88);
  uint64_t v67 = v11;
  int v30 = v29(v11, v8);
  uint64_t v31 = v8;
  if (v30 == *MEMORY[0x263F8F560])
  {

    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v20, v17);
  }
  int v32 = v30;
  uint64_t v33 = v26;
  uint64_t v66 = v27;
  int v34 = *MEMORY[0x263F8F558];
  uint64_t v60 = v20;
  if (v30 == v34)
  {
    os_log_type_t v35 = (id *)v67;
    uint64_t v36 = v31;
    (*(void (**)(char *, uint64_t))(v28 + 96))(v67, v31);

    uint64_t v37 = sub_26146718C();
    uint64_t v38 = v64;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v63, v37, v64);
    uint64_t v39 = sub_2614D50A8();
    os_log_type_t v40 = sub_2614D5978();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl(&dword_2613B8000, v39, v40, "Failed to enqueue audio", v41, 2u);
      MEMORY[0x263E38060](v41, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v68 + 8))(v63, v38);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v36);
    return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v60, v17);
  }
  uint64_t v59 = v31;
  uint64_t v63 = v13;
  int v42 = *MEMORY[0x263F8F550];
  uint64_t v43 = sub_26146718C();
  uint64_t v44 = v67;
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
  uint64_t v46 = v64;
  if (v32 == v42)
  {
    uint64_t v47 = v61;
    v45(v61, v43, v64);
    uint64_t v48 = sub_2614D50A8();
    os_log_type_t v49 = sub_2614D5978();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v50 = 0;
      _os_log_impl(&dword_2613B8000, v48, v49, "Stream was terminated, failed to enqueue audio", v50, 2u);
      MEMORY[0x263E38060](v50, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v68 + 8))(v47, v46);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v63, v59);
    return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v60, v17);
  }
  uint64_t v51 = v62;
  v45(v62, v43, v64);
  char v52 = sub_2614D50A8();
  os_log_type_t v53 = sub_2614D5978();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v54 = 0;
    _os_log_impl(&dword_2613B8000, v52, v53, "Unknown yield result", v54, 2u);
    uint64_t v55 = v54;
    uint64_t v44 = v67;
    MEMORY[0x263E38060](v55, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v68 + 8))(v51, v46);
  uint64_t v56 = *(void (**)(char *, uint64_t))(v28 + 8);
  uint64_t v57 = v59;
  v56(v63, v59);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v60, v17);
  return ((uint64_t (*)(char *, uint64_t))v56)(v44, v57);
}

void sub_2613F06CC()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_2613C23AC(&qword_26A914C40);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2613C23AC(&qword_26A914C38);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2613C23AC(&qword_26A914BD8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_vadTask;
  if (*(void *)(v0 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_vadTask))
  {
    v22[5] = v1;
    dispatch_semaphore_t v13 = dispatch_semaphore_create(0);
    uint64_t v14 = sub_2614D5788();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 1, 1, v14);
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = 0;
    v15[3] = 0;
    v15[4] = v13;
    v15[5] = v2;
    uint64_t v16 = v13;
    swift_retain();
    sub_2613EF35C((uint64_t)v11, (uint64_t)&unk_26A914CA0, (uint64_t)v15);
    swift_release();
    sub_2614D5A28();
    uint64_t v17 = OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_ingestionTask;
    if (*(void *)(v2 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_ingestionTask))
    {
      swift_retain();
      sub_2613C23AC(&qword_26A914CA8);
      sub_2614D57F8();
      *(void *)(v2 + v17) = 0;
      swift_release();
      swift_release();
    }
    if (*(void *)(v2 + v12))
    {
      swift_retain();
      sub_2613C23AC(&qword_26A914CA8);
      sub_2614D57F8();
      *(void *)(v2 + v12) = 0;
      swift_release();
      swift_release();
    }
    uint64_t v18 = sub_2613C23AC(&qword_26A914C18);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 1, 1, v18);
    uint64_t v19 = v2 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_inputStream;
    swift_beginAccess();
    sub_2613EFB3C((uint64_t)v8, v19, &qword_26A914C38);
    swift_endAccess();
    uint64_t v20 = sub_2613C23AC(&qword_26A914C20);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v5, 1, 1, v20);
    uint64_t v21 = v2 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_inputStreamBuilder;
    swift_beginAccess();
    sub_2613EFB3C((uint64_t)v5, v21, &qword_26A914C40);
    swift_endAccess();
  }
}

uint64_t sub_2613F0A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = a4;
  v5[9] = a5;
  sub_2613C23AC(&qword_26A914C50);
  v5[10] = swift_task_alloc();
  uint64_t v6 = sub_2613C23AC(&qword_26A914C30);
  v5[11] = v6;
  v5[12] = *(void *)(v6 - 8);
  v5[13] = swift_task_alloc();
  sub_2613C23AC(&qword_26A914C40);
  v5[14] = swift_task_alloc();
  uint64_t v7 = sub_2613C23AC(&qword_26A914C20);
  v5[15] = v7;
  v5[16] = *(void *)(v7 - 8);
  v5[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2613F0BE0, 0, 0);
}

uint64_t sub_2613F0BE0()
{
  uint64_t v1 = *(void *)(v0[9] + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_stopProcessingActor);
  v0[18] = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 120) + **(int **)(*(void *)v1 + 120));
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[19] = v2;
  void *v2 = v0;
  v2[1] = sub_2613F0D00;
  return v4(1);
}

uint64_t sub_2613F0D00()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_2613F0E18, 0, 0);
}

uint64_t sub_2613F0E18()
{
  uint64_t v1 = *(void *)(v0[9] + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_ingestionBufferActor);
  v0[20] = v1;
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v1 + 440) + **(int **)(*(void *)v1 + 440));
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[21] = v2;
  void *v2 = v0;
  v2[1] = sub_2613F0F3C;
  return v4();
}

uint64_t sub_2613F0F3C()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_2613F1054, 0, 0);
}

uint64_t sub_2613F1054()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[9] + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_inputStreamBuilder;
  swift_beginAccess();
  sub_2613C2540(v4, v3, &qword_26A914C40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_2613CC6A0(v0[14], &qword_26A914C40);
    sub_2613EDCAC();
    swift_allocError();
    void *v5 = 0xD00000000000001ELL;
    v5[1] = 0x80000002614E16A0;
    swift_willThrow();
LABEL_5:
    sub_2614D5A38();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = (uint64_t (*)(void))v0[1];
    goto LABEL_7;
  }
  uint64_t v6 = v0[16];
  uint64_t v7 = v0[11];
  uint64_t v8 = v0[12];
  uint64_t v10 = v0[9];
  uint64_t v9 = v0[10];
  (*(void (**)(void, void, void))(v6 + 32))(v0[17], v0[14], v0[15]);
  sub_2614D57C8();
  uint64_t v11 = v10 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_outputAudioStreamBuilder;
  swift_beginAccess();
  sub_2613C2540(v11, v9, &qword_26A914C50);
  uint64_t v12 = (void (**)(uint64_t, uint64_t))(v6 + 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7) == 1)
  {
    uint64_t v13 = v0[17];
    uint64_t v14 = v0[15];
    sub_2613CC6A0(v0[10], &qword_26A914C50);
    sub_2613EDCAC();
    swift_allocError();
    void *v15 = 0xD000000000000024;
    v15[1] = 0x80000002614E16C0;
    swift_willThrow();
    (*v12)(v13, v14);
    goto LABEL_5;
  }
  uint64_t v17 = v0[17];
  uint64_t v18 = v0[15];
  uint64_t v19 = v0[12];
  uint64_t v20 = v0[13];
  uint64_t v21 = v0[11];
  (*(void (**)(uint64_t, void, uint64_t))(v19 + 32))(v20, v0[10], v21);
  sub_2614D57C8();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v21);
  (*v12)(v17, v18);
  sub_2614D5A38();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
LABEL_7:
  return v16();
}

uint64_t sub_2613F1374(char a1)
{
  *(void *)(v2 + 2000) = v1;
  *(unsigned char *)(v2 + 270) = a1;
  sub_2613C23AC(&qword_26A914CD8);
  *(void *)(v2 + 2008) = swift_task_alloc();
  uint64_t v3 = sub_2613C23AC(&qword_26A914CE0);
  *(void *)(v2 + 2016) = v3;
  *(void *)(v2 + 2024) = *(void *)(v3 - 8);
  *(void *)(v2 + 2032) = swift_task_alloc();
  uint64_t v4 = sub_2614D50C8();
  *(void *)(v2 + 2040) = v4;
  *(void *)(v2 + 2048) = *(void *)(v4 - 8);
  *(void *)(v2 + 2056) = swift_task_alloc();
  *(void *)(v2 + 2064) = swift_task_alloc();
  sub_2613C23AC(&qword_26A914C50);
  *(void *)(v2 + 2072) = swift_task_alloc();
  *(void *)(v2 + 2080) = swift_task_alloc();
  *(void *)(v2 + 2088) = swift_task_alloc();
  uint64_t v5 = sub_2613C23AC(&qword_26A914C30);
  *(void *)(v2 + 2096) = v5;
  *(void *)(v2 + 2104) = *(void *)(v5 - 8);
  *(void *)(v2 + 2112) = swift_task_alloc();
  *(void *)(v2 + 2120) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2613F1594, 0, 0);
}

uint64_t sub_2613F1594()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 2000);
  uint64_t v3 = OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_featureCount;
  *(unsigned char *)(v0 + 139) = *(unsigned char *)(v2 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_featureCount);
  uint64_t v4 = v0 + 139;
  uint64_t v33 = (_OWORD *)(v4 + 901);
  *(unsigned char *)(v4 + 130) = 0;
  sub_2613F4738();
  sub_2614D55E8();
  sub_2614D55E8();
  if (*(void *)(v4 + 1853) == *(void *)(v4 + 1845)) {
    uint64_t v5 = 40;
  }
  else {
    uint64_t v5 = 80;
  }
  type metadata accessor for VACircularMatrixBuffer();
  *(void *)(v4 + 1989) = sub_261488750(66, v5);
  *(unsigned char *)(v4 + 129) = *(unsigned char *)(v2 + v3);
  *(unsigned char *)(v4 + 128) = 0;
  sub_2614D55E8();
  sub_2614D55E8();
  if (*(void *)(v4 + 1837) == *(void *)(v4 + 1829))
  {
    type metadata accessor for VAFeatureExtract();
    id v6 = VAFeatureExtract.__allocating_init()();
  }
  else
  {
    type metadata accessor for VATinyASRFeatureExtract();
    id v6 = (id)VATinyASRFeatureExtract.__allocating_init()();
  }
  uint64_t v7 = v6;
  *(void *)(v1 + 2136) = v6;
  uint64_t v8 = *(void *)(v1 + 2000);
  *(void *)(v1 + 1960) = MEMORY[0x263F8EE78];
  sub_2613F478C(v33);
  uint64_t v9 = *(void *)(v8 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_vadModel);
  *(void *)(v1 + 2144) = v9;
  if (!v9)
  {
    sub_2613EDCAC();
    swift_allocError();
    void *v19 = 0xD000000000000010;
    v19[1] = 0x80000002614E1660;
    swift_willThrow();
    goto LABEL_11;
  }
  uint64_t v10 = *(void *)(v1 + 2104);
  uint64_t v11 = *(void *)(v1 + 2096);
  uint64_t v12 = *(void *)(v1 + 2088);
  uint64_t v13 = *(void *)(v1 + 2000);
  uint64_t v14 = OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_outputAudioStreamBuilder;
  *(void *)(v1 + 2152) = OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_outputAudioStreamBuilder;
  uint64_t v15 = v13 + v14;
  swift_beginAccess();
  sub_2613C2540(v15, v12, &qword_26A914C50);
  uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  *(void *)(v1 + 2160) = v16;
  *(void *)(v1 + 2168) = (v10 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v16(v12, 1, v11) != 1)
  {
    uint64_t v22 = *(void *)(v1 + 2000);
    (*(void (**)(void, void, void))(*(void *)(v1 + 2104) + 32))(*(void *)(v1 + 2120), *(void *)(v1 + 2088), *(void *)(v1 + 2096));
    uint64_t v23 = OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_strideConfig;
    *(void *)(v1 + 2176) = OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_strideConfig;
    os_log_type_t v24 = *(void **)(v22 + v23);
    unint64_t v25 = *(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v24) + 0xD0);
    swift_retain();
    uint64_t v26 = v24;
    uint64_t v27 = v25();

    *(void *)(v1 + 2184) = 24 * v27;
    if ((unsigned __int128)(v27 * (__int128)24) >> 64 == (24 * v27) >> 63)
    {
      if (24 * v27 + 0x4000000000000000 >= 0)
      {
        *(void *)(v1 + 2192) = OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_stopProcessingActor;
        *(void *)(v1 + 2200) = OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_ingestionBufferActor;
        *(void *)(v1 + 2208) = OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_speechInProgress;
        *(void *)(v1 + 2216) = OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_minimumSilenceProbability;
        sub_2613F47A8((uint64_t)v33, v4 + 1285);
        *(_DWORD *)(v1 + 140) = 0;
        *(unsigned char *)(v1 + 271) = 0;
        *(void *)(v1 + 2224) = 0;
        uint64_t v31 = *(void **)(*(void *)(v1 + 2000) + *(void *)(v1 + 2192));
        *(void *)(v1 + 2232) = v31;
        uint64_t v32 = *v31 + 96;
        *(void *)(v1 + 2240) = *(void *)v32;
        *(void *)(v1 + 2248) = v32 & 0xFFFFFFFFFFFFLL | 0xC0DA000000000000;
        swift_retain();
        uint64_t v28 = sub_2613F1AA0;
        uint64_t v29 = v31;
        uint64_t v30 = 0;
        return MEMORY[0x270FA2498](v28, v29, v30);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return MEMORY[0x270FA2498](v28, v29, v30);
  }
  uint64_t v17 = *(void *)(v1 + 2088);
  swift_retain();
  sub_2613CC6A0(v17, &qword_26A914C50);
  sub_2613EDCAC();
  swift_allocError();
  void *v18 = 0xD00000000000001CLL;
  v18[1] = 0x80000002614E1680;
  swift_willThrow();
  swift_release();
LABEL_11:

  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v1 + 8);
  return v20();
}

uint64_t sub_2613F1AA0()
{
  *(unsigned char *)(v0 + 395) = (*(uint64_t (**)(void))(v0 + 2240))() & 1;
  swift_release();
  return MEMORY[0x270FA2498](sub_2613F1B20, 0, 0);
}

void sub_2613F1B20()
{
  if (*(unsigned char *)(v0 + 395))
  {
    uint64_t v1 = *(void **)(v0 + 2136);
    uint64_t v2 = *(void *)(v0 + 2120);
    uint64_t v3 = *(void *)(v0 + 2104);
    uint64_t v4 = *(void *)(v0 + 2096);
    sub_2613F4810((id *)(v0 + 1424));
    swift_release();

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    goto LABEL_11;
  }
  uint64_t v5 = *(void *)(v0 + 2224);
  *(void *)(v0 + 2256) = v5 + 1;
  if (v5 == -1)
  {
    __break(1u);
    return;
  }
  id v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2160);
  uint64_t v7 = *(void *)(v0 + 2096);
  uint64_t v8 = *(void *)(v0 + 2080);
  sub_2613C2540(*(void *)(v0 + 2000) + *(void *)(v0 + 2152), v8, &qword_26A914C50);
  if (v6(v8, 1, v7) == 1)
  {
    uint64_t v9 = *(void *)(v0 + 2056);
    uint64_t v10 = *(void *)(v0 + 2048);
    uint64_t v11 = *(void *)(v0 + 2040);
    sub_2613CC6A0(*(void *)(v0 + 2080), &qword_26A914C50);
    uint64_t v12 = sub_26146718C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v12, v11);
    uint64_t v13 = sub_2614D50A8();
    os_log_type_t v14 = sub_2614D5968();
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v16 = *(void **)(v0 + 2136);
    uint64_t v17 = *(void *)(v0 + 2120);
    uint64_t v18 = *(void *)(v0 + 2104);
    uint64_t v29 = *(void *)(v0 + 2056);
    uint64_t v31 = *(void *)(v0 + 2096);
    uint64_t v19 = *(void *)(v0 + 2048);
    uint64_t v28 = *(void *)(v0 + 2040);
    if (v15)
    {
      uint64_t v27 = *(void *)(v0 + 2120);
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_2613B8000, v13, v14, "output stream doesn't exist, stop predictions", v20, 2u);
      MEMORY[0x263E38060](v20, -1, -1);
      swift_release();

      swift_release();
      sub_2613F4810((id *)(v0 + 1424));
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v29, v28);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v27, v31);
    }
    else
    {

      swift_release();
      swift_release();
      sub_2613F4810((id *)(v0 + 1424));
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v29, v28);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v31);
    }
LABEL_11:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = *(void (**)(void))(v0 + 8);
    v26();
    return;
  }
  uint64_t v21 = *(void *)(v0 + 2200);
  uint64_t v22 = *(void *)(v0 + 2000);
  sub_2613CC6A0(*(void *)(v0 + 2080), &qword_26A914C50);
  uint64_t v23 = *(void *)(v22 + v21);
  *(void *)(v0 + 2264) = v23;
  uint64_t v30 = (void (*)(uint64_t, void, uint64_t))(*(void *)(*(void *)v23 + 448)
                                                      + **(int **)(*(void *)v23 + 448));
  swift_retain();
  os_log_type_t v24 = (void *)swift_task_alloc();
  *(void *)(v0 + 2272) = v24;
  void *v24 = v0;
  v24[1] = sub_2613F1F4C;
  uint64_t v25 = *(unsigned __int8 *)(v0 + 270);
  v30(v25, 0, 1);
}

uint64_t sub_2613F1F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 2280) = v2;
  swift_task_dealloc();
  swift_release();
  if (v2)
  {
    uint64_t v7 = sub_2613F356C;
  }
  else
  {
    *(void *)(v6 + 2288) = a2;
    *(void *)(v6 + 2296) = a1;
    uint64_t v7 = sub_2613F2098;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_2613F2098()
{
  uint64_t v1 = *(void *)(v0 + 2288);
  if (*(void *)(v0 + 2296))
  {
    uint64_t v2 = *(void *)(v0 + 2296);
  }
  else
  {
    uint64_t v1 = 0;
    uint64_t v2 = MEMORY[0x263F8EE78];
  }
  unint64_t v3 = *(void *)(v2 + 16);
  uint64_t v188 = (id *)(v0 + 1424);
  if (v3)
  {
    uint64_t v187 = v1;
    uint64_t v4 = (char *)(v0 + 271);
    uint64_t v5 = (void *)MEMORY[0x263F8EED0];
    if (*(unsigned char *)(v0 + 271) == 1)
    {
      int v183 = *(_DWORD *)(v0 + 140);
      uint64_t v6 = *(void **)(*(void *)(v0 + 2000) + *(void *)(v0 + 2176));
      uint64_t v7 = *(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v6) + 0xD0);
      uint64_t v8 = v6;
      uint64_t v9 = v7();

      uint64_t v10 = sub_2613F36A8(v9, v2);
      uint64_t v11 = (void *)sub_2613EC44C(v10);
      swift_bridgeObjectRelease();
      *(unsigned char *)(v0 + 2464) = 1;
      *(unsigned char *)(v0 + 2472) = 1;
      *(unsigned char *)(v0 + 2480) = 1;
      *(unsigned char *)(v0 + 2488) = 1;
      *(unsigned char *)(v0 + 2496) = 1;
      *(unsigned char *)(v0 + 2504) = 1;
      *(unsigned char *)(v0 + 2512) = 1;
      char v181 = *(unsigned char *)(v0 + 2464);
      char v12 = *(unsigned char *)(v0 + 2472);
      char v13 = *(unsigned char *)(v0 + 2480);
      char v14 = *(unsigned char *)(v0 + 2488);
      char v15 = *(unsigned char *)(v0 + 2496);
      char v16 = *(unsigned char *)(v0 + 2504);
      char v17 = *(unsigned char *)(v0 + 2512);
      id v18 = v11;
      unsigned int v19 = objc_msgSend(v18, sel_frameLength);
      uint64_t v20 = v183 + v19;
      if (__CFADD__(v183, v19))
      {
        __break(1u);
      }
      else
      {
        char v176 = v13;
        char v180 = v15;
        uint64_t v21 = *(void *)(v0 + 2184);
        BOOL v184 = v21 > v20;
        if (v21 <= v20)
        {
          int v174 = 0;
          char v173 = 1;
          goto LABEL_38;
        }
        int v22 = *(_DWORD *)(v0 + 140);
        unsigned int v23 = objc_msgSend(v18, sel_frameLength);
        if (!__CFADD__(v22, v23))
        {
          char v173 = 0;
          int v174 = v22 + v23;
LABEL_38:
          BOOL v74 = v21 <= v20;
          uint64_t v75 = *(void *)(v0 + 2032);
          uint64_t v76 = *(void *)(v0 + 2024);
          uint64_t v77 = *(void *)(v0 + 2016);
          *(void *)(v0 + 16) = v18;
          *(void *)(v0 + 24) = v187;
          *(_WORD *)(v0 + 32) = 0;
          *(void *)(v0 + 40) = 0;
          *(unsigned char *)(v0 + 48) = 1;
          *(void *)(v0 + 56) = 0;
          *(unsigned char *)(v0 + 64) = 1;
          *(void *)(v0 + 72) = 0;
          *(unsigned char *)(v0 + 80) = 1;
          *(void *)(v0 + 88) = 0;
          *(unsigned char *)(v0 + 96) = 1;
          *(void *)(v0 + 104) = 0;
          *(unsigned char *)(v0 + 112) = 1;
          *(void *)(v0 + 120) = 0;
          *(unsigned char *)(v0 + 128) = 1;
          *(_DWORD *)(v0 + 132) = 0;
          *(unsigned char *)(v0 + 136) = 1;
          *(unsigned char *)(v0 + 137) = 1;
          *(unsigned char *)(v0 + 138) = v74;
          sub_2614D57B8();
          (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v75, v77);
          *(void *)(v0 + 144) = v18;
          *(void *)(v0 + 152) = v187;
          *(_WORD *)(v0 + 160) = 0;
          *(void *)(v0 + 168) = 0;
          *(unsigned char *)(v0 + 176) = v181;
          *(void *)(v0 + 184) = 0;
          *(unsigned char *)(v0 + 192) = v12;
          *(void *)(v0 + 200) = 0;
          *(unsigned char *)(v0 + 208) = v176;
          *(void *)(v0 + 216) = 0;
          *(unsigned char *)(v0 + 224) = v14;
          *(void *)(v0 + 232) = 0;
          *(unsigned char *)(v0 + 240) = v180;
          *(void *)(v0 + 248) = 0;
          *(unsigned char *)(v0 + 256) = v16;
          *(_DWORD *)(v0 + 260) = 0;
          *(unsigned char *)(v0 + 264) = v17;
          *(unsigned char *)(v0 + 265) = 1;
          *(unsigned char *)(v0 + 266) = v173;
          sub_2613F4810((id *)(v0 + 144));
          sub_2613F47A8((uint64_t)v188, v0 + 528);
          sub_2613F47A8(v0 + 528, (uint64_t)v188);
          uint64_t v78 = *(void *)(v0 + 2256);
          *(_DWORD *)(v0 + 140) = v174;
          uint64_t v4 = (char *)(v0 + 271);
          char v79 = v184;
          goto LABEL_45;
        }
      }
      __break(1u);
      goto LABEL_69;
    }
    long long v186 = (id *)(v0 + 1552);
    uint64_t v43 = *(void *)(v0 + 2208);
    uint64_t v44 = *(void *)(v0 + 2128);
    uint64_t v45 = *(void *)(v0 + 2000);
    (*(void (**)(uint64_t))((*MEMORY[0x263F8EED0] & **(void **)(v0 + 2136)) + 0x170))(v2);
    (*(void (**)(void))(*(void *)v44 + 168))();
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v45 + v43) == 1)
    {
      uint64_t v182 = *(void *)(v0 + 2256);
      uint64_t v46 = *(void **)(*(void *)(v0 + 2000) + *(void *)(v0 + 2176));
      uint64_t v47 = *(uint64_t (**)(void))((*v5 & *v46) + 0xD0);
      swift_bridgeObjectRetain();
      uint64_t v48 = v46;
      uint64_t v49 = v47();

      uint64_t v50 = sub_2613F36A8(v49, v2);
      uint64_t v51 = (void *)sub_2613EC44C(v50);
      swift_bridgeObjectRelease();
      *(unsigned char *)(v0 + 2400) = 1;
      *(unsigned char *)(v0 + 2408) = 1;
      *(unsigned char *)(v0 + 2416) = 1;
      *(unsigned char *)(v0 + 2424) = 1;
      *(unsigned char *)(v0 + 2432) = 1;
      *(unsigned char *)(v0 + 2440) = 1;
      *(unsigned char *)(v0 + 2448) = 1;
      if (__ROR8__(0xAAAAAAAAAAAAAAABLL * v182, 3) < 0xAAAAAAAAAAAAAABuLL)
      {
        uint64_t v56 = v0 + 1424;
        sub_2613F4810(v188);
        *(void *)(v0 + 656) = v51;
        *(void *)(v0 + 664) = v187;
        *(_WORD *)(v0 + 672) = 0;
        *(void *)(v0 + 680) = 0;
        *(unsigned char *)(v0 + 688) = *(unsigned char *)(v0 + 2400);
        *(void *)(v0 + 696) = 0;
        *(unsigned char *)(v0 + 704) = *(unsigned char *)(v0 + 2408);
        *(void *)(v0 + 712) = 0;
        *(unsigned char *)(v0 + 720) = *(unsigned char *)(v0 + 2416);
        *(void *)(v0 + 728) = 0;
        *(unsigned char *)(v0 + 736) = *(unsigned char *)(v0 + 2424);
        *(void *)(v0 + 744) = 0;
        *(unsigned char *)(v0 + 752) = *(unsigned char *)(v0 + 2432);
        *(void *)(v0 + 760) = 0;
        *(unsigned char *)(v0 + 768) = *(unsigned char *)(v0 + 2440);
        *(_DWORD *)(v0 + 772) = 0;
        *(unsigned char *)(v0 + 776) = *(unsigned char *)(v0 + 2448);
        *(_WORD *)(v0 + 777) = 0;
        nullsub_1(v0 + 656);
        uint64_t v57 = (id *)(v0 + 1552);
        uint64_t v73 = sub_2613F47A8(v0 + 656, (uint64_t)v186);
        uint64_t v4 = (char *)(v0 + 271);
      }
      else
      {
        uint64_t v52 = v2;
        os_log_type_t v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2160);
        uint64_t v54 = *(void *)(v0 + 2096);
        uint64_t v55 = *(void *)(v0 + 2072);
        sub_2613C2540(*(void *)(v0 + 2000) + *(void *)(v0 + 2152), v55, &qword_26A914C50);
        uint64_t v56 = v0 + 1424;
        uint64_t v57 = (id *)(v0 + 1552);
        if (v53(v55, 1, v54))
        {
          uint64_t v58 = *(void *)(v0 + 2072);

          sub_2613CC6A0(v58, &qword_26A914C50);
          uint64_t v59 = 1;
        }
        else
        {
          uint64_t v80 = *(void *)(v0 + 2112);
          uint64_t v81 = *(void *)(v0 + 2104);
          uint64_t v82 = *(void *)(v0 + 2096);
          uint64_t v83 = *(void *)(v0 + 2072);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16))(v80, v83, v82);
          id v84 = v51;
          sub_2613CC6A0(v83, &qword_26A914C50);
          *(void *)(v0 + 400) = v84;
          *(void *)(v0 + 408) = v187;
          *(_WORD *)(v0 + 416) = 0;
          *(void *)(v0 + 424) = 0;
          *(unsigned char *)(v0 + 432) = *(unsigned char *)(v0 + 2400);
          *(void *)(v0 + 440) = 0;
          *(unsigned char *)(v0 + 448) = *(unsigned char *)(v0 + 2408);
          *(void *)(v0 + 456) = 0;
          *(unsigned char *)(v0 + 464) = *(unsigned char *)(v0 + 2416);
          *(void *)(v0 + 472) = 0;
          *(unsigned char *)(v0 + 480) = *(unsigned char *)(v0 + 2424);
          *(void *)(v0 + 488) = 0;
          *(unsigned char *)(v0 + 496) = *(unsigned char *)(v0 + 2432);
          *(void *)(v0 + 504) = 0;
          *(unsigned char *)(v0 + 512) = *(unsigned char *)(v0 + 2440);
          *(_DWORD *)(v0 + 516) = 0;
          *(unsigned char *)(v0 + 520) = *(unsigned char *)(v0 + 2448);
          *(_WORD *)(v0 + 521) = 0;
          sub_2614D57B8();

          uint64_t v85 = v82;
          uint64_t v56 = v0 + 1424;
          (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v85);
          uint64_t v59 = 0;
        }
        uint64_t v86 = *(void *)(v0 + 2008);
        (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)(v0 + 2024) + 56))(v86, v59, 1, *(void *)(v0 + 2016));
        sub_2613CC6A0(v86, &qword_26A914CD8);
        uint64_t v73 = sub_2613F47A8(v56, (uint64_t)v186);
        uint64_t v4 = (char *)(v0 + 271);
        uint64_t v2 = v52;
      }
    }
    else
    {
      uint64_t v62 = *(void **)(*(void *)(v0 + 2000) + *(void *)(v0 + 2176));
      uint64_t v63 = *(uint64_t (**)(void))((*v5 & *v62) + 0xD0);
      swift_bridgeObjectRetain();
      uint64_t v64 = v62;
      unint64_t v65 = v63();

      uint64_t v56 = v0 + 1424;
      if ((v65 & 0x8000000000000000) != 0)
      {
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
        goto LABEL_71;
      }
      if (v3 >= v65) {
        unint64_t v66 = v3 - v65;
      }
      else {
        unint64_t v66 = 0;
      }
      unint64_t v67 = *(void *)(v2 + 16);
      BOOL v68 = v67 >= v66 && v67 >= v3;
      uint64_t v57 = (id *)(v0 + 1552);
      if (!v68) {
        goto LABEL_70;
      }
      uint64_t v69 = *(void *)(v0 + 2184);
      sub_2613EC158(v2, v2 + 32, v66, (2 * v3) | 1);
      swift_bridgeObjectRelease();
      uint64_t v70 = *(void *)(*(void *)(v0 + 1960) + 16);
      if (v70 > 2 * v69)
      {
        uint64_t v71 = *(void *)(v0 + 2184);
        unint64_t v72 = v70 - 2 * v71;
        if (__OFSUB__(v70, 2 * v71))
        {
LABEL_71:
          __break(1u);
          goto LABEL_72;
        }
        if (v72)
        {
          if ((v72 & 0x8000000000000000) != 0)
          {
LABEL_72:
            __break(1u);
            goto LABEL_73;
          }
          if (v70 < v72)
          {
LABEL_73:
            __break(1u);
            return sub_2614D5D58();
          }
          sub_2613EC2F0(0, v72);
        }
      }
      uint64_t v73 = sub_2613F47A8((uint64_t)v188, (uint64_t)v186);
    }
    if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(void *)(v0 + 2256), 3) >= 0xAAAAAAAAAAAAAABuLL)
    {
      swift_bridgeObjectRelease();
      sub_2613F47A8((uint64_t)v57, v56);
      char v79 = 0;
LABEL_44:
      uint64_t v78 = *(void *)(v0 + 2256);
LABEL_45:
      *uint64_t v4 = v79;
      *(void *)(v0 + 2224) = v78;
      uint64_t v87 = *(void **)(*(void *)(v0 + 2000) + *(void *)(v0 + 2192));
      *(void *)(v0 + 2232) = v87;
      uint64_t v88 = *v87 + 96;
      *(void *)(v0 + 2240) = *(void *)v88;
      *(void *)(v0 + 2248) = v88 & 0xFFFFFFFFFFFFLL | 0xC0DA000000000000;
      swift_retain();
      uint64_t v89 = sub_2613F1AA0;
      uint64_t v90 = v87;
      uint64_t v91 = 0;
      return MEMORY[0x270FA2498](v89, v90, v91);
    }
    uint64_t v92 = v56;
    uint64_t v93 = *(void *)(v0 + 2280);
    uint64_t v94 = *(void *)(v0 + 2144);
    (*(void (**)(uint64_t))(**(void **)(v0 + 2128) + 176))(v73);
    uint64_t v95 = (*(uint64_t (**)(void))(*(void *)v94 + 128))();
    if (v93)
    {
      uint64_t v96 = *(void *)(v0 + 2120);
      uint64_t v97 = *(void *)(v0 + 2104);
      uint64_t v98 = *(void *)(v0 + 2096);

      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      sub_2613F4810(v57);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v96, v98);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v60 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_18;
    }
    uint64_t v99 = v95;
    uint64_t v100 = v0 + 1680;
    uint64_t v101 = *(void *)(v0 + 2216);
    uint64_t v102 = *(void *)(v0 + 2000);
    swift_bridgeObjectRelease();
    __int16 v103 = (*(uint64_t (**)(uint64_t, float))(*(void *)v102 + 608))(v99, *(float *)(v102 + v101));
    uint64_t v105 = v104;
    int v107 = v106;
    swift_bridgeObjectRelease();
    if ((v103 & 1) == 0)
    {
      if ((v103 & 0x100) != 0)
      {
        uint64_t v143 = *(void *)(v0 + 2176);
        uint64_t v172 = *(void *)(v0 + 2032);
        uint64_t v178 = *(void *)(v0 + 2024);
        uint64_t v179 = *(void *)(v0 + 2016);
        uint64_t v144 = v105;
        uint64_t v145 = *(void *)(v0 + 2000);
        *(unsigned char *)(v145 + *(void *)(v0 + 2208)) = 0;
        int v146 = *(void **)(v145 + v143);
        char v147 = (uint64_t *)MEMORY[0x263F8EED0];
        char v148 = *(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v146) + 0xD0);
        char v149 = v146;
        uint64_t v150 = v148();

        uint64_t v151 = sub_2613F36A8(v150, v2);
        char v152 = (void *)sub_2613EC44C(v151);
        swift_bridgeObjectRelease();
        type metadata accessor for VARequestContext(0);
        int v153 = *(void **)(v145 + v143);
        uint64_t v154 = v92;
        uint64_t v155 = *(double (**)(void))((*v147 & *v153) + 0x1B0);
        uint64_t v156 = v153;
        double v157 = v155();

        char v158 = *(void **)(v145 + v143);
        uint64_t v159 = *v147;
        uint64_t v56 = v154;
        char v160 = *(uint64_t (**)(void))((v159 & *v158) + 0xA0);
        char v161 = v158;
        uint64_t v162 = v160();

        uint64_t v163 = sub_2613FD6C4(v187, v157 * (double)v144 / (double)v162);
        *(void *)(v0 + 784) = v152;
        *(void *)(v0 + 792) = v187;
        *(_WORD *)(v0 + 800) = 256;
        *(void *)(v0 + 808) = 0;
        *(unsigned char *)(v0 + 816) = 1;
        *(void *)(v0 + 824) = v163;
        *(unsigned char *)(v0 + 832) = 0;
        *(void *)(v0 + 840) = 0;
        *(unsigned char *)(v0 + 848) = 1;
        *(void *)(v0 + 856) = 0;
        *(unsigned char *)(v0 + 864) = 1;
        *(void *)(v0 + 872) = 0;
        *(unsigned char *)(v0 + 880) = 1;
        *(void *)(v0 + 888) = 0;
        *(unsigned char *)(v0 + 896) = 1;
        *(_DWORD *)(v0 + 900) = v107;
        *(unsigned char *)(v0 + 904) = 0;
        *(_WORD *)(v0 + 905) = 0;
        id v164 = v152;
        sub_2614D57B8();
        sub_2613F4810(v186);
        (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v172, v179);
        *(void *)(v0 + 912) = v164;
        *(void *)(v0 + 920) = v187;
        char v79 = 1;
        *(_WORD *)(v0 + 928) = 256;
        *(void *)(v0 + 936) = 0;
        *(unsigned char *)(v0 + 944) = 1;
        *(void *)(v0 + 952) = v163;
        uint64_t v100 = v0 + 1680;
        *(unsigned char *)(v0 + 960) = 0;
        *(void *)(v0 + 968) = 0;
        *(unsigned char *)(v0 + 976) = 1;
        *(void *)(v0 + 984) = 0;
        *(unsigned char *)(v0 + 992) = 1;
        *(void *)(v0 + 1000) = 0;
        *(unsigned char *)(v0 + 1008) = 1;
        *(void *)(v0 + 1016) = 0;
        *(unsigned char *)(v0 + 1024) = 1;
        *(_DWORD *)(v0 + 1028) = v107;
        *(unsigned char *)(v0 + 1032) = 0;
        *(_WORD *)(v0 + 1033) = 0;
        sub_2613F4810((id *)(v0 + 912));
        sub_2613F47A8(v0 + 1040, v0 + 1680);
        uint64_t v4 = (char *)(v0 + 271);
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_2613F47A8((uint64_t)v57, v0 + 1808);
        if (sub_2613F49D4((uint64_t *)(v0 + 1808)) == 1)
        {
          uint64_t v108 = (uint64_t)v57;
        }
        else
        {
          uint64_t v165 = *(void *)(v0 + 2032);
          uint64_t v166 = *(void *)(v0 + 2024);
          uint64_t v167 = *(void *)(v0 + 2016);
          long long v168 = *(_OWORD *)(v0 + 1888);
          *(_OWORD *)(v0 + 1232) = *(_OWORD *)(v0 + 1872);
          *(_OWORD *)(v0 + 1248) = v168;
          *(_OWORD *)(v0 + 1264) = *(_OWORD *)(v0 + 1904);
          *(_OWORD *)(v0 + 1275) = *(_OWORD *)(v0 + 1915);
          long long v169 = *(_OWORD *)(v0 + 1824);
          *(_OWORD *)(v0 + 1168) = *(_OWORD *)(v0 + 1808);
          *(_OWORD *)(v0 + 1184) = v169;
          long long v170 = *(_OWORD *)(v0 + 1856);
          *(_OWORD *)(v0 + 1200) = *(_OWORD *)(v0 + 1840);
          *(_OWORD *)(v0 + 1216) = v170;
          sub_2614D57B8();
          uint64_t v171 = v165;
          uint64_t v100 = v0 + 1680;
          (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v171, v167);
          uint64_t v108 = v0 + 1040;
        }
        sub_2613F47A8(v108, v0 + 1680);
        char v79 = 0;
        uint64_t v4 = (char *)(v0 + 271);
      }
      goto LABEL_66;
    }
    uint64_t v109 = *(void *)(v0 + 2208);
    uint64_t v110 = *(void *)(v0 + 2184);
    uint64_t v111 = *(void *)(v0 + 2000);
    swift_bridgeObjectRelease();
    *(unsigned char *)(v111 + v109) = 1;
    uint64_t v112 = swift_bridgeObjectRetain();
    uint64_t v113 = (void *)sub_2613EC44C(v112);
    swift_bridgeObjectRelease_n();
    *(void *)(v0 + 1960) = MEMORY[0x263F8EE78];
    uint64_t v177 = v113;
    if (objc_msgSend(v113, sel_frameLength) == 2 * v110) {
      uint64_t v114 = 24;
    }
    else {
      uint64_t v114 = 0;
    }
    uint64_t v89 = (uint64_t (*)())type metadata accessor for VARequestContext(0);
    if (__OFADD__(v114, v105))
    {
      __break(1u);
    }
    else
    {
      uint64_t v115 = *(void *)(v0 + 2176);
      uint64_t v116 = *(void *)(v0 + 2000);
      uint64_t v117 = *(void **)(v116 + v115);
      unint64_t v118 = (void *)MEMORY[0x263F8EED0];
      uint64_t v119 = *(double (**)(void))((*MEMORY[0x263F8EED0] & *v117) + 0x1B0);
      uint64_t v120 = v117;
      double v121 = v119();

      unint64_t v122 = *(void **)(v116 + v115);
      uint64_t v123 = *(uint64_t (**)(void))((*v118 & *v122) + 0xA0);
      uint64_t v124 = v122;
      uint64_t v125 = v123();

      uint64_t v89 = (uint64_t (*)())sub_2613FD6C4(v187, v121 * (double)(v114 + v105) / (double)v125);
      *(unsigned char *)(v0 + 2456) = 0;
      *(unsigned char *)(v0 + 2392) = 1;
      *(unsigned char *)(v0 + 2312) = 1;
      *(unsigned char *)(v0 + 2320) = 1;
      unint64_t v126 = v114 + 24 - v105;
      if (!__OFSUB__(v114 + 24, v105))
      {
        if ((v126 & 0x8000000000000000) != 0) {
          return sub_2614D5D58();
        }
        uint64_t v127 = v89;
        unint64_t v128 = *(void **)(*(void *)(v0 + 2000) + *(void *)(v0 + 2176));
        unint64_t v129 = *(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v128) + 0xD0);
        id v130 = v177;
        uint64_t v131 = v128;
        unint64_t v132 = v129();

        if ((v132 & 0x8000000000000000) != 0) {
          return sub_2614D5D58();
        }
        if (is_mul_ok(v126, v132))
        {
          unint64_t v133 = v126 * v132;
          uint64_t v134 = *(void *)(v0 + 2176);
          uint64_t v135 = *(void *)(v0 + 2032);
          uint64_t v136 = *(void *)(v0 + 2024);
          uint64_t v175 = *(void *)(v0 + 2016);
          uint64_t v137 = *(void *)(v0 + 2000);
          *(unsigned char *)(v0 + 2336) = 0;
          uint64_t v138 = *(void **)(v137 + v134);
          uint64_t v139 = *(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v138) + 0xA0);
          uint64_t v140 = v138;
          uint64_t v141 = v139();

          *(unsigned char *)(v0 + 2304) = 0;
          *(unsigned char *)(v0 + 2328) = 0;
          *(unsigned char *)(v0 + 2520) = 0;
          *(unsigned char *)(v0 + 2344) = 1;
          *(unsigned char *)(v0 + 2352) = 0;
          *(unsigned char *)(v0 + 2360) = 0;
          *(unsigned char *)(v0 + 2368) = 1;
          *(unsigned char *)(v0 + 2376) = 1;
          *(unsigned char *)(v0 + 2384) = 0;
          *(void *)(v0 + 272) = v130;
          *(void *)(v0 + 280) = v187;
          *(_WORD *)(v0 + 288) = 1;
          *(void *)(v0 + 296) = v127;
          *(unsigned char *)(v0 + 304) = *(unsigned char *)(v0 + 2520);
          *(void *)(v0 + 312) = 0;
          double v142 = (double)v133 / (double)v141;
          *(unsigned char *)(v0 + 320) = *(unsigned char *)(v0 + 2344);
          *(void *)(v0 + 328) = v133;
          *(unsigned char *)(v0 + 336) = *(unsigned char *)(v0 + 2352);
          *(double *)(v0 + 344) = v142;
          *(unsigned char *)(v0 + 352) = *(unsigned char *)(v0 + 2360);
          *(void *)(v0 + 360) = 0;
          *(unsigned char *)(v0 + 368) = *(unsigned char *)(v0 + 2368);
          *(void *)(v0 + 376) = 0;
          *(unsigned char *)(v0 + 384) = *(unsigned char *)(v0 + 2376);
          *(_DWORD *)(v0 + 388) = v107;
          *(unsigned char *)(v0 + 392) = *(unsigned char *)(v0 + 2384);
          *(_WORD *)(v0 + 393) = 0;
          sub_2614D57B8();
          (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v135, v175);
          *(void *)(v0 + 1296) = v130;
          *(void *)(v0 + 1304) = v187;
          *(_WORD *)(v0 + 1312) = 1;
          *(void *)(v0 + 1320) = v127;
          *(unsigned char *)(v0 + 1328) = *(unsigned char *)(v0 + 2456);
          *(void *)(v0 + 1336) = 0;
          *(unsigned char *)(v0 + 1344) = *(unsigned char *)(v0 + 2392);
          *(void *)(v0 + 1352) = v133;
          *(unsigned char *)(v0 + 1360) = *(unsigned char *)(v0 + 2336);
          *(double *)(v0 + 1368) = v142;
          *(unsigned char *)(v0 + 1376) = *(unsigned char *)(v0 + 2304);
          *(void *)(v0 + 1384) = 0;
          *(unsigned char *)(v0 + 1392) = *(unsigned char *)(v0 + 2312);
          *(void *)(v0 + 1400) = 0;
          *(unsigned char *)(v0 + 1408) = *(unsigned char *)(v0 + 2320);
          *(_DWORD *)(v0 + 1412) = v107;
          *(unsigned char *)(v0 + 1416) = *(unsigned char *)(v0 + 2328);
          *(_WORD *)(v0 + 1417) = 0;
          sub_2613F4810((id *)(v0 + 1296));
          uint64_t v100 = v0 + 1680;
          sub_2613F47A8((uint64_t)v186, v0 + 1680);
          char v79 = 0;
          uint64_t v4 = (char *)(v0 + 271);
          uint64_t v56 = v0 + 1424;
LABEL_66:
          sub_2613F47A8(v100, v56);
          goto LABEL_44;
        }
LABEL_77:
        __break(1u);
        return MEMORY[0x270FA2498](v89, v90, v91);
      }
    }
    __break(1u);
    goto LABEL_77;
  }
  uint64_t v24 = *(void *)(v0 + 2064);
  uint64_t v25 = *(void *)(v0 + 2048);
  uint64_t v26 = *(void *)(v0 + 2040);
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_26146718C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v24, v27, v26);
  uint64_t v28 = sub_2614D50A8();
  os_log_type_t v29 = sub_2614D5968();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v31 = *(void **)(v0 + 2136);
  uint64_t v32 = *(void *)(v0 + 2120);
  uint64_t v33 = *(void *)(v0 + 2104);
  uint64_t v34 = *(void *)(v0 + 2096);
  uint64_t v35 = *(void *)(v0 + 2064);
  uint64_t v36 = *(void *)(v0 + 2048);
  uint64_t v37 = *(void *)(v0 + 2040);
  if (v30)
  {
    uint64_t v185 = *(void *)(v0 + 2040);
    uint64_t v38 = *(void *)(v0 + 2064);
    uint64_t v39 = *(void *)(v0 + 2096);
    uint64_t v40 = *(void *)(v0 + 2120);
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v41 = 0;
    _os_log_impl(&dword_2613B8000, v28, v29, "processing was stopped, stop predictions", v41, 2u);
    int v42 = v41;
    uint64_t v32 = v40;
    uint64_t v34 = v39;
    uint64_t v35 = v38;
    uint64_t v37 = v185;
    MEMORY[0x263E38060](v42, -1, -1);
    swift_release();

    swift_release();
  }
  else
  {

    swift_release();
    swift_release();
  }
  sub_2613F4810(v188);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v60 = *(uint64_t (**)(void))(v0 + 8);
LABEL_18:
  return v60();
}

uint64_t sub_2613F356C()
{
  uint64_t v1 = *(void *)(v0 + 2120);
  uint64_t v2 = *(void *)(v0 + 2104);
  uint64_t v3 = *(void *)(v0 + 2096);

  swift_release();
  swift_release();
  sub_2613F4810((id *)(v0 + 1424));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_2613F36A8(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v3 = result;
  if (!result)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  if (*(void *)(a2 + 16) >= result) {
    int64_t v4 = result;
  }
  else {
    int64_t v4 = *(void *)(a2 + 16);
  }
  uint64_t v22 = MEMORY[0x263F8EE78];
  sub_2613D917C(0, v4, 0);
  uint64_t v5 = v22;
  uint64_t v6 = *(void *)(a2 + 16);
  if (!v6) {
    goto LABEL_30;
  }
  unint64_t result = swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  unint64_t v8 = 0;
  uint64_t v9 = v6 - 2;
  do
  {
    uint64_t v10 = (_DWORD *)(v22 + 32);
    unint64_t v11 = v8;
LABEL_9:
    if (v11 >= *(void *)(a2 + 16)) {
      goto LABEL_38;
    }
    int v12 = *(_DWORD *)(a2 + 32 + 4 * v11);
    unint64_t v8 = v11 + 1;
    unint64_t v13 = *(void *)(v22 + 16);
    if ((uint64_t)v13 < v3)
    {
LABEL_23:
      unint64_t v15 = *(void *)(v22 + 24);
      unint64_t v16 = v13 + 1;
      if (v13 >= v15 >> 1)
      {
        uint64_t v20 = v9;
        unint64_t result = sub_2613D917C(v15 > 1, v13 + 1, 1);
        unint64_t v16 = v13 + 1;
        uint64_t v9 = v20;
      }
      *(void *)(v22 + 16) = v16;
      *(_DWORD *)(v22 + 4 * v13 + 32) = v12;
    }
    else
    {
      if (v7 >= v13) {
        goto LABEL_39;
      }
      v10[v7++] = v12;
      if (v7 >= v3)
      {
        if (v8 == v6)
        {
LABEL_29:
          swift_bridgeObjectRelease();
          goto LABEL_30;
        }
        while (v11 + 1 < *(void *)(a2 + 16))
        {
          int v12 = *(_DWORD *)(a2 + 36 + 4 * v11);
          unint64_t v13 = *(void *)(v22 + 16);
          if ((uint64_t)v13 < v3)
          {
            uint64_t v7 = 0;
            unint64_t v8 = v11 + 2;
            goto LABEL_23;
          }
          *uint64_t v10 = v12;
          if (v3 > 1)
          {
            uint64_t v7 = 1;
            BOOL v14 = v9 == v11;
            v11 += 2;
            if (!v14) {
              goto LABEL_9;
            }
            swift_bridgeObjectRelease();
            uint64_t v7 = 1;
            goto LABEL_33;
          }
          if (v6 - 1 == ++v11) {
            goto LABEL_29;
          }
        }
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
    }
  }
  while (v8 != v6);
  swift_bridgeObjectRelease();
  if (!v7)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    return v5;
  }
LABEL_33:
  int64_t v17 = *(void *)(v22 + 16);
  uint64_t v21 = MEMORY[0x263F8EE78];
  unint64_t result = sub_2613D917C(0, v17, 0);
  if (v17 < v7) {
    goto LABEL_41;
  }
  if ((v7 & 0x8000000000000000) == 0)
  {
    unint64_t v18 = *(void *)(v22 + 16);
    if (v18 >= v7 && v18 >= v17)
    {
      uint64_t v19 = swift_retain();
      sub_2613F483C(v19, v22 + 32, v7, (2 * v17) | 1);
      swift_bridgeObjectRelease();
      swift_release();
      sub_2613F483C(v22, v22 + 32, 0, (2 * v7) | 1);
      swift_release();
      return v21;
    }
    goto LABEL_43;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_2613F3958(uint64_t a1, float a2)
{
  uint64_t v5 = sub_2614D50C8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v7);
  int v12 = (char *)&v26 - v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v14 = 0;
    while (1)
    {
      uint64_t v15 = v14 + 3;
      if (__OFADD__(v14, 3)) {
        uint64_t v15 = 0x7FFFFFFFFFFFFFFFLL;
      }
      if (v14 < 0) {
        break;
      }
      if (v14 + 1 >= v13) {
        goto LABEL_23;
      }
      if (v14 + 2 >= v13) {
        goto LABEL_24;
      }
      float v16 = (float)((float)((float)(*(float *)(a1 + 32 + 4 * v14) + 0.0) + *(float *)(a1 + 32 + 4 * (v14 + 1)))
                  + *(float *)(a1 + 32 + 4 * (v14 + 2)))
          / 3.0;
      int v17 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_speechInProgress);
      if (v17 == 1)
      {
        if (v16 > a2)
        {
          uint64_t v24 = sub_26146718C();
          (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v12, v24, v5);
          uint64_t v19 = sub_2614D50A8();
          os_log_type_t v25 = sub_2614D5968();
          if (os_log_type_enabled(v19, v25))
          {
            uint64_t v21 = swift_slowAlloc();
            *(_DWORD *)uint64_t v21 = 134218240;
            double v27 = v16;
            sub_2614D5B58();
            *(_WORD *)(v21 + 12) = 2048;
            double v27 = a2;
            sub_2614D5B58();
            _os_log_impl(&dword_2613B8000, v19, v25, "SpeechDetector: Pending Speech stopped, silence probability %f > %f", (uint8_t *)v21, 0x16u);
            int v22 = 256;
LABEL_17:
            int v23 = v17 ^ 1;
            MEMORY[0x263E38060](v21, -1, -1);
          }
          else
          {
            int v23 = 0;
            int v22 = 256;
          }
          goto LABEL_20;
        }
      }
      else if (v16 < a2)
      {
        uint64_t v18 = sub_26146718C();
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v18, v5);
        uint64_t v19 = sub_2614D50A8();
        os_log_type_t v20 = sub_2614D5968();
        if (os_log_type_enabled(v19, v20))
        {
          uint64_t v21 = swift_slowAlloc();
          *(_DWORD *)uint64_t v21 = 134218240;
          double v27 = v16;
          sub_2614D5B58();
          *(_WORD *)(v21 + 12) = 2048;
          double v27 = a2;
          sub_2614D5B58();
          _os_log_impl(&dword_2613B8000, v19, v20, "SpeechDetector: Speech started, silence probability %f < %f", (uint8_t *)v21, 0x16u);
          int v22 = 0;
          int v12 = v9;
          goto LABEL_17;
        }
        int v22 = 0;
        int v23 = 1;
        int v12 = v9;
LABEL_20:

        (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
        return v22 | v23;
      }
      uint64_t v14 = v15;
      if (v15 >= v13) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  else
  {
LABEL_14:
    int v23 = 0;
    int v22 = 0;
    return v22 | v23;
  }
  return result;
}

uint64_t VASpeechDetector.deinit()
{
  sub_2613CC6A0(v0 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_inputStream, &qword_26A914C38);
  sub_2613CC6A0(v0 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_inputStreamBuilder, &qword_26A914C40);

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_2613CC6A0(v0 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_outputAudioStream, &qword_26A914C48);
  sub_2613CC6A0(v0 + OBJC_IVAR____TtC12VoiceActions16VASpeechDetector_outputAudioStreamBuilder, &qword_26A914C50);
  return v0;
}

uint64_t VASpeechDetector.__deallocating_deinit()
{
  VASpeechDetector.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2613F3E3C()
{
  swift_unknownObjectRelease();

  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2613F3E84()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  int64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *int64_t v4 = v1;
  v4[1] = sub_2613E3EDC;
  return sub_2613F0A5C((uint64_t)v4, v5, v6, v2, v3);
}

ValueMetadata *type metadata accessor for VASpeechDetectorError()
{
  return &type metadata for VASpeechDetectorError;
}

void *initializeBufferWithCopyOfBuffer for VASpeechDetectorInput(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  return a1;
}

void destroy for VASpeechDetectorInput(id *a1)
{
}

uint64_t assignWithCopy for VASpeechDetectorInput(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for VASpeechDetectorInput(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for VASpeechDetectorInput(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VASpeechDetectorInput(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VASpeechDetectorInput()
{
  return &type metadata for VASpeechDetectorInput;
}

uint64_t initializeBufferWithCopyOfBuffer for VAEspressoModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t initializeWithCopy for VASpeechDetectorOutput(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  *(unsigned char *)(a1 + 122) = *(unsigned char *)(a2 + 122);
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for VASpeechDetectorOutput(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v7 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v9;
  uint64_t v10 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v10;
  uint64_t v11 = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 88) = v11;
  uint64_t v12 = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 104) = v12;
  LODWORD(v12) = *(_DWORD *)(a2 + 116);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(_DWORD *)(a1 + 116) = v12;
  *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
  *(unsigned char *)(a1 + 122) = *(unsigned char *)(a2 + 122);
  return a1;
}

__n128 initializeWithTake for VASpeechDetectorOutput(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(_OWORD *)(a1 + 107) = *(long long *)((char *)a2 + 107);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for VASpeechDetectorOutput(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v5;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
  *(unsigned char *)(a1 + 122) = *(unsigned char *)(a2 + 122);
  return a1;
}

uint64_t getEnumTagSinglePayload for VASpeechDetectorOutput(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 123)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VASpeechDetectorOutput(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 122) = 0;
    *(_WORD *)(result + 120) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 123) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 123) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VASpeechDetectorOutput()
{
  return &type metadata for VASpeechDetectorOutput;
}

uint64_t sub_2613F43FC()
{
  return type metadata accessor for VASpeechDetector();
}

void sub_2613F4404()
{
  sub_2613F46E8(319, &qword_26A914CB8, &qword_26A914C18);
  if (v0 <= 0x3F)
  {
    sub_2613F46E8(319, &qword_26A914CC0, &qword_26A914C20);
    if (v1 <= 0x3F)
    {
      sub_2613F46E8(319, &qword_26A914CC8, &qword_26A914C28);
      if (v2 <= 0x3F)
      {
        sub_2613F46E8(319, &qword_26A914CD0, &qword_26A914C30);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t method lookup function for VASpeechDetector(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VASpeechDetector);
}

uint64_t dispatch thunk of VASpeechDetector.__allocating_init(modelFilename:featureCount:)()
{
  return (*(uint64_t (**)(void))(v0 + 568))();
}

uint64_t dispatch thunk of VASpeechDetector.start(minimumSilenceProbability:batchMode:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 576))();
}

uint64_t dispatch thunk of VASpeechDetector.addAudio(buffer:hostTime:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 584))();
}

uint64_t dispatch thunk of VASpeechDetector.stop()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 592))();
}

void sub_2613F46E8(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_2613C5EC8(a3);
    unint64_t v4 = sub_2614D5AD8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_2613F4738()
{
  unint64_t result = qword_26A914CE8;
  if (!qword_26A914CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914CE8);
  }
  return result;
}

double sub_2613F478C(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 107) = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_2613F47A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2613C23AC(&qword_26A914CF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id *sub_2613F4810(id *a1)
{
  return a1;
}

uint64_t sub_2613F483C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = *v4;
  int64_t v8 = *(void *)(*v4 + 16);
  int64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v4 = v7;
  if (!result || v9 > *(void *)(v7 + 24) >> 1) {
    goto LABEL_8;
  }
  if (v5 == a3)
  {
    while (v6 > 0)
    {
      __break(1u);
LABEL_8:
      if (v8 <= v9) {
        int64_t v13 = v8 + v6;
      }
      else {
        int64_t v13 = v8;
      }
      uint64_t result = sub_2613D917C(result, v13, 1);
      uint64_t v7 = *v4;
      if (v5 != a3) {
        goto LABEL_12;
      }
    }
    goto LABEL_22;
  }
LABEL_12:
  uint64_t v14 = *(void *)(v7 + 16);
  if ((*(void *)(v7 + 24) >> 1) - v14 < v6) {
    goto LABEL_25;
  }
  if (v6 < 0) {
    goto LABEL_27;
  }
  uint64_t v15 = (char *)(v7 + 4 * v14 + 32);
  float v16 = (char *)(a2 + 4 * a3);
  if (v16 < &v15[4 * v6] && v15 < &v16[4 * v6]) {
    goto LABEL_27;
  }
  uint64_t result = (uint64_t)memcpy(v15, v16, 4 * v6);
  if (!v6)
  {
LABEL_22:
    *uint64_t v4 = v7;
    return result;
  }
  uint64_t v18 = *(void *)(v7 + 16);
  BOOL v19 = __OFADD__(v18, v6);
  uint64_t v20 = v18 + v6;
  if (!v19)
  {
    *(void *)(v7 + 16) = v20;
    goto LABEL_22;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = sub_2614D5DE8();
  __break(1u);
  return result;
}

uint64_t sub_2613F49D4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_2613F49F8()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2613F4A44(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2613F4A98()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_2613F4ACC(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 48) = a1;
  return result;
}

uint64_t sub_2613F4B0C()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t sub_2613F4B40(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 88) = a1;
  return result;
}

uint64_t sub_2613F4B80@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v1 + 89);
  return result;
}

uint64_t sub_2613F4BC4(char *a1)
{
  char v2 = *a1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 89) = v2;
  return result;
}

uint64_t sub_2613F4C04()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2613F4C50(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2613F4CA4()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2613F4CF0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2613F4D44()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 144);
}

uint64_t sub_2613F4D78(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 144) = a1;
  return result;
}

uint64_t sub_2613F4DB8()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 145);
}

uint64_t sub_2613F4DEC(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 145) = a1;
  return result;
}

uint64_t sub_2613F4E2C()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 146);
}

uint64_t sub_2613F4E60(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 146) = a1;
  return result;
}

uint64_t sub_2613F4EA0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v1 + 147);
  return result;
}

uint64_t sub_2613F4EE4(char *a1)
{
  char v2 = *a1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 147) = v2;
  return result;
}

uint64_t VATasrConfiguration.__allocating_init(tasrModelPath:labelModelPath:joinerModelPath:contextEncoderModelPath:vadModelFilename:silenceModelFeatureCount:useContext:vocabFilename:useEspressoV2:computeUnits:espressoV1ModelPrefix:timingEnabled:shouldWaitForAdditionalLoopForFinal:useTransducer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, char *a11, char a12, uint64_t a13, uint64_t a14, char a15, char *a16, uint64_t a17, uint64_t a18, char a19, char a20,char a21)
{
  swift_allocObject();
  uint64_t v22 = sub_2613F6C48(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t VATasrConfiguration.init(tasrModelPath:labelModelPath:joinerModelPath:contextEncoderModelPath:vadModelFilename:silenceModelFeatureCount:useContext:vocabFilename:useEspressoV2:computeUnits:espressoV1ModelPrefix:timingEnabled:shouldWaitForAdditionalLoopForFinal:useTransducer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, char *a11, char a12, uint64_t a13, uint64_t a14, char a15, char *a16, uint64_t a17, uint64_t a18, char a19, char a20,char a21)
{
  uint64_t v21 = sub_2613F6C48(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t static VATasrConfiguration.buildE23BSmallNoContext(timingEnabled:)(char a1)
{
  char v4 = 0;
  char v3 = 1;
  type metadata accessor for VATasrConfiguration();
  swift_allocObject();
  return sub_2613F6C48(0xD00000000000001ELL, 0x80000002614E1710, 0, 0, 0, 0, 0, 0, 0, 0, &v4, 0, 0, 0, 1, &v3, 0x62382D6C65646F6DLL, 0xEA00000000007469, a1,
           0,
           0);
}

uint64_t static VATasrConfiguration.buildE23BSmallContext(timingEnabled:)(char a1)
{
  char v4 = 0;
  char v3 = 1;
  type metadata accessor for VATasrConfiguration();
  swift_allocObject();
  return sub_2613F6C48(0xD00000000000001CLL, 0x80000002614E1730, 0, 0, 0, 0, 0xD000000000000023, 0x80000002614E1750, 0, 0, &v4, 1, 0, 0, 1, &v3, 0x62382D6C65646F6DLL, 0xEA00000000007469, a1,
           0,
           0);
}

uint64_t static VATasrConfiguration.buildE13BSmallNoContext(timingEnabled:)(char a1)
{
  char v4 = 0;
  char v3 = 1;
  type metadata accessor for VATasrConfiguration();
  swift_allocObject();
  return sub_2613F6C48(0xD000000000000011, 0x80000002614E1780, 0, 0, 0, 0, 0, 0, 0, 0, &v4, 0, 0, 0, 0, &v3, 0x62382D6C65646F6DLL, 0xEA00000000007469, a1,
           0,
           0);
}

uint64_t static VATasrConfiguration.buildE13BNoContext(timingEnabled:)(char a1)
{
  char v4 = 0;
  char v3 = 1;
  type metadata accessor for VATasrConfiguration();
  swift_allocObject();
  return sub_2613F6C48(0x646F6D6C6D2E6233, 0xEB00000000636C65, 0, 0, 0, 0, 0, 0, 0, 0, &v4, 0, 0, 0, 0, &v3, 0x62382D6C65646F6DLL, 0xEA00000000007469, a1,
           0,
           0);
}

uint64_t static VATasrConfiguration.buildE13BSmallContext(timingEnabled:)(char a1)
{
  char v4 = 0;
  char v3 = 1;
  type metadata accessor for VATasrConfiguration();
  swift_allocObject();
  return sub_2613F6C48(0xD000000000000019, 0x80000002614E17A0, 0, 0, 0, 0, 0xD00000000000001DLL, 0x80000002614E17C0, 0, 0, &v4, 1, 0, 0, 0, &v3, 0x62382D6C65646F6DLL, 0xEA00000000007469, a1,
           0,
           0);
}

uint64_t static VATasrConfiguration.buildE13BContext(timingEnabled:)(char a1)
{
  char v4 = 0;
  char v3 = 1;
  type metadata accessor for VATasrConfiguration();
  swift_allocObject();
  return sub_2613F6C48(0xD000000000000013, 0x80000002614E17E0, 0, 0, 0, 0, 0xD000000000000017, 0x80000002614E1800, 0, 0, &v4, 1, 0, 0, 0, &v3, 0x62382D6C65646F6DLL, 0xEA00000000007469, a1,
           0,
           0);
}

uint64_t static VATasrConfiguration.buildE1Transducer(timingEnabled:)(char a1)
{
  char v4 = 1;
  char v3 = 1;
  type metadata accessor for VATasrConfiguration();
  swift_allocObject();
  return sub_2613F6C48(0xD000000000000010, 0x80000002614E1820, 0xD000000000000016, 0x80000002614E1840, 0x6D2E72656E696F6ALL, 0xEF636C65646F6D6CLL, 0, 0, 0xD000000000000013, 0x80000002614E1860, &v4, 0, 0, 0, 0, &v3, 0x6C65646F6DLL, 0xE500000000000000, a1,
           0,
           1);
}

uint64_t static VATasrConfiguration.buildE1SmallTransducer(timingEnabled:shouldWaitForAdditionalLoopForFinal:)(char a1, char a2)
{
  char v6 = 1;
  char v5 = 1;
  type metadata accessor for VATasrConfiguration();
  swift_allocObject();
  return sub_2613F6C48(0xD000000000000016, 0x80000002614E1880, 0xD00000000000001CLL, 0x80000002614E18A0, 0xD000000000000015, 0x80000002614E18C0, 0, 0, 0xD000000000000013, 0x80000002614E1860, &v6, 0, 0, 0, 0, &v5, 0x62382D6C65646F6DLL, 0xEA00000000007469, a1,
           a2,
           1);
}

uint64_t static VATasrConfiguration.buildE1SmallFastTransducer(timingEnabled:shouldWaitForAdditionalLoopForFinal:)(char a1, char a2)
{
  char v6 = 1;
  char v5 = 1;
  type metadata accessor for VATasrConfiguration();
  swift_allocObject();
  return sub_2613F6C48(0xD00000000000001BLL, 0x80000002614E18E0, 0xD000000000000021, 0x80000002614E1900, 0xD00000000000001ALL, 0x80000002614E1930, 0, 0, 0xD000000000000013, 0x80000002614E1860, &v6, 0, 0, 0, 0, &v5, 0x62382D6C65646F6DLL, 0xEA00000000007469, a1,
           a2,
           1);
}

uint64_t static VATasrConfiguration.buildE1SmallFast1000Transducer(timingEnabled:shouldWaitForAdditionalLoopForFinal:)(char a1, char a2)
{
  char v6 = 1;
  char v5 = 1;
  type metadata accessor for VATasrConfiguration();
  swift_allocObject();
  return sub_2613F6C48(0xD000000000000020, 0x80000002614E1950, 0xD000000000000026, 0x80000002614E1980, 0xD00000000000001FLL, 0x80000002614E19B0, 0, 0, 0xD000000000000013, 0x80000002614E1860, &v6, 0, 0, 0, 0, &v5, 0x62382D6C65646F6DLL, 0xEA00000000007469, a1,
           a2,
           1);
}

uint64_t static VATasrConfiguration.buildE1SmallFast500Transducer(timingEnabled:shouldWaitForAdditionalLoopForFinal:)(char a1, char a2)
{
  char v6 = 1;
  char v5 = 1;
  type metadata accessor for VATasrConfiguration();
  swift_allocObject();
  return sub_2613F6C48(0xD00000000000001FLL, 0x80000002614E19D0, 0xD000000000000025, 0x80000002614E19F0, 0xD00000000000001ELL, 0x80000002614E1A20, 0, 0, 0xD000000000000013, 0x80000002614E1860, &v6, 0, 0, 0, 0, &v5, 0x62382D6C65646F6DLL, 0xEA00000000007469, a1,
           a2,
           1);
}

uint64_t sub_2613F5AA0()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 216))();
  if (v2)
  {
    uint64_t v5 = v1;
    swift_bridgeObjectRetain();
    sub_2614D54D8();
    swift_bridgeObjectRelease();
    return v5;
  }
  else
  {
    sub_2613DC2B8();
    swift_allocError();
    *char v4 = 0xD000000000000038;
    v4[1] = 0x80000002614E1A40;
    return swift_willThrow();
  }
}

uint64_t sub_2613F5B84()
{
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)v0 + 192))();
  swift_bridgeObjectRetain();
  sub_2614D54D8();
  swift_bridgeObjectRelease();
  return v2;
}

unint64_t sub_2613F5C0C(char a1)
{
  unint64_t result = 0x65646F4D72736174;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0x65746E6F43657375;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x6C69466261636F76;
      break;
    case 5:
      unint64_t result = 0x6572707345657375;
      break;
    case 6:
      unint64_t result = 0x55657475706D6F63;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    case 8:
      unint64_t result = 0x646F4D6C6562616CLL;
      break;
    case 9:
      unint64_t result = 0x6F4D72656E696F6ALL;
      break;
    case 10:
      unint64_t result = 0x6E45676E696D6974;
      break;
    case 11:
      unint64_t result = 0xD000000000000023;
      break;
    case 12:
      unint64_t result = 0x736E617254657375;
      break;
    case 13:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2613F5E28()
{
  return sub_2613F5C0C(*v0);
}

uint64_t sub_2613F5E30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2613F7438(a1, a2);
  *a3 = result;
  return result;
}

void sub_2613F5E58(unsigned char *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_2613F5E64(uint64_t a1)
{
  unint64_t v2 = sub_2613F6E98();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2613F5EA0(uint64_t a1)
{
  unint64_t v2 = sub_2613F6E98();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VATasrConfiguration.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t VATasrConfiguration.__deallocating_deinit()
{
  VATasrConfiguration.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2613F5F60(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2613C23AC(&qword_26A914D10);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2613DBF24(a1, a1[3]);
  sub_2613F6E98();
  uint64_t v9 = sub_2614D60F8();
  (*(void (**)(uint64_t))(*(void *)v3 + 192))(v9);
  LOBYTE(v27) = 0;
  sub_2614D5F18();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(*(void *)v3 + 216))(v10);
    LOBYTE(v27) = 1;
    sub_2614D5EF8();
    uint64_t v11 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(*(void *)v3 + 240))(v11);
    LOBYTE(v27) = 2;
    uint64_t v12 = sub_2614D5F28();
    (*(void (**)(uint64_t))(*(void *)v3 + 264))(v12);
    LOBYTE(v27) = 3;
    sub_2614D5F18();
    uint64_t v14 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(*(void *)v3 + 288))(v14);
    LOBYTE(v27) = 4;
    sub_2614D5F18();
    uint64_t v15 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(*(void *)v3 + 312))(v15);
    LOBYTE(v27) = 5;
    uint64_t v16 = sub_2614D5F28();
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v3 + 336))(&v27, v16);
    char v26 = v27;
    char v25 = 6;
    sub_2613F6EEC();
    uint64_t v17 = sub_2614D5F58();
    (*(void (**)(uint64_t))(*(void *)v3 + 360))(v17);
    LOBYTE(v27) = 7;
    sub_2614D5F18();
    uint64_t v18 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(*(void *)v3 + 384))(v18);
    LOBYTE(v27) = 8;
    sub_2614D5EF8();
    uint64_t v19 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(*(void *)v3 + 408))(v19);
    LOBYTE(v27) = 9;
    sub_2614D5EF8();
    uint64_t v20 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(*(void *)v3 + 432))(v20);
    LOBYTE(v27) = 10;
    uint64_t v21 = sub_2614D5F28();
    (*(void (**)(uint64_t))(*(void *)v3 + 456))(v21);
    LOBYTE(v27) = 11;
    uint64_t v22 = sub_2614D5F28();
    (*(void (**)(uint64_t))(*(void *)v3 + 480))(v22);
    LOBYTE(v27) = 12;
    uint64_t v23 = sub_2614D5F28();
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v3 + 504))(&v27, v23);
    char v26 = v27;
    char v25 = 13;
    sub_2613F6F40();
    sub_2614D5F58();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t VATasrConfiguration.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  VATasrConfiguration.init(from:)(a1);
  return v2;
}

uint64_t VATasrConfiguration.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v29 = sub_2613C23AC(&qword_26A914D28);
  uint64_t v5 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a1;
  uint64_t v32 = v3;
  *(_OWORD *)(v3 + 128) = 0u;
  v3 += 128;
  *(void *)(v3 - 96) = 0;
  *(_OWORD *)(v3 - 16) = 0u;
  *(void *)(v3 - 88) = 0;
  sub_2613DBF24(a1, a1[3]);
  sub_2613F6E98();
  BOOL v30 = v7;
  sub_2614D60D8();
  if (v2)
  {
    uint64_t v9 = (uint64_t)v31;
    uint64_t v27 = v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for VATasrConfiguration();
    swift_deallocPartialClassInstance();
    uint64_t v26 = v9;
  }
  else
  {
    uint64_t v28 = v5;
    char v35 = 0;
    uint64_t v8 = sub_2614D5E98();
    uint64_t v11 = v32;
    *(void *)(v32 + 16) = v8;
    *(void *)(v11 + 24) = v12;
    char v35 = 1;
    uint64_t v13 = sub_2614D5E38();
    uint64_t v15 = v14;
    swift_beginAccess();
    *(void *)(v11 + 32) = v13;
    *(void *)(v11 + 40) = v15;
    swift_bridgeObjectRelease();
    char v34 = 2;
    *(unsigned char *)(v11 + 48) = sub_2614D5EA8() & 1;
    char v34 = 3;
    *(void *)(v11 + 56) = sub_2614D5E98();
    *(void *)(v11 + 64) = v16;
    char v34 = 4;
    *(void *)(v11 + 72) = sub_2614D5E98();
    *(void *)(v11 + 80) = v17;
    char v34 = 5;
    *(unsigned char *)(v11 + 88) = sub_2614D5EA8() & 1;
    char v33 = 6;
    sub_2613F6F94();
    sub_2614D5EC8();
    *(unsigned char *)(v11 + 89) = v34;
    char v34 = 7;
    *(void *)(v11 + 96) = sub_2614D5E98();
    *(void *)(v11 + 104) = v18;
    char v34 = 8;
    uint64_t v19 = sub_2614D5E38();
    uint64_t v21 = v20;
    swift_beginAccess();
    *(void *)(v11 + 112) = v19;
    *(void *)(v11 + 120) = v21;
    swift_bridgeObjectRelease();
    char v33 = 9;
    uint64_t v22 = sub_2614D5E38();
    uint64_t v24 = v23;
    swift_beginAccess();
    uint64_t v25 = v32;
    *(void *)(v32 + 128) = v22;
    *(void *)(v25 + 136) = v24;
    swift_bridgeObjectRelease();
    char v37 = 10;
    *(unsigned char *)(v32 + 144) = sub_2614D5EA8() & 1;
    char v37 = 11;
    *(unsigned char *)(v32 + 145) = sub_2614D5EA8() & 1;
    char v37 = 12;
    *(unsigned char *)(v32 + 146) = sub_2614D5EA8() & 1;
    char v36 = 13;
    sub_2613F6FE8();
    sub_2614D5EC8();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v29);
    uint64_t v26 = (uint64_t)v31;
    uint64_t v27 = v32;
    *(unsigned char *)(v32 + 147) = v37;
  }
  sub_2613DD718(v26);
  return v27;
}

uint64_t sub_2613F6BC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 560))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_2613F6BFC()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 552))();
}

uint64_t sub_2613F6C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, char *a11, char a12, uint64_t a13, uint64_t a14, char a15, char *a16, uint64_t a17, uint64_t a18, char a19, char a20,char a21)
{
  uint64_t v22 = v21;
  uint64_t v26 = a14;
  char v34 = *a11;
  char v35 = *a16;
  *(void *)(v22 + 32) = 0;
  *(_OWORD *)(v22 + 128) = 0u;
  *(void *)(v22 + 40) = 0;
  *(_OWORD *)(v22 + 112) = 0u;
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  swift_beginAccess();
  *(void *)(v22 + 112) = a3;
  *(void *)(v22 + 120) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v22 + 128) = a5;
  *(void *)(v22 + 136) = a6;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v22 + 32) = a7;
  *(void *)(v22 + 40) = a8;
  swift_bridgeObjectRelease();
  uint64_t v27 = 0x2E454E415F444156;
  if (a10) {
    uint64_t v27 = a9;
  }
  unint64_t v28 = 0xEA00000000003565;
  if (a10) {
    unint64_t v28 = a10;
  }
  *(void *)(v22 + 56) = v27;
  *(void *)(v22 + 64) = v28;
  *(unsigned char *)(v22 + 147) = v34;
  *(unsigned char *)(v22 + 48) = a12;
  *(unsigned char *)(v22 + 88) = a15;
  *(unsigned char *)(v22 + 89) = v35;
  *(void *)(v22 + 96) = a17;
  *(void *)(v22 + 104) = a18;
  if (!a14)
  {
    swift_bridgeObjectRetain();
    sub_2614D54D8();
    a13 = a1;
    uint64_t v26 = a2;
  }
  *(void *)(v22 + 72) = a13;
  *(void *)(v22 + 80) = v26;
  *(unsigned char *)(v22 + 144) = a19 & 1;
  *(unsigned char *)(v22 + 145) = a20 & 1;
  *(unsigned char *)(v22 + 146) = a21 & 1;
  return v22;
}

uint64_t type metadata accessor for VATasrConfiguration()
{
  return self;
}

unint64_t sub_2613F6E98()
{
  unint64_t result = qword_26A918110[0];
  if (!qword_26A918110[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A918110);
  }
  return result;
}

unint64_t sub_2613F6EEC()
{
  unint64_t result = qword_26A914D18;
  if (!qword_26A914D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914D18);
  }
  return result;
}

unint64_t sub_2613F6F40()
{
  unint64_t result = qword_26A914D20;
  if (!qword_26A914D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914D20);
  }
  return result;
}

unint64_t sub_2613F6F94()
{
  unint64_t result = qword_26A914D30;
  if (!qword_26A914D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914D30);
  }
  return result;
}

unint64_t sub_2613F6FE8()
{
  unint64_t result = qword_26A914D38;
  if (!qword_26A914D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914D38);
  }
  return result;
}

uint64_t method lookup function for VATasrConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VATasrConfiguration);
}

uint64_t dispatch thunk of VATasrConfiguration.__allocating_init(tasrModelPath:labelModelPath:joinerModelPath:contextEncoderModelPath:vadModelFilename:silenceModelFeatureCount:useContext:vocabFilename:useEspressoV2:computeUnits:espressoV1ModelPrefix:timingEnabled:shouldWaitForAdditionalLoopForFinal:useTransducer:)()
{
  return (*(uint64_t (**)(void))(v0 + 528))();
}

uint64_t dispatch thunk of VATasrConfiguration.tokenizerPath.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t dispatch thunk of VATasrConfiguration.configPath.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 544))();
}

uint64_t dispatch thunk of VATasrConfiguration.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 552))();
}

uint64_t dispatch thunk of VATasrConfiguration.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 560))();
}

uint64_t getEnumTagSinglePayload for VATasrConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VATasrConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2613F72F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VATasrConfiguration.CodingKeys()
{
  return &type metadata for VATasrConfiguration.CodingKeys;
}

unint64_t sub_2613F7334()
{
  unint64_t result = qword_26A918320[0];
  if (!qword_26A918320[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A918320);
  }
  return result;
}

unint64_t sub_2613F738C()
{
  unint64_t result = qword_26A918430;
  if (!qword_26A918430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A918430);
  }
  return result;
}

unint64_t sub_2613F73E4()
{
  unint64_t result = qword_26A918438[0];
  if (!qword_26A918438[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A918438);
  }
  return result;
}

uint64_t sub_2613F7438(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65646F4D72736174 && a2 == 0xED0000687461506CLL;
  if (v2 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002614E1AE0 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65746E6F43657375 && a2 == 0xEA00000000007478 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002614E1B10 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C69466261636F76 && a2 == 0xED0000656D616E65 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6572707345657375 && a2 == 0xED000032566F7373 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x55657475706D6F63 && a2 == 0xEC0000007374696ELL || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002614E1B50 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x646F4D6C6562616CLL && a2 == 0xEE00687461506C65 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6F4D72656E696F6ALL && a2 == 0xEF687461506C6564 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6E45676E696D6974 && a2 == 0xED000064656C6261 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000002614E1BA0 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x736E617254657375 && a2 == 0xED00007265637564 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002614E1BE0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    char v6 = sub_2614D5FB8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 13;
    }
    else {
      return 14;
    }
  }
}

uint64_t sub_2613F7AC8()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceCheckEnabled);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_2613F7B10(char a1)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceCheckEnabled);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t sub_2613F7B5C()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_postSilenceCheckEnabled);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_2613F7BA4(char a1)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_postSilenceCheckEnabled);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t sub_2613F7BF0()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_duringSpeechCheckEnabled);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_2613F7C38(char a1)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_duringSpeechCheckEnabled);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t sub_2613F7C84()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_receptiveFieldLength;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_2613F7CCC(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_receptiveFieldLength);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t sub_2613F7D18()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_receptiveFieldStride;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_2613F7D60(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_receptiveFieldStride);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t sub_2613F7DAC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_overlapThreshold;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_2613F7DF4(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_overlapThreshold);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t sub_2613F7E40()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_averagingWindowSize;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_2613F7E88(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_averagingWindowSize);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t sub_2613F7ED4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceLookback;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_2613F7F1C(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceLookback);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t sub_2613F7F68()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceExpected;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_2613F7FB0(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceExpected);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

float sub_2613F7FFC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceProbability;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t sub_2613F8044(float a1)
{
  int v3 = (float *)(v1 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceProbability);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

float sub_2613F8098()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_duringCommandExpectedSpeechRatio;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t sub_2613F80E0(float a1)
{
  int v3 = (float *)(v1 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_duringCommandExpectedSpeechRatio);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

float sub_2613F8134()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_duringCommandSpeechProbability;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t sub_2613F817C(float a1)
{
  int v3 = (float *)(v1 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_duringCommandSpeechProbability);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t sub_2613F81D0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_postSilenceLookforward;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_2613F8218(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_postSilenceLookforward);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t sub_2613F8264()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_postSilenceExpected;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_2613F82AC(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_postSilenceExpected);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

float sub_2613F82F8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_postSilenceProbability;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t sub_2613F8340(float a1)
{
  int v3 = (float *)(v1 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_postSilenceProbability);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t sub_2613F8394()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_takeMaxScore);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_2613F83DC(char a1)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_takeMaxScore);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t sub_2613F8428()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_waitFrames;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_2613F8470(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_waitFrames);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

unint64_t sub_2613F84BC(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 10:
      unint64_t result = 0xD000000000000020;
      break;
    case 11:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 13:
      unint64_t result = 0xD000000000000013;
      break;
    case 15:
      unint64_t result = 0x5378614D656B6174;
      break;
    case 16:
      unint64_t result = 0x6D61724674696177;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2613F865C()
{
  return sub_2613F84BC(*v0);
}

uint64_t sub_2613F8664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2613FAB24(a1, a2);
  *a3 = result;
  return result;
}

void sub_2613F868C(unsigned char *a1@<X8>)
{
  *a1 = 17;
}

uint64_t sub_2613F8698(uint64_t a1)
{
  unint64_t v2 = sub_2613F9A18();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2613F86D4(uint64_t a1)
{
  unint64_t v2 = sub_2613F9A18();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2613F8710()
{
  return 1;
}

id static VAResultGeneratorConfiguration.buildForFixedSpotter(fixedConfig:waitFrames:)(void *a1, uint64_t a2)
{
  char v4 = *(unsigned char *)sub_261424418();
  char v5 = *(unsigned char *)sub_26142442C();
  char v6 = *(unsigned char *)sub_261424440();
  BOOL v7 = (void *)MEMORY[0x263F8EED0];
  uint64_t v8 = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *a1) + 0xF8))();
  uint64_t v9 = (*(uint64_t (**)(void))((*v7 & *a1) + 0x110))();
  id v10 = objc_allocWithZone((Class)type metadata accessor for VAResultGeneratorConfiguration());
  return sub_2613F8B58(v4, v5, v6, v8, v9, 0, 5, 50, 0.5, 0.5, 0.5, 0.5, 25, 25, 10, 1, a2);
}

id sub_2613F8850(char a1, char a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, float a9, float a10, float a11, float a12, long long a13, uint64_t a14, char a15, uint64_t a16)
{
  id v27 = objc_allocWithZone(v16);
  return sub_2613F8B58(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, *((uint64_t *)&a13 + 1), a14, a15, a16);
}

uint64_t type metadata accessor for VAResultGeneratorConfiguration()
{
  return self;
}

id _s12VoiceActions30VAResultGeneratorConfigurationC23buildForFlexibleSpotterACyFZ_0()
{
  char v0 = *(unsigned char *)sub_261479E7C();
  char v1 = *(unsigned char *)sub_261479E90();
  char v2 = *(unsigned char *)sub_261479EA4();
  id v3 = objc_allocWithZone((Class)type metadata accessor for VAResultGeneratorConfiguration());
  return sub_2613F8B58(v0, v1, v2, 126, 8, 5, 5, 6, 0.5, 0.5, 0.8, 0.5, 3, 6, 3, 1, 1);
}

unint64_t static VAResultGeneratorConfiguration.buildFromConfigFile(jsonFile:)()
{
  type metadata accessor for VAResultGeneratorConfiguration();
  uint64_t v1 = sub_2613FA650(&qword_26A914DC8, v0, (void (*)(uint64_t))type metadata accessor for VAResultGeneratorConfiguration);
  sub_261418A5C(v1, &v6);
  unint64_t v2 = v6;
  if (v7)
  {
    if (v6 == 0x8000000000000000)
    {
      sub_2614D5C38();
      swift_bridgeObjectRelease();
      sub_2614D54D8();
      unint64_t v2 = 0x80000002614E1C00;
      sub_2613DC2B8();
      swift_allocError();
      *id v3 = 0xD000000000000023;
      v3[1] = 0x80000002614E1C00;
    }
    else
    {
      sub_2613DD918();
      swift_allocError();
      *char v4 = v2;
    }
    swift_willThrow();
  }
  return v2;
}

id sub_2613F8B58(char a1, char a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, float a9, float a10, float a11, float a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17)
{
  uint64_t v22 = &v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceCheckEnabled];
  v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceCheckEnabled] = 0;
  uint64_t v23 = &v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_postSilenceCheckEnabled];
  v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_postSilenceCheckEnabled] = 0;
  uint64_t v24 = &v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_duringSpeechCheckEnabled];
  v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_duringSpeechCheckEnabled] = 0;
  uint64_t v25 = &v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_receptiveFieldLength];
  *(void *)&v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_receptiveFieldLength] = 197;
  uint64_t v26 = &v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_receptiveFieldStride];
  *(void *)&v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_receptiveFieldStride] = 1;
  id v27 = &v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_overlapThreshold];
  *(void *)&v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_overlapThreshold] = 0;
  unint64_t v28 = &v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_averagingWindowSize];
  *(void *)&v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_averagingWindowSize] = 1;
  uint64_t v29 = &v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceLookback];
  *(void *)&v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceLookback] = 30;
  BOOL v30 = &v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceExpected];
  *(void *)&v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceExpected] = 20;
  char v35 = (float *)&v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceProbability];
  *(_DWORD *)&v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceProbability] = 1056964608;
  char v36 = (float *)&v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_duringCommandExpectedSpeechRatio];
  *(_DWORD *)&v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_duringCommandExpectedSpeechRatio] = 1056964608;
  uint64_t v38 = (float *)&v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_duringCommandSpeechProbability];
  *(_DWORD *)&v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_duringCommandSpeechProbability] = 1061997773;
  uint64_t v31 = &v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_postSilenceLookforward];
  void *v31 = 50;
  uint64_t v39 = v31;
  uint64_t v40 = &v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_postSilenceExpected];
  *(void *)&v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_postSilenceExpected] = 20;
  int v42 = (float *)&v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_postSilenceProbability];
  *(_DWORD *)&v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_postSilenceProbability] = 1056964608;
  uint64_t v44 = &v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_takeMaxScore];
  v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_takeMaxScore] = 0;
  uint64_t v45 = &v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_waitFrames];
  *(void *)&v17[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_waitFrames] = 1;
  swift_beginAccess();
  *uint64_t v22 = a1;
  swift_beginAccess();
  unsigned char *v23 = a2;
  swift_beginAccess();
  unsigned char *v24 = a3;
  swift_beginAccess();
  void *v25 = a4;
  swift_beginAccess();
  void *v26 = a5;
  swift_beginAccess();
  void *v27 = a6;
  swift_beginAccess();
  void *v28 = a7;
  swift_beginAccess();
  void *v29 = a8;
  swift_beginAccess();
  void *v30 = a13;
  swift_beginAccess();
  float *v35 = a9;
  swift_beginAccess();
  float *v36 = a10;
  swift_beginAccess();
  float *v38 = a11;
  swift_beginAccess();
  void *v39 = a14;
  swift_beginAccess();
  void *v40 = a15;
  swift_beginAccess();
  float *v42 = a12;
  swift_beginAccess();
  unsigned char *v44 = a16;
  swift_beginAccess();
  void *v45 = a17;
  v49.receiver = v17;
  v49.super_class = (Class)type metadata accessor for VAResultGeneratorConfiguration();
  return objc_msgSendSuper2(&v49, sel_init);
}

id VAResultGeneratorConfiguration.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return VAResultGeneratorConfiguration.init(from:)(a1);
}

id VAResultGeneratorConfiguration.init(from:)(void *a1)
{
  uint64_t v3 = sub_2613C23AC(&qword_26A914DD0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v104 = v3;
  uint64_t v105 = v4;
  MEMORY[0x270FA5388](v3);
  unint64_t v126 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __int16 v103 = &v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceCheckEnabled];
  v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceCheckEnabled] = 0;
  uint64_t v102 = &v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_postSilenceCheckEnabled];
  v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_postSilenceCheckEnabled] = 0;
  uint64_t v101 = &v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_duringSpeechCheckEnabled];
  v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_duringSpeechCheckEnabled] = 0;
  uint64_t v100 = (uint64_t *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_receptiveFieldLength];
  *(void *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_receptiveFieldLength] = 197;
  uint64_t v99 = (uint64_t *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_receptiveFieldStride];
  *(void *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_receptiveFieldStride] = 1;
  uint64_t v98 = (uint64_t *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_overlapThreshold];
  *(void *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_overlapThreshold] = 0;
  uint64_t v97 = (uint64_t *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_averagingWindowSize];
  *(void *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_averagingWindowSize] = 1;
  uint64_t v96 = (uint64_t *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceLookback];
  *(void *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceLookback] = 30;
  uint64_t v95 = (uint64_t *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceExpected];
  *(void *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceExpected] = 20;
  uint64_t v92 = (int *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceProbability];
  *(_DWORD *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_preSilenceProbability] = 1056964608;
  uint64_t v94 = (int *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_duringCommandExpectedSpeechRatio];
  *(_DWORD *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_duringCommandExpectedSpeechRatio] = 1056964608;
  uint64_t v93 = (int *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_duringCommandSpeechProbability];
  *(_DWORD *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_duringCommandSpeechProbability] = 1061997773;
  unint64_t v6 = (uint64_t *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_postSilenceLookforward];
  *unint64_t v6 = 50;
  uint64_t v90 = (uint64_t *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_postSilenceExpected];
  uint64_t v91 = v6;
  *(void *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_postSilenceExpected] = 20;
  uint64_t v89 = (int *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_postSilenceProbability];
  *(_DWORD *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_postSilenceProbability] = 1056964608;
  char v7 = &v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_takeMaxScore];
  v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_takeMaxScore] = 0;
  uint64_t v8 = &v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_waitFrames];
  *(void *)&v1[OBJC_IVAR____TtC12VoiceActions30VAResultGeneratorConfiguration_waitFrames] = 1;
  uint64_t v9 = a1[3];
  int v106 = a1;
  sub_2613DBF24(a1, v9);
  sub_2613F9A18();
  id v10 = v1;
  id v11 = v107;
  sub_2614D60D8();
  if (v11)
  {

    id v12 = v10;
    sub_2613DD718((uint64_t)v106);
    type metadata accessor for VAResultGeneratorConfiguration();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v13 = v102;
    uint64_t v14 = v103;
    uint64_t v15 = v101;
    uint64_t v87 = (uint64_t *)v8;
    uint64_t v88 = v7;
    id v107 = v10;
    char v125 = 0;
    uint64_t v16 = v104;
    uint64_t v17 = v126;
    char v18 = sub_2614D5E48();
    if (v18 == 2)
    {
      swift_beginAccess();
      char v19 = *v14;
    }
    else
    {
      char v19 = v18 & 1;
    }
    swift_beginAccess();
    char *v14 = v19;
    char v124 = 1;
    char v20 = sub_2614D5E48();
    if (v20 == 2)
    {
      swift_beginAccess();
      char v22 = *v13;
    }
    else
    {
      char v22 = v20 & 1;
    }
    swift_beginAccess();
    char *v13 = v22;
    char v123 = 2;
    char v23 = sub_2614D5E48();
    if (v23 == 2)
    {
      swift_beginAccess();
      uint64_t v24 = v15;
      char v25 = *v15;
    }
    else
    {
      char v25 = v23 & 1;
      uint64_t v24 = v15;
    }
    swift_beginAccess();
    unsigned char *v24 = v25;
    char v122 = 3;
    uint64_t v26 = sub_2614D5E68();
    if (v27)
    {
      uint64_t v29 = v100;
      swift_beginAccess();
      uint64_t v28 = *v29;
    }
    else
    {
      uint64_t v28 = v26;
      uint64_t v29 = v100;
    }
    swift_beginAccess();
    uint64_t *v29 = v28;
    char v121 = 4;
    uint64_t v30 = sub_2614D5E68();
    if (v31)
    {
      char v33 = v99;
      swift_beginAccess();
      uint64_t v32 = *v33;
    }
    else
    {
      uint64_t v32 = v30;
      char v33 = v99;
    }
    swift_beginAccess();
    uint64_t *v33 = v32;
    char v120 = 5;
    uint64_t v34 = sub_2614D5E68();
    if (v35)
    {
      char v37 = v98;
      swift_beginAccess();
      uint64_t v36 = *v37;
    }
    else
    {
      uint64_t v36 = v34;
      char v37 = v98;
    }
    swift_beginAccess();
    *char v37 = v36;
    char v119 = 6;
    uint64_t v38 = sub_2614D5E68();
    if (v39)
    {
      uint64_t v41 = v97;
      swift_beginAccess();
      uint64_t v40 = *v41;
    }
    else
    {
      uint64_t v40 = v38;
      uint64_t v41 = v97;
    }
    swift_beginAccess();
    uint64_t *v41 = v40;
    char v118 = 7;
    uint64_t v42 = sub_2614D5E68();
    if (v43)
    {
      uint64_t v45 = v96;
      swift_beginAccess();
      uint64_t v44 = *v45;
    }
    else
    {
      uint64_t v44 = v42;
      uint64_t v45 = v96;
    }
    swift_beginAccess();
    uint64_t *v45 = v44;
    char v117 = 8;
    uint64_t v46 = sub_2614D5E68();
    if (v47)
    {
      objc_super v49 = v95;
      swift_beginAccess();
      uint64_t v48 = *v49;
    }
    else
    {
      uint64_t v48 = v46;
    }
    uint64_t v50 = v95;
    swift_beginAccess();
    uint64_t *v50 = v48;
    char v116 = 10;
    uint64_t v51 = sub_2614D5E58();
    int v52 = v51;
    if ((v51 & 0x100000000) != 0)
    {
      os_log_type_t v53 = v94;
      swift_beginAccess();
      int v52 = *v53;
    }
    uint64_t v54 = v94;
    swift_beginAccess();
    int *v54 = v52;
    char v115 = 11;
    uint64_t v55 = sub_2614D5E58();
    int v56 = v55;
    if ((v55 & 0x100000000) != 0)
    {
      uint64_t v57 = v93;
      swift_beginAccess();
      int v56 = *v57;
    }
    uint64_t v58 = v93;
    swift_beginAccess();
    int *v58 = v56;
    char v114 = 9;
    uint64_t v59 = sub_2614D5E58();
    int v60 = v59;
    if ((v59 & 0x100000000) != 0)
    {
      uint64_t v61 = v92;
      swift_beginAccess();
      int v60 = *v61;
    }
    uint64_t v62 = v92;
    swift_beginAccess();
    int *v62 = v60;
    char v113 = 12;
    uint64_t v63 = sub_2614D5E68();
    if (v64)
    {
      unint64_t v66 = v91;
      swift_beginAccess();
      uint64_t v65 = *v66;
    }
    else
    {
      uint64_t v65 = v63;
    }
    unint64_t v67 = v91;
    swift_beginAccess();
    uint64_t *v67 = v65;
    char v112 = 13;
    uint64_t v68 = sub_2614D5E68();
    if (v69)
    {
      uint64_t v71 = v90;
      swift_beginAccess();
      uint64_t v70 = *v71;
    }
    else
    {
      uint64_t v70 = v68;
    }
    unint64_t v72 = v90;
    swift_beginAccess();
    uint64_t *v72 = v70;
    char v111 = 14;
    uint64_t v73 = sub_2614D5E58();
    int v74 = v73;
    if ((v73 & 0x100000000) != 0)
    {
      uint64_t v75 = v89;
      swift_beginAccess();
      int v74 = *v75;
    }
    uint64_t v76 = v89;
    swift_beginAccess();
    int *v76 = v74;
    char v110 = 15;
    char v77 = sub_2614D5E48();
    if (v77 == 2)
    {
      uint64_t v78 = v88;
      swift_beginAccess();
      char v79 = *v78;
    }
    else
    {
      char v79 = v77 & 1;
    }
    uint64_t v80 = v88;
    swift_beginAccess();
    char *v80 = v79;
    char v109 = 16;
    uint64_t v81 = sub_2614D5E88();
    LOBYTE(v80) = v82;
    (*(void (**)(char *, uint64_t))(v105 + 8))(v17, v16);
    if (v80)
    {
      uint64_t v83 = v87;
      swift_beginAccess();
      uint64_t v81 = *v83;
    }
    id v84 = v87;
    swift_beginAccess();
    uint64_t *v84 = v81;
    id v85 = v107;

    uint64_t v86 = (objc_class *)type metadata accessor for VAResultGeneratorConfiguration();
    v108.receiver = v85;
    v108.super_class = v86;
    id v12 = objc_msgSendSuper2(&v108, sel_init);
    sub_2613DD718((uint64_t)v106);
  }
  return v12;
}

unint64_t sub_2613F9A18()
{
  unint64_t result = qword_26A9184C0[0];
  if (!qword_26A9184C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A9184C0);
  }
  return result;
}

uint64_t sub_2613F9A6C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2613C23AC(&qword_26A914DD8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2613DBF24(a1, a1[3]);
  sub_2613F9A18();
  uint64_t v9 = sub_2614D60F8();
  id v10 = (void *)MEMORY[0x263F8EED0];
  (*(void (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v3) + 0xD8))(v9);
  char v29 = 0;
  uint64_t v11 = sub_2614D5F28();
  if (!v2)
  {
    (*(void (**)(uint64_t))((*v10 & *v3) + 0xF0))(v11);
    char v29 = 1;
    uint64_t v12 = sub_2614D5F28();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x108))(v12);
    char v29 = 2;
    uint64_t v13 = sub_2614D5F28();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x120))(v13);
    char v29 = 3;
    uint64_t v14 = sub_2614D5F48();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x138))(v14);
    char v29 = 4;
    uint64_t v15 = sub_2614D5F48();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x150))(v15);
    char v29 = 5;
    uint64_t v16 = sub_2614D5F48();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x168))(v16);
    char v29 = 6;
    uint64_t v17 = sub_2614D5F48();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x180))(v17);
    char v29 = 7;
    uint64_t v18 = sub_2614D5F48();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x198))(v18);
    char v29 = 8;
    uint64_t v19 = sub_2614D5F48();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x1B0))(v19);
    char v29 = 9;
    uint64_t v20 = sub_2614D5F38();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x1C8))(v20);
    char v29 = 10;
    uint64_t v21 = sub_2614D5F38();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x1E0))(v21);
    char v29 = 11;
    uint64_t v22 = sub_2614D5F38();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x210))(v22);
    char v29 = 13;
    uint64_t v23 = sub_2614D5F48();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x228))(v23);
    char v29 = 14;
    uint64_t v24 = sub_2614D5F38();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x240))(v24);
    char v29 = 15;
    uint64_t v25 = sub_2614D5F28();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x258))(v25);
    char v29 = 16;
    uint64_t v26 = sub_2614D5F68();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x1F8))(v26);
    char v29 = 12;
    sub_2614D5F48();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_2613FA208(uint64_t a1, uint64_t a2)
{
  sub_2613FA650(&qword_26A914DC8, a2, (void (*)(uint64_t))type metadata accessor for VAResultGeneratorConfiguration);
  uint64_t v2 = sub_2613FA2E8();
  unint64_t v3 = v2;
  uint64_t v5 = v4;
  if (v6)
  {
    if (v2 == 0x8000000000000000)
    {
      return 0xD00000000000001FLL;
    }
    else
    {
      sub_2614D5D48();
      sub_2613FA5C8(v3, v5, 1);
      return 0;
    }
  }
  return v3;
}

uint64_t sub_2613FA2E8()
{
  uint64_t v0 = sub_2614D5408();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_2614D4AA8();
  MEMORY[0x270FA5388](v1);
  sub_2614D4AE8();
  swift_allocObject();
  sub_2614D4AD8();
  sub_2613C23AC(&qword_26A914DE0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_2614D81F0;
  sub_2614D4A98();
  sub_2614D4A88();
  sub_2613FA650(&qword_26A914DE8, 255, MEMORY[0x263F06130]);
  sub_2613C23AC(&qword_26A914DF0);
  sub_2613FA5F4();
  sub_2614D5BF8();
  sub_2614D4AB8();
  type metadata accessor for VAResultGeneratorConfiguration();
  sub_2613FA650(qword_26A914E00, v2, (void (*)(uint64_t))type metadata accessor for VAResultGeneratorConfiguration);
  uint64_t v3 = sub_2614D4AC8();
  unint64_t v5 = v4;
  sub_2614D53F8();
  uint64_t v6 = sub_2614D53C8();
  if (v7)
  {
    uint64_t v8 = v6;
    sub_2613C2314(v3, v5);
    swift_release();
  }
  else
  {
    sub_2613C2314(v3, v5);
    swift_release();
    return 0;
  }
  return v8;
}

void sub_2613FA5C8(unint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    sub_2613FA5D8(a1);
  }
  else {
    swift_bridgeObjectRelease();
  }
}

void sub_2613FA5D8(unint64_t a1)
{
  if (a1 >> 62)
  {
    if (a1 >> 62 != 1) {
      return;
    }
    a1 &= 0x3FFFFFFFFFFFFFFFuLL;
  }
}

unint64_t sub_2613FA5F4()
{
  unint64_t result = qword_26A914DF8;
  if (!qword_26A914DF8)
  {
    sub_2613C5EC8(&qword_26A914DF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914DF8);
  }
  return result;
}

uint64_t sub_2613FA650(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id VAResultGeneratorConfiguration.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void VAResultGeneratorConfiguration.init()()
{
}

id VAResultGeneratorConfiguration.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VAResultGeneratorConfiguration();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2613FA760@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 632))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_2613FA79C()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **v0) + 0x280))();
}

uint64_t method lookup function for VAResultGeneratorConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VAResultGeneratorConfiguration);
}

uint64_t dispatch thunk of VAResultGeneratorConfiguration.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 632))();
}

uint64_t dispatch thunk of VAResultGeneratorConfiguration.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x280))();
}

uint64_t getEnumTagSinglePayload for VAResultGeneratorConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VAResultGeneratorConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *uint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2613FA9E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VAResultGeneratorConfiguration.CodingKeys()
{
  return &type metadata for VAResultGeneratorConfiguration.CodingKeys;
}

unint64_t sub_2613FAA20()
{
  unint64_t result = qword_26A9186D0[0];
  if (!qword_26A9186D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A9186D0);
  }
  return result;
}

unint64_t sub_2613FAA78()
{
  unint64_t result = qword_26A9187E0;
  if (!qword_26A9187E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9187E0);
  }
  return result;
}

unint64_t sub_2613FAAD0()
{
  unint64_t result = qword_26A9187E8[0];
  if (!qword_26A9187E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A9187E8);
  }
  return result;
}

uint64_t sub_2613FAB24(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x80000002614E1CC0 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002614E1CE0 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002614E1D00 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002614E1D20 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002614E1D40 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002614E1D60 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002614E1D80 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002614E1DA0 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002614E1DC0 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002614E1DE0 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000002614E1E00 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000002614E1E30 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002614E1E50 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002614E1E70 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002614E1E90 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x5378614D656B6174 && a2 == 0xEC00000065726F63 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x6D61724674696177 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else
  {
    char v5 = sub_2614D5FB8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 16;
    }
    else {
      return 17;
    }
  }
}

uint64_t sub_2613FB158()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t sub_2613FB18C(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 112) = a1;
  return result;
}

uint64_t (*sub_2613FB1CC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613FB220(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 24) = a1;
  return MEMORY[0x270FA2498](sub_2613FB244, v1, 0);
}

uint64_t sub_2613FB244()
{
  (*(void (**)(void))(**(void **)(v0 + 16) + 104))(*(unsigned __int8 *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2613FB2C8()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_2613FB2E8, v0, 0);
}

uint64_t sub_2613FB2E8()
{
  char v1 = (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 96))();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v3 = v1 & 1;
  return v2(v3);
}

uint64_t sub_2613FB36C()
{
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_2613FB39C()
{
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  *(unsigned char *)(v0 + 112) = 0;
  return v0;
}

uint64_t sub_2613FB3D8()
{
  return v0;
}

uint64_t sub_2613FB3E4()
{
  return swift_retain();
}

uint64_t sub_2613FB41C(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 112) = a1;
  return swift_release();
}

uint64_t sub_2613FB464()
{
  swift_beginAccess();
  return *(void *)(v0 + 128);
}

uint64_t sub_2613FB498(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 128) = a1;
  return result;
}

uint64_t sub_2613FB4D8()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 136);
}

uint64_t sub_2613FB50C(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 136) = a1;
  return result;
}

uint64_t (*sub_2613FB54C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613FB5A0()
{
  swift_beginAccess();
  return *(void *)(v0 + 152);
}

uint64_t sub_2613FB5D8(uint64_t a1, char a2)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v2 + 152) = a1;
  *(unsigned char *)(v2 + 160) = a2 & 1;
  return result;
}

uint64_t (*sub_2613FB62C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613FB680()
{
  swift_beginAccess();
  return *(void *)(v0 + 168);
}

uint64_t sub_2613FB6B8(uint64_t a1, char a2)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v2 + 168) = a1;
  *(unsigned char *)(v2 + 176) = a2 & 1;
  return result;
}

uint64_t sub_2613FB70C()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 177);
}

uint64_t sub_2613FB740(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 177) = a1;
  return result;
}

uint64_t (*sub_2613FB780())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613FB7D4()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 178);
}

uint64_t sub_2613FB808(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 178) = a1;
  return result;
}

uint64_t (*sub_2613FB848())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613FB89C()
{
  swift_beginAccess();
  return *(void *)(v0 + 184);
}

uint64_t sub_2613FB8D0(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 184) = a1;
  return result;
}

uint64_t sub_2613FB910@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC12VoiceActions25IngestionAudioBufferActor_continuation;
  swift_beginAccess();
  return sub_2613FB964(v3, a1);
}

uint64_t sub_2613FB964(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2613C23AC(qword_26A914E20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2613FB9CC(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC12VoiceActions25IngestionAudioBufferActor_continuation;
  swift_beginAccess();
  sub_2613FBA28(a1, v3);
  return swift_endAccess();
}

uint64_t sub_2613FBA28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2613C23AC(qword_26A914E20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_2613FBA90())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613FBAEC(void *a1, char a2, uint64_t a3, char a4)
{
  char v7 = a4 & 1;
  swift_allocObject();
  uint64_t v8 = sub_261402EE8(a1, a2, a3, v7);

  return v8;
}

uint64_t sub_2613FBB5C(char a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v4 + 33) = a3;
  *(void *)(v4 + 16) = a2;
  *(void *)(v4 + 24) = v3;
  *(unsigned char *)(v4 + 32) = a1;
  return MEMORY[0x270FA2498](sub_2613FBB84, v3, 0);
}

uint64_t sub_2613FBB84()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 32);
  (*(void (**)(void, void))(*(void *)v1 + 304))(*(void *)(v0 + 16), *(unsigned char *)(v0 + 33) & 1);
  (*(void (**)(uint64_t))(*(void *)v1 + 328))(v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_2613FBC54(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  uint64_t v4 = sub_2613C23AC(&qword_26A914E18);
  v3[14] = v4;
  v3[15] = *(void *)(v4 - 8);
  v3[16] = swift_task_alloc();
  sub_2613C23AC(qword_26A914E20);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2613FBD5C, v2, 0);
}

uint64_t sub_2613FBD5C()
{
  uint64_t v2 = (uint64_t *)v0[13];
  uint64_t v3 = (*(uint64_t (**)(void))(*v2 + 200))();
  uint64_t v4 = *v2;
  if (v3)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v4 + 224);
    unint64_t v5 = v0[12];
    if (v6() > v5)
    {
      unint64_t v7 = v0[12];
      unint64_t v8 = v6();
      if (v8 >= v7)
      {
        double v1 = (double)(v8 - v7);
        if (qword_26A918870 == -1)
        {
LABEL_5:
          swift_beginAccess();
          double v9 = *(double *)&qword_26A920148;
          sub_2614D5C38();
          sub_2614D54D8();
          sub_2613C23AC(qword_26A914E40);
          uint64_t v10 = swift_allocObject();
          uint64_t v11 = MEMORY[0x263F8D538];
          *(_OWORD *)(v10 + 16) = xmmword_2614D81E0;
          uint64_t v12 = MEMORY[0x263F8D5B8];
          *(void *)(v10 + 56) = v11;
          *(void *)(v10 + 64) = v12;
          *(double *)(v10 + 32) = v1 / v9 / 1000000000.0 * 1000.0;
          sub_2614D53E8();
          sub_2614D54D8();
          swift_bridgeObjectRelease();
          sub_2614D54D8();
          sub_2613DC2B8();
LABEL_6:
          swift_allocError();
          void *v13 = 0;
          v13[1] = 0xE000000000000000;
          swift_willThrow();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v14 = (uint64_t (*)(void))v0[1];
          goto LABEL_22;
        }
LABEL_27:
        swift_once();
        goto LABEL_5;
      }
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
  }
  else
  {
    (*(void (**)(void))(v4 + 208))(v0[12]);
  }
  uint64_t v15 = v0[13];
  uint64_t v16 = v0[11];
  (*(void (**)(void))(*(void *)v15 + 232))(v0[12]);
  uint64_t v18 = (uint64_t (*)(void *, void))(*(uint64_t (**)(void *))(*(void *)v15 + 192))(v0 + 2);
  uint64_t v19 = *(void *)(v16 + 16);
  uint64_t v20 = *(void *)(*v17 + 24);
  uint64_t v21 = v20 + v19;
  if (__OFADD__(v20, v19))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v22 = v17;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v24 = *v22;
  if (*(void *)(*v22 + 16) < v21 || (isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_261401D34(v21);
    uint64_t v24 = *v22;
  }
  sub_261401F04((uint64_t *)(v24 + 16), v24 + 40, (char *)(v0[11] + 32), v19);
  uint64_t v25 = v0[13];
  uint64_t v26 = v18(v0 + 2, 0);
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(*(void *)v25 + 296))(v26);
  if ((v28 & 1) == 0)
  {
    uint64_t v29 = v27;
    uint64_t v30 = *(uint64_t (**)(void))(*(void *)v0[13] + 176);
    uint64_t v31 = *(void *)(v30() + 24);
    uint64_t v27 = swift_release();
    if (v29 < v31)
    {
      sub_2614D5C38();
      uint64_t v32 = sub_2614D54D8();
      uint64_t v33 = *(void *)(((uint64_t (*)(uint64_t))v30)(v32) + 24);
      swift_release();
      v0[9] = v33;
      sub_2614D5F88();
      sub_2614D54D8();
      swift_bridgeObjectRelease();
      sub_2614D54D8();
      v0[10] = v29;
      sub_2614D5F88();
      sub_2614D54D8();
      swift_bridgeObjectRelease();
      sub_261403034();
      goto LABEL_6;
    }
  }
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(*(void *)v0[13] + 272))(v27);
  if ((v35 & 1) == 0)
  {
    uint64_t v36 = v34;
    uint64_t v37 = *(void *)((*(uint64_t (**)(void))(*(void *)v0[13] + 176))() + 24);
    uint64_t v38 = swift_release();
    if (v37 >= v36)
    {
      uint64_t v39 = v0[18];
      uint64_t v40 = v0[14];
      uint64_t v41 = v0[15];
      (*(void (**)(uint64_t))(*(void *)v0[13] + 392))(v38);
      int v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40);
      uint64_t v43 = v0[18];
      if (v42)
      {
        sub_2613CC6A0(v0[18], qword_26A914E20);
      }
      else
      {
        uint64_t v45 = v0[15];
        uint64_t v44 = v0[16];
        uint64_t v46 = v0[14];
        (*(void (**)(uint64_t, void, uint64_t))(v45 + 16))(v44, v0[18], v46);
        sub_2613CC6A0(v43, qword_26A914E20);
        sub_2614D5758();
        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
      }
      uint64_t v47 = v0[17];
      uint64_t v48 = v0[13];
      (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[15] + 56))(v47, 1, 1, v0[14]);
      (*(void (**)(uint64_t))(*(void *)v48 + 400))(v47);
      (*(void (**)(void, uint64_t))(*(void *)v48 + 280))(0, 1);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
LABEL_22:
  return v14();
}

double sub_2613FC478(unint64_t a1)
{
  if (qword_26A918870 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return (double)a1 / *(double *)&qword_26A920148 / 1000000000.0;
}

uint64_t sub_2613FC510()
{
  v1[2] = v0;
  uint64_t v2 = sub_2614D50C8();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  sub_2613C23AC(qword_26A914E20);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  uint64_t v3 = sub_2613C23AC(&qword_26A914E18);
  v1[8] = v3;
  v1[9] = *(void *)(v3 - 8);
  v1[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2613FC670, v0, 0);
}

uint64_t sub_2613FC670()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[2];
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 256))(1);
  (*(void (**)(uint64_t))(*(void *)v4 + 392))(v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_2613CC6A0(v0[7], qword_26A914E20);
  }
  else
  {
    uint64_t v7 = v0[4];
    uint64_t v6 = v0[5];
    uint64_t v8 = v0[3];
    (*(void (**)(void, void, void))(v0[9] + 32))(v0[10], v0[7], v0[8]);
    uint64_t v9 = sub_26146718C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
    uint64_t v10 = sub_2614D50A8();
    os_log_type_t v11 = sub_2614D5968();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_2613B8000, v10, v11, "stop ingestion buffer", v12, 2u);
      MEMORY[0x263E38060](v12, -1, -1);
    }
    uint64_t v14 = v0[9];
    uint64_t v13 = v0[10];
    uint64_t v15 = v0[8];
    uint64_t v17 = v0[5];
    uint64_t v16 = v0[6];
    uint64_t v18 = v0[3];
    uint64_t v19 = v0[4];
    uint64_t v20 = v0[2];

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    sub_2614D5758();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v16, 1, 1, v15);
    (*(void (**)(uint64_t))(*(void *)v20 + 400))(v16);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_2613FC920(char a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v4 + 161) = a3;
  *(void *)(v4 + 48) = a2;
  *(void *)(v4 + 56) = v3;
  *(unsigned char *)(v4 + 160) = a1;
  uint64_t v5 = sub_2614D50C8();
  *(void *)(v4 + 64) = v5;
  *(void *)(v4 + 72) = *(void *)(v5 - 8);
  *(void *)(v4 + 80) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2613FC9E8, v3, 0);
}

uint64_t sub_2613FC9E8()
{
  char v1 = *(unsigned char *)(v0 + 161);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)v2 + 368))();
  *(void *)(v0 + 88) = v4;
  uint64_t v5 = *(uint64_t (**)(void))(*(void *)v2 + 248);
  unint64_t v6 = (*(void *)v2 + 248) & 0xFFFFFFFFFFFFLL | 0xC7C5000000000000;
  *(void *)(v0 + 96) = v5;
  *(void *)(v0 + 104) = v6;
  if ((v5() & 1) == 0)
  {
    if ((v1 & 1) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v7 = *(void *)(v0 + 56);
    uint64_t v8 = *(uint64_t (**)(void))(*(void *)v7 + 176);
    uint64_t v9 = (*(void *)v7 + 176) & 0xFFFFFFFFFFFFLL | 0x889000000000000;
    *(void *)(v0 + 112) = v8;
    *(void *)(v0 + 120) = v9;
    uint64_t v10 = *(void *)(v8() + 24);
    uint64_t v11 = swift_release();
    if (v10 < v4)
    {
      uint64_t v12 = **(void **)(v0 + 56) + 344;
      uint64_t v13 = *(uint64_t (**)(uint64_t))v12;
      *(void *)(v0 + 128) = *(void *)v12;
      *(void *)(v0 + 136) = v12 & 0xFFFFFFFFFFFFLL | 0x7440000000000000;
      if ((v13(v11) & 1) == 0
        || (int v14 = *(unsigned __int8 *)(v0 + 160), ((*(uint64_t (**)(void))(**(void **)(v0 + 56) + 320))() & 1) == 0)
        && !v14)
      {
        uint64_t v15 = (uint64_t *)(v0 + 88);
        uint64_t v16 = *(void *)(v0 + 56);
        if ((*(unsigned char *)(v0 + 161) & 1) == 0) {
          uint64_t v15 = (uint64_t *)(v0 + 48);
        }
        uint64_t v17 = *v15;
        sub_26140375C(&qword_26A914E58, (void (*)(uint64_t))type metadata accessor for IngestionAudioBufferActor);
        uint64_t v18 = swift_task_alloc();
        *(void *)(v0 + 144) = v18;
        *(void *)(v18 + 16) = v16;
        *(void *)(v18 + 24) = v17;
        uint64_t v19 = (void *)swift_task_alloc();
        *(void *)(v0 + 152) = v19;
        void *v19 = v0;
        v19[1] = sub_2613FD014;
        return MEMORY[0x270FA2318]();
      }
      uint64_t v44 = *(void *)(v0 + 72);
      uint64_t v43 = *(void *)(v0 + 80);
      uint64_t v45 = *(void *)(v0 + 64);
      uint64_t v46 = sub_26146718C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v43, v46, v45);
      uint64_t v47 = sub_2614D50A8();
      os_log_type_t v48 = sub_2614D5978();
      if (os_log_type_enabled(v47, v48))
      {
        objc_super v49 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)objc_super v49 = 0;
        _os_log_impl(&dword_2613B8000, v47, v48, "Not enough audio in buffer...nil", v49, 2u);
        MEMORY[0x263E38060](v49, -1, -1);
      }
      uint64_t v51 = *(void *)(v0 + 72);
      uint64_t v50 = *(void *)(v0 + 80);
      uint64_t v52 = *(void *)(v0 + 64);

      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
      goto LABEL_14;
    }
  }
  if (((*(uint64_t (**)(void))(v0 + 96))() & 1) == 0)
  {
    uint64_t v22 = (uint64_t *)(v0 + 88);
    if ((*(unsigned char *)(v0 + 161) & 1) == 0) {
      uint64_t v22 = (uint64_t *)(v0 + 48);
    }
    uint64_t v23 = *v22;
    if (*v22 < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v24 = (void *)(*(uint64_t (**)(void))(**(void **)(v0 + 56) + 176))();
      if (v24[3] >= v23)
      {
        uint64_t v25 = (uint64_t *)(v0 + 88);
        uint64_t v26 = *(void **)(v0 + 56);
        if ((*(unsigned char *)(v0 + 161) & 1) == 0) {
          uint64_t v25 = (uint64_t *)(v0 + 48);
        }
        uint64_t v20 = sub_26140281C(0, *v25, v24);
        uint64_t v27 = swift_release();
        char v28 = (void *)v26[18];
        uint64_t v29 = (void *)MEMORY[0x263F8EED0];
        uint64_t v30 = *(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v28) + 0xD0);
        uint64_t v31 = v30(v27);
        uint64_t v32 = (*(uint64_t (**)(uint64_t))(*v26 + 192))(v0 + 16);
        if ((v31 & 0x8000000000000000) == 0)
        {
          uint64_t v34 = (uint64_t (*)(uint64_t, void))v32;
          uint64_t v35 = v33;
          if (*(void *)(*(void *)v33 + 24) >= v31)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_2614026E8();
            }
            sub_261402780((uint64_t *)(*(void *)v35 + 16), *(void *)v35 + 40, v31);
            uint64_t v36 = *(void *)(v0 + 56);
            uint64_t v37 = v34(v0 + 16, 0);
            double v38 = (double)v30(v37);
            double v39 = v38 / (double)(*(uint64_t (**)(void))((*v29 & *v28) + 0xA0))();
            uint64_t v40 = (*(uint64_t (**)(void))(*(void *)v36 + 200))();
            uint64_t v21 = sub_261403088(v40, v39);
            (*(void (**)(void))(*(void *)v36 + 208))();
            (*(void (**)(uint64_t))(*(void *)v36 + 352))(1);
            goto LABEL_26;
          }
LABEL_35:
          __break(1u);
          return MEMORY[0x270FA2318]();
        }
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
    }
    __break(1u);
    goto LABEL_34;
  }
LABEL_14:
  uint64_t v20 = 0;
  uint64_t v21 = 0;
LABEL_26:
  swift_task_dealloc();
  uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v41(v20, v21);
}

uint64_t sub_2613FD014()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2613FD140, v1, 0);
}

uint64_t sub_2613FD140()
{
  if (((*(uint64_t (**)(void))(v0 + 96))() & 1) == 0)
  {
    uint64_t v1 = (uint64_t *)(v0 + 88);
    if ((*(unsigned char *)(v0 + 161) & 1) == 0) {
      uint64_t v1 = (uint64_t *)(v0 + 48);
    }
    uint64_t v2 = *v1;
    uint64_t v3 = *(void *)((*(uint64_t (**)(void))(v0 + 112))() + 24);
    uint64_t v4 = swift_release();
    if (v3 < v2)
    {
      if (((*(uint64_t (**)(uint64_t))(v0 + 128))(v4) & 1) == 0
        || (int v5 = *(unsigned __int8 *)(v0 + 160), ((*(uint64_t (**)(void))(**(void **)(v0 + 56) + 320))() & 1) == 0)
        && !v5)
      {
        unint64_t v6 = (uint64_t *)(v0 + 88);
        uint64_t v7 = *(void *)(v0 + 56);
        if ((*(unsigned char *)(v0 + 161) & 1) == 0) {
          unint64_t v6 = (uint64_t *)(v0 + 48);
        }
        uint64_t v8 = *v6;
        sub_26140375C(&qword_26A914E58, (void (*)(uint64_t))type metadata accessor for IngestionAudioBufferActor);
        uint64_t v9 = swift_task_alloc();
        *(void *)(v0 + 144) = v9;
        *(void *)(v9 + 16) = v7;
        *(void *)(v9 + 24) = v8;
        uint64_t v10 = (void *)swift_task_alloc();
        *(void *)(v0 + 152) = v10;
        *uint64_t v10 = v0;
        v10[1] = sub_2613FD014;
        return MEMORY[0x270FA2318]();
      }
      uint64_t v35 = *(void *)(v0 + 72);
      uint64_t v34 = *(void *)(v0 + 80);
      uint64_t v36 = *(void *)(v0 + 64);
      uint64_t v37 = sub_26146718C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v34, v37, v36);
      double v38 = sub_2614D50A8();
      os_log_type_t v39 = sub_2614D5978();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v40 = 0;
        _os_log_impl(&dword_2613B8000, v38, v39, "Not enough audio in buffer...nil", v40, 2u);
        MEMORY[0x263E38060](v40, -1, -1);
      }
      uint64_t v42 = *(void *)(v0 + 72);
      uint64_t v41 = *(void *)(v0 + 80);
      uint64_t v43 = *(void *)(v0 + 64);

      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
      goto LABEL_14;
    }
  }
  if (((*(uint64_t (**)(void))(v0 + 96))() & 1) == 0)
  {
    uint64_t v13 = (uint64_t *)(v0 + 88);
    if ((*(unsigned char *)(v0 + 161) & 1) == 0) {
      uint64_t v13 = (uint64_t *)(v0 + 48);
    }
    uint64_t v14 = *v13;
    if (*v13 < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v15 = (void *)(*(uint64_t (**)(void))(**(void **)(v0 + 56) + 176))();
      if (v15[3] >= v14)
      {
        uint64_t v16 = (uint64_t *)(v0 + 88);
        uint64_t v17 = *(void **)(v0 + 56);
        if ((*(unsigned char *)(v0 + 161) & 1) == 0) {
          uint64_t v16 = (uint64_t *)(v0 + 48);
        }
        uint64_t v11 = sub_26140281C(0, *v16, v15);
        uint64_t v18 = swift_release();
        uint64_t v19 = (void *)v17[18];
        uint64_t v20 = (void *)MEMORY[0x263F8EED0];
        uint64_t v21 = *(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v19) + 0xD0);
        uint64_t v22 = v21(v18);
        uint64_t v23 = (*(uint64_t (**)(uint64_t))(*v17 + 192))(v0 + 16);
        if ((v22 & 0x8000000000000000) == 0)
        {
          uint64_t v25 = (uint64_t (*)(uint64_t, void))v23;
          uint64_t v26 = v24;
          if (*(void *)(*(void *)v24 + 24) >= v22)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_2614026E8();
            }
            sub_261402780((uint64_t *)(*(void *)v26 + 16), *(void *)v26 + 40, v22);
            uint64_t v27 = *(void *)(v0 + 56);
            uint64_t v28 = v25(v0 + 16, 0);
            double v29 = (double)v21(v28);
            double v30 = v29 / (double)(*(uint64_t (**)(void))((*v20 & *v19) + 0xA0))();
            uint64_t v31 = (*(uint64_t (**)(void))(*(void *)v27 + 200))();
            uint64_t v12 = sub_261403088(v31, v30);
            (*(void (**)(void))(*(void *)v27 + 208))();
            (*(void (**)(uint64_t))(*(void *)v27 + 352))(1);
            goto LABEL_26;
          }
LABEL_35:
          __break(1u);
          return MEMORY[0x270FA2318]();
        }
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
    }
    __break(1u);
    goto LABEL_34;
  }
LABEL_14:
  uint64_t v11 = 0;
  uint64_t v12 = 0;
LABEL_26:
  swift_task_dealloc();
  uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v32(v11, v12);
}

uint64_t sub_2613FD6C8()
{
  uint64_t v1 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v0 + 192))(v5);
  uint64_t v3 = v2;
  swift_release();
  *uint64_t v3 = *(void *)sub_2614D4D18();
  swift_retain();
  return v1(v5, 0);
}

uint64_t sub_2613FD754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2613C23AC(qword_26A914E20);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2613C23AC(&qword_26A914E18);
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  (*(void (**)(char *))(*(void *)a2 + 400))(v8);
  return (*(uint64_t (**)(uint64_t, void))(*(void *)a2 + 280))(a3, 0);
}

uint64_t sub_2613FD8D0()
{
  swift_release();

  sub_2613CC6A0(v0 + OBJC_IVAR____TtC12VoiceActions25IngestionAudioBufferActor_continuation, qword_26A914E20);
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_2613FD928@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC12VoiceActions16VARequestContext_uuid;
  swift_beginAccess();
  uint64_t v4 = sub_2614D4CE8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2613FD9AC(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC12VoiceActions16VARequestContext_uuid;
  swift_beginAccess();
  uint64_t v4 = sub_2614D4CE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_2613FDA38())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613FDA94()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2613FDAE0(uint64_t a1)
{
  return sub_2613FDBC8(a1, &OBJC_IVAR____TtC12VoiceActions16VARequestContext_results, MEMORY[0x263F8EEA0]);
}

uint64_t (*sub_2613FDB00())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613FDB5C()
{
  return swift_retain();
}

uint64_t sub_2613FDBA8(uint64_t a1)
{
  return sub_2613FDBC8(a1, &OBJC_IVAR____TtC12VoiceActions16VARequestContext_predictionWindow, MEMORY[0x263F8EED8]);
}

uint64_t sub_2613FDBC8(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6 = (uint64_t *)(v3 + *a2);
  swift_beginAccess();
  uint64_t v7 = *v6;
  *uint64_t v6 = a1;
  return a3(v7);
}

uint64_t (*sub_2613FDC28())()
{
  return j__swift_endAccess;
}

uint64_t sub_2613FDC84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC12VoiceActions16VARequestContext_runtimeParameters;
  swift_beginAccess();
  int v4 = *(_DWORD *)(v3 + 8);
  char v5 = *(unsigned char *)(v3 + 12);
  char v6 = *(unsigned char *)(v3 + 13);
  char v7 = *(unsigned char *)(v3 + 32);
  uint64_t v8 = *(void *)(v3 + 40);
  char v9 = *(unsigned char *)(v3 + 48);
  char v10 = *(unsigned char *)(v3 + 49);
  int v11 = *(_DWORD *)(v3 + 52);
  char v12 = *(unsigned char *)(v3 + 56);
  uint64_t v14 = *(void *)(v3 + 64);
  uint64_t v13 = *(void *)(v3 + 72);
  __int16 v15 = *(_WORD *)(v3 + 80);
  char v16 = *(unsigned char *)(v3 + 82);
  char v17 = *(unsigned char *)(v3 + 83);
  char v18 = *(unsigned char *)(v3 + 84);
  char v19 = *(unsigned char *)(v3 + 85);
  char v20 = *(unsigned char *)(v3 + 86);
  *(void *)a1 = *(void *)v3;
  *(_DWORD *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 12) = v5;
  *(unsigned char *)(a1 + 13) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v3 + 16);
  *(unsigned char *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 49) = v10;
  *(_DWORD *)(a1 + 52) = v11;
  *(unsigned char *)(a1 + 56) = v12;
  *(void *)(a1 + 64) = v14;
  *(void *)(a1 + 72) = v13;
  *(_WORD *)(a1 + 80) = v15;
  *(unsigned char *)(a1 + 82) = v16;
  *(unsigned char *)(a1 + 83) = v17;
  *(unsigned char *)(a1 + 84) = v18;
  *(unsigned char *)(a1 + 85) = v19;
  *(unsigned char *)(a1 + 86) = v20;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2613FDD70(uint64_t *a1)
{
  uint64_t v23 = *a1;
  int v2 = *((_DWORD *)a1 + 2);
  char v3 = *((unsigned char *)a1 + 12);
  char v4 = *((unsigned char *)a1 + 13);
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  char v7 = *((unsigned char *)a1 + 32);
  uint64_t v8 = a1[5];
  char v9 = *((unsigned char *)a1 + 48);
  int v10 = *((_DWORD *)a1 + 13);
  char v21 = *((unsigned char *)a1 + 56);
  char v22 = *((unsigned char *)a1 + 49);
  uint64_t v19 = a1[9];
  uint64_t v20 = a1[8];
  char v17 = *((unsigned char *)a1 + 82);
  __int16 v18 = *((_WORD *)a1 + 40);
  char v15 = *((unsigned char *)a1 + 84);
  char v16 = *((unsigned char *)a1 + 83);
  char v14 = *((unsigned char *)a1 + 85);
  uint64_t v11 = v1 + OBJC_IVAR____TtC12VoiceActions16VARequestContext_runtimeParameters;
  char v12 = *((unsigned char *)a1 + 86);
  swift_beginAccess();
  *(void *)uint64_t v11 = v23;
  *(_DWORD *)(v11 + 8) = v2;
  *(unsigned char *)(v11 + 12) = v3;
  *(unsigned char *)(v11 + 13) = v4;
  *(void *)(v11 + 16) = v5;
  *(void *)(v11 + 24) = v6;
  *(unsigned char *)(v11 + 32) = v7;
  *(void *)(v11 + 40) = v8;
  *(unsigned char *)(v11 + 48) = v9;
  *(unsigned char *)(v11 + 49) = v22;
  *(_DWORD *)(v11 + 52) = v10;
  *(unsigned char *)(v11 + 56) = v21;
  *(void *)(v11 + 64) = v20;
  *(void *)(v11 + 72) = v19;
  *(_WORD *)(v11 + 80) = v18;
  *(unsigned char *)(v11 + 82) = v17;
  *(unsigned char *)(v11 + 83) = v16;
  *(unsigned char *)(v11 + 84) = v15;
  *(unsigned char *)(v11 + 85) = v14;
  *(unsigned char *)(v11 + 86) = v12;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2613FDEC4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2613FDF20(void *a1, uint64_t *a2)
{
  swift_allocObject();
  uint64_t v4 = sub_2614031F0(a1, a2);

  return v4;
}

uint64_t sub_2613FDF78(long long *a1)
{
  uint64_t v3 = sub_2613C23AC(&qword_26A914BD8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = a1[3];
  long long v7 = a1[1];
  long long v21 = a1[2];
  long long v22 = v6;
  long long v8 = a1[3];
  v23[0] = a1[4];
  long long v9 = a1[1];
  long long v19 = *a1;
  long long v20 = v9;
  v17[2] = v21;
  v17[3] = v8;
  v18[0] = a1[4];
  *(void *)((char *)v23 + 15) = *(void *)((char *)a1 + 79);
  *(void *)((char *)v18 + 15) = *(void *)((char *)a1 + 79);
  v17[0] = v19;
  v17[1] = v7;
  int v10 = *(void (**)(_OWORD *))(*(void *)v1 + 288);
  sub_26140353C((uint64_t)&v19);
  v10(v17);
  uint64_t v11 = sub_2614D5788();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = swift_allocObject();
  long long v14 = v22;
  *(_OWORD *)(v13 + 72) = v21;
  *(_OWORD *)(v13 + 88) = v14;
  *(_OWORD *)(v13 + 104) = v23[0];
  long long v15 = v20;
  *(_OWORD *)(v13 + 40) = v19;
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = 0;
  *(void *)(v13 + 32) = v12;
  *(void *)(v13 + 119) = *(void *)((char *)v23 + 15);
  *(_OWORD *)(v13 + 56) = v15;
  sub_26140353C((uint64_t)&v19);
  sub_2613FE47C((uint64_t)v5, (uint64_t)&unk_26A914E68, v13);
  return swift_release();
}

uint64_t sub_2613FE158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return MEMORY[0x270FA2498](sub_2613FE17C, 0, 0);
}

uint64_t sub_2613FE17C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 64) = Strong;
  if (Strong)
  {
    uint64_t v2 = *(void *)(v0 + 56);
    uint64_t v3 = *(void *)(Strong + OBJC_IVAR____TtC12VoiceActions16VARequestContext_ingestionBufferActor);
    *(void *)(v0 + 72) = v3;
    swift_retain();
    swift_release();
    uint64_t v4 = *(unsigned __int8 *)(v2 + 49);
    uint64_t v5 = *(void *)(v2 + 40);
    uint64_t v6 = *(unsigned __int8 *)(v2 + 48);
    int v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 424)
                                                            + **(int **)(*(void *)v3 + 424));
    long long v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v7;
    *long long v7 = v0;
    v7[1] = sub_2613FE33C;
    return v10(v4, v5, v6);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    long long v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
}

uint64_t sub_2613FE33C()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_2613FE454, 0, 0);
}

uint64_t sub_2613FE454()
{
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 64) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2613FE47C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2614D5788();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_2614D5778();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_2613CC6A0(a1, &qword_26A914BD8);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2614D5748();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  sub_2613C23AC(&qword_26A914F50);
  return swift_task_create();
}

unint64_t sub_2613FE630(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
    case 8:
      return result;
    case 2:
      unint64_t result = 0x416C6C4165766173;
      break;
    case 3:
      unint64_t result = 0x6F696475416C6C61;
      break;
    case 4:
      unint64_t result = 0x73746C75736572;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0x7544776F646E6977;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      unint64_t result = 25705;
      break;
  }
  return result;
}

unint64_t sub_2613FE748(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
    case 8:
      return result;
    case 2:
      unint64_t result = 0x416C6C4165766173;
      break;
    case 3:
      unint64_t result = 0x6F696475416C6C61;
      break;
    case 4:
      unint64_t result = 0x73746C75736572;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0x7544776F646E6977;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      unint64_t result = 25705;
      break;
  }
  return result;
}

uint64_t sub_2613FE860(unsigned __int8 *a1, char *a2)
{
  return sub_2613FE86C(*a1, *a2);
}

uint64_t sub_2613FE86C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000011;
  unint64_t v3 = 0x80000002614E1EF0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000011;
  switch(v4)
  {
    case 1:
      break;
    case 2:
      unint64_t v5 = 0x416C6C4165766173;
      unint64_t v3 = 0xEC0000006F696475;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x6F696475416C6C61;
      break;
    case 4:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x73746C75736572;
      break;
    case 5:
      unint64_t v5 = 0xD000000000000016;
      uint64_t v6 = "keywordsWithThresholds";
      goto LABEL_10;
    case 6:
      unint64_t v5 = 0x7544776F646E6977;
      unint64_t v3 = 0xEE006E6F69746172;
      break;
    case 7:
      unint64_t v5 = 0xD000000000000012;
      uint64_t v6 = "audioChunkDuration";
      goto LABEL_10;
    case 8:
      uint64_t v6 = "runtimeParameters";
LABEL_10:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      unint64_t v3 = 0xE200000000000000;
      unint64_t v5 = 25705;
      break;
  }
  unint64_t v7 = 0x80000002614E1EF0;
  switch(a2)
  {
    case 1:
      break;
    case 2:
      unint64_t v2 = 0x416C6C4165766173;
      unint64_t v7 = 0xEC0000006F696475;
      break;
    case 3:
      unint64_t v7 = 0xE800000000000000;
      unint64_t v2 = 0x6F696475416C6C61;
      break;
    case 4:
      unint64_t v7 = 0xE700000000000000;
      unint64_t v2 = 0x73746C75736572;
      break;
    case 5:
      unint64_t v2 = 0xD000000000000016;
      uint64_t v8 = "keywordsWithThresholds";
      goto LABEL_20;
    case 6:
      unint64_t v2 = 0x7544776F646E6977;
      unint64_t v7 = 0xEE006E6F69746172;
      break;
    case 7:
      unint64_t v2 = 0xD000000000000012;
      uint64_t v8 = "audioChunkDuration";
      goto LABEL_20;
    case 8:
      uint64_t v8 = "runtimeParameters";
LABEL_20:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      unint64_t v7 = 0xE200000000000000;
      unint64_t v2 = 25705;
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_2614D5FB8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_2613FEAE8()
{
  return sub_2614D60B8();
}

uint64_t sub_2613FEB30()
{
  return sub_2613FEB38();
}

uint64_t sub_2613FEB38()
{
  sub_2614D5478();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2613FEC84()
{
  return sub_2614D60B8();
}

uint64_t sub_2613FECC8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2614036BC();
  *a1 = result;
  return result;
}

unint64_t sub_2613FECF8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_2613FE630(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_2613FED24()
{
  return sub_2613FE748(*v0);
}

uint64_t sub_2613FED2C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2614036BC();
  *a1 = result;
  return result;
}

void sub_2613FED54(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_2613FED60(uint64_t a1)
{
  unint64_t v2 = sub_261403708();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2613FED9C(uint64_t a1)
{
  unint64_t v2 = sub_261403708();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2613FEDD8()
{
  return sub_2614D60B8();
}

uint64_t sub_2613FEE30()
{
  return sub_2614D5478();
}

uint64_t sub_2613FEE4C()
{
  return sub_2614D60B8();
}

uint64_t sub_2613FEEA0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_2614D5E08();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_2613FEEF4(void *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x80000002614E1F20;
}

unint64_t sub_2613FEF14()
{
  return 0xD000000000000016;
}

uint64_t sub_2613FEF30@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_2614D5E08();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_2613FEF88(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_2613FEF94(uint64_t a1)
{
  unint64_t v2 = sub_26140409C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2613FEFD0(uint64_t a1)
{
  unint64_t v2 = sub_26140409C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2613FF00C(void *a1)
{
  void (*v28)(double *__return_ptr, uint64_t);
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  double v54;
  int v55;
  __int16 v56;
  long long v57;
  char v58;
  uint64_t v59;
  char v60;
  char v61;
  int v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  __int16 v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  double v72;
  uint64_t v73;
  long long v74;
  char v75;
  uint64_t v76;
  char v77;
  char v78;
  int v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  __int16 v83;
  char v84;
  char v85;
  char v86;
  char v87;
  char v88;

  uint64_t v2 = v1;
  uint64_t v51 = sub_2613C23AC(&qword_26A914E70);
  objc_super v49 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v53 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2614D4CE8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2613C23AC(&qword_26A914E78);
  uint64_t v52 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2613DBF24(a1, a1[3]);
  sub_261403708();
  uint64_t v12 = sub_2614D60F8();
  (*(void (**)(uint64_t))(*(void *)v2 + 136))(v12);
  LOBYTE(v72) = 0;
  sub_26140375C(&qword_26A914E88, MEMORY[0x263F07508]);
  int64_t v13 = v50;
  sub_2614D5F58();
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v11, v9);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v14 = OBJC_IVAR____TtC12VoiceActions16VARequestContext_configuration;
  long long v15 = *(void **)(v2 + OBJC_IVAR____TtC12VoiceActions16VARequestContext_configuration);
  char v16 = (void *)MEMORY[0x263F8EED0];
  char v17 = *(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v15) + 0x80);
  __int16 v18 = v15;
  long long v19 = (void *)v17();

  (*(void (**)(void))((*v16 & *v19) + 0x1A8))();
  unint64_t v72 = nullsub_1(v20);
  LOBYTE(v54) = 6;
  sub_2614037A4();
  sub_2614D5F58();
  long long v22 = *(void **)(v2 + v14);
  uint64_t v23 = *(uint64_t (**)(void))((*v16 & *v22) + 0x80);
  uint64_t v24 = v22;
  uint64_t v25 = (void *)v23();

  (*(void (**)(void))((*v16 & *v25) + 0x1B0))();
  unint64_t v72 = nullsub_1(v26);
  LOBYTE(v54) = 7;
  sub_2614D5F58();
  LOBYTE(v72) = 5;
  sub_2614037F8();
  os_log_type_t v48 = v9;
  uint64_t v27 = sub_2614D5EE8();
  uint64_t v28 = *(void (**)(double *__return_ptr, uint64_t))(*(void *)v2 + 280);
  uint64_t v47 = v2;
  v28(&v72, v27);
  uint64_t v54 = v72;
  uint64_t v55 = v73;
  int v56 = WORD2(v73);
  uint64_t v57 = v74;
  uint64_t v58 = v75;
  uint64_t v59 = v76;
  int v60 = v77;
  uint64_t v61 = v78;
  uint64_t v62 = v79;
  uint64_t v63 = v80;
  char v64 = v81;
  uint64_t v65 = v82;
  unint64_t v66 = v83;
  unint64_t v67 = v84;
  uint64_t v68 = v85;
  char v69 = v86;
  uint64_t v70 = v87;
  uint64_t v71 = v88;
  double v29 = VARuntimeParameters.keywordsToThresholds.getter();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  double v30 = 0;
  uint64_t v31 = v29 + 64;
  uint64_t v32 = 1 << *(unsigned char *)(v29 + 32);
  uint64_t v33 = -1;
  if (v32 < 64) {
    uint64_t v33 = ~(-1 << v32);
  }
  uint64_t v34 = v33 & *(void *)(v29 + 64);
  uint64_t v50 = (unint64_t)(v32 + 63) >> 6;
  if (!v34) {
    goto LABEL_9;
  }
LABEL_8:
  for (v34 &= v34 - 1; ; uint64_t v34 = (v36 - 1) & v36)
  {
    double v38 = swift_bridgeObjectRetain();
    os_log_type_t v39 = nullsub_1(v38);
    LODWORD(v54) = LODWORD(v39);
    sub_26141BED8();
    unint64_t v72 = v40;
    uint64_t v73 = v41;
    *(void *)&int v74 = v42;
    BYTE8(v74) = v43 & 1;
    sub_26140384C();
    sub_2614D5F58();
    uint64_t result = swift_bridgeObjectRelease();
    if (v34) {
      goto LABEL_8;
    }
LABEL_9:
    if (__OFADD__(v30++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v30 >= v50) {
      goto LABEL_26;
    }
    uint64_t v36 = *(void *)(v31 + 8 * v30);
    if (!v36) {
      break;
    }
LABEL_19:
    ;
  }
  uint64_t v37 = v30 + 1;
  if (v30 + 1 >= v50) {
    goto LABEL_26;
  }
  uint64_t v36 = *(void *)(v31 + 8 * v37);
  if (v36) {
    goto LABEL_18;
  }
  uint64_t v37 = v30 + 2;
  if (v30 + 2 >= v50) {
    goto LABEL_26;
  }
  uint64_t v36 = *(void *)(v31 + 8 * v37);
  if (v36) {
    goto LABEL_18;
  }
  uint64_t v37 = v30 + 3;
  if (v30 + 3 >= v50)
  {
LABEL_26:
    uint64_t v44 = v51;
    uint64_t v45 = v49;
    uint64_t v46 = swift_release();
    unint64_t v72 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t))(*(void *)v47 + 232))(v46));
    LOBYTE(v54) = 4;
    sub_2613C23AC(&qword_26A914EA8);
    sub_2614038A0();
    uint64_t v9 = v48;
    sub_2614D5F58();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v53, v44);
    return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v11, v9);
  }
  uint64_t v36 = *(void *)(v31 + 8 * v37);
  if (v36)
  {
LABEL_18:
    double v30 = v37;
    goto LABEL_19;
  }
  while (1)
  {
    double v30 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    if (v30 >= v50) {
      goto LABEL_26;
    }
    uint64_t v36 = *(void *)(v31 + 8 * v30);
    ++v37;
    if (v36) {
      goto LABEL_19;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2613FF8E0()
{
  v1[2] = v0;
  uint64_t v2 = sub_2614D50C8();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v1[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2613FF9B0, 0, 0);
}

uint64_t sub_2613FF9B0()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = sub_26146718C();
  v0[7] = v4;
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[8] = v5;
  v0[9] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v1, v4, v2);
  uint64_t v6 = sub_2614D50A8();
  os_log_type_t v7 = sub_2614D5988();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_2613B8000, v6, v7, "RequestContext stop(): started", v8, 2u);
    MEMORY[0x263E38060](v8, -1, -1);
  }
  uint64_t v9 = v0[6];
  uint64_t v10 = v0[3];
  uint64_t v11 = v0[4];
  uint64_t v12 = v0[2];

  int64_t v13 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[10] = v13;
  v0[11] = (v11 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v9, v10);
  uint64_t v14 = *(void *)(v12 + OBJC_IVAR____TtC12VoiceActions16VARequestContext_stopProcessingActor);
  v0[12] = v14;
  char v17 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v14 + 120) + **(int **)(*(void *)v14 + 120));
  swift_retain();
  long long v15 = (void *)swift_task_alloc();
  v0[13] = v15;
  void *v15 = v0;
  v15[1] = sub_2613FFBA8;
  return v17(1);
}

uint64_t sub_2613FFBA8()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_2613FFCC0, 0, 0);
}

uint64_t sub_2613FFCC0()
{
  uint64_t v1 = *(void *)(v0[2] + OBJC_IVAR____TtC12VoiceActions16VARequestContext_ingestionBufferActor);
  v0[14] = v1;
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v1 + 440) + **(int **)(*(void *)v1 + 440));
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[15] = v2;
  void *v2 = v0;
  v2[1] = sub_2613FFDE4;
  return v4();
}

uint64_t sub_2613FFDE4()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_2613FFEFC, 0, 0);
}

uint64_t sub_2613FFEFC()
{
  (*(void (**)(void, void, void))(v0 + 64))(*(void *)(v0 + 40), *(void *)(v0 + 56), *(void *)(v0 + 24));
  uint64_t v1 = sub_2614D50A8();
  os_log_type_t v2 = sub_2614D5988();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_2613B8000, v1, v2, "RequestContext stop(): stopped", v3, 2u);
    MEMORY[0x263E38060](v3, -1, -1);
  }
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 24);

  v4(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_261400010()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_261400030, 0, 0);
}

uint64_t sub_261400030()
{
  uint64_t v1 = *(void *)(v0[2] + OBJC_IVAR____TtC12VoiceActions16VARequestContext_stopProcessingActor);
  v0[3] = v1;
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v1 + 128) + **(int **)(*(void *)v1 + 128));
  swift_retain();
  os_log_type_t v2 = (void *)swift_task_alloc();
  v0[4] = v2;
  void *v2 = v0;
  v2[1] = sub_26140014C;
  return v4();
}

uint64_t sub_26140014C(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_261400264(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_261400288, 0, 0);
}

uint64_t sub_261400288()
{
  uint64_t v1 = *(void *)(v0[4] + OBJC_IVAR____TtC12VoiceActions16VARequestContext_ingestionBufferActor);
  v0[5] = v1;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v1 + 432) + **(int **)(*(void *)v1 + 432));
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[6] = v2;
  void *v2 = v0;
  v2[1] = sub_2614003B4;
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  return v6(v4, v3);
}

uint64_t sub_2614003B4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2614004F0, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_2614004F0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_261400554(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 96) = a2;
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = v2;
  return MEMORY[0x270FA2498](sub_261400578, 0, 0);
}

uint64_t sub_261400578()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 56) + OBJC_IVAR____TtC12VoiceActions16VARequestContext_ingestionBufferActor);
  char v2 = *(unsigned char *)(v0 + 96);
  *(void *)(v0 + 64) = v1;
  uint64_t v6 = (uint64_t (*)(void, uint64_t, void))(*(void *)(*(void *)v1 + 448)
                                                       + **(int **)(*(void *)v1 + 448));
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_2614006AC;
  uint64_t v4 = *(void *)(v0 + 48);
  return v6(0, v4, v2 & 1);
}

uint64_t sub_2614006AC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)*v3;
  v5[2] = v3;
  v5[3] = a1;
  v5[4] = a2;
  v5[5] = v2;
  v5[10] = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v6 = sub_261400B14;
  }
  else
  {
    swift_release();
    v5[11] = a1;
    uint64_t v6 = sub_2614007E4;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_2614007E4()
{
  void (*v3)(uint64_t *__return_ptr, uint64_t);
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t (*v10)(void);
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t (*v16)(void);
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v23;
  int v24;
  char v25;
  char v26;
  long long v27;
  char v28;
  uint64_t v29;
  char v30;
  char v31;
  int v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  __int16 v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  uint64_t v42;
  int v43;
  char v44;
  char v45;
  long long v46;
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  int v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  __int16 v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;

  uint64_t v61 = v0;
  uint64_t v1 = *(void *)(v0 + 88);
  if (v1) {
    uint64_t v2 = *(void *)(v0 + 88);
  }
  else {
    uint64_t v2 = MEMORY[0x263F8EE78];
  }
  uint64_t v3 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v0 + 56) + 280);
  uint64_t v4 = swift_bridgeObjectRetain();
  v3(&v23, v4);
  uint64_t v42 = v23;
  uint64_t v43 = v24;
  uint64_t v44 = v25;
  uint64_t v45 = v26;
  uint64_t v46 = v27;
  uint64_t v47 = v28;
  os_log_type_t v48 = v29;
  objc_super v49 = v30;
  uint64_t v50 = v31;
  uint64_t v51 = v32;
  uint64_t v52 = v33;
  uint64_t v53 = v34;
  uint64_t v54 = v35;
  uint64_t v55 = v36;
  int v56 = v37;
  uint64_t v57 = v38;
  uint64_t v58 = v39;
  uint64_t v59 = v40;
  int v60 = v41;
  uint64_t v5 = sub_2614B8FE8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v7 = OBJC_IVAR____TtC12VoiceActions16VARequestContext_configuration;
  uint64_t v8 = *(void **)(v6 + OBJC_IVAR____TtC12VoiceActions16VARequestContext_configuration);
  uint64_t v9 = (void *)MEMORY[0x263F8EED0];
  uint64_t v10 = *(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v8) + 0x80);
  uint64_t v11 = v8;
  uint64_t v12 = (void *)v10();

  int64_t v13 = (*(uint64_t (**)(void))((*v9 & *v12) + 0x100))();
  if (v13 > 0)
  {
    uint64_t v14 = (*(uint64_t (**)(void))(**(void **)(v0 + 56) + 256))();
    long long v15 = *(void **)(v6 + v7);
    char v16 = *(uint64_t (**)(void))((*v9 & *v15) + 0x80);
    char v17 = v15;
    uint64_t v18 = (void *)v16();

    long long v19 = (*(uint64_t (**)(void))((*v9 & *v18) + 0xD0))();
    (*(void (**)(uint64_t, uint64_t))(*(void *)v14 + 152))(v2, v19);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
  }
  if (v1) {
    uint64_t v20 = *(void *)(v0 + 32);
  }
  else {
    uint64_t v20 = 0;
  }
  long long v21 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v21(v2, v20);
}

uint64_t sub_261400B14()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_261400B78()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2614D50C8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v0 + 280))(&v35, v4);
  uint64_t v16 = v35;
  int v17 = v36;
  char v18 = v37;
  char v19 = v38;
  long long v20 = v39;
  char v21 = v40;
  uint64_t v22 = v41;
  char v23 = v42;
  char v24 = v43;
  int v25 = v44;
  char v26 = v45;
  uint64_t v27 = v46;
  uint64_t v28 = v47;
  __int16 v29 = v48;
  char v30 = v49;
  char v31 = v50;
  char v32 = v51;
  char v33 = v52;
  char v34 = v53;
  char v7 = sub_2614B8FE8();
  swift_bridgeObjectRelease();
  uint64_t v8 = swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    uint64_t v9 = sub_26146718C();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v9, v2);
    uint64_t v10 = sub_2614D50A8();
    os_log_type_t v11 = sub_2614D5978();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_2613B8000, v10, v11, "Attempted to look at prediction window. This is not maintained unless returnKeywordAudio is true.", v12, 2u);
      MEMORY[0x263E38060](v12, -1, -1);
    }

    uint64_t v8 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 256))(v8);
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 168))(v13);
  swift_release();
  return v14;
}

uint64_t sub_261400E30(uint64_t a1)
{
  void (**v13)(uint64_t *__return_ptr, uint64_t);
  void (*v14)(uint64_t *__return_ptr, uint64_t);
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  float v22;
  uint64_t result;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t *);
  void *v30;
  void *v31;
  void *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void v38[2];
  uint64_t v39;
  int v40;
  __int16 v41;
  long long v42;
  char v43;
  uint64_t v44;
  char v45;
  char v46;
  int v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  __int16 v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  uint64_t v57;
  unint64_t v58;
  long long v59;
  char v60;
  uint64_t v61;
  char v62;
  char v63;
  int v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  __int16 v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;
  uint64_t v74;

  uint64_t v3 = (uint64_t (*)(uint64_t *, void))v1;
  uint64_t v5 = sub_2613C23AC(&qword_26A914EE0);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v38[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (*(void *(**)(uint64_t *__return_ptr, uint64_t))(*(void *)a1 + 144))(&v57, v6);
  uint64_t v10 = v58;
  if (!v58)
  {
    sub_2613DC2B8();
    swift_allocError();
    char *v32 = 0xD000000000000029;
    char v33 = 0x80000002614E2080;
LABEL_15:
    v32[1] = v33;
    return swift_willThrow();
  }
  char v37 = v8;
  int v74 = v2;
  uint64_t v11 = v57;
  float v12 = *(float *)&v59;
  uint64_t v13 = (void (**)(uint64_t *__return_ptr, uint64_t))(*v1 + 280);
  uint64_t v14 = *v13;
  (*v13)(&v57, (uint64_t)v9);
  long long v39 = v57;
  char v40 = v58;
  uint64_t v41 = WORD2(v58);
  char v42 = v59;
  char v43 = v60;
  int v44 = v61;
  char v45 = v62;
  uint64_t v46 = v63;
  uint64_t v47 = v64;
  __int16 v48 = v65;
  char v49 = v66;
  char v50 = v67;
  char v51 = v68;
  char v52 = v69;
  char v53 = v70;
  uint64_t v54 = v71;
  uint64_t v55 = v72;
  int v56 = v73;
  long long v15 = VARuntimeParameters.keywordsToThresholds.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v15 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  sub_2613D8F00(v11, v10);
  int v17 = v16;
  swift_bridgeObjectRelease();
  char v18 = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
LABEL_14:
    uint64_t v57 = 0;
    uint64_t v58 = 0xE000000000000000;
    sub_2614D5C38();
    swift_bridgeObjectRelease();
    strcpy((char *)v38, "missing key ");
    BYTE5(v38[1]) = 0;
    HIWORD(v38[1]) = -5120;
    sub_2614D54D8();
    swift_bridgeObjectRelease();
    char v34 = sub_2614D54D8();
    v14(&v57, v34);
    long long v39 = v57;
    char v40 = v58;
    uint64_t v41 = WORD2(v58);
    char v42 = v59;
    char v43 = v60;
    int v44 = v61;
    char v45 = v62;
    uint64_t v46 = v63;
    uint64_t v47 = v64;
    __int16 v48 = v65;
    char v49 = v66;
    char v50 = v67;
    char v51 = v68;
    char v52 = v69;
    char v53 = v70;
    uint64_t v54 = v71;
    uint64_t v55 = v72;
    int v56 = v73;
    uint64_t v35 = VARuntimeParameters.keywordsToThresholds.getter();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v39 = v35;
    sub_2613C23AC(&qword_26A914EE8);
    sub_261403944(&qword_26A914EF0, &qword_26A914EE8);
    sub_2613DC3BC();
    sub_2614D55D8();
    swift_bridgeObjectRelease();
    sub_2614D54D8();
    swift_bridgeObjectRelease();
    int v36 = v38[0];
    char v33 = v38[1];
    sub_2613DC2B8();
    swift_allocError();
    char *v32 = v36;
    goto LABEL_15;
  }
  v14(&v57, v18);
  long long v39 = v57;
  char v40 = v58;
  uint64_t v41 = WORD2(v58);
  char v42 = v59;
  char v43 = v60;
  int v44 = v61;
  char v45 = v62;
  uint64_t v46 = v63;
  uint64_t v47 = v64;
  __int16 v48 = v65;
  char v49 = v66;
  char v50 = v67;
  char v51 = v68;
  char v52 = v69;
  char v53 = v70;
  uint64_t v54 = v71;
  uint64_t v55 = v72;
  int v56 = v73;
  char v19 = VARuntimeParameters.keywordsToThresholds.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v19 + 16))
  {
LABEL_21:
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  long long v20 = sub_2613D8F00(v11, v10);
  if ((v21 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  uint64_t v22 = *(float *)(*(void *)(v19 + 56) + 4 * v20);
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_bridgeObjectRelease();
  if (v22 < v12)
  {
    char v24 = v37;
    (*(void (**)(uint64_t))(*(void *)v3 + 136))(result);
    int v25 = sub_2614D4CE8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
    char v26 = (*(uint64_t (**)(char *))(*(void *)a1 + 248))(v24);
    uint64_t v27 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 232))(v26);
    if (v27 >> 62) {
      uint64_t v28 = sub_2614D5D98();
    }
    else {
      uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (__OFADD__(v28, 1))
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(uint64_t))(*(void *)a1 + 344))(v28 + 1);
      __int16 v29 = *(uint64_t (**)(uint64_t *))(*(void *)v3 + 248);
      swift_retain();
      uint64_t v3 = (uint64_t (*)(uint64_t *, void))v29(&v57);
      char v31 = v30;
      MEMORY[0x263E36760]();
      if (*(void *)((*v31 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
LABEL_11:
        sub_2614D56E8();
        sub_2614D5678();
        return v3(&v57, 0);
      }
    }
    sub_2614D5698();
    goto LABEL_11;
  }
  return result;
}

char *sub_261401598()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2614D5408();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2614D4AA8();
  MEMORY[0x270FA5388](v5);
  sub_2614D4AE8();
  swift_allocObject();
  sub_2614D4AD8();
  sub_2613C23AC(&qword_26A914DE0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2614D81F0;
  sub_2614D4A98();
  sub_2614D4A88();
  uint64_t v17 = v6;
  sub_26140375C(&qword_26A914DE8, MEMORY[0x263F06130]);
  sub_2613C23AC(&qword_26A914DF0);
  sub_261403944((unint64_t *)&qword_26A914DF8, &qword_26A914DF0);
  sub_2614D5BF8();
  sub_2614D4AB8();
  uint64_t v17 = v1;
  type metadata accessor for VARequestContext(0);
  sub_26140375C(&qword_26A914EF8, (void (*)(uint64_t))type metadata accessor for VARequestContext);
  uint64_t v7 = v16[1];
  uint64_t v8 = sub_2614D4AC8();
  if (!v7)
  {
    uint64_t v10 = v8;
    unint64_t v11 = v9;
    sub_2614D53F8();
    uint64_t v12 = sub_2614D53C8();
    if (v13)
    {
      uint64_t v4 = (char *)v12;
      sub_2613C2314(v10, v11);
      swift_release();
      return v4;
    }
    sub_2613DC2B8();
    swift_allocError();
    void *v15 = 0xD00000000000001CLL;
    v15[1] = 0x80000002614E20B0;
    swift_willThrow();
    sub_2613C2314(v10, v11);
  }
  swift_release();
  return v4;
}

uint64_t sub_2614018CC(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v1 + 280))(&v23);
  uint64_t v4 = v23;
  int v5 = v24;
  char v6 = v25;
  char v7 = v26;
  long long v8 = v27;
  char v9 = v28;
  uint64_t v10 = v29;
  char v11 = v30;
  char v12 = v31;
  int v13 = v32;
  char v14 = v33;
  uint64_t v15 = v34;
  uint64_t v16 = v35;
  __int16 v17 = v36;
  char v18 = v37;
  char v19 = v38;
  char v20 = v39;
  char v21 = v40;
  char v22 = v41;
  (*(void (**)(uint64_t *))(*(void *)a1 + 152))(&v4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_261401A10()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2614D50C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  int v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26146718C();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  char v7 = sub_2614D50A8();
  os_log_type_t v8 = sub_2614D5988();
  if (os_log_type_enabled(v7, v8))
  {
    char v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v9 = 0;
    _os_log_impl(&dword_2613B8000, v7, v8, "deinit VARequestContext", v9, 2u);
    MEMORY[0x263E38060](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v10 = v1 + OBJC_IVAR____TtC12VoiceActions16VARequestContext_uuid;
  uint64_t v11 = sub_2614D4CE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_261401C24()
{
  sub_261401A10();
  return swift_deallocClassInstance();
}

double sub_261401C7C()
{
  v3[1] = *(mach_timebase_info *)MEMORY[0x263EF8340];
  v3[0] = 0;
  mach_timebase_info(v3);
  LODWORD(v0) = v3[0].denom;
  LODWORD(v1) = v3[0].numer;
  double result = (double)v0 / (double)v1;
  qword_26A920148 = *(void *)&result;
  return result;
}

uint64_t sub_261401CE8()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 320))();
}

uint64_t sub_261401D34(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = (uint64_t *)(*v1 + 16);
  uint64_t v4 = *v3;
  if (*v3 >= a1)
  {
    sub_2613C23AC(&qword_26A914F58);
    uint64_t v8 = swift_allocObject();
    long long v11 = *(_OWORD *)(v2 + 24);
    *(void *)(v8 + 16) = v4;
    *(_OWORD *)(v8 + 24) = v11;
    if ((uint64_t)v11 >= 1) {
      sub_261402508(v8 + 16, (char *)(v8 + 40), v3, (char *)(v2 + 40));
    }
  }
  else
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v1;
    sub_2614D4D28();
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v7 = *(void *)(v6 + 24);
      sub_2613C23AC(&qword_26A914F58);
      uint64_t v8 = swift_allocObject();
      int64_t v9 = j__malloc_size((const void *)v8);
      uint64_t v10 = v9 - 40;
      if (v9 < 40) {
        uint64_t v10 = v9 - 37;
      }
      *(void *)(v8 + 16) = v10 >> 2;
      *(void *)(v8 + 24) = v7;
      *(void *)(v8 + 32) = 0;
      if (v7 >= 1)
      {
        swift_retain();
        sub_261402260(v8 + 16, (char *)(v8 + 40), (void *)(v6 + 16), (char *)(v6 + 40));
        *(void *)(v6 + 24) = 0;
        swift_release();
      }
    }
    else
    {
      sub_2613C23AC(&qword_26A914F58);
      uint64_t v8 = swift_allocObject();
      int64_t v12 = j__malloc_size((const void *)v8);
      uint64_t v13 = v12 - 40;
      if (v12 < 40) {
        uint64_t v13 = v12 - 37;
      }
      uint64_t v14 = *(void *)(v6 + 24);
      *(void *)(v8 + 16) = v13 >> 2;
      *(void *)(v8 + 24) = v14;
      *(void *)(v8 + 32) = 0;
      if (v14 >= 1) {
        sub_261402390(v8 + 16, (char *)(v8 + 40), (void *)(v6 + 16), (char *)(v6 + 40));
      }
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v8;
  return result;
}

uint64_t *sub_261401F04(uint64_t *result, uint64_t a2, char *a3, uint64_t a4)
{
  if (a4 < 1) {
    return result;
  }
  uint64_t v7 = result;
  uint64_t result = (uint64_t *)result[1];
  uint64_t v8 = (uint64_t)result + a4;
  if (__OFADD__(result, a4))
  {
    __break(1u);
    goto LABEL_9;
  }
  v7[1] = v8;
  if (v8 < (uint64_t)result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  sub_261402670((uint64_t)result, v8, v7, a2, (uint64_t)&v11);
  long long v15 = v11;
  sub_261404234((uint64_t)&v15, (uint64_t)v16, &qword_26A914F70);
  sub_261404234((uint64_t)v16, (uint64_t)&v22, &qword_26A914F70);
  uint64_t v9 = v12;
  uint64_t v10 = v13;
  if (v14 & 1 | (v13 == 0))
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  uint64_t v17 = v22;
  uint64_t v18 = *((void *)&v15 + 1);
  uint64_t v19 = v9;
  uint64_t v20 = v10;
  char v21 = v14 & 1 | (v13 == 0);
  return (uint64_t *)sub_261401FEC(a3, a4);
}

void *sub_261401FEC(char *a1, uint64_t a2)
{
  sub_261404234((uint64_t)(v2 + 1), (uint64_t)v14, &qword_26A914F60);
  uint64_t result = (void *)sub_261404234((uint64_t)v14, (uint64_t)&v15, &qword_26A914F60);
  if ((v16 & 1) == 0)
  {
    long long v17 = v15;
    long long v12 = *v2;
    uint64_t v8 = *((void *)&v12 + 1);
    if ((*((void *)&v12 + 1) & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      if (a1)
      {
        if (*((void *)&v12 + 1))
        {
          sub_261404234((uint64_t)&v12, (uint64_t)v13, &qword_26A914F68);
          sub_261404234((uint64_t)v13, (uint64_t)&v18, &qword_26A914F68);
          uint64_t result = v18;
          if (v18)
          {
            size_t v9 = 4 * v8;
            if (&v18[4 * v8] > a1 && &a1[v9] > v18) {
              goto LABEL_33;
            }
            uint64_t result = memcpy(v18, a1, v9);
          }
        }
      }
      uint64_t v10 = a2;
      if (!__OFADD__(v8, a2 - v8))
      {
        if (a2 >= v8)
        {
          if (a1)
          {
            uint64_t v11 = a2 - v8;
            if (v10 != v8)
            {
              if (*((uint64_t *)&v17 + 1) >= v11)
              {
                sub_261404234((uint64_t)&v17, (uint64_t)v19, &qword_26A914F68);
                sub_261404234((uint64_t)v19, (uint64_t)&v20, &qword_26A914F68);
                uint64_t result = (void *)v20;
                if (!v20) {
                  return result;
                }
                uint64_t v7 = &a1[4 * v8];
                if ((unint64_t)v7 >= v20 + 4 * v11 || (unint64_t)&a1[4 * v10] <= v20)
                {
                  size_t v6 = 4 * v11;
                  return memcpy(result, v7, v6);
                }
LABEL_33:
                uint64_t result = (void *)sub_2614D5DE8();
                __break(1u);
                return result;
              }
LABEL_32:
              __break(1u);
              goto LABEL_33;
            }
          }
          return result;
        }
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
    }
    __break(1u);
    goto LABEL_30;
  }
  if (a1 && a2)
  {
    long long v17 = *v2;
    if (*((uint64_t *)&v17 + 1) >= a2)
    {
      sub_261404234((uint64_t)&v17, (uint64_t)&v20, &qword_26A914F68);
      sub_261404234((uint64_t)&v20, (uint64_t)&v12, &qword_26A914F68);
      uint64_t result = (void *)v12;
      if (!(void)v12) {
        return result;
      }
      if ((a2 & 0x8000000000000000) == 0)
      {
        size_t v6 = 4 * a2;
        if ((uint64_t)v12 + 4 * a2 <= (unint64_t)a1 || (unint64_t)&a1[v6] <= (unint64_t)v12)
        {
          uint64_t v7 = a1;
          return memcpy(result, v7, v6);
        }
      }
      goto LABEL_33;
    }
    goto LABEL_31;
  }
  return result;
}

void sub_261402260(int a1, char *__dst, void *a3, char *a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v7 = a3[1];
  if (v5 < v7)
  {
    uint64_t v8 = v7 - v5;
    if (!__OFSUB__(v7, v5))
    {
      uint64_t v9 = *a3 - v4;
      uint64_t v10 = a4;
      goto LABEL_6;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v10 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = a3[1];
LABEL_6:
  BOOL v11 = v5 < v7;
  BOOL v12 = v8 != 0;
  BOOL v13 = v11 && v12;
  if (v11 && v12) {
    char v14 = v10;
  }
  else {
    char v14 = 0;
  }
  if (v11 && v12) {
    uint64_t v15 = v8;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v9 < 1)
  {
    uint64_t v9 = 0;
    goto LABEL_18;
  }
  if (!a4)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  char v16 = &a4[4 * v4];
  if (v16 != __dst || &v16[4 * v9] <= __dst) {
    memmove(__dst, v16, 4 * v9);
  }
LABEL_18:
  if (!v13 || v15 <= 0) {
    return;
  }
  if (!v14)
  {
LABEL_32:
    __break(1u);
    return;
  }
  long long v17 = &__dst[4 * v9];
  if (v17 != v14 || v17 >= &v14[4 * v15])
  {
    memmove(v17, v14, 4 * v15);
  }
}

void sub_261402390(int a1, char *__dst, void *a3, char *__src)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = a3[1];
  if (v5 >= v7)
  {
    uint64_t v10 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = a3[1];
    if (v7 < 1) {
      goto LABEL_5;
    }
    goto LABEL_7;
  }
  uint64_t v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v9 = *a3 - v4;
  uint64_t v10 = __src;
  if (v5 < 1)
  {
LABEL_5:
    uint64_t v9 = 0;
    goto LABEL_13;
  }
LABEL_7:
  if (!__src)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  BOOL v11 = &__src[4 * v4];
  if (v11 < &__dst[4 * v9] && &v11[4 * v9] > __dst) {
    goto LABEL_29;
  }
  memcpy(__dst, v11, 4 * v9);
LABEL_13:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      char v14 = &__dst[4 * v9];
      size_t v15 = 4 * v8;
      if (&v14[4 * v8] <= v10 || v14 >= &v10[v15])
      {
        memcpy(v14, v10, v15);
        return;
      }
LABEL_29:
      sub_2614D5DE8();
      __break(1u);
      return;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
}

void sub_261402508(int a1, char *__dst, void *a3, char *__src)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v7 = a3[1];
  if (v5 >= v7)
  {
    uint64_t v10 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = a3[1];
    if (v7 < 1) {
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  uint64_t v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v9 = *a3 - v4;
  uint64_t v10 = __src;
  if (v5 < 1) {
    goto LABEL_14;
  }
LABEL_7:
  if (!__src)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  BOOL v11 = &__src[4 * v4];
  BOOL v12 = &__dst[4 * v4];
  size_t v13 = 4 * v9;
  char v14 = &v12[4 * v9];
  size_t v15 = &v11[4 * v9];
  if (v11 < v14 && v12 < v15) {
    goto LABEL_30;
  }
  memcpy(v12, v11, v13);
LABEL_14:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      size_t v18 = 4 * v8;
      if (&__dst[4 * v8] <= v10 || &v10[v18] <= __dst)
      {
        memcpy(__dst, v10, v18);
        return;
      }
LABEL_30:
      sub_2614D5DE8();
      __break(1u);
      return;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
}

uint64_t sub_261402670@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5 = a3[2];
  uint64_t v6 = v5 + result;
  uint64_t v7 = *a3;
  if (v5 + result >= *a3) {
    uint64_t v8 = *a3;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v5 + a2;
  if (v5 + a2 >= v7) {
    uint64_t v10 = *a3;
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = v6 - v8;
    uint64_t v13 = v9 - v10;
    if (v11) {
      BOOL v14 = v12 < v13;
    }
    else {
      BOOL v14 = 1;
    }
    int v15 = v14;
    if (v15 == 1)
    {
      uint64_t v16 = 0;
      uint64_t v13 = 0;
LABEL_18:
      *(void *)a5 = a4 + 4 * v12;
      *(void *)(a5 + 8) = v11;
      *(void *)(a5 + 16) = v16;
      *(void *)(a5 + 24) = v13;
      *(unsigned char *)(a5 + 32) = v15;
      return result;
    }
    uint64_t v11 = v7 - v12;
    if (!__OFSUB__(v7, v12))
    {
      uint64_t v16 = a4;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2614026E8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (uint64_t *)(*v0 + 16);
  uint64_t v3 = *v2;
  sub_2613C23AC(&qword_26A914F58);
  uint64_t v4 = swift_allocObject();
  long long v5 = *(_OWORD *)(v1 + 24);
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v5;
  if ((uint64_t)v5 >= 1) {
    sub_261402508(v4 + 16, (char *)(v4 + 40), v2, (char *)(v1 + 40));
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v4;
  return result;
}

uint64_t *sub_261402780(uint64_t *result, uint64_t a2, uint64_t a3)
{
  if (a3 >= 1)
  {
    uint64_t v4 = result;
    uint64_t result = (uint64_t *)sub_261402670(0, a3, result, a2, (uint64_t)v10);
    uint64_t v5 = v4[2];
    BOOL v7 = __OFADD__(v5, a3);
    uint64_t v6 = v5 + a3;
    if (v7)
    {
      __break(1u);
    }
    else
    {
      BOOL v7 = __OFSUB__(v6, *v4);
      if (v6 >= *v4)
      {
        v6 -= *v4;
        if (v7) {
          goto LABEL_10;
        }
      }
      v4[2] = v6;
      uint64_t v8 = v4[1];
      BOOL v7 = __OFSUB__(v8, a3);
      uint64_t v9 = v8 - a3;
      if (!v7)
      {
        v4[1] = v9;
        return result;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  return result;
}

uint64_t sub_26140281C(uint64_t result, uint64_t a2, void *a3)
{
  uint64_t v3 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    if (!v3) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v6 = result;
    if (v3 <= 0)
    {
      BOOL v7 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      sub_2613C23AC(&qword_26A914AC0);
      BOOL v7 = (void *)swift_allocObject();
      int64_t v8 = j__malloc_size(v7);
      uint64_t v9 = v8 - 32;
      if (v8 < 32) {
        uint64_t v9 = v8 - 29;
      }
      v7[2] = v3;
      v7[3] = 2 * (v9 >> 2);
    }
    swift_retain();
    uint64_t v10 = sub_26140290C(&v11, (uint64_t)(v7 + 4), v3, v6, a2, a3);
    uint64_t result = swift_release();
    if (v10 == v3) {
      return (uint64_t)v7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_26140290C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v9 = a6 + 2;
  uint64_t v10 = (uint64_t)(a6 + 5);
  swift_retain();
  sub_261402BE0(v9, v10, (void *(*)(uint64_t *__return_ptr, uint64_t, void))sub_261404214);
  uint64_t v12 = v11;
  LOBYTE(v10) = v13;
  uint64_t result = swift_release();
  if ((v10 & 1) == 0)
  {
    uint64_t v15 = a4 + v12;
    if (!__OFADD__(a4, v12))
    {
      uint64_t v16 = a5;
      long long v17 = a6;
      a3 = v12;
LABEL_10:
      *a1 = a4;
      a1[1] = v16;
      a1[2] = (uint64_t)v17;
      a1[3] = v15;
      return a3;
    }
    goto LABEL_28;
  }
  uint64_t v16 = a5;
  long long v17 = a6;
  if (!a2) {
    goto LABEL_8;
  }
  if (!a3)
  {
LABEL_9:
    uint64_t v15 = a4;
    goto LABEL_10;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (a5 != a4)
    {
      if (a5 <= a4)
      {
LABEL_24:
        __break(1u);
LABEL_25:
        uint64_t v15 = a5;
        a3 = a5 - a4;
        goto LABEL_10;
      }
      uint64_t v18 = 0;
      uint64_t v20 = a6[3];
      uint64_t v19 = a6[4];
      uint64_t v21 = a6[2];
      if (v20 <= a4) {
        uint64_t v20 = a4;
      }
      uint64_t v22 = v20 - a4;
      uint64_t v23 = v19 + a4;
      uint64_t result = (uint64_t)a6 + 4 * v19 + 4 * a4 + 40;
      while ((a4 & 0x8000000000000000) == 0)
      {
        if (v22 == v18) {
          goto LABEL_27;
        }
        uint64_t v15 = a4 + v18 + 1;
        if (v23 + v18 >= v21) {
          uint64_t v24 = v21;
        }
        else {
          uint64_t v24 = 0;
        }
        *(_DWORD *)(a2 + 4 * v18) = *(_DWORD *)(result - 4 * v24 + 4 * v18);
        if (a3 - 1 == v18) {
          goto LABEL_10;
        }
        if (!(a4 - a5 + 1 + v18)) {
          goto LABEL_25;
        }
        if (v15 >= a4)
        {
          ++v18;
          if (v15 < a5) {
            continue;
          }
        }
        goto LABEL_24;
      }
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
LABEL_8:
    a3 = 0;
    goto LABEL_9;
  }
LABEL_29:
  __break(1u);
  return result;
}

char *sub_261402AB8(char *__src, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = __src;
  if (!a2 || !a4) {
    return v4;
  }
  if (a2 >= a4) {
    uint64_t v5 = a4;
  }
  else {
    uint64_t v5 = a2;
  }
  if ((v5 & 0x8000000000000000) == 0 && (&__dst[4 * v5] <= __src || &__src[4 * v5] <= __dst))
  {
    memcpy(__dst, __src, 4 * v5);
    v4 += 4 * v5;
    return v4;
  }
  uint64_t result = (char *)sub_2614D5DE8();
  __break(1u);
  return result;
}

void *sub_261402BE0(void *result, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t, void))
{
  uint64_t v4 = result[2];
  uint64_t v5 = result[1] + v4;
  if (*result < v5) {
    return 0;
  }
  if (v5 < v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (__OFSUB__(v5, v4))
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t result = a3(&v6, a2 + 4 * v4, result[1]);
  if (!v3) {
    return (void *)v6;
  }
  return result;
}

void *sub_261402C74@<X0>(void *result@<X0>, void *a2@<X2>, void *(*a3)(long long *__return_ptr, char *, uint64_t)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  BOOL v8 = __OFSUB__(v7, *a2);
  uint64_t v9 = v7 - *a2;
  if (v8)
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v8 = __OFADD__(v6, v9);
  uint64_t v10 = v6 + v9;
  if (v8)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v11 = v10 - v6;
  if (v10 < v6)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = (char *)result + 4 * v6;
  if (result) {
    char v13 = v12;
  }
  else {
    char v13 = 0;
  }
  uint64_t result = a3(&v15, v13, v11);
  if (!v4)
  {
    uint64_t v14 = v16;
    *(_OWORD *)a4 = v15;
    *(void *)(a4 + 16) = v14;
  }
  return result;
}

uint64_t sub_261402CF4(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_261402DD4;
  return v5(v2 + 32);
}

uint64_t sub_261402DD4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  unsigned char *v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_261402EE8(void *a1, char a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  swift_defaultActor_initialize();
  uint64_t v10 = *(void *)sub_2614D4D18();
  *(void *)(v5 + 152) = 0;
  *(unsigned char *)(v5 + 136) = 0;
  *(void *)(v5 + 112) = v10;
  *(void *)(v5 + 120) = 0;
  *(void *)(v5 + 128) = 0;
  *(void *)(v5 + 168) = 0;
  *(unsigned char *)(v5 + 160) = 1;
  *(unsigned char *)(v5 + 176) = 1;
  *(unsigned char *)(v5 + 178) = 0;
  uint64_t v11 = v5 + OBJC_IVAR____TtC12VoiceActions25IngestionAudioBufferActor_continuation;
  uint64_t v12 = sub_2613C23AC(&qword_26A914E18);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(void *)(v5 + 144) = a1;
  swift_beginAccess();
  *(void *)(v5 + 168) = a3;
  *(unsigned char *)(v5 + 176) = a4 & 1;
  *(unsigned char *)(v5 + 177) = a2;
  char v13 = *(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *a1) + 0xB8);
  swift_retain();
  uint64_t v14 = a1;
  *(void *)(v5 + 184) = v13();
  return v5;
}

unint64_t sub_261403034()
{
  unint64_t result = qword_26A914E38;
  if (!qword_26A914E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914E38);
  }
  return result;
}

uint64_t sub_261403088(uint64_t a1, double a2)
{
  double v4 = a2 * 1000000000.0;
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v4 <= -1.0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v4 < 1.84467441e19)
  {
    uint64_t v2 = a1;
    double v3 = (double)(unint64_t)v4;
    if (qword_26A918870 == -1) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  __break(1u);
LABEL_13:
  swift_once();
LABEL_5:
  uint64_t result = swift_beginAccess();
  double v6 = *(double *)&qword_26A920148 * v3;
  if ((~COERCE__INT64(*(double *)&qword_26A920148 * v3) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v6 <= -1.0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v6 >= 1.84467441e19)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t result = v2 + (unint64_t)v6;
  if (__CFADD__(v2, (unint64_t)v6)) {
LABEL_17:
  }
    __break(1u);
  return result;
}

uint64_t type metadata accessor for IngestionAudioBufferActor(uint64_t a1)
{
  return sub_2613C25C4(a1, (uint64_t *)&unk_26A919090);
}

uint64_t sub_2614031C4(uint64_t a1)
{
  return sub_2613FD754(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t type metadata accessor for StopProcessingActor()
{
  return self;
}

uint64_t sub_2614031F0(void *a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_2614D4CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = *a2;
  int v10 = *((_DWORD *)a2 + 2);
  int v11 = *((unsigned __int8 *)a2 + 12);
  int v42 = *((unsigned __int8 *)a2 + 13);
  int v43 = v11;
  uint64_t v12 = a2[2];
  uint64_t v40 = a2[3];
  uint64_t v41 = v12;
  LODWORD(v12) = *((unsigned __int8 *)a2 + 32);
  uint64_t v13 = a2[5];
  char v14 = *((unsigned char *)a2 + 48);
  char v15 = *((unsigned char *)a2 + 49);
  int v16 = *((_DWORD *)a2 + 13);
  int v38 = *((unsigned __int8 *)a2 + 56);
  int v39 = v12;
  uint64_t v17 = a2[8];
  uint64_t v36 = a2[9];
  uint64_t v37 = v17;
  LODWORD(v17) = *((unsigned __int16 *)a2 + 40);
  int v34 = *((unsigned __int8 *)a2 + 82);
  int v35 = v17;
  LODWORD(v17) = *((unsigned __int8 *)a2 + 83);
  int v32 = *((unsigned __int8 *)a2 + 84);
  int v33 = v17;
  LODWORD(v17) = *((unsigned __int8 *)a2 + 85);
  int v30 = *((unsigned __int8 *)a2 + 86);
  int v31 = v17;
  uint64_t v18 = OBJC_IVAR____TtC12VoiceActions16VARequestContext_stopProcessingActor;
  type metadata accessor for StopProcessingActor();
  uint64_t v19 = swift_allocObject();
  swift_defaultActor_initialize();
  *(unsigned char *)(v19 + 112) = 0;
  *(void *)(v3 + v18) = v19;
  sub_2614D4CD8();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v3 + OBJC_IVAR____TtC12VoiceActions16VARequestContext_uuid, v9, v6);
  *(void *)(v3 + OBJC_IVAR____TtC12VoiceActions16VARequestContext_results) = MEMORY[0x263F8EE78];
  *(void *)(v3 + OBJC_IVAR____TtC12VoiceActions16VARequestContext_configuration) = a1;
  uint64_t v20 = (void *)MEMORY[0x263F8EED0];
  uint64_t v21 = *(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *a1) + 0x80);
  a1;
  uint64_t v22 = (void *)v21();
  type metadata accessor for IngestionAudioBufferActor(0);
  swift_allocObject();
  uint64_t v23 = sub_261402EE8(v22, v15, v13, v14);

  *(void *)(v3 + OBJC_IVAR____TtC12VoiceActions16VARequestContext_ingestionBufferActor) = v23;
  uint64_t v24 = v3 + OBJC_IVAR____TtC12VoiceActions16VARequestContext_runtimeParameters;
  *(void *)uint64_t v24 = v44;
  *(_DWORD *)(v24 + 8) = v10;
  *(unsigned char *)(v24 + 12) = v43;
  *(unsigned char *)(v24 + 13) = v42;
  uint64_t v25 = v40;
  *(void *)(v24 + 16) = v41;
  *(void *)(v24 + 24) = v25;
  *(unsigned char *)(v24 + 32) = v39;
  *(void *)(v24 + 40) = v13;
  *(unsigned char *)(v24 + 48) = v14;
  *(unsigned char *)(v24 + 49) = v15;
  *(_DWORD *)(v24 + 52) = v16;
  *(unsigned char *)(v24 + 56) = v38;
  uint64_t v26 = v36;
  *(void *)(v24 + 64) = v37;
  *(void *)(v24 + 72) = v26;
  *(_WORD *)(v24 + 80) = v35;
  *(unsigned char *)(v24 + 82) = v34;
  *(unsigned char *)(v24 + 83) = v33;
  *(unsigned char *)(v24 + 84) = v32;
  *(unsigned char *)(v24 + 85) = v31;
  *(unsigned char *)(v24 + 86) = v30;
  type metadata accessor for VAFixedLengthQueue();
  long long v27 = (void *)v21();
  uint64_t v28 = (*(uint64_t (**)(void))((*v20 & *v27) + 0x100))();

  *(void *)(v3 + OBJC_IVAR____TtC12VoiceActions16VARequestContext_predictionWindow) = sub_261419438(v28);
  return v3;
}

uint64_t sub_26140353C(uint64_t a1)
{
  return a1;
}

uint64_t sub_261403574()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2614035AC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 127, 7);
}

uint64_t sub_2614035FC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_2613E3EDC;
  v5[6] = v4;
  v5[7] = v1 + 40;
  v5[5] = a1;
  return MEMORY[0x270FA2498](sub_2613FE17C, 0, 0);
}

uint64_t sub_2614036BC()
{
  unint64_t v0 = sub_2614D5E08();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

unint64_t sub_261403708()
{
  unint64_t result = qword_26A914E80;
  if (!qword_26A914E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914E80);
  }
  return result;
}

uint64_t sub_26140375C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2614037A4()
{
  unint64_t result = qword_26A914E90;
  if (!qword_26A914E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914E90);
  }
  return result;
}

unint64_t sub_2614037F8()
{
  unint64_t result = qword_26A914E98;
  if (!qword_26A914E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914E98);
  }
  return result;
}

unint64_t sub_26140384C()
{
  unint64_t result = qword_26A914EA0;
  if (!qword_26A914EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914EA0);
  }
  return result;
}

unint64_t sub_2614038A0()
{
  unint64_t result = qword_26A914EB0;
  if (!qword_26A914EB0)
  {
    sub_2613C5EC8(&qword_26A914EA8);
    sub_26140375C(qword_26A914EB8, (void (*)(uint64_t))type metadata accessor for VAInstrumentedKeywordResult);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914EB0);
  }
  return result;
}

uint64_t sub_261403944(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2613C5EC8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for VARequestContext(uint64_t a1)
{
  return sub_2613C25C4(a1, (uint64_t *)&unk_26A9190A0);
}

unint64_t sub_2614039AC()
{
  unint64_t result = qword_26A914F00;
  if (!qword_26A914F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914F00);
  }
  return result;
}

unint64_t sub_261403A04()
{
  unint64_t result = qword_26A914F08;
  if (!qword_26A914F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914F08);
  }
  return result;
}

unint64_t sub_261403A5C()
{
  unint64_t result = qword_26A914F10;
  if (!qword_26A914F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914F10);
  }
  return result;
}

unint64_t sub_261403AB4()
{
  unint64_t result = qword_26A914F18;
  if (!qword_26A914F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914F18);
  }
  return result;
}

unint64_t sub_261403B0C()
{
  unint64_t result = qword_26A914F20;
  if (!qword_26A914F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914F20);
  }
  return result;
}

unint64_t sub_261403B64()
{
  unint64_t result = qword_26A914F28;
  if (!qword_26A914F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914F28);
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestContextError()
{
  return &type metadata for RequestContextError;
}

uint64_t sub_261403BC8()
{
  return type metadata accessor for IngestionAudioBufferActor(0);
}

void sub_261403BD0()
{
  sub_261403CB4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_261403CB4()
{
  if (!qword_26A914F30)
  {
    sub_2613C5EC8(&qword_26A914E18);
    unint64_t v0 = sub_2614D5AD8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A914F30);
    }
  }
}

uint64_t sub_261403D10()
{
  return type metadata accessor for VARequestContext(0);
}

uint64_t sub_261403D18()
{
  uint64_t result = sub_2614D4CE8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for VARequestContext.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VARequestContext.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261403F3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VARequestContext.CodingKeys()
{
  return &type metadata for VARequestContext.CodingKeys;
}

uint64_t getEnumTagSinglePayload for VARequestContext.KeywordsCodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for VARequestContext.KeywordsCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x261404064);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for VARequestContext.KeywordsCodingKeys()
{
  return &type metadata for VARequestContext.KeywordsCodingKeys;
}

unint64_t sub_26140409C()
{
  unint64_t result = qword_26A914F38;
  if (!qword_26A914F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914F38);
  }
  return result;
}

uint64_t sub_2614040F0()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_261404128(uint64_t a1)
{
  unsigned int v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_2613E3EDC;
  unsigned int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26A914F40 + dword_26A914F40);
  return v6(a1, v4);
}

char *sub_2614041E0@<X0>(char *a1@<X0>, uint64_t a2@<X1>, char **a3@<X8>)
{
  unint64_t result = sub_261402AB8(a1, a2, *(char **)(v3 + 16), *(void *)(v3 + 24));
  if (!v4)
  {
    *a3 = result;
    a3[1] = v7;
    a3[2] = v8;
  }
  return result;
}

void *sub_261404214@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_261402C74(a1, *(void **)(v2 + 16), *(void *(**)(long long *__return_ptr, char *, uint64_t))(v2 + 24), a2);
}

uint64_t sub_261404234(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_2613C23AC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t (*sub_26140429C())()
{
  return j__swift_endAccess;
}

void *VASymbolTable.__allocating_init()()
{
  unint64_t result = (void *)swift_allocObject();
  uint64_t v1 = MEMORY[0x263F8EE80];
  result[2] = MEMORY[0x263F8EE80];
  result[3] = v1;
  result[4] = v1;
  return result;
}

void *VASymbolTable.init()()
{
  unint64_t result = v0;
  uint64_t v2 = MEMORY[0x263F8EE80];
  v0[2] = MEMORY[0x263F8EE80];
  v0[3] = v2;
  v0[4] = v2;
  return result;
}

uint64_t sub_26140433C()
{
  uint64_t v2 = sub_2614D50C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v107 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_2614D5368();
  if (v1) {
    return result;
  }
  uint64_t v8 = result;
  unint64_t v9 = v7;
  uint64_t v117 = v0;
  uint64_t v123 = 10;
  uint64_t v124 = 0xE100000000000000;
  MEMORY[0x270FA5388](result);
  int v106 = &v123;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_2613D7D10(0x7FFFFFFFFFFFFFFFLL, 1, sub_2613DD7C4, (uint64_t)v104, v8, v9);
  uint64_t v116 = 0;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v10 + 16);
  char v114 = v5;
  uint64_t v115 = v2;
  uint64_t v113 = v11;
  if (!v11)
  {
    swift_bridgeObjectRelease();
LABEL_92:
    uint64_t v97 = sub_26146718C();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v97, v2);
    uint64_t v98 = v117;
    swift_retain_n();
    uint64_t v99 = sub_2614D50A8();
    os_log_type_t v100 = sub_2614D5968();
    if (os_log_type_enabled(v99, v100))
    {
      uint64_t v101 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v101 = 134217984;
      uint64_t v102 = *(void *)((*(uint64_t (**)(void))(*(void *)v98 + 104))() + 16);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v123 = v102;
      uint64_t v2 = v115;
      sub_2614D5B58();
      swift_release();
      _os_log_impl(&dword_2613B8000, v99, v100, "Loaded %ld symbols", v101, 0xCu);
      __int16 v103 = v101;
      uint64_t v5 = v114;
      MEMORY[0x263E38060](v103, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v110 = v3;
  uint64_t v111 = v10;
  unint64_t v12 = 0;
  uint64_t v112 = v10 + 32;
  objc_super v108 = (char *)&v123 + 2;
  char v109 = (char *)&v123 + 3;
  while (2)
  {
    if (v12 >= *(void *)(v10 + 16))
    {
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
      goto LABEL_100;
    }
    unint64_t v118 = v12;
    uint64_t v13 = (unint64_t *)(v112 + 32 * v12);
    unint64_t v14 = *v13;
    unint64_t v15 = v13[1] >> 14;
    if (v15 == *v13 >> 14)
    {
      int v16 = (void *)MEMORY[0x263F8EE78];
      goto LABEL_30;
    }
    unint64_t v17 = v13[3];
    swift_bridgeObjectRetain_n();
    unint64_t v18 = v14;
    unint64_t v19 = v14;
    unint64_t v20 = v14;
    char v121 = (void *)MEMORY[0x263F8EE78];
    unint64_t v122 = v17;
    do
    {
      while (1)
      {
        if (sub_2614D5B28() == 9 && v24 == 0xE100000000000000)
        {
          swift_bridgeObjectRelease();
          break;
        }
        char v25 = sub_2614D5FB8();
        swift_bridgeObjectRelease();
        if (v25) {
          break;
        }
        unint64_t v18 = sub_2614D5AF8();
        if (v15 == v18 >> 14) {
          goto LABEL_21;
        }
      }
      if (v19 >> 14 != v18 >> 14)
      {
        uint64_t v26 = v121;
        if (v18 >> 14 < v19 >> 14) {
          goto LABEL_103;
        }
        uint64_t v27 = sub_2614D5B38();
        uint64_t v119 = v29;
        uint64_t v120 = v28;
        uint64_t v31 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v26 = sub_2613D8420(0, v26[2] + 1, 1, v26);
        }
        int v32 = v26;
        unint64_t v33 = v26[2];
        int v34 = v32;
        unint64_t v35 = v32[3];
        if (v33 >= v35 >> 1) {
          int v34 = sub_2613D8420((void *)(v35 > 1), v33 + 1, 1, v34);
        }
        v34[2] = v33 + 1;
        char v121 = v34;
        uint64_t v21 = &v34[4 * v33];
        uint64_t v22 = v120;
        v21[4] = v27;
        v21[5] = v22;
        uint64_t v23 = v119;
        v21[6] = v31;
        v21[7] = v23;
      }
      unint64_t v18 = sub_2614D5AF8();
      unint64_t v19 = v18;
      unint64_t v20 = v18;
    }
    while (v15 != v18 >> 14);
LABEL_21:
    if (v15 == v19 >> 14)
    {
      swift_bridgeObjectRelease();
      goto LABEL_29;
    }
    if (v15 < v20 >> 14) {
      goto LABEL_103;
    }
    uint64_t v36 = sub_2614D5B38();
    uint64_t v38 = v37;
    uint64_t v40 = v39;
    uint64_t v42 = v41;
    swift_bridgeObjectRelease();
    int v43 = v121;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v43 = sub_2613D8420(0, v43[2] + 1, 1, v43);
    }
    unint64_t v45 = v43[2];
    unint64_t v44 = v43[3];
    char v121 = v43;
    if (v45 >= v44 >> 1) {
      char v121 = sub_2613D8420((void *)(v44 > 1), v45 + 1, 1, v121);
    }
    uint64_t v46 = v121;
    v121[2] = v45 + 1;
    uint64_t v47 = &v46[4 * v45];
    v47[4] = v36;
    v47[5] = v38;
    v47[6] = v40;
    v47[7] = v42;
LABEL_29:
    swift_bridgeObjectRelease();
    int v16 = v121;
LABEL_30:
    if (v16[2] < 2uLL) {
      goto LABEL_98;
    }
    uint64_t v49 = v16[8];
    uint64_t v48 = v16[9];
    uint64_t v50 = v16[10];
    uint64_t v51 = v16[11];
    char v52 = v16;
    swift_bridgeObjectRetain();
    uint64_t v53 = MEMORY[0x263E36570](v49, v48, v50, v51);
    unint64_t v55 = v54;
    swift_bridgeObjectRelease();
    uint64_t v56 = HIBYTE(v55) & 0xF;
    uint64_t v57 = v53 & 0xFFFFFFFFFFFFLL;
    if ((v55 & 0x2000000000000000) != 0) {
      uint64_t v58 = HIBYTE(v55) & 0xF;
    }
    else {
      uint64_t v58 = v53 & 0xFFFFFFFFFFFFLL;
    }
    if (!v58)
    {
      swift_bridgeObjectRelease();
      uint64_t v69 = 0;
      char v68 = 1;
      if (v52[2]) {
        goto LABEL_68;
      }
      goto LABEL_99;
    }
    if ((v55 & 0x1000000000000000) != 0)
    {
      uint64_t v61 = (uint64_t)sub_2613D9774(v53, v55, 10);
      char v63 = v96;
      goto LABEL_64;
    }
    if ((v55 & 0x2000000000000000) == 0)
    {
      if ((v53 & 0x1000000000000000) != 0) {
        uint64_t v59 = (unsigned __int8 *)((v55 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v59 = (unsigned __int8 *)sub_2614D5C98();
      }
      uint64_t v60 = v116;
      uint64_t v61 = (uint64_t)sub_2613D985C(v59, v57, 10);
      uint64_t v116 = v60;
      char v63 = v62 & 1;
LABEL_64:
      swift_bridgeObjectRelease();
      char v68 = v63 & 1;
      if (v63) {
        uint64_t v69 = 0;
      }
      else {
        uint64_t v69 = v61;
      }
      if (!v52[2]) {
        goto LABEL_99;
      }
LABEL_68:
      uint64_t v70 = v52;
      uint64_t v71 = v52[4];
      uint64_t v72 = v52[5];
      uint64_t v73 = v52[6];
      uint64_t v74 = v70[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v75 = MEMORY[0x263E36570](v71, v72, v73, v74);
      uint64_t v77 = v76;
      swift_bridgeObjectRelease();
      if (v68) {
        goto LABEL_102;
      }
      uint64_t v78 = v117;
      unint64_t v12 = v118 + 1;
      char v79 = *(uint64_t (**)(uint64_t *))(*(void *)v117 + 120);
      swift_bridgeObjectRetain();
      uint64_t v80 = (void (*)(uint64_t *, void))v79(&v123);
      char v82 = v81;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v125 = *v82;
      uint64_t *v82 = 0x8000000000000000;
      sub_2613D9FC4(v75, v77, v69, isUniquelyReferenced_nonNull_native);
      uint64_t *v82 = v125;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v80(&v123, 0);
      id v84 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))(*(void *)v78 + 144))(&v123);
      uint64_t v86 = v85;
      char v87 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v125 = *v86;
      uint64_t *v86 = 0x8000000000000000;
      sub_2613DA108(v69, v75, v77, v87);
      uint64_t *v86 = v125;
      swift_bridgeObjectRelease();
      v84(&v123, 0);
      swift_bridgeObjectRelease();
      uint64_t v5 = v114;
      uint64_t v2 = v115;
      uint64_t v10 = v111;
      if (v12 == v113)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v110;
        goto LABEL_92;
      }
      continue;
    }
    break;
  }
  uint64_t v123 = v53;
  uint64_t v124 = v55 & 0xFFFFFFFFFFFFFFLL;
  if (v53 == 43)
  {
    if (!v56) {
      goto LABEL_101;
    }
    if (v56 != 1 && (BYTE1(v53) - 48) <= 9u)
    {
      uint64_t v61 = (BYTE1(v53) - 48);
      if (v56 == 2) {
        goto LABEL_63;
      }
      if ((BYTE2(v53) - 48) <= 9u)
      {
        uint64_t v61 = 10 * (BYTE1(v53) - 48) + (BYTE2(v53) - 48);
        uint64_t v64 = v56 - 3;
        if (v64)
        {
          uint64_t v65 = (unsigned __int8 *)v109;
          while (1)
          {
            unsigned int v66 = *v65 - 48;
            if (v66 > 9) {
              goto LABEL_61;
            }
            uint64_t v67 = 10 * v61;
            if ((unsigned __int128)(v61 * (__int128)10) >> 64 != (10 * v61) >> 63) {
              goto LABEL_61;
            }
            uint64_t v61 = v67 + v66;
            if (__OFADD__(v67, v66)) {
              goto LABEL_61;
            }
            char v63 = 0;
            ++v65;
            if (!--v64) {
              goto LABEL_64;
            }
          }
        }
        goto LABEL_63;
      }
    }
LABEL_61:
    uint64_t v61 = 0;
    char v63 = 1;
    goto LABEL_64;
  }
  if (v53 != 45)
  {
    if (v56 && (v53 - 48) <= 9u)
    {
      uint64_t v61 = (v53 - 48);
      if (v56 == 1) {
        goto LABEL_63;
      }
      if ((BYTE1(v53) - 48) <= 9u)
      {
        uint64_t v61 = 10 * (v53 - 48) + (BYTE1(v53) - 48);
        uint64_t v88 = v56 - 2;
        if (v88)
        {
          uint64_t v89 = (unsigned __int8 *)v108;
          while (1)
          {
            unsigned int v90 = *v89 - 48;
            if (v90 > 9) {
              goto LABEL_61;
            }
            uint64_t v91 = 10 * v61;
            if ((unsigned __int128)(v61 * (__int128)10) >> 64 != (10 * v61) >> 63) {
              goto LABEL_61;
            }
            uint64_t v61 = v91 + v90;
            if (__OFADD__(v91, v90)) {
              goto LABEL_61;
            }
            char v63 = 0;
            ++v89;
            if (!--v88) {
              goto LABEL_64;
            }
          }
        }
        goto LABEL_63;
      }
    }
    goto LABEL_61;
  }
  if (v56)
  {
    if (v56 == 1 || (BYTE1(v53) - 48) > 9u) {
      goto LABEL_61;
    }
    if (v56 == 2)
    {
      char v63 = 0;
      uint64_t v61 = -(uint64_t)(BYTE1(v53) - 48);
      goto LABEL_64;
    }
    if ((BYTE2(v53) - 48) > 9u) {
      goto LABEL_61;
    }
    uint64_t v61 = -10 * (BYTE1(v53) - 48) - (BYTE2(v53) - 48);
    uint64_t v92 = v56 - 3;
    if (v92)
    {
      uint64_t v93 = (unsigned __int8 *)v109;
      while (1)
      {
        unsigned int v94 = *v93 - 48;
        if (v94 > 9) {
          goto LABEL_61;
        }
        uint64_t v95 = 10 * v61;
        if ((unsigned __int128)(v61 * (__int128)10) >> 64 != (10 * v61) >> 63) {
          goto LABEL_61;
        }
        uint64_t v61 = v95 - v94;
        if (__OFSUB__(v95, v94)) {
          goto LABEL_61;
        }
        char v63 = 0;
        ++v93;
        if (!--v92) {
          goto LABEL_64;
        }
      }
    }
LABEL_63:
    char v63 = 0;
    goto LABEL_64;
  }
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  LODWORD(v106) = 0;
  uint64_t v105 = 754;
  v104[0] = 2;
  uint64_t result = sub_2614D5D58();
  __break(1u);
  return result;
}

uint64_t sub_261404DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v70 = a2;
  uint64_t v69 = a1;
  uint64_t v3 = sub_2614D4C78();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v7 = (void (*)(void *, void))(*(uint64_t (**)(void *))(*(void *)v2 + 120))(v72);
  unint64_t v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t v10 = MEMORY[0x263F8EE80];
  *unint64_t v9 = MEMORY[0x263F8EE80];
  v7(v72, 0);
  uint64_t v11 = *(uint64_t (**)(void *))(*(void *)v2 + 144);
  uint64_t v12 = *(void *)v2 + 144;
  uint64_t v13 = (void (*)(void *, void))v11(v72);
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();
  void *v15 = v10;
  v13(v72, 0);
  sub_2614D4C28();
  int v16 = v71;
  uint64_t v17 = sub_2614D4C88();
  if (v16)
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v67 = v12;
  char v68 = v11;
  uint64_t v69 = v2;
  uint64_t v20 = v17;
  uint64_t v21 = v6;
  unint64_t v22 = v18;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v21, v3);
  sub_261405618(0, &qword_26A914F78);
  sub_261405618(0, &qword_26A914F80);
  uint64_t v23 = (void *)sub_2614D5998();
  uint64_t v61 = v20;
  unint64_t v62 = v22;
  uint64_t v63 = 0;
  if (!v23) {
    return sub_2613C2314(v61, v62);
  }
  v72[0] = 0;
  sub_2614D52D8();

  if (!v72[0]) {
    return sub_2613C2314(v61, v62);
  }
  uint64_t v24 = v69;
  uint64_t v25 = (*(uint64_t (**)(void))(*(void *)v69 + 112))();
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(*(void *)v24 + 104))(v25);
  uint64_t v27 = 0;
  uint64_t v28 = 1 << *(unsigned char *)(v26 + 32);
  uint64_t v29 = -1;
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  uint64_t v30 = *(void *)(v26 + 64);
  uint64_t v64 = v26 + 64;
  unint64_t v31 = v29 & v30;
  int64_t v65 = (unint64_t)(v28 + 63) >> 6;
  uint64_t v66 = v26;
  while (1)
  {
    int v32 = v68;
    if (v31)
    {
      uint64_t v70 = (v31 - 1) & v31;
      uint64_t v71 = v27;
      unint64_t v33 = __clz(__rbit64(v31)) | ((void)v27 << 6);
    }
    else
    {
      int64_t v34 = (int64_t)v27 + 1;
      if (__OFADD__(v27, 1)) {
        goto LABEL_41;
      }
      if (v34 >= v65)
      {
LABEL_37:
        swift_release();
        return sub_2613C2314(v61, v62);
      }
      unint64_t v35 = *(void *)(v64 + 8 * v34);
      int64_t v36 = (int64_t)v27 + 1;
      if (!v35)
      {
        int64_t v36 = (int64_t)v27 + 2;
        if ((uint64_t)v27 + 2 >= v65) {
          goto LABEL_37;
        }
        unint64_t v35 = *(void *)(v64 + 8 * v36);
        if (!v35)
        {
          int64_t v36 = (int64_t)v27 + 3;
          if ((uint64_t)v27 + 3 >= v65) {
            goto LABEL_37;
          }
          unint64_t v35 = *(void *)(v64 + 8 * v36);
          if (!v35)
          {
            uint64_t v37 = (uint64_t)v27 + 4;
            if ((uint64_t)v27 + 4 >= v65) {
              goto LABEL_37;
            }
            unint64_t v35 = *(void *)(v64 + 8 * v37);
            if (!v35)
            {
              while (1)
              {
                int64_t v36 = v37 + 1;
                if (__OFADD__(v37, 1)) {
                  goto LABEL_42;
                }
                if (v36 >= v65) {
                  goto LABEL_37;
                }
                unint64_t v35 = *(void *)(v64 + 8 * v36);
                ++v37;
                if (v35) {
                  goto LABEL_25;
                }
              }
            }
            int64_t v36 = (int64_t)v27 + 4;
          }
        }
      }
LABEL_25:
      uint64_t v70 = (v35 - 1) & v35;
      uint64_t v71 = (void *)v36;
      unint64_t v33 = __clz(__rbit64(v35)) + (v36 << 6);
    }
    uint64_t v38 = *(void *)(*(void *)(v66 + 48) + 8 * v33);
    uint64_t v39 = (uint64_t *)(*(void *)(v66 + 56) + 16 * v33);
    uint64_t v40 = *v39;
    uint64_t v41 = v39[1];
    swift_bridgeObjectRetain();
    uint64_t v42 = (void (*)(void *, void))v32(v72);
    unint64_t v44 = v43;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v73 = (void *)*v44;
    uint64_t v46 = v73;
    void *v44 = 0x8000000000000000;
    unint64_t v48 = sub_2613D8F00(v40, v41);
    uint64_t v49 = v46[2];
    BOOL v50 = (v47 & 1) == 0;
    uint64_t v51 = v49 + v50;
    if (__OFADD__(v49, v50)) {
      break;
    }
    char v52 = v47;
    if (v46[3] >= v51)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        unint64_t v55 = v73;
        if (v47) {
          goto LABEL_8;
        }
      }
      else
      {
        sub_2613DA9D8();
        unint64_t v55 = v73;
        if (v52) {
          goto LABEL_8;
        }
      }
    }
    else
    {
      sub_2613DA51C(v51, isUniquelyReferenced_nonNull_native);
      unint64_t v53 = sub_2613D8F00(v40, v41);
      if ((v52 & 1) != (v54 & 1)) {
        goto LABEL_43;
      }
      unint64_t v48 = v53;
      unint64_t v55 = v73;
      if (v52)
      {
LABEL_8:
        *(void *)(v55[7] + 8 * v48) = v38;
        goto LABEL_9;
      }
    }
    v55[(v48 >> 6) + 8] |= 1 << v48;
    uint64_t v56 = (uint64_t *)(v55[6] + 16 * v48);
    uint64_t *v56 = v40;
    v56[1] = v41;
    *(void *)(v55[7] + 8 * v48) = v38;
    uint64_t v57 = v55[2];
    BOOL v58 = __OFADD__(v57, 1);
    uint64_t v59 = v57 + 1;
    if (v58) {
      goto LABEL_40;
    }
    v55[2] = v59;
    swift_bridgeObjectRetain();
LABEL_9:
    void *v44 = v55;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v42(v72, 0);
    unint64_t v31 = v70;
    uint64_t v27 = v71;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  uint64_t result = sub_2614D5FF8();
  __break(1u);
  return result;
}

void sub_261405380()
{
  v15[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = sub_2614D4C78();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = self;
  (*(void (**)(void))(*(void *)v0 + 104))();
  unsigned int v6 = (void *)sub_2614D52C8();
  swift_bridgeObjectRelease();
  v15[0] = 0;
  id v7 = objc_msgSend(v5, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v6, 0, v15);

  id v8 = v15[0];
  if (v7)
  {
    uint64_t v9 = sub_2614D4CA8();
    unint64_t v11 = v10;

    sub_2614D4C28();
    sub_2614D4CB8();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_2613C2314(v9, v11);
  }
  else
  {
    uint64_t v12 = v8;
    uint64_t v13 = (void *)sub_2614D4BF8();

    swift_willThrow();
  }
}

uint64_t VASymbolTable.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t VASymbolTable.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_261405618(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t type metadata accessor for VASymbolTable()
{
  return self;
}

uint64_t method lookup function for VASymbolTable(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VASymbolTable);
}

uint64_t dispatch thunk of VASymbolTable.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of VASymbolTable.readText(path:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of VASymbolTable.readBinary(path:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of VASymbolTable.writeBinary(path:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t sub_261405754()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_261405798(MEMORY[0x263F8EE78]);
  return v0;
}

unint64_t sub_261405798(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_2613C23AC(&qword_26A914FA0);
  uint64_t v2 = (void *)sub_2614D5DD8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_2613D8F00(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_2614058B4()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t sub_2614058FC()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(*(void *)v0 + 96);
  uint64_t v2 = swift_bridgeObjectRetain();
  return v1(v2);
}

uint64_t sub_261405948()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_261405980()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

uint64_t sub_2614059C4()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 128))();
}

uint64_t sub_261405A08()
{
  Swift::String v0 = VATempDir()();
  uint64_t v1 = NSUserName();
  sub_2614D53A8();

  swift_bridgeObjectRetain();
  sub_2614D54D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2614D54D8();
  uint64_t result = swift_bridgeObjectRelease();
  xmmword_26A9190B8 = (__int128)v0;
  return result;
}

uint64_t sub_261405AE0()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_261405B2C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_261405B80())()
{
  return j__swift_endAccess;
}

uint64_t sub_261405BD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC12VoiceActions19VAFileBackedLexicon_uuid;
  swift_beginAccess();
  uint64_t v4 = sub_2614D4CE8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_261405C58(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC12VoiceActions19VAFileBackedLexicon_uuid;
  swift_beginAccess();
  uint64_t v4 = sub_2614D4CE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_261405CE4())()
{
  return j_j__swift_endAccess;
}

void *sub_261405D40(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_2614D4CE8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = (void *)swift_allocObject();
  sub_2614D4CD8();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))((uint64_t)v9 + OBJC_IVAR____TtC12VoiceActions19VAFileBackedLexicon_uuid, v8, v5);
  v9[2] = sub_261405798(MEMORY[0x263F8EE78]);
  v9[3] = a1;
  v9[4] = a2;
  uint64_t v10 = sub_261405EA0();
  if (v2)
  {
    swift_release();
  }
  else
  {
    uint64_t v11 = v10;
    swift_beginAccess();
    v9[2] = v11;
    swift_bridgeObjectRelease();
  }
  return v9;
}

uint64_t sub_261405EA0()
{
  uint64_t v3 = sub_2614D50C8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)v64 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  (*(void (**)(uint64_t))(*(void *)v0 + 128))(v11);
  uint64_t v12 = sub_261407CD0();
  if (v1)
  {
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  uint64_t v2 = (void *)v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_261408504();
  if (!v13)
  {
    uint64_t v25 = sub_26146718C();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v25, v3);
    uint64_t v26 = sub_2614D50A8();
    uint64_t v27 = sub_2614D5958();
    if (os_log_type_enabled(v26, (os_log_type_t)v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_2613B8000, v26, (os_log_type_t)v27, "No custom lexicon", v28, 2u);
      MEMORY[0x263E38060](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    return (uint64_t)v2;
  }
  uint64_t v14 = sub_26146718C();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v10, v14, v3);
  swift_bridgeObjectRetain_n();
  unint64_t v15 = sub_2614D50A8();
  os_log_type_t v16 = sub_2614D5958();
  int v17 = v16;
  BOOL v18 = os_log_type_enabled(v15, v16);
  v64[1] = 0;
  if (v18)
  {
    uint64_t v19 = swift_slowAlloc();
    int isUniquelyReferenced_nonNull_native = v17;
    uint64_t v20 = v19;
    uint64_t v67 = swift_slowAlloc();
    uint64_t v70 = (void *)v67;
    *(_DWORD *)uint64_t v20 = 134218242;
    uint64_t v68 = *(void *)(v13 + 16);
    int64_t v65 = &v69;
    sub_2614D5B58();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    v64[0] = v20 + 14;
    swift_bridgeObjectRetain();
    sub_2613C23AC(&qword_26A914A68);
    uint64_t v21 = sub_2614D5308();
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    uint64_t v68 = sub_2613D875C(v21, v23, (uint64_t *)&v70);
    sub_2614D5B58();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2613B8000, v15, (os_log_type_t)isUniquelyReferenced_nonNull_native, "Merged %ld words from custom lexicon: %s", (uint8_t *)v20, 0x16u);
    uint64_t v24 = v67;
    swift_arrayDestroy();
    MEMORY[0x263E38060](v24, -1, -1);
    MEMORY[0x263E38060](v20, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
  uint64_t v29 = v13 + 64;
  uint64_t v30 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v31 = -1;
  if (v30 < 64) {
    uint64_t v31 = ~(-1 << v30);
  }
  unint64_t v32 = v31 & *(void *)(v13 + 64);
  int64_t v33 = (unint64_t)(v30 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v34 = 0;
  int64_t v65 = (uint64_t *)v33;
  if (v32) {
    goto LABEL_17;
  }
LABEL_21:
  int64_t v41 = v34 + 1;
  if (__OFADD__(v34, 1))
  {
    __break(1u);
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  if (v41 >= v33) {
    goto LABEL_55;
  }
  unint64_t v42 = *(void *)(v29 + 8 * v41);
  ++v34;
  if (v42)
  {
LABEL_38:
    unint64_t v32 = (v42 - 1) & v42;
    for (unint64_t i = __clz(__rbit64(v42)) + (v34 << 6); ; unint64_t i = v38 | (v34 << 6))
    {
      unint64_t v44 = (uint64_t *)(*(void *)(v13 + 48) + 16 * i);
      uint64_t v46 = *v44;
      uint64_t v45 = v44[1];
      uint64_t v47 = *(void *)(v13 + 16);
      swift_bridgeObjectRetain();
      if (v47)
      {
        swift_bridgeObjectRetain();
        unint64_t v48 = sub_2613D8F00(v46, v45);
        if (v49)
        {
          uint64_t v67 = *(void *)(*(void *)(v13 + 56) + 8 * v48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v70 = v2;
          unint64_t v51 = sub_2613D8F00(v46, v45);
          uint64_t v52 = v2[2];
          BOOL v53 = (v50 & 1) == 0;
          uint64_t v54 = v52 + v53;
          if (__OFADD__(v52, v53)) {
            goto LABEL_58;
          }
          if (v2[3] >= v54)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              char v55 = v50;
              sub_261407950();
              goto LABEL_45;
            }
          }
          else
          {
            char v55 = v50;
            sub_261406F78(v54, isUniquelyReferenced_nonNull_native);
            unint64_t v56 = sub_2613D8F00(v46, v45);
            if ((v55 & 1) != (v57 & 1)) {
              goto LABEL_61;
            }
            unint64_t v51 = v56;
LABEL_45:
            char v50 = v55;
          }
          uint64_t v2 = v70;
          if (v50)
          {
            uint64_t v58 = v70[7];
            swift_bridgeObjectRelease();
            *(void *)(v58 + 8 * v51) = v67;
          }
          else
          {
            v70[(v51 >> 6) + 8] |= 1 << v51;
            uint64_t v59 = (uint64_t *)(v2[6] + 16 * v51);
            uint64_t *v59 = v46;
            v59[1] = v45;
            *(void *)(v2[7] + 8 * v51) = v67;
            uint64_t v60 = v2[2];
            BOOL v61 = __OFADD__(v60, 1);
            uint64_t v62 = v60 + 1;
            if (v61) {
              goto LABEL_60;
            }
            v2[2] = v62;
            swift_bridgeObjectRetain();
          }
          int64_t v33 = (int64_t)v65;
          goto LABEL_52;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRetain();
      unint64_t v35 = sub_2613D8F00(v46, v45);
      char v37 = v36;
      swift_bridgeObjectRelease();
      if ((v37 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        if (!v32) {
          goto LABEL_21;
        }
        goto LABEL_17;
      }
      char v40 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v70 = v2;
      if ((v40 & 1) == 0)
      {
        sub_261407950();
        uint64_t v2 = v70;
      }
      swift_bridgeObjectRelease();
      sub_2614075CC(v35, (uint64_t)v2);
      swift_bridgeObjectRelease();
LABEL_52:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v32) {
        goto LABEL_21;
      }
LABEL_17:
      unint64_t v38 = __clz(__rbit64(v32));
      v32 &= v32 - 1;
    }
  }
  int64_t v34 = v41 + 1;
  if (v41 + 1 >= v33)
  {
LABEL_55:
    swift_release();
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  unint64_t v42 = *(void *)(v29 + 8 * v34);
  if (v42) {
    goto LABEL_38;
  }
  int64_t v34 = v41 + 2;
  if (v41 + 2 >= v33) {
    goto LABEL_55;
  }
  unint64_t v42 = *(void *)(v29 + 8 * v34);
  if (v42) {
    goto LABEL_38;
  }
  int64_t v34 = v41 + 3;
  if (v41 + 3 >= v33) {
    goto LABEL_55;
  }
  unint64_t v42 = *(void *)(v29 + 8 * v34);
  if (v42) {
    goto LABEL_38;
  }
  int64_t v34 = v41 + 4;
  if (v41 + 4 >= v33) {
    goto LABEL_55;
  }
  unint64_t v42 = *(void *)(v29 + 8 * v34);
  if (v42) {
    goto LABEL_38;
  }
  int64_t v43 = v41 + 5;
  if (v43 >= v33) {
    goto LABEL_55;
  }
  unint64_t v42 = *(void *)(v29 + 8 * v43);
  if (v42)
  {
    int64_t v34 = v43;
    goto LABEL_38;
  }
  while (1)
  {
    int64_t v34 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    if (v34 >= v33) {
      goto LABEL_55;
    }
    unint64_t v42 = *(void *)(v29 + 8 * v34);
    ++v43;
    if (v42) {
      goto LABEL_38;
    }
  }
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  uint64_t result = sub_2614D5FF8();
  __break(1u);
  return result;
}

uint64_t sub_2614066A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_2614D50C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26146718C();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v7 = sub_2614D50A8();
  os_log_type_t v8 = sub_2614D5968();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_2613B8000, v7, v8, "deinit VALexicon", v9, 2u);
    MEMORY[0x263E38060](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v1 + OBJC_IVAR____TtC12VoiceActions19VAFileBackedLexicon_uuid;
  uint64_t v11 = sub_2614D4CE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  return v1;
}

uint64_t sub_261406854()
{
  sub_2614066A0();
  return swift_deallocClassInstance();
}

uint64_t sub_2614068AC()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 104))();
}

void sub_2614068F8()
{
  uint64_t v2 = *v0;
  sub_261408B6C();
  if (!v1)
  {
    uint64_t v3 = sub_261405EA0();
    (*(void (**)(uint64_t))(*(void *)v2 + 112))(v3);
  }
}

uint64_t sub_26140695C(uint64_t a1, uint64_t a2)
{
  return sub_261406A54(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_261406974()
{
  sub_2614D53A8();
  sub_2614D5478();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2614069C8()
{
  sub_2614D53A8();
  sub_2614D6088();
  sub_2614D5478();
  uint64_t v0 = sub_2614D60B8();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_261406A3C(uint64_t a1, uint64_t a2)
{
  return sub_261406A54(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_261406A54(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_2614D53A8();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_261406A98(uint64_t a1, id *a2)
{
  uint64_t result = sub_2614D5388();
  *a2 = 0;
  return result;
}

uint64_t sub_261406B10(uint64_t a1, id *a2)
{
  char v3 = sub_2614D5398();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_261406B90@<X0>(uint64_t *a1@<X8>)
{
  sub_2614D53A8();
  uint64_t v2 = sub_2614D5378();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_261406BD4()
{
  uint64_t v0 = sub_2614D53A8();
  uint64_t v2 = v1;
  if (v0 == sub_2614D53A8() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_2614D5FB8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_261406C60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_2614D5378();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_261406CA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2614D53A8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_261406CD4(uint64_t a1)
{
  uint64_t v2 = sub_2614097C4(&qword_26A914F88);
  uint64_t v3 = sub_2614097C4(&qword_26A914FD8);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

unint64_t sub_261406D6C(uint64_t a1)
{
  sub_2614D53A8();
  sub_2614D6088();
  sub_2614D5478();
  uint64_t v2 = sub_2614D60B8();
  swift_bridgeObjectRelease();
  return sub_261406E00(a1, v2);
}

unint64_t sub_261406E00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_2614D53A8();
    uint64_t v8 = v7;
    if (v6 == sub_2614D53A8() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_2614D5FB8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_2614D53A8();
          uint64_t v15 = v14;
          if (v13 == sub_2614D53A8() && v15 == v16) {
            break;
          }
          char v18 = sub_2614D5FB8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_261406F78(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_2613C23AC(&qword_26A914FA0);
  char v36 = a2;
  uint64_t v6 = sub_2614D5DC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_2614D6088();
    sub_2614D5478();
    uint64_t result = sub_2614D60B8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    char v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_261407290(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_2613C23AC(&qword_26A914F98);
  char v35 = a2;
  uint64_t v6 = sub_2614D5DC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    char v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    int64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    unint64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_261409630(v22, v36);
    }
    else
    {
      sub_2613DD768((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    sub_2614D53A8();
    sub_2614D6088();
    sub_2614D5478();
    uint64_t v24 = sub_2614D60B8();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_261409630(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  char v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_2614075CC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_2614D5C08();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_2614D6088();
        swift_bridgeObjectRetain();
        sub_2614D5478();
        uint64_t v9 = sub_2614D60B8();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          int64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            _OWORD *v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          unint64_t v15 = (void *)(v14 + 8 * v3);
          unint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            void *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  uint64_t *v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_2614077A4(_OWORD *a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_261406D6C((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_261407B08();
      goto LABEL_7;
    }
    sub_261407290(v12, a3 & 1);
    unint64_t v18 = sub_261406D6C((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      unint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for FileAttributeKey();
    uint64_t result = (_OWORD *)sub_2614D5FF8();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    unint64_t v16 = (_OWORD *)(v15[7] + 32 * v9);
    sub_2613DD718((uint64_t)v16);
    return sub_261409630(a1, v16);
  }
LABEL_13:
  sub_2614078E8(v9, (uint64_t)a2, a1, v15);
  return a2;
}

_OWORD *sub_2614078E8(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_261409630(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

void *sub_261407950()
{
  uint64_t v1 = v0;
  sub_2613C23AC(&qword_26A914FA0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2614D5DB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    BOOL v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_261407B08()
{
  uint64_t v1 = v0;
  sub_2613C23AC(&qword_26A914F98);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2614D5DB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    int64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_2613DD768(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_261409630(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_261407CD0()
{
  uint64_t v0 = sub_2614D5408();
  os_log_t v59 = *(os_log_t *)(v0 - 8);
  unint64_t v60 = v0;
  uint64_t v1 = MEMORY[0x270FA5388](v0);
  uint64_t v58 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = sub_2614D50C8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  char v57 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v54 - v7;
  int64_t v9 = (void *)sub_2614D5378();
  id v10 = objc_msgSend(v9, sel_stringByDeletingPathExtension);

  sub_2614D53A8();
  uint64_t v11 = (void *)sub_2614D5378();
  id v12 = objc_msgSend(v11, sel_pathExtension);

  sub_2614D53A8();
  uint64_t v13 = sub_261419E08();
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
    id v16 = objc_msgSend(self, sel_defaultManager);
    int64_t v17 = (void *)sub_2614D5378();
    unsigned __int8 v18 = objc_msgSend(v16, sel_fileExistsAtPath_, v17);

    uint64_t v56 = v4;
    if ((v18 & 1) == 0)
    {
      uint64_t v19 = sub_26146718C();
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v8, v19, v3);
      swift_bridgeObjectRetain_n();
      unint64_t v20 = sub_2614D50A8();
      os_log_type_t v21 = sub_2614D5978();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v54 = v3;
        uint64_t v22 = swift_slowAlloc();
        uint64_t v55 = v13;
        unint64_t v23 = (uint8_t *)v22;
        uint64_t v24 = swift_slowAlloc();
        uint64_t v62 = v24;
        *(_DWORD *)unint64_t v23 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v64 = sub_2613D875C(v55, v15, &v62);
        uint64_t v3 = v54;
        sub_2614D5B58();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_2613B8000, v20, v21, "Invalid lexicon file, doesn't exist: %s", v23, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x263E38060](v24, -1, -1);
        uint64_t v25 = v23;
        uint64_t v13 = v55;
        MEMORY[0x263E38060](v25, -1, -1);

        uint64_t v26 = v56;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        uint64_t v26 = v4;
      }
      (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v3);
    }
    sub_2614D53F8();
    char v28 = (void *)v61;
    sub_2614D5358();
    unint64_t v29 = v28;
    if (v28)
    {
      swift_bridgeObjectRelease();
LABEL_13:
      uint64_t v62 = 0;
      unint64_t v63 = 0xE000000000000000;
      sub_2614D5C38();
      sub_2614D54D8();
      uint64_t v64 = (uint64_t)v29;
      sub_2613C23AC(&qword_26A914CA8);
      sub_2614D5D48();
      uint64_t v39 = v62;
      unint64_t v40 = v63;
      sub_2613DC2B8();
      swift_allocError();
      uint64_t *v41 = v39;
      v41[1] = v40;
      swift_willThrow();

      return v3;
    }
    BOOL v30 = v58;
    sub_2614D53F8();
    uint64_t v31 = sub_2614D53B8();
    unint64_t v33 = v32;
    swift_bridgeObjectRelease();
    ((void (*)(char *, unint64_t))v59[1].isa)(v30, v60);
    if (v33 >> 60 == 15)
    {
      uint64_t v62 = 0;
      unint64_t v63 = 0xE000000000000000;
      sub_2614D5C38();
      swift_bridgeObjectRelease();
      uint64_t v62 = 0xD00000000000001DLL;
      unint64_t v63 = 0x80000002614E2450;
      sub_2614D54D8();
      swift_bridgeObjectRelease();
      uint64_t v34 = v62;
      unint64_t v35 = v63;
      sub_2613DC2B8();
      unint64_t v29 = (void *)swift_allocError();
      uint64_t *v36 = v34;
      v36[1] = v35;
      swift_willThrow();
      goto LABEL_13;
    }
    sub_2614D4A78();
    swift_allocObject();
    uint64_t v37 = v31;
    uint64_t v38 = sub_2614D4A68();
    sub_2613C23AC(&qword_26A914FA8);
    sub_261409640();
    sub_2614D4A58();
    unint64_t v60 = v33;
    uint64_t v61 = v38;
    uint64_t v55 = v13;
    uint64_t v43 = v3;
    uint64_t v3 = v62;
    uint64_t v44 = sub_26146718C();
    uint64_t v45 = v56;
    uint64_t v46 = v57;
    uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
    uint64_t v54 = v43;
    v47(v57, v44, v43);
    swift_bridgeObjectRetain();
    unint64_t v48 = sub_2614D50A8();
    os_log_type_t v49 = sub_2614D5968();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = swift_slowAlloc();
      os_log_t v59 = v48;
      unint64_t v51 = (uint8_t *)v50;
      uint64_t v52 = swift_slowAlloc();
      uint64_t v62 = v52;
      *(_DWORD *)unint64_t v51 = 136315138;
      uint64_t v58 = (char *)(v51 + 4);
      swift_bridgeObjectRetain();
      uint64_t v64 = sub_2613D875C(v55, v15, &v62);
      sub_2614D5B58();
      swift_bridgeObjectRelease_n();
      os_log_t v53 = v59;
      _os_log_impl(&dword_2613B8000, v59, v49, "Loaded lexicon from %s", v51, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x263E38060](v52, -1, -1);
      MEMORY[0x263E38060](v51, -1, -1);
      swift_release();
      sub_2613C2300(v37, v60);

      (*(void (**)(char *, uint64_t))(v45 + 8))(v57, v54);
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease_n();
      sub_2613C2300(v37, v60);

      (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v54);
    }
  }
  else
  {
    sub_2613DC2B8();
    swift_allocError();
    void *v27 = 0xD00000000000001ELL;
    v27[1] = 0x80000002614E2410;
    swift_willThrow();
  }
  return v3;
}

uint64_t sub_261408504()
{
  uint64_t v0 = sub_2614D50C8();
  uint64_t v37 = *(void *)(v0 - 8);
  uint64_t v38 = v0;
  MEMORY[0x270FA5388](v0);
  char v36 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = (uint8_t *)sub_2614D5408();
  uint64_t v39 = (uint8_t *)*((void *)v2 - 1);
  unint64_t v40 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = self;
  id v7 = objc_msgSend(v6, sel_defaultManager);
  if (qword_26A9190B0 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)sub_2614D5378();
  unsigned int v9 = objc_msgSend(v7, sel_fileExistsAtPath_, v8);

  if (!v9) {
    return 0;
  }
  id v10 = objc_msgSend(v6, sel_defaultManager);
  uint64_t v11 = (void *)sub_2614D5378();
  uint64_t v12 = (uint64_t)objc_msgSend(v10, sel_isReadableFileAtPath_, v11);

  if (v12)
  {
    sub_2614D53F8();
    uint64_t v13 = v41;
    sub_2614D5358();
    uint64_t v12 = v13;
    if (v13)
    {
LABEL_11:
      uint64_t v42 = 0;
      unint64_t v43 = 0xE000000000000000;
      sub_2614D5C38();
      sub_2614D54D8();
      uint64_t v44 = v12;
      sub_2613C23AC(&qword_26A914CA8);
      sub_2614D5D48();
      uint64_t v21 = v42;
      unint64_t v22 = v43;
      sub_2613DC2B8();
      swift_allocError();
      uint64_t *v23 = v21;
      v23[1] = v22;
      swift_willThrow();

      return v12;
    }
    sub_2614D53F8();
    uint64_t v14 = sub_2614D53B8();
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    (*((void (**)(char *, uint8_t *))v39 + 1))(v5, v40);
    if (v16 >> 60 == 15)
    {
      sub_2613DC2B8();
      uint64_t v12 = swift_allocError();
      void *v17 = 0xD000000000000023;
      v17[1] = 0x80000002614E23E0;
      swift_willThrow();
      goto LABEL_11;
    }
    sub_2614D4A78();
    swift_allocObject();
    sub_2614D4A68();
    sub_2613C23AC(&qword_26A914FA8);
    sub_261409640();
    sub_2614D4A58();
    uint64_t v41 = 0;
    uint64_t v12 = v42;
    uint64_t v25 = sub_26146718C();
    unint64_t v27 = v36;
    uint64_t v26 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v36, v25, v38);
    char v28 = sub_2614D50A8();
    os_log_type_t v29 = sub_2614D5968();
    BOOL v30 = v28;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v42 = v32;
      *(_DWORD *)uint64_t v31 = 136315138;
      uint64_t v39 = v31 + 4;
      unint64_t v40 = v31;
      long long v33 = xmmword_26A9190B8;
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_2613D875C(v33, *((unint64_t *)&v33 + 1), &v42);
      sub_2614D5B58();
      swift_bridgeObjectRelease();
      os_log_type_t v34 = v29;
      unint64_t v35 = v40;
      _os_log_impl(&dword_2613B8000, v30, v34, "Loaded custom lexicon from %s", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x263E38060](v32, -1, -1);
      MEMORY[0x263E38060](v35, -1, -1);
      swift_release();
      sub_2613C2300(v14, v16);

      (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v38);
    }
    else
    {
      swift_release();
      sub_2613C2300(v14, v16);

      (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v38);
    }
  }
  else
  {
    uint64_t v42 = 0;
    unint64_t v43 = 0xE000000000000000;
    sub_2614D5C38();
    swift_bridgeObjectRelease();
    uint64_t v42 = 0xD000000000000026;
    unint64_t v43 = 0x80000002614E2390;
    swift_bridgeObjectRetain();
    sub_2614D54D8();
    swift_bridgeObjectRelease();
    uint64_t v18 = v42;
    unint64_t v19 = v43;
    sub_2613DC2B8();
    swift_allocError();
    uint64_t *v20 = v18;
    v20[1] = v19;
    swift_willThrow();
  }
  return v12;
}

void sub_261408B6C()
{
  uint64_t v67 = *MEMORY[0x263EF8340];
  uint64_t v59 = sub_2614D50C8();
  uint64_t v57 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v58 = (char *)&v57 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1 = sub_2614D5408();
  uint64_t v60 = *(void *)(v1 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  id v61 = self;
  id v5 = objc_msgSend(v61, sel_defaultManager);
  if (qword_26A9190B0 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)sub_2614D5378();
  unsigned int v7 = objc_msgSend(v5, sel_fileExistsAtPath_, v6);

  if (v7)
  {
    id v8 = objc_msgSend(v61, sel_defaultManager);
    unsigned int v9 = (void *)sub_2614D5378();
    unsigned __int8 v10 = objc_msgSend(v8, sel_isWritableFileAtPath_, v9);

    if ((v10 & 1) == 0)
    {
      *(void *)&long long v65 = 0;
      *((void *)&v65 + 1) = 0xE000000000000000;
      sub_2614D5C38();
      swift_bridgeObjectRelease();
      *(void *)&long long v65 = 0xD000000000000025;
      *((void *)&v65 + 1) = 0x80000002614E2340;
      swift_bridgeObjectRetain();
      sub_2614D54D8();
      swift_bridgeObjectRelease();
      long long v24 = v65;
      sub_2613DC2B8();
      swift_allocError();
      _OWORD *v25 = v24;
      swift_willThrow();
      return;
    }
  }
  uint64_t v11 = self;
  sub_2613C23AC(&qword_26A914A68);
  uint64_t v12 = (void *)sub_2614D52C8();
  *(void *)&long long v65 = 0;
  id v13 = objc_msgSend(v11, sel_dataWithJSONObject_options_error_, v12, 0, &v65);

  id v14 = (id)v65;
  if (!v13)
  {
    unint64_t v22 = v14;
    unint64_t v23 = (void *)sub_2614D4BF8();

    swift_willThrow();
    return;
  }
  uint64_t v15 = sub_2614D4CA8();
  int64_t v17 = v16;

  sub_2614D53F8();
  uint64_t v18 = sub_2614D53C8();
  if (!v19)
  {
    sub_2613C2314(v15, (unint64_t)v17);
    return;
  }
  *(void *)&long long v65 = v18;
  *((void *)&v65 + 1) = v19;
  v64[0] = xmmword_26A9190B8;
  swift_bridgeObjectRetain();
  sub_2614D53F8();
  sub_2613DC3BC();
  unint64_t v20 = v62;
  sub_2614D5BC8();
  uint64_t v21 = v20;
  if (v20)
  {
    sub_2613C2314(v15, (unint64_t)v17);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v4, v1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_17:
    *(void *)&long long v65 = 0;
    *((void *)&v65 + 1) = 0xE000000000000000;
    sub_2614D5C38();
    sub_2614D54D8();
    *(void *)&v64[0] = v21;
    sub_2613C23AC(&qword_26A914CA8);
    sub_2614D5D48();
    long long v55 = v65;
    sub_2613DC2B8();
    swift_allocError();
    _OWORD *v56 = v55;
    swift_willThrow();

    return;
  }
  uint64_t v62 = 0;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v26 = v61;
  id v27 = objc_msgSend(v61, sel_defaultManager);
  char v28 = (void *)sub_2614D5378();
  *(void *)&long long v65 = 0;
  id v29 = objc_msgSend(v27, sel_attributesOfItemAtPath_error_, v28, &v65);

  BOOL v30 = (void *)v65;
  if (!v29) {
    goto LABEL_16;
  }
  type metadata accessor for FileAttributeKey();
  uint64_t v60 = v31;
  sub_2614097C4(&qword_26A914F88);
  uint64_t v32 = sub_2614D52E8();
  id v33 = v30;

  os_log_type_t v34 = (void *)*MEMORY[0x263F08078];
  id v35 = objc_allocWithZone(NSNumber);
  id v36 = v34;
  id v37 = objc_msgSend(v35, sel_initWithInteger_, 432);
  unint64_t v66 = sub_2614095F0();
  *(void *)&long long v65 = v37;
  sub_261409630(&v65, v64);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v63 = v32;
  sub_2614077A4(v64, v36, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  id v39 = objc_msgSend(v26, sel_defaultManager);
  unint64_t v40 = (void *)sub_2614D52C8();
  swift_bridgeObjectRelease();
  uint64_t v41 = (void *)sub_2614D5378();
  *(void *)&long long v65 = 0;
  unsigned int v42 = objc_msgSend(v39, sel_setAttributes_ofItemAtPath_error_, v40, v41, &v65);

  if (!v42)
  {
LABEL_16:
    id v54 = (id)v65;
    uint64_t v21 = (void *)sub_2614D4BF8();

    swift_willThrow();
    sub_2613C2314(v15, (unint64_t)v17);
    goto LABEL_17;
  }
  id v61 = v17;
  id v43 = (id)v65;
  uint64_t v44 = sub_26146718C();
  uint64_t v45 = v57;
  uint64_t v46 = v58;
  uint64_t v47 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v58, v44, v59);
  unint64_t v48 = sub_2614D50A8();
  os_log_type_t v49 = sub_2614D5968();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    uint64_t v51 = v45;
    uint64_t v52 = swift_slowAlloc();
    *(void *)&long long v65 = v52;
    *(_DWORD *)uint64_t v50 = 136315138;
    long long v53 = xmmword_26A9190B8;
    swift_bridgeObjectRetain();
    *(void *)&v64[0] = sub_2613D875C(v53, *((unint64_t *)&v53 + 1), (uint64_t *)&v65);
    sub_2614D5B58();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2613B8000, v48, v49, "Updated lexicon at %s.", v50, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x263E38060](v52, -1, -1);
    MEMORY[0x263E38060](v50, -1, -1);
    sub_2613C2314(v15, (unint64_t)v61);

    (*(void (**)(char *, uint64_t))(v51 + 8))(v58, v59);
  }
  else
  {
    sub_2613C2314(v15, (unint64_t)v61);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
  }
}

uint64_t type metadata accessor for VAMemoryBackedLexicon()
{
  return self;
}

uint64_t sub_26140949C()
{
  return type metadata accessor for VAFileBackedLexicon();
}

uint64_t type metadata accessor for VAFileBackedLexicon()
{
  uint64_t result = qword_26A9190C8;
  if (!qword_26A9190C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2614094F0()
{
  uint64_t result = sub_2614D4CE8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void type metadata accessor for FileAttributeKey()
{
  if (!qword_26A914FB8)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_26A914FB8);
    }
  }
}

unint64_t sub_2614095F0()
{
  unint64_t result = qword_26A914F90;
  if (!qword_26A914F90)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A914F90);
  }
  return result;
}

_OWORD *sub_261409630(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_261409640()
{
  unint64_t result = qword_26A914FB0;
  if (!qword_26A914FB0)
  {
    sub_2613C5EC8(&qword_26A914FA8);
    sub_2614096BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914FB0);
  }
  return result;
}

unint64_t sub_2614096BC()
{
  unint64_t result = qword_26A914A60;
  if (!qword_26A914A60)
  {
    sub_2613C5EC8(&qword_26A914A68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A914A60);
  }
  return result;
}

uint64_t sub_261409728()
{
  return sub_2614097C4(&qword_26A914FC0);
}

uint64_t sub_26140975C()
{
  return sub_2614097C4(&qword_26A914FC8);
}

uint64_t sub_261409790()
{
  return sub_2614097C4(&qword_26A914FD0);
}

uint64_t sub_2614097C4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FileAttributeKey();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261409808()
{
  swift_beginAccess();
  return *(void *)(v0 + 16);
}

uint64_t sub_26140983C(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t sub_26140987C()
{
  swift_beginAccess();
  return *(void *)(v0 + 24);
}

uint64_t sub_2614098B0(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t sub_2614098F0()
{
  return swift_retain();
}

uint64_t sub_261409928(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return swift_release();
}

uint64_t sub_261409970()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2614099A8(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2614099F0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_261409A28(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_261409A70()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_261409AA8(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_261409AF0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_261409B28(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_261409B70())()
{
  return j__swift_endAccess;
}

uint64_t sub_261409BC4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_261409BFC(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 72) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_261409C44()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_261409C7C(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 80) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_261409CC4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_261409D18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_261409D68(a1, a2);
  return v4;
}

void sub_261409D68(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_2614D49B8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unsigned int v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3[4] = 0;
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  mach_timebase_info v3[2] = a1;
  unsigned __int8 v10 = v3 + 2;
  if (a2 + 0x4000000000000000 < 0)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  float v11 = ceilf(log2f((float)(2 * a2)));
  if ((~LODWORD(v11) & 0x7F800000) == 0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v11 <= -1.0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v11 >= 1.8447e19)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v3[3] = (unint64_t)v11;
  (*(void (**)(unsigned char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F8CD08], v6);
  type metadata accessor for DSPSplitComplex();
  sub_2613C23AC(&qword_26A914FE0);
  swift_allocObject();
  uint64_t v12 = sub_2614D4998();
  if (v12)
  {
    uint64_t v13 = v12;
    swift_beginAccess();
    v3[4] = v13;
    swift_release();
    swift_beginAccess();
    uint64_t v14 = *v10;
    if ((*v10 & 0x8000000000000000) == 0)
    {
      if (!v14)
      {
        v3[5] = MEMORY[0x263F8EE78];
        goto LABEL_21;
      }
      uint64_t v15 = sub_2614D56C8();
      *(void *)(v15 + 16) = v14;
      bzero((void *)(v15 + 32), 4 * v14);
      uint64_t v16 = v3[2];
      v3[5] = v15;
      if ((v16 & 0x8000000000000000) == 0)
      {
        if (v16)
        {
          uint64_t v17 = sub_2614D56C8();
          *(void *)(v17 + 16) = v16;
          bzero((void *)(v17 + 32), 4 * v16);
          uint64_t v18 = v3[2];
          v3[6] = v17;
          if ((v18 & 0x8000000000000000) == 0)
          {
            if (v18)
            {
              uint64_t v19 = sub_2614D56C8();
              *(void *)(v19 + 16) = v18;
              bzero((void *)(v19 + 32), 4 * v18);
              uint64_t v20 = v3[2];
              v3[7] = v19;
              if ((v20 & 0x8000000000000000) == 0)
              {
                if (v20)
                {
                  uint64_t v21 = sub_2614D56C8();
                  *(void *)(v21 + 16) = v20;
                  bzero((void *)(v21 + 32), 4 * v20);
                  uint64_t v22 = v3[2];
                  v3[8] = v21;
                  if ((v22 & 0x8000000000000000) == 0)
                  {
                    if (v22)
                    {
                      uint64_t v23 = sub_2614D56C8();
                      *(void *)(v23 + 16) = v22;
                      bzero((void *)(v23 + 32), 4 * v22);
                      uint64_t v24 = v3[2];
                      v3[9] = v23;
                      if ((v24 & 0x8000000000000000) == 0)
                      {
                        if (v24)
                        {
                          uint64_t v25 = sub_2614D56C8();
                          *(void *)(v25 + 16) = v24;
                          bzero((void *)(v25 + 32), 4 * v24);
                        }
                        else
                        {
                          uint64_t v25 = MEMORY[0x263F8EE78];
                        }
                        goto LABEL_25;
                      }
                      goto LABEL_37;
                    }
LABEL_24:
                    uint64_t v25 = MEMORY[0x263F8EE78];
                    v3[9] = MEMORY[0x263F8EE78];
LABEL_25:
                    v3[10] = v25;
                    return;
                  }
LABEL_36:
                  __break(1u);
LABEL_37:
                  __break(1u);
                  goto LABEL_38;
                }
LABEL_23:
                v3[8] = MEMORY[0x263F8EE78];
                goto LABEL_24;
              }
LABEL_35:
              __break(1u);
              goto LABEL_36;
            }
LABEL_22:
            v3[7] = MEMORY[0x263F8EE78];
            goto LABEL_23;
          }
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
LABEL_21:
        v3[6] = MEMORY[0x263F8EE78];
        goto LABEL_22;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
LABEL_38:
  __break(1u);
}

void type metadata accessor for DSPSplitComplex()
{
  if (!qword_26A915018)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_26A915018);
    }
  }
}

uint64_t sub_26140A138(uint64_t a1)
{
  long long v2 = v1;
  uint64_t v4 = *(uint64_t (**)(void))(*(void *)v1 + 152);
  vDSP_Length v5 = v4();
  uint64_t v6 = (unint64_t *)(*(void *)v1 + 336);
  unint64_t v7 = *v6;
  uint64_t v8 = (void (*)(void *, void))((uint64_t (*)(void *))*v6)(v67);
  unsigned __int8 v10 = v9;
  float v11 = *v9;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *unsigned __int8 v10 = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    float v11 = sub_2613D8310(0, *((void *)v11 + 2), 0, v11);
  }
  *unsigned __int8 v10 = v11;
  swift_bridgeObjectRetain();
  vDSP_vclr((float *)v11 + 8, 1, v5);
  v8(v67, 0);
  swift_bridgeObjectRelease();
  vDSP_Length v13 = *(void *)(a1 + 16);
  uint64_t v14 = (void *)((uint64_t (*)(void *))v7)(v67);
  uint64_t v16 = v15;
  uint64_t v17 = *v15;
  char v18 = swift_isUniquelyReferenced_nonNull_native();
  void *v16 = v17;
  if ((v18 & 1) == 0) {
    goto LABEL_28;
  }
  if (!*((void *)v17 + 2)) {
    goto LABEL_29;
  }
LABEL_5:
  vDSP_mmov((const float *)(a1 + 32), (float *)v17 + 8, v13, 1uLL, 1uLL, 1uLL);
  ((void (*)(void *, void))v14)(v67, 0);
  uint64_t v60 = (uint64_t (*)(unsigned char *, void))((uint64_t (*)(unsigned char *))v7)(v65);
  uint64_t v14 = v19;
  uint64_t v17 = *v19;
  char v20 = swift_isUniquelyReferenced_nonNull_native();
  void *v14 = v17;
  uint64_t v59 = (char **)v14;
  if ((v20 & 1) == 0) {
    goto LABEL_30;
  }
  while (1)
  {
    uint64_t v58 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v2 + 240))(v64);
    uint64_t v22 = v21;
    uint64_t v23 = *v21;
    char v24 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v22 = v23;
    id v61 = v4;
    uint64_t v57 = v22;
    if ((v24 & 1) == 0)
    {
      uint64_t v23 = sub_2613D8E30((uint64_t)v23);
      *uint64_t v22 = v23;
    }
    uint64_t v56 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v2 + 264))(v63);
    id v26 = v25;
    id v27 = *v25;
    char v28 = swift_isUniquelyReferenced_nonNull_native();
    NSObject *v26 = v27;
    if ((v28 & 1) == 0)
    {
      id v27 = sub_2613D8E30((uint64_t)v27);
      NSObject *v26 = v27;
    }
    long long v55 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v2 + 288))(v62);
    BOOL v30 = v29;
    uint64_t v31 = *v29;
    char v32 = swift_isUniquelyReferenced_nonNull_native();
    void *v30 = v31;
    if ((v32 & 1) == 0)
    {
      uint64_t v31 = sub_2613D8E30((uint64_t)v31);
      void *v30 = v31;
    }
    v68.realp = (float *)(v27 + 32);
    v68.imagp = (float *)(v31 + 32);
    uint64_t result = (*(uint64_t (**)(void))(*(void *)v2 + 200))();
    if (!result)
    {
      __break(1u);
      return result;
    }
    id v54 = v17;
    sub_2614D49A8();
    swift_release();
    DSPSplitComplex v53 = v68;
    os_log_type_t v34 = (void (*)(void *, void))(*(uint64_t (**)(void *))(*(void *)v2 + 312))(v67);
    id v36 = v35;
    id v37 = *v35;
    vDSP_Length v38 = *((void *)*v35 + 2);
    char v39 = swift_isUniquelyReferenced_nonNull_native();
    char *v36 = v37;
    if ((v39 & 1) == 0)
    {
      id v37 = sub_2613D8E30((uint64_t)v37);
      char *v36 = v37;
    }
    DSPSplitComplex __A = v53;
    vDSP_zvabs(&__A, 1, (float *)v37 + 8, 1, v38);
    char *v36 = v37;
    v34(v67, 0);
    void *v30 = v31;
    v55(v62, 0);
    NSObject *v26 = v27;
    v56(v63, 0);
    char *v57 = v23;
    v58(v64, 0);
    uint64_t *v59 = v54;
    uint64_t v40 = v60(v65, 0);
    uint64_t v41 = *(uint64_t (**)(void))(*(void *)v2 + 296);
    uint64_t v42 = ((uint64_t (*)(uint64_t))v41)(v40);
    uint64_t v43 = v41();
    uint64_t v17 = (char *)v61();
    uint64_t v16 = (char **)(v42 + 32);
    unint64_t v7 = v43 + 32;
    uint64_t v4 = (uint64_t (*)(void))v67;
    uint64_t v44 = (void (*)(void *, void))(*(uint64_t (**)(void *))(*(void *)v2 + 360))(v67);
    uint64_t v46 = v45;
    uint64_t v47 = *v45;
    char v48 = swift_isUniquelyReferenced_nonNull_native();
    char *v46 = v47;
    if ((v48 & 1) == 0) {
      uint64_t v47 = sub_2613D8310(0, *((void *)v47 + 2), 0, v47);
    }
    char *v46 = v47;
    swift_bridgeObjectRetain();
    vDSP_vmul((const float *)(v42 + 32), 1, (const float *)(v43 + 32), 1, (float *)v47 + 8, 1, (vDSP_Length)v17);
    v44(v67, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v49 = swift_bridgeObjectRelease();
    uint64_t v14 = v2;
    a1 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 344))(v49);
    vDSP_Length v13 = *(void *)(a1 + 16);
    if (v13) {
      break;
    }
    swift_bridgeObjectRelease();
    long long v2 = (char *)MEMORY[0x263F8EE78];
    if (*(void *)(MEMORY[0x263F8EE78] + 16)) {
      goto LABEL_23;
    }
LABEL_27:
    __break(1u);
LABEL_28:
    uint64_t v17 = sub_2613D8E30((uint64_t)v17);
    void *v16 = v17;
    if (*((void *)v17 + 2)) {
      goto LABEL_5;
    }
LABEL_29:
    __break(1u);
LABEL_30:
    uint64_t v17 = sub_2613D8E30((uint64_t)v17);
    void *v14 = v17;
  }
  v67[0] = MEMORY[0x263F8EE78];
  uint64_t v14 = v67;
  sub_2613D917C(0, v13, 0);
  uint64_t v16 = 0;
  long long v2 = (char *)v67[0];
  unint64_t v7 = *(void *)(v67[0] + 16);
  do
  {
    float v50 = *(float *)(a1 + 4 * (void)v16 + 32);
    v67[0] = v2;
    unint64_t v51 = *((void *)v2 + 3);
    uint64_t v17 = (char *)(v7 + 1);
    if (v7 >= v51 >> 1)
    {
      uint64_t v14 = v67;
      sub_2613D917C(v51 > 1, v7 + 1, 1);
      long long v2 = (char *)v67[0];
    }
    uint64_t v16 = (char **)((char *)v16 + 1);
    *((void *)v2 + 2) = v17;
    *(float *)&v2[4 * v7++ + 32] = v50 * 0.25;
  }
  while ((char **)v13 != v16);
  swift_bridgeObjectRelease();
  if (!*((void *)v2 + 2)) {
    goto LABEL_27;
  }
LABEL_23:
  float v52 = *((float *)v2 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v2 = sub_2613D8E30((uint64_t)v2);
  }
  *((float *)v2 + 8) = v52 * 0.5;
  return (uint64_t)v2;
}

uint64_t sub_26140A868()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_26140A8B8()
{
  sub_26140A868();
  return swift_deallocClassInstance();
}

float sub_26140A8EC()
{
  return 16000.0;
}

uint64_t sub_26140A8F8()
{
  return 80;
}

float sub_26140A900()
{
  return 0.97;
}

float sub_26140A910()
{
  return 64.0;
}

float sub_26140A91C()
{
  return 8000.0;
}

id VATinyASRFeatureExtract.init()()
{
  return sub_26140C434(type metadata accessor for VATinyASRFeatureExtract);
}

id VATinyASRFeatureExtract.__deallocating_deinit()
{
  return sub_26140C660(type metadata accessor for VATinyASRFeatureExtract);
}

uint64_t sub_26140A970()
{
  return 160;
}

uint64_t sub_26140A978()
{
  return 400;
}

uint64_t sub_26140A980()
{
  return sub_2613E2B50();
}

uint64_t sub_26140A98C(uint64_t a1)
{
  return sub_2613E2BA4(a1, &OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract_windowAppliedFrame);
}

uint64_t (*sub_26140A998())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_26140A9F4()
{
  return sub_2613E2B50();
}

uint64_t sub_26140AA00(uint64_t a1)
{
  return sub_2613E2BA4(a1, &OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract_frameFeatureVec);
}

uint64_t (*sub_26140AA0C())()
{
  return j_j__swift_endAccess;
}

void sub_26140AA68()
{
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract____lazy_storage___nfft;
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract____lazy_storage___nfft + 8) == 1)
  {
    uint64_t v2 = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
    float v3 = log2f((float)v2);
    float v4 = exp2f(ceilf(v3));
    if ((~LODWORD(v4) & 0x7F800000) != 0)
    {
      if (v4 > -9.2234e18)
      {
        if (v4 < 9.2234e18)
        {
          *(void *)uint64_t v1 = (uint64_t)v4;
          v1[8] = 0;
          return;
        }
        goto LABEL_9;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_9:
    __break(1u);
  }
}

uint64_t sub_26140AB30(uint64_t result)
{
  uint64_t v2 = v1 + OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract____lazy_storage___nfft;
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = 0;
  return result;
}

void *(*sub_26140AB48(void *a1))(void *result)
{
  a1[1] = v1;
  sub_26140AA68();
  *a1 = v3;
  return sub_26140AB90;
}

void *sub_26140AB90(void *result)
{
  uint64_t v1 = result[1] + OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract____lazy_storage___nfft;
  *(void *)uint64_t v1 = *result;
  *(unsigned char *)(v1 + 8) = 0;
  return result;
}

uint64_t sub_26140ABAC()
{
  uint64_t v1 = OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract____lazy_storage___fftCalculator;
  if (*(void *)((char *)v0 + OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract____lazy_storage___fftCalculator))
  {
    uint64_t v2 = *(void *)((char *)v0 + OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract____lazy_storage___fftCalculator);
  }
  else
  {
    uint64_t v3 = v0;
    float v4 = (void *)MEMORY[0x263F8EED0];
    uint64_t v5 = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF0))();
    uint64_t v6 = (*(uint64_t (**)(void))((*v4 & *v0) + 0x88))();
    type metadata accessor for VAFFTCalculator();
    uint64_t v2 = swift_allocObject();
    sub_261409D68(v5, v6);
    *(void *)((char *)v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_26140ACA0(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract____lazy_storage___fftCalculator) = a1;
  return swift_release();
}

uint64_t (*sub_26140ACB8(uint64_t *a1))(uint64_t *a1, uint64_t a2)
{
  a1[1] = v1;
  *a1 = sub_26140ABAC();
  return sub_26140AD00;
}

uint64_t sub_26140AD00(uint64_t *a1, uint64_t a2)
{
  return sub_26140B638(a1, a2, &OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract____lazy_storage___fftCalculator, MEMORY[0x263F8EED8]);
}

void sub_26140AD20()
{
  uint64_t v1 = OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract____lazy_storage___fbankTFlattened;
  if (*(void *)((char *)v0 + OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract____lazy_storage___fbankTFlattened))
  {
LABEL_69:
    swift_bridgeObjectRetain();
    return;
  }
  uint64_t v2 = (void *)MEMORY[0x263F8EED0];
  float v3 = (*(float (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
  float v4 = logf((float)(v3 / 700.0) + 1.0);
  float v5 = (*(float (**)(void))((*v2 & *v0) + 0xB0))();
  float v6 = logf((float)(v5 / 700.0) + 1.0);
  unint64_t v7 = *(uint64_t (**)(void))((*v2 & *v0) + 0x98);
  uint64_t v8 = v7();
  uint64_t v60 = *(uint64_t (**)(void))((*v2 & *v0) + 0xF0);
  uint64_t v9 = v60();
  if (v9 >= 0) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = v9 + 1;
  }
  if (v9 < -3)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  uint64_t v11 = v9;
  uint64_t v56 = v1;
  id v61 = v0;
  uint64_t v12 = v10 >> 1;
  uint64_t v13 = (v10 >> 1) + 1;
  if (v9 < -1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    if (v10 >> 1 == -1) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v14 = sub_2614D56C8();
    *(void *)(v14 + 16) = v13;
    if (!v13) {
      goto LABEL_12;
    }
  }
  *(_DWORD *)(v14 + 32) = 0;
  if ((unint64_t)(v11 + 1) >= 3) {
    bzero((void *)(v14 + 36), 4 * v12);
  }
LABEL_12:
  uint64_t v15 = v7();
  uint64_t v16 = (void *)sub_2613D1BF8(v14, v15);
  float v17 = (*(float (**)(void))((*v2 & *v0) + 0x90))();
  uint64_t v18 = v60();
  uint64_t v19 = v7();
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (!v19) {
      goto LABEL_50;
    }
    unint64_t v20 = 0;
    float v57 = (float)((float)((float)(v6 / 2.3026) * 2595.0) - (float)((float)(v4 / 2.3026) * 2595.0))
        / (float)((float)v8 + 1.0);
    float v58 = (float)(v4 / 2.3026) * 2595.0;
    float v21 = v17 / (float)v18;
    uint64_t v59 = v19;
    while (1)
    {
      if (v20 == 0x7FFFFFFFFFFFFFFELL) {
        goto LABEL_77;
      }
      uint64_t v22 = v60();
      if (v22 >= 0) {
        uint64_t v23 = v22;
      }
      else {
        uint64_t v23 = v22 + 1;
      }
      if (v22 < -3)
      {
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
        goto LABEL_81;
      }
      unint64_t v62 = v20 + 1;
      if ((unint64_t)(v22 + 3) >= 2) {
        break;
      }
LABEL_15:
      ++v20;
      if (v62 == v59) {
        goto LABEL_50;
      }
    }
    unint64_t v24 = 0;
    float v25 = v58 + (float)(v57 * (float)(uint64_t)v20);
    float v26 = v57 * (float)(uint64_t)(v20 + 1);
    float v27 = v58 + v26;
    float v28 = v57 * (float)(uint64_t)(v20 + 2);
    float v29 = v58 + v28;
    float v30 = (float)(v58 + v26) - v25;
    float v31 = (float)(v58 + v28) - (float)(v58 + v26);
    uint64_t v32 = (v23 >> 1) + 1;
    while (2)
    {
      float v34 = (float)(logf((float)((float)(v21 * (float)(uint64_t)v24) / 700.0) + 1.0) / 2.3026) * 2595.0;
      if (v25 >= v34 || v34 >= v29) {
        goto LABEL_25;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (v34 > v27)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v16 = sub_2613D8EC8(v16);
        }
        if (v20 >= v16[2])
        {
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
LABEL_76:
          __break(1u);
LABEL_77:
          __break(1u);
          goto LABEL_78;
        }
        id v37 = (char *)v16[v20 + 4];
        char v38 = swift_isUniquelyReferenced_nonNull_native();
        v16[v20 + 4] = v37;
        if (v38)
        {
          if ((v24 & 0x8000000000000000) != 0) {
            goto LABEL_74;
          }
        }
        else
        {
          id v37 = sub_2613D8E30((uint64_t)v37);
          v16[v20 + 4] = v37;
          if ((v24 & 0x8000000000000000) != 0) {
            goto LABEL_74;
          }
        }
        if (v24 >= *((void *)v37 + 2)) {
          goto LABEL_72;
        }
        float v33 = (float)(v29 - v34) / v31;
LABEL_24:
        *(float *)&v37[4 * v24 + 32] = v33;
LABEL_25:
        if (v32 == ++v24) {
          goto LABEL_15;
        }
        continue;
      }
      break;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v16 = sub_2613D8EC8(v16);
    }
    if (v20 >= v16[2]) {
      goto LABEL_71;
    }
    id v37 = (char *)v16[v20 + 4];
    char v39 = swift_isUniquelyReferenced_nonNull_native();
    v16[v20 + 4] = v37;
    if (v39)
    {
      if ((v24 & 0x8000000000000000) != 0) {
        goto LABEL_49;
      }
      goto LABEL_44;
    }
    id v37 = sub_2613D8E30((uint64_t)v37);
    v16[v20 + 4] = v37;
    if ((v24 & 0x8000000000000000) == 0)
    {
LABEL_44:
      if (v24 >= *((void *)v37 + 2)) {
        goto LABEL_73;
      }
      float v33 = (float)(v34 - v25) / v30;
      goto LABEL_24;
    }
LABEL_49:
    __break(1u);
LABEL_50:
    uint64_t v40 = sub_2613C23AC(&qword_26A915020);
    uint64_t v41 = sub_261403944(&qword_26A915028, &qword_26A915020);
    uint64_t v42 = sub_261403944(&qword_26A915030, &qword_26A914AB8);
    uint64_t v63 = sub_261464430(v40, v41, v42);
    uint64_t v43 = *(void *)(v63 + 16);
    if (v43)
    {
      uint64_t v44 = v63 + 32;
      uint64_t v45 = (char *)MEMORY[0x263F8EE78];
      while (1)
      {
        uint64_t v46 = *(void *)v44;
        uint64_t v47 = *(void *)(*(void *)v44 + 16);
        int64_t v48 = *((void *)v45 + 2);
        int64_t v49 = v48 + v47;
        if (__OFADD__(v48, v47)) {
          goto LABEL_76;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        float v50 = (char *)swift_isUniquelyReferenced_nonNull_native();
        if (v50 && v49 <= *((void *)v45 + 3) >> 1)
        {
          if (!*(void *)(v46 + 16)) {
            goto LABEL_52;
          }
        }
        else
        {
          if (v48 <= v49) {
            int64_t v51 = v48 + v47;
          }
          else {
            int64_t v51 = v48;
          }
          uint64_t v45 = sub_2613D8310(v50, v51, 1, v45);
          if (!*(void *)(v46 + 16))
          {
LABEL_52:
            if (v47) {
              goto LABEL_75;
            }
            goto LABEL_53;
          }
        }
        uint64_t v52 = *((void *)v45 + 2);
        if ((*((void *)v45 + 3) >> 1) - v52 < v47) {
          goto LABEL_79;
        }
        memcpy(&v45[4 * v52 + 32], (const void *)(v46 + 32), 4 * v47);
        if (v47)
        {
          uint64_t v53 = *((void *)v45 + 2);
          BOOL v54 = __OFADD__(v53, v47);
          uint64_t v55 = v53 + v47;
          if (v54) {
            goto LABEL_80;
          }
          *((void *)v45 + 2) = v55;
        }
LABEL_53:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v44 += 8;
        if (!--v43) {
          goto LABEL_68;
        }
      }
    }
    uint64_t v45 = (char *)MEMORY[0x263F8EE78];
LABEL_68:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)((char *)v61 + v56) = v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_69;
  }
LABEL_82:
  __break(1u);
}

uint64_t sub_26140B38C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract____lazy_storage___fbankTFlattened) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_26140B3A4(void *a1))(uint64_t *a1, uint64_t a2)
{
  a1[1] = v1;
  sub_26140AD20();
  *a1 = v3;
  return sub_26140B3EC;
}

uint64_t sub_26140B3EC(uint64_t *a1, uint64_t a2)
{
  return sub_26140B638(a1, a2, &OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract____lazy_storage___fbankTFlattened, MEMORY[0x263F8EEA0]);
}

uint64_t sub_26140B40C()
{
  uint64_t v1 = OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract____lazy_storage___hammingWindow;
  if (*(void *)((char *)v0 + OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract____lazy_storage___hammingWindow))
  {
    uint64_t v2 = *(void *)((char *)v0 + OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract____lazy_storage___hammingWindow);
LABEL_12:
    swift_bridgeObjectRetain();
    return v2;
  }
  uint64_t v3 = *(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88);
  uint64_t result = v3();
  if ((result & 0x8000000000000000) == 0)
  {
    uint64_t v5 = result;
    uint64_t v8 = v1;
    if (result)
    {
      uint64_t v2 = sub_2614D56C8();
      *(void *)(v2 + 16) = v5;
      bzero((void *)(v2 + 32), 4 * v5);
      uint64_t result = v3();
      if ((result & 0x8000000000000000) == 0)
      {
LABEL_6:
        uint64_t v6 = result;
        if (!result)
        {
LABEL_11:
          *(void *)((char *)v0 + v8) = v2;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_12;
        }
        uint64_t v7 = 0;
        while (1)
        {
          uint64_t result = v3();
          if (__OFSUB__(result, 1)) {
            goto LABEL_15;
          }
          if ((unint64_t)v7 >= *(void *)(v2 + 16)) {
            goto LABEL_16;
          }
          *(float *)(v2 + 32 + 4 * v7) = (float)(cosf((float)((float)((float)v7 + (float)v7) * 3.1416)/ (float)(result - 1))* -0.46)+ 0.54;
          if (v6 == ++v7) {
            goto LABEL_11;
          }
        }
      }
    }
    else
    {
      uint64_t v2 = MEMORY[0x263F8EE78];
      uint64_t result = v3();
      if ((result & 0x8000000000000000) == 0) {
        goto LABEL_6;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_26140B5B8(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract____lazy_storage___hammingWindow) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_26140B5D0(uint64_t *a1))(uint64_t *a1, uint64_t a2)
{
  a1[1] = v1;
  *a1 = sub_26140B40C();
  return sub_26140B618;
}

uint64_t sub_26140B618(uint64_t *a1, uint64_t a2)
{
  return sub_26140B638(a1, a2, &OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract____lazy_storage___hammingWindow, MEMORY[0x263F8EEA0]);
}

uint64_t sub_26140B638(uint64_t *a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v6 = *(void *)(v4 + *a3);
  *(void *)(v4 + *a3) = v5;
  return a4(v6);
}

char *sub_26140B650(uint64_t a1)
{
  uint64_t v1 = (char *)a1;
  uint64_t v7 = *MEMORY[0x263EF8340];
  float __C = 0.0;
  vDSP_Length v2 = *(void *)(a1 + 16);
  uint64_t v3 = (const float *)(a1 + 32);
  vDSP_meanv((const float *)(a1 + 32), 1, &__C, v2);
  float v5 = 0.0 - __C;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v1 = sub_2613D8310(0, *((void *)v1 + 2), 0, v1);
  }
  vDSP_vsadd(v3, 1, &v5, (float *)v1 + 8, 1, v2);
  return v1;
}

float sub_26140B724(float a1)
{
  if (a1 <= 1.2e-38) {
    a1 = 1.2e-38;
  }
  return logf(a1);
}

uint64_t sub_26140B73C(uint64_t *a1)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(*a1 + 16);
  v13[0] = 1.0;
  uint64_t v6 = *(float (**)(void))((*MEMORY[0x263F8EED0] & *(void *)v1) + 0xA0);
  v13[1] = -v6();
  BOOL v7 = v5 != 0;
  vDSP_Length v8 = v5 - 1;
  if (!v7)
  {
    __break(1u);
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = (char *)v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v10 = sub_2613D8310(0, *(void *)(v4 + 16), 0, (char *)v4);
  }
  *a1 = (uint64_t)v10;
  vDSP_deq22((const float *)(v4 + 32), 1, v13, (float *)v10 + 8, 1, v8);
  uint64_t v11 = swift_bridgeObjectRelease();
  float v2 = ((float (*)(uint64_t))v6)(v11);
  uint64_t v1 = *a1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
LABEL_8:
    uint64_t result = (uint64_t)sub_2613D8E30(v1);
    uint64_t v1 = result;
    if (!*(void *)(result + 16)) {
      goto LABEL_9;
    }
LABEL_7:
    *(float *)(v1 + 32) = (float)(1.0 - v2) * *(float *)(v1 + 32);
    *a1 = v1;
    return result;
  }
  if (*(void *)(v1 + 16)) {
    goto LABEL_7;
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_26140B894(char **a1)
{
  uint64_t v4 = *a1;
  if (*((void *)*a1 + 2) >= 2uLL)
  {
    uint64_t v6 = *(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v1) + 0xA0);
    if (((float (*)(void))v6)() != 1.0)
    {
      unint64_t v8 = *((void *)v4 + 2);
      if (v8 < 2) {
        goto LABEL_10;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        goto LABEL_21;
      }
      while (v8 - 1 < *((void *)v4 + 2))
      {
        uint64_t v10 = &v4[4 * v8];
        float v2 = *((float *)v10 + 7);
        uint64_t v7 = v6();
        unint64_t v12 = *((void *)v4 + 2);
        if (v8 - 2 >= v12) {
          goto LABEL_16;
        }
        unint64_t v9 = v8 - 1;
        if (v8 - 1 >= v12) {
          goto LABEL_17;
        }
        *((float *)v10 + 7) = v2 - (float)(v11 * *(float *)&v4[4 * v8-- + 24]);
        if (v9 <= 1)
        {
          unint64_t v8 = *((void *)v4 + 2);
LABEL_10:
          if (!v8) {
            goto LABEL_18;
          }
          float v3 = *((float *)v4 + 8);
          float v2 = ((float (*)(uint64_t))v6)(v7);
          if (swift_isUniquelyReferenced_nonNull_native())
          {
            if (*((void *)v4 + 2)) {
              goto LABEL_13;
            }
            goto LABEL_20;
          }
LABEL_19:
          uint64_t v4 = sub_2613D8E30((uint64_t)v4);
          if (*((void *)v4 + 2))
          {
LABEL_13:
            *((float *)v4 + 8) = v3 * (float)(1.0 - v2);
            *a1 = v4;
            return;
          }
LABEL_20:
          __break(1u);
LABEL_21:
          uint64_t v4 = sub_2613D8E30((uint64_t)v4);
        }
      }
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
  }
}

uint64_t sub_26140BA18(uint64_t a1)
{
  float v3 = v1;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = (uint64_t (*)(void))MEMORY[0x263F8EED0];
  uint64_t v7 = *(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v1) + 0x138);
  unint64_t v8 = (void *)((*MEMORY[0x263F8EED0] & *v1) + 312);
  unint64_t v9 = *(void *)(v7() + 16);
  swift_bridgeObjectRelease();
  if (v5 != v9)
  {
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v82 = a1;
  uint64_t v10 = *(uint64_t (**)(uint64_t))((*(void *)v6 & *v3) + 0xB8);
  uint64_t v11 = swift_bridgeObjectRetain();
  if (v10(v11))
  {
    swift_bridgeObjectRelease();
    uint64_t v82 = (*(uint64_t (**)(uint64_t))((*(void *)v6 & *v3) + 0x150))(a1);
  }
  uint64_t v12 = (*(uint64_t (**)(uint64_t *))((*(void *)v6 & *v3) + 0x168))(&v82);
  uint64_t v13 = *(uint64_t (**)(void))((*(void *)v6 & *v3) + 0xC0);
  uint64_t v14 = *(void *)(((uint64_t (*)(uint64_t))v13)(v12) + 16);
  uint64_t v15 = swift_bridgeObjectRelease();
  uint64_t v16 = *(uint64_t (**)(void))((*(void *)v6 & *v3) + 0x88);
  uint64_t v17 = ((uint64_t (*)(uint64_t))v16)(v15);
  if (v14 != v17)
  {
    uint64_t result = v16();
    if (result < 0)
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    uint64_t v19 = result;
    if (result)
    {
      uint64_t v20 = sub_2614D56C8();
      *(void *)(v20 + 16) = v19;
      bzero((void *)(v20 + 32), 4 * v19);
    }
    else
    {
      uint64_t v20 = MEMORY[0x263F8EE78];
    }
    uint64_t v17 = (*(uint64_t (**)(uint64_t))((*(void *)v6 & *v3) + 0xC8))(v20);
  }
  char v79 = v13;
  vDSP_Length v21 = *(void *)(((uint64_t (*)(uint64_t))v13)(v17) + 16);
  swift_bridgeObjectRelease();
  uint64_t v22 = *(uint64_t (**)(unsigned char *))((*(void *)v6 & *v3) + 0xD0);
  uint64_t v23 = (void (*)(unsigned char *, void))v22(v81);
  float v25 = v24;
  float v26 = *v24;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  _OWORD *v25 = v26;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    float v26 = sub_2613D8310(0, *((void *)v26 + 2), 0, v26);
  }
  _OWORD *v25 = v26;
  swift_bridgeObjectRetain();
  vDSP_vclr((float *)v26 + 8, 1, v21);
  v23(v81, 0);
  swift_bridgeObjectRelease();
  uint64_t v28 = v82;
  uint64_t v29 = swift_bridgeObjectRetain();
  uint64_t v30 = ((uint64_t (*)(uint64_t))v7)(v29);
  vDSP_Length v31 = *(void *)(v7() + 16);
  swift_bridgeObjectRelease();
  uint64_t v32 = (void (*)(unsigned char *, void))v22(v81);
  float v34 = v33;
  id v35 = *v33;
  char v36 = swift_isUniquelyReferenced_nonNull_native();
  void *v34 = v35;
  if ((v36 & 1) == 0) {
    id v35 = sub_2613D8310(0, *((void *)v35 + 2), 0, v35);
  }
  void *v34 = v35;
  swift_bridgeObjectRetain();
  vDSP_vmul((const float *)(v28 + 32), 1, (const float *)(v30 + 32), 1, (float *)v35 + 8, 1, v31);
  v32(v81, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = swift_bridgeObjectRelease();
  unint64_t v8 = (void *)MEMORY[0x263F8EED0];
  uint64_t v38 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v3) + 0x108))(v37);
  uint64_t v39 = v79();
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)v38 + 376))(v39);
  swift_release();
  uint64_t v40 = swift_bridgeObjectRelease();
  uint64_t v6 = *(uint64_t (**)(void))((*v8 & *v3) + 0xF0);
  unint64_t v9 = (unint64_t)v3;
  uint64_t v41 = ((uint64_t (*)(uint64_t))v6)(v40);
  if (v41 >= 0) {
    uint64_t v42 = v41;
  }
  else {
    uint64_t v42 = v41 + 1;
  }
  if (v41 < -3) {
    goto LABEL_41;
  }
  uint64_t v43 = v42 >> 1;
  if (*(void *)(v2 + 16) <= v43)
  {
LABEL_42:
    __break(1u);
LABEL_43:
    swift_bridgeObjectRelease();
    uint64_t v46 = sub_2613DAF94(v2, v2 + 32, 0, v9);
    goto LABEL_24;
  }
  unint64_t v9 = 2 * v43 + 3;
  sub_2614D5FE8();
  swift_unknownObjectRetain_n();
  uint64_t v44 = swift_dynamicCastClass();
  if (!v44)
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = MEMORY[0x263F8EE78];
  }
  uint64_t v45 = *(void *)(v44 + 16);
  swift_release();
  if (v45 != v9 >> 1) {
    goto LABEL_43;
  }
  uint64_t v46 = swift_dynamicCastClass();
  if (!v46)
  {
    swift_bridgeObjectRelease();
    uint64_t v46 = MEMORY[0x263F8EE78];
  }
LABEL_24:
  uint64_t v78 = v46;
  uint64_t v47 = swift_bridgeObjectRelease();
  int64_t v48 = *(uint64_t (**)(uint64_t))((*v8 & *v3) + 0xD8);
  uint64_t v49 = *(void *)(v48(v47) + 16);
  uint64_t v50 = swift_bridgeObjectRelease();
  int64_t v51 = *(uint64_t (**)(void))((*v8 & *v3) + 0x98);
  uint64_t v52 = ((uint64_t (*)(uint64_t))v51)(v50);
  if (v49 != v52)
  {
    uint64_t result = v51();
    if (result < 0)
    {
LABEL_47:
      __break(1u);
      return result;
    }
    uint64_t v53 = result;
    if (result)
    {
      uint64_t v54 = sub_2614D56C8();
      *(void *)(v54 + 16) = v53;
      bzero((void *)(v54 + 32), 4 * v53);
    }
    else
    {
      uint64_t v54 = MEMORY[0x263F8EE78];
    }
    uint64_t v52 = (*(uint64_t (**)(uint64_t))((*v8 & *v3) + 0xE0))(v54);
  }
  uint64_t v77 = v48;
  vDSP_Length v55 = *(void *)(v48(v52) + 16);
  swift_bridgeObjectRelease();
  uint64_t v56 = *(uint64_t (**)(unsigned char *))((*v8 & *v3) + 0xE8);
  float v57 = (void (*)(unsigned char *, void))v56(v81);
  uint64_t v59 = v58;
  uint64_t v60 = *v58;
  char v61 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v59 = v60;
  if ((v61 & 1) == 0) {
    uint64_t v60 = sub_2613D8310(0, *((void *)v60 + 2), 0, v60);
  }
  uint64_t *v59 = v60;
  swift_bridgeObjectRetain();
  vDSP_vclr((float *)v60 + 8, 1, v55);
  v57(v81, 0);
  uint64_t v62 = swift_bridgeObjectRelease();
  uint64_t v63 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v3) + 0x120))(v62);
  uint64_t result = v51();
  if (result < 0)
  {
    __break(1u);
    goto LABEL_45;
  }
  vDSP_Length v64 = result;
  uint64_t result = v6();
  if (result < -3)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v65 = result;
  uint64_t v80 = (void (*)(unsigned char *, void))v56(v81);
  uint64_t v67 = v66;
  DSPSplitComplex v68 = *v66;
  char v69 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v67 = v68;
  if ((v69 & 1) == 0) {
    DSPSplitComplex v68 = sub_2613D8310(0, *((void *)v68 + 2), 0, v68);
  }
  if (v65 >= 0) {
    uint64_t v70 = v65;
  }
  else {
    uint64_t v70 = v65 + 1;
  }
  vDSP_Length __P = (v70 >> 1) + 1;
  uint64_t *v67 = v68;
  swift_bridgeObjectRetain();
  vDSP_mmul((const float *)(v78 + 32), 1, (const float *)(v63 + 32), 1, (float *)v68 + 8, 1, 1uLL, v64, __P);
  v80(v81, 0);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v72 = swift_bridgeObjectRelease();
  uint64_t v73 = v77(v72);
  uint64_t v74 = v3;
  uint64_t v75 = sub_26140C880(v73, v74);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v76 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v74) + 0xE0))(v75);
  return v77(v76);
}

uint64_t sub_26140C350(uint64_t result, uint64_t a2, uint64_t a3)
{
  if ((unsigned __int128)(a2 * (__int128)a3) >> 64 == (a2 * a3) >> 63)
  {
    uint64_t v3 = result;
    if (a2 * a3 != *(void *)(result + 16)) {
      return MEMORY[0x263F8EE78];
    }
    if ((a2 & 0x8000000000000000) == 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_26140C9B0(0, a2, v3, a3);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_26140C3F0()
{
  return 64;
}

double sub_26140C3F8()
{
  return 0.0;
}

float sub_26140C400()
{
  return 125.0;
}

float sub_26140C40C()
{
  return 7500.0;
}

id VAAVSFeatureExtract.init()()
{
  return sub_26140C434(type metadata accessor for VAAVSFeatureExtract);
}

id sub_26140C434(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_init);
}

id sub_26140C484(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  v4.receiver = a1;
  v4.super_class = (Class)a3();
  return objc_msgSendSuper2(&v4, sel_init);
}

id VAAVSFeatureExtract.__deallocating_deinit()
{
  return sub_26140C660(type metadata accessor for VAAVSFeatureExtract);
}

uint64_t sub_26140C4E0()
{
  return 40;
}

id VAFeatureExtract.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id VAFeatureExtract.init()()
{
  uint64_t v1 = MEMORY[0x263F8EE78];
  *(void *)&v0[OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract_windowAppliedFrame] = MEMORY[0x263F8EE78];
  *(void *)&v0[OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract_frameFeatureVec] = v1;
  uint64_t v2 = &v0[OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract____lazy_storage___nfft];
  *(void *)uint64_t v2 = 0;
  v2[8] = 1;
  *(void *)&v0[OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract____lazy_storage___fftCalculator] = 0;
  *(void *)&v0[OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract____lazy_storage___fbankTFlattened] = 0;
  *(void *)&v0[OBJC_IVAR____TtC12VoiceActions16VAFeatureExtract____lazy_storage___hammingWindow] = 0;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for VAFeatureExtract();
  return objc_msgSendSuper2(&v4, sel_init);
}

id VAFeatureExtract.__deallocating_deinit()
{
  return sub_26140C660(type metadata accessor for VAFeatureExtract);
}

id sub_26140C660(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void *sub_26140C714(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2613C23AC(&qword_26A914AB0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_2613C23AC(&qword_26A914AB8);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t type metadata accessor for VATinyASRFeatureExtract()
{
  return self;
}

uint64_t type metadata accessor for VAFFTCalculator()
{
  return self;
}

uint64_t sub_26140C880(uint64_t a1, void *a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v6 = sub_2613D917C(0, v2, 0);
    uint64_t v3 = v13;
    int64_t v7 = (float *)(a1 + 32);
    uint64_t v8 = *(float (**)(uint64_t, float))((*MEMORY[0x263F8EED0] & *a2) + 0x158);
    do
    {
      float v9 = v8(v6, *v7);
      unint64_t v11 = *(void *)(v13 + 16);
      unint64_t v10 = *(void *)(v13 + 24);
      if (v11 >= v10 >> 1) {
        uint64_t v6 = sub_2613D917C(v10 > 1, v11 + 1, 1);
      }
      *(void *)(v13 + 16) = v11 + 1;
      *(float *)(v13 + 4 * v11 + 32) = v9;
      ++v7;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_26140C9B0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (!v4) {
    return v5;
  }
  uint64_t v8 = a2;
  uint64_t v9 = result;
  uint64_t v28 = MEMORY[0x263F8EE78];
  uint64_t result = sub_2613D919C(0, v4 & ~(v4 >> 63), 0);
  if (v8 >= v9 && (v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = v28;
    uint64_t v10 = *(void *)(a3 + 16);
    uint64_t v25 = a3 + 32;
    uint64_t v26 = v10;
    while (v8 != v9)
    {
      uint64_t v11 = v9 * a4;
      if ((unsigned __int128)(v9 * (__int128)a4) >> 64 != (v9 * a4) >> 63) {
        goto LABEL_31;
      }
      if (v9 == 0x7FFFFFFFFFFFFFFFLL) {
        goto LABEL_32;
      }
      uint64_t v12 = a3;
      uint64_t v13 = ++v9 * a4;
      if ((unsigned __int128)(v9 * (__int128)a4) >> 64 != (v9 * a4) >> 63) {
        goto LABEL_33;
      }
      uint64_t v14 = v13 - v11;
      if (v13 < v11) {
        goto LABEL_34;
      }
      if (v10 < v11) {
        goto LABEL_35;
      }
      if (v11 < 0) {
        goto LABEL_36;
      }
      if (v10 < v13) {
        goto LABEL_37;
      }
      uint64_t v27 = v5;
      uint64_t v15 = a4;
      uint64_t v16 = v8;
      sub_2614D5FE8();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v17 = swift_dynamicCastClass();
      if (!v17)
      {
        swift_bridgeObjectRelease();
        uint64_t v17 = MEMORY[0x263F8EE78];
      }
      uint64_t v18 = *(void *)(v17 + 16);
      swift_release();
      if (v18 == v14)
      {
        a3 = v12;
        uint64_t v19 = (void *)swift_dynamicCastClass();
        uint64_t v8 = v16;
        a4 = v15;
        uint64_t v5 = v27;
        if (!v19)
        {
          swift_bridgeObjectRelease();
          uint64_t v19 = (void *)MEMORY[0x263F8EE78];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v19 = (void *)MEMORY[0x263F8EE78];
        BOOL v22 = v13 == v11;
        a3 = v12;
        uint64_t v8 = v16;
        a4 = v15;
        uint64_t v5 = v27;
        if (!v22)
        {
          if (v14 >= 1)
          {
            sub_2613C23AC(&qword_26A914AC0);
            uint64_t v19 = (void *)swift_allocObject();
            int64_t v23 = j__malloc_size(v19);
            uint64_t v24 = v23 - 32;
            if (v23 < 32) {
              uint64_t v24 = v23 - 29;
            }
            void v19[2] = v14;
            void v19[3] = 2 * (v24 >> 2);
          }
          memcpy(v19 + 4, (const void *)(v25 + 4 * v11), 4 * v14);
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v21 = *(void *)(v5 + 16);
      unint64_t v20 = *(void *)(v5 + 24);
      if (v21 >= v20 >> 1) {
        uint64_t result = sub_2613D919C(v20 > 1, v21 + 1, 1);
      }
      *(void *)(v5 + 16) = v21 + 1;
      *(void *)(v5 + 8 * v21 + 32) = v19;
      uint64_t v10 = v26;
      if (v8 == v9) {
        return v5;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for VAAVSFeatureExtract()
{
  return self;
}

uint64_t type metadata accessor for VAFeatureExtract()
{
  return self;
}

uint64_t method lookup function for VAFeatureExtract(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VAFeatureExtract);
}

uint64_t dispatch thunk of VAFeatureExtract.computeLog(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x158))();
}

uint64_t dispatch thunk of VAFeatureExtract.preEmphasizeNew(currFrame:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x160))();
}

uint64_t dispatch thunk of VAFeatureExtract.preEmphasize(currFrame:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x168))();
}

uint64_t dispatch thunk of VAFeatureExtract.forward(currFrame:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x170))();
}

uint64_t sub_26140CD90(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2);
  }
  if (*(void *)a1) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t sub_26140CDD4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = 0;
    }
  }
  return result;
}

uint64_t sub_26140CE18@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, float a6@<S0>)
{
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(float *)(a5 + 16) = a6;
  *(void *)(a5 + 24) = a3;
  *(void *)(a5 + 32) = a4;
  return result;
}

float sub_26140CE28()
{
  swift_beginAccess();
  return *(float *)(v0 + 32);
}

uint64_t sub_26140CE5C(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 32) = a1;
  return result;
}

uint64_t sub_26140CE9C()
{
  swift_beginAccess();
  return *(void *)(v0 + 56);
}

uint64_t sub_26140CED0(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t sub_26140CF10()
{
  swift_beginAccess();
  return *(void *)(v0 + 64);
}

uint64_t sub_26140CF44(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t (*sub_26140CF84())()
{
  return j_j__swift_endAccess;
}

float sub_26140CFD8()
{
  swift_beginAccess();
  return *(float *)(v0 + 72);
}

uint64_t sub_26140D00C(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 72) = a1;
  return result;
}

uint64_t sub_26140D04C()
{
  swift_beginAccess();
  return *(void *)(v0 + 80);
}

uint64_t sub_26140D080(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 80) = a1;
  return result;
}

uint64_t sub_26140D0C0()
{
  swift_beginAccess();
  return *(void *)(v0 + 88);
}

uint64_t sub_26140D0F4(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 88) = a1;
  return result;
}

uint64_t sub_26140D134()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t sub_26140D168(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 96) = a1;
  return result;
}

uint64_t (*sub_26140D1A8())()
{
  return j__swift_endAccess;
}

__n128 AVSEndpointer.__allocating_init(config:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  int v3 = *(_DWORD *)(a1 + 16);
  *(int64x2_t *)(v2 + 56) = vdupq_n_s64(0x28uLL);
  *(_DWORD *)(v2 + 72) = 1060320051;
  *(_OWORD *)(v2 + 80) = xmmword_2614DA390;
  *(unsigned char *)(v2 + 96) = 0;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_DWORD *)(v2 + 32) = v3;
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 40) = result;
  return result;
}

uint64_t AVSEndpointer.init(config:)(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  *(int64x2_t *)(v1 + 56) = vdupq_n_s64(0x28uLL);
  *(_DWORD *)(v1 + 72) = 1060320051;
  *(_OWORD *)(v1 + 80) = xmmword_2614DA390;
  *(unsigned char *)(v1 + 96) = 0;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_DWORD *)(v1 + 32) = v2;
  *(_OWORD *)(v1 + 40) = *(_OWORD *)(a1 + 24);
  return v1;
}

uint64_t sub_26140D2B4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 + 16);
  if (((*(uint64_t (**)(void))(*(void *)v1 + 408))() & 1) != 0
    || v4 < (*(uint64_t (**)(void))(*(void *)v1 + 192))())
  {
    (*(void (**)(void))(*(void *)v1 + 416))(0);
    return 0;
  }
  float v5 = (*(float (**)(void))(*(void *)v1 + 216))();
  uint64_t v6 = (*(uint64_t (**)(void))(*(void *)v1 + 240))();
  uint64_t v7 = sub_26140DF80();
  float v8 = sub_26140DF88();
  uint64_t v9 = sub_26140DF98();
  uint64_t v11 = sub_26140DFA0(a1, v6, v7, v9, v5, v8);
  uint64_t v12 = *(void *)(v10 + 16);
  if (!v12)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v13 = v12 - 1;
  uint64_t v14 = v10 + 32;
  uint64_t v15 = *(void *)(v10 + 32 + 8 * (v12 - 1));
  uint64_t v39 = *(uint64_t (**)(void))(*(void *)v2 + 168);
  uint64_t result = v39();
  uint64_t v17 = v4 - result;
  if (__OFSUB__(v4, result))
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v2 + 264))();
  if (__OFSUB__(v17, result))
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v15 < v17 - result) {
    goto LABEL_10;
  }
  uint64_t v36 = a1;
  uint64_t result = v39();
  if (__OFSUB__(v4, result))
  {
LABEL_44:
    __break(1u);
    return result;
  }
  if (v4 - result < *(void *)(v14 + 8 * v13)) {
    goto LABEL_10;
  }
  unint64_t v18 = 0;
  uint64_t v37 = v11 + 5;
  uint64_t v38 = v11;
  uint64_t v19 = (void *)MEMORY[0x263F8EE78];
  do
  {
    unint64_t v20 = v18 + 1;
    if (v13 == v18)
    {
      uint64_t v21 = *(void *)(v14 + 8 * v13);
      uint64_t v22 = v4 - v21;
      if (__OFSUB__(v4, v21))
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      if (v20 >= v38[2]) {
        goto LABEL_40;
      }
      uint64_t v23 = v37[v18];
      uint64_t v24 = *(void *)(v14 + 8 * v18);
      uint64_t v22 = v23 - v24;
      if (__OFSUB__(v23, v24)) {
        goto LABEL_41;
      }
    }
    uint64_t result = v39();
    if (result < v22)
    {
      uint64_t v25 = *(void *)(v14 + 8 * v18);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_2613E1088(0, v19[2] + 1, 1, v19);
        uint64_t v19 = (void *)result;
      }
      unint64_t v27 = v19[2];
      unint64_t v26 = v19[3];
      if (v27 >= v26 >> 1)
      {
        uint64_t result = (uint64_t)sub_2613E1088((void *)(v26 > 1), v27 + 1, 1, v19);
        uint64_t v19 = (void *)result;
      }
      void v19[2] = v27 + 1;
      v19[v27 + 4] = v25;
    }
    unint64_t v18 = v20;
  }
  while (v12 != v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v28 = sub_26140D87C(v36, v2);
  swift_release();
  uint64_t v29 = *(void *)(v28 + 16);
  if (v29)
  {
    uint64_t v30 = (unsigned char *)(v28 + 32);
    uint64_t v31 = MEMORY[0x263F8EE78];
    do
    {
      if (*v30 == 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_26140D770(0, *(void *)(v31 + 16) + 1, 1);
        }
        unint64_t v33 = *(void *)(v31 + 16);
        unint64_t v32 = *(void *)(v31 + 24);
        if (v33 >= v32 >> 1) {
          sub_26140D770((char *)(v32 > 1), v33 + 1, 1);
        }
        *(void *)(v31 + 16) = v33 + 1;
        *(unsigned char *)(v31 + v33 + 32) = 1;
      }
      ++v30;
      --v29;
    }
    while (v29);
  }
  else
  {
    uint64_t v31 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)(v31 + 16);
  uint64_t v35 = swift_release();
  return v19[2] && v34 >= (*(uint64_t (**)(uint64_t))(*(void *)v2 + 360))(v35);
}

uint64_t AVSEndpointer.deinit()
{
  return v0;
}

uint64_t AVSEndpointer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

char *sub_26140D770(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_26140D790(a1, a2, a3, *v3);
  *int v3 = result;
  return result;
}

char *sub_26140D790(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_2613C23AC(&qword_26A915038);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_release();
  return v10;
}

uint64_t sub_26140D87C(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    unint64_t v6 = sub_26140D770(0, v2, 0);
    uint64_t v3 = v14;
    int64_t v7 = (float *)(a1 + 32);
    int64_t v8 = *(float (**)(char *))(*(void *)a2 + 336);
    do
    {
      float v9 = *v7;
      float v10 = v8(v6);
      unint64_t v12 = *(void *)(v14 + 16);
      unint64_t v11 = *(void *)(v14 + 24);
      if (v12 >= v11 >> 1) {
        unint64_t v6 = sub_26140D770((char *)(v11 > 1), v12 + 1, 1);
      }
      *(void *)(v14 + 16) = v12 + 1;
      *(unsigned char *)(v14 + v12 + 32) = v10 <= v9;
      ++v7;
      --v2;
    }
    while (v2);
  }
  return v3;
}

__n128 initializeWithCopy for AVSEndpointerConfig(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for AVSEndpointerConfig(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AVSEndpointerConfig(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AVSEndpointerConfig()
{
  return &type metadata for AVSEndpointerConfig;
}

uint64_t type metadata accessor for AVSEndpointer()
{
  return self;
}

uint64_t method lookup function for AVSEndpointer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AVSEndpointer);
}

uint64_t dispatch thunk of AVSEndpointer.__allocating_init(config:)()
{
  return (*(uint64_t (**)(void))(v0 + 432))();
}

uint64_t OS_os_log.init(category:)()
{
  return sub_2614D5AC8();
}

uint64_t OS_os_log.default(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_26140DF18(a1, a2, a3, a4, MEMORY[0x263F90290]);
}

uint64_t sub_26140DAAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  switch(*(void *)(a5 + 16))
  {
    case 1:
      sub_2613C23AC(qword_26A914E40);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_2614D81E0;
      uint64_t v7 = v6 + 32;
      uint64_t v8 = a5 + 32;
      goto LABEL_13;
    case 2:
      sub_2613C23AC(qword_26A914E40);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_2614D81F0;
      sub_2613E3434(a5 + 32, v10 + 32);
      uint64_t v7 = v10 + 72;
      uint64_t v8 = a5 + 72;
      goto LABEL_13;
    case 3:
      sub_2613C23AC(qword_26A914E40);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_2614D8210;
      sub_2613E3434(a5 + 32, v11 + 32);
      sub_2613E3434(a5 + 72, v11 + 72);
      uint64_t v7 = v11 + 112;
      uint64_t v8 = a5 + 112;
      goto LABEL_13;
    case 4:
      sub_2613C23AC(qword_26A914E40);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_2614D81C0;
      sub_2613E3434(a5 + 32, v12 + 32);
      sub_2613E3434(a5 + 72, v12 + 72);
      sub_2613E3434(a5 + 112, v12 + 112);
      uint64_t v7 = v12 + 152;
      uint64_t v8 = a5 + 152;
      goto LABEL_13;
    case 5:
      sub_2613C23AC(qword_26A914E40);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_2614D8200;
      sub_2613E3434(a5 + 32, v13 + 32);
      sub_2613E3434(a5 + 72, v13 + 72);
      sub_2613E3434(a5 + 112, v13 + 112);
      sub_2613E3434(a5 + 152, v13 + 152);
      uint64_t v7 = v13 + 192;
      uint64_t v8 = a5 + 192;
      goto LABEL_13;
    case 6:
      sub_2613C23AC(qword_26A914E40);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_2614D81D0;
      sub_2613E3434(a5 + 32, v14 + 32);
      sub_2613E3434(a5 + 72, v14 + 72);
      sub_2613E3434(a5 + 112, v14 + 112);
      sub_2613E3434(a5 + 152, v14 + 152);
      sub_2613E3434(a5 + 192, v14 + 192);
      uint64_t v7 = v14 + 232;
      uint64_t v8 = a5 + 232;
      goto LABEL_13;
    case 7:
      sub_2613C23AC(qword_26A914E40);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_2614DA430;
      sub_2613E3434(a5 + 32, v15 + 32);
      sub_2613E3434(a5 + 72, v15 + 72);
      sub_2613E3434(a5 + 112, v15 + 112);
      sub_2613E3434(a5 + 152, v15 + 152);
      sub_2613E3434(a5 + 192, v15 + 192);
      sub_2613E3434(a5 + 232, v15 + 232);
      uint64_t v7 = v15 + 272;
      uint64_t v8 = a5 + 272;
      goto LABEL_13;
    case 8:
      sub_2613C23AC(qword_26A914E40);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_2614DA440;
      sub_2613E3434(a5 + 32, v16 + 32);
      sub_2613E3434(a5 + 72, v16 + 72);
      sub_2613E3434(a5 + 112, v16 + 112);
      sub_2613E3434(a5 + 152, v16 + 152);
      sub_2613E3434(a5 + 192, v16 + 192);
      sub_2613E3434(a5 + 232, v16 + 232);
      sub_2613E3434(a5 + 272, v16 + 272);
      uint64_t v7 = v16 + 312;
      uint64_t v8 = a5 + 312;
LABEL_13:
      sub_2613E3434(v8, v7);
      sub_2614D4FD8();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      uint64_t result = sub_2614D4FD8();
      break;
  }
  return result;
}

uint64_t OS_os_log.info(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_26140DF18(a1, a2, a3, a4, MEMORY[0x263F90270]);
}

uint64_t OS_os_log.debug(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_26140DF18(a1, a2, a3, a4, MEMORY[0x263F90278]);
}

uint64_t OS_os_log.error(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_26140DF18(a1, a2, a3, a4, MEMORY[0x263F90280]);
}

uint64_t OS_os_log.fault(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_26140DF18(a1, a2, a3, a4, MEMORY[0x263F90288]);
}

uint64_t sub_26140DF18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v9 = a5();
  return sub_26140DAAC(a1, a2, a3, v9, a4);
}

uint64_t sub_26140DF80()
{
  return 5;
}

float sub_26140DF88()
{
  return 0.6;
}

uint64_t sub_26140DF98()
{
  return 15;
}

void *sub_26140DFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, float a5, float a6)
{
  v56[6] = *(void **)MEMORY[0x263EF8340];
  int64_t v10 = *(void *)(a1 + 16);
  unint64_t v54 = v10;
  if (v10)
  {
    v56[0] = (void *)MEMORY[0x263F8EE78];
    sub_26140D770(0, v10, 0);
    uint64_t v12 = v56[0];
    uint64_t v13 = (float *)(a1 + 32);
    unint64_t v14 = v56[0][2];
    do
    {
      float v15 = *v13;
      v56[0] = v12;
      unint64_t v16 = v12[3];
      uint64_t v17 = v14 + 1;
      if (v14 >= v16 >> 1)
      {
        sub_26140D770((char *)(v16 > 1), v14 + 1, 1);
        uint64_t v12 = v56[0];
      }
      void v12[2] = v17;
      *((unsigned char *)v12 + v14 + 32) = v15 >= a5;
      ++v13;
      ++v14;
      --v10;
    }
    while (v10);
  }
  else
  {
    uint64_t v12 = (void *)MEMORY[0x263F8EE78];
    uint64_t v17 = *(void *)(MEMORY[0x263F8EE78] + 16);
  }
  unint64_t v18 = (void *)sub_26140F544(0, v17, (uint64_t)v12);
  swift_bridgeObjectRelease();
  v56[0] = v18;
  sub_26140EB64(v56);
  uint64_t v19 = v56[0];
  unint64_t v20 = (void *)v56[0][2];
  if (v20)
  {
    uint64_t v21 = v56[0] + 4;
    unint64_t v22 = v56[0][4];
    sub_2613C23AC(&qword_26A914B10);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2614D81E0;
    *(void *)(inited + 32) = v22;
    if (v20 == (void *)1)
    {
      uint64_t v24 = 0;
      unint64_t v20 = (void *)MEMORY[0x263F8EE78];
      uint64_t v25 = 1;
      unint64_t v26 = (void *)MEMORY[0x263F8EE78];
      if (a2 > 1) {
        goto LABEL_59;
      }
    }
    else
    {
      uint64_t v49 = a4;
      uint64_t v50 = a2;
      uint64_t v53 = a1 + 32;
      uint64_t v27 = 1;
      int64_t v51 = (void *)MEMORY[0x263F8EE78];
      uint64_t v52 = (void *)MEMORY[0x263F8EE78];
      unint64_t v18 = v19;
LABEL_14:
      uint64_t v24 = 0;
      if (v27 <= (uint64_t)v20) {
        uint64_t v28 = v20;
      }
      else {
        uint64_t v28 = (void *)v27;
      }
      unint64_t v29 = v27;
      unint64_t v26 = (void *)inited;
      do
      {
        if (v28 == (void *)v29)
        {
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
          goto LABEL_66;
        }
        if (v29 >= v19[2]) {
          goto LABEL_62;
        }
        uint64_t v30 = v22 + a3;
        if (__OFADD__(v22, a3)) {
          goto LABEL_63;
        }
        unint64_t v22 = v21[v29];
        if (v30 < (uint64_t)v22)
        {
          uint64_t v34 = v26[2];
          if (v34 < v50 || v24 < v49) {
            goto LABEL_45;
          }
          if (!v34)
          {
            __break(1u);
LABEL_71:
            __break(1u);
          }
          uint64_t v35 = v26[4];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v52 = sub_2613E1088(0, v52[2] + 1, 1, v52);
          }
          unint64_t v37 = v52[2];
          unint64_t v36 = v52[3];
          if (v37 >= v36 >> 1) {
            uint64_t v52 = sub_2613E1088((void *)(v36 > 1), v37 + 1, 1, v52);
          }
          v52[2] = v37 + 1;
          v52[v37 + 4] = v35;
          uint64_t v38 = v26[2];
          if (!v38) {
            goto LABEL_71;
          }
          uint64_t v39 = v26[v38 + 3];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int64_t v51 = sub_2613E1088(0, v51[2] + 1, 1, v51);
          }
          unint64_t v41 = v51[2];
          unint64_t v40 = v51[3];
          if (v41 >= v40 >> 1) {
            int64_t v51 = sub_2613E1088((void *)(v40 > 1), v41 + 1, 1, v51);
          }
          v51[2] = v41 + 1;
          v51[v41 + 4] = v39;
          uint64_t v19 = v18;
LABEL_45:
          uint64_t v27 = v29 + 1;
          uint64_t v42 = swift_allocObject();
          *(_OWORD *)(v42 + 16) = xmmword_2614D81E0;
          *(void *)(v42 + 32) = v22;
          swift_bridgeObjectRelease();
          uint64_t inited = v42;
          if ((void *)((char *)v20 - 1) == (void *)v29)
          {
            uint64_t v24 = 0;
            uint64_t v25 = *(void *)(v42 + 16);
            goto LABEL_48;
          }
          goto LABEL_14;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v26 = sub_2613E1088(0, v26[2] + 1, 1, v26);
        }
        unint64_t v32 = v26[2];
        unint64_t v31 = v26[3];
        uint64_t v25 = v32 + 1;
        if (v32 >= v31 >> 1) {
          unint64_t v26 = sub_2613E1088((void *)(v31 > 1), v32 + 1, 1, v26);
        }
        v26[2] = v25;
        v26[v32 + 4] = v22;
        if (v22 >= v54) {
          goto LABEL_64;
        }
        if (*(float *)(v53 + 4 * v22) >= a6 && __OFADD__(v24++, 1)) {
          goto LABEL_65;
        }
        uint64_t v19 = v18;
        ++v29;
      }
      while (v20 != (void *)v29);
      uint64_t inited = (uint64_t)v26;
LABEL_48:
      a4 = v49;
      unint64_t v20 = v51;
      unint64_t v26 = v52;
      if (v25 < v50) {
        goto LABEL_59;
      }
    }
    if (v24 < a4)
    {
LABEL_59:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v26;
    }
    if (v25)
    {
      uint64_t v24 = inited;
      uint64_t v21 = (void *)(inited + 32);
      unint64_t v18 = *(void **)(inited + 32);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_52;
      }
    }
    else
    {
LABEL_66:
      __break(1u);
    }
    unint64_t v26 = sub_2613E1088(0, v26[2] + 1, 1, v26);
LABEL_52:
    unint64_t v44 = v26[2];
    unint64_t v43 = v26[3];
    if (v44 >= v43 >> 1) {
      unint64_t v26 = sub_2613E1088((void *)(v43 > 1), v44 + 1, 1, v26);
    }
    v26[2] = v44 + 1;
    v26[v44 + 4] = v18;
    uint64_t v45 = *(void *)(v24 + 16);
    if (v45)
    {
      uint64_t v21 = (void *)v21[v45 - 1];
      if (swift_isUniquelyReferenced_nonNull_native())
      {
LABEL_56:
        unint64_t v47 = v20[2];
        unint64_t v46 = v20[3];
        if (v47 >= v46 >> 1) {
          unint64_t v20 = sub_2613E1088((void *)(v46 > 1), v47 + 1, 1, v20);
        }
        v20[2] = v47 + 1;
        v20[v47 + 4] = v21;
        goto LABEL_59;
      }
    }
    else
    {
      __break(1u);
    }
    unint64_t v20 = sub_2613E1088(0, v20[2] + 1, 1, v20);
    goto LABEL_56;
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x263F8EE78];
}

void sub_26140E548(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  float v3 = (float)v2 / (float)a2;
  if (v3 != 0.0)
  {
    sub_2613DAB88(0.0, (float)v2, v3);
    uint64_t v6 = *(void *)(v5 + 16);
    if (!v6)
    {
LABEL_14:
      swift_release();
      return;
    }
    uint64_t v7 = (float *)(v5 + 32);
    uint64_t v8 = a1 + 32;
    uint64_t v9 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      float v10 = *v7;
      if ((~*(_DWORD *)v7 & 0x7F800000) == 0) {
        break;
      }
      if (v10 <= -9.2234e18) {
        goto LABEL_16;
      }
      if (v10 >= 9.2234e18) {
        goto LABEL_17;
      }
      uint64_t v11 = (uint64_t)v10;
      if ((uint64_t)v10 < 0) {
        goto LABEL_18;
      }
      if (v2 <= v11) {
        goto LABEL_19;
      }
      uint64_t v12 = *(void *)(v8 + 8 * v11);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_26140C714(0, v9[2] + 1, 1, v9);
      }
      unint64_t v14 = v9[2];
      unint64_t v13 = v9[3];
      if (v14 >= v13 >> 1) {
        uint64_t v9 = sub_26140C714((void *)(v13 > 1), v14 + 1, 1, v9);
      }
      v9[2] = v14 + 1;
      v9[v14 + 4] = v12;
      ++v7;
      if (!--v6) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_26140E6C8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)result;
  unint64_t v5 = *(void *)(result + 16);
  unint64_t v6 = v5 - 1;
  if (v5 == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (uint64_t)v4;
  }
  if (v5)
  {
    if (v5 - 2 < *(void *)(a2 + 16))
    {
      uint64_t result = (uint64_t)sub_2613E1088(0, 1, 1, MEMORY[0x263F8EE78]);
      uint64_t v7 = (void *)result;
      uint64_t v8 = (uint64_t *)(a2 + 32);
      uint64_t v9 = v4 + 5;
      do
      {
        uint64_t v11 = *v9++;
        uint64_t v10 = v11;
        uint64_t v12 = *v8++;
        uint64_t v13 = v10 - v12;
        if (__OFSUB__(v10, v12))
        {
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          goto LABEL_43;
        }
        unint64_t v15 = v7[2];
        unint64_t v14 = v7[3];
        unint64_t v16 = v15 + 1;
        if (v15 >= v14 >> 1)
        {
          uint64_t result = (uint64_t)sub_2613E1088((void *)(v14 > 1), v15 + 1, 1, v7);
          uint64_t v7 = (void *)result;
        }
        v7[2] = v16;
        v7[v15 + 4] = v13;
        --v6;
      }
      while (v6);
      uint64_t v36 = a2;
      unint64_t v37 = v5;
      unint64_t v17 = 0;
      unint64_t v18 = 0;
      uint64_t v34 = a2 + 32;
      uint64_t v35 = v4 + 4;
      uint64_t v19 = (void *)MEMORY[0x263F8EE78];
      uint64_t v4 = (void *)MEMORY[0x263F8EE78];
      do
      {
        unint64_t v20 = v18 + 1;
        if (v7[v18 + 4] > a3)
        {
          if (v17 >= v37) {
            goto LABEL_39;
          }
          uint64_t v21 = v35[v17];
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_2613E1088(0, v4[2] + 1, 1, v4);
            uint64_t v4 = (void *)result;
          }
          unint64_t v23 = v4[2];
          unint64_t v22 = v4[3];
          if (v23 >= v22 >> 1)
          {
            uint64_t result = (uint64_t)sub_2613E1088((void *)(v22 > 1), v23 + 1, 1, v4);
            uint64_t v4 = (void *)result;
          }
          v4[2] = v23 + 1;
          v4[v23 + 4] = v21;
          if (v18 >= *(void *)(v36 + 16)) {
            goto LABEL_40;
          }
          uint64_t v24 = *(void *)(v34 + 8 * v18);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_2613E1088(0, v19[2] + 1, 1, v19);
            uint64_t v19 = (void *)result;
          }
          unint64_t v26 = v19[2];
          unint64_t v25 = v19[3];
          if (v26 >= v25 >> 1)
          {
            uint64_t result = (uint64_t)sub_2613E1088((void *)(v25 > 1), v26 + 1, 1, v19);
            uint64_t v19 = (void *)result;
          }
          void v19[2] = v26 + 1;
          v19[v26 + 4] = v24;
          unint64_t v17 = v18 + 1;
        }
        if (v15 == v18)
        {
          if (v17 >= v37) {
            goto LABEL_41;
          }
          uint64_t v27 = v35[v17];
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_2613E1088(0, v4[2] + 1, 1, v4);
            uint64_t v4 = (void *)result;
          }
          unint64_t v29 = v4[2];
          unint64_t v28 = v4[3];
          if (v29 >= v28 >> 1)
          {
            uint64_t result = (uint64_t)sub_2613E1088((void *)(v28 > 1), v29 + 1, 1, v4);
            uint64_t v4 = (void *)result;
          }
          v4[2] = v29 + 1;
          v4[v29 + 4] = v27;
          uint64_t v30 = *(void *)(v36 + 16);
          if (!v30) {
            goto LABEL_42;
          }
          uint64_t v31 = *(void *)(v34 + 8 * v30 - 8);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_2613E1088(0, v19[2] + 1, 1, v19);
            uint64_t v19 = (void *)result;
          }
          unint64_t v33 = v19[2];
          unint64_t v32 = v19[3];
          if (v33 >= v32 >> 1)
          {
            uint64_t result = (uint64_t)sub_2613E1088((void *)(v32 > 1), v33 + 1, 1, v19);
            uint64_t v19 = (void *)result;
          }
          void v19[2] = v33 + 1;
          v19[v33 + 4] = v31;
        }
        unint64_t v18 = v20;
      }
      while (v16 != v20);
      swift_bridgeObjectRelease();
      return (uint64_t)v4;
    }
  }
  else
  {
LABEL_43:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_26140EA7C(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    if (v2 <= *(void *)(a2 + 16))
    {
      uint64_t v3 = 0;
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      unint64_t v6 = (uint64_t *)(result + 32);
      uint64_t v7 = (uint64_t *)(a2 + 32);
      while (1)
      {
        uint64_t v9 = *v6++;
        uint64_t v8 = v9;
        uint64_t v11 = *v7++;
        uint64_t v10 = v11;
        uint64_t v12 = v11 - v8;
        if (__OFSUB__(v11, v8)) {
          break;
        }
        BOOL v13 = v3 < v12;
        if (v3 <= v12) {
          uint64_t v3 = v12;
        }
        if (v13)
        {
          uint64_t v4 = v10;
          uint64_t v5 = v8;
        }
        if (!--v2) {
          goto LABEL_12;
        }
      }
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
LABEL_12:
    sub_2613C23AC(&qword_26A914B10);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_2614D81E0;
    *(void *)(v14 + 32) = v5;
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_2614D81E0;
    *(void *)(v15 + 32) = v4;
    return v14;
  }
  return result;
}

uint64_t sub_26140EB64(void **a1)
{
  unint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v2 = sub_26140F530(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = v2 + 4;
  v5[1] = v3;
  uint64_t result = sub_26140EBD4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_26140EBD4(void *a1)
{
  unint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_2614D5F78();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v76 = 0;
      uint64_t v77 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v79 = *(void *)(v77 + 8 * i);
        uint64_t v80 = v76;
        do
        {
          uint64_t v81 = *(void *)(v77 + v80);
          if (v79 >= v81) {
            break;
          }
          if (!v77) {
            goto LABEL_142;
          }
          *(void *)(v77 + v80 + 8) = v81;
          *(void *)(v77 + v80) = v79;
          v80 -= 8;
        }
        while (v80 != -8);
        v76 += 8;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_137;
    }
    uint64_t v93 = result;
    uint64_t v94 = v3;
    if (v3 > 1)
    {
      uint64_t v6 = v5 >> 1;
      uint64_t result = sub_2614D56C8();
      *(void *)(result + 16) = v6;
      uint64_t v3 = v94;
      uint64_t v92 = result;
      char v96 = (char *)(result + 32);
LABEL_13:
      uint64_t v8 = 0;
      uint64_t v9 = *v2;
      unsigned int v90 = v2;
      uint64_t v91 = *v2 - 8;
      uint64_t v10 = MEMORY[0x263F8EE78];
      uint64_t v95 = *v2;
      while (1)
      {
        uint64_t v12 = v8++;
        if (v8 < v3)
        {
          uint64_t v13 = *(void *)(v9 + 8 * v8);
          uint64_t v14 = *(void *)(v9 + 8 * v12);
          uint64_t v8 = v12 + 2;
          if (v12 + 2 < v3)
          {
            uint64_t v15 = v13;
            while (1)
            {
              uint64_t v16 = *(void *)(v9 + 8 * v8);
              if (v13 < v14 == v16 >= v15) {
                break;
              }
              ++v8;
              uint64_t v15 = v16;
              if (v3 == v8)
              {
                uint64_t v8 = v3;
                break;
              }
            }
          }
          if (v13 < v14)
          {
            if (v8 < v12) {
              goto LABEL_139;
            }
            if (v12 < v8)
            {
              uint64_t v17 = v8 - 1;
              uint64_t v18 = v12;
              do
              {
                if (v18 != v17)
                {
                  if (!v9) {
                    goto LABEL_145;
                  }
                  uint64_t v19 = *(void *)(v9 + 8 * v18);
                  *(void *)(v9 + 8 * v18) = *(void *)(v9 + 8 * v17);
                  *(void *)(v9 + 8 * v17) = v19;
                }
                BOOL v58 = ++v18 < v17--;
              }
              while (v58);
            }
          }
        }
        if (v8 < v3)
        {
          if (__OFSUB__(v8, v12)) {
            goto LABEL_136;
          }
          if (v8 - v12 < v93)
          {
            uint64_t v20 = v12 + v93;
            if (__OFADD__(v12, v93)) {
              goto LABEL_140;
            }
            if (v20 >= v3) {
              uint64_t v20 = v3;
            }
            if (v20 < v12)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v8 != v20)
            {
              uint64_t v21 = (uint64_t *)(v91 + 8 * v8);
              do
              {
                uint64_t v22 = *(void *)(v9 + 8 * v8);
                uint64_t v23 = v12;
                uint64_t v24 = v21;
                do
                {
                  uint64_t v25 = *v24;
                  if (v22 >= *v24) {
                    break;
                  }
                  if (!v9) {
                    goto LABEL_143;
                  }
                  uint64_t *v24 = v22;
                  v24[1] = v25;
                  --v24;
                  ++v23;
                }
                while (v8 != v23);
                ++v8;
                ++v21;
              }
              while (v8 != v20);
              uint64_t v8 = v20;
            }
          }
        }
        if (v8 < v12) {
          goto LABEL_131;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_26140F420(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
          uint64_t v10 = result;
        }
        unint64_t v27 = *(void *)(v10 + 16);
        unint64_t v26 = *(void *)(v10 + 24);
        unint64_t v11 = v27 + 1;
        uint64_t v9 = v95;
        if (v27 >= v26 >> 1)
        {
          uint64_t result = (uint64_t)sub_26140F420((char *)(v26 > 1), v27 + 1, 1, (char *)v10);
          uint64_t v9 = v95;
          uint64_t v10 = result;
        }
        *(void *)(v10 + 16) = v11;
        uint64_t v28 = v10 + 32;
        unint64_t v29 = (uint64_t *)(v10 + 32 + 16 * v27);
        uint64_t *v29 = v12;
        v29[1] = v8;
        if (v27)
        {
          while (1)
          {
            unint64_t v30 = v11 - 1;
            if (v11 >= 4)
            {
              unint64_t v35 = v28 + 16 * v11;
              uint64_t v36 = *(void *)(v35 - 64);
              uint64_t v37 = *(void *)(v35 - 56);
              BOOL v41 = __OFSUB__(v37, v36);
              uint64_t v38 = v37 - v36;
              if (v41) {
                goto LABEL_120;
              }
              uint64_t v40 = *(void *)(v35 - 48);
              uint64_t v39 = *(void *)(v35 - 40);
              BOOL v41 = __OFSUB__(v39, v40);
              uint64_t v33 = v39 - v40;
              char v34 = v41;
              if (v41) {
                goto LABEL_121;
              }
              unint64_t v42 = v11 - 2;
              unint64_t v43 = (uint64_t *)(v28 + 16 * (v11 - 2));
              uint64_t v45 = *v43;
              uint64_t v44 = v43[1];
              BOOL v41 = __OFSUB__(v44, v45);
              uint64_t v46 = v44 - v45;
              if (v41) {
                goto LABEL_122;
              }
              BOOL v41 = __OFADD__(v33, v46);
              uint64_t v47 = v33 + v46;
              if (v41) {
                goto LABEL_124;
              }
              if (v47 >= v38)
              {
                uint64_t v65 = (uint64_t *)(v28 + 16 * v30);
                uint64_t v67 = *v65;
                uint64_t v66 = v65[1];
                BOOL v41 = __OFSUB__(v66, v67);
                uint64_t v68 = v66 - v67;
                if (v41) {
                  goto LABEL_130;
                }
                BOOL v58 = v33 < v68;
                goto LABEL_84;
              }
            }
            else
            {
              if (v11 != 3)
              {
                uint64_t v59 = *(void *)(v10 + 32);
                uint64_t v60 = *(void *)(v10 + 40);
                BOOL v41 = __OFSUB__(v60, v59);
                uint64_t v52 = v60 - v59;
                char v53 = v41;
                goto LABEL_78;
              }
              uint64_t v32 = *(void *)(v10 + 32);
              uint64_t v31 = *(void *)(v10 + 40);
              BOOL v41 = __OFSUB__(v31, v32);
              uint64_t v33 = v31 - v32;
              char v34 = v41;
            }
            if (v34) {
              goto LABEL_123;
            }
            unint64_t v42 = v11 - 2;
            int64_t v48 = (uint64_t *)(v28 + 16 * (v11 - 2));
            uint64_t v50 = *v48;
            uint64_t v49 = v48[1];
            BOOL v51 = __OFSUB__(v49, v50);
            uint64_t v52 = v49 - v50;
            char v53 = v51;
            if (v51) {
              goto LABEL_125;
            }
            unint64_t v54 = (uint64_t *)(v28 + 16 * v30);
            uint64_t v56 = *v54;
            uint64_t v55 = v54[1];
            BOOL v41 = __OFSUB__(v55, v56);
            uint64_t v57 = v55 - v56;
            if (v41) {
              goto LABEL_127;
            }
            if (__OFADD__(v52, v57)) {
              goto LABEL_129;
            }
            if (v52 + v57 >= v33)
            {
              BOOL v58 = v33 < v57;
LABEL_84:
              if (v58) {
                unint64_t v30 = v42;
              }
              goto LABEL_86;
            }
LABEL_78:
            if (v53) {
              goto LABEL_126;
            }
            char v61 = (uint64_t *)(v28 + 16 * v30);
            uint64_t v63 = *v61;
            uint64_t v62 = v61[1];
            BOOL v41 = __OFSUB__(v62, v63);
            uint64_t v64 = v62 - v63;
            if (v41) {
              goto LABEL_128;
            }
            if (v64 < v52) {
              goto LABEL_15;
            }
LABEL_86:
            unint64_t v69 = v30 - 1;
            if (v30 - 1 >= v11)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v9) {
              goto LABEL_144;
            }
            uint64_t v70 = (uint64_t *)(v28 + 16 * v69);
            uint64_t v71 = *v70;
            uint64_t v72 = v28;
            uint64_t v73 = (void *)(v28 + 16 * v30);
            uint64_t v74 = v73[1];
            uint64_t result = sub_26140F21C((char *)(v9 + 8 * *v70), (char *)(v9 + 8 * *v73), v9 + 8 * v74, v96);
            if (v1) {
              goto LABEL_114;
            }
            if (v74 < v71) {
              goto LABEL_117;
            }
            if (v30 > *(void *)(v10 + 16)) {
              goto LABEL_118;
            }
            uint64_t *v70 = v71;
            *(void *)(v72 + 16 * v69 + 8) = v74;
            unint64_t v75 = *(void *)(v10 + 16);
            if (v30 >= v75) {
              goto LABEL_119;
            }
            unint64_t v11 = v75 - 1;
            uint64_t result = (uint64_t)memmove(v73, v73 + 2, 16 * (v75 - 1 - v30));
            uint64_t v28 = v72;
            *(void *)(v10 + 16) = v75 - 1;
            uint64_t v9 = v95;
            if (v75 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v11 = 1;
LABEL_15:
        uint64_t v3 = v94;
        if (v8 >= v94)
        {
          uint64_t v7 = v92;
          unint64_t v2 = v90;
          goto LABEL_103;
        }
      }
    }
    uint64_t v7 = MEMORY[0x263F8EE78];
    char v96 = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 == 1)
    {
      uint64_t v92 = MEMORY[0x263F8EE78];
      goto LABEL_13;
    }
    unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
    uint64_t v10 = MEMORY[0x263F8EE78];
LABEL_103:
    uint64_t v92 = v7;
    if (v11 >= 2)
    {
      uint64_t v82 = *v2;
      do
      {
        unint64_t v83 = v11 - 2;
        if (v11 < 2) {
          goto LABEL_132;
        }
        if (!v82) {
          goto LABEL_146;
        }
        uint64_t v84 = v10;
        uint64_t v85 = v10 + 32;
        uint64_t v86 = *(void *)(v10 + 32 + 16 * v83);
        uint64_t v87 = *(void *)(v10 + 32 + 16 * (v11 - 1) + 8);
        uint64_t result = sub_26140F21C((char *)(v82 + 8 * v86), (char *)(v82 + 8 * *(void *)(v85 + 16 * (v11 - 1))), v82 + 8 * v87, v96);
        if (v1) {
          break;
        }
        if (v87 < v86) {
          goto LABEL_133;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_26140F51C(v84);
          uint64_t v84 = result;
        }
        if (v83 >= *(void *)(v84 + 16)) {
          goto LABEL_134;
        }
        uint64_t v88 = (void *)(v84 + 32 + 16 * v83);
        void *v88 = v86;
        v88[1] = v87;
        unint64_t v89 = *(void *)(v84 + 16);
        if (v11 > v89) {
          goto LABEL_135;
        }
        uint64_t result = (uint64_t)memmove((void *)(v84 + 32 + 16 * (v11 - 1)), (const void *)(v84 + 32 + 16 * v11), 16 * (v89 - v11));
        uint64_t v10 = v84;
        *(void *)(v84 + 16) = v89 - 1;
        unint64_t v11 = v89 - 1;
      }
      while (v89 > 2);
    }
LABEL_114:
    swift_bridgeObjectRelease();
    *(void *)(v92 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_26140F21C(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = __src - __dst + 7;
  if (__src - __dst >= 0) {
    int64_t v9 = __src - __dst;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 3;
  if (v10 >= v12 >> 3)
  {
    if (a4 != __src || &__src[8 * v13] <= a4) {
      memmove(a4, __src, 8 * v13);
    }
    uint64_t v14 = &v4[8 * v13];
    if (v7 >= v6 || v11 < 8) {
      goto LABEL_39;
    }
    uint64_t v17 = (char *)(a3 - 8);
    uint64_t v18 = v6;
    while (1)
    {
      uint64_t v19 = v17 + 8;
      uint64_t v21 = *((void *)v18 - 1);
      v18 -= 8;
      uint64_t v20 = v21;
      if (*((void *)v14 - 1) < v21) {
        break;
      }
      uint64_t v20 = *((void *)v14 - 1);
      uint64_t v18 = v6;
      if (v19 != v14)
      {
        v14 -= 8;
LABEL_35:
        *(void *)uint64_t v17 = v20;
        goto LABEL_36;
      }
      BOOL v22 = v17 >= v14;
      v14 -= 8;
      if (v22) {
        goto LABEL_35;
      }
LABEL_36:
      if (v18 > v7)
      {
        v17 -= 8;
        uint64_t v6 = v18;
        if (v14 > v4) {
          continue;
        }
      }
      uint64_t v6 = v18;
      goto LABEL_39;
    }
    if (v19 == v6 && v17 < v6) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (a4 != __dst || &__dst[8 * v10] <= a4) {
    memmove(a4, __dst, 8 * v10);
  }
  uint64_t v14 = &v4[8 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      uint64_t v15 = *(void *)v6;
      if (*(void *)v6 >= *(void *)v4) {
        break;
      }
      BOOL v16 = v7 == v6;
      v6 += 8;
      if (!v16) {
        goto LABEL_16;
      }
LABEL_17:
      v7 += 8;
      if (v4 >= v14 || (unint64_t)v6 >= a3) {
        goto LABEL_19;
      }
    }
    uint64_t v15 = *(void *)v4;
    BOOL v16 = v7 == v4;
    v4 += 8;
    if (v16) {
      goto LABEL_17;
    }
LABEL_16:
    *(void *)uint64_t v7 = v15;
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v6 = v7;
LABEL_39:
  int64_t v23 = v14 - v4 + (v14 - v4 < 0 ? 7uLL : 0);
  if (v6 != v4 || v6 >= &v4[v23 & 0xFFFFFFFFFFFFFFF8]) {
    memmove(v6, v4, 8 * (v23 >> 3));
  }
  return 1;
}

char *sub_26140F420(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2613C23AC(&qword_26A915040);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_26140F51C(uint64_t a1)
{
  return sub_26140F420(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_26140F530(void *a1)
{
  return sub_2613E1088(0, a1[2], 0, a1);
}

uint64_t sub_26140F544(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = result;
  uint64_t v6 = a3 + 32;
  uint64_t v7 = MEMORY[0x263F8EE78];
  uint64_t v8 = result;
  unint64_t v9 = result;
LABEL_2:
  if (v8 <= a2) {
    uint64_t v10 = a2;
  }
  else {
    uint64_t v10 = v8;
  }
  while (1)
  {
    if (a2 == v9) {
      return v7;
    }
    if (a2 < v5) {
      break;
    }
    if (v8 < v5) {
      goto LABEL_19;
    }
    if (v10 == v9) {
      goto LABEL_20;
    }
    if (v8 < 0) {
      goto LABEL_21;
    }
    if (v9 >= *(void *)(a3 + 16)) {
      goto LABEL_22;
    }
    int v11 = *(unsigned __int8 *)(v6 + v9++);
    if (v11 == 1)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = sub_2613D915C(0, *(void *)(v7 + 16) + 1, 1);
      }
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v12 = *(void *)(v7 + 24);
      if (v13 >= v12 >> 1) {
        uint64_t result = sub_2613D915C(v12 > 1, v13 + 1, 1);
      }
      *(void *)(v7 + 16) = v13 + 1;
      *(void *)(v7 + 8 * v13 + 32) = v9 - 1;
      uint64_t v8 = v9;
      goto LABEL_2;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t VASpeechAPISpotter.__allocating_init(delegate:asrDelegate:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return VASpeechAPISpotter.init(delegate:asrDelegate:configuration:)(a1, a2, a3);
}

uint64_t VASpeechAPISpotter.init(delegate:asrDelegate:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  *(void *)&v3[OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_transcriber] = 0;
  *(void *)&v3[OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_speechAnalyzer] = 0;
  unint64_t v9 = &v3[OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_inputStream];
  uint64_t v10 = sub_2613C23AC(&qword_26A915048);
  uint64_t v34 = (uint64_t)v9;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  int v11 = &v3[OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_inputStreamBuilder];
  uint64_t v12 = sub_2613C23AC(&qword_26A915050);
  uint64_t v31 = (uint64_t)v11;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v28 = OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_analysisContext;
  *(void *)&v3[OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_analysisContext] = 0;
  *(void *)&v3[OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_recognizerTask] = 0;
  *(void *)&v3[OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_vadTask] = 0;
  uint64_t v35 = OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_speechDetector;
  *(void *)&v3[OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_speechDetector] = 0;
  uint64_t v29 = OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_timingInfo;
  *(void *)&v3[OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_timingInfo] = 0;
  uint64_t v13 = OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_asrDelegate;
  *(void *)&v3[OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_asrDelegate] = 0;
  uint64_t v14 = &v3[OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_speechDetectorOutputStream];
  uint64_t v15 = sub_2613C23AC(&qword_26A914C28);
  uint64_t v30 = (uint64_t)v14;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  BOOL v16 = &v3[OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_runtimeParameters];
  *(_OWORD *)BOOL v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((_OWORD *)v16 + 2) = 0u;
  *((_OWORD *)v16 + 3) = 0u;
  *((_OWORD *)v16 + 4) = 0u;
  *(void *)(v16 + 79) = 0;
  uint64_t v33 = OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_audioDuringSpeech;
  *(void *)&v3[OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_audioDuringSpeech] = 0;
  v3[OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_stopped] = 0;
  uint64_t v32 = OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_downloadError;
  *(void *)&v3[OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_downloadError] = 0;
  *(void *)&v3[v13] = a2;
  uint64_t v17 = v3;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)&v17[OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_speechAPISpotterConfiguration] = a3;
  uint64_t v18 = *(uint64_t (**)(uint64_t))(*(void *)a3 + 216);
  uint64_t v19 = swift_retain();
  if ((v18(v19) & 1) == 0)
  {

LABEL_6:
    type metadata accessor for VAConfiguration();
    id v26 = static VAConfiguration.buildForSpeechAPISpotter(speechAPISpotterConfig:)(a3);
    sub_2614A6C74(v37);
    uint64_t v20 = (uint64_t)sub_2614A6D00(a1, v26, (uint64_t)v37);
    swift_release();
    swift_unknownObjectRelease();
    return v20;
  }
  uint64_t v20 = type metadata accessor for VASpeechDetector();
  uint64_t v21 = sub_2613ED7A8();
  uint64_t v22 = v5;
  unint64_t v24 = v23;
  sub_2613B9FE8(v37);
  char v38 = v37[0];
  uint64_t v25 = VASpeechDetector.__allocating_init(modelFilename:featureCount:)(v21, v24, &v38);
  if (!v22)
  {
    *(void *)&v6[v35] = v25;

    swift_release();
    goto LABEL_6;
  }
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  sub_2613CC6A0(v34, &qword_26A915068);
  sub_2613CC6A0(v31, &qword_26A915070);

  swift_release();
  swift_release();
  swift_release();

  swift_unknownObjectRelease();
  sub_2613CC6A0(v30, &qword_26A914C48);
  sub_26140FB6C(*(void *)v16);

  swift_release();
  type metadata accessor for VASpeechAPISpotter();
  swift_deallocPartialClassInstance();
  return v20;
}

uint64_t sub_26140FB6C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for VASpeechAPISpotter()
{
  uint64_t result = qword_26A919450;
  if (!qword_26A919450) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t static VASpeechAPISpotter.generalASRModelNeedsDownload()()
{
  return MEMORY[0x270FA2498](sub_26140FC14, 0, 0);
}

uint64_t sub_26140FC14()
{
  uint64_t v1 = self;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_26140FD20;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_26140FE6C;
  v0[13] = &unk_265581298;
  v0[14] = v2;
  objc_msgSend(v1, sel_installedLanguagesForTaskHint_completion_, 1009, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_26140FD20()
{
  return MEMORY[0x270FA2498](sub_26140FE00, 0, 0);
}

uint64_t sub_26140FE00()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 120) + 16);
  swift_bridgeObjectRelease();
  uint64_t v2 = *(uint64_t (**)(BOOL))(v0 + 8);
  return v2(v1 == 0);
}

uint64_t sub_26140FE6C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  **(void **)(*(void *)(v1 + 64) + 40) = sub_2614D58A8();
  return MEMORY[0x270FA2400](v1);
}

uint64_t static VASpeechAPISpotter.downloadGeneralASRModel(progress:)(uint64_t a1, uint64_t a2)
{
  id v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_26A915088 + dword_26A915088);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_2613E3EDC;
  return v7(a1, a2);
}

uint64_t sub_26140FF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_26140FFE0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_2613C23AC(&qword_26A914CA8);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    uint64_t v8 = sub_2614D53A8();
    unint64_t v9 = *(uint64_t **)(*(void *)(v3 + 64) + 40);
    *unint64_t v9 = v8;
    v9[1] = v10;
    return MEMORY[0x270FA2408](v3);
  }
}

uint64_t *sub_26141009C(uint64_t a1)
{
  uint64_t v255 = sub_2614D5258();
  uint64_t v254 = *(void *)(v255 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v255);
  v234 = (char *)v215 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  v233 = (char *)v215 - v4;
  uint64_t v5 = sub_2613C23AC(&qword_26A914BD8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v236 = (uint64_t)v215 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v232 = sub_2613C23AC(&qword_26A914C28);
  uint64_t v231 = *(void *)(v232 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v232);
  v228 = (char *)v215 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v227 = v8;
  MEMORY[0x270FA5388](v7);
  v230 = (char *)v215 - v9;
  uint64_t v10 = sub_2613C23AC(&qword_26A914C48);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  v229 = (void *)((char *)v215 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  v235 = (char *)v215 - v13;
  uint64_t v14 = sub_2613C23AC(&qword_26A915090);
  MEMORY[0x270FA5388](v14 - 8);
  v238 = (char *)v215 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_2614D5138();
  MEMORY[0x270FA5388](v16 - 8);
  v237 = (char *)v215 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_2613C23AC(&qword_26A915070);
  MEMORY[0x270FA5388](v18 - 8);
  v251 = (char *)v215 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_2613C23AC(&qword_26A915068);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v256 = (uint64_t)v215 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  v250 = (char *)v215 - v23;
  uint64_t v247 = sub_2613C23AC(&qword_26A915098);
  uint64_t v246 = *(void *)(v247 - 8);
  MEMORY[0x270FA5388](v247);
  v244 = (char *)v215 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v249 = sub_2613C23AC(&qword_26A915050);
  uint64_t v248 = *(void *)(v249 - 8);
  MEMORY[0x270FA5388](v249);
  v245 = (char *)v215 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v257 = sub_2613C23AC(&qword_26A915048);
  uint64_t v252 = *(void *)(v257 - 8);
  MEMORY[0x270FA5388](v257);
  v243 = (char *)v215 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_2613C23AC(&qword_26A9150A0);
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  v242 = (char *)v215 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  v241 = (char *)v215 - v30;
  uint64_t v31 = sub_2613C23AC(&qword_26A9150A8);
  MEMORY[0x270FA5388](v31 - 8);
  v265 = (char *)v215 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_2613C23AC(&qword_26A9150B0);
  MEMORY[0x270FA5388](v33 - 8);
  unint64_t v264 = (unint64_t)v215 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_2614D4D08();
  MEMORY[0x270FA5388](v35 - 8);
  uint64_t v37 = (char *)v215 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = *(void *)a1;
  unsigned int v39 = *(_DWORD *)(a1 + 8);
  int v40 = *(unsigned __int8 *)(a1 + 12);
  int v41 = *(unsigned __int8 *)(a1 + 13);
  uint64_t v42 = *(void *)(a1 + 16);
  unint64_t v43 = *(void *)(a1 + 24);
  uint64_t v44 = *(unsigned __int8 *)(a1 + 32);
  unint64_t v45 = *(void *)(a1 + 40);
  uint64_t v46 = *(unsigned __int8 *)(a1 + 48);
  int v47 = *(unsigned __int8 *)(a1 + 49);
  float v48 = *(float *)(a1 + 52);
  uint64_t v49 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v51 = *(void *)(a1 + 64);
  uint64_t v50 = *(void *)(a1 + 72);
  unint64_t v52 = *(unsigned __int8 *)(a1 + 80);
  uint64_t v53 = *(unsigned __int8 *)(a1 + 81);
  uint64_t v54 = *(unsigned __int8 *)(a1 + 82);
  int v55 = *(unsigned __int8 *)(a1 + 83);
  int v56 = *(unsigned __int8 *)(a1 + 84);
  int v57 = *(unsigned __int8 *)(a1 + 85);
  int v58 = *(unsigned __int8 *)(a1 + 86);
  uint64_t v272 = *(void *)a1;
  unsigned int v273 = v39;
  int v59 = v40;
  char v274 = v40;
  int v60 = v41;
  char v275 = v41;
  uint64_t v240 = v42;
  uint64_t v276 = v42;
  unint64_t v277 = v43;
  unint64_t v262 = v43;
  uint64_t v263 = v44;
  char v278 = v44;
  unint64_t v261 = v45;
  unint64_t v279 = v45;
  *(void *)&long long v270 = v46;
  char v280 = v46;
  int v61 = v47;
  char v281 = v47;
  float v282 = v48;
  v259.i64[0] = v49;
  __int8 v283 = v49;
  uint64_t v239 = v51;
  uint64_t v284 = v51;
  uint64_t v285 = v50;
  uint64_t v258 = v50;
  unint64_t v268 = v52;
  char v286 = v52;
  uint64_t v267 = v53;
  char v287 = v53;
  uint64_t v266 = v54;
  char v288 = v54;
  int v62 = v55;
  char v289 = v55;
  char v290 = v56;
  LODWORD(v269) = v57;
  char v291 = v57;
  LODWORD(v260) = v58;
  char v292 = v58;
  uint64_t v63 = &v272;
  if ((VARuntimeParameters.allKeywordsAreValid.getter() & 1) == 0)
  {
    sub_2613DC2B8();
    swift_allocError();
    unint64_t v152 = 0xD00000000000006DLL;
    int v153 = "Keywords should be lower case and should not contain spaces to ensure model compatibility and API consistency";
LABEL_27:
    *uint64_t v151 = v152;
    v151[1] = (unint64_t)(v153 - 32) | 0x8000000000000000;
    swift_willThrow();
    return v63;
  }
  uint64_t v63 = v271;
  uint64_t v64 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v271) + 0x78))();
  if (!v64)
  {
    sub_2613DC2B8();
    swift_allocError();
    unint64_t v152 = 0xD000000000000011;
    int v153 = "Nil configuration";
    goto LABEL_27;
  }
  v226 = v37;
  uint64_t v65 = v271;
  *((unsigned char *)v271 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_stopped) = 0;
  int v223 = v59;
  uint64_t v66 = 0x100000000;
  if (v59) {
    uint64_t v67 = 0x100000000;
  }
  else {
    uint64_t v67 = 0;
  }
  int v222 = v60;
  if (v60) {
    uint64_t v68 = 0x10000000000;
  }
  else {
    uint64_t v68 = 0;
  }
  unint64_t v69 = (char *)v65 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_runtimeParameters;
  v220 = *(void **)((char *)v65 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_runtimeParameters);
  uint64_t v219 = *(uint64_t *)((char *)v65 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_runtimeParameters + 8);
  uint64_t v70 = v67 | v39 | v68;
  int v221 = v61;
  uint64_t v71 = 256;
  if (!v61) {
    uint64_t v71 = 0;
  }
  uint64_t v218 = *((void *)v69 + 6);
  uint64_t v217 = *((void *)v69 + 7);
  unint64_t v72 = v71 | v270 | ((unint64_t)LODWORD(v48) << 32);
  *(void *)unint64_t v69 = v38;
  *((void *)v69 + 1) = v70;
  int v225 = v62;
  int v73 = 0x1000000;
  if (!v62) {
    int v73 = 0;
  }
  int v224 = v56;
  *((void *)v69 + 6) = v72;
  if (!v56) {
    uint64_t v66 = 0;
  }
  if (v269) {
    uint64_t v74 = 0x10000000000;
  }
  else {
    uint64_t v74 = 0;
  }
  v69[86] = v260 != 0;
  uint64_t v75 = v258;
  unint64_t v76 = v268 | (v267 << 8) | (v266 << 16);
  v215[4] = *((void *)v69 + 2);
  v215[3] = *((void *)v69 + 3);
  *((_DWORD *)v69 + 20) = v76 | v73;
  *((_WORD *)v69 + 42) = (v76 | v66 | v74) >> 32;
  v215[2] = *((void *)v69 + 4);
  v215[1] = *((void *)v69 + 5);
  uint64_t v77 = v240;
  unint64_t v78 = v262;
  *((void *)v69 + 2) = v240;
  *((void *)v69 + 3) = v78;
  char v79 = v263;
  unint64_t v80 = v261;
  *((void *)v69 + 4) = v263;
  *((void *)v69 + 5) = v80;
  __int8 v81 = v259.i8[0];
  uint64_t v82 = v239;
  *((void *)v69 + 7) = v259.i64[0];
  *((void *)v69 + 8) = v82;
  v215[0] = v69;
  *((void *)v69 + 9) = v75;
  id v216 = v64;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_26140FB6C((uint64_t)v220);
  type metadata accessor for VARequestContext(0);
  uint64_t v272 = v38;
  unsigned int v273 = v39;
  char v274 = v223;
  char v275 = v222;
  uint64_t v276 = v77;
  unint64_t v277 = v78;
  char v278 = v79;
  unint64_t v279 = v80;
  char v280 = v270;
  LOBYTE(v80) = v221;
  char v281 = v221;
  float v282 = v48;
  __int8 v283 = v81;
  uint64_t v83 = v258;
  uint64_t v284 = v82;
  uint64_t v285 = v258;
  char v286 = v268;
  char v287 = v267;
  char v288 = v266;
  char v289 = v225;
  char v290 = v224;
  char v291 = (char)v269;
  char v84 = v260;
  char v292 = v260;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v220 = v216;
  uint64_t v85 = sub_2613FDF20(v220, &v272);
  uint64_t v86 = (void *)MEMORY[0x263F8EED0];
  uint64_t v87 = v271;
  (*(void (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v271) + 0x120))(v85);
  type metadata accessor for VAStrategyLayerPassthrough();
  uint64_t v272 = v38;
  unsigned int v273 = v39;
  char v274 = v223;
  char v275 = v222;
  uint64_t v276 = v77;
  unint64_t v277 = v262;
  char v278 = v263;
  unint64_t v279 = v261;
  char v280 = v270;
  char v281 = v80;
  float v282 = v48;
  __int8 v283 = v259.i8[0];
  uint64_t v284 = v82;
  uint64_t v285 = v83;
  char v286 = v268;
  char v287 = v267;
  char v288 = v266;
  char v289 = v225;
  char v290 = v224;
  char v291 = (char)v269;
  char v292 = v84;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v88 = v87;
  uint64_t v89 = sub_2614B0A18((uint64_t)v88, (uint64_t)&protocol witness table for VAKeywordSpotterBase, &v272);
  (*(void (**)(uint64_t))((*v86 & *v88) + 0x150))(v89);
  id v90 = objc_allocWithZone(MEMORY[0x263EFF960]);
  uint64_t v91 = (void *)sub_2614D5378();
  id v92 = objc_msgSend(v90, sel_initWithLocaleIdentifier_, v91);

  sub_2614D4CF8();
  v271 = (uint64_t *)OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_speechAPISpotterConfiguration;
  uint64_t v93 = *(void (**)(uint64_t))(**(void **)((char *)v88
                                                     + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_speechAPISpotterConfiguration)
                                       + 136);
  uint64_t v94 = swift_retain();
  unint64_t v95 = v264;
  v93(v94);
  swift_release();
  (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v254 + 56))(v95, 0, 1, v255);
  uint64_t v96 = sub_2614D4C78();
  uint64_t v97 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56);
  v97(v241, 1, 1, v96);
  v97(v242, 1, 1, v96);
  uint64_t v98 = v265;
  sub_2614D5148();
  uint64_t v99 = sub_2614D5158();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v98, 0, 1, v99);
  sub_2613C23AC(&qword_26A9150B8);
  uint64_t v100 = sub_2614D5168();
  uint64_t v101 = *(void *)(v100 - 8);
  uint64_t v102 = *(void *)(v101 + 72);
  unint64_t v103 = (*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
  uint64_t v104 = swift_allocObject();
  long long v270 = xmmword_2614D8210;
  *(_OWORD *)(v104 + 16) = xmmword_2614D8210;
  unint64_t v105 = v104 + v103;
  int v106 = *(void (**)(unint64_t, void, uint64_t))(v101 + 104);
  v106(v105, *MEMORY[0x263F17AB8], v100);
  v106(v105 + v102, *MEMORY[0x263F17AC0], v100);
  v106(v105 + 2 * v102, *MEMORY[0x263F17AB0], v100);
  sub_26141687C(v104);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_2613C23AC(&qword_26A9150C0);
  uint64_t v107 = sub_2614D51A8();
  uint64_t v108 = *(void *)(v107 - 8);
  uint64_t v109 = *(void *)(v108 + 72);
  unint64_t v110 = (*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
  uint64_t v111 = swift_allocObject();
  *(_OWORD *)(v111 + 16) = v270;
  unint64_t v112 = v111 + v110;
  uint64_t v113 = *(void (**)(unint64_t, void, uint64_t))(v108 + 104);
  v113(v112, *MEMORY[0x263F17AE0], v107);
  v113(v112 + v109, *MEMORY[0x263F17AE8], v107);
  v113(v112 + 2 * v109, *MEMORY[0x263F17AF0], v107);
  sub_261416B94(v111);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_2614D51D8();
  swift_allocObject();
  uint64_t v114 = sub_2614D51C8();
  uint64_t v115 = OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_transcriber;
  *(uint64_t *)((char *)v88 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_transcriber) = v114;
  swift_release();
  sub_2614D51F8();
  uint64_t v116 = v246;
  uint64_t v117 = v244;
  uint64_t v118 = v247;
  (*(void (**)(char *, void, uint64_t))(v246 + 104))(v244, *MEMORY[0x263F8F580], v247);
  uint64_t v119 = v243;
  uint64_t v120 = v245;
  sub_2614D5798();
  (*(void (**)(char *, uint64_t))(v116 + 8))(v117, v118);
  uint64_t v121 = v252;
  uint64_t v122 = (uint64_t)v250;
  uint64_t v123 = v257;
  (*(void (**)(char *, char *, uint64_t))(v252 + 32))(v250, v119, v257);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v121 + 56))(v122, 0, 1, v123);
  uint64_t v124 = v248;
  uint64_t v125 = (uint64_t)v251;
  uint64_t v126 = v249;
  (*(void (**)(char *, char *, uint64_t))(v248 + 32))(v251, v120, v249);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v124 + 56))(v125, 0, 1, v126);
  uint64_t v127 = (uint64_t)v88 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_inputStream;
  swift_beginAccess();
  sub_2613EFB3C(v122, v127, &qword_26A915068);
  swift_endAccess();
  uint64_t v128 = (uint64_t)v88 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_inputStreamBuilder;
  swift_beginAccess();
  sub_2613EFB3C(v125, v128, &qword_26A915070);
  swift_endAccess();
  uint64_t result = (uint64_t *)objc_msgSend(objc_allocWithZone(MEMORY[0x263EF9388]), sel_initWithCommonFormat_sampleRate_channels_interleaved_, 3, 1, 0, 16000.0);
  if (!result)
  {
    __break(1u);
    goto LABEL_43;
  }
  id v130 = result;
  id v131 = objc_msgSend(objc_allocWithZone((Class)sub_2614D5228()), sel_init);
  uint64_t v132 = OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_analysisContext;
  unint64_t v133 = *(void **)((char *)v88 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_analysisContext);
  *(uint64_t *)((char *)v88 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_analysisContext) = (uint64_t)v131;

  sub_2614D5128();
  uint64_t v134 = v127;
  uint64_t v135 = v256;
  sub_2613C2540(v134, v256, &qword_26A915068);
  uint64_t result = (uint64_t *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v121 + 48))(v135, 1, v123);
  uint64_t v136 = v238;
  if (result == 1)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  sub_2613C23AC(&qword_26A9150C8);
  uint64_t result = (uint64_t *)swift_allocObject();
  *((_OWORD *)result + 1) = xmmword_2614D81E0;
  uint64_t v137 = *(uint64_t *)((char *)v88 + v115);
  if (!v137)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v138 = result;
  uint64_t v139 = sub_261418144(&qword_26A9150D0, MEMORY[0x263F17B20]);
  v138[4] = v137;
  v138[5] = v139;
  uint64_t v140 = sub_2614D5238();
  uint64_t result = (uint64_t *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v140 - 8) + 56))(v136, 1, 1, v140);
  uint64_t v141 = *(void **)((char *)v88 + v132);
  if (!v141)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v142 = sub_2614D5118();
  sub_261416EB0();
  swift_retain();
  id v143 = v141;
  *(void *)&long long v270 = v130;
  uint64_t v63 = (uint64_t *)v142;
  *(uint64_t *)((char *)v88 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_speechAnalyzer) = sub_2614D5108();
  swift_release();
  uint64_t v144 = *(uint64_t **)((char *)v88 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_speechDetector);
  if (v144)
  {
    uint64_t v145 = v271;
    int v146 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v271 + (void)v88) + 160);
    swift_retain();
    uint64_t v147 = swift_retain();
    char v148 = v146(v147);
    swift_release();
    uint64_t v149 = (uint64_t)v235;
    uint64_t v63 = v144;
    uint64_t v150 = v253;
    (*(void (**)(void, float))(*v144 + 576))(v148 & 1, v48);
    if (v150)
    {
      swift_release();
LABEL_37:

      return v63;
    }
    uint64_t v154 = v231;
    uint64_t v155 = v232;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v231 + 56))(v149, 0, 1, v232);
    uint64_t v156 = (uint64_t)v88 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_speechDetectorOutputStream;
    swift_beginAccess();
    sub_2613EFB3C(v149, v156, &qword_26A914C48);
    swift_endAccess();
    uint64_t v157 = v156;
    uint64_t v63 = v229;
    sub_2613C2540(v157, (uint64_t)v229, &qword_26A914C48);
    int v158 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v154 + 48))(v63, 1, v155);
    uint64_t v253 = 0;
    if (v158 == 1)
    {
      swift_release();
      sub_2613CC6A0((uint64_t)v63, &qword_26A914C48);
    }
    else
    {
      v269 = *(void (**)(char *, uint64_t *, uint64_t))(v154 + 32);
      uint64_t v159 = v230;
      v269(v230, v63, v155);
      uint64_t v160 = sub_2614D5788();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v160 - 8) + 56))(v236, 1, 1, v160);
      char v161 = v228;
      (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v228, v159, v155);
      uint64_t v162 = v155;
      unint64_t v163 = (*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80);
      unint64_t v164 = (v227 + v163 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v165 = swift_allocObject();
      *(void *)(v165 + 16) = 0;
      *(void *)(v165 + 24) = 0;
      v269((char *)(v165 + v163), (uint64_t *)v161, v162);
      *(void *)(v165 + v164) = v88;
      uint64_t v166 = v88;
      uint64_t v167 = v236;
      uint64_t v63 = (uint64_t *)sub_2614158F8(v236, (uint64_t)&unk_26A915108, v165);
      uint64_t v145 = v271;
      sub_2613CC6A0(v167, &qword_26A914BD8);
      *(uint64_t *)((char *)v166 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_vadTask) = (uint64_t)v63;
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v154 + 8))(v230, v232);
    }
  }
  else
  {
    uint64_t v145 = v271;
  }
  uint64_t v168 = *(void *)v215[0];
  if (!*(void *)v215[0])
  {
    sub_2613DC2B8();
    swift_allocError();
    *long long v197 = 0xD000000000000012;
    v197[1] = 0x80000002614E27F0;
    swift_willThrow();
    goto LABEL_37;
  }
  long long v169 = *(char **)(v215[0] + 8);
  long long v170 = *(char **)(v215[0] + 16);
  uint64_t v171 = *(void *)(v215[0] + 24);
  unint64_t v172 = *(void *)(v215[0] + 32);
  uint64_t v173 = *(void *)(v215[0] + 40);
  unint64_t v174 = *(void *)(v215[0] + 48);
  unint64_t v175 = *(void *)(v215[0] + 56);
  char v176 = *(uint64_t **)(v215[0] + 64);
  uint64_t v177 = *(void (**)(char *, uint64_t *, uint64_t))(v215[0] + 72);
  unint64_t v178 = *(unsigned int *)(v215[0] + 80) | ((unint64_t)(*(unsigned __int16 *)(v215[0] + 84) | (*(unsigned __int8 *)(v215[0] + 86) << 16)) << 32);
  char v295 = v172 & 1;
  char v294 = v174 & 1;
  uint64_t v179 = *(void (**)(uint64_t))(**(void **)((char *)v145 + (void)v88) + 136);
  unint64_t v268 = v178;
  v269 = v177;
  v271 = v176;
  uint64_t v180 = v168;
  uint64_t v263 = v168;
  unint64_t v264 = (unint64_t)v169;
  v265 = v170;
  uint64_t v266 = v171;
  unint64_t v262 = v172;
  uint64_t v267 = v173;
  unint64_t v181 = v175;
  sub_261416F0C(v180);
  uint64_t v182 = swift_retain();
  int v183 = v233;
  v179(v182);
  swift_release();
  uint64_t v184 = v254;
  uint64_t v185 = v234;
  uint64_t v186 = v255;
  (*(void (**)(char *, void, uint64_t))(v254 + 104))(v234, *MEMORY[0x263F17B50], v255);
  char v187 = sub_2614D5248();
  uint64_t v188 = *(void (**)(char *, uint64_t))(v184 + 8);
  v188(v185, v186);
  v188(v183, v186);
  char v189 = v181;
  if (v187)
  {
    unint64_t v260 = v174;
    unint64_t v261 = v181;
    dispatch_semaphore_t v190 = dispatch_semaphore_create(0);
    uint64_t v191 = sub_2614D5788();
    uint64_t v192 = v236;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v191 - 8) + 56))(v236, 1, 1, v191);
    uint64_t v193 = (void *)swift_allocObject();
    v193[2] = 0;
    v193[3] = 0;
    v193[4] = v88;
    v193[5] = v190;
    uint64_t v194 = v88;
    uint64_t v63 = v190;
    sub_26141213C(v192, (uint64_t)&unk_26A9150F8, (uint64_t)v193);
    swift_release();
    sub_2614D5A28();
    uint64_t v195 = *(void **)((char *)v194 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_downloadError);
    if (v195)
    {
      id v196 = v195;
      sub_26140FB6C(v263);
      swift_willThrow();

      goto LABEL_37;
    }

    char v189 = v261;
    unint64_t v174 = v260;
  }
  unint64_t v260 = HIDWORD(v174);
  char v198 = v268;
  unint64_t v262 = v268 >> 8;
  unint64_t v261 = v268 >> 16;
  int v199 = v264;
  uint64_t v200 = HIDWORD(v264) & 1;
  uint64_t v201 = (v264 >> 40) & 1;
  char v202 = v189 & 1;
  v203.i64[0] = 0xFFFFFFFFFFFFFFLL;
  v203.i64[1] = 0xFFFFFFFFFFFFFFLL;
  uint64x2_t v204 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v268), v203);
  int32x4_t v205 = vuzp1q_s32((int32x4_t)vshlq_u64(v204, (uint64x2_t)xmmword_2614DA470), (int32x4_t)vshlq_u64(v204, (uint64x2_t)xmmword_2614DA460));
  *(int8x8_t *)v205.i8 = vand_s8((int8x8_t)vmovn_s32(v205), (int8x8_t)0x1000100010001);
  int16x8_t v259 = (int16x8_t)v205;
  uint64_t v206 = sub_2614D5788();
  uint64_t v207 = v236;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v206 - 8) + 56))(v236, 1, 1, v206);
  uint64_t v208 = swift_allocObject();
  *(void *)(v208 + 16) = 0;
  *(void *)(v208 + 24) = 0;
  uint64_t v209 = v263;
  *(void *)(v208 + 32) = v88;
  *(void *)(v208 + 40) = v209;
  *(_DWORD *)(v208 + 48) = v199;
  *(unsigned char *)(v208 + 52) = v200;
  *(unsigned char *)(v208 + 53) = v201;
  uint64_t v210 = v266;
  *(void *)(v208 + 56) = v265;
  *(void *)(v208 + 64) = v210;
  *(unsigned char *)(v208 + 72) = v295;
  *(_DWORD *)(v208 + 73) = *(_DWORD *)v296;
  *(_DWORD *)(v208 + 76) = *(_DWORD *)&v296[3];
  *(void *)(v208 + 80) = v267;
  *(unsigned char *)(v208 + 88) = v294;
  *(unsigned char *)(v208 + 89) = BYTE1(v174) & 1;
  *(_DWORD *)(v208 + 92) = v260;
  *(unsigned char *)(v208 + 96) = v202;
  *(_DWORD *)(v208 + 97) = *(_DWORD *)v293;
  *(_DWORD *)(v208 + 100) = *(_DWORD *)&v293[3];
  v211 = v269;
  *(void *)(v208 + 104) = v271;
  *(void *)(v208 + 112) = v211;
  *(unsigned char *)(v208 + 120) = v198;
  *(unsigned char *)(v208 + 121) = v262;
  *(unsigned char *)(v208 + 122) = v261;
  *(_DWORD *)(v208 + 123) = vmovn_s16(v259).u32[0];
  v212 = v88;
  uint64_t v213 = sub_261413770(v207, (uint64_t)&unk_26A9150E8, v208);
  uint64_t v214 = OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_recognizerTask;
  *(uint64_t *)((char *)v212 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_recognizerTask) = v213;
  uint64_t result = (uint64_t *)swift_release();
  uint64_t v63 = *(uint64_t **)((char *)v212 + v214);
  if (v63)
  {
    swift_retain();

    return v63;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_261411EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = (void *)swift_task_alloc();
  v5[4] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_261411F34;
  return sub_261417868();
}

uint64_t sub_261411F34()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2614120A8;
  }
  else {
    uint64_t v2 = sub_261412048;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_261412048()
{
  sub_2614D5A38();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2614120A8()
{
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = v0[2];
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_downloadError);
  *(void *)(v2 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_downloadError) = v1;
  id v4 = v1;

  sub_2614D5A38();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_26141213C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2614D5788();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_2614D5778();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_2613CC6A0(a1, &qword_26A914BD8);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2614D5748();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_2614122E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[44] = a4;
  v5[45] = a5;
  v5[43] = a1;
  uint64_t v6 = sub_2614D50C8();
  v5[46] = v6;
  v5[47] = *(void *)(v6 - 8);
  v5[48] = swift_task_alloc();
  v5[49] = swift_task_alloc();
  v5[50] = swift_task_alloc();
  v5[51] = sub_2614D4BC8();
  v5[52] = swift_task_alloc();
  uint64_t v7 = sub_2614D4BD8();
  v5[53] = v7;
  v5[54] = *(void *)(v7 - 8);
  v5[55] = swift_task_alloc();
  uint64_t v8 = sub_2614D5218();
  v5[56] = v8;
  v5[57] = *(void *)(v8 - 8);
  v5[58] = swift_task_alloc();
  v5[59] = swift_task_alloc();
  uint64_t v9 = sub_2614D5198();
  v5[60] = v9;
  v5[61] = *(void *)(v9 - 8);
  v5[62] = swift_task_alloc();
  sub_2613C23AC(&qword_26A915188);
  v5[63] = swift_task_alloc();
  v5[64] = sub_2613C23AC(&qword_26A915190);
  v5[65] = swift_task_alloc();
  uint64_t v10 = sub_2613C23AC(&qword_26A915198);
  v5[66] = v10;
  v5[67] = *(void *)(v10 - 8);
  v5[68] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2614125E0, 0, 0);
}

uint64_t sub_2614125E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (*(void *)(*(void *)(v6 + 352) + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_transcriber))
  {
    swift_retain();
    sub_2614D51B8();
    swift_release();
    *(void *)(v6 + 552) = swift_getOpaqueTypeConformance2();
    sub_2614D5828();
    *(void *)(v6 + 560) = OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_audioDuringSpeech;
    *(void *)(v6 + 568) = OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_stopped;
    *(void *)(v6 + 576) = OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_asrDelegate;
    *(void *)(v6 + 584) = OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_timingInfo;
    uint64_t v7 = (_DWORD *)MEMORY[0x263F17B28];
    *(_DWORD *)(v6 + 252) = *MEMORY[0x263F17B30];
    *(_DWORD *)(v6 + 608) = *v7;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v6 + 592) = v9;
    *uint64_t v9 = v6;
    v9[1] = sub_261412788;
    a5 = *(void *)(v6 + 528);
    a1 = *(void *)(v6 + 504);
    a2 = 0;
    a3 = 0;
    a4 = v6 + 336;
    a6 = AssociatedConformanceWitness;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270FA1E88](a1, a2, a3, a4, a5, a6);
}

uint64_t sub_261412788()
{
  *(void *)(*(void *)v1 + 600) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_26141365C;
  }
  else {
    uint64_t v2 = sub_26141289C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_26141289C()
{
  uint64_t v4 = *(void *)(v0 + 504);
  uint64_t v5 = *(void *)(v0 + 480);
  uint64_t v6 = *(void *)(v0 + 488);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    LODWORD(v132) = *(_DWORD *)(v0 + 608);
    uint64_t v10 = *(unsigned int *)(v0 + 252);
    uint64_t v12 = *(void *)(v0 + 464);
    uint64_t v11 = *(void *)(v0 + 472);
    unint64_t v13 = *(void *)(v0 + 448);
    uint64_t v14 = *(void *)(v0 + 456);
    (*(void (**)(void, uint64_t, uint64_t))(v6 + 32))(*(void *)(v0 + 496), v4, v5);
    sub_2614D5178();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, unint64_t))(v14 + 104);
    v15(v12, v10, v13);
    int64_t v16 = sub_2614D5208();
    uint64_t v19 = *(void (**)(void, void))(v14 + 8);
    uint64_t v18 = v14 + 8;
    uint64_t v17 = v19;
    v19(v12, v13);
    v19(v11, v13);
    sub_2614D5178();
    v15(v12, v132, v13);
    unsigned __int8 v20 = sub_2614D5208();
    v19(v12, v13);
    v19(v11, v13);
    uint64_t v21 = *(void *)(sub_2614D5188() + 16);
    swift_bridgeObjectRelease();
    if (!v21)
    {
      uint64_t v35 = *(void *)(v0 + 376);
      uint64_t v34 = *(void *)(v0 + 384);
      uint64_t v36 = *(void *)(v0 + 368);
      uint64_t v37 = sub_26146718C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v34, v37, v36);
      uint64_t v38 = sub_2614D50A8();
      os_log_type_t v39 = sub_2614D5978();
      if (os_log_type_enabled(v38, v39))
      {
        int v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v40 = 0;
        _os_log_impl(&dword_2613B8000, v38, v39, "No results from speech API", v40, 2u);
        MEMORY[0x263E38060](v40, -1, -1);
      }
      uint64_t v42 = *(void *)(v0 + 376);
      uint64_t v41 = *(void *)(v0 + 384);
      uint64_t v43 = *(void *)(v0 + 368);

      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
      goto LABEL_44;
    }
    uint64_t v22 = *(void **)(v0 + 496);
    uint64_t v23 = sub_2614D5188();
    unint64_t v24 = *(void *)(v23 + 16);
    if (!v24)
    {
      __break(1u);
LABEL_48:
      uint64_t v22 = sub_261416300((void *)(v24 > 1), v16, 1, v22);
LABEL_37:
      uint64_t v128 = *(void *)(v0 + 600);
      unint64_t v110 = *(void **)(v0 + 352);
      _OWORD v22[2] = v16;
      uint64_t v111 = &v22[8 * v13];
      v111[4] = v11;
      v111[5] = v18;
      *((_DWORD *)v111 + 12) = v1;
      v111[7] = v2;
      v111[8] = v3;
      v111[9] = v17;
      v111[10] = v132;
      *((unsigned char *)v111 + 88) = v131;
      *((unsigned char *)v111 + 89) = v130;
      *((unsigned char *)v111 + 90) = v129;
      type metadata accessor for VAKeywordResult();
      uint64_t v112 = VAKeywordResult.__allocating_init(detections:)((uint64_t)v22);
      (*(void (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v110) + 0x210))(v112);
      if (v128)
      {
        uint64_t v113 = *(void *)(v0 + 544);
        uint64_t v114 = *(void *)(v0 + 536);
        uint64_t v115 = *(void *)(v0 + 528);
        uint64_t v117 = *(void *)(v0 + 488);
        uint64_t v116 = *(void *)(v0 + 496);
        uint64_t v118 = *(void *)(v0 + 480);
        swift_release();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();

        (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v116, v118);
        (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v113, v115);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
        goto LABEL_3;
      }
      uint64_t v119 = *(void *)(v0 + 584);
      uint64_t v120 = *(void *)(v0 + 352);
      swift_release();
      uint64_t v121 = *(void **)(v120 + v119);
      if (v121)
      {
        uint64_t v122 = *(void (**)(void (*)(uint64_t, uint64_t, unint64_t), uint64_t))((*MEMORY[0x263F8EED0] & *v121) + 0x1E8);
        uint64_t v123 = v121;
        v122(v15, v12);
      }
      int v57 = v127;
LABEL_42:
      uint64_t v70 = v126;
      goto LABEL_43;
    }
    uint64_t v26 = *(void *)(v0 + 432);
    uint64_t v25 = *(void *)(v0 + 440);
    uint64_t v27 = *(void *)(v0 + 424);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v26 + 16))(v25, v23 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80)), v27);
    swift_bridgeObjectRelease();
    sub_2614D4BB8();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    sub_261418144(&qword_26A9151A0, MEMORY[0x263F066D8]);
    sub_2614D5598();
    uint64_t v133 = sub_2614D5428();
    uint64_t v29 = v28;
    swift_bridgeObjectRelease();
    char v30 = v16 | v20;
    if ((v16 | v20))
    {
      uint64_t v31 = *(void *)(v0 + 352);
      uint64_t v32 = *(void **)(v31 + *(void *)(v0 + 560));
      id v33 = v32;
    }
    else
    {
      uint64_t v32 = 0;
      uint64_t v31 = *(void *)(v0 + 352);
    }
    uint64_t v44 = *(void *)(v0 + 568);
    type metadata accessor for VAASRResult();
    swift_bridgeObjectRetain();
    id v45 = sub_261480D58(v133, v29, v16 & 1, v20 & 1, 0, 0, (uint64_t)v32);
    uint64_t v46 = *(void *)(v0 + 368);
    uint64_t v47 = *(void *)(v0 + 376);
    if (*(unsigned char *)(v31 + v44) == 1)
    {
      uint64_t v48 = *(void *)(v0 + 400);
      swift_bridgeObjectRelease();
      uint64_t v49 = sub_26146718C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v48, v49, v46);
      id v50 = v45;
      uint64_t v51 = sub_2614D50A8();
      os_log_type_t v52 = sub_2614D5978();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v53 = swift_slowAlloc();
        uint64_t v54 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v53 = 138412290;
        *(void *)(v53 + 4) = v50;
        void *v54 = v50;

        _os_log_impl(&dword_2613B8000, v51, v52, "Ignoring after stop: %@", (uint8_t *)v53, 0xCu);
        sub_2613C23AC(&qword_26A914C10);
        swift_arrayDestroy();
        MEMORY[0x263E38060](v54, -1, -1);
        MEMORY[0x263E38060](v53, -1, -1);
      }
      else
      {
      }
      uint64_t v62 = *(void *)(v0 + 400);
      uint64_t v63 = *(void *)(v0 + 368);
      uint64_t v64 = *(void *)(v0 + 376);

      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v62, v63);
LABEL_44:
      (*(void (**)(void, void))(*(void *)(v0 + 488) + 8))(*(void *)(v0 + 496), *(void *)(v0 + 480));
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v125 = (void *)swift_task_alloc();
      *(void *)(v0 + 592) = v125;
      *uint64_t v125 = v0;
      v125[1] = sub_261412788;
      uint64_t v79 = *(void *)(v0 + 528);
      uint64_t v75 = *(void *)(v0 + 504);
      uint64_t v76 = 0;
      uint64_t v77 = 0;
      uint64_t v78 = v0 + 336;
      uint64_t v80 = AssociatedConformanceWitness;
      return MEMORY[0x270FA1E88](v75, v76, v77, v78, v79, v80);
    }
    uint64_t v55 = *(void *)(v0 + 392);
    uint64_t v56 = sub_26146718C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v55, v56, v46);
    int v57 = v45;
    int v58 = sub_2614D50A8();
    os_log_type_t v59 = sub_2614D5968();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = swift_slowAlloc();
      int v61 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v60 = 138412290;
      *(void *)(v60 + 4) = v57;
      void *v61 = v57;

      _os_log_impl(&dword_2613B8000, v58, v59, "Got %@", (uint8_t *)v60, 0xCu);
      sub_2613C23AC(&qword_26A914C10);
      swift_arrayDestroy();
      MEMORY[0x263E38060](v61, -1, -1);
      MEMORY[0x263E38060](v60, -1, -1);
    }
    else
    {

      int v58 = v57;
    }
    uint64_t v65 = *(void *)(v0 + 576);
    uint64_t v66 = *(void *)(v0 + 392);
    uint64_t v67 = *(void *)(v0 + 368);
    uint64_t v68 = *(void *)(v0 + 376);
    uint64_t v69 = *(void *)(v0 + 352);

    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v66, v67);
    uint64_t v70 = *(void **)(v69 + v65);
    if (!v70)
    {

      swift_bridgeObjectRelease();
      goto LABEL_44;
    }
    uint64_t v71 = *(void **)(*(void *)(v0 + 352) + *(void *)(v0 + 584));
    unint64_t v72 = (void *)MEMORY[0x263F8EED0];
    if (v71)
    {
      int v73 = *(void (**)(uint64_t, uint64_t, void))((*MEMORY[0x263F8EED0] & *v71) + 0x1F8);
      swift_unknownObjectRetain();
      uint64_t v74 = v71;
      v73(v133, v29, v30 & 1);

      if (v30) {
        goto LABEL_29;
      }
    }
    else
    {
      swift_unknownObjectRetain();
      if (v30)
      {
LABEL_29:
        uint64_t v75 = (*(uint64_t (**)(void))((*v72 & **(void **)(v0 + 352)) + 0x118))();
        if (!v75)
        {
          __break(1u);
          return MEMORY[0x270FA1E88](v75, v76, v77, v78, v79, v80);
        }
        (*(void (**)(uint64_t))(*(void *)v75 + 280))(v75);
        swift_release();
        int v81 = *(_DWORD *)(v0 + 24);
        char v82 = *(unsigned char *)(v0 + 28);
        char v83 = *(unsigned char *)(v0 + 29);
        char v84 = *(unsigned char *)(v0 + 48);
        uint64_t v85 = *(void *)(v0 + 56);
        char v86 = *(unsigned char *)(v0 + 64);
        char v87 = *(unsigned char *)(v0 + 65);
        int v88 = *(_DWORD *)(v0 + 68);
        char v89 = *(unsigned char *)(v0 + 72);
        uint64_t v90 = *(void *)(v0 + 80);
        uint64_t v91 = *(void *)(v0 + 88);
        __int16 v92 = *(_WORD *)(v0 + 96);
        char v93 = *(unsigned char *)(v0 + 98);
        char v94 = *(unsigned char *)(v0 + 99);
        char v95 = *(unsigned char *)(v0 + 100);
        char v96 = *(unsigned char *)(v0 + 101);
        char v97 = *(unsigned char *)(v0 + 102);
        *(void *)(v0 + 104) = *(void *)(v0 + 16);
        *(_DWORD *)(v0 + 112) = v81;
        *(unsigned char *)(v0 + 116) = v82;
        *(unsigned char *)(v0 + 117) = v83;
        *(_OWORD *)(v0 + 120) = *(_OWORD *)(v0 + 32);
        *(unsigned char *)(v0 + 136) = v84;
        *(void *)(v0 + 144) = v85;
        *(unsigned char *)(v0 + 152) = v86;
        *(unsigned char *)(v0 + 153) = v87;
        *(_DWORD *)(v0 + 156) = v88;
        *(unsigned char *)(v0 + 160) = v89;
        *(void *)(v0 + 168) = v90;
        *(void *)(v0 + 176) = v91;
        *(_WORD *)(v0 + 184) = v92;
        *(unsigned char *)(v0 + 186) = v93;
        *(unsigned char *)(v0 + 187) = v94;
        *(unsigned char *)(v0 + 188) = v95;
        *(unsigned char *)(v0 + 189) = v96;
        *(unsigned char *)(v0 + 190) = v97;
        uint64_t v98 = VARuntimeParameters.keywordsNoThresholds.getter();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v99 = *(void *)(v98 + 16);
        if (v99)
        {
          uint64_t v126 = v70;
          uint64_t v127 = v57;
          sub_2613DC3BC();
          uint64_t v100 = (uint64_t *)(v98 + 40);
          while (1)
          {
            uint64_t v101 = *(v100 - 1);
            uint64_t v102 = *v100;
            *(void *)(v0 + 256) = v101;
            *(void *)(v0 + 264) = v102;
            *(void *)(v0 + 272) = 95;
            *(void *)(v0 + 280) = 0xE100000000000000;
            *(void *)(v0 + 288) = 32;
            *(void *)(v0 + 296) = 0xE100000000000000;
            swift_bridgeObjectRetain();
            uint64_t v15 = (void (*)(uint64_t, uint64_t, unint64_t))sub_2614D5BB8();
            uint64_t v12 = v103;
            *(void *)(v0 + 304) = v133;
            *(void *)(v0 + 312) = v29;
            *(void *)(v0 + 320) = v15;
            *(void *)(v0 + 328) = v103;
            if (sub_2614D5BD8()) {
              break;
            }
            v100 += 2;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!--v99)
            {
              swift_bridgeObjectRelease();
              int v57 = v127;
              goto LABEL_42;
            }
          }
          swift_bridgeObjectRelease();
          char v104 = sub_2613E5BB0();
          char v105 = sub_2614D5568();
          swift_bridgeObjectRelease();
          double v106 = sub_26140C3F8();
          double v107 = sub_26140C3F8();
          uint64_t v108 = sub_2614967EC();
          uint64_t v109 = sub_2614967EC();
          sub_2614967F4(v101, v102, v108, v109, v104 & 1, v105 & 1, 1, v0 + 192, 1.0, v106, v107);
          uint64_t v11 = *(void *)(v0 + 192);
          uint64_t v18 = *(void *)(v0 + 200);
          int v1 = *(_DWORD *)(v0 + 208);
          uint64_t v2 = *(void *)(v0 + 216);
          uint64_t v3 = *(void *)(v0 + 224);
          uint64_t v17 = *(void (**)(void, void))(v0 + 232);
          uint64_t v132 = *(void *)(v0 + 240);
          char v131 = *(unsigned char *)(v0 + 248);
          char v130 = *(unsigned char *)(v0 + 249);
          char v129 = *(unsigned char *)(v0 + 250);
          uint64_t v22 = sub_261416300(0, 1, 1, MEMORY[0x263F8EE78]);
          unint64_t v13 = v22[2];
          unint64_t v24 = v22[3];
          int64_t v16 = v13 + 1;
          if (v13 < v24 >> 1) {
            goto LABEL_37;
          }
          goto LABEL_48;
        }
        swift_bridgeObjectRelease();
LABEL_43:
        swift_bridgeObjectRelease();
        objc_msgSend(v70, sel_speechResultsWithResult_, v57);
        swift_unknownObjectRelease();

        goto LABEL_44;
      }
    }
    if ((*(unsigned char *)(*(void *)(v0 + 360) + 85) & 1) == 0) {
      goto LABEL_43;
    }
    goto LABEL_29;
  }
  uint64_t v7 = *(unsigned char **)(v0 + 344);
  (*(void (**)(void, void))(*(void *)(v0 + 536) + 8))(*(void *)(v0 + 544), *(void *)(v0 + 528));
  *uint64_t v7 = 1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
LABEL_3:
  return v8();
}

uint64_t sub_26141365C()
{
  (*(void (**)(void, void))(v0[67] + 8))(v0[68], v0[66]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_261413770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2614D5788();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_2614D5778();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_2613CC6A0(a1, &qword_26A914BD8);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2614D5748();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_2614138F4(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  sub_2614D51F8();
  v3[8] = swift_task_alloc();
  sub_2613C23AC(&qword_26A915070);
  v3[9] = swift_task_alloc();
  uint64_t v4 = sub_2613C23AC(&qword_26A915118);
  v3[10] = v4;
  v3[11] = *(void *)(v4 - 8);
  v3[12] = swift_task_alloc();
  sub_2613C23AC(&qword_26A914BD8);
  v3[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_261413A48, 0, 0);
}

uint64_t sub_261413A48()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v3 = *(void **)(v0 + 56);
  uint64_t v5 = *(void **)(v0 + 40);
  uint64_t v6 = sub_2614D5788();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v1, 1, 1, v6);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v3;
  v7[5] = v5;
  v7[6] = v4;
  id v8 = v3;
  id v9 = v5;
  sub_261413770(v1, (uint64_t)&unk_26A915128, (uint64_t)v7);
  swift_release();
  uint64_t v10 = (uint64_t)v8 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_inputStreamBuilder;
  swift_beginAccess();
  sub_2613C2540(v10, v2, &qword_26A915070);
  uint64_t v11 = sub_2613C23AC(&qword_26A915050);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v2, 1, v11);
  if (result == 1) {
    goto LABEL_7;
  }
  int64_t v14 = *(void *)(v0 + 48);
  if (v14 < 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v15 = *(void *)(v0 + 96);
  uint64_t v17 = *(void *)(v0 + 80);
  uint64_t v16 = *(void *)(v0 + 88);
  uint64_t v18 = *(void *)(v0 + 72);
  id v19 = *(id *)(v0 + 40);
  CMTimeMake(&v21, v14, 1);
  sub_2614D51E8();
  sub_2614D57B8();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v18, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned __int8 v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_261413CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return MEMORY[0x270FA2498](sub_261413CE8, 0, 0);
}

uint64_t sub_261413CE8()
{
  uint64_t v1 = *(void *)(v0[2] + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_speechDetector);
  if (v1)
  {
    uint64_t v3 = v0[3];
    uint64_t v2 = v0[4];
    uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 584);
    swift_retain();
    v4(v3, v2);
    swift_release();
  }
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_261413DC8()
{
  v1[5] = v0;
  sub_2613C23AC(&qword_26A915070);
  v1[6] = swift_task_alloc();
  uint64_t v2 = sub_2614D50C8();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_261413EB8, 0, 0);
}

uint64_t sub_261413EB8()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  uint64_t v4 = sub_26146718C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v5 = sub_2614D50A8();
  os_log_type_t v6 = sub_2614D5968();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_2613B8000, v5, v6, "Stopping speech API spotter", v7, 2u);
    MEMORY[0x263E38060](v7, -1, -1);
  }
  uint64_t v9 = v0[8];
  uint64_t v8 = v0[9];
  uint64_t v11 = v0[6];
  uint64_t v10 = v0[7];
  uint64_t v12 = v0[5];

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  *(unsigned char *)(v12 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_stopped) = 1;
  uint64_t v13 = v12 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_inputStreamBuilder;
  swift_beginAccess();
  sub_2613C2540(v13, v11, &qword_26A915070);
  uint64_t v14 = sub_2613C23AC(&qword_26A915050);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14) == 1)
  {
    __break(1u);
    return MEMORY[0x270EFE178]();
  }
  uint64_t v17 = v0[5];
  uint64_t v16 = v0[6];
  sub_2614D57C8();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v14);
  uint64_t v18 = *(void *)(v17 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_speechAnalyzer);
  v0[10] = v18;
  if (v18)
  {
    swift_retain();
    id v19 = (void *)swift_task_alloc();
    v0[11] = v19;
    void *v19 = v0;
    v19[1] = sub_2614142A8;
    return MEMORY[0x270EFE178]();
  }
  uint64_t v20 = v0[5];
  uint64_t v21 = *(void *)(v20 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_speechDetector);
  if (v21)
  {
    uint64_t v22 = *(void (**)(uint64_t))(*(void *)v21 + 592);
    uint64_t v23 = swift_retain();
    v22(v23);
    swift_release();
    uint64_t v20 = v0[5];
  }
  uint64_t v24 = OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_vadTask;
  if (*(void *)(v20 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_vadTask))
  {
    swift_retain();
    sub_2613C23AC(&qword_26A914CA8);
    sub_2614D57F8();
    swift_release();
    uint64_t v25 = v0[5];
  }
  else
  {
    uint64_t v25 = v20;
  }
  *(void *)(v20 + v24) = 0;
  swift_release();
  uint64_t v26 = OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_recognizerTask;
  if (*(void *)(v25 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_recognizerTask))
  {
    swift_retain();
    sub_2613C23AC(&qword_26A914CA8);
    sub_2614D57F8();
    swift_release();
  }
  *(void *)(v25 + v26) = 0;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = (uint64_t (*)(void))v0[1];
  return v27();
}

uint64_t sub_2614142A8()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_26141458C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_2614143C4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2614143C4()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_speechDetector);
  if (v2)
  {
    uint64_t v3 = v0[12];
    uint64_t v4 = *(void (**)(uint64_t))(*(void *)v2 + 592);
    uint64_t v5 = swift_retain();
    v4(v5);
    swift_release();
    if (v3)
    {
      swift_task_dealloc();
      swift_task_dealloc();
      os_log_type_t v6 = (uint64_t (*)(void))v0[1];
      goto LABEL_11;
    }
    uint64_t v1 = v0[5];
  }
  uint64_t v7 = OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_vadTask;
  if (*(void *)(v1 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_vadTask))
  {
    swift_retain();
    sub_2613C23AC(&qword_26A914CA8);
    sub_2614D57F8();
    swift_release();
    uint64_t v8 = v0[5];
  }
  else
  {
    uint64_t v8 = v1;
  }
  *(void *)(v1 + v7) = 0;
  swift_release();
  uint64_t v9 = OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_recognizerTask;
  if (*(void *)(v8 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_recognizerTask))
  {
    swift_retain();
    sub_2613C23AC(&qword_26A914CA8);
    sub_2614D57F8();
    swift_release();
  }
  *(void *)(v8 + v9) = 0;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v6 = (uint64_t (*)(void))v0[1];
LABEL_11:
  return v6();
}

uint64_t sub_26141458C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_261414604(uint64_t a1)
{
  uint64_t v2 = sub_2614D50C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_26146718C();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v7 = sub_2614D50A8();
  os_log_type_t v8 = sub_2614D5968();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 134217984;
    v11[1] = a1;
    sub_2614D5B58();
    _os_log_impl(&dword_2613B8000, v7, v8, "General ASR model loaded %ld%%", v9, 0xCu);
    MEMORY[0x263E38060](v9, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_26141478C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[147] = a5;
  v5[146] = a4;
  sub_2613C23AC(&qword_26A914BD8);
  v5[148] = swift_task_alloc();
  uint64_t v6 = sub_2614D50C8();
  v5[149] = v6;
  v5[150] = *(void *)(v6 - 8);
  v5[151] = swift_task_alloc();
  v5[152] = swift_task_alloc();
  uint64_t v7 = sub_2613C23AC(&qword_26A915150);
  v5[153] = v7;
  v5[154] = *(void *)(v7 - 8);
  v5[155] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2614148F0, 0, 0);
}

uint64_t sub_2614148F0()
{
  sub_2613C23AC(&qword_26A914C28);
  sub_2614D57D8();
  *(void *)(v0 + 1248) = OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_audioDuringSpeech;
  *(void *)(v0 + 1256) = OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_timingInfo;
  *(void *)(v0 + 1264) = OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_asrDelegate;
  *(unsigned char *)(v0 + 139) = 0;
  *(_OWORD *)(v0 + 1272) = 0u;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 1288) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2614149F4;
  uint64_t v2 = *(void *)(v0 + 1224);
  return MEMORY[0x270FA1F68](v0 + 272, 0, 0, v2);
}

uint64_t sub_2614149F4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_261414AF0, 0, 0);
}

uint64_t sub_261414AF0()
{
  uint64_t v108 = v0;
  uint64_t v1 = (_OWORD *)(v0 + 16);
  sub_2613F47A8(v0 + 272, v0 + 144);
  sub_2613F47A8(v0 + 144, v0 + 16);
  if (sub_2613F49D4((uint64_t *)(v0 + 16)) == 1)
  {
    uint64_t v2 = *(void *)(v0 + 1176);
    (*(void (**)(void, void))(*(void *)(v0 + 1232) + 8))(*(void *)(v0 + 1240), *(void *)(v0 + 1224));
    uint64_t v3 = *(uint64_t (**)(uint64_t))(**(void **)(v2
                                                         + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_speechAPISpotterConfiguration)
                                           + 160);
    uint64_t v4 = swift_retain();
    LOBYTE(v3) = v3(v4);
    swift_release();
    if (v3)
    {
      uint64_t v5 = *(void *)(v0 + 1184);
      uint64_t v6 = *(void **)(v0 + 1176);
      uint64_t v7 = sub_2614D5788();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
      os_log_type_t v8 = (void *)swift_allocObject();
      v8[2] = 0;
      v8[3] = 0;
      v8[4] = v6;
      id v9 = v6;
      sub_261413770(v5, (uint64_t)&unk_26A915160, (uint64_t)v8);
      swift_release();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_23;
  }
  LODWORD(v11) = *(unsigned __int8 *)(v0 + 32);
  if (v11 != 1)
  {
    if (*(unsigned char *)(v0 + 33) == 1)
    {
      id v19 = *(void **)(v0 + 1176);
      uint64_t v20 = *(void **)((char *)v19 + *(void *)(v0 + 1256));
      if (v20)
      {
        if (*(unsigned char *)(v0 + 64) == 1)
        {
LABEL_46:
          char v97 = *(void **)(v0 + 1280);
          uint64_t v98 = v20;

          __break(1u);
          goto LABEL_47;
        }
        uint64_t v21 = *(void *)(v0 + 56);
        uint64_t v22 = *(void (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v20) + 0x210);
        uint64_t v23 = v20;
        v22(v21);

        id v19 = *(void **)(v0 + 1176);
      }
      char v106 = v11;
      uint64_t v24 = *(void **)((char *)v19 + *(void *)(v0 + 1248));
      if (!v24)
      {

        __break(1u);
LABEL_45:
        char v96 = v83;
        __break(1u);
        goto LABEL_46;
      }
      uint64_t v25 = *(void *)(v0 + 1272);
      uint64_t v26 = *(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v19) + 0x440);
      sub_2614176F8((id *)(v0 + 144));
      id v18 = v24;
      uint64_t v27 = v26();
      id v16 = *(id *)(v0 + 1280);
      if (!v25)
      {
        uint64_t v28 = v27;
        uint64_t v29 = *(void *)(v0 + 1248);
        uint64_t v99 = *(void *)(v0 + 1208);
        uint64_t v30 = *(void *)(v0 + 1200);
        uint64_t v101 = *(void *)(v0 + 1192);
        uint64_t v31 = *(void *)(v0 + 1176);
        sub_2613F4810((id *)(v0 + 144));

        uint64_t v32 = *(void **)(v31 + v29);
        *(void *)(v31 + v29) = v28;

        uint64_t v33 = sub_26146718C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v99, v33, v101);
        sub_2613F47A8(v0 + 144, v0 + 400);
        sub_2614176F8((id *)(v0 + 144));
        sub_2614176F8((id *)(v0 + 400));
        uint64_t v34 = sub_2614D50A8();
        os_log_type_t v35 = sub_2614D5968();
        BOOL v36 = os_log_type_enabled(v34, v35);
        uint64_t v37 = *(void *)(v0 + 1208);
        uint64_t v38 = *(void *)(v0 + 1192);
        os_log_type_t v39 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 1200) + 8);
        if (v36)
        {
          uint64_t v104 = *(void *)(v0 + 1192);
          uint64_t v40 = swift_slowAlloc();
          uint64_t v102 = v37;
          uint64_t v41 = swift_slowAlloc();
          v107[0] = v41;
          *(_DWORD *)uint64_t v40 = 136315138;
          long long v42 = *(_OWORD *)(v0 + 96);
          *(_OWORD *)(v0 + 720) = *(_OWORD *)(v0 + 80);
          *(_OWORD *)(v0 + 736) = v42;
          *(_OWORD *)(v0 + 752) = *(_OWORD *)(v0 + 112);
          *(_OWORD *)(v0 + 763) = *(_OWORD *)(v0 + 123);
          long long v43 = *(_OWORD *)(v0 + 32);
          *(_OWORD *)(v0 + 656) = *v1;
          *(_OWORD *)(v0 + 672) = v43;
          long long v44 = *(_OWORD *)(v0 + 64);
          *(_OWORD *)(v0 + 688) = *(_OWORD *)(v0 + 48);
          *(_OWORD *)(v0 + 704) = v44;
          sub_261417724();
          uint64_t v45 = sub_2614D5F88();
          *(void *)(v40 + 4) = sub_2613D875C(v45, v46, v107);
          swift_bridgeObjectRelease();
          sub_2613F4810((id *)(v0 + 144));
          sub_2613F4810((id *)(v0 + 144));
          _os_log_impl(&dword_2613B8000, v34, v35, "Got end-of-speech: %s", (uint8_t *)v40, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x263E38060](v41, -1, -1);
          MEMORY[0x263E38060](v40, -1, -1);

          sub_2613F4810((id *)(v0 + 144));
          (*v39)(v102, v104);
        }
        else
        {
          sub_2613F4810((id *)(v0 + 144));
          sub_2613F4810((id *)(v0 + 144));
          sub_2613F47A8(v0 + 144, v0 + 528);
          sub_2613F4810((id *)(v0 + 528));

          (*v39)(v37, v38);
        }
        uint64_t v56 = 0;
        LOBYTE(v11) = v106;
        goto LABEL_40;
      }
    }
    else
    {
      if (*(unsigned char *)(v0 + 139) != 1)
      {

        uint64_t v55 = *(void *)(v0 + 16);
        uint64_t v56 = *(void *)(v0 + 1272);
        goto LABEL_41;
      }
      uint64_t v47 = *(void **)(v0 + 1176);
      uint64_t v48 = *(void **)((char *)v47 + *(void *)(v0 + 1248));
      if (!v48)
      {
LABEL_47:

        __break(1u);
        return MEMORY[0x270FA1F68](v93, v94, v95, v92);
      }
      uint64_t v49 = *(void *)(v0 + 1272);
      id v50 = *(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v47) + 0x440);
      sub_2614176F8((id *)(v0 + 144));
      id v18 = v48;
      uint64_t v51 = v50();
      if (!v49)
      {
        uint64_t v87 = v51;
        uint64_t v88 = *(void *)(v0 + 1248);
        uint64_t v89 = *(void *)(v0 + 1176);
        sub_2613F4810((id *)(v0 + 144));

        uint64_t v90 = *(void **)(v89 + v88);
        *(void *)(v89 + v88) = v87;

        sub_2613F4810((id *)(v0 + 144));
        uint64_t v56 = 0;
        uint64_t v55 = *(void *)(v0 + 1280);
        goto LABEL_41;
      }
      id v16 = *(id *)(v0 + 1280);
    }
    (*(void (**)(void, void))(*(void *)(v0 + 1232) + 8))(*(void *)(v0 + 1240), *(void *)(v0 + 1224));
    goto LABEL_22;
  }
  uint64_t v12 = *(void **)(v0 + 1280);
  uint64_t v13 = *(void **)(v0 + 1176);
  if (!v12)
  {
    uint64_t v53 = *(void *)(v0 + 1248);
    uint64_t v54 = *(void **)((char *)v13 + v53);
    *(void *)((char *)v13 + v53) = *(void *)(v0 + 16);
    sub_2613F47A8(v0 + 144, v0 + 784);
    sub_2614176F8((id *)(v0 + 784));

    uint64_t v105 = *(void *)(v0 + 1272);
LABEL_29:
    uint64_t v61 = *(void *)(v0 + 1216);
    uint64_t v62 = *(void *)(v0 + 1200);
    uint64_t v63 = *(void *)(v0 + 1192);
    uint64_t v64 = sub_26146718C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16))(v61, v64, v63);
    sub_2613F47A8(v0 + 144, v0 + 912);
    sub_2614176F8((id *)(v0 + 144));
    sub_2614176F8((id *)(v0 + 912));
    uint64_t v65 = sub_2614D50A8();
    os_log_type_t v66 = sub_2614D5968();
    BOOL v67 = os_log_type_enabled(v65, v66);
    uint64_t v68 = *(void *)(v0 + 1216);
    uint64_t v69 = *(void *)(v0 + 1192);
    uint64_t v70 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 1200) + 8);
    if (v67)
    {
      uint64_t v103 = *(void *)(v0 + 1216);
      uint64_t v11 = swift_slowAlloc();
      uint64_t v100 = v69;
      uint64_t v71 = swift_slowAlloc();
      v107[0] = v71;
      *(_DWORD *)uint64_t v11 = 136315138;
      long long v72 = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v0 + 1104) = *(_OWORD *)(v0 + 80);
      *(_OWORD *)(v0 + 1120) = v72;
      *(_OWORD *)(v0 + 1136) = *(_OWORD *)(v0 + 112);
      *(_OWORD *)(v0 + 1147) = *(_OWORD *)(v0 + 123);
      long long v73 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v0 + 1040) = *v1;
      *(_OWORD *)(v0 + 1056) = v73;
      long long v74 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v0 + 1072) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v0 + 1088) = v74;
      sub_261417724();
      uint64_t v75 = sub_2614D5F88();
      *(void *)(v11 + 4) = sub_2613D875C(v75, v76, v107);
      swift_bridgeObjectRelease();
      sub_2613F4810((id *)(v0 + 144));
      sub_2613F4810((id *)(v0 + 144));
      _os_log_impl(&dword_2613B8000, v65, v66, "Got start-of-speech: %s", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x263E38060](v71, -1, -1);
      uint64_t v77 = v11;
      LOBYTE(v11) = 1;
      MEMORY[0x263E38060](v77, -1, -1);

      (*v70)(v103, v100);
    }
    else
    {
      sub_2613F4810((id *)(v0 + 144));
      sub_2613F4810((id *)(v0 + 144));

      (*v70)(v68, v69);
    }
    uint64_t v78 = *(void *)(v0 + 1256);
    uint64_t v79 = *(void *)(v0 + 1176);
    type metadata accessor for VATimingInfo();
    uint64_t v80 = swift_unknownObjectRetain();
    id v81 = sub_2614B1FA4(v80);
    char v82 = *(void **)(v79 + v78);
    *(void *)(v79 + v78) = v81;

    char v83 = *(void **)(v79 + v78);
    if (!v83)
    {
      sub_2613F4810((id *)(v0 + 144));
      goto LABEL_36;
    }
    if ((*(unsigned char *)(v0 + 48) & 1) == 0)
    {
      uint64_t v84 = *(void *)(v0 + 40);
      uint64_t v85 = *(void (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v83) + 0x208);
      char v86 = v83;
      v85(v84);
      sub_2613F4810((id *)(v0 + 144));

LABEL_36:
      uint64_t v56 = v105;
LABEL_40:
      uint64_t v55 = 0;
      *(unsigned char *)(v0 + 139) = v11;
LABEL_41:
      *(void *)(v0 + 1280) = v55;
      *(void *)(v0 + 1272) = v56;
      uint64_t v91 = (void *)swift_task_alloc();
      *(void *)(v0 + 1288) = v91;
      void *v91 = v0;
      v91[1] = sub_2614149F4;
      uint64_t v92 = *(void *)(v0 + 1224);
      uint64_t v93 = v0 + 272;
      uint64_t v94 = 0;
      uint64_t v95 = 0;
      return MEMORY[0x270FA1F68](v93, v94, v95, v92);
    }
    goto LABEL_45;
  }
  uint64_t v14 = *(void *)(v0 + 1272);
  uint64_t v15 = *(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v13) + 0x440);
  sub_2614176F8((id *)(v0 + 144));
  id v16 = v12;
  uint64_t v17 = v15();
  if (!v14)
  {
    uint64_t v57 = v17;
    uint64_t v58 = *(void *)(v0 + 1248);
    uint64_t v59 = *(void *)(v0 + 1176);
    sub_2613F4810((id *)(v0 + 144));
    uint64_t v60 = *(void **)(v59 + v58);
    *(void *)(v59 + v58) = v57;

    uint64_t v105 = 0;
    LOBYTE(v11) = 1;
    goto LABEL_29;
  }
  (*(void (**)(void, void))(*(void *)(v0 + 1232) + 8))(*(void *)(v0 + 1240), *(void *)(v0 + 1224));
  id v18 = v16;
LABEL_22:

  sub_2613F4810((id *)(v0 + 144));
  sub_2613F4810((id *)(v0 + 144));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
LABEL_23:
  return v10();
}

uint64_t sub_26141555C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = sub_2614D50C8();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_26141561C, 0, 0);
}

uint64_t sub_26141561C()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  uint64_t v4 = sub_26146718C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v5 = sub_2614D50A8();
  os_log_type_t v6 = sub_2614D5968();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_2613B8000, v5, v6, "in batch audio mode, stopping spotter after VAD detector is done", v7, 2u);
    MEMORY[0x263E38060](v7, -1, -1);
  }
  uint64_t v9 = v0[4];
  uint64_t v8 = v0[5];
  uint64_t v11 = (void *)v0[2];
  uint64_t v10 = v0[3];

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  uint64_t v12 = *(int **)((*MEMORY[0x263F8EED0] & *v11) + 0xB8);
  uint64_t v15 = (uint64_t (*)(void))((char *)v12 + *v12);
  uint64_t v13 = (void *)swift_task_alloc();
  v0[6] = v13;
  void *v13 = v0;
  v13[1] = sub_2614157E8;
  return v15();
}

uint64_t sub_2614157E8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_2614158F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2613C23AC(&qword_26A914BD8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2613C2540(a1, (uint64_t)v7, &qword_26A914BD8);
  uint64_t v8 = sub_2614D5788();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_2613CC6A0((uint64_t)v7, &qword_26A914BD8);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
  }
  else
  {
    sub_2614D5778();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
  }
  swift_getObjectType();
  swift_unknownObjectRetain();
  uint64_t v10 = sub_2614D5748();
  uint64_t v12 = v11;
  swift_unknownObjectRelease();
  if (v12 | v10)
  {
    v14[0] = 0;
    v14[1] = 0;
    void v14[2] = v10;
    void v14[3] = v12;
  }
  return swift_task_create();
}

void sub_261415AC8(void *a1, void *a2)
{
  sub_26141742C();
  id v4 = objc_msgSend(a1, sel_format);
  id v5 = objc_msgSend(a2, sel_format);
  char v6 = sub_2614D5A88();

  if ((v6 & 1) == 0)
  {
    sub_2613DC2B8();
    swift_allocError();
    void *v27 = 0xD000000000000021;
    uint64_t v28 = "Buffers must have the same format";
LABEL_13:
    v27[1] = (unint64_t)(v28 - 32) | 0x8000000000000000;
    swift_willThrow();
    return;
  }
  unsigned int v7 = objc_msgSend(a1, sel_frameCapacity);
  unsigned int v8 = objc_msgSend(a2, sel_frameCapacity);
  uint64_t v9 = v7 + v8;
  if (__CFADD__(v7, v8))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v10 = objc_msgSend(a1, sel_format);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EF93B0]), sel_initWithPCMFormat_frameCapacity_, v10, v9);

  if (!v11)
  {
    sub_2613DC2B8();
    swift_allocError();
    void *v27 = 0xD000000000000024;
    uint64_t v28 = "Failed to create concatenated buffer";
    goto LABEL_13;
  }
  objc_msgSend(v11, sel_setFrameLength_, v9);
  uint64_t v12 = (const void *)*(objc_msgSend(a1, sel_audioBufferList) + 2);
  if (!v12)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v13 = (char *)*(objc_msgSend(v11, sel_audioBufferList) + 2);
  if (!v13)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unsigned int v14 = objc_msgSend(a1, sel_frameLength);
  id v15 = objc_msgSend(a1, sel_format);
  uint64_t v16 = (unsigned int *)objc_msgSend(v15, sel_streamDescription);

  unint64_t v17 = v16[6] * (unint64_t)v14;
  if ((v17 & 0xFFFFFFFF00000000) != 0) {
    goto LABEL_15;
  }
  memcpy(v13, v12, v17);
  id v18 = (const void *)*(objc_msgSend(a2, sel_audioBufferList) + 2);
  if (v18)
  {
    unsigned int v19 = objc_msgSend(a1, sel_frameLength);
    id v20 = objc_msgSend(a1, sel_format);
    uint64_t v21 = (unsigned int *)objc_msgSend(v20, sel_streamDescription);

    unint64_t v22 = v21[6] * (unint64_t)v19;
    if ((v22 & 0xFFFFFFFF00000000) == 0)
    {
      unsigned int v23 = objc_msgSend(a2, sel_frameLength);
      id v24 = objc_msgSend(a2, sel_format);
      uint64_t v25 = (unsigned int *)objc_msgSend(v24, sel_streamDescription);

      unint64_t v26 = v25[6] * (unint64_t)v23;
      if ((v26 & 0xFFFFFFFF00000000) == 0)
      {
        memcpy(&v13[v22 & 0xFFFFFFFE], v18, v26);
        return;
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_20:
  __break(1u);
}

void sub_261415DF8()
{
}

uint64_t sub_261415E28()
{
  swift_release();
  swift_release();
  sub_2613CC6A0(v0 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_inputStream, &qword_26A915068);
  sub_2613CC6A0(v0 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_inputStreamBuilder, &qword_26A915070);

  swift_release();
  swift_release();
  swift_release();

  swift_unknownObjectRelease();
  sub_2613CC6A0(v0 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_speechDetectorOutputStream, &qword_26A914C48);
  sub_26140FB6C(*(void *)(v0 + OBJC_IVAR____TtC12VoiceActions18VASpeechAPISpotter_runtimeParameters));

  return swift_release();
}

id VASpeechAPISpotter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VASpeechAPISpotter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_26141612C(uint64_t a1, int *a2)
{
  char v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *id v4 = v2;
  v4[1] = sub_261416208;
  return v6(a1);
}

uint64_t sub_261416208()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void *sub_261416300(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2613C23AC(&qword_26A914C00);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_261418050(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_261416410(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 144) = a1;
  *(void *)(v2 + 152) = a2;
  return MEMORY[0x270FA2498](sub_261416430, 0, 0);
}

uint64_t sub_261416430()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 2;
  uint64_t v3 = v0 + 10;
  uint64_t v5 = v1[18];
  uint64_t v4 = v1[19];
  id v6 = objc_allocWithZone(MEMORY[0x263F17B60]);
  uint64_t v7 = (void *)sub_2614D5378();
  id v8 = objc_msgSend(v6, sel_initWithLanguage_assetType_, v7, 7);
  v1[20] = v8;

  id v15 = self;
  uint64_t v9 = sub_2614D5378();
  v1[21] = v9;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v5;
  *(void *)(v10 + 24) = v4;
  v1[14] = sub_26141818C;
  v1[15] = v10;
  uint64_t v11 = MEMORY[0x263EF8330];
  v1[10] = MEMORY[0x263EF8330];
  v1[11] = 1107296256;
  v1[12] = sub_26140FF8C;
  v1[13] = &unk_270D55768;
  uint64_t v12 = _Block_copy(v3);
  v1[22] = v12;
  swift_retain();
  swift_release();
  v1[2] = v1;
  v1[7] = v1 + 16;
  v1[3] = sub_26141665C;
  uint64_t v13 = swift_continuation_init();
  v1[10] = v11;
  v1[11] = 0x40000000;
  v1[12] = sub_26140FFE0;
  v1[13] = &unk_2655812C8;
  v1[14] = v13;
  objc_msgSend(v15, sel_fetchAssetWithConfig_clientIdentifier_progress_completion_, v8, v9, v12, v3);
  return MEMORY[0x270FA23F0](v2);
}

uint64_t sub_26141665C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 184) = v1;
  if (v1) {
    uint64_t v2 = sub_2614167E8;
  }
  else {
    uint64_t v2 = sub_26141676C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_26141676C()
{
  uint64_t v1 = *(void **)(v0 + 168);
  uint64_t v2 = *(const void **)(v0 + 176);

  swift_bridgeObjectRelease();
  _Block_release(v2);

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_2614167E8()
{
  uint64_t v1 = (const void *)v0[22];
  uint64_t v3 = (void *)v0[20];
  uint64_t v2 = (void *)v0[21];
  swift_willThrow();

  _Block_release(v1);
  swift_willThrow();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_26141687C(uint64_t a1)
{
  uint64_t v2 = sub_2614D5168();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_2613C23AC(&qword_26A9151C0);
    uint64_t v9 = sub_2614D5C18();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    os_log_type_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    id v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_261418144(&qword_26A9151C8, MEMORY[0x263F17AC8]);
      uint64_t v16 = sub_2614D5318();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_261418144(&qword_26A9151D0, MEMORY[0x263F17AC8]);
          char v23 = sub_2614D5348();
          id v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_261416B94(uint64_t a1)
{
  uint64_t v2 = sub_2614D51A8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_2613C23AC(&qword_26A9151A8);
    uint64_t v9 = sub_2614D5C18();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    os_log_type_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v33 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = v8;
    uint64_t v32 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v13 * v10, v2);
      sub_261418144(&qword_26A9151B0, MEMORY[0x263F17AF8]);
      uint64_t v15 = sub_2614D5318();
      uint64_t v16 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v17 = v15 & ~v16;
      unint64_t v18 = v17 >> 6;
      uint64_t v19 = *(void *)(v36 + 8 * (v17 >> 6));
      uint64_t v20 = 1 << v17;
      if (((1 << v17) & v19) != 0)
      {
        uint64_t v21 = ~v16;
        do
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v17 * v13, v2);
          sub_261418144(&qword_26A9151B8, MEMORY[0x263F17AF8]);
          char v23 = sub_2614D5348();
          id v24 = *v14;
          (*v14)(v6, v2);
          if (v23)
          {
            v24(v37, v2);
            uint64_t v11 = v22;
            uint64_t v8 = v31;
            goto LABEL_4;
          }
          unint64_t v17 = (v17 + 1) & v21;
          unint64_t v18 = v17 >> 6;
          uint64_t v19 = *(void *)(v36 + 8 * (v17 >> 6));
          uint64_t v20 = 1 << v17;
          uint64_t v11 = v22;
        }
        while ((v19 & (1 << v17)) != 0);
        uint64_t v8 = v31;
      }
      uint64_t v25 = v37;
      *(void *)(v36 + 8 * v18) = v20 | v19;
      uint64_t result = (*v32)(*(void *)(v9 + 48) + v17 * v13, v25, v2);
      uint64_t v27 = *(void *)(v9 + 16);
      BOOL v28 = __OFADD__(v27, 1);
      uint64_t v29 = v27 + 1;
      if (v28) {
        break;
      }
      *(void *)(v9 + 16) = v29;
LABEL_4:
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v8) {
        return v9;
      }
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE88];
  }
  return result;
}

unint64_t sub_261416EB0()
{
  unint64_t result = qword_26A9150D8;
  if (!qword_26A9150D8)
  {
    sub_2613C5EC8(&qword_26A915048);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26A9150D8);
  }
  return result;
}

uint64_t sub_261416F0C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_261416F50()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 127, 7);
}

uint64_t sub_261416FA0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_2613F49F0;
  return sub_2614122E8(a1, v5, v6, v4, v1 + 40);
}

uint64_t sub_261417050()
{
  return sub_261417324(48);
}

uint64_t sub_261417058()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_2613E3EDC;
  *(_OWORD *)(v2 + 16) = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_261411F34;
  return sub_261417868();
}

uint64_t sub_261417130()
{
  uint64_t v1 = sub_2613C23AC(&qword_26A914C28);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

uint64_t sub_26141721C()
{
  uint64_t v2 = *(void *)(sub_2613C23AC(&qword_26A914C28) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *unint64_t v6 = v1;
  v6[1] = sub_2613E3EDC;
  return sub_26141478C((uint64_t)v6, v7, v8, v4, v5);
}

uint64_t sub_26141731C()
{
  return sub_261417324(56);
}

uint64_t sub_261417324(uint64_t a1)
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_261417378()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_2613F49F0;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return MEMORY[0x270FA2498](sub_261413CE8, 0, 0);
}

unint64_t sub_26141742C()
{
  unint64_t result = qword_26A915138;
  if (!qword_26A915138)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A915138);
  }
  return result;
}

uint64_t sub_26141746C()
{
  return type metadata accessor for VASpeechAPISpotter();
}

void sub_261417474()
{
  sub_2613F46E8(319, &qword_26A915140, &qword_26A915048);
  if (v0 <= 0x3F)
  {
    sub_2613F46E8(319, &qword_26A915148, &qword_26A915050);
    if (v1 <= 0x3F)
    {
      sub_2613F46E8(319, &qword_26A914CC8, &qword_26A914C28);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for VASpeechAPISpotter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VASpeechAPISpotter);
}

uint64_t dispatch thunk of VASpeechAPISpotter.__allocating_init(delegate:asrDelegate:configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 1064))();
}

uint64_t sub_261417624()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_261417664()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_2613F49F0;
  return sub_26141555C((uint64_t)v3, v4, v5, v2);
}

id *sub_2614176F8(id *a1)
{
  id v2 = *a1;
  return a1;
}

unint64_t sub_261417724()
{
  unint64_t result = qword_26A915168;
  if (!qword_26A915168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A915168);
  }
  return result;
}

uint64_t sub_261417778()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2614177B0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_2613F49F0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26A915170 + dword_26A915170);
  return v6(a1, v4);
}

uint64_t sub_261417868()
{
  uint64_t v1 = sub_2614D50C8();
  v0[17] = v1;
  v0[18] = *(void *)(v1 - 8);
  v0[19] = swift_task_alloc();
  v0[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_261417934, 0, 0);
}

uint64_t sub_261417934()
{
  uint64_t v1 = self;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_261417A40;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_26140FE6C;
  v0[13] = &unk_2655812B0;
  v0[14] = v2;
  objc_msgSend(v1, sel_installedLanguagesForTaskHint_completion_, 1009, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_261417A40()
{
  return MEMORY[0x270FA2498](sub_261417B20, 0, 0);
}

uint64_t sub_261417B20()
{
  uint64_t v1 = *(void *)(v0[15] + 16);
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v3 = v0[18];
    uint64_t v2 = v0[19];
    uint64_t v4 = v0[17];
    uint64_t v5 = sub_26146718C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
    uint64_t v6 = sub_2614D50A8();
    os_log_type_t v7 = sub_2614D5958();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_2613B8000, v6, v7, "General ASR model already exists", v8, 2u);
      MEMORY[0x263E38060](v8, -1, -1);
    }
    uint64_t v10 = v0[18];
    uint64_t v9 = v0[19];
    uint64_t v11 = v0[17];

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
  else
  {
    uint64_t v15 = (char *)&dword_26A915088 + dword_26A915088;
    uint64_t v14 = (void *)swift_task_alloc();
    v0[21] = v14;
    void *v14 = v0;
    v14[1] = sub_261417CF4;
    return ((uint64_t (*)(uint64_t (*)(uint64_t), void))v15)(sub_261414604, 0);
  }
}

uint64_t sub_261417CF4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_261417E3C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_261417E3C()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = (void *)v0[22];
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[18];
  uint64_t v5 = sub_26146718C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v5, v1);
  id v6 = v2;
  id v7 = v2;
  uint64_t v8 = sub_2614D50A8();
  os_log_type_t v9 = sub_2614D5978();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (void *)v0[22];
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412290;
    id v13 = v10;
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v14;
    sub_2614D5B58();
    void *v12 = v14;

    _os_log_impl(&dword_2613B8000, v8, v9, "Failed to download general ASR model: %@", v11, 0xCu);
    sub_2613C23AC(&qword_26A914C10);
    swift_arrayDestroy();
    MEMORY[0x263E38060](v12, -1, -1);
    MEMORY[0x263E38060](v11, -1, -1);
  }
  else
  {
    uint64_t v15 = (void *)v0[22];
  }
  uint64_t v16 = v0[20];
  uint64_t v17 = v0[17];
  uint64_t v18 = v0[18];

  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_261418050(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_2614D5DE8();
  __break(1u);
  return result;
}

uint64_t sub_261418144(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_26141818C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_2614181B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2614181C4()
{
  return swift_release();
}

Swift::String __swiftcall VATempDir()()
{
  uint64_t v0 = (void *)0x80000002614E29D0;
  uint64_t v1 = 0xD000000000000011;
  result._object = v0;
  result._countAndFlagsBits = v1;
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> VAfp16AVAudioBufferToFP32Array(buffer:floatBuffer:)(AVAudioPCMBuffer buffer, Swift::OpaquePointer *floatBuffer)
{
  impl = (uint64_t *)buffer.super._impl;
  Class isa = buffer.super.super.isa;
  uint64_t v4 = (const __int16 **)[(objc_class *)buffer.super.super.isa int16ChannelData];
  if (v4)
  {
    unint64_t v5 = v4;
    unint64_t v6 = [(objc_class *)isa frameLength];
    id v7 = *v5;
    uint64_t v8 = *impl;
    if (*(void *)(*impl + 16) != v6)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = sub_2613D1B04(v6, 0);
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = (uint64_t)sub_2613D8310(0, *(void *)(v8 + 16), 0, (char *)v8);
    }
    uint64_t *impl = v8;
    vDSP_vflt16(v7, 1, (float *)(v8 + 32), 1, v6);
  }
  else
  {
    sub_2613DC2B8();
    swift_allocError();
    *os_log_type_t v9 = 0xD000000000000012;
    v9[1] = 0x80000002614E29F0;
    swift_willThrow();
  }
}

uint64_t sub_261418304(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  if (a2 < 0)
  {
    uint64_t result = sub_2614D5D58();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      sub_2613C23AC(a3);
      unint64_t v5 = (void *)sub_2614D56C8();
      unint64_t v6 = v5;
      void v5[2] = a2;
      v5[4] = a1;
      if (a2 != 1)
      {
        v5[5] = a1;
        uint64_t v7 = a2 - 2;
        if (v7)
        {
          uint64_t v8 = v5 + 6;
          do
          {
            *v8++ = a1;
            swift_bridgeObjectRetain();
            --v7;
          }
          while (v7);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x263F8EE78];
    }
    return (uint64_t)v6;
  }
  return result;
}

uint64_t sub_2614183F4(void *a1, double a2)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
  objc_msgSend(v4, sel_setNumberStyle_, 1);
  objc_msgSend(v4, sel_setMaximumFractionDigits_, 4);
  objc_msgSend(v4, sel_setMinimumFractionDigits_, 2);
  unint64_t v5 = (void *)sub_2614D5378();
  objc_msgSend(v4, sel_setDecimalSeparator_, v5);

  sub_2613DBF24(a1, a1[3]);
  sub_2614D60E8();
  id v6 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, a2);
  id v7 = objc_msgSend(v4, sel_stringFromNumber_, v6);

  if (v7)
  {
    sub_2614D53A8();
  }
  sub_26141B084((uint64_t)v9, v10);
  sub_2614D5FC8();
  swift_bridgeObjectRelease();

  return sub_2613DD718((uint64_t)v9);
}

uint64_t sub_261418590(void *a1)
{
  return sub_2614183F4(a1, *v1);
}

uint64_t sub_2614185AC(void *a1, float a2)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
  objc_msgSend(v4, sel_setNumberStyle_, 1);
  objc_msgSend(v4, sel_setMaximumFractionDigits_, 4);
  objc_msgSend(v4, sel_setMinimumFractionDigits_, 2);
  unint64_t v5 = (void *)sub_2614D5378();
  objc_msgSend(v4, sel_setDecimalSeparator_, v5);

  sub_2613DBF24(a1, a1[3]);
  sub_2614D60E8();
  id v6 = objc_allocWithZone(NSNumber);
  *(float *)&double v7 = a2;
  id v8 = objc_msgSend(v6, sel_initWithFloat_, v7);
  id v9 = objc_msgSend(v4, sel_stringFromNumber_, v8);

  if (v9)
  {
    sub_2614D53A8();
  }
  sub_26141B084((uint64_t)v11, v12);
  sub_2614D5FC8();
  swift_bridgeObjectRelease();

  return sub_2613DD718((uint64_t)v11);
}

uint64_t sub_261418748(void *a1)
{
  return sub_2614185AC(a1, *v1);
}

uint64_t sub_261418770()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2614187A0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  *(void *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 24) = 1;
  return result;
}

uint64_t sub_2614187B4()
{
  return *(void *)(v0 + 16);
}

void sub_2614187C0(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  *(void *)(a1 + 16) = 0;
}

uint64_t sub_2614187D0()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  sub_2614D6088();
  sub_2614D5478();
  sub_2614D60A8();
  if (v1 != 1) {
    sub_2614D6098();
  }
  return sub_2614D60B8();
}

uint64_t sub_26141885C()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  sub_2614D5478();
  if (v1 == 1) {
    return sub_2614D60A8();
  }
  sub_2614D60A8();
  return sub_2614D6098();
}

uint64_t sub_2614188C0()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  sub_2614D6088();
  sub_2614D5478();
  sub_2614D60A8();
  if (v1 != 1) {
    sub_2614D6098();
  }
  return sub_2614D60B8();
}

void *sub_261418948@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = result[1];
  *(void *)a2 = *result;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 24) = 1;
  return result;
}

uint64_t sub_261418960(uint64_t a1)
{
  unint64_t v2 = sub_2614037F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_26141899C(uint64_t a1)
{
  unint64_t v2 = sub_2614037F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2614189D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);
  uint64_t v4 = *(void *)(a2 + 16);
  int v5 = *(unsigned __int8 *)(a2 + 24);
  BOOL v6 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v6 || (v7 = sub_2614D5FB8(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v3)
    {
      if (v5) {
        return 1;
      }
    }
    else
    {
      if (v2 == v4) {
        char v9 = v5;
      }
      else {
        char v9 = 1;
      }
      if ((v9 & 1) == 0) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_261418A5C@<X0>(uint64_t a1@<X3>, void *a2@<X8>)
{
  id v15[2] = a1;
  uint64_t v3 = sub_2614D4C78();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  BOOL v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(self, sel_defaultManager);
  id v8 = (void *)sub_2614D5378();
  unsigned __int8 v9 = objc_msgSend(v7, sel_isReadableFileAtPath_, v8);

  if (v9)
  {
    v15[0] = v3;
    sub_2614D4C28();
    uint64_t v10 = sub_2614D4C88();
    unint64_t v12 = v11;
    sub_2614D4A78();
    swift_allocObject();
    sub_2613C22A8(v10, v12);
    sub_2614D4A68();
    sub_2614D4A58();
    uint64_t v13 = v15[0];
    swift_release();
    sub_2613C2314(v10, v12);
    sub_2613C2314(v10, v12);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v13);
    sub_2613DD918();
    sub_2614D60C8();
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    *a2 = 0x8000000000000000;
    sub_2613DD918();
    sub_2614D60C8();
    return swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_261418D54()
{
  int v1 = *(NSObject **)(v0 + 16);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_26141B188;
  *(void *)(v2 + 24) = v0;
  v5[4] = sub_26141B214;
  v5[5] = v2;
  v5[0] = MEMORY[0x263EF8330];
  v5[1] = 1107296256;
  void v5[2] = sub_261418E88;
  v5[3] = &unk_270D557B8;
  uint64_t v3 = _Block_copy(v5);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t sub_261418E88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_261418EB0()
{
  uint64_t v1 = sub_2614D50C8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0[2];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_26141B254;
  *(void *)(v6 + 24) = v0;
  aBlock[4] = sub_26141BED4;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_261418E88;
  aBlock[3] = &unk_270D55808;
  id v7 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v5, v7);
  _Block_release(v7);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v5)
  {
    __break(1u);
  }
  else
  {
    unsigned __int8 v9 = *(uint64_t (**)(void))(*v0 + 96);
    if (((uint64_t (*)(uint64_t))v9)(result) >= 2)
    {
      uint64_t v10 = sub_26146718C();
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v10, v1);
      swift_retain();
      unint64_t v11 = sub_2614D50A8();
      os_log_type_t v12 = sub_2614D5978();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        uint64_t v14 = v2;
        uint64_t v15 = v1;
        *(_DWORD *)uint64_t v13 = 134217984;
        aBlock[0] = v9();
        uint64_t v2 = v14;
        uint64_t v1 = v15;
        sub_2614D5B58();
        swift_release();
        _os_log_impl(&dword_2613B8000, v11, v12, "!!!!! falling behind...LoopCount %ld", v13, 0xCu);
        MEMORY[0x263E38060](v13, -1, -1);
      }
      else
      {

        swift_release();
      }
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_2614191B4()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2614191EC()
{
  uint64_t v0 = swift_allocObject();
  sub_261419224();
  return v0;
}

uint64_t sub_261419224()
{
  uint64_t v1 = sub_2614D59B8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2614D59A8();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_2614D52A8();
  MEMORY[0x270FA5388](v6 - 8);
  sub_261405618(0, &qword_26A9151D8);
  sub_2614D5288();
  v8[1] = MEMORY[0x263F8EE78];
  sub_26141B0D4();
  sub_2613C23AC(&qword_26A9151E8);
  sub_26141B12C();
  sub_2614D5BF8();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F8F130], v1);
  *(void *)(v0 + 16) = sub_2614D59D8();
  *(void *)(v0 + 24) = 0;
  return v0;
}

uint64_t sub_261419438(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  if (a1 < 0)
  {
    uint64_t result = sub_2614D5D58();
    __break(1u);
  }
  else
  {
    uint64_t v3 = v2;
    if (a1)
    {
      uint64_t v4 = sub_2614D56C8();
      *(void *)(v4 + 16) = a1;
      bzero((void *)(v4 + 32), 4 * a1);
    }
    else
    {
      uint64_t v4 = MEMORY[0x263F8EE78];
    }
    *(void *)(v3 + 16) = v4;
    *(void *)(v3 + 24) = 0;
    return v3;
  }
  return result;
}

uint64_t sub_261419508(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(void))(*v2 + 160))();
  uint64_t v5 = v2[3];
  BOOL v6 = __OFADD__(v5, a2);
  uint64_t v7 = v5 + a2;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    uint64_t result = swift_beginAccess();
    uint64_t v8 = *(void *)(v2[2] + 16);
    if (v8)
    {
      v2[3] = v7 % v8;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_261419594(uint64_t result)
{
  int64_t v2 = *(void *)(v1 + 24);
  unint64_t v3 = *(void *)(result + 16);
  if (__OFADD__(v2, v3))
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v4 = result;
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)(v1 + 16) + 16) >= (int64_t)(v2 + v3)) {
    int64_t v5 = v2 + v3;
  }
  else {
    int64_t v5 = *(void *)(*(void *)(v1 + 16) + 16);
  }
  unint64_t v6 = v5 - v2;
  if (__OFSUB__(v5, v2)) {
    goto LABEL_14;
  }
  if (v5 < v2 || (v6 & 0x8000000000000000) != 0) {
    goto LABEL_15;
  }
  if (v3 < v6)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  swift_beginAccess();
  uint64_t v7 = (char *)swift_bridgeObjectRetain();
  sub_26141B4A8(v7, v4 + 32, 0, (2 * v6) | 1, v2, v5);
  swift_endAccess();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 <= v6) {
    return result;
  }
  if ((uint64_t)(v3 - v6) < 0)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  swift_beginAccess();
  uint64_t v8 = (char *)swift_bridgeObjectRetain();
  sub_26141B4A8(v8, v4 + 32, v5 - v2, (2 * v3) | 1, 0, v3 - v6);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2614196E8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  int64_t v2 = (uint64_t *)(v0 + 16);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4 < v1)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v1 < 0)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_2613DAF94(v3, v3 + 32, v1, (2 * v4) | 1);
    goto LABEL_8;
  }
  sub_2614D5FE8();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v5 = swift_dynamicCastClass();
  if (!v5)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = MEMORY[0x263F8EE78];
  }
  uint64_t v6 = *(void *)(v5 + 16);
  swift_release();
  if (v6 != v4 - v1) {
    goto LABEL_18;
  }
  uint64_t v7 = swift_dynamicCastClass();
  if (!v7)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x263F8EE78];
  }
LABEL_8:
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void *)(v0 + 24);
  if ((v8 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v0 = *v2;
  if (*(void *)(*v2 + 16) < v8)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_2613DAF94(v0, v0 + 32, 0, (2 * v8) | 1);
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x263F8EE78];
  }
  uint64_t v10 = *(void *)(v9 + 16);
  swift_release();
  if (v10 != v8) {
    goto LABEL_21;
  }
  uint64_t v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x263F8EE78];
  }
LABEL_15:
  swift_bridgeObjectRelease();
  sub_2613D64FC(v11);
  return v7;
}

uint64_t sub_2614198C4()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

id sub_2614198FC()
{
  uint64_t v0 = (void *)sub_2614D5378();
  id v1 = objc_msgSend(self, sel_bundleWithIdentifier_, v0);

  if (v1) {
    return v1;
  }
  id v2 = objc_msgSend(self, sel_processInfo);
  id v3 = objc_msgSend(v2, sel_environment);

  uint64_t v4 = sub_2614D52E8();
  if (!*(void *)(v4 + 16) || (unint64_t v5 = sub_2613D8F00(0xD000000000000013, 0x80000002614E2A60), (v6 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    id v24 = objc_allocWithZone(MEMORY[0x263F086E0]);
    uint64_t v25 = (void *)sub_2614D5378();
    id v1 = objc_msgSend(v24, sel_initWithPath_, v25);

    return v1;
  }
  uint64_t v7 = (uint64_t *)(*(void *)(v4 + 56) + 16 * v5);
  uint64_t v8 = *v7;
  unint64_t v9 = v7[1];
  swift_bridgeObjectRetain();
  uint64_t v10 = swift_bridgeObjectRelease();
  unint64_t v28 = 58;
  unint64_t v29 = 0xE100000000000000;
  MEMORY[0x270FA5388](v10);
  v26[2] = &v28;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_2613D7D10(0x7FFFFFFFFFFFFFFFLL, 1, sub_2613DD7C4, (uint64_t)v26, v8, v9);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v11 + 16);
  if (!v12)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v27 = v11;
  uint64_t v13 = (uint64_t *)(v11 + 56);
  while (1)
  {
    unint64_t v14 = *(v13 - 3);
    unint64_t v15 = *(v13 - 2);
    uint64_t v17 = *(v13 - 1);
    uint64_t v16 = *v13;
    uint64_t v32 = 0;
    unint64_t v33 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_2614D5488();
    uint64_t v19 = sub_2614D5B18();
    BOOL v20 = __OFADD__(v18, v19);
    id result = (id)(v18 + v19);
    if (v20) {
      break;
    }
    MEMORY[0x263E36580](result);
    unint64_t v28 = v14;
    unint64_t v29 = v15;
    uint64_t v30 = v17;
    uint64_t v31 = v16;
    sub_26141B52C();
    sub_2614D54C8();
    unint64_t v28 = 0xD000000000000020;
    unint64_t v29 = 0x80000002614E2AD0;
    sub_2614D54C8();
    swift_bridgeObjectRelease();
    id v22 = objc_allocWithZone(MEMORY[0x263F086E0]);
    char v23 = (void *)sub_2614D5378();
    swift_bridgeObjectRelease();
    id v1 = objc_msgSend(v22, sel_initWithPath_, v23, v27);

    if (v1)
    {
      swift_bridgeObjectRelease();
      return v1;
    }
    v13 += 4;
    if (!--v12) {
      goto LABEL_11;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_261419C4C()
{
  type metadata accessor for VAKeywordSpotter();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v2 = (void *)sub_2614D5378();
  id v3 = (void *)sub_2614D5378();
  id v4 = objc_msgSend(v1, sel_pathForResource_ofType_, v2, v3);

  if (v4)
  {
    uint64_t v5 = sub_2614D53A8();
  }
  else
  {

    return 0;
  }
  return v5;
}

uint64_t sub_261419D40()
{
  id v0 = sub_2614198FC();
  if (!v0) {
    return 0;
  }
  id v1 = v0;
  id v2 = (void *)sub_2614D5378();
  id v3 = (void *)sub_2614D5378();
  id v4 = objc_msgSend(v1, sel_pathForResource_ofType_, v2, v3);

  if (!v4)
  {

    return 0;
  }
  uint64_t v5 = sub_2614D53A8();

  return v5;
}

uint64_t sub_261419E08()
{
  uint64_t result = sub_261419C4C();
  if (!v1) {
    return sub_261419D40();
  }
  return result;
}

uint64_t static VABundleUtil.bundePathFallback(resource:type:)()
{
  uint64_t result = sub_261419C4C();
  if (!v1) {
    return sub_261419D40();
  }
  return result;
}

uint64_t static VABundleUtil.bundlePathFallback(path:)()
{
  return sub_26141B580();
}

id VABundleUtil.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id VABundleUtil.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VABundleUtil();
  return objc_msgSendSuper2(&v2, sel_init);
}

id VABundleUtil.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VABundleUtil();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_26141A14C(unint64_t result)
{
  int64_t v1 = *(void *)(result + 16);
  if (!v1)
  {
    __break(1u);
    goto LABEL_9;
  }
  int64_t v2 = *(void *)(*(void *)(result + 32) + 16);
  uint64_t result = v1 * v2;
  if ((unsigned __int128)(v1 * (__int128)v2) >> 64 != (v1 * v2) >> 63)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v3 = sub_2613D1B04(result, 0);
  uint64_t v6 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v1; ++i)
  {
    uint64_t v5 = swift_bridgeObjectRetain();
    sub_2613D64FC(v5);
  }
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (uint64_t)sub_2613D8310(0, *(void *)(v3 + 16), 0, (char *)v3);
  }
  vDSP_mtrans((const float *)(v6 + 32), 1, (float *)(v3 + 32), 1, v2, v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_26141A248(uint64_t result)
{
  if (!*(void *)(result + 16))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v1 = *(void *)(result + 32);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(*(void *)(v1 + 32) + 16);
    uint64_t v4 = sub_2613D1B04(*(void *)(v1 + 16), 0);
    uint64_t result = sub_261418304(v4, v3, &qword_26A914AB8);
    uint64_t v5 = (void *)result;
    unint64_t v6 = 0;
    while (!v3)
    {
LABEL_4:
      if (++v6 == v2) {
        return (uint64_t)v5;
      }
    }
    unint64_t v7 = 0;
    while (v6 < *(void *)(v1 + 16))
    {
      uint64_t v8 = *(void *)(v1 + 32 + 8 * v6);
      if (v7 >= *(void *)(v8 + 16)) {
        goto LABEL_20;
      }
      uint64_t v9 = *(void *)(v8 + 8 * v7 + 32);
      if (!*(void *)(v9 + 16)) {
        goto LABEL_21;
      }
      int v10 = *(_DWORD *)(v9 + 32);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_2613D8EC8(v5);
        uint64_t v5 = (void *)result;
      }
      if (v7 >= v5[2]) {
        goto LABEL_22;
      }
      uint64_t v11 = &v5[v7];
      uint64_t v12 = v11[4];
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      void v11[4] = v12;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_2613D8E30(v12);
        uint64_t v12 = result;
        void v11[4] = result;
      }
      if (v6 >= *(void *)(v12 + 16)) {
        goto LABEL_23;
      }
      ++v7;
      *(_DWORD *)(v12 + 4 * v6 + 32) = v10;
      if (v3 == v7) {
        goto LABEL_4;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_26141A3B0(uint64_t a1, void **a2)
{
  uint64_t v4 = *a2;
  if (*a2)
  {
LABEL_2:
    uint64_t v26 = *(void *)(a1 + 16);
    if (v26)
    {
      uint64_t v25 = a1 + 32;
      swift_bridgeObjectRetain();
      uint64_t v5 = 0;
      while (1)
      {
        uint64_t v6 = *(void *)(v25 + 8 * v5);
        uint64_t v29 = *(void *)(v6 + 16);
        if (v29) {
          break;
        }
LABEL_5:
        if (++v5 == v26)
        {
          swift_bridgeObjectRelease();
          return;
        }
      }
      uint64_t v28 = v6 + 32;
      uint64_t v7 = swift_bridgeObjectRetain();
      unint64_t v8 = 0;
      uint64_t v27 = v7;
      while (1)
      {
        if (v8 >= *(void *)(v7 + 16))
        {
          __break(1u);
          goto LABEL_22;
        }
        uint64_t v9 = *(void *)(v28 + 8 * v8);
        uint64_t v10 = *(void *)(v9 + 16);
        if (v10) {
          break;
        }
LABEL_8:
        if (++v8 == v29)
        {
          swift_bridgeObjectRelease();
          goto LABEL_5;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v11 = 0;
      while (v4)
      {
        int v12 = *(_DWORD *)(v9 + 4 * v11 + 32);
        sub_2613C23AC(&qword_26A915200);
        uint64_t v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = xmmword_2614DA500;
        *(void *)(v13 + 32) = sub_2614D58B8();
        *(void *)(v13 + 40) = sub_2614D58B8();
        *(void *)(v13 + 48) = sub_2614D58B8();
        sub_2614D5678();
        id v14 = objc_allocWithZone(NSNumber);
        LODWORD(v15) = v12;
        id v16 = objc_msgSend(v14, sel_initWithFloat_, v15);
        sub_261405618(0, (unint64_t *)&qword_26A914F90);
        uint64_t v17 = v5;
        uint64_t v18 = (void *)sub_2614D5648();
        swift_bridgeObjectRelease();
        objc_msgSend(v4, sel_setObject_forKeyedSubscript_, v16, v18);

        uint64_t v5 = v17;
        if (v10 == ++v11)
        {
          swift_bridgeObjectRelease();
          uint64_t v7 = v27;
          goto LABEL_8;
        }
      }
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    return;
  }
  sub_2613C23AC(&qword_26A915200);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_2614DA500;
  uint64_t v21 = *(void *)(a1 + 16);
  *(void *)(v20 + 32) = sub_2614D58B8();
  if (!v21)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v22 = *(void *)(a1 + 32);
  *(void *)(v20 + 40) = sub_2614D58B8();
  if (!*(void *)(v22 + 16))
  {
LABEL_24:
    __break(1u);
    return;
  }
  *(void *)(v20 + 48) = sub_2614D58B8();
  sub_2614D5678();
  id v23 = objc_allocWithZone(MEMORY[0x263F00DB0]);
  id v24 = sub_26141AF88(v20, 65568);
  if (!v2)
  {
    uint64_t v4 = v24;
    *a2 = v24;
    goto LABEL_2;
  }
}

void sub_26141A68C(uint64_t a1, void **a2)
{
  uint64_t v4 = *a2;
  if (*a2)
  {
LABEL_2:
    uint64_t v22 = *(void *)(a1 + 16);
    if (v22)
    {
      uint64_t v21 = a1 + 32;
      swift_bridgeObjectRetain();
      uint64_t v5 = 0;
      while (1)
      {
        uint64_t v6 = *(void *)(v21 + 8 * v5);
        uint64_t v7 = *(void *)(v6 + 16);
        if (v7) {
          break;
        }
LABEL_4:
        if (++v5 == v22)
        {
          swift_bridgeObjectRelease();
          return;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v8 = 0;
      while (v4)
      {
        uint64_t v9 = v8 + 1;
        int v10 = *(_DWORD *)(v6 + 4 * v8 + 32);
        sub_2613C23AC(&qword_26A915200);
        uint64_t v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = xmmword_2614DA510;
        *(void *)(v11 + 32) = sub_2614D58B8();
        *(void *)(v11 + 40) = sub_2614D58B8();
        sub_2614D5678();
        id v12 = objc_allocWithZone(NSNumber);
        LODWORD(v13) = v10;
        id v14 = objc_msgSend(v12, sel_initWithFloat_, v13);
        sub_261405618(0, (unint64_t *)&qword_26A914F90);
        double v15 = (void *)sub_2614D5648();
        swift_bridgeObjectRelease();
        objc_msgSend(v4, sel_setObject_forKeyedSubscript_, v14, v15);

        uint64_t v8 = v9;
        if (v7 == v9)
        {
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
      }
      __break(1u);
      goto LABEL_16;
    }
    return;
  }
  sub_2613C23AC(&qword_26A915200);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_2614DA510;
  uint64_t v18 = *(void *)(a1 + 16);
  *(void *)(v17 + 32) = sub_2614D58B8();
  if (!v18)
  {
LABEL_16:
    __break(1u);
    return;
  }
  *(void *)(v17 + 40) = sub_2614D58B8();
  sub_2614D5678();
  id v19 = objc_allocWithZone(MEMORY[0x263F00DB0]);
  id v20 = sub_26141AF88(v17, 65568);
  if (!v2)
  {
    uint64_t v4 = v20;
    *a2 = v20;
    goto LABEL_2;
  }
}

void sub_26141A8E4(uint64_t a1)
{
}

void sub_26141A910(uint64_t a1, void (*a2)(uint64_t, id *))
{
  id v3 = 0;
  a2(a1, &v3);
  if (v2)
  {
  }
  else if (!v3)
  {
    __break(1u);
  }
}

void sub_26141A960(id a1, uint64_t *a2)
{
  id v4 = a1;
  uint64_t v5 = &selRef_tokenName;
  if (*a2) {
    goto LABEL_12;
  }
  uint64_t v6 = (uint64_t)objc_msgSend(a1, sel_shape);
  uint64_t v7 = sub_261405618(0, (unint64_t *)&qword_26A914F90);
  uint64_t v2 = sub_2614D5658();

  if ((v2 & 0xC000000000000001) != 0) {
    goto LABEL_64;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
  {
    __break(1u);
    goto LABEL_66;
  }
  for (id i = *(id *)(v2 + 48); ; id i = (id)MEMORY[0x263E36D80](2, v2))
  {
    uint64_t v9 = i;
    swift_bridgeObjectRelease();
    id v10 = objc_msgSend(v9, sel_integerValue);

    uint64_t v2 = sub_2613D1B04((unint64_t)v10, 0);
    id v11 = [v4 v5[125]];
    uint64_t v6 = sub_2614D5658();

    if ((v6 & 0xC000000000000001) != 0)
    {
LABEL_66:
      id v12 = (id)MEMORY[0x263E36D80](1, v6);
    }
    else
    {
      if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
      {
        __break(1u);
LABEL_68:
        id v16 = (id)MEMORY[0x263E36D80](0, v7);
        goto LABEL_11;
      }
      id v12 = *(id *)(v6 + 40);
    }
    double v13 = v12;
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(v13, sel_integerValue);

    uint64_t v2 = sub_261418304(v2, (uint64_t)v14, &qword_26A914AB8);
    id v15 = [v4 v5[125]];
    uint64_t v7 = sub_2614D5658();

    if ((v7 & 0xC000000000000001) != 0) {
      goto LABEL_68;
    }
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      break;
    }
    id v16 = *(id *)(v7 + 32);
LABEL_11:
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    id v18 = objc_msgSend(v17, sel_integerValue);

    *a2 = sub_261418304(v2, (uint64_t)v18, &qword_26A915020);
LABEL_12:
    id v19 = objc_msgSend(v4, v5[125], v41);
    sub_261405618(0, (unint64_t *)&qword_26A914F90);
    uint64_t v7 = sub_2614D5658();

    if ((v7 & 0xC000000000000001) != 0)
    {
      while (1)
      {
        id v20 = (id)MEMORY[0x263E36D80](0, v7);
LABEL_15:
        uint64_t v21 = v20;
        swift_bridgeObjectRelease();
        uint64_t v7 = (uint64_t)objc_msgSend(v21, sel_integerValue);

        if (v7 < 0) {
          break;
        }
        if (!v7) {
          return;
        }
        unint64_t v22 = 0;
        uint64_t v41 = v7;
        while (v22 != v7)
        {
          id v23 = [v4 v5[125]];
          uint64_t v7 = sub_2614D5658();

          if ((v7 & 0xC000000000000001) != 0)
          {
            id v24 = (id)MEMORY[0x263E36D80](1, v7);
          }
          else
          {
            if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
              goto LABEL_58;
            }
            id v24 = *(id *)(v7 + 40);
          }
          uint64_t v25 = v24;
          swift_bridgeObjectRelease();
          uint64_t v7 = (uint64_t)objc_msgSend(v25, sel_integerValue);

          if (v7 < 0) {
            goto LABEL_59;
          }
          if (v7)
          {
            unint64_t v26 = 0;
            uint64_t v42 = v7;
            while (v26 != v7)
            {
              id v27 = [v4 v5[125]];
              uint64_t v7 = sub_2614D5658();

              if ((v7 & 0xC000000000000001) != 0)
              {
                id v28 = (id)MEMORY[0x263E36D80](2, v7);
              }
              else
              {
                if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL) {
                  goto LABEL_55;
                }
                id v28 = *(id *)(v7 + 48);
              }
              uint64_t v29 = v28;
              swift_bridgeObjectRelease();
              unint64_t v30 = (unint64_t)objc_msgSend(v29, sel_integerValue);

              if ((v30 & 0x8000000000000000) != 0) {
                goto LABEL_56;
              }
              if (v30)
              {
                unint64_t v31 = 0;
                while (v30 != v31)
                {
                  sub_2613C23AC(&qword_26A915200);
                  uint64_t v32 = swift_allocObject();
                  *(_OWORD *)(v32 + 16) = xmmword_2614DA500;
                  *(void *)(v32 + 32) = sub_2614D58B8();
                  *(void *)(v32 + 40) = sub_2614D58B8();
                  *(void *)(v32 + 48) = sub_2614D58B8();
                  sub_2614D5678();
                  unint64_t v33 = (void *)sub_2614D5648();
                  swift_bridgeObjectRelease();
                  id v34 = objc_msgSend(v4, sel_objectForKeyedSubscript_, v33);

                  objc_msgSend(v34, sel_floatValue);
                  int v36 = v35;

                  uint64_t v7 = *a2;
                  if (!*a2) {
                    goto LABEL_63;
                  }
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v7 = (uint64_t)sub_26141B2E0((void *)v7);
                  }
                  if (v22 >= *(void *)(v7 + 16)) {
                    goto LABEL_51;
                  }
                  uint64_t v2 = (uint64_t)v4;
                  uint64_t v5 = (char **)(v7 + 32);
                  id v4 = (id)(8 * v22);
                  uint64_t v37 = *(void **)(v7 + 32 + 8 * v22);
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  *(void *)(v7 + 32 + 8 * v22) = v37;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    uint64_t v37 = sub_2613D8EC8(v37);
                    v5[v22] = (char *)v37;
                  }
                  if (v26 >= v37[2]) {
                    goto LABEL_52;
                  }
                  uint64_t v5 = (char **)(v37 + 4);
                  os_log_type_t v39 = (char *)v37[v26 + 4];
                  char v40 = swift_isUniquelyReferenced_nonNull_native();
                  v5[v26] = v39;
                  if ((v40 & 1) == 0)
                  {
                    os_log_type_t v39 = sub_2613D8E30((uint64_t)v39);
                    v5[v26] = v39;
                  }
                  id v4 = (id)v2;
                  if (v31 >= *((void *)v39 + 2)) {
                    goto LABEL_53;
                  }
                  *(_DWORD *)&v39[4 * v31 + 32] = v36;
                  *a2 = v7;
                  if (v30 == ++v31) {
                    goto LABEL_26;
                  }
                }
                __break(1u);
LABEL_51:
                __break(1u);
LABEL_52:
                __break(1u);
LABEL_53:
                __break(1u);
                break;
              }
LABEL_26:
              ++v26;
              uint64_t v7 = v42;
              uint64_t v5 = &selRef_tokenName;
              if (v26 == v42) {
                goto LABEL_18;
              }
            }
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
            break;
          }
LABEL_18:
          ++v22;
          uint64_t v7 = v41;
          if (v22 == v41) {
            return;
          }
        }
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
      }
    }
    else
    {
      if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v20 = *(id *)(v7 + 32);
        goto LABEL_15;
      }
      __break(1u);
    }
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    ;
  }
  __break(1u);
}

uint64_t sub_26141AF54(void *a1)
{
  uint64_t v2 = 0;
  sub_26141A960(a1, &v2);
  uint64_t result = v2;
  if (!v2) {
    __break(1u);
  }
  return result;
}

id sub_26141AF88(uint64_t a1, uint64_t a2)
{
  v9[1] = *(id *)MEMORY[0x263EF8340];
  sub_261405618(0, (unint64_t *)&qword_26A914F90);
  id v4 = (void *)sub_2614D5648();
  swift_bridgeObjectRelease();
  v9[0] = 0;
  id v5 = objc_msgSend(v2, sel_initWithShape_dataType_error_, v4, a2, v9);

  if (v5)
  {
    id v6 = v9[0];
  }
  else
  {
    id v7 = v9[0];
    sub_2614D4BF8();

    swift_willThrow();
  }
  return v5;
}

uint64_t sub_26141B084(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_26141B0D4()
{
  unint64_t result = qword_26A9151E0;
  if (!qword_26A9151E0)
  {
    sub_2614D59A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9151E0);
  }
  return result;
}

unint64_t sub_26141B12C()
{
  unint64_t result = qword_26A9151F0;
  if (!qword_26A9151F0)
  {
    sub_2613C5EC8(&qword_26A9151E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9151F0);
  }
  return result;
}

uint64_t (*sub_26141B188())(unsigned char *, void)
{
  unint64_t result = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v0 + 112))(v3);
  if (__OFADD__(*v2, 1))
  {
    __break(1u);
  }
  else
  {
    ++*v2;
    return (uint64_t (*)(unsigned char *, void))result(v3, 0);
  }
  return result;
}

uint64_t sub_26141B204()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_26141B214()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_26141B23C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_26141B24C()
{
  return swift_release();
}

uint64_t (*sub_26141B254())(unsigned char *, void)
{
  unint64_t result = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v0 + 112))(v3);
  if (__OFSUB__(*v2, 1))
  {
    __break(1u);
  }
  else
  {
    --*v2;
    return (uint64_t (*)(unsigned char *, void))result(v3, 0);
  }
  return result;
}

uint64_t sub_26141B2D0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void *sub_26141B2E0(void *a1)
{
  return sub_2613D8530(0, a1[2], 0, a1, &qword_26A914AA8, &qword_26A915020);
}

char *sub_26141B318(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v8 = *v6;
  int64_t v9 = *((void *)*v6 + 2);
  if (v9 < a2)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v11 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v13 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v14 = v13 - v11;
  if (__OFSUB__(v13, v11))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  int64_t v15 = v9 + v14;
  if (__OFADD__(v9, v14))
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  unint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!result || v15 > *((void *)v8 + 3) >> 1)
  {
    if (v9 <= v15) {
      int64_t v18 = v9 + v14;
    }
    else {
      int64_t v18 = v9;
    }
    unint64_t result = sub_2613D8310(result, v18, 1, v8);
    uint64_t v8 = result;
  }
  id v19 = &v8[4 * a1 + 32];
  if (!v14) {
    goto LABEL_21;
  }
  uint64_t v20 = *((void *)v8 + 2);
  BOOL v21 = __OFSUB__(v20, a2);
  uint64_t v22 = v20 - a2;
  if (v21) {
    goto LABEL_30;
  }
  if (v22 < 0)
  {
LABEL_32:
    unint64_t result = (char *)sub_2614D5DE8();
    __break(1u);
    return result;
  }
  unint64_t result = &v19[4 * v13];
  id v23 = &v8[4 * a2 + 32];
  if (result != v23 || result >= &v23[4 * v22]) {
    unint64_t result = (char *)memmove(result, v23, 4 * v22);
  }
  uint64_t v24 = *((void *)v8 + 2);
  BOOL v21 = __OFADD__(v24, v14);
  uint64_t v25 = v24 + v14;
  if (v21)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  *((void *)v8 + 2) = v25;
LABEL_21:
  if (v13 >= 1) {
    unint64_t result = (char *)memcpy(v19, (const void *)(a4 + 4 * a5), 4 * v13);
  }
  *id v6 = v8;
  return result;
}

char *sub_26141B4A8(char *result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, int64_t a6)
{
  if ((a5 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v7 = *(void *)(*(void *)v6 + 16);
  if (v7 < a5 || (uint64_t)v7 < a6) {
    goto LABEL_14;
  }
  if (a6 < 0)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    return result;
  }
  if (*(void *)v6 + 4 * a5 + 32 != a2 + 4 * a3) {
    return sub_26141B318(a5, a6, (uint64_t)result, a2, a3, a4);
  }
  if ((uint64_t)(a4 >> 1) < a3) {
    goto LABEL_16;
  }
  if (a5 != a3 || a4 >> 1 != a6) {
    return sub_26141B318(a5, a6, (uint64_t)result, a2, a3, a4);
  }
  return result;
}

unint64_t sub_26141B52C()
{
  unint64_t result = qword_26A9151F8;
  if (!qword_26A9151F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9151F8);
  }
  return result;
}

uint64_t sub_26141B580()
{
  uint64_t v0 = sub_2614D50C8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = self;
  id v5 = objc_msgSend(v4, sel_defaultManager);
  uint64_t v6 = (void *)sub_2614D5378();
  unsigned int v7 = objc_msgSend(v5, sel_fileExistsAtPath_, v6);

  if (!v7)
  {
    int v36 = v3;
    uint64_t v37 = v1;
    uint64_t v38 = v0;
    uint64_t v13 = (void *)sub_2614D5378();
    id v14 = objc_msgSend(v13, sel_pathExtension);

    sub_2614D53A8();
    int64_t v15 = (void *)sub_2614D5378();
    id v16 = objc_msgSend(v15, sel_stringByDeletingPathExtension);

    sub_2614D53A8();
    uint64_t v17 = sub_261419C4C();
    if (v18)
    {
      uint64_t v12 = v17;
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v12 = sub_261419D40();
      unint64_t v19 = v20;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v19)
      {
        uint64_t v40 = 0;
        unint64_t v41 = 0xE000000000000000;
        sub_2614D5C38();
        sub_2614D54D8();
        sub_2614D54D8();
        sub_2614D54D8();
        goto LABEL_12;
      }
    }
    id v21 = objc_msgSend(v4, sel_defaultManager);
    uint64_t v22 = (void *)sub_2614D5378();
    unsigned __int8 v23 = objc_msgSend(v21, sel_isReadableFileAtPath_, v22);

    uint64_t v24 = v38;
    if (v23) {
      return v12;
    }
    uint64_t v25 = sub_26146718C();
    unint64_t v26 = v36;
    uint64_t v27 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v36, v25, v24);
    swift_bridgeObjectRetain_n();
    id v28 = sub_2614D50A8();
    os_log_type_t v29 = sub_2614D5978();
    if (os_log_type_enabled(v28, v29))
    {
      unint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      *(_DWORD *)unint64_t v30 = 136315138;
      os_log_type_t v39 = v30 + 4;
      uint64_t v40 = v31;
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_2613D875C(v12, v19, &v40);
      sub_2614D5B58();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2613B8000, v28, v29, "File not readable in %s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x263E38060](v31, -1, -1);
      MEMORY[0x263E38060](v30, -1, -1);

      (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v38);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v24);
    }
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    sub_2614D5C38();
    swift_bridgeObjectRelease();
    uint64_t v40 = 0xD000000000000015;
    unint64_t v41 = 0x80000002614E2BC0;
    sub_2614D54D8();
    swift_bridgeObjectRelease();
LABEL_12:
    uint64_t v33 = v40;
    unint64_t v32 = v41;
    sub_2613DC2B8();
    swift_allocError();
    uint64_t *v34 = v33;
    v34[1] = v32;
    swift_willThrow();
    return v12;
  }
  id v8 = objc_allocWithZone(NSString);
  swift_bridgeObjectRetain();
  int64_t v9 = (void *)sub_2614D5378();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v8, sel_initWithString_, v9);

  id v11 = objc_msgSend(v10, sel_stringByStandardizingPath);
  uint64_t v12 = sub_2614D53A8();

  return v12;
}

uint64_t type metadata accessor for VABundleUtil()
{
  return self;
}

unint64_t sub_26141BAFC()
{
  unint64_t result = qword_26A915208;
  if (!qword_26A915208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A915208);
  }
  return result;
}

unint64_t sub_26141BB54()
{
  unint64_t result = qword_26A915210;
  if (!qword_26A915210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A915210);
  }
  return result;
}

unint64_t sub_26141BBAC()
{
  unint64_t result = qword_26A915218;
  if (!qword_26A915218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A915218);
  }
  return result;
}

unint64_t sub_26141BC04()
{
  unint64_t result = qword_26A915220;
  if (!qword_26A915220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A915220);
  }
  return result;
}

uint64_t sub_26141BC58()
{
  return MEMORY[0x263F8D388];
}

unint64_t sub_26141BC68()
{
  unint64_t result = qword_26A915228;
  if (!qword_26A915228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A915228);
  }
  return result;
}

uint64_t sub_26141BCBC()
{
  return MEMORY[0x263F8D398];
}

uint64_t sub_26141BCC8()
{
  return MEMORY[0x263F8D390];
}

ValueMetadata *type metadata accessor for CustomDouble()
{
  return &type metadata for CustomDouble;
}

ValueMetadata *type metadata accessor for CustomFloat()
{
  return &type metadata for CustomFloat;
}

uint64_t initializeWithCopy for AnyStringKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AnyStringKey(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

__n128 initializeWithTake for AnyStringKey(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AnyStringKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyStringKey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyStringKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyStringKey()
{
  return &type metadata for AnyStringKey;
}

uint64_t type metadata accessor for LoopCounter()
{
  return self;
}

uint64_t type metadata accessor for VAFixedLengthQueue()
{
  return self;
}

uint64_t sub_26141BEE8()
{
  sub_2613DC2B8();
  swift_allocError();
  *uint64_t v0 = 0xD00000000000001ELL;
  v0[1] = 0x80000002614E2BE0;
  return swift_willThrow();
}

uint64_t VAStrategyLayer.deinit()
{
  return v0;
}

uint64_t VAStrategyLayer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_26141BF64()
{
  return swift_allocObject();
}

uint64_t sub_26141BF74()
{
  return v0;
}

uint64_t dispatch thunk of VAStrategyLayerDelegate.keywordSpotterDidUpdateScores(verboseLog:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of VAStrategyLayerDelegate.keywordSpotterShouldTriggerKeyword(keywordResult:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for VAStrategyLayer()
{
  return self;
}

uint64_t method lookup function for VAStrategyLayer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VAStrategyLayer);
}

uint64_t dispatch thunk of VAStrategyLayer.handleKeywordResult(_:uuid:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 80))();
}

uint64_t dispatch thunk of VAStrategyLayer.speechStarted()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of VAStrategyLayer.speechStopped()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of VAStrategyProvider.getStrategy(delegate:params:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

void *sub_26141C088()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

void sub_26141C0CC(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 32);
  *(void *)(v1 + 32) = a1;
}

uint64_t VAA2AAudioEncoderModelV3.__allocating_init(computeUnits:reuseBuffers:)(uint64_t a1, char a2)
{
  uint64_t v4 = swift_allocObject();
  VAA2AAudioEncoderModelV3.init(computeUnits:reuseBuffers:)(a1, a2);
  return v4;
}

uint64_t VAA2AAudioEncoderModelV3.init(computeUnits:reuseBuffers:)(uint64_t a1, char a2)
{
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = 0;
  *(unsigned char *)(v2 + 40) = a2;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00D90]), sel_init);
  sub_26141C36C();
  sub_2614D55E8();
  sub_2614D55E8();
  if (v12 == v10 && v13 == v11)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v5 = 0;
  }
  else
  {
    char v6 = sub_2614D5FB8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v6)
    {
      uint64_t v5 = 0;
    }
    else
    {
      sub_2614D55E8();
      sub_2614D55E8();
      if (v12 == v10 && v13 == v11)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v7 = sub_2614D5FB8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v7 & 1) == 0) {
          goto LABEL_12;
        }
      }
      uint64_t v5 = 3;
    }
  }
  objc_msgSend(v4, sel_setComputeUnits_, v5);
LABEL_12:
  type metadata accessor for aa_encoder_20240530();
  uint64_t v8 = sub_261429418(v4);
  if (v3)
  {
    swift_bridgeObjectRelease();

    type metadata accessor for VAA2AAudioEncoderModelV3();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)(v2 + 16) = v8;
  }
  return v2;
}

unint64_t sub_26141C36C()
{
  unint64_t result = qword_26A915230;
  if (!qword_26A915230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A915230);
  }
  return result;
}

uint64_t type metadata accessor for VAA2AAudioEncoderModelV3()
{
  return self;
}

unsigned char *sub_26141C3E4(uint64_t a1)
{
  id v4 = v1;
  char v6 = (void (*)(unsigned char *, uint64_t))(*(uint64_t (**)(unsigned char *))(*(void *)v1 + 152))(v21);
  sub_26141A68C(a1, v7);
  if (v2)
  {
    v6(v21, 1);
  }
  else
  {
    uint64_t v9 = ((uint64_t (*)(unsigned char *, void))v6)(v21, 0);
    uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 136))(v9);
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      type metadata accessor for aa_encoder_20240530Input();
      id v12 = v11;
      sub_26142AE30();
      uint64_t v13 = (*(uint64_t (**)(void))(**((void **)v4 + 2) + 136))();
      int64_t v15 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v13 + 88))(v13);
      swift_release();
      uint64_t v3 = v21;
      id v16 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v4 + 128))(v21);
      sub_26141A960(v15, v17);
      uint64_t v18 = v16(v21, 0);
      uint64_t v19 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 112))(v18);
      if (v19)
      {
        uint64_t v3 = (unsigned char *)v19;
        if ((v4[40] & 1) == 0)
        {
          (*(void (**)(void))(*(void *)v4 + 120))(0);
          (*(void (**)(void))(*(void *)v4 + 144))(0);
        }
        swift_release();
      }
      else
      {
        sub_2613DC2B8();
        swift_allocError();
        void *v20 = 0xD00000000000001ELL;
        v20[1] = 0x80000002614E2C50;
        swift_willThrow();

        swift_release();
      }
    }
    else
    {
      sub_2613DC2B8();
      swift_allocError();
      void *v14 = 0xD00000000000001DLL;
      v14[1] = 0x80000002614E2C30;
      swift_willThrow();
    }
  }
  return v3;
}

uint64_t VAA2AAudioEncoderModelV3.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t VAA2AAudioEncoderModelV3.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_26141C770()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 168))();
}

uint64_t method lookup function for VAA2AAudioEncoderModelV3(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VAA2AAudioEncoderModelV3);
}

uint64_t dispatch thunk of VAA2AAudioEncoderModelV3.__allocating_init(computeUnits:reuseBuffers:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of VAA2AAudioEncoderModelV3.predict(featureExtractionBuffer:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t sub_26141C82C()
{
  sub_261405618(0, (unint64_t *)&qword_26A9152B0);
  uint64_t result = OS_os_log.init(category:)();
  qword_26A920180 = result;
  return result;
}

float sub_26141C888()
{
  swift_beginAccess();
  return *(float *)(v0 + 120);
}

uint64_t sub_26141C8BC(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 120) = a1;
  return result;
}

float sub_26141C8FC()
{
  swift_beginAccess();
  return *(float *)(v0 + 124);
}

uint64_t sub_26141C930(float a1)
{
  uint64_t result = swift_beginAccess();
  *(float *)(v1 + 124) = a1;
  return result;
}

uint64_t (*sub_26141C970())()
{
  return j__swift_endAccess;
}

void sub_26141C9C4(void *a1)
{
}

void sub_26141CA00(void *a1)
{
  uint64_t v2 = v1;
  id v4 = (void *)MEMORY[0x263F8EED0];
  uint64_t v5 = *(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *a1) + 0x78);
  char v6 = (void *)v5();
  (*(void (**)(void))((*v4 & *v6) + 0x68))();

  sub_26141D878(1, 0, v35);
  sub_26141EB18((uint64_t)v35, (uint64_t)v32);
  sub_26141EB18((uint64_t)v35, (uint64_t)v39);
  if (!v40)
  {
    if (qword_26A919960 != -1) {
      goto LABEL_22;
    }
    goto LABEL_4;
  }
  uint64_t v7 = swift_bridgeObjectRelease();
  while (1)
  {
    uint64_t v8 = *(uint64_t (**)(void))((*v4 & *a1) + 0x90);
    uint64_t v9 = (void *)((uint64_t (*)(uint64_t))v8)(v7);
    uint64_t v10 = (*(uint64_t (**)(void))((*v4 & *v9) + 0x100))();

    uint64_t v11 = (void *)v8();
    uint64_t v12 = (*(uint64_t (**)(void))((*v4 & *v11) + 0x118))();

    *(void *)(v2 + 104) = v10;
    *(void *)(v2 + 112) = v12;
    uint64_t v13 = v34;
    *(void *)(v2 + 16) = v32[0];
    if (!v13) {
      break;
    }
    uint64_t v14 = v32[2];
    int v15 = v33;
    *(void *)(v2 + 24) = v32[1];
    *(void *)(v2 + 32) = v14;
    *(_DWORD *)(v2 + 40) = v15;
    if (!*(void *)(v13 + 16))
    {
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    unint64_t v16 = sub_2613D8F00(0x4474757074754F3CLL, 0xEC0000003E617461);
    if ((v17 & 1) == 0) {
      goto LABEL_17;
    }
    sub_2613DD768(*(void *)(v13 + 56) + 32 * v16, (uint64_t)v30);
    sub_261409630(v30, v31);
    swift_dynamicCast();
    *(_OWORD *)(v2 + 48) = v29;
    uint64_t v18 = v34;
    if (!v34) {
      goto LABEL_24;
    }
    if (!*(void *)(v34 + 16)) {
      goto LABEL_18;
    }
    unint64_t v19 = sub_2613D8F00(0x61447475706E493CLL, 0xEB000000003E6174);
    if ((v20 & 1) == 0) {
      goto LABEL_19;
    }
    sub_2613DD768(*(void *)(v18 + 56) + 32 * v19, (uint64_t)v30);
    sub_261409630(v30, v31);
    swift_dynamicCast();
    *(_OWORD *)(v2 + 64) = v29;
    uint64_t v21 = v34;
    if (!v34) {
      goto LABEL_25;
    }
    if (*(void *)(v34 + 16))
    {
      unint64_t v22 = sub_2613D8F00(0xD000000000000011, 0x80000002614E2D00);
      if (v23)
      {
        sub_2613DD768(*(void *)(v21 + 56) + 32 * v22, (uint64_t)v30);
        sub_261409630(v30, v31);
        sub_2613C23AC(&qword_26A915240);
        uint64_t v24 = swift_dynamicCast();
        *(_OWORD *)(v2 + 80) = v29;
        *(void *)(v2 + 96) = 54;
        uint64_t v25 = (void *)((uint64_t (*)(uint64_t))v5)(v24);
        float v26 = (*(float (**)(void))((*v4 & *v25) + 0x80))();

        *(float *)(v2 + 120) = v26;
        uint64_t v27 = (void *)v5();
        float v28 = (*(float (**)(void))((*v4 & *v27) + 0x98))();

        *(float *)(v2 + 124) = v28;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_21;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    swift_once();
LABEL_4:
    OS_os_log.info(_:_:)((uint64_t)"Failed to init neural net in normal flow, will init it on CPU directly", 70, 2, MEMORY[0x263F8EE78]);
    sub_26141D878(0, 0, v36);
    swift_bridgeObjectRelease();
    sub_26141EB18((uint64_t)v36, (uint64_t)v32);
    uint64_t v7 = sub_26141EB18((uint64_t)v36, (uint64_t)v37);
    if (!v38)
    {
      type metadata accessor for NeuralNet();
      OS_os_log.info(_:_:)((uint64_t)"Failed to init neural net after two attempts", 44, 2, MEMORY[0x263F8EE78]);

      swift_deallocPartialClassInstance();
      return;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
}

uint64_t sub_26141CF18()
{
  espresso_context_destroy();
  espresso_plan_destroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_26141CF68(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3 != v1[13])
  {
    __break(1u);
    goto LABEL_10;
  }
  if (!v3)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*(void *)(*(void *)(a1 + 32) + 16) != v1[14])
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_26147355C();
  sub_261473574();
  sub_26147357C((uint64_t)&v9);
  sub_261473568();
  sub_261473574();
  uint64_t v4 = sub_26147357C((uint64_t)&v10);
  MEMORY[0x270FA5388](v4);
  sub_261473274((uint64_t (*)(void))sub_26141EBA4);
  sub_2614734AC(v1[2]);
  uint64_t v5 = v1[11];
  if (v5 < 0)
  {
LABEL_12:
    __break(1u);
    swift_unexpectedError();
    __break(1u);
    swift_unexpectedError();
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
    return result;
  }
  if (v5)
  {
    uint64_t v6 = sub_2614D56C8();
    *(void *)(v6 + 16) = v5;
    bzero((void *)(v6 + 32), 4 * v5);
  }
  else
  {
    uint64_t v6 = MEMORY[0x263F8EE78];
  }
  uint64_t v8 = sub_2613D1BF8(v6, v2[10]);
  MEMORY[0x270FA5388](v8);
  sub_261473274((uint64_t (*)(void))sub_26141EC50);
  return v8;
}

uint64_t sub_26141D1D0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_2613C23AC(&qword_26A9152A8);
  uint64_t v6 = sub_2614D5DC8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      uint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      uint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_261409630(v24, v35);
      }
      else
      {
        sub_2613DD768((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_2614D6088();
      sub_2614D5478();
      uint64_t result = sub_2614D60B8();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      int v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      void *v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_261409630(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

_OWORD *sub_26141D4D0(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_2613D8F00(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_26141D690();
      goto LABEL_7;
    }
    sub_26141D1D0(v15, a4 & 1);
    unint64_t v21 = sub_2613D8F00(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      int64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_2614D5FF8();
    __break(1u);
    return result;
  }
LABEL_7:
  int64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    unint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    sub_2613DD718((uint64_t)v19);
    return sub_261409630(a1, v19);
  }
LABEL_13:
  sub_26141D624(v12, a2, a3, a1, v18);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_26141D624(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_261409630(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

void *sub_26141D690()
{
  uint64_t v1 = v0;
  sub_2613C23AC(&qword_26A9152A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2614D5DB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_2613DD768(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    sub_261409630(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_26141D878(char a1@<W2>, int a2@<W3>, uint64_t *a3@<X8>)
{
  LODWORD(v3) = a2;
  v114[1] = *MEMORY[0x263EF8340];
  unint64_t v6 = sub_2614D4B78();
  unint64_t v7 = *(char **)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v102 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2614D5408();
  MEMORY[0x270FA5388](v9 - 8);
  char v106 = (char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = (unint64_t)&unk_26A919000;
  unint64_t v103 = (unint64_t)v7;
  if (a1)
  {
    v114[0] = espresso_create_context();
    if (v114[0])
    {
      if (qword_26A919960 != -1) {
        goto LABEL_118;
      }
      goto LABEL_4;
    }
    if (qword_26A919960 != -1) {
      swift_once();
    }
    uint64_t v14 = MEMORY[0x263F8EE78];
    OS_os_log.info(_:_:)((uint64_t)"Not able to utilized ANE; will use CPU instead", 46, 2, MEMORY[0x263F8EE78]);
    v114[0] = espresso_create_context();
    uint64_t v13 = v14;
  }
  else
  {
    v114[0] = espresso_create_context();
    if (qword_26A919960 != -1) {
LABEL_113:
    }
      swift_once();
    uint64_t v13 = MEMORY[0x263F8EE78];
  }
  OS_os_log.info(_:_:)((uint64_t)"Will run acoustic model on CPU", 30, 2, v13);
  int v105 = 0;
  if ((v3 & 1) == 0) {
    goto LABEL_5;
  }
LABEL_14:
  if (*(void *)(v11 + 2400) != -1) {
    swift_once();
  }
  sub_2613C23AC(qword_26A914E40);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_2614D81E0;
  *(void *)(v15 + 56) = sub_2613C23AC(&qword_26A915298);
  *(void *)(v15 + 64) = sub_26141F0A4(&qword_26A9152A0, &qword_26A915298);
  *(void *)(v15 + 32) = v114;
  OS_os_log.debug(_:_:)((uint64_t)"Pointer of espresso_context_ref_t %@", 36, 2, v15);
  swift_bridgeObjectRelease();
  uint64_t plan = espresso_create_plan();
  if (!plan) {
LABEL_119:
  }
    __break(1u);
  uint64_t v110 = plan;
LABEL_18:
  if (*(void *)(v11 + 2400) != -1) {
LABEL_109:
  }
    swift_once();
  sub_2613C23AC(qword_26A914E40);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_2614D81E0;
  *(void *)(v17 + 56) = sub_2613C23AC(&qword_26A915288);
  *(void *)(v17 + 64) = sub_26141F0A4(&qword_26A915290, &qword_26A915288);
  *(void *)(v17 + 32) = &v110;
  OS_os_log.debug(_:_:)((uint64_t)"Pointer of espresso_plan_ref_t", 30, 2, v17);
  swift_bridgeObjectRelease();
LABEL_20:
  sub_261437650();
  swift_bridgeObjectRetain();
  char v18 = sub_2614D5568();
  swift_bridgeObjectRelease();
  if (v18)
  {
    uint64_t v19 = sub_261419E08();
    if (v20) {
      uint64_t v21 = v19;
    }
    else {
      uint64_t v21 = 0;
    }
    uint64_t v108 = v21;
    if (v20) {
      unint64_t v22 = v20;
    }
    else {
      unint64_t v22 = 0xE000000000000000;
    }
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_261419E08();
    if (v24) {
      uint64_t v25 = v23;
    }
    else {
      uint64_t v25 = 0;
    }
    if (v24) {
      unint64_t v26 = v24;
    }
    else {
      unint64_t v26 = 0xE000000000000000;
    }
    if (v3)
    {
      if (*(void *)(v11 + 2400) != -1) {
        swift_once();
      }
      sub_2613C23AC(qword_26A914E40);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_2614D81E0;
      *(void *)(v27 + 56) = MEMORY[0x263F8D310];
      *(void *)(v27 + 64) = sub_26141EFD8();
      *(void *)(v27 + 32) = v108;
      *(void *)(v27 + 40) = v22;
      OS_os_log.debug(_:_:)((uint64_t)"Path for the model file is %@", 29, 2, v27);
    }
  }
  else
  {
    unint64_t v101 = v6;
    int v107 = (int)v3;
    uint64_t v104 = a3;
    id v28 = objc_allocWithZone(NSString);
    swift_bridgeObjectRetain();
    unint64_t v29 = (void *)sub_2614D5378();
    swift_bridgeObjectRelease();
    id v30 = objc_msgSend(v28, sel_initWithString_, v29);

    id v31 = objc_msgSend(v30, sel_stringByStandardizingPath);
    uint64_t v32 = sub_2614D53A8();
    uint64_t v34 = v33;

    *(void *)&long long v112 = v32;
    *((void *)&v112 + 1) = v34;
    swift_bridgeObjectRetain();
    sub_2614D54D8();
    unint64_t v26 = *((void *)&v112 + 1);
    uint64_t v25 = v112;
    int v35 = self;
    id v36 = objc_msgSend(v35, sel_defaultManager);
    uint64_t v37 = (void *)sub_2614D5378();
    unsigned __int8 v38 = objc_msgSend(v36, sel_isReadableFileAtPath_, v37);

    if ((v38 & 1) == 0)
    {
      if (qword_26A919960 != -1) {
        swift_once();
      }
      sub_2613C23AC(qword_26A914E40);
      uint64_t v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_2614D81E0;
      *(void *)(v39 + 56) = MEMORY[0x263F8D310];
      *(void *)(v39 + 64) = sub_26141EFD8();
      *(void *)(v39 + 32) = v25;
      *(void *)(v39 + 40) = v26;
      OS_os_log.error(_:_:)((uint64_t)"Network config not found in %@", 30, 2, v39);
      swift_bridgeObjectRelease();
      uint64_t v25 = 0;
      unint64_t v26 = 0xE000000000000000;
    }
    a3 = v104;
    *(void *)&long long v112 = v32;
    *((void *)&v112 + 1) = v34;
    swift_bridgeObjectRetain();
    sub_2614D54D8();
    swift_bridgeObjectRelease();
    long long v40 = v112;
    swift_bridgeObjectRetain();
    id v41 = objc_msgSend(v35, sel_defaultManager);
    uint64_t v108 = v40;
    uint64_t v42 = (void *)sub_2614D5378();
    unsigned __int8 v43 = objc_msgSend(v41, sel_isReadableFileAtPath_, v42);

    if (v43)
    {
      unint64_t v22 = *((void *)&v40 + 1);
      LODWORD(v3) = v107;
      unint64_t v6 = v101;
    }
    else
    {
      LODWORD(v3) = v107;
      unint64_t v6 = v101;
      if (qword_26A919960 != -1) {
        swift_once();
      }
      sub_2613C23AC(qword_26A914E40);
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = xmmword_2614D81E0;
      *(void *)(v44 + 56) = MEMORY[0x263F8D310];
      *(void *)(v44 + 64) = sub_26141EFD8();
      *(void *)(v44 + 32) = v108;
      *(void *)(v44 + 40) = *((void *)&v40 + 1);
      OS_os_log.error(_:_:)((uint64_t)"Network not found in %@", 23, 2, v44);
      swift_bridgeObjectRelease();
      uint64_t v108 = 0;
      unint64_t v22 = 0xE000000000000000;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v45 = HIBYTE(v26) & 0xF;
  if ((v26 & 0x2000000000000000) == 0) {
    uint64_t v45 = v25 & 0xFFFFFFFFFFFFLL;
  }
  if (!v45) {
    goto LABEL_56;
  }
  uint64_t v46 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0) {
    uint64_t v46 = v108 & 0xFFFFFFFFFFFFLL;
  }
  if (!v46)
  {
LABEL_56:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v97 = 0;
    uint64_t v98 = 0;
    uint64_t v99 = 0;
    uint64_t v100 = 0;
    uint64_t v3 = 0;
LABEL_103:
    *a3 = v97;
    a3[1] = v98;
    a3[2] = v99;
    a3[3] = v100;
    a3[4] = (uint64_t)v3;
    return;
  }
  sub_2614D53F8();
  uint64_t v47 = 0;
  uint64_t v48 = sub_2614D5358();
  int v107 = (int)v3;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v104 = a3;
  swift_bridgeObjectRelease();
  *(void *)&long long v112 = v49;
  *((void *)&v112 + 1) = v51;
  os_log_type_t v52 = v102;
  sub_2614D4B68();
  sub_2613DC3BC();
  uint64_t v53 = MEMORY[0x263F8D310];
  uint64_t v54 = sub_2614D5B78();
  (*(void (**)(char *, unint64_t))(v103 + 8))(v52, v6);
  swift_bridgeObjectRelease();
  a3 = *(uint64_t **)(v54 + 16);
  if (a3)
  {
    unint64_t v101 = v54;
    uint64_t v102 = 0;
    uint64_t v55 = (unint64_t *)(v54 + 40);
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    unint64_t v6 = 0xE100000000000000;
    unint64_t v103 = (unint64_t)"fer";
    char v106 = (char *)0x80000002614E2D00;
    while (1)
    {
      uint64_t v57 = *(v55 - 1);
      unint64_t v11 = *v55;
      *(void *)&long long v112 = v57;
      *((void *)&v112 + 1) = v11;
      strcpy((char *)v111, "<OutputData>");
      BYTE13(v111[0]) = 0;
      HIWORD(v111[0]) = -5120;
      swift_bridgeObjectRetain();
      if (sub_2614D5BD8()) {
        break;
      }
      *(void *)&long long v112 = v57;
      *((void *)&v112 + 1) = v11;
      strcpy((char *)v111, "<InputData>");
      HIDWORD(v111[0]) = -352321536;
      if (sub_2614D5BD8())
      {
        *(void *)&long long v112 = v57;
        *((void *)&v112 + 1) = v11;
        *(void *)&v111[0] = 32;
        *((void *)&v111[0] + 1) = 0xE100000000000000;
        uint64_t v68 = (void *)sub_2614D5B88();
        swift_bridgeObjectRelease();
        uint64_t v113 = v53;
        if (v68[2] < 2uLL)
        {
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
          goto LABEL_113;
        }
        uint64_t v70 = v68[6];
        uint64_t v69 = v68[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)&long long v112 = v70;
        *((void *)&v112 + 1) = v69;
        sub_261409630(&v112, v111);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v109 = v3;
        unint64_t v11 = sub_2613D8F00(0x61447475706E493CLL, 0xEB000000003E6174);
        uint64_t v73 = v3[2];
        BOOL v74 = (v72 & 1) == 0;
        uint64_t v75 = v73 + v74;
        if (__OFADD__(v73, v74)) {
          goto LABEL_111;
        }
        unint64_t v6 = v72;
        if (v3[3] >= v75)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v3 = v109;
            if ((v72 & 1) == 0) {
              goto LABEL_89;
            }
          }
          else
          {
            sub_26141D690();
            uint64_t v3 = v109;
            if ((v6 & 1) == 0) {
              goto LABEL_89;
            }
          }
        }
        else
        {
          sub_26141D1D0(v75, isUniquelyReferenced_nonNull_native);
          unint64_t v76 = sub_2613D8F00(0x61447475706E493CLL, 0xEB000000003E6174);
          if ((v6 & 1) != (v77 & 1)) {
            goto LABEL_121;
          }
          unint64_t v11 = v76;
          uint64_t v3 = v109;
          if ((v6 & 1) == 0)
          {
LABEL_89:
            v3[(v11 >> 6) + 8] |= 1 << v11;
            uint64_t v92 = (void *)(v3[6] + 16 * v11);
            void *v92 = 0x61447475706E493CLL;
            v92[1] = 0xEB000000003E6174;
            sub_261409630(v111, (_OWORD *)(v3[7] + 32 * v11));
            uint64_t v93 = v3[2];
            BOOL v90 = __OFADD__(v93, 1);
            uint64_t v91 = v93 + 1;
            if (v90) {
              goto LABEL_117;
            }
            goto LABEL_90;
          }
        }
        goto LABEL_59;
      }
      *(void *)&long long v112 = v57;
      *((void *)&v112 + 1) = v11;
      *(void *)&v111[0] = 0xD000000000000011;
      *((void *)&v111[0] + 1) = v106;
      if ((sub_2614D5BD8() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_61;
      }
      *(void *)&long long v112 = v57;
      *((void *)&v112 + 1) = v11;
      *(void *)&v111[0] = 32;
      *((void *)&v111[0] + 1) = 0xE100000000000000;
      uint64_t v78 = (void *)sub_2614D5B88();
      swift_bridgeObjectRelease();
      if (v78[2] < 2uLL)
      {
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        swift_once();
LABEL_4:
        OS_os_log.info(_:_:)((uint64_t)"Will run acoustic model on ANE", 30, 2, MEMORY[0x263F8EE78]);
        int v105 = 1;
        if (v3) {
          goto LABEL_14;
        }
LABEL_5:
        uint64_t v12 = espresso_create_plan();
        if (!v12) {
          goto LABEL_119;
        }
        uint64_t v110 = v12;
        if (v3) {
          goto LABEL_18;
        }
        goto LABEL_20;
      }
      uint64_t v79 = v78[6];
      unint64_t v11 = v78[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&long long v112 = v79;
      *((void *)&v112 + 1) = v11;
      *(void *)&v111[0] = 44;
      *((void *)&v111[0] + 1) = 0xE100000000000000;
      uint64_t v80 = (void *)sub_2614D5B88();
      swift_bridgeObjectRelease();
      uint64_t v113 = sub_2613C23AC(&qword_26A915280);
      uint64_t v81 = swift_allocObject();
      *(void *)&long long v112 = v81;
      if (v80[2] < 3uLL) {
        goto LABEL_115;
      }
      unint64_t v11 = v81;
      uint64_t v82 = v80[8];
      unint64_t v6 = v80[9];
      swift_bridgeObjectRetain();
      *(void *)(v11 + 16) = sub_2613CE0E0(v82, v6);
      *(unsigned char *)(v11 + 24) = v83 & 1;
      if (v80[2] < 4uLL) {
        goto LABEL_116;
      }
      uint64_t v84 = v80[10];
      unint64_t v85 = v80[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v11 + 32) = sub_2613CE0E0(v84, v85);
      *(unsigned char *)(v11 + 40) = v86 & 1;
      sub_261409630(&v112, v111);
      char v87 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v109 = v3;
      sub_26141D4D0(v111, 0xD000000000000011, v103 | 0x8000000000000000, v87);
      uint64_t v3 = v109;
LABEL_60:
      swift_bridgeObjectRelease();
      unint64_t v6 = 0xE100000000000000;
LABEL_61:
      v55 += 2;
      a3 = (uint64_t *)((char *)a3 - 1);
      if (!a3)
      {
        swift_bridgeObjectRelease();
        a3 = v104;
        uint64_t v47 = v102;
        if (v105) {
          goto LABEL_55;
        }
        goto LABEL_96;
      }
    }
    *(void *)&long long v112 = v57;
    *((void *)&v112 + 1) = v11;
    *(void *)&v111[0] = 32;
    *((void *)&v111[0] + 1) = 0xE100000000000000;
    uint64_t v58 = (void *)sub_2614D5B88();
    swift_bridgeObjectRelease();
    uint64_t v113 = v53;
    if (v58[2] < 2uLL)
    {
      __break(1u);
LABEL_108:
      __break(1u);
      goto LABEL_109;
    }
    uint64_t v60 = v58[6];
    uint64_t v59 = v58[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&long long v112 = v60;
    *((void *)&v112 + 1) = v59;
    sub_261409630(&v112, v111);
    char v61 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v109 = v3;
    unint64_t v11 = sub_2613D8F00(0x4474757074754F3CLL, 0xEC0000003E617461);
    uint64_t v63 = v3[2];
    BOOL v64 = (v62 & 1) == 0;
    uint64_t v65 = v63 + v64;
    if (__OFADD__(v63, v64)) {
      goto LABEL_108;
    }
    unint64_t v6 = v62;
    if (v3[3] >= v65)
    {
      if (v61)
      {
        uint64_t v3 = v109;
        if ((v62 & 1) == 0) {
          goto LABEL_83;
        }
      }
      else
      {
        sub_26141D690();
        uint64_t v3 = v109;
        if ((v6 & 1) == 0) {
          goto LABEL_83;
        }
      }
    }
    else
    {
      sub_26141D1D0(v65, v61);
      unint64_t v66 = sub_2613D8F00(0x4474757074754F3CLL, 0xEC0000003E617461);
      if ((v6 & 1) != (v67 & 1)) {
        goto LABEL_121;
      }
      unint64_t v11 = v66;
      uint64_t v3 = v109;
      if ((v6 & 1) == 0)
      {
LABEL_83:
        v3[(v11 >> 6) + 8] |= 1 << v11;
        uint64_t v88 = v3[6] + 16 * v11;
        strcpy((char *)v88, "<OutputData>");
        *(unsigned char *)(v88 + 13) = 0;
        *(_WORD *)(v88 + 14) = -5120;
        sub_261409630(v111, (_OWORD *)(v3[7] + 32 * v11));
        uint64_t v89 = v3[2];
        BOOL v90 = __OFADD__(v89, 1);
        uint64_t v91 = v89 + 1;
        if (v90) {
          goto LABEL_112;
        }
LABEL_90:
        mach_timebase_info v3[2] = v91;
        goto LABEL_60;
      }
    }
LABEL_59:
    uint64_t v56 = (_OWORD *)(v3[7] + 32 * v11);
    sub_2613DD718((uint64_t)v56);
    sub_261409630(v111, v56);
    goto LABEL_60;
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)MEMORY[0x263F8EE80];
  a3 = v104;
  if (v105) {
LABEL_55:
  }
    sub_26147337C();
  else {
LABEL_96:
  }
    sub_261473370();
  uint64_t v94 = sub_261473388();
  if (!v47)
  {
    *(void *)&long long v112 = v94;
    DWORD2(v112) = v95;
    if (v107)
    {
      if (qword_26A919960 != -1) {
        swift_once();
      }
      sub_2613C23AC(qword_26A914E40);
      uint64_t v96 = swift_allocObject();
      *(_OWORD *)(v96 + 16) = xmmword_2614D81E0;
      *(void *)(v96 + 56) = sub_2613C23AC(&qword_26A915270);
      *(void *)(v96 + 64) = sub_26141F0A4(&qword_26A915278, &qword_26A915270);
      *(void *)(v96 + 32) = &v112;
      OS_os_log.debug(_:_:)((uint64_t)"Pointer of espresso_network_t %@", 32, 2, v96);
      swift_bridgeObjectRelease();
    }
    sub_261473480(v110);
    uint64_t v98 = v114[0];
    if (v114[0])
    {
      uint64_t v97 = v110;
      swift_bridgeObjectRelease();
      uint64_t v99 = v112;
      uint64_t v100 = DWORD2(v112);
      goto LABEL_103;
    }
    __break(1u);
LABEL_121:
    sub_2614D5FF8();
    __break(1u);
  }
  swift_bridgeObjectRelease();
  swift_unexpectedError();
  __break(1u);
}

uint64_t sub_26141EB18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2613C23AC(&qword_26A915238);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for NeuralNet()
{
  return self;
}

uint64_t sub_26141EBA4(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v2 + 104);
  if (v3 < 0) {
    goto LABEL_19;
  }
  if (v3)
  {
    uint64_t v4 = *(void *)(v2 + 112);
    if (v4 < 0)
    {
LABEL_20:
      __break(1u);
      return result;
    }
    unint64_t v5 = 0;
    uint64_t v6 = *(void *)(v1 + 24);
    while (!v4)
    {
LABEL_5:
      if (++v5 == v3) {
        return result;
      }
    }
    uint64_t v7 = v5 * v4;
    if ((unsigned __int128)((uint64_t)v5 * (__int128)v4) >> 64 == (uint64_t)(v5 * v4) >> 63)
    {
      if (v5 >= *(void *)(v6 + 16))
      {
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      uint64_t v8 = 0;
      uint64_t v9 = *(void *)(v6 + 32 + 8 * v5);
      uint64_t v10 = v9 + 32;
      uint64_t v11 = *(void *)(v9 + 16);
      while (!__OFADD__(v7, v8))
      {
        if (v11 == v8) {
          goto LABEL_16;
        }
        *(_DWORD *)(result + 4 * (v7 + v8)) = *(_DWORD *)(v10 + 4 * v8);
        if (v4 == ++v8) {
          goto LABEL_5;
        }
      }
      __break(1u);
LABEL_16:
      __break(1u);
    }
    __break(1u);
    goto LABEL_18;
  }
  return result;
}

void sub_26141EC50(uint64_t a1)
{
  uint64_t v4 = v1;
  unint64_t v5 = *(void **)(v1 + 16);
  uint64_t v6 = v5[10];
  if (v6 < 0) {
    goto LABEL_42;
  }
  if (v6)
  {
    uint64_t v23 = v5[11];
    if (v23 < 0) {
      goto LABEL_43;
    }
    uint64_t v3 = *(void *)(v4 + 24);
    uint64_t v2 = *(void **)v3;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v3 = v2;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_44;
    }
    while (1)
    {
      unint64_t v8 = 0;
      *(void *)uint64_t v3 = v2;
      uint64_t v22 = v6;
      while (1)
      {
        if (v8 == v6) {
          goto LABEL_40;
        }
        if (v23) {
          break;
        }
LABEL_6:
        ++v8;
        uint64_t v6 = v22;
        if (v8 == v22) {
          return;
        }
      }
      uint64_t v26 = v8 * v23;
      if ((unsigned __int128)((uint64_t)v8 * (__int128)v23) >> 64 == (uint64_t)(v8 * v23) >> 63)
      {
        uint64_t v2 = *(void **)v3;
        char v9 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)uint64_t v3 = v2;
        if ((v9 & 1) == 0) {
          uint64_t v2 = sub_2613D8EC8(v2);
        }
        uint64_t v25 = *(float (**)(void))(*v5 + 160);
        *(void *)uint64_t v3 = v2;
        uint64_t v10 = 8;
        while (1)
        {
          unint64_t v11 = v10 - 8;
          if (__OFADD__(v26, v10 - 8)) {
            break;
          }
          int v12 = *(_DWORD *)(a1 + 4 * (v26 + v10 - 8));
          uint64_t v2 = *(void **)v3;
          char v13 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)uint64_t v3 = v2;
          if ((v13 & 1) == 0)
          {
            uint64_t v2 = sub_2613D8EC8(v2);
            *(void *)uint64_t v3 = v2;
          }
          if (v8 >= v2[2]) {
            goto LABEL_34;
          }
          uint64_t v14 = v2 + 4;
          uint64_t v6 = 8 * v8;
          uint64_t v2 = (void *)v2[v8 + 4];
          char v15 = swift_isUniquelyReferenced_nonNull_native();
          v14[v8] = v2;
          if ((v15 & 1) == 0)
          {
            uint64_t v2 = sub_2613D8E30((uint64_t)v2);
            v14[v8] = v2;
          }
          if (v11 >= v2[2]) {
            goto LABEL_35;
          }
          *((_DWORD *)v2 + v10) = v12;
          if (v8 >= *(void *)(*(void *)v3 + 16)) {
            goto LABEL_36;
          }
          uint64_t v16 = *(void *)(*(void *)v3 + 8 * v8 + 32);
          if (v11 >= *(void *)(v16 + 16)) {
            goto LABEL_37;
          }
          float v17 = *(float *)(v16 + 4 * v10);
          if (v17 < v25())
          {
            float v18 = (*(float (**)(void))(*v5 + 184))();
            uint64_t v2 = *(void **)v3;
            char v19 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)uint64_t v3 = v2;
            if ((v19 & 1) == 0)
            {
              uint64_t v2 = sub_2613D8EC8(v2);
              *(void *)uint64_t v3 = v2;
            }
            if (v8 >= v2[2]) {
              goto LABEL_38;
            }
            unint64_t v20 = v2 + 4;
            uint64_t v2 = (void *)v2[v8 + 4];
            char v21 = swift_isUniquelyReferenced_nonNull_native();
            v20[v8] = v2;
            if ((v21 & 1) == 0)
            {
              uint64_t v2 = sub_2613D8E30((uint64_t)v2);
              v20[v8] = v2;
            }
            if (v11 >= v2[2]) {
              goto LABEL_39;
            }
            *((float *)v2 + v10) = v18;
          }
          if (++v10 - v23 == 8) {
            goto LABEL_6;
          }
        }
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      uint64_t v2 = sub_2613D8EC8(v2);
    }
  }
}

uint64_t sub_26141EF38(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_26141EF58(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for espresso_network_t()
{
  if (!qword_26A915248)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_26A915248);
    }
  }
}

unint64_t sub_26141EFD8()
{
  unint64_t result = qword_26A915250;
  if (!qword_26A915250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A915250);
  }
  return result;
}

unint64_t sub_26141F02C()
{
  unint64_t result = qword_26A915260;
  if (!qword_26A915260)
  {
    sub_261405618(255, &qword_26A915258);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A915260);
  }
  return result;
}

uint64_t sub_26141F094()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_26141F0A4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2613C5EC8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_26141F0F4()
{
  unint64_t result = sub_26141F11C(MEMORY[0x263F8EE78]);
  qword_26A919A68 = result;
  return result;
}

unint64_t sub_26141F11C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_2613C23AC(&qword_26A914AE0);
  uint64_t v2 = (void *)sub_2614D5DD8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_2613D8F00(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_26141F230()
{
  uint64_t v0 = sub_2614D50C8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for VAEspressoUtils();
  char v37 = 0;
  uint64_t v5 = sub_261473980();
  uint64_t v7 = v6;
  char v8 = sub_2613D04A8();
  static VAEspressoUtils.loadModel(_:computeUnits:espressoPrefix:debug:)(0xD000000000000018, 0x80000002614E2FD0, &v37, v5, v7, v8 & 1, &v38);
  uint64_t v35 = v0;
  id v36 = v3;
  uint64_t v34 = v1;
  swift_bridgeObjectRelease();
  uint64_t v32 = xmmword_26A919970;
  uint64_t v33 = v4;
  uint64_t v9 = *((void *)&xmmword_26A919970 + 1);
  uint64_t v10 = qword_26A919980;
  uint64_t v11 = qword_26A919988;
  uint64_t v12 = qword_26A919990;
  xmmword_26A919970 = v38;
  qword_26A919980 = v39;
  qword_26A919988 = v40;
  qword_26A919990 = v41;
  qword_26A919998 = v42;
  qword_26A9199A0 = v43;
  qword_26A9199A8 = v44;
  qword_26A9199B0 = v45;
  byte_26A9199B8 = v46;
  sub_2613DC0FC(v32, v9, v10, v11, v12);
  char v37 = 0;
  uint64_t v13 = sub_261473980();
  uint64_t v15 = v14;
  char v16 = sub_2613D04A8();
  static VAEspressoUtils.loadModel(_:computeUnits:espressoPrefix:debug:)(0xD000000000000018, 0x80000002614E2FF0, &v37, v13, v15, v16 & 1, &v38);
  swift_bridgeObjectRelease();
  uint64_t v17 = *((void *)&xmmword_26A9199C0 + 1);
  uint64_t v32 = xmmword_26A9199C0;
  uint64_t v18 = qword_26A9199D0;
  uint64_t v19 = qword_26A9199D8;
  uint64_t v20 = qword_26A9199E0;
  xmmword_26A9199C0 = v38;
  qword_26A9199D0 = v39;
  qword_26A9199D8 = v40;
  qword_26A9199E0 = v41;
  qword_26A9199E8 = v42;
  qword_26A9199F0 = v43;
  qword_26A9199F8 = v44;
  qword_26A919A00 = v45;
  byte_26A919A08 = v46;
  sub_2613DC0FC(v32, v17, v18, v19, v20);
  char v37 = 0;
  uint64_t v21 = sub_261473980();
  uint64_t v23 = v22;
  char v24 = sub_2613D04A8();
  static VAEspressoUtils.loadModel(_:computeUnits:espressoPrefix:debug:)(0xD000000000000017, 0x80000002614E3010, &v37, v21, v23, v24 & 1, &v38);
  swift_bridgeObjectRelease();
  uint64_t v25 = *((void *)&xmmword_26A919A10 + 1);
  uint64_t v33 = xmmword_26A919A10;
  uint64_t v26 = qword_26A919A20;
  uint64_t v27 = qword_26A919A28;
  uint64_t v28 = qword_26A919A30;
  xmmword_26A919A10 = v38;
  qword_26A919A20 = v39;
  qword_26A919A28 = v40;
  qword_26A919A30 = v41;
  qword_26A919A38 = v42;
  qword_26A919A40 = v43;
  qword_26A919A48 = v44;
  qword_26A919A50 = v45;
  byte_26A919A58 = v46;
  sub_2613DC0FC(v33, v25, v26, v27, v28);
  if (qword_26A919A60 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_261421E2C();
  swift_beginAccess();
  qword_26A919A68 = v29;
  swift_bridgeObjectRelease();
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for G2PFactored()), sel_init);
}

id G2PFactored.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void *sub_26141F8BC()
{
  (*(void (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
  if (!v1)
  {
    uint64_t v0 = v2;
    swift_bridgeObjectRelease();
  }
  return v0;
}

uint64_t sub_26141FA64()
{
  uint64_t v2 = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
  if (!v1) {
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_26141FBFC(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_2614D50C8();
  uint64_t v114 = *(void *)(v4 - 8);
  uint64_t v115 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2614D5408();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v116 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = a1;
  unint64_t v125 = a2;
  uint64_t v126 = 32;
  unint64_t v127 = 0xE100000000000000;
  unint64_t v9 = sub_2613DC3BC();
  uint64_t v10 = MEMORY[0x263F8D310];
  if (sub_2614D5BD8())
  {
    uint64_t v124 = a1;
    unint64_t v125 = a2;
    uint64_t v126 = 32;
    unint64_t v127 = 0xE100000000000000;
    uint64_t v122 = 95;
    unint64_t v123 = 0xE100000000000000;
    int v107 = (uint64_t *)v9;
    unint64_t v108 = v9;
    uint64_t v105 = v10;
    uint64_t v106 = v9;
    sub_2614D5BB8();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v124 = 0x3A3E53555F6E653CLL;
  unint64_t v125 = 0xE800000000000000;
  sub_2614D54D8();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_2613D8A84(v124, v125);
  swift_bridgeObjectRelease();
  int64_t v12 = *(void *)(v11 + 16);
  uint64_t v113 = a1;
  if (v12)
  {
    unint64_t v13 = a2;
    uint64_t v124 = MEMORY[0x263F8EE78];
    sub_2613D917C(0, v12, 0);
    uint64_t v14 = 0;
    uint64_t v15 = v124;
    while (1)
    {
      unsigned __int8 v16 = *(unsigned char *)(v11 + v14 + 32) + 3;
      if (((*(unsigned __int8 *)(v11 + v14 + 32) + 3) & 0x100) != 0) {
        break;
      }
      uint64_t v124 = v15;
      unint64_t v18 = *(void *)(v15 + 16);
      unint64_t v17 = *(void *)(v15 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_2613D917C(v17 > 1, v18 + 1, 1);
        uint64_t v15 = v124;
      }
      ++v14;
      *(void *)(v15 + 16) = v18 + 1;
      *(float *)(v15 + 4 * v18 + 32) = (float)v16;
      if (v12 == v14)
      {
        swift_release();
        a2 = v13;
        goto LABEL_12;
      }
    }
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  swift_release();
  uint64_t v15 = MEMORY[0x263F8EE78];
LABEL_12:
  uint64_t v19 = sub_2614D56C8();
  *(void *)(v19 + 16) = 48;
  *(_OWORD *)(v19 + 32) = 0u;
  *(_OWORD *)(v19 + 48) = 0u;
  *(_OWORD *)(v19 + 64) = 0u;
  *(_OWORD *)(v19 + 80) = 0u;
  *(_OWORD *)(v19 + 96) = 0u;
  *(_OWORD *)(v19 + 112) = 0u;
  *(_OWORD *)(v19 + 128) = 0u;
  *(_OWORD *)(v19 + 144) = 0u;
  *(_OWORD *)(v19 + 160) = 0u;
  *(_OWORD *)(v19 + 176) = 0u;
  *(_OWORD *)(v19 + 192) = 0u;
  *(_OWORD *)(v19 + 208) = 0u;
  uint64_t v20 = sub_2614D56C8();
  uint64_t v21 = v20;
  *(void *)(v20 + 16) = 48;
  *(_OWORD *)(v20 + 32) = 0u;
  *(_OWORD *)(v20 + 48) = 0u;
  *(_OWORD *)(v20 + 64) = 0u;
  *(_OWORD *)(v20 + 80) = 0u;
  *(_OWORD *)(v20 + 96) = 0u;
  *(_OWORD *)(v20 + 112) = 0u;
  *(_OWORD *)(v20 + 128) = 0u;
  *(_OWORD *)(v20 + 144) = 0u;
  *(_OWORD *)(v20 + 160) = 0u;
  *(_OWORD *)(v20 + 176) = 0u;
  uint64_t v22 = 8;
  *(_OWORD *)(v20 + 192) = 0u;
  *(_OWORD *)(v20 + 208) = 0u;
  unint64_t v23 = *(void *)(v15 + 16);
  do
  {
    unint64_t v24 = v22 - 8;
    int v25 = 0;
    if (v22 - 8 < v23) {
      int v25 = *(_DWORD *)(v15 + 4 * v22);
    }
    if (v24 >= *(void *)(v19 + 16))
    {
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    *(_DWORD *)(v19 + 4 * v22) = v25;
    if (v24 >= *(void *)(v20 + 16)) {
      goto LABEL_83;
    }
    if (v24 >= v23) {
      float v26 = 0.0;
    }
    else {
      float v26 = 1.0;
    }
    *(float *)(v20 + 4 * v22++) = v26;
  }
  while (v22 != 56);
  swift_bridgeObjectRelease();
  uint64_t v27 = v120;
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x263F8EED0] & *v120) + 0x70);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = v128;
  uint64_t v30 = v28(v19, v21);
  swift_bridgeObjectRelease();
  if (v29)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return (uint64_t)v6;
  }
  uint64_t v111 = v6;
  uint64_t v112 = v19;
  uint64_t v119 = v30;
  unint64_t v110 = a2;
  swift_bridgeObjectRelease();
  uint64_t v31 = sub_2614D56C8();
  *(void *)(v31 + 16) = 48;
  *(_OWORD *)(v31 + 32) = 0u;
  *(_OWORD *)(v31 + 48) = 0u;
  *(_OWORD *)(v31 + 64) = 0u;
  *(_OWORD *)(v31 + 80) = 0u;
  *(_OWORD *)(v31 + 96) = 0u;
  *(_OWORD *)(v31 + 112) = 0u;
  *(_OWORD *)(v31 + 128) = 0u;
  *(_OWORD *)(v31 + 144) = 0u;
  *(_OWORD *)(v31 + 160) = 0u;
  *(_OWORD *)(v31 + 176) = 0u;
  *(_OWORD *)(v31 + 192) = 0u;
  *(_OWORD *)(v31 + 208) = 0u;
  uint64_t v6 = (char *)sub_2614D56C8();
  unint64_t v32 = 0;
  *((void *)v6 + 2) = 48;
  *((_OWORD *)v6 + 2) = 0u;
  *((_OWORD *)v6 + 3) = 0u;
  *((_OWORD *)v6 + 4) = 0u;
  *((_OWORD *)v6 + 5) = 0u;
  *((_OWORD *)v6 + 6) = 0u;
  *((_OWORD *)v6 + 7) = 0u;
  *((_OWORD *)v6 + 8) = 0u;
  *((_OWORD *)v6 + 9) = 0u;
  *((_OWORD *)v6 + 10) = 0u;
  *((_OWORD *)v6 + 11) = 0u;
  *((_OWORD *)v6 + 12) = 0u;
  *((_OWORD *)v6 + 13) = 0u;
  uint64_t v33 = *(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t))((*MEMORY[0x263F8EED0] & *v27) + 0x78);
  uint64_t v117 = (*MEMORY[0x263F8EED0] & *v27) + 120;
  uint64_t v118 = v33;
  uint64_t v34 = MEMORY[0x263F8EE78];
  uint64_t v35 = 0;
  while (2)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v6 = sub_2613D8E30((uint64_t)v6);
    }
    uint64_t v36 = v119;
    if (v32 >= *((void *)v6 + 2)) {
      goto LABEL_85;
    }
    *(_DWORD *)&v6[4 * v32 + 32] = 1065353216;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v37 = v118(v31, v6, v36, v21);
    if (v35)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      return (uint64_t)v6;
    }
    uint64_t v38 = v37;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v39 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v27) + 0x80))(v38);
    swift_bridgeObjectRelease();
    if (!*(void *)(v39 + 16)) {
      goto LABEL_86;
    }
    uint64_t v40 = *(void *)(v39 + 32);
    if (v32 < *(void *)(v40 + 16))
    {
      uint64_t v128 = 0;
      uint64_t v41 = 0;
      unint64_t v42 = v32 + 1;
      uint64_t v43 = *(void *)(v40 + 8 * v32 + 32);
      uint64_t v44 = v43 + 32;
      unint64_t v45 = *(void *)(v43 + 16);
      uint64_t v46 = -1;
      float v47 = -100000.0;
      do
      {
        if (v45 < 0x180)
        {
          __break(1u);
          goto LABEL_78;
        }
        float v48 = *(float *)(v44 + 4 * v41);
        if (v47 < v48) {
          uint64_t v46 = v41;
        }
        uint64_t v49 = v41 + 1;
        if (v47 < v48) {
          float v47 = *(float *)(v44 + 4 * v41);
        }
        ++v41;
      }
      while (v49 != 384);
      swift_bridgeObjectRelease();
      uint64_t v121 = v6;
      if (v46 == 1)
      {
        uint64_t v35 = v128;
        goto LABEL_55;
      }
      uint64_t v50 = v31;
      unint64_t v51 = v46 - 3;
      if (__OFSUB__(v46, 3)) {
        goto LABEL_88;
      }
      if ((v51 & 0x8000000000000000) == 0)
      {
        if (v51 >= 0x100)
        {
          LODWORD(v107) = 0;
          uint64_t v106 = 3455;
          LOBYTE(v105) = 2;
          goto LABEL_94;
        }
        os_log_type_t v52 = (char *)v34;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          uint64_t v53 = v128;
        }
        else
        {
          uint64_t v53 = v128;
          os_log_type_t v52 = sub_261421AEC(0, *(void *)(v34 + 16) + 1, 1, (char *)v34);
        }
        unint64_t v55 = *((void *)v52 + 2);
        unint64_t v54 = *((void *)v52 + 3);
        uint64_t v56 = v52;
        if (v55 >= v54 >> 1) {
          uint64_t v56 = sub_261421AEC((char *)(v54 > 1), v55 + 1, 1, v52);
        }
        *((void *)v56 + 2) = v55 + 1;
        uint64_t v57 = &v56[v55];
        uint64_t v34 = (uint64_t)v56;
        v57[32] = v51;
        if (v32 > 0x2E)
        {
          uint64_t v35 = v53;
          uint64_t v31 = v50;
          uint64_t v6 = v121;
        }
        else
        {
          uint64_t v31 = v50;
          uint64_t v58 = v53;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v31 = (uint64_t)sub_2613D8E30(v50);
          }
          uint64_t v6 = v121;
          if (v42 >= *(void *)(v31 + 16)) {
            goto LABEL_89;
          }
          *(float *)(v31 + 4 * v42 + 32) = (float)v46;
          uint64_t v35 = v58;
        }
        ++v32;
        uint64_t v27 = v120;
        if (v42 != 48) {
          continue;
        }
LABEL_55:
        uint64_t v128 = v35;
        uint64_t v120 = (void *)v34;
        swift_bridgeObjectRelease();
        uint64_t v124 = v34;
        swift_bridgeObjectRetain();
        sub_2614D53F8();
        sub_2613C23AC(&qword_26A9152B8);
        sub_261422790();
        uint64_t v59 = sub_2614D53D8();
        unint64_t v61 = v60;
        swift_bridgeObjectRelease();
        if (!v61)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_2614227EC();
          swift_allocError();
          void *v74 = 0xD000000000000023;
          v74[1] = 0x80000002614E3030;
          swift_willThrow();
          return (uint64_t)v6;
        }
        uint64_t v119 = v59;
        uint64_t v62 = sub_26146718C();
        uint64_t v64 = v114;
        uint64_t v63 = v115;
        (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v111, v62, v115);
        unint64_t v65 = v110;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        unint64_t v66 = sub_2614D50A8();
        os_log_type_t v67 = sub_2614D5958();
        BOOL v68 = os_log_type_enabled(v66, v67);
        uint64_t v118 = (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t))v31;
        if (v68)
        {
          uint64_t v69 = swift_slowAlloc();
          uint64_t v117 = swift_slowAlloc();
          uint64_t v124 = v117;
          *(_DWORD *)uint64_t v69 = 136315394;
          uint64_t v70 = v64;
          swift_bridgeObjectRetain();
          uint64_t v126 = sub_2613D875C(v113, v65, &v124);
          sub_2614D5B58();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v69 + 12) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v71 = v119;
          uint64_t v126 = sub_2613D875C(v119, v61, &v124);
          sub_2614D5B58();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_2613B8000, v66, v67, "Inferred pronounciation for %s is %s", (uint8_t *)v69, 0x16u);
          uint64_t v72 = v117;
          swift_arrayDestroy();
          MEMORY[0x263E38060](v72, -1, -1);
          MEMORY[0x263E38060](v69, -1, -1);

          uint64_t v73 = (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v111, v115);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          uint64_t v73 = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v111, v63);
          uint64_t v71 = v119;
        }
        unint64_t v75 = v61;
        uint64_t v124 = 32;
        unint64_t v125 = 0xE100000000000000;
        MEMORY[0x270FA5388](v73);
        int v107 = &v124;
        swift_bridgeObjectRetain_n();
        uint64_t v76 = v128;
        uint64_t v77 = sub_2613D7D10(0x7FFFFFFFFFFFFFFFLL, 1, sub_261422840, (uint64_t)&v105, v71, v61);
        uint64_t v128 = v76;
        uint64_t v117 = v75;
        swift_bridgeObjectRelease();
        int64_t v78 = *(void *)(v77 + 16);
        if (v78)
        {
          uint64_t v124 = MEMORY[0x263F8EE78];
          sub_2613D913C(0, v78, 0);
          uint64_t v79 = v124;
          uint64_t v80 = (uint64_t *)(v77 + 56);
          do
          {
            uint64_t v81 = v79;
            uint64_t v83 = *(v80 - 3);
            uint64_t v82 = *(v80 - 2);
            uint64_t v84 = *(v80 - 1);
            uint64_t v85 = *v80;
            swift_bridgeObjectRetain();
            uint64_t v86 = v82;
            uint64_t v79 = v81;
            uint64_t v87 = MEMORY[0x263E36570](v83, v86, v84, v85);
            uint64_t v89 = v88;
            swift_bridgeObjectRelease();
            uint64_t v124 = v81;
            unint64_t v90 = *(void *)(v81 + 16);
            unint64_t v91 = *(void *)(v79 + 24);
            if (v90 >= v91 >> 1)
            {
              sub_2613D913C(v91 > 1, v90 + 1, 1);
              uint64_t v79 = v124;
            }
            *(void *)(v79 + 16) = v90 + 1;
            uint64_t v92 = v79 + 16 * v90;
            *(void *)(v92 + 32) = v87;
            *(void *)(v92 + 40) = v89;
            v80 += 4;
            --v78;
          }
          while (v78);
          swift_bridgeObjectRelease();
          uint64_t v93 = *(void *)(v79 + 16);
          if (v93)
          {
LABEL_66:
            swift_bridgeObjectRetain();
            uint64_t v6 = (char *)MEMORY[0x263F8EE78];
            uint64_t v116 = (char *)v79;
            uint64_t v94 = (uint64_t *)(v79 + 40);
            while (1)
            {
              uint64_t v95 = *(v94 - 1);
              uint64_t v96 = *v94;
              uint64_t v97 = qword_26A919A60;
              swift_bridgeObjectRetain();
              if (v97 != -1) {
                swift_once();
              }
              swift_beginAccess();
              uint64_t v98 = qword_26A919A68;
              if (!*(void *)(qword_26A919A68 + 16)) {
                goto LABEL_91;
              }
              swift_bridgeObjectRetain();
              unint64_t v99 = sub_2613D8F00(v95, v96);
              if ((v100 & 1) == 0) {
                goto LABEL_90;
              }
              uint64_t v101 = *(void *)(*(void *)(v98 + 56) + 8 * v99);
              swift_endAccess();
              swift_bridgeObjectRelease_n();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v6 = (char *)sub_2613E1088(0, *((void *)v6 + 2) + 1, 1, v6);
              }
              unint64_t v103 = *((void *)v6 + 2);
              unint64_t v102 = *((void *)v6 + 3);
              if (v103 >= v102 >> 1) {
                uint64_t v6 = (char *)sub_2613E1088((void *)(v102 > 1), v103 + 1, 1, v6);
              }
              v94 += 2;
              *((void *)v6 + 2) = v103 + 1;
              *(void *)&v6[8 * v103 + 32] = v101;
              if (!--v93)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_80;
              }
            }
          }
          goto LABEL_79;
        }
LABEL_78:
        swift_bridgeObjectRelease();
        uint64_t v79 = MEMORY[0x263F8EE78];
        uint64_t v93 = *(void *)(MEMORY[0x263F8EE78] + 16);
        if (v93) {
          goto LABEL_66;
        }
LABEL_79:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v6 = (char *)MEMORY[0x263F8EE78];
LABEL_80:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (uint64_t)v6;
      }
      goto LABEL_92;
    }
    break;
  }
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  swift_bridgeObjectRelease();
LABEL_91:
  swift_endAccess();
  __break(1u);
LABEL_92:
  LODWORD(v107) = 0;
  uint64_t v106 = 3451;
  LOBYTE(v105) = 2;
LABEL_94:
  uint64_t result = sub_2614D5D58();
  __break(1u);
  return result;
}

uint64_t sub_261420A48()
{
  swift_getObjectType();
  uint64_t v1 = qword_26A919990;
  if (qword_26A919990)
  {
    uint64_t v2 = qword_26A919980;
    uint64_t v3 = qword_26A919988;
    long long v13 = xmmword_26A919970;
    sub_2613DC0AC(xmmword_26A919970, *((uint64_t *)&xmmword_26A919970 + 1), qword_26A919980, qword_26A919988, qword_26A919990);
    sub_26147355C();
    sub_261473574();
    uint64_t v14 = v2;
    uint64_t v4 = sub_26147357C((uint64_t)&v15);
    if (v0)
    {
      return sub_2613DC0FC(v13, *((uint64_t *)&v13 + 1), v2, v3, v1);
    }
    else
    {
      MEMORY[0x270FA5388](v4);
      sub_261473274((uint64_t (*)(void))sub_26142285C);
      sub_261473574();
      uint64_t v6 = sub_26147357C((uint64_t)&v16);
      MEMORY[0x270FA5388](v6);
      sub_261473274((uint64_t (*)(void))sub_26142285C);
      uint64_t v8 = sub_2614D56C8();
      *(void *)(v8 + 16) = 128;
      *(_OWORD *)(v8 + 32) = 0u;
      *(_OWORD *)(v8 + 48) = 0u;
      *(_OWORD *)(v8 + 64) = 0u;
      *(_OWORD *)(v8 + 80) = 0u;
      *(_OWORD *)(v8 + 96) = 0u;
      *(_OWORD *)(v8 + 112) = 0u;
      *(_OWORD *)(v8 + 128) = 0u;
      *(_OWORD *)(v8 + 144) = 0u;
      *(_OWORD *)(v8 + 160) = 0u;
      *(_OWORD *)(v8 + 176) = 0u;
      *(_OWORD *)(v8 + 192) = 0u;
      *(_OWORD *)(v8 + 208) = 0u;
      *(_OWORD *)(v8 + 224) = 0u;
      *(_OWORD *)(v8 + 240) = 0u;
      *(_OWORD *)(v8 + 256) = 0u;
      *(_OWORD *)(v8 + 272) = 0u;
      *(_OWORD *)(v8 + 288) = 0u;
      *(_OWORD *)(v8 + 304) = 0u;
      *(_OWORD *)(v8 + 320) = 0u;
      *(_OWORD *)(v8 + 336) = 0u;
      *(_OWORD *)(v8 + 352) = 0u;
      *(_OWORD *)(v8 + 368) = 0u;
      *(_OWORD *)(v8 + 384) = 0u;
      *(_OWORD *)(v8 + 400) = 0u;
      *(_OWORD *)(v8 + 416) = 0u;
      *(_OWORD *)(v8 + 432) = 0u;
      *(_OWORD *)(v8 + 448) = 0u;
      *(_OWORD *)(v8 + 464) = 0u;
      *(_OWORD *)(v8 + 480) = 0u;
      *(_OWORD *)(v8 + 496) = 0u;
      *(_OWORD *)(v8 + 512) = 0u;
      *(_OWORD *)(v8 + 528) = 0u;
      sub_2613C23AC(&qword_26A914AB8);
      uint64_t v9 = 6;
      uint64_t v10 = (void *)sub_2614D56C8();
      v10[2] = 48;
      v10[4] = v8;
      v10[5] = v8;
      do
      {
        v10[v9] = v8;
        swift_bridgeObjectRetain();
        ++v9;
      }
      while (v9 != 52);
      swift_bridgeObjectRetain();
      sub_2613C23AC(&qword_26A915020);
      uint64_t v11 = sub_2614D56C8();
      *(void *)(v11 + 16) = 1;
      *(void *)(v11 + 32) = v10;
      uint64_t v18 = v11;
      sub_261473568();
      sub_261473574();
      sub_26147357C((uint64_t)v17);
      sub_2614734AC(v13);
      uint64_t v12 = sub_2613DC0FC(v13, *((uint64_t *)&v13 + 1), v14, v3, v1);
      MEMORY[0x270FA5388](v12);
      sub_261473274((uint64_t (*)(void))sub_261422874);
      return v18;
    }
  }
  else
  {
    sub_2613DC2B8();
    swift_allocError();
    void *v5 = 0xD000000000000014;
    v5[1] = 0x80000002614E3060;
    return swift_willThrow();
  }
}

uint64_t sub_261420F70()
{
  swift_getObjectType();
  uint64_t v1 = qword_26A9199E0;
  if (qword_26A9199E0)
  {
    uint64_t v2 = qword_26A9199D0;
    uint64_t v3 = qword_26A9199D8;
    uint64_t v15 = *((void *)&xmmword_26A9199C0 + 1);
    uint64_t v16 = xmmword_26A9199C0;
    sub_2613DC0AC(xmmword_26A9199C0, *((uint64_t *)&xmmword_26A9199C0 + 1), qword_26A9199D0, qword_26A9199D8, qword_26A9199E0);
    sub_26147355C();
    sub_261473574();
    uint64_t v14 = v3;
    uint64_t v4 = sub_26147357C((uint64_t)&v17);
    if (v0)
    {
      return sub_2613DC0FC(v16, v15, v2, v3, v1);
    }
    else
    {
      MEMORY[0x270FA5388](v4);
      sub_261473274((uint64_t (*)(void))sub_26142285C);
      sub_261473574();
      uint64_t v6 = sub_26147357C((uint64_t)&v18);
      MEMORY[0x270FA5388](v6);
      sub_261473274((uint64_t (*)(void))sub_26142285C);
      sub_261473574();
      sub_26147357C((uint64_t)&v19);
      MEMORY[0x270FA5388](v16);
      sub_261473274((uint64_t (*)(void))sub_26142288C);
      sub_261473574();
      uint64_t v7 = sub_26147357C((uint64_t)&v20);
      MEMORY[0x270FA5388](v7);
      sub_261473274((uint64_t (*)(void))sub_26142285C);
      uint64_t v9 = sub_2614D56C8();
      *(void *)(v9 + 16) = 128;
      *(_OWORD *)(v9 + 32) = 0u;
      *(_OWORD *)(v9 + 48) = 0u;
      *(_OWORD *)(v9 + 64) = 0u;
      *(_OWORD *)(v9 + 80) = 0u;
      *(_OWORD *)(v9 + 96) = 0u;
      *(_OWORD *)(v9 + 112) = 0u;
      *(_OWORD *)(v9 + 128) = 0u;
      *(_OWORD *)(v9 + 144) = 0u;
      *(_OWORD *)(v9 + 160) = 0u;
      *(_OWORD *)(v9 + 176) = 0u;
      *(_OWORD *)(v9 + 192) = 0u;
      *(_OWORD *)(v9 + 208) = 0u;
      *(_OWORD *)(v9 + 224) = 0u;
      *(_OWORD *)(v9 + 240) = 0u;
      *(_OWORD *)(v9 + 256) = 0u;
      *(_OWORD *)(v9 + 272) = 0u;
      *(_OWORD *)(v9 + 288) = 0u;
      *(_OWORD *)(v9 + 304) = 0u;
      *(_OWORD *)(v9 + 320) = 0u;
      *(_OWORD *)(v9 + 336) = 0u;
      *(_OWORD *)(v9 + 352) = 0u;
      *(_OWORD *)(v9 + 368) = 0u;
      *(_OWORD *)(v9 + 384) = 0u;
      *(_OWORD *)(v9 + 400) = 0u;
      *(_OWORD *)(v9 + 416) = 0u;
      *(_OWORD *)(v9 + 432) = 0u;
      *(_OWORD *)(v9 + 448) = 0u;
      *(_OWORD *)(v9 + 464) = 0u;
      *(_OWORD *)(v9 + 480) = 0u;
      *(_OWORD *)(v9 + 496) = 0u;
      *(_OWORD *)(v9 + 512) = 0u;
      *(_OWORD *)(v9 + 528) = 0u;
      sub_2613C23AC(&qword_26A914AB8);
      uint64_t v10 = 6;
      uint64_t v11 = (void *)sub_2614D56C8();
      void v11[2] = 48;
      void v11[4] = v9;
      v11[5] = v9;
      do
      {
        v11[v10] = v9;
        swift_bridgeObjectRetain();
        ++v10;
      }
      while (v10 != 52);
      swift_bridgeObjectRetain();
      sub_2613C23AC(&qword_26A915020);
      uint64_t v12 = sub_2614D56C8();
      *(void *)(v12 + 16) = 1;
      *(void *)(v12 + 32) = v11;
      uint64_t v22 = v12;
      sub_261473568();
      sub_261473574();
      sub_26147357C((uint64_t)v21);
      sub_2614734AC(v16);
      uint64_t v13 = sub_2613DC0FC(v16, v15, v2, v14, v1);
      MEMORY[0x270FA5388](v13);
      sub_261473274((uint64_t (*)(void))sub_261422874);
      return v22;
    }
  }
  else
  {
    sub_2613DC2B8();
    swift_allocError();
    void *v5 = 0xD000000000000014;
    v5[1] = 0x80000002614E3080;
    return swift_willThrow();
  }
}

uint64_t sub_261421634()
{
  swift_getObjectType();
  uint64_t v1 = qword_26A919A30;
  if (qword_26A919A30)
  {
    uint64_t v2 = qword_26A919A20;
    uint64_t v3 = qword_26A919A28;
    long long v12 = xmmword_26A919A10;
    sub_2613DC0AC(xmmword_26A919A10, *((uint64_t *)&xmmword_26A919A10 + 1), qword_26A919A20, qword_26A919A28, qword_26A919A30);
    sub_26147355C();
    sub_261473574();
    uint64_t v4 = sub_26147357C((uint64_t)&v13);
    if (v0)
    {
      return sub_2613DC0FC(v12, *((uint64_t *)&v12 + 1), v2, v3, v1);
    }
    else
    {
      MEMORY[0x270FA5388](v4);
      sub_261473274((uint64_t (*)(void))sub_26142288C);
      uint64_t v7 = sub_2614D56C8();
      *(void *)(v7 + 16) = 384;
      bzero((void *)(v7 + 32), 0x600uLL);
      sub_2613C23AC(&qword_26A914AB8);
      uint64_t v8 = 6;
      uint64_t v9 = (void *)sub_2614D56C8();
      id v9[2] = 48;
      v9[4] = v7;
      void v9[5] = v7;
      do
      {
        v9[v8] = v7;
        swift_bridgeObjectRetain();
        ++v8;
      }
      while (v8 != 52);
      swift_bridgeObjectRetain();
      sub_2613C23AC(&qword_26A915020);
      uint64_t v10 = sub_2614D56C8();
      *(void *)(v10 + 16) = 1;
      *(void *)(v10 + 32) = v9;
      uint64_t v15 = v10;
      sub_261473568();
      sub_261473574();
      sub_26147357C((uint64_t)&v14);
      sub_2614734AC(v12);
      uint64_t v11 = sub_2613DC0FC(v12, *((uint64_t *)&v12 + 1), v2, v3, v1);
      MEMORY[0x270FA5388](v11);
      sub_261473274((uint64_t (*)(void))sub_261422C6C);
      return v15;
    }
  }
  else
  {
    sub_2613DC2B8();
    swift_allocError();
    *uint64_t v6 = 0xD000000000000012;
    v6[1] = 0x80000002614E30E0;
    return swift_willThrow();
  }
}

id G2PFactored.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for G2PFactored();
  return objc_msgSendSuper2(&v2, sel_init);
}

id G2PFactored.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for G2PFactored();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *sub_261421AEC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_2613C23AC(&qword_26A914AD0);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      long long v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      long long v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_261422EC8(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_261421BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2613D8F00(a1, a2);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2613DA9D8();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_2614075CC(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_261421CC8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_2613D8F00(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_2613DA9D8();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_2613DA51C(result, a4 & 1);
  uint64_t result = sub_2613D8F00(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_2614D5FF8();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v20 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v20 = a2;
  v20[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v18[2] = v23;
  return swift_bridgeObjectRetain();
}

uint64_t sub_261421E2C()
{
  uint64_t v88 = sub_2614D4B78();
  uint64_t v1 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v87 = (char *)&v73 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (void *)sub_2614D5378();
  id v4 = objc_msgSend(v3, sel_stringByDeletingPathExtension);

  uint64_t v5 = sub_2614D53A8();
  uint64_t v7 = v6;

  int64_t v8 = (void *)sub_2614D5378();
  id v9 = objc_msgSend(v8, sel_pathExtension);

  sub_2614D53A8();
  uint64_t v76 = v5;
  sub_261419E08();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  if (!v11)
  {
    swift_bridgeObjectRelease();
    sub_2614227EC();
    swift_allocError();
    void *v15 = 0xD00000000000001DLL;
    v15[1] = 0x80000002614E3130;
    return swift_willThrow();
  }
  uint64_t v12 = sub_2614D5368();
  if (v0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v16 = v12;
  uint64_t v17 = v13;
  uint64_t v75 = v7;
  swift_bridgeObjectRelease();
  unint64_t v92 = sub_26141F11C(MEMORY[0x263F8EE78]);
  *(void *)&long long v89 = v16;
  *((void *)&v89 + 1) = v17;
  uint64_t v18 = v87;
  sub_2614D4B68();
  unint64_t v85 = sub_2613DC3BC();
  uint64_t v19 = sub_2614D5B78();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v20 = v1 + 8;
  uint64_t v86 = v21;
  v21(v18, v88);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v84 = *(void *)(v19 + 16);
  if (!v84)
  {
LABEL_74:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v92;
  }
  uint64_t v81 = 0;
  unint64_t v22 = 0;
  uint64_t v83 = v19 + 32;
  uint64_t v73 = (char *)&v89 + 2;
  BOOL v74 = (char *)&v89 + 3;
  uint64_t v82 = v19;
  while (v22 < *(void *)(v19 + 16))
  {
    uint64_t v23 = (uint64_t *)(v83 + 16 * v22);
    uint64_t v25 = *v23;
    unint64_t v24 = v23[1];
    *(void *)&long long v89 = *v23;
    *((void *)&v89 + 1) = v24;
    swift_bridgeObjectRetain();
    float v26 = v87;
    sub_2614D4B38();
    uint64_t v27 = sub_2614D5BA8();
    unint64_t v29 = v28;
    uint64_t v30 = v26;
    uint64_t v31 = v20;
    v86(v30, v88);
    uint64_t v32 = HIBYTE(v29) & 0xF;
    if ((v29 & 0x2000000000000000) == 0) {
      uint64_t v32 = v27 & 0xFFFFFFFFFFFFLL;
    }
    if (!v32 || (sub_2613E5BB0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    char v33 = sub_2613E5BB0();
    uint64_t v34 = swift_bridgeObjectRelease();
    if (v33) {
      goto LABEL_9;
    }
    *(void *)&long long v89 = 32;
    *((void *)&v89 + 1) = 0xE100000000000000;
    MEMORY[0x270FA5388](v34);
    *(&v73 - 2) = (char *)&v89;
    swift_bridgeObjectRetain_n();
    uint64_t v35 = v81;
    uint64_t v36 = sub_2613D7D10(0x7FFFFFFFFFFFFFFFLL, 1, sub_261422840, (uint64_t)(&v73 - 4), v25, v24);
    uint64_t v81 = v35;
    swift_bridgeObjectRelease();
    if (*(void *)(v36 + 16) != 2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)&long long v89 = 0;
      *((void *)&v89 + 1) = 0xE000000000000000;
      sub_2614D5C38();
      swift_bridgeObjectRelease();
      strcpy((char *)&v89, "Invalid line ");
      HIWORD(v89) = -4864;
      sub_2614D54D8();
      swift_bridgeObjectRelease();
      sub_2614D54D8();
      sub_2614D54D8();
      swift_bridgeObjectRelease();
      long long v71 = v89;
      sub_2614227EC();
      swift_allocError();
      _OWORD *v72 = v71;
      return swift_willThrow();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (!*(void *)(v36 + 16)) {
      goto LABEL_78;
    }
    uint64_t v38 = *(void *)(v36 + 48);
    uint64_t v37 = *(void *)(v36 + 56);
    long long v89 = *(_OWORD *)(v36 + 32);
    uint64_t v90 = v38;
    uint64_t v91 = v37;
    swift_bridgeObjectRetain();
    uint64_t v39 = v87;
    sub_2614D4AF8();
    sub_261422FB0();
    uint64_t v80 = sub_2614D5BA8();
    uint64_t v41 = v40;
    uint64_t v42 = v88;
    uint64_t v43 = v31;
    uint64_t v44 = v86;
    v86(v39, v88);
    uint64_t result = swift_bridgeObjectRelease();
    if (*(void *)(v36 + 16) < 2uLL) {
      goto LABEL_79;
    }
    uint64_t v77 = v41;
    long long v79 = *(_OWORD *)(v36 + 64);
    uint64_t v20 = v43;
    uint64_t v45 = *(void *)(v36 + 88);
    uint64_t v78 = *(void *)(v36 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    long long v89 = v79;
    uint64_t v90 = v78;
    uint64_t v91 = v45;
    sub_2614D4AF8();
    uint64_t v46 = sub_2614D5BA8();
    unint64_t v48 = v47;
    v44(v39, v42);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v49 = HIBYTE(v48) & 0xF;
    uint64_t v50 = v46 & 0xFFFFFFFFFFFFLL;
    if ((v48 & 0x2000000000000000) != 0) {
      uint64_t v51 = HIBYTE(v48) & 0xF;
    }
    else {
      uint64_t v51 = v46 & 0xFFFFFFFFFFFFLL;
    }
    if (!v51)
    {
      swift_bridgeObjectRelease();
LABEL_71:
      sub_261421BE8(v80, v77);
      goto LABEL_9;
    }
    if ((v48 & 0x1000000000000000) != 0)
    {
      uint64_t v54 = (uint64_t)sub_2613D9774(v46, v48, 10);
      LOBYTE(v46) = v70;
      goto LABEL_62;
    }
    if ((v48 & 0x2000000000000000) == 0)
    {
      if ((v46 & 0x1000000000000000) != 0) {
        os_log_type_t v52 = (unsigned __int8 *)((v48 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        os_log_type_t v52 = (unsigned __int8 *)sub_2614D5C98();
      }
      uint64_t v53 = v81;
      uint64_t v54 = (uint64_t)sub_2613D985C(v52, v50, 10);
      uint64_t v81 = v53;
      LOBYTE(v46) = v55 & 1;
      goto LABEL_62;
    }
    *(void *)&long long v89 = v46;
    *((void *)&v89 + 1) = v48 & 0xFFFFFFFFFFFFFFLL;
    if (v46 == 43)
    {
      if (!v49) {
        goto LABEL_81;
      }
      if (v49 != 1 && (BYTE1(v46) - 48) <= 9u)
      {
        uint64_t v54 = (BYTE1(v46) - 48);
        if (v49 == 2) {
          goto LABEL_61;
        }
        if ((BYTE2(v46) - 48) <= 9u)
        {
          uint64_t v54 = 10 * (BYTE1(v46) - 48) + (BYTE2(v46) - 48);
          uint64_t v56 = v49 - 3;
          if (!v56) {
            goto LABEL_61;
          }
          uint64_t v57 = (unsigned __int8 *)v74;
          while (1)
          {
            unsigned int v58 = *v57 - 48;
            if (v58 > 9) {
              break;
            }
            uint64_t v59 = 10 * v54;
            if ((unsigned __int128)(v54 * (__int128)10) >> 64 != (10 * v54) >> 63) {
              break;
            }
            uint64_t v54 = v59 + v58;
            if (__OFADD__(v59, v58)) {
              break;
            }
            LOBYTE(v46) = 0;
            ++v57;
            if (!--v56) {
              goto LABEL_62;
            }
          }
        }
      }
LABEL_49:
      uint64_t v54 = 0;
      LOBYTE(v46) = 1;
      goto LABEL_62;
    }
    if (v46 != 45)
    {
      if (v49 && (v46 - 48) <= 9u)
      {
        uint64_t v54 = (v46 - 48);
        if (v49 == 1) {
          goto LABEL_61;
        }
        if ((BYTE1(v46) - 48) <= 9u)
        {
          uint64_t v54 = 10 * (v46 - 48) + (BYTE1(v46) - 48);
          uint64_t v60 = v49 - 2;
          if (!v60) {
            goto LABEL_61;
          }
          unint64_t v61 = (unsigned __int8 *)v73;
          while (1)
          {
            unsigned int v62 = *v61 - 48;
            if (v62 > 9) {
              break;
            }
            uint64_t v63 = 10 * v54;
            if ((unsigned __int128)(v54 * (__int128)10) >> 64 != (10 * v54) >> 63) {
              break;
            }
            uint64_t v54 = v63 + v62;
            if (__OFADD__(v63, v62)) {
              break;
            }
            LOBYTE(v46) = 0;
            ++v61;
            if (!--v60) {
              goto LABEL_62;
            }
          }
        }
      }
      goto LABEL_49;
    }
    if (!v49) {
      goto LABEL_80;
    }
    if (v49 == 1 || (BYTE1(v46) - 48) > 9u) {
      goto LABEL_49;
    }
    if (v49 != 2)
    {
      if ((BYTE2(v46) - 48) <= 9u)
      {
        uint64_t v54 = -10 * (BYTE1(v46) - 48) - (BYTE2(v46) - 48);
        uint64_t v64 = v49 - 3;
        if (!v64)
        {
LABEL_61:
          LOBYTE(v46) = 0;
          goto LABEL_62;
        }
        os_log_type_t v67 = (unsigned __int8 *)v74;
        while (1)
        {
          unsigned int v68 = *v67 - 48;
          if (v68 > 9) {
            break;
          }
          uint64_t v69 = 10 * v54;
          if ((unsigned __int128)(v54 * (__int128)10) >> 64 != (10 * v54) >> 63) {
            break;
          }
          uint64_t v54 = v69 - v68;
          if (__OFSUB__(v69, v68)) {
            break;
          }
          LOBYTE(v46) = 0;
          ++v67;
          if (!--v64) {
            goto LABEL_62;
          }
        }
      }
      goto LABEL_49;
    }
    LOBYTE(v46) = 0;
    uint64_t v54 = -(uint64_t)(BYTE1(v46) - 48);
LABEL_62:
    swift_bridgeObjectRelease();
    if (v46) {
      goto LABEL_71;
    }
    unint64_t v65 = v92;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v89 = v65;
    unint64_t v92 = 0x8000000000000000;
    sub_261421CC8(v54, v80, v77, isUniquelyReferenced_nonNull_native);
    unint64_t v92 = v89;
    swift_bridgeObjectRelease();
LABEL_9:
    uint64_t result = swift_bridgeObjectRelease();
    ++v22;
    uint64_t v19 = v82;
    if (v22 == v84) {
      goto LABEL_74;
    }
  }
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for G2PFactored()
{
  return self;
}

unint64_t sub_261422790()
{
  unint64_t result = qword_26A9152C0;
  if (!qword_26A9152C0)
  {
    sub_2613C5EC8(&qword_26A9152B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9152C0);
  }
  return result;
}

unint64_t sub_2614227EC()
{
  unint64_t result = qword_26A9152C8;
  if (!qword_26A9152C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9152C8);
  }
  return result;
}

uint64_t sub_261422840(void *a1)
{
  return sub_2613DD7C4(a1) & 1;
}

_DWORD *sub_26142285C(_DWORD *a1)
{
  return sub_2614228A4(a1);
}

uint64_t sub_261422874(uint64_t a1)
{
  return sub_261422A3C(a1);
}

uint64_t sub_26142288C(uint64_t a1)
{
  return sub_261422B84(a1);
}

_DWORD *sub_2614228A4(_DWORD *result)
{
  uint64_t v2 = *(void *)(v1 + 16);
  if (*(void *)(v2 + 16) <= 0x2FuLL)
  {
    __break(1u);
  }
  else
  {
    *unint64_t result = *(_DWORD *)(v2 + 32);
    result[1] = *(_DWORD *)(v2 + 36);
    result[2] = *(_DWORD *)(v2 + 40);
    result[3] = *(_DWORD *)(v2 + 44);
    result[4] = *(_DWORD *)(v2 + 48);
    result[5] = *(_DWORD *)(v2 + 52);
    result[6] = *(_DWORD *)(v2 + 56);
    result[7] = *(_DWORD *)(v2 + 60);
    result[8] = *(_DWORD *)(v2 + 64);
    result[9] = *(_DWORD *)(v2 + 68);
    result[10] = *(_DWORD *)(v2 + 72);
    result[11] = *(_DWORD *)(v2 + 76);
    result[12] = *(_DWORD *)(v2 + 80);
    result[13] = *(_DWORD *)(v2 + 84);
    result[14] = *(_DWORD *)(v2 + 88);
    result[15] = *(_DWORD *)(v2 + 92);
    result[16] = *(_DWORD *)(v2 + 96);
    result[17] = *(_DWORD *)(v2 + 100);
    result[18] = *(_DWORD *)(v2 + 104);
    result[19] = *(_DWORD *)(v2 + 108);
    result[20] = *(_DWORD *)(v2 + 112);
    result[21] = *(_DWORD *)(v2 + 116);
    result[22] = *(_DWORD *)(v2 + 120);
    result[23] = *(_DWORD *)(v2 + 124);
    result[24] = *(_DWORD *)(v2 + 128);
    result[25] = *(_DWORD *)(v2 + 132);
    result[26] = *(_DWORD *)(v2 + 136);
    result[27] = *(_DWORD *)(v2 + 140);
    result[28] = *(_DWORD *)(v2 + 144);
    result[29] = *(_DWORD *)(v2 + 148);
    result[30] = *(_DWORD *)(v2 + 152);
    result[31] = *(_DWORD *)(v2 + 156);
    result[32] = *(_DWORD *)(v2 + 160);
    result[33] = *(_DWORD *)(v2 + 164);
    result[34] = *(_DWORD *)(v2 + 168);
    result[35] = *(_DWORD *)(v2 + 172);
    result[36] = *(_DWORD *)(v2 + 176);
    result[37] = *(_DWORD *)(v2 + 180);
    result[38] = *(_DWORD *)(v2 + 184);
    result[39] = *(_DWORD *)(v2 + 188);
    result[40] = *(_DWORD *)(v2 + 192);
    result[41] = *(_DWORD *)(v2 + 196);
    result[42] = *(_DWORD *)(v2 + 200);
    result[43] = *(_DWORD *)(v2 + 204);
    result[44] = *(_DWORD *)(v2 + 208);
    result[45] = *(_DWORD *)(v2 + 212);
    result[46] = *(_DWORD *)(v2 + 216);
    result[47] = *(_DWORD *)(v2 + 220);
  }
  return result;
}

uint64_t sub_261422A3C(uint64_t a1)
{
  unint64_t v3 = 0;
  id v4 = *(uint64_t **)(v1 + 16);
LABEL_3:
  unint64_t v5 = 0;
  unint64_t v6 = v3 + 1;
  while (1)
  {
    int v7 = *(_DWORD *)(a1 + 4 * v5);
    int64_t v8 = (void *)*v4;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *id v4 = (uint64_t)v8;
    if (result)
    {
      if (!v8[2]) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t result = (uint64_t)sub_26141B2E0(v8);
      int64_t v8 = (void *)result;
      *id v4 = result;
      if (!*(void *)(result + 16)) {
        goto LABEL_19;
      }
    }
    uint64_t v10 = (void *)v8[4];
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    v8[4] = v10;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_2613D8EC8(v10);
      uint64_t v10 = (void *)result;
      v8[4] = result;
    }
    if (v3 >= v10[2]) {
      break;
    }
    uint64_t v11 = v10 + 4;
    uint64_t v12 = v11[v3];
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    v11[v3] = v12;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_2613D8E30(v12);
      uint64_t v12 = result;
      v11[v3] = result;
    }
    if (v5 >= *(void *)(v12 + 16)) {
      goto LABEL_18;
    }
    *(_DWORD *)(v12 + 4 * v5++ + 32) = v7;
    if (v5 == 128)
    {
      a1 += 512;
      ++v3;
      if (v6 == 48) {
        return result;
      }
      goto LABEL_3;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_261422B84(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 16);
  if (!*(void *)(v2 + 16)) {
    goto LABEL_21;
  }
  uint64_t v3 = 0;
  uint64_t v4 = *(void *)(v2 + 32);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(void *)(v4 + 16);
  int v7 = (_OWORD *)(result + 16);
  uint64_t v8 = result;
  while (2)
  {
    if (v3 == v6)
    {
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
      return result;
    }
    uint64_t v9 = *(void *)(v5 + 8 * v3);
    unint64_t v10 = *(void *)(v9 + 16);
    if (v10 >= 0x7F) {
      unint64_t v11 = 127;
    }
    else {
      unint64_t v11 = *(void *)(v9 + 16);
    }
    if (v11 > 7 && (unint64_t)(result + (v3 << 9) - v9 - 32) >= 0x20)
    {
      unint64_t v13 = v11 + 1;
      uint64_t v14 = v13 & 7;
      if ((v13 & 7) == 0) {
        uint64_t v14 = 8;
      }
      unint64_t v12 = v13 - v14;
      uint64_t v15 = (long long *)(v9 + 48);
      unint64_t v16 = v12;
      uint64_t v17 = v7;
      do
      {
        long long v18 = *v15;
        *(v17 - 1) = *(v15 - 1);
        _OWORD *v17 = v18;
        v17 += 2;
        v15 += 2;
        v16 -= 8;
      }
      while (v16);
    }
    else
    {
      unint64_t v12 = 0;
    }
    ++v3;
    uint64_t v19 = v9 + 32;
    do
    {
      if (v10 == v12)
      {
        __break(1u);
        goto LABEL_20;
      }
      *(_DWORD *)(v8 + 4 * v12) = *(_DWORD *)(v19 + 4 * v12);
      ++v12;
    }
    while (v12 != 128);
    v7 += 32;
    v8 += 512;
    if (v3 != 48) {
      continue;
    }
    return result;
  }
}

uint64_t sub_261422C6C(uint64_t a1)
{
  unint64_t v3 = 0;
  uint64_t v4 = *(uint64_t **)(v1 + 16);
LABEL_3:
  unint64_t v5 = 0;
  unint64_t v6 = v3 + 1;
  while (1)
  {
    int v7 = *(_DWORD *)(a1 + 4 * v5);
    uint64_t v8 = (void *)*v4;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v4 = (uint64_t)v8;
    if (result)
    {
      if (!v8[2]) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t result = (uint64_t)sub_26141B2E0(v8);
      uint64_t v8 = (void *)result;
      *uint64_t v4 = result;
      if (!*(void *)(result + 16)) {
        goto LABEL_19;
      }
    }
    unint64_t v10 = (void *)v8[4];
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    v8[4] = v10;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_2613D8EC8(v10);
      unint64_t v10 = (void *)result;
      v8[4] = result;
    }
    if (v3 >= v10[2]) {
      break;
    }
    unint64_t v11 = v10 + 4;
    uint64_t v12 = v11[v3];
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    v11[v3] = v12;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_2613D8E30(v12);
      uint64_t v12 = result;
      v11[v3] = result;
    }
    if (v5 >= *(void *)(v12 + 16)) {
      goto LABEL_18;
    }
    *(_DWORD *)(v12 + 4 * v5++ + 32) = v7;
    if (v5 == 384)
    {
      a1 += 1536;
      ++v3;
      if (v6 == 48) {
        return result;
      }
      goto LABEL_3;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for G2PErrorV2()
{
  return &type metadata for G2PErrorV2;
}

uint64_t method lookup function for G2PFactored(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for G2PFactored);
}

uint64_t dispatch thunk of static G2PFactored.createIfValid()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of G2PFactored.getPronounciationString(word:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of G2PFactored.getPronounciation(word:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of G2PFactored.getPronounciationInfo(word:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

char *sub_261422EC8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_2614D5DE8();
  __break(1u);
  return result;
}

unint64_t sub_261422FB0()
{
  unint64_t result = qword_26A9152D0;
  if (!qword_26A9152D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9152D0);
  }
  return result;
}

uint64_t sub_261423004()
{
  return swift_retain();
}

uint64_t sub_26142303C(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 64) = a1;
  return swift_release();
}

uint64_t sub_261423084@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 72);
  int v6 = *(_DWORD *)(v1 + 152);
  uint64_t v5 = v1 + 152;
  int v4 = v6;
  uint64_t v7 = *(void *)(v5 - 72);
  uint64_t v8 = *(void *)(v5 - 64);
  uint64_t v9 = *(void *)(v5 - 56);
  uint64_t v10 = *(void *)(v5 - 48);
  uint64_t v11 = *(void *)(v5 - 40);
  uint64_t v12 = *(void *)(v5 - 32);
  uint64_t v13 = *(void *)(v5 - 24);
  uint64_t v14 = *(void *)(v5 - 16);
  uint64_t v15 = *(void *)(v5 - 8);
  LOWORD(v6) = *(_WORD *)(v5 + 4);
  char v16 = *(unsigned char *)(v5 + 6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v13;
  *(void *)(a1 + 64) = v14;
  *(void *)(a1 + 72) = v15;
  *(_DWORD *)(a1 + 80) = v4;
  *(unsigned char *)(a1 + 86) = v16;
  *(_WORD *)(a1 + 84) = v6;
  return sub_261416F0C(v3);
}

uint64_t sub_261423118(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[3];
  long long v13 = *((_OWORD *)a1 + 2);
  long long v14 = *(_OWORD *)(a1 + 1);
  uint64_t v4 = a1[6];
  long long v12 = *(_OWORD *)(a1 + 7);
  uint64_t v5 = a1[9];
  int v7 = *((_DWORD *)a1 + 20);
  int v6 = a1 + 10;
  __int16 v8 = *((_WORD *)v6 + 2);
  char v9 = *((unsigned char *)v6 + 6);
  swift_beginAccess();
  uint64_t v10 = *(void *)(v1 + 72);
  *(void *)(v1 + 72) = v2;
  *(_OWORD *)(v1 + 80) = v14;
  *(void *)(v1 + 96) = v3;
  *(_OWORD *)(v1 + 104) = v13;
  *(void *)(v1 + 120) = v4;
  *(_OWORD *)(v1 + 128) = v12;
  *(void *)(v1 + 144) = v5;
  *(_DWORD *)(v1 + 152) = v7;
  *(_WORD *)(v1 + 156) = v8;
  *(unsigned char *)(v1 + 158) = v9;
  return sub_26140FB6C(v10);
}

uint64_t VAResultGeneratorVerifier.__allocating_init(subVerifier:config:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 64) = 0u;
  *(_OWORD *)(v4 + 80) = 0u;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 128) = 0u;
  *(_OWORD *)(v4 + 143) = 0u;
  sub_2613E3434(a1, v4 + 16);
  *(void *)(v4 + 56) = a2;
  uint64_t v5 = sub_26141BF74();
  sub_2613DD718(a1);
  return v5;
}

uint64_t VAResultGeneratorVerifier.init(subVerifier:config:)(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(v2 + 143) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  sub_2613E3434(a1, v2 + 16);
  *(void *)(v2 + 56) = a2;
  uint64_t v5 = sub_26141BF74();
  sub_2613DD718(a1);
  return v5;
}

void sub_2614232E4(uint64_t *a1)
{
  uint64_t v56 = *a1;
  unsigned int v1 = *((_DWORD *)a1 + 2);
  int v41 = *((unsigned __int8 *)a1 + 12);
  int v42 = *((unsigned __int8 *)a1 + 13);
  uint64_t v39 = *((unsigned __int8 *)a1 + 32);
  uint64_t v40 = a1[3];
  uint64_t v35 = a1[5];
  uint64_t v36 = a1[2];
  uint64_t v38 = *((unsigned __int8 *)a1 + 48);
  int v37 = *((unsigned __int8 *)a1 + 49);
  unsigned int v2 = *((_DWORD *)a1 + 13);
  uint64_t v3 = *((unsigned __int8 *)a1 + 56);
  uint64_t v4 = a1[8];
  uint64_t v5 = a1[9];
  uint64_t v6 = *((unsigned __int8 *)a1 + 80);
  uint64_t v7 = *((unsigned __int8 *)a1 + 81);
  uint64_t v33 = *((unsigned __int8 *)a1 + 82);
  int v8 = *((unsigned __int8 *)a1 + 83);
  int v9 = *((unsigned __int8 *)a1 + 84);
  int v10 = *((unsigned __int8 *)a1 + 85);
  int v11 = *((unsigned __int8 *)a1 + 86);
  type metadata accessor for VAResultGenerator();
  long long v12 = (void *)v34[7];
  uint64_t v43 = v56;
  LODWORD(v44) = v1;
  BYTE4(v44) = v41;
  BYTE5(v44) = v42;
  uint64_t v45 = v36;
  uint64_t v46 = v40;
  LOBYTE(v47) = v39;
  uint64_t v48 = v35;
  LOBYTE(v49) = v38;
  BYTE1(v49) = v37;
  HIDWORD(v49) = v2;
  uint64_t v31 = v3;
  LOBYTE(v50) = v3;
  uint64_t v29 = v6;
  uint64_t v51 = v4;
  uint64_t v52 = v5;
  LOBYTE(v53) = v6;
  char v13 = v7;
  BYTE1(v53) = v7;
  BYTE2(v53) = v33;
  HIBYTE(v53) = v8;
  int v30 = v9;
  LOBYTE(v54) = v9;
  char v14 = v10;
  HIBYTE(v54) = v10;
  BOOL v55 = v11;
  swift_bridgeObjectRetain();
  uint64_t v15 = v12;
  uint64_t v16 = v56;
  swift_bridgeObjectRetain();
  sub_26146C818(v15, (uint64_t)&v43);
  if (!v32)
  {
    (*(void (**)(void))(*v34 + 152))();
    uint64_t v17 = 0x100000000;
    if (v41) {
      uint64_t v18 = 0x100000000;
    }
    else {
      uint64_t v18 = 0;
    }
    uint64_t v19 = v18 | v1;
    uint64_t v20 = 0x10000000000;
    if (v42) {
      uint64_t v21 = 0x10000000000;
    }
    else {
      uint64_t v21 = 0;
    }
    uint64_t v22 = v19 | v21;
    uint64_t v23 = 256;
    if (!v37) {
      uint64_t v23 = 0;
    }
    unint64_t v24 = v23 | v38 | ((unint64_t)v2 << 32);
    uint64_t v25 = 0x1000000;
    if (!v8) {
      uint64_t v25 = 0;
    }
    if (!v30) {
      uint64_t v17 = 0;
    }
    if (!v10) {
      uint64_t v20 = 0;
    }
    uint64_t v43 = v16;
    uint64_t v44 = v22;
    uint64_t v45 = v36;
    uint64_t v46 = v40;
    uint64_t v47 = v39;
    uint64_t v48 = v35;
    unint64_t v49 = v24;
    uint64_t v50 = v31;
    uint64_t v51 = v4;
    uint64_t v52 = v5;
    BOOL v55 = v11 != 0;
    int v53 = v29 | (v7 << 8) | (v33 << 16) | v25;
    __int16 v54 = (v29 | (v7 << 8) | (v33 << 16) | v25 | v17 | (unint64_t)v20) >> 32;
    float v26 = *(void (**)(uint64_t *))(*v34 + 176);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26(&v43);
    uint64_t v28 = v34[5];
    uint64_t v27 = v34[6];
    sub_2613DBF24(v34 + 2, v28);
    uint64_t v43 = v16;
    LODWORD(v44) = v1;
    BYTE4(v44) = v41;
    BYTE5(v44) = v42;
    uint64_t v45 = v36;
    uint64_t v46 = v40;
    LOBYTE(v47) = v39;
    uint64_t v48 = v35;
    LOBYTE(v49) = v38;
    BYTE1(v49) = v37;
    HIDWORD(v49) = v2;
    LOBYTE(v50) = v31;
    uint64_t v51 = v4;
    uint64_t v52 = v5;
    LOBYTE(v53) = v29;
    BYTE1(v53) = v13;
    BYTE2(v53) = v33;
    HIBYTE(v53) = v8;
    LOBYTE(v54) = v30;
    HIBYTE(v54) = v14;
    BOOL v55 = v11;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v27 + 16))(&v43, v28, v27);
  }
}

void sub_26142367C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v9 = *(void *)(v5 + 40);
  uint64_t v10 = *(void *)(v5 + 48);
  sub_2613DBF24((void *)(v5 + 16), v9);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, a2, v9, v10);
  if (v4) {
    return;
  }
  uint64_t v12 = v11;
  if ((*(unsigned char *)(v11 + 16) & 1) == 0)
  {
    static VAVerifierModelOutput.none.getter(a3);
LABEL_25:
    swift_release();
    return;
  }
  uint64_t v13 = *(void *)(v11 + 24);
  if (!v13)
  {
    sub_2613DC2B8();
    swift_allocError();
    unint64_t v28 = 0xD00000000000002BLL;
    uint64_t v29 = "resultGeneratorInput.scores not initialized";
LABEL_24:
    unint64_t *v27 = v28;
    v27[1] = (unint64_t)(v29 - 32) | 0x8000000000000000;
    swift_willThrow();
    goto LABEL_25;
  }
  char v14 = *(uint64_t (**)(uint64_t))(*(void *)v5 + 144);
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v83 = v14(v15);
  if (!v83)
  {
    swift_bridgeObjectRelease();
    sub_2613DC2B8();
    swift_allocError();
    unint64_t v28 = 0xD000000000000017;
    uint64_t v29 = "resultGenerator not set";
    goto LABEL_24;
  }
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v5 + 168))(&v87);
  uint64_t v80 = v87;
  if (!v87)
  {
    swift_bridgeObjectRelease();
    sub_2613DC2B8();
    swift_allocError();
    void *v61 = 0xD000000000000015;
    v61[1] = 0x80000002614E31A0;
    swift_willThrow();
    swift_release();
    goto LABEL_25;
  }
  unsigned int v62 = a3;
  uint64_t v85 = *(void *)(v13 + 16);
  if (!v85)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  uint64_t v77 = v12;
  uint64_t v78 = v88;
  uint64_t v73 = v89;
  uint64_t v74 = v90;
  char v75 = v91;
  uint64_t v76 = v92;
  uint64_t v79 = v93;
  char v63 = v94;
  uint64_t v71 = v96;
  uint64_t v72 = v95;
  int v68 = v97[6];
  int v67 = *(unsigned __int16 *)&v97[4];
  uint64_t v69 = *(unsigned int *)v97;
  uint64_t v84 = v13 + 32;
  uint64_t v16 = *(void *)(*(void *)(v13 + 32) + 16);
  uint64_t v17 = (void *)sub_2613D1BF8(MEMORY[0x263F8EE78], v16);
  uint64_t v81 = v16;
  if (v16)
  {
    unint64_t v18 = 0;
LABEL_10:
    unint64_t v98 = v18 + 1;
    uint64_t v20 = v84;
    uint64_t v19 = v85;
    while (v18 < *(void *)(*(void *)v20 + 16))
    {
      int v21 = *(_DWORD *)(*(void *)v20 + 4 * v18 + 32);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v17 = sub_2613D8EC8(v17);
      }
      if (v18 >= v17[2]) {
        goto LABEL_51;
      }
      uint64_t v22 = v17 + 4;
      uint64_t v23 = (char *)v17[v18 + 4];
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17[v18 + 4] = v23;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v23 = sub_2613D8310(0, *((void *)v23 + 2) + 1, 1, v23);
        v22[v18] = v23;
      }
      unint64_t v26 = *((void *)v23 + 2);
      unint64_t v25 = *((void *)v23 + 3);
      if (v26 >= v25 >> 1)
      {
        uint64_t v23 = sub_2613D8310((char *)(v25 > 1), v26 + 1, 1, v23);
        v22[v18] = v23;
      }
      *((void *)v23 + 2) = v26 + 1;
      *(_DWORD *)&v23[4 * v26 + 32] = v21;
      v20 += 8;
      if (!--v19)
      {
        unint64_t v18 = v98;
        if (v98 == v81) {
          goto LABEL_27;
        }
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
LABEL_27:
  uint64_t v30 = swift_bridgeObjectRelease();
  uint64_t v31 = (void *)MEMORY[0x263F8EED0];
  uint64_t v32 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & **(void **)(v5 + 56)) + 0xC8))(v30);
  uint64_t v33 = v77;
  if (!v32)
  {
LABEL_60:
    __break(1u);
    return;
  }
  uint64_t v34 = v32;
  unint64_t v35 = v69 | ((unint64_t)(v67 | (v68 << 16)) << 32);
  uint64_t v36 = (*(uint64_t (**)(void))((*v31 & *v32) + 0x138))();

  uint64_t v37 = v17[2];
  unint64_t v98 = v35;
  uint64_t v86 = v37;
  if (v37)
  {
    unint64_t v38 = 0;
    unint64_t v82 = v35 >> 8;
    char v70 = *(uint64_t (**)(uint64_t, uint64_t, void, void, unint64_t, unint64_t, unint64_t, float))(*(void *)v83 + 592);
    float v39 = (float)v36;
    v40.i64[0] = 0xFFFFFFFFFFFFFFLL;
    v40.i64[1] = 0xFFFFFFFFFFFFFFLL;
    uint64x2_t v41 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v35), v40);
    int16x8_t v42 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v41, (uint64x2_t)xmmword_2614DA470), (int32x4_t)vshlq_u64(v41, (uint64x2_t)xmmword_2614DA460));
    *(int8x8_t *)v42.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v42), (int8x8_t)0x1000100010001);
    uint64_t v64 = v36;
    uint64_t v65 = 4 * v36;
    uint64_t v43 = 32;
    unsigned __int32 v66 = vmovn_s16(v42).u32[0];
    unint64_t v44 = v35 >> 16;
    while (1)
    {
      unint64_t v45 = v38 + 1;
      uint64_t v46 = *(void *)(v33 + 32);
      if (v46)
      {
        int64_t v47 = v38 * v36;
        if ((unsigned __int128)((uint64_t)v38 * (__int128)v36) >> 64 != (uint64_t)(v38 * v36) >> 63) {
          goto LABEL_53;
        }
        uint64_t v48 = v45 * v36;
        if ((unsigned __int128)((uint64_t)v45 * (__int128)v36) >> 64 != (uint64_t)(v45 * v36) >> 63) {
          goto LABEL_54;
        }
        if (v48 < v47) {
          goto LABEL_55;
        }
        float v49 = 0.0;
        if (v47 != v48)
        {
          if (v47 >= v48) {
            goto LABEL_56;
          }
          if (v47 < 0) {
            goto LABEL_57;
          }
          unint64_t v50 = *(void *)(v46 + 16);
          if (v47 >= v50 || v48 - 1 >= v50) {
            goto LABEL_58;
          }
          uint64_t v51 = (float *)(v46 + v43);
          uint64_t v52 = v36;
          do
          {
            float v53 = *v51++;
            float v49 = v49 + v53;
            --v52;
          }
          while (v52);
        }
        float v54 = v49 / v39;
      }
      else
      {
        float v54 = 0.0;
      }
      if (v38 >= v17[2]) {
        goto LABEL_52;
      }
      uint64_t v55 = v17[v38 + 4];
      uint64_t v87 = v80;
      LODWORD(v88) = v78;
      WORD2(v88) = WORD2(v78) & 0x101;
      uint64_t v89 = v73;
      uint64_t v90 = v74;
      LOBYTE(v91) = v75 & 1;
      uint64_t v92 = v76;
      LOWORD(v93) = v79 & 0x101;
      HIDWORD(v93) = HIDWORD(v79);
      LOBYTE(v94) = v63 & 1;
      uint64_t v95 = v72;
      uint64_t v96 = v71;
      unint64_t v56 = v98;
      v97[0] = v98;
      v97[1] = v82;
      v97[2] = v44;
      *(_DWORD *)&v97[3] = v66;
      swift_bridgeObjectRetain();
      uint64_t v57 = VARuntimeParameters.keywordsNoThresholds.getter();
      uint64_t v58 = v70(v55, v57, 0, 0, v56, v82, v44, v54);
      swift_bridgeObjectRelease();
      uint64_t v59 = swift_bridgeObjectRelease();
      uint64_t v60 = *(void *)((*(uint64_t (**)(uint64_t))(*(void *)v58 + 88))(v59) + 16);
      swift_bridgeObjectRelease();
      if (v60) {
        break;
      }
      swift_release();
      uint64_t v36 = v64;
      v43 += v65;
      unint64_t v38 = v45;
      uint64_t v33 = v77;
      if (v45 == v86) {
        goto LABEL_46;
      }
    }
    sub_26140FB6C(v80);
    sub_261481280(v58, v62);
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_46:
    sub_26140FB6C(v80);
    static VAVerifierModelOutput.none.getter(v62);
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
}

void sub_261423E30()
{
}

uint64_t sub_261423E60()
{
  sub_2613DD718(v0 + 16);

  swift_release();
  return sub_26140FB6C(*(void *)(v0 + 72));
}

uint64_t VAResultGeneratorVerifier.deinit()
{
  uint64_t v0 = VAVerifierModel.deinit();
  sub_2613DD718(v0 + 16);

  swift_release();
  sub_26140FB6C(*(void *)(v0 + 72));
  return v0;
}

uint64_t VAResultGeneratorVerifier.__deallocating_deinit()
{
  uint64_t v0 = VAVerifierModel.deinit();
  sub_2613DD718(v0 + 16);

  swift_release();
  sub_26140FB6C(*(void *)(v0 + 72));
  return swift_deallocClassInstance();
}

uint64_t sub_261423FD8()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t VAResultGeneratorInput.hasInput.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t VAResultGeneratorInput.scores.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VAResultGeneratorInput.vadBuffer.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VAResultGeneratorInput.__allocating_init(hasInput:scores:vadBuffer:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = a3;
  return result;
}

uint64_t VAResultGeneratorInput.init(hasInput:scores:vadBuffer:)(char a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  *(void *)(v3 + 32) = a3;
  return v3;
}

uint64_t VAResultGeneratorInput.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t VAResultGeneratorInput.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VAResultGeneratorVerifier()
{
  return self;
}

uint64_t method lookup function for VAResultGeneratorVerifier(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VAResultGeneratorVerifier);
}

uint64_t dispatch thunk of VAResultGeneratorVerifier.__allocating_init(subVerifier:config:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of VAResultGeneratorVerifier.predict(predictionInput:shouldSkipVerifierInference:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t type metadata accessor for VAResultGeneratorInput()
{
  return self;
}

uint64_t method lookup function for VAResultGeneratorInput(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VAResultGeneratorInput);
}

uint64_t dispatch thunk of VAResultGeneratorInput.__allocating_init(hasInput:scores:vadBuffer:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of VAResultGeneratorInputProviding.predictScores(predictionInput:shouldSkipVerifierInference:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of VAResultGeneratorInputProviding.didStartListening(requestParams:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_261424210@<X0>(uint64_t *a1@<X8>)
{
  VARuntimeParameters.init()((uint64_t)a1);
  sub_2613C23AC(&qword_26A914AC8);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_2614D81C0;
  strcpy((char *)(v2 + 32), "wake_up:0.98");
  *(unsigned char *)(v2 + 45) = 0;
  *(_WORD *)(v2 + 46) = -5120;
  strcpy((char *)(v2 + 48), "open_siri:0.85");
  *(unsigned char *)(v2 + 63) = -18;
  strcpy((char *)(v2 + 64), "show_siri:0.8");
  *(_WORD *)(v2 + 78) = -4864;
  *(void *)(v2 + 80) = 0xD000000000000013;
  *(void *)(v2 + 88) = 0x80000002614E3290;
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2614242FC()
{
  return swift_deallocClassInstance();
}

uint64_t sub_26142430C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 80))();
}

uint64_t sub_261424350(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t sub_261424384@<X0>(void *a1@<X8>)
{
  VARuntimeParameters.init()((uint64_t)a1);
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_2614243D4()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 96))();
}

void *sub_261424418()
{
  return &unk_2614DAA70;
}

uint64_t static VAFixedKeywordSpotter.defaultPreSilenceCheckEnabled.getter()
{
  return 0;
}

void *sub_26142442C()
{
  return &unk_2614DAA71;
}

uint64_t static VAFixedKeywordSpotter.defaultPostSilenceCheckEnabled.getter()
{
  return 0;
}

void *sub_261424440()
{
  return &unk_2614DAA72;
}

uint64_t static VAFixedKeywordSpotter.defaultDuringSpeechCheckEnabled.getter()
{
  return 1;
}

id sub_261424454(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (char *)objc_allocWithZone(v6);
  char v14 = &v13[OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_runtimeParameters];
  *(_OWORD *)char v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  *((_OWORD *)v14 + 2) = 0u;
  *((_OWORD *)v14 + 3) = 0u;
  *((_OWORD *)v14 + 4) = 0u;
  *(void *)(v14 + 79) = 0;
  sub_2613E3434(a3, (uint64_t)&v13[OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_strategyProvider]);
  *(void *)&v13[OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_kwsModel] = a4;
  *(void *)&v13[OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_vadModel] = a5;
  sub_2613E3434(a6, (uint64_t)v17);
  id v15 = sub_2614A6D00(a1, a2, (uint64_t)v17);
  sub_2613DD718(a6);
  sub_2613DD718(a3);
  return v15;
}

uint64_t static VAFixedKeywordSpotter.buildForAudioToText(delegate:jsonConfigFilename:computeUnits:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for VAConfiguration();
  uint64_t v7 = static VAConfiguration.buildForFixedVCWakeupRuntime()();
  if (!v3)
  {
    int v8 = v7;
    v10[3] = type metadata accessor for VARuntimeParametersFactoryForVCWakeup();
    v10[4] = &off_270D55A70;
    v10[0] = swift_allocObject();
    a3 = sub_2614284BC(v8, a1, a2, a3, (uint64_t)v10);

    sub_2613DD718((uint64_t)v10);
  }
  return a3;
}

uint64_t static VAFixedKeywordSpotter.buildForVoiceControlWakeup(delegate:jsonConfigFilename:evalMode:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  type metadata accessor for VAConfiguration();
  if (a4)
  {
    uint64_t v9 = static VAConfiguration.buildForFixedVCWakeupEval()();
    if (!v4) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v9 = static VAConfiguration.buildForFixedVCWakeupRuntime()();
    if (!v4)
    {
LABEL_5:
      uint64_t v10 = v9;
      uint64_t v12[3] = type metadata accessor for VARuntimeParametersFactoryForVCWakeup();
      v12[4] = &off_270D55A70;
      v12[0] = swift_allocObject();
      a3 = sub_2614284BC(v10, a1, a2, a3, (uint64_t)v12);

      sub_2613DD718((uint64_t)v12);
    }
  }
  return a3;
}

uint64_t type metadata accessor for VARuntimeParametersFactoryForVCWakeup()
{
  return self;
}

uint64_t static VAFixedKeywordSpotter.buildForCustomModel(delegate:jsonConfigFilename:modelFilePath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  type metadata accessor for VAConfiguration();
  uint64_t v11 = static VAConfiguration.buildForFixedWithCustomModel(modelFilepath:)(a4, a5);
  if (!v5)
  {
    uint64_t v13 = v11;
    char v14 = (void *)MEMORY[0x263F8EED0];
    id v15 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v11) + 0x98))();
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = (*(uint64_t (**)(void))((*v14 & *v15) + 0xB0))();
      unint64_t v18 = sub_2614283D4(v17);
      swift_bridgeObjectRelease();
      uint64_t v19 = type metadata accessor for VARuntimeParametersFactoryForCustomModel();
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v18;
      v22[3] = v19;
      v22[4] = &off_270D55A80;
      v22[0] = v20;
      a3 = sub_2614284BC(v13, a1, a2, a3, (uint64_t)v22);

      sub_2613DD718((uint64_t)v22);
    }
    else
    {
      sub_2613DC2B8();
      swift_allocError();
      void *v21 = 0xD000000000000014;
      v21[1] = 0x80000002614E32B0;
      swift_willThrow();
    }
  }
  return a3;
}

uint64_t static VAFixedKeywordSpotter.buildForBreakthrough(delegate:jsonConfigFilename:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for VAConfiguration();
  int v8 = static VAConfiguration.buildForFixedBreakthrough()();
  if (!v3)
  {
    uint64_t v9 = v8;
    v11[3] = type metadata accessor for VARuntimeParametersFactoryDummy();
    void v11[4] = &protocol witness table for VARuntimeParametersFactoryDummy;
    v11[0] = sub_26141BF64();
    uint64_t v7 = sub_2614284BC(v9, a1, a2, a3, (uint64_t)v11);
    sub_2613DD718((uint64_t)v11);
  }
  return v7;
}

uint64_t sub_261424980()
{
  (*(void (**)(long long *__return_ptr))((*MEMORY[0x263F8EED0] & *v0) + 0x160))(&v5);
  if (v6)
  {
    sub_2613CC760(&v5, (uint64_t)v7);
    uint64_t v1 = v8;
    uint64_t v2 = v9;
    sub_2613DBF24(v7, v8);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
    return sub_2613DD718((uint64_t)v7);
  }
  else
  {
    sub_2613CC6A0((uint64_t)&v5, &qword_26A9152F8);
    sub_2613DC2B8();
    swift_allocError();
    *uint64_t v4 = 0xD00000000000001ALL;
    v4[1] = 0x80000002614E32D0;
    return swift_willThrow();
  }
}

uint64_t sub_261424AB0(uint64_t a1)
{
  uint64_t v2 = sub_2613C23AC(&qword_26A914BD8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v5 = *(_DWORD *)(a1 + 8);
  int v6 = *(unsigned __int8 *)(a1 + 12);
  int v7 = *(unsigned __int8 *)(a1 + 13);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(unsigned __int8 *)(a1 + 48);
  int v13 = *(unsigned __int8 *)(a1 + 49);
  unsigned int v14 = *(_DWORD *)(a1 + 52);
  uint64_t v15 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v16 = *(void *)(a1 + 72);
  uint64_t v18 = *(unsigned __int8 *)(a1 + 80);
  uint64_t v19 = *(unsigned __int8 *)(a1 + 81);
  uint64_t v20 = *(unsigned __int8 *)(a1 + 82);
  int v21 = *(unsigned __int8 *)(a1 + 83);
  int v22 = *(unsigned __int8 *)(a1 + 84);
  unsigned int v23 = *(unsigned __int8 *)(a1 + 85);
  int v24 = *(unsigned __int8 *)(a1 + 86);
  uint64_t v104 = *(void *)a1;
  uint64_t v110 = v8;
  uint64_t v111 = v104;
  unsigned int v112 = v5;
  char v113 = v6;
  char v114 = v7;
  uint64_t v115 = v8;
  uint64_t v116 = v9;
  uint64_t v108 = v10;
  uint64_t v109 = v9;
  char v117 = v10;
  uint64_t v107 = v11;
  uint64_t v118 = v11;
  char v119 = v12;
  char v120 = v13;
  unsigned int v121 = v14;
  uint64_t v100 = v15;
  char v122 = v15;
  uint64_t v106 = v17;
  uint64_t v123 = v17;
  uint64_t v124 = v16;
  uint64_t v99 = v16;
  char v125 = v18;
  uint64_t v132 = v19;
  char v126 = v19;
  uint64_t v103 = v20;
  char v127 = v20;
  char v128 = v21;
  char v129 = v22;
  unsigned int v102 = v23;
  char v130 = v23;
  int v105 = v24;
  char v131 = v24;
  uint64_t v25 = (uint64_t)&v111;
  if ((VARuntimeParameters.allKeywordsAreValid.getter() & 1) == 0)
  {
    sub_2613DC2B8();
    swift_allocError();
    unint64_t v79 = 0xD00000000000006DLL;
    uint64_t v80 = "Keywords should be lower case and should not contain spaces to ensure model compatibility and API consistency";
LABEL_26:
    unint64_t *v78 = v79;
    v78[1] = (unint64_t)(v80 - 32) | 0x8000000000000000;
    swift_willThrow();
    return v25;
  }
  uint64_t v84 = v4;
  int v91 = v6;
  uint64_t v26 = 0x100000000;
  if (v6) {
    uint64_t v27 = 0x100000000;
  }
  else {
    uint64_t v27 = 0;
  }
  uint64_t v28 = v27 | v5;
  int v90 = v7;
  uint64_t v29 = 0x10000000000;
  if (v7) {
    uint64_t v30 = 0x10000000000;
  }
  else {
    uint64_t v30 = 0;
  }
  uint64_t v31 = v28 | v30;
  int v89 = v13;
  uint64_t v32 = 256;
  if (!v13) {
    uint64_t v32 = 0;
  }
  uint64_t v85 = v12;
  unint64_t v33 = v32 | v12 | ((unint64_t)v14 << 32);
  uint64_t v86 = v18;
  char v34 = v103;
  uint64_t v35 = v18 | (v132 << 8) | (v103 << 16);
  int v88 = v21;
  int v36 = 0x1000000;
  if (!v21) {
    int v36 = 0;
  }
  int v37 = v35 | v36;
  int v87 = v22;
  if (!v22) {
    uint64_t v26 = 0;
  }
  uint64_t v25 = v102;
  if (!v102) {
    uint64_t v29 = 0;
  }
  uint64_t v38 = v35 | v26 | v29;
  float v39 = v101;
  uint64_t v40 = (uint64_t)v101 + OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_runtimeParameters;
  uint64_t v41 = *(uint64_t *)((char *)v101 + OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_runtimeParameters);
  uint64_t v93 = *(uint64_t *)((char *)v101 + OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_runtimeParameters + 8);
  uint64_t v92 = *(uint64_t *)((char *)v101 + OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_runtimeParameters + 16);
  uint64_t v95 = *(uint64_t *)((char *)v101 + OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_runtimeParameters + 24);
  BOOL v42 = v105 != 0;
  uint64_t v94 = *(uint64_t *)((char *)v101 + OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_runtimeParameters + 32);
  id v98 = *(id *)((char *)v101 + OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_runtimeParameters + 40);
  uint64_t v97 = *(uint64_t *)((char *)v101 + OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_runtimeParameters + 48);
  uint64_t v96 = *(uint64_t *)((char *)v101 + OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_runtimeParameters + 56);
  *(void *)uint64_t v40 = v104;
  *(void *)(v40 + 8) = v31;
  *(void *)(v40 + 48) = v33;
  *(unsigned char *)(v40 + 86) = v42;
  *(_DWORD *)(v40 + 80) = v37;
  *(_WORD *)(v40 + 84) = WORD2(v38);
  uint64_t v43 = v109;
  *(void *)(v40 + 16) = v110;
  *(void *)(v40 + 24) = v43;
  uint64_t v44 = v107;
  *(void *)(v40 + 32) = v108;
  *(void *)(v40 + 40) = v44;
  int v45 = v100;
  uint64_t v46 = v106;
  *(void *)(v40 + 56) = v100;
  *(void *)(v40 + 64) = v46;
  uint64_t v47 = v99;
  *(void *)(v40 + 72) = v99;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v48 = v39;
  uint64_t v49 = sub_26140FB6C(v41);
  int v50 = v45;
  char v51 = v25;
  char v52 = v132;
  if (v50 && !*(uint64_t *)((char *)v48 + OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_vadModel))
  {
    sub_2613DC2B8();
    swift_allocError();
    unint64_t v79 = 0xD00000000000003BLL;
    uint64_t v80 = "Inference is gated by VAD, but VAD model is not initialized";
    goto LABEL_26;
  }
  uint64_t v25 = (uint64_t)v48;
  uint64_t v53 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v48) + 0x78))(v49);
  if (!v53)
  {
    sub_2613DC2B8();
    swift_allocError();
    unint64_t v79 = 0xD000000000000011;
    uint64_t v80 = "Nil configuration";
    goto LABEL_26;
  }
  float v54 = (void *)v53;
  type metadata accessor for VARequestContext(0);
  char v55 = v34;
  uint64_t v56 = v104;
  uint64_t v111 = v104;
  unsigned int v112 = v5;
  char v113 = v91;
  char v114 = v90;
  uint64_t v115 = v110;
  uint64_t v116 = v109;
  char v117 = v108;
  uint64_t v118 = v107;
  uint64_t v57 = v47;
  char v58 = v51;
  char v59 = v85;
  char v119 = v85;
  char v120 = v89;
  unsigned int v121 = v14;
  char v122 = v50;
  uint64_t v123 = v106;
  uint64_t v124 = v47;
  char v125 = v86;
  char v126 = v52;
  char v127 = v55;
  char v128 = v88;
  char v129 = v87;
  char v130 = v58;
  char v131 = v105;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v60 = v54;
  uint64_t v61 = sub_2613FDF20(v60, &v111);
  unsigned int v62 = (void *)MEMORY[0x263F8EED0];
  uint64_t v25 = (uint64_t)v48;
  uint64_t v63 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v48) + 0x120))(v61);
  uint64_t v64 = (*(uint64_t (**)(uint64_t))((*v62 & *v48) + 0x118))(v63);
  if (v64)
  {
    id v98 = v60;
    uint64_t v65 = *(uint64_t *)((char *)v48 + OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_strategyProvider + 24);
    uint64_t v66 = *(uint64_t *)((char *)v48 + OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_strategyProvider + 32);
    char v67 = v50;
    uint64_t v68 = v64;
    sub_2613DBF24((uint64_t *)((char *)v48 + OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_strategyProvider), v65);
    uint64_t v111 = v56;
    unsigned int v112 = v5;
    char v113 = v91;
    char v114 = v90;
    uint64_t v115 = v110;
    uint64_t v116 = v109;
    char v117 = v108;
    uint64_t v118 = v107;
    char v119 = v59;
    char v120 = v89;
    unsigned int v121 = v14;
    char v122 = v67;
    uint64_t v123 = v106;
    uint64_t v124 = v57;
    char v125 = v86;
    char v126 = v132;
    char v127 = v103;
    char v128 = v88;
    char v129 = v87;
    char v130 = v102;
    char v131 = v105;
    uint64_t v69 = v68;
    uint64_t v70 = (*(uint64_t (**)(uint64_t *, _UNKNOWN **, uint64_t *, uint64_t, uint64_t))(v66 + 8))(v48, &protocol witness table for VAKeywordSpotterBase, &v111, v65, v66);
    uint64_t v71 = (void *)MEMORY[0x263F8EED0];
    (*(void (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v48) + 0x150))(v70);
    uint64_t v72 = sub_2614D5788();
    uint64_t v73 = (uint64_t)v84;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v84, 1, 1, v72);
    uint64_t v74 = (void *)swift_allocObject();
    v74[2] = 0;
    v74[3] = 0;
    v74[4] = v48;
    v74[5] = v69;
    uint64_t v25 = v48;
    swift_retain();
    uint64_t v75 = sub_2613E3FD0(v73, (uint64_t)&unk_26A915308, (uint64_t)v74);
    uint64_t v76 = (*(uint64_t (**)(uint64_t))((*v71 & *(void *)v25) + 0x138))(v75);
    uint64_t v77 = (*(uint64_t (**)(uint64_t))((*v71 & *(void *)v25) + 0x130))(v76);
    if (v77)
    {
      uint64_t v25 = v77;
    }
    else
    {
      sub_2613DC2B8();
      swift_allocError();
      void *v83 = 0xD00000000000001DLL;
      v83[1] = 0x80000002614E0E00;
      swift_willThrow();
    }

    swift_release();
  }
  else
  {
    sub_2613DC2B8();
    swift_allocError();
    void *v82 = 0xD00000000000001DLL;
    v82[1] = 0x80000002614E0E40;
    swift_willThrow();
  }
  return v25;
}

uint64_t sub_261425400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a1;
  uint64_t v7 = sub_2614D50C8();
  v5[4] = v7;
  v5[5] = *(void *)(v7 - 8);
  void v5[6] = swift_task_alloc();
  uint64_t v8 = (void *)swift_task_alloc();
  v5[7] = v8;
  *uint64_t v8 = v5;
  v8[1] = sub_2613E3A78;
  return sub_2614254FC(a5);
}

uint64_t sub_2614254FC(uint64_t a1)
{
  v2[40] = a1;
  v2[41] = v1;
  uint64_t v3 = sub_2614D50C8();
  v2[42] = v3;
  v2[43] = *(void *)(v3 - 8);
  v2[44] = swift_task_alloc();
  v2[45] = swift_task_alloc();
  v2[46] = swift_task_alloc();
  v2[47] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2614255E4, 0, 0);
}

uint64_t sub_2614255E4()
{
  void (*v70)(uint64_t *__return_ptr);
  void *v71;
  uint64_t v72;
  uint64_t (*v73)(void);
  uint64_t result;
  void *v75;
  uint64_t v76;
  int *v77;
  void *v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(void);
  uint64_t v83;
  int v84;
  char v85;
  char v86;
  long long v87;
  char v88;
  uint64_t v89;
  char v90;
  char v91;
  int v92;
  char v93;
  long long v94;
  __int16 v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  uint64_t v101;
  int v102;
  char v103;
  char v104;
  long long v105;
  char v106;
  uint64_t v107;
  char v108;
  char v109;
  int v110;
  char v111;
  long long v112;
  __int16 v113;
  char v114;
  char v115;
  char v116;
  char v117;
  char v118;
  uint64_t v119;
  uint64_t v120;

  char v119 = v0;
  uint64_t v1 = *(void *)(v0 + 376);
  uint64_t v2 = *(void *)(v0 + 336);
  uint64_t v3 = *(void *)(v0 + 344);
  uint64_t v4 = sub_26146718C();
  *(void *)(v0 + 384) = v4;
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v0 + 392) = v5;
  *(void *)(v0 + 400) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v1, v4, v2);
  int v6 = sub_2614D50A8();
  os_log_type_t v7 = sub_2614D5968();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_2613B8000, v6, v7, "Entering StartProcessingAudio()", v8, 2u);
    MEMORY[0x263E38060](v8, -1, -1);
  }
  uint64_t v9 = *(void *)(v0 + 376);
  uint64_t v10 = *(void *)(v0 + 336);
  uint64_t v11 = *(void *)(v0 + 344);
  uint64_t v12 = *(void *)(v0 + 328);

  int v13 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  *(void *)(v0 + 408) = v13;
  *(void *)(v0 + 416) = (v11 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v9, v10);
  uint64_t v14 = v12 + OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_runtimeParameters;
  uint64_t v15 = *(void *)(v12 + OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_runtimeParameters);
  *(void *)(v0 + 424) = v15;
  *(void *)(v0 + 432) = *(void *)(v14 + 8);
  *(void *)(v0 + 440) = *(void *)(v14 + 16);
  *(void *)(v0 + 448) = *(void *)(v14 + 24);
  *(void *)(v0 + 456) = *(void *)(v14 + 32);
  *(void *)(v0 + 464) = *(void *)(v14 + 40);
  *(void *)(v0 + 472) = *(void *)(v14 + 48);
  *(void *)(v0 + 480) = *(void *)(v14 + 56);
  *(void *)(v0 + 488) = *(void *)(v14 + 64);
  *(void *)(v0 + 496) = *(void *)(v14 + 72);
  int v17 = *(_DWORD *)(v14 + 80);
  v14 += 80;
  int v16 = v17;
  LOWORD(v17) = *(_WORD *)(v14 + 4);
  char v18 = *(unsigned char *)(v14 + 6);
  *(_DWORD *)(v0 + 504) = v16;
  *(unsigned char *)(v0 + 510) = v18;
  *(_WORD *)(v0 + 508) = v17;
  if (!v15)
  {
    sub_2613DC2B8();
    swift_allocError();
    unint64_t v40 = 0xD000000000000016;
    uint64_t v41 = "Nil runtime parameters";
LABEL_10:
    unint64_t *v39 = v40;
    v39[1] = (unint64_t)(v41 - 32) | 0x8000000000000000;
    swift_willThrow();
    goto LABEL_20;
  }
  uint64_t v19 = *(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & **(void **)(v0 + 328)) + 0x78);
  swift_bridgeObjectRetain();
  uint64_t v20 = swift_bridgeObjectRetain();
  int v21 = (void *)v19(v20);
  uint64_t v22 = v15;
  *(void *)(v0 + 512) = v21;
  if (!v21)
  {
    sub_26140FB6C(v15);
    sub_2613DC2B8();
    swift_allocError();
    unint64_t v40 = 0xD000000000000011;
    uint64_t v41 = "Nil configuration";
    goto LABEL_10;
  }
  unsigned int v23 = v21;
  uint64_t v81 = v22;
  int v24 = (void *)MEMORY[0x263F8EED0];
  uint64_t v25 = *(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v21) + 0x98);
  uint64_t v26 = (void *)v25();
  *(void *)(v0 + 520) = v26;
  if (!v26)
  {
    sub_26140FB6C(v81);
    sub_2613DC2B8();
    swift_allocError();
    void *v42 = 0xD00000000000001ELL;
    v42[1] = 0x80000002614E3430;
    swift_willThrow();

    goto LABEL_20;
  }
  uint64_t v27 = v26;
  uint64_t v28 = (*(uint64_t (**)(void))((*v24 & *v26) + 0x128))();
  if (v28)
  {
    uint64_t v29 = sub_261495C0C();
    uint64_t v30 = sub_261495C14();
    uint64_t v31 = sub_26140C4E0();
    uint64_t v32 = v29;
    int v24 = (void *)MEMORY[0x263F8EED0];
    uint64_t v28 = sub_261495C1C(v32, v30, v31, (uint64_t *)(v0 + 192));
    uint64_t v34 = *(void *)(v0 + 192);
    uint64_t v33 = *(void *)(v0 + 200);
    uint64_t v35 = *(void *)(v0 + 208);
    uint64_t v36 = *(void *)(v0 + 216);
    uint64_t v37 = *(void *)(v0 + 224);
    uint64_t v38 = *(void *)(v0 + 232);
  }
  else
  {
    uint64_t v34 = 0;
    uint64_t v33 = 0;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
  }
  *(void *)(v0 + 240) = v34;
  *(void *)(v0 + 248) = v33;
  *(void *)(v0 + 256) = v35;
  *(void *)(v0 + 264) = v36;
  *(void *)(v0 + 272) = v37;
  *(void *)(v0 + 280) = v38;
  uint64_t v43 = *(void (**)(void))((*v24 & *v27) + 0x158);
  uint64_t v44 = *(void *)(((uint64_t (*)(uint64_t))v43)(v28) + 16);
  uint64_t v45 = swift_bridgeObjectRelease();
  if (v44)
  {
    uint64_t v46 = (void *)(*(uint64_t (**)(uint64_t))((*v24 & *v23) + 0x80))(v45);
    uint64_t v47 = v24;
    uint64_t v48 = (*(uint64_t (**)(void))((*v24 & *v46) + 0x148))();

    uint64_t v49 = (*(uint64_t (**)(void))((*v47 & *v27) + 0x140))();
    v43();
    sub_261495B6C();
    uint64_t v50 = sub_261495B7C(v48, v49);
    int v53 = v52;
  }
  else
  {
    uint64_t v50 = 0;
    uint64_t v51 = 0;
    int v53 = 0;
  }
  *(_DWORD *)(v0 + 696) = v53;
  *(void *)(v0 + 536) = v51;
  uint64_t v80 = v50;
  *(void *)(v0 + 528) = v50;
  uint64_t v54 = *(void *)(*(void *)(v0 + 328) + OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_vadModel);
  *(void *)(v0 + 544) = v54;
  char v55 = 0;
  if (v54)
  {
    type metadata accessor for VACircularMatrixBuffer();
    uint64_t v56 = (void *)MEMORY[0x263F8EED0];
    uint64_t v57 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v23) + 0x80))();
    uint64_t v58 = (*(uint64_t (**)(void))((*v56 & *v57) + 0x148))();

    char v55 = sub_261488750(66, v58);
  }
  *(void *)(v0 + 552) = v55;
  uint64_t v59 = v25();
  if (v59)
  {
    uint64_t v60 = (void *)v59;
    uint64_t v61 = *(void **)(v0 + 320);
    type metadata accessor for VACircularMatrixBuffer();
    unsigned int v62 = (void *)MEMORY[0x263F8EED0];
    uint64_t v63 = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v60) + 0xE0))();

    uint64_t v64 = *(uint64_t (**)(void))((*v62 & *v23) + 0x80);
    uint64_t v65 = (*v62 & *v23) + 128;
    *(void *)(v0 + 560) = v64;
    *(void *)(v0 + 568) = v65 & 0xFFFFFFFFFFFFLL | 0xF95A000000000000;
    uint64_t v66 = (void *)v64();
    uint64_t v67 = (*(uint64_t (**)(void))((*v62 & *v66) + 0x148))();

    *(void *)(v0 + 576) = sub_261488750(v63, v67);
    type metadata accessor for VAFeatureExtract();
    id v68 = VAFeatureExtract.__allocating_init()();
    *(void *)(v0 + 584) = v68;
    type metadata accessor for VAResultGenerator();
    uint64_t v69 = *v61 + 280;
    uint64_t v70 = *(void (**)(uint64_t *__return_ptr))v69;
    *(void *)(v0 + 592) = *(void *)v69;
    *(void *)(v0 + 600) = v69 & 0xFFFFFFFFFFFFLL | 0xEDEA000000000000;
    uint64_t v71 = v23;
    v70(&v83);
    uint64_t v101 = v83;
    unsigned int v102 = v84;
    uint64_t v103 = v85;
    uint64_t v104 = v86;
    int v105 = v87;
    uint64_t v106 = v88;
    uint64_t v107 = v89;
    uint64_t v108 = v90;
    uint64_t v109 = v91;
    uint64_t v110 = v92;
    uint64_t v111 = v93;
    unsigned int v112 = v94;
    char v113 = v95;
    char v114 = v96;
    uint64_t v115 = v97;
    uint64_t v116 = v98;
    char v117 = v99;
    uint64_t v118 = v100;
    sub_26146C818(v71, (uint64_t)&v101);
    *(void *)(v0 + 608) = v72;
    *(void *)(v0 + 616) = 0;
    if (v72)
    {
      uint64_t v75 = *(void **)(v0 + 320);
      *(void *)(v0 + 312) = 0;
      uint64_t v76 = *v75 + 336;
      uint64_t v77 = *(int **)v76;
      *(void *)(v0 + 624) = *(void *)v76;
      *(void *)(v0 + 632) = v76 & 0xFFFFFFFFFFFFLL | 0x454C000000000000;
      unint64_t v82 = (uint64_t (*)(void))((char *)v77 + *v77);
      swift_retain();
      uint64_t v78 = (void *)swift_task_alloc();
      *(void *)(v0 + 640) = v78;
      unint64_t *v78 = v0;
      v78[1] = sub_2614260FC;
      uint64_t v73 = v82;
      return v73();
    }
    sub_26142883C(v80);
    sub_26140FB6C(v81);
    sub_2613DC2B8();
    swift_allocError();
    void *v79 = 0xD000000000000014;
    v79[1] = 0x80000002614E3450;
    swift_willThrow();

    swift_release();
    swift_release();
    sub_26142887C(*(void *)(v0 + 240), *(void *)(v0 + 248), *(void *)(v0 + 256), *(void *)(v0 + 264), *(void *)(v0 + 272));
LABEL_20:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v73 = *(uint64_t (**)(void))(v0 + 8);
    return v73();
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_2614260FC(char a1)
{
  *(unsigned char *)(*(void *)v1 + 103) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2614261FC, 0, 0);
}

uint64_t sub_2614261FC()
{
  if (*(unsigned char *)(v0 + 103))
  {
    uint64_t v1 = *(void *)(v0 + 424);
    sub_26142883C(*(void *)(v0 + 528));
    sub_26140FB6C(v1);
    (*(void (**)(void))((*MEMORY[0x263F8EED0] & **(void **)(v0 + 328)) + 0x200))(0);
    uint64_t v2 = *(void **)(v0 + 520);
    uint64_t v3 = *(void **)(v0 + 512);

    swift_release();
    swift_release_n();

    swift_release();
    sub_26142887C(*(void *)(v0 + 240), *(void *)(v0 + 248), *(void *)(v0 + 256), *(void *)(v0 + 264), *(void *)(v0 + 272));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  *(void *)(v0 + 648) = OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_kwsModel;
  uint64_t v5 = swift_beginAccess();
  uint64_t v6 = *(void *)(v0 + 312);
  uint64_t v7 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v0 + 560);
  *(void *)(v0 + 312) = v7;
  uint64_t v9 = (void *)v8(v5);
  uint64_t v10 = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v9) + 0x160))();

  if (!v10)
  {
LABEL_14:
    swift_release();
    __break(1u);
LABEL_15:
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  if (v7 == 0x8000000000000000 && v10 == -1) {
    goto LABEL_15;
  }
  uint64_t v11 = *(int **)(**(void **)(v0 + 320) + 352);
  uint64_t v14 = (int *)((char *)v11 + *v11);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 656) = v12;
  void *v12 = v0;
  v12[1] = sub_2614265E4;
  return ((uint64_t (*)(void, uint64_t))v14)(0, 1);
}

uint64_t sub_2614265E4(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 664) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[66];
    uint64_t v6 = v4[53];
    sub_26142883C(v5);
    sub_26140FB6C(v6);
    uint64_t v7 = sub_261427F6C;
  }
  else
  {
    v4[84] = a1;
    uint64_t v7 = sub_261426788;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_261426788()
{
  if (*(void *)(v0 + 672)) {
    uint64_t v1 = *(void *)(v0 + 672);
  }
  else {
    uint64_t v1 = MEMORY[0x263F8EE78];
  }
  uint64_t v2 = (void *)MEMORY[0x263F8EED0];
  if (!*(void *)(v1 + 16))
  {
    uint64_t v13 = *(void *)(v0 + 424);
    uint64_t v151 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 392);
    uint64_t v149 = *(void *)(v0 + 384);
    uint64_t v14 = *(void *)(v0 + 368);
    uint64_t v147 = *(void *)(v0 + 336);
    sub_26142883C(*(void *)(v0 + 528));
    swift_bridgeObjectRelease();
    sub_26140FB6C(v13);
    v151(v14, v149, v147);
    uint64_t v15 = sub_2614D50A8();
    os_log_type_t v16 = sub_2614D5968();
    if (os_log_type_enabled(v15, v16))
    {
      int v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v17 = 0;
      _os_log_impl(&dword_2613B8000, v15, v16, "processing was stopped, stop predictions", v17, 2u);
      MEMORY[0x263E38060](v17, -1, -1);
    }
    char v18 = *(void (**)(uint64_t, uint64_t))(v0 + 408);
    uint64_t v19 = *(void *)(v0 + 368);
    uint64_t v20 = *(void *)(v0 + 336);

    v18(v19, v20);
    uint64_t v21 = *(void *)(v0 + 664);
    (*(void (**)(void))((*MEMORY[0x263F8EED0] & **(void **)(v0 + 328)) + 0x200))(0);
    uint64_t v22 = *(void **)(v0 + 584);
    unsigned int v23 = *(void **)(v0 + 520);
    int v24 = *(void **)(v0 + 512);
    if (!v21)
    {

      swift_release();
      swift_release_n();

      swift_release();
      sub_26142887C(*(void *)(v0 + 240), *(void *)(v0 + 248), *(void *)(v0 + 256), *(void *)(v0 + 264), *(void *)(v0 + 272));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_17;
    }

    swift_release();
    swift_release_n();

    swift_release();
LABEL_16:
    sub_26142887C(*(void *)(v0 + 240), *(void *)(v0 + 248), *(void *)(v0 + 256), *(void *)(v0 + 264), *(void *)(v0 + 272));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
LABEL_17:
    return v25();
  }
  uint64_t v3 = *(void *)(v0 + 552);
  uint64_t v4 = *(void *)(v0 + 544);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & **(void **)(v0 + 584)) + 0x170))(v1);
  swift_bridgeObjectRelease();
  if (v4 && v3)
  {
    uint64_t v6 = *(void (**)(uint64_t))(**(void **)(v0 + 552) + 168);
    swift_retain();
    v6(v5);
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + 664);
  if (*(void *)(v0 + 272))
  {
    uint64_t v8 = sub_261495E48(v5);
    if (v7)
    {
      uint64_t v141 = *(void *)(v0 + 528);
      uint64_t v9 = *(void **)(v0 + 520);
      uint64_t v10 = *(void **)(v0 + 512);
      uint64_t v11 = *(void *)(v0 + 424);

      swift_release();
      swift_release();
      swift_release_n();

      sub_26142883C(v141);
      swift_bridgeObjectRelease();
      uint64_t v12 = v11;
LABEL_11:
      sub_26140FB6C(v12);
      goto LABEL_16;
    }
    uint64_t v27 = v8;
    swift_bridgeObjectRelease();
    uint64_t v5 = v27;
  }
  if (*(void *)(v0 + 528))
  {
    float v28 = *(float *)(v0 + 696);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_261495B88(v5, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = v29;
  }
  uint64_t v30 = *(uint64_t (**)(uint64_t))(v0 + 560);
  (*(void (**)(uint64_t))(**(void **)(v0 + 576) + 168))(v5);
  uint64_t v31 = swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(v0 + 312);
  uint64_t v33 = (void *)v30(v31);
  uint64_t v34 = (*(uint64_t (**)(void))((*v2 & *v33) + 0x160))();

  if (!v34)
  {
LABEL_85:
    swift_release();
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    swift_release();
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  if (v32 == 0x8000000000000000 && v34 == -1) {
    goto LABEL_89;
  }
  if (!(v32 % v34))
  {
    uint64_t v36 = *(void *)(v0 + 544);
    if (v36 && (uint64_t v37 = *(void *)(v0 + 552)) != 0)
    {
      uint64_t v38 = *(void (**)(uint64_t))(*(void *)v37 + 176);
      swift_retain();
      uint64_t v39 = swift_retain();
      v38(v39);
      uint64_t v40 = (*(uint64_t (**)(void))(*(void *)v36 + 128))();
      if (v7)
      {
        uint64_t v142 = *(void *)(v0 + 528);
        uint64_t v41 = *(void **)(v0 + 520);
        BOOL v42 = *(void **)(v0 + 512);
        uint64_t v43 = *(void *)(v0 + 424);

        swift_release();
        swift_release();
        swift_release_n();
        swift_release_n();

        sub_26142883C(v142);
        swift_bridgeObjectRelease();
        uint64_t v12 = v43;
        goto LABEL_11;
      }
      uint64_t v44 = v40;
      uint64_t v71 = *(void *)(v0 + 480);
      swift_bridgeObjectRelease();
      if ((v71 & 1) == 0)
      {
        uint64_t v45 = v2;
        swift_release();
        swift_release();
        uint64_t v7 = 0;
        goto LABEL_37;
      }
      uint64_t v72 = (void *)(v0 + 312);
      float v73 = *(float *)(v0 + 476);
      uint64_t v74 = *(uint64_t (**)(uint64_t, float))((*v2 & **(void **)(v0 + 328)) + 0x208);
      uint64_t v75 = swift_bridgeObjectRetain();
      unsigned int v76 = v74(v75, v73);
      swift_bridgeObjectRelease();
      int v47 = (v76 >> 8) & 1;
      if ((v76 & 0x100) != 0)
      {
        (*(void (**)(void, void, void))(v0 + 392))(*(void *)(v0 + 360), *(void *)(v0 + 384), *(void *)(v0 + 336));
        uint64_t v77 = sub_2614D50A8();
        os_log_type_t v78 = sub_2614D5968();
        if (os_log_type_enabled(v77, v78))
        {
          uint64_t v79 = swift_slowAlloc();
          *(_DWORD *)uint64_t v79 = 134217984;
          *(void *)(v79 + 4) = *v72;
          _os_log_impl(&dword_2613B8000, v77, v78, "Speech stopped detected at frame %lld", (uint8_t *)v79, 0xCu);
          MEMORY[0x263E38060](v79, -1, -1);
        }
        uint64_t v80 = *(void (**)(uint64_t, uint64_t))(v0 + 408);
        uint64_t v81 = *(void *)(v0 + 360);
        uint64_t v82 = *(void *)(v0 + 336);

        v80(v81, v82);
        uint64_t v2 = (void *)MEMORY[0x263F8EED0];
      }
      if (v76)
      {
        uint64_t v154 = v44;
        char v129 = v2;
        (*(void (**)(void, void, void))(v0 + 392))(*(void *)(v0 + 352), *(void *)(v0 + 384), *(void *)(v0 + 336));
        char v130 = sub_2614D50A8();
        os_log_type_t v131 = sub_2614D5968();
        if (os_log_type_enabled(v130, v131))
        {
          uint64_t v132 = swift_slowAlloc();
          *(_DWORD *)uint64_t v132 = 134217984;
          *(void *)(v132 + 4) = *v72;
          _os_log_impl(&dword_2613B8000, v130, v131, "Speech started detected at frame %lld", (uint8_t *)v132, 0xCu);
          MEMORY[0x263E38060](v132, -1, -1);
        }
        uint64_t v133 = *(void (**)(uint64_t, uint64_t))(v0 + 408);
        uint64_t v134 = *(void *)(v0 + 352);
        uint64_t v135 = *(void *)(v0 + 336);

        swift_release();
        swift_release();
        v133(v134, v135);
        uint64_t v7 = 0;
        uint64_t v2 = v129;
        uint64_t v44 = v154;
      }
      else
      {
        swift_release();
        swift_release();
        uint64_t v7 = 0;
      }
    }
    else
    {
      uint64_t v44 = 0;
      if ((*(unsigned char *)(v0 + 480) & 1) == 0)
      {
        uint64_t v45 = v2;
LABEL_37:
        uint64_t v46 = *(void *)(v0 + 648);
        goto LABEL_44;
      }
      LOBYTE(v47) = 0;
    }
    char v48 = (*(uint64_t (**)(void))((*v2 & **(void **)(v0 + 328)) + 0x178))();
    uint64_t v46 = *(void *)(v0 + 648);
    if ((v47 & 1) == 0 && (v48 & 1) == 0)
    {
      uint64_t v49 = (*(uint64_t (**)(void))(**(void **)(*(void *)(v0 + 328) + v46) + 168))();
      if (v7)
      {
        uint64_t v148 = *(void *)(v0 + 528);
        int v52 = *(void **)(v0 + 520);
        int v53 = *(void **)(v0 + 512);
        uint64_t v54 = *(void *)(v0 + 424);

        swift_release();
        swift_release();
        swift_release_n();

        swift_bridgeObjectRelease();
        sub_26142883C(v148);
        uint64_t v12 = v54;
        goto LABEL_11;
      }
      uint64_t v67 = v49;
      uint64_t v68 = v50;
      uint64_t v70 = v51;
      goto LABEL_56;
    }
    uint64_t v45 = v2;
LABEL_44:
    uint64_t v55 = *(void *)(v0 + 608);
    uint64_t v56 = *(void *)(v0 + 328);
    uint64_t v57 = (*(uint64_t (**)(void))(**(void **)(v0 + 576) + 176))();
    uint64_t v58 = *(void *)(v56 + v46);
    uint64_t v59 = (*(uint64_t (**)(void))(*(void *)v55 + 344))();
    uint64_t v60 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v58 + 176))(v57, v59);
    if (v7)
    {
      uint64_t v63 = *(void **)(v0 + 584);
      uint64_t v140 = *(void *)(v0 + 528);
      uint64_t v64 = *(void **)(v0 + 520);
      uint64_t v65 = *(void **)(v0 + 512);
      uint64_t v66 = *(void *)(v0 + 424);
      swift_bridgeObjectRelease();

      swift_release();
      swift_release();
      swift_release_n();

      swift_bridgeObjectRelease();
      sub_26142883C(v140);
      swift_bridgeObjectRelease();
      uint64_t v12 = v66;
      goto LABEL_11;
    }
    uint64_t v67 = v60;
    uint64_t v68 = v61;
    uint64_t v69 = v62;
    swift_bridgeObjectRelease();
    uint64_t v49 = swift_bridgeObjectRelease();
    uint64_t v2 = v45;
    uint64_t v70 = v69;
LABEL_56:
    uint64_t v83 = (void *)(*(uint64_t (**)(uint64_t))((*v2 & **(void **)(v0 + 512)) + 0xC8))(v49);
    if (!v83)
    {
LABEL_93:
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
    uint64_t v84 = v83;
    uint64_t v85 = (*(uint64_t (**)(void))((*v2 & *v83) + 0x138))();

    uint64_t v150 = *(void *)(v67 + 16);
    if (!v150)
    {
LABEL_78:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = 0;
      goto LABEL_27;
    }
    unint64_t v86 = 0;
    id v143 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, float))(**(void **)(v0 + 608) + 592);
    uint64_t v146 = v67 + 32;
    uint64_t v138 = v70 + 32;
    uint64_t v139 = v68 + 32;
    int v87 = (float *)(v44 + 32);
    float v88 = (float)v85;
    uint64_t v152 = v68;
    uint64_t v136 = 4 * v85;
    uint64_t v153 = v44;
    uint64_t v144 = v67;
    uint64_t v145 = v70;
    uint64_t v137 = v85;
    while (1)
    {
      unint64_t v89 = v86 + 1;
      if (v44)
      {
        int64_t v90 = v86 * v85;
        if ((unsigned __int128)((uint64_t)v86 * (__int128)v85) >> 64 != (uint64_t)(v86 * v85) >> 63) {
          goto LABEL_86;
        }
        uint64_t v91 = v89 * v85;
        if ((unsigned __int128)((uint64_t)v89 * (__int128)v85) >> 64 != (uint64_t)(v89 * v85) >> 63) {
          goto LABEL_87;
        }
        if (v91 < v90) {
          goto LABEL_88;
        }
        float v92 = 0.0;
        if (v90 != v91)
        {
          if (v90 >= v91) {
            goto LABEL_90;
          }
          if (v90 < 0) {
            goto LABEL_91;
          }
          unint64_t v93 = *(void *)(v44 + 16);
          if (v90 >= v93 || v91 - 1 >= v93) {
            goto LABEL_92;
          }
          uint64_t v94 = v85;
          uint64_t v95 = v87;
          do
          {
            float v96 = *v95++;
            float v92 = v92 + v96;
            --v94;
          }
          while (v94);
        }
        float v97 = v92 / v88;
      }
      else
      {
        float v97 = 0.0;
      }
      if (v86 >= *(void *)(v67 + 16)) {
        break;
      }
      unint64_t v155 = v86 + 1;
      id v98 = *(void (**)(uint64_t))(v0 + 592);
      uint64_t v99 = *(void *)(v146 + 8 * v86);
      uint64_t v100 = swift_bridgeObjectRetain();
      v98(v100);
      int v101 = *(_DWORD *)(v0 + 24);
      char v102 = *(unsigned char *)(v0 + 28);
      char v103 = *(unsigned char *)(v0 + 29);
      char v104 = *(unsigned char *)(v0 + 48);
      uint64_t v105 = *(void *)(v0 + 56);
      char v106 = *(unsigned char *)(v0 + 64);
      char v107 = *(unsigned char *)(v0 + 65);
      int v108 = *(_DWORD *)(v0 + 68);
      char v109 = *(unsigned char *)(v0 + 72);
      uint64_t v110 = *(void *)(v0 + 80);
      uint64_t v111 = *(void *)(v0 + 88);
      __int16 v112 = *(_WORD *)(v0 + 96);
      char v113 = *(unsigned char *)(v0 + 98);
      char v114 = *(unsigned char *)(v0 + 99);
      char v115 = *(unsigned char *)(v0 + 100);
      char v116 = *(unsigned char *)(v0 + 101);
      char v117 = *(unsigned char *)(v0 + 102);
      *(void *)(v0 + 104) = *(void *)(v0 + 16);
      *(_DWORD *)(v0 + 112) = v101;
      *(unsigned char *)(v0 + 116) = v102;
      *(unsigned char *)(v0 + 117) = v103;
      *(_OWORD *)(v0 + 120) = *(_OWORD *)(v0 + 32);
      *(unsigned char *)(v0 + 136) = v104;
      *(void *)(v0 + 144) = v105;
      *(unsigned char *)(v0 + 152) = v106;
      *(unsigned char *)(v0 + 153) = v107;
      *(_DWORD *)(v0 + 156) = v108;
      *(unsigned char *)(v0 + 160) = v109;
      *(void *)(v0 + 168) = v110;
      *(void *)(v0 + 176) = v111;
      *(_WORD *)(v0 + 184) = v112;
      *(unsigned char *)(v0 + 186) = v113;
      *(unsigned char *)(v0 + 187) = v114;
      *(unsigned char *)(v0 + 188) = v115;
      *(unsigned char *)(v0 + 189) = v116;
      *(unsigned char *)(v0 + 190) = v117;
      uint64_t v118 = VARuntimeParameters.keywordsNoThresholds.getter();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v86 >= *(void *)(v152 + 16)) {
        goto LABEL_83;
      }
      if (v86 >= *(void *)(v70 + 16)) {
        goto LABEL_84;
      }
      uint64_t v119 = *(unsigned int *)(v0 + 504);
      unint64_t v120 = v119 | ((unint64_t)(*(unsigned __int16 *)(v0 + 508) | (*(unsigned __int8 *)(v0 + 510) << 16)) << 32);
      unint64_t v121 = v120 >> 8;
      unint64_t v122 = v120 >> 16;
      uint64_t v123 = 8 * v86;
      uint64_t v124 = *(void *)(v139 + 8 * v86);
      uint64_t v125 = *(void *)(v138 + v123);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v126 = v143(v99, v118, v124, v125, v119, v121, v122, v97);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v127 = swift_bridgeObjectRelease();
      uint64_t v128 = *(void *)((*(uint64_t (**)(uint64_t))(*(void *)v126 + 88))(v127) + 16);
      swift_bridgeObjectRelease();
      if (v128) {
        (*(void (**)(uint64_t))((*MEMORY[0x263F8EED0] & **(void **)(v0 + 328)) + 0x210))(v126);
      }
      swift_release();
      uint64_t v85 = v137;
      int v87 = (float *)((char *)v87 + v136);
      uint64_t v44 = v153;
      unint64_t v86 = v155;
      uint64_t v67 = v144;
      uint64_t v70 = v145;
      if (v155 == v150) {
        goto LABEL_78;
      }
    }
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
LABEL_27:
  *(void *)(v0 + 680) = v7;
  uint64_t v156 = (uint64_t (*)(void))(*(void *)(v0 + 624) + **(int **)(v0 + 624));
  uint64_t v35 = (void *)swift_task_alloc();
  *(void *)(v0 + 688) = v35;
  void *v35 = v0;
  v35[1] = sub_261427AA4;
  return v156();
}

uint64_t sub_261427AA4(char a1)
{
  *(unsigned char *)(*(void *)v1 + 191) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_261427BA4, 0, 0);
}

uint64_t sub_261427BA4()
{
  if (*(unsigned char *)(v0 + 191))
  {
    uint64_t v1 = *(void *)(v0 + 424);
    sub_26142883C(*(void *)(v0 + 528));
    sub_26140FB6C(v1);
    (*(void (**)(void))((*MEMORY[0x263F8EED0] & **(void **)(v0 + 328)) + 0x200))(0);
    uint64_t v2 = *(void **)(v0 + 520);
    uint64_t v3 = *(void **)(v0 + 512);

    swift_release();
    swift_release_n();

    swift_release();
    sub_26142887C(*(void *)(v0 + 240), *(void *)(v0 + 248), *(void *)(v0 + 256), *(void *)(v0 + 264), *(void *)(v0 + 272));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  uint64_t v5 = *(void *)(v0 + 312);
  uint64_t v6 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 560);
  *(void *)(v0 + 312) = v6;
  uint64_t v8 = (void *)v7();
  uint64_t v9 = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v8) + 0x160))();

  if (!v9)
  {
LABEL_16:
    swift_release();
    __break(1u);
LABEL_17:
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  if (v6 == 0x8000000000000000 && v9 == -1) {
    goto LABEL_17;
  }
  uint64_t v11 = *(int **)(**(void **)(v0 + 320) + 352);
  uint64_t v14 = (int *)((char *)v11 + *v11);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 656) = v12;
  void *v12 = v0;
  v12[1] = sub_2614265E4;
  return ((uint64_t (*)(void, uint64_t))v14)(0, 1);
}

uint64_t sub_261427F6C()
{
  uint64_t v1 = *(void **)(v0 + 520);
  uint64_t v2 = *(void **)(v0 + 512);

  swift_release();
  swift_release();
  swift_release_n();

  sub_26142887C(*(void *)(v0 + 240), *(void *)(v0 + 248), *(void *)(v0 + 256), *(void *)(v0 + 264), *(void *)(v0 + 272));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_26142804C()
{
}

uint64_t sub_26142807C()
{
  sub_2613DD718(v0 + OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_strategyProvider);
  swift_release();
  swift_release();
  return sub_26140FB6C(*(void *)(v0 + OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_runtimeParameters));
}

id VAFixedKeywordSpotter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VAFixedKeywordSpotter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2614281D4(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 56) + 16 * v16);
    uint64_t v21 = v20[1];
    void *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_2614283D4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_2613C23AC(&qword_26A914AC8);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  mach_timebase_info v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_2614281D4((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2614288C0();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_2614284BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a4)
  {
    uint64_t v8 = type metadata accessor for VAConfiguration();
    id v9 = (id)static VAConfiguration.buildFromConfigFile(jsonFile:)();
    if (v5) {
      return v8;
    }
  }
  else
  {
    id v9 = a1;
  }
  uint64_t v10 = v9;
  uint64_t v11 = type metadata accessor for VAKWSModel();
  int64_t v12 = v10;
  uint64_t v8 = v11;
  uint64_t v13 = sub_2614A4E68(v12);
  if (v5)
  {
  }
  else
  {
    uint64_t v14 = v13;
    type metadata accessor for VASilenceModel();
    uint64_t v15 = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v12) + 0xE0))();
    unint64_t v17 = v16;
    sub_2613B9FE8(v26);
    v25[0] = v26[0];
    uint64_t v19 = sub_26144A108(v15, v17, v25);
    uint64_t v20 = type metadata accessor for VAStrategyProviderPassthrough();
    uint64_t v21 = sub_26141BF64();
    v26[3] = v20;
    void v26[4] = &protocol witness table for VAStrategyProviderPassthrough;
    v26[0] = v21;
    sub_2613E3434(a5, (uint64_t)v25);
    uint64_t v22 = (char *)objc_allocWithZone((Class)type metadata accessor for VAFixedKeywordSpotter());
    unsigned int v23 = &v22[OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_runtimeParameters];
    *(_OWORD *)unsigned int v23 = 0u;
    *((_OWORD *)v23 + 1) = 0u;
    *((_OWORD *)v23 + 2) = 0u;
    *((_OWORD *)v23 + 3) = 0u;
    *((_OWORD *)v23 + 4) = 0u;
    *(void *)(v23 + 79) = 0;
    sub_2613E3434((uint64_t)v26, (uint64_t)&v22[OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_strategyProvider]);
    *(void *)&v22[OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_kwsModel] = v14;
    *(void *)&v22[OBJC_IVAR____TtC12VoiceActions21VAFixedKeywordSpotter_vadModel] = v19;
    sub_2613E3434((uint64_t)v25, (uint64_t)v24);
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v8 = (uint64_t)sub_2614A6D00(a2, v12, (uint64_t)v24);
    sub_2613DD718((uint64_t)v25);
    sub_2613DD718((uint64_t)v26);
    swift_release();
    swift_release();
  }
  return v8;
}

uint64_t type metadata accessor for VARuntimeParametersFactoryForCustomModel()
{
  return self;
}

uint64_t sub_26142870C()
{
  swift_unknownObjectRelease();

  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_261428754(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_2613E3EDC;
  return sub_261425400(a1, v6, v7, v5, v4);
}

uint64_t type metadata accessor for VAFixedKeywordSpotter()
{
  return self;
}

uint64_t method lookup function for VAFixedKeywordSpotter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VAFixedKeywordSpotter);
}

uint64_t sub_26142883C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_26142887C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2614288C0()
{
  return swift_release();
}

id sub_2614288C8()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 16);
  return v1;
}

void sub_26142890C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = a1;
}

uint64_t (*sub_261428954())()
{
  return j__swift_endAccess;
}

uint64_t sub_261428A24()
{
  uint64_t v0 = sub_26142A908((uint64_t)&unk_270D55AC0);
  swift_arrayDestroy();
  return v0;
}

id sub_261428A6C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x61775F7475706E69 && a2 == 0xE900000000000076;
  if (!v3 && (sub_2614D5FB8() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (void *)(*(uint64_t (**)(void))(*(void *)v2 + 88))();
  id v5 = objc_msgSend(self, sel_featureValueWithMultiArray_, v4);

  return v5;
}

void sub_261428C44()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = (void *)sub_2614D5378();
  id v3 = objc_msgSend(v1, sel_featureValueForName_, v2);

  if (!v3)
  {
    __break(1u);
    goto LABEL_5;
  }
  id v4 = objc_msgSend(v3, sel_multiArrayValue);

  if (!v4) {
LABEL_5:
  }
    __break(1u);
}

uint64_t sub_261428CE4()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 88))();
  uint64_t v2 = MEMORY[0x263F8D5C8];
  uint64_t v3 = MEMORY[0x263F00C60];
  return MEMORY[0x270EE7598](v1, v2, v3);
}

uint64_t sub_261428DFC()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_featureNames);
  uint64_t v2 = sub_2614D58A8();

  return v2;
}

id sub_261428E54()
{
  id v1 = *(void **)(v0 + 16);
  uint64_t v2 = (void *)sub_2614D5378();
  id v3 = objc_msgSend(v1, sel_featureValueForName_, v2);

  return v3;
}

uint64_t sub_261428F40(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_2613C23AC(&qword_26A915330);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2614D81E0;
  strcpy((char *)(inited + 32), "enc_3d_output");
  *(_WORD *)(inited + 46) = -4864;
  id v4 = objc_msgSend(self, sel_featureValueWithMultiArray_, a1);
  *(void *)(inited + 72) = sub_261405618(0, &qword_26A915338);
  *(void *)(inited + 48) = v4;
  sub_26142907C(inited);
  id v5 = objc_allocWithZone(MEMORY[0x263F00D40]);
  id v6 = sub_26142A760();

  *(void *)(v2 + 16) = v6;
  return v2;
}

unint64_t sub_26142907C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_2613C23AC(&qword_26A9152A8);
  uint64_t v2 = sub_2614D5DD8();
  id v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_26142ADC8(v6, (uint64_t)&v15);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_2613D8F00(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_261409630(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    mach_timebase_info v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_2614291A8()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2614291E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_2614D4C78();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2613C23AC(&qword_26A9150A0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = sub_2614198FC();
  if (!v9)
  {
    __break(1u);
    goto LABEL_6;
  }
  char v10 = v9;
  uint64_t v11 = (void *)sub_2614D5378();
  uint64_t v12 = (void *)sub_2614D5378();
  id v13 = objc_msgSend(v10, sel_URLForResource_withExtension_, v11, v12);

  if (!v13)
  {
LABEL_6:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
    goto LABEL_7;
  }
  sub_2614D4C58();

  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v14(v8, v5, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2);
  if (result != 1)
  {

    return ((uint64_t (*)(uint64_t, char *, uint64_t))v14)(a1, v8, v2);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_261429418(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2614D4C78();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v18 - v11;
  (*(void (**)(uint64_t))(v1 + 88))(v10);
  uint64_t v13 = sub_261405618(0, qword_26A915340);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v12, v5);
  id v14 = a1;
  id v15 = sub_26142AB08((uint64_t)v9, (uint64_t)v14);
  if (v2)
  {
  }
  else
  {
    id v16 = v15;

    uint64_t v13 = (*(uint64_t (**)(id))(v3 + 96))(v16);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  return v13;
}

uint64_t sub_2614295D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_2614D4C78();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(v3 + 88))(v9);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 120))(v11, a1, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_2614296E8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_2614D4C78();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2614297A8, 0, 0);
}

uint64_t sub_2614297A8()
{
  uint64_t v6 = v0[3];
  (*(void (**)(void))(v6 + 88))();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v6 + 128) + **(int **)(v6 + 128));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2614298B4;
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[2];
  return v5(v2, v3);
}

uint64_t sub_2614298B4(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 64) = v1;
  swift_task_dealloc();
  (*(void (**)(void, void))(v4[5] + 8))(v4[6], v4[4]);
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_261429A64, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(uint64_t))v5[1];
    return v6(a1);
  }
}

uint64_t sub_261429A64()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_261429AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_261405618(0, qword_26A915340);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  swift_retain();
  sub_2614D5A58();
  return swift_release();
}

uint64_t sub_261429B80(uint64_t a1, uint64_t a2)
{
  sub_261405618(0, qword_26A915340);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_261429C48;
  return MEMORY[0x270EE7960](a1, a2);
}

uint64_t sub_261429C48(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 24) = a1;
    return MEMORY[0x270FA2498](sub_261429D94, 0, 0);
  }
}

uint64_t sub_261429D94()
{
  uint64_t v1 = *(void *)(v0 + 24);
  type metadata accessor for aa_encoder_20240530();
  *(void *)(swift_allocObject() + 16) = v1;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_261429E08(uint64_t a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00DD0]), sel_init);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, id))(*(void *)v1 + 144))(a1, v3);

  return v4;
}

uint64_t sub_261429E94(uint64_t a1, uint64_t a2)
{
  v12[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = *(void **)(v2 + 16);
  v12[0] = 0;
  id v6 = objc_msgSend(v5, sel_predictionFromFeatures_options_error_, a1, a2, v12);
  id v7 = v12[0];
  if (v6)
  {
    id v8 = v6;
    type metadata accessor for aa_encoder_20240530Output();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v8;
    id v9 = v7;
  }
  else
  {
    id v10 = v12[0];
    sub_2614D4BF8();

    swift_willThrow();
  }
  return v3;
}

uint64_t sub_261429F6C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  mach_timebase_info v3[2] = a1;
  return MEMORY[0x270FA2498](sub_261429F90, 0, 0);
}

uint64_t sub_261429F90()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_26142A030;
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  return MEMORY[0x270EE7938](v3, v2);
}

uint64_t sub_26142A030(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    id v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    return MEMORY[0x270FA2498](sub_26142A17C, 0, 0);
  }
}

uint64_t sub_26142A17C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  type metadata accessor for aa_encoder_20240530Output();
  *(void *)(swift_allocObject() + 16) = v1;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_26142A1F0(void *a1)
{
  type metadata accessor for aa_encoder_20240530Input();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)v1 + 136);
  id v5 = a1;
  uint64_t v6 = v4(v3);
  swift_release();
  return v6;
}

uint64_t sub_26142A284(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2613C23AC(&qword_26A915318);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v10 = (char *)v16 - v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)v16 - v9, a1, v4);
  sub_261405618(0, (unint64_t *)&qword_26A915320);
  v11(v8, (uint64_t)v10, v4);
  sub_26142AAAC();
  uint64_t v12 = sub_2614D5948();
  type metadata accessor for aa_encoder_20240530Input();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 136))(v13);
  swift_release();
  return v14;
}

void sub_26142A450(unint64_t a1, uint64_t a2)
{
  v22[1] = *(id *)MEMORY[0x263EF8340];
  unint64_t v5 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_2613C23AC(&qword_26A9153C0);
    sub_2614D5D78();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_2614D5FD8();
  }
  id v6 = objc_allocWithZone(MEMORY[0x263F00D18]);
  sub_2613C23AC(&qword_26A9153C0);
  uint64_t v7 = (void *)sub_2614D5648();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithFeatureProviderArray_, v7);

  uint64_t v9 = *(void **)(v2 + 16);
  v22[0] = 0;
  id v10 = objc_msgSend(v9, sel_predictionsFromBatch_options_error_, v8, a2, v22);
  id v11 = v22[0];
  if (v10)
  {
    uint64_t v12 = v10;
    v22[0] = (id)MEMORY[0x263F8EE78];
    if (v5)
    {
      swift_bridgeObjectRetain();
      id v16 = v11;
      uint64_t v13 = sub_2614D5D98();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v14 = v11;
    }
    sub_26142A848(v13, 0);
    sub_2614D5678();
    unint64_t v17 = (unint64_t)objc_msgSend(v12, sel_count);
    if ((v17 & 0x8000000000000000) != 0) {
      __break(1u);
    }
    unint64_t v18 = v17;
    if (v17)
    {
      uint64_t v19 = 0;
      do
      {
        id v20 = objc_msgSend(v12, sel_featuresAtIndex_, v19);
        type metadata accessor for aa_encoder_20240530Output();
        *(void *)(swift_allocObject() + 16) = v20;
        swift_unknownObjectRetain();
        uint64_t v21 = swift_retain();
        MEMORY[0x263E36760](v21);
        if (*(void *)(((unint64_t)v22[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v22[0] & 0xFFFFFFFFFFFFFF8)
                                                                                               + 0x18) >> 1)
          sub_2614D5698();
        ++v19;
        sub_2614D56E8();
        sub_2614D5678();
        swift_release();
        swift_unknownObjectRelease();
      }
      while (v18 != v19);
    }
    swift_unknownObjectRelease();
  }
  else
  {
    id v15 = v22[0];
    sub_2614D4BF8();

    swift_willThrow();
  }
}

uint64_t sub_26142A728()
{
  return swift_deallocClassInstance();
}

id sub_26142A760()
{
  v6[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = (void *)sub_2614D52C8();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_initWithDictionary_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_2614D4BF8();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_26142A848(uint64_t a1, char a2)
{
  unint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v2 = v5;
  uint64_t v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      return result;
    }
    uint64_t v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_2614D5D98();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t result = MEMORY[0x263E36D90](v7, v9, a2 & 1, v5);
  uint64_t *v2 = result;
  return result;
}

uint64_t sub_26142A908(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_2613C23AC(qword_26A9153D0);
    uint64_t v3 = sub_2614D5C18();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      id v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_2614D6088();
      swift_bridgeObjectRetain();
      sub_2614D5478();
      uint64_t result = sub_2614D60B8();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        id v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_2614D5FB8(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_2614D5FB8();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      void *v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

unint64_t sub_26142AAAC()
{
  unint64_t result = qword_26A915328;
  if (!qword_26A915328)
  {
    sub_2613C5EC8(&qword_26A915318);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A915328);
  }
  return result;
}

id sub_26142AB08(uint64_t a1, uint64_t a2)
{
  v13[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = (void *)sub_2614D4C38();
  v13[0] = 0;
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_modelWithContentsOfURL_configuration_error_, v4, a2, v13);

  id v6 = v13[0];
  if (v5)
  {
    uint64_t v7 = sub_2614D4C78();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    id v9 = v6;
    v8(a1, v7);
  }
  else
  {
    id v10 = v13[0];
    sub_2614D4BF8();

    swift_willThrow();
    uint64_t v11 = sub_2614D4C78();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
  }
  return v5;
}

uint64_t sub_26142AC68()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_26142ACA0(id a1, char a2)
{
  uint64_t v4 = *(void (**)(id, uint64_t))(v2 + 16);
  if (a2)
  {
    id v7 = a1;
    v4(a1, 1);
    sub_26142ADBC(a1);
  }
  else
  {
    type metadata accessor for aa_encoder_20240530();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    id v6 = a1;
    v4((id)v5, 0);
    swift_release();
  }
}

uint64_t type metadata accessor for aa_encoder_20240530()
{
  return self;
}

uint64_t type metadata accessor for aa_encoder_20240530Output()
{
  return self;
}

uint64_t type metadata accessor for aa_encoder_20240530Input()
{
  return self;
}

void sub_26142ADBC(id a1)
{
}

uint64_t sub_26142ADC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2613C23AC(&qword_26A9153C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static VAA2TVerifierV2.maxPhonemesPerKeyword.getter()
{
  return 48;
}

uint64_t sub_26142AE40@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_2613E3434(v1 + 32, a1);
}

uint64_t sub_26142AE8C(long long *a1)
{
  uint64_t v3 = v1 + 32;
  swift_beginAccess();
  sub_2613DD718(v3);
  sub_2613CC760(a1, v3);
  return swift_endAccess();
}

void *sub_26142AEE8()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 88);
  id v2 = v1;
  return v1;
}

void sub_26142AF2C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 88);
  *(void *)(v1 + 88) = a1;
}

uint64_t sub_26142AF74(unsigned __int8 *a1, uint64_t a2)
{
  return sub_26142AFC8(a1, a2);
}

uint64_t sub_26142AFC8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  int v7 = *a1;
  uint64_t v8 = MEMORY[0x263F8EE78];
  v2[3] = MEMORY[0x263F8EE78];
  v2[9] = v8;
  v2[10] = v8;
  v2[11] = 0;
  id v9 = objc_allocWithZone(MEMORY[0x263F00D90]);
  swift_retain();
  id v10 = objc_msgSend(v9, sel_init);
  uint64_t v11 = v10;
  if (v7) {
    uint64_t v12 = 3;
  }
  else {
    uint64_t v12 = 0;
  }
  objc_msgSend(v10, sel_setComputeUnits_, v12);
  type metadata accessor for at_verifier_rdr_125141826();
  uint64_t v13 = sub_26145612C(v11);
  if (v4)
  {
    sub_2613DD718(a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = (void *)v5[11];
    swift_release();

    type metadata accessor for VAA2TVerifierV2();
    return swift_deallocPartialClassInstance();
  }
  else
  {
    void v5[2] = v13;
    sub_2613E3434(a2, (uint64_t)(v5 + 4));
    swift_release();
    uint64_t v16 = sub_26141BF74();
    sub_2613DD718(a2);
    return v16;
  }
}

uint64_t type metadata accessor for VAA2TVerifierV2()
{
  return self;
}

uint64_t sub_26142B124(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for G2PFactored();
  id v6 = (void *)(*(uint64_t (**)(void))(v5 + 80))();
  if (!v6)
  {
    sub_2613DC2B8();
    swift_allocError();
    void *v28 = 0xD000000000000014;
    v28[1] = 0x80000002614E3540;
    swift_willThrow();
    return (uint64_t)v2;
  }
  int v7 = v6;
  id v2 = (void *)sub_261405798(MEMORY[0x263F8EE78]);
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {

    return (uint64_t)v2;
  }
  uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x263F8EED0] & *v7) + 0x60);
  swift_bridgeObjectRetain();
  uint64_t v30 = v7;
  id v9 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v12 = *(v9 - 1);
    uint64_t v11 = *v9;
    swift_bridgeObjectRetain();
    uint64_t v13 = v31(v12, v11);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return (uint64_t)v2;
    }
    uint64_t v14 = v13;
    uint64_t v32 = v8;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v17 = sub_2613D8F00(v12, v11);
    uint64_t v18 = v2[2];
    BOOL v19 = (v16 & 1) == 0;
    uint64_t v20 = v18 + v19;
    if (__OFADD__(v18, v19)) {
      break;
    }
    char v21 = v16;
    if (v2[3] >= v20)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v16) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_261407950();
        if (v21) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_261406F78(v20, isUniquelyReferenced_nonNull_native);
      unint64_t v22 = sub_2613D8F00(v12, v11);
      if ((v21 & 1) != (v23 & 1)) {
        goto LABEL_25;
      }
      unint64_t v17 = v22;
      if (v21)
      {
LABEL_4:
        uint64_t v10 = v2[7];
        swift_bridgeObjectRelease();
        *(void *)(v10 + 8 * v17) = v14;
        goto LABEL_5;
      }
    }
    v2[(v17 >> 6) + 8] |= 1 << v17;
    uint64_t v24 = (uint64_t *)(v2[6] + 16 * v17);
    uint64_t *v24 = v12;
    v24[1] = v11;
    *(void *)(v2[7] + 8 * v17) = v14;
    uint64_t v25 = v2[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_24;
    }
    v2[2] = v27;
    swift_bridgeObjectRetain();
LABEL_5:
    v9 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = 0;
    uint64_t v8 = v32 - 1;
    int v7 = v30;
    if (v32 == 1)
    {

      swift_bridgeObjectRelease();
      return (uint64_t)v2;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  uint64_t result = sub_2614D5FF8();
  __break(1u);
  return result;
}

uint64_t sub_26142B3FC(uint64_t a1)
{
  void (*v32)(void **__return_ptr, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  void *v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  unint64_t v52;
  unint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  void *v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  void *v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  unint64_t v85;
  int64_t v86;
  uint64_t v87;
  unint64_t v88;
  int64_t v89;
  uint64_t v90;
  void *v91;
  char v92;
  void *v93;
  char *v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t *v101;
  uint64_t v102;
  unint64_t v103;
  int isUniquelyReferenced_nonNull_bridgeObject;
  unint64_t v105;
  void *v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  int64_t v116;
  unint64_t v117;
  char v118;
  char v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  BOOL v123;
  unint64_t v124;
  int64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char v131;
  char v132;
  unint64_t v133;
  uint64_t v134;
  BOOL v135;
  uint64_t v136;
  char v137;
  unint64_t v138;
  char v139;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  void (*v145)(void **__return_ptr, uint64_t);
  uint64_t v146;
  unint64_t v147;
  uint64_t *v148;
  void *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void (*v153)(uint64_t, uint64_t, uint64_t);
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(void **__return_ptr, uint64_t);
  int v161;
  char *v162;
  uint64_t v163;
  int v164;
  int v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  unint64_t *v176;
  long long v177;
  void *v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  int64_t v182;
  void *v183;
  uint64_t v184;
  void *v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  void *v190;
  char v191;
  char v192;
  int v193;
  char v194;
  uint64_t v195;
  uint64_t v196;
  char v197;
  char v198;
  char v199;
  char v200;
  char v201;
  char v202;
  char v203;
  uint64_t v204;

  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = type metadata accessor for VASignpostInterval();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v157 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = *(_DWORD *)(a1 + 8);
  int v10 = *(unsigned __int8 *)(a1 + 12);
  int v11 = *(unsigned __int8 *)(a1 + 13);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  int v14 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v15 = *(void **)(a1 + 40);
  int v16 = *(unsigned __int8 *)(a1 + 48);
  int v17 = *(unsigned __int8 *)(a1 + 49);
  int v18 = *(_DWORD *)(a1 + 52);
  int v19 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v21 = *(void *)(a1 + 64);
  uint64_t v20 = *(void *)(a1 + 72);
  int v22 = *(unsigned __int8 *)(a1 + 80);
  int v23 = *(unsigned __int8 *)(a1 + 81);
  int v24 = *(unsigned __int8 *)(a1 + 82);
  int v25 = *(unsigned __int8 *)(a1 + 83);
  int v26 = *(unsigned __int8 *)(a1 + 84);
  int v27 = *(unsigned __int8 *)(a1 + 85);
  int v28 = *(unsigned __int8 *)(a1 + 86);
  uint64_t v180 = *(void *)a1;
  uint64_t v185 = (void *)v180;
  LODWORD(v186) = v9;
  unint64_t v175 = v10;
  BYTE4(v186) = v10;
  unint64_t v164 = v11;
  BYTE5(v186) = v11;
  uint64_t v168 = v13;
  char v187 = v13;
  uint64_t v188 = v12;
  uint64_t v167 = v12;
  LOBYTE(v189) = v14;
  int v183 = v15;
  dispatch_semaphore_t v190 = v15;
  uint64_t v165 = v16;
  uint64_t v191 = v16;
  unint64_t v174 = v17;
  uint64_t v192 = v17;
  uint64_t v193 = v18;
  uint64_t v173 = v19;
  uint64_t v194 = v19;
  uint64_t v166 = v21;
  uint64_t v195 = v21;
  id v196 = v20;
  uint64_t v179 = v20;
  LODWORD(v178) = v22;
  long long v197 = v22;
  LODWORD(v177) = v23;
  char v198 = v23;
  LODWORD(v176) = v24;
  int v199 = v24;
  unint64_t v172 = v25;
  uint64_t v200 = v25;
  uint64_t v171 = v26;
  uint64_t v201 = v26;
  long long v170 = v27;
  char v202 = v27;
  long long v169 = v28;
  int8x16_t v203 = v28;
  uint64_t v29 = *(void *)(VARuntimeParameters.keywordsNoThresholds.getter() + 16);
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_2613D1BF8((uint64_t)&unk_270D55B18, v29);
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 168))(v30);
  uint64_t v32 = *(void (**)(void **__return_ptr, uint64_t))(*(void *)v4 + 184);
  uint64_t v33 = *(void *)v4 + 184;
  v32(&v185, v31);
  uint64_t v34 = v188;
  uint64_t v35 = v189;
  sub_2613DBF24(&v185, v188);
  uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v34, v35);
  if (v3) {
    return sub_2613DD718((uint64_t)&v185);
  }
  uint64_t v38 = (void *)v36;
  unint64_t v163 = v4;
  uint64_t v159 = v33;
  uint64_t v160 = v32;
  uint64_t v162 = v8;
  uint64x2_t v204 = 0;
  swift_bridgeObjectRetain();
  sub_2613DD718((uint64_t)&v185);
  uint64_t v39 = v180;
  uint64_t v185 = (void *)v180;
  LODWORD(v186) = v9;
  BYTE4(v186) = v175;
  uint64_t v40 = v164;
  BYTE5(v186) = v164;
  uint64_t v41 = v168;
  char v187 = v168;
  uint64_t v188 = v167;
  char v161 = v14;
  LOBYTE(v189) = v14;
  dispatch_semaphore_t v190 = v183;
  BOOL v42 = v165;
  uint64_t v191 = v165;
  uint64_t v192 = v174;
  uint64_t v193 = v18;
  uint64_t v194 = v173;
  uint64_t v195 = v166;
  id v196 = v179;
  long long v197 = (char)v178;
  char v198 = v177;
  int v199 = (char)v176;
  uint64_t v200 = v172;
  uint64_t v201 = v171;
  char v202 = v170;
  int8x16_t v203 = v169;
  uint64_t v43 = VARuntimeParameters.keywordsNoThresholds.getter();
  uint64_t v44 = *(void *)(v43 + 16);
  if (v44)
  {
    uint64_t v45 = (uint64_t *)(v43 + 40);
    uint64_t v46 = (void *)MEMORY[0x263F8EE78];
    do
    {
      char v48 = *(v45 - 1);
      int v47 = *v45;
      uint64_t v49 = v38[2];
      swift_bridgeObjectRetain();
      if (v49
        && (swift_bridgeObjectRetain(), sub_2613D8F00(v48, v47), uint64_t v51 = v50, swift_bridgeObjectRelease(), (v51 & 1) != 0))
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v46 = sub_2613D864C(0, v46[2] + 1, 1, v46);
        }
        int v53 = v46[2];
        int v52 = v46[3];
        if (v53 >= v52 >> 1) {
          uint64_t v46 = sub_2613D864C((void *)(v52 > 1), v53 + 1, 1, v46);
        }
        v46[2] = v53 + 1;
        uint64_t v54 = &v46[2 * v53];
        v54[4] = v48;
        v54[5] = v47;
      }
      v45 += 2;
      --v44;
    }
    while (v44);
    swift_bridgeObjectRelease();
    uint64_t v55 = v163;
    uint64_t v56 = v180;
    uint64_t v57 = v168;
    BOOL v42 = v165;
    uint64_t v40 = v164;
  }
  else
  {
    uint64_t v57 = v41;
    swift_bridgeObjectRelease();
    uint64_t v56 = v39;
    uint64_t v46 = (void *)MEMORY[0x263F8EE78];
    uint64_t v55 = v163;
  }
  swift_bridgeObjectRelease();
  uint64_t v58 = (uint64_t)v162;
  if (!v46[2])
  {
    swift_bridgeObjectRelease();
    uint64_t v63 = v204;
    uint64_t v64 = v167;
    uint64_t v65 = v161;
    uint64_t v66 = v183;
    goto LABEL_20;
  }
  type metadata accessor for VALog();
  static VALog.begin(_:_:)("G2p", 3, 2u, 0, 0, v58);
  uint64_t v59 = *(uint64_t (**)(uint64_t))(*(void *)v55 + 288);
  uint64_t v60 = swift_bridgeObjectRetain();
  uint64_t v61 = v204;
  uint64_t v62 = v59(v60);
  if (v61)
  {
    swift_bridgeObjectRelease();
    sub_26142D1B0(v58);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v111 = v62;
  uint64x2_t v204 = 0;
  swift_bridgeObjectRelease();
  __int16 v112 = *(void *)(v111 + 64);
  unint64_t v181 = v111 + 64;
  char v113 = 1 << *(unsigned char *)(v111 + 32);
  char v114 = -1;
  if (v113 < 64) {
    char v114 = ~(-1 << v113);
  }
  char v115 = v114 & v112;
  uint64_t v182 = (unint64_t)(v113 + 63) >> 6;
  swift_bridgeObjectRetain();
  char v116 = 0;
  while (1)
  {
    unint64_t v120 = (uint64_t)v46;
    uint64_t v66 = v183;
    if (!v115) {
      break;
    }
    unint64_t v121 = __clz(__rbit64(v115));
    v115 &= v115 - 1;
    unint64_t v122 = v121 | (v116 << 6);
LABEL_69:
    uint64_t v126 = (uint64_t *)(*(void *)(v111 + 48) + 16 * v122);
    uint64_t v127 = *v126;
    uint64_t v128 = v126[1];
    swift_bridgeObjectRetain_n();
    char v129 = v204;
    uint64_t v46 = (void *)sub_26142DE1C(v120, v127, v128);
    uint64x2_t v204 = v129;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v111 + 16))
    {
      swift_bridgeObjectRetain();
      char v130 = sub_2613D8F00(v127, v128);
      if ((v131 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_50;
      }
      int v158 = *(void *)(*(void *)(v111 + 56) + 8 * v130);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      HIDWORD(v157) = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v185 = v38;
      uint64_t v133 = sub_2613D8F00(v127, v128);
      uint64_t v134 = v38[2];
      uint64_t v135 = (v132 & 1) == 0;
      uint64_t v136 = v134 + v135;
      if (__OFADD__(v134, v135)) {
        goto LABEL_106;
      }
      if (v38[3] < v136)
      {
        uint64_t v137 = v132;
        sub_261406F78(v136, SBYTE4(v157));
        uint64_t v138 = sub_2613D8F00(v127, v128);
        if ((v137 & 1) != (v139 & 1)) {
          goto LABEL_110;
        }
        uint64_t v133 = v138;
        goto LABEL_75;
      }
      if ((v157 & 0x100000000) == 0)
      {
        uint64_t v137 = v132;
        sub_261407950();
LABEL_75:
        uint64_t v132 = v137;
      }
      uint64_t v38 = v185;
      if (v132)
      {
        uint64_t v141 = v185[7];
        swift_bridgeObjectRelease();
        *(void *)(v141 + 8 * v133) = v158;
      }
      else
      {
        v185[(v133 >> 6) + 8] |= 1 << v133;
        uint64_t v142 = (uint64_t *)(v38[6] + 16 * v133);
        char *v142 = v127;
        v142[1] = v128;
        *(void *)(v38[7] + 8 * v133) = v158;
        id v143 = v38[2];
        uint64_t v123 = __OFADD__(v143, 1);
        uint64_t v144 = v143 + 1;
        if (v123) {
          goto LABEL_108;
        }
        v38[2] = v144;
        swift_bridgeObjectRetain();
      }
LABEL_88:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_50:
      swift_bridgeObjectRetain();
      char v117 = sub_2613D8F00(v127, v128);
      uint64_t v119 = v118;
      swift_bridgeObjectRelease();
      if (v119)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v185 = v38;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_261407950();
          uint64_t v38 = v185;
        }
        swift_bridgeObjectRelease();
        sub_2614075CC(v117, (uint64_t)v38);
        swift_bridgeObjectRelease();
        goto LABEL_88;
      }
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v123 = __OFADD__(v116++, 1);
  if (v123) {
    goto LABEL_102;
  }
  if (v116 < v182)
  {
    uint64_t v124 = *(void *)(v181 + 8 * v116);
    if (!v124)
    {
      uint64_t v125 = v116 + 1;
      if (v116 + 1 >= v182) {
        goto LABEL_90;
      }
      uint64_t v124 = *(void *)(v181 + 8 * v125);
      if (!v124)
      {
        uint64_t v125 = v116 + 2;
        if (v116 + 2 >= v182) {
          goto LABEL_90;
        }
        uint64_t v124 = *(void *)(v181 + 8 * v125);
        if (!v124)
        {
          uint64_t v125 = v116 + 3;
          if (v116 + 3 >= v182) {
            goto LABEL_90;
          }
          uint64_t v124 = *(void *)(v181 + 8 * v125);
          if (!v124)
          {
            uint64_t v125 = v116 + 4;
            if (v116 + 4 >= v182) {
              goto LABEL_90;
            }
            uint64_t v124 = *(void *)(v181 + 8 * v125);
            if (!v124)
            {
              uint64_t v125 = v116 + 5;
              if (v116 + 5 >= v182) {
                goto LABEL_90;
              }
              uint64_t v124 = *(void *)(v181 + 8 * v125);
              if (!v124)
              {
                while (1)
                {
                  char v116 = v125 + 1;
                  if (__OFADD__(v125, 1)) {
                    goto LABEL_107;
                  }
                  if (v116 >= v182) {
                    goto LABEL_90;
                  }
                  uint64_t v124 = *(void *)(v181 + 8 * v116);
                  ++v125;
                  if (v124) {
                    goto LABEL_68;
                  }
                }
              }
            }
          }
        }
      }
      char v116 = v125;
    }
LABEL_68:
    char v115 = (v124 - 1) & v124;
    unint64_t v122 = __clz(__rbit64(v124)) + (v116 << 6);
    goto LABEL_69;
  }
LABEL_90:
  uint64_t v145 = v160;
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v120 + 16))
  {
    uint64_t v185 = 0;
    uint64_t v186 = 0xE000000000000000;
    sub_2614D5C38();
    swift_bridgeObjectRelease();
    uint64_t v185 = (void *)0xD000000000000012;
    uint64_t v186 = 0x80000002614E3560;
    uint64_t v184 = v120;
    sub_2613C23AC(&qword_26A914A70);
    sub_2613DCEC0();
    sub_2614D5338();
    swift_bridgeObjectRelease();
    sub_2614D54D8();
    swift_bridgeObjectRelease();
    uint64_t v146 = (uint64_t)v185;
    uint64_t v147 = v186;
    sub_2613DC2B8();
    swift_allocError();
    *uint64_t v148 = v146;
    v148[1] = v147;
    swift_willThrow();
    sub_26142D1B0((uint64_t)v162);
    return swift_bridgeObjectRelease();
  }
  uint64_t v150 = swift_bridgeObjectRelease();
  v145(&v185, v150);
  uint64_t v151 = v188;
  uint64_t v152 = v189;
  sub_2613DBF24(&v185, v188);
  uint64_t v153 = *(void (**)(uint64_t, uint64_t, uint64_t))(v152 + 16);
  uint64_t v154 = swift_bridgeObjectRetain();
  unint64_t v155 = v204;
  v153(v154, v151, v152);
  uint64_t v63 = v155;
  if (v155)
  {
    sub_26142D1B0((uint64_t)v162);
    swift_bridgeObjectRelease();
    sub_2613DD718((uint64_t)&v185);
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_2613DD718((uint64_t)&v185);
  uint64_t v156 = (uint64_t)v162;
  VASignpostInterval.end(_:)((Swift::String_optional)0);
  sub_26142D1B0(v156);
  uint64_t v56 = v180;
  uint64_t v57 = v168;
  uint64_t v64 = v167;
  uint64_t v65 = v161;
  BOOL v42 = v165;
  uint64_t v40 = v164;
LABEL_20:
  uint64_t v185 = (void *)v56;
  LODWORD(v186) = v9;
  BYTE4(v186) = v175;
  BYTE5(v186) = v40;
  char v187 = v57;
  uint64_t v188 = v64;
  LOBYTE(v189) = v65;
  dispatch_semaphore_t v190 = v66;
  uint64_t v191 = v42;
  uint64_t v192 = v174;
  uint64_t v193 = v18;
  uint64_t v194 = v173;
  uint64_t v195 = v166;
  id v196 = v179;
  long long v197 = (char)v178;
  char v198 = v177;
  int v199 = (char)v176;
  uint64_t v200 = v172;
  uint64_t v201 = v171;
  char v202 = v170;
  int8x16_t v203 = v169;
  uint64_t v185 = (void *)VARuntimeParameters.keywordsNoThresholds.getter();
  swift_bridgeObjectRetain();
  sub_26142D288((uint64_t *)&v185);
  if (v63)
  {
LABEL_109:
    swift_release();
    __break(1u);
LABEL_110:
    uint64_t result = sub_2614D5FF8();
    __break(1u);
  }
  else
  {
    uint64_t v67 = v40;
    swift_bridgeObjectRelease();
    unint64_t v181 = (uint64_t)v185;
    uint64_t v68 = sub_2614D56C8();
    *(void *)(v68 + 16) = 48;
    *(_OWORD *)(v68 + 32) = 0u;
    *(_OWORD *)(v68 + 48) = 0u;
    *(_OWORD *)(v68 + 64) = 0u;
    *(_OWORD *)(v68 + 80) = 0u;
    *(_OWORD *)(v68 + 96) = 0u;
    *(_OWORD *)(v68 + 112) = 0u;
    *(_OWORD *)(v68 + 128) = 0u;
    *(_OWORD *)(v68 + 144) = 0u;
    *(_OWORD *)(v68 + 160) = 0u;
    *(_OWORD *)(v68 + 176) = 0u;
    *(_OWORD *)(v68 + 192) = 0u;
    *(_OWORD *)(v68 + 208) = 0u;
    uint64_t v185 = (void *)v180;
    LODWORD(v186) = v9;
    BYTE4(v186) = v175;
    BYTE5(v186) = v67;
    char v187 = v57;
    uint64_t v188 = v64;
    LOBYTE(v189) = v161;
    dispatch_semaphore_t v190 = v66;
    uint64_t v191 = v42;
    uint64_t v192 = v174;
    uint64_t v193 = v18;
    uint64_t v194 = v173;
    uint64_t v69 = v166;
    uint64_t v195 = v166;
    id v196 = v179;
    long long v197 = (char)v178;
    char v198 = v177;
    int v199 = (char)v176;
    uint64_t v200 = v172;
    uint64_t v201 = v171;
    char v202 = v170;
    int8x16_t v203 = v169;
    uint64_t v70 = *(void *)(VARuntimeParameters.keywordsNoThresholds.getter() + 16);
    swift_bridgeObjectRelease();
    uint64_t v71 = sub_2613D1BF8(v68, v70);
    uint64_t v72 = v163;
    float v73 = v163 + 72;
    swift_beginAccess();
    *(void *)(v72 + 72) = v71;
    swift_bridgeObjectRelease();
    uint64_t v74 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00DB0]), sel_init);
    uint64_t v75 = v66;
    unsigned int v76 = v74;
    uint64_t v185 = (void *)v180;
    LODWORD(v186) = v9;
    BYTE4(v186) = v175;
    BYTE5(v186) = v67;
    uint64_t v77 = (void *)v181;
    char v187 = v168;
    uint64_t v188 = v167;
    LOBYTE(v189) = v161;
    dispatch_semaphore_t v190 = v75;
    uint64_t v191 = v42;
    uint64_t v192 = v174;
    uint64_t v193 = v18;
    uint64_t v194 = v173;
    uint64_t v195 = v69;
    id v196 = v179;
    long long v197 = (char)v178;
    char v198 = v177;
    int v199 = (char)v176;
    uint64_t v200 = v172;
    uint64_t v201 = v171;
    char v202 = v170;
    int8x16_t v203 = v169;
    os_log_type_t v78 = *(void *)(VARuntimeParameters.keywordsNoThresholds.getter() + 16);
    swift_bridgeObjectRelease();
    uint64_t v79 = sub_26142C618(v76, v78);
    uint64_t v80 = (unint64_t *)(v72 + 80);
    swift_beginAccess();
    *(void *)(v72 + 80) = v79;
    swift_bridgeObjectRelease();
    uint64_t v179 = v77[2];
    if (v179)
    {
      if (v38[2])
      {
        uint64_t v81 = v77[5];
        unint64_t v178 = v77 + 4;
        uint64_t v82 = v77[4];
        swift_bridgeObjectRetain();
        uint64_t v83 = sub_2613D8F00(v82, v81);
        if (v84)
        {
          uint64_t v85 = 0;
          uint64_t v180 = 1;
          uint64_t v177 = xmmword_2614D81E0;
          int v183 = v38;
          char v176 = v80;
          while (1)
          {
            uint64x2_t v204 = 0;
            unint64_t v86 = *(void *)(v38[7] + 8 * v83);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v182 = v86;
            int v87 = *(void *)(v86 + 16);
            if (v87) {
              break;
            }
LABEL_34:
            swift_bridgeObjectRelease();
            sub_2613C23AC(&qword_26A914AB0);
            float v96 = swift_allocObject();
            *(_OWORD *)(v96 + 16) = v177;
            if (v85 >= *(void *)(*(void *)v73 + 16)) {
              goto LABEL_103;
            }
            float v97 = v96;
            *(void *)(v96 + 32) = *(void *)(*(void *)v73 + 8 * v85 + 32);
            swift_bridgeObjectRetain();
            id v98 = v204;
            sub_26141A8E4(v97);
            uint64_t v100 = v181;
            int v101 = v176;
            if (v98)
            {
              swift_bridgeObjectRelease();
              swift_release();
              return swift_bridgeObjectRelease();
            }
            char v102 = v99;
            swift_bridgeObjectRelease();
            swift_beginAccess();
            char v103 = *v101;
            isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
            *int v101 = v103;
            if (!isUniquelyReferenced_nonNull_bridgeObject
              || (v103 & 0x8000000000000000) != 0
              || (v103 & 0x4000000000000000) != 0)
            {
              sub_26142D20C(v103);
              char v103 = v105;
              *int v101 = v105;
            }
            if (v85 >= *(void *)((v103 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_104;
            }
            char v106 = *(void **)((v103 & 0xFFFFFFFFFFFFFF8) + 8 * v85 + 0x20);
            *(void *)((v103 & 0xFFFFFFFFFFFFFF8) + 8 * v85 + 0x20) = v102;

            sub_2614D5678();
            swift_endAccess();
            uint64_t v85 = v180;
            if (v180 == v179) {
              goto LABEL_92;
            }
            if (v180 >= *(void *)(v100 + 16)) {
              goto LABEL_105;
            }
            if (!v38[2]) {
              goto LABEL_93;
            }
            char v107 = &v178[2 * v180];
            int v108 = *v107;
            char v109 = v107[1];
            swift_bridgeObjectRetain();
            uint64_t v83 = sub_2613D8F00(v108, v109);
            uint64_t v180 = v85 + 1;
            uint64_t v38 = v183;
            if ((v110 & 1) == 0) {
              goto LABEL_45;
            }
          }
          float v88 = 0;
          unint64_t v89 = v182 + 32;
          while (1)
          {
            int64_t v90 = *(void *)(v89 + 8 * v88);
            swift_beginAccess();
            uint64_t v91 = *(void **)v73;
            float v92 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)float v73 = v91;
            if ((v92 & 1) == 0)
            {
              uint64_t v91 = sub_2613D8EC8(v91);
              *(void *)float v73 = v91;
            }
            if (v85 >= v91[2]) {
              break;
            }
            unint64_t v93 = v91 + 4;
            uint64_t v94 = (char *)v91[v85 + 4];
            uint64_t v95 = swift_isUniquelyReferenced_nonNull_native();
            v93[v85] = v94;
            if ((v95 & 1) == 0)
            {
              uint64_t v94 = sub_2613D8E30((uint64_t)v94);
              v93[v85] = v94;
            }
            if (v88 >= *((void *)v94 + 2)) {
              goto LABEL_101;
            }
            *(float *)&v94[4 * v88 + 32] = (float)v90;
            swift_endAccess();
            ++v88;
            uint64_t v38 = v183;
            if (v87 == v88) {
              goto LABEL_34;
            }
          }
          __break(1u);
LABEL_101:
          __break(1u);
LABEL_102:
          __break(1u);
LABEL_103:
          __break(1u);
LABEL_104:
          __break(1u);
LABEL_105:
          __break(1u);
LABEL_106:
          __break(1u);
LABEL_107:
          __break(1u);
LABEL_108:
          __break(1u);
          goto LABEL_109;
        }
LABEL_45:
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_93:
        swift_release();
      }
      sub_2613DC2B8();
      swift_allocError();
      *uint64_t v149 = 0xD00000000000001DLL;
      v149[1] = 0x80000002614E3580;
      swift_willThrow();
    }
    else
    {
LABEL_92:
      swift_release();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_26142C618(void *a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = sub_2614D5D58();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      sub_26142E064();
      uint64_t v4 = sub_2614D56C8();
      uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
      *(void *)(v5 + 16) = a2;
      uint64_t v11 = v4;
      *(void *)(v5 + 32) = a1;
      if (a2 != 1)
      {
        *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x28) = a1;
        uint64_t v6 = a2 - 2;
        if (v6)
        {
          uint64_t v7 = (void *)(v5 + 48);
          do
          {
            *v7++ = a1;
            id v8 = a1;
            --v6;
          }
          while (v6);
        }
        id v9 = a1;
      }
    }
    else
    {
      uint64_t v11 = MEMORY[0x263F8EE78];
    }
    sub_2614D5678();
    return v11;
  }
  return result;
}

uint64_t sub_26142C70C(unint64_t a1, char a2)
{
  uint64_t v6 = sub_2614D50C8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6);
  int v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_2614D5D98();
    swift_bridgeObjectRelease();
    if (v15)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_2614D5D98();
      uint64_t result = swift_bridgeObjectRelease();
      if (v16 >= 2) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
LABEL_16:
    type metadata accessor for VAResultGeneratorInput();
    return VAResultGeneratorInput.__allocating_init(hasInput:scores:vadBuffer:)(0, 0, 0);
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v11) {
    goto LABEL_16;
  }
  if (v11 >= 2)
  {
LABEL_4:
    sub_2613DC2B8();
    swift_allocError();
    unint64_t v13 = 0xD00000000000001FLL;
    int v14 = "Did not expect multiple buffers";
LABEL_18:
    unint64_t *v12 = v13;
    v12[1] = (unint64_t)(v14 - 32) | 0x8000000000000000;
    swift_willThrow();
    return (uint64_t)v2;
  }
LABEL_7:
  if ((a1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x263E36D80](0, a1);
LABEL_10:
    type metadata accessor for VAFeatureExtractingEncoderOutput();
    uint64_t v17 = swift_dynamicCastClass();
    if (!v17)
    {
      swift_unknownObjectRelease();
      sub_2613DC2B8();
      swift_allocError();
      unint64_t v13 = 0xD000000000000018;
      int v14 = "Unexpected type of input";
      goto LABEL_18;
    }
    uint64_t v18 = v17;
    if (*(unsigned char *)(v17 + 16))
    {
      uint64_t v19 = swift_beginAccess();
      if (*(void *)(v2[9] + 16))
      {
        if (a2)
        {
          uint64_t v2 = (void *)(*(uint64_t (**)(uint64_t))(*v2 + 160))(v19);
LABEL_15:
          type metadata accessor for VAResultGeneratorInput();
          uint64_t v20 = *(void *)(v18 + 32);
          swift_bridgeObjectRetain();
          char v21 = 1;
          uint64_t v22 = (uint64_t)v2;
          uint64_t v23 = v20;
LABEL_23:
          uint64_t v2 = (void *)VAResultGeneratorInput.__allocating_init(hasInput:scores:vadBuffer:)(v21, v22, v23);
          swift_unknownObjectRelease();
          return (uint64_t)v2;
        }
        if (*(void *)(v18 + 40))
        {
          int v28 = *(uint64_t (**)(uint64_t))(*v2 + 312);
          uint64_t v29 = swift_bridgeObjectRetain();
          uint64_t v2 = (void *)v28(v29);
          swift_bridgeObjectRelease();
          if (!v3) {
            goto LABEL_15;
          }
        }
        else
        {
          sub_2613DC2B8();
          swift_allocError();
          void *v30 = 0xD00000000000001ELL;
          v30[1] = 0x80000002614E35C0;
          swift_willThrow();
        }
        swift_unknownObjectRelease();
        return (uint64_t)v2;
      }
      uint64_t v24 = sub_26146718C();
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v24, v6);
      int v25 = sub_2614D50A8();
      os_log_type_t v26 = sub_2614D5978();
      if (os_log_type_enabled(v25, v26))
      {
        int v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v27 = 0;
        _os_log_impl(&dword_2613B8000, v25, v26, "No pronunciations set for this model", v27, 2u);
        MEMORY[0x263E38060](v27, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    type metadata accessor for VAResultGeneratorInput();
    char v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    goto LABEL_23;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_unknownObjectRetain();
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_26142CB48(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v4 = sub_2613D1BF8(MEMORY[0x263F8EE78], *(void *)(v1[9] + 16));
  uint64_t v5 = (void (*)(unsigned char *, uint64_t))(*(uint64_t (**)(unsigned char *))(*v1 + 272))(v38);
  sub_26141A3B0(a1, v6);
  if (v2)
  {
    swift_bridgeObjectRelease();
    v5(v38, 1);
    return v4;
  }
  uint64_t v8 = ((uint64_t (*)(unsigned char *, void))v5)(v38, 0);
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*v1 + 256))(v8);
  if (!v9)
  {
    swift_bridgeObjectRelease();
    sub_2613DC2B8();
    swift_allocError();
    void *v32 = 0xD000000000000024;
    v32[1] = 0x80000002614E3600;
    swift_willThrow();
    return v4;
  }
  int v10 = (void *)v9;
  uint64_t v36 = *(void *)(v1[9] + 16);
  if (!v36)
  {
LABEL_16:

    return v4;
  }
  type metadata accessor for at_verifier_rdr_125141826Input();
  uint64_t v34 = *(uint64_t (**)(void))(*(void *)v1[2] + 136);
  uint64_t v35 = v1 + 10;
  uint64_t result = swift_beginAccess();
  unint64_t v11 = 0;
  uint64_t v33 = v10;
  while (1)
  {
    uint64_t v12 = *v35;
    if ((*v35 & 0xC000000000000001) == 0) {
      break;
    }
    id v31 = v10;
    swift_bridgeObjectRetain();
    id v15 = (id)MEMORY[0x263E36D80](v11, v12);
    swift_bridgeObjectRelease();
LABEL_10:
    sub_261455B94((uint64_t)v10, (uint64_t)v15);
    uint64_t v16 = v34();
    sub_2613C23AC(&qword_26A914AC0);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_2614D8210;
    uint64_t v18 = *(uint64_t (**)(void))(*(void *)v16 + 88);
    uint64_t v19 = (void *)v18();
    uint64_t v37 = (void *)v4;
    id v20 = objc_msgSend(v19, sel_objectAtIndexedSubscript_, 0);

    objc_msgSend(v20, sel_floatValue);
    int v22 = v21;

    *(_DWORD *)(v17 + 32) = v22;
    uint64_t v23 = (void *)v18();
    id v24 = objc_msgSend(v23, sel_objectAtIndexedSubscript_, 1);

    objc_msgSend(v24, sel_floatValue);
    int v26 = v25;

    *(_DWORD *)(v17 + 36) = v26;
    int v27 = (void *)v18();
    id v28 = objc_msgSend(v27, sel_objectAtIndexedSubscript_, 2);

    objc_msgSend(v28, sel_floatValue);
    int v30 = v29;

    uint64_t v4 = (uint64_t)v37;
    *(_DWORD *)(v17 + 40) = v30;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_2613D8EC8(v37);
      uint64_t v4 = result;
    }
    if (v11 >= *(void *)(v4 + 16)) {
      goto LABEL_19;
    }
    *(void *)(v4 + 8 * v11 + 32) = v17;
    swift_release();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    ++v11;
    int v10 = v33;
    if (v36 == v11) {
      goto LABEL_16;
    }
  }
  if (v11 < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    unint64_t v13 = *(void **)(v12 + 8 * v11 + 32);
    id v14 = v10;
    id v15 = v13;
    goto LABEL_10;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

void sub_26142CF90()
{
}

void sub_26142CFC0()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_2613DD718(v0 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 88);
}

uint64_t VAA2TVerifierV2.deinit()
{
  uint64_t v0 = VAVerifierModel.deinit();
  swift_release();
  swift_bridgeObjectRelease();
  sub_2613DD718(v0 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t VAA2TVerifierV2.__deallocating_deinit()
{
  uint64_t v0 = VAVerifierModel.deinit();
  swift_release();
  swift_bridgeObjectRelease();
  sub_2613DD718(v0 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_26142D0D8()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t sub_26142D118()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 304))();
}

uint64_t sub_26142D164()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 296))();
}

uint64_t sub_26142D1B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VASignpostInterval();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_26142D20C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_2614D5D98();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x263E36D90);
}

uint64_t sub_26142D288(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_26142DE08(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_26142D2F4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_26142D2F4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_2614D5F78();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_26142D9E0(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  char v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      unint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      uint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          float v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_26142DAB0((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            float v97 = sub_26140F51C((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_2614D56C8();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  unint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    id v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_2614D5FB8();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    int v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_2614D5FB8()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v11 = sub_26140F420(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      unint64_t v11 = sub_26140F420((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    BOOL v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        unint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        float v88 = v42;
        unint64_t v89 = v44;
        int64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_26142DAB0((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)unint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        unint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        BOOL v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_2614D5FB8() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_2614D5D58();
  __break(1u);
  return result;
}

uint64_t sub_26142D9E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_2614D5FB8(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_26142DAB0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_2614D5FB8() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    id v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_2614D5FB8() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_26142DD4C((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_2614D5DE8();
  __break(1u);
  return result;
}

char *sub_26142DD4C(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_2614D5DE8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

uint64_t sub_26142DE08(uint64_t a1)
{
  return sub_2613D91BC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_26142DE1C(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v6 = 0;
  uint64_t v7 = result + 40;
  uint64_t v8 = -(uint64_t)v3;
  uint64_t v9 = MEMORY[0x263F8EE78];
  uint64_t v19 = result + 40;
  do
  {
    if (v6 <= v3) {
      unint64_t v10 = v3;
    }
    else {
      unint64_t v10 = v6;
    }
    uint64_t v11 = -(uint64_t)v10;
    for (id i = (uint64_t *)(v7 + 16 * v6++); ; i += 2)
    {
      if (v11 + v6 == 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v13 = *(i - 1);
      uint64_t v14 = *i;
      if (v13 != a2 || v14 != a3)
      {
        uint64_t result = sub_2614D5FB8();
        if ((result & 1) == 0) {
          break;
        }
      }
      ++v6;
      if (v8 + v6 == 1) {
        return v9;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0) {
      uint64_t result = sub_2613D913C(0, *(void *)(v9 + 16) + 1, 1);
    }
    unint64_t v17 = *(void *)(v9 + 16);
    unint64_t v16 = *(void *)(v9 + 24);
    if (v17 >= v16 >> 1) {
      uint64_t result = sub_2613D913C(v16 > 1, v17 + 1, 1);
    }
    *(void *)(v9 + 16) = v17 + 1;
    uint64_t v18 = v9 + 16 * v17;
    *(void *)(v18 + 32) = v13;
    *(void *)(v18 + 40) = v14;
    unint64_t v3 = v20;
    uint64_t v7 = v19;
  }
  while (v8 + v6);
  return v9;
}

uint64_t method lookup function for VAA2TVerifierV2(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VAA2TVerifierV2);
}

uint64_t dispatch thunk of VAA2TVerifierV2.pronounciationFor(words:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of VAA2TVerifierV2.didStartListening(requestParams:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of VAA2TVerifierV2.predictScores(predictionInput:shouldSkipVerifierInference:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

unint64_t sub_26142E064()
{
  unint64_t result = qword_26A915320;
  if (!qword_26A915320)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A915320);
  }
  return result;
}

id sub_26142E0A4()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 24);
  return v1;
}

void sub_26142E0E8(uint64_t a1)
{
  swift_beginAccess();
  unint64_t v3 = *(void **)(v1 + 24);
  *(void *)(v1 + 24) = a1;
}

id sub_26142E130()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 32);
  return v1;
}

id sub_26142E174()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 40);
  return v1;
}

void sub_26142E1B8(uint64_t a1)
{
  swift_beginAccess();
  unint64_t v3 = *(void **)(v1 + 40);
  *(void *)(v1 + 40) = a1;
}

uint64_t sub_26142E294()
{
  uint64_t v0 = sub_26142A908((uint64_t)&unk_270D55B60);
  swift_arrayDestroy();
  return v0;
}

id sub_26142E2DC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x80000002614E36F0 || (sub_2614D5FB8() & 1) != 0)
  {
    uint64_t v5 = (*(uint64_t (**)(void))(*(void *)v2 + 112))();
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002614E3710 || (sub_2614D5FB8() & 1) != 0)
  {
    uint64_t v5 = (*(uint64_t (**)(void))(*(void *)v2 + 136))();
  }
  else if (a1 == 0x75615F7475706E69 && a2 == 0xEF6E656C5F6F6964 || (sub_2614D5FB8() & 1) != 0)
  {
    uint64_t v5 = (*(uint64_t (**)(void))(*(void *)v2 + 160))();
  }
  else
  {
    if ((a1 != 0xD000000000000010 || a2 != 0x80000002614E3730) && (sub_2614D5FB8() & 1) == 0) {
      return 0;
    }
    uint64_t v5 = (*(uint64_t (**)(void))(*(void *)v2 + 184))();
  }
  unint64_t v6 = (void *)v5;
  id v7 = objc_msgSend(self, sel_featureValueWithMultiArray_, v5);

  return v7;
}

void *sub_26142E588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  return result;
}

uint64_t sub_26142E5DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a1;
  uint64_t v21 = a2;
  uint64_t v22 = a4;
  uint64_t v19 = a3;
  uint64_t v7 = sub_2613C23AC(&qword_26A915318);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261405618(0, (unint64_t *)&qword_26A915320);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v11(v10, a1, v7);
  sub_26142AAAC();
  uint64_t v20 = sub_2614D5948();
  v11(v10, a2, v7);
  uint64_t v12 = sub_2614D5948();
  v11(v10, a3, v7);
  uint64_t v13 = sub_2614D5948();
  uint64_t v14 = v22;
  v11(v10, v22, v7);
  uint64_t v15 = sub_2614D5948();
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 224))(v20, v12, v13, v15);
  unint64_t v17 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v17(v14, v7);
  v17(v19, v7);
  v17(v21, v7);
  v17(v23, v7);
  return v16;
}

uint64_t sub_26142E814()
{
  return swift_deallocClassInstance();
}

void sub_26142E864()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = (void *)sub_2614D5378();
  id v3 = objc_msgSend(v1, sel_featureValueForName_, v2);

  if (!v3)
  {
    __break(1u);
    goto LABEL_5;
  }
  id v4 = objc_msgSend(v3, sel_multiArrayValue);

  if (!v4) {
LABEL_5:
  }
    __break(1u);
}

uint64_t sub_26142E8F4()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 88))();
  uint64_t v2 = MEMORY[0x263F8D5C8];
  uint64_t v3 = MEMORY[0x263F00C60];
  return MEMORY[0x270EE7598](v1, v2, v3);
}

uint64_t sub_26142EAA8(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_2613C23AC(&qword_26A915330);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2614D81E0;
  *(void *)(inited + 32) = 0x74757074756FLL;
  *(void *)(inited + 40) = 0xE600000000000000;
  id v4 = objc_msgSend(self, sel_featureValueWithMultiArray_, a1);
  *(void *)(inited + 72) = sub_261405618(0, &qword_26A915338);
  *(void *)(inited + 48) = v4;
  sub_26142907C(inited);
  id v5 = objc_allocWithZone(MEMORY[0x263F00D40]);
  id v6 = sub_26142A760();

  *(void *)(v2 + 16) = v6;
  return v2;
}

uint64_t sub_26142EBD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_2614D4C78();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2613C23AC(&qword_26A9150A0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = sub_2614198FC();
  if (!v9)
  {
    __break(1u);
    goto LABEL_6;
  }
  unint64_t v10 = v9;
  uint64_t v11 = (void *)sub_2614D5378();
  uint64_t v12 = (void *)sub_2614D5378();
  id v13 = objc_msgSend(v10, sel_URLForResource_withExtension_, v11, v12);

  if (!v13)
  {
LABEL_6:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
    goto LABEL_7;
  }
  sub_2614D4C58();

  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v14(v8, v5, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2);
  if (result != 1)
  {

    return ((uint64_t (*)(uint64_t, char *, uint64_t))v14)(a1, v8, v2);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_26142EE0C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2614D4C78();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v18 - v11;
  (*(void (**)(uint64_t))(v1 + 88))(v10);
  uint64_t v13 = sub_261405618(0, qword_26A915340);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v12, v5);
  id v14 = a1;
  id v15 = sub_26142AB08((uint64_t)v9, (uint64_t)v14);
  if (v2)
  {
  }
  else
  {
    id v16 = v15;

    uint64_t v13 = (*(uint64_t (**)(id))(v3 + 96))(v16);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  return v13;
}

uint64_t sub_26142EFCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_2614D4C78();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(v3 + 88))(v9);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 120))(v11, a1, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_26142F0DC(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_2614D4C78();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_26142F19C, 0, 0);
}

uint64_t sub_26142F19C()
{
  uint64_t v6 = v0[3];
  (*(void (**)(void))(v6 + 88))();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v6 + 128) + **(int **)(v6 + 128));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2614298B4;
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[2];
  return v5(v2, v3);
}

uint64_t sub_26142F2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_261405618(0, qword_26A915340);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  swift_retain();
  sub_2614D5A58();
  return swift_release();
}

uint64_t sub_26142F360(uint64_t a1, uint64_t a2)
{
  sub_261405618(0, qword_26A915340);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_26142F428;
  return MEMORY[0x270EE7960](a1, a2);
}

uint64_t sub_26142F428(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 24) = a1;
    return MEMORY[0x270FA2498](sub_26142F574, 0, 0);
  }
}

uint64_t sub_26142F574()
{
  uint64_t v1 = *(void *)(v0 + 24);
  type metadata accessor for aa_verifier_20240530();
  *(void *)(swift_allocObject() + 16) = v1;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_26142F5E8(uint64_t a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00DD0]), sel_init);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, id))(*(void *)v1 + 144))(a1, v3);

  return v4;
}

uint64_t sub_26142F674(uint64_t a1, uint64_t a2)
{
  v12[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = *(void **)(v2 + 16);
  v12[0] = 0;
  id v6 = objc_msgSend(v5, sel_predictionFromFeatures_options_error_, a1, a2, v12);
  id v7 = v12[0];
  if (v6)
  {
    id v8 = v6;
    type metadata accessor for aa_verifier_20240530Output();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v8;
    id v9 = v7;
  }
  else
  {
    id v10 = v12[0];
    sub_2614D4BF8();

    swift_willThrow();
  }
  return v3;
}

uint64_t sub_26142F74C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  mach_timebase_info v3[2] = a1;
  return MEMORY[0x270FA2498](sub_26142F770, 0, 0);
}

uint64_t sub_26142F770()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_26142F810;
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  return MEMORY[0x270EE7938](v3, v2);
}

uint64_t sub_26142F810(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    id v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    return MEMORY[0x270FA2498](sub_26142F95C, 0, 0);
  }
}

uint64_t sub_26142F95C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  type metadata accessor for aa_verifier_20240530Output();
  *(void *)(swift_allocObject() + 16) = v1;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_26142F9D0(void *a1, void *a2, void *a3, void *a4)
{
  type metadata accessor for aa_verifier_20240530Input();
  id v9 = (void *)swift_allocObject();
  id v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  void v9[5] = a4;
  id v10 = *(uint64_t (**)(void *))(*(void *)v4 + 136);
  id v11 = a1;
  id v12 = a2;
  id v13 = a3;
  id v14 = a4;
  uint64_t v15 = v10(v9);
  swift_release();
  return v15;
}

uint64_t sub_26142FA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v6 = sub_2613C23AC(&qword_26A915318);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  id v13 = (char *)&v22 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  id v16 = (char *)&v22 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v22 - v17;
  type metadata accessor for aa_verifier_20240530Input();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v19(v18, v22, v6);
  v19(v16, v23, v6);
  v19(v13, v24, v6);
  v19(v10, v25, v6);
  sub_26142E5DC((uint64_t)v18, (uint64_t)v16, (uint64_t)v13, (uint64_t)v10);
  uint64_t v20 = (*(uint64_t (**)(void))(*(void *)v5 + 136))();
  swift_release();
  return v20;
}

void sub_26142FC8C(unint64_t a1, uint64_t a2)
{
  v22[1] = *(id *)MEMORY[0x263EF8340];
  unint64_t v5 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_2613C23AC(&qword_26A9153C0);
    sub_2614D5D78();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_2614D5FD8();
  }
  id v6 = objc_allocWithZone(MEMORY[0x263F00D18]);
  sub_2613C23AC(&qword_26A9153C0);
  uint64_t v7 = (void *)sub_2614D5648();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithFeatureProviderArray_, v7);

  uint64_t v9 = *(void **)(v2 + 16);
  v22[0] = 0;
  id v10 = objc_msgSend(v9, sel_predictionsFromBatch_options_error_, v8, a2, v22);
  id v11 = v22[0];
  if (v10)
  {
    uint64_t v12 = v10;
    v22[0] = (id)MEMORY[0x263F8EE78];
    if (v5)
    {
      swift_bridgeObjectRetain();
      id v16 = v11;
      uint64_t v13 = sub_2614D5D98();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v14 = v11;
    }
    sub_26142A848(v13, 0);
    sub_2614D5678();
    unint64_t v17 = (unint64_t)objc_msgSend(v12, sel_count);
    if ((v17 & 0x8000000000000000) != 0) {
      __break(1u);
    }
    unint64_t v18 = v17;
    if (v17)
    {
      uint64_t v19 = 0;
      do
      {
        id v20 = objc_msgSend(v12, sel_featuresAtIndex_, v19);
        type metadata accessor for aa_verifier_20240530Output();
        *(void *)(swift_allocObject() + 16) = v20;
        swift_unknownObjectRetain();
        uint64_t v21 = swift_retain();
        MEMORY[0x263E36760](v21);
        if (*(void *)(((unint64_t)v22[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v22[0] & 0xFFFFFFFFFFFFFF8)
                                                                                               + 0x18) >> 1)
          sub_2614D5698();
        ++v19;
        sub_2614D56E8();
        sub_2614D5678();
        swift_release();
        swift_unknownObjectRelease();
      }
      while (v18 != v19);
    }
    swift_unknownObjectRelease();
  }
  else
  {
    id v15 = v22[0];
    sub_2614D4BF8();

    swift_willThrow();
  }
}

uint64_t sub_26142FF64()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_26142FF9C(id a1, char a2)
{
  uint64_t v4 = *(void (**)(id, uint64_t))(v2 + 16);
  if (a2)
  {
    id v7 = a1;
    v4(a1, 1);
    sub_26142ADBC(a1);
  }
  else
  {
    type metadata accessor for aa_verifier_20240530();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    id v6 = a1;
    v4((id)v5, 0);
    swift_release();
  }
}

uint64_t type metadata accessor for aa_verifier_20240530()
{
  return self;
}

uint64_t type metadata accessor for aa_verifier_20240530Output()
{
  return self;
}

uint64_t type metadata accessor for aa_verifier_20240530Input()
{
  return self;
}

uint64_t sub_2614300B8()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_2614300EC(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = a1;
  return result;
}

uint64_t sub_26143012C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC12VoiceActions31VASpeechAPISpotterConfiguration_taskHint;
  swift_beginAccess();
  uint64_t v4 = sub_2614D5258();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2614301B0(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC12VoiceActions31VASpeechAPISpotterConfiguration_taskHint;
  swift_beginAccess();
  uint64_t v4 = sub_2614D5258();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t sub_26143023C()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC12VoiceActions31VASpeechAPISpotterConfiguration_batchAudioMode);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_261430284(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC12VoiceActions31VASpeechAPISpotterConfiguration_batchAudioMode);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_2614302D0()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC12VoiceActions31VASpeechAPISpotterConfiguration_hypothesisCallback);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_26143032C(*v1);
  return v2;
}

uint64_t sub_26143032C(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_26143033C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC12VoiceActions31VASpeechAPISpotterConfiguration_hypothesisCallback);
  swift_beginAccess();
  uint64_t v6 = *v5;
  uint64_t *v5 = a1;
  v5[1] = a2;
  return sub_26143039C(v6);
}

uint64_t sub_26143039C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t VASpeechAPISpotterConfiguration.__allocating_init(taskHint:enableSpeechDetector:batchAudioMode:hypothesisCallback:)(uint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  VASpeechAPISpotterConfiguration.init(taskHint:enableSpeechDetector:batchAudioMode:hypothesisCallback:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t VASpeechAPISpotterConfiguration.init(taskHint:enableSpeechDetector:batchAudioMode:hypothesisCallback:)(uint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5)
{
  *(unsigned char *)(v5 + 16) = 0;
  uint64_t v9 = v5 + OBJC_IVAR____TtC12VoiceActions31VASpeechAPISpotterConfiguration_taskHint;
  uint64_t v10 = *MEMORY[0x263F17B58];
  uint64_t v11 = sub_2614D5258();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 104))(v9, v10, v11);
  uint64_t v13 = (unsigned char *)(v5 + OBJC_IVAR____TtC12VoiceActions31VASpeechAPISpotterConfiguration_batchAudioMode);
  *(unsigned char *)(v5 + OBJC_IVAR____TtC12VoiceActions31VASpeechAPISpotterConfiguration_batchAudioMode) = 0;
  id v14 = (uint64_t *)(v5 + OBJC_IVAR____TtC12VoiceActions31VASpeechAPISpotterConfiguration_hypothesisCallback);
  uint64_t *v14 = 0;
  v14[1] = 0;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40))(v9, a1, v11);
  swift_endAccess();
  swift_beginAccess();
  unsigned char *v13 = a3;
  swift_beginAccess();
  *(unsigned char *)(v5 + 16) = a2;
  swift_beginAccess();
  uint64_t v15 = *v14;
  uint64_t *v14 = a4;
  v14[1] = a5;
  sub_26143039C(v15);
  return v5;
}

uint64_t sub_26143059C()
{
  if ((*(uint64_t (**)(void))(*(void *)v0 + 112))()) {
    return 1;
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v0 + 160);
  return v2();
}

uint64_t VASpeechAPISpotterConfiguration.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12VoiceActions31VASpeechAPISpotterConfiguration_taskHint;
  uint64_t v2 = sub_2614D5258();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_26143039C(*(void *)(v0 + OBJC_IVAR____TtC12VoiceActions31VASpeechAPISpotterConfiguration_hypothesisCallback));
  return v0;
}

uint64_t VASpeechAPISpotterConfiguration.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12VoiceActions31VASpeechAPISpotterConfiguration_taskHint;
  uint64_t v2 = sub_2614D5258();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_26143039C(*(void *)(v0 + OBJC_IVAR____TtC12VoiceActions31VASpeechAPISpotterConfiguration_hypothesisCallback));
  return swift_deallocClassInstance();
}

uint64_t sub_261430740()
{
  return type metadata accessor for VASpeechAPISpotterConfiguration();
}

uint64_t type metadata accessor for VASpeechAPISpotterConfiguration()
{
  uint64_t result = qword_26A919AF0;
  if (!qword_26A919AF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_261430794()
{
  uint64_t result = sub_2614D5258();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for VASpeechAPISpotterConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VASpeechAPISpotterConfiguration);
}

uint64_t dispatch thunk of VASpeechAPISpotterConfiguration.__allocating_init(taskHint:enableSpeechDetector:batchAudioMode:hypothesisCallback:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of VASpeechAPISpotterConfiguration.shouldEnableSpeechDetector.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

unint64_t sub_26143088C()
{
  unint64_t result = qword_26A9153F0;
  if (!qword_26A9153F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9153F0);
  }
  return result;
}

void sub_2614308E0(void *a1@<X8>)
{
  *a1 = &unk_270D55BE8;
}

uint64_t sub_2614308F0()
{
  uint64_t v0 = (uint64_t (*)(void *))MEMORY[0x263F3B860];
  return sub_261431A5C(v0);
}

uint64_t sub_261430960()
{
  uint64_t v4 = 0;
  type metadata accessor for e5rt_error_code_t(0);
  uint64_t result = sub_26144ECDC((uint64_t)&v4, (void (*)(char *))sub_261431CDC, v1, (uint64_t)&v3);
  if (!v0) {
    return v3;
  }
  return result;
}

uint64_t sub_261430A0C()
{
  int v4 = 4;
  type metadata accessor for e5rt_tensor_desc_component_dtype_t(0);
  type metadata accessor for e5rt_error_code_t(0);
  uint64_t result = sub_26144ECDC((uint64_t)&v4, (void (*)(char *))sub_261431CDC, v1, (uint64_t)&v3);
  if (!v0) {
    return sub_261432338(v3);
  }
  return result;
}

uint64_t sub_261430AC8(uint64_t a1)
{
  uint64_t v6 = a1;
  v4[2] = sub_261432520;
  v4[3] = &v5;
  type metadata accessor for e5rt_error_code_t(0);
  uint64_t result = sub_26144EE10((void (*)(char *))sub_261431CDC, (uint64_t)sub_2614324D4, (uint64_t)v4, MEMORY[0x263F8DA28], v2, (uint64_t)&v7);
  if (!v1) {
    return v7;
  }
  return result;
}

uint64_t sub_261430B68()
{
  uint64_t v0 = (uint64_t (*)(void *))MEMORY[0x263F3B798];
  return sub_261431A5C(v0);
}

uint64_t sub_261430BD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v11 = a1;
  uint64_t v10 = a2;
  void v8[2] = sub_261432CEC;
  v8[3] = &v9;
  uint64_t v5 = sub_2613C23AC(&qword_26A9153F8);
  type metadata accessor for e5rt_error_code_t(0);
  uint64_t result = sub_26144EE10((void (*)(char *))sub_261431CDC, (uint64_t)sub_2614324D4, (uint64_t)v8, v5, v6, (uint64_t)&v12);
  if (!v3) {
    *a3 = v12;
  }
  return result;
}

uint64_t sub_261430C90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v11 = a1;
  uint64_t v10 = a2;
  void v8[2] = sub_261432CBC;
  v8[3] = &v9;
  uint64_t v5 = sub_2613C23AC(&qword_26A9153F8);
  type metadata accessor for e5rt_error_code_t(0);
  uint64_t result = sub_26144EE10((void (*)(char *))sub_261431CDC, (uint64_t)sub_2614324D4, (uint64_t)v8, v5, v6, (uint64_t)&v12);
  if (!v3) {
    *a3 = v12;
  }
  return result;
}

uint64_t sub_261430D48()
{
  uint64_t v0 = (uint64_t (*)(void *))MEMORY[0x263F3B868];
  return sub_261431A5C(v0);
}

uint64_t sub_261430DB8()
{
  uint64_t v4 = 0;
  type metadata accessor for e5rt_error_code_t(0);
  uint64_t result = sub_26144ECDC((uint64_t)&v4, (void (*)(char *))sub_261431CDC, v1, (uint64_t)&v3);
  if (!v0) {
    return v3;
  }
  return result;
}

void *sub_261430E64()
{
  return sub_261430EBC((void (*)(char *))sub_261432DE4);
}

void *sub_261430E90()
{
  return sub_261430EBC((void (*)(char *))sub_261432DFC);
}

void *sub_261430EBC(void (*a1)(char *))
{
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = 0;
  uint64_t v4 = sub_2613C23AC(&qword_26A9153F8);
  uint64_t result = (void *)sub_26144EA08((uint64_t)&v10, (uint64_t)&v9, (uint64_t)&v8, a1, v6, MEMORY[0x263F8D6C8], v4);
  if (!v2) {
    return sub_2614320B0(v9, v10);
  }
  return result;
}

uint64_t sub_261430F40()
{
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v5[2] = sub_261432D64;
  v5[3] = &v6;
  type metadata accessor for e5rt_error_code_t(0);
  uint64_t result = sub_26144EE10((void (*)(char *))sub_261431CDC, (uint64_t)sub_2614324D4, (uint64_t)v5, MEMORY[0x263F8DD08], v2, (uint64_t)&v8);
  if (!v1)
  {
    uint64_t v4 = v8;
    type metadata accessor for E5RTTensorDescriptorDataType();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_261431000()
{
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v5[2] = sub_261432D7C;
  v5[3] = &v6;
  type metadata accessor for e5rt_error_code_t(0);
  uint64_t result = sub_26144EE10((void (*)(char *))sub_261431CDC, (uint64_t)sub_2614324D4, (uint64_t)v5, MEMORY[0x263F8DD08], v2, (uint64_t)&v8);
  if (!v1)
  {
    uint64_t v4 = v8;
    type metadata accessor for E5RTBufferObject();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_2614310C0()
{
  uint64_t v0 = (uint64_t (*)(void *))MEMORY[0x263F3B808];
  return sub_261431A5C(v0);
}

uint64_t sub_261431130()
{
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v5[2] = sub_261432D94;
  v5[3] = &v6;
  type metadata accessor for e5rt_error_code_t(0);
  uint64_t result = sub_26144EE10((void (*)(char *))sub_261431CDC, (uint64_t)sub_2614324D4, (uint64_t)v5, MEMORY[0x263F8DD08], v2, (uint64_t)&v8);
  if (!v1)
  {
    uint64_t v4 = v8;
    type metadata accessor for E5RTTensorDescriptor();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_2614311F0(uint64_t a1)
{
  return sub_261431C68(a1, MEMORY[0x263F3B800]);
}

uint64_t sub_26143121C()
{
  sub_2614D5438();
  sub_2614D5438();
  sub_2614D5438();
  uint64_t precompiled_compute_operation = e5rt_execution_stream_operation_create_precompiled_compute_operation();
  swift_release();
  swift_release();
  swift_release();
  return precompiled_compute_operation;
}

uint64_t sub_2614312E8(int64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, char *))
{
  if (a1 < 0)
  {
    __break(1u);
LABEL_23:
    uint64_t v3 = sub_261431FA0((uint64_t)v3);
    goto LABEL_10;
  }
  uint64_t v4 = a3;
  uint64_t v5 = a2;
  int64_t v7 = a1;
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (a1)
  {
    uint64_t v23 = MEMORY[0x263F8EE78];
    sub_261431D8C(0, a1, 0);
    uint64_t v3 = (char *)v23;
    unint64_t v8 = *(void *)(v23 + 16);
    do
    {
      unint64_t v9 = *(void *)(v23 + 24);
      if (v8 >= v9 >> 1) {
        sub_261431D8C((char *)(v9 > 1), v8 + 1, 1);
      }
      *(void *)(v23 + 16) = v8 + 1;
      *(void *)(v23 + 8 * v8++ + 32) = 0;
      --v7;
    }
    while (v7);
  }
  else
  {
    uint64_t v3 = (char *)MEMORY[0x263F8EE78];
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_23;
  }
LABEL_10:
  uint64_t v10 = v4(v5, *((void *)v3 + 2), v3 + 32);
  if (v10)
  {
    uint64_t v11 = v10;
    sub_26143088C();
    swift_allocError();
    *(_DWORD *)uint64_t v12 = v11;
    *(unsigned char *)(v12 + 4) = 0;
    swift_willThrow();
    swift_bridgeObjectRelease();
  }
  else
  {
    int64_t v14 = *((void *)v3 + 2);
    if (v14)
    {
      uint64_t v24 = v6;
      sub_2613D913C(0, v14, 0);
      uint64_t v15 = 0;
      uint64_t v11 = v24;
      while (*(void *)&v3[8 * v15 + 32])
      {
        uint64_t v16 = sub_2614D54E8();
        uint64_t v18 = v17;
        uint64_t v24 = v11;
        unint64_t v20 = *(void *)(v11 + 16);
        unint64_t v19 = *(void *)(v11 + 24);
        if (v20 >= v19 >> 1) {
          sub_2613D913C(v19 > 1, v20 + 1, 1);
        }
        ++v15;
        *(void *)(v11 + 16) = v20 + 1;
        unint64_t v21 = v11 + 16 * v20;
        *(void *)(v21 + 32) = v16;
        *(void *)(v21 + 40) = v18;
        if (v14 == v15)
        {
          swift_bridgeObjectRelease();
          return v11;
        }
      }
      sub_26143088C();
      swift_allocError();
      *(_DWORD *)uint64_t v22 = 3;
      *(unsigned char *)(v22 + 4) = 1;
      swift_willThrow();
      uint64_t v11 = v24;
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x263F8EE78];
    }
  }
  return v11;
}

uint64_t sub_261431534()
{
  uint64_t v0 = (uint64_t (*)(void *))MEMORY[0x263F3B7E0];
  return sub_261431A5C(v0);
}

uint64_t sub_2614315A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  uint64_t v17 = a4;
  uint64_t v18 = a5;
  uint64_t v19 = a6;
  uint64_t v20 = a7;
  char v21 = a8;
  id v12[2] = sub_26143271C;
  uint64_t v12[3] = &v13;
  type metadata accessor for e5rt_error_code_t(0);
  uint64_t result = sub_26144EE10((void (*)(char *))sub_261431CDC, (uint64_t)sub_2614324D4, (uint64_t)v12, MEMORY[0x263F8DD08], v9, (uint64_t)&v22);
  if (!v8)
  {
    uint64_t v11 = v22;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v11;
  }
  return result;
}

uint64_t sub_261431670()
{
  sub_2613DC2B8();
  swift_allocError();
  *uint64_t v0 = 0xD000000000000028;
  v0[1] = 0x80000002614E38D0;
  return swift_willThrow();
}

uint64_t sub_2614316D4()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v6 = 0;
  type metadata accessor for e5rt_error_code_t(0);
  uint64_t result = sub_26144ECDC((uint64_t)&v6, (void (*)(char *))sub_261431CDC, v3, (uint64_t)&v5);
  if (!v1) {
    return sub_2614312E8(v5, v2, MEMORY[0x263F3B7D8]);
  }
  return result;
}

uint64_t sub_26143179C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v6 = 0;
  type metadata accessor for e5rt_error_code_t(0);
  uint64_t result = sub_26144ECDC((uint64_t)&v6, (void (*)(char *))sub_261431CDC, v3, (uint64_t)&v5);
  if (!v1) {
    return sub_2614312E8(v5, v2, MEMORY[0x263F3B7C0]);
  }
  return result;
}

uint64_t sub_261431864(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = *(void *)(v2 + 16);
  uint64_t v10 = a1;
  uint64_t v11 = a2;
  v7[2] = sub_26143277C;
  void v7[3] = &v8;
  type metadata accessor for e5rt_error_code_t(0);
  uint64_t result = sub_26144EE10((void (*)(char *))sub_261431CDC, (uint64_t)sub_2614324D4, (uint64_t)v7, MEMORY[0x263F8DD08], v4, (uint64_t)&v12);
  if (!v3)
  {
    uint64_t v6 = v12;
    type metadata accessor for E5RTIOPort();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v6;
  }
  return result;
}

uint64_t sub_261431928(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = *(void *)(v2 + 16);
  uint64_t v10 = a1;
  uint64_t v11 = a2;
  v7[2] = sub_2614327CC;
  void v7[3] = &v8;
  type metadata accessor for e5rt_error_code_t(0);
  uint64_t result = sub_26144EE10((void (*)(char *))sub_261431CDC, (uint64_t)sub_2614324D4, (uint64_t)v7, MEMORY[0x263F8DD08], v4, (uint64_t)&v12);
  if (!v3)
  {
    uint64_t v6 = v12;
    type metadata accessor for E5RTIOPort();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v6;
  }
  return result;
}

uint64_t sub_2614319EC()
{
  uint64_t v0 = (uint64_t (*)(void *))MEMORY[0x263F3B7F8];
  return sub_261431A5C(v0);
}

uint64_t sub_261431A5C(uint64_t (*a1)(void *))
{
  v6[1] = *MEMORY[0x263EF8340];
  v6[0] = *(void *)(v1 + 16);
  int v2 = a1(v6);
  if (!v2) {
    return swift_deallocClassInstance();
  }
  int v4 = v2;
  sub_26143088C();
  swift_allocError();
  *(_DWORD *)uint64_t v5 = v4;
  *(unsigned char *)(v5 + 4) = 0;
  swift_willThrow();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_261431B38()
{
  type metadata accessor for e5rt_error_code_t(0);
  uint64_t result = sub_26144EE10((void (*)(char *))sub_261431CDC, (uint64_t)sub_261432154, 0, MEMORY[0x263F8DD08], v1, (uint64_t)&v4);
  if (!v0)
  {
    uint64_t v3 = v4;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v3;
  }
  return result;
}

uint64_t sub_261431BD8()
{
  uint64_t result = e5rt_execution_stream_execute_sync();
  if (result)
  {
    int v1 = result;
    sub_26143088C();
    swift_allocError();
    *(_DWORD *)uint64_t v2 = v1;
    *(unsigned char *)(v2 + 4) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_261431C3C(uint64_t a1)
{
  return sub_261431C68(a1, MEMORY[0x263F3B7B8]);
}

uint64_t sub_261431C68(uint64_t a1, uint64_t (*a2)(void, void))
{
  uint64_t result = a2(*(void *)(v2 + 16), *(void *)(a1 + 16));
  if (result)
  {
    int v4 = result;
    sub_26143088C();
    swift_allocError();
    *(_DWORD *)uint64_t v5 = v4;
    *(unsigned char *)(v5 + 4) = 0;
    return swift_willThrow();
  }
  return result;
}

int *sub_261431CDC(int *a1)
{
  return sub_261431CF4(a1);
}

int *sub_261431CF4(int *result)
{
  int v1 = *result;
  if (*result)
  {
    sub_26143088C();
    swift_allocError();
    *(_DWORD *)uint64_t v2 = v1;
    *(unsigned char *)(v2 + 4) = 0;
    return (int *)swift_willThrow();
  }
  return result;
}

_DWORD *sub_261431D50@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_261431D60(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

char *sub_261431D6C(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_261431DAC(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_261431D8C(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_261431EA4(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_261431DAC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2613C23AC(&qword_26A915430);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  char v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  size_t v15 = 8 * v8;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, v15);
  }
  swift_release();
  return v10;
}

char *sub_261431EA4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2613C23AC(&qword_26A915428);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  char v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_release();
  return v10;
}

char *sub_261431FA0(uint64_t a1)
{
  return sub_261431FB4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_261431FB4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2613C23AC(&qword_26A915428);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  char v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_2614320B0(const void *a1, uint64_t a2)
{
  if (!a2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  if (a2 <= 0)
  {
    size_t v4 = 8 * a2;
    char v5 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    sub_2613C23AC(&qword_26A914B10);
    size_t v4 = 8 * a2;
    char v5 = (void *)swift_allocObject();
    int64_t v6 = j__malloc_size(v5);
    uint64_t v7 = v6 - 32;
    if (v6 < 32) {
      uint64_t v7 = v6 - 25;
    }
    uint64_t v5[2] = a2;
    v5[3] = 2 * (v7 >> 3);
  }
  memcpy(v5 + 4, a1, v4);
  return v5;
}

uint64_t sub_261432154@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = e5rt_execution_stream_create();
  *a1 = result;
  return result;
}

uint64_t sub_261432184()
{
  uint64_t v16 = MEMORY[0x263F8EE78];
  sub_261431D6C(0, 5, 0);
  uint64_t v0 = v16;
  unint64_t v2 = *(void *)(v16 + 16);
  unint64_t v1 = *(void *)(v16 + 24);
  int64_t v3 = v1 >> 1;
  unint64_t v4 = v2 + 1;
  if (v1 >> 1 <= v2)
  {
    sub_261431D6C((char *)(v1 > 1), v2 + 1, 1);
    uint64_t v0 = v16;
    unint64_t v1 = *(void *)(v16 + 24);
    int64_t v3 = v1 >> 1;
  }
  *(void *)(v0 + 16) = v4;
  uint64_t v5 = v0 + 8 * v2;
  *(_DWORD *)(v5 + 32) = 0;
  *(unsigned char *)(v5 + 36) = 0;
  unint64_t v6 = v2 + 2;
  if (v3 < (uint64_t)(v2 + 2))
  {
    sub_261431D6C((char *)(v1 > 1), v2 + 2, 1);
    uint64_t v0 = v16;
    unint64_t v1 = *(void *)(v16 + 24);
    int64_t v3 = v1 >> 1;
  }
  *(void *)(v0 + 16) = v6;
  uint64_t v7 = v0 + 8 * v4;
  *(_DWORD *)(v7 + 32) = 1;
  *(unsigned char *)(v7 + 36) = 1;
  unint64_t v8 = v2 + 3;
  if (v3 < (uint64_t)(v2 + 3)) {
    sub_261431D6C((char *)(v1 > 1), v2 + 3, 1);
  }
  uint64_t result = v16;
  *(void *)(v16 + 16) = v8;
  uint64_t v10 = v16 + 8 * v6;
  *(_DWORD *)(v10 + 32) = 2;
  *(unsigned char *)(v10 + 36) = 2;
  unint64_t v11 = *(void *)(v16 + 24);
  unint64_t v12 = v2 + 4;
  if ((uint64_t)(v2 + 4) > (uint64_t)(v11 >> 1))
  {
    sub_261431D6C((char *)(v11 > 1), v2 + 4, 1);
    uint64_t result = v16;
  }
  *(void *)(result + 16) = v12;
  uint64_t v13 = result + 8 * v8;
  *(_DWORD *)(v13 + 32) = 3;
  *(unsigned char *)(v13 + 36) = 3;
  unint64_t v14 = *(void *)(result + 24);
  if ((uint64_t)(v2 + 5) > (uint64_t)(v14 >> 1))
  {
    sub_261431D6C((char *)(v14 > 1), v2 + 5, 1);
    uint64_t result = v16;
  }
  *(void *)(result + 16) = v2 + 5;
  uint64_t v15 = result + 8 * v12;
  *(_DWORD *)(v15 + 32) = 4;
  *(unsigned char *)(v15 + 36) = 4;
  return result;
}

uint64_t sub_261432338(uint64_t a1)
{
  uint64_t result = sub_261432184();
  uint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    goto LABEL_9;
  }
  if (*(_DWORD *)(result + 32) == a1)
  {
    a1 = *(unsigned __int8 *)(result + 36);
LABEL_11:
    swift_bridgeObjectRelease();
    return a1;
  }
  if (v3 == 1)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    sub_26143088C();
    swift_allocError();
    *(_DWORD *)uint64_t v7 = 5;
    *(unsigned char *)(v7 + 4) = 1;
    swift_willThrow();
    return a1;
  }
  unint64_t v4 = (unsigned __int8 *)(result + 44);
  uint64_t v5 = 1;
  while (1)
  {
    uint64_t v6 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (*((_DWORD *)v4 - 1) == a1)
    {
      a1 = *v4;
      goto LABEL_11;
    }
    v4 += 8;
    ++v5;
    if (v6 == v3) {
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_261432404()
{
  return e5rt_tensor_desc_dtype_get_component_size();
}

void type metadata accessor for e5rt_error_code_t(uint64_t a1)
{
}

uint64_t sub_261432448()
{
  return e5rt_tensor_desc_dtype_get_component_dtype();
}

void type metadata accessor for e5rt_tensor_desc_component_dtype_t(uint64_t a1)
{
}

void sub_26143248C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_2614324D4@<X0>(_DWORD *a1@<X8>)
{
  return sub_2614324EC(a1);
}

uint64_t sub_2614324EC@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_261432520()
{
  return e5rt_buffer_object_get_data_ptr();
}

uint64_t sub_261432550()
{
  return e5rt_tensor_desc_get_size();
}

uint64_t sub_261432580@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_261430BD8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_26143259C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_261430C90(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2614325B8()
{
  return e5rt_tensor_desc_retain_dtype();
}

uint64_t sub_2614325E8()
{
  return e5rt_tensor_desc_alloc_buffer_object();
}

uint64_t type metadata accessor for E5RTTensorDescriptorDataType()
{
  return self;
}

uint64_t type metadata accessor for E5RTBufferObject()
{
  return self;
}

uint64_t sub_261432668()
{
  return e5rt_io_port_retain_tensor_desc();
}

uint64_t type metadata accessor for E5RTTensorDescriptor()
{
  return self;
}

uint64_t sub_2614326BC()
{
  return e5rt_execution_stream_operation_get_num_outputs();
}

uint64_t sub_2614326EC()
{
  return e5rt_execution_stream_operation_get_num_inputs();
}

uint64_t sub_26143271C()
{
  return sub_261432734();
}

uint64_t sub_261432734()
{
  return sub_26143121C();
}

uint64_t sub_26143277C(uint64_t a1)
{
  return sub_2614327F8(a1, MEMORY[0x263F3B7F0]);
}

uint64_t type metadata accessor for E5RTIOPort()
{
  return self;
}

uint64_t sub_2614327CC(uint64_t a1)
{
  return sub_2614327F8(a1, MEMORY[0x263F3B7E8]);
}

uint64_t sub_2614327F8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = sub_2614D5438();
  uint64_t v7 = a2(v5, v6 + 32, a1);
  swift_release();
  return v7;
}

unint64_t sub_26143286C()
{
  unint64_t result = qword_26A915400;
  if (!qword_26A915400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A915400);
  }
  return result;
}

unint64_t sub_2614328C4()
{
  unint64_t result = qword_26A915408;
  if (!qword_26A915408)
  {
    sub_2613C5EC8(&qword_26A915410);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A915408);
  }
  return result;
}

ValueMetadata *type metadata accessor for E5RTErrorCode()
{
  return &type metadata for E5RTErrorCode;
}

uint64_t getEnumTagSinglePayload for E5RTTensorDescriptorComponentDatatype(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for E5RTTensorDescriptorComponentDatatype(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261432A8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for E5RTTensorDescriptorComponentDatatype()
{
  return &type metadata for E5RTTensorDescriptorComponentDatatype;
}

void *initializeBufferWithCopyOfBuffer for UnsafeE5RTBufferObject(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for UnsafeE5RTTensorDescriptorDataType()
{
  return &type metadata for UnsafeE5RTTensorDescriptorDataType;
}

ValueMetadata *type metadata accessor for UnsafeE5RTBufferObject()
{
  return &type metadata for UnsafeE5RTBufferObject;
}

ValueMetadata *type metadata accessor for UnsafeE5RTTensorDescriptor()
{
  return &type metadata for UnsafeE5RTTensorDescriptor;
}

ValueMetadata *type metadata accessor for UnsafeE5RTIOPort()
{
  return &type metadata for UnsafeE5RTIOPort;
}

ValueMetadata *type metadata accessor for UnsafeE5RTExecutionStreamOperation()
{
  return &type metadata for UnsafeE5RTExecutionStreamOperation;
}

uint64_t type metadata accessor for E5RTExecutionStreamOperation()
{
  return self;
}

uint64_t _s12VoiceActions22UnsafeE5RTBufferObjectVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 2);
  }
  if (*(void *)a1) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t _s12VoiceActions22UnsafeE5RTBufferObjectVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)unint64_t result = a2 - 2;
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UnsafeE5RTExecutionStream()
{
  return &type metadata for UnsafeE5RTExecutionStream;
}

uint64_t type metadata accessor for E5RTExecutionStream()
{
  return self;
}

ValueMetadata *type metadata accessor for E5RTUtils()
{
  return &type metadata for E5RTUtils;
}

uint64_t initializeBufferWithCopyOfBuffer for E5RTUtils.DomainError(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for E5RTUtils.DomainError(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for E5RTUtils.DomainError(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 5) = v3;
  return result;
}

uint64_t sub_261432C70(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_261432C8C(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)unint64_t result = a2 - 1;
    *(unsigned char *)(result + 4) = 1;
  }
  else
  {
    *(unsigned char *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for E5RTUtils.DomainError()
{
  return &type metadata for E5RTUtils.DomainError;
}

uint64_t sub_261432CBC()
{
  return e5rt_tensor_desc_get_strides();
}

uint64_t sub_261432CEC()
{
  return e5rt_tensor_desc_get_shape();
}

uint64_t sub_261432D1C()
{
  return sub_261432404();
}

uint64_t sub_261432D34()
{
  return sub_261432448();
}

uint64_t sub_261432D4C()
{
  return sub_261432550();
}

uint64_t sub_261432D64()
{
  return sub_2614325B8();
}

uint64_t sub_261432D7C()
{
  return sub_2614325E8();
}

uint64_t sub_261432D94()
{
  return sub_261432668();
}

uint64_t sub_261432DAC()
{
  return sub_2614326BC();
}

uint64_t sub_261432DC4()
{
  return sub_2614326EC();
}

uint64_t sub_261432DE4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_261432580(a1, a2);
}

uint64_t sub_261432DFC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_26143259C(a1, a2);
}

uint64_t VAAVSBuildEnrollmentFactory(delegate:computeUnits:maxSamplesPerEnrollment:)(uint64_t a1, char *a2, Swift::Int a3, char a4)
{
  char v8 = *a2;
  type metadata accessor for VAAVSAudioEncoderModel();
  LOBYTE(v27.rejectEnrollmentThreshold) = v8;
  uint64_t result = VAAVSAudioEncoderModel.__allocating_init(computeUnits:)((char *)&v27);
  if (!v4)
  {
    uint64_t v10 = result;
    AVSConfig.init()(&v27);
    if ((a4 & 1) == 0) {
      AVSConfig.setEnrollmentParams(maxSamplesPerEnrollment:)(a3);
    }
    type metadata accessor for VAAVSVerifierModel();
    long long v23 = *(_OWORD *)&v27.streamingMinDuration;
    long long v24 = *(_OWORD *)&v27.enrollMinimumSilenceFrames;
    long long v25 = *(_OWORD *)&v27.enrollSpeechThreshold;
    long long v19 = *(_OWORD *)&v27.rejectEnrollmentThreshold;
    long long v20 = *(_OWORD *)&v27.minDuration;
    long long v21 = *(_OWORD *)&v27.resampleDuration;
    long long v22 = *(_OWORD *)&v27.streamingMinimumSpeechFrames;
    VoiceActions::AVSConfig v18 = v27;
    Swift::Int maxSamplesPerEnrollment = v27.maxSamplesPerEnrollment;
    Swift::Int recency = v27.recency;
    VAAVSVerifierModel.__allocating_init(configuration:)((uint64_t)&v18);
    *(_OWORD *)&v18.streamingMinDuration = v23;
    *(_OWORD *)&v18.enrollMinimumSilenceFrames = v24;
    *(_OWORD *)&v18.enrollSpeechThreshold = v25;
    *(_OWORD *)&v18.rejectEnrollmentThreshold = v19;
    *(_OWORD *)&v18.Swift::Int minDuration = v20;
    *(_OWORD *)&v18.resampleDuration = v21;
    *(_OWORD *)&v18.streamingMinimumSpeechFrames = v22;
    v18.Swift::Int recency = recency;
    v18.Swift::Int maxSamplesPerEnrollment = maxSamplesPerEnrollment;
    AVSConfig.getAVSEndpointerConfig()(&v17);
    Swift::Int minimumSilenceFrames = v17.minimumSilenceFrames;
    Swift::Int minimumSpeechFrames = v17.minimumSpeechFrames;
    Swift::Float speechThreshold = v17.speechThreshold;
    Swift::Int minDuration = v17.minDuration;
    Swift::Int v15 = v17.recency;
    type metadata accessor for VAAVSAudioEnrollerFactory();
    *(void *)&v18.rejectEnrollmentThreshold = minimumSilenceFrames;
    v18.minEnrollmentsBeforeRejecting = minimumSpeechFrames;
    *(Swift::Float *)&v18.Swift::Int minDuration = speechThreshold;
    v18.maxDuration = minDuration;
    v18.resampleDuration = v15;
    sub_261432FC0(a1, (uint64_t)&v17);
    return VAAVSAudioEnrollerFactory.__allocating_init(encoder:endpointerConfig:delegate:maxSamplesPerEnrollment:)(v10, (uint64_t)&v18, (uint64_t)&v17, maxSamplesPerEnrollment, 0);
  }
  return result;
}

uint64_t sub_261432FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2613C23AC(qword_26A915438);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t VAAVSBuildKeywordSpotter(delegate:computeUnits:)(uint64_t a1, char *a2)
{
  char v4 = *a2;
  uint64_t v5 = type metadata accessor for VAAVSAudioEncoderModel();
  char v16 = v4;
  uint64_t v6 = VAAVSAudioEncoderModel.__allocating_init(computeUnits:)(&v16);
  if (!v2)
  {
    uint64_t v7 = v6;
    AVSConfig.init()(&v15);
    uint64_t v8 = type metadata accessor for VAAVSVerifierModel();
    uint64_t v9 = VAAVSVerifierModel.__allocating_init(configuration:)((uint64_t)&v15);
    Swift::Int v10 = type metadata accessor for VAStrategyProviderAVS();
    uint64_t v11 = VAStrategyProviderAVS.__allocating_init()();
    type metadata accessor for VAFlexibleKeywordSpotter();
    type metadata accessor for VAConfiguration();
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    id v12 = static VAConfiguration.buildForFlexibleAVS()();
    v15.maxDuration = v10;
    v15.resampleDuration = (Swift::Int)&protocol witness table for VAStrategyProviderAVS;
    *(void *)&v15.rejectEnrollmentThreshold = v11;
    void v14[3] = v8;
    void v14[4] = &protocol witness table for VAAVSVerifierModel;
    v14[0] = v9;
    swift_retain();
    swift_retain();
    uint64_t v5 = (uint64_t)VAFlexibleKeywordSpotter.__allocating_init(delegate:verifier:encoder:configuration:strategyProvider:runtimeParametersFactory:)(a1, v9, v7, v12, (uint64_t)&v15, (uint64_t)v14);
    swift_release();
    swift_release();
  }
  return v5;
}

uint64_t VAA2ABuildEnrollmentFactory(delegate:computeUnits:maxSamplesPerEnrollment:)(uint64_t a1, unsigned __int8 *a2)
{
  unsigned __int8 v4 = *a2;
  type metadata accessor for VAA2AAudioEncoderModel();
  v7[0] = v4;
  uint64_t result = VAA2AAudioEncoderModel.__allocating_init(computeUnits:)((char *)v7);
  if (!v2)
  {
    uint64_t v6 = result;
    type metadata accessor for VAA2AVerifierModel();
    v7[0] = v4;
    VAA2AVerifierModel.__allocating_init(computeUnits:)(v7);
    type metadata accessor for VAA2AAudioEnrollerFactory();
    sub_261432FC0(a1, (uint64_t)v7);
    return VAA2AAudioEnrollerFactory.__allocating_init(encoder:delegate:)(v6, (uint64_t)v7);
  }
  return result;
}

uint64_t VAA2ABuildKeywordSpotter(delegate:computeUnits:)(uint64_t a1, char *a2)
{
  char v4 = *a2;
  type metadata accessor for VAConfiguration();
  id v5 = static VAConfiguration.buildForFlexibleA2A()();
  uint64_t v6 = type metadata accessor for VAA2AAudioEncoderModel();
  LOBYTE(v17[0]) = v4;
  uint64_t v7 = VAA2AAudioEncoderModel.__allocating_init(computeUnits:)((char *)v17);
  if (v2)
  {
  }
  else
  {
    uint64_t v8 = v7;
    type metadata accessor for VAA2AVerifierModel();
    LOBYTE(v17[0]) = v4;
    uint64_t v9 = VAA2AVerifierModel.__allocating_init(computeUnits:)((unsigned __int8 *)v17);
    type metadata accessor for VAStrideConfiguration();
    id v10 = static VAStrideConfiguration.forFlexibleA2A()();
    uint64_t v11 = type metadata accessor for VAStrategyProviderDefault();
    id v12 = v10;
    uint64_t v13 = VAStrategyProviderDefault.__allocating_init(strideConfig:)((uint64_t)v12);
    type metadata accessor for VAFlexibleKeywordSpotter();
    v17[3] = v11;
    _OWORD v17[4] = &protocol witness table for VAStrategyProviderDefault;
    uint64_t v16 = 0;
    v17[0] = v13;
    memset(v15, 0, sizeof(v15));
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v6 = (uint64_t)VAFlexibleKeywordSpotter.__allocating_init(delegate:verifier:encoder:configuration:strategyProvider:runtimeParametersFactory:)(a1, v9, v8, v5, (uint64_t)v17, (uint64_t)v15);
    swift_release();
    swift_release();
  }
  return v6;
}

uint64_t VAA2ABuildEnrollmentFactoryV2(delegate:computeUnits:)(uint64_t a1, char *a2)
{
  char v4 = *a2;
  type metadata accessor for VAConfiguration();
  id v5 = static VAConfiguration.buildForFlexibleA2Av2()();
  uint64_t v6 = type metadata accessor for VASilenceModel();
  uint64_t v7 = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v5) + 0xE0))();
  unint64_t v9 = v8;
  sub_2613B9FE8(v22);
  unsigned __int8 v23 = v22[0];
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = sub_26144A108(v10, v9, &v23);
  if (v2)
  {
  }
  else
  {
    uint64_t v13 = v12;
    type metadata accessor for VAFeatureExtract();
    id v14 = VAFeatureExtract.__allocating_init()();
    uint64_t v15 = type metadata accessor for VAA2AAudioEncoderModelV2();
    LOBYTE(v22[0]) = v4;
    uint64_t v16 = VAA2AAudioEncoderModelV2.__allocating_init(computeUnits:)((char *)v22);
    type metadata accessor for VAFeatureExtractingEncoder();
    v22[3] = v15;
    v22[4] = &protocol witness table for VAA2AAudioEncoderModelV2;
    v22[0] = v16;
    swift_retain();
    id v17 = v14;
    swift_retain();
    VoiceActions::AVSConfig v18 = v5;
    char v19 = sub_2613D04A8();
    VAFeatureExtractingEncoder.__allocating_init(subEncoder:featureExtractor:vadModel:config:useCMVN:)((uint64_t)v22, v17, v13, v18, v19 & 1);
    type metadata accessor for VAA2AVerifierModelV2();
    LOBYTE(v22[0]) = v4;
    VAA2AVerifierModelV2.__allocating_init(computeUnits:)((unsigned __int8 *)v22);
    type metadata accessor for VAA2AAudioEnrollerFactoryV2();
    sub_261432FC0(a1, (uint64_t)v22);
    uint64_t v21 = swift_retain();
    uint64_t v11 = VAA2AAudioEnrollerFactoryV2.__allocating_init(encoder:delegate:)(v21, (uint64_t)v22);
    swift_release();

    swift_release();
    swift_release();
  }
  return v11;
}

uint64_t VAA2ABuildKeywordSpotterV2(delegate:computeUnits:)(uint64_t a1, char *a2)
{
  char v4 = *a2;
  type metadata accessor for VAConfiguration();
  id v5 = static VAConfiguration.buildForFlexibleA2Av2()();
  uint64_t v6 = type metadata accessor for VASilenceModel();
  uint64_t v7 = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v5) + 0xE0))();
  unint64_t v9 = v8;
  sub_2613B9FE8(v29);
  LOBYTE(v27[0]) = v29[0];
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = sub_26144A108(v10, v9, (unsigned __int8 *)v27);
  if (v2)
  {
  }
  else
  {
    uint64_t v13 = v12;
    type metadata accessor for VAFeatureExtract();
    id v14 = VAFeatureExtract.__allocating_init()();
    uint64_t v15 = type metadata accessor for VAA2AAudioEncoderModelV2();
    v29[0] = v4;
    uint64_t v16 = VAA2AAudioEncoderModelV2.__allocating_init(computeUnits:)(v29);
    type metadata accessor for VAFeatureExtractingEncoder();
    uint64_t v30 = v15;
    uint64_t v31 = &protocol witness table for VAA2AAudioEncoderModelV2;
    *(void *)uint64_t v29 = v16;
    swift_retain();
    id v17 = v14;
    swift_retain();
    VoiceActions::AVSConfig v18 = v5;
    char v19 = sub_2613D04A8();
    uint64_t v20 = VAFeatureExtractingEncoder.__allocating_init(subEncoder:featureExtractor:vadModel:config:useCMVN:)((uint64_t)v29, v17, v13, v18, v19 & 1);
    id v32 = v17;
    type metadata accessor for VAA2AVerifierModelV2();
    v29[0] = v4;
    uint64_t v22 = VAA2AVerifierModelV2.__allocating_init(computeUnits:)((unsigned __int8 *)v29);
    type metadata accessor for VAStrideConfiguration();
    unsigned __int8 v23 = (void *)static VAStrideConfiguration.forFlexibleA2Av2()();
    uint64_t v24 = type metadata accessor for VAStrategyProviderDefault();
    id v26 = v23;
    uint64_t v25 = VAStrategyProviderDefault.__allocating_init(strideConfig:)((uint64_t)v26);
    type metadata accessor for VAFlexibleKeywordSpotter();
    uint64_t v30 = v24;
    uint64_t v31 = &protocol witness table for VAStrategyProviderDefault;
    uint64_t v28 = 0;
    *(void *)uint64_t v29 = v25;
    memset(v27, 0, sizeof(v27));
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v11 = (uint64_t)VAFlexibleKeywordSpotter.__allocating_init(delegate:verifier:encoder:configuration:strategyProvider:runtimeParametersFactory:)(a1, v22, v20, v18, (uint64_t)v29, (uint64_t)v27);
    swift_release();
    swift_release();

    swift_release();
    swift_release();
  }
  return v11;
}

uint64_t VAA2ABuildEnrollmentFactoryV3(delegate:computeUnits:)(uint64_t a1, char *a2)
{
  char v4 = *a2;
  type metadata accessor for VAConfiguration();
  id v5 = static VAConfiguration.buildForFlexibleA2Av3()();
  uint64_t v6 = type metadata accessor for VASilenceModel();
  uint64_t v7 = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v5) + 0xE0))();
  unint64_t v9 = v8;
  sub_2613B9FE8(v22);
  unsigned __int8 v23 = v22[0];
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = sub_26144A108(v10, v9, &v23);
  if (v2)
  {
  }
  else
  {
    uint64_t v13 = v12;
    type metadata accessor for VAFeatureExtract();
    id v14 = VAFeatureExtract.__allocating_init()();
    uint64_t v15 = type metadata accessor for VAA2AAudioEncoderModelV3();
    LOBYTE(v22[0]) = v4;
    uint64_t v16 = VAA2AAudioEncoderModelV3.__allocating_init(computeUnits:reuseBuffers:)((uint64_t)v22, 0);
    type metadata accessor for VAFeatureExtractingEncoder();
    v22[3] = v15;
    v22[4] = &protocol witness table for VAA2AAudioEncoderModelV3;
    v22[0] = v16;
    swift_retain();
    id v17 = v14;
    swift_retain();
    VoiceActions::AVSConfig v18 = v5;
    char v19 = sub_2613D04A8();
    uint64_t v21 = VAFeatureExtractingEncoder.__allocating_init(subEncoder:featureExtractor:vadModel:config:useCMVN:)((uint64_t)v22, v17, v13, v18, v19 & 1);
    type metadata accessor for VAA2AVerifierModelV3();
    LOBYTE(v22[0]) = v4;
    VAA2AVerifierModelV3.__allocating_init(computeUnits:)((unsigned __int8 *)v22);
    type metadata accessor for VAA2AAudioEnrollerFactoryV3();
    sub_261432FC0(a1, (uint64_t)v22);
    uint64_t v11 = VAA2AAudioEnrollerFactoryV3.__allocating_init(encoder:delegate:)(v21, (uint64_t)v22);

    swift_release();
    swift_release();
  }
  return v11;
}

uint64_t VAA2ABuildKeywordSpotterV3(delegate:computeUnits:useResultGenerator:)(uint64_t a1, char *a2, char a3)
{
  unsigned __int8 v6 = *a2;
  type metadata accessor for VAConfiguration();
  uint64_t v7 = static VAConfiguration.buildForFlexibleA2Av3()();
  uint64_t v8 = type metadata accessor for VASilenceModel();
  uint64_t v9 = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v7) + 0xE0))();
  unint64_t v11 = v10;
  sub_2613B9FE8(v37);
  LOBYTE(v35[0]) = v37[0];
  uint64_t v12 = v9;
  uint64_t v13 = v8;
  uint64_t v14 = sub_26144A108(v12, v11, (unsigned __int8 *)v35);
  if (v3)
  {
  }
  else
  {
    uint64_t v15 = v14;
    type metadata accessor for VAFeatureExtract();
    id v16 = VAFeatureExtract.__allocating_init()();
    uint64_t v17 = type metadata accessor for VAA2AAudioEncoderModelV3();
    v37[0] = v6;
    uint64_t v18 = VAA2AAudioEncoderModelV3.__allocating_init(computeUnits:reuseBuffers:)((uint64_t)v37, 1);
    uint64_t v40 = a1;
    type metadata accessor for VAFeatureExtractingEncoder();
    uint64_t v38 = v17;
    BOOL v39 = &protocol witness table for VAA2AAudioEncoderModelV3;
    *(void *)uint64_t v37 = v18;
    swift_retain();
    id v19 = v16;
    swift_retain();
    uint64_t v20 = v7;
    char v21 = sub_2613D04A8();
    uint64_t v22 = VAFeatureExtractingEncoder.__allocating_init(subEncoder:featureExtractor:vadModel:config:useCMVN:)((uint64_t)v37, v19, v15, v20, v21 & 1);
    uint64_t v34 = v19;
    uint64_t v23 = type metadata accessor for VAA2AVerifierModelV3();
    v37[0] = v6;
    uint64_t v25 = VAA2AVerifierModelV3.__allocating_init(computeUnits:)(v37);
    uint64_t v26 = v22;
    if (a3)
    {
      type metadata accessor for VAResultGeneratorVerifier();
      uint64_t v38 = v23;
      BOOL v39 = &protocol witness table for VAA2AVerifierModelV3;
      *(void *)uint64_t v37 = v25;
      VoiceActions::AVSConfig v27 = v20;
      swift_retain();
      uint64_t v32 = VAResultGeneratorVerifier.__allocating_init(subVerifier:config:)((uint64_t)v37, (uint64_t)v27);
    }
    else
    {
      swift_retain();
      uint64_t v32 = v25;
    }
    type metadata accessor for VAStrideConfiguration();
    uint64_t v28 = (void *)static VAStrideConfiguration.forFlexibleA2Av3()();
    uint64_t v29 = type metadata accessor for VAStrategyProviderDefault();
    id v33 = v28;
    uint64_t v30 = VAStrategyProviderDefault.__allocating_init(strideConfig:)((uint64_t)v33);
    type metadata accessor for VAFlexibleKeywordSpotter();
    uint64_t v38 = v29;
    BOOL v39 = &protocol witness table for VAStrategyProviderDefault;
    uint64_t v36 = 0;
    *(void *)uint64_t v37 = v30;
    memset(v35, 0, sizeof(v35));
    uint64_t v31 = v40;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v13 = (uint64_t)VAFlexibleKeywordSpotter.__allocating_init(delegate:verifier:encoder:configuration:strategyProvider:runtimeParametersFactory:)(v31, v32, v26, v20, (uint64_t)v37, (uint64_t)v35);
    swift_release();
    swift_release();

    swift_release();
    swift_release();
  }
  return v13;
}

uint64_t sub_261433FC8()
{
  uint64_t v0 = sub_26142A908((uint64_t)&unk_270D560F8);
  swift_arrayDestroy();
  return v0;
}

id sub_261434010(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x61775F7475706E69 && a2 == 0xE900000000000076;
  if (!v3 && (sub_2614D5FB8() & 1) == 0) {
    return 0;
  }
  char v4 = (void *)(*(uint64_t (**)(void))(*(void *)v2 + 88))();
  id v5 = objc_msgSend(self, sel_featureValueWithMultiArray_, v4);

  return v5;
}

uint64_t sub_2614341E8()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 88))();
  uint64_t v2 = MEMORY[0x263F8D5C8];
  uint64_t v3 = MEMORY[0x263F00C60];
  return MEMORY[0x270EE7598](v1, v2, v3);
}

uint64_t sub_26143439C(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_2613C23AC(&qword_26A915330);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2614D81E0;
  strcpy((char *)(inited + 32), "enc_3d_output");
  *(_WORD *)(inited + 46) = -4864;
  id v4 = objc_msgSend(self, sel_featureValueWithMultiArray_, a1);
  *(void *)(inited + 72) = sub_261405618(0, &qword_26A915338);
  *(void *)(inited + 48) = v4;
  sub_26142907C(inited);
  id v5 = objc_allocWithZone(MEMORY[0x263F00D40]);
  id v6 = sub_26142A760();

  *(void *)(v2 + 16) = v6;
  return v2;
}

uint64_t sub_2614344D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_2614D4C78();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2613C23AC(&qword_26A9150A0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = sub_2614198FC();
  if (!v9)
  {
    __break(1u);
    goto LABEL_6;
  }
  unint64_t v10 = v9;
  unint64_t v11 = (void *)sub_2614D5378();
  uint64_t v12 = (void *)sub_2614D5378();
  id v13 = objc_msgSend(v10, sel_URLForResource_withExtension_, v11, v12);

  if (!v13)
  {
LABEL_6:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
    goto LABEL_7;
  }
  sub_2614D4C58();

  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v14(v8, v5, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2);
  if (result != 1)
  {

    return ((uint64_t (*)(uint64_t, char *, uint64_t))v14)(a1, v8, v2);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_261434710(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2614D4C78();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v18 - v11;
  (*(void (**)(uint64_t))(v1 + 88))(v10);
  uint64_t v13 = sub_261405618(0, qword_26A915340);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v12, v5);
  id v14 = a1;
  id v15 = sub_26142AB08((uint64_t)v9, (uint64_t)v14);
  if (v2)
  {
  }
  else
  {
    id v16 = v15;

    uint64_t v13 = (*(uint64_t (**)(id))(v3 + 96))(v16);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  return v13;
}

uint64_t sub_2614348D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_2614D4C78();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(v3 + 88))(v9);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 120))(v11, a1, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_2614349E0(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_2614D4C78();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_261434AA0, 0, 0);
}

uint64_t sub_261434AA0()
{
  uint64_t v6 = v0[3];
  (*(void (**)(void))(v6 + 88))();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v6 + 128) + **(int **)(v6 + 128));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2614298B4;
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[2];
  return v5(v2, v3);
}

uint64_t sub_261434BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_261405618(0, qword_26A915340);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  swift_retain();
  sub_2614D5A58();
  return swift_release();
}

uint64_t sub_261434C64(uint64_t a1, uint64_t a2)
{
  sub_261405618(0, qword_26A915340);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_261434D2C;
  return MEMORY[0x270EE7960](a1, a2);
}

uint64_t sub_261434D2C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 24) = a1;
    return MEMORY[0x270FA2498](sub_261434E78, 0, 0);
  }
}

uint64_t sub_261434E78()
{
  uint64_t v1 = *(void *)(v0 + 24);
  type metadata accessor for quant_enc_f32_wofeats();
  *(void *)(swift_allocObject() + 16) = v1;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_261434EEC(uint64_t a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00DD0]), sel_init);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, id))(*(void *)v1 + 144))(a1, v3);

  return v4;
}

uint64_t sub_261434F78(uint64_t a1, uint64_t a2)
{
  v12[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = *(void **)(v2 + 16);
  v12[0] = 0;
  id v6 = objc_msgSend(v5, sel_predictionFromFeatures_options_error_, a1, a2, v12);
  id v7 = v12[0];
  if (v6)
  {
    id v8 = v6;
    type metadata accessor for quant_enc_f32_wofeatsOutput();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v8;
    id v9 = v7;
  }
  else
  {
    id v10 = v12[0];
    sub_2614D4BF8();

    swift_willThrow();
  }
  return v3;
}

uint64_t sub_261435050(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  mach_timebase_info v3[2] = a1;
  return MEMORY[0x270FA2498](sub_261435074, 0, 0);
}

uint64_t sub_261435074()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_261435114;
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  return MEMORY[0x270EE7938](v3, v2);
}

uint64_t sub_261435114(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    id v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    return MEMORY[0x270FA2498](sub_261435260, 0, 0);
  }
}

uint64_t sub_261435260()
{
  uint64_t v1 = *(void *)(v0 + 48);
  type metadata accessor for quant_enc_f32_wofeatsOutput();
  *(void *)(swift_allocObject() + 16) = v1;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2614352D4(void *a1)
{
  type metadata accessor for quant_enc_f32_wofeatsInput();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)v1 + 136);
  id v5 = a1;
  uint64_t v6 = v4(v3);
  swift_release();
  return v6;
}

uint64_t sub_261435368(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2613C23AC(&qword_26A915318);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v10 = (char *)v16 - v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)v16 - v9, a1, v4);
  sub_261405618(0, (unint64_t *)&qword_26A915320);
  v11(v8, (uint64_t)v10, v4);
  sub_26142AAAC();
  uint64_t v12 = sub_2614D5948();
  type metadata accessor for quant_enc_f32_wofeatsInput();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 136))(v13);
  swift_release();
  return v14;
}

void sub_261435534(unint64_t a1, uint64_t a2)
{
  v22[1] = *(id *)MEMORY[0x263EF8340];
  unint64_t v5 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_2613C23AC(&qword_26A9153C0);
    sub_2614D5D78();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_2614D5FD8();
  }
  id v6 = objc_allocWithZone(MEMORY[0x263F00D18]);
  sub_2613C23AC(&qword_26A9153C0);
  uint64_t v7 = (void *)sub_2614D5648();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithFeatureProviderArray_, v7);

  uint64_t v9 = *(void **)(v2 + 16);
  v22[0] = 0;
  id v10 = objc_msgSend(v9, sel_predictionsFromBatch_options_error_, v8, a2, v22);
  id v11 = v22[0];
  if (v10)
  {
    uint64_t v12 = v10;
    v22[0] = (id)MEMORY[0x263F8EE78];
    if (v5)
    {
      swift_bridgeObjectRetain();
      id v16 = v11;
      uint64_t v13 = sub_2614D5D98();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v14 = v11;
    }
    sub_26142A848(v13, 0);
    sub_2614D5678();
    unint64_t v17 = (unint64_t)objc_msgSend(v12, sel_count);
    if ((v17 & 0x8000000000000000) != 0) {
      __break(1u);
    }
    unint64_t v18 = v17;
    if (v17)
    {
      uint64_t v19 = 0;
      do
      {
        id v20 = objc_msgSend(v12, sel_featuresAtIndex_, v19);
        type metadata accessor for quant_enc_f32_wofeatsOutput();
        *(void *)(swift_allocObject() + 16) = v20;
        swift_unknownObjectRetain();
        uint64_t v21 = swift_retain();
        MEMORY[0x263E36760](v21);
        if (*(void *)(((unint64_t)v22[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v22[0] & 0xFFFFFFFFFFFFFF8)
                                                                                               + 0x18) >> 1)
          sub_2614D5698();
        ++v19;
        sub_2614D56E8();
        sub_2614D5678();
        swift_release();
        swift_unknownObjectRelease();
      }
      while (v18 != v19);
    }
    swift_unknownObjectRelease();
  }
  else
  {
    id v15 = v22[0];
    sub_2614D4BF8();

    swift_willThrow();
  }
}

uint64_t sub_26143580C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_261435844(id a1, char a2)
{
  uint64_t v4 = *(void (**)(id, uint64_t))(v2 + 16);
  if (a2)
  {
    id v7 = a1;
    v4(a1, 1);
    sub_26142ADBC(a1);
  }
  else
  {
    type metadata accessor for quant_enc_f32_wofeats();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    id v6 = a1;
    v4((id)v5, 0);
    swift_release();
  }
}

uint64_t type metadata accessor for quant_enc_f32_wofeats()
{
  return self;
}

uint64_t type metadata accessor for quant_enc_f32_wofeatsOutput()
{
  return self;
}

uint64_t type metadata accessor for quant_enc_f32_wofeatsInput()
{
  return self;
}

void sub_261435960()
{
}

void sub_2614359C4()
{
}

uint64_t VAAudioEncoderModel.deinit()
{
  return v0;
}

uint64_t VAAudioEncoderModel.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for VAAudioEncoderModelError()
{
  return &type metadata for VAAudioEncoderModelError;
}

uint64_t type metadata accessor for VAAudioEncoderModel()
{
  return self;
}

uint64_t method lookup function for VAAudioEncoderModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VAAudioEncoderModel);
}

uint64_t sub_261435B20()
{
  uint64_t v0 = sub_26142A908((uint64_t)&unk_270D561E0);
  swift_arrayDestroy();
  return v0;
}

id sub_261435B68(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x80000002614E36F0 || (sub_2614D5FB8() & 1) != 0)
  {
    uint64_t v5 = (*(uint64_t (**)(void))(*(void *)v2 + 112))();
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002614E3710 || (sub_2614D5FB8() & 1) != 0)
  {
    uint64_t v5 = (*(uint64_t (**)(void))(*(void *)v2 + 136))();
  }
  else if (a1 == 0x75615F7475706E69 && a2 == 0xEF6E656C5F6F6964 || (sub_2614D5FB8() & 1) != 0)
  {
    uint64_t v5 = (*(uint64_t (**)(void))(*(void *)v2 + 160))();
  }
  else
  {
    if ((a1 != 0xD000000000000010 || a2 != 0x80000002614E3730) && (sub_2614D5FB8() & 1) == 0) {
      return 0;
    }
    uint64_t v5 = (*(uint64_t (**)(void))(*(void *)v2 + 184))();
  }
  id v6 = (void *)v5;
  id v7 = objc_msgSend(self, sel_featureValueWithMultiArray_, v5);

  return v7;
}

uint64_t sub_261435E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a1;
  uint64_t v21 = a2;
  uint64_t v22 = a4;
  uint64_t v19 = a3;
  uint64_t v7 = sub_2613C23AC(&qword_26A915318);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261405618(0, (unint64_t *)&qword_26A915320);
  id v11 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v11(v10, a1, v7);
  sub_26142AAAC();
  uint64_t v20 = sub_2614D5948();
  v11(v10, a2, v7);
  uint64_t v12 = sub_2614D5948();
  v11(v10, a3, v7);
  uint64_t v13 = sub_2614D5948();
  uint64_t v14 = v22;
  v11(v10, v22, v7);
  uint64_t v15 = sub_2614D5948();
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 224))(v20, v12, v13, v15);
  unint64_t v17 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v17(v14, v7);
  v17(v19, v7);
  v17(v21, v7);
  v17(v23, v7);
  return v16;
}

uint64_t sub_26143604C()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 88))();
  uint64_t v2 = MEMORY[0x263F8D5C8];
  uint64_t v3 = MEMORY[0x263F00C60];
  return MEMORY[0x270EE7598](v1, v2, v3);
}

uint64_t sub_261436200(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_2613C23AC(&qword_26A915330);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2614D81E0;
  *(void *)(inited + 32) = 0x74757074756FLL;
  *(void *)(inited + 40) = 0xE600000000000000;
  id v4 = objc_msgSend(self, sel_featureValueWithMultiArray_, a1);
  *(void *)(inited + 72) = sub_261405618(0, &qword_26A915338);
  *(void *)(inited + 48) = v4;
  sub_26142907C(inited);
  id v5 = objc_allocWithZone(MEMORY[0x263F00D40]);
  id v6 = sub_26142A760();

  *(void *)(v2 + 16) = v6;
  return v2;
}

uint64_t sub_26143632C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_2614D4C78();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2613C23AC(&qword_26A9150A0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = sub_2614198FC();
  if (!v9)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v10 = v9;
  id v11 = (void *)sub_2614D5378();
  uint64_t v12 = (void *)sub_2614D5378();
  id v13 = objc_msgSend(v10, sel_URLForResource_withExtension_, v11, v12);

  if (!v13)
  {
LABEL_6:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
    goto LABEL_7;
  }
  sub_2614D4C58();

  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v14(v8, v5, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2);
  if (result != 1)
  {

    return ((uint64_t (*)(uint64_t, char *, uint64_t))v14)(a1, v8, v2);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_261436564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_2614D4C78();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  id v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(v3 + 88))(v9);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 120))(v11, a1, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_261436674(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_2614D4C78();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_261436734, 0, 0);
}

uint64_t sub_261436734()
{
  uint64_t v6 = v0[3];
  (*(void (**)(void))(v6 + 88))();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v6 + 128) + **(int **)(v6 + 128));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2614298B4;
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[2];
  return v5(v2, v3);
}

uint64_t sub_261436840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_261405618(0, qword_26A915340);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  swift_retain();
  sub_2614D5A58();
  return swift_release();
}

uint64_t sub_2614368F8(uint64_t a1, uint64_t a2)
{
  sub_261405618(0, qword_26A915340);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_2614369C0;
  return MEMORY[0x270EE7960](a1, a2);
}

uint64_t sub_2614369C0(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 24) = a1;
    return MEMORY[0x270FA2498](sub_261436B0C, 0, 0);
  }
}

uint64_t sub_261436B0C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  type metadata accessor for aa_verifier_rdr_125141826();
  *(void *)(swift_allocObject() + 16) = v1;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_261436B80(uint64_t a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00DD0]), sel_init);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, id))(*(void *)v1 + 144))(a1, v3);

  return v4;
}

uint64_t sub_261436C0C(uint64_t a1, uint64_t a2)
{
  v12[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = *(void **)(v2 + 16);
  v12[0] = 0;
  id v6 = objc_msgSend(v5, sel_predictionFromFeatures_options_error_, a1, a2, v12);
  id v7 = v12[0];
  if (v6)
  {
    id v8 = v6;
    type metadata accessor for aa_verifier_rdr_125141826Output();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v8;
    id v9 = v7;
  }
  else
  {
    id v10 = v12[0];
    sub_2614D4BF8();

    swift_willThrow();
  }
  return v3;
}

uint64_t sub_261436CE4(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  mach_timebase_info v3[2] = a1;
  return MEMORY[0x270FA2498](sub_261436D08, 0, 0);
}

uint64_t sub_261436D08()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_261436DA8;
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  return MEMORY[0x270EE7938](v3, v2);
}

uint64_t sub_261436DA8(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    id v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    return MEMORY[0x270FA2498](sub_261436EF4, 0, 0);
  }
}

uint64_t sub_261436EF4()
{
  uint64_t v1 = *(void *)(v0 + 48);
  type metadata accessor for aa_verifier_rdr_125141826Output();
  *(void *)(swift_allocObject() + 16) = v1;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_261436F68(void *a1, void *a2, void *a3, void *a4)
{
  type metadata accessor for aa_verifier_rdr_125141826Input();
  id v9 = (void *)swift_allocObject();
  id v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  void v9[5] = a4;
  id v10 = *(uint64_t (**)(void *))(*(void *)v4 + 136);
  id v11 = a1;
  id v12 = a2;
  id v13 = a3;
  id v14 = a4;
  uint64_t v15 = v10(v9);
  swift_release();
  return v15;
}

uint64_t sub_261437028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v6 = sub_2613C23AC(&qword_26A915318);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  id v13 = (char *)&v22 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v22 - v15;
  MEMORY[0x270FA5388](v14);
  unint64_t v18 = (char *)&v22 - v17;
  type metadata accessor for aa_verifier_rdr_125141826Input();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v19(v18, v22, v6);
  v19(v16, v23, v6);
  v19(v13, v24, v6);
  v19(v10, v25, v6);
  sub_261435E14((uint64_t)v18, (uint64_t)v16, (uint64_t)v13, (uint64_t)v10);
  uint64_t v20 = (*(uint64_t (**)(void))(*(void *)v5 + 136))();
  swift_release();
  return v20;
}

void sub_261437224(unint64_t a1, uint64_t a2)
{
  v22[1] = *(id *)MEMORY[0x263EF8340];
  unint64_t v5 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_2613C23AC(&qword_26A9153C0);
    sub_2614D5D78();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_2614D5FD8();
  }
  id v6 = objc_allocWithZone(MEMORY[0x263F00D18]);
  sub_2613C23AC(&qword_26A9153C0);
  uint64_t v7 = (void *)sub_2614D5648();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithFeatureProviderArray_, v7);

  uint64_t v9 = *(void **)(v2 + 16);
  v22[0] = 0;
  id v10 = objc_msgSend(v9, sel_predictionsFromBatch_options_error_, v8, a2, v22);
  id v11 = v22[0];
  if (v10)
  {
    uint64_t v12 = v10;
    v22[0] = (id)MEMORY[0x263F8EE78];
    if (v5)
    {
      swift_bridgeObjectRetain();
      id v16 = v11;
      uint64_t v13 = sub_2614D5D98();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v14 = v11;
    }
    sub_26142A848(v13, 0);
    sub_2614D5678();
    unint64_t v17 = (unint64_t)objc_msgSend(v12, sel_count);
    if ((v17 & 0x8000000000000000) != 0) {
      __break(1u);
    }
    unint64_t v18 = v17;
    if (v17)
    {
      uint64_t v19 = 0;
      do
      {
        id v20 = objc_msgSend(v12, sel_featuresAtIndex_, v19);
        type metadata accessor for aa_verifier_rdr_125141826Output();
        *(void *)(swift_allocObject() + 16) = v20;
        swift_unknownObjectRetain();
        uint64_t v21 = swift_retain();
        MEMORY[0x263E36760](v21);
        if (*(void *)(((unint64_t)v22[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v22[0] & 0xFFFFFFFFFFFFFF8)
                                                                                               + 0x18) >> 1)
          sub_2614D5698();
        ++v19;
        sub_2614D56E8();
        sub_2614D5678();
        swift_release();
        swift_unknownObjectRelease();
      }
      while (v18 != v19);
    }
    swift_unknownObjectRelease();
  }
  else
  {
    id v15 = v22[0];
    sub_2614D4BF8();

    swift_willThrow();
  }
}

uint64_t sub_2614374FC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_261437534(id a1, char a2)
{
  uint64_t v4 = *(void (**)(id, uint64_t))(v2 + 16);
  if (a2)
  {
    id v7 = a1;
    v4(a1, 1);
    sub_26142ADBC(a1);
  }
  else
  {
    type metadata accessor for aa_verifier_rdr_125141826();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    id v6 = a1;
    v4((id)v5, 0);
    swift_release();
  }
}

uint64_t type metadata accessor for aa_verifier_rdr_125141826()
{
  return self;
}

uint64_t type metadata accessor for aa_verifier_rdr_125141826Output()
{
  return self;
}

uint64_t type metadata accessor for aa_verifier_rdr_125141826Input()
{
  return self;
}

void *sub_261437650()
{
  return &unk_2655812E0;
}

unint64_t DefaultConfigDir.getter()
{
  return 0xD000000000000010;
}

uint64_t DefaultConfigFilename.getter()
{
  return 0x6A2E6769666E6F63;
}

uint64_t sub_2614376E0()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___SecondPassConfig_waitForFinal);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_261437774(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___SecondPassConfig_waitForFinal);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_2614377C0@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x60))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_261437820(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a2) + 0x68))(*a1);
}

uint64_t (*sub_261437878())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_26143791C()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___SecondPassConfig_useEndpointer);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_2614379B0(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___SecondPassConfig_useEndpointer);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_2614379FC@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x78))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_261437A5C(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a2) + 0x80))(*a1);
}

uint64_t (*sub_261437AB4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_261437B18()
{
  if (*v0) {
    return 0x6F70646E45657375;
  }
  else {
    return 0x46726F4674696177;
  }
}

uint64_t sub_261437B68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_261448D14(a1, a2);
  *a3 = result;
  return result;
}

void sub_261437B90(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_261437B9C(uint64_t a1)
{
  unint64_t v2 = sub_261437F80();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_261437BD8(uint64_t a1)
{
  unint64_t v2 = sub_261437F80();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t type metadata accessor for SecondPassConfig()
{
  return self;
}

id SecondPassConfig.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return SecondPassConfig.init(from:)(a1);
}

id SecondPassConfig.init(from:)(void *a1)
{
  uint64_t v3 = sub_2613C23AC(&qword_26A915480);
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = &v1[OBJC_IVAR___SecondPassConfig_waitForFinal];
  v1[OBJC_IVAR___SecondPassConfig_waitForFinal] = 1;
  id v7 = &v1[OBJC_IVAR___SecondPassConfig_useEndpointer];
  v1[OBJC_IVAR___SecondPassConfig_useEndpointer] = 0;
  uint64_t v8 = a1[3];
  uint64_t v25 = a1;
  uint64_t v9 = sub_2613DBF24(a1, v8);
  sub_261437F80();
  id v10 = v1;
  id v11 = v9;
  uint64_t v12 = v29;
  sub_2614D60D8();
  if (v12)
  {

    sub_2613DD718((uint64_t)v25);
    type metadata accessor for SecondPassConfig();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v14 = v23;
    uint64_t v13 = v24;
    char v28 = 0;
    char v15 = sub_2614D5E48();
    if (v15 == 2)
    {
      swift_beginAccess();
      char v16 = *v6;
    }
    else
    {
      char v16 = v15 & 1;
    }
    swift_beginAccess();
    *id v6 = v16;
    char v27 = 1;
    char v18 = sub_2614D5E48();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v13);
    if (v18 == 2)
    {
      swift_beginAccess();
      char v19 = *v7;
    }
    else
    {
      char v19 = v18 & 1;
    }
    uint64_t v20 = (uint64_t)v25;
    swift_beginAccess();
    *id v7 = v19;

    uint64_t v21 = (objc_class *)type metadata accessor for SecondPassConfig();
    v26.receiver = v10;
    v26.super_class = v21;
    id v11 = objc_msgSendSuper2(&v26, sel_init);
    sub_2613DD718(v20);
  }
  return v11;
}

unint64_t sub_261437F80()
{
  unint64_t result = qword_26A919E88;
  if (!qword_26A919E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A919E88);
  }
  return result;
}

uint64_t sub_261437FD4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2613C23AC(&qword_26A915488);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2613DBF24(a1, a1[3]);
  sub_261437F80();
  uint64_t v9 = sub_2614D60F8();
  id v10 = (void *)MEMORY[0x263F8EED0];
  (*(void (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v3) + 0x60))(v9);
  v13[15] = 0;
  uint64_t v11 = sub_2614D5F28();
  if (!v2)
  {
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x78))(v11);
    v13[14] = 1;
    sub_2614D5F28();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

id SecondPassConfig.__deallocating_deinit()
{
  return sub_2614453D0(type metadata accessor for SecondPassConfig);
}

uint64_t sub_26143834C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 144))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_261438388()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **v0) + 0x98))();
}

uint64_t sub_261438424()
{
  uint64_t v1 = v0 + OBJC_IVAR___PreKeywordSilenceConfig_lookbackFrames;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_2614384B8(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___PreKeywordSilenceConfig_lookbackFrames);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_261438504@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x68))();
  *a2 = result;
  return result;
}

uint64_t sub_261438560(void *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a2) + 0x70))(*a1);
}

uint64_t (*sub_2614385B8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_26143865C()
{
  uint64_t v1 = v0 + OBJC_IVAR___PreKeywordSilenceConfig_minSilenceInLookbackFrames;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_2614386F0(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___PreKeywordSilenceConfig_minSilenceInLookbackFrames);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_26143873C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x80))();
  *a2 = result;
  return result;
}

uint64_t sub_261438798(void *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a2) + 0x88))(*a1);
}

uint64_t (*sub_2614387F0())()
{
  return j_j__swift_endAccess;
}

float sub_261438894()
{
  uint64_t v1 = v0 + OBJC_IVAR___PreKeywordSilenceConfig_silenceProbability;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t sub_261438930(float a1)
{
  uint64_t v3 = (float *)(v1 + OBJC_IVAR___PreKeywordSilenceConfig_silenceProbability);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

void sub_261438984(void **a1@<X0>, float *a2@<X8>)
{
  *a2 = (*(float (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x98))();
}

uint64_t sub_2614389E0(float *a1, void **a2)
{
  return (*(uint64_t (**)(float))((*MEMORY[0x263F8EED0] & **a2) + 0xA0))(*a1);
}

uint64_t (*sub_261438A38())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_261438A94()
{
  unint64_t v1 = 0xD00000000000001ALL;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000012;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6B6361626B6F6F6CLL;
  }
}

uint64_t sub_261438B08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_261448E44(a1, a2);
  *a3 = result;
  return result;
}

void sub_261438B30(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_261438B3C(uint64_t a1)
{
  unint64_t v2 = sub_261438FF8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_261438B78(uint64_t a1)
{
  unint64_t v2 = sub_261438FF8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t type metadata accessor for PreKeywordSilence()
{
  return self;
}

id PreKeywordSilence.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return PreKeywordSilence.init(from:)(a1);
}

id PreKeywordSilence.init(from:)(void *a1)
{
  uint64_t v29 = sub_2613C23AC(&qword_26A9154B0);
  uint64_t v28 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v27 = &v1[OBJC_IVAR___PreKeywordSilenceConfig_lookbackFrames];
  *(void *)&v1[OBJC_IVAR___PreKeywordSilenceConfig_lookbackFrames] = 20;
  uint64_t v5 = &v1[OBJC_IVAR___PreKeywordSilenceConfig_minSilenceInLookbackFrames];
  *(void *)&v1[OBJC_IVAR___PreKeywordSilenceConfig_minSilenceInLookbackFrames] = 10;
  uint64_t v6 = &v1[OBJC_IVAR___PreKeywordSilenceConfig_silenceProbability];
  *(_DWORD *)&v1[OBJC_IVAR___PreKeywordSilenceConfig_silenceProbability] = 1060320051;
  uint64_t v7 = a1[3];
  uint64_t v30 = a1;
  uint64_t v8 = sub_2613DBF24(a1, v7);
  sub_261438FF8();
  uint64_t v9 = v1;
  id v10 = v8;
  uint64_t v11 = v35;
  sub_2614D60D8();
  if (v11)
  {

    sub_2613DD718((uint64_t)v30);
    type metadata accessor for PreKeywordSilence();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v12 = v27;
    uint64_t v35 = v5;
    uint64_t v13 = v28;
    char v34 = 0;
    uint64_t v14 = v29;
    uint64_t v15 = sub_2614D5E68();
    if (v16)
    {
      swift_beginAccess();
      char v18 = v12;
      uint64_t v17 = *(void *)v12;
    }
    else
    {
      uint64_t v17 = v15;
      char v18 = v12;
    }
    swift_beginAccess();
    void *v18 = v17;
    char v33 = 1;
    uint64_t v19 = sub_2614D5E68();
    if (v20)
    {
      uint64_t v23 = (uint64_t *)v35;
      swift_beginAccess();
      uint64_t v22 = *v23;
    }
    else
    {
      uint64_t v22 = v19;
      uint64_t v23 = (uint64_t *)v35;
    }
    swift_beginAccess();
    uint64_t *v23 = v22;
    char v32 = 2;
    uint64_t v24 = sub_2614D5E58();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v14);
    if ((v24 & 0x100000000) != 0)
    {
      swift_beginAccess();
      LODWORD(v24) = *(_DWORD *)v6;
    }
    swift_beginAccess();
    *(_DWORD *)uint64_t v6 = v24;

    uint64_t v25 = (objc_class *)type metadata accessor for PreKeywordSilence();
    v31.receiver = v9;
    v31.super_class = v25;
    id v10 = objc_msgSendSuper2(&v31, sel_init);
    sub_2613DD718((uint64_t)v30);
  }
  return v10;
}

unint64_t sub_261438FF8()
{
  unint64_t result = qword_26A919E90;
  if (!qword_26A919E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A919E90);
  }
  return result;
}

uint64_t sub_26143904C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2613C23AC(&qword_26A9154B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2613DBF24(a1, a1[3]);
  sub_261438FF8();
  uint64_t v9 = sub_2614D60F8();
  id v10 = (void *)MEMORY[0x263F8EED0];
  (*(void (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v3) + 0x68))(v9);
  v14[15] = 0;
  uint64_t v11 = sub_2614D5F48();
  if (!v2)
  {
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x80))(v11);
    v14[14] = 1;
    uint64_t v12 = sub_2614D5F48();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x98))(v12);
    v14[13] = 2;
    sub_2614D5F38();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2614393F8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id PreKeywordSilence.__deallocating_deinit()
{
  return sub_2614453D0(type metadata accessor for PreKeywordSilence);
}

uint64_t sub_261439458@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 176))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_261439494()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **v0) + 0xB8))();
}

float sub_261439530()
{
  uint64_t v1 = v0 + OBJC_IVAR___DuringKeywordSilenceConfig_minPercentageOfNonSilenceFrames;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t sub_2614395CC(float a1)
{
  uint64_t v3 = (float *)(v1 + OBJC_IVAR___DuringKeywordSilenceConfig_minPercentageOfNonSilenceFrames);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

void sub_261439620(void **a1@<X0>, float *a2@<X8>)
{
  *a2 = (*(float (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x60))();
}

uint64_t sub_26143967C(float *a1, void **a2)
{
  return (*(uint64_t (**)(float))((*MEMORY[0x263F8EED0] & **a2) + 0x68))(*a1);
}

uint64_t (*sub_2614396D4())()
{
  return j_j__swift_endAccess;
}

float sub_261439778()
{
  uint64_t v1 = v0 + OBJC_IVAR___DuringKeywordSilenceConfig_silenceProbability;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t sub_261439814(float a1)
{
  uint64_t v3 = (float *)(v1 + OBJC_IVAR___DuringKeywordSilenceConfig_silenceProbability);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

void sub_261439868(void **a1@<X0>, float *a2@<X8>)
{
  *a2 = (*(float (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x78))();
}

uint64_t sub_2614398C4(float *a1, void **a2)
{
  return (*(uint64_t (**)(float))((*MEMORY[0x263F8EED0] & **a2) + 0x80))(*a1);
}

uint64_t (*sub_26143991C())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_261439978()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 0xD00000000000001FLL;
  }
}

uint64_t sub_2614399BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_261448FB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2614399E4(uint64_t a1)
{
  unint64_t v2 = sub_261439DC4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_261439A20(uint64_t a1)
{
  unint64_t v2 = sub_261439DC4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t type metadata accessor for DuringKeywordSilence()
{
  return self;
}

id DuringKeywordSilence.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return DuringKeywordSilence.init(from:)(a1);
}

id DuringKeywordSilence.init(from:)(void *a1)
{
  uint64_t v3 = sub_2613C23AC(&qword_26A9154D8);
  uint64_t v21 = *(void *)(v3 - 8);
  uint64_t v22 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = &v1[OBJC_IVAR___DuringKeywordSilenceConfig_minPercentageOfNonSilenceFrames];
  *(_DWORD *)&v1[OBJC_IVAR___DuringKeywordSilenceConfig_minPercentageOfNonSilenceFrames] = 1056964608;
  uint64_t v7 = &v1[OBJC_IVAR___DuringKeywordSilenceConfig_silenceProbability];
  *(_DWORD *)&v1[OBJC_IVAR___DuringKeywordSilenceConfig_silenceProbability] = 1056964608;
  uint64_t v8 = a1[3];
  uint64_t v23 = a1;
  uint64_t v9 = sub_2613DBF24(a1, v8);
  sub_261439DC4();
  id v10 = v1;
  id v11 = v9;
  uint64_t v12 = v27;
  sub_2614D60D8();
  if (v12)
  {

    sub_2613DD718((uint64_t)v23);
    type metadata accessor for DuringKeywordSilence();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v13 = v21;
    uint64_t v14 = v22;
    char v26 = 0;
    uint64_t v15 = sub_2614D5E58();
    int v16 = v15;
    if ((v15 & 0x100000000) != 0)
    {
      swift_beginAccess();
      int v16 = *(_DWORD *)v6;
    }
    swift_beginAccess();
    *(_DWORD *)uint64_t v6 = v16;
    char v25 = 1;
    uint64_t v18 = sub_2614D5E58();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v5, v14);
    if ((v18 & 0x100000000) != 0)
    {
      swift_beginAccess();
      LODWORD(v18) = *(_DWORD *)v7;
    }
    swift_beginAccess();
    *(_DWORD *)uint64_t v7 = v18;

    uint64_t v19 = (objc_class *)type metadata accessor for DuringKeywordSilence();
    v24.receiver = v10;
    v24.super_class = v19;
    id v11 = objc_msgSendSuper2(&v24, sel_init);
    sub_2613DD718((uint64_t)v23);
  }
  return v11;
}

unint64_t sub_261439DC4()
{
  unint64_t result = qword_26A919E98;
  if (!qword_26A919E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A919E98);
  }
  return result;
}

uint64_t sub_261439E18(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2613C23AC(&qword_26A9154E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2613DBF24(a1, a1[3]);
  sub_261439DC4();
  uint64_t v9 = sub_2614D60F8();
  id v10 = (void *)MEMORY[0x263F8EED0];
  (*(void (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v3) + 0x60))(v9);
  v13[15] = 0;
  uint64_t v11 = sub_2614D5F38();
  if (!v2)
  {
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x78))(v11);
    v13[14] = 1;
    sub_2614D5F38();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

id DuringKeywordSilence.__deallocating_deinit()
{
  return sub_2614453D0(type metadata accessor for DuringKeywordSilence);
}

uint64_t sub_26143A188@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 144))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_26143A1C4()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **v0) + 0x98))();
}

uint64_t sub_26143A260()
{
  uint64_t v1 = v0 + OBJC_IVAR___PostKeywordSilenceConfig_lookForwardFrames;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_26143A2F4(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___PostKeywordSilenceConfig_lookForwardFrames);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_26143A340@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x70))();
  *a2 = result;
  return result;
}

uint64_t sub_26143A39C(void *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a2) + 0x78))(*a1);
}

uint64_t (*sub_26143A3F4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_26143A498()
{
  uint64_t v1 = v0 + OBJC_IVAR___PostKeywordSilenceConfig_minSilenceFramesExpected;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_26143A52C(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___PostKeywordSilenceConfig_minSilenceFramesExpected);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_26143A578@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x88))();
  *a2 = result;
  return result;
}

uint64_t sub_26143A5D4(void *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a2) + 0x90))(*a1);
}

uint64_t (*sub_26143A62C())()
{
  return j_j__swift_endAccess;
}

float sub_26143A6D0()
{
  uint64_t v1 = v0 + OBJC_IVAR___PostKeywordSilenceConfig_silenceProbability;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t sub_26143A76C(float a1)
{
  uint64_t v3 = (float *)(v1 + OBJC_IVAR___PostKeywordSilenceConfig_silenceProbability);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

void sub_26143A7C0(void **a1@<X0>, float *a2@<X8>)
{
  *a2 = (*(float (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0xA0))();
}

uint64_t sub_26143A81C(float *a1, void **a2)
{
  return (*(uint64_t (**)(float))((*MEMORY[0x263F8EED0] & **a2) + 0xA8))(*a1);
}

uint64_t (*sub_26143A874())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_26143A918()
{
  uint64_t v1 = v0 + OBJC_IVAR___PostKeywordSilenceConfig_minSilenceFrameCountAtEndOfKeyword;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_26143A9AC(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___PostKeywordSilenceConfig_minSilenceFrameCountAtEndOfKeyword);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_26143A9F8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0xB8))();
  *a2 = result;
  return result;
}

uint64_t sub_26143AA54(void *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a2) + 0xC0))(*a1);
}

uint64_t (*sub_26143AAAC())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_26143AB08(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000018;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000022;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_26143AB90()
{
  return sub_26143AB08(*v0);
}

uint64_t sub_26143AB98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2614490A4(a1, a2);
  *a3 = result;
  return result;
}

void sub_26143ABC0(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_26143ABCC(uint64_t a1)
{
  unint64_t v2 = sub_26143B15C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_26143AC08(uint64_t a1)
{
  unint64_t v2 = sub_26143B15C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t type metadata accessor for PostKeywordSilence()
{
  return self;
}

id PostKeywordSilence.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return PostKeywordSilence.init(from:)(a1);
}

id PostKeywordSilence.init(from:)(void *a1)
{
  uint64_t v41 = sub_2613C23AC(&qword_26A915510);
  uint64_t v40 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v39 = &v1[OBJC_IVAR___PostKeywordSilenceConfig_lookForwardFrames];
  *(void *)&v1[OBJC_IVAR___PostKeywordSilenceConfig_lookForwardFrames] = 8;
  uint64_t v38 = &v1[OBJC_IVAR___PostKeywordSilenceConfig_minSilenceFramesExpected];
  *(void *)&v1[OBJC_IVAR___PostKeywordSilenceConfig_minSilenceFramesExpected] = 2;
  uint64_t v5 = &v1[OBJC_IVAR___PostKeywordSilenceConfig_silenceProbability];
  *(_DWORD *)&v1[OBJC_IVAR___PostKeywordSilenceConfig_silenceProbability] = 1060320051;
  uint64_t v6 = &v1[OBJC_IVAR___PostKeywordSilenceConfig_minSilenceFrameCountAtEndOfKeyword];
  *(void *)&v1[OBJC_IVAR___PostKeywordSilenceConfig_minSilenceFrameCountAtEndOfKeyword] = 2;
  uint64_t v7 = a1[3];
  BOOL v42 = a1;
  uint64_t v8 = sub_2613DBF24(a1, v7);
  sub_26143B15C();
  uint64_t v9 = v1;
  id v10 = v8;
  uint64_t v11 = v48;
  sub_2614D60D8();
  if (v11)
  {

    sub_2613DD718((uint64_t)v42);
    type metadata accessor for PostKeywordSilence();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v12 = v39;
    uint64_t v13 = (uint64_t *)v38;
    uint64_t v37 = v5;
    uint64_t v36 = (uint64_t *)v6;
    uint64_t v14 = v40;
    char v48 = v9;
    char v47 = 0;
    uint64_t v15 = v41;
    uint64_t v16 = sub_2614D5E68();
    uint64_t v17 = v4;
    if (v18)
    {
      swift_beginAccess();
      uint64_t v21 = v12;
      uint64_t v19 = *(void *)v12;
      uint64_t v20 = v13;
    }
    else
    {
      uint64_t v19 = v16;
      uint64_t v20 = v13;
      uint64_t v21 = v12;
    }
    swift_beginAccess();
    void *v21 = v19;
    char v46 = 1;
    uint64_t v22 = sub_2614D5E68();
    if (v23)
    {
      swift_beginAccess();
      uint64_t v25 = *v20;
    }
    else
    {
      uint64_t v25 = v22;
    }
    uint64_t v26 = v14;
    uint64_t v27 = v37;
    swift_beginAccess();
    uint64_t *v20 = v25;
    char v45 = 2;
    uint64_t v28 = sub_2614D5E58();
    int v29 = v28;
    if ((v28 & 0x100000000) != 0)
    {
      swift_beginAccess();
      int v29 = *(_DWORD *)v27;
    }
    swift_beginAccess();
    *(_DWORD *)uint64_t v27 = v29;
    char v44 = 3;
    uint64_t v30 = sub_2614D5E68();
    char v32 = v31;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v15);
    char v33 = v36;
    if (v32)
    {
      swift_beginAccess();
      uint64_t v30 = *v33;
    }
    swift_beginAccess();
    uint64_t *v33 = v30;
    char v34 = v48;

    uint64_t v35 = (objc_class *)type metadata accessor for PostKeywordSilence();
    v43.receiver = v34;
    v43.super_class = v35;
    id v10 = objc_msgSendSuper2(&v43, sel_init);
    sub_2613DD718((uint64_t)v42);
  }
  return v10;
}

unint64_t sub_26143B15C()
{
  unint64_t result = qword_26A919EA0;
  if (!qword_26A919EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A919EA0);
  }
  return result;
}

uint64_t sub_26143B1B0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2613C23AC(&qword_26A915518);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2613DBF24(a1, a1[3]);
  sub_26143B15C();
  uint64_t v9 = sub_2614D60F8();
  id v10 = (void *)MEMORY[0x263F8EED0];
  (*(void (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v3) + 0x70))(v9);
  v15[15] = 0;
  uint64_t v11 = sub_2614D5F48();
  if (!v2)
  {
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x88))(v11);
    v15[14] = 1;
    uint64_t v12 = sub_2614D5F48();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0xA0))(v12);
    v15[13] = 2;
    uint64_t v13 = sub_2614D5F38();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0xB8))(v13);
    v15[12] = 3;
    sub_2614D5F48();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

id PostKeywordSilence.__deallocating_deinit()
{
  return sub_2614453D0(type metadata accessor for PostKeywordSilence);
}

uint64_t sub_26143B5C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 208))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_26143B604()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **v0) + 0xD8))();
}

uint64_t sub_26143B6A0()
{
  uint64_t v1 = v0 + OBJC_IVAR___AudioCaptureConfig_leftOfStartFrameOffset;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_26143B734(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___AudioCaptureConfig_leftOfStartFrameOffset);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_26143B780@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x60))();
  *a2 = result;
  return result;
}

uint64_t sub_26143B7DC(void *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a2) + 0x68))(*a1);
}

uint64_t (*sub_26143B834())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_26143B8D8()
{
  uint64_t v1 = v0 + OBJC_IVAR___AudioCaptureConfig_rightOfEndFrameOffset;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_26143B96C(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___AudioCaptureConfig_rightOfEndFrameOffset);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_26143B9B8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x78))();
  *a2 = result;
  return result;
}

uint64_t sub_26143BA14(void *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a2) + 0x80))(*a1);
}

uint64_t (*sub_26143BA6C())()
{
  return j__swift_endAccess;
}

BOOL sub_26143BAC8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t sub_26143BAE0()
{
  if (*v0) {
    return 0xD000000000000015;
  }
  else {
    return 0xD000000000000016;
  }
}

uint64_t sub_26143BB1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_261449240(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_26143BB44(uint64_t a1)
{
  unint64_t v2 = sub_26143BF1C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_26143BB80(uint64_t a1)
{
  unint64_t v2 = sub_26143BF1C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t type metadata accessor for AudioCapture()
{
  return self;
}

id AudioCapture.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return AudioCapture.init(from:)(a1);
}

id AudioCapture.init(from:)(void *a1)
{
  uint64_t v3 = sub_2613C23AC(&qword_26A915538);
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t *)&v1[OBJC_IVAR___AudioCaptureConfig_leftOfStartFrameOffset];
  *(void *)&v1[OBJC_IVAR___AudioCaptureConfig_leftOfStartFrameOffset] = 1;
  uint64_t v7 = (uint64_t *)&v1[OBJC_IVAR___AudioCaptureConfig_rightOfEndFrameOffset];
  *(void *)&v1[OBJC_IVAR___AudioCaptureConfig_rightOfEndFrameOffset] = 8;
  uint64_t v8 = a1[3];
  uint64_t v27 = a1;
  uint64_t v9 = sub_2613DBF24(a1, v8);
  sub_26143BF1C();
  id v10 = v1;
  id v11 = v9;
  uint64_t v12 = v31;
  sub_2614D60D8();
  if (v12)
  {

    sub_2613DD718((uint64_t)v27);
    type metadata accessor for AudioCapture();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v14 = v25;
    uint64_t v13 = v26;
    char v30 = 0;
    uint64_t v15 = sub_2614D5E68();
    if (v16)
    {
      swift_beginAccess();
      uint64_t v17 = *v6;
    }
    else
    {
      uint64_t v17 = v15;
    }
    swift_beginAccess();
    *uint64_t v6 = v17;
    char v29 = 1;
    uint64_t v19 = sub_2614D5E68();
    char v21 = v20;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v13);
    if (v21)
    {
      swift_beginAccess();
      uint64_t v19 = *v7;
    }
    uint64_t v22 = (uint64_t)v27;
    swift_beginAccess();
    *uint64_t v7 = v19;

    char v23 = (objc_class *)type metadata accessor for AudioCapture();
    v28.receiver = v10;
    v28.super_class = v23;
    id v11 = objc_msgSendSuper2(&v28, sel_init);
    sub_2613DD718(v22);
  }
  return v11;
}

unint64_t sub_26143BF1C()
{
  unint64_t result = qword_26A919EA8;
  if (!qword_26A919EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A919EA8);
  }
  return result;
}

uint64_t sub_26143BF70(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2613C23AC(&qword_26A915540);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2613DBF24(a1, a1[3]);
  sub_26143BF1C();
  uint64_t v9 = sub_2614D60F8();
  id v10 = (void *)MEMORY[0x263F8EED0];
  (*(void (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v3) + 0x60))(v9);
  v13[15] = 0;
  uint64_t v11 = sub_2614D5F48();
  if (!v2)
  {
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x78))(v11);
    v13[14] = 1;
    sub_2614D5F48();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

id AudioCapture.__deallocating_deinit()
{
  return sub_2614453D0(type metadata accessor for AudioCapture);
}

uint64_t sub_26143C2E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 144))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_26143C31C()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **v0) + 0x98))();
}

uint64_t sub_26143C3B8()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___DecoderConfig_useChecker);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_26143C44C(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___DecoderConfig_useChecker);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_26143C498@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x78))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_26143C4F8(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a2) + 0x80))(*a1);
}

uint64_t (*sub_26143C550())()
{
  return j_j__swift_endAccess;
}

id sub_26143C5F8()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___DecoderConfig_preKeywordSilence);
  swift_beginAccess();
  uint64_t v2 = *v1;
  return v2;
}

void sub_26143C65C(void *a1)
{
}

uint64_t sub_26143C668@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x90))();
  *a2 = result;
  return result;
}

uint64_t sub_26143C6C4(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x263F8EED0] & **a2) + 0x98))(*a1);
}

uint64_t (*sub_26143C728())()
{
  return j_j__swift_endAccess;
}

id sub_26143C7D0()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___DecoderConfig_duringKeywordSilence);
  swift_beginAccess();
  uint64_t v2 = *v1;
  return v2;
}

void sub_26143C834(void *a1)
{
}

uint64_t sub_26143C840@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0xA8))();
  *a2 = result;
  return result;
}

uint64_t sub_26143C89C(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x263F8EED0] & **a2) + 0xB0))(*a1);
}

uint64_t (*sub_26143C900())()
{
  return j_j__swift_endAccess;
}

id sub_26143C9A8()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___DecoderConfig_postKeywordSilence);
  swift_beginAccess();
  uint64_t v2 = *v1;
  return v2;
}

void sub_26143CA0C(void *a1)
{
}

uint64_t sub_26143CA18@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0xC0))();
  *a2 = result;
  return result;
}

uint64_t sub_26143CA74(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x263F8EED0] & **a2) + 0xC8))(*a1);
}

uint64_t (*sub_26143CAD8())()
{
  return j_j__swift_endAccess;
}

id sub_26143CB80()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___DecoderConfig_audioCapture);
  swift_beginAccess();
  uint64_t v2 = *v1;
  return v2;
}

void sub_26143CBE4(void *a1)
{
}

uint64_t sub_26143CBF0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0xD8))();
  *a2 = result;
  return result;
}

uint64_t sub_26143CC4C(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x263F8EED0] & **a2) + 0xE0))(*a1);
}

uint64_t (*sub_26143CCB0())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_26143CD0C(char a1)
{
  unint64_t result = 0x6B63656843657375;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x7061436F69647561;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_26143CDD4()
{
  return sub_26143CD0C(*v0);
}

uint64_t sub_26143CDDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_261449330(a1, a2);
  *a3 = result;
  return result;
}

void sub_26143CE04(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_26143CE10(uint64_t a1)
{
  unint64_t v2 = sub_26143D628();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_26143CE4C(uint64_t a1)
{
  unint64_t v2 = sub_26143D628();
  return MEMORY[0x270FA00B8](a1, v2);
}

id sub_26143CE88()
{
  v0[OBJC_IVAR___DecoderConfig_useChecker] = 0;
  uint64_t v1 = OBJC_IVAR___DecoderConfig_preKeywordSilence;
  id v2 = objc_allocWithZone((Class)type metadata accessor for PreKeywordSilence());
  uint64_t v3 = v0;
  *(void *)&v0[v1] = objc_msgSend(v2, sel_init);
  uint64_t v4 = OBJC_IVAR___DecoderConfig_duringKeywordSilence;
  *(void *)&v3[v4] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DuringKeywordSilence()), sel_init);
  uint64_t v5 = OBJC_IVAR___DecoderConfig_postKeywordSilence;
  *(void *)&v3[v5] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PostKeywordSilence()), sel_init);
  uint64_t v6 = OBJC_IVAR___DecoderConfig_audioCapture;
  *(void *)&v3[v6] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AudioCapture()), sel_init);

  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for DecoderConfig();
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t type metadata accessor for DecoderConfig()
{
  return self;
}

id DecoderConfig.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return DecoderConfig.init(from:)(a1);
}

id DecoderConfig.init(from:)(void *a1)
{
  uint64_t v3 = sub_2613C23AC(&qword_26A915578);
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t v56 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = &v1[OBJC_IVAR___DecoderConfig_useChecker];
  v1[OBJC_IVAR___DecoderConfig_useChecker] = 0;
  uint64_t v6 = (id *)&v1[OBJC_IVAR___DecoderConfig_preKeywordSilence];
  Class v53 = (Class)type metadata accessor for PreKeywordSilence();
  id v7 = objc_allocWithZone(v53);
  objc_super v8 = v1;
  id v9 = objc_msgSend(v7, sel_init);
  uint64_t v61 = v6;
  *uint64_t v6 = v9;
  id v10 = (id *)&v8[OBJC_IVAR___DecoderConfig_duringKeywordSilence];
  Class v52 = (Class)type metadata accessor for DuringKeywordSilence();
  id v11 = objc_msgSend(objc_allocWithZone(v52), sel_init);
  uint64_t v62 = v10;
  *id v10 = v11;
  uint64_t v12 = (id *)&v8[OBJC_IVAR___DecoderConfig_postKeywordSilence];
  uint64_t v13 = (objc_class *)type metadata accessor for PostKeywordSilence();
  id v14 = objc_msgSend(objc_allocWithZone(v13), sel_init);
  uint64_t v60 = v12;
  id *v12 = v14;
  id v58 = v8;
  uint64_t v15 = (id *)&v8[OBJC_IVAR___DecoderConfig_audioCapture];
  char v16 = (objc_class *)type metadata accessor for AudioCapture();
  id v17 = objc_msgSend(objc_allocWithZone(v16), sel_init);
  uint64_t v57 = v15;
  id *v15 = v17;
  uint64_t v18 = a1[3];
  uint64_t v59 = a1;
  sub_2613DBF24(a1, v18);
  sub_26143D628();
  uint64_t v19 = v73;
  sub_2614D60D8();
  if (v19)
  {
    uint64_t v24 = v61;
    char v23 = v62;
    uint64_t v25 = v58;
    uint64_t v26 = v57;
    uint64_t v27 = v60;
    sub_2613DD718((uint64_t)v59);

    id v28 = *v26;
    type metadata accessor for DecoderConfig();
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v20 = v54;
    uint64_t v73 = v13;
    v51[1] = v16;
    uint64_t v21 = v55;
    char v72 = 0;
    char v22 = sub_2614D5E48();
    if (v22 == 2)
    {
      swift_beginAccess();
      char v30 = *v20;
    }
    else
    {
      char v30 = v22 & 1;
    }
    swift_beginAccess();
    char *v20 = v30;
    char v71 = 1;
    sub_2614393F8(&qword_26A915580, v31, (void (*)(uint64_t))type metadata accessor for PreKeywordSilence);
    sub_2614D5E78();
    uint64_t v32 = v21;
    char v33 = v62;
    id v34 = v70;
    uint64_t v36 = v60;
    uint64_t v35 = v61;
    if (!v70)
    {
      swift_beginAccess();
      id v34 = *v35;
    }
    swift_beginAccess();
    id v37 = *v35;
    id *v35 = v34;

    char v69 = 2;
    sub_2614393F8(&qword_26A915588, v38, (void (*)(uint64_t))type metadata accessor for DuringKeywordSilence);
    sub_2614D5E78();
    id v39 = v68;
    if (!v68)
    {
      swift_beginAccess();
      id v39 = *v33;
    }
    swift_beginAccess();
    id v40 = *v33;
    id *v33 = v39;

    char v67 = 3;
    sub_2614393F8(&qword_26A915590, v41, (void (*)(uint64_t))type metadata accessor for PostKeywordSilence);
    sub_2614D5E78();
    id v42 = v66;
    if (!v66)
    {
      swift_beginAccess();
      id v42 = *v36;
    }
    swift_beginAccess();
    id v43 = *v36;
    id *v36 = v42;

    char v65 = 4;
    sub_2614393F8(&qword_26A915598, v44, (void (*)(uint64_t))type metadata accessor for AudioCapture);
    uint64_t v45 = v56;
    sub_2614D5E78();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v45);
    id v46 = v64;
    if (v64)
    {
      char v48 = v57;
      char v47 = v58;
    }
    else
    {
      char v48 = v57;
      swift_beginAccess();
      id v46 = *v48;
      char v47 = v58;
    }
    swift_beginAccess();
    id v49 = *v48;
    id *v48 = v46;

    uint64_t v50 = (objc_class *)type metadata accessor for DecoderConfig();
    v63.receiver = v47;
    v63.super_class = v50;
    id v28 = objc_msgSendSuper2(&v63, sel_init);
    sub_2613DD718((uint64_t)v59);
  }
  return v28;
}

unint64_t sub_26143D628()
{
  unint64_t result = qword_26A919EB0;
  if (!qword_26A919EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A919EB0);
  }
  return result;
}

uint64_t sub_26143D67C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2613C23AC(&qword_26A9155A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  objc_super v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2613DBF24(a1, a1[3]);
  sub_26143D628();
  uint64_t v9 = sub_2614D60F8();
  id v10 = (void *)MEMORY[0x263F8EED0];
  (*(void (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v3) + 0x78))(v9);
  LOBYTE(v22) = 0;
  uint64_t v11 = sub_2614D5F28();
  if (!v2)
  {
    uint64_t v12 = (void *)(*(uint64_t (**)(uint64_t))((*v10 & *v3) + 0x90))(v11);
    char v22 = v12;
    HIBYTE(v21) = 1;
    type metadata accessor for PreKeywordSilence();
    sub_2614393F8(&qword_26A9154C0, v13, (void (*)(uint64_t))type metadata accessor for PreKeywordSilence);
    sub_2614D5F58();

    id v14 = (void *)(*(uint64_t (**)(void))((*v10 & *v3) + 0xA8))();
    char v22 = v14;
    HIBYTE(v21) = 2;
    type metadata accessor for DuringKeywordSilence();
    sub_2614393F8(&qword_26A9154E8, v15, (void (*)(uint64_t))type metadata accessor for DuringKeywordSilence);
    sub_2614D5F58();

    char v16 = (void *)(*(uint64_t (**)(void))((*v10 & *v3) + 0xC0))();
    char v22 = v16;
    HIBYTE(v21) = 3;
    type metadata accessor for PostKeywordSilence();
    sub_2614393F8(&qword_26A915520, v17, (void (*)(uint64_t))type metadata accessor for PostKeywordSilence);
    sub_2614D5F58();

    uint64_t v18 = (void *)(*(uint64_t (**)(void))((*v10 & *v3) + 0xD8))();
    char v22 = v18;
    HIBYTE(v21) = 4;
    type metadata accessor for AudioCapture();
    sub_2614393F8(&qword_26A915548, v19, (void (*)(uint64_t))type metadata accessor for AudioCapture);
    sub_2614D5F58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id DecoderConfig.__deallocating_deinit()
{
  return sub_2614453D0(type metadata accessor for DecoderConfig);
}

uint64_t sub_26143DCB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 240))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_26143DCEC()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **v0) + 0xF8))();
}

uint64_t sub_26143DDBC()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___NeuralNetworkConfig_modelPath);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_26143DE80(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR___NeuralNetworkConfig_modelPath);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_26143DEE0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x68))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_26143DF3C(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x263F8EED0] & **a2) + 0x70);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t (*sub_26143DFB4())()
{
  return j_j__swift_endAccess;
}

float sub_26143E058()
{
  uint64_t v1 = v0 + OBJC_IVAR___NeuralNetworkConfig_logThreshold;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t sub_26143E0F4(float a1)
{
  uint64_t v3 = (float *)(v1 + OBJC_IVAR___NeuralNetworkConfig_logThreshold);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

void sub_26143E148(void **a1@<X0>, float *a2@<X8>)
{
  *a2 = (*(float (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x80))();
}

uint64_t sub_26143E1A4(float *a1, void **a2)
{
  return (*(uint64_t (**)(float))((*MEMORY[0x263F8EED0] & **a2) + 0x88))(*a1);
}

uint64_t (*sub_26143E1FC())()
{
  return j_j__swift_endAccess;
}

float sub_26143E2A0()
{
  uint64_t v1 = v0 + OBJC_IVAR___NeuralNetworkConfig_logMinimum;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t sub_26143E33C(float a1)
{
  uint64_t v3 = (float *)(v1 + OBJC_IVAR___NeuralNetworkConfig_logMinimum);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

void sub_26143E390(void **a1@<X0>, float *a2@<X8>)
{
  *a2 = (*(float (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x98))();
}

uint64_t sub_26143E3EC(float *a1, void **a2)
{
  return (*(uint64_t (**)(float))((*MEMORY[0x263F8EED0] & **a2) + 0xA0))(*a1);
}

uint64_t (*sub_26143E444())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_26143E4A0()
{
  uint64_t v1 = 0x7365726854676F6CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6D696E694D676F6CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7461506C65646F6DLL;
  }
}

uint64_t sub_26143E50C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_26144955C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_26143E534(uint64_t a1)
{
  unint64_t v2 = sub_26143EA40();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_26143E570(uint64_t a1)
{
  unint64_t v2 = sub_26143EA40();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t type metadata accessor for NeuralNetworkConfig()
{
  return self;
}

id NeuralNetworkConfig.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return NeuralNetworkConfig.init(from:)(a1);
}

id NeuralNetworkConfig.init(from:)(void *a1)
{
  uint64_t v3 = sub_2613C23AC(&qword_26A9155C8);
  uint64_t v28 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = &v1[OBJC_IVAR___NeuralNetworkConfig_modelPath];
  *(void *)uint64_t v6 = 0xD000000000000041;
  *((void *)v6 + 1) = 0x80000002614E3C90;
  uint64_t v31 = (uint64_t *)v6;
  uint64_t v7 = &v1[OBJC_IVAR___NeuralNetworkConfig_logThreshold];
  *(_DWORD *)&v1[OBJC_IVAR___NeuralNetworkConfig_logThreshold] = -1035468800;
  objc_super v8 = &v1[OBJC_IVAR___NeuralNetworkConfig_logMinimum];
  *(_DWORD *)&v1[OBJC_IVAR___NeuralNetworkConfig_logMinimum] = -1027080192;
  uint64_t v9 = a1[3];
  char v29 = a1;
  sub_2613DBF24(a1, v9);
  sub_26143EA40();
  char v30 = v1;
  id v10 = v36;
  sub_2614D60D8();
  if (v10)
  {
    id v16 = v30;
    sub_2613DD718((uint64_t)v29);

    swift_bridgeObjectRelease();
    type metadata accessor for NeuralNetworkConfig();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v11 = v7;
    uint64_t v36 = v8;
    uint64_t v12 = v28;
    char v35 = 0;
    uint64_t v13 = sub_2614D5E38();
    uint64_t v15 = v3;
    uint64_t v18 = v14;
    uint64_t v19 = v31;
    if (v14)
    {
      uint64_t v20 = v13;
    }
    else
    {
      swift_beginAccess();
      uint64_t v20 = *v19;
      uint64_t v18 = v19[1];
      swift_bridgeObjectRetain();
    }
    swift_beginAccess();
    uint64_t *v19 = v20;
    v19[1] = v18;
    swift_bridgeObjectRelease();
    char v34 = 1;
    uint64_t v21 = sub_2614D5E58();
    int v22 = v21;
    if ((v21 & 0x100000000) != 0)
    {
      swift_beginAccess();
      int v22 = *(_DWORD *)v11;
    }
    swift_beginAccess();
    *(_DWORD *)uint64_t v11 = v22;
    char v33 = 2;
    uint64_t v23 = sub_2614D5E58();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v5, v15);
    uint64_t v24 = v36;
    if ((v23 & 0x100000000) != 0)
    {
      swift_beginAccess();
      LODWORD(v23) = *(_DWORD *)v24;
    }
    swift_beginAccess();
    *(_DWORD *)uint64_t v24 = v23;
    uint64_t v25 = v30;

    uint64_t v26 = (objc_class *)type metadata accessor for NeuralNetworkConfig();
    v32.receiver = v25;
    v32.super_class = v26;
    id v16 = objc_msgSendSuper2(&v32, sel_init);
    sub_2613DD718((uint64_t)v29);
  }
  return v16;
}

unint64_t sub_26143EA40()
{
  unint64_t result = qword_26A919EB8;
  if (!qword_26A919EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A919EB8);
  }
  return result;
}

uint64_t sub_26143EA94(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2613C23AC(&qword_26A9155D0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  objc_super v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2613DBF24(a1, a1[3]);
  sub_26143EA40();
  uint64_t v9 = sub_2614D60F8();
  id v10 = (void *)MEMORY[0x263F8EED0];
  (*(void (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v3) + 0x68))(v9);
  v14[15] = 0;
  sub_2614D5F18();
  if (v2)
  {
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x80))(v12);
    v14[14] = 1;
    uint64_t v13 = sub_2614D5F38();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x98))(v13);
    v14[13] = 2;
    sub_2614D5F38();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

id NeuralNetworkConfig.__deallocating_deinit()
{
  return sub_2614453D0(type metadata accessor for NeuralNetworkConfig);
}

uint64_t sub_26143EE9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 176))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_26143EED8()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **v0) + 0xB8))();
}

uint64_t sub_26143EF74()
{
  uint64_t v1 = v0 + OBJC_IVAR___FeatureExtractorConfig_cmvnSlidingWindowLength;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_26143F008(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___FeatureExtractorConfig_cmvnSlidingWindowLength);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_26143F054@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x88))();
  *a2 = result;
  return result;
}

uint64_t sub_26143F0B0(void *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a2) + 0x90))(*a1);
}

uint64_t (*sub_26143F108())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_26143F1AC()
{
  uint64_t v1 = v0 + OBJC_IVAR___FeatureExtractorConfig_cmvnMinWindowLength;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_26143F240(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___FeatureExtractorConfig_cmvnMinWindowLength);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_26143F28C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0xA0))();
  *a2 = result;
  return result;
}

uint64_t sub_26143F2E8(void *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a2) + 0xA8))(*a1);
}

uint64_t (*sub_26143F340())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_26143F3E4()
{
  uint64_t v1 = v0 + OBJC_IVAR___FeatureExtractorConfig_spliceLeftContext;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_26143F478(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___FeatureExtractorConfig_spliceLeftContext);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_26143F4C4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0xB8))();
  *a2 = result;
  return result;
}

uint64_t sub_26143F520(void *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a2) + 0xC0))(*a1);
}

uint64_t (*sub_26143F578())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_26143F61C()
{
  uint64_t v1 = v0 + OBJC_IVAR___FeatureExtractorConfig_spliceRightContext;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_26143F6B0(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___FeatureExtractorConfig_spliceRightContext);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_26143F6FC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0xD0))();
  *a2 = result;
  return result;
}

uint64_t sub_26143F758(void *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a2) + 0xD8))(*a1);
}

uint64_t (*sub_26143F7B0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_26143F854()
{
  uint64_t v1 = v0 + OBJC_IVAR___FeatureExtractorConfig_downSampleStride;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_26143F8E8(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___FeatureExtractorConfig_downSampleStride);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_26143F934@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0xE8))();
  *a2 = result;
  return result;
}

uint64_t sub_26143F990(void *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a2) + 0xF0))(*a1);
}

uint64_t (*sub_26143F9E8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_26143FA8C()
{
  uint64_t v1 = v0 + OBJC_IVAR___FeatureExtractorConfig_nnetIntakeFeatureLength;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_26143FB20(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___FeatureExtractorConfig_nnetIntakeFeatureLength);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_26143FB6C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x100))();
  *a2 = result;
  return result;
}

uint64_t sub_26143FBD0(void *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a2) + 0x108))(*a1);
}

uint64_t (*sub_26143FC30())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_26143FCD4()
{
  uint64_t v1 = v0 + OBJC_IVAR___FeatureExtractorConfig_nnetVectorSize;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_26143FD68(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___FeatureExtractorConfig_nnetVectorSize);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_26143FDB4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x118))();
  *a2 = result;
  return result;
}

uint64_t sub_26143FE18(void *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a2) + 0x120))(*a1);
}

uint64_t (*sub_26143FE78())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_26143FED4(char a1)
{
  unint64_t result = 0xD000000000000017;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0x7463655674656E6ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_26143FFA8()
{
  return sub_26143FED4(*v0);
}

uint64_t sub_26143FFB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2614496E4(a1, a2);
  *a3 = result;
  return result;
}

void sub_26143FFD8(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_26143FFE4(uint64_t a1)
{
  unint64_t v2 = sub_2614406D4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_261440020(uint64_t a1)
{
  unint64_t v2 = sub_2614406D4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t type metadata accessor for FeatureExtractorConfig()
{
  return self;
}

id FeatureExtractorConfig.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return FeatureExtractorConfig.init(from:)(a1);
}

id FeatureExtractorConfig.init(from:)(void *a1)
{
  uint64_t v55 = sub_2613C23AC(&qword_26A915618);
  uint64_t v53 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Class v52 = &v1[OBJC_IVAR___FeatureExtractorConfig_cmvnSlidingWindowLength];
  *(void *)&v1[OBJC_IVAR___FeatureExtractorConfig_cmvnSlidingWindowLength] = 600;
  uint64_t v51 = &v1[OBJC_IVAR___FeatureExtractorConfig_cmvnMinWindowLength];
  *(void *)&v1[OBJC_IVAR___FeatureExtractorConfig_cmvnMinWindowLength] = 24;
  uint64_t v50 = &v1[OBJC_IVAR___FeatureExtractorConfig_spliceLeftContext];
  *(void *)&v1[OBJC_IVAR___FeatureExtractorConfig_spliceLeftContext] = 3;
  id v49 = &v1[OBJC_IVAR___FeatureExtractorConfig_spliceRightContext];
  *(void *)&v1[OBJC_IVAR___FeatureExtractorConfig_spliceRightContext] = 3;
  char v48 = &v1[OBJC_IVAR___FeatureExtractorConfig_downSampleStride];
  *(void *)&v1[OBJC_IVAR___FeatureExtractorConfig_downSampleStride] = 3;
  char v47 = &v1[OBJC_IVAR___FeatureExtractorConfig_nnetIntakeFeatureLength];
  *(void *)&v1[OBJC_IVAR___FeatureExtractorConfig_nnetIntakeFeatureLength] = 8;
  uint64_t v5 = &v1[OBJC_IVAR___FeatureExtractorConfig_nnetVectorSize];
  *(void *)&v1[OBJC_IVAR___FeatureExtractorConfig_nnetVectorSize] = 280;
  uint64_t v6 = a1[3];
  uint64_t v56 = a1;
  sub_2613DBF24(a1, v6);
  sub_2614406D4();
  uint64_t v7 = v1;
  uint64_t v54 = v4;
  objc_super v8 = v65;
  sub_2614D60D8();
  if (v8)
  {

    id v9 = v7;
    sub_2613DD718((uint64_t)v56);
    type metadata accessor for FeatureExtractorConfig();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v11 = (uint64_t *)v51;
    id v10 = v52;
    id v46 = (uint64_t *)v5;
    uint64_t v12 = v53;
    char v65 = v7;
    char v64 = 0;
    uint64_t v14 = v54;
    uint64_t v13 = v55;
    uint64_t v15 = sub_2614D5E68();
    if (v16)
    {
      uint64_t v18 = v10;
      swift_beginAccess();
      uint64_t v17 = *(void *)v10;
    }
    else
    {
      uint64_t v17 = v15;
      uint64_t v18 = v10;
    }
    swift_beginAccess();
    void *v18 = v17;
    char v63 = 1;
    uint64_t v19 = sub_2614D5E68();
    uint64_t v22 = v12;
    if (v20)
    {
      swift_beginAccess();
      uint64_t v23 = *v11;
    }
    else
    {
      uint64_t v23 = v19;
    }
    uint64_t v24 = (uint64_t *)v50;
    swift_beginAccess();
    uint64_t *v11 = v23;
    char v62 = 2;
    uint64_t v25 = sub_2614D5E68();
    if (v26)
    {
      swift_beginAccess();
      uint64_t v27 = *v24;
    }
    else
    {
      uint64_t v27 = v25;
    }
    swift_beginAccess();
    uint64_t *v24 = v27;
    char v61 = 3;
    uint64_t v28 = sub_2614D5E68();
    if (v29)
    {
      uint64_t v31 = (uint64_t *)v49;
      swift_beginAccess();
      uint64_t v30 = *v31;
    }
    else
    {
      uint64_t v30 = v28;
      uint64_t v31 = (uint64_t *)v49;
    }
    swift_beginAccess();
    uint64_t *v31 = v30;
    char v60 = 4;
    uint64_t v32 = sub_2614D5E68();
    if (v33)
    {
      char v35 = (uint64_t *)v48;
      swift_beginAccess();
      uint64_t v34 = *v35;
    }
    else
    {
      uint64_t v34 = v32;
      char v35 = (uint64_t *)v48;
    }
    swift_beginAccess();
    uint64_t *v35 = v34;
    char v59 = 5;
    uint64_t v36 = sub_2614D5E68();
    if (v37)
    {
      id v39 = (uint64_t *)v47;
      swift_beginAccess();
      uint64_t v38 = *v39;
    }
    else
    {
      uint64_t v38 = v36;
      id v39 = (uint64_t *)v47;
    }
    swift_beginAccess();
    uint64_t *v39 = v38;
    char v58 = 6;
    uint64_t v40 = sub_2614D5E68();
    char v42 = v41;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v14, v13);
    id v43 = v46;
    if (v42)
    {
      swift_beginAccess();
      uint64_t v40 = *v43;
    }
    swift_beginAccess();
    uint64_t *v43 = v40;
    uint64_t v44 = v65;

    uint64_t v45 = (objc_class *)type metadata accessor for FeatureExtractorConfig();
    v57.receiver = v44;
    v57.super_class = v45;
    id v9 = objc_msgSendSuper2(&v57, sel_init);
    sub_2613DD718((uint64_t)v56);
  }
  return v9;
}

unint64_t sub_2614406D4()
{
  unint64_t result = qword_26A919EC0;
  if (!qword_26A919EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A919EC0);
  }
  return result;
}

uint64_t sub_261440728(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2613C23AC(&qword_26A915620);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  objc_super v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2613DBF24(a1, a1[3]);
  sub_2614406D4();
  uint64_t v9 = sub_2614D60F8();
  id v10 = (void *)MEMORY[0x263F8EED0];
  (*(void (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v3) + 0x88))(v9);
  v18[15] = 0;
  uint64_t v11 = sub_2614D5F48();
  if (!v2)
  {
    (*(void (**)(uint64_t))((*v10 & *v3) + 0xA0))(v11);
    v18[14] = 1;
    uint64_t v12 = sub_2614D5F48();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0xB8))(v12);
    v18[13] = 2;
    uint64_t v13 = sub_2614D5F48();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0xD0))(v13);
    v18[12] = 3;
    uint64_t v14 = sub_2614D5F48();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0xE8))(v14);
    v18[11] = 4;
    uint64_t v15 = sub_2614D5F48();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x100))(v15);
    v18[10] = 5;
    uint64_t v16 = sub_2614D5F48();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x118))(v16);
    v18[9] = 6;
    sub_2614D5F48();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

id FeatureExtractorConfig.__deallocating_deinit()
{
  return sub_2614453D0(type metadata accessor for FeatureExtractorConfig);
}

uint64_t sub_261440C4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 304))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_261440C88()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **v0) + 0x138))();
}

uint64_t sub_261440D2C()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___RuntimeConfig_audioDebug);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_261440DC0(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___RuntimeConfig_audioDebug);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_261440E0C@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x80))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_261440E6C(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a2) + 0x88))(*a1);
}

uint64_t (*sub_261440EC4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_261440F68()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___RuntimeConfig_batchDecode);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_261440FFC(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___RuntimeConfig_batchDecode);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_261441048@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x98))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_2614410A8(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a2) + 0xA0))(*a1);
}

uint64_t (*sub_261441100())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2614411A4()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___RuntimeConfig_preKeywordSilence);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_261441238(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___RuntimeConfig_preKeywordSilence);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_261441284@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0xB0))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_2614412E4(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a2) + 0xB8))(*a1);
}

uint64_t (*sub_26144133C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2614413E0()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___RuntimeConfig_duringKeywordSilence);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_261441474(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___RuntimeConfig_duringKeywordSilence);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_2614414C0@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0xC8))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_261441520(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a2) + 0xD0))(*a1);
}

uint64_t (*sub_261441578())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_26144161C()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___RuntimeConfig_postKeywordSilence);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_2614416B0(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___RuntimeConfig_postKeywordSilence);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_2614416FC@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0xE0))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_26144175C(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a2) + 0xE8))(*a1);
}

uint64_t (*sub_2614417B4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_261441858()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___RuntimeConfig_secondPass);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_2614418EC(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___RuntimeConfig_secondPass);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_261441938@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0xF8))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_261441998(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a2) + 0x100))(*a1);
}

uint64_t (*sub_2614419F8())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_261441A54(char a1)
{
  unint64_t result = 0x6265446F69647561;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6365446863746162;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0x6150646E6F636573;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_261441B38()
{
  return sub_261441A54(*v0);
}

uint64_t sub_261441B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2614499B4(a1, a2);
  *a3 = result;
  return result;
}

void sub_261441B68(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_261441B74(uint64_t a1)
{
  unint64_t v2 = sub_2614421A8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_261441BB0(uint64_t a1)
{
  unint64_t v2 = sub_2614421A8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t type metadata accessor for RuntimeConfig()
{
  return self;
}

id RuntimeConfig.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return RuntimeConfig.init(from:)(a1);
}

id RuntimeConfig.init(from:)(void *a1)
{
  uint64_t v46 = sub_2613C23AC(&qword_26A915660);
  uint64_t v44 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v43 = &v1[OBJC_IVAR___RuntimeConfig_audioDebug];
  v1[OBJC_IVAR___RuntimeConfig_audioDebug] = 0;
  char v42 = &v1[OBJC_IVAR___RuntimeConfig_batchDecode];
  v1[OBJC_IVAR___RuntimeConfig_batchDecode] = 0;
  char v41 = &v1[OBJC_IVAR___RuntimeConfig_preKeywordSilence];
  v1[OBJC_IVAR___RuntimeConfig_preKeywordSilence] = 1;
  uint64_t v5 = &v1[OBJC_IVAR___RuntimeConfig_duringKeywordSilence];
  char *v5 = 1;
  id v39 = &v1[OBJC_IVAR___RuntimeConfig_postKeywordSilence];
  uint64_t v40 = v5;
  v1[OBJC_IVAR___RuntimeConfig_postKeywordSilence] = 0;
  uint64_t v6 = &v1[OBJC_IVAR___RuntimeConfig_secondPass];
  v1[OBJC_IVAR___RuntimeConfig_secondPass] = 0;
  uint64_t v7 = a1[3];
  char v47 = a1;
  sub_2613DBF24(a1, v7);
  sub_2614421A8();
  objc_super v8 = v1;
  uint64_t v45 = v4;
  id v9 = v54;
  sub_2614D60D8();
  if (v9)
  {

    id v10 = v8;
    sub_2613DD718((uint64_t)v47);
    type metadata accessor for RuntimeConfig();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v12 = v42;
    uint64_t v11 = v43;
    uint64_t v38 = v6;
    uint64_t v13 = v44;
    id v54 = v8;
    char v53 = 0;
    uint64_t v15 = v45;
    uint64_t v14 = v46;
    char v16 = sub_2614D5E48();
    if (v16 == 2)
    {
      uint64_t v17 = v11;
      swift_beginAccess();
      char v18 = *v11;
    }
    else
    {
      char v18 = v16 & 1;
      uint64_t v17 = v11;
    }
    swift_beginAccess();
    unsigned char *v17 = v18;
    char v52 = 1;
    char v19 = sub_2614D5E48();
    if (v19 == 2)
    {
      uint64_t v21 = v12;
      swift_beginAccess();
      char v22 = *v12;
      uint64_t v23 = v13;
      uint64_t v24 = v21;
      uint64_t v25 = v41;
    }
    else
    {
      char v22 = v19 & 1;
      uint64_t v26 = v13;
      uint64_t v25 = v41;
      uint64_t v24 = v12;
      uint64_t v23 = v26;
    }
    swift_beginAccess();
    unsigned char *v24 = v22;
    char v51 = 2;
    char v27 = sub_2614D5E48();
    if (v27 == 2)
    {
      swift_beginAccess();
      char v28 = *v25;
    }
    else
    {
      char v28 = v27 & 1;
    }
    swift_beginAccess();
    char *v25 = v28;
    char v50 = 3;
    char v29 = sub_2614D5E48();
    if (v29 == 2)
    {
      uint64_t v30 = v40;
      swift_beginAccess();
      char v31 = *v30;
    }
    else
    {
      char v31 = v29 & 1;
      uint64_t v30 = v40;
    }
    swift_beginAccess();
    char *v30 = v31;
    char v49 = 4;
    char v32 = sub_2614D5E48();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v14);
    char v33 = v38;
    uint64_t v34 = v39;
    if (v32 == 2)
    {
      swift_beginAccess();
      char v35 = *v34;
    }
    else
    {
      char v35 = v32 & 1;
    }
    swift_beginAccess();
    char *v34 = v35;
    swift_beginAccess();
    unsigned char *v33 = 0;
    id v36 = v54;

    char v37 = (objc_class *)type metadata accessor for RuntimeConfig();
    v48.receiver = v36;
    v48.super_class = v37;
    id v10 = objc_msgSendSuper2(&v48, sel_init);
    sub_2613DD718((uint64_t)v47);
  }
  return v10;
}

unint64_t sub_2614421A8()
{
  unint64_t result = qword_26A919EC8;
  if (!qword_26A919EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A919EC8);
  }
  return result;
}

uint64_t sub_2614421FC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2613C23AC(&qword_26A915668);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  objc_super v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2613DBF24(a1, a1[3]);
  sub_2614421A8();
  uint64_t v9 = sub_2614D60F8();
  id v10 = (void *)MEMORY[0x263F8EED0];
  (*(void (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v3) + 0x80))(v9);
  v17[15] = 0;
  uint64_t v11 = sub_2614D5F28();
  if (!v2)
  {
    (*(void (**)(uint64_t))((*v10 & *v3) + 0x98))(v11);
    v17[14] = 1;
    uint64_t v12 = sub_2614D5F28();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0xB0))(v12);
    v17[13] = 2;
    uint64_t v13 = sub_2614D5F28();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0xC8))(v13);
    v17[12] = 3;
    uint64_t v14 = sub_2614D5F28();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0xE0))(v14);
    v17[11] = 4;
    uint64_t v15 = sub_2614D5F28();
    (*(void (**)(uint64_t))((*v10 & *v3) + 0xF8))(v15);
    v17[10] = 5;
    sub_2614D5F28();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

id RuntimeConfig.__deallocating_deinit()
{
  return sub_2614453D0(type metadata accessor for RuntimeConfig);
}

uint64_t sub_2614426D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 272))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_261442710()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **v0) + 0x118))();
}

uint64_t sub_26144276C()
{
  sub_261405618(0, (unint64_t *)&qword_26A9152B0);
  uint64_t result = OS_os_log.init(category:)();
  qword_26A9201A0 = result;
  return result;
}

id sub_261442870()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___VATConfiguration_neuralNetwork);
  swift_beginAccess();
  uint64_t v2 = *v1;
  return v2;
}

void sub_2614428D4(void *a1)
{
}

uint64_t sub_2614428E0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x78))();
  *a2 = result;
  return result;
}

uint64_t sub_26144293C(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x263F8EED0] & **a2) + 0x80))(*a1);
}

uint64_t (*sub_2614429A0())()
{
  return j_j__swift_endAccess;
}

id sub_261442A48()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___VATConfiguration_featureExtractor);
  swift_beginAccess();
  uint64_t v2 = *v1;
  return v2;
}

void sub_261442AAC(void *a1)
{
}

uint64_t sub_261442AB8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x90))();
  *a2 = result;
  return result;
}

uint64_t sub_261442B14(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x263F8EED0] & **a2) + 0x98))(*a1);
}

uint64_t (*sub_261442B78())()
{
  return j_j__swift_endAccess;
}

id sub_261442C20()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___VATConfiguration_decoder);
  swift_beginAccess();
  uint64_t v2 = *v1;
  return v2;
}

void sub_261442C84(void *a1)
{
}

uint64_t sub_261442C90@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0xA8))();
  *a2 = result;
  return result;
}

uint64_t sub_261442CEC(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x263F8EED0] & **a2) + 0xB0))(*a1);
}

uint64_t (*sub_261442D50())()
{
  return j_j__swift_endAccess;
}

id sub_261442DF8()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___VATConfiguration_secondPass);
  swift_beginAccess();
  uint64_t v2 = *v1;
  return v2;
}

void sub_261442E5C(void *a1)
{
}

uint64_t sub_261442E68@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0xC0))();
  *a2 = result;
  return result;
}

uint64_t sub_261442EC4(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x263F8EED0] & **a2) + 0xC8))(*a1);
}

uint64_t (*sub_261442F28())()
{
  return j_j__swift_endAccess;
}

id sub_261442FD0()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___VATConfiguration_runtime);
  swift_beginAccess();
  uint64_t v2 = *v1;
  return v2;
}

void sub_261443034(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v5 = (void **)(a1 + *a4);
  swift_beginAccess();
  uint64_t v6 = *v5;
  char *v5 = a3;
  id v7 = a3;
}

void sub_261443090(void *a1)
{
}

void sub_26144309C(void *a1, void *a2)
{
  uint64_t v4 = (void **)(v2 + *a2);
  swift_beginAccess();
  uint64_t v5 = *v4;
  *uint64_t v4 = a1;
}

uint64_t sub_2614430EC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0xD8))();
  *a2 = result;
  return result;
}

uint64_t sub_261443148(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x263F8EED0] & **a2) + 0xE0))(*a1);
}

uint64_t (*sub_2614431AC())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_261443208()
{
  unint64_t result = 0x654E6C617275656ELL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x7265646F636564;
      break;
    case 3:
      unint64_t result = 0x6150646E6F636573;
      break;
    case 4:
      unint64_t result = 0x656D69746E7572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2614432C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_261449C40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2614432F0(uint64_t a1)
{
  unint64_t v2 = sub_261443BA4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_26144332C(uint64_t a1)
{
  unint64_t v2 = sub_261443BA4();
  return MEMORY[0x270FA00B8](a1, v2);
}

id sub_261443368()
{
  uint64_t v1 = OBJC_IVAR___VATConfiguration_neuralNetwork;
  id v2 = objc_allocWithZone((Class)type metadata accessor for NeuralNetworkConfig());
  uint64_t v3 = v0;
  *(void *)&v0[v1] = objc_msgSend(v2, sel_init);
  uint64_t v4 = OBJC_IVAR___VATConfiguration_featureExtractor;
  *(void *)&v3[v4] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeatureExtractorConfig()), sel_init);
  uint64_t v5 = OBJC_IVAR___VATConfiguration_decoder;
  *(void *)&v3[v5] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DecoderConfig()), sel_init);
  uint64_t v6 = OBJC_IVAR___VATConfiguration_secondPass;
  *(void *)&v3[v6] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SecondPassConfig()), sel_init);
  uint64_t v7 = OBJC_IVAR___VATConfiguration_runtime;
  *(void *)&v3[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RuntimeConfig()), sel_init);

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for VATConfiguration();
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t type metadata accessor for VATConfiguration()
{
  return self;
}

id VATConfiguration.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return VATConfiguration.init(from:)(a1);
}

id VATConfiguration.init(from:)(void *a1)
{
  uint64_t v58 = sub_2613C23AC(&qword_26A9156A0);
  uint64_t v56 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v4 = (objc_class *)((char *)v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = (id *)&v1[OBJC_IVAR___VATConfiguration_neuralNetwork];
  Class v57 = (Class)type metadata accessor for NeuralNetworkConfig();
  id v6 = objc_allocWithZone(v57);
  uint64_t v7 = v1;
  id v8 = objc_msgSend(v6, sel_init);
  char v64 = v5;
  id *v5 = v8;
  objc_super v9 = (id *)&v7[OBJC_IVAR___VATConfiguration_featureExtractor];
  Class v55 = (Class)type metadata accessor for FeatureExtractorConfig();
  id v10 = objc_msgSend(objc_allocWithZone(v55), sel_init);
  char v63 = v9;
  *objc_super v9 = v10;
  uint64_t v11 = (id *)&v7[OBJC_IVAR___VATConfiguration_decoder];
  uint64_t v12 = (objc_class *)type metadata accessor for DecoderConfig();
  id v13 = objc_msgSend(objc_allocWithZone(v12), sel_init);
  char v62 = v11;
  id *v11 = v13;
  uint64_t v14 = (id *)&v7[OBJC_IVAR___VATConfiguration_secondPass];
  uint64_t v15 = (objc_class *)type metadata accessor for SecondPassConfig();
  id v16 = objc_msgSend(objc_allocWithZone(v15), sel_init);
  uint64_t v77 = v14;
  id *v14 = v16;
  char v59 = v7;
  uint64_t v17 = (id *)&v7[OBJC_IVAR___VATConfiguration_runtime];
  char v18 = (objc_class *)type metadata accessor for RuntimeConfig();
  id v19 = objc_msgSend(objc_allocWithZone(v18), sel_init);
  char v60 = v17;
  char v61 = a1;
  id *v17 = v19;
  sub_2613DBF24(a1, a1[3]);
  sub_261443BA4();
  char v20 = v65;
  sub_2614D60D8();
  if (v20)
  {
    uint64_t v24 = v64;
    uint64_t v25 = v60;
    char v27 = v62;
    uint64_t v26 = v63;
    char v28 = v59;
    char v29 = v77;
    sub_2613DD718((uint64_t)v61);

    id v30 = *v25;
    type metadata accessor for VATConfiguration();
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v65 = v12;
    v54[0] = v18;
    v54[1] = v15;
    uint64_t v22 = v56;
    char v76 = 0;
    sub_2614393F8(&qword_26A9156A8, v21, (void (*)(uint64_t))type metadata accessor for NeuralNetworkConfig);
    uint64_t v23 = v58;
    sub_2614D5E78();
    id v32 = v75;
    Class v57 = v4;
    char v33 = v64;
    if (!v75)
    {
      swift_beginAccess();
      id v32 = *v33;
    }
    swift_beginAccess();
    id v34 = *v33;
    id *v33 = v32;

    char v74 = 1;
    sub_2614393F8(&qword_26A9156B0, v35, (void (*)(uint64_t))type metadata accessor for FeatureExtractorConfig);
    sub_2614D5E78();
    id v36 = v73;
    uint64_t v38 = v62;
    char v37 = v63;
    if (!v73)
    {
      swift_beginAccess();
      id v36 = *v37;
    }
    swift_beginAccess();
    id v39 = *v37;
    *char v37 = v36;

    char v72 = 2;
    sub_2614393F8(&qword_26A9156B8, v40, (void (*)(uint64_t))type metadata accessor for DecoderConfig);
    sub_2614D5E78();
    id v41 = v71;
    if (!v71)
    {
      swift_beginAccess();
      id v41 = *v38;
    }
    swift_beginAccess();
    id v42 = *v38;
    id *v38 = v41;

    char v70 = 3;
    sub_2614393F8(&qword_26A9156C0, v43, (void (*)(uint64_t))type metadata accessor for SecondPassConfig);
    sub_2614D5E78();
    char v65 = v69;
    uint64_t v44 = v77;
    if (!v69)
    {
      swift_beginAccess();
      char v65 = (objc_class *)*v44;
    }
    swift_beginAccess();
    id v45 = *v44;
    id *v44 = v65;

    char v68 = 4;
    sub_2614393F8(&qword_26A9156C8, v46, (void (*)(uint64_t))type metadata accessor for RuntimeConfig);
    Class v47 = v57;
    sub_2614D5E78();
    (*(void (**)(Class, uint64_t))(v22 + 8))(v47, v23);
    id v48 = v67;
    if (v67)
    {
      char v49 = &selRef_tokenName;
      char v50 = v60;
    }
    else
    {
      char v50 = v60;
      swift_beginAccess();
      id v48 = *v50;
      char v49 = &selRef_tokenName;
    }
    swift_beginAccess();
    id v51 = *v50;
    id *v50 = v48;
    char v52 = v59;

    char v53 = (objc_class *)type metadata accessor for VATConfiguration();
    v66.receiver = v52;
    v66.super_class = v53;
    id v30 = objc_msgSendSuper2(&v66, v49[94]);
    sub_2613DD718((uint64_t)v61);
  }
  return v30;
}

unint64_t sub_261443BA4()
{
  unint64_t result = qword_26A919ED0[0];
  if (!qword_26A919ED0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A919ED0);
  }
  return result;
}

uint64_t sub_261443BF8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2613C23AC(&qword_26A9156D0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2613DBF24(a1, a1[3]);
  sub_261443BA4();
  uint64_t v9 = sub_2614D60F8();
  id v10 = (void *)MEMORY[0x263F8EED0];
  uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v3) + 0x78))(v9);
  uint64_t v23 = v11;
  HIBYTE(v22) = 0;
  type metadata accessor for NeuralNetworkConfig();
  sub_2614393F8(&qword_26A9155D8, v12, (void (*)(uint64_t))type metadata accessor for NeuralNetworkConfig);
  sub_2614D5F58();
  if (v2)
  {
  }
  else
  {

    id v13 = (void *)(*(uint64_t (**)(void))((*v10 & *v3) + 0x90))();
    uint64_t v23 = v13;
    HIBYTE(v22) = 1;
    type metadata accessor for FeatureExtractorConfig();
    sub_2614393F8(&qword_26A915628, v14, (void (*)(uint64_t))type metadata accessor for FeatureExtractorConfig);
    sub_2614D5F58();

    id v16 = (void *)(*(uint64_t (**)(void))((*v10 & *v3) + 0xA8))();
    uint64_t v23 = v16;
    HIBYTE(v22) = 2;
    type metadata accessor for DecoderConfig();
    sub_2614393F8(&qword_26A9155A8, v17, (void (*)(uint64_t))type metadata accessor for DecoderConfig);
    sub_2614D5F58();

    char v18 = (void *)(*(uint64_t (**)(void))((*v10 & *v3) + 0xC0))();
    uint64_t v23 = v18;
    HIBYTE(v22) = 3;
    type metadata accessor for SecondPassConfig();
    sub_2614393F8(&qword_26A915490, v19, (void (*)(uint64_t))type metadata accessor for SecondPassConfig);
    sub_2614D5F58();

    char v20 = (void *)(*(uint64_t (**)(void))((*v10 & *v3) + 0xD8))();
    uint64_t v23 = v20;
    HIBYTE(v22) = 4;
    type metadata accessor for RuntimeConfig();
    sub_2614393F8(&qword_26A915670, v21, (void (*)(uint64_t))type metadata accessor for RuntimeConfig);
    sub_2614D5F58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id *VATConfiguration.__allocating_init(filename:)(uint64_t a1, unint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return VATConfiguration.init(filename:)(a1, a2);
}

id *VATConfiguration.init(filename:)(uint64_t a1, unint64_t a2)
{
  id v5 = (id *)&v2[OBJC_IVAR___VATConfiguration_neuralNetwork];
  id v54 = (objc_class *)type metadata accessor for NeuralNetworkConfig();
  id v6 = objc_allocWithZone(v54);
  uint64_t v7 = v2;
  id *v5 = objc_msgSend(v6, sel_init);
  id v8 = (id *)&v7[OBJC_IVAR___VATConfiguration_featureExtractor];
  Class v55 = (objc_class *)type metadata accessor for FeatureExtractorConfig();
  *id v8 = objc_msgSend(objc_allocWithZone(v55), sel_init);
  uint64_t v9 = (id *)&v7[OBJC_IVAR___VATConfiguration_decoder];
  uint64_t v56 = (objc_class *)type metadata accessor for DecoderConfig();
  *uint64_t v9 = objc_msgSend(objc_allocWithZone(v56), sel_init);
  id v10 = (id *)&v7[OBJC_IVAR___VATConfiguration_secondPass];
  Class v57 = (objc_class *)type metadata accessor for SecondPassConfig();
  *id v10 = objc_msgSend(objc_allocWithZone(v57), sel_init);
  uint64_t v11 = (void **)&v7[OBJC_IVAR___VATConfiguration_runtime];
  uint64_t v58 = (objc_class *)type metadata accessor for RuntimeConfig();
  void *v11 = objc_msgSend(objc_allocWithZone(v58), sel_init);
  uint64_t v59 = a1;
  unint64_t v12 = sub_26144480C(a1, a2);
  id v13 = (void *)v12;
  if ((v14 & 1) == 0)
  {
    uint64_t v15 = swift_bridgeObjectRelease();
    id v16 = (void *)MEMORY[0x263F8EED0];
    uint64_t v17 = v11;
    uint64_t v18 = (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v13) + 0x78))(v15);
    swift_beginAccess();
    id v19 = *v5;
    id *v5 = (id)v18;

    uint64_t v20 = (*(uint64_t (**)(void))((*v16 & *v13) + 0x90))();
    swift_beginAccess();
    id v21 = *v8;
    *id v8 = (id)v20;

    uint64_t v22 = (*(uint64_t (**)(void))((*v16 & *v13) + 0xA8))();
    swift_beginAccess();
    id v23 = *v9;
    *uint64_t v9 = (id)v22;

    uint64_t v24 = (*(uint64_t (**)(void))((*v16 & *v13) + 0xC0))();
    swift_beginAccess();
    id v25 = *v10;
    *id v10 = (id)v24;

    uint64_t v26 = (*(uint64_t (**)(void))((*v16 & *v13) + 0xD8))();
    swift_beginAccess();
    char v27 = *v17;
    id *v17 = (void *)v26;

    v60.receiver = v7;
    v60.super_class = (Class)type metadata accessor for VATConfiguration();
    id v8 = (id *)objc_msgSendSuper2(&v60, sel_init);
    sub_261444C6C((unint64_t)v13, 0);
    return v8;
  }
  id v51 = v5;
  char v52 = v9;
  char v53 = v10;
  if (v12 != 0x8000000000000000)
  {
    char v28 = v11;
    if (qword_26A919E80 != -1) {
      swift_once();
    }
    sub_2613C23AC(qword_26A914E40);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_2614D81F0;
    *(void *)(v30 + 56) = MEMORY[0x263F8D310];
    *(void *)(v30 + 64) = sub_26141EFD8();
    uint64_t v31 = 0x3E6C696E3CLL;
    if (a2) {
      uint64_t v31 = v59;
    }
    unint64_t v32 = 0xE500000000000000;
    if (a2) {
      unint64_t v32 = a2;
    }
    *(void *)(v30 + 32) = v31;
    *(void *)(v30 + 40) = v32;
    sub_2613DD918();
    char v33 = (void *)swift_allocError();
    void *v34 = v13;
    sub_261444C50((unint64_t)v13);
    uint64_t v35 = sub_2614D4BE8();
    *(void *)(v30 + 96) = sub_261405618(0, &qword_26A915258);
    *(void *)(v30 + 104) = sub_26141F02C();
    *(void *)(v30 + 72) = v35;

    OS_os_log.error(_:_:)((uint64_t)"Error parsing %@: %@", 20, 2, v30);
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (a2)
  {
    char v28 = v11;
    if (qword_26A919E80 != -1) {
      swift_once();
    }
    sub_2613C23AC(qword_26A914E40);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_2614D81E0;
    *(void *)(v29 + 56) = MEMORY[0x263F8D310];
    *(void *)(v29 + 64) = sub_26141EFD8();
    *(void *)(v29 + 32) = v59;
    *(void *)(v29 + 40) = a2;
    OS_os_log.error(_:_:)((uint64_t)"Custom config file not found, using defaults: %@", 48, 2, v29);
    swift_bridgeObjectRelease();
    id v13 = (void *)0x8000000000000000;
    sub_2613DD918();
LABEL_15:
    swift_allocError();
    void *v36 = v13;
    swift_willThrow();

    char v37 = *v28;
    type metadata accessor for VATConfiguration();
    swift_deallocPartialClassInstance();
    return v8;
  }
  id v39 = v11;
  if (qword_26A919E80 != -1) {
    swift_once();
  }
  sub_2613C23AC(qword_26A914E40);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_2614D81E0;
  *(void *)(v40 + 56) = MEMORY[0x263F8D310];
  *(void *)(v40 + 64) = sub_26141EFD8();
  *(void *)(v40 + 32) = 0x3E6C696E3CLL;
  *(void *)(v40 + 40) = 0xE500000000000000;
  OS_os_log.error(_:_:)((uint64_t)"Default Config file not found, using defaults: %@", 49, 2, v40);
  swift_bridgeObjectRelease();
  id v41 = objc_msgSend(objc_allocWithZone(v54), sel_init);
  swift_beginAccess();
  id v42 = *v51;
  char *v51 = v41;

  id v43 = objc_msgSend(objc_allocWithZone(v55), sel_init);
  swift_beginAccess();
  id v44 = *v8;
  *id v8 = v43;

  id v45 = objc_msgSend(objc_allocWithZone(v56), sel_init);
  swift_beginAccess();
  id v46 = *v9;
  *uint64_t v9 = v45;

  id v47 = objc_msgSend(objc_allocWithZone(v57), sel_init);
  swift_beginAccess();
  id v48 = *v10;
  *id v10 = v47;

  id v49 = objc_msgSend(objc_allocWithZone(v58), sel_init);
  swift_beginAccess();
  char v50 = *v39;
  char *v39 = v49;

  v61.receiver = v7;
  v61.super_class = (Class)type metadata accessor for VATConfiguration();
  return (id *)objc_msgSendSuper2(&v61, sel_init);
}

unint64_t sub_26144480C(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_2614D4C78();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  id v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v10 = (char *)v26 - v9;
  type metadata accessor for VATConfiguration();
  if (!a2) {
    goto LABEL_7;
  }
  uint64_t v11 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v11 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v11)
  {
LABEL_7:
    uint64_t v15 = (void *)sub_2614D5378();
    id v16 = objc_msgSend(v15, sel_stringByDeletingPathExtension);

    sub_2614D53A8();
    sub_2614D4C28();
    sub_2614D4C18();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    sub_261419E08();
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v18)
    {
      sub_2614D4C28();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    if (qword_26A919E80 != -1) {
      swift_once();
    }
    sub_2613C23AC(qword_26A914E40);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_2614D81E0;
    *(void *)(v19 + 56) = MEMORY[0x263F8D310];
    *(void *)(v19 + 64) = sub_26141EFD8();
    *(void *)(v19 + 32) = 0x6A2E6769666E6F63;
    *(void *)(v19 + 40) = 0xEB000000006E6F73;
    OS_os_log.error(_:_:)((uint64_t)"File not found: %@", 18, 2, v19);
    swift_bridgeObjectRelease();
    return 0x8000000000000000;
  }
  id v12 = objc_msgSend(self, sel_defaultManager);
  id v13 = (void *)sub_2614D5378();
  unsigned __int8 v14 = objc_msgSend(v12, sel_isReadableFileAtPath_, v13);

  if ((v14 & 1) == 0) {
    return 0x8000000000000000;
  }
  sub_2614D4C28();
LABEL_9:
  uint64_t v20 = sub_2614D4C88();
  unint64_t v22 = v21;
  sub_2614D4A78();
  swift_allocObject();
  sub_2613C22A8(v20, v22);
  sub_2614D4A68();
  sub_2614393F8(&qword_26A9156E0, v23, (void (*)(uint64_t))type metadata accessor for VATConfiguration);
  sub_2614D4A58();
  swift_release();
  sub_2613C2314(v20, v22);
  sub_2613C2314(v20, v22);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return v26[2];
}

unint64_t sub_261444C50(unint64_t result)
{
  if (result >> 62)
  {
    if (result >> 62 != 1) {
      return result;
    }
    result &= 0x3FFFFFFFFFFFFFFFuLL;
  }
  return (unint64_t)(id)result;
}

void sub_261444C6C(unint64_t a1, char a2)
{
  if (a2) {
    sub_2613FA5D8(a1);
  }
  else {
}
  }

void sub_261444D08(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)MEMORY[0x263F8EED0];
  uint64_t v6 = *(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v2) + 0x78);
  uint64_t v7 = (void *)v6();
  (*(void (**)(void))((*v5 & *v7) + 0x68))();

  id v8 = (void *)v6();
  swift_bridgeObjectRetain();
  sub_2614D54D8();
  swift_bridgeObjectRetain();
  sub_2614D54D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))((*v5 & *v8) + 0x70))(a1, a2);
}

uint64_t sub_261445068()
{
  sub_2614D4AE8();
  swift_allocObject();
  sub_2614D4AD8();
  type metadata accessor for VATConfiguration();
  sub_2614393F8(&qword_26A9156D8, v0, (void (*)(uint64_t))type metadata accessor for VATConfiguration);
  uint64_t v1 = sub_2614D4AC8();
  unint64_t v3 = v2;
  swift_release();
  uint64_t v4 = sub_261445190();
  if (v5)
  {
    uint64_t v6 = v4;
    sub_2613C2314(v1, v3);
  }
  else
  {
    sub_2613C2314(v1, v3);
    return 0x3E6C696E3CLL;
  }
  return v6;
}

uint64_t sub_261445190()
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v0 = sub_2614D5408();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = self;
  unint64_t v2 = (void *)sub_2614D4C98();
  *(void *)&long long v20 = 0;
  id v3 = objc_msgSend(v1, sel_JSONObjectWithData_options_error_, v2, 0, &v20);

  id v4 = (id)v20;
  if (!v3)
  {
    uint64_t v15 = v4;
    id v16 = (void *)sub_2614D4BF8();

    swift_willThrow();
    return 0;
  }
  sub_2614D5BE8();
  swift_unknownObjectRelease();
  sub_261409630(v19, &v20);
  sub_2613DBF24(&v20, v21);
  uint64_t v5 = sub_2614D5FA8();
  *(void *)&v19[0] = 0;
  id v6 = objc_msgSend(v1, sel_dataWithJSONObject_options_error_, v5, 9, v19);
  swift_unknownObjectRelease();
  id v7 = *(id *)&v19[0];
  if (!v6)
  {
    uint64_t v17 = v7;
    uint64_t v18 = (void *)sub_2614D4BF8();

    swift_willThrow();
    sub_2613DD718((uint64_t)&v20);
    return 0;
  }
  uint64_t v8 = sub_2614D4CA8();
  unint64_t v10 = v9;

  sub_2614D53F8();
  uint64_t v11 = sub_2614D53C8();
  uint64_t v13 = v12;
  sub_2613C2314(v8, v10);
  sub_2613DD718((uint64_t)&v20);
  if (v13) {
    return v11;
  }
  else {
    return 0;
  }
}

id VATConfiguration.__deallocating_deinit()
{
  return sub_2614453D0(type metadata accessor for VATConfiguration);
}

id sub_2614453D0(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_261445484@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 240))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_2614454C0()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **v0) + 0xF8))();
}

uint64_t _s14JSONParseErrorOMa()
{
  return sub_261449E88();
}

unint64_t *initializeBufferWithCopyOfBuffer for JSONParseError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_261444C50(*a2);
  *a1 = v3;
  return a1;
}

void destroy for JSONParseError(unint64_t *a1)
{
}

unint64_t *assignWithCopy for JSONParseError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_261444C50(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_2613FA5D8(v4);
  return a1;
}

unint64_t *assignWithTake for JSONParseError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_2613FA5D8(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONParseError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for JSONParseError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)uint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_261445684(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

void *sub_2614456A0(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_2614456B0(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 2);
    unint64_t v3 = 0x8000000000000000;
  }
  *uint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for JSONParseError()
{
  return &type metadata for JSONParseError;
}

uint64_t method lookup function for SecondPassConfig(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SecondPassConfig);
}

uint64_t dispatch thunk of SecondPassConfig.waitForFinal.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of SecondPassConfig.waitForFinal.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of SecondPassConfig.waitForFinal.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SecondPassConfig.useEndpointer.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of SecondPassConfig.useEndpointer.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of SecondPassConfig.useEndpointer.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of SecondPassConfig.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of SecondPassConfig.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t method lookup function for PreKeywordSilence(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PreKeywordSilence);
}

uint64_t dispatch thunk of PreKeywordSilence.lookbackFrames.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of PreKeywordSilence.lookbackFrames.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of PreKeywordSilence.lookbackFrames.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of PreKeywordSilence.minSilenceInLookbackFrames.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of PreKeywordSilence.minSilenceInLookbackFrames.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of PreKeywordSilence.minSilenceInLookbackFrames.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of PreKeywordSilence.silenceProbability.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of PreKeywordSilence.silenceProbability.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of PreKeywordSilence.silenceProbability.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of PreKeywordSilence.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of PreKeywordSilence.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t method lookup function for DuringKeywordSilence(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DuringKeywordSilence);
}

uint64_t dispatch thunk of DuringKeywordSilence.minPercentageOfNonSilenceFrames.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of DuringKeywordSilence.minPercentageOfNonSilenceFrames.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of DuringKeywordSilence.minPercentageOfNonSilenceFrames.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of DuringKeywordSilence.silenceProbability.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of DuringKeywordSilence.silenceProbability.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of DuringKeywordSilence.silenceProbability.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of DuringKeywordSilence.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DuringKeywordSilence.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t method lookup function for PostKeywordSilence(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PostKeywordSilence);
}

uint64_t dispatch thunk of PostKeywordSilence.lookForwardFrames.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of PostKeywordSilence.lookForwardFrames.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of PostKeywordSilence.lookForwardFrames.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of PostKeywordSilence.minSilenceFramesExpected.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of PostKeywordSilence.minSilenceFramesExpected.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of PostKeywordSilence.minSilenceFramesExpected.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of PostKeywordSilence.silenceProbability.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of PostKeywordSilence.silenceProbability.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of PostKeywordSilence.silenceProbability.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of PostKeywordSilence.minSilenceFrameCountAtEndOfKeyword.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of PostKeywordSilence.minSilenceFrameCountAtEndOfKeyword.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of PostKeywordSilence.minSilenceFrameCountAtEndOfKeyword.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of PostKeywordSilence.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of PostKeywordSilence.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))();
}

uint64_t method lookup function for AudioCapture(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AudioCapture);
}

uint64_t dispatch thunk of AudioCapture.leftOfStartFrameOffset.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of AudioCapture.leftOfStartFrameOffset.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of AudioCapture.leftOfStartFrameOffset.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of AudioCapture.rightOfEndFrameOffset.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of AudioCapture.rightOfEndFrameOffset.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of AudioCapture.rightOfEndFrameOffset.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of AudioCapture.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of AudioCapture.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t method lookup function for DecoderConfig(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DecoderConfig);
}

uint64_t dispatch thunk of DecoderConfig.useChecker.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of DecoderConfig.useChecker.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of DecoderConfig.useChecker.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of DecoderConfig.preKeywordSilence.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of DecoderConfig.preKeywordSilence.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of DecoderConfig.preKeywordSilence.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of DecoderConfig.duringKeywordSilence.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of DecoderConfig.duringKeywordSilence.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of DecoderConfig.duringKeywordSilence.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of DecoderConfig.postKeywordSilence.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of DecoderConfig.postKeywordSilence.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of DecoderConfig.postKeywordSilence.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of DecoderConfig.audioCapture.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of DecoderConfig.audioCapture.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of DecoderConfig.audioCapture.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of DecoderConfig.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of DecoderConfig.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF8))();
}

uint64_t method lookup function for NeuralNetworkConfig(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for NeuralNetworkConfig);
}

uint64_t dispatch thunk of NeuralNetworkConfig.modelPath.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of NeuralNetworkConfig.modelPath.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of NeuralNetworkConfig.modelPath.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of NeuralNetworkConfig.logThreshold.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of NeuralNetworkConfig.logThreshold.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of NeuralNetworkConfig.logThreshold.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of NeuralNetworkConfig.logMinimum.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of NeuralNetworkConfig.logMinimum.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of NeuralNetworkConfig.logMinimum.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of NeuralNetworkConfig.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of NeuralNetworkConfig.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t method lookup function for FeatureExtractorConfig(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FeatureExtractorConfig);
}

uint64_t dispatch thunk of FeatureExtractorConfig.cmvnSlidingWindowLength.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of FeatureExtractorConfig.cmvnSlidingWindowLength.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of FeatureExtractorConfig.cmvnSlidingWindowLength.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of FeatureExtractorConfig.cmvnMinWindowLength.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of FeatureExtractorConfig.cmvnMinWindowLength.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of FeatureExtractorConfig.cmvnMinWindowLength.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of FeatureExtractorConfig.spliceLeftContext.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of FeatureExtractorConfig.spliceLeftContext.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of FeatureExtractorConfig.spliceLeftContext.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of FeatureExtractorConfig.spliceRightContext.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of FeatureExtractorConfig.spliceRightContext.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of FeatureExtractorConfig.spliceRightContext.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of FeatureExtractorConfig.downSampleStride.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of FeatureExtractorConfig.downSampleStride.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of FeatureExtractorConfig.downSampleStride.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of FeatureExtractorConfig.nnetIntakeFeatureLength.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of FeatureExtractorConfig.nnetIntakeFeatureLength.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of FeatureExtractorConfig.nnetIntakeFeatureLength.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of FeatureExtractorConfig.nnetVectorSize.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of FeatureExtractorConfig.nnetVectorSize.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of FeatureExtractorConfig.nnetVectorSize.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of FeatureExtractorConfig.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of FeatureExtractorConfig.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x138))();
}

uint64_t method lookup function for RuntimeConfig(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for RuntimeConfig);
}

uint64_t dispatch thunk of RuntimeConfig.audioDebug.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of RuntimeConfig.audioDebug.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of RuntimeConfig.audioDebug.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of RuntimeConfig.batchDecode.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of RuntimeConfig.batchDecode.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of RuntimeConfig.batchDecode.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of RuntimeConfig.preKeywordSilence.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of RuntimeConfig.preKeywordSilence.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of RuntimeConfig.preKeywordSilence.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of RuntimeConfig.duringKeywordSilence.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of RuntimeConfig.duringKeywordSilence.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of RuntimeConfig.duringKeywordSilence.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of RuntimeConfig.postKeywordSilence.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of RuntimeConfig.postKeywordSilence.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of RuntimeConfig.postKeywordSilence.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of RuntimeConfig.secondPass.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of RuntimeConfig.secondPass.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of RuntimeConfig.secondPass.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of RuntimeConfig.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t dispatch thunk of RuntimeConfig.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x118))();
}

uint64_t method lookup function for VATConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VATConfiguration);
}

uint64_t dispatch thunk of VATConfiguration.neuralNetwork.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of VATConfiguration.neuralNetwork.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of VATConfiguration.neuralNetwork.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of VATConfiguration.featureExtractor.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of VATConfiguration.featureExtractor.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of VATConfiguration.featureExtractor.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of VATConfiguration.decoder.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of VATConfiguration.decoder.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of VATConfiguration.decoder.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of VATConfiguration.secondPass.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of VATConfiguration.secondPass.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of VATConfiguration.secondPass.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of VATConfiguration.runtime.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of VATConfiguration.runtime.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of VATConfiguration.runtime.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of VATConfiguration.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of VATConfiguration.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of VATConfiguration.__allocating_init(filename:)()
{
  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t dispatch thunk of VATConfiguration._replaceModelPathWithCustomModelPathForTest(prefix:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x108))();
}

uint64_t sub_2614474B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 0);
}

void sub_2614474BC(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 64);
  if (v2 >= 4) {
    unsigned int v2 = *(_DWORD *)a1 + 4;
  }
  switch(v2)
  {
    case 1u:
    case 2u:
      unint64_t v3 = *(void **)a1;

      break;
    case 3u:
      sub_2613DD718(a1);
      sub_2613DD718(a1 + 32);
      break;
    default:
      swift_bridgeObjectRelease();
      break;
  }
}

uint64_t sub_261447574(uint64_t a1, uint64_t *a2)
{
  unsigned int v4 = *((unsigned __int8 *)a2 + 64);
  if (v4 >= 4) {
    unsigned int v4 = *(_DWORD *)a2 + 4;
  }
  switch(v4)
  {
    case 1u:
      uint64_t v11 = *a2;
      id v12 = (id)*a2;
      *(void *)a1 = v11;
      char v8 = 1;
      goto LABEL_8;
    case 2u:
      uint64_t v6 = *a2;
      id v7 = (id)*a2;
      *(void *)a1 = v6;
      char v8 = 2;
      goto LABEL_8;
    case 3u:
      uint64_t v9 = a2[3];
      *(void *)(a1 + 24) = v9;
      (**(void (***)(uint64_t, uint64_t *))(v9 - 8))(a1, a2);
      uint64_t v10 = a2[7];
      *(void *)(a1 + 56) = v10;
      (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 32, (uint64_t)(a2 + 4));
      char v8 = 3;
LABEL_8:
      *(unsigned char *)(a1 + 64) = v8;
      break;
    default:
      uint64_t v5 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v5;
      *(unsigned char *)(a1 + 64) = 0;
      swift_bridgeObjectRetain();
      break;
  }
  return a1;
}

uint64_t sub_2614476B4(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 64);
    if (v4 >= 4) {
      unsigned int v4 = *(_DWORD *)a1 + 4;
    }
    switch(v4)
    {
      case 1u:
      case 2u:

        break;
      case 3u:
        sub_2613DD718(a1);
        sub_2613DD718(a1 + 32);
        break;
      default:
        swift_bridgeObjectRelease();
        break;
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 64);
    if (v5 >= 4) {
      unsigned int v5 = *(_DWORD *)a2 + 4;
    }
    switch(v5)
    {
      case 1u:
        uint64_t v6 = *(void **)a2;
        id v7 = v6;
        *(void *)a1 = v6;
        char v8 = 1;
        goto LABEL_15;
      case 2u:
        uint64_t v9 = *(void **)a2;
        id v10 = v9;
        *(void *)a1 = v9;
        char v8 = 2;
        goto LABEL_15;
      case 3u:
        uint64_t v11 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v11;
        (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1, a2);
        uint64_t v12 = *(void *)(a2 + 56);
        *(void *)(a1 + 56) = v12;
        (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 32, a2 + 32);
        char v8 = 3;
LABEL_15:
        *(unsigned char *)(a1 + 64) = v8;
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 64) = 0;
        swift_bridgeObjectRetain();
        break;
    }
  }
  return a1;
}

__n128 sub_261447874(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_261447898(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 64);
    if (v4 >= 4) {
      unsigned int v4 = *(_DWORD *)a1 + 4;
    }
    switch(v4)
    {
      case 1u:
      case 2u:

        break;
      case 3u:
        sub_2613DD718(a1);
        sub_2613DD718(a1 + 32);
        break;
      default:
        swift_bridgeObjectRelease();
        break;
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 64);
    if (v5 >= 4) {
      unsigned int v5 = *(_DWORD *)a2 + 4;
    }
    switch(v5)
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        char v6 = 1;
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        char v6 = 2;
        break;
      case 3u:
        long long v7 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v7;
        long long v8 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v8;
        char v6 = 3;
        break;
      default:
        char v6 = 0;
        *(_OWORD *)a1 = *(_OWORD *)a2;
        break;
    }
    *(unsigned char *)(a1 + 64) = v6;
  }
  return a1;
}

uint64_t sub_2614479C8(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 >= 4) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_261447A04(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 64) = 0;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 64) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_261447A54(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 64);
  if (result >= 4) {
    return (*(_DWORD *)a1 + 4);
  }
  return result;
}

uint64_t sub_261447A70(uint64_t result, unsigned int a2)
{
  if (a2 > 3)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 64) = a2;
  return result;
}

ValueMetadata *type metadata accessor for VATConfiguration.CodingKeys()
{
  return &type metadata for VATConfiguration.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for RuntimeConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261447B7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RuntimeConfig.CodingKeys()
{
  return &type metadata for RuntimeConfig.CodingKeys;
}

uint64_t getEnumTagSinglePayload for FeatureExtractorConfig.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FeatureExtractorConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261447D10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureExtractorConfig.CodingKeys()
{
  return &type metadata for FeatureExtractorConfig.CodingKeys;
}

ValueMetadata *type metadata accessor for NeuralNetworkConfig.CodingKeys()
{
  return &type metadata for NeuralNetworkConfig.CodingKeys;
}

unsigned char *_s12VoiceActions16VATConfigurationC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261447E2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DecoderConfig.CodingKeys()
{
  return &type metadata for DecoderConfig.CodingKeys;
}

unsigned char *sub_261447E6C(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AudioCapture.CodingKeys()
{
  return &type metadata for AudioCapture.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for PostKeywordSilence.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x261447F54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PostKeywordSilence.CodingKeys()
{
  return &type metadata for PostKeywordSilence.CodingKeys;
}

ValueMetadata *type metadata accessor for DuringKeywordSilence.CodingKeys()
{
  return &type metadata for DuringKeywordSilence.CodingKeys;
}

uint64_t _s12VoiceActions19NeuralNetworkConfigC10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s12VoiceActions19NeuralNetworkConfigC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2614480F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PreKeywordSilence.CodingKeys()
{
  return &type metadata for PreKeywordSilence.CodingKeys;
}

uint64_t getEnumTagSinglePayload for VAComputeUnits(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s12VoiceActions12AudioCaptureC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x26144828CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecondPassConfig.CodingKeys()
{
  return &type metadata for SecondPassConfig.CodingKeys;
}

unint64_t sub_2614482C8()
{
  unint64_t result = qword_26A91AB60[0];
  if (!qword_26A91AB60[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91AB60);
  }
  return result;
}

unint64_t sub_261448320()
{
  unint64_t result = qword_26A91AD70[0];
  if (!qword_26A91AD70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91AD70);
  }
  return result;
}

unint64_t sub_261448378()
{
  unint64_t result = qword_26A91AF80[0];
  if (!qword_26A91AF80[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91AF80);
  }
  return result;
}

unint64_t sub_2614483D0()
{
  unint64_t result = qword_26A91B190[0];
  if (!qword_26A91B190[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91B190);
  }
  return result;
}

unint64_t sub_261448428()
{
  unint64_t result = qword_26A91B3A0[0];
  if (!qword_26A91B3A0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91B3A0);
  }
  return result;
}

unint64_t sub_261448480()
{
  unint64_t result = qword_26A91B5B0[0];
  if (!qword_26A91B5B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91B5B0);
  }
  return result;
}

unint64_t sub_2614484D8()
{
  unint64_t result = qword_26A91B7C0[0];
  if (!qword_26A91B7C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91B7C0);
  }
  return result;
}

unint64_t sub_261448530()
{
  unint64_t result = qword_26A91B9D0[0];
  if (!qword_26A91B9D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91B9D0);
  }
  return result;
}

unint64_t sub_261448588()
{
  unint64_t result = qword_26A91BBE0[0];
  if (!qword_26A91BBE0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91BBE0);
  }
  return result;
}

unint64_t sub_2614485E0()
{
  unint64_t result = qword_26A91BDF0[0];
  if (!qword_26A91BDF0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91BDF0);
  }
  return result;
}

unint64_t sub_261448638()
{
  unint64_t result = qword_26A91BF00;
  if (!qword_26A91BF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A91BF00);
  }
  return result;
}

unint64_t sub_261448690()
{
  unint64_t result = qword_26A91BF08[0];
  if (!qword_26A91BF08[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91BF08);
  }
  return result;
}

unint64_t sub_2614486E8()
{
  unint64_t result = qword_26A91BF90;
  if (!qword_26A91BF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A91BF90);
  }
  return result;
}

unint64_t sub_261448740()
{
  unint64_t result = qword_26A91BF98[0];
  if (!qword_26A91BF98[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91BF98);
  }
  return result;
}

unint64_t sub_261448798()
{
  unint64_t result = qword_26A91C020;
  if (!qword_26A91C020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A91C020);
  }
  return result;
}

unint64_t sub_2614487F0()
{
  unint64_t result = qword_26A91C028[0];
  if (!qword_26A91C028[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91C028);
  }
  return result;
}

unint64_t sub_261448848()
{
  unint64_t result = qword_26A91C0B0;
  if (!qword_26A91C0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A91C0B0);
  }
  return result;
}

unint64_t sub_2614488A0()
{
  unint64_t result = qword_26A91C0B8[0];
  if (!qword_26A91C0B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91C0B8);
  }
  return result;
}

unint64_t sub_2614488F8()
{
  unint64_t result = qword_26A91C140;
  if (!qword_26A91C140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A91C140);
  }
  return result;
}

unint64_t sub_261448950()
{
  unint64_t result = qword_26A91C148[0];
  if (!qword_26A91C148[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91C148);
  }
  return result;
}

unint64_t sub_2614489A8()
{
  unint64_t result = qword_26A91C1D0;
  if (!qword_26A91C1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A91C1D0);
  }
  return result;
}

unint64_t sub_261448A00()
{
  unint64_t result = qword_26A91C1D8[0];
  if (!qword_26A91C1D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91C1D8);
  }
  return result;
}

unint64_t sub_261448A58()
{
  unint64_t result = qword_26A91C260;
  if (!qword_26A91C260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A91C260);
  }
  return result;
}

unint64_t sub_261448AB0()
{
  unint64_t result = qword_26A91C268[0];
  if (!qword_26A91C268[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91C268);
  }
  return result;
}

unint64_t sub_261448B08()
{
  unint64_t result = qword_26A91C2F0;
  if (!qword_26A91C2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A91C2F0);
  }
  return result;
}

unint64_t sub_261448B60()
{
  unint64_t result = qword_26A91C2F8[0];
  if (!qword_26A91C2F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91C2F8);
  }
  return result;
}

unint64_t sub_261448BB8()
{
  unint64_t result = qword_26A91C380;
  if (!qword_26A91C380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A91C380);
  }
  return result;
}

unint64_t sub_261448C10()
{
  unint64_t result = qword_26A91C388[0];
  if (!qword_26A91C388[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91C388);
  }
  return result;
}

unint64_t sub_261448C68()
{
  unint64_t result = qword_26A91C410;
  if (!qword_26A91C410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A91C410);
  }
  return result;
}

unint64_t sub_261448CC0()
{
  unint64_t result = qword_26A91C418[0];
  if (!qword_26A91C418[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91C418);
  }
  return result;
}

uint64_t sub_261448D14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x46726F4674696177 && a2 == 0xEC0000006C616E69;
  if (v2 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F70646E45657375 && a2 == 0xED00007265746E69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2614D5FB8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_261448E44(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6B6361626B6F6F6CLL && a2 == 0xEE0073656D617246;
  if (v2 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000002614E3E80 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002614E3EA0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2614D5FB8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_261448FB4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001FLL && a2 == 0x80000002614E3F50 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002614E3EA0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_2614D5FB8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2614490A4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000002614E3FC0 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002614E3FE0 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002614E3EA0 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000002614E4000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_2614D5FB8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_261449240(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x80000002614E40C0 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002614E40E0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_2614D5FB8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_261449330(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6B63656843657375 && a2 == 0xEA00000000007265;
  if (v2 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002614E4160 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002614E4180 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002614E41A0 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7061436F69647561 && a2 == 0xEC00000065727574)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_2614D5FB8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_26144955C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461506C65646F6DLL && a2 == 0xE900000000000068;
  if (v2 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365726854676F6CLL && a2 == 0xEC000000646C6F68 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D696E694D676F6CLL && a2 == 0xEA00000000006D75)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_2614D5FB8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2614496E4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000017 && a2 == 0x80000002614E4350 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002614E4370 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002614E4390 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002614E43B0 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002614E43D0 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002614E43F0 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7463655674656E6ELL && a2 == 0xEE00657A6953726FLL)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = sub_2614D5FB8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_2614499B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6265446F69647561 && a2 == 0xEA00000000006775;
  if (v2 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6365446863746162 && a2 == 0xEB0000000065646FLL || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002614E4160 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002614E4180 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002614E41A0 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6150646E6F636573 && a2 == 0xEA00000000007373)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_2614D5FB8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_261449C40(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x654E6C617275656ELL && a2 == 0xED00006B726F7774;
  if (v2 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002614E05C0 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7265646F636564 && a2 == 0xE700000000000000 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6150646E6F636573 && a2 == 0xEA00000000007373 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D69746E7572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_2614D5FB8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_261449E88()
{
  return swift_getGenericMetadata();
}

VoiceActions::VASilenceModelFeatureCount_optional __swiftcall VASilenceModelFeatureCount.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 80) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (rawValue == 40) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return (VoiceActions::VASilenceModelFeatureCount_optional)rawValue;
}

uint64_t VASilenceModelFeatureCount.rawValue.getter()
{
  if (*v0) {
    return 80;
  }
  else {
    return 40;
  }
}

uint64_t sub_261449F00()
{
  return sub_2614D60B8();
}

uint64_t sub_261449F54()
{
  return sub_2614D6098();
}

uint64_t sub_261449F90()
{
  return sub_2614D60B8();
}

void *sub_261449FE0@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 80) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result == 40) {
    char v3 = 0;
  }
  else {
    char v3 = v2;
  }
  *a2 = v3;
  return result;
}

void sub_26144A000(uint64_t *a1@<X8>)
{
  uint64_t v2 = 40;
  if (*v1) {
    uint64_t v2 = 80;
  }
  *a1 = v2;
}

uint64_t sub_26144A01C()
{
  return sub_2614D5628();
}

uint64_t sub_26144A07C()
{
  return sub_2614D5608();
}

void sub_26144A0CC()
{
  qword_26A91C4A8 = (uint64_t)&unk_270D56908;
}

void sub_26144A0E0()
{
  qword_26A91C4B8 = (uint64_t)&unk_270D56948;
}

void sub_26144A0F4()
{
  qword_26A91C4C8 = (uint64_t)&unk_270D56988;
}

uint64_t sub_26144A108(uint64_t a1, unint64_t a2, unsigned __int8 *a3)
{
  uint64_t v6 = swift_allocObject();
  sub_26144A170(a1, a2, a3);
  return v6;
}

uint64_t sub_26144A170(uint64_t a1, unint64_t a2, unsigned __int8 *a3)
{
  uint64_t v5 = v3;
  if (!a2)
  {
    sub_2613DC2B8();
    swift_allocError();
    *id v10 = 0xD000000000000017;
    v10[1] = 0x80000002614E4710;
    swift_willThrow();
    goto LABEL_5;
  }
  int v8 = *a3;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  type metadata accessor for VAEspressoUtilsV2();
  swift_bridgeObjectRetain();
  char v9 = sub_2613D04A8();
  sub_26148DB30(a1, a2, v9 & 1, (uint64_t *)v46);
  if (v4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    type metadata accessor for VASilenceModel();
    swift_deallocPartialClassInstance();
    return v5;
  }
  swift_bridgeObjectRelease();
  long long v12 = v46[1];
  *(_OWORD *)(v5 + 32) = v46[0];
  *(_OWORD *)(v5 + 48) = v12;
  *(_OWORD *)(v5 + 64) = v46[2];
  if (qword_26A91C4A0 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_26A91C4A8;
  if (v8)
  {
    uint64_t v14 = qword_26A91C4B0;
    swift_bridgeObjectRetain();
    if (v14 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = *(void *)(*(void *)(v5 + 48) + 16);
    swift_bridgeObjectRetain();
    if (v23 != 1) {
      goto LABEL_23;
    }
    swift_bridgeObjectRetain();
    sub_2613D8F00(0x7475706E69, 0xE500000000000000);
    char v25 = v24;
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0) {
      goto LABEL_23;
    }
    uint64_t v26 = *(void *)(v5 + 48);
    if (!*(void *)(v26 + 16)
      || (unint64_t v27 = sub_2613D8F00(0x7475706E69, 0xE500000000000000), (v28 & 1) == 0)
      || (uint64_t v29 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(v26 + 56) + 8 * v27) + 200),
          uint64_t v30 = swift_retain(),
          uint64_t v31 = (void *)v29(v30),
          swift_release(),
          BOOL v32 = sub_26144AA84(v31, v13),
          swift_bridgeObjectRelease(),
          !v32))
    {
LABEL_23:
      sub_2614D5C38();
      swift_bridgeObjectRelease();
      uint64_t v33 = *(void *)(v5 + 48);
      if (*(void *)(v33 + 16))
      {
        unint64_t v34 = sub_2613D8F00(0x7475706E69, 0xE500000000000000);
        if (v35)
        {
          id v36 = *(void (**)(uint64_t))(**(void **)(*(void *)(v33 + 56) + 8 * v34) + 200);
          uint64_t v37 = swift_retain();
          v36(v37);
          swift_release();
        }
      }
      sub_2613C23AC(&qword_26A9156E8);
      sub_2614D5418();
      sub_2614D54D8();
      swift_bridgeObjectRelease();
      sub_2613DC2B8();
      swift_allocError();
      void *v38 = 0xD00000000000001CLL;
      v38[1] = 0x80000002614E4750;
      swift_willThrow();
      swift_release();
      goto LABEL_27;
    }
  }
  if (*(void *)(*(void *)(v5 + 56) + 16) != 1) {
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  sub_2613D8F00(0x74757074756FLL, 0xE600000000000000);
  char v16 = v15;
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0) {
    goto LABEL_32;
  }
  uint64_t v17 = *(void *)(v5 + 56);
  if (*(void *)(v17 + 16) && (unint64_t v18 = sub_2613D8F00(0x74757074756FLL, 0xE600000000000000), (v19 & 1) != 0))
  {
    long long v20 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(v17 + 56) + 8 * v18) + 200);
    uint64_t v21 = swift_retain();
    uint64_t v22 = (void *)v20(v21);
    swift_release();
  }
  else
  {
    uint64_t v22 = 0;
  }
  if (qword_26A91C4C0 == -1)
  {
    if (!v22) {
      goto LABEL_32;
    }
LABEL_31:
    BOOL v39 = sub_26144AA84(v22, (void *)qword_26A91C4C8);
    swift_bridgeObjectRelease();
    if (!v39) {
      goto LABEL_32;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    return v5;
  }
  swift_once();
  if (v22) {
    goto LABEL_31;
  }
LABEL_32:
  sub_2614D5C38();
  swift_bridgeObjectRelease();
  uint64_t v40 = *(void *)(v5 + 56);
  if (*(void *)(v40 + 16))
  {
    unint64_t v41 = sub_2613D8F00(0x74757074756FLL, 0xE600000000000000);
    if (v42)
    {
      id v43 = *(void (**)(uint64_t))(**(void **)(*(void *)(v40 + 56) + 8 * v41) + 200);
      uint64_t v44 = swift_retain();
      v43(v44);
      swift_release();
    }
  }
  sub_2613C23AC(&qword_26A9156E8);
  sub_2614D5418();
  sub_2614D54D8();
  swift_bridgeObjectRelease();
  sub_2613DC2B8();
  swift_allocError();
  void *v45 = 0xD00000000000001DLL;
  v45[1] = 0x80000002614E4730;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_release();
  return v5;
}

uint64_t type metadata accessor for VASilenceModel()
{
  return self;
}

uint64_t sub_26144A744(unint64_t a1)
{
  uint64_t v3 = v1;
  if (*(void *)(*(void *)(v1 + 48) + 16)
    && (sub_2613D8F00(0x7475706E69, 0xE500000000000000), (v5 & 1) != 0)
    && (sub_2613C23AC(&qword_26A9156F0), (uint64_t v6 = swift_dynamicCastClass()) != 0))
  {
    uint64_t v7 = v6;
    swift_retain();
    sub_26141A14C(a1);
    (*(void (**)(void))(*(void *)v7 + 624))();
    swift_bridgeObjectRelease();
    sub_261431BD8();
    if (!v2)
    {
      if (*(void *)(*(void *)(v3 + 56) + 16))
      {
        sub_2613D8F00(0x74757074756FLL, 0xE600000000000000);
        if (v8)
        {
          sub_2613C23AC(&qword_26A9156F8);
          uint64_t v9 = swift_dynamicCastClass();
          if (v9)
          {
            id v10 = *(uint64_t (**)(uint64_t))(*(void *)v9 + 720);
            uint64_t v11 = swift_retain();
            uint64_t v12 = v10(v11);
            swift_release();
            swift_release();
            return v12;
          }
        }
      }
      sub_2614D5C38();
      swift_bridgeObjectRelease();
      sub_2613DC2B8();
      swift_allocError();
      void *v15 = 0xD00000000000001DLL;
      v15[1] = 0x80000002614E4790;
      swift_willThrow();
    }
    return swift_release();
  }
  else
  {
    sub_2614D5C38();
    swift_bridgeObjectRelease();
    sub_2613DC2B8();
    swift_allocError();
    void *v14 = 0xD00000000000001BLL;
    v14[1] = 0x80000002614E4770;
    return swift_willThrow();
  }
}

uint64_t VASilenceModel.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t VASilenceModel.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

BOOL sub_26144AA84(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  char v5 = a1 + 5;
  uint64_t v6 = a2 + 5;
  do
  {
    uint64_t v8 = *v5++;
    uint64_t v7 = v8;
    uint64_t v10 = *v6++;
    uint64_t v9 = v10;
    BOOL v12 = v4-- != 0;
    BOOL result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

unint64_t sub_26144AAFC()
{
  unint64_t result = qword_26A915700[0];
  if (!qword_26A915700[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A915700);
  }
  return result;
}

ValueMetadata *type metadata accessor for VASilenceModelError()
{
  return &type metadata for VASilenceModelError;
}

unsigned char *storeEnumTagSinglePayload for VASilenceModelFeatureCount(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x26144AC2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VASilenceModelFeatureCount()
{
  return &type metadata for VASilenceModelFeatureCount;
}

uint64_t method lookup function for VASilenceModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VASilenceModel);
}

uint64_t sub_26144ACF8()
{
  uint64_t v0 = sub_26142A908((uint64_t)&unk_270D56B18);
  swift_arrayDestroy();
  return v0;
}

id sub_26144AD40(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x61775F7475706E69 && a2 == 0xE900000000000076;
  if (!v3 && (sub_2614D5FB8() & 1) == 0) {
    return 0;
  }
  unsigned int v4 = (void *)(*(uint64_t (**)(void))(*(void *)v2 + 88))();
  id v5 = objc_msgSend(self, sel_featureValueWithMultiArray_, v4);

  return v5;
}

uint64_t sub_26144AF18()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 88))();
  uint64_t v2 = MEMORY[0x263F8D5C8];
  uint64_t v3 = MEMORY[0x263F00C60];
  return MEMORY[0x270EE7598](v1, v2, v3);
}

uint64_t sub_26144B0CC(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_2613C23AC(&qword_26A915330);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2614D81E0;
  strcpy((char *)(inited + 32), "enc_3d_output");
  *(_WORD *)(inited + 46) = -4864;
  id v4 = objc_msgSend(self, sel_featureValueWithMultiArray_, a1);
  *(void *)(inited + 72) = sub_261405618(0, &qword_26A915338);
  *(void *)(inited + 48) = v4;
  sub_26142907C(inited);
  id v5 = objc_allocWithZone(MEMORY[0x263F00D40]);
  id v6 = sub_26142A760();

  *(void *)(v2 + 16) = v6;
  return v2;
}

uint64_t sub_26144B208@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_2614D4C78();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2613C23AC(&qword_26A9150A0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = sub_2614198FC();
  if (!v9)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v10 = v9;
  uint64_t v11 = (void *)sub_2614D5378();
  BOOL v12 = (void *)sub_2614D5378();
  id v13 = objc_msgSend(v10, sel_URLForResource_withExtension_, v11, v12);

  if (!v13)
  {
LABEL_6:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
    goto LABEL_7;
  }
  sub_2614D4C58();

  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v14(v8, v5, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2);
  if (result != 1)
  {

    return ((uint64_t (*)(uint64_t, char *, uint64_t))v14)(a1, v8, v2);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_26144B440(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2614D4C78();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  BOOL v12 = (char *)&v18 - v11;
  (*(void (**)(uint64_t))(v1 + 88))(v10);
  uint64_t v13 = sub_261405618(0, qword_26A915340);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v12, v5);
  id v14 = a1;
  id v15 = sub_26142AB08((uint64_t)v9, (uint64_t)v14);
  if (v2)
  {
  }
  else
  {
    id v16 = v15;

    uint64_t v13 = (*(uint64_t (**)(id))(v3 + 96))(v16);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  return v13;
}

uint64_t sub_26144B600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_2614D4C78();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(v3 + 88))(v9);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 120))(v11, a1, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_26144B710(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_2614D4C78();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_26144B7D0, 0, 0);
}

uint64_t sub_26144B7D0()
{
  uint64_t v6 = v0[3];
  (*(void (**)(void))(v6 + 88))();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v6 + 128) + **(int **)(v6 + 128));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2614298B4;
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[2];
  return v5(v2, v3);
}

uint64_t sub_26144B8DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_261405618(0, qword_26A915340);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  swift_retain();
  sub_2614D5A58();
  return swift_release();
}

uint64_t sub_26144B994(uint64_t a1, uint64_t a2)
{
  sub_261405618(0, qword_26A915340);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_26144BA5C;
  return MEMORY[0x270EE7960](a1, a2);
}

uint64_t sub_26144BA5C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 24) = a1;
    return MEMORY[0x270FA2498](sub_26144BBA8, 0, 0);
  }
}

uint64_t sub_26144BBA8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  type metadata accessor for at_encoder_rdr_125141826();
  *(void *)(swift_allocObject() + 16) = v1;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_26144BC1C(uint64_t a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00DD0]), sel_init);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, id))(*(void *)v1 + 144))(a1, v3);

  return v4;
}

uint64_t sub_26144BCA8(uint64_t a1, uint64_t a2)
{
  v12[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = *(void **)(v2 + 16);
  v12[0] = 0;
  id v6 = objc_msgSend(v5, sel_predictionFromFeatures_options_error_, a1, a2, v12);
  id v7 = v12[0];
  if (v6)
  {
    id v8 = v6;
    type metadata accessor for at_encoder_rdr_125141826Output();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v8;
    id v9 = v7;
  }
  else
  {
    id v10 = v12[0];
    sub_2614D4BF8();

    swift_willThrow();
  }
  return v3;
}

uint64_t sub_26144BD80(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  mach_timebase_info v3[2] = a1;
  return MEMORY[0x270FA2498](sub_26144BDA4, 0, 0);
}

uint64_t sub_26144BDA4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_26144BE44;
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  return MEMORY[0x270EE7938](v3, v2);
}

uint64_t sub_26144BE44(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    id v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    return MEMORY[0x270FA2498](sub_26144BF90, 0, 0);
  }
}

uint64_t sub_26144BF90()
{
  uint64_t v1 = *(void *)(v0 + 48);
  type metadata accessor for at_encoder_rdr_125141826Output();
  *(void *)(swift_allocObject() + 16) = v1;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_26144C004(void *a1)
{
  type metadata accessor for at_encoder_rdr_125141826Input();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)v1 + 136);
  id v5 = a1;
  uint64_t v6 = v4(v3);
  swift_release();
  return v6;
}

uint64_t sub_26144C098(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2613C23AC(&qword_26A915318);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v10 = (char *)v16 - v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)v16 - v9, a1, v4);
  sub_261405618(0, (unint64_t *)&qword_26A915320);
  v11(v8, (uint64_t)v10, v4);
  sub_26142AAAC();
  uint64_t v12 = sub_2614D5948();
  type metadata accessor for at_encoder_rdr_125141826Input();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 136))(v13);
  swift_release();
  return v14;
}

void sub_26144C264(unint64_t a1, uint64_t a2)
{
  v22[1] = *(id *)MEMORY[0x263EF8340];
  unint64_t v5 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_2613C23AC(&qword_26A9153C0);
    sub_2614D5D78();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_2614D5FD8();
  }
  id v6 = objc_allocWithZone(MEMORY[0x263F00D18]);
  sub_2613C23AC(&qword_26A9153C0);
  uint64_t v7 = (void *)sub_2614D5648();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithFeatureProviderArray_, v7);

  uint64_t v9 = *(void **)(v2 + 16);
  v22[0] = 0;
  id v10 = objc_msgSend(v9, sel_predictionsFromBatch_options_error_, v8, a2, v22);
  id v11 = v22[0];
  if (v10)
  {
    uint64_t v12 = v10;
    v22[0] = (id)MEMORY[0x263F8EE78];
    if (v5)
    {
      swift_bridgeObjectRetain();
      id v16 = v11;
      uint64_t v13 = sub_2614D5D98();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v14 = v11;
    }
    sub_26142A848(v13, 0);
    sub_2614D5678();
    unint64_t v17 = (unint64_t)objc_msgSend(v12, sel_count);
    if ((v17 & 0x8000000000000000) != 0) {
      __break(1u);
    }
    unint64_t v18 = v17;
    if (v17)
    {
      uint64_t v19 = 0;
      do
      {
        id v20 = objc_msgSend(v12, sel_featuresAtIndex_, v19);
        type metadata accessor for at_encoder_rdr_125141826Output();
        *(void *)(swift_allocObject() + 16) = v20;
        swift_unknownObjectRetain();
        uint64_t v21 = swift_retain();
        MEMORY[0x263E36760](v21);
        if (*(void *)(((unint64_t)v22[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v22[0] & 0xFFFFFFFFFFFFFF8)
                                                                                               + 0x18) >> 1)
          sub_2614D5698();
        ++v19;
        sub_2614D56E8();
        sub_2614D5678();
        swift_release();
        swift_unknownObjectRelease();
      }
      while (v18 != v19);
    }
    swift_unknownObjectRelease();
  }
  else
  {
    id v15 = v22[0];
    sub_2614D4BF8();

    swift_willThrow();
  }
}

uint64_t sub_26144C53C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_26144C574(id a1, char a2)
{
  uint64_t v4 = *(void (**)(id, uint64_t))(v2 + 16);
  if (a2)
  {
    id v7 = a1;
    v4(a1, 1);
    sub_26142ADBC(a1);
  }
  else
  {
    type metadata accessor for at_encoder_rdr_125141826();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    id v6 = a1;
    v4((id)v5, 0);
    swift_release();
  }
}

uint64_t type metadata accessor for at_encoder_rdr_125141826()
{
  return self;
}

uint64_t type metadata accessor for at_encoder_rdr_125141826Output()
{
  return self;
}

uint64_t type metadata accessor for at_encoder_rdr_125141826Input()
{
  return self;
}

uint64_t sub_26144C724()
{
  uint64_t v0 = sub_26142A908((uint64_t)&unk_270D56B70);
  swift_arrayDestroy();
  return v0;
}

id sub_26144C76C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x80000002614E36F0 || (sub_2614D5FB8() & 1) != 0)
  {
    uint64_t v5 = (*(uint64_t (**)(void))(*(void *)v2 + 112))();
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002614E3710 || (sub_2614D5FB8() & 1) != 0)
  {
    uint64_t v5 = (*(uint64_t (**)(void))(*(void *)v2 + 136))();
  }
  else if (a1 == 0x75615F7475706E69 && a2 == 0xEF6E656C5F6F6964 || (sub_2614D5FB8() & 1) != 0)
  {
    uint64_t v5 = (*(uint64_t (**)(void))(*(void *)v2 + 160))();
  }
  else
  {
    if ((a1 != 0xD000000000000010 || a2 != 0x80000002614E3730) && (sub_2614D5FB8() & 1) == 0) {
      return 0;
    }
    uint64_t v5 = (*(uint64_t (**)(void))(*(void *)v2 + 184))();
  }
  id v6 = (void *)v5;
  id v7 = objc_msgSend(self, sel_featureValueWithMultiArray_, v5);

  return v7;
}

uint64_t sub_26144CA18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a1;
  uint64_t v21 = a2;
  uint64_t v22 = a4;
  uint64_t v19 = a3;
  uint64_t v7 = sub_2613C23AC(&qword_26A915318);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_261405618(0, (unint64_t *)&qword_26A915320);
  id v11 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v11(v10, a1, v7);
  sub_26142AAAC();
  uint64_t v20 = sub_2614D5948();
  v11(v10, a2, v7);
  uint64_t v12 = sub_2614D5948();
  v11(v10, a3, v7);
  uint64_t v13 = sub_2614D5948();
  uint64_t v14 = v22;
  v11(v10, v22, v7);
  uint64_t v15 = sub_2614D5948();
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 224))(v20, v12, v13, v15);
  unint64_t v17 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v17(v14, v7);
  v17(v19, v7);
  v17(v21, v7);
  v17(v23, v7);
  return v16;
}

uint64_t sub_26144CC50()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 88))();
  uint64_t v2 = MEMORY[0x263F8D5C8];
  uint64_t v3 = MEMORY[0x263F00C60];
  return MEMORY[0x270EE7598](v1, v2, v3);
}

uint64_t sub_26144CE04(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_2613C23AC(&qword_26A915330);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2614D81E0;
  *(void *)(inited + 32) = 0x74757074756FLL;
  *(void *)(inited + 40) = 0xE600000000000000;
  id v4 = objc_msgSend(self, sel_featureValueWithMultiArray_, a1);
  *(void *)(inited + 72) = sub_261405618(0, &qword_26A915338);
  *(void *)(inited + 48) = v4;
  sub_26142907C(inited);
  id v5 = objc_allocWithZone(MEMORY[0x263F00D40]);
  id v6 = sub_26142A760();

  *(void *)(v2 + 16) = v6;
  return v2;
}

uint64_t sub_26144CF30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_2614D4C78();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2613C23AC(&qword_26A9150A0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = sub_2614198FC();
  if (!v9)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v10 = v9;
  id v11 = (void *)sub_2614D5378();
  uint64_t v12 = (void *)sub_2614D5378();
  id v13 = objc_msgSend(v10, sel_URLForResource_withExtension_, v11, v12);

  if (!v13)
  {
LABEL_6:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
    goto LABEL_7;
  }
  sub_2614D4C58();

  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v14(v8, v5, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2);
  if (result != 1)
  {

    return ((uint64_t (*)(uint64_t, char *, uint64_t))v14)(a1, v8, v2);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_26144D168(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2614D4C78();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v18 - v11;
  (*(void (**)(uint64_t))(v1 + 88))(v10);
  uint64_t v13 = sub_261405618(0, qword_26A915340);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v12, v5);
  id v14 = a1;
  id v15 = sub_26142AB08((uint64_t)v9, (uint64_t)v14);
  if (v2)
  {
  }
  else
  {
    id v16 = v15;

    uint64_t v13 = (*(uint64_t (**)(id))(v3 + 96))(v16);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  return v13;
}

uint64_t sub_26144D328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_2614D4C78();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(v3 + 88))(v9);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 120))(v11, a1, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_26144D438(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_2614D4C78();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_26144D4F8, 0, 0);
}

uint64_t sub_26144D4F8()
{
  uint64_t v6 = v0[3];
  (*(void (**)(void))(v6 + 88))();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v6 + 128) + **(int **)(v6 + 128));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2614298B4;
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[2];
  return v5(v2, v3);
}

uint64_t sub_26144D604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_261405618(0, qword_26A915340);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  swift_retain();
  sub_2614D5A58();
  return swift_release();
}

uint64_t sub_26144D6BC(uint64_t a1, uint64_t a2)
{
  sub_261405618(0, qword_26A915340);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_26144D784;
  return MEMORY[0x270EE7960](a1, a2);
}

uint64_t sub_26144D784(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 24) = a1;
    return MEMORY[0x270FA2498](sub_26144D8D0, 0, 0);
  }
}

uint64_t sub_26144D8D0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  type metadata accessor for quant_verifier_aa_fp32();
  *(void *)(swift_allocObject() + 16) = v1;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_26144D944(uint64_t a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00DD0]), sel_init);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, id))(*(void *)v1 + 144))(a1, v3);

  return v4;
}

uint64_t sub_26144D9D0(uint64_t a1, uint64_t a2)
{
  v12[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = *(void **)(v2 + 16);
  v12[0] = 0;
  id v6 = objc_msgSend(v5, sel_predictionFromFeatures_options_error_, a1, a2, v12);
  id v7 = v12[0];
  if (v6)
  {
    id v8 = v6;
    type metadata accessor for quant_verifier_aa_fp32Output();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v8;
    id v9 = v7;
  }
  else
  {
    id v10 = v12[0];
    sub_2614D4BF8();

    swift_willThrow();
  }
  return v3;
}

uint64_t sub_26144DAA8(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  mach_timebase_info v3[2] = a1;
  return MEMORY[0x270FA2498](sub_26144DACC, 0, 0);
}

uint64_t sub_26144DACC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_26144DB6C;
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  return MEMORY[0x270EE7938](v3, v2);
}

uint64_t sub_26144DB6C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    id v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    return MEMORY[0x270FA2498](sub_26144DCB8, 0, 0);
  }
}

uint64_t sub_26144DCB8()
{
  uint64_t v1 = *(void *)(v0 + 48);
  type metadata accessor for quant_verifier_aa_fp32Output();
  *(void *)(swift_allocObject() + 16) = v1;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_26144DD2C(void *a1, void *a2, void *a3, void *a4)
{
  type metadata accessor for quant_verifier_aa_fp32Input();
  id v9 = (void *)swift_allocObject();
  id v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  void v9[5] = a4;
  id v10 = *(uint64_t (**)(void *))(*(void *)v4 + 136);
  id v11 = a1;
  id v12 = a2;
  id v13 = a3;
  id v14 = a4;
  uint64_t v15 = v10(v9);
  swift_release();
  return v15;
}

uint64_t sub_26144DDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v6 = sub_2613C23AC(&qword_26A915318);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  id v13 = (char *)&v22 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  id v16 = (char *)&v22 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v22 - v17;
  type metadata accessor for quant_verifier_aa_fp32Input();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v19(v18, v22, v6);
  v19(v16, v23, v6);
  v19(v13, v24, v6);
  v19(v10, v25, v6);
  sub_26144CA18((uint64_t)v18, (uint64_t)v16, (uint64_t)v13, (uint64_t)v10);
  uint64_t v20 = (*(uint64_t (**)(void))(*(void *)v5 + 136))();
  swift_release();
  return v20;
}

void sub_26144DFE8(unint64_t a1, uint64_t a2)
{
  v22[1] = *(id *)MEMORY[0x263EF8340];
  unint64_t v5 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_2613C23AC(&qword_26A9153C0);
    sub_2614D5D78();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_2614D5FD8();
  }
  id v6 = objc_allocWithZone(MEMORY[0x263F00D18]);
  sub_2613C23AC(&qword_26A9153C0);
  uint64_t v7 = (void *)sub_2614D5648();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithFeatureProviderArray_, v7);

  uint64_t v9 = *(void **)(v2 + 16);
  v22[0] = 0;
  id v10 = objc_msgSend(v9, sel_predictionsFromBatch_options_error_, v8, a2, v22);
  id v11 = v22[0];
  if (v10)
  {
    uint64_t v12 = v10;
    v22[0] = (id)MEMORY[0x263F8EE78];
    if (v5)
    {
      swift_bridgeObjectRetain();
      id v16 = v11;
      uint64_t v13 = sub_2614D5D98();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v14 = v11;
    }
    sub_26142A848(v13, 0);
    sub_2614D5678();
    unint64_t v17 = (unint64_t)objc_msgSend(v12, sel_count);
    if ((v17 & 0x8000000000000000) != 0) {
      __break(1u);
    }
    unint64_t v18 = v17;
    if (v17)
    {
      uint64_t v19 = 0;
      do
      {
        id v20 = objc_msgSend(v12, sel_featuresAtIndex_, v19);
        type metadata accessor for quant_verifier_aa_fp32Output();
        *(void *)(swift_allocObject() + 16) = v20;
        swift_unknownObjectRetain();
        uint64_t v21 = swift_retain();
        MEMORY[0x263E36760](v21);
        if (*(void *)(((unint64_t)v22[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v22[0] & 0xFFFFFFFFFFFFFF8)
                                                                                               + 0x18) >> 1)
          sub_2614D5698();
        ++v19;
        sub_2614D56E8();
        sub_2614D5678();
        swift_release();
        swift_unknownObjectRelease();
      }
      while (v18 != v19);
    }
    swift_unknownObjectRelease();
  }
  else
  {
    id v15 = v22[0];
    sub_2614D4BF8();

    swift_willThrow();
  }
}

uint64_t sub_26144E2C0()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_26144E2F8(id a1, char a2)
{
  uint64_t v4 = *(void (**)(id, uint64_t))(v2 + 16);
  if (a2)
  {
    id v7 = a1;
    v4(a1, 1);
    sub_26142ADBC(a1);
  }
  else
  {
    type metadata accessor for quant_verifier_aa_fp32();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    id v6 = a1;
    v4((id)v5, 0);
    swift_release();
  }
}

uint64_t type metadata accessor for quant_verifier_aa_fp32()
{
  return self;
}

uint64_t type metadata accessor for quant_verifier_aa_fp32Output()
{
  return self;
}

uint64_t type metadata accessor for quant_verifier_aa_fp32Input()
{
  return self;
}

uint64_t sub_26144E414@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_26144E444(uint64_t a1)
{
  unint64_t v2 = sub_26144E914();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_26144E480(uint64_t a1)
{
  unint64_t v2 = sub_26144E914();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_26144E4BC()
{
  if (*v0) {
    return 0xD000000000000013;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_26144E4F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_26144F0B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_26144E520(uint64_t a1)
{
  unint64_t v2 = sub_26144E8C0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_26144E55C(uint64_t a1)
{
  unint64_t v2 = sub_26144E8C0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_26144E598(uint64_t a1)
{
  unint64_t v2 = sub_26144E968();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_26144E5D4(uint64_t a1)
{
  unint64_t v2 = sub_26144E968();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_26144E610(void *a1, int a2)
{
  int v18 = a2;
  uint64_t v3 = sub_2613C23AC(&qword_26A915738);
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_2613C23AC(&qword_26A915740);
  uint64_t v6 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  id v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2613C23AC(&qword_26A915748);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2613DBF24(a1, a1[3]);
  sub_26144E8C0();
  sub_2614D60F8();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  if (v18)
  {
    char v20 = 1;
    sub_26144E914();
    sub_2614D5EE8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    char v19 = 0;
    sub_26144E968();
    sub_2614D5EE8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  }
  return (*v13)(v12, v9);
}

unint64_t sub_26144E8C0()
{
  unint64_t result = qword_26A91C7D0;
  if (!qword_26A91C7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A91C7D0);
  }
  return result;
}

unint64_t sub_26144E914()
{
  unint64_t result = qword_26A91C7D8;
  if (!qword_26A91C7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A91C7D8);
  }
  return result;
}

unint64_t sub_26144E968()
{
  unint64_t result = qword_26A91C7E0[0];
  if (!qword_26A91C7E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91C7E0);
  }
  return result;
}

uint64_t sub_26144E9BC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_26144F1A0(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_26144E9EC(void *a1)
{
  return sub_26144E610(a1, *v1);
}

uint64_t sub_26144EA08(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), char *a5, uint64_t a6, uint64_t a7)
{
  id v36 = a5;
  uint64_t v37 = a4;
  uint64_t v32 = a2;
  uint64_t v33 = a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v10 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  unint64_t v34 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  id v14 = (char *)&v32 - v13;
  uint64_t v15 = *(void *)(a7 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v12);
  int v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(a6 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, a3, a6);
  uint64_t v22 = v38;
  v37(v21);
  if (v22) {
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, a6);
  }
  uint64_t v38 = a7;
  uint64_t v25 = *(void (**)(char *))(v19 + 32);
  id v36 = &v14[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v24 = v36;
  uint64_t v37 = v25;
  ((void (*)(char *, char *, uint64_t))v25)(v14, v21, a6);
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v27 = v38;
  v26(v24, v18, v38);
  char v28 = v34;
  uint64_t v29 = &v34[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v30 = v14;
  uint64_t v31 = (void (*)(uint64_t, char *, uint64_t))v37;
  ((void (*)(char *, char *, uint64_t))v37)(v34, v30, a6);
  v26(v29, v36, v27);
  v31(v33, v28, a6);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v26)(v32, v29, v27);
}

uint64_t sub_26144ECDC@<X0>(uint64_t a1@<X0>, void (*a2)(char *)@<X1>, uint64_t a3@<X6>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_26144EA08(a4, (uint64_t)v10, v11, v12, v13, v14, v15);
  if (!v4)
  {
    a2(v10);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, a3);
  }
  return result;
}

uint64_t sub_26144EE10@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  v24[2] = a3;
  uint64_t v25 = a5;
  v24[0] = a6;
  v24[1] = a2;
  uint64_t v8 = sub_2614D5AD8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)v24 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v24 - v16;
  uint64_t v18 = *(void *)(a4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v15, 1, 1, a4);
  uint64_t v19 = v26;
  sub_26144ECDC((uint64_t)v15, a1, v25, (uint64_t)v17);
  if (v19) {
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v15, v8);
  }
  uint64_t v21 = v15;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v21, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v17, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, a4) == 1)
  {
    v22(v12, v8);
    sub_26144F5F0();
    swift_allocError();
    unsigned char *v23 = 0;
    swift_willThrow();
    return ((uint64_t (*)(char *, uint64_t))v22)(v17, v8);
  }
  else
  {
    v22(v17, v8);
    return (*(uint64_t (**)(void, char *, uint64_t))(v18 + 32))(v24[0], v12, a4);
  }
}

uint64_t sub_26144F0B0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000002614E49D0 || (sub_2614D5FB8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002614E49F0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_2614D5FB8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_26144F1A0(uint64_t a1)
{
  uint64_t v2 = sub_2613C23AC(&qword_26A915760);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2613C23AC(&qword_26A915768);
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2613C23AC(&qword_26A915770);
  uint64_t v24 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2613DBF24((void *)a1, *(void *)(a1 + 24));
  sub_26144E8C0();
  uint64_t v12 = v26;
  sub_2614D60D8();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v13 = v25;
  uint64_t v21 = v6;
  uint64_t v26 = a1;
  uint64_t v14 = sub_2614D5ED8();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v16 = sub_2614D5C88();
    swift_allocError();
    uint64_t v18 = v17;
    sub_2613C23AC(&qword_26A915778);
    void *v18 = &type metadata for VACInteropUtils.DomainError;
    sub_2614D5E28();
    sub_2614D5C78();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x263F8DCB0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
    a1 = v26;
LABEL_7:
    sub_2613DD718(a1);
    return a1;
  }
  a1 = *(unsigned __int8 *)(v14 + 32);
  if (a1)
  {
    LODWORD(v25) = *(unsigned __int8 *)(v14 + 32);
    char v28 = 1;
    sub_26144E914();
    sub_2614D5E18();
    uint64_t v15 = v24;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v9);
    a1 = v25;
  }
  else
  {
    char v27 = 0;
    sub_26144E968();
    sub_2614D5E18();
    uint64_t v19 = v24;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
  }
  sub_2613DD718(v26);
  return a1;
}

unint64_t sub_26144F5F0()
{
  unint64_t result = qword_26A915750;
  if (!qword_26A915750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A915750);
  }
  return result;
}

unint64_t sub_26144F648()
{
  unint64_t result = qword_26A915758;
  if (!qword_26A915758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A915758);
  }
  return result;
}

ValueMetadata *type metadata accessor for VACInteropUtils()
{
  return &type metadata for VACInteropUtils;
}

ValueMetadata *type metadata accessor for VACInteropUtils.DomainError()
{
  return &type metadata for VACInteropUtils.DomainError;
}

unsigned char *_s12VoiceActions15VACInteropUtilsV11DomainErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x26144F78CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VACInteropUtils.DomainError.CodingKeys()
{
  return &type metadata for VACInteropUtils.DomainError.CodingKeys;
}

ValueMetadata *type metadata accessor for VACInteropUtils.DomainError.UnexpectedNullResultCodingKeys()
{
  return &type metadata for VACInteropUtils.DomainError.UnexpectedNullResultCodingKeys;
}

ValueMetadata *type metadata accessor for VACInteropUtils.DomainError.BadArrayElementTypeCodingKeys()
{
  return &type metadata for VACInteropUtils.DomainError.BadArrayElementTypeCodingKeys;
}

unint64_t sub_26144F7E8()
{
  unint64_t result = qword_26A91CD70[0];
  if (!qword_26A91CD70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91CD70);
  }
  return result;
}

unint64_t sub_26144F840()
{
  unint64_t result = qword_26A91CE80;
  if (!qword_26A91CE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A91CE80);
  }
  return result;
}

unint64_t sub_26144F898()
{
  unint64_t result = qword_26A91CE88[0];
  if (!qword_26A91CE88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91CE88);
  }
  return result;
}

unint64_t sub_26144F8F0()
{
  unint64_t result = qword_26A91CF10;
  if (!qword_26A91CF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A91CF10);
  }
  return result;
}

unint64_t sub_26144F948()
{
  unint64_t result = qword_26A91CF18[0];
  if (!qword_26A91CF18[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91CF18);
  }
  return result;
}

unint64_t sub_26144F9A0()
{
  unint64_t result = qword_26A91CFA0;
  if (!qword_26A91CFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A91CFA0);
  }
  return result;
}

unint64_t sub_26144F9F8()
{
  unint64_t result = qword_26A91CFA8[0];
  if (!qword_26A91CFA8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91CFA8);
  }
  return result;
}

uint64_t sub_26144FA50()
{
  return swift_retain();
}

uint64_t sub_26144FA88(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_release();
}

void *sub_26144FAD0()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 56);
  id v2 = v1;
  return v1;
}

void sub_26144FB14(uint64_t a1)
{
  swift_beginAccess();
  int v3 = *(void **)(v1 + 56);
  *(void *)(v1 + 56) = a1;
}

uint64_t VAA2AVerifierModelV3.__allocating_init(computeUnits:)(unsigned __int8 *a1)
{
  return VAA2AVerifierModelV3.init(computeUnits:)(a1);
}

uint64_t VAA2AVerifierModelV3.init(computeUnits:)(unsigned __int8 *a1)
{
  int v3 = v1;
  uint64_t v5 = type metadata accessor for VASignpostInterval();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *a1;
  uint64_t v9 = MEMORY[0x263F8EE78];
  v3[3] = MEMORY[0x263F8EE78];
  v3[4] = v9;
  v3[5] = v9;
  v3[6] = v9;
  v3[7] = 0;
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  swift_retain();
  sub_2614D5C38();
  sub_2614D54D8();
  char v19 = v8;
  sub_2614D5D48();
  type metadata accessor for VALog();
  sub_2614D54D8();
  static VALog.begin(_:_:)("VoiceActions", 12, 2u, v17, v18, (uint64_t)v7);
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00D90]), sel_init);
  uint64_t v11 = v10;
  if (v8) {
    uint64_t v12 = 3;
  }
  else {
    uint64_t v12 = 0;
  }
  objc_msgSend(v10, sel_setComputeUnits_, v12);
  type metadata accessor for aa_verifier_20240530();
  id v13 = v11;
  uint64_t v14 = sub_26142EE0C(v13);
  if (v2)
  {

    sub_2614506D0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for VASignpostInterval);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = (void *)v3[7];
    swift_release();

    type metadata accessor for VAA2AVerifierModelV3();
    return swift_deallocPartialClassInstance();
  }
  else
  {
    mach_timebase_info v3[2] = v14;
    swift_release();
    VASignpostInterval.end(_:)((Swift::String_optional)0);

    sub_2614506D0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for VASignpostInterval);
    return sub_26141BF74();
  }
}

uint64_t type metadata accessor for VAA2AVerifierModelV3()
{
  return self;
}

uint64_t sub_26144FE3C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for VASingleEnrollmentData();
  uint64_t v84 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v85 = (uint64_t)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)&v63 - v7;
  uint64_t v68 = *a1;
  int v9 = *((_DWORD *)a1 + 2);
  int v76 = *((unsigned __int8 *)a1 + 12);
  int v75 = *((unsigned __int8 *)a1 + 13);
  uint64_t v10 = a1[2];
  uint64_t v11 = a1[3];
  int v12 = *((unsigned __int8 *)a1 + 32);
  uint64_t v13 = a1[5];
  int v82 = *((unsigned __int8 *)a1 + 48);
  int v74 = *((unsigned __int8 *)a1 + 49);
  int v14 = *((_DWORD *)a1 + 13);
  int v73 = *((unsigned __int8 *)a1 + 56);
  uint64_t v81 = a1[8];
  uint64_t v80 = a1[9];
  int v79 = *((unsigned __int8 *)a1 + 80);
  int v78 = *((unsigned __int8 *)a1 + 81);
  int v77 = *((unsigned __int8 *)a1 + 82);
  int v72 = *((unsigned __int8 *)a1 + 83);
  int v71 = *((unsigned __int8 *)a1 + 84);
  int v70 = *((unsigned __int8 *)a1 + 85);
  int v69 = *((unsigned __int8 *)a1 + 86);
  uint64_t v91 = v68;
  int v92 = v9;
  char v93 = v76;
  char v94 = v75;
  uint64_t v95 = v10;
  uint64_t v96 = v11;
  char v97 = v12;
  uint64_t v98 = v13;
  char v99 = v82;
  char v100 = v74;
  int v101 = v14;
  char v102 = v73;
  uint64_t v103 = v81;
  uint64_t v104 = v80;
  char v105 = v79;
  char v106 = v78;
  char v107 = v77;
  char v108 = v72;
  char v109 = v71;
  char v110 = v70;
  char v111 = v69;
  uint64_t v15 = *(void *)(VARuntimeParameters.keywordsNoThresholds.getter() + 16);
  swift_bridgeObjectRelease();
  uint64_t v16 = v15;
  uint64_t v17 = v68;
  uint64_t v18 = sub_2613D1BF8((uint64_t)&unk_270D56D78, v16);
  (*(void (**)(uint64_t))(*(void *)v1 + 264))(v18);
  (*(void (**)(void))(*(void *)v1 + 216))(MEMORY[0x263F8EE78]);
  uint64_t v91 = v17;
  int v92 = v9;
  char v93 = v76;
  char v94 = v75;
  uint64_t v67 = v10;
  uint64_t v95 = v10;
  uint64_t v96 = v11;
  uint64_t v66 = v11;
  int v65 = v12;
  char v97 = v12;
  uint64_t v64 = v13;
  uint64_t v98 = v13;
  char v99 = v82;
  char v100 = v74;
  int v101 = v14;
  char v102 = v73;
  uint64_t v103 = v81;
  uint64_t v104 = v80;
  char v105 = v79;
  char v106 = v78;
  char v107 = v77;
  char v108 = v72;
  char v109 = v71;
  char v110 = v70;
  char v111 = v69;
  uint64_t result = VARuntimeParameters.keywordsNoThresholds.getter();
  uint64_t v20 = result;
  uint64_t v90 = *(void *)(result + 16);
  if (v90)
  {
    unint64_t v21 = 0;
    uint64_t v22 = *(uint64_t (**)(uint64_t))(*(void *)v1 + 232);
    uint64_t v87 = *(void *)v1 + 232;
    float v88 = v22;
    uint64_t v86 = result + 32;
    uint64_t v112 = v1;
    uint64_t v83 = result;
    while (v21 < *(void *)(v20 + 16))
    {
      uint64_t v23 = (uint64_t *)(v86 + 16 * v21);
      uint64_t v24 = *v23;
      uint64_t v25 = v23[1];
      uint64_t v26 = swift_bridgeObjectRetain();
      uint64_t v27 = v88(v26);
      uint64_t v28 = *(void *)(v27 + 16);
      if (v28)
      {
        unint64_t v89 = (*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
        uint64_t v29 = v27 + v89;
        uint64_t v30 = *(void *)(v84 + 72);
        while (1)
        {
          sub_26145066C(v29, (uint64_t)v8);
          uint64_t v31 = &v8[*(int *)(v4 + 24)];
          BOOL v32 = *(void *)v31 == v24 && *((void *)v31 + 1) == v25;
          if (v32 || (sub_2614D5FB8() & 1) != 0) {
            break;
          }
          sub_2614506D0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for VASingleEnrollmentData);
          v29 += v30;
          if (!--v28)
          {
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            uint64_t v2 = v112;
            goto LABEL_20;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_26145066C((uint64_t)v8, v85);
        uint64_t v33 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))(*(void *)v112 + 224))(&v91);
        char v35 = v34;
        unint64_t v36 = *v34;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t *v35 = v36;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v36 = sub_261451E2C(0, *(void *)(v36 + 16) + 1, 1, v36);
          unint64_t *v35 = v36;
        }
        unint64_t v39 = *(void *)(v36 + 16);
        unint64_t v38 = *(void *)(v36 + 24);
        if (v39 >= v38 >> 1)
        {
          unint64_t v36 = sub_261451E2C(v38 > 1, v39 + 1, 1, v36);
          unint64_t *v35 = v36;
        }
        uint64_t v2 = v112;
        *(void *)(v36 + 16) = v39 + 1;
        sub_261452094(v85, v36 + v89 + v39 * v30);
        v33(&v91, 0);
        uint64_t result = sub_2614506D0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for VASingleEnrollmentData);
LABEL_20:
        uint64_t v20 = v83;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
      }
      if (++v21 == v90)
      {
        swift_bridgeObjectRelease();
        uint64_t v17 = v68;
        uint64_t v40 = v67;
        uint64_t v41 = v66;
        char v42 = v65;
        uint64_t v43 = v64;
        char v44 = v82;
        uint64_t v45 = v81;
        uint64_t v46 = v80;
        char v47 = v79;
        char v48 = v78;
        char v49 = v77;
        char v50 = v76;
        char v51 = v75;
        char v52 = v74;
        char v53 = v73;
        char v54 = v72;
        char v55 = v71;
        char v56 = v70;
        char v57 = v69;
        goto LABEL_23;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v40 = v67;
    uint64_t v41 = v66;
    char v42 = v65;
    uint64_t v43 = v64;
    char v44 = v82;
    uint64_t v45 = v81;
    uint64_t v46 = v80;
    char v47 = v79;
    char v48 = v78;
    char v49 = v77;
    char v50 = v76;
    char v51 = v75;
    char v52 = v74;
    char v53 = v73;
    char v54 = v72;
    char v55 = v71;
    char v56 = v70;
    char v57 = v69;
LABEL_23:
    uint64_t v91 = v17;
    int v92 = v9;
    char v93 = v50;
    char v94 = v51;
    uint64_t v95 = v40;
    uint64_t v96 = v41;
    char v97 = v42;
    uint64_t v98 = v43;
    char v99 = v44;
    char v100 = v52;
    int v101 = v14;
    char v102 = v53;
    uint64_t v103 = v45;
    uint64_t v104 = v46;
    char v105 = v47;
    char v106 = v48;
    char v107 = v49;
    char v108 = v54;
    char v109 = v55;
    char v110 = v56;
    char v111 = v57;
    uint64_t v58 = *(void *)(VARuntimeParameters.keywordsNoThresholds.getter() + 16);
    uint64_t v59 = swift_bridgeObjectRelease();
    uint64_t v60 = *(void *)((*(uint64_t (**)(uint64_t))(*(void *)v2 + 208))(v59) + 16);
    uint64_t v61 = swift_bridgeObjectRelease();
    if (v58 == v60)
    {
      return (*(uint64_t (**)(uint64_t))(*(void *)v2 + 328))(v61);
    }
    else
    {
      sub_2613DC2B8();
      swift_allocError();
      void *v62 = 0xD00000000000003CLL;
      v62[1] = 0x80000002614E4A50;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_26145066C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VASingleEnrollmentData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2614506D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_261450730(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + *(int *)(type metadata accessor for VASingleEnrollmentData() + 20));
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3)
  {
LABEL_14:
    __break(1u);
    return;
  }
  uint64_t v18 = v2;
  uint64_t v20 = v2 + 32;
  uint64_t v4 = *(void *)(*(void *)(v2 + 32) + 16);
  sub_2613C23AC(&qword_26A915200);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2614DA500;
  sub_2614095F0();
  *(void *)(v5 + 32) = sub_2614D5A78();
  *(void *)(v5 + 40) = sub_2614D58B8();
  *(void *)(v5 + 48) = sub_2614D58B8();
  sub_2614D5678();
  id v6 = objc_allocWithZone(MEMORY[0x263F00DB0]);
  id v7 = sub_26141AF88(v5, 65568);
  if (!v1)
  {
    unint64_t v8 = 0;
    uint64_t v19 = v3;
    while (!v4)
    {
LABEL_5:
      if (++v8 == v19) {
        return;
      }
    }
    if (v8 < *(void *)(v18 + 16))
    {
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = swift_allocObject();
        *(_OWORD *)(v10 + 16) = xmmword_2614DA500;
        *(void *)(v10 + 32) = sub_2614D5A78();
        *(void *)(v10 + 40) = sub_2614D58B8();
        *(void *)(v10 + 48) = sub_2614D58B8();
        sub_2614D5678();
        uint64_t v11 = *(void *)(v20 + 8 * v8);
        if (v9 >= *(void *)(v11 + 16)) {
          break;
        }
        unint64_t v12 = v9 + 1;
        int v13 = *(_DWORD *)(v11 + 4 * v9 + 32);
        id v14 = objc_allocWithZone(NSNumber);
        LODWORD(v15) = v13;
        id v16 = objc_msgSend(v14, sel_initWithFloat_, v15);
        uint64_t v17 = (void *)sub_2614D5648();
        swift_bridgeObjectRelease();
        objc_msgSend(v7, sel_setObject_forKeyedSubscript_, v16, v17);

        unint64_t v9 = v12;
        if (v4 == v12) {
          goto LABEL_5;
        }
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_14;
  }
}

uint64_t sub_26145097C()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for VASingleEnrollmentData();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  id v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (*(uint64_t (**)(void))(*(void *)v0 + 192))(MEMORY[0x263F8EE78]);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)v0 + 208))(v7);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v10 = (void (**)(char *))(*(void *)v0 + 320);
    unint64_t v21 = *v10;
    uint64_t v11 = v8 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v12 = *(void *)(v4 + 72);
    v17[1] = v8;
    uint64_t v18 = v12;
    uint64_t v19 = v10;
    while (1)
    {
      sub_26145066C(v11, (uint64_t)v6);
      v21(v6);
      if (v1) {
        break;
      }
      int v13 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v2 + 200))(v20);
      double v15 = v14;
      MEMORY[0x263E36760]();
      if (*(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_2614D5698();
      }
      sub_2614D56E8();
      sub_2614D5678();
      v13(v20, 0);
      sub_2614506D0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for VASingleEnrollmentData);
      v11 += v18;
      if (!--v9) {
        return swift_bridgeObjectRelease();
      }
    }
    sub_2614506D0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for VASingleEnrollmentData);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_261450BE8(unint64_t a1, char a2)
{
  uint64_t v6 = sub_2614D50C8();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_2614D5D98();
    swift_bridgeObjectRelease();
    if (v15)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_2614D5D98();
      unint64_t v8 = swift_bridgeObjectRelease();
      if (v11 >= 2) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11)
    {
      if (v11 >= 2)
      {
LABEL_4:
        sub_2613DC2B8();
        swift_allocError();
        unint64_t v13 = 0xD00000000000001FLL;
        id v14 = "Did not expect multiple buffers";
LABEL_19:
        unint64_t *v12 = v13;
        v12[1] = (unint64_t)(v14 - 32) | 0x8000000000000000;
        swift_willThrow();
        return v2;
      }
LABEL_7:
      if ((a1 & 0xC000000000000001) != 0)
      {
        MEMORY[0x263E36D80](0, a1);
      }
      else
      {
        if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_27;
        }
        swift_unknownObjectRetain();
      }
      type metadata accessor for VAFeatureExtractingEncoderOutput();
      uint64_t v16 = swift_dynamicCastClass();
      if (!v16)
      {
        swift_unknownObjectRelease();
        sub_2613DC2B8();
        swift_allocError();
        unint64_t v13 = 0xD000000000000018;
        id v14 = "Unexpected type of input";
        goto LABEL_19;
      }
      uint64_t v11 = v16;
      if ((*(unsigned char *)(v16 + 16) & 1) == 0) {
        goto LABEL_31;
      }
      unint64_t v8 = (*(uint64_t (**)(void))(*(void *)v2 + 184))();
      if (!(v8 >> 62))
      {
        uint64_t v17 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v18 = swift_bridgeObjectRelease();
        if (v17) {
          goto LABEL_14;
        }
LABEL_28:
        uint64_t v27 = sub_26146718C();
        (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v27, v6);
        uint64_t v28 = sub_2614D50A8();
        os_log_type_t v29 = sub_2614D5978();
        if (os_log_type_enabled(v28, v29))
        {
          uint64_t v30 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v30 = 0;
          _os_log_impl(&dword_2613B8000, v28, v29, "No enrollments set for this model", v30, 2u);
          MEMORY[0x263E38060](v30, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_31:
        type metadata accessor for VAResultGeneratorInput();
        char v20 = 0;
        uint64_t v21 = 0;
        uint64_t v22 = 0;
        goto LABEL_32;
      }
LABEL_27:
      v32[1] = v8;
      uint64_t v26 = sub_2614D5D98();
      uint64_t v18 = swift_bridgeObjectRelease();
      if (v26)
      {
LABEL_14:
        if (a2)
        {
          uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 256))(v18);
LABEL_16:
          type metadata accessor for VAResultGeneratorInput();
          uint64_t v19 = *(void *)(v11 + 32);
          swift_bridgeObjectRetain();
          char v20 = 1;
          uint64_t v21 = v2;
          uint64_t v22 = v19;
LABEL_32:
          uint64_t v2 = VAResultGeneratorInput.__allocating_init(hasInput:scores:vadBuffer:)(v20, v21, v22);
          swift_unknownObjectRelease();
          return v2;
        }
        if (*(void *)(v11 + 40))
        {
          uint64_t v23 = *(uint64_t (**)(uint64_t))(*(void *)v2 + 352);
          uint64_t v24 = swift_bridgeObjectRetain();
          uint64_t v2 = v23(v24);
          swift_bridgeObjectRelease();
          if (!v3) {
            goto LABEL_16;
          }
        }
        else
        {
          sub_2613DC2B8();
          swift_allocError();
          void *v25 = 0xD00000000000001ELL;
          v25[1] = 0x80000002614E35C0;
          swift_willThrow();
        }
        swift_unknownObjectRelease();
        return v2;
      }
      goto LABEL_28;
    }
  }
  type metadata accessor for VAResultGeneratorInput();
  return VAResultGeneratorInput.__allocating_init(hasInput:scores:vadBuffer:)(0, 0, 0);
}

uint64_t sub_26145106C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v8 = type metadata accessor for VASingleEnrollmentData();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 336))(a1, a2);
  if (!v4)
  {
    uint64_t v13 = result;
    if (*(unsigned char *)(result + 16))
    {
      uint64_t v50 = 0;
      char v51 = a3;
      uint64_t v14 = *(void *)((*(uint64_t (**)(void))(*(void *)v3 + 208))() + 16);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v57 = v14;
      if (v14)
      {
        char v52 = v11;
        unint64_t v15 = 0;
        uint64_t v59 = (void *)MEMORY[0x263F8EE78];
        uint64_t v55 = v13;
        uint64_t v56 = v3;
        uint64_t v53 = v9;
        uint64_t v54 = v8;
        while (1)
        {
          uint64_t v16 = *(void *)(v13 + 24);
          if (!v16) {
            break;
          }
          if (v15 >= *(void *)(v16 + 16))
          {
            __break(1u);
LABEL_25:
            __break(1u);
LABEL_26:
            __break(1u);
            break;
          }
          uint64_t v17 = *(void *)(v16 + 8 * v15 + 32);
          uint64_t v18 = *(void *)(v17 + 16);
          if (!v18) {
            goto LABEL_25;
          }
          float v19 = *(float *)(v17 + 32);
          uint64_t v20 = v18 - 1;
          if (v20)
          {
            uint64_t v21 = (float *)(v17 + 36);
            do
            {
              float v22 = *v21++;
              float v23 = v22;
              if (v19 < v22) {
                float v19 = v23;
              }
              --v20;
            }
            while (v20);
          }
          uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 232))(result);
          if (v15 >= *(void *)(result + 16)) {
            goto LABEL_26;
          }
          uint64_t v24 = (uint64_t)v52;
          sub_26145066C(result+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v15, (uint64_t)v52);
          swift_bridgeObjectRelease();
          uint64_t v25 = (uint64_t *)(v24 + *(int *)(v8 + 24));
          uint64_t v27 = *v25;
          uint64_t v26 = v25[1];
          swift_bridgeObjectRetain();
          sub_2614506D0(v24, (uint64_t (*)(void))type metadata accessor for VASingleEnrollmentData);
          double v28 = sub_26140C3F8();
          double v29 = sub_26140C3F8();
          uint64_t v30 = sub_2614967EC();
          uint64_t v31 = sub_2614967EC();
          char v32 = sub_2613D04A8();
          char v33 = sub_2613D04A8();
          char v34 = sub_2613F8710();
          sub_2614967F4(v27, v26, v30, v31, v32 & 1, v33 & 1, v34 & 1, (uint64_t)v60, v19, v28, v29);
          uint64_t v35 = v60[1];
          uint64_t v58 = v60[0];
          int v36 = v61;
          uint64_t v37 = v62;
          uint64_t v38 = v63;
          uint64_t v39 = v64;
          uint64_t v40 = v65;
          char v41 = v66;
          char v42 = v67;
          char v43 = v68;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_261416300(0, v59[2] + 1, 1, v59);
            uint64_t v59 = (void *)result;
          }
          unint64_t v45 = v59[2];
          unint64_t v44 = v59[3];
          if (v45 >= v44 >> 1)
          {
            uint64_t result = (uint64_t)sub_261416300((void *)(v44 > 1), v45 + 1, 1, v59);
            uint64_t v59 = (void *)result;
          }
          ++v15;
          uint64_t v47 = v58;
          uint64_t v46 = v59;
          v59[2] = v45 + 1;
          char v48 = &v46[8 * v45];
          v48[4] = v47;
          v48[5] = v35;
          *((_DWORD *)v48 + 12) = v36;
          v48[7] = v37;
          v48[8] = v38;
          v48[9] = v39;
          v48[10] = v40;
          *((unsigned char *)v48 + 88) = v41;
          *((unsigned char *)v48 + 89) = v42;
          *((unsigned char *)v48 + 90) = v43;
          uint64_t v3 = v56;
          uint64_t v8 = v54;
          uint64_t v13 = v55;
          uint64_t v9 = v53;
          if (v15 == v57) {
            goto LABEL_22;
          }
        }
        __break(1u);
      }
      else
      {
        uint64_t v59 = (void *)MEMORY[0x263F8EE78];
LABEL_22:
        type metadata accessor for VAKeywordResult();
        uint64_t v49 = VAKeywordResult.__allocating_init(detections:)((uint64_t)v59);
        sub_261481280(v49, v51);
        return swift_release();
      }
    }
    else
    {
      static VAVerifierModelOutput.none.getter(a3);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_261451450(uint64_t (*a1)(void))
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2613C23AC(&qword_26A915200);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2614DA520;
  sub_2614095F0();
  *(void *)(v6 + 32) = sub_2614D5A78();
  sub_2614D5678();
  id v7 = objc_allocWithZone(MEMORY[0x263F00DB0]);
  id v8 = sub_26141AF88(v6, 65568);
  if (v2) {
    return v5;
  }
  uint64_t v9 = v8;
  uint64_t v10 = (void *)sub_2614D5A78();
  objc_msgSend(v9, sel_setObject_atIndexedSubscript_, v10, 0);

  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_2614DA520;
  *(void *)(v11 + 32) = sub_2614D5A78();
  v56[0] = v11;
  sub_2614D5678();
  id v12 = objc_allocWithZone(MEMORY[0x263F00DB0]);
  id v13 = sub_26141AF88(v11, 65568);
  uint64_t v14 = (void *)sub_2614D5A78();
  objc_msgSend(v13, sel_setObject_atIndexedSubscript_, v14, 0);

  char v52 = (uint64_t (*)(void))*((void *)*v3 + 23);
  unint64_t v15 = v52();
  if (v15 >> 62) {
    goto LABEL_24;
  }
  for (uint64_t i = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10); ; uint64_t i = sub_2614D5D98())
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_2613D1BF8(MEMORY[0x263F8EE78], i);
    uint64_t v17 = (uint64_t (*)(void *, void))(*((uint64_t (**)(void *))*v3 + 37))(v56);
    sub_26141A3B0((uint64_t)a1, v18);
    uint64_t v20 = v17(v56, 0);
    char v51 = (void *)(*((uint64_t (**)(uint64_t))*v3 + 35))(v20);
    if (!v51)
    {
      swift_bridgeObjectRelease();
      sub_2613DC2B8();
      swift_allocError();
      void *v42 = 0xD000000000000024;
      v42[1] = 0x80000002614E3600;
      swift_willThrow();

      return v5;
    }
    unint64_t v21 = v52();
    uint64_t v55 = v3;
    if (v21 >> 62) {
      break;
    }
    a1 = *(uint64_t (**)(void))((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    if (!a1) {
      goto LABEL_28;
    }
LABEL_9:
    type metadata accessor for aa_verifier_20240530Input();
    float v22 = 0;
    uint64_t v50 = (uint64_t (*)(void))*((void *)*v3 + 20);
    uint64_t v47 = v9;
    unint64_t v45 = a1;
    id v46 = v13;
    while (a1 != v22)
    {
      id v54 = v51;
      uint64_t v23 = v52();
      if ((v23 & 0xC000000000000001) != 0)
      {
        id v24 = (id)MEMORY[0x263E36D80](v22, v23);
      }
      else
      {
        if ((unint64_t)v22 >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_22;
        }
        id v24 = *(id *)(v23 + 8 * (void)v22 + 32);
      }
      uint64_t v25 = (uint64_t)v24;
      swift_bridgeObjectRelease();
      id v26 = v9;
      id v48 = v13;
      uint64_t v49 = v26;
      uint64_t v27 = sub_26142E588((uint64_t)v54, v25, (uint64_t)v26, (uint64_t)v48);
      uint64_t v28 = v50();
      uint64_t v29 = (*(uint64_t (**)(void *))(*(void *)v28 + 136))(v27);
      swift_release();
      sub_2613C23AC(&qword_26A914AC0);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_2614D8210;
      a1 = *(uint64_t (**)(void))(*(void *)v29 + 88);
      uint64_t v31 = (void *)a1();
      uint64_t v53 = (void *)v5;
      id v32 = objc_msgSend(v31, sel_objectAtIndexedSubscript_, 0);

      uint64_t v3 = &selRef_tokenName;
      objc_msgSend(v32, sel_floatValue);
      int v34 = v33;

      *(_DWORD *)(v30 + 32) = v34;
      uint64_t v35 = (void *)a1();
      id v36 = objc_msgSend(v35, sel_objectAtIndexedSubscript_, 1);

      objc_msgSend(v36, sel_floatValue);
      int v38 = v37;

      *(_DWORD *)(v30 + 36) = v38;
      id v13 = (id)a1();
      id v39 = objc_msgSend(v13, sel_objectAtIndexedSubscript_, 2);

      objc_msgSend(v39, sel_floatValue);
      int v41 = v40;

      uint64_t v5 = (uint64_t)v53;
      *(_DWORD *)(v30 + 40) = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v5 = (uint64_t)sub_2613D8EC8(v53);
      }
      uint64_t v9 = v47;
      if ((unint64_t)v22 >= *(void *)(v5 + 16)) {
        goto LABEL_23;
      }
      *(void *)(v5 + 8 * (void)v22 + 32) = v30;
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      float v22 = (uint64_t (*)(void))((char *)v22 + 1);
      id v13 = v46;
      a1 = v45;
      uint64_t v3 = v55;
      if (v45 == v22)
      {

        char v43 = v54;
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    ;
  }
  uint64_t v44 = sub_2614D5D98();
  swift_bridgeObjectRelease();
  if (v44 < 0) {
    __break(1u);
  }
  a1 = (uint64_t (*)(void))v44;
  if (v44) {
    goto LABEL_9;
  }
LABEL_28:

  char v43 = v51;
LABEL_29:

  return v5;
}

void sub_261451B28()
{
}

void sub_261451B58()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 56);
}

uint64_t VAA2AVerifierModelV3.deinit()
{
  uint64_t v0 = VAVerifierModel.deinit();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t VAA2AVerifierModelV3.__deallocating_deinit()
{
  uint64_t v0 = VAVerifierModel.deinit();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_261451C70()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t sub_261451CB0()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t sub_261451CF0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 336))();
}

uint64_t sub_261451D3C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 312))();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> VAA2AVerifierModelV3.setAudioEnrollments(enrollments:)(Swift::OpaquePointer enrollments)
{
  uint64_t v2 = *(void (**)(uint64_t))(*(void *)v1 + 240);
  uint64_t v3 = swift_bridgeObjectRetain();
  v2(v3);
}

uint64_t sub_261451DD4()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(**(void **)v0 + 240);
  uint64_t v2 = swift_bridgeObjectRetain();
  return v1(v2);
}

uint64_t sub_261451E2C(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    id v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_2613C23AC(&qword_26A915780);
  uint64_t v10 = *(void *)(type metadata accessor for VASingleEnrollmentData() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  id v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_2614D5D58();
    __break(1u);
    return result;
  }
  id v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for VASingleEnrollmentData() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_2614521F8(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_261452094(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VASingleEnrollmentData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t method lookup function for VAA2AVerifierModelV3(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VAA2AVerifierModelV3);
}

uint64_t dispatch thunk of VAA2AVerifierModelV3.__allocating_init(computeUnits:)()
{
  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of VAA2AVerifierModelV3.didStartListening(requestParams:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of VAA2AVerifierModelV3.predictScores(predictionInput:shouldSkipVerifierInference:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of VAA2AVerifierModelV3.predict(predictionInput:shouldSkipVerifierInference:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t sub_2614521F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for VASingleEnrollmentData() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_2614D5DE8();
  __break(1u);
  return result;
}

BOOL static VASingleEnrollmentStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t VASingleEnrollmentStatus.hash(into:)()
{
  return sub_2614D6098();
}

uint64_t sub_261452390()
{
  uint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x73736563637573;
      break;
    case 2:
      uint64_t result = 0x6863656570536F6ELL;
      break;
    case 3:
      uint64_t result = 0x7973736F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_261452414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_261455450(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_26145243C(uint64_t a1)
{
  unint64_t v2 = sub_261452AD4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_261452478(uint64_t a1)
{
  unint64_t v2 = sub_261452AD4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2614524B4(uint64_t a1)
{
  unint64_t v2 = sub_261452B28();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2614524F0(uint64_t a1)
{
  unint64_t v2 = sub_261452B28();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_26145252C(uint64_t a1)
{
  unint64_t v2 = sub_261452B7C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_261452568(uint64_t a1)
{
  unint64_t v2 = sub_261452B7C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2614525A4(uint64_t a1)
{
  unint64_t v2 = sub_261452C24();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2614525E0(uint64_t a1)
{
  unint64_t v2 = sub_261452C24();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_26145261C(uint64_t a1)
{
  unint64_t v2 = sub_261452BD0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_261452658(uint64_t a1)
{
  unint64_t v2 = sub_261452BD0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VASingleEnrollmentStatus.encode(to:)(void *a1)
{
  uint64_t v3 = sub_2613C23AC(&qword_26A915788);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v29 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2613C23AC(&qword_26A915790);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  id v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2613C23AC(&qword_26A915798);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v23 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2613C23AC(&qword_26A9157A0);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x270FA5388](v9);
  unint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2613C23AC(&qword_26A9157A8);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  BOOL v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  sub_2613DBF24(a1, a1[3]);
  sub_261452AD4();
  sub_2614D60F8();
  switch(v16)
  {
    case 1:
      char v33 = 1;
      sub_261452BD0();
      unint64_t v17 = v23;
      sub_2614D5EE8();
      uint64_t v19 = v24;
      uint64_t v18 = v25;
      goto LABEL_6;
    case 2:
      char v34 = 2;
      sub_261452B7C();
      unint64_t v17 = v26;
      sub_2614D5EE8();
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      goto LABEL_6;
    case 3:
      char v35 = 3;
      sub_261452B28();
      unint64_t v17 = v29;
      sub_2614D5EE8();
      uint64_t v19 = v30;
      uint64_t v18 = v31;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_261452C24();
      sub_2614D5EE8();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_261452AD4()
{
  unint64_t result = qword_26A91D030;
  if (!qword_26A91D030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A91D030);
  }
  return result;
}

unint64_t sub_261452B28()
{
  unint64_t result = qword_26A91D038;
  if (!qword_26A91D038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A91D038);
  }
  return result;
}

unint64_t sub_261452B7C()
{
  unint64_t result = qword_26A91D040;
  if (!qword_26A91D040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A91D040);
  }
  return result;
}

unint64_t sub_261452BD0()
{
  unint64_t result = qword_26A91D048;
  if (!qword_26A91D048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A91D048);
  }
  return result;
}

unint64_t sub_261452C24()
{
  unint64_t result = qword_26A91D050;
  if (!qword_26A91D050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A91D050);
  }
  return result;
}

uint64_t VASingleEnrollmentStatus.hashValue.getter()
{
  return sub_2614D60B8();
}

uint64_t VASingleEnrollmentStatus.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = sub_2613C23AC(&qword_26A9157B0);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x270FA5388](v3);
  id v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2613C23AC(&qword_26A9157B8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v5);
  id v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2613C23AC(&qword_26A9157C0);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2613C23AC(&qword_26A9157C8);
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_2613C23AC(&qword_26A9157D0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  char v51 = a1;
  sub_2613DBF24(a1, v18);
  sub_261452AD4();
  uint64_t v19 = v52;
  sub_2614D60D8();
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v39 = v11;
  int v40 = v10;
  uint64_t v52 = 0;
  uint64_t v21 = v48;
  uint64_t v20 = v49;
  uint64_t v22 = v50;
  uint64_t v23 = v17;
  uint64_t v24 = sub_2614D5ED8();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v27 = sub_2614D5C88();
    swift_allocError();
    uint64_t v29 = v28;
    sub_2613C23AC(&qword_26A915778);
    void *v29 = &type metadata for VASingleEnrollmentStatus;
    sub_2614D5E28();
    sub_2614D5C78();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_7:
    uint64_t v30 = (uint64_t)v51;
    return sub_2613DD718(v30);
  }
  char v25 = *(unsigned char *)(v24 + 32);
  switch(v25)
  {
    case 1:
      char v54 = 1;
      sub_261452BD0();
      char v32 = v40;
      uint64_t v33 = v52;
      sub_2614D5E18();
      if (v33) {
        goto LABEL_12;
      }
      uint64_t v35 = v42;
      uint64_t v34 = v43;
      goto LABEL_16;
    case 2:
      char v55 = 2;
      sub_261452B7C();
      char v32 = v46;
      uint64_t v36 = v52;
      sub_2614D5E18();
      if (v36) {
        goto LABEL_12;
      }
      uint64_t v34 = v44;
      uint64_t v35 = v45;
LABEL_16:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      goto LABEL_17;
    case 3:
      char v56 = 3;
      sub_261452B28();
      uint64_t v37 = v52;
      sub_2614D5E18();
      if (v37)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        uint64_t v30 = (uint64_t)v51;
        return sub_2613DD718(v30);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      int v38 = v47;
      goto LABEL_19;
    default:
      char v53 = 0;
      sub_261452C24();
      uint64_t v26 = v52;
      sub_2614D5E18();
      if (v26)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v39);
LABEL_17:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      int v38 = v47;
LABEL_19:
      unsigned char *v38 = v25;
      break;
  }
  return sub_2613DD718(v30);
}

uint64_t sub_2614532F4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return VASingleEnrollmentStatus.init(from:)(a1, a2);
}

uint64_t sub_26145330C(void *a1)
{
  return VASingleEnrollmentStatus.encode(to:)(a1);
}

uint64_t VASingleEnrollmentData.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2614D4CE8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t VASingleEnrollmentData.embeddings.getter()
{
  type metadata accessor for VASingleEnrollmentData();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for VASingleEnrollmentData()
{
  uint64_t result = qword_26A91D360;
  if (!qword_26A91D360) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t VASingleEnrollmentData.keywordIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for VASingleEnrollmentData() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VASingleEnrollmentData.debugAudioSamples.getter()
{
  type metadata accessor for VASingleEnrollmentData();
  return swift_bridgeObjectRetain();
}

uint64_t VASingleEnrollmentData.debugStartFrame.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for VASingleEnrollmentData() + 32));
}

uint64_t VASingleEnrollmentData.debugStartFrame.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for VASingleEnrollmentData();
  *(void *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

double (*VASingleEnrollmentData.debugStartFrame.modify())(void)
{
  return nullsub_1;
}

uint64_t VASingleEnrollmentData.debugEndFrame.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for VASingleEnrollmentData() + 36));
}

uint64_t VASingleEnrollmentData.debugEndFrame.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for VASingleEnrollmentData();
  *(void *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

double (*VASingleEnrollmentData.debugEndFrame.modify())(void)
{
  return nullsub_1;
}

uint64_t VASingleEnrollmentData.status.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for VASingleEnrollmentData();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 40));
  return result;
}

unint64_t sub_2614535EC(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E69646465626D65;
      break;
    case 2:
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x6174536775626564;
      break;
    case 5:
      unint64_t result = 0x646E456775626564;
      break;
    case 6:
      unint64_t result = 0x737574617473;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2614536D8()
{
  return sub_2614535EC(*v0);
}

uint64_t sub_2614536E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2614555F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_261453708(uint64_t a1)
{
  unint64_t v2 = sub_261453AB4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_261453744(uint64_t a1)
{
  unint64_t v2 = sub_261453AB4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VASingleEnrollmentData.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2613C23AC(&qword_26A9157D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2613DBF24(a1, a1[3]);
  sub_261453AB4();
  sub_2614D60F8();
  LOBYTE(v12) = 0;
  sub_2614D4CE8();
  sub_2614540D0(&qword_26A914E88);
  sub_2614D5F58();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for VASingleEnrollmentData();
    uint64_t v12 = *(void *)(v3 + v9[5]);
    HIBYTE(v11) = 1;
    sub_2613C23AC(&qword_26A915020);
    sub_261454114(&qword_26A9157E0, &qword_26A9157E8);
    sub_2614D5F58();
    LOBYTE(v12) = 2;
    sub_2614D5F18();
    uint64_t v12 = *(void *)(v3 + v9[7]);
    HIBYTE(v11) = 3;
    sub_2613C23AC(&qword_26A914AB8);
    sub_261454198(&qword_26A9157E8);
    sub_2614D5F08();
    LOBYTE(v12) = 4;
    sub_2614D5F48();
    LOBYTE(v12) = 5;
    sub_2614D5F48();
    LOBYTE(v12) = *(unsigned char *)(v3 + v9[10]);
    HIBYTE(v11) = 6;
    sub_261453B08();
    sub_2614D5F58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_261453AB4()
{
  unint64_t result = qword_26A91D058[0];
  if (!qword_26A91D058[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A91D058);
  }
  return result;
}

unint64_t sub_261453B08()
{
  unint64_t result = qword_26A9157F0;
  if (!qword_26A9157F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A9157F0);
  }
  return result;
}

uint64_t VASingleEnrollmentData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v27 = sub_2614D4CE8();
  uint64_t v25 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v26 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_2613C23AC(&qword_26A9157F8);
  uint64_t v24 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (int *)type metadata accessor for VASingleEnrollmentData();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(int *)(v7 + 32);
  *(void *)&v9[v10] = -1;
  uint64_t v11 = *(int *)(v7 + 36);
  *(void *)&v9[v11] = -1;
  sub_2613DBF24(a1, a1[3]);
  sub_261453AB4();
  uint64_t v28 = v5;
  uint64_t v12 = v30;
  sub_2614D60D8();
  if (v12) {
    return sub_2613DD718((uint64_t)a1);
  }
  uint64_t v30 = v10;
  uint64_t v22 = v11;
  uint64_t v13 = (uint64_t)a1;
  uint64_t v14 = v24;
  uint64_t v15 = v25;
  LOBYTE(v32) = 0;
  sub_2614540D0(&qword_26A915800);
  unint64_t v17 = v26;
  uint64_t v16 = v27;
  sub_2614D5EC8();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v9, v17, v16);
  sub_2613C23AC(&qword_26A915020);
  char v31 = 1;
  sub_261454114(&qword_26A915808, &qword_26A915810);
  sub_2614D5EC8();
  *(void *)&v9[v6[5]] = v32;
  LOBYTE(v32) = 2;
  uint64_t v26 = 0;
  uint64_t v18 = sub_2614D5E98();
  uint64_t v19 = (uint64_t *)&v9[v6[6]];
  uint64_t *v19 = v18;
  v19[1] = v20;
  sub_2613C23AC(&qword_26A914AB8);
  char v31 = 3;
  sub_261454198(&qword_26A915810);
  sub_2614D5E78();
  *(void *)&v9[v6[7]] = v32;
  LOBYTE(v32) = 4;
  *(void *)&v9[v30] = sub_2614D5EB8();
  LOBYTE(v32) = 5;
  *(void *)&v9[v22] = sub_2614D5EB8();
  char v31 = 6;
  sub_2614541FC();
  sub_2614D5EC8();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v28, v29);
  v9[v6[10]] = v32;
  sub_26145066C((uint64_t)v9, v23);
  sub_2613DD718(v13);
  return sub_261454250((uint64_t)v9);
}

uint64_t sub_2614540D0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2614D4CE8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261454114(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2613C5EC8(&qword_26A915020);
    sub_261454198(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_261454198(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2613C5EC8(&qword_26A914AB8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2614541FC()
{
  unint64_t result = qword_26A915818;
  if (!qword_26A915818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A915818);
  }
  return result;
}

uint64_t sub_261454250(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VASingleEnrollmentData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2614542AC()
{
  return -1;
}

int *sub_2614542B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  char v17 = *a8;
  uint64_t v18 = sub_2614D4CE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(a9, a1, v18);
  unint64_t result = (int *)type metadata accessor for VASingleEnrollmentData();
  *(void *)(a9 + result[5]) = a2;
  uint64_t v20 = (void *)(a9 + result[6]);
  void *v20 = a3;
  v20[1] = a4;
  *(void *)(a9 + result[7]) = a5;
  *(void *)(a9 + result[8]) = a6;
  *(void *)(a9 + result[9]) = a7;
  *(unsigned char *)(a9 + result[10]) = v17;
  return result;
}

uint64_t sub_26145438C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VASingleEnrollmentData.init(from:)(a1, a2);
}

uint64_t sub_2614543A4(void *a1)
{
  return VASingleEnrollmentData.encode(to:)(a1);
}

uint64_t VAEnrollmentProgress.samplesCollected.getter()
{
  return *(void *)v0;
}

uint64_t VAEnrollmentProgress.maxSamples.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t VAEnrollmentProgress.completed.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_2614543D4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = a3;
  return result;
}

unint64_t sub_2614543E4()
{
  unint64_t result = qword_26A915820[0];
  if (!qword_26A915820[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A915820);
  }
  return result;
}

ValueMetadata *type metadata accessor for VASingleEnrollmentStatus()
{
  return &type metadata for VASingleEnrollmentStatus;
}

void *initializeBufferWithCopyOfBuffer for VASingleEnrollmentData(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2614D4CE8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
    uint64_t v13 = a3[10];
    *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for VASingleEnrollmentData(uint64_t a1)
{
  uint64_t v2 = sub_2614D4CE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VASingleEnrollmentData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2614D4CE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}