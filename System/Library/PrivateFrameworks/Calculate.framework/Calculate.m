void __Block_byref_object_dispose__786(uint64_t a1)
{
}

uint64_t __Block_byref_object_copy__785(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1BDCDFD2C()
{
  return sub_1BDCDFD44();
}

uint64_t sub_1BDCDFD44()
{
  return sub_1BDCDFD60(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1BDCDFD60(uint64_t a1, uint64_t a2)
{
  v3 = (void *)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___plain);
  swift_beginAccess();
  void *v3 = a2;
  swift_retain_n();
  swift_release();
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA48();
  swift_release();
  return swift_release();
}

void sub_1BDCDFE8C()
{
}

void sub_1BDCDFEA4()
{
  sub_1BDCDFED0(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1BDCDFED0(uint64_t a1, void *a2)
{
  v2 = *(void **)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatter);
  *(void *)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatter) = a2;
  id v3 = a2;

  sub_1BDCDFF30();
}

void sub_1BDCDFF30()
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  v1 = *(void **)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatter);
  if (v1)
  {
    type metadata accessor for NumberFormatterObserver();
    uint64_t v2 = swift_allocObject();
    swift_weakInit();
    id v3 = v1;
    swift_retain();
    id v4 = sub_1BDCE0170(v3, (uint64_t)sub_1BDD51E3C, v2, (uint64_t)sub_1BDD51E44, v0);
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x1F4188790](KeyPath, v6);
    sub_1BDDAFA48();

    swift_release();
  }
  else
  {
    uint64_t v7 = swift_getKeyPath();
    MEMORY[0x1F4188790](v7, v8);
    sub_1BDDAFA48();
    swift_release();
  }
}

id sub_1BDCE0170(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v11 = objc_allocWithZone(v5);
  return sub_1BDCE01D4(a1, a2, a3, a4, a5);
}

id sub_1BDCE01D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)&v5[OBJC_IVAR____TtC9Calculate23NumberFormatterObserver_numberFormatter] = a1;
  uint64_t v7 = &v5[OBJC_IVAR____TtC9Calculate23NumberFormatterObserver_didChange];
  *(void *)uint64_t v7 = a2;
  *((void *)v7 + 1) = a3;
  uint64_t v8 = (uint64_t *)&v5[OBJC_IVAR____TtC9Calculate23NumberFormatterObserver_willChange];
  *uint64_t v8 = a4;
  v8[1] = a5;
  id v9 = a1;
  swift_retain();
  sub_1BDCE0398(a4);
  v19.receiver = v5;
  v19.super_class = (Class)type metadata accessor for NumberFormatterObserver();
  id v10 = objc_msgSendSuper2(&v19, sel_init);
  uint64_t v11 = qword_1EBA29B30;
  id v12 = v10;
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_1EBA2AF88;
  uint64_t v14 = *(void *)(qword_1EBA2AF88 + 16);
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = v13 + 40;
    do
    {
      id v16 = v12;
      swift_bridgeObjectRetain();
      v17 = (void *)sub_1BDDAFD38();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_addObserver_forKeyPath_options_context_, v16, v17, 8, 0);

      v15 += 16;
      --v14;
    }
    while (v14);
  }
  else
  {
    swift_bridgeObjectRetain();
  }

  sub_1BDCE03A8(a4);
  swift_bridgeObjectRelease();

  swift_release();
  return v12;
}

uint64_t type metadata accessor for NumberFormatterObserver()
{
  return self;
}

uint64_t sub_1BDCE0398(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1BDCE03A8(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t CalculateExpression.id.getter@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  swift_beginAccess();
  uint64_t v4 = sub_1BDDAF9F8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BDCE04B4()
{
  return swift_weakLoadStrong();
}

uint64_t CalculateExpression.activeOperation.getter()
{
  return swift_retain();
}

uint64_t _s9Calculate0A10ExpressionC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BDDAF9F8();
  v5 = *(void **)(v4 - 8);
  uint64_t v6 = v5[8];
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v8 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v16[3] = a1;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v9 = a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  swift_beginAccess();
  id v10 = (uint64_t (*)(char *, uint64_t, uint64_t))v5[2];
  uint64_t v11 = v10(v8, v9, v4);
  MEMORY[0x1F4188790](v11, v12);
  swift_getKeyPath();
  v16[0] = a2;
  sub_1BDDAFA58();
  swift_release();
  uint64_t v13 = a2 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  swift_beginAccess();
  v10(v8, v13, v4);
  LOBYTE(v13) = sub_1BDDAF9D8();
  uint64_t v14 = (void (*)(char *, uint64_t))v5[1];
  v14(v8, v4);
  v14(v8, v4);
  return v13 & 1;
}

uint64_t static CalculateExpression.highPrecisionDigits(_:)(uint64_t a1, unint64_t a2)
{
  return sub_1BDCE087C(a1, a2);
}

uint64_t sub_1BDCE087C(uint64_t a1, unint64_t a2)
{
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  sub_1BDCEB640();
  if ((sub_1BDDB0228() & 1) == 0)
  {
    uint64_t v40 = a1;
    uint64_t v41 = a2;
    if ((sub_1BDDB0228() & 1) == 0) {
      return 0;
    }
  }
  uint64_t v4 = (void *)sub_1BDDAFD38();
  v5 = (void *)sub_1BDDAFD38();
  uint64_t v6 = (uint64_t)objc_msgSend(v4, sel_rangeOfString_, v5);

  uint64_t v7 = (void *)sub_1BDDAFD38();
  if (__OFADD__(v6, 1))
  {
    __break(1u);
LABEL_66:
    swift_bridgeObjectRelease();
    goto LABEL_52;
  }
  uint64_t v8 = v7;
  id v9 = objc_msgSend(v7, sel_substringFromIndex_, v6 + 1);

  uint64_t v10 = sub_1BDDAFD68();
  unint64_t v12 = v11;

  uint64_t result = sub_1BDDAFDC8();
  uint64_t v14 = HIBYTE(v12) & 0xF;
  uint64_t v15 = v10 & 0xFFFFFFFFFFFFLL;
  if ((v12 & 0x2000000000000000) != 0) {
    uint64_t v16 = HIBYTE(v12) & 0xF;
  }
  else {
    uint64_t v16 = v10 & 0xFFFFFFFFFFFFLL;
  }
  if (!v16) {
    goto LABEL_66;
  }
  if ((v12 & 0x1000000000000000) != 0) {
    goto LABEL_68;
  }
  if ((v12 & 0x2000000000000000) == 0)
  {
    if ((v10 & 0x1000000000000000) != 0) {
      v17 = (unsigned __int8 *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      v17 = (unsigned __int8 *)sub_1BDDB03C8();
    }
    uint64_t v18 = (uint64_t)sub_1BDD1465C(v17, v15, 10);
    uint64_t v10 = v19 & 1;
LABEL_48:
    while (1)
    {
      swift_bridgeObjectRelease();
      uint64_t v30 = (v10 & 1) != 0 ? 0 : v18;
      BOOL v31 = __OFADD__(v6, v30);
      v6 += v30;
      if (!v31) {
        break;
      }
      __break(1u);
LABEL_68:
      uint64_t v18 = sub_1BDD4FDF4(v10, v12, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1BDD1465C);
      uint64_t v10 = v39;
    }
LABEL_52:
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1BDD3FEA4(a1, a2);
    uint64_t v34 = v33;
    swift_bridgeObjectRelease();
    if (v34)
    {
      if (v32 == 45 && v34 == 0xE100000000000000)
      {
        uint64_t result = swift_bridgeObjectRelease();
LABEL_57:
        BOOL v31 = __OFSUB__(v6--, 1);
        if (!v31) {
          return v6 & ~(v6 >> 63);
        }
        __break(1u);
        goto LABEL_71;
      }
      char v35 = sub_1BDDB04E8();
      uint64_t result = swift_bridgeObjectRelease();
      if (v35) {
        goto LABEL_57;
      }
    }
    return v6 & ~(v6 >> 63);
  }
  uint64_t v40 = v10;
  uint64_t v41 = v12 & 0xFFFFFFFFFFFFFFLL;
  if (v10 != 43)
  {
    if (v10 == 45)
    {
      if (!v14)
      {
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
      if (v14 != 1 && (BYTE1(v10) - 48) <= 9u)
      {
        uint64_t v20 = (BYTE1(v10) - 48);
        if (v14 == 2)
        {
          uint64_t v10 = 0;
          uint64_t v18 = -v20;
          goto LABEL_48;
        }
        if ((BYTE2(v10) - 48) <= 9u)
        {
          uint64_t v18 = -10 * (BYTE1(v10) - 48) - (BYTE2(v10) - 48);
          uint64_t v29 = v14 - 3;
          if (!v29) {
            goto LABEL_47;
          }
          v36 = (unsigned __int8 *)&v40 + 3;
          while (1)
          {
            unsigned int v37 = *v36 - 48;
            if (v37 > 9) {
              break;
            }
            uint64_t v38 = 10 * v18;
            if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63) {
              break;
            }
            uint64_t v18 = v38 - v37;
            if (__OFSUB__(v38, v37)) {
              break;
            }
            uint64_t v10 = 0;
            ++v36;
            if (!--v29) {
              goto LABEL_48;
            }
          }
        }
      }
LABEL_35:
      uint64_t v18 = 0;
      uint64_t v10 = 1;
      goto LABEL_48;
    }
    if (!v14 || (v10 - 48) > 9u) {
      goto LABEL_35;
    }
    uint64_t v18 = (v10 - 48);
    if (v14 != 1)
    {
      if ((BYTE1(v10) - 48) > 9u) {
        goto LABEL_35;
      }
      uint64_t v18 = 10 * (v10 - 48) + (BYTE1(v10) - 48);
      uint64_t v25 = v14 - 2;
      if (v25)
      {
        v26 = (unsigned __int8 *)&v40 + 2;
        while (1)
        {
          unsigned int v27 = *v26 - 48;
          if (v27 > 9) {
            goto LABEL_35;
          }
          uint64_t v28 = 10 * v18;
          if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63) {
            goto LABEL_35;
          }
          uint64_t v18 = v28 + v27;
          if (__OFADD__(v28, v27)) {
            goto LABEL_35;
          }
          uint64_t v10 = 0;
          ++v26;
          if (!--v25) {
            goto LABEL_48;
          }
        }
      }
    }
    goto LABEL_47;
  }
  if (v14)
  {
    if (v14 == 1 || (BYTE1(v10) - 48) > 9u) {
      goto LABEL_35;
    }
    uint64_t v18 = (BYTE1(v10) - 48);
    if (v14 != 2)
    {
      if ((BYTE2(v10) - 48) > 9u) {
        goto LABEL_35;
      }
      uint64_t v18 = 10 * (BYTE1(v10) - 48) + (BYTE2(v10) - 48);
      uint64_t v21 = v14 - 3;
      if (v21)
      {
        v22 = (unsigned __int8 *)&v40 + 3;
        while (1)
        {
          unsigned int v23 = *v22 - 48;
          if (v23 > 9) {
            goto LABEL_35;
          }
          uint64_t v24 = 10 * v18;
          if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63) {
            goto LABEL_35;
          }
          uint64_t v18 = v24 + v23;
          if (__OFADD__(v24, v23)) {
            goto LABEL_35;
          }
          uint64_t v10 = 0;
          ++v22;
          if (!--v21) {
            goto LABEL_48;
          }
        }
      }
    }
LABEL_47:
    uint64_t v10 = 0;
    goto LABEL_48;
  }
LABEL_72:
  __break(1u);
  return result;
}

uint64_t sub_1BDCE0D24()
{
  unsigned __int8 v6 = *(unsigned char *)(v0 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  unsigned __int8 v5 = 10;
  if (!static CalculateExpression.TokenType.== infix(_:_:)(&v6, &v5)) {
    return 0;
  }
  if ((*(uint64_t (**)(void))(*(void *)v0 + 208))() == 10127586 && v1 == 0xA300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v3 = sub_1BDDB04E8();
    swift_bridgeObjectRelease();
    return v3 & 1;
  }
}

uint64_t CalculateExpression.activeError.getter()
{
  uint64_t v0 = *(uint64_t (**)(uint64_t))(*(void *)sub_1BDCE25A0() + 344);
  uint64_t v1 = swift_retain();
  uint64_t v2 = v0(v1);
  swift_release();
  return v2;
}

void *sub_1BDCE0E60()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

unint64_t sub_1BDCE0EA8(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1BDDB0448();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269A0);
      uint64_t result = sub_1BDDB0318();
      unint64_t v3 = result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1BDDB0448();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  unint64_t v3 = MEMORY[0x1E4FBC870];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  unint64_t v8 = v3 + 56;
  unint64_t v22 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v21 = v1;
  while (v22)
  {
    uint64_t result = MEMORY[0x1C18862A0](v7, v1);
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_26;
    }
LABEL_18:
    type metadata accessor for CalculateExpression.Operation();
    sub_1BDCF1294(&qword_1EBA26898, (void (*)(uint64_t))type metadata accessor for CalculateExpression.Operation);
    uint64_t result = sub_1BDDAFCE8();
    uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)(v8 + 8 * (v12 >> 6));
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_1BDCF1294((unint64_t *)&qword_1EBA268A0, (void (*)(uint64_t))type metadata accessor for CalculateExpression.Operation);
      do
      {
        uint64_t result = sub_1BDDAFD28();
        if (result)
        {
          uint64_t result = swift_release();
          unint64_t v1 = v21;
          goto LABEL_11;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)(v8 + 8 * (v12 >> 6));
        uint64_t v15 = 1 << v12;
      }
      while ((v14 & (1 << v12)) != 0);
      unint64_t v1 = v21;
    }
    *(void *)(v8 + 8 * v13) = v15 | v14;
    *(void *)(*(void *)(v3 + 48) + 8 * v12) = v9;
    uint64_t v17 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v17, 1);
    uint64_t v18 = v17 + 1;
    if (v10) {
      goto LABEL_27;
    }
    *(void *)(v3 + 16) = v18;
LABEL_11:
    if (v7 == v5) {
      return v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_28;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  uint64_t result = swift_retain();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t CalculateExpression.__allocating_init(options:base:id:)(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  LOBYTE(v19) = *a2;
  uint64_t v5 = sub_1BDDAF9F8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  unint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v9, a3, v5);
  uint64_t v10 = swift_allocObject();
  CalculateExpression.init(_:options:base:id:)(0, 0xE000000000000000, a1, (char *)&v19, (uint64_t)v9);
  swift_retain();
  sub_1BDCE25A0();
  swift_getKeyPath();
  uint64_t v17 = v10;
  char v18 = 0;
  uint64_t v19 = v10;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  uint64_t v15 = v10;
  char v16 = 1;
  uint64_t v19 = v10;
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  uint64_t v13 = v10;
  char v14 = 1;
  uint64_t v19 = v10;
  sub_1BDDAFA48();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a3, v5);
  return v10;
}

uint64_t CalculateExpression.init(_:options:base:id:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  char v8 = *a4;
  *(void *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression_internalRequest) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalResult) = 0;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__isEvaluating) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalError) = 0;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__graphNeedsEvaluation) = 1;
  *(void *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___graphableResult) = 0;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && sub_1BDDB0448()) {
    unint64_t v11 = sub_1BDCE0EA8(MEMORY[0x1E4FBC860]);
  }
  else {
    unint64_t v11 = MEMORY[0x1E4FBC870];
  }
  *(void *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__allowedOperations) = v11;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild) = 0;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation) = 1;
  *(void *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___documentReferenceCount) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___graphReferenceCount) = 0;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression_isRemoving) = 0;
  swift_weakInit();
  swift_weakInit();
  *(void *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___variableResults) = sub_1BDCE1A44(v9);
  *(void *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__variables) = sub_1BDCE1B5C(v9);
  *(unsigned char *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___updateGraphable) = 1;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___isGraphable) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___graphableVariables) = v9;
  unint64_t v12 = (void *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__graphableVariable);
  *unint64_t v12 = 0;
  v12[1] = 0;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___updateExpression) = 0;
  unint64_t v13 = sub_1BDCE1914(v9);
  uint64_t v14 = OBJC_IVAR____TtC9Calculate19CalculateExpression__options;
  *(void *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__options) = v13;
  uint64_t v15 = v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__selectedRange;
  *(void *)uint64_t v15 = 0;
  *(void *)(v15 + 8) = 0;
  *(unsigned char *)(v15 + 16) = 1;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___assumeDegrees) = 0;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___allowPartialExpressions) = 0;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___flexibleFractionDigits) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___engine) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___format) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___locales) = v9;
  *(void *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatterObserver) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatter) = 0;
  uint64_t v16 = OBJC_IVAR____TtC9Calculate19CalculateExpression__base;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__base) = 1;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___updatePlain) = 0;
  type metadata accessor for CalculateExpression.PlainExpression();
  uint64_t v17 = CalculateExpression.PlainExpression.__allocating_init()();
  uint64_t v18 = v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___plain;
  *(void *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___plain) = v17;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___notifyUpdatedRich) = 1;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___updateRich) = 1;
  type metadata accessor for CalculateExpression.RichExpression();
  uint64_t v19 = sub_1BDCE72C0();
  uint64_t v20 = v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___rich;
  *(void *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___rich) = v19;
  *(void *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__postfixStack) = v9;
  *(void *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__activeOperation) = 0;
  sub_1BDDAFA88();
  unint64_t v21 = (void *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___expression);
  *unint64_t v21 = a1;
  v21[1] = a2;
  swift_bridgeObjectRelease();
  *(void *)(v5 + v14) = a3;
  *(unsigned char *)(v5 + v16) = v8;
  uint64_t v22 = v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  uint64_t v23 = sub_1BDDAF9F8();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v22, a5, v23);
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  swift_beginAccess();
  uint64_t v25 = *(void (**)(uint64_t))(**(void **)v20 + 184);
  swift_retain();
  uint64_t v26 = swift_retain();
  v25(v26);
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  swift_beginAccess();
  unsigned int v27 = *(void (**)(uint64_t))(**(void **)v18 + 192);
  swift_retain();
  swift_retain();
  v27(v6);
  swift_release();
  sub_1BDCE1C78();
  sub_1BDCE2B80();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a5, v23);
  return v6;
}

uint64_t sub_1BDCE18C0()
{
  return swift_release();
}

unint64_t sub_1BDCE1914(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269C8);
  uint64_t v2 = sub_1BDDB0488();
  unint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BDD19A60(v6, (uint64_t)&v13, &qword_1EBA26928);
    uint64_t v7 = v13;
    unint64_t result = sub_1BDD4D9C0(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_1BDD198E8(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BDCE1A44(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF250);
  uint64_t v2 = (void *)sub_1BDDB0488();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (id *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    id v7 = *v4;
    id v8 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BDD13EB4(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BDCE1B5C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF258);
  uint64_t v2 = (void *)sub_1BDDB0488();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_1BDD13EB4(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BDCE1C78()
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  unint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__options);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1BDDAFA58();
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)Strong + 168))(Strong);
    sub_1BDD3DA44(v2, v4);
    swift_release();
  }
  uint64_t v5 = (id *)objc_allocWithZone((Class)CalculateKeys);
  type metadata accessor for CalculateKey();
  sub_1BDCF1294(&qword_1EBA26918, (void (*)(uint64_t))type metadata accessor for CalculateKey);
  uint64_t v6 = (void *)sub_1BDDAFC68();
  swift_bridgeObjectRelease();
  uint64_t v7 = -[CalculateKeys initWithOptions:](v5, v6);

  -[CalculateKeys assumeDegrees]((uint64_t)v7);
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x1F4188790](KeyPath, v9);
  sub_1BDDAFA48();
  swift_release();
  -[CalculateKeys allowPartialExpressions]((uint64_t)v7);
  uint64_t v10 = swift_getKeyPath();
  MEMORY[0x1F4188790](v10, v11);
  sub_1BDDAFA48();
  swift_release();
  -[CalculateKeys flexibleFractionDigits]((uint64_t)v7);
  uint64_t v12 = swift_getKeyPath();
  MEMORY[0x1F4188790](v12, v13);
  sub_1BDDAFA48();
  swift_release();
  -[CalculateKeys engine]((uint64_t)v7);
  uint64_t v14 = swift_getKeyPath();
  MEMORY[0x1F4188790](v14, v15);
  sub_1BDDAFA48();
  swift_release();
  -[CalculateKeys format]((uint64_t)v7);
  uint64_t v16 = swift_getKeyPath();
  MEMORY[0x1F4188790](v16, v17);
  sub_1BDDAFA48();
  swift_release();
  id v18 = -[CalculateKeys numberFormatter]((uint64_t)v7);
  uint64_t v19 = swift_getKeyPath();
  MEMORY[0x1F4188790](v19, v20);
  sub_1BDDAFA48();
  swift_release();

  id v21 = -[CalculateKeys variables]((uint64_t)v7);
  if (v21)
  {
    uint64_t v22 = v21;
    sub_1BDCE6874(0, &qword_1EA0DF248);
    uint64_t v23 = sub_1BDDAFC78();

    sub_1BDD3DF64(v23);
    swift_bridgeObjectRelease();
    uint64_t v24 = swift_getKeyPath();
    MEMORY[0x1F4188790](v24, v25);
    sub_1BDDAFA48();
    swift_release();
    swift_bridgeObjectRelease();
  }
  id v26 = -[CalculateKeys locales]((uint64_t)v7);
  if (v26)
  {
    unsigned int v27 = v26;
    sub_1BDDAFA38();
    sub_1BDDAFFC8();
  }
  uint64_t v28 = swift_getKeyPath();
  MEMORY[0x1F4188790](v28, v29);
  sub_1BDDAFA48();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v30 = swift_getKeyPath();
  MEMORY[0x1F4188790](v30, v31);
  sub_1BDDAFA48();
  swift_release();
  uint64_t v32 = swift_getKeyPath();
  MEMORY[0x1F4188790](v32, v33);
  sub_1BDDAFA48();
  swift_release();
  uint64_t v34 = swift_getKeyPath();
  MEMORY[0x1F4188790](v34, v35);
  sub_1BDDAFA48();

  return swift_release();
}

void type metadata accessor for CalculateKey()
{
  if (!qword_1EBA28EF8)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EBA28EF8);
    }
  }
}

uint64_t CalculateExpression.accessibilityMathEquation.getter()
{
  uint64_t v0 = *(uint64_t (**)(uint64_t))(*(void *)sub_1BDCE25A0() + 752);
  uint64_t v1 = swift_retain();
  uint64_t v2 = v0(v1);
  swift_release();
  return v2;
}

uint64_t CalculateExpression.rich.getter()
{
  sub_1BDCE25A0();
  return swift_retain();
}

uint64_t sub_1BDCE25A0()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v2 = (unsigned char *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___notifyUpdatedRich);
  swift_beginAccess();
  if (*v2 == 1)
  {
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x1F4188790](KeyPath, v4);
    sub_1BDDAFA48();
    swift_release();
  }
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  uint64_t v5 = (unsigned char *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___updateRich);
  swift_beginAccess();
  if (*v5 == 1)
  {
    swift_getKeyPath();
    sub_1BDDAFA58();
    swift_release();
    uint64_t v6 = (unsigned char *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___updatePlain);
    swift_beginAccess();
    if (*v6 == 1)
    {
      swift_getKeyPath();
      sub_1BDDAFA58();
      swift_release();
      int v7 = *v5;
      type metadata accessor for CalculateExpression.PlainExpression();
      if (v7 == 1)
      {
        uint64_t v8 = swift_retain();
        CalculateExpression.PlainExpression.__allocating_init(parent:options:)(v8, 0);
      }
      else
      {
        sub_1BDCE25A0();
        uint64_t v11 = (void *)swift_retain();
        CalculateExpression.PlainExpression.__allocating_init(_:)(v11);
      }
      uint64_t v9 = swift_getKeyPath();
      MEMORY[0x1F4188790](v9, v10);
      sub_1BDDAFA48();
      swift_release();
      swift_release();
      uint64_t v12 = swift_getKeyPath();
      MEMORY[0x1F4188790](v12, v13);
      sub_1BDDAFA48();
      swift_release();
    }
    type metadata accessor for CalculateExpression.RichExpression();
    swift_getKeyPath();
    sub_1BDDAFA58();
    swift_release();
    swift_beginAccess();
    uint64_t v14 = (void *)swift_retain();
    sub_1BDCE3218(v14);
    uint64_t v15 = swift_getKeyPath();
    MEMORY[0x1F4188790](v15, v16);
    sub_1BDDAFA48();
    swift_release();
    swift_release();
    uint64_t v17 = swift_getKeyPath();
    MEMORY[0x1F4188790](v17, v18);
    sub_1BDDAFA48();
    swift_release();
  }
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  uint64_t v19 = v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___rich;
  swift_beginAccess();
  return *(void *)v19;
}

uint64_t type metadata accessor for CalculateExpression.RichExpression()
{
  return self;
}

uint64_t type metadata accessor for CalculateExpression.PlainExpression()
{
  return self;
}

uint64_t sub_1BDCE2B80()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  if (*(void *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___engine) == 1)
  {
    swift_getKeyPath();
    sub_1BDDAFA58();
    swift_release();
    uint64_t v2 = (unsigned char *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__base);
    swift_beginAccess();
    if (*v2)
    {
      if (*v2 == 1)
      {
        if (qword_1EA0E0038 == -1) {
          goto LABEL_11;
        }
      }
      else if (qword_1EA0E0048 == -1)
      {
        goto LABEL_11;
      }
LABEL_22:
      swift_once();
      goto LABEL_11;
    }
    if (qword_1EA0E0028 != -1) {
      goto LABEL_22;
    }
  }
  else if (qword_1EBA29308 != -1)
  {
    goto LABEL_22;
  }
LABEL_11:
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x1F4188790](KeyPath, v4);
  swift_bridgeObjectRetain();
  sub_1BDDAFA48();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_1BDDAFA58();
  uint64_t result = swift_release();
  if (*(void *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___format) == 2)
  {
    swift_getKeyPath();
    sub_1BDDAFA58();
    swift_release();
    uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__allowedOperations);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
    unint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BDDB4490;
    swift_bridgeObjectRetain();
    *(void *)(inited + 32) = *sub_1BDD00C68();
    swift_retain();
    *(void *)(inited + 40) = *sub_1BDD00BE8();
    swift_retain();
    *(void *)(inited + 48) = *sub_1BDCFF998();
    sub_1BDDAFFD8();
    if ((v6 & 0xC000000000000001) != 0)
    {
      if (v6 < 0) {
        uint64_t v8 = v6;
      }
      else {
        uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v9 = sub_1BDDB0288();
      uint64_t v10 = sub_1BDD4DA50(v8, v9);
      swift_bridgeObjectRelease();
      uint64_t v6 = v10;
    }
    else
    {
      swift_retain();
    }
    uint64_t v11 = sub_1BDD4F490(inited, v6);
    swift_bridgeObjectRelease();
    if (qword_1EA0E0058 != -1) {
      swift_once();
    }
    uint64_t v12 = swift_bridgeObjectRetain();
    sub_1BDD3AD88(v12, v11);
    uint64_t v13 = swift_getKeyPath();
    MEMORY[0x1F4188790](v13, v14);
    sub_1BDDAFA48();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t CalculateExpression.PlainExpression.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  swift_weakInit();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(_WORD *)(v0 + 24) = 1;
  *(void *)(v0 + 32) = v1;
  *(unsigned char *)(v0 + 40) = 1;
  uint64_t v2 = MEMORY[0x1E4FBC870];
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 64) = v2;
  *(unsigned char *)(v0 + 72) = 0;
  *(void *)(v0 + 80) = v1;
  *(_DWORD *)(v0 + 88) = 0;
  return v0;
}

uint64_t CalculateExpression.PlainExpression.__allocating_init(parent:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  CalculateExpression.PlainExpression.init(parent:options:)(a1, a2);
  return v4;
}

uint64_t sub_1BDCE3218(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1BDCE3258(a1);
  return v2;
}

uint64_t sub_1BDCE3258(void *a1)
{
  uint64_t v4 = swift_weakInit();
  v95 = (unsigned char *)v1;
  *(void *)(v1 + 40) = MEMORY[0x1E4FBC860];
  uint64_t v5 = v1 + 40;
  *(_DWORD *)(v5 - 16) = 16777473;
  *(unsigned char *)(v5 - 12) = 1;
  *(void *)(v5 - 8) = 0;
  *(_WORD *)(v5 + 8) = 0;
  v94 = (unint64_t *)v5;
  *(unsigned char *)(v5 + 10) = 0;
  (*(void (**)(uint64_t))(*a1 + 184))(v4);
  swift_beginAccess();
  swift_weakAssign();
  swift_release();
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*a1 + 240))(1);
  v93 = *(uint64_t (**)(void))(*a1 + 264);
  unint64_t v7 = ((uint64_t (*)(uint64_t))v93)(v6);
  unint64_t v8 = v7;
  if (v7 >> 62)
  {
    uint64_t v9 = sub_1BDDB0448();
    if (!v9) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v9) {
      goto LABEL_12;
    }
  }
  if (v9 < 1)
  {
    __break(1u);
    goto LABEL_147;
  }
  uint64_t v2 = 0;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  do
  {
    if ((v8 & 0xC000000000000001) != 0)
    {
      uint64_t v11 = MEMORY[0x1C18862A0](v2, v8);
    }
    else
    {
      uint64_t v11 = *(void *)(v8 + 8 * v2 + 32);
      swift_retain();
    }
    uint64_t v12 = *(void *)((*(uint64_t (**)(void))(*(void *)v11 + 208))() + 16);
    swift_bridgeObjectRelease();
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v11 + 216))(v10);
    }
    ++v2;
    swift_release();
  }
  while (v9 != v2);
LABEL_12:
  swift_bridgeObjectRelease();
  uint64_t v103 = 0;
  char v102 = 0;
  swift_beginAccess();
  unint64_t *v94 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  uint64_t v13 = *(uint64_t (**)(uint64_t))(*a1 + 288);
  uint64_t v14 = v13(0);
  if (v14
    && (char v15 = *(unsigned char *)(v14 + 48),
        swift_release(),
        LOBYTE(v100) = v15,
        LOBYTE(v99) = 17,
        sub_1BDCF0848(),
        (sub_1BDDAFD28() & 1) != 0))
  {
    uint64_t v16 = 1;
    uint64_t v103 = 1;
  }
  else
  {
    uint64_t v16 = 0;
  }
  uint64_t v17 = v13(v16);
  if (!v17) {
    goto LABEL_29;
  }
  uint64_t v18 = (unsigned char *)v17;
  char v19 = *(unsigned char *)(v17 + 48);
  LOBYTE(v100) = v19;
  LOBYTE(v99) = 14;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v100, (unsigned __int8 *)&v99)
    && (LOBYTE(v100) = v19,
        LOBYTE(v99) = 0,
        !static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v100, (unsigned __int8 *)&v99))
    || (*(void *)&v100 = v16, sub_1BDD18918(a1, (uint64_t *)&v100), uint64_t v2 = v100, (v20 = v13(v100)) == 0))
  {
LABEL_28:
    swift_release();
    goto LABEL_29;
  }
  uint64_t v16 = v20;
  LOBYTE(v99) = *(unsigned char *)(v20 + 48);
  LOBYTE(v98) = 35;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v99, (unsigned __int8 *)&v98)
    || (v99 = (id)v2, sub_1BDD18918(a1, (uint64_t *)&v99), uint64_t v21 = v13((uint64_t)v99), swift_release(), !v21))
  {
    swift_release();
    goto LABEL_28;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
  uint64_t v96 = swift_allocObject();
  *(_OWORD *)(v96 + 16) = xmmword_1BDDB3760;
  uint64_t v22 = *(uint64_t (**)(uint64_t))(*(void *)v18 + 160);
  uint64_t v23 = swift_retain();
  uint64_t v24 = v22(v23);
  if (!v25) {
    uint64_t v24 = (*(uint64_t (**)(uint64_t))(*(void *)v18 + 136))(v24);
  }
  uint64_t v26 = v24;
  unint64_t v27 = v25;
  LOBYTE(v98) = v18[48];
  type metadata accessor for CalculateExpression.RichToken();
  uint64_t v28 = swift_allocObject();
  CalculateExpression.RichToken.init(text:type:isImplicit:)(v26, v27, (unsigned __int8 *)&v98, 0);
  swift_release();
  *(void *)(v96 + 32) = v28;
  uint64_t v29 = *(uint64_t (**)(uint64_t))(*(void *)v16 + 160);
  uint64_t v30 = swift_retain();
  uint64_t v31 = v29(v30);
  if (!v32) {
    uint64_t v31 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 136))(v31);
  }
  uint64_t v33 = v31;
  unint64_t v34 = v32;
  LOBYTE(v98) = *(unsigned char *)(v16 + 48);
  uint64_t v2 = swift_allocObject();
  CalculateExpression.RichToken.init(text:type:isImplicit:)(v33, v34, (unsigned __int8 *)&v98, 0);
  swift_release();
  *(void *)(v96 + 40) = v2;
  uint64_t v98 = v96;
  sub_1BDDAFFD8();
  unint64_t *v94 = v98;
  swift_bridgeObjectRelease();
  sub_1BDD18918(a1, (uint64_t *)&v100);
  swift_release();
  swift_release();
  uint64_t v103 = v100;
LABEL_29:
  uint64_t v35 = *(void *)sub_1BDCED26C((uint64_t)a1, (uint64_t)&v103, (uint64_t **)&v102);
  (*(void (**)(void))(v35 + 392))();
  swift_release();
  swift_beginAccess();
  unint64_t v36 = swift_bridgeObjectRetain();
  sub_1BDCE4468(v36);
  swift_endAccess();
  swift_bridgeObjectRelease();
  if (swift_weakLoadStrong())
  {
    unint64_t v37 = sub_1BDCE62DC();
    swift_release();
  }
  else
  {
    unint64_t v37 = sub_1BDD06F78(MEMORY[0x1E4FBC860]);
  }
  if (!*(void *)(v37 + 16))
  {
    long long v100 = 0u;
    long long v101 = 0u;
LABEL_41:
    sub_1BDCE43CC((uint64_t)&v100, &qword_1EBA269F8);
    goto LABEL_42;
  }
  uint64_t v38 = @"CalculateKeyAllowEqualSign";
  unint64_t v39 = sub_1BDCE6070((uint64_t)v38);
  if (v40)
  {
    sub_1BDD18D98(*(void *)(v37 + 56) + 32 * v39, (uint64_t)&v100);
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }

  if (!*((void *)&v101 + 1)) {
    goto LABEL_41;
  }
  if (swift_dynamicCast())
  {
    int v41 = v99;
    swift_bridgeObjectRelease();
    if (v41 != 1) {
      goto LABEL_56;
    }
    goto LABEL_53;
  }
LABEL_42:
  if (*(void *)(v37 + 16))
  {
    v42 = @"CalculateKeyAllowEqualSign";
    unint64_t v43 = sub_1BDCE6070((uint64_t)v42);
    if (v44)
    {
      sub_1BDD18D98(*(void *)(v37 + 56) + 32 * v43, (uint64_t)&v100);
    }
    else
    {
      long long v100 = 0u;
      long long v101 = 0u;
    }
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v101 + 1))
  {
    sub_1BDCE6874(0, (unint64_t *)&qword_1EBA26990);
    if (swift_dynamicCast())
    {
      id v45 = v99;
      unsigned __int8 v46 = objc_msgSend(v99, sel_BOOLValue);

      if ((v46 & 1) == 0) {
        goto LABEL_56;
      }
    }
  }
  else
  {
    sub_1BDCE43CC((uint64_t)&v100, &qword_1EBA269F8);
  }
LABEL_53:
  uint64_t v47 = v103;
  uint64_t v48 = v13(v103);
  if (!v48) {
    goto LABEL_57;
  }
  char v49 = *(unsigned char *)(v48 + 48);
  swift_release();
  LOBYTE(v100) = v49;
  LOBYTE(v99) = 35;
  sub_1BDCF0848();
  if (sub_1BDDAFD28()) {
    sub_1BDD18918(a1, &v103);
  }
LABEL_56:
  uint64_t v47 = v103;
LABEL_57:
  unint64_t v50 = v93();
  if (v50 >> 62) {
LABEL_141:
  }
    uint64_t v51 = sub_1BDDB0448();
  else {
    uint64_t v51 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v47 >= v51) {
    goto LABEL_77;
  }
  char v102 = 1;
  uint64_t v52 = v13(v47);
  if (!v52)
  {
LABEL_68:
    uint64_t v55 = ((uint64_t (*)(uint64_t))v93)(v52);
    v56 = (void (*)(long long *, void))v55;
    if ((v55 & 0xC000000000000001) == 0)
    {
      if (v47 < 0)
      {
        __break(1u);
      }
      else if ((unint64_t)v47 < *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v57 = *(void *)(v55 + 8 * v47 + 32);
        swift_retain();
        goto LABEL_72;
      }
      __break(1u);
      goto LABEL_151;
    }
    uint64_t v57 = MEMORY[0x1C18862A0](v47, v55);
LABEL_72:
    swift_bridgeObjectRelease();
    uint64_t v47 = (uint64_t)objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1000, 0);
    v56 = (void (*)(long long *, void))(*(uint64_t (**)(long long *))(*(void *)v57 + 224))(&v100);
    uint64_t v16 = (uint64_t)v58;
    uint64_t v2 = *v58;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v16 = v2;
    if (isUniquelyReferenced_nonNull_native)
    {
LABEL_73:
      unint64_t v61 = *(void *)(v2 + 16);
      unint64_t v60 = *(void *)(v2 + 24);
      if (v61 >= v60 >> 1)
      {
        uint64_t v2 = (uint64_t)sub_1BDD1693C((void *)(v60 > 1), v61 + 1, 1, (void *)v2);
        *(void *)uint64_t v16 = v2;
      }
      *(void *)(v2 + 16) = v61 + 1;
      *(void *)(v2 + 8 * v61 + 32) = v47;
      v56(&v100, 0);
      goto LABEL_76;
    }
LABEL_151:
    uint64_t v2 = (uint64_t)sub_1BDD1693C(0, *(void *)(v2 + 16) + 1, 1, (void *)v2);
    *(void *)uint64_t v16 = v2;
    goto LABEL_73;
  }
  LOBYTE(v100) = *(unsigned char *)(v52 + 48);
  if ((CalculateExpression.TokenType.isClose.getter() & 1) == 0)
  {
    uint64_t v52 = swift_release();
    goto LABEL_68;
  }
  uint64_t result = v93();
  if ((result & 0xC000000000000001) != 0)
  {
    uint64_t v54 = MEMORY[0x1C18862A0](v47, result);
    goto LABEL_66;
  }
  if (v47 < 0)
  {
    __break(1u);
    goto LABEL_154;
  }
  if ((unint64_t)v47 >= *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_154:
    __break(1u);
    return result;
  }
  uint64_t v54 = *(void *)(result + 8 * v47 + 32);
  swift_retain();
LABEL_66:
  swift_bridgeObjectRelease();
  sub_1BDD186D4(v54);
  swift_release();
LABEL_76:
  swift_release();
LABEL_77:
  unint64_t v62 = *v94;
  id v99 = (id)v62;
  if (v62 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v92 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    if (v92 < 1) {
      goto LABEL_122;
    }
  }
  else
  {
    uint64_t v63 = *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v63 < 1) {
      goto LABEL_122;
    }
  }
  char v97 = 0;
  uint64_t v47 = 0;
  do
  {
    while (1)
    {
      if ((v62 & 0xC000000000000001) != 0)
      {
        uint64_t v64 = MEMORY[0x1C18862A0](v47, v62);
      }
      else
      {
        if (v47 < 0)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        if ((unint64_t)v47 >= *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_132;
        }
        uint64_t v64 = swift_retain();
      }
      char v65 = *(unsigned char *)(v64 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      swift_release();
      LOBYTE(v100) = v65;
      LOBYTE(v98) = 1;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v100, (unsigned __int8 *)&v98))
      {
        if ((v62 & 0xC000000000000001) != 0)
        {
          uint64_t v16 = MEMORY[0x1C18862A0](v47, v62);
        }
        else
        {
          if (v47 < 0) {
            goto LABEL_139;
          }
          if ((unint64_t)v47 >= *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_140;
          }
          uint64_t v16 = *(void *)(v62 + 8 * v47 + 32);
          swift_retain();
        }
        uint64_t v2 = (*(uint64_t (**)(void))(*(void *)v16 + 208))();
        unint64_t v67 = v66;
        swift_release();
        uint64_t v68 = HIBYTE(v67) & 0xF;
        if ((v67 & 0x2000000000000000) == 0) {
          uint64_t v68 = v2 & 0xFFFFFFFFFFFFLL;
        }
        if (!v68)
        {
          swift_bridgeObjectRelease();
          goto LABEL_110;
        }
        uint64_t v2 = sub_1BDDAFEE8();
        uint64_t v16 = v69;
        swift_bridgeObjectRelease();
        if (v2 == 45 && v16 == 0xE100000000000000)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v71 = sub_1BDDB04E8();
          swift_bridgeObjectRelease();
          if ((v71 & 1) == 0) {
            goto LABEL_110;
          }
        }
        LOBYTE(v100) = 4;
        type metadata accessor for CalculateExpression.RichToken();
        uint64_t v16 = swift_allocObject();
        CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v100, 0);
        if (v62 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v87 = sub_1BDDB0448();
          swift_bridgeObjectRelease();
          if (v87 < v47) {
            goto LABEL_134;
          }
        }
        else if (*(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10) < v47)
        {
          goto LABEL_134;
        }
        if (v47 < 0) {
          goto LABEL_135;
        }
        sub_1BDD16DE4(v47, v47, v16, 0, (void (*)(void))type metadata accessor for CalculateExpression.RichToken);
        BOOL v72 = __OFADD__(v47++, 1);
        if (v72) {
          goto LABEL_136;
        }
        unint64_t v62 = (unint64_t)v99;
        if (((unint64_t)v99 & 0xC000000000000001) != 0)
        {
          uint64_t v16 = MEMORY[0x1C18862A0](v47, v99);
          uint64_t v74 = MEMORY[0x1C18862A0](v47, v62);
          uint64_t v73 = v74;
        }
        else
        {
          if (v47 < 0) {
            goto LABEL_137;
          }
          if ((unint64_t)v47 >= *(void *)(((unint64_t)v99 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_138;
          }
          uint64_t v73 = *((void *)v99 + v47 + 4);
          uint64_t v74 = swift_retain_n();
          uint64_t v16 = v73;
        }
        uint64_t v75 = (*(uint64_t (**)(uint64_t))(*(void *)v73 + 208))(v74);
        unint64_t v77 = v76;
        swift_release();
        char v97 = 1;
        unint64_t v78 = sub_1BDD18AA8(1uLL, v75, v77);
        uint64_t v80 = v79;
        uint64_t v13 = v81;
        uint64_t v83 = v82;
        swift_bridgeObjectRelease();
        uint64_t v84 = MEMORY[0x1C1885C90](v78, v80, v13, v83);
        uint64_t v2 = v85;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(*(void *)v16 + 216))(v84, v2);
        swift_release();
      }
LABEL_110:
      BOOL v72 = __OFADD__(v47++, 1);
      if (v72) {
        goto LABEL_133;
      }
      if (v62 >> 62) {
        break;
      }
      if (v47 >= *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_120;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v86 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
  }
  while (v47 < v86);
LABEL_120:
  if (v97)
  {
    unint64_t *v94 = v62;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_122:
  sub_1BDCE7EAC();
  sub_1BDCEBD5C();
  uint64_t v88 = sub_1BDCE7328();
  if (v102) {
    goto LABEL_126;
  }
  unint64_t v89 = ((uint64_t (*)(uint64_t))v93)(v88);
  if (!(v89 >> 62))
  {
    uint64_t v90 = *(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_125;
  }
LABEL_147:
  uint64_t v90 = sub_1BDDB0448();
LABEL_125:
  uint64_t v88 = swift_bridgeObjectRelease();
  if (!v90) {
LABEL_126:
  }
    (*(void (**)(uint64_t))(*(void *)v95 + 424))(v88);
  if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && sub_1BDDB0448()) {
    unint64_t v91 = sub_1BDD18B58(MEMORY[0x1E4FBC860]);
  }
  else {
    unint64_t v91 = MEMORY[0x1E4FBC870];
  }
  sub_1BDCE8FB8(v91, 0, 1);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)v95 + 232))(1);
  swift_release();
  swift_beginAccess();
  v95[25] = 0;
  swift_bridgeObjectRelease();
  return (uint64_t)v95;
}

uint64_t sub_1BDCE4294()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDCE42CC(uint64_t a1)
{
  if (a1 < 0) {
    return 0;
  }
  uint64_t v3 = (uint64_t (**)(void))(*v1 + 264);
  uint64_t v4 = *v3;
  unint64_t v5 = (*v3)();
  uint64_t v6 = v5 >> 62 ? sub_1BDDB0448() : *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v7 = swift_bridgeObjectRelease();
  if (v6 <= a1) {
    return 0;
  }
  uint64_t result = ((uint64_t (*)(uint64_t))v4)(v7);
  if ((result & 0xC000000000000001) != 0)
  {
    uint64_t v9 = MEMORY[0x1C18862A0](a1, result);
    goto LABEL_8;
  }
  if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a1)
  {
    uint64_t v9 = *(void *)(result + 8 * a1 + 32);
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDCE43CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BDCE4428(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 25) = a1;
  return result;
}

uint64_t sub_1BDCE4468(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x1C18862B0](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    unint64_t *v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_1BDCE4634(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();
  return sub_1BDDAFFD8();
}

uint64_t sub_1BDCE4634(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1BDDB0448();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1BDDB0448();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_1BDD03740();
          swift_bridgeObjectRetain();
          for (unint64_t i = 0; i != v7; ++i)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DEFA8);
            uint64_t v10 = sub_1BDD03690(v13, i, a3);
            uint64_t v12 = *v11;
            swift_retain();
            ((void (*)(uint64_t (**)(), void))v10)(v13, 0);
            *(void *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        type metadata accessor for CalculateExpression.RichToken();
        swift_arrayInitWithCopy();
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t CalculateExpression.PlainExpression.init(parent:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (unsigned char *)v2;
  swift_weakInit();
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v2 + 80) = MEMORY[0x1E4FBC860];
  *(_WORD *)(v2 + 24) = 1;
  *(void *)(v2 + 32) = v6;
  *(unsigned char *)(v2 + 40) = 1;
  uint64_t v7 = MEMORY[0x1E4FBC870];
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = v7;
  *(unsigned char *)(v2 + 72) = 0;
  v171 = (uint64_t *)(v2 + 80);
  *(_DWORD *)(v2 + 88) = 0;
  swift_beginAccess();
  swift_weakAssign();
  if (!a2) {
    a2 = sub_1BDCE62DC();
  }
  uint64_t v8 = *(void *)(a2 + 16);
  v174 = (unint64_t *)(v2 + 32);
  if (!v8)
  {
    long long v178 = 0u;
    long long v179 = 0u;
LABEL_12:
    sub_1BDCE627C((uint64_t)&v178);
    goto LABEL_13;
  }
  uint64_t v9 = @"CalculateKeyAllowUnits";
  unint64_t v10 = sub_1BDCE6070((uint64_t)v9);
  if (v11)
  {
    sub_1BDD18D98(*(void *)(a2 + 56) + 32 * v10, (uint64_t)&v178);
  }
  else
  {
    long long v178 = 0u;
    long long v179 = 0u;
  }

  if (!*((void *)&v179 + 1)) {
    goto LABEL_12;
  }
  sub_1BDCE6874(0, (unint64_t *)&qword_1EBA26990);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    sub_1BDCE6874(0, &qword_1EBA26968);
    goto LABEL_14;
  }
  uint64_t v12 = (void *)v191;
  unsigned __int8 v13 = objc_msgSend((id)v191, sel_BOOLValue);

  sub_1BDCE6874(0, &qword_1EBA26968);
  id v14 = 0;
  if (v13) {
LABEL_14:
  }
    id v14 = objc_msgSend(self, sel_converterUnits);
  id v15 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithUnits_, v14);

  if (*(void *)(a2 + 16))
  {
    uint64_t v16 = @"CalculateKeyFormat";
    unint64_t v17 = sub_1BDCE6070((uint64_t)v16);
    if (v18)
    {
      sub_1BDD18D98(*(void *)(a2 + 56) + 32 * v17, (uint64_t)&v191);
    }
    else
    {
      long long v191 = 0u;
      long long v192 = 0u;
    }
  }
  else
  {
    long long v191 = 0u;
    long long v192 = 0u;
  }
  sub_1BDCE6450((uint64_t)&v191, (uint64_t)&v178);
  v175 = v3;
  id v177 = v15;
  v173 = v3 + 72;
  if (!*((void *)&v179 + 1))
  {
    sub_1BDCE627C((uint64_t)&v178);
    unint64_t v20 = MEMORY[0x1E4FBC860];
    goto LABEL_26;
  }
  sub_1BDCE6874(0, (unint64_t *)&qword_1EBA26990);
  char v19 = swift_dynamicCast();
  unint64_t v20 = MEMORY[0x1E4FBC860];
  if ((v19 & 1) == 0)
  {
LABEL_26:
    CalculateExpression.expression.getter();
    unint64_t v24 = v39;
    goto LABEL_27;
  }
  id v21 = (id)v188;
  id v22 = objc_msgSend((id)v188, sel_integerValue);

  CalculateExpression.expression.getter();
  unint64_t v24 = v23;
  if (v22 == (id)1)
  {
    unint64_t v25 = (void *)sub_1BDDAFD38();
    swift_bridgeObjectRelease();
    uint64_t v26 = (void *)sub_1BDDAFD38();
    v180 = sub_1BDD2FC5C;
    uint64_t v181 = 0;
    *(void *)&long long v178 = MEMORY[0x1E4F143A8];
    *((void *)&v178 + 1) = 1107296256;
    *(void *)&long long v179 = sub_1BDD2FDE4;
    *((void *)&v179 + 1) = &block_descriptor_0;
    unint64_t v27 = _Block_copy(&v178);
    id v28 = objc_msgSend(v25, sel_calc_stringByReplacingOccurrencesOfRegex_usingBlock_, v26, v27);
    _Block_release(v27);

    sub_1BDDAFD68();
    uint64_t v29 = (void *)sub_1BDDAFD38();
    swift_bridgeObjectRelease();
    uint64_t v30 = (void *)sub_1BDDAFD38();
    v180 = sub_1BDD2FE94;
    uint64_t v181 = 0;
    *(void *)&long long v178 = MEMORY[0x1E4F143A8];
    *((void *)&v178 + 1) = 1107296256;
    *(void *)&long long v179 = sub_1BDD2FD60;
    *((void *)&v179 + 1) = &block_descriptor_5;
    uint64_t v31 = _Block_copy(&v178);
    id v32 = objc_msgSend(v29, sel_calc_stringByReplacingOccurrencesOfRegex_usingBlockWithResult_, v30, v31);
    _Block_release(v31);

    sub_1BDDAFD68();
    uint64_t v33 = (void *)sub_1BDDAFD38();
    swift_bridgeObjectRelease();
    unint64_t v34 = (void *)sub_1BDDAFD38();
    v180 = sub_1BDD2FEA0;
    uint64_t v181 = 0;
    unint64_t v20 = MEMORY[0x1E4FBC860];
    *(void *)&long long v178 = MEMORY[0x1E4F143A8];
    *((void *)&v178 + 1) = 1107296256;
    *(void *)&long long v179 = sub_1BDD2FDE4;
    *((void *)&v179 + 1) = &block_descriptor_8;
    uint64_t v35 = _Block_copy(&v178);
    id v36 = objc_msgSend(v33, sel_calc_stringByReplacingOccurrencesOfRegex_usingBlock_, v34, v35);
    _Block_release(v35);

    sub_1BDDAFD68();
    unint64_t v24 = v37;

    uint64_t v38 = 1;
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v38 = 0;
LABEL_28:
  if (!*(void *)(CalculateExpression.locales.getter() + 16))
  {
    swift_bridgeObjectRelease();
    id v40 = objc_msgSend(self, sel_systemLocales);
    sub_1BDDAFA38();
    sub_1BDDAFFC8();
  }
  sub_1BDDAFA38();
  int v41 = (void *)sub_1BDDAFFB8();
  swift_bridgeObjectRelease();
  objc_msgSend(v177, sel_setLocales_, v41);

  id v42 = v177;
  unint64_t v43 = (void *)sub_1BDDAFD38();
  swift_bridgeObjectRelease();
  objc_msgSend(v177, sel_setString_, v43);

  if (!*(void *)(a2 + 16)
    || (swift_bridgeObjectRetain(),
        char v44 = @"CalculateKeyVariables",
        sub_1BDCE6070((uint64_t)v44),
        char v46 = v45,
        swift_bridgeObjectRelease(),
        v44,
        (v46 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    uint64_t v50 = sub_1BDCE6964();
    sub_1BDCE64B8(v50);
    swift_bridgeObjectRelease();
LABEL_36:
    uint64_t v51 = (void *)sub_1BDDAFC68();
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  if (*(void *)(a2 + 16))
  {
    uint64_t v47 = v44;
    unint64_t v48 = sub_1BDCE6070((uint64_t)v47);
    if (v49)
    {
      sub_1BDD18D98(*(void *)(a2 + 56) + 32 * v48, (uint64_t)&v178);
    }
    else
    {
      long long v178 = 0u;
      long long v179 = 0u;
    }
  }
  else
  {
    long long v178 = 0u;
    long long v179 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v179 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF1C8);
    if (swift_dynamicCast()) {
      goto LABEL_36;
    }
  }
  else
  {
    sub_1BDCE627C((uint64_t)&v178);
  }
  uint64_t v51 = 0;
LABEL_45:
  objc_msgSend(v177, sel_setVariables_, v51);

  CalculateExpression.graphableVariable.getter();
  if (v52)
  {
    v53 = (void *)sub_1BDDAFD38();
    swift_bridgeObjectRelease();
  }
  else
  {
    v53 = 0;
  }
  objc_msgSend(v177, sel_setGraphableVariable_, v53);

  uint64_t v172 = a1;
  uint64_t v54 = CalculateExpression.numberFormatter.getter();
  objc_msgSend(v177, sel_setNumberFormatter_, v54);

  objc_msgSend(v177, sel_setNormalizeNumbers_, 1);
  objc_msgSend(v177, sel_setIsLaTeX_, v38);
  unint64_t v190 = v20;
  swift_beginAccess();
  id v55 = objc_msgSend(v177, sel_nextToken);
  if (!v55)
  {
LABEL_118:
    unint64_t v24 = v190;
    if (v190 >> 62) {
      goto LABEL_140;
    }
    uint64_t v98 = *(void *)((v190 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    id v99 = v175;
    if (v98) {
      goto LABEL_120;
    }
LABEL_141:
    swift_bridgeObjectRelease();
    unint64_t v104 = v190;
    v105 = v174;
    swift_beginAccess();
    unint64_t *v174 = v104;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (objc_msgSend(v42, sel_isGraphable)) {
      unsigned __int8 v106 = objc_msgSend(v42, sel_foundGraphableValue);
    }
    else {
      unsigned __int8 v106 = 0;
    }
    swift_beginAccess();
    unsigned char *v173 = v106;
    if (objc_msgSend(v42, sel_isGraphable)) {
      goto LABEL_145;
    }
    id v107 = objc_msgSend(v42, sel_suggestedGraphableVariable);
    if (v107)
    {
      v108 = v107;
      uint64_t v109 = sub_1BDDAFD68();
      uint64_t v111 = v110;

      id v112 = objc_msgSend(v42, sel_suggestedGraphableVariable);
      if (!v112) {
        goto LABEL_181;
      }
      v113 = v112;
      uint64_t v114 = sub_1BDDAFD68();
      uint64_t v116 = v115;

      uint64_t v184 = v114;
      uint64_t v185 = v116;
      id v117 = objc_msgSend(v42, sel_declaredVariable);
      if (v117)
      {
        v118 = v117;
        uint64_t v119 = sub_1BDDAFD68();
        unint64_t v121 = v120;
      }
      else
      {
        uint64_t v119 = 0;
        unint64_t v121 = 0xE000000000000000;
      }
      uint64_t v182 = v119;
      unint64_t v183 = v121;
      sub_1BDCEB640();
      uint64_t v162 = sub_1BDDB0218();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v42 = v177;
      if (!v162)
      {
        swift_release();

        swift_bridgeObjectRelease();
        uint64_t v163 = MEMORY[0x1E4FBC860];
      }
      else
      {
LABEL_181:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269E0);
        uint64_t v163 = swift_allocObject();
        *(_OWORD *)(v163 + 16) = xmmword_1BDDB37C0;
        *(void *)(v163 + 32) = v109;
        *(void *)(v163 + 40) = v111;
        swift_release();
      }
      sub_1BDCE627C((uint64_t)&v191);
      swift_beginAccess();
      uint64_t *v171 = v163;
    }
    else
    {
      if (objc_msgSend(v42, sel__isGraphableReserved))
      {
LABEL_145:
        swift_release();

        sub_1BDCE627C((uint64_t)&v191);
LABEL_191:
        swift_bridgeObjectRelease();
        return (uint64_t)v99;
      }
      uint64_t v186 = MEMORY[0x1E4FBC870];
      unint64_t v20 = *v105;
      if (*v105 >> 62) {
        goto LABEL_187;
      }
      uint64_t v122 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v122) {
        goto LABEL_153;
      }
LABEL_188:
      swift_release();

      v164 = (char *)MEMORY[0x1E4FBC860];
LABEL_189:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BDCE627C((uint64_t)&v191);
      v165 = (char **)v171;
      swift_beginAccess();
      *v165 = v164;
    }
    swift_bridgeObjectRelease();
    goto LABEL_191;
  }
  id v56 = v55;
  uint64_t v57 = &off_1E6366000;
  while (1)
  {
    if ([v56 (SEL)v57[504]] == (id)11)
    {
      type metadata accessor for CalculateExpression.Token();
      uint64_t v59 = swift_allocObject();
      *(void *)(v59 + 40) = 0;
      *(void *)(v59 + 32) = 0;
      swift_weakInit();
      *(_OWORD *)(v59 + 72) = 0u;
      *(_OWORD *)(v59 + 88) = 0u;
      *(void *)(v59 + 16) = 0;
      *(void *)(v59 + 24) = 0xE000000000000000;
      swift_beginAccess();
      *(void *)(v59 + 32) = 0;
      *(void *)(v59 + 40) = 0;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v59 + 48) = 7;
    }
    else
    {
      id v60 = [v56 (SEL)v57[504]];
      id v61 = objc_msgSend(v56, sel_text);
      unint64_t v24 = sub_1BDDAFD68();
      uint64_t v63 = v62;

      if (v60 == (id)3)
      {
        id v64 = objc_msgSend(v56, sel_normalizedText);
        uint64_t v65 = sub_1BDDAFD68();
        uint64_t v67 = v66;

        type metadata accessor for CalculateExpression.Token();
        uint64_t v59 = swift_allocObject();
        *(void *)(v59 + 40) = 0;
        *(void *)(v59 + 32) = 0;
        swift_weakInit();
        *(_OWORD *)(v59 + 88) = 0u;
        *(_OWORD *)(v59 + 72) = 0u;
        *(void *)(v59 + 16) = v24;
        *(void *)(v59 + 24) = v63;
        swift_beginAccess();
        *(void *)(v59 + 32) = v65;
        *(void *)(v59 + 40) = v67;
        unint64_t v20 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRelease();
        *(unsigned char *)(v59 + 48) = 1;
      }
      else
      {
        sub_1BDD3AC28((unint64_t)[v56 (SEL)v57[504]], (char *)&v188);
        char v68 = v188;
        type metadata accessor for CalculateExpression.Token();
        uint64_t v59 = swift_allocObject();
        *(void *)(v59 + 40) = 0;
        *(void *)(v59 + 32) = 0;
        swift_weakInit();
        *(_OWORD *)(v59 + 88) = 0u;
        *(_OWORD *)(v59 + 72) = 0u;
        *(void *)(v59 + 16) = v24;
        *(void *)(v59 + 24) = v63;
        swift_beginAccess();
        *(void *)(v59 + 32) = 0;
        *(void *)(v59 + 40) = 0;
        swift_bridgeObjectRelease();
        *(unsigned char *)(v59 + 48) = v68;
      }
    }
    *(void *)(v59 + 64) = v20;
    if (v190 >> 62) {
      break;
    }
    uint64_t v69 = *(void *)((v190 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v70 = v69 - 1;
    if (__OFSUB__(v69, 1)) {
      goto LABEL_126;
    }
LABEL_62:
    unint64_t v24 = v70 - 1;
    if (__OFSUB__(v70, 1)) {
      goto LABEL_127;
    }
    if ((v24 & 0x8000000000000000) == 0)
    {
      swift_beginAccess();
      if ((v190 & 0xC000000000000001) != 0)
      {
        uint64_t v71 = MEMORY[0x1C18862A0](v24);
      }
      else
      {
        if (v24 >= *(void *)((v190 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_130;
        }
        uint64_t v71 = *(void *)(v190 + 8 * v24 + 32);
        swift_retain();
      }
      swift_endAccess();
      char v72 = *(unsigned char *)(v71 + 48);
      swift_release();
      LOBYTE(v188) = v72;
      v187[0] = 17;
      sub_1BDCF0848();
      if ((sub_1BDDAFD28() & 1) == 0) {
        goto LABEL_70;
      }
    }
    if (__OFSUB__(v24--, 1)) {
      goto LABEL_129;
    }
    if ((v24 & 0x8000000000000000) != 0)
    {
      uint64_t v74 = 0;
    }
    else
    {
LABEL_70:
      swift_beginAccess();
      if ((v190 & 0xC000000000000001) != 0)
      {
        uint64_t v74 = MEMORY[0x1C18862A0](v24);
      }
      else
      {
        if (v24 >= *(void *)((v190 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_128;
        }
        uint64_t v74 = *(void *)(v190 + 8 * v24 + 32);
        swift_retain();
      }
      swift_endAccess();
    }
    LOBYTE(v188) = *(unsigned char *)(v59 + 48);
    v187[0] = 1;
    if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v188, v187)) {
      goto LABEL_51;
    }
    unint64_t v75 = v190;
    if (v190 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v76 = sub_1BDDB0448();
      if (!v76)
      {
LABEL_50:
        swift_bridgeObjectRelease();
LABEL_51:
        swift_beginAccess();
        uint64_t v58 = swift_retain();
        MEMORY[0x1C1885EA0](v58);
        if (*(void *)((v190 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v190 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1BDDB0008();
        }
        sub_1BDDB0048();
        sub_1BDDAFFD8();
        swift_endAccess();
        goto LABEL_54;
      }
    }
    else
    {
      uint64_t v76 = *(void *)((v190 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v76) {
        goto LABEL_50;
      }
    }
    unint64_t v77 = v76 - 1;
    if (__OFSUB__(v76, 1)) {
      goto LABEL_131;
    }
    if ((v75 & 0xC000000000000001) != 0)
    {
      uint64_t v78 = MEMORY[0x1C18862A0](v77, v75);
    }
    else
    {
      if ((v77 & 0x8000000000000000) != 0) {
        goto LABEL_132;
      }
      if (v77 >= *(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_133;
      }
      uint64_t v78 = *(void *)(v75 + 8 * v77 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    char v79 = *(unsigned char *)(v78 + 48);
    swift_release();
    LOBYTE(v188) = v79;
    v187[0] = 4;
    unint64_t v24 = sub_1BDCF0848();
    if ((sub_1BDDAFD28() & 1) == 0) {
      goto LABEL_51;
    }
    if (v74)
    {
      char v80 = *(unsigned char *)(v74 + 48);
      LOBYTE(v188) = v80;
      if ((CalculateExpression.TokenType.isBinaryOperator.getter() & 1) == 0)
      {
        LOBYTE(v188) = v80;
        if ((CalculateExpression.TokenType.isOpen.getter() & 1) == 0)
        {
          LOBYTE(v188) = v80;
          v187[0] = 35;
          if ((sub_1BDDAFD28() & 1) == 0) {
            goto LABEL_51;
          }
        }
      }
    }
    if (v190 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v96 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
      unint64_t v20 = v96 - 1;
      if (__OFSUB__(v96, 1)) {
        goto LABEL_134;
      }
    }
    else
    {
      uint64_t v81 = *(void *)((v190 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t v20 = v81 - 1;
      if (__OFSUB__(v81, 1)) {
        goto LABEL_134;
      }
    }
    if (v190 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v97 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
      unint64_t v83 = v97 - 1;
      if (__OFSUB__(v97, 1)) {
        goto LABEL_135;
      }
    }
    else
    {
      uint64_t v82 = *(void *)((v190 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t v83 = v82 - 1;
      if (__OFSUB__(v82, 1)) {
        goto LABEL_135;
      }
    }
    swift_beginAccess();
    if ((v190 & 0xC000000000000001) != 0)
    {
      uint64_t v84 = MEMORY[0x1C18862A0](v83);
    }
    else
    {
      if ((v83 & 0x8000000000000000) != 0) {
        goto LABEL_136;
      }
      if (v83 >= *(void *)((v190 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_137;
      }
      uint64_t v84 = *(void *)(v190 + 8 * v83 + 32);
      swift_retain();
    }
    uint64_t v85 = swift_endAccess();
    uint64_t v86 = (*(uint64_t (**)(uint64_t))(*(void *)v84 + 136))(v85);
    unint64_t v88 = v87;
    swift_release();
    uint64_t v188 = v86;
    unint64_t v189 = v88;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BDDAFE18();
    swift_bridgeObjectRelease();
    unint64_t v89 = v189;
    uint64_t v176 = v188;
    uint64_t v188 = 45;
    unint64_t v189 = 0xE100000000000000;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BDDAFE18();
    swift_bridgeObjectRelease();
    unint64_t v24 = v188;
    unint64_t v90 = v189;
    type metadata accessor for CalculateExpression.Token();
    uint64_t v91 = swift_allocObject();
    *(void *)(v91 + 40) = 0;
    *(void *)(v91 + 32) = 0;
    swift_weakInit();
    *(_OWORD *)(v91 + 88) = 0u;
    *(_OWORD *)(v91 + 72) = 0u;
    *(void *)(v91 + 16) = v176;
    *(void *)(v91 + 24) = v89;
    swift_beginAccess();
    *(void *)(v91 + 32) = v24;
    *(void *)(v91 + 40) = v90;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v91 + 48) = 1;
    *(void *)(v91 + 64) = MEMORY[0x1E4FBC860];
    swift_beginAccess();
    unint64_t v92 = v190;
    int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    unint64_t v190 = v92;
    if (!isUniquelyReferenced_nonNull_bridgeObject
      || (v92 & 0x8000000000000000) != 0
      || (v92 & 0x4000000000000000) != 0)
    {
      sub_1BDD02F24(v92);
      unint64_t v92 = v94;
      unint64_t v190 = v94;
    }
    id v42 = v177;
    if ((v20 & 0x8000000000000000) != 0) {
      goto LABEL_138;
    }
    if (v20 >= *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_139;
    }
    *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 8 * v20 + 0x20) = v91;
    swift_release();
    sub_1BDDAFFD8();
    swift_endAccess();
    unint64_t v20 = MEMORY[0x1E4FBC860];
LABEL_54:

    swift_release();
    swift_release();
    id v56 = objc_msgSend(v42, sel_nextToken);
    uint64_t v57 = &off_1E6366000;
    if (!v56) {
      goto LABEL_118;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v95 = sub_1BDDB0448();
  swift_bridgeObjectRelease();
  uint64_t v70 = v95 - 1;
  if (!__OFSUB__(v95, 1)) {
    goto LABEL_62;
  }
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  swift_bridgeObjectRetain();
  uint64_t v98 = sub_1BDDB0448();
  id v99 = v175;
  if (!v98) {
    goto LABEL_141;
  }
LABEL_120:
  if (v98 >= 1)
  {
    uint64_t v100 = 0;
    do
    {
      if ((v24 & 0xC000000000000001) != 0)
      {
        uint64_t v101 = MEMORY[0x1C18862A0](v100, v24);
      }
      else
      {
        uint64_t v101 = *(void *)(v24 + 8 * v100 + 32);
        swift_retain();
      }
      ++v100;
      char v102 = *(void (**)(uint64_t))(*(void *)v101 + 192);
      uint64_t v103 = swift_retain();
      v102(v103);
      swift_release();
    }
    while (v98 != v100);
    goto LABEL_141;
  }
  while (2)
  {
    __break(1u);
LABEL_187:
    swift_bridgeObjectRetain();
    uint64_t v122 = sub_1BDDB0448();
    if (!v122) {
      goto LABEL_188;
    }
LABEL_153:
    v174 = (unint64_t *)(v20 & 0xC000000000000001);
    v168 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v123 = 4;
    unint64_t v170 = v20;
    v173 = (unsigned char *)v122;
LABEL_156:
    uint64_t v125 = v123 - 4;
    if (v174)
    {
      id v99 = (unsigned char *)MEMORY[0x1C18862A0](v123 - 4, v20);
      uint64_t v126 = v123 - 3;
      if (__OFADD__(v125, 1)) {
        goto LABEL_185;
      }
    }
    else
    {
      id v99 = *(unsigned char **)(v20 + 8 * v123);
      swift_retain();
      uint64_t v126 = v123 - 3;
      if (__OFADD__(v125, 1))
      {
LABEL_185:
        __break(1u);
        continue;
      }
    }
    break;
  }
  id v42 = *(id *)(*(void *)v99 + 136);
  ((void (*)(void))v42)();
  uint64_t v176 = sub_1BDDAFD78();
  uint64_t v128 = v127;
  swift_bridgeObjectRelease();
  char v129 = v99[48];
  LOBYTE(v184) = v129;
  LOBYTE(v182) = 14;
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v184, (unsigned __int8 *)&v182))
  {
LABEL_162:
    id v130 = objc_msgSend(v177, sel_declaredVariable);
    if (v130)
    {
      v131 = v130;
      v169 = (uint64_t *)v42;
      uint64_t v132 = sub_1BDDAFD68();
      unint64_t v134 = v133;

      id v42 = (id)v176;
      uint64_t v184 = v176;
      uint64_t v185 = v128;
      uint64_t v182 = v132;
      unint64_t v183 = v134;
      sub_1BDCEB640();
      uint64_t v135 = sub_1BDDB0218();
      swift_bridgeObjectRelease();
      if (!v135)
      {
        swift_release();
        swift_bridgeObjectRelease();
        id v124 = v177;
        goto LABEL_178;
      }
      uint64_t v136 = v186;
      swift_bridgeObjectRetain();
      char v137 = sub_1BDD0F59C((uint64_t)v42, v128, v136);
      swift_bridgeObjectRelease();
      unint64_t v20 = v170;
      if ((v137 & 1) == 0)
      {
        sub_1BDD148D8(&v184, (uint64_t)v42, v128);
        uint64_t v138 = swift_bridgeObjectRelease();
        uint64_t v139 = ((uint64_t (*)(uint64_t))v169)(v138);
        uint64_t v141 = v140;
        v142 = v168;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v142 = sub_1BDD35A78(0, *((void *)v142 + 2) + 1, 1, v142);
        }
        unint64_t v144 = *((void *)v142 + 2);
        unint64_t v143 = *((void *)v142 + 3);
        v168 = v142;
        id v124 = v177;
        if (v144 >= v143 >> 1) {
          v168 = sub_1BDD35A78((char *)(v143 > 1), v144 + 1, 1, v168);
        }
        v145 = v168;
        *((void *)v168 + 2) = v144 + 1;
        v146 = &v145[16 * v144];
        *((void *)v146 + 4) = v139;
        *((void *)v146 + 5) = v141;
        swift_release();
LABEL_178:
        unint64_t v20 = v170;
        uint64_t v122 = (uint64_t)v173;
LABEL_155:
        ++v123;
        id v99 = v175;
        if (v126 == v122)
        {
          swift_release();

          v164 = v168;
          goto LABEL_189;
        }
        goto LABEL_156;
      }
LABEL_176:
      swift_release();
      swift_bridgeObjectRelease();
      id v124 = v177;
      uint64_t v122 = (uint64_t)v173;
      goto LABEL_155;
    }
LABEL_154:
    swift_release();
    swift_bridgeObjectRelease();
    id v124 = v177;
    goto LABEL_155;
  }
  LOBYTE(v184) = v129;
  LOBYTE(v182) = 19;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v184, (unsigned __int8 *)&v182)) {
    goto LABEL_154;
  }
  ((void (*)(void))v42)();
  uint64_t v147 = sub_1BDDAFDC8();
  uint64_t v148 = swift_bridgeObjectRelease();
  if (v147 != 1) {
    goto LABEL_176;
  }
  unint64_t v149 = ((uint64_t (*)(uint64_t))v42)(v148);
  unint64_t v151 = sub_1BDD2FEAC(v149, v150);
  swift_bridgeObjectRelease();
  if ((v151 & 0x100000000) != 0) {
    goto LABEL_176;
  }
  uint64_t v152 = sub_1BDDAF958();
  v169 = &v166;
  uint64_t v166 = *(void *)(v152 - 8);
  uint64_t v167 = v152;
  MEMORY[0x1F4188790](v152, v153);
  v155 = (char *)&v166 - ((v154 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_1BDDAF938();
  unint64_t v157 = ((uint64_t (*)(uint64_t))v42)(v156);
  unint64_t v159 = sub_1BDD2FEAC(v157, v158);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v159 & 0x100000000) == 0)
  {
    char v161 = sub_1BDDAF948();
    (*(void (**)(char *, uint64_t))(v166 + 8))(v155, v167);
    unint64_t v20 = v170;
    uint64_t v122 = (uint64_t)v173;
    if (v161) {
      goto LABEL_162;
    }
    goto LABEL_154;
  }
  __break(1u);
  return result;
}

unint64_t sub_1BDCE6070(uint64_t a1)
{
  sub_1BDDAFD68();
  sub_1BDDB0558();
  sub_1BDDAFDB8();
  uint64_t v2 = sub_1BDDB0578();
  swift_bridgeObjectRelease();
  return sub_1BDCE6104(a1, v2);
}

unint64_t sub_1BDCE6104(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1BDDAFD68();
    uint64_t v8 = v7;
    if (v6 == sub_1BDDAFD68() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1BDDB04E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1BDDAFD68();
          uint64_t v15 = v14;
          if (v13 == sub_1BDDAFD68() && v15 == v16) {
            break;
          }
          char v18 = sub_1BDDB04E8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_1BDCE627C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BDCE62DC()
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__options);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1BDDAFA58();
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)Strong + 168))(Strong);
    uint64_t v2 = sub_1BDD3DA44(v2, v4);
    swift_release();
  }
  return v2;
}

uint64_t sub_1BDCE6450(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDCE64B8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF010);
    uint64_t v2 = sub_1BDDB0488();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v29 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v28 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v28) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v29 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v28) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v29 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v28) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v29 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v28) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v29 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    unint64_t v17 = (void *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v18 = v17[1];
    char v19 = *(void **)(*(void *)(a1 + 56) + 8 * v12);
    *(void *)&v38[0] = *v17;
    *((void *)&v38[0] + 1) = v18;
    id v20 = v19;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF1E8);
    swift_dynamicCast();
    long long v34 = v30;
    long long v35 = v31;
    uint64_t v36 = v32;
    sub_1BDD198E8(&v33, v37);
    long long v30 = v34;
    long long v31 = v35;
    uint64_t v32 = v36;
    sub_1BDD198E8(v37, v38);
    sub_1BDD198E8(v38, &v34);
    uint64_t result = sub_1BDDB02C8();
    uint64_t v21 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v6 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v22) & ~*(void *)(v6 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v6 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v9 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v30;
    *(_OWORD *)(v10 + 16) = v31;
    *(void *)(v10 + 32) = v32;
    uint64_t result = (uint64_t)sub_1BDD198E8(&v34, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v28)
  {
LABEL_37:
    swift_release();
    sub_1BDCE68B0();
    return v2;
  }
  unint64_t v14 = *(void *)(v29 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v29 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1BDCE6874(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1BDCE68B0()
{
  return swift_release();
}

uint64_t CalculateExpression.locales.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDCE6964()
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___variableResults);
  swift_beginAccess();
  if (*(void *)(*v1 + 16)
    || (swift_getKeyPath(),
        sub_1BDDAFA58(),
        swift_release(),
        uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__variables),
        swift_beginAccess(),
        !*(void *)(*v2 + 16)))
  {
LABEL_43:
    swift_getKeyPath();
    sub_1BDDAFA58();
    swift_release();
    return swift_bridgeObjectRetain();
  }
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  uint64_t v38 = *v2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(*v2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(*v2 + 64);
  int64_t v39 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v40 = *v2;
  swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v42)
  {
    if (v5)
    {
      uint64_t v41 = (v5 - 1) & v5;
      int64_t v42 = i;
      unint64_t v8 = __clz(__rbit64(v5)) | (i << 6);
    }
    else
    {
      int64_t v9 = i + 1;
      if (__OFADD__(i, 1)) {
        goto LABEL_46;
      }
      if (v9 >= v39)
      {
LABEL_42:
        swift_release();
        goto LABEL_43;
      }
      unint64_t v10 = *(void *)(v38 + 8 * v9);
      int64_t v11 = i + 1;
      if (!v10)
      {
        int64_t v11 = i + 2;
        if (i + 2 >= v39) {
          goto LABEL_42;
        }
        unint64_t v10 = *(void *)(v38 + 8 * v11);
        if (!v10)
        {
          int64_t v11 = i + 3;
          if (i + 3 >= v39) {
            goto LABEL_42;
          }
          unint64_t v10 = *(void *)(v38 + 8 * v11);
          if (!v10)
          {
            uint64_t v12 = i + 4;
            if (i + 4 >= v39) {
              goto LABEL_42;
            }
            unint64_t v10 = *(void *)(v38 + 8 * v12);
            if (!v10)
            {
              while (1)
              {
                int64_t v11 = v12 + 1;
                if (__OFADD__(v12, 1)) {
                  goto LABEL_47;
                }
                if (v11 >= v39) {
                  goto LABEL_42;
                }
                unint64_t v10 = *(void *)(v38 + 8 * v11);
                ++v12;
                if (v10) {
                  goto LABEL_23;
                }
              }
            }
            int64_t v11 = i + 4;
          }
        }
      }
LABEL_23:
      uint64_t v41 = (v10 - 1) & v10;
      int64_t v42 = v11;
      unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    }
    int64_t v13 = (uint64_t *)(*(void *)(v40 + 48) + 16 * v8);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    int64_t v16 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(v40 + 56) + 8 * v8) + 104);
    swift_bridgeObjectRetain();
    uint64_t v17 = swift_retain();
    uint64_t v18 = v16(v17);
    if (v18)
    {
      uint64_t v19 = v18;
      swift_getKeyPath();
      sub_1BDDAFA58();
      swift_release();
      if (*(unsigned char *)(v19 + OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation) == 1) {
        sub_1BDD3BE54();
      }
      swift_getKeyPath();
      sub_1BDDAFA58();
      swift_release();
      id v20 = (id *)(v19 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalResult);
      swift_beginAccess();
      if (*v20)
      {
        id v21 = objc_msgSend(*v20, sel_ignoringNaN);
        swift_release();
        goto LABEL_31;
      }
      swift_release();
    }
    id v21 = 0;
LABEL_31:
    swift_getKeyPath();
    sub_1BDDAFA58();
    swift_release();
    swift_getKeyPath();
    sub_1BDDAFA78();
    swift_release();
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v1;
    unint64_t v43 = (void *)*v1;
    uint64_t *v1 = 0x8000000000000000;
    unint64_t v25 = sub_1BDD13EB4(v15, v14);
    uint64_t v26 = *(void *)(v23 + 16);
    BOOL v27 = (v24 & 1) == 0;
    uint64_t v28 = v26 + v27;
    if (__OFADD__(v26, v27)) {
      break;
    }
    char v29 = v24;
    if (*(void *)(v23 + 24) >= v28)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v32 = v43;
        if (v24) {
          goto LABEL_6;
        }
      }
      else
      {
        sub_1BDD4EFAC();
        uint64_t v32 = v43;
        if (v29) {
          goto LABEL_6;
        }
      }
    }
    else
    {
      sub_1BDD4E478(v28, isUniquelyReferenced_nonNull_native);
      unint64_t v30 = sub_1BDD13EB4(v15, v14);
      if ((v29 & 1) != (v31 & 1)) {
        goto LABEL_48;
      }
      unint64_t v25 = v30;
      uint64_t v32 = v43;
      if (v29)
      {
LABEL_6:
        uint64_t v7 = v32[7];

        *(void *)(v7 + 8 * v25) = v21;
        goto LABEL_7;
      }
    }
    v32[(v25 >> 6) + 8] |= 1 << v25;
    long long v33 = (uint64_t *)(v32[6] + 16 * v25);
    *long long v33 = v15;
    v33[1] = v14;
    *(void *)(v32[7] + 8 * v25) = v21;
    uint64_t v34 = v32[2];
    BOOL v35 = __OFADD__(v34, 1);
    uint64_t v36 = v34 + 1;
    if (v35) {
      goto LABEL_45;
    }
    v32[2] = v36;
    swift_bridgeObjectRetain();
LABEL_7:
    uint64_t *v1 = (uint64_t)v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_getKeyPath();
    sub_1BDDAFA68();
    swift_release();
    swift_release();
    unint64_t v5 = v41;
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  uint64_t result = sub_1BDDB0528();
  __break(1u);
  return result;
}

void *CalculateExpression.numberFormatter.getter()
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatter);
  id v2 = v1;
  return v1;
}

uint64_t CalculateExpression.expression.getter()
{
  uint64_t v0 = sub_1BDCE7050();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1BDCE7050()
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___updateExpression) == 1)
  {
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x1F4188790](KeyPath, v2);
    sub_1BDDAFA48();
    swift_release();
    uint64_t v3 = *(void (**)(uint64_t))(*(void *)sub_1BDD5018C() + 296);
    uint64_t v4 = swift_retain();
    v3(v4);
    swift_release();
    uint64_t v5 = swift_getKeyPath();
    MEMORY[0x1F4188790](v5, v6);
    sub_1BDDAFA48();
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  return *(void *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___expression);
}

uint64_t sub_1BDCE72C0()
{
  uint64_t v0 = swift_allocObject();
  swift_weakInit();
  *(_DWORD *)(v0 + 24) = 16777473;
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(unsigned char *)(v0 + 28) = 1;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = v1;
  *(_WORD *)(v0 + 48) = 0;
  *(unsigned char *)(v0 + 50) = 0;
  return v0;
}

uint64_t sub_1BDCE7328()
{
  void *(*v21)(void *__return_ptr);
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  void *(*v27)(void *__return_ptr);
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v72)(void);
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 v75;
  unsigned __int8 v76;
  unsigned __int8 v77;
  unsigned __int8 v78;

  uint64_t v3 = (uint64_t (**)(void))(*v0 + 392);
  uint64_t v4 = *v3;
  unint64_t v5 = (*v3)();
  if (v5 >> 62) {
    goto LABEL_149;
  }
  for (uint64_t i = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10); ; uint64_t i = sub_1BDDB0448())
  {
    uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
    char v72 = v4;
    if (i < 1) {
      break;
    }
    uint64_t v73 = 0;
    unint64_t v8 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v9 = 4;
    while (1)
    {
      uint64_t v10 = *((void *)v8 + 2);
      uint64_t j = v10 ? *(void *)&v8[8 * v10 + 24] : 0;
      unint64_t v12 = v9 - 4;
      uint64_t v13 = ((uint64_t (*)(uint64_t))v4)(isUniquelyReferenced_nonNull_native);
      uint64_t v14 = v13;
      if ((v13 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v1 = MEMORY[0x1C18862A0](v9 - 4, v13);
LABEL_11:
      swift_bridgeObjectRelease();
      char v15 = *(unsigned char *)(v1 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      HIBYTE(v74) = v15;
      BYTE6(v74) = 15;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v74 + 7, (unsigned __int8 *)&v74 + 6))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v8 = sub_1BDD16A60(0, *((void *)v8 + 2) + 1, 1, v8);
        }
        unint64_t v17 = *((void *)v8 + 2);
        unint64_t v16 = *((void *)v8 + 3);
        if (v17 >= v16 >> 1) {
          unint64_t v8 = sub_1BDD16A60((char *)(v16 > 1), v17 + 1, 1, v8);
        }
        uint64_t j = 0;
        *((void *)v8 + 2) = v17 + 1;
        *(void *)&v8[8 * v17 + 32] = 0;
      }
      else
      {
        BYTE5(v74) = v15;
        BYTE4(v74) = 16;
        if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v74 + 5, (unsigned __int8 *)&v74 + 4)&& *((void *)v8 + 2))
        {
          uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v18 = *((void *)v8 + 2);
            if (!v18) {
              goto LABEL_66;
            }
          }
          else
          {
            uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1BDD1800C((uint64_t)v8);
            unint64_t v8 = (char *)isUniquelyReferenced_nonNull_native;
            uint64_t v18 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
            if (!v18)
            {
LABEL_66:
              __break(1u);
              goto LABEL_67;
            }
          }
          *((void *)v8 + 2) = v18 - 1;
        }
      }
      uint64_t v19 = (void *)(*(uint64_t (**)(void))(*(void *)v1 + 256))();
      if (v19)
      {
        uint64_t v14 = (uint64_t)v19;
        id v20 = (uint64_t (*)(void))(*v19 + 272);
        id v21 = *(void *(**)(void *__return_ptr))v20;
        uint64_t v4 = v20;
        unint64_t v22 = (*(void *(**)(char *__return_ptr))v20)((char *)&v74 + 1);
        if (BYTE1(v74) == 1)
        {
          uint64_t v2 = sub_1BDCE7328(v22);
          swift_release();
          if (__OFADD__(v2, 1)) {
            goto LABEL_76;
          }
          if (v2 + 1 > j) {
            uint64_t j = v2 + 1;
          }
        }
        else
        {
          uint64_t v23 = ((void *(*)(uint64_t *__return_ptr, void *))v21)(&v74, v22);
          if (v74 >= 3u)
          {
            char v24 = sub_1BDCE7328(v23);
            swift_release();
            if (v24 > j) {
              uint64_t j = v24;
            }
          }
          else
          {
            swift_release();
          }
        }
      }
      unint64_t v25 = (*(uint64_t (**)(void))(*(void *)v1 + 280))();
      if (v25)
      {
        uint64_t v14 = v25;
        uint64_t v26 = (uint64_t (*)(void))(*(void *)v25 + 272);
        BOOL v27 = *(void *(**)(void *__return_ptr))v26;
        uint64_t v4 = v26;
        uint64_t v28 = (*(void *(**)(char *__return_ptr))v26)((char *)&v74 + 3);
        if (BYTE3(v74) == 1)
        {
          uint64_t v2 = sub_1BDCE7328(v28);
          unint64_t v25 = swift_release();
          if (__OFADD__(v2, 1)) {
            goto LABEL_77;
          }
          if (v2 + 1 > j) {
            uint64_t j = v2 + 1;
          }
          uint64_t v2 = *((void *)v8 + 2);
          if (!v2) {
            goto LABEL_49;
          }
          goto LABEL_42;
        }
        char v29 = ((void *(*)(uint64_t *__return_ptr, void *))v27)((uint64_t *)((char *)&v74 + 2), v28);
        if (BYTE2(v74) >= 3u)
        {
          uint64_t v36 = sub_1BDCE7328(v29);
          unint64_t v25 = swift_release();
          if (v36 > j) {
            uint64_t j = v36;
          }
          uint64_t v2 = *((void *)v8 + 2);
          if (!v2) {
            goto LABEL_49;
          }
          goto LABEL_42;
        }
        unint64_t v25 = swift_release();
      }
      uint64_t v2 = *((void *)v8 + 2);
      if (!v2) {
        goto LABEL_49;
      }
LABEL_42:
      uint64_t v14 = v2 - 1;
      if (j <= *(void *)&v8[8 * v2 + 24]) {
        uint64_t v4 = *(uint64_t (**)(void))&v8[8 * v2 + 24];
      }
      else {
        uint64_t v4 = (uint64_t (*)(void))j;
      }
      unint64_t v25 = swift_isUniquelyReferenced_nonNull_native();
      if ((v25 & 1) == 0)
      {
        unint64_t v25 = (uint64_t)sub_1BDD1800C((uint64_t)v8);
        unint64_t v8 = (char *)v25;
      }
      if ((unint64_t)v2 > *((void *)v8 + 2)) {
        goto LABEL_75;
      }
      *(void *)&v8[8 * v14 + 32] = v4;
LABEL_49:
      uint64_t v4 = v72;
      unint64_t v30 = ((uint64_t (*)(uint64_t))v72)(v25);
      uint64_t v14 = v30;
      if ((v30 & 0xC000000000000001) != 0)
      {
        char v31 = MEMORY[0x1C18862A0](v9 - 4, v30);
      }
      else
      {
        if (v12 >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_74;
        }
        char v31 = *(void *)(v30 + 8 * v9);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t))(*(void *)v31 + 312))(j);
      swift_release();
      uint64_t v32 = swift_release();
      long long v33 = v73;
      if (j > v73) {
        long long v33 = j;
      }
      uint64_t v73 = v33;
      uint64_t v34 = ((uint64_t (*)(uint64_t))v72)(v32);
      if (v34 >> 62) {
        uint64_t v1 = sub_1BDDB0448();
      }
      else {
        uint64_t v1 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
      BOOL v35 = v9 - 3;
      ++v9;
      if (v35 >= v1) {
        goto LABEL_68;
      }
    }
    if (v12 < *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v1 = *(void *)(v13 + 8 * v9);
      swift_retain();
      goto LABEL_11;
    }
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
    while (2)
    {
      int64_t v39 = MEMORY[0x1C18862A0](j, v14);
LABEL_79:
      uint64_t v40 = swift_bridgeObjectRelease();
      uint64_t v41 = (*(uint64_t (**)(uint64_t))(*(void *)v39 + 304))(v40);
      swift_release();
      (*(void (**)(uint64_t))(*(void *)v2 + 312))(v41);
      swift_release();
      while (2)
      {
        while (2)
        {
          uint64_t v38 = swift_release();
          uint64_t j = v1;
          if (v1 <= 0) {
            goto LABEL_139;
          }
LABEL_81:
          int64_t v42 = *((void *)v8 + 2);
          if (v42) {
            uint64_t v2 = *(void *)&v8[8 * v42 + 24];
          }
          else {
            uint64_t v2 = 0;
          }
          uint64_t v1 = j - 1;
          unint64_t v43 = ((uint64_t (*)(uint64_t))v4)(v38);
          if ((v43 & 0xC000000000000001) != 0)
          {
            char v44 = MEMORY[0x1C18862A0](j - 1, v43);
          }
          else
          {
            if (v1 >= *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              goto LABEL_147;
            }
            char v44 = *(void *)(v43 + 8 * j + 24);
            swift_retain();
          }
          swift_bridgeObjectRelease();
          char v45 = *(unsigned char *)(v44 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
          uint64_t v78 = v45;
          unint64_t v77 = 16;
          if (static CalculateExpression.TokenType.== infix(_:_:)(&v78, &v77))
          {
            uint64_t v2 = (*(uint64_t (**)(void))(*(void *)v44 + 304))();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v8 = sub_1BDD16A60(0, *((void *)v8 + 2) + 1, 1, v8);
            }
            uint64_t v47 = *((void *)v8 + 2);
            char v46 = *((void *)v8 + 3);
            unint64_t v48 = v47 + 1;
            if (v47 >= v46 >> 1) {
              unint64_t v8 = sub_1BDD16A60((char *)(v46 > 1), v47 + 1, 1, v8);
            }
            *((void *)v8 + 2) = v48;
            *(void *)&v8[8 * v47 + 32] = v2;
LABEL_99:
            if (v2 <= *(void *)&v8[8 * v48 + 24]) {
              uint64_t v4 = *(uint64_t (**)(void))&v8[8 * v48 + 24];
            }
            else {
              uint64_t v4 = (uint64_t (*)(void))v2;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v8 = sub_1BDD1800C((uint64_t)v8);
            }
            if (v48 > *((void *)v8 + 2)) {
              goto LABEL_145;
            }
            *(void *)&v8[8 * v48 + 24] = v4;
            uint64_t v4 = v72;
          }
          else
          {
            uint64_t v76 = v45;
            unint64_t v75 = 15;
            char v49 = static CalculateExpression.TokenType.== infix(_:_:)(&v76, &v75);
            unint64_t v48 = *((void *)v8 + 2);
            if (v49)
            {
              if (!v48) {
                goto LABEL_106;
              }
              if (swift_isUniquelyReferenced_nonNull_native())
              {
                uint64_t v50 = *((void *)v8 + 2);
                if (!v50) {
                  goto LABEL_138;
                }
              }
              else
              {
                unint64_t v8 = sub_1BDD1800C((uint64_t)v8);
                uint64_t v50 = *((void *)v8 + 2);
                if (!v50)
                {
LABEL_138:
                  __break(1u);
LABEL_139:
                  swift_bridgeObjectRelease();
                  return v73;
                }
              }
              unint64_t v48 = v50 - 1;
              *((void *)v8 + 2) = v50 - 1;
            }
            if (v48) {
              goto LABEL_99;
            }
          }
LABEL_106:
          uint64_t v51 = v4();
          if ((v51 & 0xC000000000000001) != 0)
          {
            uint64_t v52 = MEMORY[0x1C18862A0](j - 1, v51);
          }
          else
          {
            if (v1 >= *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_142;
            }
            uint64_t v52 = *(void *)(v51 + 8 * j + 24);
            swift_retain();
          }
          v53 = swift_bridgeObjectRelease();
          uint64_t v54 = ((uint64_t (*)(uint64_t))v4)(v53);
          if ((v54 & 0xC000000000000001) != 0)
          {
            id v55 = MEMORY[0x1C18862A0](j - 1, v54);
          }
          else
          {
            if (v1 >= *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_143;
            }
            id v55 = *(void *)(v54 + 8 * j + 24);
            swift_retain();
          }
          id v56 = swift_bridgeObjectRelease();
          uint64_t v57 = (*(uint64_t (**)(uint64_t))(*(void *)v55 + 304))(v56);
          swift_release();
          if (v2 <= v57) {
            uint64_t v58 = v57;
          }
          else {
            uint64_t v58 = v2;
          }
          (*(void (**)(uint64_t))(*(void *)v52 + 312))(v58);
          uint64_t v59 = swift_release();
          uint64_t v4 = v72;
          id v60 = ((uint64_t (*)(uint64_t))v72)(v59);
          if ((v60 & 0xC000000000000001) != 0)
          {
            id v61 = MEMORY[0x1C18862A0](j - 1, v60);
          }
          else
          {
            if (v1 >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_144;
            }
            id v61 = *(void *)(v60 + 8 * j + 24);
            swift_retain();
          }
          uint64_t v62 = swift_bridgeObjectRelease();
          uint64_t v63 = (*(uint64_t (**)(uint64_t))(*(void *)v61 + 304))(v62);
          id v64 = swift_release();
          uint64_t v65 = v73;
          if (v63 > v73) {
            uint64_t v65 = v63;
          }
          uint64_t v73 = v65;
          if (((*(uint64_t (**)(uint64_t))(*(void *)v44 + 344))(v64) & 1) == 0) {
            continue;
          }
          break;
        }
        uint64_t v66 = v72();
        if (v66 >> 62) {
          uint64_t v2 = sub_1BDDB0448();
        }
        else {
          uint64_t v2 = *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        uint64_t v67 = swift_bridgeObjectRelease();
        if (__OFSUB__(v2, 2)) {
          goto LABEL_146;
        }
        if (v1 >= v2 - 2) {
          continue;
        }
        break;
      }
      char v68 = ((uint64_t (*)(uint64_t))v72)(v67);
      if ((v68 & 0xC000000000000001) == 0)
      {
        if (v1 < *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v2 = *(void *)(v68 + 8 * j + 24);
          swift_retain();
          goto LABEL_128;
        }
LABEL_147:
        __break(1u);
        goto LABEL_148;
      }
      uint64_t v2 = MEMORY[0x1C18862A0](j - 1, v68);
LABEL_128:
      uint64_t v69 = swift_bridgeObjectRelease();
      uint64_t v70 = ((uint64_t (*)(uint64_t))v72)(v69);
      uint64_t v14 = v70;
      if ((v70 & 0xC000000000000001) != 0) {
        continue;
      }
      break;
    }
    if ((unint64_t)j < *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      int64_t v39 = *(void *)(v70 + 8 * j + 32);
      swift_retain();
      goto LABEL_79;
    }
LABEL_148:
    __break(1u);
LABEL_149:
    ;
  }
LABEL_67:
  uint64_t v73 = 0;
LABEL_68:
  unint64_t v37 = ((uint64_t (*)(uint64_t))v4)(isUniquelyReferenced_nonNull_native);
  if (v37 >> 62) {
    goto LABEL_151;
  }
  for (uint64_t j = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10); ; uint64_t j = sub_1BDDB0448())
  {
    swift_bridgeObjectRelease();
    uint64_t v38 = swift_bridgeObjectRelease();
    if (!__OFSUB__(j, 1)) {
      break;
    }
    __break(1u);
LABEL_151:
    ;
  }
  if (((j - 1) & 0x8000000000000000) == 0)
  {
    unint64_t v8 = (char *)MEMORY[0x1E4FBC860];
    goto LABEL_81;
  }
  return v73;
}

unint64_t sub_1BDCE7EAC()
{
  unint64_t result = (*(uint64_t (**)(void))(*(void *)v0 + 392))();
  unint64_t v2 = result;
  if (!(result >> 62))
  {
    uint64_t v3 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
LABEL_27:
    return swift_bridgeObjectRelease();
  }
LABEL_26:
  unint64_t result = sub_1BDDB0448();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_27;
  }
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = 0;
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x1C18862A0](i, v2);
      }
      else
      {
        uint64_t v6 = *(void *)(v2 + 8 * i + 32);
        swift_retain();
      }
      unsigned __int8 v7 = *(unsigned char *)(v6 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      v16[0] = v7;
      unsigned __int8 v17 = 15;
      if (static CalculateExpression.TokenType.== infix(_:_:)(v16, &v17))
      {
        BOOL v8 = __OFADD__(v4++, 1);
        if (v8)
        {
          __break(1u);
LABEL_25:
          __break(1u);
          goto LABEL_26;
        }
      }
      else
      {
        v16[0] = v7;
        unsigned __int8 v17 = 16;
        if (static CalculateExpression.TokenType.== infix(_:_:)(v16, &v17))
        {
          BOOL v8 = __OFSUB__(v4--, 1);
          if (v8) {
            goto LABEL_25;
          }
        }
      }
      uint64_t v9 = (*(uint64_t (**)(void))(*(void *)v6 + 256))();
      if (v9)
      {
        sub_1BDCE7EAC();
        uint64_t v9 = swift_release();
      }
      if ((*(uint64_t (**)(uint64_t))(*(void *)v6 + 280))(v9))
      {
        sub_1BDCE7EAC();
        swift_release();
      }
      swift_release();
    }
    unint64_t result = swift_bridgeObjectRelease();
    if (v4 >= 1)
    {
      uint64_t v10 = *(uint64_t (**)(unsigned __int8 *))(*(void *)v15 + 408);
      type metadata accessor for CalculateExpression.RichToken();
      uint64_t v11 = v4 + 1;
      do
      {
        v16[0] = 16;
        swift_allocObject();
        CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, v16, 1);
        unint64_t v12 = (uint64_t (*)(unsigned __int8 *, void))v10(v16);
        uint64_t v14 = v13;
        MEMORY[0x1C1885EA0]();
        if (*(void *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1BDDB0008();
        }
        sub_1BDDB0048();
        sub_1BDDAFFD8();
        unint64_t result = v12(v16, 0);
        --v11;
      }
      while (v11 > 1);
    }
  }
  return result;
}

uint64_t sub_1BDCE81C4()
{
  if (v0[24] != 1) {
    goto LABEL_23;
  }
  uint64_t v1 = v0;
  if ((*(uint64_t (**)(void))(*(void *)v0 + 176))())
  {
    uint64_t v2 = CalculateExpression.format.getter();
    swift_release();
    if (v2 == 2) {
      goto LABEL_11;
    }
  }
  uint64_t v3 = (uint64_t (**)(void))(*(void *)v0 + 392);
  uint64_t v4 = *v3;
  unint64_t v5 = (*v3)();
  if (v5 >> 62) {
    uint64_t v6 = sub_1BDDB0448();
  }
  else {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v7 = swift_bridgeObjectRelease();
  unint64_t v8 = ((uint64_t (*)(uint64_t))v4)(v7);
  if (v6 == 1)
  {
    if ((v8 & 0xC000000000000001) != 0)
    {
      uint64_t v9 = MEMORY[0x1C18862A0](0, v8);
LABEL_10:
      swift_bridgeObjectRelease();
      unsigned __int8 v10 = *(unsigned char *)(v9 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      swift_release();
      v22[0] = v10;
      unsigned __int8 v21 = 4;
      if (static CalculateExpression.TokenType.== infix(_:_:)(v22, &v21))
      {
LABEL_11:
        char v11 = 1;
        return v11 & 1;
      }
      uint64_t v20 = v4();
      uint64_t v1 = (unsigned char *)v20;
      if ((v20 & 0xC000000000000001) == 0)
      {
        if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          swift_retain();
LABEL_28:
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_29;
        }
        __break(1u);
        goto LABEL_38;
      }
LABEL_36:
      MEMORY[0x1C18862A0](0, v1);
      goto LABEL_28;
    }
    if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v9 = *(void *)(v8 + 32);
      swift_retain();
      goto LABEL_10;
    }
    __break(1u);
    goto LABEL_33;
  }
  if (v8 >> 62)
  {
LABEL_33:
    uint64_t v12 = sub_1BDDB0448();
    goto LABEL_14;
  }
  uint64_t v12 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_14:
  uint64_t v13 = swift_bridgeObjectRelease();
  if (v12 != 2) {
    goto LABEL_23;
  }
  uint64_t v14 = ((uint64_t (*)(uint64_t))v4)(v13);
  if ((v14 & 0xC000000000000001) != 0)
  {
    uint64_t v15 = MEMORY[0x1C18862A0](0, v14);
  }
  else
  {
    if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_36;
    }
    uint64_t v15 = *(void *)(v14 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  unsigned __int8 v16 = *(unsigned char *)(v15 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  unsigned __int8 v24 = v16;
  unsigned __int8 v23 = 4;
  if (!static CalculateExpression.TokenType.== infix(_:_:)(&v24, &v23))
  {
LABEL_23:
    char v11 = 0;
    return v11 & 1;
  }
  uint64_t result = v4();
  uint64_t v1 = (unsigned char *)result;
  if ((result & 0xC000000000000001) != 0)
  {
LABEL_38:
    uint64_t v18 = MEMORY[0x1C18862A0](1, v1);
    goto LABEL_22;
  }
  if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    uint64_t v18 = *(void *)(result + 40);
    swift_retain();
LABEL_22:
    swift_bridgeObjectRelease();
    unsigned __int8 v19 = *(unsigned char *)(v18 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    v22[1] = v19;
LABEL_29:
    char v11 = CalculateExpression.TokenType.isOperand.getter();
    return v11 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDCE84F0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDCE8528(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)
    && (sub_1BDCF06D4(),
        uint64_t v3 = sub_1BDDAFCE8(),
        uint64_t v4 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v5 = v3 & ~v4,
        ((*(void *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0))
  {
    uint64_t v6 = ~v4;
    sub_1BDCF0848();
    do
    {
      char v7 = sub_1BDDAFD28();
      if (v7) {
        break;
      }
      unint64_t v5 = (v5 + 1) & v6;
    }
    while (((*(void *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_1BDCE8614(void *a1, uint64_t *a2)
{
  uint64_t v4 = *v2;
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = *a2;
  return sub_1BDCE8528(v4, v5);
}

uint64_t CalculateExpression.TokenType.isOperand.getter()
{
  return sub_1BDCE8614(&qword_1EBA29970, &qword_1EBA29968);
}

uint64_t sub_1BDCE868C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (*(void *(**)(uint64_t *__return_ptr))(*(void *)v0 + 272))(&v12);
  if ((_BYTE)v12
    || (*(uint64_t (**)(void *))(*(void *)v0 + 176))(v2)
    && (uint64_t v5 = CalculateExpression.format.getter(), swift_release(), v5 == 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1BDDB3730;
    LOBYTE(v12) = 18;
    type metadata accessor for CalculateExpression.RichToken();
    uint64_t v4 = swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0xE000000000000000, (unsigned __int8 *)&v12, 0);
    *(void *)(v3 + 32) = v4;
    uint64_t v12 = v3;
    sub_1BDDAFFD8();
    (*(void (**)(uint64_t))(*(void *)v1 + 400))(v12);
  }
  else
  {
    type metadata accessor for CalculateExpression.RichToken();
    (*(void (**)(uint64_t *__return_ptr))(*(void *)v0 + 384))(&v12);
    uint64_t v6 = sub_1BDCE8A80(48, 0xE100000000000000, (char *)&v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1BDDB3730;
    *(void *)(v7 + 32) = v6;
    uint64_t v12 = v7;
    sub_1BDDAFFD8();
    uint64_t v8 = v12;
    uint64_t v9 = *(void (**)(uint64_t))(*(void *)v1 + 400);
    swift_retain();
    v9(v8);
    swift_release();
  }
  (*(void (**)(void))(*(void *)v1 + 352))(0);
  (*(void (**)(uint64_t))(*(void *)v1 + 232))(1);
  unsigned __int8 v10 = *(uint64_t (**)(void))(*(void *)v1 + 256);
  return v10(0);
}

uint64_t sub_1BDCE8978(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  return *(void *)(v2 + *a2);
}

uint64_t CalculateExpression.format.getter()
{
  return sub_1BDCE8978((uint64_t)&unk_1BDDB4920, &OBJC_IVAR____TtC9Calculate19CalculateExpression___format);
}

uint64_t sub_1BDCE8A2C(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  return result;
}

uint64_t type metadata accessor for CalculateExpression.RichToken()
{
  uint64_t result = qword_1EBA29940;
  if (!qword_1EBA29940) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BDCE8A80(uint64_t a1, uint64_t a2, char *a3)
{
  char v4 = *a3;
  v18[0] = 1;
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, unsigned __int8 *, void))(v3 + 336))(a1, a2, v18, 0);
  v18[0] = v4;
  char v19 = 1;
  sub_1BDCE8EC8();
  swift_retain();
  if ((sub_1BDDAFD28() & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1BDDB3730;
    v18[0] = v4;
    *(void *)uint64_t v18 = CalculateExpression.Base.rawValue.getter();
    uint64_t v7 = sub_1BDDB04C8();
    unint64_t v9 = v8;
    v18[0] = 1;
    type metadata accessor for CalculateExpression.RichToken();
    uint64_t v10 = swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(v7, v9, v18, 0);
    *(void *)(v6 + 32) = v10;
    *(void *)uint64_t v18 = v6;
    sub_1BDDAFFD8();
    uint64_t v11 = *(void *)v18;
    type metadata accessor for CalculateExpression.RichExpression();
    uint64_t v12 = swift_allocObject();
    sub_1BDD0A5F0(v11);
    uint64_t v13 = (uint64_t *)(v5 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_right);
    swift_beginAccess();
    *uint64_t v13 = v12;
    swift_release();
    uint64_t v14 = *v13;
    if (*v13)
    {
      char v19 = 2;
      uint64_t v15 = *(void (**)(char *))(*(void *)v14 + 280);
      swift_retain();
      v15(&v19);
      swift_release();
      uint64_t v16 = *v13;
      if (*v13)
      {
        swift_retain();
        swift_release();
        (*(void (**)(void))(*(void *)v16 + 304))(0);
      }
    }
  }
  swift_release();
  return v5;
}

uint64_t CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(uint64_t a1, unint64_t a2, unsigned __int8 *a3, char a4)
{
  uint64_t v8 = swift_allocObject();
  CalculateExpression.RichToken.init(text:type:isImplicit:)(a1, a2, a3, a4);
  return v8;
}

uint64_t CalculateExpression.RichToken.init(text:type:isImplicit:)(uint64_t a1, unint64_t a2, unsigned __int8 *a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = *a3;
  sub_1BDDAF9E8();
  *(void *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_left) = 0;
  *(void *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_right) = 0;
  *(void *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maxSuperscript) = 0;
  uint64_t v10 = (void *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_formattedText);
  *uint64_t v10 = 0;
  v10[1] = 0;
  *(void *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maximumIntegerDigits) = 0;
  *(void *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_minimumFractionDigits) = 0;
  *(void *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maximumFractionDigits) = 0;
  *(unsigned char *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_flexibleFractionDigits) = 0;
  *(unsigned char *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_usesGroupingSeparator) = 0;
  *(unsigned char *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_usesSignificantDigits) = 0;
  *(void *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maximumSignificantDigits) = 0;
  uint64_t v11 = (void *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_preformattedText);
  *uint64_t v11 = 0;
  v11[1] = 0;
  unint64_t v12 = sub_1BDCF0558((uint64_t)&unk_1F1866810);
  if (*(void *)(v12 + 16) && (unint64_t v13 = sub_1BDCF0668(v9), (v14 & 1) != 0))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(v12 + 56) + 16 * v13);
    a1 = *v15;
    unint64_t v16 = v15[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (a2)
    {
      unint64_t v16 = a2;
    }
    else
    {
      a1 = 0;
      unint64_t v16 = 0xE000000000000000;
    }
  }
  unsigned __int8 v17 = (void *)(v5 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_text);
  void *v17 = a1;
  v17[1] = v16;
  *(unsigned char *)(v5 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type) = v9;
  *(unsigned char *)(v5 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_isImplicit) = a4 & 1;
  return v5;
}

BOOL sub_1BDCE8EA4(char *a1, char *a2)
{
  return qword_1BDDB50D8[*a1] == qword_1BDDB50D8[*a2];
}

unint64_t sub_1BDCE8EC8()
{
  unint64_t result = qword_1EBA26888;
  if (!qword_1EBA26888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA26888);
  }
  return result;
}

uint64_t sub_1BDCE8F1C(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)(v1 + 28) = 1;
  return result;
}

uint64_t sub_1BDCE8F74@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v1 + 26);
  return result;
}

uint64_t sub_1BDCE8FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = (uint64_t (**)(void))(*v3 + 392);
  uint64_t v9 = *v8;
  uint64_t v10 = v8;
  unint64_t v11 = (*v8)();
  if (v11 >> 62) {
LABEL_124:
  }
    uint64_t v12 = sub_1BDDB0448();
  else {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (v12 < 1) {
    return result;
  }
  unint64_t v14 = 0;
  unsigned int v81 = a3;
  uint64_t v80 = a2;
  uint64_t v82 = a1;
  unint64_t v83 = v9;
  uint64_t v84 = v10;
  while (1)
  {
    uint64_t v15 = ((uint64_t (*)(uint64_t))v9)(result);
    if ((v15 & 0xC000000000000001) != 0)
    {
      uint64_t v9 = (uint64_t (*)(void))MEMORY[0x1C18862A0](v14, v15);
    }
    else
    {
      if ((v14 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
        goto LABEL_124;
      }
      if (v14 >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_122;
      }
      uint64_t v9 = *(uint64_t (**)(void))(v15 + 8 * v14 + 32);
      swift_retain();
    }
    uint64_t v16 = swift_bridgeObjectRelease();
    uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 384))(v16);
    if (v17)
    {
      if (!a2
        || (swift_retain(), swift_retain(),
                            char v18 = sub_1BDDAF9D8(),
                            swift_release(),
                            uint64_t v17 = swift_release(),
                            (v18 & 1) == 0))
      {
        uint64_t v17 = (*(uint64_t (**)(void))(*(void *)v9 + 240))(0);
      }
    }
    uint64_t v19 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 256))(v17);
    if (v19) {
      break;
    }
LABEL_53:
    uint64_t v48 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 280))(v19);
    if (!v48) {
      goto LABEL_105;
    }
    char v49 = (uint64_t (*)(void))v48;
    uint64_t v50 = sub_1BDD0F6D4(v48, a1);
    char v51 = v50;
    if ((v50 & 1) == 0)
    {
      if (a3 == 1)
      {
        uint64_t v50 = (*(uint64_t (**)(uint64_t))(*(void *)v49 + 296))(v50);
        if ((v50 & 1) == 0) {
          goto LABEL_96;
        }
LABEL_60:
        uint64_t v52 = (uint64_t (**)(uint64_t))(*(void *)v49 + 392);
        v53 = *v52;
        unint64_t v54 = (*v52)(v50);
        if (v54 >> 62) {
          uint64_t v55 = sub_1BDDB0448();
        }
        else {
          uint64_t v55 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        uint64_t v56 = swift_bridgeObjectRelease();
        if (v55 == 1)
        {
          unint64_t v57 = v53(v56);
          unint64_t v58 = v57;
          if (!(v57 >> 62))
          {
            uint64_t result = *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
            a1 = v82;
            if (result) {
              goto LABEL_65;
            }
LABEL_117:
            uint64_t v56 = swift_bridgeObjectRelease();
            uint64_t v61 = 0;
            unint64_t v63 = 0xE000000000000000;
LABEL_73:
            if ((*(uint64_t (**)(uint64_t))(*(void *)v9 + 360))(v56))
            {
              if (v61 != 50 || v63 != 0xE100000000000000)
              {
                char v64 = sub_1BDDB04E8();
                LOBYTE(v65) = 0;
                if (v64) {
                  goto LABEL_95;
                }
                if (v61 != 12337 || v63 != 0xE200000000000000)
                {
                  char v66 = sub_1BDDB04E8();
                  LOBYTE(v65) = 0;
                  if ((v66 & 1) == 0) {
                    goto LABEL_80;
                  }
LABEL_95:
                  (*(void (**)(BOOL))(*(void *)v49 + 304))(v65);
                  uint64_t v50 = swift_bridgeObjectRelease();
                  a3 = v81;
                  a2 = v80;
                  goto LABEL_96;
                }
              }
            }
            else
            {
LABEL_80:
              uint64_t v67 = OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
              LOBYTE(v86[0]) = *((unsigned char *)v9 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
              LOBYTE(v85[0]) = 7;
              uint64_t v68 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v86, (unsigned __int8 *)v85);
              if (v68)
              {
                if (v61 == 50 && v63 == 0xE100000000000000) {
                  goto LABEL_94;
                }
                char v69 = sub_1BDDB04E8();
                LOBYTE(v65) = 0;
                BOOL v71 = v61 == 51 && v63 == 0xE100000000000000;
                if (v69) {
                  goto LABEL_95;
                }
                if (v71) {
                  goto LABEL_95;
                }
                uint64_t v68 = sub_1BDDB04E8();
                LOBYTE(v65) = 0;
                if (v68) {
                  goto LABEL_95;
                }
              }
              v86[0] = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 208))(v68);
              v86[1] = v72;
              v85[0] = 1885957222;
              v85[1] = 0xE400000000000000;
              sub_1BDCEB640();
              uint64_t v73 = sub_1BDDB0218();
              swift_bridgeObjectRelease();
              if (v73)
              {
                LOBYTE(v86[0]) = *((unsigned char *)v9 + v67);
                LOBYTE(v85[0]) = 1;
                BOOL v65 = !static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v86, (unsigned __int8 *)v85);
                goto LABEL_95;
              }
            }
LABEL_94:
            LOBYTE(v65) = 0;
            goto LABEL_95;
          }
          uint64_t result = sub_1BDDB0448();
          a1 = v82;
          if (!result) {
            goto LABEL_117;
          }
LABEL_65:
          if ((v58 & 0xC000000000000001) != 0)
          {
            uint64_t v59 = MEMORY[0x1C18862A0](0, v58);
          }
          else
          {
            if (!*(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_126;
            }
            uint64_t v59 = *(void *)(v58 + 32);
            swift_retain();
          }
          swift_bridgeObjectRelease();
          LOBYTE(v86[0]) = *(unsigned char *)(v59 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
          LOBYTE(v85[0]) = 1;
          BOOL v60 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v86, (unsigned __int8 *)v85);
          if (v60)
          {
            uint64_t v61 = (*(uint64_t (**)(BOOL))(*(void *)v59 + 208))(v60);
            unint64_t v63 = v62;
            uint64_t v56 = swift_release();
LABEL_72:
            a1 = v82;
            goto LABEL_73;
          }
          uint64_t v56 = swift_release();
        }
        uint64_t v61 = 0;
        unint64_t v63 = 0xE000000000000000;
        goto LABEL_72;
      }
      if (a3 == 2)
      {
        uint64_t v50 = (*(uint64_t (**)(uint64_t))(*(void *)v49 + 296))(v50);
        if ((v50 & 1) == 0) {
          goto LABEL_60;
        }
      }
    }
LABEL_96:
    uint64_t v74 = (*(uint64_t (**)(uint64_t))(*(void *)v49 + 568))(v50);
    if (v74)
    {
      if ((v51 & 1) == 0) {
        goto LABEL_98;
      }
    }
    else if (!(v51 & 1 | (((*(uint64_t (**)(uint64_t))(*(void *)v49 + 560))(v74) & 1) == 0)))
    {
LABEL_98:
      LOBYTE(v86[0]) = *((unsigned char *)v9 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      LOBYTE(v85[0]) = 7;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v86, (unsigned __int8 *)v85))
      {
        unint64_t v75 = (void (*)(void *, void))(*(uint64_t (**)(void *))(*v4 + 408))(v86);
        sub_1BDD02E58(v14);
        swift_release();
        v75(v86, 0);
        goto LABEL_100;
      }
      (*(void (**)(void))(*(void *)v9 + 288))(0);
      goto LABEL_104;
    }
    sub_1BDCE8FB8(a1, a2, a3);
LABEL_104:
    swift_release();
    uint64_t v9 = v49;
LABEL_105:
    uint64_t v76 = swift_release();
    BOOL v77 = __OFADD__(v14++, 1);
    uint64_t v10 = v84;
    if (v77) {
      goto LABEL_123;
    }
LABEL_106:
    uint64_t v9 = v83;
    unint64_t v78 = ((uint64_t (*)(uint64_t))v83)(v76);
    if (v78 >> 62) {
      uint64_t v79 = sub_1BDDB0448();
    }
    else {
      uint64_t v79 = *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t result = swift_bridgeObjectRelease();
    if ((uint64_t)v14 >= v79) {
      return result;
    }
  }
  uint64_t v20 = v19;
  uint64_t v21 = sub_1BDD0F6D4(v19, a1);
  char v22 = v21;
  if (v21)
  {
LABEL_40:
    uint64_t v36 = (*(uint64_t (**)(uint64_t))(*(void *)v20 + 568))(v21);
    if (v36 & 1) != 0 || ((*(uint64_t (**)(uint64_t))(*(void *)v20 + 560))(v36))
    {
      if ((v22 & 1) == 0)
      {
        LOBYTE(v86[0]) = *((unsigned char *)v9 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        LOBYTE(v85[0]) = 7;
        if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v86, (unsigned __int8 *)v85))
        {
          unint64_t v37 = (uint64_t (**)(void *))(*v4 + 408);
          uint64_t v38 = *v37;
          int64_t v39 = (uint64_t (*)(void *, void))(*v37)(v86);
          sub_1BDD02E58(v14);
          swift_release();
          uint64_t v40 = v39(v86, 0);
          uint64_t v41 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 280))(v40);
          if (v41)
          {
            uint64_t v42 = (*(uint64_t (**)(uint64_t))(*(void *)v41 + 392))(v41);
            unint64_t v43 = (void (*)(void *, void))v38(v86);
            unint64_t v44 = v42;
            a1 = v82;
            sub_1BDD053AC(v14, v14, v44);
            v43(v86, 0);
            swift_release();
          }
          a3 = v81;
          a2 = v80;
          goto LABEL_100;
        }
        (*(void (**)(void))(*(void *)v9 + 264))(0);
        goto LABEL_52;
      }
    }
    else if ((v22 & 1) == 0)
    {
      LOBYTE(v86[0]) = *((unsigned char *)v9 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      LOBYTE(v85[0]) = 7;
      BOOL v45 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v86, (unsigned __int8 *)v85);
      if (v45)
      {
        unint64_t v46 = (*(uint64_t (**)(BOOL))(*(void *)v20 + 392))(v45);
        uint64_t v47 = (void (*)(void *, void))(*(uint64_t (**)(void *))(*v4 + 408))(v86);
        sub_1BDD053AC(v14, v14, v46);
        v47(v86, 0);
        a1 = v82;
        (*(void (**)(void))(*(void *)v9 + 264))(0);
LABEL_100:
        swift_release();
        uint64_t v76 = swift_release();
        uint64_t v10 = v84;
        goto LABEL_106;
      }
    }
    sub_1BDCE8FB8(a1, a2, a3);
LABEL_52:
    uint64_t v19 = swift_release();
    goto LABEL_53;
  }
  if (a3 == 1)
  {
    uint64_t v21 = (*(uint64_t (**)(uint64_t))(*(void *)v20 + 296))(v21);
    if ((v21 & 1) == 0) {
      goto LABEL_40;
    }
  }
  else
  {
    if (a3 != 2) {
      goto LABEL_40;
    }
    uint64_t v21 = (*(uint64_t (**)(uint64_t))(*(void *)v20 + 296))(v21);
    if (v21) {
      goto LABEL_40;
    }
  }
  unsigned __int8 v23 = (uint64_t (**)(uint64_t))(*(void *)v20 + 392);
  unsigned __int8 v24 = *v23;
  unint64_t v25 = (*v23)(v21);
  if (v25 >> 62) {
    uint64_t v26 = sub_1BDDB0448();
  }
  else {
    uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v27 = swift_bridgeObjectRelease();
  if (v26 != 1) {
    goto LABEL_31;
  }
  unint64_t v28 = v24(v27);
  unint64_t v29 = v28;
  if (!(v28 >> 62))
  {
    uint64_t result = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    a1 = v82;
    if (result) {
      goto LABEL_25;
    }
LABEL_115:
    uint64_t v27 = swift_bridgeObjectRelease();
    uint64_t v32 = 0;
    unint64_t v34 = 0xE000000000000000;
    goto LABEL_33;
  }
  uint64_t result = sub_1BDDB0448();
  a1 = v82;
  if (!result) {
    goto LABEL_115;
  }
LABEL_25:
  if ((v29 & 0xC000000000000001) != 0)
  {
    uint64_t v30 = MEMORY[0x1C18862A0](0, v29);
    goto LABEL_28;
  }
  if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v30 = *(void *)(v29 + 32);
    swift_retain();
LABEL_28:
    swift_bridgeObjectRelease();
    LOBYTE(v86[0]) = *(unsigned char *)(v30 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    LOBYTE(v85[0]) = 1;
    BOOL v31 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v86, (unsigned __int8 *)v85);
    if (v31)
    {
      uint64_t v32 = (*(uint64_t (**)(BOOL))(*(void *)v30 + 208))(v31);
      unint64_t v34 = v33;
      uint64_t v27 = swift_release();
LABEL_32:
      a1 = v82;
LABEL_33:
      if ((*(uint64_t (**)(uint64_t))(*(void *)v9 + 344))(v27))
      {
        if (v32 == 51 && v34 == 0xE100000000000000) {
          char v35 = 1;
        }
        else {
          char v35 = sub_1BDDB04E8();
        }
      }
      else
      {
        char v35 = 0;
      }
      (*(void (**)(BOOL))(*(void *)v20 + 304))((v35 & 1) == 0);
      uint64_t v21 = swift_bridgeObjectRelease();
      a3 = v81;
      a2 = v80;
      goto LABEL_40;
    }
    uint64_t v27 = swift_release();
LABEL_31:
    uint64_t v32 = 0;
    unint64_t v34 = 0xE000000000000000;
    goto LABEL_32;
  }
  __break(1u);
LABEL_126:
  __break(1u);
  return result;
}

BOOL sub_1BDCE9DE0()
{
  if ((*(uint64_t (**)(void))(*(void *)v0 + 232))())
  {
    unsigned __int8 v4 = *(unsigned char *)(v0 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    unsigned __int8 v3 = 1;
    return static CalculateExpression.TokenType.== infix(_:_:)(&v4, &v3);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1BDCE9E54()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_isImplicit);
  swift_beginAccess();
  return *v1;
}

id sub_1BDCE9E9C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F99CB0]), sel_initWithIsNumberOverride_, 1);
  if (v0)
  {
    uint64_t v1 = v0;
    unint64_t v2 = (*(uint64_t (**)(void))(*(void *)v72 + 392))();
    unint64_t v3 = v2;
    if (v2 >> 62) {
      goto LABEL_59;
    }
    for (uint64_t i = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10); ; uint64_t i = sub_1BDDB0448())
    {
      if (!i)
      {
LABEL_55:
        swift_bridgeObjectRelease();
        id result = objc_msgSend(v1, sel_mathEquation);
        if (result)
        {
          uint64_t v67 = result;
          uint64_t v68 = sub_1BDDAFC78();

          return (id)v68;
        }
        else
        {
          __break(1u);
LABEL_61:
          __break(1u);
        }
        return result;
      }
      unint64_t v5 = 0;
      uint64_t v76 = i;
      unint64_t v77 = v3 & 0xC000000000000001;
      uint64_t v74 = v3 & 0xFFFFFFFFFFFFFF8;
      unint64_t v75 = v3;
      uint64_t v73 = (ValueMetadata *)(v3 + 32);
      unint64_t v6 = 0x1F6386000uLL;
LABEL_8:
      if (v77) {
        break;
      }
      if (v5 < *(void *)(v74 + 16))
      {
        uint64_t v7 = *(&v73->Kind + v5);
        swift_retain();
        BOOL v8 = __OFADD__(v5++, 1);
        if (!v8)
        {
LABEL_14:
          unint64_t v9 = v6;
          uint64_t v10 = (uint64_t (**)(void))(*(void *)v7 + 256);
          unint64_t v11 = *v10;
          uint64_t v12 = (*v10)();
          if (v12)
          {
            uint64_t v13 = v12;
            if (((*(uint64_t (**)(void))(*(void *)v7 + 344))() & 1) == 0)
            {
              (*(void (**)(void))(*(void *)v13 + 752))();
              unint64_t v14 = (void *)sub_1BDDAFC68();
              swift_bridgeObjectRelease();
              objc_msgSend(v1, sel_appendMathEquation_, v14);

              uint64_t i = v76;
            }
            uint64_t v12 = swift_release();
          }
          uint64_t v15 = OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
          switch(*(unsigned char *)(v7 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type))
          {
            case 1:
              (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v7 + 392))(&v80, v12);
              sub_1BDCEBD08();
              sub_1BDDAFF98();
              uint64_t v16 = sub_1BDDAFF98();
              if (v78 == v79)
              {
                uint64_t v17 = *(uint64_t (**)(uint64_t))(*(void *)v72 + 176);
                uint64_t v18 = v17(v16);
                uint64_t v19 = swift_release();
                if (v18)
                {
                  id result = (id)v17(v19);
                  if (!result) {
                    goto LABEL_61;
                  }
                  uint64_t v21 = (*(uint64_t (**)(void))(*(void *)v7 + 632))();
                  unint64_t v23 = v22;
                  swift_release();
                }
                else
                {
                  uint64_t v21 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 208))(v19);
                  unint64_t v23 = v40;
                }
                sub_1BDCEB694(101, 0xE100000000000000, v21, v23);
                if (v41)
                {
                  char v64 = (void *)sub_1BDDAFD38();
                  uint64_t v65 = swift_bridgeObjectRelease();
                  objc_msgSend(v1, sel_addNumber_implicit_, v64, (*(uint64_t (**)(uint64_t))(*(void *)v7 + 232))(v65) & 1);

                  uint64_t i = v76;
                  goto LABEL_26;
                }
                swift_bridgeObjectRetain();
                uint64_t v42 = sub_1BDDAFF08();
                uint64_t v70 = v43;
                uint64_t v71 = v42;
                uint64_t v45 = v44;
                uint64_t v47 = v46;
                swift_bridgeObjectRelease();
                MEMORY[0x1C1885C90](v71, v45, v70, v47);
                uint64_t v69 = v48;
                swift_bridgeObjectRelease();
                unint64_t v49 = sub_1BDDAFDD8();
                unint64_t v50 = sub_1BDD13AE4(v49, v21, v23);
                uint64_t v52 = v51;
                uint64_t v54 = v53;
                uint64_t v56 = v55;
                swift_bridgeObjectRelease();
                MEMORY[0x1C1885C90](v50, v52, v54, v56);
                swift_bridgeObjectRelease();
                unint64_t v57 = (void *)sub_1BDDAFD38();
                uint64_t v58 = swift_bridgeObjectRelease();
                uint64_t v59 = *(uint64_t (**)(uint64_t))(*(void *)v7 + 232);
                objc_msgSend(v1, sel_addNumber_implicit_, v57, v59(v58) & 1);

                BOOL v60 = (void *)sub_1BDDAFD38();
                objc_msgSend(v1, (SEL)(v9 + 1010), v60);

                uint64_t v61 = (void *)sub_1BDDAFD38();
                uint64_t v62 = swift_bridgeObjectRelease();
                char v63 = v59(v62);
                unint64_t v6 = v9;
                objc_msgSend(v1, sel_addNumber_implicit_, v61, v63 & 1);

                uint64_t i = v76;
              }
              else
              {
                uint64_t v78 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 208))(v16);
                sub_1BDDAFE48();
                if (v35)
                {
                  do
                  {
                    uint64_t v36 = (void *)sub_1BDDAFD38();
                    swift_bridgeObjectRelease();
                    objc_msgSend(v1, (SEL)(v6 + 1010), v36);

                    sub_1BDDAFE48();
                  }
                  while (v37);
                }
                uint64_t v38 = swift_bridgeObjectRelease();
                uint64_t v39 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 280))(v38);
                if (v39)
                {
                  (*(void (**)(uint64_t))(*(void *)v39 + 752))(v39);
                  goto LABEL_45;
                }
              }
              goto LABEL_27;
            case 3:
            case 4:
            case 5:
            case 6:
            case 8:
            case 9:
              uint64_t v26 = (void *)sub_1BDDAFD38();
              objc_msgSend(v1, sel_addOperator_implicit_, v26, (*(uint64_t (**)(void))(*(void *)v7 + 232))() & 1);

              goto LABEL_26;
            case 7:
              uint64_t v24 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 280))(v12);
              if (!v24) {
                goto LABEL_27;
              }
              (*(void (**)(uint64_t))(*(void *)v24 + 752))(v24);
              unint64_t v25 = (void *)sub_1BDDAFC68();
              swift_bridgeObjectRelease();
              objc_msgSend(v1, sel_addSubscript_superscript_, 0, v25, v69);
              goto LABEL_46;
            case 0xA:
              if (((*(uint64_t (**)(uint64_t))(*(void *)v7 + 344))(v12) & 1) != 0 && (uint64_t v31 = v11()) != 0)
              {
                (*(void (**)(uint64_t))(*(void *)v31 + 752))(v31);
                unint64_t v25 = (void *)sub_1BDDAFC68();
                swift_bridgeObjectRelease();
                objc_msgSend(v1, sel_addRadicalWithRootIndex_, v25);
              }
              else
              {
                uint64_t v12 = (*(uint64_t (**)(void))(*(void *)v7 + 360))();
                if ((v12 & 1) == 0 || (uint64_t v12 = (*(uint64_t (**)(void))(*(void *)v7 + 280))()) == 0)
                {
LABEL_40:
                  (*(void (**)(uint64_t))(*(void *)v7 + 208))(v12);
                  unint64_t v34 = (void *)sub_1BDDAFD38();
                  swift_bridgeObjectRelease();
                  objc_msgSend(v1, (SEL)(v6 + 1010), v34);

                  goto LABEL_27;
                }
                uint64_t v32 = v12;
                unint64_t v33 = (void *)sub_1BDDAFD38();
                objc_msgSend(v1, (SEL)(v6 + 1010), v33);

                (*(void (**)(void))(*(void *)v32 + 752))();
LABEL_45:
                unint64_t v25 = (void *)sub_1BDDAFC68();
                swift_bridgeObjectRelease();
                objc_msgSend(v1, sel_addSubscript_superscript_, v25, 0, v69);
              }
LABEL_46:
              swift_release();

LABEL_26:
              unint64_t v6 = v9;
LABEL_27:
              unint64_t v3 = v7;
              uint64_t v27 = (*(uint64_t (**)(void))(*(void *)v7 + 280))();
              if (v27)
              {
                uint64_t v28 = v27;
                char v29 = *(unsigned char *)(v7 + v15);
                LOBYTE(v78) = v29;
                LOBYTE(v79) = 1;
                sub_1BDCF0848();
                unint64_t v3 = (unint64_t)&type metadata for CalculateExpression.TokenType;
                if ((sub_1BDDAFD28() & 1) == 0)
                {
                  LOBYTE(v78) = v29;
                  LOBYTE(v79) = 7;
                  unint64_t v3 = (unint64_t)&type metadata for CalculateExpression.TokenType;
                  if ((sub_1BDDAFD28() & 1) == 0)
                  {
                    unint64_t v3 = v7;
                    if (((*(uint64_t (**)(void))(*(void *)v7 + 360))() & 1) == 0)
                    {
                      unint64_t v3 = (*(uint64_t (**)(void))(*(void *)v28 + 752))();
                      uint64_t v30 = (void *)sub_1BDDAFC68();
                      swift_bridgeObjectRelease();
                      objc_msgSend(v1, sel_appendMathEquation_, v30);
                    }
                  }
                }
                swift_release();
                uint64_t i = v76;
              }
              swift_release();
              if (v5 != i) {
                goto LABEL_8;
              }
              goto LABEL_55;
            case 0xF:
              objc_msgSend(v1, sel_addOpenParenthesis);
              goto LABEL_26;
            case 0x10:
              objc_msgSend(v1, sel_addCloseParenthesis_, (*(uint64_t (**)(uint64_t))(*(void *)v7 + 232))(v12) & 1);
              goto LABEL_26;
            default:
              goto LABEL_40;
          }
        }
        goto LABEL_57;
      }
LABEL_58:
      __break(1u);
LABEL_59:
      ;
    }
    uint64_t v7 = MEMORY[0x1C18862A0](v5, v75);
    BOOL v8 = __OFADD__(v5++, 1);
    if (!v8) {
      goto LABEL_14;
    }
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  uint64_t v66 = MEMORY[0x1E4FBC860];
  return (id)sub_1BDD070A8(v66);
}

uint64_t sub_1BDCEAB38()
{
  return swift_weakLoadStrong();
}

uint64_t sub_1BDCEAB7C()
{
  return swift_retain();
}

void sub_1BDCEABC4(void *a1@<X8>)
{
  *a1 = qword_1BDDB50D8[*v1];
}

uint64_t sub_1BDCEABDC()
{
  return sub_1BDCEAB7C();
}

id sub_1BDCEABE8(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  int v6 = a3 & 1;
  type metadata accessor for CalculateExpression();
  char v64 = *(void (**)(void))(*(void *)v3 + 208);
  v64();
  char v7 = static CalculateExpression.isHighPrecisionLiteral(_:)();
  swift_bridgeObjectRelease();
  id v8 = CalculateExpression.effectiveNumberFormatter.getter();
  unint64_t v9 = v8;
  if ((v7 & 1) == 0
    || (objc_msgSend(v8, sel_usesSignificantDigits) ? (v10 = v6 == 0) : (v10 = 0), id v11 = a2, !v10))
  {
    id v11 = objc_msgSend(v9, sel_maximumSignificantDigits);
  }
  unsigned int significantDigits = v6;
  Swift::Bool significantDigits_8 = (char)a2;
  uint64_t v12 = (void *)(v3 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_preformattedText);
  uint64_t v14 = *(void *)(v3 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_preformattedText);
  uint64_t v13 = *(void *)(v3 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_preformattedText + 8);
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = ((uint64_t (*)(uint64_t))v64)(v15);
  if (v13)
  {
    if (v14 == v16 && v13 == v17)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v19 = sub_1BDDB04E8();
      swift_bridgeObjectRelease();
      uint64_t v20 = swift_bridgeObjectRelease();
      if ((v19 & 1) == 0) {
        goto LABEL_26;
      }
    }
    unsigned __int8 v21 = *(unsigned char *)(v3 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_usesGroupingSeparator);
    uint64_t v20 = (uint64_t)objc_msgSend(v9, sel_usesGroupingSeparator);
    if (v7)
    {
      if (((v21 ^ v20) & 1) == 0)
      {
        uint64_t v22 = *(void *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maximumIntegerDigits);
        uint64_t v20 = (uint64_t)objc_msgSend(v9, sel_maximumIntegerDigits);
        if (v22 == v20)
        {
          uint64_t v23 = *(void *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_minimumFractionDigits);
          uint64_t v20 = (uint64_t)objc_msgSend(v9, sel_minimumFractionDigits);
          if (v23 == v20)
          {
            uint64_t v24 = *(void *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maximumFractionDigits);
            uint64_t v20 = (uint64_t)objc_msgSend(v9, sel_maximumFractionDigits);
            if (v24 == v20)
            {
              int v25 = *(unsigned __int8 *)(v4
                                       + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_usesSignificantDigits);
              uint64_t v20 = (uint64_t)objc_msgSend(v9, sel_usesSignificantDigits);
              if (v25 == v20
                && *(id *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maximumSignificantDigits) == v11)
              {
                int v26 = *(unsigned __int8 *)(v4
                                         + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_flexibleFractionDigits);
                uint64_t v20 = CalculateExpression.flexibleFractionDigits.getter();
                if (v26 == (v20 & 1)) {
                  goto LABEL_45;
                }
              }
            }
          }
        }
      }
    }
    else if (((v21 ^ v20) & 1) == 0)
    {
      goto LABEL_45;
    }
  }
  else
  {
    uint64_t v20 = swift_bridgeObjectRelease();
  }
LABEL_26:
  *uint64_t v12 = ((uint64_t (*)(uint64_t))v64)(v20);
  v12[1] = v27;
  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(v9, sel_maximumIntegerDigits);
  *(void *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maximumIntegerDigits) = v28;
  id v29 = objc_msgSend(v9, sel_minimumFractionDigits);
  *(void *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_minimumFractionDigits) = v29;
  id v30 = objc_msgSend(v9, sel_maximumFractionDigits);
  *(void *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maximumFractionDigits) = v30;
  unsigned __int8 v31 = objc_msgSend(v9, sel_usesGroupingSeparator);
  *(unsigned char *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_usesGroupingSeparator) = v31;
  unsigned __int8 v32 = objc_msgSend(v9, sel_usesSignificantDigits);
  *(unsigned char *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_usesSignificantDigits) = v32;
  *(void *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maximumSignificantDigits) = v11;
  *(unsigned char *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_flexibleFractionDigits) = CalculateExpression.flexibleFractionDigits.getter() & 1;
  v33._countAndFlagsBits = ((uint64_t (*)(void))v64)();
  v67.value.super.super.isa = 0;
  v67.is_nil = significantDigits_8;
  v69.value = significantDigits;
  v69.is_nil = 2;
  Swift::String v35 = CalculateExpression.formatLiteral(_:presentation:formatter:significantDigits:forceScientificNotation:)(v33, 1, v67, v69, v34);
  swift_bridgeObjectRelease();
  uint64_t v36 = (uint64_t *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_formattedText);
  *(Swift::String *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_formattedText) = v35;
  uint64_t v20 = swift_bridgeObjectRelease();
  if (v7)
  {
    uint64_t v20 = (uint64_t)objc_msgSend(v9, sel_maximumFractionDigits);
    if (v20 >= 1)
    {
      if (v36[1])
      {
        swift_bridgeObjectRetain();
        uint64_t v37 = (void *)sub_1BDDAFD38();
        swift_bridgeObjectRelease();
        uint64_t v38 = (void *)sub_1BDDAFD38();
        id v39 = objc_msgSend(v37, sel_rangeOfString_, v38);

        id result = objc_msgSend(v9, sel_decimalSeparator);
        if (!result)
        {
          __break(1u);
          return result;
        }
        char v41 = result;
        id v42 = objc_msgSend(v37, sel_rangeOfString_, result);

        uint64_t v43 = sub_1BDDAF928();
        id v44 = v39;
        if (v39 == (id)v43) {
          id v44 = objc_msgSend(v37, sel_length);
        }
        if (v42 == (id)sub_1BDDAF928()) {
          goto LABEL_33;
        }
        id significantDigitsa = v44;
        v45._countAndFlagsBits = ((uint64_t (*)(void))v64)();
        v68.value.super.super.isa = 0;
        v68.is_nil = 30;
        v70.value = 0;
        v70.is_nil = v39 != (id)v43;
        Swift::String v47 = CalculateExpression.formatLiteral(_:presentation:formatter:significantDigits:forceScientificNotation:)(v45, 1, v68, v70, v46);
        swift_bridgeObjectRelease();
        uint64_t v48 = (void *)v36[1];
        if (v48)
        {
          unint64_t v49 = v37;
          if (v47._countAndFlagsBits == *v36 && v48 == v47._object)
          {
LABEL_44:

            uint64_t v20 = swift_bridgeObjectRelease();
            goto LABEL_45;
          }
          char v50 = sub_1BDDB04E8();
          swift_bridgeObjectRelease();
          if (v50)
          {
LABEL_33:

            goto LABEL_45;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          unint64_t v49 = v37;
        }
        if (v39 == (id)v43)
        {
          id v56 = objc_msgSend(v49, sel_description);
          uint64_t v57 = sub_1BDDAFD68();
          uint64_t v59 = v58;

          uint64_t v65 = v57;
          uint64_t v66 = v59;
          sub_1BDDAFE18();
        }
        else
        {
          id v51 = objc_msgSend(v49, sel_substringToIndex_, significantDigitsa);
          uint64_t v52 = sub_1BDDAFD68();
          uint64_t v54 = v53;

          uint64_t v65 = v52;
          uint64_t v66 = v54;
          sub_1BDDAFE18();
          id v55 = objc_msgSend(v49, sel_substringFromIndex_, significantDigitsa);
          sub_1BDDAFD68();

          sub_1BDDAFE18();
          swift_bridgeObjectRelease();
        }
        uint64_t *v36 = v65;
        v36[1] = v66;
        goto LABEL_44;
      }
    }
  }
LABEL_45:
  if (*(void *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_formattedText + 8))
  {
    uint64_t v60 = *(void *)(v4 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_formattedText);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v60 = ((uint64_t (*)(uint64_t))v64)(v20);
  }

  return (id)v60;
}

uint64_t type metadata accessor for CalculateExpression()
{
  uint64_t result = qword_1EBA2A7E0;
  if (!qword_1EBA2A7E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BDCEB2A8()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_text);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

id CalculateExpression.effectiveNumberFormatter.getter()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  uint64_t v17 = v0;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  swift_release();
  if (!Strong) {
    goto LABEL_4;
  }
  swift_getKeyPath();
  uint64_t v16 = v1;
  sub_1BDDAFA58();
  swift_release();
  uint64_t v3 = swift_weakLoadStrong();
  if (!v3) {
    goto LABEL_4;
  }
  uint64_t v4 = v3;
  swift_getKeyPath();
  uint64_t v16 = v4;
  sub_1BDDAFA58();
  swift_release();
  unint64_t v5 = *(void **)(v4 + OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatter);
  id v6 = v5;
  swift_release();
  if (!v5)
  {
LABEL_4:
    swift_getKeyPath();
    uint64_t v16 = v1;
    sub_1BDDAFA58();
    swift_release();
    char v7 = *(void **)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatter);
    id v8 = v7;
    if (v7)
    {
      return v8;
    }
    else
    {
      uint64_t v9 = sub_1BDDAFA38();
      uint64_t v10 = *(void *)(v9 - 8);
      MEMORY[0x1F4188790](v9, v11);
      uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      CalculateExpression.effectiveLocale.getter((uint64_t)v13);
      uint64_t v14 = (void *)sub_1BDDAFA18();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
      id v6 = CalculateDefaultNumberFormatter((uint64_t)v14);
    }
  }
  return v6;
}

uint64_t static CalculateExpression.isHighPrecisionLiteral(_:)()
{
  sub_1BDCEB640();
  if (sub_1BDDB0228()) {
    char v0 = 1;
  }
  else {
    char v0 = sub_1BDDB0228();
  }
  return v0 & 1;
}

unint64_t sub_1BDCEB640()
{
  unint64_t result = qword_1EBA268D8;
  if (!qword_1EBA268D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA268D8);
  }
  return result;
}

unint64_t sub_1BDCEB694(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0;
  }
  uint64_t v7 = 4 * v4;
  unint64_t v8 = 15;
  while (sub_1BDDAFEE8() != a1 || v9 != a2)
  {
    char v10 = sub_1BDDB04E8();
    swift_bridgeObjectRelease();
    if (v10) {
      return v8;
    }
    unint64_t v8 = sub_1BDDAFDD8();
    if (v7 == v8 >> 14) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1BDCEB784@<X0>(char *a1@<X8>)
{
  uint64_t v3 = (uint64_t)&unk_1EBA2A000;
  LOBYTE(v38[0]) = *(unsigned char *)(v1 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  v39[0] = 1;
  uint64_t result = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v38, v39);
  if ((result & 1) == 0) {
    goto LABEL_78;
  }
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v1 + 280))();
  if (!result) {
    goto LABEL_78;
  }
  unint64_t v5 = (uint64_t (**)(void))(*(void *)result + 392);
  id v6 = *v5;
  unint64_t v7 = (*v5)();
  if (v7 >> 62) {
    uint64_t v8 = sub_1BDDB0448();
  }
  else {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v9 = swift_bridgeObjectRelease();
  if (v8 != 1) {
    goto LABEL_64;
  }
  unint64_t v10 = ((uint64_t (*)(uint64_t))v6)(v9);
  unint64_t v11 = v10;
  if (v10 >> 62)
  {
    if (!sub_1BDDB0448()) {
      goto LABEL_77;
    }
  }
  else if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_77;
  }
  if ((v11 & 0xC000000000000001) != 0)
  {
    uint64_t v12 = MEMORY[0x1C18862A0](0, v11);
  }
  else
  {
    if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_76;
    }
    uint64_t v12 = *(void *)(v11 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  char v13 = *(unsigned char *)(v12 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  LOBYTE(v38[0]) = v13;
  v39[0] = 1;
  sub_1BDCF0848();
  if ((sub_1BDDAFD28() & 1) == 0)
  {
LABEL_64:
    uint64_t result = swift_release();
LABEL_78:
    *a1 = 1;
    return result;
  }
  unint64_t v14 = v6();
  unint64_t v11 = v14;
  if (v14 >> 62)
  {
LABEL_76:
    if (!sub_1BDDB0448()) {
      goto LABEL_77;
    }
    goto LABEL_14;
  }
  if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_77;
  }
LABEL_14:
  if ((v11 & 0xC000000000000001) != 0)
  {
    uint64_t v15 = MEMORY[0x1C18862A0](0, v11);
  }
  else
  {
    if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_81;
    }
    uint64_t v15 = *(void *)(v11 + 32);
    swift_retain();
  }
  uint64_t v16 = swift_bridgeObjectRelease();
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v15 + 208))(v16);
  unint64_t v11 = v17;
  uint64_t result = swift_release();
  uint64_t v18 = HIBYTE(v11) & 0xF;
  uint64_t v19 = v3 & 0xFFFFFFFFFFFFLL;
  if ((v11 & 0x2000000000000000) != 0) {
    uint64_t v20 = HIBYTE(v11) & 0xF;
  }
  else {
    uint64_t v20 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v20)
  {
LABEL_77:
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_78;
  }
  if ((v11 & 0x1000000000000000) != 0)
  {
LABEL_81:
    Swift::Int v22 = sub_1BDD142E4(v3, v11, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1BDD1465C);
    LOBYTE(v3) = v37;
    goto LABEL_60;
  }
  if ((v11 & 0x2000000000000000) != 0)
  {
    v38[0] = v3;
    v38[1] = v11 & 0xFFFFFFFFFFFFFFLL;
    if (v3 == 43)
    {
      if (!v18) {
        goto LABEL_84;
      }
      if (v18 == 1 || (BYTE1(v3) - 48) > 9u) {
        goto LABEL_47;
      }
      Swift::Int v22 = (BYTE1(v3) - 48);
      if (v18 != 2)
      {
        if ((BYTE2(v3) - 48) > 9u) {
          goto LABEL_47;
        }
        Swift::Int v22 = 10 * (BYTE1(v3) - 48) + (BYTE2(v3) - 48);
        uint64_t v24 = v18 - 3;
        if (v24)
        {
          int v25 = (unsigned __int8 *)v38 + 3;
          while (1)
          {
            unsigned int v26 = *v25 - 48;
            if (v26 > 9) {
              goto LABEL_47;
            }
            uint64_t v27 = 10 * v22;
            if ((unsigned __int128)(v22 * (__int128)10) >> 64 != (10 * v22) >> 63) {
              goto LABEL_47;
            }
            Swift::Int v22 = v27 + v26;
            if (__OFADD__(v27, v26)) {
              goto LABEL_47;
            }
            LOBYTE(v3) = 0;
            ++v25;
            if (!--v24) {
              goto LABEL_60;
            }
          }
        }
      }
    }
    else
    {
      if (v3 == 45)
      {
        if (v18)
        {
          if (v18 != 1 && (BYTE1(v3) - 48) <= 9u)
          {
            if (v18 == 2)
            {
              LOBYTE(v3) = 0;
              Swift::Int v22 = -(uint64_t)(BYTE1(v3) - 48);
              goto LABEL_60;
            }
            if ((BYTE2(v3) - 48) <= 9u)
            {
              Swift::Int v22 = -10 * (BYTE1(v3) - 48) - (BYTE2(v3) - 48);
              uint64_t v32 = v18 - 3;
              if (!v32) {
                goto LABEL_59;
              }
              Swift::Bool_optional v34 = (unsigned __int8 *)v38 + 3;
              while (1)
              {
                unsigned int v35 = *v34 - 48;
                if (v35 > 9) {
                  break;
                }
                uint64_t v36 = 10 * v22;
                if ((unsigned __int128)(v22 * (__int128)10) >> 64 != (10 * v22) >> 63) {
                  break;
                }
                Swift::Int v22 = v36 - v35;
                if (__OFSUB__(v36, v35)) {
                  break;
                }
                LOBYTE(v3) = 0;
                ++v34;
                if (!--v32) {
                  goto LABEL_60;
                }
              }
            }
          }
LABEL_47:
          Swift::Int v22 = 0;
          LOBYTE(v3) = 1;
          goto LABEL_60;
        }
        __break(1u);
LABEL_84:
        __break(1u);
        return result;
      }
      if (!v18 || (v3 - 48) > 9u) {
        goto LABEL_47;
      }
      Swift::Int v22 = (v3 - 48);
      if (v18 != 1)
      {
        if ((BYTE1(v3) - 48) > 9u) {
          goto LABEL_47;
        }
        Swift::Int v22 = 10 * (v3 - 48) + (BYTE1(v3) - 48);
        uint64_t v28 = v18 - 2;
        if (v28)
        {
          id v29 = (unsigned __int8 *)v38 + 2;
          while (1)
          {
            unsigned int v30 = *v29 - 48;
            if (v30 > 9) {
              goto LABEL_47;
            }
            uint64_t v31 = 10 * v22;
            if ((unsigned __int128)(v22 * (__int128)10) >> 64 != (10 * v22) >> 63) {
              goto LABEL_47;
            }
            Swift::Int v22 = v31 + v30;
            if (__OFADD__(v31, v30)) {
              goto LABEL_47;
            }
            LOBYTE(v3) = 0;
            ++v29;
            if (!--v28) {
              goto LABEL_60;
            }
          }
        }
      }
    }
LABEL_59:
    LOBYTE(v3) = 0;
    goto LABEL_60;
  }
  if ((v3 & 0x1000000000000000) != 0) {
    unsigned __int8 v21 = (unsigned __int8 *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else {
    unsigned __int8 v21 = (unsigned __int8 *)sub_1BDDB03C8();
  }
  Swift::Int v22 = (Swift::Int)sub_1BDD1465C(v21, v19, 10);
  LOBYTE(v3) = v23 & 1;
LABEL_60:
  swift_bridgeObjectRelease();
  if (v3) {
    goto LABEL_64;
  }
  CalculateExpression.Base.init(rawValue:)(v22);
  uint64_t result = swift_release();
  char v33 = v38[0];
  if (LOBYTE(v38[0]) == 3) {
    char v33 = 1;
  }
  *a1 = v33;
  return result;
}

BOOL static CalculateExpression.TokenType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BDCEBCFC()
{
  return sub_1BDCEAB7C();
}

unint64_t sub_1BDCEBD08()
{
  unint64_t result = qword_1EBA26890;
  if (!qword_1EBA26890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA26890);
  }
  return result;
}

uint64_t sub_1BDCEBD5C()
{
  unint64_t v1 = v0;
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v0 + 368))();
  if (result == 2) {
    return result;
  }
  uint64_t v90 = MEMORY[0x1E4FBC860];
  char v89 = 0;
  uint64_t v85 = *(uint64_t (**)(void))(*(void *)v0 + 392);
  unint64_t v3 = v85();
  unint64_t v4 = v3;
  if (v3 >> 62)
  {
    uint64_t v5 = sub_1BDDB0448();
    unint64_t v82 = v0;
    if (v5) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v82 = v0;
    if (v5)
    {
LABEL_4:
      if (v5 < 1) {
        goto LABEL_122;
      }
      char v6 = 0;
      uint64_t v7 = 0;
      for (uint64_t i = 0; i != v5; ++i)
      {
        if ((v4 & 0xC000000000000001) != 0)
        {
          uint64_t v9 = MEMORY[0x1C18862A0](i, v4);
        }
        else
        {
          uint64_t v9 = *(void *)(v4 + 8 * i + 32);
          swift_retain();
        }
        if ((*(uint64_t (**)(void))(*(void *)v9 + 256))())
        {
          sub_1BDCEBD5C();
          swift_release();
        }
        if (v7)
        {
          char v10 = *(unsigned char *)(v7 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
          LOBYTE(v88) = v10;
          swift_retain();
          if ((CalculateExpression.TokenType.isOperand.getter() & 1) != 0
            || (LOBYTE(v88) = v10,
                LOBYTE(v86) = 16,
                static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v88, (unsigned __int8 *)&v86))
            || (LOBYTE(v88) = v10,
                LOBYTE(v86) = 7,
                static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v88, (unsigned __int8 *)&v86))
            || (LOBYTE(v88) = v10,
                LOBYTE(v86) = 8,
                static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v88, (unsigned __int8 *)&v86)))
          {
            char v11 = *(unsigned char *)(v9 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
            LOBYTE(v88) = v11;
            if ((CalculateExpression.TokenType.isOperand.getter() & 1) != 0
              || (LOBYTE(v88) = v11,
                  LOBYTE(v86) = 15,
                  static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v88, (unsigned __int8 *)&v86))
              || (LOBYTE(v88) = v11,
                  LOBYTE(v86) = 10,
                  static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v88, (unsigned __int8 *)&v86)))
            {
              LOBYTE(v88) = v10;
              LOBYTE(v86) = 1;
              if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v88, (unsigned __int8 *)&v86)|| (LOBYTE(v88) = v11, (CalculateExpression.TokenType.isConstant.getter() & 1) == 0))
              {
                LOBYTE(v88) = 5;
                type metadata accessor for CalculateExpression.RichToken();
                swift_allocObject();
                uint64_t v12 = CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v88, 1);
                MEMORY[0x1C1885EA0](v12);
                if (*(void *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  sub_1BDDB0008();
                }
                sub_1BDDB0048();
                sub_1BDDAFFD8();
                char v6 = 1;
              }
            }
          }
          swift_release();
        }
        uint64_t v13 = swift_retain();
        MEMORY[0x1C1885EA0](v13);
        if (*(void *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1BDDB0008();
        }
        sub_1BDDB0048();
        sub_1BDDAFFD8();
        swift_release();
        unint64_t v14 = *(uint64_t (**)(uint64_t))(*(void *)v9 + 280);
        uint64_t v15 = swift_retain();
        if (v14(v15))
        {
          sub_1BDCEBD5C();
          swift_release();
        }
        swift_release();
        uint64_t v7 = v9;
      }
      char v89 = v6;
      unint64_t v1 = v82;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v88 = sub_1BDCECEE8(MEMORY[0x1E4FBC860]);
  unint64_t v16 = v85();
  uint64_t v17 = v16;
  if (v16 >> 62) {
    goto LABEL_89;
  }
  uint64_t v18 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v18)
  {
LABEL_34:
    uint64_t v19 = 0;
    unint64_t v84 = v17 & 0xC000000000000001;
    uint64_t v20 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v21 = 4;
    uint64_t v81 = v17;
    uint64_t v83 = v18;
    while (1)
    {
      uint64_t v23 = v21 - 4;
      if (v84)
      {
        uint64_t v24 = MEMORY[0x1C18862A0](v21 - 4, v17);
        uint64_t v25 = v21 - 3;
        if (__OFADD__(v23, 1)) {
          goto LABEL_83;
        }
      }
      else
      {
        uint64_t v24 = *(void *)(v17 + 8 * v21);
        swift_retain();
        uint64_t v25 = v21 - 3;
        if (__OFADD__(v23, 1))
        {
LABEL_83:
          __break(1u);
LABEL_84:
          __break(1u);
LABEL_85:
          __break(1u);
LABEL_86:
          __break(1u);
LABEL_87:
          __break(1u);
LABEL_88:
          __break(1u);
LABEL_89:
          swift_bridgeObjectRetain();
          uint64_t v18 = sub_1BDDB0448();
          swift_bridgeObjectRelease();
          if (!v18) {
            goto LABEL_90;
          }
          goto LABEL_34;
        }
      }
      char v26 = *(unsigned char *)(v24 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      LOBYTE(v86) = v26;
      unsigned __int8 v87 = 15;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v86, &v87)) {
        break;
      }
      LOBYTE(v86) = v26;
      unsigned __int8 v87 = 16;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v86, &v87))
      {
        uint64_t v79 = (uint64_t)v20;
        if ((*(uint64_t (**)(void))(*(void *)v24 + 232))())
        {
          uint64_t v29 = *((void *)v20 + 2);
          if (v29)
          {
            unsigned int v30 = v20;
            uint64_t v31 = v19;
            unint64_t v32 = *(void *)&v30[8 * v29 + 24];
            uint64_t v17 = v1;
            uint64_t v33 = v85();
            if ((v33 & 0xC000000000000001) != 0)
            {
              uint64_t v34 = MEMORY[0x1C18862A0](v32, v33);
            }
            else
            {
              if ((v32 & 0x8000000000000000) != 0) {
                goto LABEL_87;
              }
              if (v32 >= *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_88;
              }
              uint64_t v34 = *(void *)(v33 + 8 * v32 + 32);
              swift_retain();
            }
            uint64_t v35 = swift_bridgeObjectRelease();
            char v36 = (*(uint64_t (**)(uint64_t))(*(void *)v34 + 232))(v35);
            swift_release();
            char v80 = 1;
            uint64_t v19 = v31;
            if ((v36 & 1) == 0 || !v31) {
              goto LABEL_64;
            }
LABEL_61:
            LOBYTE(v86) = *(unsigned char *)(v19 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
            unsigned __int8 v87 = 15;
            sub_1BDCF0848();
            int v37 = sub_1BDDAFD28() ^ 1;
LABEL_63:
            char v80 = v37;
LABEL_64:
            uint64_t v17 = v88;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v86 = (void *)v17;
            unint64_t v1 = sub_1BDD13F2C(v21 - 4);
            uint64_t v40 = *(void *)(v17 + 16);
            BOOL v41 = (v39 & 1) == 0;
            uint64_t v42 = v40 + v41;
            if (__OFADD__(v40, v41)) {
              goto LABEL_84;
            }
            char v43 = v39;
            if (*(void *)(v17 + 24) >= v42)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                sub_1BDD17CA0();
              }
            }
            else
            {
              sub_1BDD176C4(v42, isUniquelyReferenced_nonNull_native);
              unint64_t v44 = sub_1BDD13F2C(v21 - 4);
              if ((v43 & 1) != (v45 & 1)) {
                goto LABEL_123;
              }
              unint64_t v1 = v44;
            }
            uint64_t v17 = (uint64_t)v86;
            uint64_t v20 = (char *)v79;
            if (v43)
            {
              char v46 = v80;
              *(unsigned char *)(v86[7] + v1) = v80 & 1;
            }
            else
            {
              v86[(v1 >> 6) + 8] |= 1 << v1;
              *(void *)(*(void *)(v17 + 48) + 8 * v1) = v23;
              char v46 = v80;
              *(unsigned char *)(*(void *)(v17 + 56) + v1) = v80 & 1;
              uint64_t v47 = *(void *)(v17 + 16);
              BOOL v48 = __OFADD__(v47, 1);
              uint64_t v49 = v47 + 1;
              if (v48) {
                goto LABEL_85;
              }
              *(void *)(v17 + 16) = v49;
            }
            unint64_t v88 = v17;
            swift_bridgeObjectRelease();
            uint64_t v50 = *(void *)(v79 + 16);
            unint64_t v1 = v82;
            if (v50)
            {
              uint64_t v51 = *(void *)(v79 + 8 * v50 + 24);
              char v52 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v86 = (void *)v17;
              sub_1BDD18020(v46 & 1, v51, v52);
              unint64_t v88 = (unint64_t)v86;
              swift_bridgeObjectRelease();
              if (*(void *)(v79 + 16))
              {
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v20 = sub_1BDD1800C(v79);
                }
                uint64_t v22 = v83;
                uint64_t v53 = *((void *)v20 + 2);
                uint64_t v17 = v81;
                if (!v53) {
                  goto LABEL_86;
                }
                *((void *)v20 + 2) = v53 - 1;
                swift_release();
                uint64_t v19 = v24;
                goto LABEL_37;
              }
            }
LABEL_49:
            swift_release();
            uint64_t v19 = v24;
            uint64_t v17 = v81;
            goto LABEL_36;
          }
          if (v19) {
            goto LABEL_61;
          }
        }
        LOBYTE(v37) = 1;
        goto LABEL_63;
      }
      swift_release();
LABEL_36:
      uint64_t v22 = v83;
LABEL_37:
      ++v21;
      if (v25 == v22)
      {
        swift_bridgeObjectRelease();
        uint64_t v54 = *((void *)v20 + 2);
        if (!v54) {
          goto LABEL_113;
        }
        goto LABEL_91;
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v20 = sub_1BDD16A60(0, *((void *)v20 + 2) + 1, 1, v20);
    }
    unint64_t v28 = *((void *)v20 + 2);
    unint64_t v27 = *((void *)v20 + 3);
    if (v28 >= v27 >> 1) {
      uint64_t v20 = sub_1BDD16A60((char *)(v27 > 1), v28 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v28 + 1;
    *(void *)&v20[8 * v28 + 32] = v23;
    goto LABEL_49;
  }
LABEL_90:
  swift_bridgeObjectRelease();
  uint64_t v20 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v54 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  if (!v54)
  {
LABEL_113:
    uint64_t v86 = 0;
    unint64_t v74 = swift_bridgeObjectRetain();
    uint64_t v75 = sub_1BDCECCA8(v74, &v90, (uint64_t *)&v86, (uint64_t *)&v88, &v89);
    swift_bridgeObjectRelease();
    uint64_t v90 = v75;
    swift_bridgeObjectRelease();
    uint64_t v86 = 0;
    unint64_t v76 = swift_bridgeObjectRetain();
    uint64_t v90 = sub_1BDCEC8E0(v76, &v86, &v90, sub_1BDD1396C, 0, &v89);
    swift_bridgeObjectRelease();
    if (v89 == 1)
    {
      unint64_t v77 = *(void (**)(uint64_t))(*(void *)v1 + 400);
      uint64_t v78 = swift_bridgeObjectRetain();
      v77(v78);
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
LABEL_91:
  uint64_t v55 = swift_bridgeObjectRetain();
  uint64_t v56 = 0;
  uint64_t v57 = (void *)v88;
  while (1)
  {
    unint64_t v58 = *(void *)&v20[8 * v56 + 32];
    uint64_t v59 = ((uint64_t (*)(uint64_t))v85)(v55);
    if ((v59 & 0xC000000000000001) != 0)
    {
      uint64_t v60 = MEMORY[0x1C18862A0](v58, v59);
      goto LABEL_99;
    }
    if ((v58 & 0x8000000000000000) != 0) {
      break;
    }
    if (v58 >= *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_119;
    }
    uint64_t v60 = *(void *)(v59 + 8 * v58 + 32);
    swift_retain();
LABEL_99:
    uint64_t v61 = swift_bridgeObjectRelease();
    char v62 = (*(uint64_t (**)(uint64_t))(*(void *)v60 + 232))(v61);
    uint64_t v55 = swift_release();
    if ((v62 & 1) == 0) {
      goto LABEL_94;
    }
    char v63 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v86 = v57;
    unint64_t v88 = 0x8000000000000000;
    unint64_t v65 = sub_1BDD13F2C(v58);
    uint64_t v66 = v57[2];
    BOOL v67 = (v64 & 1) == 0;
    uint64_t v68 = v66 + v67;
    if (__OFADD__(v66, v67)) {
      goto LABEL_120;
    }
    char v69 = v64;
    if (v57[3] >= v68)
    {
      if (v63)
      {
        uint64_t v57 = v86;
        if ((v64 & 1) == 0) {
          goto LABEL_107;
        }
      }
      else
      {
        sub_1BDD17CA0();
        uint64_t v57 = v86;
        if ((v69 & 1) == 0) {
          goto LABEL_107;
        }
      }
    }
    else
    {
      sub_1BDD176C4(v68, v63);
      unint64_t v70 = sub_1BDD13F2C(v58);
      if ((v69 & 1) != (v71 & 1)) {
        goto LABEL_123;
      }
      unint64_t v65 = v70;
      uint64_t v57 = v86;
      if ((v69 & 1) == 0)
      {
LABEL_107:
        v57[(v65 >> 6) + 8] |= 1 << v65;
        *(void *)(v57[6] + 8 * v65) = v58;
        *(unsigned char *)(v57[7] + v65) = 0;
        uint64_t v72 = v57[2];
        BOOL v48 = __OFADD__(v72, 1);
        uint64_t v73 = v72 + 1;
        if (v48) {
          goto LABEL_121;
        }
        v57[2] = v73;
        goto LABEL_93;
      }
    }
    *(unsigned char *)(v57[7] + v65) = 0;
LABEL_93:
    unint64_t v88 = (unint64_t)v57;
    uint64_t v55 = swift_bridgeObjectRelease();
    unint64_t v1 = v82;
LABEL_94:
    if (v54 == ++v56)
    {
      swift_bridgeObjectRelease();
      goto LABEL_113;
    }
  }
  __break(1u);
LABEL_119:
  __break(1u);
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  uint64_t result = sub_1BDDB0528();
  __break(1u);
  return result;
}

uint64_t sub_1BDCEC8E0(unint64_t a1, void *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t), uint64_t a5, unsigned char *a6)
{
  uint64_t v7 = v6;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_60;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v11)
  {
    while (1)
    {
      unint64_t v12 = 0;
      uint64_t v25 = v7;
      char v26 = a6;
      uint64_t v28 = v11;
      while ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v13 = MEMORY[0x1C18862A0](v12, a1);
        unint64_t v14 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_52;
        }
LABEL_8:
        unsigned __int8 v31 = *(unsigned char *)(v13 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        unsigned __int8 v30 = 5;
        if (static CalculateExpression.TokenType.== infix(_:_:)(&v31, &v30)
          && ((*(uint64_t (**)(void))(*(void *)v13 + 232))() & 1) != 0)
        {
          uint64_t v15 = *a2;
          unint64_t v16 = *a2 - 1;
          if (__OFSUB__(*a2, 1)) {
            goto LABEL_54;
          }
          if ((v16 & 0x8000000000000000) != 0)
          {
            uint64_t v18 = 0;
            uint64_t v7 = v15 + 1;
            if (__OFADD__(v15, 1)) {
              goto LABEL_55;
            }
          }
          else
          {
            uint64_t v17 = *a3;
            if ((*a3 & 0xC000000000000001) != 0)
            {
              uint64_t v18 = MEMORY[0x1C18862A0]();
              uint64_t v7 = *a2 + 1;
              if (__OFADD__(*a2, 1)) {
                goto LABEL_55;
              }
            }
            else
            {
              if (v16 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_56;
              }
              uint64_t v18 = *(void *)(v17 + 8 * v16 + 32);
              swift_retain();
              uint64_t v7 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                goto LABEL_55;
              }
            }
          }
          if ((unint64_t)*a3 >> 62)
          {
            swift_bridgeObjectRetain();
            a6 = (unsigned char *)sub_1BDDB0448();
            swift_bridgeObjectRelease();
            if (v7 >= (uint64_t)a6) {
              goto LABEL_33;
            }
LABEL_21:
            unint64_t v20 = *a2 + 1;
            uint64_t v7 = v25;
            if (__OFADD__(*a2, 1)) {
              goto LABEL_57;
            }
            uint64_t v21 = *a3;
            if ((*a3 & 0xC000000000000001) != 0)
            {
              uint64_t v22 = MEMORY[0x1C18862A0](v20);
              if (!v18) {
                goto LABEL_35;
              }
            }
            else
            {
              if ((v20 & 0x8000000000000000) != 0) {
                goto LABEL_58;
              }
              if (v20 >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_59;
              }
              uint64_t v22 = *(void *)(v21 + 8 * v20 + 32);
              swift_retain();
              if (!v18) {
                goto LABEL_35;
              }
            }
            if (!v22)
            {
              a6 = v26;
              goto LABEL_34;
            }
            swift_retain();
            swift_retain();
            uint64_t v19 = a4(v18, v22);
            swift_release_n();
            swift_release_n();
          }
          else
          {
            a6 = *(unsigned char **)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v7 < (uint64_t)a6) {
              goto LABEL_21;
            }
LABEL_33:
            uint64_t v7 = v25;
            a6 = v26;
            if (v18)
            {
LABEL_34:
              swift_release();
              uint64_t v19 = 0;
LABEL_37:
              uint64_t v11 = v28;
              goto LABEL_38;
            }
LABEL_35:
            swift_release();
            uint64_t v19 = 0;
          }
          a6 = v26;
          goto LABEL_37;
        }
        uint64_t v19 = 1;
LABEL_38:
        if (__OFADD__(*a2, 1)) {
          goto LABEL_53;
        }
        ++*a2;
        if (v19)
        {
          if (v7) {
            goto LABEL_49;
          }
          sub_1BDDB03E8();
          sub_1BDDB0418();
          uint64_t v11 = v28;
          sub_1BDDB0428();
          sub_1BDDB03F8();
        }
        else
        {
          *a6 = 1;
          if (v7)
          {
LABEL_49:
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            return v19;
          }
          swift_release();
        }
        ++v12;
        if (v14 == v11)
        {
          uint64_t v19 = v29;
          goto LABEL_62;
        }
      }
      if (v12 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      uint64_t v11 = sub_1BDDB0448();
      if (!v11) {
        goto LABEL_61;
      }
    }
    uint64_t v13 = *(void *)(a1 + 8 * v12 + 32);
    swift_retain();
    unint64_t v14 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_52;
    }
    goto LABEL_8;
  }
LABEL_61:
  uint64_t v19 = MEMORY[0x1E4FBC860];
LABEL_62:
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1BDCECCA8(unint64_t a1, void *a2, uint64_t *a3, uint64_t *a4, unsigned char *a5)
{
  uint64_t v20 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_31;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v8)
  {
    while (1)
    {
      unint64_t v9 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        MEMORY[0x1C18862A0](v9, a1);
        unint64_t v10 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_30;
        }
LABEL_9:
        unint64_t v11 = *a3;
        unint64_t v19 = v10;
        if ((*a2 & 0xC000000000000001) != 0)
        {
          MEMORY[0x1C18862A0](v11);
        }
        else
        {
          if ((v11 & 0x8000000000000000) != 0) {
            goto LABEL_27;
          }
          if (v11 >= *(void *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_28;
          }
          swift_retain();
        }
        swift_release();
        if ((CalculateExpression.TokenType.isParenthesis.getter() & 1) != 0
          && (uint64_t v12 = *a4, *(void *)(*a4 + 16))
          && (unint64_t v13 = sub_1BDD13F2C(*a3), (v14 & 1) != 0))
        {
          char v15 = *(unsigned char *)(*(void *)(v12 + 56) + v13);
        }
        else
        {
          char v15 = 1;
        }
        if (__OFADD__(*a3, 1)) {
          goto LABEL_29;
        }
        ++*a3;
        if (v15)
        {
          sub_1BDDB03E8();
          sub_1BDDB0418();
          sub_1BDDB0428();
          sub_1BDDB03F8();
        }
        else
        {
          *a5 = 1;
          swift_release();
        }
        ++v9;
        if (v19 == v8) {
          return v20;
        }
      }
      if (v9 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      uint64_t v8 = sub_1BDDB0448();
      if (!v8) {
        return MEMORY[0x1E4FBC860];
      }
    }
    swift_retain();
    unint64_t v10 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_30;
    }
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

unint64_t sub_1BDCECEE8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF030);
    unint64_t v3 = (void *)sub_1BDDB0488();
    for (uint64_t i = (unsigned char *)(a1 + 40); ; i += 16)
    {
      uint64_t v5 = *((void *)i - 1);
      char v6 = *i;
      unint64_t result = sub_1BDD13F2C(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v3[6] + 8 * result) = v5;
      *(unsigned char *)(v3[7] + result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

uint64_t sub_1BDCECFC0()
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v0 + 176))();
  if (result)
  {
    uint64_t v2 = CalculateExpression.format.getter();
    swift_release();
    return v2;
  }
  return result;
}

uint64_t sub_1BDCED01C@<X0>(char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v1 + 176))();
  if (result)
  {
    CalculateExpression.effectiveBase.getter(&v5);
    uint64_t result = swift_release();
    char v4 = v5;
  }
  else
  {
    char v4 = 1;
  }
  *a1 = v4;
  return result;
}

uint64_t CalculateExpression.effectiveBase.getter@<X0>(char *a1@<X8>)
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    swift_retain();
    uint64_t Strong = v1;
  }
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  if (*(void *)(Strong + OBJC_IVAR____TtC9Calculate19CalculateExpression___engine) == 1)
  {
    swift_getKeyPath();
    sub_1BDDAFA58();
    swift_release();
    char v4 = (char *)(Strong + OBJC_IVAR____TtC9Calculate19CalculateExpression__base);
    swift_beginAccess();
    char v5 = *v4;
  }
  else
  {
    char v5 = 1;
  }
  uint64_t result = swift_release();
  *a1 = v5;
  return result;
}

void sub_1BDCED224(uint64_t a1)
{
  swift_beginAccess();
  unint64_t v3 = *(void **)(v1 + 32);
  *(void *)(v1 + 32) = a1;
}

uint64_t sub_1BDCED26C(uint64_t a1, uint64_t a2, uint64_t **a3)
{
  void (**v209)(char *__return_ptr);
  void (*v210)(char *__return_ptr);
  uint64_t (*v211)(void);
  uint64_t v212;
  unint64_t v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v216;
  BOOL v217;
  unint64_t v218;
  uint64_t v219;
  uint64_t v220;
  id v221;
  void *v222;
  id v223;
  uint64_t v224;
  unint64_t v225;
  unint64_t v226;
  char v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char v235;
  uint64_t v236;
  id v237;
  id v238;
  void (*v239)(char *, void);
  uint64_t *v240;
  uint64_t *v241;
  void *v242;
  uint64_t v243;
  uint64_t inited;
  char v245;
  id v246;
  uint64_t (*v247)(char *, void);
  uint64_t *v248;
  uint64_t *v249;
  void *v250;
  uint64_t v251;
  uint64_t v252;
  char v253;
  id v254;
  uint64_t (*v255)(char *, void);
  uint64_t *v256;
  uint64_t *v257;
  void *v258;
  uint64_t v259;
  uint64_t v260;
  id v261;
  void (*v262)(char *, void);
  uint64_t *v263;
  uint64_t *v264;
  void *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  unsigned char *i;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  id v274;
  void (*v275)(char *, void);
  uint64_t *v276;
  uint64_t *v277;
  void *v278;
  uint64_t v279;
  unint64_t v280;
  uint64_t (**v281)(unint64_t);
  uint64_t (*v282)(unint64_t);
  uint64_t v283;
  char v284;
  uint64_t v285;
  uint64_t v286;
  id v287;
  void (*v288)(char *, void);
  uint64_t *v289;
  uint64_t *v290;
  void *v291;
  uint64_t v292;
  long long v293;
  BOOL v294;
  uint64_t (*v295)(uint64_t);
  unint64_t v296;
  uint64_t (*v297)(uint64_t);
  char v298;
  void *v299;
  uint64_t v300;
  uint64_t (*v301)(void);
  int64_t v302;
  unint64_t *v304;
  BOOL v305;
  int v306;
  uint64_t v307;
  int v308;
  unsigned __int8 *v309;
  char v310[38];
  uint64_t v311;

  type metadata accessor for CalculateExpression.RichExpression();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = swift_weakInit();
  *(_DWORD *)(v6 + 24) = 16777473;
  *(unsigned char *)(v6 + 28) = 1;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  *(void *)(v6 + 32) = 0;
  *(void *)(v6 + 40) = v8;
  *(_WORD *)(v6 + 48) = 0;
  v300 = v6;
  *(unsigned char *)(v6 + 50) = 0;
  BYTE1(v311) = 0;
  v299 = v3;
  v295 = *(uint64_t (**)(void))(*v3 + 176);
  uint64_t v9 = v295(v7);
  if (v9)
  {
    uint64_t v10 = CalculateExpression.format.getter();
    uint64_t v9 = swift_release();
    v305 = v10 == 1;
  }
  else
  {
    v305 = 0;
  }
  uint64_t v11 = (uint64_t (**)(uint64_t))(*(void *)a1 + 264);
  uint64_t v12 = (uint64_t (*)(void))*v11;
  int64_t v13 = (int64_t)v11;
  unint64_t v14 = *(void *)a2;
  unint64_t v15 = (*v11)(v9);
  if (v15 >> 62) {
LABEL_346:
  }
    uint64_t v16 = sub_1BDDB0448();
  else {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v17 = swift_bridgeObjectRelease();
  v301 = v12;
  v302 = v13;
  if ((uint64_t)v14 >= v16)
  {
    unint64_t v18 = -1;
    v307 = MEMORY[0x1E4FBC860];
    LOBYTE(v306) = 15;
LABEL_300:
    if (v295(v17))
    {
      LOBYTE(v12) = CalculateExpression.allowPartialExpressions.getter();
      swift_release();
    }
    else
    {
      LOBYTE(v12) = 0;
    }
    v268 = *(void *)(v307 + 16);
    if (!v268)
    {
      swift_bridgeObjectRelease();
      if (v12) {
        return v300;
      }
      goto LABEL_316;
    }
    unint64_t v14 = v18;
    for (uint64_t i = (unsigned char *)(swift_bridgeObjectRetain() + 40); ; i += 16)
    {
      unint64_t v18 = *((void *)i - 1);
      if ((v12 & 1) == 0) {
        break;
      }
      v310[0] = *i;
      LOBYTE(v311) = 15;
      sub_1BDCF0848();
      if ((sub_1BDDAFD28() & 1) == 0) {
        break;
      }
      if (!--v268)
      {
        swift_bridgeObjectRelease_n();
        return v300;
      }
    }
    v270 = swift_bridgeObjectRelease_n();
    *(unsigned char *)a3 = 1;
    v271 = ((uint64_t (*)(uint64_t))v301)(v270);
    uint64_t v20 = v271;
    if ((v271 & 0xC000000000000001) == 0)
    {
      if ((v18 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v18 < *(void *)((v271 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        v272 = *(void *)(v271 + 8 * v18 + 32);
        swift_retain();
        goto LABEL_313;
      }
      __break(1u);
LABEL_359:
      __break(1u);
      goto LABEL_360;
    }
LABEL_356:
    v272 = MEMORY[0x1C18862A0](v18, v20);
LABEL_313:
    swift_bridgeObjectRelease();
    sub_1BDD186D4(v272);
    swift_release();
    unint64_t v18 = v14;
    if (v12) {
      return v300;
    }
LABEL_316:
    v310[0] = v306;
    if ((CalculateExpression.TokenType.isBinaryOperator.getter() & 1) == 0) {
      return v300;
    }
    v310[0] = v306;
    if (CalculateExpression.TokenType.isPostfixOperator.getter()) {
      return v300;
    }
    v310[0] = v306;
    LOBYTE(v311) = 7;
    sub_1BDCF0848();
    if (sub_1BDDAFD28()) {
      return v300;
    }
    uint64_t result = v301();
    uint64_t v20 = result;
    if ((result & 0xC000000000000001) == 0)
    {
      if ((v18 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v18 < *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        v273 = *(void *)(result + 8 * v18 + 32);
        swift_retain();
LABEL_323:
        swift_bridgeObjectRelease();
        v274 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1004, 0);
        v275 = (void (*)(void, void))(*(uint64_t (**)(char *))(*(void *)v273 + 224))(v310);
        v277 = v276;
        sub_1BDD168AC();
        v278 = *(void **)(*v277 + 16);
        sub_1BDD168F8(v278);
        v279 = *v277;
        *(void *)(v279 + 16) = (char *)v278 + 1;
        *(void *)(v279 + 8 * (void)v278 + 32) = v274;
        v275(v310, 0);
        goto LABEL_331;
      }
      __break(1u);
LABEL_363:
      __break(1u);
LABEL_364:
      __break(1u);
LABEL_365:
      __break(1u);
LABEL_366:
      __break(1u);
LABEL_367:
      __break(1u);
LABEL_368:
      __break(1u);
LABEL_369:
      __break(1u);
LABEL_370:
      __break(1u);
LABEL_371:
      __break(1u);
LABEL_372:
      __break(1u);
LABEL_373:
      __break(1u);
LABEL_374:
      __break(1u);
LABEL_375:
      __break(1u);
LABEL_376:
      __break(1u);
LABEL_377:
      __break(1u);
LABEL_378:
      __break(1u);
LABEL_379:
      __break(1u);
      return result;
    }
LABEL_360:
    v273 = MEMORY[0x1C18862A0](v18, v20);
    goto LABEL_323;
  }
  v304 = (unint64_t *)a2;
  v308 = 0;
  v294 = 0;
  v298 = 0;
  unint64_t v18 = -1;
  v293 = xmmword_1BDDB37B0;
  v307 = MEMORY[0x1E4FBC860];
  v306 = 15;
  v297 = (uint64_t (*)(uint64_t))a1;
  while (1)
  {
    uint64_t v19 = ((uint64_t (*)(uint64_t))v12)(v17);
    uint64_t v20 = v19;
    if ((v19 & 0xC000000000000001) != 0)
    {
      uint64_t v21 = (unsigned __int8 *)MEMORY[0x1C18862A0](v14, v19);
    }
    else
    {
      if ((v14 & 0x8000000000000000) != 0) {
        goto LABEL_334;
      }
      if (v14 >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_335;
      }
      uint64_t v21 = *(unsigned __int8 **)(v19 + 8 * v14 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    a2 = v21[48];
    v310[0] = v21[48];
    v309 = v21;
    if ((CalculateExpression.TokenType.isOpen.getter() & 1) == 0) {
      break;
    }
    if (v308)
    {
      v310[0] = a2;
      LOBYTE(v311) = 21;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311))
      {
        if (BYTE1(v311) != 1)
        {
          BYTE1(v311) = 1;
          goto LABEL_78;
        }
        *(unsigned char *)a3 = 1;
        uint64_t v22 = v12();
        uint64_t v20 = v22;
        if ((v22 & 0xC000000000000001) != 0)
        {
          unint64_t v23 = v18;
          uint64_t v24 = MEMORY[0x1C18862A0](v14, v22);
        }
        else
        {
          if ((v14 & 0x8000000000000000) != 0) {
            goto LABEL_352;
          }
          if (v14 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_353;
          }
          unint64_t v23 = v18;
          uint64_t v24 = *(void *)(v22 + 8 * v14 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        id v25 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1000, 0, v293);
        goto LABEL_50;
      }
    }
    if (swift_isUniquelyReferenced_nonNull_native()) {
      char v26 = (char *)v307;
    }
    else {
      char v26 = sub_1BDD16B5C(0, *(void *)(v307 + 16) + 1, 1, (char *)v307);
    }
    unint64_t v28 = *((void *)v26 + 2);
    unint64_t v27 = *((void *)v26 + 3);
    if (v28 >= v27 >> 1) {
      char v26 = sub_1BDD16B5C((char *)(v27 > 1), v28 + 1, 1, v26);
    }
    *((void *)v26 + 2) = v28 + 1;
    v307 = (uint64_t)v26;
    uint64_t v29 = &v26[16 * v28];
    *((void *)v29 + 4) = v14;
    v29[40] = a2;
    if (v305)
    {
      v310[0] = a2;
      LOBYTE(v311) = 23;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311)
        || (v310[0] = a2,
            LOBYTE(v311) = 21,
            static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311)))
      {
        *(unsigned char *)a3 = 1;
        uint64_t v30 = v12();
        if ((v30 & 0xC000000000000001) != 0)
        {
          unint64_t v31 = v18;
          uint64_t v32 = MEMORY[0x1C18862A0](v14, v30);
        }
        else
        {
          if ((v14 & 0x8000000000000000) != 0) {
            goto LABEL_338;
          }
          if (v14 >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_339;
          }
          unint64_t v31 = v18;
          uint64_t v32 = *(void *)(v30 + 8 * v14 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        id v33 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1012, 0);
        uint64_t v34 = (void (*)(void, void))(*(uint64_t (**)(char *))(*(void *)v32 + 224))(v310);
        char v36 = v35;
        int v37 = *v35;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        void *v36 = v37;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          int v37 = sub_1BDD1693C(0, v37[2] + 1, 1, v37);
          void *v36 = v37;
        }
        unint64_t v40 = v37[2];
        unint64_t v39 = v37[3];
        if (v40 >= v39 >> 1)
        {
          int v37 = sub_1BDD1693C((void *)(v39 > 1), v40 + 1, 1, v37);
          void *v36 = v37;
        }
        a1 = (uint64_t)v297;
        _OWORD v37[2] = v40 + 1;
        v37[v40 + 4] = v33;
        v34(v310, 0);
        swift_release();
        uint64_t v12 = v301;
        int64_t v13 = v302;
        goto LABEL_85;
      }
    }
    if (v298)
    {
      uint64_t v41 = v12();
      if ((v41 & 0xC000000000000001) != 0)
      {
        unint64_t v23 = v18;
        uint64_t v24 = MEMORY[0x1C18862A0](v14, v41);
      }
      else
      {
        if ((v14 & 0x8000000000000000) != 0) {
          goto LABEL_344;
        }
        if (v14 >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_345;
        }
        unint64_t v23 = v18;
        uint64_t v24 = *(void *)(v41 + 8 * v14 + 32);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      id v25 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1010, 0, v293);
LABEL_50:
      id v42 = v25;
      char v43 = (void (*)(void, void))(*(uint64_t (**)(char *))(*(void *)v24 + 224))(v310);
      char v45 = v44;
      char v46 = *v44;
      char v47 = swift_isUniquelyReferenced_nonNull_native();
      *char v45 = v46;
      if ((v47 & 1) == 0)
      {
        char v46 = sub_1BDD1693C(0, v46[2] + 1, 1, v46);
        *char v45 = v46;
      }
      unint64_t v49 = v46[2];
      unint64_t v48 = v46[3];
      if (v49 >= v48 >> 1)
      {
        char v46 = sub_1BDD1693C((void *)(v48 > 1), v49 + 1, 1, v46);
        *char v45 = v46;
      }
      a1 = (uint64_t)v297;
      v46[2] = v49 + 1;
      v46[v49 + 4] = v42;
      v43(v310, 0);
      swift_release();
      uint64_t v12 = v301;
      int64_t v13 = v302;
      unint64_t v18 = v23;
      uint64_t v21 = v309;
    }
LABEL_78:
    if (!v305)
    {
      v310[0] = v21[48];
      if (CalculateExpression.TokenType.isLaTeX.getter())
      {
        unint64_t v65 = v21;
        unint64_t v31 = v18;
        *(unsigned char *)a3 = 1;
        id v66 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1012, 0);
        BOOL v67 = (void (*)(void, void))(*(uint64_t (**)(char *))(*(void *)v65 + 224))(v310);
        char v69 = v68;
        unint64_t v70 = *v68;
        char v71 = swift_isUniquelyReferenced_nonNull_native();
        *char v69 = v70;
        if ((v71 & 1) == 0)
        {
          unint64_t v70 = sub_1BDD1693C(0, v70[2] + 1, 1, v70);
          *char v69 = v70;
        }
        unint64_t v73 = v70[2];
        unint64_t v72 = v70[3];
        if (v73 >= v72 >> 1)
        {
          unint64_t v70 = sub_1BDD1693C((void *)(v72 > 1), v73 + 1, 1, v70);
          *char v69 = v70;
        }
        int64_t v13 = v302;
        v70[2] = v73 + 1;
        v70[v73 + 4] = v66;
        v67(v310, 0);
        uint64_t v12 = v301;
LABEL_85:
        unint64_t v18 = v31;
        uint64_t v21 = v309;
      }
    }
    v310[0] = v21[48];
    char v74 = v310[0];
    a2 = 17;
    LOBYTE(v311) = 17;
    sub_1BDCF0848();
    v308 &= sub_1BDDAFD28();
    v310[0] = v74;
    LOBYTE(v311) = 17;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311)) {
      goto LABEL_87;
    }
    v310[0] = v74;
    LOBYTE(v311) = 10;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311))
    {
      if (v298)
      {
        uint64_t v76 = v12();
        if ((v76 & 0xC000000000000001) != 0)
        {
          unint64_t v77 = v18;
          uint64_t v78 = MEMORY[0x1C18862A0](v14, v76);
        }
        else
        {
          if ((v14 & 0x8000000000000000) != 0) {
            goto LABEL_340;
          }
          if (v14 >= *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_341;
          }
          unint64_t v77 = v18;
          uint64_t v78 = *(void *)(v76 + 8 * v14 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        id v79 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1010, 0);
        char v80 = (void (*)(void, void))(*(uint64_t (**)(char *))(*(void *)v78 + 224))(v310);
        unint64_t v82 = v81;
        sub_1BDD168AC();
        uint64_t v83 = *(void **)(*v82 + 16);
        sub_1BDD168F8(v83);
        uint64_t v84 = *v82;
        *(void *)(v84 + 16) = (char *)v83 + 1;
        *(void *)(v84 + 8 * (void)v83 + 32) = v79;
        v80(v310, 0);
        swift_release();
        int64_t v13 = v302;
        unint64_t v18 = v77;
      }
      uint64_t v75 = v304;
      uint64_t v85 = sub_1BDD0A6C8((uint64_t (*)(uint64_t))a1, v304, (uint64_t)a3, (unsigned char *)&v311 + 1);
      goto LABEL_96;
    }
    v310[0] = v74;
    LOBYTE(v311) = 7;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311))
    {
      unint64_t v86 = v18;
      if (v298)
      {
        v310[0] = v306;
        LOBYTE(v311) = 19;
        if ((sub_1BDDAFD28() & 1) == 0)
        {
          id v87 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1009, 0);
          unint64_t v88 = (void (*)(void, void))(*(uint64_t (**)(char *))(*(void *)v309 + 224))(v310);
          uint64_t v90 = v89;
          sub_1BDD168AC();
          uint64_t v91 = *(void **)(*v90 + 16);
          sub_1BDD168F8(v91);
          uint64_t v92 = *v90;
          *(void *)(v92 + 16) = (char *)v91 + 1;
          *(void *)(v92 + 8 * (void)v91 + 32) = v87;
          v88(v310, 0);
        }
      }
      uint64_t v93 = sub_1BDD11AC8((void *)a1, (uint64_t *)v304, (uint64_t)a3);
      uint64_t v94 = (*(uint64_t (**)(void))(*(void *)v300 + 584))();
      uint64_t v95 = (*(uint64_t (**)(uint64_t))(*(void *)v93 + 280))(v94);
      if (!v95
        || (char v96 = (*(uint64_t (**)(uint64_t))(*(void *)v95 + 560))(v95), swift_release(), (v96 & 1) != 0))
      {
        *(unsigned char *)a3 = 1;
        id v97 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1004, 0);
        uint64_t v98 = (void (*)(void, void))(*(uint64_t (**)(char *))(*(void *)v309 + 224))(v310);
        uint64_t v100 = v99;
        sub_1BDD168AC();
        uint64_t v101 = *(void **)(*v100 + 16);
        sub_1BDD168F8(v101);
        uint64_t v102 = *v100;
        *(void *)(v102 + 16) = (char *)v101 + 1;
        uint64_t v103 = v102 + 8 * (void)v101;
        int64_t v13 = v302;
        *(void *)(v103 + 32) = v97;
        v98(v310, 0);
      }
      swift_release();
      unint64_t v18 = v86;
      goto LABEL_140;
    }
    v310[0] = v74;
    LOBYTE(v311) = 36;
    v296 = v18;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311)) {
      goto LABEL_110;
    }
    v310[0] = v74;
    LOBYTE(v311) = 38;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311)
      || (v310[0] = v74,
          LOBYTE(v311) = 44,
          static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311))
      || (v310[0] = v74,
          LOBYTE(v311) = 46,
          static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311))
      || (v310[0] = v74,
          LOBYTE(v311) = 48,
          static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311)))
    {
LABEL_110:
      a1 = sub_1BDD10BD0((void *)a1, (uint64_t *)v304, (uint64_t)a3, 1);
      if (!*(void *)(v307 + 16)) {
        goto LABEL_342;
      }
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        unint64_t v104 = (char *)v307;
        uint64_t v105 = *(void *)(v307 + 16);
        if (!v105) {
          goto LABEL_343;
        }
      }
      else
      {
        unint64_t v104 = sub_1BDD17FF8(v307);
        uint64_t v105 = *((void *)v104 + 2);
        if (!v105) {
          goto LABEL_343;
        }
      }
      v307 = (uint64_t)v104;
      *((void *)v104 + 2) = v105 - 1;
      v310[0] = v74;
      LOBYTE(v311) = 36;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311)
        || (v310[0] = v74,
            LOBYTE(v311) = 44,
            static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311)))
      {
        unint64_t v106 = 0xE400000000000000;
        uint64_t v107 = 1818846563;
      }
      else
      {
        uint64_t v107 = 0x726F6F6C66;
        v310[0] = v74;
        LOBYTE(v311) = 38;
        if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311))
        {
          unint64_t v106 = 0xE500000000000000;
        }
        else
        {
          v310[0] = v74;
          LOBYTE(v311) = 46;
          if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311))
          {
            unint64_t v106 = 0xE500000000000000;
          }
          else
          {
            uint64_t v107 = 7561825;
            unint64_t v106 = 0xE300000000000000;
          }
        }
      }
      if (v305)
      {
        v310[0] = 10;
        type metadata accessor for CalculateExpression.RichToken();
        uint64_t v108 = swift_allocObject();
        CalculateExpression.RichToken.init(text:type:isImplicit:)(v107, v106, (unsigned __int8 *)v310, 0);
        uint64_t v109 = *(void (**)(void))(*(void *)v300 + 584);
        v109(v108);
        swift_release();
        v310[0] = 15;
        uint64_t v110 = swift_allocObject();
        CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)v310, 0);
        v109(v110);
        swift_release();
        (*(void (**)(uint64_t, void))(*(void *)v300 + 592))(a1, 0);
        v310[0] = 16;
        int64_t v13 = v302;
        uint64_t v111 = swift_allocObject();
        CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)v310, 0);
        v109(v111);
        uint64_t v12 = v301;
        swift_release();
        swift_release();
        a1 = (uint64_t)v297;
      }
      else
      {
        uint64_t v112 = swift_bridgeObjectRelease();
        uint64_t v20 = *v304;
        if ((uint64_t)*v304 < (uint64_t)v14) {
          goto LABEL_354;
        }
        unint64_t v113 = ((uint64_t (*)(uint64_t))v12)(v112);
        sub_1BDD16C54(v14, v113);
        sub_1BDD16C54(v20, v113);
        sub_1BDD170A0(v14, v20, v113);
        uint64_t v20 = v114;
        a2 = v115;
        unint64_t v117 = v116;
        swift_bridgeObjectRelease();
        uint64_t v12 = (uint64_t (*)(void))(v117 >> 1);
        BOOL v118 = __OFSUB__(v117 >> 1, a2);
        int64_t v13 = (v117 >> 1) - a2;
        if (v118) {
          goto LABEL_355;
        }
        if (v13)
        {
          *(void *)v310 = MEMORY[0x1E4FBC860];
          sub_1BDD13DDC(v13);
          if (v13 < 0) {
            goto LABEL_359;
          }
          if (a2 <= (uint64_t)v12) {
            uint64_t v119 = (uint64_t (*)(void))v12;
          }
          else {
            uint64_t v119 = (uint64_t (*)(void))a2;
          }
          uint64_t v12 = (uint64_t (*)(void))((char *)v119 - a2);
          uint64_t v120 = v20 + 8 * a2;
          while (v12)
          {
            unint64_t v121 = *(uint64_t (**)(void))(**(void **)v120 + 136);
            uint64_t v122 = swift_retain();
            uint64_t v123 = v121(v122);
            a2 = v124;
            swift_release();
            sub_1BDD171A0();
            uint64_t v125 = *(void *)v310;
            a1 = *(void *)(*(void *)v310 + 16);
            unint64_t v126 = *(void *)(*(void *)v310 + 24);
            if (a1 >= v126 >> 1)
            {
              sub_1BDD17224((char *)(v126 > 1), a1 + 1, 1);
              uint64_t v125 = *(void *)v310;
            }
            *(void *)(v125 + 16) = a1 + 1;
            uint64_t v127 = v125 + 16 * a1;
            *(void *)(v127 + 32) = v123;
            *(void *)(v127 + 40) = a2;
            uint64_t v12 = (uint64_t (*)(void))((char *)v12 - 1);
            v120 += 8;
            if (!--v13)
            {
              swift_unknownObjectRelease();
              uint64_t v128 = *(void *)v310;
              goto LABEL_134;
            }
          }
          __break(1u);
LABEL_334:
          __break(1u);
LABEL_335:
          __break(1u);
LABEL_336:
          __break(1u);
LABEL_337:
          __break(1u);
LABEL_338:
          __break(1u);
LABEL_339:
          __break(1u);
LABEL_340:
          __break(1u);
LABEL_341:
          __break(1u);
LABEL_342:
          __break(1u);
LABEL_343:
          __break(1u);
LABEL_344:
          __break(1u);
LABEL_345:
          __break(1u);
          goto LABEL_346;
        }
        swift_unknownObjectRelease();
        uint64_t v128 = MEMORY[0x1E4FBC860];
LABEL_134:
        *(void *)v310 = v128;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA268F0);
        sub_1BDD19AC4(&qword_1EBA268F8, &qword_1EBA268F0);
        uint64_t v129 = sub_1BDDAFD18();
        v131 = v130;
        swift_bridgeObjectRelease();
        unint64_t v132 = sub_1BDD5290C();
        v133._countAndFlagsBits = v129;
        v133._object = v131;
        evaluate(_:options:)(v134, v133, (Swift::OpaquePointer)v132);
        uint64_t v136 = v135;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v12 = v301;
        unint64_t v18 = v296;
        if (v136)
        {
          type metadata accessor for CalculateExpression.CustomOperandOperation();
          id v137 = v136;
          CalculateExpression.CustomOperandOperation.__allocating_init(_:)(v137);
          uint64_t v139 = v138;
          uint64_t v140 = (*(uint64_t (**)(void))(*(void *)v138 + 128))();
          if (v140)
          {
            v310[0] = 4;
            type metadata accessor for CalculateExpression.RichToken();
            uint64_t v141 = swift_allocObject();
            CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)v310, 0);
            (*(void (**)(uint64_t))(*(void *)v300 + 584))(v141);
            uint64_t v140 = swift_release();
          }
          (*(void (**)(uint64_t))(*(void *)v139 + 120))(v140);
          (*(void (**)(void))(*(void *)v300 + 584))();
          swift_release();
          swift_release();
          swift_release();
        }
        else
        {
          swift_release();
          *(unsigned char *)a3 = 1;
        }
        a1 = (uint64_t)v297;
        int64_t v13 = v302;
      }
      goto LABEL_140;
    }
    v310[0] = v74;
    LOBYTE(v311) = 20;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311))
    {
      uint64_t v147 = *(uint64_t (**)(void))(*(void *)v21 + 136);
      if (v147() == 0x6D726874616D5CLL && v148 == 0xE700000000000000) {
        goto LABEL_154;
      }
      char v149 = sub_1BDDB04E8();
      uint64_t v150 = swift_bridgeObjectRelease();
      if (v149) {
        goto LABEL_156;
      }
      if (((uint64_t (*)(uint64_t))v147)(v150) == 0x747865745CLL && v151 == 0xE500000000000000)
      {
LABEL_154:
        swift_bridgeObjectRelease();
LABEL_156:
        uint64_t v75 = v304;
        sub_1BDD18918((void *)a1, (uint64_t *)v304);
        v308 = 1;
        uint64_t v12 = v301;
        goto LABEL_141;
      }
      char v152 = sub_1BDDB04E8();
      swift_bridgeObjectRelease();
      if (v152) {
        goto LABEL_156;
      }
    }
    v310[0] = v21[48];
    LOBYTE(v311) = 20;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311))
    {
      if ((*(uint64_t (**)(void))(*(void *)v21 + 136))() == 0x726F6C6F635CLL && v153 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_167:
        sub_1BDD18918((void *)a1, (uint64_t *)v304);
        unint64_t v155 = *v304;
        uint64_t v156 = (uint64_t (**)(unint64_t))(*(void *)a1 + 288);
        unint64_t v157 = *v156;
        uint64_t v158 = (*v156)(*v304);
        uint64_t v12 = v301;
        if (!v158
          || (char v159 = *(unsigned char *)(v158 + 48),
              swift_release(),
              v310[0] = v159,
              LOBYTE(v311) = 21,
              (sub_1BDDAFD28() & 1) == 0))
        {
          v308 = 1;
          unint64_t v18 = v296;
LABEL_140:
          uint64_t v75 = v304;
          goto LABEL_141;
        }
        sub_1BDD18918((void *)a1, (uint64_t *)v304);
        sub_1BDD18918((void *)a1, (uint64_t *)v304);
        uint64_t v160 = v157(*v304);
        if (!v160
          || (char v161 = *(unsigned char *)(v160 + 48),
              swift_release(),
              v310[0] = v161,
              LOBYTE(v311) = 22,
              (sub_1BDDAFD28() & 1) == 0))
        {
          *(unsigned char *)a3 = 1;
          uint64_t result = v301();
          if ((result & 0xC000000000000001) != 0)
          {
            uint64_t v163 = MEMORY[0x1C18862A0](v155, result);
          }
          else
          {
            if ((v155 & 0x8000000000000000) != 0) {
              goto LABEL_367;
            }
            if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) <= v155) {
              goto LABEL_368;
            }
            uint64_t v163 = *(void *)(result + 8 * v155 + 32);
            swift_retain();
          }
          swift_bridgeObjectRelease();
          sub_1BDD186D4(v163);
          swift_release();
        }
        uint64_t v75 = v304;
        sub_1BDD18918((void *)a1, (uint64_t *)v304);
        v308 = 1;
        unint64_t v18 = v296;
        goto LABEL_141;
      }
      char v154 = sub_1BDDB04E8();
      swift_bridgeObjectRelease();
      if (v154) {
        goto LABEL_167;
      }
    }
    unsigned __int8 v164 = v21[48];
    v310[0] = v164;
    LOBYTE(v311) = 50;
    uint64_t v12 = v301;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311))
    {
      if (v298)
      {
        uint64_t result = v301();
        if ((result & 0xC000000000000001) != 0)
        {
          unint64_t v165 = v18;
          uint64_t v166 = MEMORY[0x1C18862A0](v14, result);
        }
        else
        {
          if ((v14 & 0x8000000000000000) != 0) {
            goto LABEL_363;
          }
          if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) <= v14) {
            goto LABEL_364;
          }
          unint64_t v165 = v18;
          uint64_t v166 = *(void *)(result + 8 * v14 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        id v167 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1010, 0);
        v168 = (void (*)(void, void))(*(uint64_t (**)(char *))(*(void *)v166 + 224))(v310);
        unint64_t v170 = v169;
        sub_1BDD168AC();
        v171 = *(void **)(*v170 + 16);
        sub_1BDD168F8(v171);
        uint64_t v172 = *v170;
        *(void *)(v172 + 16) = (char *)v171 + 1;
        *(void *)(v172 + 8 * (void)v171 + 32) = v167;
        v168(v310, 0);
        swift_release();
        int64_t v13 = v302;
        unint64_t v18 = v165;
      }
      uint64_t v75 = v304;
      uint64_t v85 = sub_1BDD0FA34((void *)a1, (uint64_t *)v304, a3);
LABEL_96:
      (*(void (**)(uint64_t, void))(*(void *)v300 + 592))(v85, 0);
      swift_release();
      goto LABEL_141;
    }
    v310[0] = v164;
    LOBYTE(v311) = 40;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311))
    {
      if (v14)
      {
        *(unsigned char *)a3 = 1;
        uint64_t result = v301();
        uint64_t v173 = result;
        if ((result & 0xC000000000000001) == 0)
        {
          if ((v14 & 0x8000000000000000) != 0) {
            goto LABEL_365;
          }
          if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) <= v14) {
            goto LABEL_366;
          }
          goto LABEL_208;
        }
LABEL_293:
        unint64_t v177 = v18;
        uint64_t v178 = MEMORY[0x1C18862A0](v14, v173);
        goto LABEL_209;
      }
      v298 = 1;
LABEL_87:
      uint64_t v75 = v304;
      sub_1BDD18918((void *)a1, (uint64_t *)v304);
      goto LABEL_141;
    }
    v310[0] = v164;
    LOBYTE(v311) = 41;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311))
    {
      unint64_t v174 = v301();
      uint64_t v175 = sub_1BDD13E54(v174);
      uint64_t result = swift_bridgeObjectRelease();
      if (__OFSUB__(v175, 1)) {
        goto LABEL_369;
      }
      if (v14 == v175 - 1)
      {
        v298 = 0;
        goto LABEL_87;
      }
      *(unsigned char *)a3 = 1;
      uint64_t result = ((uint64_t (*)(uint64_t))v301)(result);
      uint64_t v173 = result;
      if ((result & 0xC000000000000001) != 0) {
        goto LABEL_293;
      }
      if ((v14 & 0x8000000000000000) != 0) {
        goto LABEL_370;
      }
      if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) <= v14) {
        goto LABEL_371;
      }
LABEL_208:
      unint64_t v177 = v18;
      uint64_t v178 = *(void *)(v173 + 8 * v14 + 32);
      swift_retain();
LABEL_209:
      swift_bridgeObjectRelease();
      id v179 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1000, 0, v293);
LABEL_210:
      id v180 = v179;
      uint64_t v181 = (void (*)(void, void))(*(uint64_t (**)(char *))(*(void *)v178 + 224))(v310);
      unint64_t v183 = v182;
      sub_1BDD168AC();
      uint64_t v184 = *(void **)(*v183 + 16);
      sub_1BDD168F8(v184);
      uint64_t v185 = *v183;
      *(void *)(v185 + 16) = (char *)v184 + 1;
      *(void *)(v185 + 8 * (void)v184 + 32) = v180;
      v181(v310, 0);
      swift_release();
      int64_t v13 = v302;
      unint64_t v18 = v177;
      goto LABEL_87;
    }
    if (v305)
    {
      v310[0] = v164;
      LOBYTE(v311) = 25;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311))
      {
        if ((*(uint64_t (**)(void))(*(void *)v21 + 136))() == 38 && v176 == 0xE100000000000000)
        {
LABEL_223:
          uint64_t v187 = swift_bridgeObjectRelease();
LABEL_224:
          if (v298)
          {
            v310[0] = v21[48];
            LOBYTE(v311) = 25;
            v294 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311);
            goto LABEL_87;
          }
          *(unsigned char *)a3 = 1;
          uint64_t result = ((uint64_t (*)(uint64_t))v301)(v187);
          if ((result & 0xC000000000000001) != 0)
          {
            unint64_t v177 = v18;
            uint64_t v178 = MEMORY[0x1C18862A0](v14, result);
          }
          else
          {
            if ((v14 & 0x8000000000000000) != 0) {
              goto LABEL_374;
            }
            if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) <= v14) {
              goto LABEL_375;
            }
            unint64_t v177 = v18;
            uint64_t v178 = *(void *)(result + 8 * v14 + 32);
            swift_retain();
          }
          swift_bridgeObjectRelease();
          id v179 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1012, 0, v293);
          goto LABEL_210;
        }
        char v186 = sub_1BDDB04E8();
        uint64_t v187 = swift_bridgeObjectRelease();
        if (v186) {
          goto LABEL_224;
        }
      }
      v310[0] = v21[48];
      LOBYTE(v311) = 20;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311))
      {
        if ((*(uint64_t (**)(void))(*(void *)v21 + 136))() == 23644 && v188 == 0xE200000000000000) {
          goto LABEL_223;
        }
        char v189 = sub_1BDDB04E8();
        uint64_t v187 = swift_bridgeObjectRelease();
        if (v189) {
          goto LABEL_224;
        }
      }
    }
    unsigned __int8 v190 = v21[48];
    v310[0] = v190;
    if ((CalculateExpression.TokenType.isAnyUnknown.getter() & 1) == 0)
    {
      unint64_t v208 = v18;
      v310[0] = v190;
      LOBYTE(v311) = 1;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311)
        && (v209 = (void (**)(char *__return_ptr))(*v299 + 384),
            v210 = *v209,
            (*v209)(v310),
            LOBYTE(v311) = v310[0],
            sub_1BDCE8EC8(),
            (sub_1BDDAFD28() & 1) == 0))
      {
        v224 = (*(uint64_t (**)(void))(*(void *)v309 + 136))();
        v226 = sub_1BDD0509C(v224, v225);
        if (v227) {
          v228 = 0;
        }
        else {
          v228 = v226;
        }
        type metadata accessor for CalculateExpression.RichToken();
        *(void *)v310 = v228;
        v210((char *)&v311);
        CalculateExpression.Base.rawValue.getter();
        sub_1BDD185E8();
        v229 = sub_1BDDAFED8();
        v231 = v230;
        v210(v310);
        v216 = sub_1BDCE8A80(v229, v231, v310);
        a1 = (uint64_t)v297;
        int64_t v13 = v302;
      }
      else
      {
        v211 = *(uint64_t (**)(void))(*(void *)v309 + 160);
        swift_retain();
        v212 = v211();
        if (!v213) {
          v212 = (*(uint64_t (**)(uint64_t))(*(void *)v309 + 136))(v212);
        }
        v214 = v212;
        v215 = v213;
        a1 = (uint64_t)v297;
        v310[0] = v190;
        type metadata accessor for CalculateExpression.RichToken();
        v216 = swift_allocObject();
        CalculateExpression.RichToken.init(text:type:isImplicit:)(v214, v215, (unsigned __int8 *)v310, 0);
        swift_release();
        uint64_t v12 = v301;
        int64_t v13 = v302;
      }
      (*(void (**)(uint64_t))(*(void *)v300 + 584))(v216);
      swift_release();
      v232 = sub_1BDD18918((void *)a1, (uint64_t *)v304);
      if ((v298 & 1) == 0) {
        goto LABEL_285;
      }
      if (qword_1EA0DF590 != -1) {
        swift_once();
      }
      v233 = v309[48];
      v232 = sub_1BDCE8528(v233, qword_1EA0E0948);
      if (v232) {
        goto LABEL_285;
      }
      v310[0] = v233;
      if ((CalculateExpression.TokenType.isPrefixOperator.getter() & 1) != 0
        && (v310[0] = v233, LOBYTE(v311) = 4, v232 = sub_1BDDAFD28(), (v232 & 1) == 0))
      {
        if (!v294) {
          goto LABEL_285;
        }
      }
      else
      {
        v310[0] = v233;
        if (CalculateExpression.TokenType.isPostfixOperator.getter())
        {
          if (!v294)
          {
            v246 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1009, 0);
            v247 = (uint64_t (*)(void, void))(*(uint64_t (**)(char *))(*(void *)v309 + 224))(v310);
            v249 = v248;
            sub_1BDD168AC();
            v250 = *(void **)(*v249 + 16);
            sub_1BDD168F8(v250);
            v251 = *v249;
            *(void *)(v251 + 16) = (char *)v250 + 1;
            *(void *)(v251 + 8 * (void)v250 + 32) = v246;
            v232 = v247(v310, 0);
            a1 = (uint64_t)v297;
            uint64_t v12 = v301;
            int64_t v13 = v302;
            goto LABEL_285;
          }
          v310[0] = v233;
          LOBYTE(v311) = 9;
          a1 = (uint64_t)v297;
          uint64_t v12 = v301;
          int64_t v13 = v302;
          if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311))
          {
            v234 = (*(uint64_t (**)(unint64_t))(*(void *)v297 + 288))(*v304);
            if (v234)
            {
              v235 = *(unsigned char *)(v234 + 48);
              swift_release();
              v310[0] = v235;
              LOBYTE(v311) = 20;
              v232 = sub_1BDDAFD28();
              if (v232)
              {
LABEL_285:
                if (v295(v232))
                {
                  v260 = CalculateExpression.format.getter();
                  swift_release();
                  unint64_t v18 = v208;
                  if (v260 == 1)
                  {
                    if (qword_1EA0DF590 != -1) {
                      swift_once();
                    }
                    if (sub_1BDCE8528(v309[48], qword_1EA0E0948))
                    {
                      v261 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1008, 0);
                      v262 = (void (*)(void, void))(*(uint64_t (**)(char *))(*(void *)v309 + 224))(v310);
                      v264 = v263;
                      sub_1BDD168AC();
                      v265 = *(void **)(*v264 + 16);
                      sub_1BDD168F8(v265);
                      v266 = *v264;
                      *(void *)(v266 + 16) = (char *)v265 + 1;
                      v267 = v266 + 8 * (void)v265;
                      unint64_t v18 = v208;
                      *(void *)(v267 + 32) = v261;
                      v262(v310, 0);
                      *(unsigned char *)a3 = 1;
                    }
                  }
                }
                else
                {
                  unint64_t v18 = v208;
                }
                goto LABEL_140;
              }
            }
          }
        }
        else
        {
          v310[0] = v233;
          v232 = CalculateExpression.TokenType.isBinaryOperator.getter();
          if ((v232 & 1) == 0) {
            goto LABEL_285;
          }
          if (v294)
          {
            v310[0] = v306;
            LOBYTE(v311) = 19;
            a1 = (uint64_t)v297;
            uint64_t v12 = v301;
            int64_t v13 = v302;
            if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311))
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF038);
              unint64_t inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = v293;
              *(_WORD *)(inited + 32) = 1543;
              *(unsigned char *)(inited + 34) = 5;
              v245 = sub_1BDD11CCC(v233, inited);
              v232 = swift_bridgeObjectRelease();
              if (v245) {
                goto LABEL_285;
              }
            }
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF038);
            v252 = swift_initStackObject();
            *(_OWORD *)(v252 + 16) = xmmword_1BDDB37A0;
            *(_DWORD *)(v252 + 32) = 100992003;
            v253 = sub_1BDD11CCC(v233, v252);
            v232 = swift_bridgeObjectRelease();
            a1 = (uint64_t)v297;
            uint64_t v12 = v301;
            int64_t v13 = v302;
            if (v253) {
              goto LABEL_285;
            }
          }
        }
      }
      v254 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1009, 0);
      v255 = (uint64_t (*)(void, void))(*(uint64_t (**)(char *))(*(void *)v309 + 224))(v310);
      v257 = v256;
      sub_1BDD168AC();
      v258 = *(void **)(*v257 + 16);
      sub_1BDD168F8(v258);
      v259 = *v257;
      *(void *)(v259 + 16) = (char *)v258 + 1;
      *(void *)(v259 + 8 * (void)v258 + 32) = v254;
      v232 = v255(v310, 0);
      goto LABEL_285;
    }
    *(unsigned char *)a3 = 1;
    long long v191 = *(uint64_t (**)(void))(*(void *)v21 + 160);
    uint64_t v192 = swift_retain();
    uint64_t v193 = v191(v192);
    if (!v194) {
      uint64_t v193 = (*(uint64_t (**)(uint64_t))(*(void *)v21 + 136))(v193);
    }
    uint64_t v195 = v193;
    unint64_t v196 = v194;
    uint64_t v12 = v301;
    v310[0] = v190;
    type metadata accessor for CalculateExpression.RichToken();
    uint64_t v197 = swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(v195, v196, (unsigned __int8 *)v310, 0);
    swift_release();
    (*(void (**)(uint64_t))(*(void *)v300 + 584))(v197);
    swift_release();
    unsigned __int8 v198 = v21[48];
    v310[0] = v198;
    LOBYTE(v311) = 0;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311))
    {
      uint64_t result = v301();
      if ((result & 0xC000000000000001) != 0)
      {
        uint64_t v199 = MEMORY[0x1C18862A0](v14, result);
      }
      else
      {
        if ((v14 & 0x8000000000000000) != 0) {
          goto LABEL_372;
        }
        if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) <= v14) {
          goto LABEL_373;
        }
        uint64_t v199 = *(void *)(result + 8 * v14 + 32);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      id v200 = objc_allocWithZone((Class)CalculateError);
      v201 = (void *)sub_1BDDAFFB8();
      swift_bridgeObjectRelease();
      id v202 = objc_msgSend(v200, sel_initUnknownVariable_, v201);

      v203 = (void (*)(void, void))(*(uint64_t (**)(char *))(*(void *)v199 + 224))(v310);
      v205 = v204;
      sub_1BDD168AC();
      v206 = *(void **)(*v205 + 16);
      sub_1BDD168F8(v206);
      uint64_t v207 = *v205;
      *(void *)(v207 + 16) = (char *)v206 + 1;
      *(void *)(v207 + 8 * (void)v206 + 32) = v202;
      v203(v310, 0);
    }
    else
    {
      v310[0] = v198;
      LOBYTE(v311) = 51;
      v217 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311);
      uint64_t result = v301();
      v218 = result & 0xC000000000000001;
      if (v217)
      {
        if (v218)
        {
          v219 = MEMORY[0x1C18862A0](v14, result);
        }
        else
        {
          if ((v14 & 0x8000000000000000) != 0) {
            goto LABEL_376;
          }
          if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) <= v14) {
            goto LABEL_377;
          }
          v219 = *(void *)(result + 8 * v14 + 32);
          swift_retain();
        }
        v220 = swift_bridgeObjectRelease();
        (*(void (**)(uint64_t))(*(void *)v21 + 136))(v220);
        v221 = objc_allocWithZone((Class)CalculateError);
        v222 = (void *)sub_1BDDAFD38();
        swift_bridgeObjectRelease();
        v223 = objc_msgSend(v221, sel_initUnexpectedPunctuation_, v222, v293);
      }
      else
      {
        if (v218)
        {
          v219 = MEMORY[0x1C18862A0](v14, result);
        }
        else
        {
          if ((v14 & 0x8000000000000000) != 0) {
            goto LABEL_378;
          }
          if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) <= v14) {
            goto LABEL_379;
          }
          v219 = *(void *)(result + 8 * v14 + 32);
          swift_retain();
        }
        v236 = swift_bridgeObjectRelease();
        (*(void (**)(uint64_t))(*(void *)v21 + 136))(v236);
        v237 = objc_allocWithZone((Class)CalculateError);
        v222 = (void *)sub_1BDDAFD38();
        swift_bridgeObjectRelease();
        v223 = objc_msgSend(v237, sel_initUnexpectedSymbol_, v222, v293);
      }
      v238 = v223;

      v239 = (void (*)(void, void))(*(uint64_t (**)(char *))(*(void *)v219 + 224))(v310);
      v241 = v240;
      sub_1BDD168AC();
      v242 = *(void **)(*v241 + 16);
      sub_1BDD168F8(v242);
      v243 = *v241;
      *(void *)(v243 + 16) = (char *)v242 + 1;
      *(void *)(v243 + 8 * (void)v242 + 32) = v238;
      v239(v310, 0);
    }
    swift_release();
    uint64_t v75 = v304;
    sub_1BDD18918((void *)a1, (uint64_t *)v304);
    int64_t v13 = v302;
    unint64_t v18 = v296;
LABEL_141:
    a2 = v309[48];
    v310[0] = v309[48];
    LOBYTE(v311) = 17;
    char v142 = sub_1BDDAFD28();
    uint64_t v143 = swift_release();
    if (v142)
    {
      int v144 = v306;
    }
    else
    {
      unint64_t v18 = v14;
      int v144 = a2;
    }
    v306 = v144;
    unint64_t v14 = *v75;
    unint64_t v145 = ((uint64_t (*)(uint64_t))v12)(v143);
    if (v145 >> 62) {
      uint64_t v146 = sub_1BDDB0448();
    }
    else {
      uint64_t v146 = *(void *)((v145 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v17 = swift_bridgeObjectRelease();
    if ((uint64_t)v14 >= v146) {
      goto LABEL_300;
    }
  }
  v310[0] = a2;
  if (CalculateExpression.TokenType.isClose.getter())
  {
    if (BYTE1(v311) == 1)
    {
      v310[0] = a2;
      LOBYTE(v311) = 22;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311))
      {
        BYTE1(v311) = 0;
        goto LABEL_78;
      }
    }
    uint64_t v50 = v307;
    uint64_t v51 = *(void *)(v307 + 16);
    if (!v51)
    {
      uint64_t v17 = swift_release();
      goto LABEL_300;
    }
    if (v305)
    {
      v310[0] = a2;
      LOBYTE(v311) = 24;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311)
        || (v310[0] = a2,
            LOBYTE(v311) = 22,
            static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311)))
      {
        *(unsigned char *)a3 = 1;
        uint64_t v52 = v12();
        uint64_t v20 = v52;
        if ((v52 & 0xC000000000000001) != 0)
        {
          unint64_t v53 = v18;
          uint64_t v54 = MEMORY[0x1C18862A0](v14, v52);
        }
        else
        {
          if ((v14 & 0x8000000000000000) != 0) {
            goto LABEL_350;
          }
          if (*(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) <= v14) {
            goto LABEL_351;
          }
          unint64_t v53 = v18;
          uint64_t v54 = *(void *)(v52 + 8 * v14 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        id v55 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1012, 0);
        a2 = (*(uint64_t (**)(char *))(*(void *)v54 + 224))(v310);
        uint64_t v57 = v56;
        sub_1BDD168AC();
        unint64_t v58 = *(void **)(*v57 + 16);
        sub_1BDD168F8(v58);
        uint64_t v59 = *v57;
        *(void *)(v59 + 16) = (char *)v58 + 1;
        *(void *)(v59 + 8 * (void)v58 + 32) = v55;
        ((void (*)(char *, void))a2)(v310, 0);
        swift_release();
        uint64_t v12 = v301;
        unint64_t v18 = v53;
        uint64_t v21 = v309;
        goto LABEL_74;
      }
      uint64_t v50 = v307;
      uint64_t v51 = *(void *)(v307 + 16);
      if (!v51)
      {
LABEL_69:
        *(unsigned char *)a3 = 1;
        uint64_t v61 = v12();
        uint64_t v20 = v61;
        if ((v61 & 0xC000000000000001) != 0)
        {
          uint64_t v62 = MEMORY[0x1C18862A0](v14, v61);
        }
        else
        {
          if ((v14 & 0x8000000000000000) != 0) {
            goto LABEL_348;
          }
          if (*(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10) <= v14) {
            goto LABEL_349;
          }
          uint64_t v62 = *(void *)(v61 + 8 * v14 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        sub_1BDD186D4(v62);
        swift_release();
        goto LABEL_74;
      }
      if (v51 <= 0)
      {
        __break(1u);
LABEL_348:
        __break(1u);
LABEL_349:
        __break(1u);
LABEL_350:
        __break(1u);
LABEL_351:
        __break(1u);
LABEL_352:
        __break(1u);
LABEL_353:
        __break(1u);
LABEL_354:
        __break(1u);
LABEL_355:
        __break(1u);
        goto LABEL_356;
      }
    }
    LOBYTE(v311) = *(unsigned char *)(v50 + 16 * v51 + 24);
    CalculateExpression.TokenType.match.getter(v310);
    int v60 = v310[0];
    v310[0] = a2;
    if (v60 != 53)
    {
      LOBYTE(v311) = v60;
      sub_1BDCF0848();
      if (sub_1BDDAFD28())
      {
LABEL_74:
        if (!*(void *)(v307 + 16)) {
          goto LABEL_336;
        }
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          char v63 = (char *)v307;
          uint64_t v64 = *(void *)(v307 + 16);
          if (!v64) {
            goto LABEL_337;
          }
        }
        else
        {
          char v63 = sub_1BDD17FF8(v307);
          uint64_t v64 = *((void *)v63 + 2);
          if (!v64) {
            goto LABEL_337;
          }
        }
        v307 = (uint64_t)v63;
        *((void *)v63 + 2) = v64 - 1;
        goto LABEL_78;
      }
    }
    goto LABEL_69;
  }
  v310[0] = a2;
  LOBYTE(v311) = 11;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311))
  {
    v310[0] = a2;
    LOBYTE(v311) = 35;
    if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v310, (unsigned __int8 *)&v311)) {
      goto LABEL_78;
    }
  }
  swift_bridgeObjectRelease();
  if (v298)
  {
    sub_1BDD18918((void *)a1, (uint64_t *)v304);
    v280 = *v304;
    v281 = (uint64_t (**)(unint64_t))(*(void *)a1 + 288);
    v282 = *v281;
    v283 = (*v281)(*v304);
    if (v283
      && (v284 = *(unsigned char *)(v283 + 48),
          swift_release(),
          v310[0] = v284,
          LOBYTE(v311) = 41,
          sub_1BDCF0848(),
          (sub_1BDDAFD28() & 1) != 0))
    {
      sub_1BDD18918((void *)a1, (uint64_t *)v304);
    }
    else
    {
      *(unsigned char *)a3 = 1;
      v285 = v282(v280);
      if (v285)
      {
        v286 = v285;
        v287 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1000, 0);
        v288 = (void (*)(void, void))(*(uint64_t (**)(char *))(*(void *)v286 + 224))(v310);
        v290 = v289;
        sub_1BDD168AC();
        v291 = *(void **)(*v290 + 16);
        sub_1BDD168F8(v291);
        v292 = *v290;
        *(void *)(v292 + 16) = (char *)v291 + 1;
        *(void *)(v292 + 8 * (void)v291 + 32) = v287;
        v288(v310, 0);
        swift_release();
      }
    }
  }
LABEL_331:
  swift_release();
  return v300;
}

uint64_t sub_1BDCF015C(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  return *(unsigned __int8 *)(v2 + *a2);
}

uint64_t CalculateExpression.allowPartialExpressions.getter()
{
  return sub_1BDCF015C((uint64_t)&unk_1BDDB4858, &OBJC_IVAR____TtC9Calculate19CalculateExpression___allowPartialExpressions);
}

uint64_t sub_1BDCF0210(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1BDCF06D4();
  uint64_t result = sub_1BDDB00F8();
  uint64_t v7 = result;
  if (v2)
  {
    char v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned __int8 v5 = *v4++;
      sub_1BDCF0284(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1BDCF0284(unsigned __int8 *a1, unsigned __int8 a2)
{
  uint64_t v4 = *v2;
  sub_1BDCF06D4();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1BDDAFCE8();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v8 = ~v6;
    sub_1BDCF0848();
    while ((sub_1BDDAFD28() & 1) == 0)
    {
      unint64_t v7 = (v7 + 1) & v8;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    unsigned __int8 v10 = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unsigned __int8 v10 = a2;
    uint64_t v12 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_1BDCF03E4(a2, v7, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v12;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = v10;
  return result;
}

uint64_t sub_1BDCF03E4(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1BDD1520C();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1BDD15D40();
      goto LABEL_12;
    }
    sub_1BDD16330();
  }
  uint64_t v8 = *v3;
  sub_1BDCF06D4();
  uint64_t result = sub_1BDDAFCE8();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = ~v9;
    sub_1BDCF0848();
    do
    {
      uint64_t result = sub_1BDDAFD28();
      if (result) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v10;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v11 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v11 + 48) + a2) = v5;
  uint64_t v12 = *(void *)(v11 + 16);
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (!v13)
  {
    *(void *)(v11 + 16) = v14;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1BDDB0518();
  __break(1u);
  return result;
}

unint64_t sub_1BDCF0558(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269B8);
  uint64_t v2 = (void *)sub_1BDDB0488();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((unsigned __int8 *)v4 - 16);
    uint64_t v7 = *(v4 - 1);
    uint64_t v6 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BDCF0668(v5);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    uint64_t v10 = (void *)(v2[7] + 16 * result);
    *uint64_t v10 = v7;
    v10[1] = v6;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BDCF0668(uint64_t a1)
{
  sub_1BDCF06D4();
  uint64_t v2 = sub_1BDDAFCE8();
  return sub_1BDCF076C(a1, v2);
}

unint64_t sub_1BDCF06D4()
{
  unint64_t result = qword_1EBA268A8;
  if (!qword_1EBA268A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA268A8);
  }
  return result;
}

uint64_t sub_1BDCF0728()
{
  return sub_1BDDB0578();
}

unint64_t sub_1BDCF076C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    sub_1BDCF0848();
    do
    {
      if (sub_1BDDAFD28()) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

BOOL sub_1BDCF0834(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_1BDCF0848()
{
  unint64_t result = qword_1EBA268B0;
  if (!qword_1EBA268B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA268B0);
  }
  return result;
}

unint64_t sub_1BDCF089C(unint64_t result, uint64_t a2)
{
  uint64_t v2 = a2;
  unint64_t v3 = result;
  uint64_t v8 = a2;
  if (!(result >> 62))
  {
    uint64_t v4 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
    return v2;
  }
  unint64_t result = sub_1BDDB0448();
  uint64_t v4 = result;
  if (!result) {
    return v2;
  }
LABEL_3:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x1C18862A0](i, v3);
      }
      else
      {
        uint64_t v6 = *(void *)(v3 + 8 * i + 32);
        swift_retain();
      }
      sub_1BDCF0978(&v7, v6);
      swift_release();
    }
    return v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDCF0978(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v8 = sub_1BDDB0298();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for CalculateExpression.Operation();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v18;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1BDDB0288();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v16 = sub_1BDD4DA50(v7, result + 1);
    uint64_t v20 = v16;
    if (*(void *)(v16 + 24) <= *(void *)(v16 + 16))
    {
      swift_retain();
      sub_1BDCF0E64();
      uint64_t v17 = v20;
    }
    else
    {
      uint64_t v17 = v16;
      swift_retain();
    }
    sub_1BDD4DC8C(a2, v17);
    uint64_t *v3 = v17;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  type metadata accessor for CalculateExpression.Operation();
  sub_1BDCF1294(&qword_1EBA26898, (void (*)(uint64_t))type metadata accessor for CalculateExpression.Operation);
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1BDDAFCE8();
  uint64_t v11 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    uint64_t v15 = swift_retain();
    sub_1BDCF0C88(v15, v12, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v19;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  uint64_t v13 = ~v11;
  sub_1BDCF1294((unint64_t *)&qword_1EBA268A0, (void (*)(uint64_t))type metadata accessor for CalculateExpression.Operation);
  while ((sub_1BDDAFD28() & 1) == 0)
  {
    unint64_t v12 = (v12 + 1) & v13;
    if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      goto LABEL_11;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v12);
  swift_retain();
  return 0;
}

BOOL sub_1BDCF0C74(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BDCF0C88(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1BDCF0E64();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1BDCF661C();
      goto LABEL_12;
    }
    sub_1BDD4DD74();
  }
  uint64_t v8 = *v3;
  type metadata accessor for CalculateExpression.Operation();
  sub_1BDCF1294(&qword_1EBA26898, (void (*)(uint64_t))type metadata accessor for CalculateExpression.Operation);
  uint64_t result = sub_1BDDAFCE8();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = ~v9;
    sub_1BDCF1294((unint64_t *)&qword_1EBA268A0, (void (*)(uint64_t))type metadata accessor for CalculateExpression.Operation);
    do
    {
      uint64_t result = sub_1BDDAFD28();
      if (result) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v10;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v11 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v11 + 48) + 8 * a2) = v5;
  uint64_t v12 = *(void *)(v11 + 16);
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (!v13)
  {
    *(void *)(v11 + 16) = v14;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1BDDB0518();
  __break(1u);
  return result;
}

uint64_t sub_1BDCF0E64()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269A0);
  uint64_t v3 = sub_1BDDB02F8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v27 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v26 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v26) {
          goto LABEL_33;
        }
        unint64_t v15 = v27[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v26) {
            goto LABEL_33;
          }
          unint64_t v15 = v27[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v26) {
              goto LABEL_33;
            }
            unint64_t v15 = v27[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v26)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v25 = 1 << *(unsigned char *)(v2 + 32);
                if (v25 > 63) {
                  bzero(v27, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v27 = -1 << v25;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v27[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v26) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v27[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      type metadata accessor for CalculateExpression.Operation();
      sub_1BDCF1294(&qword_1EBA26898, (void (*)(uint64_t))type metadata accessor for CalculateExpression.Operation);
      uint64_t result = sub_1BDDAFCE8();
      uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v19 = result & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v21 = 0;
        unint64_t v22 = (unint64_t)(63 - v18) >> 6;
        do
        {
          if (++v20 == v22 && (v21 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v23 = v20 == v22;
          if (v20 == v22) {
            unint64_t v20 = 0;
          }
          v21 |= v23;
          uint64_t v24 = *(void *)(v8 + 8 * v20);
        }
        while (v24 == -1);
        unint64_t v11 = __clz(__rbit64(~v24)) + (v20 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t type metadata accessor for CalculateExpression.Operation()
{
  return self;
}

uint64_t sub_1BDCF11B0()
{
  return sub_1BDDB0578();
}

uint64_t sub_1BDCF11F0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDCF1294(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BDCF46C8(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x450], 8);
  _Block_object_dispose((const void *)(v1 - 240), 8);
  _Unwind_Resume(a1);
}

uint64_t characterTypeForCharacter(void *a1)
{
  id v1 = a1;
  if ([v1 rangeOfCharacterFromSet:digitSet] == 0x7FFFFFFFFFFFFFFFLL)
  {
    if ([v1 rangeOfCharacterFromSet:symbolSet] == 0x7FFFFFFFFFFFFFFFLL
      && [v1 rangeOfCharacterFromSet:hebrewSet] == 0x7FFFFFFFFFFFFFFFLL)
    {
      if ([v1 rangeOfCharacterFromSet:punctuationSet] == 0x7FFFFFFFFFFFFFFFLL)
      {
        if ([v1 rangeOfCharacterFromSet:devanagariDigitSet] == 0x7FFFFFFFFFFFFFFFLL)
        {
          if ([v1 rangeOfCharacterFromSet:eastArabicDigitSet] == 0x7FFFFFFFFFFFFFFFLL)
          {
            if ([v1 rangeOfCharacterFromSet:wideDigitSet] == 0x7FFFFFFFFFFFFFFFLL) {
              uint64_t v2 = 1;
            }
            else {
              uint64_t v2 = 5;
            }
          }
          else
          {
            uint64_t v2 = 4;
          }
        }
        else
        {
          uint64_t v2 = 3;
        }
      }
      else
      {
        uint64_t v2 = 7;
      }
    }
    else
    {
      uint64_t v2 = 6;
    }
  }
  else
  {
    uint64_t v2 = 2;
  }

  return v2;
}

uint64_t CalculateExpression.allowedOperations.getter()
{
  return sub_1BDCF11F0();
}

uint64_t type metadata accessor for CalculateExpression.RandOperation()
{
  return self;
}

uint64_t type metadata accessor for CalculateExpression.PowerOperation()
{
  return self;
}

uint64_t sub_1BDCF5528()
{
  uint64_t result = sub_1BDDAF9F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1BDDAFA98();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_1BDCF569C()
{
  uint64_t result = sub_1BDDAF9F8();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t type metadata accessor for CalculateExpression.DeleteOperation()
{
  return self;
}

uint64_t type metadata accessor for CalculateExpression.ConstantOperation()
{
  return self;
}

uint64_t sub_1BDCF5840()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 27);
}

uint64_t sub_1BDCF5874()
{
  uint64_t result = sub_1BDDAF9F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1BDDAFA98();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

void sub_1BDCF5960(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t type metadata accessor for CalculateExpression.LogOperation()
{
  return self;
}

uint64_t type metadata accessor for CalculateExpression.RootOperation()
{
  return self;
}

uint64_t sub_1BDCF59F0()
{
  return sub_1BDCF6078(&OBJC_IVAR____TtC9Calculate19CalculateExpression___notifyUpdatedRich);
}

void sub_1BDCF5A10()
{
}

void sub_1BDCF5A30(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void **)(v1 + 24);
  uint64_t v4 = *(void **)(v2 + *a1);
  *(void *)(v2 + *a1) = v3;
  id v5 = v3;
}

uint64_t type metadata accessor for CalculateExpression.ExponentialOperation()
{
  return self;
}

uint64_t CalculateExpression.base.getter@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__base);
  uint64_t result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t type metadata accessor for CalculateExpression.BasicOperatorOperation()
{
  return self;
}

uint64_t sub_1BDCF5B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  return sub_1BDCF5BC4();
}

uint64_t sub_1BDCF5BC8()
{
  return sub_1BDCF5BE0();
}

uint64_t sub_1BDCF5BE0()
{
  return sub_1BDCF5C0C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1BDCF5C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___rich);
  swift_beginAccess();
  void *v3 = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1BDCF5D54()
{
  return sub_1BDCF5D94(&OBJC_IVAR____TtC9Calculate19CalculateExpression___locales);
}

uint64_t sub_1BDCF5D74()
{
  return sub_1BDCF5D94(&OBJC_IVAR____TtC9Calculate19CalculateExpression__allowedOperations);
}

uint64_t sub_1BDCF5D94(void *a1)
{
  *(void *)(*(void *)(v1 + 16) + *a1) = *(void *)(v1 + 24);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t CalculateExpression.PlainExpression.__deallocating_deinit()
{
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 92, 7);
}

uint64_t type metadata accessor for CalculateExpression.FunctionOperation()
{
  return self;
}

uint64_t CalculateExpression.RichExpression.__deallocating_deinit()
{
  swift_weakDestroy();

  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 51, 7);
}

uint64_t type metadata accessor for CalculateExpression.LiteralOperation()
{
  return self;
}

uint64_t sub_1BDCF5FD8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1BDCF602C(a1, a2, a3);
}

uint64_t sub_1BDCF602C(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  *(unsigned char *)(v3 + 32) = a3;
  return sub_1BDCF6AC4();
}

uint64_t sub_1BDCF6038()
{
  return sub_1BDCF6078(&OBJC_IVAR____TtC9Calculate19CalculateExpression___updatePlain);
}

uint64_t sub_1BDCF6058()
{
  return sub_1BDCF6078(&OBJC_IVAR____TtC9Calculate19CalculateExpression___updateRich);
}

uint64_t sub_1BDCF6078(void *a1)
{
  char v2 = *(unsigned char *)(v1 + 24);
  uint64_t v3 = (unsigned char *)(*(void *)(v1 + 16) + *a1);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = v2;
  return result;
}

uint64_t sub_1BDCF60D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  if (a1 == 6582125 && a2 == 0xE300000000000000 || (sub_1BDDB04E8() & 1) != 0)
  {
    swift_retain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v4 + 32) = 1;
    *(void *)(v4 + 16) = 37;
    *(void *)(v4 + 24) = 0xE100000000000000;
    swift_release();
  }
  else
  {
    *(unsigned char *)(v4 + 32) = 0;
    *(void *)(v4 + 16) = a1;
    *(void *)(v4 + 24) = a2;
  }
  return sub_1BDCF6AC4();
}

Swift::String __swiftcall CalculateExpression.formatLiteral(_:presentation:formatter:significantDigits:forceScientificNotation:)(Swift::String _, Swift::Bool presentation, NSNumberFormatter_optional formatter, Swift::Int_optional significantDigits, Swift::Bool_optional forceScientificNotation)
{
  Swift::Bool is_nil = significantDigits.is_nil;
  char value = significantDigits.value;
  uint64_t v33 = *(void *)&formatter.is_nil;
  Class isa = formatter.value.super.super.isa;
  object = _._object;
  uint64_t countAndFlagsBits = _._countAndFlagsBits;
  uint64_t v11 = v5;
  if (formatter.value.super.super.isa) {
    unint64_t v12 = formatter.value.super.super.isa;
  }
  else {
    unint64_t v12 = CalculateExpression.effectiveNumberFormatter.getter();
  }
  uint64_t aBlock = countAndFlagsBits;
  uint64_t v36 = (uint64_t)object;
  uint64_t v41 = 11077;
  unint64_t v42 = 0xE200000000000000;
  sub_1BDCEB640();
  unint64_t v13 = isa;
  if ((sub_1BDDB0228() & 1) != 0
    || (uint64_t aBlock = countAndFlagsBits,
        uint64_t v36 = (uint64_t)object,
        uint64_t v41 = 11589,
        unint64_t v42 = 0xE200000000000000,
        (sub_1BDDB0228() & 1) != 0))
  {
    if (presentation)
    {
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v11;
      *(void *)(v14 + 24) = v12;
      *(void *)(v14 + 32) = countAndFlagsBits;
      *(void *)(v14 + 40) = object;
      Swift::Bool v15 = is_nil;
      *(unsigned char *)(v14 + 48) = is_nil;
      if (value)
      {
        id v21 = v12;
        swift_bridgeObjectRetain();
        uint64_t v22 = swift_retain();
        uint64_t countAndFlagsBits = sub_1BDD4D184(v22, v21, countAndFlagsBits, (uint64_t)object, is_nil);
        object = v23;

        swift_release();
      }
      else
      {
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = 0;
        *(void *)(v16 + 24) = 0xE000000000000000;
        uint64_t v17 = swift_allocObject();
        *(void *)(v17 + 16) = v12;
        *(void *)(v17 + 24) = v33;
        *(void *)(v17 + 32) = v16;
        *(void *)(v17 + 40) = sub_1BDD51720;
        *(void *)(v17 + 48) = v14;
        *(unsigned char *)(v17 + 56) = v15;
        *(void *)(v17 + 64) = countAndFlagsBits;
        *(void *)(v17 + 72) = object;
        unint64_t v39 = sub_1BDD517B8;
        uint64_t v40 = v17;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v36 = 1107296256;
        int v37 = sub_1BDD4D4C4;
        uint64_t v38 = &block_descriptor_1;
        uint64_t v18 = _Block_copy(&aBlock);
        swift_bridgeObjectRetain_n();
        id v19 = v12;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_release();
        objc_msgSend(v19, sel_ignoreChanges_, v18);
        swift_release();

        _Block_release(v18);
        swift_beginAccess();
        uint64_t countAndFlagsBits = *(void *)(v16 + 16);
        object = *(void **)(v16 + 24);
        swift_bridgeObjectRetain();
        swift_release();
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    goto LABEL_17;
  }
  if (objc_msgSend(v12, sel_usesGroupingSeparator))
  {
    CalculateExpression.effectiveBase.getter((char *)&aBlock);
    BOOL v20 = aBlock == 1;
  }
  else
  {
    BOOL v20 = 0;
  }
  uint64_t v24 = (void *)sub_1BDDAFD38();
  id v25 = objc_msgSend(v12, sel_groupingSeparator);
  if (!v25)
  {
    __break(1u);
    goto LABEL_19;
  }
  unint64_t v27 = v25;
  id v25 = objc_msgSend(v12, sel_decimalSeparator);
  if (!v25)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v28 = v25;
  swift_getKeyPath();
  uint64_t aBlock = v5;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  LOBYTE(v32) = *(void *)(v5 + OBJC_IVAR____TtC9Calculate19CalculateExpression___engine) != 1;
  id v29 = objc_msgSend(v12, sel_formatString_usesGroupingSeparator_groupingSeparator_decimalSeparator_maximumIntegerDigits_maximumFractionDigits_localizeDigits_, v24, v20, v27, v28, 1000000, 1000000, v32);

  uint64_t countAndFlagsBits = sub_1BDDAFD68();
  object = v30;

LABEL_17:
  id v25 = (id)countAndFlagsBits;
  int64_t v26 = object;
LABEL_20:
  result._object = v26;
  result._uint64_t countAndFlagsBits = (uint64_t)v25;
  return result;
}

void *sub_1BDCF661C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1BDDB02E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    Swift::String result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  Swift::String result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    Swift::String result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    Swift::String result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BDCF67C8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDDB4440;
  *(void *)(inited + 32) = *sub_1BDCFFF70();
  swift_retain();
  *(void *)(inited + 40) = *sub_1BDCFFEE8();
  swift_retain();
  *(void *)(inited + 48) = *sub_1BDCFFE60();
  swift_retain();
  *(void *)(inited + 56) = *sub_1BDCFFDD8();
  swift_retain();
  *(void *)(inited + 64) = *sub_1BDCFFD50();
  swift_retain();
  *(void *)(inited + 72) = *sub_1BDCFFCC8();
  swift_retain();
  *(void *)(inited + 80) = *sub_1BDCFFC40();
  swift_retain();
  *(void *)(inited + 88) = *sub_1BDCFFBB8();
  swift_retain();
  *(void *)(inited + 96) = *sub_1BDD00428();
  swift_retain();
  *(void *)(inited + 104) = *sub_1BDCFF46C();
  swift_retain();
  *(void *)(inited + 112) = *sub_1BDCFF4F4();
  swift_retain();
  *(void *)(inited + 120) = *sub_1BDCFFA20();
  swift_retain();
  *(void *)(inited + 128) = *sub_1BDD00C68();
  swift_retain();
  *(void *)(inited + 136) = *sub_1BDD00BE8();
  swift_retain();
  *(void *)(inited + 144) = *sub_1BDCFFFF0();
  swift_retain();
  *(void *)(inited + 152) = *sub_1BDD0018C();
  swift_retain();
  *(void *)(inited + 160) = *sub_1BDCFF998();
  sub_1BDDAFFD8();
  if (inited >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    unint64_t v2 = MEMORY[0x1E4FBC870];
    goto LABEL_6;
  }
  uint64_t v1 = *(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  if (!v1) {
    goto LABEL_5;
  }
LABEL_3:
  unint64_t v2 = sub_1BDCE0EA8(inited);
LABEL_6:
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EBA29310 = v2;
  return result;
}

uint64_t sub_1BDCF69AC(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_1BDCF69F8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *(unsigned char *)(v6 + 32) = a3;
  return sub_1BDCF6AC4();
}

uint64_t sub_1BDCF6A48()
{
  return sub_1BDCF6AC4();
}

uint64_t sub_1BDCF6A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  return sub_1BDCF6AC4();
}

uint64_t sub_1BDCF6AC4()
{
  return v0;
}

uint64_t sub_1BDCF6ACC()
{
  if (qword_1EBA29318 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBA29310;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDDB4450;
  swift_bridgeObjectRetain();
  *(void *)(inited + 32) = *sub_1BDCFFB30();
  swift_retain();
  *(void *)(inited + 40) = *sub_1BDCFFAA8();
  swift_retain();
  *(void *)(inited + 48) = *sub_1BDCFF75C();
  swift_retain();
  *(void *)(inited + 56) = *sub_1BDD00538();
  swift_retain();
  *(void *)(inited + 64) = *sub_1BDCFF6D4();
  swift_retain();
  *(void *)(inited + 72) = *sub_1BDCFF3E4();
  swift_retain();
  *(void *)(inited + 80) = *sub_1BDD004B0();
  swift_retain();
  *(void *)(inited + 88) = *sub_1BDD01060();
  swift_retain();
  *(void *)(inited + 96) = *sub_1BDCFF898();
  swift_retain();
  *(void *)(inited + 104) = *sub_1BDCFF7E4();
  swift_retain();
  *(void *)(inited + 112) = *sub_1BDD003A0();
  swift_retain();
  *(void *)(inited + 120) = *sub_1BDD0010C();
  swift_retain();
  *(void *)(inited + 128) = *sub_1BDD010F0();
  swift_retain();
  *(void *)(inited + 136) = *sub_1BDCFF584();
  swift_retain();
  *(void *)(inited + 144) = *sub_1BDD002E4();
  swift_retain();
  *(void *)(inited + 152) = *sub_1BDD01170();
  swift_retain();
  *(void *)(inited + 160) = *sub_1BDCFF918();
  swift_retain();
  *(void *)(inited + 168) = *sub_1BDD00254();
  swift_retain();
  *(void *)(inited + 176) = *sub_1BDD00084();
  swift_retain();
  *(void *)(inited + 184) = *sub_1BDCFF618();
  swift_retain();
  *(void *)(inited + 192) = *sub_1BDD00FD8();
  swift_retain();
  *(void *)(inited + 200) = *sub_1BDD00F44();
  swift_retain();
  *(void *)(inited + 208) = *sub_1BDD00E1C();
  swift_retain();
  *(void *)(inited + 216) = *sub_1BDD00EB0();
  swift_retain();
  *(void *)(inited + 224) = *sub_1BDD00AE0();
  swift_retain();
  *(void *)(inited + 232) = *sub_1BDD00934();
  swift_retain();
  *(void *)(inited + 240) = *sub_1BDD00700();
  swift_retain();
  *(void *)(inited + 248) = *sub_1BDD00668();
  swift_retain();
  *(void *)(inited + 256) = *sub_1BDD005D0();
  swift_retain();
  *(void *)(inited + 264) = *sub_1BDD00CF8();
  swift_retain();
  *(void *)(inited + 272) = *sub_1BDD00D88();
  swift_retain();
  *(void *)(inited + 280) = *sub_1BDD008A0();
  swift_retain();
  *(void *)(inited + 288) = *sub_1BDD00A4C();
  swift_retain();
  *(void *)(inited + 296) = *sub_1BDD009BC();
  swift_retain();
  *(void *)(inited + 304) = *sub_1BDD00B68();
  swift_retain();
  *(void *)(inited + 312) = *sub_1BDD00788();
  swift_retain();
  *(void *)(inited + 320) = *sub_1BDD00810();
  sub_1BDDAFFD8();
  swift_retain();
  unint64_t v2 = sub_1BDCF089C(inited, v0);
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EBA29300 = v2;
  return result;
}

uint64_t sub_1BDCF6DE0(uint64_t a1, id *a2)
{
  char v3 = sub_1BDDAFD58();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1BDCF6E60()
{
  sub_1BDDAFD68();
  sub_1BDDB0558();
  sub_1BDDAFDB8();
  uint64_t v0 = sub_1BDDB0578();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BDCF6ED4()
{
  uint64_t v0 = sub_1BDDAFD68();
  uint64_t v2 = v1;
  if (v0 == sub_1BDDAFD68() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1BDDB04E8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_1BDCF81C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  _Block_object_dispose(&a45, 8);
  _Block_object_dispose(&a49, 8);
  _Block_object_dispose(&a55, 8);
  _Block_object_dispose((const void *)(v61 - 176), 8);
  _Block_object_dispose(&a61, 8);
  _Block_object_dispose((const void *)(v61 - 256), 8);
  _Block_object_dispose((const void *)(v61 - 224), 8);
  _Unwind_Resume(a1);
}

uint64_t calculateScanRequestLock_block_invoke(void *a1)
{
  id v1 = a1;
  if ([v1 tokenType] == 2 || objc_msgSend(v1, "tokenType") == 53)
  {
    uint64_t v2 = [v1 text];
    if ([v2 length] == 1)
    {
      uint64_t v3 = (void *)scan_options_stop__apostropheSet;
      uint64_t v4 = [v1 text];
      uint64_t v5 = objc_msgSend(v3, "characterIsMember:", objc_msgSend(v4, "characterAtIndex:", 0));
    }
    else
    {
      uint64_t v5 = 0;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

uint64_t __bid128_from_string(unsigned __int8 *a1, int a2, _DWORD *a3)
{
  uint64_t v113 = *MEMORY[0x1E4F143B8];
  int v108 = a2;
  long long v109 = 0uLL;
  if (!a1) {
    return xmmword_1BDDB57A0;
  }
  while (1)
  {
    unsigned int v5 = *a1;
    int v6 = (char)v5;
    if (v5 > 0x2E) {
      goto LABEL_77;
    }
    if (((1 << v5) & 0x100000200) == 0) {
      break;
    }
    ++a1;
  }
  if (((1 << v5) & 0x680000000000) == 0)
  {
    if (*a1)
    {
LABEL_77:
      if (((char)v5 - 58) >= 0xFFFFFFF6) {
        goto LABEL_6;
      }
    }
    else
    {
      int v6 = 0;
    }
    *(void *)&long long v109 = 0;
    if ((((_BYTE)v6 - 65) & 0xFEu) >= 0x1A) {
      int v32 = v6;
    }
    else {
      int v32 = v6 + 32;
    }
    if (v32 == 115)
    {
      int v47 = (char)a1[1];
      if (((a1[1] - 65) & 0xFEu) < 0x1A) {
        v47 += 32;
      }
      if (v47 == 110)
      {
        int v48 = (char)a1[2];
        if (((a1[2] - 65) & 0xFEu) < 0x1A) {
          v48 += 32;
        }
        if (v48 == 97)
        {
          int v49 = (char)a1[3];
          if (((a1[3] - 65) & 0xFEu) < 0x1A) {
            v49 += 32;
          }
          if (v49 == 110) {
            goto LABEL_129;
          }
        }
      }
    }
    else if (v32 == 105)
    {
      int v33 = (char)a1[1];
      if (((a1[1] - 65) & 0xFEu) < 0x1A) {
        v33 += 32;
      }
      if (v33 == 110)
      {
        int v34 = (char)a1[2];
        if (((a1[2] - 65) & 0xFEu) < 0x1A) {
          v34 += 32;
        }
        if (v34 == 102)
        {
          int v35 = (char)a1[3];
          if (!a1[3]) {
            goto LABEL_106;
          }
          if ((((_BYTE)v35 - 65) & 0xFEu) < 0x1A) {
            v35 += 32;
          }
          if (v35 == 105)
          {
            int v36 = (char)a1[4];
            if (((a1[4] - 65) & 0xFEu) < 0x1A) {
              v36 += 32;
            }
            if (v36 == 110)
            {
              int v37 = (char)a1[5];
              if (((a1[5] - 65) & 0xFEu) < 0x1A) {
                v37 += 32;
              }
              if (v37 == 105)
              {
                int v38 = (char)a1[6];
                if (((a1[6] - 65) & 0xFEu) < 0x1A) {
                  v38 += 32;
                }
                if (v38 == 116)
                {
                  int v39 = (char)a1[7];
                  if (((a1[7] - 65) & 0xFEu) < 0x1A) {
                    v39 += 32;
                  }
                  if (v39 == 121 && !a1[8])
                  {
LABEL_106:
                    unint64_t v18 = 0x7800000000000000;
                    goto LABEL_131;
                  }
                }
              }
            }
          }
        }
      }
    }
LABEL_130:
    unint64_t v18 = 0x7C00000000000000;
    goto LABEL_131;
  }
LABEL_6:
  int v7 = (char)a1[1];
  if (((a1[1] - 65) & 0xFEu) < 0x1A) {
    v7 += 32;
  }
  if (v7 == 115)
  {
    int v15 = (char)a1[2];
    if (((a1[2] - 65) & 0xFEu) < 0x1A) {
      v15 += 32;
    }
    if (v15 != 110) {
      goto LABEL_49;
    }
    int v16 = (char)a1[3];
    if (((a1[3] - 65) & 0xFEu) < 0x1A) {
      v16 += 32;
    }
    if (v16 != 97) {
      goto LABEL_49;
    }
    int v17 = (char)a1[4];
    if (((a1[4] - 65) & 0xFEu) < 0x1A) {
      v17 += 32;
    }
    if (v17 != 110) {
      goto LABEL_49;
    }
    *(void *)&long long v109 = 0;
    if (v5 == 45)
    {
      unint64_t v18 = 0xFE00000000000000;
LABEL_131:
      *((void *)&v109 + 1) = v18;
      return v109;
    }
LABEL_129:
    unint64_t v18 = 0x7E00000000000000;
    goto LABEL_131;
  }
  if (v7 == 105)
  {
    int v8 = (char)a1[2];
    if (((a1[2] - 65) & 0xFEu) < 0x1A) {
      v8 += 32;
    }
    if (v8 == 110)
    {
      int v9 = (char)a1[3];
      if (((a1[3] - 65) & 0xFEu) < 0x1A) {
        v9 += 32;
      }
      if (v9 == 102)
      {
        int v10 = (char)a1[4];
        if (!a1[4]) {
          goto LABEL_33;
        }
        if ((((_BYTE)v10 - 65) & 0xFEu) < 0x1A) {
          v10 += 32;
        }
        if (v10 == 105)
        {
          int v11 = (char)a1[5];
          if (((a1[5] - 65) & 0xFEu) < 0x1A) {
            v11 += 32;
          }
          if (v11 == 110)
          {
            int v12 = (char)a1[6];
            if (((a1[6] - 65) & 0xFEu) < 0x1A) {
              v12 += 32;
            }
            if (v12 == 105)
            {
              int v13 = (char)a1[7];
              if (((a1[7] - 65) & 0xFEu) < 0x1A) {
                v13 += 32;
              }
              if (v13 == 116)
              {
                int v14 = (char)a1[8];
                if (((a1[8] - 65) & 0xFEu) < 0x1A) {
                  v14 += 32;
                }
                if (v14 == 121 && !a1[9])
                {
LABEL_33:
                  *(void *)&long long v109 = 0;
                  if (v5 == 45)
                  {
                    unint64_t v18 = 0xF800000000000000;
                    goto LABEL_131;
                  }
                  if (v5 != 43) {
                    goto LABEL_130;
                  }
                  goto LABEL_106;
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_49:
  uint64_t v19 = (char)v5 == 45;
  uint64_t v20 = v19 << 63;
  if (v5 == 43) {
    LODWORD(v19) = 1;
  }
  if (v19) {
    id v21 = a1 + 1;
  }
  else {
    id v21 = a1;
  }
  int v22 = (char)*v21;
  if (v22 != 46 && (v22 - 58) <= 0xFFFFFFF5)
  {
LABEL_75:
    uint64_t v31 = v20 | 0x7C00000000000000;
    goto LABEL_76;
  }
  BOOL v24 = *v21 == 46;
  int v25 = v24;
  if (v24) {
    int64_t v26 = v21 + 1;
  }
  else {
    int64_t v26 = v21;
  }
  int v27 = *v26;
  if (v27 != 48)
  {
    LODWORD(v29) = 0;
LABEL_108:
    unsigned int v40 = (char)v27 - 48;
    if (v25)
    {
      if (v40 <= 9)
      {
        unint64_t v41 = 0;
        int v42 = 0;
        do
        {
          if (v41 > 0x21)
          {
            if (v41 <= 0x63) {
              v111[v41 - 1] = v27;
            }
            if ((char)v27 > 48) {
              int v42 = 1;
            }
          }
          else
          {
            v111[v41 - 1] = v27;
          }
          int v43 = (char)v26[v41 + 1];
          int v27 = v26[++v41];
        }
        while ((v43 - 48) < 0xA);
        LODWORD(v44) = 0;
        v26 += v41;
        LODWORD(v45) = v41;
        if (!v27) {
          goto LABEL_119;
        }
LABEL_143:
        if ((v27 & 0xFFFFFFDF) != 0x45) {
          return xmmword_1BDDB57A0;
        }
        int v51 = (char)v26[1];
        if ((v51 - 58) <= 0xFFFFFFF5
          && (v51 != 45 && v26[1] != 43 || ((char)v26[2] - 58) <= 0xFFFFFFF5))
        {
          return xmmword_1BDDB57A0;
        }
        if (v51 == 45)
        {
          int v27 = -1;
        }
        else
        {
          if (v26[1] != 43)
          {
            int v27 = 0;
            uint64_t v58 = 1;
LABEL_177:
            uint64_t v59 = &v26[v58];
            int v46 = v51 - 48;
            if (v51 == 48)
            {
              do
              {
                int v62 = *++v59;
                int v60 = v62;
              }
              while (v62 == 48);
            }
            else
            {
              int v61 = *++v59;
              int v60 = v61;
            }
            unsigned int v63 = v60 - 48;
            if (v63 <= 9)
            {
              uint64_t v64 = 1;
              do
              {
                int v46 = 10 * v46 + v63;
                unsigned int v63 = v59[v64] - 48;
              }
              while (v63 <= 9 && v64++ < 6);
            }
            goto LABEL_187;
          }
          int v27 = 0;
        }
        int v51 = (char)v26[2];
        uint64_t v58 = 2;
        goto LABEL_177;
      }
      int v42 = 0;
      LODWORD(v45) = 0;
      LODWORD(v41) = 0;
      LODWORD(v44) = 0;
      if (v27) {
        goto LABEL_143;
      }
    }
    else
    {
      if (v40 > 9)
      {
        int v42 = 0;
        LODWORD(v44) = 0;
      }
      else
      {
        unint64_t v44 = 0;
        int v42 = 0;
        do
        {
          if (v44 > 0x21)
          {
            if (v44 <= 0x63) {
              v111[v44 - 1] = v27;
            }
            if ((char)v27 > 48) {
              int v42 = 1;
            }
          }
          else
          {
            v111[v44 - 1] = v27;
          }
          int v50 = (char)v26[v44 + 1];
          int v27 = v26[++v44];
        }
        while ((v50 - 48) < 0xA);
        v26 += v44;
      }
      if (v27 == 46)
      {
        int v54 = (char)*++v26;
        int v53 = v54;
        if (!v54)
        {
          LODWORD(v41) = 0;
          int v27 = 0;
          int v46 = 0;
          LODWORD(v45) = v44;
          goto LABEL_187;
        }
        int v27 = v53;
        if ((v53 - 48) > 9)
        {
          LODWORD(v45) = v44;
        }
        else
        {
          unint64_t v45 = v44;
          do
          {
            if (v45 > 0x21)
            {
              if (v45 <= 0x63) {
                v111[v45 - 1] = v27;
              }
              if ((char)v27 > 48) {
                int v42 = 1;
              }
            }
            else
            {
              v111[v45 - 1] = v27;
            }
            int v55 = (char)*++v26;
            int v27 = v55;
            ++v45;
          }
          while ((v55 - 48) < 0xA);
        }
        LODWORD(v41) = v45 - v44;
        if (v27) {
          goto LABEL_143;
        }
      }
      else
      {
        LODWORD(v41) = 0;
        LODWORD(v45) = v44;
        if (v27) {
          goto LABEL_143;
        }
      }
    }
LABEL_119:
    int v46 = 0;
LABEL_187:
    int v66 = (v46 + v27) ^ v27;
    if ((int)v45 <= 34)
    {
      int v67 = v66 - (v41 + v29) + 6176;
      if (v67 < 0)
      {
        *(void *)&long long v109 = 0;
        *((void *)&v109 + 1) = v20;
      }
      if (v45)
      {
        unint64_t v68 = v110 - 48;
        if ((int)v45 > 19)
        {
          uint64_t v80 = (v45 - 17);
          uint64_t v81 = v80 - 1;
          unint64_t v82 = v111;
          do
          {
            uint64_t v83 = *v82++;
            unint64_t v68 = v83 + 10 * v68 - 48;
            --v81;
          }
          while (v81);
          uint64_t v84 = v111[v80 - 1] - 48;
          int v85 = v45 - 16;
          unint64_t v86 = &v111[(v45 - 16) - 1];
          do
          {
            uint64_t v87 = *v86++;
            uint64_t v84 = v87 + 10 * v84 - 48;
            ++v85;
          }
          while ((int)v45 > v85);
          unint64_t v88 = 23283064 * v68
              + 1569325056 * HIDWORD(v68)
              + ((1569325056 * (unint64_t)v68) >> 32);
          unint64_t v72 = (__PAIR128__(23283064 * (unint64_t)HIDWORD(v68), (1569325056 * v68) | (v88 << 32))
               + __PAIR128__(HIDWORD(v88), v84)) >> 64;
          unint64_t v68 = ((1569325056 * v68) | (v88 << 32)) + v84;
        }
        else
        {
          if ((int)v45 >= 2)
          {
            uint64_t v69 = v45 - 1;
            unint64_t v70 = v111;
            do
            {
              uint64_t v71 = *v70++;
              unint64_t v68 = v71 + 10 * v68 - 48;
              --v69;
            }
            while (v69);
          }
          unint64_t v72 = 0;
        }
      }
      else
      {
        unint64_t v72 = 0;
        unint64_t v68 = 0;
      }
LABEL_235:
      bid_get_BID128_1188(&v109, v20, v67, v68, v72, &v108, a3);
      return v109;
    }
    int v67 = v44 - v29 + 6142 + v66;
    if (v67 < 0)
    {
      *(void *)&long long v109 = 0;
      *((void *)&v109 + 1) = v20;
    }
    uint64_t v73 = 0;
    unint64_t v74 = v110 - 48;
    do
      unint64_t v74 = (char)v111[v73++] + 10 * v74 - 48;
    while (v73 != 16);
    uint64_t v75 = 0;
    uint64_t v76 = v111[16] - 48;
    do
    {
      uint64_t v77 = (char)v111[v75 + 17];
      uint64_t v76 = v77 + 10 * v76 - 48;
      ++v75;
    }
    while (v75 != 16);
    BOOL v78 = 0;
    uint64_t v79 = 100000000000000000;
    switch(a2)
    {
      case 0:
        BOOL v78 = v112[0] > 52;
        if (v112[0] == 53)
        {
          if (v67 < 0 || (v77 & 1) == 0) {
            goto LABEL_246;
          }
        }
        else if (v67 < 0)
        {
LABEL_246:
          if (v67 < 0) {
            int v104 = 34;
          }
          else {
            int v104 = 35;
          }
          if (v67 >= 0) {
            BOOL v78 = 0;
          }
          if (v104 < (int)v45)
          {
            uint64_t v105 = &v111[v104 - 1];
            unint64_t v106 = v45 - (unint64_t)v104;
            do
            {
              int v107 = *v105++;
              if (v107 > 48) {
                goto LABEL_256;
              }
              --v106;
            }
            while (v106);
          }
          goto LABEL_223;
        }
LABEL_230:
        unint64_t v99 = (v79 & 0xFFEE0000) * (unint64_t)v74;
        unint64_t v100 = HIDWORD(v79) * (unint64_t)v74
             + (v79 & 0xFFEE0000) * (unint64_t)HIDWORD(v74)
             + HIDWORD(v99);
        unint64_t v68 = v76 + v78 + (v99 & 0xFFFE0000) + (v100 << 32);
        if (v68 >= v76 + v78) {
          unint64_t v72 = HIDWORD(v100) + HIDWORD(v79) * (unint64_t)HIDWORD(v74);
        }
        else {
          unint64_t v72 = HIDWORD(v100) + HIDWORD(v79) * (unint64_t)HIDWORD(v74) + 1;
        }
        if (v42) {
          *a3 |= 0x20u;
        }
        goto LABEL_235;
      case 1:
        if ((char)v5 != 45) {
          goto LABEL_222;
        }
        char v89 = v112;
        uint64_t v90 = v45 - 34;
        BOOL v78 = 1;
        while (1)
        {
          int v91 = *v89++;
          if (v91 > 48) {
            goto LABEL_223;
          }
          if (!--v90) {
            goto LABEL_222;
          }
        }
      case 2:
        if (v5 == 45) {
          goto LABEL_222;
        }
        uint64_t v92 = v112;
        uint64_t v93 = v45 - 34;
        BOOL v78 = 1;
        while (1)
        {
          int v94 = *v92++;
          if (v94 > 48) {
            goto LABEL_223;
          }
          if (!--v93)
          {
LABEL_222:
            BOOL v78 = 0;
            goto LABEL_223;
          }
        }
      case 4:
        BOOL v78 = v112[0] > 52;
        if ((v67 & 0x80000000) == 0) {
          goto LABEL_230;
        }
        uint64_t v101 = v112;
        uint64_t v102 = v45 - 34;
        while (1)
        {
          int v103 = *v101++;
          if (v103 >= 49) {
            break;
          }
          if (!--v102) {
            goto LABEL_223;
          }
        }
LABEL_256:
        BOOL v78 = 1;
LABEL_223:
        uint64_t v95 = 10 * v76;
        uint64_t v96 = 1000000000000000000;
        if (v67 <= 0xFFFFFFDE)
        {
          uint64_t v96 = 100000000000000000;
          uint64_t v95 = v76;
        }
        int v97 = v67 - (v67 > 0xFFFFFFDE);
        if (v97 == -34 && v74 > 0xB1A2BC2EC50000)
        {
          int v97 = -34;
          BOOL v98 = 0;
        }
        else
        {
          BOOL v98 = v78;
        }
        if (v67 < 0)
        {
          int v67 = v97;
          uint64_t v79 = v96;
          BOOL v78 = v98;
          uint64_t v76 = v95;
        }
        goto LABEL_230;
      default:
        goto LABEL_223;
    }
  }
  unint64_t v28 = 0;
  while (1)
  {
    int v27 = v26[1];
    unint64_t v29 = v25 ? v28 + 1 : v28;
    if (v27 != 46) {
      break;
    }
    if (v25) {
      goto LABEL_75;
    }
    int v30 = v26[2];
    v26 += 2;
    int v27 = v30;
    if (!v30)
    {
      uint64_t v57 = 0x3040000000000000 - (v28 << 49);
      goto LABEL_172;
    }
    int v25 = 1;
LABEL_73:
    unint64_t v28 = v29;
    if (v27 != 48) {
      goto LABEL_108;
    }
  }
  if (v26[1])
  {
    ++v26;
    goto LABEL_73;
  }
  uint64_t v56 = 6176;
  if (v29 < 0x1820) {
    uint64_t v56 = v29;
  }
  uint64_t v57 = 0x3040000000000000 - (v56 << 49);
LABEL_172:
  uint64_t v31 = v57 | v20;
LABEL_76:
  *(void *)&long long v109 = 0;
  *((void *)&v109 + 1) = v31;
  return v109;
}

BOOL __bid128_quiet_equal(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, _DWORD *a5)
{
  if ((~a2 & 0x7C00000000000000) == 0 || (a4 & 0x7C00000000000000) == 0x7C00000000000000)
  {
    if ((~a2 & 0x7E00000000000000) == 0 || (a4 & 0x7E00000000000000) == 0x7E00000000000000)
    {
      BOOL result = 0;
      *a5 |= 1u;
      return result;
    }
    return 0;
  }
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  uint64_t v7 = a4 & 0x7800000000000000;
  if ((~a2 & 0x7800000000000000) == 0) {
    return v7 == 0x7800000000000000 && ((a4 ^ a2) & 0x8000000000000000) == 0;
  }
  if (v7 == 0x7800000000000000) {
    return 0;
  }
  unint64_t v8 = a2 & 0x1FFFFFFFFFFFFLL;
  BOOL v9 = (~a2 & 0x6000000000000000) == 0;
  if (a1 > 0x378D8E63FFFFFFFFLL && v8 == 0x1ED09BEAD87C0) {
    BOOL v9 = 1;
  }
  if (v8 > 0x1ED09BEAD87C0) {
    BOOL v9 = 1;
  }
  uint64_t v11 = a4 & 0x1FFFFFFFFFFFFLL;
  if ((a4 & 0x1FFFFFFFFFFFFLL) <= 0x1ED09BEAD87C0)
  {
    if (!(v8 | a1)) {
      BOOL v9 = 1;
    }
    BOOL v14 = a3 >= 0x378D8E6400000000 && v11 == 0x1ED09BEAD87C0;
    int v13 = !v9;
    if (!v14 && (a4 & 0x6000000000000000) != 0x6000000000000000)
    {
      int v12 = (v11 | a3) == 0;
      if (v11 | a3) {
        char v15 = 1;
      }
      else {
        char v15 = !v9;
      }
      if ((v15 & 1) == 0) {
        return 1;
      }
      goto LABEL_41;
    }
    int v12 = 1;
  }
  else
  {
    if (!(v8 | a1)) {
      LOBYTE(v9) = 1;
    }
    int v12 = 1;
    int v13 = 1;
  }
  BOOL result = 1;
  if (v9) {
    return result;
  }
LABEL_41:
  BOOL result = 0;
  if (v12 == v13 || ((a4 ^ a2) & 0x8000000000000000) != 0) {
    return result;
  }
  uint64_t v16 = (a4 >> 49) & 0x3FFF;
  if (((a2 >> 49) & 0x3FFF) <= v16)
  {
    unint64_t v17 = a4 & 0x1FFFFFFFFFFFFLL;
    unint64_t v18 = a3;
    uint64_t v11 = a2 & 0x1FFFFFFFFFFFFLL;
    a3 = a1;
    uint64_t v19 = (a4 >> 49) & 0x3FFF;
    uint64_t v16 = (a2 >> 49) & 0x3FFF;
  }
  else
  {
    unint64_t v17 = a2 & 0x1FFFFFFFFFFFFLL;
    unint64_t v18 = a1;
    uint64_t v19 = (a2 >> 49) & 0x3FFF;
  }
  int v20 = v19 - v16;
  if (v20 > 33) {
    return 0;
  }
  BOOL result = 0;
  if (v20 < 20)
  {
    unint64_t v56 = __bid_ten2k64[v20];
    unint64_t v57 = HIDWORD(v56);
    unint64_t v58 = HIDWORD(v17);
    unint64_t v59 = HIDWORD(v56) * (unint64_t)v17;
    unint64_t v60 = v56 * (unint64_t)v17;
    unint64_t v61 = HIDWORD(v56) * (unint64_t)v18;
    unint64_t v62 = v56 * (unint64_t)v18;
    unint64_t v63 = HIDWORD(v61) + HIDWORD(v56) * (unint64_t)HIDWORD(v18);
    unint64_t v64 = v56 * (unint64_t)HIDWORD(v18);
    unint64_t v65 = v56 * (unint64_t)v58 + v59 + HIDWORD(v60);
    unint64_t v66 = v64 + v61 + HIDWORD(v62);
    unint64_t v67 = v63 + HIDWORD(v66);
    unint64_t v68 = (v60 | ((unint64_t)v65 << 32)) + v67;
    if (v68 == v11
      && v68 >= v67
      && HIDWORD(v59) + v57 * (unint64_t)v58 == -(uint64_t)HIDWORD(v65))
    {
      return (v62 | ((unint64_t)v66 << 32)) == a3;
    }
  }
  else
  {
    int v22 = (void *)((char *)&__bid_ten2k128 + 16 * (v20 - 20));
    unint64_t v21 = v22[1];
    unint64_t v23 = HIDWORD(v21);
    unint64_t v24 = v21 * (unint64_t)HIDWORD(v18);
    unint64_t v25 = HIDWORD(v24) + HIDWORD(v21) * (unint64_t)HIDWORD(v18);
    uint64_t v26 = HIDWORD(*v22);
    unint64_t v27 = *v22 * (unint64_t)HIDWORD(v18);
    unint64_t v28 = HIDWORD(v27) + HIDWORD(*v22) * (unint64_t)HIDWORD(v18);
    unint64_t v29 = HIDWORD(v21) * (unint64_t)v18
        + v24
        + ((v21 * (unint64_t)v18) >> 32);
    unint64_t v30 = (v21 * v18) | ((unint64_t)v29 << 32);
    unint64_t v31 = HIDWORD(v29);
    unint64_t v32 = *v22 * (unint64_t)v18;
    unint64_t v33 = HIDWORD(*v22) * (unint64_t)v18 + v27 + HIDWORD(v32);
    unint64_t v34 = v28 + HIDWORD(v33);
    BOOL v35 = __CFADD__(v30, v34);
    unint64_t v36 = v30 + v34;
    unint64_t v37 = v31 + v35 + v25;
    unint64_t v38 = HIDWORD(v17);
    unint64_t v39 = v21 * (unint64_t)HIDWORD(v17);
    unint64_t v40 = v21 * (unint64_t)v17;
    unint64_t v41 = HIDWORD(v39) + v23 * (unint64_t)HIDWORD(v17);
    unint64_t v42 = v23 * (unint64_t)v17 + v39 + HIDWORD(v40);
    unint64_t v43 = HIDWORD(v42);
    unint64_t v44 = v40 | ((unint64_t)v42 << 32);
    unint64_t v45 = *v22 * (unint64_t)HIDWORD(v17);
    unint64_t v46 = *v22 * (unint64_t)v17;
    unint64_t v47 = v26 * (unint64_t)v17 + v45 + HIDWORD(v46);
    unint64_t v48 = v46 | ((unint64_t)v47 << 32);
    unsigned long long v49 = __PAIR128__(v41, v44)
        + __PAIR128__(v43, HIDWORD(v45) + v26 * (unint64_t)v38 + HIDWORD(v47));
    unint64_t v50 = v36 + v48;
    BOOL v35 = __CFADD__(__CFADD__(v36, v48), (void)v49);
    uint64_t v51 = __CFADD__(v36, v48) + (void)v49;
    unsigned int v52 = v35;
    uint64_t v53 = v37 + v51;
    if (__CFADD__(v37, v51)) {
      uint64_t v54 = 1;
    }
    else {
      uint64_t v54 = v52;
    }
    if (v50 == v11 && !v53 && *((void *)&v49 + 1) == v54 << 63 >> 63) {
      return (v32 | ((unint64_t)v33 << 32)) == a3;
    }
  }
  return result;
}

unsigned char *sub_1BDCFA7E0(unsigned char *result, char a2)
{
  *BOOL result = a2;
  return result;
}

void CalculateExpression.RichToken.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
}

void sub_1BDCFA800()
{
}

void sub_1BDCFA818()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression___updateGraphable) = *(unsigned char *)(v0 + 24);
}

uint64_t dispatch thunk of CalculateExpression.RichToken.text.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.left.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t static CalculateExpression.Operation.subtract.getter()
{
  return sub_1BDCF69AC(&qword_1EBA297B0);
}

uint64_t static CalculateExpression.Operation.multiply.getter()
{
  return sub_1BDCF69AC(&qword_1EBA297A0);
}

uint64_t static CalculateExpression.Operation.percent.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29760);
}

uint64_t static CalculateExpression.Operation.decimal.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29750);
}

uint64_t static CalculateExpression.Operation.negate.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29710);
}

uint64_t static CalculateExpression.Operation.equals.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29700);
}

uint64_t static CalculateExpression.Operation.divide.getter()
{
  return sub_1BDCF69AC(&qword_1EBA296F0);
}

uint64_t static CalculateExpression.Operation.digit9.getter()
{
  return sub_1BDCF69AC(&qword_1EBA296E0);
}

uint64_t static CalculateExpression.Operation.digit8.getter()
{
  return sub_1BDCF69AC(&qword_1EBA296D0);
}

uint64_t static CalculateExpression.Operation.digit7.getter()
{
  return sub_1BDCF69AC(&qword_1EBA296C0);
}

uint64_t static CalculateExpression.Operation.digit6.getter()
{
  return sub_1BDCF69AC(&qword_1EBA296B0);
}

uint64_t static CalculateExpression.Operation.digit5.getter()
{
  return sub_1BDCF69AC(&qword_1EBA296A0);
}

uint64_t static CalculateExpression.Operation.digit4.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29690);
}

uint64_t static CalculateExpression.Operation.digit3.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29680);
}

uint64_t static CalculateExpression.Operation.digit2.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29670);
}

uint64_t static CalculateExpression.Operation.digit1.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29660);
}

uint64_t static CalculateExpression.Operation.digit0.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29650);
}

uint64_t static CalculateExpression.Operation.clear.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29610);
}

uint64_t static CalculateExpression.Operation.add.getter()
{
  return sub_1BDCF69AC(&qword_1EBA295B0);
}

void sub_1BDCFAB2C()
{
}

void sub_1BDCFAB44()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression___format) = *(void *)(v0 + 24);
}

void sub_1BDCFAB58()
{
}

void sub_1BDCFAB70()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression___engine) = *(void *)(v0 + 24);
}

ValueMetadata *type metadata accessor for CalculateExpression.Base()
{
  return &type metadata for CalculateExpression.Base;
}

void sub_1BDCFAB94()
{
}

void sub_1BDCFABAC()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression___allowPartialExpressions) = *(unsigned char *)(v0 + 24);
}

void sub_1BDCFABC4()
{
}

void sub_1BDCFABDC()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression___flexibleFractionDigits) = *(unsigned char *)(v0 + 24);
}

void sub_1BDCFABF4()
{
}

void sub_1BDCFAC0C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression___assumeDegrees) = *(unsigned char *)(v0 + 24);
}

void sub_1BDCFAC24()
{
}

void sub_1BDCFAC3C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression___updateExpression) = *(unsigned char *)(v0 + 24);
}

void sub_1BDCFB2DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1BDCFD1C0(uint64_t *a1, uint64_t *a2)
{
  return _s9Calculate0A10ExpressionC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

ValueMetadata *type metadata accessor for CalculateExpression.TokenType()
{
  return &type metadata for CalculateExpression.TokenType;
}

uint64_t CalculateExpression.TokenType.isWordBasedBitwiseOperator.getter()
{
  return sub_1BDCE8614(qword_1EBA28FF0, &qword_1EBA2AF48);
}

uint64_t dispatch thunk of CalculateExpression.RichToken.isRoot.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.right.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.formattedText(parent:significantDigits:)(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v3 + 632))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of CalculateExpression.RichToken.isImplicit.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t static CalculateExpression.Operation.rollOut.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29770);
}

uint64_t static CalculateExpression.Operation.rollIn.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29730);
}

uint64_t static CalculateExpression.Operation.swap.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29600);
}

uint64_t static CalculateExpression.Operation.drop.getter()
{
  return sub_1BDCF69AC(&qword_1EBA295D0);
}

uint64_t CalculateExpression.parent.getter()
{
  return sub_1BDCE04B4();
}

uint64_t CalculateExpression.assumeDegrees.getter()
{
  return sub_1BDCF015C((uint64_t)&unk_1BDDB4830, &OBJC_IVAR____TtC9Calculate19CalculateExpression___assumeDegrees);
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.editable.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.tokens.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.parent.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.replaceOperand.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.activeError.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

void __Block_byref_object_dispose__587(uint64_t a1)
{
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t __Block_byref_object_copy__586(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t __CalculateLogForCategory_block_invoke()
{
  CalculateLogForCategory_logObjects_0 = (uint64_t)os_log_create("com.apple.calculate", "Base");
  return MEMORY[0x1F41817F8]();
}

id CalculateLogForCategory()
{
  if (CalculateLogForCategory_loggingToken != -1) {
    dispatch_once(&CalculateLogForCategory_loggingToken, &__block_literal_global_96);
  }
  uint64_t v0 = (void *)CalculateLogForCategory_logObjects_0;
  return v0;
}

void type metadata accessor for CalculateFormat(uint64_t a1)
{
}

void type metadata accessor for CalculateEngine(uint64_t a1)
{
}

uint64_t sub_1BDCFF1B0()
{
  return sub_1BDCFF314(&qword_1EBA26920, 255, (void (*)(uint64_t))type metadata accessor for CalculateKey);
}

uint64_t sub_1BDCFF1FC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for WeakRef()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1BDCFF258()
{
  qword_1EBA2AF88 = (uint64_t)&unk_1F1867200;
}

uint64_t type metadata accessor for CalculateDocument()
{
  uint64_t result = qword_1EBA2ACD0;
  if (!qword_1EBA2ACD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BDCFF2C0()
{
  uint64_t result = sub_1BDCF0210((uint64_t)&unk_1F1867A48);
  qword_1EBA2AF48 = result;
  return result;
}

uint64_t sub_1BDCFF2E8()
{
  uint64_t result = sub_1BDCF0210((uint64_t)&unk_1F1866DD8);
  qword_1EBA29968 = result;
  return result;
}

uint64_t sub_1BDCFF314(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BDCFF35C()
{
  unint64_t result = qword_1EBA268A0;
  if (!qword_1EBA268A0)
  {
    type metadata accessor for CalculateExpression.Operation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA268A0);
  }
  return result;
}

uint64_t sub_1BDCFF3B0()
{
  type metadata accessor for CalculateExpression.FactorialOperation();
  uint64_t result = sub_1BDCF6A48();
  qword_1EBA297B8 = result;
  return result;
}

uint64_t *sub_1BDCFF3E4()
{
  if (qword_1EBA297C0 != -1) {
    swift_once();
  }
  return &qword_1EBA297B8;
}

uint64_t sub_1BDCFF430()
{
  type metadata accessor for CalculateExpression.BasicOperatorOperation();
  uint64_t result = sub_1BDCF60D4(45, 0xE100000000000000);
  qword_1EBA297A8 = result;
  return result;
}

uint64_t *sub_1BDCFF46C()
{
  if (qword_1EBA297B0 != -1) {
    swift_once();
  }
  return &qword_1EBA297A8;
}

uint64_t sub_1BDCFF4B8()
{
  type metadata accessor for CalculateExpression.BasicOperatorOperation();
  uint64_t result = sub_1BDCF60D4(38851, 0xA200000000000000);
  qword_1EBA29798 = result;
  return result;
}

uint64_t *sub_1BDCFF4F4()
{
  if (qword_1EBA297A0 != -1) {
    swift_once();
  }
  return &qword_1EBA29798;
}

uint64_t sub_1BDCFF540()
{
  type metadata accessor for CalculateExpression.RootOperation();
  char v0 = sub_1BDD013AC();
  uint64_t result = sub_1BDCF5FD8(51, 0xE100000000000000, v0 & 1);
  qword_1EBA29788 = result;
  return result;
}

uint64_t *sub_1BDCFF584()
{
  if (qword_1EBA29790 != -1) {
    swift_once();
  }
  return &qword_1EBA29788;
}

uint64_t sub_1BDCFF5D0()
{
  type metadata accessor for CalculateExpression.FunctionOperation();
  char v0 = sub_1BDD013AC();
  uint64_t result = sub_1BDCF69F8(7233908, 0xE300000000000000, v0 & 1);
  qword_1EBA29778 = result;
  return result;
}

uint64_t *sub_1BDCFF618()
{
  if (qword_1EBA29780 != -1) {
    swift_once();
  }
  return &qword_1EBA29778;
}

uint64_t sub_1BDCFF664()
{
  type metadata accessor for CalculateExpression.RollOutOperation();
  uint64_t result = sub_1BDCF6A48();
  qword_1EBA29768 = result;
  return result;
}

uint64_t sub_1BDCFF698()
{
  type metadata accessor for CalculateExpression.BasicOperatorOperation();
  uint64_t result = sub_1BDCF60D4(37, 0xE100000000000000);
  qword_1EBA29758 = result;
  return result;
}

uint64_t *sub_1BDCFF6D4()
{
  if (qword_1EBA29760 != -1) {
    swift_once();
  }
  return &qword_1EBA29758;
}

uint64_t sub_1BDCFF720()
{
  type metadata accessor for CalculateExpression.LiteralOperation();
  uint64_t result = sub_1BDCF6A7C(46, 0xE100000000000000);
  qword_1EBA29748 = result;
  return result;
}

uint64_t *sub_1BDCFF75C()
{
  if (qword_1EBA29750 != -1) {
    swift_once();
  }
  return &qword_1EBA29748;
}

uint64_t sub_1BDCFF7A8()
{
  type metadata accessor for CalculateExpression.PowerOperation();
  uint64_t result = sub_1BDCF6A7C(50, 0xE100000000000000);
  qword_1EBA29738 = result;
  return result;
}

uint64_t *sub_1BDCFF7E4()
{
  if (qword_1EBA29740 != -1) {
    swift_once();
  }
  return &qword_1EBA29738;
}

uint64_t sub_1BDCFF830()
{
  type metadata accessor for CalculateExpression.RollInOperation();
  uint64_t result = sub_1BDCF6A48();
  qword_1EBA29728 = result;
  return result;
}

uint64_t sub_1BDCFF864()
{
  type metadata accessor for CalculateExpression.RandOperation();
  uint64_t result = sub_1BDD013FC();
  qword_1EBA29718 = result;
  return result;
}

uint64_t *sub_1BDCFF898()
{
  if (qword_1EBA29720 != -1) {
    swift_once();
  }
  return &qword_1EBA29718;
}

uint64_t sub_1BDCFF8E4()
{
  type metadata accessor for CalculateExpression.NegateOperation();
  uint64_t result = sub_1BDCF6A48();
  qword_1EBA29708 = result;
  return result;
}

uint64_t *sub_1BDCFF918()
{
  if (qword_1EBA29710 != -1) {
    swift_once();
  }
  return &qword_1EBA29708;
}

uint64_t sub_1BDCFF964()
{
  type metadata accessor for CalculateExpression.EqualsOperation();
  uint64_t result = sub_1BDCF6A48();
  qword_1EBA296F8 = result;
  return result;
}

uint64_t *sub_1BDCFF998()
{
  if (qword_1EBA29700 != -1) {
    swift_once();
  }
  return &qword_1EBA296F8;
}

uint64_t sub_1BDCFF9E4()
{
  type metadata accessor for CalculateExpression.BasicOperatorOperation();
  uint64_t result = sub_1BDCF60D4(47043, 0xA200000000000000);
  qword_1EBA296E8 = result;
  return result;
}

uint64_t *sub_1BDCFFA20()
{
  if (qword_1EBA296F0 != -1) {
    swift_once();
  }
  return &qword_1EBA296E8;
}

uint64_t sub_1BDCFFA6C()
{
  type metadata accessor for CalculateExpression.LiteralOperation();
  uint64_t result = sub_1BDCF6A7C(57, 0xE100000000000000);
  qword_1EBA296D8 = result;
  return result;
}

uint64_t *sub_1BDCFFAA8()
{
  if (qword_1EBA296E0 != -1) {
    swift_once();
  }
  return &qword_1EBA296D8;
}

uint64_t sub_1BDCFFAF4()
{
  type metadata accessor for CalculateExpression.LiteralOperation();
  uint64_t result = sub_1BDCF6A7C(56, 0xE100000000000000);
  qword_1EBA296C8 = result;
  return result;
}

uint64_t *sub_1BDCFFB30()
{
  if (qword_1EBA296D0 != -1) {
    swift_once();
  }
  return &qword_1EBA296C8;
}

uint64_t sub_1BDCFFB7C()
{
  type metadata accessor for CalculateExpression.LiteralOperation();
  uint64_t result = sub_1BDCF6A7C(55, 0xE100000000000000);
  qword_1EBA296B8 = result;
  return result;
}

uint64_t *sub_1BDCFFBB8()
{
  if (qword_1EBA296C0 != -1) {
    swift_once();
  }
  return &qword_1EBA296B8;
}

uint64_t sub_1BDCFFC04()
{
  type metadata accessor for CalculateExpression.LiteralOperation();
  uint64_t result = sub_1BDCF6A7C(54, 0xE100000000000000);
  qword_1EBA296A8 = result;
  return result;
}

uint64_t *sub_1BDCFFC40()
{
  if (qword_1EBA296B0 != -1) {
    swift_once();
  }
  return &qword_1EBA296A8;
}

uint64_t sub_1BDCFFC8C()
{
  type metadata accessor for CalculateExpression.LiteralOperation();
  uint64_t result = sub_1BDCF6A7C(53, 0xE100000000000000);
  qword_1EBA29698 = result;
  return result;
}

uint64_t *sub_1BDCFFCC8()
{
  if (qword_1EBA296A0 != -1) {
    swift_once();
  }
  return &qword_1EBA29698;
}

uint64_t sub_1BDCFFD14()
{
  type metadata accessor for CalculateExpression.LiteralOperation();
  uint64_t result = sub_1BDCF6A7C(52, 0xE100000000000000);
  qword_1EBA29688 = result;
  return result;
}

uint64_t *sub_1BDCFFD50()
{
  if (qword_1EBA29690 != -1) {
    swift_once();
  }
  return &qword_1EBA29688;
}

uint64_t sub_1BDCFFD9C()
{
  type metadata accessor for CalculateExpression.LiteralOperation();
  uint64_t result = sub_1BDCF6A7C(51, 0xE100000000000000);
  qword_1EBA29678 = result;
  return result;
}

uint64_t *sub_1BDCFFDD8()
{
  if (qword_1EBA29680 != -1) {
    swift_once();
  }
  return &qword_1EBA29678;
}

uint64_t sub_1BDCFFE24()
{
  type metadata accessor for CalculateExpression.LiteralOperation();
  uint64_t result = sub_1BDCF6A7C(50, 0xE100000000000000);
  qword_1EBA29668 = result;
  return result;
}

uint64_t *sub_1BDCFFE60()
{
  if (qword_1EBA29670 != -1) {
    swift_once();
  }
  return &qword_1EBA29668;
}

uint64_t sub_1BDCFFEAC()
{
  type metadata accessor for CalculateExpression.LiteralOperation();
  uint64_t result = sub_1BDCF6A7C(49, 0xE100000000000000);
  qword_1EBA29658 = result;
  return result;
}

uint64_t *sub_1BDCFFEE8()
{
  if (qword_1EBA29660 != -1) {
    swift_once();
  }
  return &qword_1EBA29658;
}

uint64_t sub_1BDCFFF34()
{
  type metadata accessor for CalculateExpression.LiteralOperation();
  uint64_t result = sub_1BDCF6A7C(48, 0xE100000000000000);
  qword_1EBA29648 = result;
  return result;
}

uint64_t *sub_1BDCFFF70()
{
  if (qword_1EBA29650 != -1) {
    swift_once();
  }
  return &qword_1EBA29648;
}

uint64_t sub_1BDCFFFBC()
{
  type metadata accessor for CalculateExpression.DeleteOperation();
  uint64_t result = sub_1BDCF6A48();
  qword_1EBA29638 = result;
  return result;
}

uint64_t *sub_1BDCFFFF0()
{
  if (qword_1EBA29640 != -1) {
    swift_once();
  }
  return &qword_1EBA29638;
}

uint64_t sub_1BDD0003C()
{
  type metadata accessor for CalculateExpression.FunctionOperation();
  char v0 = sub_1BDD013AC();
  uint64_t result = sub_1BDCF69F8(7565155, 0xE300000000000000, v0 & 1);
  qword_1EBA29628 = result;
  return result;
}

uint64_t *sub_1BDD00084()
{
  if (qword_1EBA29630 != -1) {
    swift_once();
  }
  return &qword_1EBA29628;
}

uint64_t sub_1BDD000D0()
{
  type metadata accessor for CalculateExpression.PowerOperation();
  uint64_t result = sub_1BDCF6A7C(0, 0xE000000000000000);
  qword_1EBA29618 = result;
  return result;
}

uint64_t *sub_1BDD0010C()
{
  if (qword_1EBA29620 != -1) {
    swift_once();
  }
  return &qword_1EBA29618;
}

uint64_t sub_1BDD00158()
{
  type metadata accessor for CalculateExpression.ClearOperation();
  uint64_t result = sub_1BDCF6A48();
  qword_1EBA29608 = result;
  return result;
}

uint64_t *sub_1BDD0018C()
{
  if (qword_1EBA29610 != -1) {
    swift_once();
  }
  return &qword_1EBA29608;
}

uint64_t sub_1BDD001D8()
{
  type metadata accessor for CalculateExpression.SwapOperation();
  uint64_t result = sub_1BDCF6A48();
  qword_1EBA295F8 = result;
  return result;
}

uint64_t sub_1BDD0020C()
{
  type metadata accessor for CalculateExpression.FunctionOperation();
  char v0 = sub_1BDD013AC();
  uint64_t result = sub_1BDCF69F8(7235955, 0xE300000000000000, v0 & 1);
  qword_1EBA295E8 = result;
  return result;
}

uint64_t *sub_1BDD00254()
{
  if (qword_1EBA295F0 != -1) {
    swift_once();
  }
  return &qword_1EBA295E8;
}

uint64_t sub_1BDD002A0()
{
  type metadata accessor for CalculateExpression.RootOperation();
  char v0 = sub_1BDD013AC();
  uint64_t result = sub_1BDCF5FD8(0, 0xE000000000000000, v0 & 1);
  qword_1EBA295D8 = result;
  return result;
}

uint64_t *sub_1BDD002E4()
{
  if (qword_1EBA295E0 != -1) {
    swift_once();
  }
  return &qword_1EBA295D8;
}

uint64_t sub_1BDD00330()
{
  type metadata accessor for CalculateExpression.DropOperation();
  uint64_t result = sub_1BDCF6A48();
  qword_1EBA295C8 = result;
  return result;
}

uint64_t sub_1BDD00364()
{
  type metadata accessor for CalculateExpression.PowerOperation();
  uint64_t result = sub_1BDCF6A7C(51, 0xE100000000000000);
  qword_1EBA295B8 = result;
  return result;
}

uint64_t *sub_1BDD003A0()
{
  if (qword_1EBA295C0 != -1) {
    swift_once();
  }
  return &qword_1EBA295B8;
}

uint64_t sub_1BDD003EC()
{
  type metadata accessor for CalculateExpression.BasicOperatorOperation();
  uint64_t result = sub_1BDCF60D4(43, 0xE100000000000000);
  qword_1EBA295A8 = result;
  return result;
}

uint64_t *sub_1BDD00428()
{
  if (qword_1EBA295B0 != -1) {
    swift_once();
  }
  return &qword_1EBA295A8;
}

uint64_t sub_1BDD00474()
{
  type metadata accessor for CalculateExpression.ConstantOperation();
  uint64_t result = sub_1BDCF5B7C(32975, 0xA200000000000000);
  qword_1EBA29598 = result;
  return result;
}

uint64_t *sub_1BDD004B0()
{
  if (qword_1EBA295A0 != -1) {
    swift_once();
  }
  return &qword_1EBA29598;
}

uint64_t sub_1BDD004FC()
{
  type metadata accessor for CalculateExpression.LiteralOperation();
  uint64_t result = sub_1BDCF6A7C(101, 0xE100000000000000);
  qword_1EBA29588 = result;
  return result;
}

uint64_t *sub_1BDD00538()
{
  if (qword_1EBA29590 != -1) {
    swift_once();
  }
  return &qword_1EBA29588;
}

uint64_t sub_1BDD00584()
{
  type metadata accessor for CalculateExpression.FunctionOperation();
  char v0 = sub_1BDD013AC();
  uint64_t result = sub_1BDCF69F8(0x686E617461, 0xE500000000000000, v0 & 1);
  qword_1EBA29578 = result;
  return result;
}

uint64_t *sub_1BDD005D0()
{
  if (qword_1EBA29580 != -1) {
    swift_once();
  }
  return &qword_1EBA29578;
}

uint64_t sub_1BDD0061C()
{
  type metadata accessor for CalculateExpression.FunctionOperation();
  char v0 = sub_1BDD013AC();
  uint64_t result = sub_1BDCF69F8(0x68736F6361, 0xE500000000000000, v0 & 1);
  qword_1EBA29568 = result;
  return result;
}

uint64_t *sub_1BDD00668()
{
  if (qword_1EBA29570 != -1) {
    swift_once();
  }
  return &qword_1EBA29568;
}

uint64_t sub_1BDD006B4()
{
  type metadata accessor for CalculateExpression.FunctionOperation();
  char v0 = sub_1BDD013AC();
  uint64_t result = sub_1BDCF69F8(0x686E697361, 0xE500000000000000, v0 & 1);
  qword_1EBA29558 = result;
  return result;
}

uint64_t *sub_1BDD00700()
{
  if (qword_1EBA29560 != -1) {
    swift_once();
  }
  return &qword_1EBA29558;
}

uint64_t sub_1BDD0074C()
{
  type metadata accessor for CalculateExpression.ExponentialOperation();
  uint64_t result = sub_1BDCF6A7C(0, 0xE000000000000000);
  qword_1EBA29548 = result;
  return result;
}

uint64_t *sub_1BDD00788()
{
  if (qword_1EBA29550 != -1) {
    swift_once();
  }
  return &qword_1EBA29548;
}

uint64_t sub_1BDD007D4()
{
  type metadata accessor for CalculateExpression.ExponentialOperation();
  uint64_t result = sub_1BDCF6A7C(101, 0xE100000000000000);
  qword_1EBA29538 = result;
  return result;
}

uint64_t *sub_1BDD00810()
{
  if (qword_1EBA29540 != -1) {
    swift_once();
  }
  return &qword_1EBA29538;
}

uint64_t sub_1BDD0085C()
{
  type metadata accessor for CalculateExpression.LogOperation();
  char v0 = sub_1BDD013AC();
  uint64_t result = sub_1BDCF5FD8(0, 0xE000000000000000, v0 & 1);
  qword_1EBA29528 = result;
  return result;
}

uint64_t *sub_1BDD008A0()
{
  if (qword_1EBA29530 != -1) {
    swift_once();
  }
  return &qword_1EBA29528;
}

uint64_t sub_1BDD008EC()
{
  type metadata accessor for CalculateExpression.FunctionOperation();
  char v0 = sub_1BDD013AC();
  uint64_t result = sub_1BDCF69F8(1752064372, 0xE400000000000000, v0 & 1);
  qword_1EBA29518 = result;
  return result;
}

uint64_t *sub_1BDD00934()
{
  if (qword_1EBA29520 != -1) {
    swift_once();
  }
  return &qword_1EBA29518;
}

uint64_t sub_1BDD00980()
{
  type metadata accessor for CalculateExpression.ExponentialOperation();
  uint64_t result = sub_1BDCF6A7C(12337, 0xE200000000000000);
  qword_1EBA29508 = result;
  return result;
}

uint64_t *sub_1BDD009BC()
{
  if (qword_1EBA29510 != -1) {
    swift_once();
  }
  return &qword_1EBA29508;
}

uint64_t sub_1BDD00A08()
{
  type metadata accessor for CalculateExpression.FunctionOperation();
  char v0 = sub_1BDD013AC();
  uint64_t result = sub_1BDCF69F8(28268, 0xE200000000000000, v0 & 1);
  qword_1EBA294F8 = result;
  return result;
}

uint64_t *sub_1BDD00A4C()
{
  if (qword_1EBA29500 != -1) {
    swift_once();
  }
  return &qword_1EBA294F8;
}

uint64_t sub_1BDD00A98()
{
  type metadata accessor for CalculateExpression.FunctionOperation();
  char v0 = sub_1BDD013AC();
  uint64_t result = sub_1BDCF69F8(1752395619, 0xE400000000000000, v0 & 1);
  qword_1EBA294E8 = result;
  return result;
}

uint64_t *sub_1BDD00AE0()
{
  if (qword_1EBA294F0 != -1) {
    swift_once();
  }
  return &qword_1EBA294E8;
}

uint64_t sub_1BDD00B2C()
{
  type metadata accessor for CalculateExpression.ExponentialOperation();
  uint64_t result = sub_1BDCF6A7C(50, 0xE100000000000000);
  qword_1EBA294D8 = result;
  return result;
}

uint64_t *sub_1BDD00B68()
{
  if (qword_1EBA294E0 != -1) {
    swift_once();
  }
  return &qword_1EBA294D8;
}

uint64_t sub_1BDD00BB4()
{
  type metadata accessor for CalculateExpression.CloseParenthesisOperation();
  uint64_t result = sub_1BDCF6A48();
  qword_1EBA294C8 = result;
  return result;
}

uint64_t *sub_1BDD00BE8()
{
  if (qword_1EBA294D0 != -1) {
    swift_once();
  }
  return &qword_1EBA294C8;
}

uint64_t sub_1BDD00C34()
{
  type metadata accessor for CalculateExpression.OpenParenthesisOperation();
  uint64_t result = sub_1BDCF6A48();
  qword_1EBA294B8 = result;
  return result;
}

uint64_t *sub_1BDD00C68()
{
  if (qword_1EBA294C0 != -1) {
    swift_once();
  }
  return &qword_1EBA294B8;
}

uint64_t sub_1BDD00CB4()
{
  type metadata accessor for CalculateExpression.LogOperation();
  char v0 = sub_1BDD013AC();
  uint64_t result = sub_1BDCF5FD8(12337, 0xE200000000000000, v0 & 1);
  qword_1EBA294A8 = result;
  return result;
}

uint64_t *sub_1BDD00CF8()
{
  if (qword_1EBA294B0 != -1) {
    swift_once();
  }
  return &qword_1EBA294A8;
}

uint64_t sub_1BDD00D44()
{
  type metadata accessor for CalculateExpression.LogOperation();
  char v0 = sub_1BDD013AC();
  uint64_t result = sub_1BDCF5FD8(50, 0xE100000000000000, v0 & 1);
  qword_1EBA29498 = result;
  return result;
}

uint64_t *sub_1BDD00D88()
{
  if (qword_1EBA294A0 != -1) {
    swift_once();
  }
  return &qword_1EBA29498;
}

uint64_t sub_1BDD00DD4()
{
  type metadata accessor for CalculateExpression.FunctionOperation();
  char v0 = sub_1BDD013AC();
  uint64_t result = sub_1BDCF69F8(1851880545, 0xE400000000000000, v0 & 1);
  qword_1EBA29488 = result;
  return result;
}

uint64_t *sub_1BDD00E1C()
{
  if (qword_1EBA29490 != -1) {
    swift_once();
  }
  return &qword_1EBA29488;
}

uint64_t sub_1BDD00E68()
{
  type metadata accessor for CalculateExpression.FunctionOperation();
  char v0 = sub_1BDD013AC();
  uint64_t result = sub_1BDCF69F8(1752066419, 0xE400000000000000, v0 & 1);
  qword_1EBA29478 = result;
  return result;
}

uint64_t *sub_1BDD00EB0()
{
  if (qword_1EBA29480 != -1) {
    swift_once();
  }
  return &qword_1EBA29478;
}

uint64_t sub_1BDD00EFC()
{
  type metadata accessor for CalculateExpression.FunctionOperation();
  char v0 = sub_1BDD013AC();
  uint64_t result = sub_1BDCF69F8(1936679777, 0xE400000000000000, v0 & 1);
  qword_1EBA29468 = result;
  return result;
}

uint64_t *sub_1BDD00F44()
{
  if (qword_1EBA29470 != -1) {
    swift_once();
  }
  return &qword_1EBA29468;
}

uint64_t sub_1BDD00F90()
{
  type metadata accessor for CalculateExpression.FunctionOperation();
  char v0 = sub_1BDD013AC();
  uint64_t result = sub_1BDCF69F8(1852404577, 0xE400000000000000, v0 & 1);
  qword_1EBA29458 = result;
  return result;
}

uint64_t *sub_1BDD00FD8()
{
  if (qword_1EBA29460 != -1) {
    swift_once();
  }
  return &qword_1EBA29458;
}

uint64_t sub_1BDD01024()
{
  type metadata accessor for CalculateExpression.ConstantOperation();
  uint64_t result = sub_1BDCF5B7C(101, 0xE100000000000000);
  qword_1EBA29448 = result;
  return result;
}

uint64_t *sub_1BDD01060()
{
  if (qword_1EBA29450 != -1) {
    swift_once();
  }
  return &qword_1EBA29448;
}

uint64_t sub_1BDD010AC()
{
  type metadata accessor for CalculateExpression.RootOperation();
  char v0 = sub_1BDD013AC();
  uint64_t result = sub_1BDCF5FD8(50, 0xE100000000000000, v0 & 1);
  qword_1EBA29438 = result;
  return result;
}

uint64_t *sub_1BDD010F0()
{
  if (qword_1EBA29440 != -1) {
    swift_once();
  }
  return &qword_1EBA29438;
}

uint64_t sub_1BDD0113C()
{
  type metadata accessor for CalculateExpression.ReciprocalOperation();
  uint64_t result = sub_1BDCF6A48();
  qword_1EBA29428 = result;
  return result;
}

uint64_t *sub_1BDD01170()
{
  if (qword_1EBA29430 != -1) {
    swift_once();
  }
  return &qword_1EBA29428;
}

uint64_t getEnumTagSinglePayload for CalculateExpression.Base(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

Calculate::CalculateExpression::Base_optional __swiftcall CalculateExpression.Base.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 16) {
    char v2 = 2;
  }
  else {
    char v2 = 3;
  }
  if (rawValue == 10) {
    char v3 = 1;
  }
  else {
    char v3 = v2;
  }
  if (rawValue == 8) {
    char v3 = 0;
  }
  char *v1 = v3;
  return (Calculate::CalculateExpression::Base_optional)rawValue;
}

uint64_t type metadata accessor for CalculateExpression.CloseParenthesisOperation()
{
  return self;
}

uint64_t type metadata accessor for CalculateExpression.OpenParenthesisOperation()
{
  return self;
}

uint64_t CalculateExpression.flexibleFractionDigits.getter()
{
  return sub_1BDCF015C((uint64_t)&unk_1BDDB4880, &OBJC_IVAR____TtC9Calculate19CalculateExpression___flexibleFractionDigits);
}

uint64_t type metadata accessor for CalculateExpression.ReciprocalOperation()
{
  return self;
}

uint64_t type metadata accessor for CalculateExpression.FactorialOperation()
{
  return self;
}

uint64_t type metadata accessor for CalculateExpression.RollOutOperation()
{
  return self;
}

uint64_t type metadata accessor for CalculateExpression.RollInOperation()
{
  return self;
}

uint64_t type metadata accessor for CalculateExpression.NegateOperation()
{
  return self;
}

uint64_t type metadata accessor for CalculateExpression.EqualsOperation()
{
  return self;
}

uint64_t sub_1BDD013AC()
{
  return 0;
}

uint64_t type metadata accessor for CalculateExpression.ClearOperation()
{
  return self;
}

uint64_t type metadata accessor for CalculateExpression.SwapOperation()
{
  return self;
}

uint64_t sub_1BDD013FC()
{
  return sub_1BDCF5BC4();
}

uint64_t type metadata accessor for CalculateExpression.DropOperation()
{
  return self;
}

id scan(_:options:resultHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v7 = self;
  int v8 = (void *)sub_1BDDAFD38();
  type metadata accessor for CalculateScanKey();
  sub_1BDD02320(&qword_1EBA26A08);
  BOOL v9 = (void *)sub_1BDDAFC68();
  v13[4] = a4;
  v13[5] = a5;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  v13[2] = sub_1BDD01E64;
  v13[3] = &block_descriptor;
  int v10 = _Block_copy(v13);
  swift_retain();
  swift_release();
  id v11 = objc_msgSend(v7, sel_scan_options_resultHandler_, v8, v9, v10);
  _Block_release(v10);

  return v11;
}

void type metadata accessor for CalculateScanKey()
{
  if (!qword_1EBA26A18)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EBA26A18);
    }
  }
}

uint64_t sub_1BDD01E64(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1BDD01FC0();
  uint64_t v2 = sub_1BDDAFFC8();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t scan(_:options:)()
{
  char v0 = self;
  uint64_t v1 = (void *)sub_1BDDAFD38();
  type metadata accessor for CalculateScanKey();
  sub_1BDD02320(&qword_1EBA26A08);
  uint64_t v2 = (void *)sub_1BDDAFC68();
  id v3 = objc_msgSend(v0, sel_scan_options_, v1, v2);

  sub_1BDD01FC0();
  uint64_t v4 = sub_1BDDAFFC8();

  return v4;
}

unint64_t sub_1BDD01FC0()
{
  unint64_t result = qword_1EBA26A20;
  if (!qword_1EBA26A20)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBA26A20);
  }
  return result;
}

uint64_t sub_1BDD02000(uint64_t a1, uint64_t a2)
{
  return sub_1BDD02078(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1BDD02018()
{
  sub_1BDDAFD68();
  sub_1BDDAFDB8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDD0206C(uint64_t a1, uint64_t a2)
{
  return sub_1BDD02078(a1, a2, MEMORY[0x1F418C130]);
}

uint64_t sub_1BDD02078(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1BDDAFD68();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BDD020BC(uint64_t a1, id *a2)
{
  uint64_t result = sub_1BDDAFD48();
  *a2 = 0;
  return result;
}

uint64_t sub_1BDD02134@<X0>(uint64_t *a1@<X8>)
{
  sub_1BDDAFD68();
  uint64_t v2 = sub_1BDDAFD38();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1BDD02178@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1BDDAFD38();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1BDD021C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1BDDAFD68();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BDD021EC(uint64_t a1)
{
  uint64_t v2 = sub_1BDD02320(&qword_1EBA26A08);
  uint64_t v3 = sub_1BDD02320(&qword_1EA0DEFA0);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1BDD02284()
{
  return sub_1BDD02320(&qword_1EA0DEF90);
}

uint64_t sub_1BDD022B8()
{
  return sub_1BDD02320(&qword_1EA0DEF98);
}

uint64_t sub_1BDD022EC()
{
  return sub_1BDD02320(&qword_1EBA26A10);
}

uint64_t sub_1BDD02320(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CalculateScanKey();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BDD02364(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16) != 1) {
    return;
  }
  CalculateExpression.RichExpression.editingToken(matching:)(sub_1BDD02D48, &v63);
  uint64_t v3 = v63;
  if (!(void)v63) {
    return;
  }
  unint64_t v4 = *((void *)&v63 + 1);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(*(void *)v63 + 416);
  uint64_t v6 = swift_retain();
  sub_1BDD02DD4(v6);
  uint64_t v7 = v5(v4);
  if (!v7)
  {
    swift_release();
    sub_1BDD02E18(v3);
    sub_1BDD02E18(v3);
    return;
  }
  uint64_t v8 = v7;
  unint64_t v60 = v5;
  unint64_t v61 = v4;
  uint64_t v9 = OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
  LOBYTE(v63) = *(unsigned char *)(v7 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  unsigned __int8 v62 = 1;
  swift_retain();
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v63, &v62))
  {
    int v10 = *(void (**)(void))(*(void *)v8 + 208);
    v10();
    uint64_t v11 = sub_1BDDAFDC8();
    uint64_t v12 = swift_bridgeObjectRelease();
    if (v11 >= 1)
    {
      uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 384))(v12);
      if (v13) {
        uint64_t v13 = (*(uint64_t (**)(void))(*(void *)v8 + 240))(0);
      }
      uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 176))(v13);
      if (v14)
      {
        (*(void (**)(void))(*(void *)v8 + 640))();
        uint64_t v14 = swift_release();
      }
      ((void (*)(uint64_t))v10)(v14);
      v10();
      uint64_t v15 = sub_1BDDAFDC8();
      swift_bridgeObjectRelease();
      if (!__OFSUB__(v15, 1))
      {
        uint64_t v16 = sub_1BDD02FA0(v15 - 1);
        uint64_t v18 = v17;
        uint64_t v20 = v19;
        uint64_t v22 = v21;
        swift_bridgeObjectRelease();
        uint64_t v23 = MEMORY[0x1C1885C90](v16, v18, v20, v22);
        uint64_t v25 = v24;
        swift_bridgeObjectRelease();
        uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v8 + 216);
        uint64_t v27 = v26(v23, v25);
        uint64_t v28 = ((uint64_t (*)(uint64_t))v10)(v27);
        unint64_t v30 = v29;
        uint64_t v31 = swift_bridgeObjectRelease();
        uint64_t v32 = HIBYTE(v30) & 0xF;
        if ((v30 & 0x2000000000000000) == 0) {
          uint64_t v32 = v28 & 0xFFFFFFFFFFFFLL;
        }
        unint64_t v33 = v61;
        if (v32) {
          goto LABEL_46;
        }
        if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 368))(v31) == 2)
        {
          v26(48, 0xE100000000000000);
          if (!__OFSUB__(v61, 1))
          {
            uint64_t v34 = v60(v61 - 1);
            if (v34)
            {
              char v35 = *(unsigned char *)(v34 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
              swift_release();
              LOBYTE(v63) = v35;
              unsigned __int8 v62 = 4;
              sub_1BDCF0848();
              if (sub_1BDDAFD28())
              {
                unint64_t v36 = (void (*)(long long *, void))(*(uint64_t (**)(long long *))(*(void *)v3 + 408))(&v63);
                sub_1BDD02E58(v61 - 1);
                swift_release();
                v36(&v63, 0);
              }
            }
            (*(void (**)(uint64_t))(*(void *)a1 + 232))(1);
            uint64_t v31 = (*(uint64_t (**)(void))(*(void *)a1 + 256))(0);
            goto LABEL_46;
          }
LABEL_56:
          __break(1u);
          return;
        }
        goto LABEL_27;
      }
      __break(1u);
      goto LABEL_52;
    }
  }
  char v37 = *(unsigned char *)(v8 + v9);
  LOBYTE(v63) = v37;
  if ((CalculateExpression.TokenType.isParenthesis.getter() & 1) != 0
    && ((*(uint64_t (**)(void))(*(void *)v8 + 232))() & 1) == 0)
  {
    type metadata accessor for CalculateExpression.RichToken();
    uint64_t v40 = (*(uint64_t (**)(void))(*(void *)v8 + 208))();
    LOBYTE(v63) = v37;
    uint64_t v42 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v40, v41, (unsigned __int8 *)&v63, 1);
    unint64_t v43 = *(uint64_t (**)(long long *))(*(void *)v3 + 408);
    swift_retain();
    unint64_t v44 = (void (*)(long long *, void))v43(&v63);
    unint64_t v46 = v45;
    unint64_t v47 = *v45;
    int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *unint64_t v46 = v47;
    if (!isUniquelyReferenced_nonNull_bridgeObject
      || (v47 & 0x8000000000000000) != 0
      || (v47 & 0x4000000000000000) != 0)
    {
      sub_1BDD02F24(v47);
      unint64_t v47 = v49;
      *unint64_t v46 = v49;
    }
    if ((v61 & 0x8000000000000000) == 0)
    {
      if (v61 < *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 8 * v61 + 0x20) = v42;
        swift_release();
        sub_1BDDAFFD8();
        v44(&v63, 0);
        uint64_t v50 = v60(v61 - 1);
        if (v50)
        {
          char v51 = *(unsigned char *)(v50 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
          swift_release();
          LOBYTE(v63) = v51;
          unsigned __int8 v62 = 10;
          sub_1BDCF0848();
          if (sub_1BDDAFD28())
          {
            unsigned int v52 = (void (*)(long long *, void))v43(&v63);
            sub_1BDD02E58(v61 - 1);
            swift_release();
            v52(&v63, 0);
          }
        }
        uint64_t v31 = swift_release();
        goto LABEL_46;
      }
      goto LABEL_55;
    }
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  unint64_t v33 = v61;
  if ((*(uint64_t (**)(void))(*(void *)a1 + 368))() == 2)
  {
    if ((*(uint64_t (**)(void))(*(void *)a1 + 176))())
    {
      CalculateExpression.effectiveBase.getter((char *)&v63);
      swift_release();
      char v38 = v63;
    }
    else
    {
      char v38 = 1;
    }
    type metadata accessor for CalculateExpression.RichToken();
    LOBYTE(v63) = v38;
    uint64_t v53 = sub_1BDCE8A80(48, 0xE100000000000000, (char *)&v63);
    uint64_t v54 = (void (*)(long long *, void))(*(uint64_t (**)(long long *))(*(void *)v3 + 408))(&v63);
    unint64_t v56 = v55;
    unint64_t v57 = *v55;
    int v58 = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *unint64_t v56 = v57;
    if (!v58 || (v57 & 0x8000000000000000) != 0 || (v57 & 0x4000000000000000) != 0)
    {
      sub_1BDD02F24(v57);
      unint64_t v57 = v59;
      *unint64_t v56 = v59;
    }
    if ((v61 & 0x8000000000000000) == 0)
    {
      if (v61 < *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 8 * v61 + 0x20) = v53;
        swift_release();
        sub_1BDDAFFD8();
        v54(&v63, 0);
        (*(void (**)(uint64_t))(*(void *)a1 + 232))(1);
        uint64_t v31 = (*(uint64_t (**)(void))(*(void *)a1 + 256))(0);
        goto LABEL_46;
      }
      goto LABEL_53;
    }
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
LABEL_27:
  unint64_t v39 = (uint64_t (*)(long long *, void))(*(uint64_t (**)(long long *))(*(void *)v3 + 408))(&v63);
  sub_1BDD02E58(v33);
  swift_release();
  uint64_t v31 = v39(&v63, 0);
LABEL_46:
  if ((*(uint64_t (**)(uint64_t))(*(void *)v3 + 560))(v31))
  {
    (*(void (**)(void))(*(void *)v3 + 424))();
    sub_1BDD02E18(v3);
    swift_release();
    swift_release_n();
  }
  else
  {
    swift_release();
    swift_release_n();
    sub_1BDD02E18(v3);
  }
  sub_1BDD02E18(v3);
}

uint64_t sub_1BDD02D48(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((*(uint64_t (**)(void))(*(void *)*a1 + 560))()) {
    char v2 = 0;
  }
  else {
    char v2 = (*(uint64_t (**)(void))(*(void *)v1 + 568))() ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1BDD02DD4(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1BDD02E18(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1BDD02E58(unint64_t a1)
{
  unint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_1BDD02F24(v3);
    unint64_t v3 = v5;
    unint64_t *v1 = v5;
  }
  unint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    memmove((void *)((v3 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 32), (const void *)((v3 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 40), 8 * (v6 - 1 - a1));
    *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    sub_1BDDAFFD8();
  }
}

uint64_t CalculateExpression.DeleteOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  return MEMORY[0x1F4186488](v0, 16, 7);
}

void sub_1BDD02F24(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BDDB0448();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1C18862B0);
}

uint64_t sub_1BDD02FA0(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1BDDAFDF8();
    return sub_1BDDAFF08();
  }
  return result;
}

unint64_t sub_1BDD0303C(uint64_t a1)
{
  char v2 = *(uint64_t (**)(void))(*(void *)a1 + 176);
  unint64_t v3 = *(void *)a1 + 176;
  if (!v2()) {
    return 0;
  }
  uint64_t v4 = CalculateExpression.format.getter();
  uint64_t v5 = swift_release();
  if (v4 != 2) {
    return 0;
  }
  if (!((uint64_t (*)(uint64_t))v2)(v5)) {
    return 1;
  }
  unint64_t v6 = CalculateExpression.postfixStack.getter();
  swift_release();
  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_6;
    }
LABEL_26:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1BDDB0448();
  if (!v7) {
    goto LABEL_26;
  }
LABEL_6:
  unint64_t v8 = v7 - 1;
  if (__OFSUB__(v7, 1))
  {
    __break(1u);
  }
  else
  {
    unint64_t v3 = v6 & 0xC000000000000001;
    if ((v6 & 0xC000000000000001) == 0)
    {
      if ((v8 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v8 < *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        swift_retain();
        goto LABEL_11;
      }
      __break(1u);
      goto LABEL_33;
    }
  }
  MEMORY[0x1C18862A0](v8, v6);
LABEL_11:
  swift_bridgeObjectRelease();
  if (!(v6 >> 62))
  {
    uint64_t v9 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t result = v9 - 2;
    if (v9 >= 2) {
      goto LABEL_13;
    }
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1BDDB0448();
  swift_bridgeObjectRelease();
  unint64_t result = v12 - 2;
  if (v12 < 2)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    swift_release();
    return 1;
  }
LABEL_13:
  if (v3)
  {
    MEMORY[0x1C18862A0](result, v6);
    goto LABEL_20;
  }
  if (result < *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v13 = CalculateExpression.rich.getter();
    unint64_t v14 = (*(uint64_t (**)(void))(*(void *)v13 + 392))();
    swift_release();
    if (!(v14 >> 62))
    {
      uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_22:
      swift_bridgeObjectRelease();
      uint64_t v16 = (uint64_t (**)(unsigned char *))(*(void *)a1 + 408);
      uint64_t v17 = *v16;
      uint64_t v18 = (void (*)(unsigned char *, void))(*v16)(v29);
      sub_1BDD03588(v15);
      v18(v29, 0);
      uint64_t v19 = *(void *)CalculateExpression.rich.getter();
      unint64_t v20 = (*(uint64_t (**)(void))(v19 + 392))();
      swift_release();
      if (v20 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_1BDDB0448();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      uint64_t v22 = (void (*)(unsigned char *, void))v17(v29);
      sub_1BDD03588(v21);
      v22(v29, 0);
      uint64_t v23 = *(void *)CalculateExpression.rich.getter();
      unint64_t v24 = (*(uint64_t (**)(void))(v23 + 392))();
      swift_release();
      uint64_t v25 = (void (*)(unsigned char *, void))v17(v29);
      sub_1BDCE4468(v24);
      v25(v29, 0);
      uint64_t v26 = *(void *)CalculateExpression.rich.getter();
      unint64_t v27 = (*(uint64_t (**)(void))(v26 + 392))();
      swift_release();
      uint64_t v28 = (void (*)(unsigned char *, void))v17(v29);
      sub_1BDCE4468(v27);
      v28(v29, 0);
      (*(void (**)(void))(*(void *)a1 + 232))(0);
      uint64_t v11 = 1;
      (*(void (**)(uint64_t))(*(void *)a1 + 256))(1);
      swift_release();
      swift_release();
      return v11;
    }
LABEL_33:
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDD03588(uint64_t result)
{
  if (!result) {
    return result;
  }
  uint64_t v2 = result;
  if (result < 0)
  {
    __break(1u);
  }
  else if (!(*v1 >> 62))
  {
    uint64_t v3 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v4 = -v3;
    if (!__OFSUB__(0, v3)) {
      goto LABEL_5;
    }
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1BDDB0448();
  unint64_t result = swift_bridgeObjectRelease();
  uint64_t v4 = -v3;
  if (__OFSUB__(0, v3)) {
    goto LABEL_19;
  }
LABEL_5:
  uint64_t v5 = -v2;
  if (v4 <= 0 && v4 > v5) {
    goto LABEL_22;
  }
  unint64_t result = v3 - v2;
  if (__OFADD__(v3, v5)) {
    goto LABEL_20;
  }
  if (v3 < result)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    return result;
  }
  return sub_1BDD03824(result, v3);
}

uint64_t CalculateExpression.SwapOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  return MEMORY[0x1F4186488](v0, 16, 7);
}

void (*sub_1BDD03690(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(void *a1)
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1BDD0379C(v6, a2, a3);
  return sub_1BDD036F8;
}

void sub_1BDD036F8(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

unint64_t sub_1BDD03740()
{
  unint64_t result = qword_1EA0DEFB0;
  if (!qword_1EA0DEFB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0DEFA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0DEFB0);
  }
  return result;
}

uint64_t (*sub_1BDD0379C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1C18862A0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    uint64_t *v3 = v4;
    return sub_1BDD0381C;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDD0381C()
{
  return swift_release();
}

uint64_t sub_1BDD03824(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1BDDB0448();
  swift_bridgeObjectRelease();
  if (v21 < v2) {
    goto LABEL_32;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_34:
    __break(1u);
LABEL_35:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_8;
    }
LABEL_37:
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    unint64_t v9 = *v3;
    goto LABEL_15;
  }
  if (*v3 >> 62) {
    goto LABEL_35;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_37;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v3 = v9;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v7 = 1;
  }
  if (v9 >> 62) {
    goto LABEL_38;
  }
  uint64_t v12 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v8) {
    uint64_t v12 = v8;
  }
  swift_bridgeObjectRetain();
  unint64_t *v3 = MEMORY[0x1C18862B0](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  uint64_t v13 = v11 + 32;
  unint64_t v14 = (char *)(v11 + 32 + 8 * v4);
  type metadata accessor for CalculateExpression.RichToken();
  uint64_t result = swift_arrayDestroy();
  if (v5)
  {
    if (*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1BDDB0448();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = v22 - v2;
      if (!__OFSUB__(v22, v2)) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v16 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v17 = v16 - v2;
      if (!__OFSUB__(v16, v2))
      {
LABEL_21:
        uint64_t v18 = (char *)(v13 + 8 * v2);
        if (v4 != v2 || v14 >= &v18[8 * v17]) {
          uint64_t result = (uint64_t)memmove(v14, v18, 8 * v17);
        }
        if (!(*v3 >> 62))
        {
          uint64_t v19 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v20 = v19 + v5;
          if (!__OFADD__(v19, v5))
          {
LABEL_26:
            *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v20;
            goto LABEL_27;
          }
LABEL_44:
          __break(1u);
          return result;
        }
LABEL_42:
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_1BDDB0448();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v20 = v23 + v5;
        if (!__OFADD__(v23, v5)) {
          goto LABEL_26;
        }
        goto LABEL_44;
      }
    }
    __break(1u);
    goto LABEL_42;
  }
LABEL_27:
  return sub_1BDDAFFD8();
}

uint64_t sub_1BDD03ADC()
{
  type metadata accessor for CalculateExpression.RichToken();
  unsigned __int8 v17 = 10;
  char v1 = sub_1BDD013AC();
  uint64_t v2 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(1885957222, 0xE400000000000000, &v17, v1 & 1);
  uint64_t v4 = *(void *)(v0 + 16);
  unint64_t v3 = *(void *)(v0 + 24);
  unsigned __int8 v16 = 1;
  swift_bridgeObjectRetain();
  char v5 = sub_1BDD013AC();
  uint64_t v6 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v4, v3, &v16, v5 & 1);
  type metadata accessor for CalculateExpression.RichExpression();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BDDB3730;
  *(void *)(v7 + 32) = v6;
  uint64_t v15 = v7;
  sub_1BDDAFFD8();
  swift_retain();
  uint64_t v8 = sub_1BDD07294(v15);
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 288))(v8);
  int v10 = *(uint64_t (**)(uint64_t))(*(void *)v2 + 280);
  uint64_t v11 = v10(v9);
  if (v11)
  {
    (*(void (**)(void))(*(void *)v11 + 304))(0);
    uint64_t v11 = swift_release();
  }
  uint64_t v12 = v10(v11);
  if (v12)
  {
    char v14 = 2;
    (*(void (**)(char *))(*(void *)v12 + 280))(&v14);
    swift_release();
  }
  swift_release();
  return v2;
}

uint64_t sub_1BDD03CEC(uint64_t a1, uint64_t a2)
{
  return sub_1BDCF602C(a1, a2, 1);
}

void sub_1BDD03D3C()
{
}

uint64_t CalculateExpression.FlipOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.FunctionOperation.deinit();
  return MEMORY[0x1F4186488](v0, 33, 7);
}

uint64_t type metadata accessor for CalculateExpression.FlipOperation()
{
  return self;
}

uint64_t method lookup function for CalculateExpression.FlipOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalculateExpression.FlipOperation);
}

uint64_t sub_1BDD03DDC(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = *a1;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  return sub_1BDCF6AC4();
}

uint64_t sub_1BDD03E30@<X0>(char *a1@<X8>)
{
  uint64_t result = *(void *)(v1 + 24);
  if (result == 49 && *(void *)(v1 + 32) == 0xE100000000000000)
  {
    char v5 = 1;
  }
  else
  {
    uint64_t result = sub_1BDDB04E8();
    if (result) {
      char v5 = 1;
    }
    else {
      char v5 = 3;
    }
  }
  *a1 = v5;
  return result;
}

uint64_t sub_1BDD03E8C(uint64_t a1, uint64_t a2)
{
  void (*v51)(long long *__return_ptr, uint64_t);
  uint64_t v52;
  unint64_t v53;
  void (*v54)(long long *, void);
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  char v59;
  char v60;
  char v61;
  BOOL v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  uint64_t *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  uint64_t *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  uint64_t *v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t (*v88)(long long *);
  void (*v89)(long long *, void);
  unint64_t *v90;
  unint64_t *v91;
  unint64_t v92;
  int isUniquelyReferenced_nonNull_bridgeObject;
  unint64_t v94;
  uint64_t v95;
  void (*v96)(long long *, void);
  unint64_t *v97;
  unint64_t *v98;
  unint64_t v99;
  int v100;
  unint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t (*v105)(long long *);
  void (*v106)(long long *, void);
  unint64_t *v107;
  unint64_t *v108;
  unint64_t v109;
  int v110;
  unint64_t v111;
  unint64_t *v112;
  unint64_t *v113;
  unint64_t v114;
  int v115;
  unint64_t v116;
  void (*v117)(long long *, void);
  unint64_t v118;
  char v119;
  uint64_t *v120;
  uint64_t v121;
  unint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t (*v125)(long long *);
  void (*v126)(long long *, void);
  unint64_t *v127;
  unint64_t *v128;
  unint64_t v129;
  int v130;
  unint64_t v131;
  unint64_t *v132;
  unint64_t *v133;
  unint64_t v134;
  int v135;
  unint64_t v136;
  char v137;
  uint64_t v138;
  uint64_t (*v139)(long long *);
  void (*v140)(long long *, void);
  unint64_t *v141;
  unint64_t *v142;
  unint64_t v143;
  int v144;
  unint64_t v145;
  unint64_t *v146;
  unint64_t *v147;
  unint64_t v148;
  int v149;
  unint64_t v150;
  uint64_t v151;
  BOOL v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  unsigned __int8 v158;
  long long v159;
  uint64_t v160;
  unint64_t v161;

  if (*(unsigned char *)(a2 + 16) != 1) {
    return 0;
  }
  uint64_t v3 = v2;
  CalculateExpression.RichExpression.editingToken(matching:)((uint64_t (*)(void *))sub_1BDD013AC, &v159);
  uint64_t v5 = v159;
  if (!(void)v159) {
    return 0;
  }
  unint64_t v6 = *((void *)&v159 + 1);
  uint64_t v7 = v160;
  unint64_t v8 = v161;
  uint64_t v9 = *(uint64_t (**)(void))(*(void *)v159 + 416);
  uint64_t v10 = swift_retain();
  sub_1BDD02DD4(v10);
  uint64_t v11 = ((uint64_t (*)(unint64_t))v9)(v6);
  if (!v11)
  {
    sub_1BDD02E18(v5);
    swift_release();
    sub_1BDD02E18(v5);
    return 0;
  }
  uint64_t v12 = v11;
  unint64_t v155 = v7;
  uint64_t v156 = v8;
  uint64_t v13 = *(void (**)(void))(*(void *)a1 + 232);
  swift_retain();
  v13(0);
  uint64_t v14 = OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
  unint64_t v157 = v12;
  char v15 = *(unsigned char *)(v12 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  LOBYTE(v159) = v15;
  if (CalculateExpression.TokenType.isOperator.getter())
  {
    LOBYTE(v159) = v15;
    uint64_t v158 = 8;
    if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v159, &v158))
    {
      LOBYTE(v159) = v15;
      uint64_t v158 = 9;
      if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v159, &v158))
      {
        swift_release();
        sub_1BDD02E18(v5);
        swift_release();
        uint64_t v17 = v5;
        goto LABEL_10;
      }
    }
  }
  char v154 = v6;
  unint64_t v16 = sub_1BDCF0558((uint64_t)&unk_1F1866208);
  LOBYTE(v159) = v15;
  uint64_t v158 = 15;
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v159, &v158)
    || (LOBYTE(v159) = v15,
        uint64_t v158 = 18,
        static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v159, &v158)))
  {
LABEL_9:
    swift_release();
    sub_1BDD02E18(v5);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v17 = v5;
LABEL_10:
    sub_1BDD02E18(v17);
    swift_release();
    return 0;
  }
  uint64_t v19 = *(void *)(v2 + 24);
  uint64_t v20 = *(void (**)(long long *, void))(v3 + 32);
  if (!v19 && v20 == (void (*)(long long *, void))0xE000000000000000 || (sub_1BDDB04E8() & 1) != 0)
  {
    swift_release();
    if (!*(void *)(v16 + 16)) {
      goto LABEL_175;
    }
    uint64_t v21 = *(unsigned __int8 *)(v3 + 16);
    unint64_t v22 = sub_1BDCF0668(v21);
    if ((v23 & 1) == 0) {
      goto LABEL_175;
    }
    unint64_t v24 = v22;
    type metadata accessor for CalculateExpression.RichToken();
    uint64_t v25 = (uint64_t *)(*(void *)(v16 + 56) + 16 * v24);
    uint64_t v26 = *v25;
    unint64_t v27 = v25[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    LOBYTE(v159) = v21;
    char v28 = sub_1BDD013AC();
    uint64_t v29 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v26, v27, (unsigned __int8 *)&v159, v28 & 1);
    uint64_t v30 = v154 + 1;
    if (__OFADD__(v154, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v21 = v29;
      uint64_t v31 = *(uint64_t (**)(long long *))(*(void *)v5 + 408);
      swift_retain();
      uint64_t v20 = (void (*)(long long *, void))v31(&v159);
      if (!(*v32 >> 62))
      {
        if (*(void *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= v30) {
          goto LABEL_21;
        }
        goto LABEL_153;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v151 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    if (v151 >= v30)
    {
LABEL_21:
      if ((v30 & 0x8000000000000000) == 0)
      {
        sub_1BDD0572C(v30, v30, v21);
        v20(&v159, 0);
        swift_release();
        sub_1BDD02E18(v5);
LABEL_23:
        swift_release();
        swift_release();
        uint64_t v33 = v5;
LABEL_24:
        sub_1BDD02E18(v33);
        return 1;
      }
      goto LABEL_154;
    }
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
    goto LABEL_156;
  }
  if ((v19 != 49 || v20 != (void (*)(long long *, void))0xE100000000000000) && (sub_1BDDB04E8() & 1) == 0) {
    goto LABEL_9;
  }
  LOBYTE(v159) = *(unsigned char *)(v157 + v14);
  uint64_t v158 = 1;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v159, &v158)) {
    goto LABEL_34;
  }
  if (__OFSUB__(v154, 1))
  {
LABEL_156:
    __break(1u);
    goto LABEL_157;
  }
  uint64_t v153 = v154 - 1;
  uint64_t v34 = v9();
  if (!v34)
  {
LABEL_34:
    swift_release();
    unint64_t v37 = v16;
    int64_t v40 = v154;
    if (!*(void *)(v37 + 16))
    {
LABEL_84:
      swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_85;
    }
LABEL_35:
    uint64_t v41 = *(unsigned __int8 *)(v3 + 16);
    unint64_t v42 = sub_1BDCF0668(v41);
    if (v43)
    {
      unint64_t v44 = v42;
      type metadata accessor for CalculateExpression.RichToken();
      unint64_t v45 = (uint64_t *)(*(void *)(v37 + 56) + 16 * v44);
      uint64_t v46 = *v45;
      unint64_t v47 = v45[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      LOBYTE(v159) = v41;
      char v48 = sub_1BDD013AC();
      uint64_t v49 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v46, v47, (unsigned __int8 *)&v159, v48 & 1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_1BDDB3760;
      *(void *)(v50 + 32) = v49;
      char v51 = *(void (**)(long long *__return_ptr, uint64_t))(*(void *)a1 + 384);
      unsigned int v52 = swift_retain();
      v51(&v159, v52);
      *(void *)(v50 + 40) = sub_1BDCE8A80(49, 0xE100000000000000, (char *)&v159);
      *(void *)&char v159 = v50;
      sub_1BDDAFFD8();
      if (!__OFADD__(v40, 1))
      {
        uint64_t v53 = v159;
        uint64_t v54 = (void (*)(long long *, void))(*(uint64_t (**)(long long *))(*(void *)v5 + 408))(&v159);
        sub_1BDD053AC(v40 + 1, v40 + 1, v53);
        v54(&v159, 0);
        swift_release();
        sub_1BDD02E18(v5);
        goto LABEL_23;
      }
      goto LABEL_155;
    }
    goto LABEL_84;
  }
  uint64_t v35 = v34;
  uint64_t v36 = (*(uint64_t (**)(void))(*(void *)v157 + 376))();
  unint64_t v37 = v16;
  if (v38)
  {
    int v55 = (*(uint64_t (**)(uint64_t))(*(void *)v157 + 208))(v36);
    unint64_t v57 = v56;
    swift_release();
    int v58 = sub_1BDD0509C(v55, v57);
    if (v59) {
      unint64_t v39 = 0;
    }
    else {
      unint64_t v39 = v58;
    }
  }
  else
  {
    unint64_t v39 = v36;
    swift_release();
  }
  int64_t v40 = v154;
  LOBYTE(v159) = *(unsigned char *)(v35 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  unint64_t v60 = v159;
  uint64_t v158 = 32;
  unint64_t v61 = v159;
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v159, &v158))
  {
    unsigned __int8 v62 = 1;
  }
  else
  {
    LOBYTE(v159) = v60;
    uint64_t v158 = 30;
    unsigned __int8 v62 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v159, &v158);
  }
  long long v63 = *(unsigned char *)(v3 + 16);
  LOBYTE(v159) = v63;
  uint64_t v158 = 29;
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v159, &v158)
    || (LOBYTE(v159) = v63,
        uint64_t v158 = 31,
        static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v159, &v158)))
  {
    if (v62)
    {
      char v152 = v39 != 0;
      if (v39) {
        unint64_t v64 = v39 - 1;
      }
      else {
        unint64_t v64 = 1;
      }
    }
    else
    {
      unint64_t v64 = v39 + 1;
      if (v39 == -1)
      {
LABEL_157:
        __break(1u);
        goto LABEL_158;
      }
      char v152 = 0;
    }
  }
  else if (v62)
  {
    unint64_t v64 = v39 + 1;
    if (v39 == -1)
    {
LABEL_165:
      __break(1u);
      goto LABEL_166;
    }
    char v152 = 1;
  }
  else
  {
    char v152 = v39 == 0;
    if (v39) {
      unint64_t v64 = v39 - 1;
    }
    else {
      unint64_t v64 = 1;
    }
  }
  LOBYTE(v159) = v63;
  uint64_t v158 = 31;
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v159, &v158)
    || (LOBYTE(v159) = v63,
        uint64_t v158 = 32,
        static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v159, &v158)))
  {
    v64 &= 0x3Fu;
  }
  type metadata accessor for CalculateExpression.RichToken();
  *(void *)&char v159 = v64;
  unint64_t v65 = sub_1BDDB04C8();
  LOBYTE(v159) = 1;
  uint64_t v14 = sub_1BDCE8A80(v65, v66, (char *)&v159);
  (*(void (**)(long long *__return_ptr))(*(void *)a1 + 384))(&v159);
  (*(void (**)(long long *))(*(void *)v14 + 400))(&v159);
  LOBYTE(v159) = v63;
  uint64_t v158 = 29;
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v159, &v158)
    || (LOBYTE(v159) = v63,
        uint64_t v158 = 30,
        static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v159, &v158)))
  {
    LOBYTE(v159) = v61;
    uint64_t v158 = 29;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v159, &v158)
      || (LOBYTE(v159) = v61,
          uint64_t v158 = 30,
          static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v159, &v158)))
    {
      if (v64)
      {
        unint64_t v67 = *(void *)(v37 + 16);
        if (v152)
        {
          if (v67 && (unint64_t v68 = sub_1BDCF0668(30), (v69 & 1) != 0))
          {
            unint64_t v70 = (uint64_t *)(*(void *)(v37 + 56) + 16 * v68);
            uint64_t v71 = *v70;
            unint64_t v72 = v70[1];
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v71 = 0;
            unint64_t v72 = 0;
          }
          swift_bridgeObjectRelease();
          LOBYTE(v159) = 30;
          unint64_t v86 = sub_1BDD013AC() & 1;
          uint64_t v87 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v71, v72, (unsigned __int8 *)&v159, v86);
          unint64_t v88 = *(uint64_t (**)(long long *))(*(void *)v5 + 408);
          char v89 = (void (*)(long long *, void))v88(&v159);
          int v91 = v90;
          uint64_t v92 = *v90;
          int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
          *int v91 = v92;
          if (!isUniquelyReferenced_nonNull_bridgeObject
            || (v92 & 0x8000000000000000) != 0
            || (v92 & 0x4000000000000000) != 0)
          {
            sub_1BDD02F24(v92);
            uint64_t v92 = v94;
            *int v91 = v94;
          }
          if ((v153 & 0x8000000000000000) != 0) {
            goto LABEL_159;
          }
          if (v153 >= *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
            goto LABEL_163;
          }
          *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 8 * v153 + 0x20) = v87;
          swift_release();
          sub_1BDDAFFD8();
          v89(&v159, 0);
          uint64_t v95 = v14;
          swift_retain();
          uint64_t v96 = (void (*)(long long *, void))v88(&v159);
          BOOL v98 = v97;
          unint64_t v99 = *v97;
          unint64_t v100 = swift_isUniquelyReferenced_nonNull_bridgeObject();
          *BOOL v98 = v99;
          uint64_t v14 = v155;
          if (!v100 || (v99 & 0x8000000000000000) != 0 || (v99 & 0x4000000000000000) != 0)
          {
            sub_1BDD02F24(v99);
            unint64_t v99 = v101;
            *BOOL v98 = v101;
          }
          if ((v154 & 0x8000000000000000) != 0) {
            goto LABEL_161;
          }
          uint64_t v102 = v99 & 0xFFFFFFFFFFFFFF8;
          if (v154 < *(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_149;
          }
          __break(1u);
          goto LABEL_102;
        }
LABEL_85:
        if (v67)
        {
          uint64_t v81 = sub_1BDCF0668(29);
          if (v82)
          {
            uint64_t v83 = (uint64_t *)(*(void *)(v37 + 56) + 16 * v81);
            uint64_t v84 = *v83;
            int v85 = v83[1];
            swift_bridgeObjectRetain();
LABEL_103:
            swift_bridgeObjectRelease();
            LOBYTE(v159) = 29;
            int v103 = sub_1BDD013AC() & 1;
            int v104 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v84, v85, (unsigned __int8 *)&v159, v103);
            uint64_t v105 = *(uint64_t (**)(long long *))(*(void *)v5 + 408);
            unint64_t v106 = (void (*)(long long *, void))v105(&v159);
            int v108 = v107;
            long long v109 = *v107;
            char v110 = swift_isUniquelyReferenced_nonNull_bridgeObject();
            void *v108 = v109;
            if (!v110 || (v109 & 0x8000000000000000) != 0 || (v109 & 0x4000000000000000) != 0)
            {
              sub_1BDD02F24(v109);
              long long v109 = v111;
              void *v108 = v111;
            }
            if ((v153 & 0x8000000000000000) != 0) {
              goto LABEL_162;
            }
            if (v153 >= *(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
LABEL_163:
              __break(1u);
LABEL_164:
              __break(1u);
              goto LABEL_165;
            }
            *(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 8 * v153 + 0x20) = v104;
            swift_release();
            sub_1BDDAFFD8();
            v106(&v159, 0);
            uint64_t v95 = v14;
            swift_retain();
            uint64_t v96 = (void (*)(long long *, void))v105(&v159);
            uint64_t v113 = v112;
            uint64_t v114 = *v112;
            uint64_t v115 = swift_isUniquelyReferenced_nonNull_bridgeObject();
            void *v113 = v114;
            if (!v115 || (v114 & 0x8000000000000000) != 0 || (v114 & 0x4000000000000000) != 0)
            {
              sub_1BDD02F24(v114);
              uint64_t v114 = v116;
              void *v113 = v116;
            }
            if (v40 < 0) {
              goto LABEL_164;
            }
            uint64_t v102 = v114 & 0xFFFFFFFFFFFFFF8;
            if ((unint64_t)v40 >= *(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_116;
            }
LABEL_149:
            *(void *)(v102 + 8 * v40 + 32) = v95;
            swift_release();
            sub_1BDDAFFD8();
            v96(&v159, 0);
            goto LABEL_150;
          }
        }
LABEL_102:
        uint64_t v84 = 0;
        int v85 = 0;
        goto LABEL_103;
      }
      uint64_t v3 = v14;
      swift_bridgeObjectRelease();
      if ((uint64_t)v154 < (uint64_t)v153)
      {
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
        goto LABEL_160;
      }
      uint64_t v79 = (*(uint64_t (**)(long long *))(*(void *)v5 + 408))(&v159);
      uint64_t v80 = v154 + 1;
      uint64_t v14 = v155;
      unint64_t v37 = v156;
      if (!__OFADD__(v154, 1)) {
        goto LABEL_118;
      }
      __break(1u);
LABEL_83:
      swift_release();
      swift_release();
      if (!*(void *)(v37 + 16)) {
        goto LABEL_84;
      }
      goto LABEL_35;
    }
  }
  LOBYTE(v159) = v63;
  uint64_t v158 = 31;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v159, &v158))
  {
    LOBYTE(v159) = v63;
    uint64_t v158 = 32;
    if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v159, &v158)) {
      goto LABEL_83;
    }
  }
  LOBYTE(v159) = v61;
  uint64_t v158 = 31;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v159, &v158))
  {
    LOBYTE(v159) = v61;
    uint64_t v158 = 32;
    if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v159, &v158)) {
      goto LABEL_83;
    }
  }
  if (!v64)
  {
LABEL_116:
    swift_bridgeObjectRelease();
    if (v40 < (uint64_t)v153)
    {
LABEL_166:
      __break(1u);
      goto LABEL_167;
    }
    uint64_t v79 = (*(uint64_t (**)(long long *))(*(void *)v5 + 408))(&v159);
    uint64_t v80 = v40 + 1;
    if (__OFADD__(v40, 1))
    {
LABEL_167:
      __break(1u);
LABEL_168:
      __break(1u);
      goto LABEL_169;
    }
LABEL_118:
    unint64_t v117 = (void (*)(long long *, void))v79;
    sub_1BDD03824(v153, v80);
    v117(&v159, 0);
LABEL_150:
    swift_release();
    sub_1BDD02E18(v5);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v33 = v5;
    goto LABEL_24;
  }
  uint64_t v73 = *(void *)(v37 + 16);
  if (v152)
  {
    if (v73 && (unint64_t v74 = sub_1BDCF0668(32), (v75 & 1) != 0))
    {
      uint64_t v76 = (uint64_t *)(*(void *)(v37 + 56) + 16 * v74);
      uint64_t v77 = *v76;
      BOOL v78 = v76[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v77 = 0;
      BOOL v78 = 0;
    }
    swift_bridgeObjectRelease();
    LOBYTE(v159) = 32;
    uint64_t v123 = sub_1BDD013AC() & 1;
    uint64_t v124 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v77, v78, (unsigned __int8 *)&v159, v123);
    uint64_t v125 = *(uint64_t (**)(long long *))(*(void *)v5 + 408);
    unint64_t v126 = (void (*)(long long *, void))v125(&v159);
    uint64_t v128 = v127;
    uint64_t v129 = *v127;
    id v130 = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *uint64_t v128 = v129;
    if (!v130 || (v129 & 0x8000000000000000) != 0 || (v129 & 0x4000000000000000) != 0)
    {
      sub_1BDD02F24(v129);
      uint64_t v129 = v131;
      *uint64_t v128 = v131;
    }
    if ((v153 & 0x8000000000000000) != 0) {
      goto LABEL_168;
    }
    if (v153 >= *(void *)((v129 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_169:
      __break(1u);
LABEL_170:
      __break(1u);
LABEL_171:
      __break(1u);
      goto LABEL_172;
    }
    *(void *)((v129 & 0xFFFFFFFFFFFFFF8) + 8 * v153 + 0x20) = v124;
    swift_release();
    sub_1BDDAFFD8();
    v126(&v159, 0);
    uint64_t v95 = v14;
    swift_retain();
    uint64_t v96 = (void (*)(long long *, void))v125(&v159);
    Swift::String v133 = v132;
    unint64_t v134 = *v132;
    uint64_t v135 = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *Swift::String v133 = v134;
    uint64_t v14 = v155;
    if (!v135 || (v134 & 0x8000000000000000) != 0 || (v134 & 0x4000000000000000) != 0)
    {
      sub_1BDD02F24(v134);
      unint64_t v134 = v136;
      *Swift::String v133 = v136;
    }
    if ((v154 & 0x8000000000000000) != 0) {
      goto LABEL_170;
    }
    uint64_t v102 = v134 & 0xFFFFFFFFFFFFFF8;
    if (v154 < *(void *)((v134 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_149;
    }
    __break(1u);
    goto LABEL_136;
  }
  if (!v73 || (BOOL v118 = sub_1BDCF0668(31), (v119 & 1) == 0))
  {
LABEL_136:
    unint64_t v121 = 0;
    uint64_t v122 = 0;
    goto LABEL_137;
  }
  uint64_t v120 = (uint64_t *)(*(void *)(v37 + 56) + 16 * v118);
  unint64_t v121 = *v120;
  uint64_t v122 = v120[1];
  swift_bridgeObjectRetain();
LABEL_137:
  swift_bridgeObjectRelease();
  LOBYTE(v159) = 31;
  id v137 = sub_1BDD013AC() & 1;
  uint64_t v138 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v121, v122, (unsigned __int8 *)&v159, v137);
  uint64_t v139 = *(uint64_t (**)(long long *))(*(void *)v5 + 408);
  uint64_t v140 = (void (*)(long long *, void))v139(&v159);
  char v142 = v141;
  uint64_t v143 = *v141;
  int v144 = swift_isUniquelyReferenced_nonNull_bridgeObject();
  char *v142 = v143;
  if (!v144 || (v143 & 0x8000000000000000) != 0 || (v143 & 0x4000000000000000) != 0)
  {
    sub_1BDD02F24(v143);
    uint64_t v143 = v145;
    char *v142 = v145;
  }
  if ((v153 & 0x8000000000000000) != 0) {
    goto LABEL_171;
  }
  if (v153 >= *(void *)((v143 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_172:
    __break(1u);
LABEL_173:
    __break(1u);
    goto LABEL_174;
  }
  *(void *)((v143 & 0xFFFFFFFFFFFFFF8) + 8 * v153 + 0x20) = v138;
  swift_release();
  sub_1BDDAFFD8();
  v140(&v159, 0);
  uint64_t v95 = v14;
  swift_retain();
  uint64_t v96 = (void (*)(long long *, void))v139(&v159);
  uint64_t v147 = v146;
  uint64_t v148 = *v146;
  char v149 = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v147 = v148;
  if (!v149 || (v148 & 0x8000000000000000) != 0 || (v148 & 0x4000000000000000) != 0)
  {
    sub_1BDD02F24(v148);
    uint64_t v148 = v150;
    *uint64_t v147 = v150;
  }
  if ((v154 & 0x8000000000000000) != 0) {
    goto LABEL_173;
  }
  uint64_t v102 = v148 & 0xFFFFFFFFFFFFFF8;
  if (v154 < *(void *)((v148 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_149;
  }
LABEL_174:
  __break(1u);
LABEL_175:
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

unint64_t sub_1BDD0509C(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = HIBYTE(a2) & 0xF;
  uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unint64_t v8 = (unint64_t)sub_1BDD059C4(a1, a2, 10);
    char v10 = v22;
    goto LABEL_39;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0) {
      uint64_t v7 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v7 = (unsigned __int8 *)sub_1BDDB03C8();
    }
    unint64_t v8 = (unint64_t)sub_1BDD05AAC(v7, v5, 10);
    char v10 = v9 & 1;
    goto LABEL_39;
  }
  v23[0] = a1;
  v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (!v4) {
      goto LABEL_52;
    }
    if (v4 == 1 || (BYTE1(a1) - 48) > 9u) {
      goto LABEL_36;
    }
    unint64_t v8 = (BYTE1(a1) - 48);
    uint64_t v15 = v4 - 2;
    if (v15)
    {
      unint64_t v16 = (unsigned __int8 *)v23 + 2;
      while (1)
      {
        unsigned int v17 = *v16 - 48;
        if (v17 > 9) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v8, 0xAuLL)) {
          goto LABEL_36;
        }
        BOOL v14 = __CFADD__(10 * v8, v17);
        unint64_t v8 = 10 * v8 + v17;
        if (v14) {
          goto LABEL_36;
        }
        char v10 = 0;
        ++v16;
        if (!--v15) {
          goto LABEL_39;
        }
      }
    }
LABEL_38:
    char v10 = 0;
    goto LABEL_39;
  }
  if (a1 != 45)
  {
    if (!v4 || (a1 - 48) > 9u) {
      goto LABEL_36;
    }
    unint64_t v8 = (a1 - 48);
    uint64_t v18 = v4 - 1;
    if (v18)
    {
      uint64_t v20 = (unsigned __int8 *)v23 + 1;
      while (1)
      {
        unsigned int v21 = *v20 - 48;
        if (v21 > 9) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v8, 0xAuLL)) {
          goto LABEL_36;
        }
        BOOL v14 = __CFADD__(10 * v8, v21);
        unint64_t v8 = 10 * v8 + v21;
        if (v14) {
          goto LABEL_36;
        }
        char v10 = 0;
        ++v20;
        if (!--v18) {
          goto LABEL_39;
        }
      }
    }
    goto LABEL_38;
  }
  if (v4)
  {
    if (v4 != 1 && (BYTE1(a1) - 48) <= 9u)
    {
      unint64_t v2 = 0;
      unint64_t v8 = -(uint64_t)(BYTE1(a1) - 48);
      if (BYTE1(a1) == 48)
      {
        uint64_t v11 = v4 - 2;
        if (v11)
        {
          uint64_t v12 = (unsigned __int8 *)v23 + 2;
          while (1)
          {
            unsigned int v13 = *v12 - 48;
            if (v13 > 9) {
              goto LABEL_36;
            }
            if (!is_mul_ok(v8, 0xAuLL)) {
              goto LABEL_36;
            }
            BOOL v14 = 10 * v8 >= v13;
            unint64_t v8 = 10 * v8 - v13;
            if (!v14) {
              goto LABEL_36;
            }
            char v10 = 0;
            ++v12;
            if (!--v11) {
              goto LABEL_39;
            }
          }
        }
        goto LABEL_38;
      }
      goto LABEL_53;
    }
LABEL_36:
    unint64_t v8 = 0;
    char v10 = 1;
    goto LABEL_39;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  char v10 = 1;
  unint64_t v8 = v2;
LABEL_39:
  swift_bridgeObjectRelease();
  if (v10) {
    return 0;
  }
  else {
    return v8;
  }
}

void sub_1BDD052FC()
{
}

uint64_t sub_1BDD0532C()
{
  return swift_bridgeObjectRelease();
}

uint64_t CalculateExpression.ShiftOperation.deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CalculateExpression.ShiftOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 40, 7);
}

char *sub_1BDD053AC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = a3;
    uint64_t v4 = a2;
    uint64_t v5 = a1;
    if (!(*v3 >> 62))
    {
      uint64_t v9 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v9 >= a2) {
        goto LABEL_4;
      }
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1BDDB0448();
  swift_bridgeObjectRelease();
  if (v9 < v4) {
    goto LABEL_38;
  }
LABEL_4:
  uint64_t v9 = v4 - v5;
  if (__OFSUB__(v4, v5))
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  unint64_t v7 = v8 >> 62;
  if (!(v8 >> 62))
  {
    uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v11 = v10 - v9;
    if (!__OFSUB__(v10, v9)) {
      goto LABEL_7;
    }
LABEL_42:
    __break(1u);
LABEL_43:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    uint64_t v13 = v12 + v31;
    if (!__OFADD__(v12, v31)) {
      goto LABEL_9;
    }
LABEL_45:
    __break(1u);
LABEL_46:
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
LABEL_40:
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1BDDB0448();
  swift_bridgeObjectRelease();
  uint64_t v11 = v10 - v9;
  if (__OFSUB__(v10, v9)) {
    goto LABEL_42;
  }
LABEL_7:
  unint64_t v6 = *v3;
  uint64_t v31 = v11;
  if (*v3 >> 62) {
    goto LABEL_43;
  }
  uint64_t v12 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v13 = v12 + v11;
  if (__OFADD__(v12, v11)) {
    goto LABEL_45;
  }
LABEL_9:
  unint64_t v6 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v3 = v6;
  unint64_t v29 = v7;
  unint64_t v30 = v8;
  uint64_t v12 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v15 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v13 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_19;
    }
    uint64_t v12 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_46;
  }
  uint64_t v16 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_16:
  if (v16 <= v13) {
    uint64_t v16 = v13;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = MEMORY[0x1C18862B0](v12, v16, 1, v6);
  swift_bridgeObjectRelease();
  unint64_t *v3 = v6;
  uint64_t v15 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_19:
  uint64_t v17 = v15 + 32 + 8 * v5;
  type metadata accessor for CalculateExpression.RichToken();
  uint64_t result = (char *)swift_arrayDestroy();
  uint64_t v19 = v31;
  if (!v31) {
    goto LABEL_28;
  }
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    uint64_t v19 = v31;
    uint64_t v21 = v27 - v4;
    if (!__OFSUB__(v27, v4)) {
      goto LABEL_22;
    }
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v20 = *(void *)(v15 + 16);
  uint64_t v21 = v20 - v4;
  if (__OFSUB__(v20, v4)) {
    goto LABEL_49;
  }
LABEL_22:
  uint64_t result = (char *)(v17 + 8 * v10);
  char v22 = (char *)(v15 + 32 + 8 * v4);
  if (result != v22 || result >= &v22[8 * v21])
  {
    uint64_t result = (char *)memmove(result, v22, 8 * v21);
    uint64_t v19 = v31;
  }
  if (v6 >> 62)
  {
LABEL_50:
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1BDDB0448();
    uint64_t result = (char *)swift_bridgeObjectRelease();
    uint64_t v24 = v28 + v31;
    if (!__OFADD__(v28, v31)) {
      goto LABEL_27;
    }
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  uint64_t v23 = *(void *)(v15 + 16);
  uint64_t v24 = v23 + v19;
  if (__OFADD__(v23, v19)) {
    goto LABEL_52;
  }
LABEL_27:
  *(void *)(v15 + 16) = v24;
LABEL_28:
  if (v10 >= 1)
  {
    if (v29)
    {
      unint64_t v25 = swift_bridgeObjectRetain();
      uint64_t v26 = sub_1BDD06360(v25);
      swift_bridgeObjectRelease();
      sub_1BDD062F8((uint64_t)(v26 + 4), v26[2], v10);
      swift_release();
      goto LABEL_33;
    }
    if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) == v10)
    {
      swift_arrayInitWithCopy();
      goto LABEL_33;
    }
LABEL_53:
    __break(1u);
    return result;
  }
LABEL_33:
  swift_bridgeObjectRelease();
  return (char *)sub_1BDDAFFD8();
}

char *sub_1BDD0572C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = a1;
    unint64_t v7 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1BDDB0448();
  swift_bridgeObjectRelease();
  if (v22 < v5) {
    goto LABEL_32;
  }
LABEL_4:
  uint64_t v9 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v8 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_34:
    __break(1u);
LABEL_35:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    uint64_t v11 = v10 + v8;
    if (!__OFADD__(v10, v8)) {
      goto LABEL_8;
    }
LABEL_37:
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v7 = *v4;
  if (*v4 >> 62) {
    goto LABEL_35;
  }
  uint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v11 = v10 + v8;
  if (__OFADD__(v10, v8)) {
    goto LABEL_37;
  }
LABEL_8:
  unint64_t v7 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v7;
  uint64_t v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v10 = 1;
  }
  if (v7 >> 62) {
    goto LABEL_38;
  }
  uint64_t v14 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11) {
    uint64_t v14 = v11;
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = MEMORY[0x1C18862B0](v10, v14, 1, v7);
  swift_bridgeObjectRelease();
  *uint64_t v4 = v7;
  uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  uint64_t v15 = (void *)(v13 + 32 + 8 * v6);
  type metadata accessor for CalculateExpression.RichToken();
  swift_arrayDestroy();
  if (v8)
  {
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
      uint64_t v17 = v23 - v5;
      if (!__OFSUB__(v23, v5)) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v16 = *(void *)(v13 + 16);
      uint64_t v17 = v16 - v5;
      if (!__OFSUB__(v16, v5))
      {
LABEL_21:
        uint64_t result = (char *)(v15 + 1);
        uint64_t v19 = (char *)(v13 + 32 + 8 * v5);
        if (v15 + 1 != (void *)v19 || result >= &v19[8 * v17]) {
          uint64_t result = (char *)memmove(result, v19, 8 * v17);
        }
        if (!(v7 >> 62))
        {
          uint64_t v20 = *(void *)(v13 + 16);
          uint64_t v21 = v20 + v8;
          if (!__OFADD__(v20, v8))
          {
LABEL_26:
            *(void *)(v13 + 16) = v21;
            goto LABEL_27;
          }
LABEL_44:
          __break(1u);
          return result;
        }
LABEL_42:
        swift_bridgeObjectRetain();
        uint64_t v24 = sub_1BDDB0448();
        uint64_t result = (char *)swift_bridgeObjectRelease();
        uint64_t v21 = v24 + v8;
        if (!__OFADD__(v24, v8)) {
          goto LABEL_26;
        }
        goto LABEL_44;
      }
    }
    __break(1u);
    goto LABEL_42;
  }
LABEL_27:
  *uint64_t v15 = v3;
  return (char *)sub_1BDDAFFD8();
}

unsigned __int8 *sub_1BDD059C4(uint64_t a1, uint64_t a2, int64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1BDDAFEF8();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1BDD05D28();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_1BDDB03C8();
  }
LABEL_7:
  uint64_t v11 = sub_1BDD05AAC(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1BDD05AAC(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v13 = v9 * a3;
              unsigned __int8 v14 = v11 + v12;
              BOOL v15 = v13 >= v14;
              unint64_t v9 = v13 - v14;
              if (!v15) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v25 = a3 + 48;
      unsigned __int8 v26 = a3 + 55;
      unsigned __int8 v27 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v25 = 58;
      }
      else
      {
        unsigned __int8 v27 = 97;
        unsigned __int8 v26 = 65;
      }
      if (result)
      {
        unint64_t v28 = 0;
        do
        {
          unsigned int v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27) {
                return 0;
              }
              char v30 = -87;
            }
            else
            {
              char v30 = -55;
            }
          }
          else
          {
            char v30 = -48;
          }
          if (!is_mul_ok(v28, a3)) {
            return 0;
          }
          unint64_t v31 = v28 * a3;
          unsigned __int8 v32 = v29 + v30;
          BOOL v15 = __CFADD__(v31, v32);
          unint64_t v28 = v31 + v32;
          if (v15) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v16 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v17 = a3 + 48;
  unsigned __int8 v18 = a3 + 55;
  unsigned __int8 v19 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v17 = 58;
  }
  else
  {
    unsigned __int8 v19 = 97;
    unsigned __int8 v18 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  uint64_t v20 = result + 1;
  do
  {
    unsigned int v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19) {
          return 0;
        }
        char v22 = -87;
      }
      else
      {
        char v22 = -55;
      }
    }
    else
    {
      char v22 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v23 = v9 * a3;
    unsigned __int8 v24 = v21 + v22;
    BOOL v15 = __CFADD__(v23, v24);
    unint64_t v9 = v23 + v24;
    if (v15) {
      return 0;
    }
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1BDD05D28()
{
  unint64_t v0 = sub_1BDDAFF08();
  uint64_t v4 = sub_1BDD05DA8(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1BDD05DA8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1BDD05F00(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_1BDD06000(v9, 0);
      unint64_t v12 = sub_1BDD06068((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_1BDDB03C8();
LABEL_4:
        JUMPOUT(0x1C1885CA0);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x1C1885CA0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1C1885CA0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_1BDD05F00(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_1BDD0627C(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_1BDD0627C(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
}

void *sub_1BDD06000(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DEFB8);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unint64_t sub_1BDD06068(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_1BDD0627C(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_1BDDAFE88();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_1BDDB03C8();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_1BDD0627C(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_1BDDAFE58();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1BDD0627C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1BDDAFEA8();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1C1885D60](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_1BDD062F8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2 == a3)
  {
    if (result)
    {
      type metadata accessor for CalculateExpression.RichToken();
      return swift_arrayInitWithCopy();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1BDD06360(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    if (v2 <= 0)
    {
      char v3 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
      char v3 = (void *)swift_allocObject();
      int64_t v4 = _swift_stdlib_malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    MEMORY[0x1C1886270](v3 + 4, v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    if (!v2) {
      return (void *)MEMORY[0x1E4FBC860];
    }
  }
  return v3;
}

uint64_t type metadata accessor for CalculateExpression.ShiftOperation()
{
  return self;
}

uint64_t method lookup function for CalculateExpression.ShiftOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalculateExpression.ShiftOperation);
}

uint64_t CalculateExpression.RichToken.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_id;
  uint64_t v4 = sub_1BDDAF9F8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t static CalculateExpression.RichToken.== infix(_:_:)()
{
  return sub_1BDDAF9D8() & 1;
}

uint64_t sub_1BDD06538@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 208))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1BDD06584(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 216);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_1BDD065EC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_text);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BDD0664C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1BDD066A8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 232))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1BDD066F8(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 240))(*a1);
}

uint64_t sub_1BDD06740(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_isImplicit);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t (*sub_1BDD0678C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1BDD067E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 256))();
  *a2 = result;
  return result;
}

uint64_t sub_1BDD0683C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 264);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_1BDD06898(uint64_t a1)
{
  return sub_1BDD069BC(a1, &OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_left);
}

uint64_t (*sub_1BDD068A4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1BDD06900@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 280))();
  *a2 = result;
  return result;
}

uint64_t sub_1BDD06954(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 288);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_1BDD069B0(uint64_t a1)
{
  return sub_1BDD069BC(a1, &OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_right);
}

uint64_t sub_1BDD069BC(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)(v2 + *a2);
  swift_beginAccess();
  *uint64_t v4 = a1;
  return swift_release();
}

uint64_t (*sub_1BDD06A0C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1BDD06A68@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 304))();
  *a2 = result;
  return result;
}

uint64_t sub_1BDD06ABC(void *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 312))(*a1);
}

uint64_t sub_1BDD06B0C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maxSuperscript;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1BDD06B54(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maxSuperscript);
  uint64_t result = swift_beginAccess();
  void *v3 = a1;
  return result;
}

uint64_t (*sub_1BDD06BA0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1BDD06BFC()
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v0 + 256))();
  if (result)
  {
    uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)result + 536))(result);
    uint64_t result = swift_release();
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_12:
      __break(1u);
      return result;
    }
    uint64_t v3 = (v2 + 1) & ~((v2 + 1) >> 63);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)v0 + 280))(result);
  if (!v4) {
    return v3;
  }
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 536))(v4);
  uint64_t result = swift_release();
  if (__OFADD__(v5, 1)) {
    goto LABEL_12;
  }
  if (v5 + 1 <= v3) {
    return v3;
  }
  else {
    return v5 + 1;
  }
}

unint64_t sub_1BDD06D34(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF058);
  uint64_t v2 = (void *)sub_1BDDB0488();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_OWORD *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    long long v13 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BDD13EB4(v5, v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v9 = v5;
    v9[1] = v6;
    *(_OWORD *)(v2[7] + 16 * result) = v13;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BDD06E54(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF008);
  uint64_t v2 = (void *)sub_1BDDB0488();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BDD13EB4(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BDD06F78(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269C8);
  uint64_t v2 = sub_1BDDB0488();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BDD19A60(v6, (uint64_t)&v13, &qword_1EBA26928);
    uint64_t v7 = v13;
    unint64_t result = sub_1BDCE6070(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_1BDD198E8(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BDD070A8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF010);
  uint64_t v2 = sub_1BDDB0488();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BDD19A60(v6, (uint64_t)v15, &qword_1EA0DF018);
    unint64_t result = sub_1BDD13F70((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_1BDD198E8(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BDD071EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  unint64_t v4 = sub_1BDD13EB4(a1, a2);
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(void *)(*(void *)(a3 + 56) + 16 * v4);
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t sub_1BDD07244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (unint64_t v4 = sub_1BDD13EB4(a1, a2), (v5 & 1) != 0)) {
    return *(void *)(*(void *)(a3 + 56) + 16 * v4);
  }
  else {
    return 0;
  }
}

uint64_t sub_1BDD07294(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1BDD0A5F0(a1);
  return v2;
}

uint64_t sub_1BDD072D4(uint64_t a1)
{
  uint64_t v3 = (*(uint64_t (**)(void))(*(void *)a1 + 208))();
  uint64_t v5 = v4;
  v22[0] = *(unsigned char *)(a1 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  char v6 = (*(uint64_t (**)(void))(*(void *)a1 + 232))();
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, unsigned char *, void))(v1 + 336))(v3, v5, v22, v6 & 1);
  char v8 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 304);
  uint64_t v9 = swift_retain();
  uint64_t v10 = v8(v9);
  long long v11 = (uint64_t *)(v7 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maxSuperscript);
  uint64_t v12 = swift_beginAccess();
  *long long v11 = v10;
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 256))(v12);
  if (v13)
  {
    uint64_t v14 = (unsigned char *)v13;
    type metadata accessor for CalculateExpression.RichExpression();
    swift_allocObject();
    uint64_t v15 = sub_1BDD1832C(v14);
    swift_release();
    uint64_t v16 = (void *)(v7 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_left);
    swift_beginAccess();
    *uint64_t v16 = v15;
    uint64_t v13 = swift_release();
  }
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 280))(v13);
  if (v17)
  {
    unint64_t v18 = (unsigned char *)v17;
    type metadata accessor for CalculateExpression.RichExpression();
    swift_allocObject();
    char v19 = sub_1BDD1832C(v18);
    swift_release();
    swift_release();
    uint64_t v20 = (void *)(v7 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_right);
    swift_beginAccess();
    *uint64_t v20 = v19;
  }
  swift_release();
  swift_release();
  return v7;
}

unsigned char *sub_1BDD07558(unsigned char *a1)
{
  swift_allocObject();
  uint64_t v2 = sub_1BDD1832C(a1);
  swift_release();
  return v2;
}

uint64_t sub_1BDD075A4()
{
  unsigned __int8 v6 = *(unsigned char *)(v0 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  unsigned __int8 v5 = 1;
  if (!static CalculateExpression.TokenType.== infix(_:_:)(&v6, &v5)) {
    return 0;
  }
  if ((*(uint64_t (**)(void))(*(void *)v0 + 208))() == 48 && v1 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v3 = sub_1BDDB04E8();
    swift_bridgeObjectRelease();
    return v3 & 1;
  }
}

BOOL sub_1BDD07660()
{
  return sub_1BDD07680(6778732, 0xE300000000000000);
}

BOOL sub_1BDD07670()
{
  return sub_1BDD07680(1885957222, 0xE400000000000000);
}

BOOL sub_1BDD07680(uint64_t a1, uint64_t a2)
{
  LOBYTE(v9[0]) = *(unsigned char *)(v2 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  LOBYTE(v8[0]) = 10;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v9, (unsigned __int8 *)v8)) {
    return 0;
  }
  v9[0] = (*(uint64_t (**)(void))(*(void *)v2 + 208))();
  v9[1] = v5;
  v8[0] = a1;
  v8[1] = a2;
  sub_1BDCEB640();
  uint64_t v6 = sub_1BDDB0218();
  swift_bridgeObjectRelease();
  return v6 == 0;
}

uint64_t sub_1BDD0774C()
{
  uint64_t v1 = v0;
  LOBYTE(v31[0]) = *(unsigned char *)(v0 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  v32[0] = 1;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v31, v32)) {
    return 0;
  }
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)v0 + 280))();
  if (!v2) {
    return 0;
  }
  unint64_t v3 = (*(uint64_t (**)(void))(*(void *)v2 + 392))();
  unint64_t v4 = v3;
  if (!(v3 >> 62))
  {
    if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
LABEL_64:
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!sub_1BDDB0448()) {
    goto LABEL_64;
  }
LABEL_5:
  if ((v4 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = MEMORY[0x1C18862A0](0, v4);
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_69:
      swift_bridgeObjectRelease();
      goto LABEL_55;
    }
    uint64_t v5 = *(void *)(v4 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  LOBYTE(v31[0]) = *(unsigned char *)(v5 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  v32[0] = 1;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v31, v32))
  {
    swift_release();
    swift_release();
    return 0;
  }
  (*(void (**)(void))(*(void *)v1 + 208))();
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v5 + 208))();
  uint64_t v8 = v7;
  uint64_t v9 = HIBYTE(v7) & 0xF;
  uint64_t v10 = result & 0xFFFFFFFFFFFFLL;
  if ((v8 & 0x2000000000000000) != 0) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v11) {
    goto LABEL_69;
  }
  if ((v8 & 0x1000000000000000) != 0)
  {
    uint64_t v15 = sub_1BDD141FC(result, v8, 10);
    swift_bridgeObjectRelease();
    if ((v15 & 0x100000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_55;
  }
  if ((v8 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v12 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v12 = (unsigned __int8 *)sub_1BDDB03C8();
    }
    uint64_t v13 = sub_1BDD143DC(v12, v10, 10);
    v32[0] = BYTE4(v13) & 1;
    char v14 = BYTE4(v13) & 1;
    LODWORD(v15) = v13;
LABEL_54:
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
    {
LABEL_56:
      uint64_t v27 = sub_1BDDAFD88();
      swift_bridgeObjectRelease();
      unint64_t v16 = strtoull((const char *)(v27 + 32), 0, v15);
      swift_release();
      swift_release();
      swift_release();
      return v16;
    }
LABEL_55:
    LODWORD(v15) = 10;
    goto LABEL_56;
  }
  v31[0] = result;
  v31[1] = v8 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v9) {
      goto LABEL_74;
    }
    if (v9 == 1) {
      goto LABEL_41;
    }
    LODWORD(v15) = (BYTE1(result) - 48);
    if (v15 > 9) {
      goto LABEL_41;
    }
    if (v9 != 2)
    {
      if ((BYTE2(result) - 48) > 9u) {
        goto LABEL_41;
      }
      LODWORD(v15) = 10 * v15 + (BYTE2(result) - 48);
      uint64_t v18 = v9 - 3;
      if (v18)
      {
        char v19 = (unsigned __int8 *)v31 + 3;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_41;
          }
          uint64_t v21 = 10 * (int)v15;
          if (v21 != (int)v21) {
            goto LABEL_41;
          }
          LODWORD(v15) = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_41;
          }
          char v14 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_54;
          }
        }
      }
    }
LABEL_53:
    char v14 = 0;
    goto LABEL_54;
  }
  if (result != 45)
  {
    if (!v9) {
      goto LABEL_41;
    }
    LODWORD(v15) = (result - 48);
    if (v15 > 9) {
      goto LABEL_41;
    }
    if (v9 != 1)
    {
      if ((BYTE1(result) - 48) > 9u) {
        goto LABEL_41;
      }
      LODWORD(v15) = 10 * v15 + (BYTE1(result) - 48);
      uint64_t v22 = v9 - 2;
      if (v22)
      {
        unint64_t v23 = (unsigned __int8 *)v31 + 2;
        while (1)
        {
          unsigned int v24 = *v23 - 48;
          if (v24 > 9) {
            goto LABEL_41;
          }
          uint64_t v25 = 10 * (int)v15;
          if (v25 != (int)v25) {
            goto LABEL_41;
          }
          LODWORD(v15) = v25 + v24;
          if (__OFADD__(v25, v24)) {
            goto LABEL_41;
          }
          char v14 = 0;
          ++v23;
          if (!--v22) {
            goto LABEL_54;
          }
        }
      }
    }
    goto LABEL_53;
  }
  if (v9)
  {
    if (v9 != 1)
    {
      unsigned int v17 = (BYTE1(result) - 48);
      if (v17 <= 9)
      {
        if (v9 == 2)
        {
          char v14 = 0;
          LODWORD(v15) = -v17;
          goto LABEL_54;
        }
        if ((BYTE2(result) - 48) <= 9u)
        {
          LODWORD(v15) = -10 * v17 - (BYTE2(result) - 48);
          uint64_t v26 = v9 - 3;
          if (!v26) {
            goto LABEL_53;
          }
          unint64_t v28 = (unsigned __int8 *)v31 + 3;
          while (1)
          {
            unsigned int v29 = *v28 - 48;
            if (v29 > 9) {
              break;
            }
            uint64_t v30 = 10 * (int)v15;
            if (v30 != (int)v30) {
              break;
            }
            LODWORD(v15) = v30 - v29;
            if (__OFSUB__(v30, v29)) {
              break;
            }
            char v14 = 0;
            ++v28;
            if (!--v26) {
              goto LABEL_54;
            }
          }
        }
      }
    }
LABEL_41:
    LODWORD(v15) = 0;
    char v14 = 1;
    goto LABEL_54;
  }
  __break(1u);
LABEL_74:
  __break(1u);
  return result;
}

void *sub_1BDD07C08@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(**(void **)a1 + 392))(&v4);
  *a2 = v4;
  return result;
}

uint64_t sub_1BDD07C6C(char *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  char v4 = *a1;
  return (*(uint64_t (**)(char *))(*(void *)v2 + 400))(&v4);
}

uint64_t sub_1BDD07CCC(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  unsigned __int8 v3 = *a1;
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v1 + 392))(&v23);
  char v4 = v23;
  v20[0] = v3;
  sub_1BDCE8EC8();
  uint64_t result = sub_1BDDAFD28();
  if (result) {
    return result;
  }
  LOBYTE(v23) = *(unsigned char *)(v1 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  v20[0] = 1;
  uint64_t result = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v23, v20);
  if ((result & 1) == 0) {
    return result;
  }
  (*(void (**)(void))(*(void *)v1 + 208))();
  LOBYTE(v23) = v4;
  uint64_t result = CalculateExpression.Base.rawValue.getter();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_13;
  }
  int v6 = result;
  if (result > 0x7FFFFFFF)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v7 = sub_1BDDAFD88();
  swift_bridgeObjectRelease();
  unint64_t v8 = strtoull((const char *)(v7 + 32), 0, v6);
  swift_release();
  uint64_t v23 = v8;
  v20[0] = v3;
  CalculateExpression.Base.rawValue.getter();
  sub_1BDD185E8();
  uint64_t v9 = sub_1BDDAFED8();
  (*(void (**)(uint64_t))(*(void *)v2 + 216))(v9);
  unsigned __int8 v22 = v3;
  char v21 = 1;
  sub_1BDCEBD08();
  sub_1BDDAFF98();
  sub_1BDDAFF98();
  if (v23 == *(void *)v20) {
    return (*(uint64_t (**)(void))(*(void *)v2 + 288))(0);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BDDB3730;
  LOBYTE(v23) = v3;
  uint64_t v23 = CalculateExpression.Base.rawValue.getter();
  uint64_t v11 = sub_1BDDB04C8();
  unint64_t v13 = v12;
  LOBYTE(v23) = 1;
  type metadata accessor for CalculateExpression.RichToken();
  uint64_t v14 = swift_allocObject();
  CalculateExpression.RichToken.init(text:type:isImplicit:)(v11, v13, (unsigned __int8 *)&v23, 0);
  *(void *)(v10 + 32) = v14;
  uint64_t v23 = v10;
  sub_1BDDAFFD8();
  uint64_t v15 = v23;
  type metadata accessor for CalculateExpression.RichExpression();
  uint64_t v16 = swift_allocObject();
  sub_1BDD0A5F0(v15);
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 288))(v16);
  uint64_t v18 = *(uint64_t (**)(uint64_t))(*(void *)v2 + 280);
  uint64_t v19 = v18(v17);
  if (v19)
  {
    LOBYTE(v23) = 2;
    (*(void (**)(uint64_t *))(*(void *)v19 + 280))(&v23);
    uint64_t v19 = swift_release();
  }
  uint64_t result = v18(v19);
  if (result)
  {
    (*(void (**)(void))(*(void *)result + 304))(0);
    return swift_release();
  }
  return result;
}

uint64_t (*sub_1BDD080E0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)a1 = v1;
  sub_1BDCEB784((char *)(a1 + 8));
  return sub_1BDD08134;
}

uint64_t sub_1BDD08134(uint64_t a1, char a2)
{
  if (a2)
  {
    char v4 = *(unsigned char *)(a1 + 8);
    uint64_t v2 = (unsigned __int8 *)&v4;
  }
  else
  {
    char v5 = *(unsigned char *)(a1 + 8);
    uint64_t v2 = (unsigned __int8 *)&v5;
  }
  return sub_1BDD07CCC(v2);
}

void sub_1BDD0817C()
{
  uint64_t v1 = v0;
  type metadata accessor for CalculateExpression();
  uint64_t v2 = *(void (**)(void))(*(void *)v0 + 208);
  v2();
  char v3 = static CalculateExpression.isHighPrecisionLiteral(_:)();
  swift_bridgeObjectRelease();
  if (v3)
  {
    id v4 = CalculateExpression.effectiveNumberFormatter.getter();
    objc_msgSend(v4, sel_copy);

    sub_1BDDB0238();
    swift_unknownObjectRelease();
    sub_1BDCE6874(0, &qword_1EBA26950);
    if (swift_dynamicCast())
    {
      char v5 = (void *)v22[1];
      uint64_t v6 = sub_1BDDAFA38();
      uint64_t v7 = *(void *)(v6 - 8);
      MEMORY[0x1F4188790](v6, v8);
      uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1BDDAFA08();
      uint64_t v11 = (void *)sub_1BDDAFA18();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      objc_msgSend(v5, sel_setLocale_, v11);

      objc_msgSend(v5, sel_setUsesGroupingSeparator_, 0);
      id v12 = (id)CalculateExpression.engine.getter();
      if (v12 == (id)1)
      {
        objc_msgSend(v5, sel_setMinimumIntegerDigits_, 1000000);
        objc_msgSend(v5, sel_setMinimumFractionDigits_, 0);
        objc_msgSend(v5, sel_setMaximumFractionDigits_, 0);
        id v12 = objc_msgSend(v5, sel_setMaximumSignificantDigits_, 1000000);
      }
      uint64_t v13 = ((uint64_t (*)(id))v2)(v12);
      uint64_t v15 = v14;
      id v16 = v5;
      if (objc_msgSend(v16, sel_usesSignificantDigits) && CalculateExpression.engine.getter() != 1)
      {
        v19.char value = 0;
        *(void *)&v18.Swift::Bool is_nil = *(void *)(v1
                                           + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_maximumSignificantDigits);
      }
      else
      {
        v18.Swift::Bool is_nil = 0;
        v19.char value = 1;
      }
      v20._uint64_t countAndFlagsBits = v13;
      v20._object = v15;
      v18.value.super.super.Class isa = (Class)v16;
      v19.Swift::Bool is_nil = 2;
      Swift::String v21 = CalculateExpression.formatLiteral(_:presentation:formatter:significantDigits:forceScientificNotation:)(v20, 1, v18, v19, v17);
      swift_bridgeObjectRelease();

      (*(void (**)(uint64_t, void *))(*(void *)v1 + 216))(v21._countAndFlagsBits, v21._object);
    }
  }
}

uint64_t CalculateExpression.RichToken.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_id;
  uint64_t v2 = sub_1BDDAF9F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CalculateExpression.RichToken.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_id;
  uint64_t v2 = sub_1BDDAF9F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x1F4186488](v0, v3, v4);
}

uint64_t sub_1BDD08650@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_id;
  uint64_t v4 = sub_1BDDAF9F8();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_1BDD086C8()
{
  return sub_1BDDAF9D8() & 1;
}

uint64_t sub_1BDD086FC()
{
  uint64_t v0 = sub_1BDD1863C((uint64_t)&unk_1F1865CA0);
  uint64_t result = swift_arrayDestroy();
  qword_1EA0E0928 = v0;
  return result;
}

unint64_t sub_1BDD08748()
{
  unint64_t result = sub_1BDD06D34((uint64_t)&unk_1F1865E30);
  qword_1EA0E0930 = result;
  return result;
}

void sub_1BDD08770()
{
  id v0 = objc_msgSend(self, sel_functionSet);
  uint64_t v1 = sub_1BDDB00E8();

  qword_1EA0E0938 = v1;
}

uint64_t *sub_1BDD087D4()
{
  if (qword_1EA0DF580 != -1) {
    swift_once();
  }
  return &qword_1EA0E0938;
}

uint64_t sub_1BDD08820()
{
  uint64_t v0 = sub_1BDD1863C((uint64_t)&unk_1F1865FB0);
  uint64_t result = swift_arrayDestroy();
  qword_1EA0E0940 = v0;
  return result;
}

uint64_t sub_1BDD0886C()
{
  uint64_t result = sub_1BDCF0210((uint64_t)&unk_1F18660C0);
  qword_1EA0E0948 = result;
  return result;
}

uint64_t CalculateExpression.RichExpression.BaselineOffset.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  if ((unint64_t)(result + 1) >= 4) {
    char v2 = 4;
  }
  else {
    char v2 = 0x3010002u >> (8 * (result + 1));
  }
  *a2 = v2;
  return result;
}

uint64_t CalculateExpression.RichExpression.BaselineOffset.rawValue.getter()
{
  return qword_1BDDB3B88[*v0];
}

BOOL sub_1BDD088D0(char *a1, char *a2)
{
  return qword_1BDDB3B88[*a1] == qword_1BDDB3B88[*a2];
}

uint64_t sub_1BDD088F4()
{
  return sub_1BDDB0578();
}

uint64_t sub_1BDD08944()
{
  return sub_1BDDB0568();
}

uint64_t sub_1BDD0897C()
{
  return sub_1BDDB0578();
}

uint64_t sub_1BDD089C8@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return CalculateExpression.RichExpression.BaselineOffset.init(rawValue:)(*a1, a2);
}

void sub_1BDD089D0(void *a1@<X8>)
{
  *a1 = qword_1BDDB3B88[*v1];
}

BOOL static CalculateExpression.RichExpression.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_1BDD089F4()
{
  return sub_1BDDB0568();
}

uint64_t sub_1BDD08A20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 176))();
  *a2 = result;
  return result;
}

uint64_t sub_1BDD08A6C(uint64_t a1, uint64_t a2)
{
  char v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 184);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

void (*sub_1BDD08AC0(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = swift_weakLoadStrong();
  return sub_1BDD08B3C;
}

void sub_1BDD08B3C(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_weakAssign();
  if (a2)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_release();
  }
  free(v3);
}

uint64_t sub_1BDD08BBC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 224))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1BDD08C0C(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 232))(*a1);
}

unsigned char *(*sub_1BDD08C54(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = sub_1BDCE81C4() & 1;
  return sub_1BDD08CA0;
}

unsigned char *sub_1BDD08CA0(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 24) = result[8];
  return result;
}

uint64_t sub_1BDD08CB0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 248))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1BDD08D00(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 256))(*a1);
}

uint64_t sub_1BDD08D50()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t (*sub_1BDD08D84())()
{
  return j_j__swift_endAccess;
}

void *sub_1BDD08DD8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(**(void **)a1 + 272))(&v4);
  *a2 = v4;
  return result;
}

uint64_t sub_1BDD08E3C(char *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  char v4 = *a1;
  return (*(uint64_t (**)(char *))(*(void *)v2 + 280))(&v4);
}

uint64_t sub_1BDD08E9C(char *a1)
{
  char v2 = *a1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 26) = v2;
  return result;
}

uint64_t (*sub_1BDD08EDC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1BDD08F30@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 296))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1BDD08F88(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 304))(*a1);
}

uint64_t sub_1BDD08FD8(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 27) = a1;
  return result;
}

uint64_t (*sub_1BDD09018())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1BDD0906C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 344))();
  *a2 = result;
  return result;
}

uint64_t sub_1BDD090C0(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 352);
  id v4 = *a1;
  return v3(v2);
}

uint64_t (*sub_1BDD09124())()
{
  return j__swift_endAccess;
}

uint64_t sub_1BDD0917C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 392))();
  *a2 = result;
  return result;
}

uint64_t sub_1BDD091D0(uint64_t a1, uint64_t a2)
{
  id v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 400);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t (*sub_1BDD0922C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BDD09284;
}

uint64_t sub_1BDD09284(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    *(unsigned char *)(*(void *)(a1 + 24) + 28) = 1;
  }
  return result;
}

uint64_t sub_1BDD092BC(uint64_t a1)
{
  if (a1 < 0) {
    return 0;
  }
  uint64_t v3 = (uint64_t (**)(void))(*v1 + 392);
  id v4 = *v3;
  unint64_t v5 = (*v3)();
  uint64_t v6 = v5 >> 62 ? sub_1BDDB0448() : *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v7 = swift_bridgeObjectRelease();
  if (v6 <= a1) {
    return 0;
  }
  uint64_t result = ((uint64_t (*)(uint64_t))v4)(v7);
  if ((result & 0xC000000000000001) != 0)
  {
    uint64_t v9 = MEMORY[0x1C18862A0](a1, result);
    goto LABEL_8;
  }
  if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a1)
  {
    uint64_t v9 = *(void *)(result + 8 * a1 + 32);
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDD093BC()
{
  sub_1BDD09410();
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_1BDD093D8()
{
  sub_1BDD09410();
  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t sub_1BDD093F4()
{
  sub_1BDD09410();
  return *(unsigned __int8 *)(v0 + 50);
}

void sub_1BDD09410()
{
  if (v0[28] != 1) {
    return;
  }
  v0[28] = 0;
  uint64_t v1 = (uint64_t (**)(void))(*(void *)v0 + 392);
  id v2 = *v1;
  unint64_t v3 = (*v1)();
  if (v3 >> 62) {
LABEL_92:
  }
    uint64_t v4 = sub_1BDDB0448();
  else {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4 < 1)
  {
    unint64_t v7 = 0;
    goto LABEL_10;
  }
  uint64_t v6 = ((uint64_t (*)(uint64_t))v2)(v5);
  unint64_t v7 = v6;
  if ((v6 & 0xC000000000000001) != 0) {
    goto LABEL_98;
  }
  if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v8 = *(void *)(v6 + 32);
    swift_retain();
    goto LABEL_8;
  }
  __break(1u);
LABEL_100:
  uint64_t v14 = MEMORY[0x1C18862A0](v7, v4);
LABEL_16:
  swift_bridgeObjectRelease();
  unsigned __int8 v15 = *(unsigned char *)(v14 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  unsigned __int8 v60 = v15;
  unsigned __int8 v59 = 10;
  v7 += static CalculateExpression.TokenType.== infix(_:_:)(&v60, &v59);
LABEL_17:
  unint64_t v16 = v2();
  if (v16 >> 62) {
    uint64_t v17 = sub_1BDDB0448();
  }
  else {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v18 = swift_bridgeObjectRelease();
  if ((uint64_t)v7 >= v17) {
    goto LABEL_48;
  }
  uint64_t v19 = ((uint64_t (*)(uint64_t))v2)(v18);
  uint64_t v4 = v19;
  if ((v19 & 0xC000000000000001) != 0) {
    goto LABEL_102;
  }
  if (v7 < *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v20 = *(void *)(v19 + 8 * v7 + 32);
    swift_retain();
    goto LABEL_23;
  }
  __break(1u);
LABEL_104:
  uint64_t v39 = MEMORY[0x1C18862A0](v7, v17);
LABEL_57:
  swift_bridgeObjectRelease();
  unsigned __int8 v40 = *(unsigned char *)(v39 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  unsigned __int8 v60 = v40;
  unsigned __int8 v59 = 8;
  BOOL v41 = static CalculateExpression.TokenType.== infix(_:_:)(&v60, &v59);
  v7 += v41;
  LOBYTE(v4) = !v41 & v4;
  while (1)
  {
    unint64_t v42 = v2();
    if (v42 >> 62) {
      uint64_t v43 = sub_1BDDB0448();
    }
    else {
      uint64_t v43 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v44 = swift_bridgeObjectRelease();
    if ((uint64_t)v7 >= v43) {
      goto LABEL_67;
    }
    uint64_t v45 = ((uint64_t (*)(uint64_t))v2)(v44);
    uint64_t v17 = v45;
    if ((v45 & 0xC000000000000001) != 0) {
      goto LABEL_107;
    }
    if ((v7 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v7 < *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v46 = *(void *)(v45 + 8 * v7 + 32);
      swift_retain();
      goto LABEL_65;
    }
    __break(1u);
LABEL_110:
    uint64_t v23 = sub_1BDDB0448();
LABEL_26:
    uint64_t v24 = swift_bridgeObjectRelease();
    if ((uint64_t)v7 < v23) {
      break;
    }
LABEL_49:
    LOBYTE(v4) = 0;
LABEL_50:
    unint64_t v35 = v2();
    if (v35 >> 62) {
      uint64_t v36 = sub_1BDDB0448();
    }
    else {
      uint64_t v36 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v37 = swift_bridgeObjectRelease();
    if ((uint64_t)v7 < v36)
    {
      uint64_t v38 = ((uint64_t (*)(uint64_t))v2)(v37);
      uint64_t v17 = v38;
      if ((v38 & 0xC000000000000001) == 0)
      {
        if ((v7 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v7 < *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v39 = *(void *)(v38 + 8 * v7 + 32);
          swift_retain();
          goto LABEL_57;
        }
        __break(1u);
LABEL_107:
        uint64_t v46 = MEMORY[0x1C18862A0](v7, v17);
LABEL_65:
        swift_bridgeObjectRelease();
        unsigned __int8 v47 = *(unsigned char *)(v46 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        swift_release();
        unsigned __int8 v60 = v47;
        unsigned __int8 v59 = 7;
        if (static CalculateExpression.TokenType.== infix(_:_:)(&v60, &v59))
        {
          LOBYTE(v4) = 0;
          ++v7;
          char v48 = 1;
        }
        else
        {
LABEL_67:
          char v48 = 0;
        }
        if (((*(uint64_t (**)(void))(*(void *)v0 + 560))() & 1) != 0
          || ((*(uint64_t (**)(void))(*(void *)v0 + 568))() & 1) != 0)
        {
          BOOL v49 = 0;
        }
        else
        {
          unint64_t v50 = v2();
          if (v50 >> 62) {
            uint64_t v51 = sub_1BDDB0448();
          }
          else {
            uint64_t v51 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease();
          BOOL v49 = v7 == v51;
        }
        v0[48] = v49;
        v0[49] = v48;
        v0[50] = v4 & 1;
        return;
      }
      goto LABEL_104;
    }
  }
  uint64_t v25 = 0;
  while (1)
  {
    uint64_t v26 = ((uint64_t (*)(uint64_t))v2)(v24);
    if ((v26 & 0xC000000000000001) != 0)
    {
      uint64_t v27 = MEMORY[0x1C18862A0](v7, v26);
    }
    else
    {
      if (v7 >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_89;
      }
      uint64_t v27 = *(void *)(v26 + 8 * v7 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    unsigned __int8 v28 = *(unsigned char *)(v27 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    unsigned __int8 v60 = v28;
    unsigned __int8 v59 = 15;
    if (static CalculateExpression.TokenType.== infix(_:_:)(&v60, &v59))
    {
      BOOL v29 = __OFADD__(v25++, 1);
      if (v29) {
        goto LABEL_90;
      }
      goto LABEL_41;
    }
    uint64_t v30 = v2();
    if ((v30 & 0xC000000000000001) != 0)
    {
      uint64_t v31 = MEMORY[0x1C18862A0](v7, v30);
    }
    else
    {
      if (v7 >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_91;
      }
      uint64_t v31 = *(void *)(v30 + 8 * v7 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    unsigned __int8 v32 = *(unsigned char *)(v31 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    unsigned __int8 v60 = v32;
    unsigned __int8 v59 = 16;
    if (static CalculateExpression.TokenType.== infix(_:_:)(&v60, &v59))
    {
      BOOL v29 = __OFSUB__(v25--, 1);
      if (v29)
      {
        __break(1u);
LABEL_98:
        uint64_t v8 = MEMORY[0x1C18862A0](0, v7);
LABEL_8:
        swift_bridgeObjectRelease();
        unsigned __int8 v9 = *(unsigned char *)(v8 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        swift_release();
        unsigned __int8 v60 = v9;
        unsigned __int8 v59 = 4;
        unint64_t v7 = static CalculateExpression.TokenType.== infix(_:_:)(&v60, &v59);
LABEL_10:
        unint64_t v10 = v2();
        if (v10 >> 62) {
          uint64_t v11 = sub_1BDDB0448();
        }
        else {
          uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        uint64_t v12 = swift_bridgeObjectRelease();
        if ((uint64_t)v7 >= v11) {
          goto LABEL_17;
        }
        uint64_t v13 = ((uint64_t (*)(uint64_t))v2)(v12);
        uint64_t v4 = v13;
        if ((v13 & 0xC000000000000001) == 0)
        {
          if (v7 < *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            uint64_t v14 = *(void *)(v13 + 8 * v7 + 32);
            swift_retain();
            goto LABEL_16;
          }
          __break(1u);
LABEL_102:
          uint64_t v20 = MEMORY[0x1C18862A0](v7, v4);
LABEL_23:
          swift_bridgeObjectRelease();
          unsigned __int8 v21 = *(unsigned char *)(v20 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
          swift_release();
          unsigned __int8 v60 = v21;
          unsigned __int8 v59 = 15;
          if (static CalculateExpression.TokenType.== infix(_:_:)(&v60, &v59))
          {
            unint64_t v22 = v2();
            if (!(v22 >> 62))
            {
              uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
              goto LABEL_26;
            }
            goto LABEL_110;
          }
LABEL_48:
          LOBYTE(v4) = 0;
          ++v7;
          goto LABEL_50;
        }
        goto LABEL_100;
      }
      if (v25 <= 0) {
        break;
      }
    }
LABEL_41:
    unint64_t v33 = v2();
    if (v33 >> 62) {
      uint64_t v34 = sub_1BDDB0448();
    }
    else {
      uint64_t v34 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    ++v7;
    uint64_t v24 = swift_bridgeObjectRelease();
    if ((uint64_t)v7 >= v34) {
      goto LABEL_49;
    }
  }
  unint64_t v52 = v2();
  unint64_t v53 = v52;
  if (v52 >> 62) {
    uint64_t v54 = sub_1BDDB0448();
  }
  else {
    uint64_t v54 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v55 = swift_bridgeObjectRelease();
  if (__OFSUB__(v54, 1))
  {
    __break(1u);
    goto LABEL_114;
  }
  if (v54 - 1 != v7)
  {
    LOBYTE(v4) = 0;
    goto LABEL_86;
  }
  uint64_t v56 = ((uint64_t (*)(uint64_t))v2)(v55);
  unint64_t v53 = v56;
  if ((v56 & 0xC000000000000001) != 0)
  {
LABEL_114:
    uint64_t v57 = MEMORY[0x1C18862A0](v7, v53);
LABEL_84:
    swift_bridgeObjectRelease();
    unsigned __int8 v58 = *(unsigned char *)(v57 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    unsigned __int8 v60 = v58;
    unsigned __int8 v59 = 16;
    LOBYTE(v4) = static CalculateExpression.TokenType.== infix(_:_:)(&v60, &v59);
LABEL_86:
    BOOL v29 = __OFADD__(v7++, 1);
    if (!v29) {
      goto LABEL_50;
    }
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v7 < *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v57 = *(void *)(v56 + 8 * v7 + 32);
    swift_retain();
    goto LABEL_84;
  }
  __break(1u);
}

unint64_t sub_1BDD09C44()
{
  unint64_t result = (*(uint64_t (**)(void))(*(void *)v0 + 392))();
  unint64_t v2 = result;
  if (!(result >> 62))
  {
    uint64_t v3 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
LABEL_12:
    uint64_t v4 = 0;
LABEL_13:
    swift_bridgeObjectRelease();
    return v4;
  }
  unint64_t result = sub_1BDDB0448();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_12;
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x1C18862A0](v5, v2);
      }
      else
      {
        uint64_t v6 = *(void *)(v2 + 8 * v5 + 32);
        swift_retain();
      }
      ++v5;
      uint64_t v7 = (*(uint64_t (**)(void))(*(void *)v6 + 328))();
      swift_release();
      if (v7 > v4) {
        uint64_t v4 = v7;
      }
    }
    while (v3 != v5);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDD09D74()
{
  return sub_1BDD09EEC();
}

uint64_t sub_1BDD09D7C(char a1)
{
  if ((a1 & 1) != 0 || ((*(uint64_t (**)(void))(*(void *)v1 + 488))() & 1) == 0)
  {
    if (((*(uint64_t (**)(void))(*(void *)v1 + 520))() & 1) != 0
      || ((*(uint64_t (**)(void))(*(void *)v1 + 456))() & 1) != 0)
    {
      char v2 = 0;
    }
    else
    {
      char v2 = (*(uint64_t (**)(void))(*(void *)v1 + 560))() ^ 1;
    }
  }
  else
  {
    char v2 = 1;
  }
  return v2 & 1;
}

BOOL sub_1BDD09E60()
{
  unint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 392))();
  if (v1 >> 62) {
    uint64_t v2 = sub_1BDDB0448();
  }
  else {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v2 == 0;
}

uint64_t sub_1BDD09EE4()
{
  return sub_1BDD09EEC();
}

uint64_t sub_1BDD09EEC()
{
  unint64_t v1 = (uint64_t (**)(void))(*v0 + 392);
  uint64_t v2 = *v1;
  unint64_t v3 = (*v1)();
  if (v3 >> 62) {
    uint64_t v4 = sub_1BDDB0448();
  }
  else {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4 != 1) {
    goto LABEL_13;
  }
  unint64_t v6 = ((uint64_t (*)(uint64_t))v2)(v5);
  unint64_t v7 = v6;
  if (!(v6 >> 62))
  {
    uint64_t result = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (result) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
  uint64_t result = sub_1BDDB0448();
  if (!result)
  {
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    char v9 = 0;
    return v9 & 1;
  }
LABEL_6:
  if ((v7 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1C18862A0](0, v7);
    goto LABEL_9;
  }
  if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BDCF0848();
    char v9 = sub_1BDDAFD28();
    return v9 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDD0A054()
{
  unint64_t v1 = (uint64_t (**)(void))(*v0 + 392);
  uint64_t v2 = *v1;
  unint64_t v3 = (*v1)();
  if (v3 >> 62) {
    uint64_t v4 = sub_1BDDB0448();
  }
  else {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v4 != 1) {
    return 0;
  }
  unint64_t v6 = ((uint64_t (*)(uint64_t))v2)(v5);
  unint64_t v7 = v6;
  if (v6 >> 62)
  {
    uint64_t result = sub_1BDDB0448();
    if (result) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
  uint64_t result = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!result)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_6:
  if ((v7 & 0xC000000000000001) != 0)
  {
    uint64_t v9 = MEMORY[0x1C18862A0](0, v7);
    goto LABEL_9;
  }
  if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v9 = *(void *)(v7 + 32);
    swift_retain();
LABEL_9:
    uint64_t v10 = swift_bridgeObjectRelease();
    char v11 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 352))(v10);
    swift_release();
    return v11 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDD0A1AC()
{
  unint64_t v1 = *(uint64_t (**)(unsigned char *))(*(void *)v0 + 408);
  swift_retain();
  uint64_t v2 = (uint64_t (*)(unsigned char *, void))v1(v6);
  uint64_t v4 = v3;
  MEMORY[0x1C1885EA0]();
  if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1BDDB0008();
  }
  sub_1BDDB0048();
  sub_1BDDAFFD8();
  return v2(v6, 0);
}

uint64_t sub_1BDD0A278()
{
  return sub_1BDDB0578();
}

uint64_t sub_1BDD0A2C0()
{
  return sub_1BDDB0568();
}

uint64_t sub_1BDD0A2EC(uint64_t a1, unsigned __int8 a2)
{
  unint64_t v3 = v2;
  uint64_t v4 = a1;
  if (a2 - 1 >= 2)
  {
    if (a2) {
      goto LABEL_3;
    }
LABEL_7:
    int v8 = 0;
    goto LABEL_8;
  }
  a1 = (*(uint64_t (**)(BOOL))(*(void *)a1 + 552))(a2 == 1);
  if ((a1 & 1) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  v17[0] = 15;
  type metadata accessor for CalculateExpression.RichToken();
  swift_allocObject();
  CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, v17, 0);
  uint64_t v5 = (uint64_t (*)(unsigned __int8 *, void))(*(uint64_t (**)(unsigned __int8 *))(*v2 + 408))(v17);
  unint64_t v7 = v6;
  MEMORY[0x1C1885EA0](v5);
  if (*(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1BDDB0008();
  }
  sub_1BDDB0048();
  sub_1BDDAFFD8();
  a1 = v5(v17, 0);
  int v8 = 1;
LABEL_8:
  unint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 392))(a1);
  uint64_t v10 = (uint64_t (**)(unsigned __int8 *))(*v3 + 408);
  char v11 = *v10;
  uint64_t v12 = (uint64_t (*)(unsigned __int8 *, void))(*v10)(v17);
  sub_1BDCE4468(v9);
  uint64_t result = v12(v17, 0);
  if (v8)
  {
    v17[0] = 16;
    type metadata accessor for CalculateExpression.RichToken();
    swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, v17, 0);
    uint64_t v14 = (uint64_t (*)(unsigned __int8 *, void))v11(v17);
    unint64_t v16 = v15;
    MEMORY[0x1C1885EA0]();
    if (*(void *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1BDDB0008();
    }
    sub_1BDDB0048();
    sub_1BDDAFFD8();
    return v14(v17, 0);
  }
  return result;
}

uint64_t sub_1BDD0A5A4()
{
  swift_weakInit();
  *(_DWORD *)(v0 + 24) = 16777473;
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(unsigned char *)(v0 + 28) = 1;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = v1;
  *(_WORD *)(v0 + 48) = 0;
  *(unsigned char *)(v0 + 50) = 0;
  return v0;
}

uint64_t sub_1BDD0A5F0(uint64_t a1)
{
  swift_weakInit();
  *(unsigned char *)(v1 + 24) = 1;
  *(_DWORD *)(v1 + 25) = 16842753;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = v3;
  *(_WORD *)(v1 + 48) = 0;
  *(unsigned char *)(v1 + 50) = 0;
  swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  swift_bridgeObjectRelease();
  (*(void (**)(void))(*(void *)v1 + 232))(0);
  swift_beginAccess();
  *(unsigned char *)(v1 + 25) = 0;
  return v1;
}

uint64_t sub_1BDD0A6C8(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v6 = v4;
  unint64_t v9 = (unint64_t)a2;
  uint64_t v10 = a1;
  unint64_t v11 = *a2;
  uint64_t v12 = (unint64_t *)(*(void *)a1 + 264);
  unint64_t v13 = *v12;
  int64_t v14 = (int64_t)v12;
  uint64_t v15 = ((uint64_t (*)(void))*v12)();
  if ((v15 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = MEMORY[0x1C18862A0](v11, v15);
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1BDD18918(v10, (uint64_t *)v9);
    v492 = (unsigned char *)v5;
    v488 = (unsigned char *)a3;
    unint64_t v482 = v11;
    if (*a4 != 1) {
      goto LABEL_20;
    }
    unint64_t v17 = *(void *)v9;
    unint64_t v18 = ((uint64_t (*)(uint64_t))v13)(v16);
    if (v18 >> 62) {
      uint64_t v5 = sub_1BDDB0448();
    }
    else {
      uint64_t v5 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v19 = swift_bridgeObjectRelease();
    if ((uint64_t)v17 >= v5) {
      goto LABEL_14;
    }
    uint64_t v20 = ((uint64_t (*)(uint64_t))v13)(v19);
    uint64_t v21 = v20;
    if ((v20 & 0xC000000000000001) == 0)
    {
      if ((v17 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v17 < *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v22 = *(void *)(v20 + 8 * v17 + 32);
        swift_retain();
        goto LABEL_13;
      }
      __break(1u);
      goto LABEL_388;
    }
    uint64_t v22 = MEMORY[0x1C18862A0](v17, v20);
LABEL_13:
    swift_bridgeObjectRelease();
    char v23 = *(unsigned char *)(v22 + 48);
    swift_release();
    LOBYTE(v496) = v23;
    LOBYTE(v500) = 22;
    sub_1BDCF0848();
    a3 = (uint64_t)v488;
    if ((sub_1BDDAFD28() & 1) == 0)
    {
      unsigned char *v488 = 1;
      uint64_t v24 = ((uint64_t (*)(void))v13)();
      uint64_t v25 = (uint64_t *)v24;
      uint64_t v5 = (uint64_t)v492;
      if ((v24 & 0xC000000000000001) != 0) {
        goto LABEL_411;
      }
      if ((v17 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v17 < *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v26 = *(void *)(v24 + 8 * v17 + 32);
        swift_retain();
        goto LABEL_19;
      }
      __break(1u);
      goto LABEL_414;
    }
LABEL_14:
    uint64_t v16 = sub_1BDD18918(v10, (uint64_t *)v9);
    *a4 = 0;
    uint64_t v5 = (uint64_t)v492;
    goto LABEL_20;
  }
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v11 < *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v5 = *(void *)(v15 + 8 * v11 + 32);
    swift_retain();
    goto LABEL_5;
  }
  __break(1u);
LABEL_333:
  swift_bridgeObjectRetain();
  uint64_t v117 = sub_1BDDB0448();
LABEL_119:
  uint64_t v118 = MEMORY[0x1E4FBC860];
  if (v117 == 1)
  {
    if ((v11 & 0xC000000000000001) != 0)
    {
      uint64_t v119 = MEMORY[0x1C18862A0](0, v11);
    }
    else
    {
      if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_371:
        uint64_t v141 = MEMORY[0x1C18862A0](0, v9);
        uint64_t v10 = (uint64_t (*)(uint64_t))v494;
        goto LABEL_372;
      }
      uint64_t v119 = *(void *)(v11 + 32);
      swift_retain();
    }
    uint64_t v120 = swift_bridgeObjectRelease();
    unint64_t v121 = (*(uint64_t (**)(uint64_t))(*(void *)v119 + 392))(v120);
    swift_release();
    uint64_t v122 = sub_1BDD13E54(v121);
    swift_bridgeObjectRelease();
    if (!v122)
    {
      swift_bridgeObjectRelease();
      unint64_t v499 = v118;
      unint64_t v11 = v118;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (v13)
  {
    swift_retain();
    sub_1BDD16C54(0, v11);
    sub_1BDD16DE4(0, 0, v13, v123, (void (*)(void))type metadata accessor for CalculateExpression.RichExpression);
    sub_1BDD16CD4(0, 0, -1);
  }
  if (v494 && (uint64_t v124 = v490(*(void *)v9)) != 0)
  {
    char v125 = *(unsigned char *)(v124 + 48);
    swift_release();
    LOBYTE(v496) = v125;
    uint64_t v118 = MEMORY[0x1E4FBC860];
    LOBYTE(v500) = 7;
    sub_1BDCF0848();
    int v126 = sub_1BDDAFD28();
  }
  else
  {
    int v126 = 0;
  }
  type metadata accessor for CalculateExpression.RichExpression();
  uint64_t v6 = swift_allocObject();
  uint64_t v127 = swift_weakInit();
  uint64_t v489 = 16777473;
  *(_DWORD *)(v6 + 24) = 16777473;
  *(unsigned char *)(v6 + 28) = 1;
  *(void *)(v6 + 32) = 0;
  *(void *)(v6 + 40) = v118;
  *(_WORD *)(v6 + 48) = 0;
  *(unsigned char *)(v6 + 50) = 0;
  LODWORD(v490) = v126;
  if (v126)
  {
    LOBYTE(v496) = 15;
    type metadata accessor for CalculateExpression.RichToken();
    uint64_t v128 = swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v496, 0);
    (*(void (**)(uint64_t))(*(void *)v6 + 584))(v128);
    uint64_t v127 = swift_release();
  }
  unint64_t v17 = 10127586;
  if (((uint64_t (*)(uint64_t))v14)(v127) == 10127586 && v129 == 0xA300000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_142:
    swift_bridgeObjectRelease();
    unint64_t v9 = v499;
    unint64_t v137 = swift_bridgeObjectRetain();
    uint64_t v138 = sub_1BDD13E54(v137);
    uint64_t v139 = swift_bridgeObjectRelease();
    if (v138 == 1)
    {
      LOBYTE(v496) = 10;
      type metadata accessor for CalculateExpression.RichToken();
      uint64_t v140 = swift_allocObject();
      CalculateExpression.RichToken.init(text:type:isImplicit:)(10127586, 0xA300000000000000, (unsigned __int8 *)&v496, 0);
      (*(void (**)(uint64_t))(*(void *)v6 + 584))(v140);
      int64_t v14 = (int64_t)v486;
      if ((v9 & 0xC000000000000001) != 0) {
        goto LABEL_371;
      }
      uint64_t v10 = (uint64_t (*)(uint64_t))v494;
      a3 = MEMORY[0x1E4FBC860];
      if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_145;
      }
      __break(1u);
      goto LABEL_375;
    }
    a3 = v14;
    unsigned char *v488 = 1;
    uint64_t v143 = ((uint64_t (*)(uint64_t))v483)(v139);
    int64_t v14 = (int64_t)v486;
    if ((v143 & 0xC000000000000001) != 0)
    {
      unint64_t v17 = MEMORY[0x1C18862A0](v482, v143);
    }
    else
    {
      if ((v482 & 0x8000000000000000) != 0)
      {
LABEL_375:
        __break(1u);
LABEL_376:
        __break(1u);
        goto LABEL_377;
      }
      if (*(void *)((v143 & 0xFFFFFFFFFFFFFF8) + 0x10) <= v482)
      {
LABEL_377:
        __break(1u);
LABEL_378:
        __break(1u);
        goto LABEL_379;
      }
      unint64_t v17 = *(void *)(v143 + 8 * v482 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    unint64_t v144 = swift_bridgeObjectRetain();
    uint64_t v69 = sub_1BDD13E54(v144);
    uint64_t v145 = swift_bridgeObjectRelease();
    if (v69 >= (uint64_t)0xFFFFFFFF80000000)
    {
      if (v69 <= 0x7FFFFFFF) {
        goto LABEL_157;
      }
      goto LABEL_378;
    }
    goto LABEL_376;
  }
  char v130 = sub_1BDDB04E8();
  uint64_t v131 = swift_bridgeObjectRelease();
  if (v130) {
    goto LABEL_142;
  }
  uint64_t v132 = ((uint64_t (*)(uint64_t))v14)(v131);
  uint64_t v69 = v133;
  uint64_t v496 = v132;
  unint64_t v497 = v133;
  unint64_t v500 = 1953657203;
  unint64_t v501 = 0xE400000000000000;
  uint64_t v134 = sub_1BDDB0218();
  uint64_t v135 = swift_bridgeObjectRelease();
  if (!v134) {
    goto LABEL_142;
  }
  if (((uint64_t (*)(uint64_t))v14)(v135) == 10193122 && v136 == 0xA300000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_179:
    swift_bridgeObjectRelease();
    unint64_t v9 = v499;
    unint64_t v188 = swift_bridgeObjectRetain();
    uint64_t v189 = sub_1BDD13E54(v188);
    uint64_t v190 = swift_bridgeObjectRelease();
    if (v189 != 1) {
      goto LABEL_185;
    }
    LOBYTE(v496) = 10;
    type metadata accessor for CalculateExpression.RichToken();
    unint64_t v17 = swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(10127586, 0xA300000000000000, (unsigned __int8 *)&v496, 0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
    uint64_t v191 = swift_allocObject();
    *(_OWORD *)(v191 + 16) = xmmword_1BDDB3730;
    LOBYTE(v496) = 1;
    uint64_t v192 = swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(51, 0xE100000000000000, (unsigned __int8 *)&v496, 0);
    *(void *)(v191 + 32) = v192;
    uint64_t v496 = v191;
    sub_1BDDAFFD8();
    uint64_t v193 = v496;
    uint64_t v69 = swift_allocObject();
    sub_1BDD0A5F0(v193);
    uint64_t v194 = (*(uint64_t (**)(uint64_t))(*(void *)v17 + 264))(v69);
    uint64_t v195 = (*(uint64_t (**)(uint64_t))(*(void *)v17 + 256))(v194);
    int64_t v14 = (int64_t)v486;
    if (v195)
    {
      LOBYTE(v496) = 1;
      (*(void (**)(uint64_t *))(*(void *)v195 + 280))(&v496);
      swift_release();
    }
    uint64_t v190 = (*(uint64_t (**)(unint64_t))(*(void *)v6 + 584))(v17);
    uint64_t v10 = (uint64_t (*)(uint64_t))v494;
    if ((v9 & 0xC000000000000001) == 0)
    {
      a3 = MEMORY[0x1E4FBC860];
      if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_145;
      }
      __break(1u);
LABEL_185:
      a3 = v14;
      unsigned char *v488 = 1;
      uint64_t v196 = ((uint64_t (*)(uint64_t))v483)(v190);
      uint64_t v74 = v196;
      int64_t v14 = (int64_t)v486;
      if ((v196 & 0xC000000000000001) == 0)
      {
        if ((v482 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (*(void *)((v196 & 0xFFFFFFFFFFFFFF8) + 0x10) > v482)
        {
          unint64_t v17 = *(void *)(v196 + 8 * v482 + 32);
          swift_retain();
          goto LABEL_189;
        }
        __break(1u);
LABEL_475:
        __break(1u);
LABEL_476:
        uint64_t v75 = MEMORY[0x1C18862A0](v69, v74);
        uint64_t v5 = (uint64_t)v492;
        int64_t v14 = v6;
        goto LABEL_65;
      }
      unint64_t v17 = MEMORY[0x1C18862A0](v482, v196);
LABEL_189:
      swift_bridgeObjectRelease();
      unint64_t v197 = swift_bridgeObjectRetain();
      uint64_t v69 = sub_1BDD13E54(v197);
      uint64_t v145 = swift_bridgeObjectRelease();
      if (v69 >= (uint64_t)0xFFFFFFFF80000000)
      {
        if (v69 <= 0x7FFFFFFF) {
          goto LABEL_157;
        }
        __break(1u);
        goto LABEL_192;
      }
      goto LABEL_475;
    }
    uint64_t v141 = MEMORY[0x1C18862A0](0, v9);
LABEL_372:
    a3 = MEMORY[0x1E4FBC860];
    goto LABEL_146;
  }
  uint64_t v69 = sub_1BDDB04E8();
  uint64_t v162 = swift_bridgeObjectRelease();
  if (v69) {
    goto LABEL_179;
  }
  uint64_t v163 = ((uint64_t (*)(uint64_t))v14)(v162);
  uint64_t v69 = v164;
  uint64_t v496 = v163;
  unint64_t v497 = v164;
  unint64_t v17 = 0xE400000000000000;
  unint64_t v500 = 1953653347;
  unint64_t v501 = 0xE400000000000000;
  uint64_t v165 = sub_1BDDB0218();
  uint64_t v166 = swift_bridgeObjectRelease();
  if (!v165) {
    goto LABEL_179;
  }
  uint64_t v167 = ((uint64_t (*)(uint64_t))v14)(v166);
  unint64_t v169 = v168;
  uint64_t v496 = v167;
  unint64_t v497 = v168;
  unint64_t v500 = 1953460082;
  unint64_t v501 = 0xE400000000000000;
  unint64_t v17 = (unint64_t)v481;
  uint64_t v170 = sub_1BDDB0218();
  uint64_t v171 = swift_bridgeObjectRelease();
  if (!v170)
  {
    swift_bridgeObjectRelease();
    unint64_t v9 = v499;
    unint64_t v217 = swift_bridgeObjectRetain();
    uint64_t v218 = sub_1BDD13E54(v217);
    swift_bridgeObjectRelease();
    a3 = v482;
    if (v218 != 1)
    {
      unint64_t v219 = swift_bridgeObjectRetain();
      uint64_t v220 = sub_1BDD13E54(v219);
      uint64_t v221 = swift_bridgeObjectRelease();
      if (v220 != 2)
      {
        v481 = (void (*)(void))v14;
        unsigned char *v488 = 1;
        uint64_t v269 = ((uint64_t (*)(uint64_t))v483)(v221);
        unint64_t v227 = v269;
        int64_t v14 = (int64_t)v486;
        if ((v269 & 0xC000000000000001) != 0) {
          goto LABEL_524;
        }
        if ((v482 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (*(void *)((v269 & 0xFFFFFFFFFFFFFF8) + 0x10) > v482)
        {
          unint64_t v17 = *(void *)(v269 + 8 * v482 + 32);
          swift_retain();
          goto LABEL_273;
        }
        __break(1u);
        goto LABEL_527;
      }
    }
    LOBYTE(v496) = 10;
    type metadata accessor for CalculateExpression.RichToken();
    unint64_t v17 = swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(10127586, 0xA300000000000000, (unsigned __int8 *)&v496, 0);
    unint64_t v222 = swift_bridgeObjectRetain();
    uint64_t v223 = sub_1BDD13E54(v222);
    swift_bridgeObjectRelease();
    uint64_t v10 = (uint64_t (*)(uint64_t))v494;
    int64_t v14 = (int64_t)v486;
    if (v223 != 2) {
      goto LABEL_219;
    }
    uint64_t v224 = swift_allocObject();
    sub_1BDD0A5A4();
    uint64_t v225 = (*(uint64_t (**)(uint64_t))(*(void *)v17 + 264))(v224);
    uint64_t v5 = *(void *)(*(void *)v17 + 256);
    uint64_t v226 = ((uint64_t (*)(uint64_t))v5)(v225);
    if (!v226) {
      goto LABEL_217;
    }
    unint64_t v227 = v226;
    if ((v9 & 0xC000000000000001) != 0) {
      goto LABEL_529;
    }
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1uLL)
    {
      unint64_t v169 = *(void *)(v9 + 40);
      swift_retain();
      goto LABEL_216;
    }
    __break(1u);
LABEL_531:
    uint64_t v238 = MEMORY[0x1C18862A0](1, v9);
LABEL_230:
    (*(void (**)(uint64_t, uint64_t))(*(void *)v227 + 592))(v238, 1);
    swift_release();
    uint64_t v237 = swift_release();
LABEL_231:
    uint64_t v239 = v10(v237);
    if (v239)
    {
      LOBYTE(v496) = 1;
      (*(void (**)(uint64_t *))(*(void *)v239 + 280))(&v496);
      goto LABEL_233;
    }
LABEL_299:
    swift_release();
    goto LABEL_159;
  }
  uint64_t v496 = ((uint64_t (*)(uint64_t))v14)(v171);
  unint64_t v497 = v172;
  unint64_t v500 = 7827312;
  unint64_t v501 = 0xE300000000000000;
  uint64_t v173 = sub_1BDDB0218();
  uint64_t v174 = swift_bridgeObjectRelease();
  unint64_t v169 = v482;
  if (!v173) {
    goto LABEL_222;
  }
  uint64_t v496 = ((uint64_t (*)(uint64_t))v14)(v174);
  unint64_t v497 = v175;
  unint64_t v500 = 6778732;
  unint64_t v501 = 0xE300000000000000;
  uint64_t v176 = sub_1BDDB0218();
  uint64_t v177 = swift_bridgeObjectRelease();
  if (!v176)
  {
    unint64_t v9 = v499;
    unint64_t v245 = swift_bridgeObjectRetain();
    uint64_t v246 = sub_1BDD13E54(v245);
    swift_bridgeObjectRelease();
    if (v246 == 1
      || (unint64_t v247 = swift_bridgeObjectRetain(), v248 = sub_1BDD13E54(v247), swift_bridgeObjectRelease(), v248 == 2))
    {
      LOBYTE(v496) = 10;
      type metadata accessor for CalculateExpression.RichToken();
      unint64_t v17 = swift_allocObject();
      CalculateExpression.RichToken.init(text:type:isImplicit:)(6778732, 0xE300000000000000, (unsigned __int8 *)&v496, 0);
      (*(void (**)(unint64_t))(*(void *)v6 + 584))(v17);
      unint64_t v249 = swift_bridgeObjectRetain();
      uint64_t v250 = sub_1BDD13E54(v249);
      swift_bridgeObjectRelease();
      int64_t v14 = (int64_t)v486;
      if (v250 == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
        uint64_t v251 = swift_allocObject();
        *(_OWORD *)(v251 + 16) = xmmword_1BDDB3730;
        LOBYTE(v496) = 1;
        uint64_t v252 = swift_allocObject();
        CalculateExpression.RichToken.init(text:type:isImplicit:)(12337, 0xE200000000000000, (unsigned __int8 *)&v496, 0);
        *(void *)(v251 + 32) = v252;
        uint64_t v496 = v251;
        sub_1BDDAFFD8();
        uint64_t v253 = v496;
        uint64_t v254 = swift_allocObject();
        sub_1BDD0A5F0(v253);
        sub_1BDD16C54(0, v9);
        sub_1BDD16DE4(0, 0, v254, v255, (void (*)(void))type metadata accessor for CalculateExpression.RichExpression);
      }
      uint64_t v256 = swift_allocObject();
      sub_1BDD0A5A4();
      uint64_t v257 = (*(uint64_t (**)(uint64_t))(*(void *)v17 + 288))(v256);
      a3 = *(void *)v17 + 280;
      v236 = *(uint64_t (***)(uint64_t))a3;
      uint64_t v258 = (*(uint64_t (**)(uint64_t))a3)(v257);
      uint64_t v10 = (uint64_t (*)(uint64_t))v494;
      if (!v258) {
        goto LABEL_250;
      }
      unint64_t v227 = v258;
      if ((v499 & 0xC000000000000001) != 0) {
        goto LABEL_533;
      }
      if (*(void *)((v499 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v259 = *(void *)(v499 + 32);
        swift_retain();
        goto LABEL_249;
      }
      __break(1u);
LABEL_535:
      uint64_t v277 = MEMORY[0x1C18862A0](0, v9);
      uint64_t v10 = (uint64_t (*)(uint64_t))v494;
LABEL_280:
      (*(void (**)(uint64_t, uint64_t))(*(void *)v6 + 592))(v277, 1);
      swift_release();
      (*(void (**)(unint64_t))(*(void *)v6 + 584))(v17);
LABEL_148:
      swift_release();
      if (v10) {
        goto LABEL_161;
      }
LABEL_149:
      if ((v490 & 1) == 0) {
        goto LABEL_166;
      }
LABEL_150:
      LOBYTE(v496) = 16;
      type metadata accessor for CalculateExpression.RichToken();
      uint64_t v142 = swift_allocObject();
      CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v496, 0);
      (*(void (**)(uint64_t))(*(void *)v6 + 584))(v142);
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_167;
    }
    a3 = v14;
    uint64_t v292 = swift_bridgeObjectRelease();
    unsigned char *v488 = 1;
    uint64_t v293 = ((uint64_t (*)(uint64_t))v483)(v292);
    unint64_t v276 = v293;
    int64_t v14 = (int64_t)v486;
    if ((v293 & 0xC000000000000001) == 0)
    {
      if ((v482 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(void *)((v293 & 0xFFFFFFFFFFFFFF8) + 0x10) > v482)
      {
        unint64_t v17 = *(void *)(v293 + 8 * v482 + 32);
        swift_retain();
        goto LABEL_304;
      }
      __break(1u);
LABEL_544:
      __break(1u);
LABEL_545:
      __break(1u);
LABEL_546:
      a3 = v14;
      unint64_t v17 = MEMORY[0x1C18862A0](v482, v276);
      int64_t v14 = (int64_t)v486;
LABEL_325:
      swift_bridgeObjectRelease();
      unint64_t v310 = swift_bridgeObjectRetain();
      uint64_t v69 = sub_1BDD13E54(v310);
      uint64_t v145 = swift_bridgeObjectRelease();
      if (v69 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_549;
      }
      if (v69 <= 0x7FFFFFFF) {
        goto LABEL_157;
      }
      __break(1u);
LABEL_328:
      char v311 = sub_1BDDB04E8();
      uint64_t v312 = swift_bridgeObjectRelease();
      unint64_t v13 = a3;
      if (v311)
      {
        swift_release();
        goto LABEL_193;
      }
      unsigned char *v488 = 1;
      uint64_t v338 = ((uint64_t (*)(uint64_t))a3)(v312);
      uint64_t v286 = v338;
      if ((v338 & 0xC000000000000001) == 0)
      {
        if ((v17 & 0x8000000000000000) == 0)
        {
          if (*(void *)((v338 & 0xFFFFFFFFFFFFFF8) + 0x10) <= v17) {
            goto LABEL_565;
          }
          uint64_t v339 = *(void *)(v338 + 8 * v17 + 32);
          swift_retain();
          goto LABEL_358;
        }
        __break(1u);
LABEL_565:
        __break(1u);
LABEL_566:
        uint64_t v305 = MEMORY[0x1C18862A0](0, v9);
LABEL_317:
        (*(void (**)(uint64_t, uint64_t))(*(void *)v6 + 592))(v305, 3);
        swift_release();
LABEL_147:
        swift_release();
        goto LABEL_148;
      }
LABEL_563:
      uint64_t v339 = MEMORY[0x1C18862A0](v17, v286);
LABEL_358:
      uint64_t v340 = swift_bridgeObjectRelease();
      ((void (*)(uint64_t))v14)(v340);
      id v341 = objc_allocWithZone((Class)CalculateError);
      v342 = (void *)sub_1BDDAFD38();
      swift_bridgeObjectRelease();
      id v485 = objc_msgSend(v341, sel_initInvalidFlipArgument_, v342);

      v343 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))(*(void *)v339 + 224))(&v496);
      v345 = v344;
      sub_1BDD168AC();
      v346 = *(void **)(*v345 + 16);
      sub_1BDD168F8(v346);
      uint64_t v347 = *v345;
      *(void *)(v347 + 16) = (char *)v346 + 1;
      *(void *)(v347 + 8 * (void)v346 + 32) = v485;
      v343(&v496, 0);
      swift_release();
      swift_release();
      unint64_t v13 = (unint64_t)v483;
      goto LABEL_193;
    }
LABEL_541:
    unint64_t v17 = MEMORY[0x1C18862A0](v482, v276);
LABEL_304:
    swift_bridgeObjectRelease();
    unint64_t v294 = swift_bridgeObjectRetain();
    uint64_t v271 = sub_1BDD13E54(v294);
    uint64_t v295 = swift_bridgeObjectRelease();
    if (v271 < (uint64_t)0xFFFFFFFF80000000) {
      goto LABEL_544;
    }
    if (v271 > 0x7FFFFFFF) {
      goto LABEL_545;
    }
    ((void (*)(uint64_t))a3)(v295);
LABEL_307:
    id v296 = objc_allocWithZone((Class)CalculateError);
    uint64_t v147 = (void *)sub_1BDDAFD38();
    swift_bridgeObjectRelease();
    id v148 = objc_msgSend(v296, sel_initIncorrectArguments_minArguments_maxArguments_inFunction_, v271, 1, 2, v147);
LABEL_158:
    id v149 = v148;

    uint64_t v150 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))(*(void *)v17 + 224))(&v496);
    char v152 = v151;
    sub_1BDD168AC();
    uint64_t v153 = *(void **)(*v152 + 16);
    sub_1BDD168F8(v153);
    uint64_t v154 = *v152;
    *(void *)(v154 + 16) = (char *)v153 + 1;
    *(void *)(v154 + 8 * (void)v153 + 32) = v149;
    v150(&v496, 0);
    swift_release();
LABEL_159:
    uint64_t v10 = (uint64_t (*)(uint64_t))v494;
    goto LABEL_160;
  }
  uint64_t v496 = ((uint64_t (*)(uint64_t))v14)(v177);
  unint64_t v497 = v178;
  unint64_t v500 = 1952670054;
  unint64_t v501 = 0xE400000000000000;
  uint64_t v179 = sub_1BDDB0218();
  uint64_t v180 = swift_bridgeObjectRelease();
  a3 = MEMORY[0x1E4FBC860];
  if (!v179)
  {
    swift_bridgeObjectRelease();
    unint64_t v9 = v499;
    unint64_t v273 = swift_bridgeObjectRetain();
    uint64_t v274 = sub_1BDD13E54(v273);
    uint64_t v275 = swift_bridgeObjectRelease();
    if (v274 == 1)
    {
      LOBYTE(v496) = 8;
      type metadata accessor for CalculateExpression.RichToken();
      unint64_t v17 = swift_allocObject();
      unint64_t v276 = v17;
      CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v496, 0);
      int64_t v14 = (int64_t)v486;
      if ((v9 & 0xC000000000000001) != 0) {
        goto LABEL_535;
      }
      uint64_t v10 = (uint64_t (*)(uint64_t))v494;
      if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v277 = *(void *)(v9 + 32);
        swift_retain();
        goto LABEL_280;
      }
      __break(1u);
LABEL_538:
      __break(1u);
      goto LABEL_539;
    }
    a3 = v14;
    unsigned char *v488 = 1;
    uint64_t v290 = ((uint64_t (*)(uint64_t))v483)(v275);
    unint64_t v276 = v290;
    int64_t v14 = (int64_t)v486;
    if ((v290 & 0xC000000000000001) == 0)
    {
      if ((v482 & 0x8000000000000000) != 0) {
        goto LABEL_538;
      }
      if (*(void *)((v290 & 0xFFFFFFFFFFFFFF8) + 0x10) <= v482)
      {
LABEL_539:
        __break(1u);
      }
      else
      {
        unint64_t v17 = *(void *)(v290 + 8 * v482 + 32);
        swift_retain();
LABEL_296:
        swift_bridgeObjectRelease();
        unint64_t v291 = swift_bridgeObjectRetain();
        uint64_t v69 = sub_1BDD13E54(v291);
        uint64_t v145 = swift_bridgeObjectRelease();
        if (v69 >= (uint64_t)0xFFFFFFFF80000000)
        {
          if (v69 <= 0x7FFFFFFF)
          {
LABEL_157:
            ((void (*)(uint64_t))a3)(v145);
            id v146 = objc_allocWithZone((Class)CalculateError);
            uint64_t v147 = (void *)sub_1BDDAFD38();
            swift_bridgeObjectRelease();
            id v148 = objc_msgSend(v146, sel_initIncorrectArguments_correctArguments_inFunction_, v69, 1, v147);
            goto LABEL_158;
          }
          __break(1u);
          goto LABEL_299;
        }
      }
      __break(1u);
      goto LABEL_541;
    }
    unint64_t v17 = MEMORY[0x1C18862A0](v482, v290);
    goto LABEL_296;
  }
  a3 = v493;
  uint64_t v496 = ((uint64_t (*)(uint64_t))v14)(v180);
  unint64_t v497 = v181;
  unint64_t v500 = 7370853;
  unint64_t v501 = 0xE300000000000000;
  uint64_t v182 = sub_1BDDB0218();
  uint64_t v183 = swift_bridgeObjectRelease();
  if (!v182)
  {
    swift_bridgeObjectRelease();
    unint64_t v9 = v499;
    unint64_t v278 = swift_bridgeObjectRetain();
    uint64_t v279 = sub_1BDD13E54(v278);
    uint64_t v280 = swift_bridgeObjectRelease();
    if (v279 == 1)
    {
      LOBYTE(v496) = 13;
      type metadata accessor for CalculateExpression.RichToken();
      unint64_t v17 = swift_allocObject();
      CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v496, 0);
      LOBYTE(v496) = 7;
      uint64_t v281 = swift_allocObject();
      CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v496, 0);
      v282 = *(void (**)(unint64_t))(*(void *)v6 + 584);
      v282(v17);
      v282(v281);
      uint64_t v283 = swift_allocObject();
      sub_1BDD0A5A4();
      uint64_t v284 = (*(uint64_t (**)(uint64_t))(*(void *)v281 + 288))(v283);
      uint64_t v10 = *(uint64_t (**)(uint64_t))(*(void *)v281 + 280);
      uint64_t v285 = v10(v284);
      int64_t v14 = (int64_t)v486;
      if (!v285) {
        goto LABEL_287;
      }
      uint64_t v286 = v285;
      if ((v9 & 0xC000000000000001) != 0) {
        goto LABEL_561;
      }
      if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v287 = *(void *)(v9 + 32);
        swift_retain();
        goto LABEL_286;
      }
      __break(1u);
      goto LABEL_563;
    }
    unsigned char *v488 = 1;
    uint64_t v309 = ((uint64_t (*)(uint64_t))v483)(v280);
    unint64_t v276 = v309;
    if ((v309 & 0xC000000000000001) != 0) {
      goto LABEL_546;
    }
    if ((v482 & 0x8000000000000000) == 0)
    {
      a3 = v14;
      int64_t v14 = (int64_t)v486;
      if (*(void *)((v309 & 0xFFFFFFFFFFFFFF8) + 0x10) <= v482) {
        goto LABEL_548;
      }
      unint64_t v17 = *(void *)(v309 + 8 * v482 + 32);
      swift_retain();
      goto LABEL_325;
    }
    __break(1u);
LABEL_548:
    __break(1u);
LABEL_549:
    __break(1u);
LABEL_550:
    uint64_t v141 = MEMORY[0x1C18862A0](0, v9);
    uint64_t v10 = (uint64_t (*)(uint64_t))v494;
LABEL_146:
    (*(void (**)(uint64_t, uint64_t))(*(void *)v6 + 592))(v141, 3);
    goto LABEL_147;
  }
  uint64_t v496 = ((uint64_t (*)(uint64_t))v14)(v183);
  unint64_t v497 = v184;
  unint64_t v500 = 1885957222;
  unint64_t v501 = 0xE400000000000000;
  uint64_t v185 = sub_1BDDB0218();
  uint64_t v186 = swift_bridgeObjectRelease();
  if (!v185)
  {
    v481 = (void (*)(void))v14;
    uint64_t v297 = swift_bridgeObjectRelease();
    int64_t v14 = (int64_t)v486;
    if (!v486) {
      goto LABEL_360;
    }
    unint64_t v9 = v499;
    swift_retain();
    unint64_t v298 = swift_bridgeObjectRetain();
    uint64_t v299 = sub_1BDD13E54(v298);
    swift_bridgeObjectRelease();
    if (v299 != 1)
    {
      uint64_t v297 = swift_release();
LABEL_360:
      unsigned char *v488 = 1;
      uint64_t v348 = ((uint64_t (*)(uint64_t))v483)(v297);
      uint64_t v286 = v348;
      if ((v348 & 0xC000000000000001) == 0)
      {
        if ((v482 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (*(void *)((v348 & 0xFFFFFFFFFFFFFF8) + 0x10) > v482)
        {
          unint64_t v17 = *(void *)(v348 + 8 * v482 + 32);
          swift_retain();
          goto LABEL_364;
        }
        __break(1u);
LABEL_554:
        __break(1u);
        goto LABEL_555;
      }
      unint64_t v17 = MEMORY[0x1C18862A0](v482, v348);
LABEL_364:
      swift_bridgeObjectRelease();
      unint64_t v9 = v499;
      unint64_t v349 = swift_bridgeObjectRetain();
      uint64_t v265 = sub_1BDD13E54(v349);
      uint64_t v350 = swift_bridgeObjectRelease();
      if (v265 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_554;
      }
      if (v265 <= 0x7FFFFFFF)
      {
        ((void (*)(uint64_t))v481)(v350);
LABEL_266:
        id v266 = objc_allocWithZone((Class)CalculateError);
        uint64_t v147 = (void *)sub_1BDDAFD38();
        swift_bridgeObjectRelease();
        id v148 = objc_msgSend(v266, sel_initIncorrectArguments_correctArguments_inFunction_, v265, 2, v147);
        goto LABEL_158;
      }
LABEL_555:
      __break(1u);
LABEL_556:
      uint64_t v5 = MEMORY[0x1C18862A0](v482, v286);
LABEL_347:
      swift_bridgeObjectRelease();
      unint64_t v326 = swift_bridgeObjectRetain();
      uint64_t v327 = sub_1BDD13E54(v326);
      uint64_t v328 = swift_bridgeObjectRelease();
      if (v327 >= (uint64_t)0xFFFFFFFF80000000)
      {
        if (v327 <= 0x7FFFFFFF)
        {
LABEL_349:
          (*(void (**)(uint64_t))(*(void *)v17 + 208))(v328);
          id v329 = objc_allocWithZone((Class)CalculateError);
          v330 = (void *)sub_1BDDAFD38();
          swift_bridgeObjectRelease();
          id v331 = objc_msgSend(v329, sel_initIncorrectArguments_correctArguments_inFunction_, v327, 1, v330);

          v332 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))(*(void *)v5 + 224))(&v496);
          v334 = v333;
          sub_1BDD168AC();
          v335 = *(void **)(*v334 + 16);
          sub_1BDD168F8(v335);
          uint64_t v336 = *v334;
          *(void *)(v336 + 16) = (char *)v335 + 1;
          *(void *)(v336 + 8 * (void)v335 + 32) = v331;
          v332(&v496, 0);
          swift_release();
          swift_release();
          goto LABEL_350;
        }
LABEL_560:
        __break(1u);
LABEL_561:
        uint64_t v287 = MEMORY[0x1C18862A0](0, v9);
LABEL_286:
        (*(void (**)(uint64_t, uint64_t))(*(void *)v286 + 592))(v287, 1);
        swift_release();
        uint64_t v285 = swift_release();
LABEL_287:
        uint64_t v288 = v10(v285);
        if (v288)
        {
          LOBYTE(v496) = 1;
          (*(void (**)(uint64_t *))(*(void *)v288 + 280))(&v496);
          swift_release();
        }
LABEL_233:
        swift_release();
        goto LABEL_299;
      }
LABEL_559:
      __break(1u);
      goto LABEL_560;
    }
    LOBYTE(v496) = 10;
    type metadata accessor for CalculateExpression.RichToken();
    unint64_t v17 = swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(1885957222, 0xE400000000000000, (unsigned __int8 *)&v496, 0);
    (*(void (**)(unint64_t))(*(void *)v6 + 584))(v17);
    uint64_t v300 = swift_allocObject();
    sub_1BDD0A5A4();
    uint64_t v301 = (*(uint64_t (**)(uint64_t))(*(void *)v17 + 288))(v300);
    v302 = *(uint64_t (**)(uint64_t))(*(void *)v17 + 280);
    uint64_t v303 = v302(v301);
    if (v303)
    {
      (*(void (**)(id, uint64_t))(*(void *)v303 + 592))(v486, 1);
      uint64_t v303 = swift_release();
    }
    uint64_t v25 = (uint64_t *)v17;
    uint64_t v304 = v302(v303);
    uint64_t v10 = (uint64_t (*)(uint64_t))v494;
    if (v304)
    {
      uint64_t v25 = (uint64_t *)v304;
      LOBYTE(v496) = 2;
      (*(void (**)(uint64_t *))(*(void *)v304 + 280))(&v496);
      swift_release();
    }
    a3 = MEMORY[0x1E4FBC860];
    if ((v9 & 0xC000000000000001) != 0) {
      goto LABEL_566;
    }
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v305 = *(void *)(v9 + 32);
      swift_retain();
      goto LABEL_317;
    }
    __break(1u);
    while (1)
    {
      __break(1u);
LABEL_569:
      uint64_t v5 = MEMORY[0x1C18862A0](v482, v25);
LABEL_408:
      swift_bridgeObjectRelease();
      unint64_t v364 = swift_bridgeObjectRetain();
      uint64_t v327 = sub_1BDD13E54(v364);
      uint64_t v328 = swift_bridgeObjectRelease();
      if (v327 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_572;
      }
      if (v327 <= 0x7FFFFFFF) {
        goto LABEL_349;
      }
      __break(1u);
LABEL_411:
      uint64_t v26 = MEMORY[0x1C18862A0](v17, v25);
LABEL_19:
      swift_bridgeObjectRelease();
      sub_1BDD186D4(v26);
      uint64_t v16 = swift_release();
LABEL_20:
      uint64_t v489 = v6;
      if ((*(uint64_t (**)(uint64_t))(*(void *)v6 + 176))(v16)
        && (uint64_t v27 = CalculateExpression.format.getter(), swift_release(), v27 == 1))
      {
        LOBYTE(v496) = *(unsigned char *)(v5 + 48);
        LOBYTE(v500) = 10;
        if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v496, (unsigned __int8 *)&v500))
        {
          if (qword_1EA0DF588 != -1) {
            swift_once();
          }
          uint64_t v28 = qword_1EA0E0940;
          (*(void (**)(void))(*(void *)v5 + 136))();
          uint64_t v29 = sub_1BDDAFD78();
          uint64_t v31 = v30;
          swift_bridgeObjectRelease();
          char v32 = sub_1BDD0F59C(v29, v31, v28);
          uint64_t v5 = (uint64_t)v492;
          swift_bridgeObjectRelease();
          char v33 = 1;
          if (v32)
          {
            *(unsigned char *)a3 = 1;
            id v34 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1008, 0);
            unint64_t v35 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))(*(void *)v492 + 224))(&v496);
            uint64_t v37 = v36;
            sub_1BDD168AC();
            uint64_t v38 = *(void **)(*v37 + 16);
            sub_1BDD168F8(v38);
            uint64_t v39 = *v37;
            *(void *)(v39 + 16) = (char *)v38 + 1;
            uint64_t v40 = v39 + 8 * (void)v38;
            uint64_t v5 = (uint64_t)v492;
            *(void *)(v40 + 32) = v34;
            v35(&v496, 0);
            a3 = (uint64_t)v488;
          }
        }
        else
        {
          char v33 = 1;
        }
      }
      else
      {
        char v33 = 0;
      }
      v490 = *(uint64_t (**)(unint64_t))(*(void *)v10 + 288);
      uint64_t v41 = v490(*(void *)v9);
      int64_t v491 = v14;
      char v479 = v33;
      if (v41
        && (char v42 = *(unsigned char *)(v41 + 48),
            swift_release(),
            LOBYTE(v496) = v42,
            LOBYTE(v500) = 7,
            sub_1BDCF0848(),
            (sub_1BDDAFD28() & 1) != 0))
      {
        sub_1BDD18918(v10, (uint64_t *)v9);
        uint64_t v494 = sub_1BDD10BD0(v10, (uint64_t *)v9, a3, 1);
      }
      else
      {
        uint64_t v494 = 0;
      }
      int64_t v14 = *(void *)(*(void *)v5 + 136);
      uint64_t v43 = *(void *)v5 + 136;
      uint64_t v496 = ((uint64_t (*)(void))v14)();
      unint64_t v497 = v44;
      unint64_t v500 = 6778732;
      unint64_t v501 = 0xE300000000000000;
      unint64_t v45 = sub_1BDCEB640();
      uint64_t v46 = sub_1BDDB0218();
      uint64_t v47 = swift_bridgeObjectRelease();
      uint64_t v493 = v43;
      v481 = (void (*)(void))v45;
      v483 = (uint64_t (*)(void))v13;
      if (v46)
      {
        uint64_t v496 = ((uint64_t (*)(uint64_t))v14)(v47);
        unint64_t v497 = v48;
        unint64_t v500 = 1885957222;
        unint64_t v501 = 0xE400000000000000;
        uint64_t v49 = sub_1BDDB0218();
        uint64_t v47 = swift_bridgeObjectRelease();
        if (v49 | v494) {
          goto LABEL_42;
        }
      }
      else if (v494)
      {
LABEL_42:
        if (((uint64_t (*)(uint64_t))v14)(v47) == 1735355484 && v56 == 0xE400000000000000)
        {
          swift_bridgeObjectRelease();
          uint64_t v6 = v489;
LABEL_78:
          unint64_t v500 = *(void *)v9;
          unint64_t v17 = v500;
          uint64_t v88 = v490(v500);
          if (!v88)
          {
            uint64_t v487 = 0;
            uint64_t v5 = (uint64_t)v492;
            uint64_t v484 = 0;
            goto LABEL_116;
          }
          uint64_t v89 = (*(uint64_t (**)(void))(*(void *)v88 + 136))();
          uint64_t v91 = v90;
          swift_release();
          if (v89 == 95 && v91 == 0xE100000000000000)
          {
            swift_bridgeObjectRelease();
            uint64_t v5 = (uint64_t)v492;
          }
          else
          {
            char v92 = sub_1BDDB04E8();
            swift_bridgeObjectRelease();
            uint64_t v5 = (uint64_t)v492;
            if ((v92 & 1) == 0)
            {
              uint64_t v487 = 0;
              uint64_t v484 = 0;
              goto LABEL_116;
            }
          }
          sub_1BDD18918(v10, (uint64_t *)&v500);
          unint64_t v13 = v500;
          uint64_t v93 = v490(v500);
          if (!v93
            || (char v94 = *(unsigned char *)(v93 + 48),
                swift_release(),
                LOBYTE(v496) = v94,
                LOBYTE(v499) = 21,
                sub_1BDCF0848(),
                (sub_1BDDAFD28() & 1) == 0))
          {
            uint64_t v97 = v483();
            if ((v97 & 0xC000000000000001) != 0)
            {
              uint64_t v98 = MEMORY[0x1C18862A0](v17, v97);
            }
            else
            {
              if ((v17 & 0x8000000000000000) != 0)
              {
                __break(1u);
LABEL_398:
                __break(1u);
LABEL_399:
                swift_release();
                a3 = MEMORY[0x1E4FBC860];
                goto LABEL_400;
              }
              if (*(void *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x10) <= v17) {
                goto LABEL_398;
              }
              uint64_t v98 = *(void *)(v97 + 8 * v17 + 32);
              swift_retain();
            }
            swift_bridgeObjectRelease();
            id v99 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1000, 0);
            unint64_t v100 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))(*(void *)v98 + 224))(&v496);
            uint64_t v102 = v101;
            sub_1BDD168AC();
            int v103 = *(void **)(*v102 + 16);
            sub_1BDD168F8(v103);
            uint64_t v104 = *v102;
            *(void *)(v104 + 16) = (char *)v103 + 1;
            *(void *)(v104 + 8 * (void)v103 + 32) = v99;
            v100(&v496, 0);
            swift_release();
            uint64_t v487 = 0;
            uint64_t v5 = (uint64_t)v492;
            a3 = (uint64_t)v488;
            uint64_t v484 = 0;
            goto LABEL_116;
          }
          sub_1BDD18918(v10, (uint64_t *)&v500);
          uint64_t v487 = sub_1BDCED26C(v10, &v500, a3);
          unint64_t v17 = v500;
          uint64_t v95 = v490(v500);
          if (v95)
          {
            char v96 = *(unsigned char *)(v95 + 48);
            swift_release();
            LOBYTE(v496) = v96;
            LOBYTE(v499) = 22;
            if (sub_1BDDAFD28())
            {
              *(void *)unint64_t v9 = v17;
              sub_1BDD18918(v10, (uint64_t *)v9);
              uint64_t v484 = 0;
              goto LABEL_116;
            }
          }
          *(unsigned char *)a3 = 1;
          uint64_t v110 = v483();
          uint64_t v111 = v110;
          if ((v110 & 0xC000000000000001) != 0)
          {
            uint64_t v112 = MEMORY[0x1C18862A0](v13, v110);
            goto LABEL_108;
          }
          if ((v13 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (*(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) > v13)
          {
            uint64_t v112 = *(void *)(v110 + 8 * v13 + 32);
            swift_retain();
LABEL_108:
            swift_bridgeObjectRelease();
            sub_1BDD186D4(v112);
            swift_release();
            uint64_t v484 = 0;
            goto LABEL_116;
          }
          __break(1u);
LABEL_483:
          id v202 = (unsigned char *)MEMORY[0x1C18862A0](v17, v111);
LABEL_197:
          uint64_t v203 = swift_bridgeObjectRelease();
          uint64_t v204 = (*(uint64_t (**)(uint64_t))(*(void *)v202 + 160))(v203);
          if (v205)
          {
            unint64_t v206 = v205;
            uint64_t v207 = v204;
          }
          else
          {
            uint64_t v207 = (*(uint64_t (**)(uint64_t))(*(void *)v202 + 136))(v204);
            unint64_t v206 = v208;
          }
          LOBYTE(v496) = v202[48];
          type metadata accessor for CalculateExpression.RichToken();
          uint64_t v209 = swift_allocObject();
          CalculateExpression.RichToken.init(text:type:isImplicit:)(v207, v206, (unsigned __int8 *)&v496, 0);
          swift_release();
          *(void *)(a3 + 32) = v209;
          uint64_t v496 = a3;
          sub_1BDDAFFD8();
          uint64_t v210 = v496;
          uint64_t v495 = v496;
          if (v487)
          {
            LOBYTE(v496) = 4;
            uint64_t v211 = swift_allocObject();
            CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v496, 0);
            sub_1BDD16C54(0, v210);
            sub_1BDD16DE4(0, 0, v211, 0, (void (*)(void))type metadata accessor for CalculateExpression.RichToken);
            uint64_t v210 = v495;
          }
          type metadata accessor for CalculateExpression.RichExpression();
          uint64_t v212 = swift_allocObject();
          uint64_t v213 = sub_1BDD0A5F0(v210);
          uint64_t v496 = ((uint64_t (*)(uint64_t))v14)(v213);
          unint64_t v497 = v214;
          unint64_t v500 = 1885957222;
          unint64_t v501 = 0xE400000000000000;
          uint64_t v215 = sub_1BDDB0218();
          swift_bridgeObjectRelease();
          if (v215) {
            v216 = 0;
          }
          else {
            v216 = (void *)v212;
          }
          id v486 = v216;
          if (v215) {
            unint64_t v13 = v212;
          }
          else {
            unint64_t v13 = 0;
          }
          *(void *)unint64_t v9 = v17;
          swift_retain();
          sub_1BDD18918(v10, (uint64_t *)v9);
          uint64_t v5 = (uint64_t)v492;
          swift_release();
          a3 = (uint64_t)v488;
          goto LABEL_76;
        }
        char v58 = sub_1BDDB04E8();
        uint64_t v59 = swift_bridgeObjectRelease();
        uint64_t v6 = v489;
        if (v58) {
          goto LABEL_78;
        }
        if (((uint64_t (*)(uint64_t))v14)(v59) == 0x747271735CLL && v60 == 0xE500000000000000)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v62 = sub_1BDDB04E8();
          swift_bridgeObjectRelease();
          if ((v62 & 1) == 0)
          {
            uint64_t v484 = 0;
            id v486 = 0;
            uint64_t v487 = 0;
            unint64_t v13 = 0;
            a3 = (uint64_t)v488;
            goto LABEL_117;
          }
        }
        unint64_t v17 = *(void *)v9;
        uint64_t v496 = v17;
        uint64_t v105 = v490(v17);
        if (!v105
          || (char v106 = *(unsigned char *)(v105 + 48),
              swift_release(),
              LOBYTE(v500) = v106,
              LOBYTE(v499) = 23,
              sub_1BDCF0848(),
              (sub_1BDDAFD28() & 1) == 0))
        {
          uint64_t v484 = 0;
          a3 = (uint64_t)v488;
          goto LABEL_115;
        }
        sub_1BDD18918(v10, &v496);
        a3 = (uint64_t)v488;
        uint64_t v484 = sub_1BDCED26C(v10, &v496, v488);
        uint64_t v107 = v496;
        uint64_t v108 = v490(v496);
        if (v108)
        {
          char v109 = *(unsigned char *)(v108 + 48);
          swift_release();
          LOBYTE(v500) = v109;
          a3 = (uint64_t)v488;
          LOBYTE(v499) = 24;
          if (sub_1BDDAFD28())
          {
            *(void *)unint64_t v9 = v107;
            sub_1BDD18918(v10, (uint64_t *)v9);
            uint64_t v5 = (uint64_t)v492;
            goto LABEL_115;
          }
        }
        *(unsigned char *)a3 = 1;
        uint64_t v113 = ((uint64_t (*)(void))v13)();
        uint64_t v78 = v113;
        if ((v113 & 0xC000000000000001) != 0)
        {
          uint64_t v114 = MEMORY[0x1C18862A0](v17, v113);
          uint64_t v5 = (uint64_t)v492;
LABEL_114:
          swift_bridgeObjectRelease();
          sub_1BDD186D4(v114);
          swift_release();
LABEL_115:
          uint64_t v487 = 0;
LABEL_116:
          id v486 = 0;
          unint64_t v13 = 0;
LABEL_117:
          unint64_t v115 = sub_1BDD0FF64(v10, (uint64_t *)v9, (uint64_t *)a3);
          unint64_t v11 = v115;
          uint64_t v498 = v116;
          unint64_t v499 = v115;
          if (!(v115 >> 62))
          {
            uint64_t v117 = *(void *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            goto LABEL_119;
          }
          goto LABEL_333;
        }
        uint64_t v5 = (uint64_t)v492;
        if ((v17 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (*(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10) > v17)
        {
          uint64_t v114 = *(void *)(v113 + 8 * v17 + 32);
          swift_retain();
          goto LABEL_114;
        }
        __break(1u);
LABEL_500:
        a3 = v13;
        uint64_t v79 = MEMORY[0x1C18862A0](v17, v78);
LABEL_71:
        uint64_t v80 = swift_bridgeObjectRelease();
        ((void (*)(uint64_t))v14)(v80);
        id v81 = objc_allocWithZone((Class)CalculateError);
        unint64_t v82 = (void *)sub_1BDDAFD38();
        swift_bridgeObjectRelease();
        id v486 = objc_msgSend(v81, sel_initInvalidNegativeArgument_, v82);

        uint64_t v83 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))(*(void *)v79 + 224))(&v496);
        int v85 = v84;
        sub_1BDD168AC();
        unint64_t v86 = *(void **)(*v85 + 16);
        sub_1BDD168F8(v86);
        uint64_t v87 = *v85;
        *(void *)(v87 + 16) = (char *)v86 + 1;
        *(void *)(v87 + 8 * (void)v86 + 32) = v486;
        v83(&v496, 0);
        goto LABEL_72;
      }
      uint64_t v6 = v14;
      unint64_t v499 = *(void *)v9;
      unint64_t v17 = v499;
      int64_t v14 = v491;
      unint64_t v50 = ((uint64_t (*)(uint64_t))v13)(v47);
      uint64_t v51 = sub_1BDD13E54(v50);
      uint64_t v52 = swift_bridgeObjectRelease();
      if ((uint64_t)v17 >= v51) {
        goto LABEL_53;
      }
      uint64_t v53 = ((uint64_t (*)(uint64_t))v13)(v52);
      uint64_t v21 = v53;
      if ((v53 & 0xC000000000000001) != 0)
      {
LABEL_388:
        uint64_t v54 = MEMORY[0x1C18862A0](v17, v21);
      }
      else
      {
        if ((v17 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_390:
          uint64_t v66 = MEMORY[0x1C18862A0](v17, v21);
          goto LABEL_59;
        }
        if (*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) <= v17)
        {
          __break(1u);
LABEL_392:
          __break(1u);
LABEL_393:
          __break(1u);
          goto LABEL_394;
        }
        uint64_t v54 = *(void *)(v53 + 8 * v17 + 32);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      char v55 = *(unsigned char *)(v54 + 48);
      swift_release();
      LOBYTE(v496) = v55;
      LOBYTE(v500) = 4;
      uint64_t v52 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v496, (unsigned __int8 *)&v500);
      if (v52)
      {
        uint64_t v52 = sub_1BDD18918(v10, (uint64_t *)&v499);
        LODWORD(v487) = 1;
        unint64_t v17 = v499;
      }
      else
      {
LABEL_53:
        LODWORD(v487) = 0;
      }
      int64_t v14 = v491;
      unint64_t v63 = ((uint64_t (*)(uint64_t))v13)(v52);
      uint64_t v64 = sub_1BDD13E54(v63);
      uint64_t v65 = swift_bridgeObjectRelease();
      if ((uint64_t)v17 >= v64) {
        goto LABEL_74;
      }
      uint64_t v53 = ((uint64_t (*)(uint64_t))v13)(v65);
      uint64_t v21 = v53;
      if ((v53 & 0xC000000000000001) != 0) {
        goto LABEL_390;
      }
      if ((v17 & 0x8000000000000000) != 0) {
        goto LABEL_392;
      }
      if (*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) <= v17) {
        goto LABEL_393;
      }
      uint64_t v66 = *(void *)(v53 + 8 * v17 + 32);
      swift_retain();
LABEL_59:
      swift_bridgeObjectRelease();
      char v67 = *(unsigned char *)(v66 + 48);
      swift_release();
      LOBYTE(v496) = v67;
      LOBYTE(v500) = 1;
      if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v496, (unsigned __int8 *)&v500))
      {
LABEL_74:
        id v486 = 0;
        unint64_t v13 = 0;
LABEL_75:
        int64_t v14 = v6;
LABEL_76:
        uint64_t v6 = v489;
        uint64_t v484 = 0;
        uint64_t v487 = 0;
        goto LABEL_117;
      }
      uint64_t v498 = v17;
      uint64_t v68 = sub_1BDD18918(v10, &v498);
      uint64_t v69 = v498;
      unint64_t v70 = ((uint64_t (*)(uint64_t))v13)(v68);
      uint64_t v71 = sub_1BDD13E54(v70);
      uint64_t v72 = swift_bridgeObjectRelease();
      if (v69 >= v71)
      {
        id v486 = 0;
        unint64_t v13 = 0;
        uint64_t v5 = (uint64_t)v492;
        goto LABEL_75;
      }
      uint64_t v73 = ((uint64_t (*)(uint64_t))v13)(v72);
      uint64_t v74 = v73;
      if ((v73 & 0xC000000000000001) != 0) {
        goto LABEL_476;
      }
      uint64_t v5 = (uint64_t)v492;
      if (v69 < 0)
      {
        __break(1u);
LABEL_478:
        __break(1u);
        goto LABEL_479;
      }
      if (*(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10) <= (unint64_t)v69) {
        goto LABEL_478;
      }
      int64_t v14 = v6;
      uint64_t v75 = *(void *)(v73 + 8 * v69 + 32);
      swift_retain();
LABEL_65:
      uint64_t v6 = (uint64_t)v481;
      swift_bridgeObjectRelease();
      char v76 = *(unsigned char *)(v75 + 48);
      swift_release();
      LOBYTE(v496) = v76;
      LOBYTE(v500) = 15;
      if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v496, (unsigned __int8 *)&v500))
      {
        id v486 = 0;
        unint64_t v13 = 0;
        goto LABEL_76;
      }
      if (v487)
      {
        uint64_t v77 = ((uint64_t (*)(void))v13)();
        uint64_t v78 = v77;
        if ((v77 & 0xC000000000000001) == 0)
        {
          if ((v17 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_502:
            __break(1u);
LABEL_503:
            swift_unknownObjectRelease();
            uint64_t v459 = MEMORY[0x1E4FBC860];
LABEL_504:
            swift_bridgeObjectRelease();
            uint64_t v496 = v459;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA268F0);
            sub_1BDD19AC4(&qword_1EBA268F8, &qword_1EBA268F0);
            uint64_t v460 = sub_1BDDAFD18();
            v462 = v461;
            swift_bridgeObjectRelease();
            unint64_t v463 = sub_1BDD5290C();
            v464._uint64_t countAndFlagsBits = v460;
            v464._object = v462;
            evaluate(_:options:)(v465, v464, (Swift::OpaquePointer)v463);
            v467 = v466;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v467)
            {
              type metadata accessor for CalculateExpression.CustomOperandOperation();
              id v468 = v467;
              CalculateExpression.CustomOperandOperation.__allocating_init(_:)(v468);
              uint64_t v470 = v469;
              uint64_t v471 = (*(uint64_t (**)(void))(*(void *)v469 + 128))();
              if (v471)
              {
                LOBYTE(v496) = 4;
                type metadata accessor for CalculateExpression.RichToken();
                uint64_t v472 = swift_allocObject();
                CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v496, 0);
                (*(void (**)(uint64_t))(*(void *)v6 + 584))(v472);
                uint64_t v471 = swift_release();
              }
              uint64_t v473 = (*(uint64_t (**)(uint64_t))(*(void *)v470 + 120))(v471);
              (*(void (**)(uint64_t))(*(void *)v6 + 584))(v473);
              swift_release();
              swift_release();
            }
            else
            {
              unsigned char *v488 = 1;
            }
            goto LABEL_440;
          }
          if (*(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) <= v17) {
            goto LABEL_502;
          }
          a3 = v13;
          uint64_t v79 = *(void *)(v77 + 8 * v17 + 32);
          swift_retain();
          goto LABEL_71;
        }
        goto LABEL_500;
      }
LABEL_192:
      uint64_t v496 = ((uint64_t (*)(void))v14)();
      unint64_t v497 = v198;
      unint64_t v500 = 1885957222;
      unint64_t v501 = 0xE400000000000000;
      uint64_t v199 = sub_1BDDB0218();
      uint64_t v200 = swift_bridgeObjectRelease();
      if (!v199)
      {
        uint64_t v240 = ((uint64_t (*)(uint64_t))v13)(v200);
        if ((v240 & 0xC000000000000001) != 0)
        {
          a3 = v13;
          uint64_t v241 = MEMORY[0x1C18862A0](v17, v240);
        }
        else
        {
          if ((v17 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_512:
            __break(1u);
LABEL_513:
            uint64_t v233 = MEMORY[0x1C18862A0](0, v9);
            while (1)
            {
              (*(void (**)(uint64_t, uint64_t))(*(void *)v6 + 592))(v233, 1);
              swift_release();
              (*(void (**)(unint64_t))(*(void *)v6 + 584))(v17);
              uint64_t v234 = swift_allocObject();
              sub_1BDD0A5A4();
              uint64_t v235 = (*(uint64_t (**)(uint64_t))(*(void *)v17 + 288))(v234);
              v236 = (uint64_t (**)(uint64_t))(*(void *)v17 + 280);
              uint64_t v10 = *v236;
              uint64_t v237 = (*v236)(v235);
              if (!v237) {
                goto LABEL_231;
              }
              unint64_t v227 = v237;
              if (a3) {
                goto LABEL_531;
              }
              if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1uLL)
              {
                uint64_t v238 = *(void *)(v9 + 40);
                swift_retain();
                goto LABEL_230;
              }
              __break(1u);
LABEL_533:
              uint64_t v259 = MEMORY[0x1C18862A0](0);
LABEL_249:
              (*(void (**)(uint64_t, uint64_t))(*(void *)v227 + 592))(v259, 1);
              swift_release();
              uint64_t v258 = swift_release();
LABEL_250:
              unint64_t v227 = v17;
              uint64_t v260 = ((uint64_t (*)(uint64_t))v236)(v258);
              if (v260)
              {
                unint64_t v227 = v260;
                LOBYTE(v496) = 2;
                (*(void (**)(uint64_t *))(*(void *)v260 + 280))(&v496);
                swift_release();
              }
              unint64_t v9 = v499;
              unint64_t v261 = swift_bridgeObjectRetain();
              uint64_t v262 = sub_1BDD13E54(v261);
              uint64_t v5 = (uint64_t)v492;
              a3 = MEMORY[0x1E4FBC860];
              if (!v262) {
                goto LABEL_594;
              }
              BOOL v263 = __OFSUB__(v262, 1);
              unint64_t v232 = v262 - 1;
              if (v263) {
                goto LABEL_520;
              }
              if ((v9 & 0xC000000000000001) != 0) {
                goto LABEL_521;
              }
              if ((v232 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) > v232)
              {
                uint64_t v141 = *(void *)(v9 + 8 * v232 + 32);
                swift_retain();
                goto LABEL_258;
              }
              __break(1u);
LABEL_524:
              unint64_t v17 = MEMORY[0x1C18862A0](a3, v227);
LABEL_273:
              swift_bridgeObjectRelease();
              unint64_t v270 = swift_bridgeObjectRetain();
              uint64_t v271 = sub_1BDD13E54(v270);
              uint64_t v272 = swift_bridgeObjectRelease();
              if (v271 < (uint64_t)0xFFFFFFFF80000000)
              {
LABEL_527:
                __break(1u);
              }
              else if (v271 <= 0x7FFFFFFF)
              {
                ((void (*)(uint64_t))v481)(v272);
                goto LABEL_307;
              }
              __break(1u);
LABEL_529:
              unint64_t v169 = MEMORY[0x1C18862A0](1, v9);
LABEL_216:
              (*(void (**)(unint64_t, uint64_t))(*(void *)v227 + 592))(v169, 1);
              swift_release();
              uint64_t v226 = swift_release();
LABEL_217:
              uint64_t v228 = ((uint64_t (*)(uint64_t))v5)(v226);
              if (v228)
              {
                LOBYTE(v496) = 1;
                (*(void (**)(uint64_t *))(*(void *)v228 + 280))(&v496);
                swift_release();
              }
LABEL_219:
              (*(void (**)(unint64_t))(*(void *)v6 + 584))(v17);
              a3 = MEMORY[0x1E4FBC860];
              if ((v9 & 0xC000000000000001) != 0) {
                break;
              }
              if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_145;
              }
              __break(1u);
LABEL_222:
              a3 = v14;
              swift_bridgeObjectRelease();
              unint64_t v9 = v499;
              unint64_t v229 = swift_bridgeObjectRetain();
              uint64_t v230 = sub_1BDD13E54(v229);
              uint64_t v231 = swift_bridgeObjectRelease();
              int64_t v14 = (int64_t)v486;
              if (v230 != 2)
              {
                unsigned char *v488 = 1;
                unint64_t v232 = ((uint64_t (*)(uint64_t))v483)(v231);
                if ((v232 & 0xC000000000000001) == 0)
                {
                  if ((v169 & 0x8000000000000000) != 0) {
                    goto LABEL_516;
                  }
                  if (*(void *)((v232 & 0xFFFFFFFFFFFFFF8) + 0x10) > v169)
                  {
                    unint64_t v17 = *(void *)(v232 + 8 * v169 + 32);
                    swift_retain();
                    goto LABEL_263;
                  }
LABEL_517:
                  __break(1u);
LABEL_518:
                  __break(1u);
                  goto LABEL_519;
                }
                unint64_t v17 = MEMORY[0x1C18862A0](v169, v232);
LABEL_263:
                swift_bridgeObjectRelease();
                unint64_t v264 = swift_bridgeObjectRetain();
                uint64_t v265 = sub_1BDD13E54(v264);
                unint64_t v232 = swift_bridgeObjectRelease();
                if (v265 < (uint64_t)0xFFFFFFFF80000000) {
                  goto LABEL_518;
                }
                if (v265 <= 0x7FFFFFFF)
                {
                  ((void (*)(unint64_t))a3)(v232);
                  goto LABEL_266;
                }
LABEL_519:
                __break(1u);
LABEL_520:
                __break(1u);
LABEL_521:
                uint64_t v141 = MEMORY[0x1C18862A0](v232, v9);
LABEL_258:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_146;
              }
              LOBYTE(v496) = 7;
              type metadata accessor for CalculateExpression.RichToken();
              unint64_t v17 = swift_allocObject();
              unint64_t v232 = CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v496, 0);
              a3 = v9 & 0xC000000000000001;
              if ((v9 & 0xC000000000000001) != 0) {
                goto LABEL_513;
              }
              if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
LABEL_516:
                __break(1u);
                goto LABEL_517;
              }
              uint64_t v233 = *(void *)(v9 + 32);
              swift_retain();
            }
            uint64_t v141 = MEMORY[0x1C18862A0](0, v9);
            goto LABEL_146;
          }
          if (*(void *)((v240 & 0xFFFFFFFFFFFFFF8) + 0x10) <= v17) {
            goto LABEL_512;
          }
          a3 = v13;
          uint64_t v241 = *(void *)(v240 + 8 * v17 + 32);
          swift_retain();
        }
        uint64_t v242 = swift_bridgeObjectRelease();
        v243 = *(uint64_t (**)(uint64_t))(*(void *)v241 + 136);
        if (v243(v242) == 56 && v244 == 0xE100000000000000)
        {
LABEL_291:
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_73;
        }
        id v486 = (id)v241;
        char v267 = sub_1BDDB04E8();
        uint64_t v268 = swift_bridgeObjectRelease();
        if ((v267 & 1) == 0)
        {
          if (v243(v268) != 13873 || v289 != 0xE200000000000000) {
            goto LABEL_328;
          }
          goto LABEL_291;
        }
LABEL_72:
        swift_release();
LABEL_73:
        unint64_t v13 = a3;
      }
LABEL_193:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
      a3 = swift_allocObject();
      *(_OWORD *)(a3 + 16) = xmmword_1BDDB3730;
      uint64_t v201 = ((uint64_t (*)(void))v13)();
      uint64_t v111 = v201;
      if ((v201 & 0xC000000000000001) != 0) {
        goto LABEL_483;
      }
      if ((v17 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(void *)((v201 & 0xFFFFFFFFFFFFFF8) + 0x10) > v17)
      {
        id v202 = *(unsigned char **)(v201 + 8 * v17 + 32);
        swift_retain();
        goto LABEL_197;
      }
      __break(1u);
LABEL_486:
      uint64_t v440 = swift_bridgeObjectRelease();
      uint64_t v441 = *(void *)v9;
      if (*(void *)v9 < (int64_t)v482)
      {
        __break(1u);
LABEL_592:
        __break(1u);
LABEL_593:
        __break(1u);
LABEL_594:
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t result = swift_release();
        __break(1u);
        return result;
      }
      unint64_t v442 = ((uint64_t (*)(uint64_t))v483)(v440);
      sub_1BDD16C54(v482, v442);
      sub_1BDD16C54(v441, v442);
      sub_1BDD170A0(v482, v441, v442);
      uint64_t v444 = v443;
      uint64_t v446 = v445;
      unint64_t v448 = v447;
      swift_bridgeObjectRelease();
      int64_t v449 = v448 >> 1;
      BOOL v263 = __OFSUB__(v448 >> 1, v446);
      int64_t v14 = (v448 >> 1) - v446;
      if (v263) {
        goto LABEL_592;
      }
      if (!v14) {
        goto LABEL_503;
      }
      uint64_t v496 = MEMORY[0x1E4FBC860];
      uint64_t v25 = &v496;
      sub_1BDD13DDC(v14);
      if (v14 < 0) {
        goto LABEL_593;
      }
      if (v446 <= v449) {
        uint64_t v450 = v449;
      }
      else {
        uint64_t v450 = v446;
      }
      a3 = v450 - v446;
      unint64_t v17 = v444 + 8 * v446;
      while (a3)
      {
        uint64_t v451 = *(void *)v17;
        v17 += 8;
        v452 = *(uint64_t (**)(uint64_t))(*(void *)v451 + 136);
        uint64_t v453 = swift_retain();
        uint64_t v454 = v452(v453);
        uint64_t v456 = v455;
        swift_release();
        sub_1BDD171A0();
        unint64_t v9 = *(void *)(v496 + 16);
        uint64_t v25 = &v496;
        sub_1BDD171FC((char *)v9);
        uint64_t v457 = v496;
        *(void *)(v496 + 16) = v9 + 1;
        uint64_t v458 = v457 + 16 * v9;
        *(void *)(v458 + 32) = v454;
        *(void *)(v458 + 40) = v456;
        --a3;
        if (!--v14)
        {
          swift_unknownObjectRelease();
          uint64_t v459 = v496;
          goto LABEL_504;
        }
      }
    }
  }
  if (((uint64_t (*)(uint64_t))v14)(v186) == 1735355484 && v187 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_319:
    swift_bridgeObjectRelease();
    LOBYTE(v496) = 10;
    type metadata accessor for CalculateExpression.RichToken();
    unint64_t v17 = swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(6778732, 0xE300000000000000, (unsigned __int8 *)&v496, 0);
    (*(void (**)(unint64_t))(*(void *)v6 + 584))(v17);
    uint64_t v308 = v487;
    if (!v487)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
      uint64_t v313 = swift_allocObject();
      *(_OWORD *)(v313 + 16) = xmmword_1BDDB3730;
      LOBYTE(v496) = 1;
      uint64_t v314 = swift_allocObject();
      CalculateExpression.RichToken.init(text:type:isImplicit:)(12337, 0xE200000000000000, (unsigned __int8 *)&v496, 0);
      *(void *)(v313 + 32) = v314;
      uint64_t v496 = v313;
      sub_1BDDAFFD8();
      uint64_t v315 = v496;
      uint64_t v308 = swift_allocObject();
      sub_1BDD0A5F0(v315);
      swift_retain();
    }
    uint64_t v316 = swift_allocObject();
    sub_1BDD0A5A4();
    v317 = *(uint64_t (**)(uint64_t))(*(void *)v17 + 288);
    swift_retain();
    uint64_t v318 = v317(v316);
    v319 = *(uint64_t (**)(uint64_t))(*(void *)v17 + 280);
    uint64_t v320 = v319(v318);
    if (v320)
    {
      (*(void (**)(uint64_t, uint64_t))(*(void *)v320 + 592))(v308, 1);
      uint64_t v320 = swift_release();
    }
    uint64_t v321 = v319(v320);
    if (v321)
    {
      LOBYTE(v496) = 2;
      (*(void (**)(uint64_t *))(*(void *)v321 + 280))(&v496);
      swift_release();
    }
    swift_release();
    a3 = MEMORY[0x1E4FBC860];
    unint64_t v9 = v499;
    unint64_t v322 = swift_bridgeObjectRetain();
    uint64_t v323 = sub_1BDD13E54(v322);
    uint64_t v324 = swift_bridgeObjectRelease();
    if (v323 == 1)
    {
      if ((v9 & 0xC000000000000001) != 0) {
        goto LABEL_550;
      }
      uint64_t v10 = (uint64_t (*)(uint64_t))v494;
      if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_145:
        uint64_t v141 = *(void *)(v9 + 32);
        swift_retain();
        goto LABEL_146;
      }
      __break(1u);
    }
    unsigned char *v488 = 1;
    uint64_t v325 = ((uint64_t (*)(uint64_t))v483)(v324);
    uint64_t v286 = v325;
    if ((v325 & 0xC000000000000001) != 0) {
      goto LABEL_556;
    }
    if ((v482 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((v325 & 0xFFFFFFFFFFFFFF8) + 0x10) > v482)
    {
      uint64_t v5 = *(void *)(v325 + 8 * v482 + 32);
      swift_retain();
      goto LABEL_347;
    }
    __break(1u);
    goto LABEL_559;
  }
  char v306 = sub_1BDDB04E8();
  uint64_t v307 = swift_bridgeObjectRelease();
  if (v306) {
    goto LABEL_319;
  }
  if (((uint64_t (*)(uint64_t))v14)(v307) == 0x747271735CLL && v337 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    a3 = MEMORY[0x1E4FBC860];
    goto LABEL_380;
  }
LABEL_379:
  char v351 = sub_1BDDB04E8();
  uint64_t v53 = swift_bridgeObjectRelease();
  a3 = MEMORY[0x1E4FBC860];
  if (v351)
  {
LABEL_380:
    swift_bridgeObjectRelease();
    LOBYTE(v496) = 10;
    type metadata accessor for CalculateExpression.RichToken();
    unint64_t v17 = swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(10127586, 0xA300000000000000, (unsigned __int8 *)&v496, 0);
    int64_t v14 = v484;
    if (v484)
    {
      uint64_t v352 = swift_allocObject();
      sub_1BDD0A5A4();
      v353 = *(uint64_t (**)(uint64_t))(*(void *)v17 + 264);
      swift_retain();
      uint64_t v354 = v353(v352);
      v355 = *(uint64_t (**)(uint64_t))(*(void *)v17 + 256);
      uint64_t v356 = v355(v354);
      if (v356)
      {
        (*(void (**)(uint64_t, uint64_t))(*(void *)v356 + 592))(v484, 1);
        uint64_t v356 = swift_release();
      }
      uint64_t v357 = v355(v356);
      if (v357)
      {
        LOBYTE(v496) = 1;
        (*(void (**)(uint64_t *))(*(void *)v357 + 280))(&v496);
        swift_release();
      }
      goto LABEL_399;
    }
LABEL_400:
    unint64_t v9 = v499;
    unint64_t v360 = swift_bridgeObjectRetain();
    uint64_t v361 = sub_1BDD13E54(v360);
    uint64_t v362 = swift_bridgeObjectRelease();
    if (v361 == 1)
    {
      uint64_t v362 = (*(uint64_t (**)(unint64_t))(*(void *)v6 + 584))(v17);
      int64_t v14 = (int64_t)v486;
      if ((v9 & 0xC000000000000001) != 0) {
        goto LABEL_550;
      }
      uint64_t v10 = (uint64_t (*)(uint64_t))v494;
      if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_145;
      }
      __break(1u);
    }
    unsigned char *v488 = 1;
    uint64_t v363 = ((uint64_t (*)(uint64_t))v483)(v362);
    uint64_t v25 = (uint64_t *)v363;
    if ((v363 & 0xC000000000000001) != 0) {
      goto LABEL_569;
    }
    if ((v482 & 0x8000000000000000) == 0)
    {
      if (*(void *)((v363 & 0xFFFFFFFFFFFFFF8) + 0x10) <= v482) {
        goto LABEL_571;
      }
      uint64_t v5 = *(void *)(v363 + 8 * v482 + 32);
      swift_retain();
      goto LABEL_408;
    }
    __break(1u);
LABEL_571:
    __break(1u);
LABEL_572:
    __break(1u);
LABEL_573:
    swift_once();
    goto LABEL_441;
  }
LABEL_394:
  v481 = (void (*)(void))v14;
  ((void (*)(uint64_t))v14)(v53);
  uint64_t v476 = sub_1BDDAFD78();
  unint64_t v359 = v358;
  swift_bridgeObjectRelease();
  unint64_t v474 = v359;
  if (v479)
  {
    swift_bridgeObjectRetain();
    goto LABEL_419;
  }
LABEL_414:
  uint64_t v365 = qword_1EA0DF580;
  swift_bridgeObjectRetain();
  if (v365 != -1) {
    swift_once();
  }
  uint64_t v366 = qword_1EA0E0938;
  v481();
  uint64_t v367 = sub_1BDDAFD78();
  uint64_t v369 = v368;
  swift_bridgeObjectRelease();
  char v370 = sub_1BDD0F59C(v367, v369, v366);
  swift_bridgeObjectRelease();
  if ((v370 & 1) == 0) {
    goto LABEL_419;
  }
  if (qword_1EA0DF570 != -1) {
    goto LABEL_590;
  }
  while (1)
  {
    uint64_t v371 = qword_1EA0E0928;
    v481();
    uint64_t v372 = sub_1BDDAFD78();
    uint64_t v374 = v373;
    swift_bridgeObjectRelease();
    char v375 = sub_1BDD0F59C(v372, v374, v371);
    swift_bridgeObjectRelease();
    if ((v375 & 1) == 0) {
      goto LABEL_486;
    }
LABEL_419:
    swift_bridgeObjectRelease();
    unint64_t v376 = v474;
    if (sub_1BDDAFEB8())
    {
      unint64_t v377 = sub_1BDDAFDC8();
      unint64_t v378 = sub_1BDD18AA8(v377, v476, v474);
      uint64_t v380 = v379;
      uint64_t v382 = v381;
      uint64_t v384 = v383;
      swift_bridgeObjectRelease();
      uint64_t v476 = MEMORY[0x1C1885C90](v378, v380, v382, v384);
      unint64_t v386 = v385;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v376 = v386;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF000);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BDDB37A0;
    *(void *)(inited + 32) = 26476;
    *(void *)(inited + 40) = 0xE200000000000000;
    *(void *)(inited + 48) = 6778732;
    *(void *)(inited + 56) = 0xE300000000000000;
    *(void *)(inited + 64) = 0x736F63637261;
    *(void *)(inited + 72) = 0xE600000000000000;
    *(void *)(inited + 80) = 1936679777;
    *(void *)(inited + 88) = 0xE400000000000000;
    *(void *)(inited + 96) = 0x6E6973637261;
    *(void *)(inited + 104) = 0xE600000000000000;
    *(void *)(inited + 112) = 1852404577;
    *(void *)(inited + 120) = 0xE400000000000000;
    *(void *)(inited + 128) = 0x6E6174637261;
    *(void *)(inited + 136) = 0xE600000000000000;
    *(void *)(inited + 144) = 1851880545;
    *(void *)(inited + 152) = 0xE400000000000000;
    int64_t v388 = sub_1BDD06E54(inited);
    swift_bridgeObjectRetain();
    uint64_t v389 = sub_1BDD071EC(v476, v376, v388);
    unint64_t v391 = v390;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v391)
    {
      swift_bridgeObjectRelease();
      uint64_t v476 = v389;
      unint64_t v376 = v391;
    }
    unint64_t v392 = v499;
    swift_bridgeObjectRetain();
    unint64_t v393 = swift_bridgeObjectRetain();
    uint64_t v394 = sub_1BDD13E54(v393);
    swift_bridgeObjectRelease();
    unint64_t v477 = v392;
    unint64_t v474 = v376;
    if (v394 == 1)
    {
      LOBYTE(v496) = v492[48];
      type metadata accessor for CalculateExpression.RichToken();
      uint64_t v395 = swift_allocObject();
      CalculateExpression.RichToken.init(text:type:isImplicit:)(v476, v376, (unsigned __int8 *)&v496, 0);
      uint64_t v396 = v6;
      (*(void (**)(uint64_t))(*(void *)v6 + 584))(v395);
      swift_release();
      if ((v392 & 0xC000000000000001) != 0)
      {
        uint64_t v397 = MEMORY[0x1C18862A0](0, v392);
      }
      else
      {
        if (!*(void *)((v392 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_576;
        }
        uint64_t v397 = *(void *)(v392 + 32);
        swift_retain();
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)v6 + 592))(v397, 3);
      goto LABEL_439;
    }
    LOBYTE(v496) = v492[48];
    int64_t v14 = type metadata accessor for CalculateExpression.RichToken();
    uint64_t v398 = swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(v476, v376, (unsigned __int8 *)&v496, 0);
    v399 = (void (**)(uint64_t))(*(void *)v6 + 584);
    v400 = *v399;
    (*v399)(v398);
    swift_release();
    LOBYTE(v496) = 15;
    uint64_t v401 = swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v496, 0);
    v475 = v400;
    v400(v401);
    swift_release();
    unint64_t v402 = swift_bridgeObjectRetain();
    uint64_t v480 = sub_1BDD13E54(v402);
    if (!v480) {
      goto LABEL_438;
    }
    v478 = *(void (**)(uint64_t, void))(*(void *)v6 + 592);
    uint64_t v403 = sub_1BDD13E54(v392);
    if (v480 >= 1) {
      break;
    }
LABEL_589:
    __break(1u);
LABEL_590:
    swift_once();
  }
  uint64_t v404 = v403;
  uint64_t v405 = 0;
  unint64_t v406 = v392 & 0xC000000000000001;
  do
  {
    if (v406)
    {
      uint64_t v407 = MEMORY[0x1C18862A0](v405, v392);
    }
    else
    {
      uint64_t v407 = *(void *)(v392 + 8 * v405 + 32);
      swift_retain();
    }
    v478(v407, 0);
    if (v405 < v404)
    {
      LOBYTE(v496) = 11;
      uint64_t v408 = swift_allocObject();
      CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v496, 0);
      v475(v408);
      unint64_t v392 = v477;
      swift_release();
    }
    ++v405;
    swift_release();
  }
  while (v480 != v405);
LABEL_438:
  swift_bridgeObjectRelease();
  LOBYTE(v496) = 16;
  uint64_t v409 = swift_allocObject();
  CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v496, 0);
  v475(v409);
LABEL_439:
  swift_release();
LABEL_440:
  if (qword_1EA0DF578 != -1) {
    goto LABEL_573;
  }
LABEL_441:
  uint64_t v410 = qword_1EA0E0930;
  v481();
  uint64_t v411 = sub_1BDDAFD78();
  uint64_t v413 = v412;
  swift_bridgeObjectRelease();
  uint64_t v414 = sub_1BDD07244(v411, v413, v410);
  int64_t v416 = v415;
  char v418 = v417;
  swift_bridgeObjectRelease();
  if (v418) {
    int64_t v14 = 1;
  }
  else {
    int64_t v14 = v416;
  }
  if (v418) {
    int64_t v388 = 1;
  }
  else {
    int64_t v388 = v414;
  }
  unint64_t v9 = v499;
  unint64_t v419 = swift_bridgeObjectRetain();
  uint64_t v420 = sub_1BDD13E54(v419);
  uint64_t v421 = swift_bridgeObjectRelease();
  if (v420 >= v388)
  {
    unint64_t v422 = swift_bridgeObjectRetain();
    uint64_t v423 = sub_1BDD13E54(v422);
    uint64_t v421 = swift_bridgeObjectRelease();
    if (v14 >= v423)
    {
LABEL_479:
      swift_bridgeObjectRelease();
      goto LABEL_350;
    }
  }
  uint64_t v424 = ((uint64_t (*)(uint64_t))v483)(v421);
  uint64_t v396 = v424;
  unint64_t v425 = v424 & 0xC000000000000001;
  if (v388 != v14)
  {
    if (v425) {
      goto LABEL_582;
    }
    if ((v482 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((v424 & 0xFFFFFFFFFFFFFF8) + 0x10) > v482)
    {
      uint64_t v426 = *(void *)(v424 + 8 * v482 + 32);
      swift_retain();
      goto LABEL_463;
    }
    __break(1u);
    goto LABEL_585;
  }
  if (!v425)
  {
    if ((v482 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((v424 & 0xFFFFFFFFFFFFFF8) + 0x10) > v482)
    {
      uint64_t v426 = *(void *)(v424 + 8 * v482 + 32);
      swift_retain();
      goto LABEL_454;
    }
    __break(1u);
LABEL_579:
    __break(1u);
LABEL_580:
    __break(1u);
LABEL_581:
    __break(1u);
LABEL_582:
    uint64_t v426 = MEMORY[0x1C18862A0](v482, v396);
LABEL_463:
    swift_bridgeObjectRelease();
    unint64_t v431 = swift_bridgeObjectRetain();
    uint64_t v432 = sub_1BDD13E54(v431);
    swift_bridgeObjectRelease();
    if (v432 <= 0x7FFFFFFF)
    {
      if (v388 <= 0x7FFFFFFF)
      {
        if (v14 >= (uint64_t)0xFFFFFFFF80000000
          && v388 >= (uint64_t)0xFFFFFFFF80000000
          && v432 >= (uint64_t)0xFFFFFFFF80000000)
        {
          if (v14 <= 0x7FFFFFFF)
          {
            id v433 = objc_allocWithZone((Class)CalculateError);
            swift_bridgeObjectRetain();
            v434 = (void *)sub_1BDDAFD38();
            swift_bridgeObjectRelease();
            id v430 = objc_msgSend(v433, sel_initIncorrectArguments_minArguments_maxArguments_inFunction_, v432, v388, v14, v434);

            goto LABEL_470;
          }
LABEL_588:
          __break(1u);
          goto LABEL_589;
        }
LABEL_587:
        __break(1u);
        goto LABEL_588;
      }
LABEL_586:
      __break(1u);
      goto LABEL_587;
    }
LABEL_585:
    __break(1u);
    goto LABEL_586;
  }
LABEL_576:
  uint64_t v426 = MEMORY[0x1C18862A0](v482, v396);
LABEL_454:
  swift_bridgeObjectRelease();
  unint64_t v427 = swift_bridgeObjectRetain();
  uint64_t v396 = sub_1BDD13E54(v427);
  swift_bridgeObjectRelease();
  if (v396 > 0x7FFFFFFF) {
    goto LABEL_579;
  }
  if (v14 < (uint64_t)0xFFFFFFFF80000000 || v396 < (uint64_t)0xFFFFFFFF80000000) {
    goto LABEL_580;
  }
  if (v14 > 0x7FFFFFFF) {
    goto LABEL_581;
  }
  id v428 = objc_allocWithZone((Class)CalculateError);
  swift_bridgeObjectRetain();
  v429 = (void *)sub_1BDDAFD38();
  swift_bridgeObjectRelease();
  id v430 = objc_msgSend(v428, sel_initIncorrectArguments_correctArguments_inFunction_, v396, v14, v429);

LABEL_470:
  v435 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))(*(void *)v426 + 224))(&v496);
  v437 = v436;
  sub_1BDD168AC();
  v438 = *(void **)(*v437 + 16);
  sub_1BDD168F8(v438);
  uint64_t v439 = *v437;
  *(void *)(v439 + 16) = (char *)v438 + 1;
  *(void *)(v439 + 8 * (void)v438 + 32) = v430;
  v435(&v496, 0);
  swift_release();
  swift_bridgeObjectRelease();
  unsigned char *v488 = 1;
LABEL_350:
  uint64_t v10 = (uint64_t (*)(uint64_t))v494;
LABEL_160:
  a3 = MEMORY[0x1E4FBC860];
  if (!v10) {
    goto LABEL_149;
  }
LABEL_161:
  LOBYTE(v496) = 7;
  type metadata accessor for CalculateExpression.RichToken();
  uint64_t v155 = swift_allocObject();
  swift_retain();
  CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v496, 0);
  (*(void (**)(uint64_t))(*(void *)v6 + 584))(v155);
  uint64_t v156 = swift_allocObject();
  swift_weakInit();
  *(_DWORD *)(v156 + 24) = v489;
  *(unsigned char *)(v156 + 28) = 1;
  *(void *)(v156 + 32) = 0;
  *(void *)(v156 + 40) = a3;
  *(_WORD *)(v156 + 48) = 0;
  *(unsigned char *)(v156 + 50) = 0;
  uint64_t v157 = (*(uint64_t (**)(uint64_t))(*(void *)v155 + 288))(v156);
  uint64_t v158 = *(uint64_t (**)(uint64_t))(*(void *)v155 + 280);
  uint64_t v159 = v158(v157);
  if (v159)
  {
    (*(void (**)(uint64_t (*)(uint64_t), uint64_t))(*(void *)v159 + 592))(v10, 1);
    uint64_t v159 = swift_release();
  }
  uint64_t v160 = v158(v159);
  if (v160)
  {
    LOBYTE(v496) = 1;
    (*(void (**)(uint64_t *))(*(void *)v160 + 280))(&v496);
    swift_release();
  }
  swift_release();
  swift_release();
  if (v490) {
    goto LABEL_150;
  }
LABEL_166:
  swift_bridgeObjectRelease();
LABEL_167:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v6;
}

uint64_t sub_1BDD0F59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1BDDB0558();
    sub_1BDDAFDB8();
    uint64_t v6 = sub_1BDDB0578();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      unint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1BDDB04E8() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1BDDB04E8() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

BOOL sub_1BDD0F6D4(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_retain();
    char v4 = sub_1BDDB02B8();
    swift_release();
    return v4 & 1;
  }
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_1BDDB0558();
  (*(void (**)(unsigned char *))(*(void *)a1 + 168))(v14);
  uint64_t v6 = sub_1BDDB0578();
  uint64_t v7 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v8 = v6 & ~v7;
  uint64_t v9 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    return 0;
  }
  uint64_t v10 = *(void *)(a2 + 48);
  if (*(void *)(v10 + 8 * v8) == a1) {
    return 1;
  }
  uint64_t v11 = ~v7;
  unint64_t v12 = (v8 + 1) & v11;
  if (((*(void *)(v9 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v13 = *(void *)(v10 + 8 * v12);
    BOOL result = v13 == a1;
    if (v13 == a1) {
      break;
    }
    unint64_t v12 = (v12 + 1) & v11;
  }
  while (((*(void *)(v9 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  return result;
}

uint64_t sub_1BDD0F81C(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_retain();
    char v3 = sub_1BDDB02B8();
    swift_release();
    return v3 & 1;
  }
  else
  {
    if (*(void *)(a2 + 16)
      && (type metadata accessor for CalculateExpression.Operation(),
          sub_1BDCFF314(&qword_1EBA26898, 255, (void (*)(uint64_t))type metadata accessor for CalculateExpression.Operation), v5 = sub_1BDDAFCE8(), uint64_t v6 = -1 << *(unsigned char *)(a2 + 32), v7 = v5 & ~v6, ((*(void *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0))
    {
      uint64_t v8 = ~v6;
      sub_1BDCFF314((unint64_t *)&qword_1EBA268A0, 255, (void (*)(uint64_t))type metadata accessor for CalculateExpression.Operation);
      do
      {
        char v9 = sub_1BDDAFD28();
        if (v9) {
          break;
        }
        unint64_t v7 = (v7 + 1) & v8;
      }
      while (((*(void *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    else
    {
      char v9 = 0;
    }
    return v9 & 1;
  }
}

uint64_t sub_1BDD0F9B4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  sub_1BDDAFDE8();
  return sub_1BDDAFEE8();
}

uint64_t sub_1BDD0FA34(void *a1, uint64_t *a2, uint64_t **a3)
{
  char v4 = a2;
  unint64_t v6 = *a2;
  sub_1BDD18918(a1, a2);
  uint64_t v7 = sub_1BDD10BD0(a1, v4, a3, 1);
  if (((*(uint64_t (**)(void))(*(void *)v7 + 560))() & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v8 = (*(uint64_t (**)(void))(*a1 + 264))();
  char v9 = (void *)v8;
  uint64_t v30 = v7;
  if ((v8 & 0xC000000000000001) == 0)
  {
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v6 < *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v10 = *(void *)(v8 + 8 * v6 + 32);
      swift_retain();
      goto LABEL_6;
    }
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v10 = MEMORY[0x1C18862A0](v6, v8);
LABEL_6:
  swift_bridgeObjectRelease();
  id v29 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1000, 0);
  uint64_t v28 = (void (*)(unsigned __int8 *, void))(*(uint64_t (**)(unsigned __int8 *))(*(void *)v10 + 224))(v31);
  uint64_t v7 = (uint64_t)v11;
  char v9 = *v11;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v7 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_23:
    char v9 = sub_1BDD1693C(0, v9[2] + 1, 1, v9);
    *(void *)uint64_t v7 = v9;
  }
  unint64_t v14 = v9[2];
  unint64_t v13 = v9[3];
  if (v14 >= v13 >> 1)
  {
    char v9 = sub_1BDD1693C((void *)(v13 > 1), v14 + 1, 1, v9);
    *(void *)uint64_t v7 = v9;
  }
  uint64_t v7 = v30;
  void v9[2] = v14 + 1;
  v9[v14 + 4] = v29;
  v28(v31, 0);
  swift_release();
LABEL_10:
  uint64_t v15 = sub_1BDD10BD0(a1, v4, a3, 1);
  if (((*(uint64_t (**)(void))(*(void *)v15 + 560))() & 1) == 0) {
    goto LABEL_19;
  }
  uint64_t v16 = (*(uint64_t (**)(void))(*a1 + 264))();
  BOOL v17 = (void (*)(unsigned __int8 *, void))v16;
  if ((v16 & 0xC000000000000001) == 0)
  {
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v6 < *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v18 = *(void *)(v16 + 8 * v6 + 32);
      swift_retain();
      goto LABEL_15;
    }
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v18 = MEMORY[0x1C18862A0](v6, v16);
LABEL_15:
  swift_bridgeObjectRelease();
  unint64_t v6 = (unint64_t)objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1000, 0);
  BOOL v17 = (void (*)(unsigned __int8 *, void))(*(uint64_t (**)(unsigned __int8 *))(*(void *)v18 + 224))(v31);
  a3 = v19;
  char v4 = *v19;
  char v20 = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v4;
  if ((v20 & 1) == 0)
  {
LABEL_27:
    char v4 = sub_1BDD1693C(0, v4[2] + 1, 1, v4);
    *a3 = v4;
  }
  unint64_t v22 = v4[2];
  unint64_t v21 = v4[3];
  if (v22 >= v21 >> 1)
  {
    char v4 = sub_1BDD1693C((void *)(v21 > 1), v22 + 1, 1, v4);
    *a3 = v4;
  }
  v4[2] = v22 + 1;
  v4[v22 + 4] = v6;
  v17(v31, 0);
  swift_release();
LABEL_19:
  type metadata accessor for CalculateExpression.RichExpression();
  uint64_t v23 = swift_allocObject();
  swift_weakInit();
  *(_DWORD *)(v23 + 24) = 16777473;
  *(unsigned char *)(v23 + 28) = 1;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  *(void *)(v23 + 32) = 0;
  *(void *)(v23 + 40) = v24;
  *(_WORD *)(v23 + 48) = 0;
  *(unsigned char *)(v23 + 50) = 0;
  uint64_t v25 = *(void (**)(uint64_t, uint64_t))(*(void *)v23 + 592);
  v25(v7, 1);
  v31[0] = 6;
  type metadata accessor for CalculateExpression.RichToken();
  uint64_t v26 = swift_allocObject();
  CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, v31, 0);
  (*(void (**)(uint64_t))(*(void *)v23 + 584))(v26);
  swift_release();
  v25(v15, 1);
  swift_release();
  swift_release();
  return v23;
}

uint64_t sub_1BDD0FF64(void *a1, uint64_t *a2, uint64_t *a3)
{
  unint64_t v5 = v3;
  unint64_t v9 = *a2;
  uint64_t v10 = (uint64_t (**)(void))(*a1 + 264);
  uint64_t v11 = *v10;
  unint64_t v12 = (*v10)();
  if (v12 >> 62) {
    uint64_t v13 = sub_1BDDB0448();
  }
  else {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v14 = swift_bridgeObjectRelease();
  if ((uint64_t)v9 >= v13) {
    goto LABEL_11;
  }
  uint64_t v15 = ((uint64_t (*)(uint64_t))v11)(v14);
  uint64_t v16 = v15;
  if ((v15 & 0xC000000000000001) == 0)
  {
    if ((v9 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v9 < *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v17 = *(void *)(v15 + 8 * v9 + 32);
      swift_retain();
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_59;
  }
  uint64_t v17 = MEMORY[0x1C18862A0](v9, v15);
LABEL_8:
  swift_bridgeObjectRelease();
  char v18 = *(unsigned char *)(v17 + 48);
  swift_release();
  v66[0] = v18;
  if ((CalculateExpression.TokenType.isOpen.getter() & 1) == 0)
  {
LABEL_11:
    uint64_t v20 = sub_1BDD10BD0(a1, a2, (uint64_t)a3, 0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1BDDB3730;
    *(void *)(v21 + 32) = v20;
    *(void *)uint64_t v66 = v21;
    sub_1BDDAFFD8();
    return *(void *)v66;
  }
  unint64_t v63 = *(uint64_t (**)(void))(*(void *)v5 + 176);
  if (v63())
  {
    uint64_t v19 = CalculateExpression.format.getter();
    swift_release();
    unint64_t v4 = v19 == 1;
  }
  else
  {
    unint64_t v4 = 0;
  }
  uint64_t v23 = v11();
  uint64_t v16 = v23;
  if ((v23 & 0xC000000000000001) == 0)
  {
    if ((v9 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v9 < *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v24 = *(void *)(v23 + 8 * v9 + 32);
      swift_retain();
      goto LABEL_17;
    }
    __break(1u);
    goto LABEL_62;
  }
LABEL_59:
  uint64_t v24 = MEMORY[0x1C18862A0](v9, v16);
LABEL_17:
  swift_bridgeObjectRelease();
  char v25 = *(unsigned char *)(v24 + 48);
  swift_release();
  v66[0] = v25;
  uint64_t v65 = a3;
  LODWORD(v62) = v4;
  if (v4 & 1 | ((CalculateExpression.TokenType.isLaTeX.getter() & 1) == 0)) {
    goto LABEL_26;
  }
  *(unsigned char *)a3 = 1;
  uint64_t v26 = v11();
  if ((v26 & 0xC000000000000001) == 0)
  {
    if ((v9 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v9 < *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v27 = *(void *)(v26 + 8 * v9 + 32);
      swift_retain();
      goto LABEL_22;
    }
    __break(1u);
    goto LABEL_67;
  }
  uint64_t v27 = MEMORY[0x1C18862A0](v9, v26);
LABEL_22:
  swift_bridgeObjectRelease();
  id v64 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1012, 0);
  unint64_t v61 = (void (*)(char *, void))(*(uint64_t (**)(char *))(*(void *)v27 + 224))(v66);
  unint64_t v5 = (unint64_t)v28;
  unint64_t v4 = *v28;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)unint64_t v5 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_67:
    unint64_t v4 = (unint64_t)sub_1BDD1693C(0, *(void *)(v4 + 16) + 1, 1, (void *)v4);
    *(void *)unint64_t v5 = v4;
  }
  unint64_t v31 = *(void *)(v4 + 16);
  unint64_t v30 = *(void *)(v4 + 24);
  if (v31 >= v30 >> 1)
  {
    unint64_t v4 = (unint64_t)sub_1BDD1693C((void *)(v30 > 1), v31 + 1, 1, (void *)v4);
    *(void *)unint64_t v5 = v4;
  }
  *(void *)(v4 + 16) = v31 + 1;
  *(void *)(v4 + 8 * v31 + 32) = v64;
  v61(v66, 0);
  swift_release();
  a3 = v65;
LABEL_26:
  sub_1BDD18918(a1, a2);
  id v64 = (id)sub_1BDD108BC(a1, a2, (uint64_t)a3);
  unint64_t v5 = *a2;
  unint64_t v32 = v11();
  if (!(v32 >> 62))
  {
    uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_28;
  }
LABEL_62:
  uint64_t v33 = sub_1BDDB0448();
LABEL_28:
  uint64_t v34 = swift_bridgeObjectRelease();
  if ((uint64_t)v5 >= v33) {
    goto LABEL_42;
  }
  uint64_t v35 = ((uint64_t (*)(uint64_t))v11)(v34);
  uint64_t v36 = v35;
  if ((v35 & 0xC000000000000001) == 0)
  {
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v5 < *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v37 = *(void *)(v35 + 8 * v5 + 32);
      swift_retain();
      goto LABEL_33;
    }
    __break(1u);
    goto LABEL_71;
  }
  uint64_t v37 = MEMORY[0x1C18862A0](v5, v35);
LABEL_33:
  swift_bridgeObjectRelease();
  char v38 = *(unsigned char *)(v37 + 48);
  swift_release();
  v66[0] = v38;
  uint64_t v34 = CalculateExpression.TokenType.isLaTeX.getter();
  if (v62 & 1 | ((v34 & 1) == 0)) {
    goto LABEL_42;
  }
  *(unsigned char *)a3 = 1;
  uint64_t v39 = v11();
  uint64_t v40 = v39;
  if ((v39 & 0xC000000000000001) != 0) {
    goto LABEL_93;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_95;
  }
  if (v5 >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  uint64_t v41 = *(void *)(v39 + 8 * v5 + 32);
  swift_retain();
  while (1)
  {
    swift_bridgeObjectRelease();
    id v62 = objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1012, 0);
    unint64_t v61 = (void (*)(char *, void))(*(uint64_t (**)(char *))(*(void *)v41 + 224))(v66);
    a3 = v42;
    uint64_t v40 = *v42;
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    *a3 = v40;
    uint64_t v60 = a3;
    if ((v43 & 1) == 0)
    {
LABEL_96:
      uint64_t v40 = (uint64_t)sub_1BDD1693C(0, *(void *)(v40 + 16) + 1, 1, (void *)v40);
      *a3 = v40;
    }
    unint64_t v45 = *(void *)(v40 + 16);
    unint64_t v44 = *(void *)(v40 + 24);
    unint64_t v46 = v45 + 1;
    if (v45 >= v44 >> 1)
    {
      uint64_t v59 = sub_1BDD1693C((void *)(v44 > 1), v45 + 1, 1, (void *)v40);
      unint64_t v46 = v45 + 1;
      uint64_t v40 = (uint64_t)v59;
      *uint64_t v60 = (uint64_t)v59;
    }
    *(void *)(v40 + 16) = v46;
    *(void *)(v40 + 8 * v45 + 32) = v62;
    v61(v66, 0);
    uint64_t v34 = swift_release();
LABEL_42:
    unint64_t v47 = ((uint64_t (*)(uint64_t))v11)(v34);
    if (v47 >> 62) {
      uint64_t v40 = sub_1BDDB0448();
    }
    else {
      uint64_t v40 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v48 = swift_bridgeObjectRelease();
    if ((uint64_t)v5 >= v40) {
      goto LABEL_75;
    }
    uint64_t v49 = ((uint64_t (*)(uint64_t))v11)(v48);
    uint64_t v36 = v49;
    if ((v49 & 0xC000000000000001) != 0)
    {
LABEL_71:
      unint64_t v5 = MEMORY[0x1C18862A0](v5, v36);
      goto LABEL_49;
    }
    if ((v5 & 0x8000000000000000) != 0) {
      break;
    }
    if (v5 >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_73;
    }
    unint64_t v5 = *(void *)(v49 + 8 * v5 + 32);
    swift_retain();
LABEL_49:
    swift_bridgeObjectRelease();
    char v50 = *(unsigned char *)(v5 + 48);
    swift_release();
    char v68 = v50;
    CalculateExpression.TokenType.match.getter(v66);
    uint64_t v40 = v66[0];
    uint64_t v51 = v11();
    uint64_t v36 = v51;
    if ((v51 & 0xC000000000000001) != 0) {
      goto LABEL_74;
    }
    if ((v9 & 0x8000000000000000) != 0) {
      goto LABEL_91;
    }
    if (v9 < *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      unint64_t v5 = *(void *)(v51 + 8 * v9 + 32);
      swift_retain();
      swift_bridgeObjectRelease();
      char v52 = *(unsigned char *)(v5 + 48);
      swift_release();
      if (v40 == 53) {
        goto LABEL_75;
      }
      goto LABEL_53;
    }
LABEL_92:
    __break(1u);
LABEL_93:
    uint64_t v41 = MEMORY[0x1C18862A0](v5, v40);
  }
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  unint64_t v5 = MEMORY[0x1C18862A0](v9, v36);
  swift_bridgeObjectRelease();
  char v52 = *(unsigned char *)(v5 + 48);
  swift_unknownObjectRelease();
  if (v40 != 53)
  {
LABEL_53:
    char v68 = v40;
    char v67 = v52;
    sub_1BDCF0848();
    if (sub_1BDDAFD28())
    {
      sub_1BDD18918(a1, a2);
      return (uint64_t)v64;
    }
  }
LABEL_75:
  if (!v63()) {
    goto LABEL_83;
  }
  char v53 = CalculateExpression.allowPartialExpressions.getter();
  uint64_t v54 = swift_release();
  if ((v53 & 1) == 0) {
    goto LABEL_83;
  }
  uint64_t result = ((uint64_t (*)(uint64_t))v11)(v54);
  if ((result & 0xC000000000000001) != 0)
  {
    uint64_t v55 = MEMORY[0x1C18862A0](v9, result);
    goto LABEL_81;
  }
  if ((v9 & 0x8000000000000000) == 0)
  {
    if (v9 >= *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_99;
    }
    uint64_t v55 = *(void *)(result + 8 * v9 + 32);
    swift_retain();
LABEL_81:
    swift_bridgeObjectRelease();
    char v56 = *(unsigned char *)(v55 + 48);
    swift_release();
    v66[0] = v56;
    char v68 = 15;
    sub_1BDCF0848();
    if (sub_1BDDAFD28()) {
      return (uint64_t)v64;
    }
LABEL_83:
    *(unsigned char *)uint64_t v65 = 1;
    uint64_t v57 = v11();
    if ((v57 & 0xC000000000000001) != 0)
    {
      uint64_t v58 = MEMORY[0x1C18862A0](v9, v57);
      goto LABEL_87;
    }
    if ((v9 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v9 < *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v58 = *(void *)(v57 + 8 * v9 + 32);
      swift_retain();
LABEL_87:
      swift_bridgeObjectRelease();
      sub_1BDD186D4(v58);
      swift_release();
      return (uint64_t)v64;
    }
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  __break(1u);
LABEL_99:
  __break(1u);
  return result;
}

uint64_t sub_1BDD108BC(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v26 = MEMORY[0x1E4FBC860];
  ((void (*)(void))sub_1BDCED26C)();
  uint64_t v6 = swift_retain();
  MEMORY[0x1C1885EA0](v6);
  if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_26;
  }
  while (1)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t))(*a1 + 264);
    sub_1BDDB0048();
    uint64_t v8 = sub_1BDDAFFD8();
    uint64_t v9 = *a2;
    unint64_t v10 = v7(v8);
    uint64_t v11 = v10 >> 62 ? sub_1BDDB0448() : *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v12 = swift_bridgeObjectRelease();
    if (v9 >= v11) {
      break;
    }
    uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v14 = v7(v12);
      if ((v14 & 0xC000000000000001) != 0)
      {
        uint64_t v15 = MEMORY[0x1C18862A0](v9, v14);
        goto LABEL_10;
      }
      if (v9 < 0) {
        break;
      }
      if ((unint64_t)v9 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_25;
      }
      uint64_t v15 = *(void *)(v14 + 8 * v9 + 32);
      swift_retain();
LABEL_10:
      swift_bridgeObjectRelease();
      unsigned __int8 v16 = *(unsigned char *)(v15 + 48);
      swift_release();
      unsigned __int8 v25 = v16;
      unsigned __int8 v24 = 11;
      if (static CalculateExpression.TokenType.== infix(_:_:)(&v25, &v24))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v13 = sub_1BDD16A60(0, *((void *)v13 + 2) + 1, 1, v13);
        }
        unint64_t v18 = *((void *)v13 + 2);
        unint64_t v17 = *((void *)v13 + 3);
        if (v18 >= v17 >> 1) {
          uint64_t v13 = sub_1BDD16A60((char *)(v17 > 1), v18 + 1, 1, v13);
        }
        *((void *)v13 + 2) = v18 + 1;
        *(void *)&v13[8 * v18 + 32] = v9;
        sub_1BDD18918(a1, a2);
        swift_release();
        sub_1BDCED26C(a1, a2, a3);
        uint64_t v19 = swift_retain();
        MEMORY[0x1C1885EA0](v19);
        if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1BDDB0008();
        }
        sub_1BDDB0048();
        uint64_t v20 = sub_1BDDAFFD8();
        uint64_t v9 = *a2;
        unint64_t v21 = v7(v20);
        uint64_t v22 = v21 >> 62 ? sub_1BDDB0448() : *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v12 = swift_bridgeObjectRelease();
        if (v9 < v22) {
          continue;
        }
      }
      goto LABEL_23;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    sub_1BDDB0008();
  }
LABEL_23:
  swift_release();
  return v26;
}

uint64_t sub_1BDD10BD0(void *a1, uint64_t *a2, uint64_t a3, char a4)
{
  type metadata accessor for CalculateExpression.RichExpression();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = swift_weakInit();
  *(_DWORD *)(v7 + 24) = 16777473;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  *(unsigned char *)(v7 + 28) = 1;
  *(void *)(v7 + 32) = 0;
  *(void *)(v7 + 40) = v9;
  *(_WORD *)(v7 + 48) = 0;
  *(unsigned char *)(v7 + 50) = 0;
  uint64_t v10 = *a2;
  uint64_t v11 = (uint64_t *)(*a1 + 264);
  uint64_t v12 = (uint64_t (*)(uint64_t))*v11;
  unint64_t v13 = ((uint64_t (*)(uint64_t))*v11)(v8);
  if (v13 >> 62) {
    uint64_t v14 = sub_1BDDB0448();
  }
  else {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v15 = swift_bridgeObjectRelease();
  if (v10 >= v14) {
    return v7;
  }
  uint64_t v16 = v12(v15);
  uint64_t v17 = v16;
  if ((v16 & 0xC000000000000001) == 0)
  {
    if (v10 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v10 < *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v18 = *(void *)(v16 + 8 * v10 + 32);
      swift_retain();
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_108;
  }
  uint64_t v18 = MEMORY[0x1C18862A0](v10, v16);
LABEL_8:
  swift_bridgeObjectRelease();
  unsigned __int8 v19 = *(unsigned char *)(v18 + 48);
  swift_release();
  v106[0] = v19;
  unsigned __int8 v107 = 4;
  int v103 = v11;
  uint64_t v104 = v12;
  if (!static CalculateExpression.TokenType.== infix(_:_:)(v106, &v107)) {
    goto LABEL_18;
  }
  uint64_t v20 = ((uint64_t (*)(void))v12)();
  uint64_t v17 = v20;
  if ((v20 & 0xC000000000000001) != 0) {
    goto LABEL_111;
  }
  if (v10 < 0)
  {
    __break(1u);
    goto LABEL_113;
  }
  if ((unint64_t)v10 >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_113:
    __break(1u);
    goto LABEL_114;
  }
  unint64_t v21 = *(unsigned char **)(v20 + 8 * v10 + 32);
  swift_retain();
  while (1)
  {
    uint64_t v22 = swift_bridgeObjectRelease();
    uint64_t v23 = (*(uint64_t (**)(uint64_t))(*(void *)v21 + 160))(v22);
    if (!v24) {
      uint64_t v23 = (*(uint64_t (**)(uint64_t))(*(void *)v21 + 136))(v23);
    }
    uint64_t v25 = v23;
    unint64_t v26 = v24;
    v106[0] = v21[48];
    type metadata accessor for CalculateExpression.RichToken();
    uint64_t v27 = swift_allocObject();
    CalculateExpression.RichToken.init(text:type:isImplicit:)(v25, v26, v106, 0);
    swift_release();
    (*(void (**)(uint64_t))(*(void *)v7 + 584))(v27);
    swift_release();
    uint64_t v28 = sub_1BDD18918(a1, a2);
    uint64_t v10 = *a2;
    uint64_t v11 = v103;
    uint64_t v12 = v104;
    unint64_t v29 = v104(v28);
    if (v29 >> 62) {
LABEL_114:
    }
      uint64_t v30 = sub_1BDDB0448();
    else {
      uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v10 >= v30) {
      return v7;
    }
LABEL_18:
    uint64_t v31 = ((uint64_t (*)(void))v12)();
    uint64_t v17 = v31;
    if ((v31 & 0xC000000000000001) != 0) {
      break;
    }
    if (v10 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v10 < *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      unint64_t v32 = *(unsigned char **)(v31 + 8 * v10 + 32);
      swift_retain();
      goto LABEL_22;
    }
    __break(1u);
LABEL_111:
    unint64_t v21 = (unsigned char *)MEMORY[0x1C18862A0](v10, v17);
  }
LABEL_108:
  unint64_t v32 = (unsigned char *)MEMORY[0x1C18862A0](v10, v17);
LABEL_22:
  swift_bridgeObjectRelease();
  unsigned __int8 v33 = v32[48];
  v106[0] = v33;
  uint64_t v102 = a3;
  if ((CalculateExpression.TokenType.isOpen.getter() & 1) == 0)
  {
    v106[0] = v33;
    unsigned __int8 v107 = 10;
    if (static CalculateExpression.TokenType.== infix(_:_:)(v106, &v107))
    {
      v106[0] = 0;
      uint64_t v50 = sub_1BDD0A6C8(a1, a2, a3, v106);
      (*(void (**)(uint64_t, void))(*(void *)v7 + 592))(v50, 0);
LABEL_54:
      uint64_t v51 = swift_release();
      goto LABEL_55;
    }
    v106[0] = v33;
    unsigned __int8 v107 = 50;
    if (static CalculateExpression.TokenType.== infix(_:_:)(v106, &v107))
    {
      uint64_t v52 = sub_1BDD0FA34(a1, a2, (uint64_t **)a3);
      (*(void (**)(uint64_t, uint64_t))(*(void *)v7 + 592))(v52, 1);
      goto LABEL_54;
    }
    v106[0] = v33;
    if (CalculateExpression.TokenType.isOperand.getter())
    {
      uint64_t v101 = a2;
      uint64_t v73 = *(uint64_t (**)(uint64_t))(*(void *)v32 + 160);
      uint64_t v74 = v32;
      uint64_t v75 = swift_retain();
      uint64_t v76 = v73(v75);
      if (!v77) {
        uint64_t v76 = (*(uint64_t (**)(uint64_t))(*(void *)v32 + 136))(v76);
      }
      uint64_t v78 = v76;
      unint64_t v79 = v77;
      a2 = v101;
      v106[0] = v33;
      uint64_t v10 = type metadata accessor for CalculateExpression.RichToken();
      uint64_t v80 = swift_allocObject();
      CalculateExpression.RichToken.init(text:type:isImplicit:)(v78, v79, v106, 0);
      swift_release();
      a3 = *(void *)v7 + 584;
      id v81 = *(uint64_t **)a3;
      (*(void (**)(uint64_t))a3)(v80);
      swift_release();
      sub_1BDD18918(a1, v101);
      v106[0] = v74[48];
      unsigned __int8 v107 = 1;
      uint64_t v51 = static CalculateExpression.TokenType.== infix(_:_:)(v106, &v107);
      uint64_t v39 = (uint64_t (*)(void))v104;
      if ((v51 & 1) == 0) {
        goto LABEL_56;
      }
      if (a4) {
        goto LABEL_57;
      }
      uint64_t v82 = (*(uint64_t (**)(uint64_t))(*a1 + 288))(*v101);
      if (v82)
      {
        uint64_t v83 = v82;
        unsigned __int8 v84 = *(unsigned char *)(v82 + 48);
        v106[0] = v84;
        if ((CalculateExpression.TokenType.isConstant.getter() & 1) != 0
          || (v106[0] = v84, unsigned __int8 v107 = 14, static CalculateExpression.TokenType.== infix(_:_:)(v106, &v107)))
        {
          int v85 = *(uint64_t (**)(uint64_t))(*(void *)v83 + 160);
          uint64_t v86 = swift_retain();
          uint64_t v87 = v85(v86);
          if (!v88) {
            uint64_t v87 = (*(uint64_t (**)(uint64_t))(*(void *)v83 + 136))(v87);
          }
          uint64_t v89 = v87;
          unint64_t v90 = v88;
          v106[0] = v84;
          uint64_t v91 = swift_allocObject();
          CalculateExpression.RichToken.init(text:type:isImplicit:)(v89, v90, v106, 0);
          swift_release();
          ((void (*)(uint64_t))v81)(v91);
          swift_release();
          sub_1BDD18918(a1, v101);
        }
LABEL_81:
        swift_release();
      }
      goto LABEL_82;
    }
    *(unsigned char *)a3 = 1;
    uint64_t v92 = ((uint64_t (*)(void))v104)();
    uint64_t v93 = (void *)v92;
    if ((v92 & 0xC000000000000001) == 0)
    {
      if (v10 < 0)
      {
        __break(1u);
      }
      else if ((unint64_t)v10 < *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v94 = *(void *)(v92 + 8 * v10 + 32);
        swift_retain();
        goto LABEL_100;
      }
      __break(1u);
      goto LABEL_134;
    }
    uint64_t v94 = MEMORY[0x1C18862A0](v10, v92);
LABEL_100:
    swift_bridgeObjectRelease();
    id v99 = (void (*)(unsigned __int8 *, void))objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1000, 0);
    a3 = (*(uint64_t (**)(unsigned __int8 *))(*(void *)v94 + 224))(v106);
    uint64_t v10 = (uint64_t)v95;
    uint64_t v93 = *v95;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v10 = v93;
    uint64_t v11 = a2;
    if (isUniquelyReferenced_nonNull_native)
    {
LABEL_101:
      unint64_t v98 = v93[2];
      unint64_t v97 = v93[3];
      if (v98 >= v97 >> 1)
      {
        uint64_t v93 = sub_1BDD1693C((void *)(v97 > 1), v98 + 1, 1, v93);
        *(void *)uint64_t v10 = v93;
      }
      v93[2] = v98 + 1;
      v93[v98 + 4] = v99;
      ((void (*)(unsigned __int8 *, void))a3)(v106, 0);
      uint64_t v51 = swift_release();
      a2 = v11;
      goto LABEL_55;
    }
LABEL_134:
    uint64_t v93 = sub_1BDD1693C(0, v93[2] + 1, 1, v93);
    *(void *)uint64_t v10 = v93;
    goto LABEL_101;
  }
  unint64_t v34 = sub_1BDD0FF64(a1, a2, a3);
  uint64_t v10 = v34;
  uint64_t v36 = v35;
  unint64_t v37 = v34 >> 62;
  if (v34 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v39 = (uint64_t (*)(void))v104;
  if (v38 == 1 || (*(unsigned char *)a3 = 1, !v36[2]))
  {
    swift_bridgeObjectRelease();
    uint64_t v47 = v10 & 0xFFFFFFFFFFFFFF8;
    if (v37) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  a3 = v36[4];
  uint64_t v40 = swift_bridgeObjectRelease();
  if (a3 < 0) {
    goto LABEL_35;
  }
  uint64_t v36 = a1;
  uint64_t v41 = v104(v40);
  char v42 = (void *)v41;
  if ((v41 & 0xC000000000000001) != 0) {
    goto LABEL_128;
  }
  if ((unint64_t)a3 >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_130;
  }
  uint64_t v36 = *(void **)(v41 + 8 * a3 + 32);
  swift_retain();
  while (1)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = (uint64_t *)objc_msgSend(objc_allocWithZone((Class)CalculateError), sel_initWithCode_userInfo_, -1000, 0);
    id v99 = (void (*)(unsigned __int8 *, void))(*(uint64_t (**)(unsigned __int8 *))(*v36 + 224))(v106);
    a3 = (uint64_t)v43;
    char v42 = *v43;
    char v44 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)a3 = v42;
    unint64_t v100 = a2;
    if ((v44 & 1) == 0)
    {
LABEL_130:
      char v42 = sub_1BDD1693C(0, v42[2] + 1, 1, v42);
      *(void *)a3 = v42;
    }
    unint64_t v46 = v42[2];
    unint64_t v45 = v42[3];
    if (v46 >= v45 >> 1)
    {
      char v42 = sub_1BDD1693C((void *)(v45 > 1), v46 + 1, 1, v42);
      *(void *)a3 = v42;
    }
    v42[2] = v46 + 1;
    v42[v46 + 4] = v11;
    v99(v106, 0);
    swift_release();
    a2 = v100;
    uint64_t v39 = (uint64_t (*)(void))v104;
LABEL_35:
    uint64_t v47 = v10 & 0xFFFFFFFFFFFFFF8;
    if (v37)
    {
LABEL_46:
      if (v10 < 0) {
        uint64_t v36 = (void *)v10;
      }
      else {
        uint64_t v36 = (void *)v47;
      }
      swift_bridgeObjectRetain();
      a3 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
      if (!a3)
      {
LABEL_50:
        uint64_t v51 = swift_bridgeObjectRelease();
        goto LABEL_56;
      }
    }
    else
    {
LABEL_36:
      a3 = *(void *)(v47 + 16);
      if (!a3) {
        goto LABEL_50;
      }
    }
    unint64_t v37 = *(void *)(*(void *)v7 + 592);
    if (a3 < 1)
    {
      __break(1u);
LABEL_119:
      char v42 = (void *)MEMORY[0x1C18862A0](v37, v36);
      goto LABEL_64;
    }
    uint64_t v48 = 0;
    do
    {
      if ((v10 & 0xC000000000000001) != 0)
      {
        uint64_t v49 = MEMORY[0x1C18862A0](v48, v10);
      }
      else
      {
        uint64_t v49 = *(void *)(v10 + 8 * v48 + 32);
        swift_retain();
      }
      ++v48;
      ((void (*)(uint64_t, void))v37)(v49, 0);
      swift_release();
    }
    while (a3 != v48);
    uint64_t v51 = swift_bridgeObjectRelease();
LABEL_55:
    uint64_t v39 = (uint64_t (*)(void))v104;
LABEL_56:
    if ((a4 & 1) == 0) {
      goto LABEL_82;
    }
LABEL_57:
    unint64_t v37 = *a2;
    unint64_t v53 = ((uint64_t (*)(uint64_t))v39)(v51);
    if (v53 >> 62) {
      uint64_t v54 = sub_1BDDB0448();
    }
    else {
      uint64_t v54 = *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v55 = swift_bridgeObjectRelease();
    if ((uint64_t)v37 >= v54) {
      goto LABEL_72;
    }
    uint64_t v56 = ((uint64_t (*)(uint64_t))v39)(v55);
    uint64_t v36 = (void *)v56;
    if ((v56 & 0xC000000000000001) != 0) {
      goto LABEL_119;
    }
    if ((v37 & 0x8000000000000000) != 0) {
      break;
    }
    if (v37 >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_121;
    }
    char v42 = *(void **)(v56 + 8 * v37 + 32);
    swift_retain();
LABEL_64:
    swift_bridgeObjectRelease();
    unsigned __int8 v57 = *((unsigned char *)v42 + 48);
    swift_release();
    v106[0] = v57;
    unsigned __int8 v107 = 8;
    if (!static CalculateExpression.TokenType.== infix(_:_:)(v106, &v107)) {
      goto LABEL_72;
    }
    uint64_t v58 = v39();
    uint64_t v36 = (void *)v58;
    if ((v58 & 0xC000000000000001) != 0) {
      goto LABEL_125;
    }
    if ((v37 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v37 < *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v59 = *(unsigned char **)(v58 + 8 * v37 + 32);
      swift_retain();
      while (1)
      {
        uint64_t v60 = swift_bridgeObjectRelease();
        uint64_t v61 = (*(uint64_t (**)(uint64_t))(*(void *)v59 + 160))(v60);
        if (!v62) {
          uint64_t v61 = (*(uint64_t (**)(uint64_t))(*(void *)v59 + 136))(v61);
        }
        uint64_t v63 = v61;
        unint64_t v64 = v62;
        v106[0] = v59[48];
        type metadata accessor for CalculateExpression.RichToken();
        uint64_t v65 = swift_allocObject();
        CalculateExpression.RichToken.init(text:type:isImplicit:)(v63, v64, v106, 0);
        swift_release();
        (*(void (**)(uint64_t))(*(void *)v7 + 584))(v65);
        swift_release();
        sub_1BDD18918(a1, a2);
        uint64_t v39 = (uint64_t (*)(void))v104;
LABEL_72:
        unint64_t v37 = *a2;
        unint64_t v66 = v39();
        uint64_t v67 = v66 >> 62 ? sub_1BDDB0448() : *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v68 = swift_bridgeObjectRelease();
        if ((uint64_t)v37 >= v67) {
          goto LABEL_82;
        }
        uint64_t v69 = ((uint64_t (*)(uint64_t))v39)(v68);
        uint64_t v36 = (void *)v69;
        if ((v69 & 0xC000000000000001) != 0) {
          goto LABEL_122;
        }
        if ((v37 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v37 < *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v70 = *(void *)(v69 + 8 * v37 + 32);
          swift_retain();
          goto LABEL_79;
        }
        __break(1u);
LABEL_125:
        uint64_t v59 = (unsigned char *)MEMORY[0x1C18862A0](v37, v36);
      }
    }
    __break(1u);
LABEL_128:
    uint64_t v36 = (void *)MEMORY[0x1C18862A0](a3, v42);
  }
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  uint64_t v70 = MEMORY[0x1C18862A0](v37, v36);
LABEL_79:
  swift_bridgeObjectRelease();
  unsigned __int8 v71 = *(unsigned char *)(v70 + 48);
  swift_release();
  v106[0] = v71;
  unsigned __int8 v107 = 7;
  if (static CalculateExpression.TokenType.== infix(_:_:)(v106, &v107))
  {
    sub_1BDD11AC8(a1, a2, v102);
    (*(void (**)(void))(*(void *)v7 + 584))();
    goto LABEL_81;
  }
LABEL_82:
  swift_release();
  return v7;
}

uint64_t sub_1BDD11AC8(void *a1, uint64_t *a2, uint64_t a3)
{
  sub_1BDD18918(a1, a2);
  uint64_t v6 = sub_1BDD10BD0(a1, a2, a3, 1);
  unsigned __int8 v16 = 7;
  type metadata accessor for CalculateExpression.RichToken();
  uint64_t v7 = swift_allocObject();
  CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, &v16, 0);
  type metadata accessor for CalculateExpression.RichExpression();
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  *(_DWORD *)(v8 + 24) = 16777473;
  *(unsigned char *)(v8 + 28) = 1;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  *(void *)(v8 + 32) = 0;
  *(void *)(v8 + 40) = v9;
  *(_WORD *)(v8 + 48) = 0;
  *(unsigned char *)(v8 + 50) = 0;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 288))(v8);
  uint64_t v11 = *(uint64_t (**)(uint64_t))(*(void *)v7 + 280);
  uint64_t v12 = v11(v10);
  if (v12)
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)v12 + 592))(v6, 1);
    uint64_t v12 = swift_release();
  }
  uint64_t v13 = v11(v12);
  if (v13)
  {
    char v15 = 1;
    (*(void (**)(char *))(*(void *)v13 + 280))(&v15);
    swift_release();
  }
  swift_release();
  return v7;
}

uint64_t sub_1BDD11CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    sub_1BDCF0848();
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    do
    {
      char v4 = sub_1BDDAFD28();
      if (v4) {
        break;
      }
    }
    while (v2 - 1 != v3++);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_1BDD11D88(uint64_t a1, uint64_t a2)
{
  void (*v14)(long long *__return_ptr);
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  BOOL v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(long long *__return_ptr, uint64_t);
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unsigned char *v72;
  void (*v73)(void);
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned char *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unsigned char *v86;
  unsigned char *v87;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  uint64_t inited;
  id v92;
  __CFString *v93;
  id v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t (*v101)(void);
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  char v112;
  BOOL v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t (**v125)(long long *);
  uint64_t (*v126)(long long *);
  uint64_t (*v127)(long long *, void);
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  void (*v137)(long long *, void);
  unint64_t v138;
  id v139;
  void *v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  void (*v149)(long long *, void);
  void *v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  unsigned char *v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(long long *__return_ptr, uint64_t);
  long long v161;
  uint64_t v162;
  uint64_t v163;
  unsigned __int8 v164;
  long long v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;

  uint64_t v156 = a1;
  unint64_t v5 = *(uint64_t (**)(void))(*(void *)v2 + 176);
  uint64_t v6 = v5();
  if (v6)
  {
    uint64_t v7 = CalculateExpression.allowedOperations.getter();
    char v8 = sub_1BDD0F81C(v156, v7);
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0
      || (type metadata accessor for CalculateExpression.CustomOperandOperation(), swift_dynamicCastClass()))
    {
      uint64_t v6 = swift_release();
    }
    else
    {
      *(void *)&uint64_t v165 = v156;
      *(void *)&char v161 = *sub_1BDD22B4C();
      type metadata accessor for CalculateExpression.Operation();
      sub_1BDCFF314((unint64_t *)&qword_1EBA268A0, 255, (void (*)(uint64_t))type metadata accessor for CalculateExpression.Operation);
      swift_retain();
      uint64_t v35 = sub_1BDDAFD28();
      swift_release();
      uint64_t v6 = swift_release();
      if ((v35 & 1) == 0) {
        goto LABEL_29;
      }
    }
  }
  unint64_t v9 = v155;
  uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v155 + 344))(v6);

  if (!v10) {
    goto LABEL_8;
  }
  if (((*(uint64_t (**)(void))(*(void *)v156 + 88))() & 1) == 0)
  {
LABEL_29:
    uint64_t v36 = 0;
    return v36 & 1;
  }
  unint64_t v9 = v155;
  (*(void (**)(void))(*(void *)v155 + 256))(0);
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v155 + 232))(1);
LABEL_8:
  uint64_t v12 = ((uint64_t (*)(uint64_t))v5)(v11);
  unint64_t v13 = v9;
  if (v12)
  {
    if ((*(uint64_t (**)(void))(*(void *)v9 + 368))() != 2) {
      goto LABEL_36;
    }
    uint64_t v14 = *(void (**)(long long *__return_ptr))(*(void *)v156 + 80);
    char v15 = *(void *)v156 + 80;
    v14(&v165);
    LOBYTE(v161) = v165;
    LOBYTE(v168) = 0;
    sub_1BDD18DF4();
    if (sub_1BDDAFD28()) {
      goto LABEL_36;
    }
    type metadata accessor for CalculateExpression.Operation();
    unsigned __int8 v16 = *sub_1BDCFF46C();
    swift_retain();
    uint64_t v17 = static CalculateExpression.Operation.== infix(_:_:)(v156, v16);
    uint64_t v18 = swift_release();
    if (!v17)
    {
      unsigned __int8 v19 = *sub_1BDD00428();
      swift_retain();
      uint64_t v20 = static CalculateExpression.Operation.== infix(_:_:)(v156, v19);
      uint64_t v18 = swift_release();
      if (!v20) {
        goto LABEL_35;
      }
    }
    unint64_t v21 = v13;
    uint64_t v22 = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 392))(v18);
    uint64_t v23 = v22;
    if (v22 >> 62)
    {
      unint64_t v24 = sub_1BDDB0448();
      if (v24)
      {
LABEL_15:
        uint64_t v25 = __OFSUB__(v24, 1);
        unint64_t v26 = v24 - 1;
        if (v25)
        {
          __break(1u);
        }
        else if ((v23 & 0xC000000000000001) == 0)
        {
          if ((v26 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v26 < *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            uint64_t v27 = *(void *)(v23 + 8 * v26 + 32);
            swift_retain();
LABEL_20:
            swift_bridgeObjectRelease();
            LOBYTE(v165) = *(unsigned char *)(v27 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
            LOBYTE(v161) = 1;
            if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v165, (unsigned __int8 *)&v161)
              && (uint64_t v159 = v15,
                  uint64_t v28 = (*(uint64_t (**)(void))(*(void *)v27 + 208))(),
                  uint64_t v30 = sub_1BDD0F9B4(v28, v29),
                  unint64_t v32 = v31,
                  swift_bridgeObjectRelease(),
                  v32))
            {
              if (v30 == 101 && v32 == 0xE100000000000000)
              {
                swift_release();
                swift_bridgeObjectRelease();
LABEL_36:
                swift_release();
                goto LABEL_37;
              }
              unint64_t v34 = sub_1BDDB04E8();
              swift_bridgeObjectRelease();
              swift_release();
              if (v34) {
                goto LABEL_36;
              }
            }
            else
            {
              swift_release();
            }
LABEL_35:
            unint64_t v37 = *sub_1BDCFF918();
            swift_retain();
            uint64_t v3 = (unsigned char *)static CalculateExpression.Operation.== infix(_:_:)(v156, v37);
            uint64_t v38 = swift_release();
            if (v3) {
              goto LABEL_36;
            }
            ((void (*)(long long *__return_ptr, uint64_t))v14)(&v165, v38);
            LOBYTE(v161) = 1;
            if (!static CalculateExpression.Operation.Mode.== infix(_:_:)((unsigned __int8 *)&v165, (unsigned __int8 *)&v161)|| ((uint64_t v65 = CalculateExpression.postfixStack.getter(), v65 >> 62)? (v66 = sub_1BDDB0448()): (v66 = *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10)), swift_bridgeObjectRelease(), v66 <= 0))
            {
              if ((v14(&v165),
                    LOBYTE(v161) = 2,
                    !static CalculateExpression.Operation.Mode.== infix(_:_:)((unsigned __int8 *)&v165, (unsigned __int8 *)&v161))&& (v14(&v165), LOBYTE(v161) = 3, !static CalculateExpression.Operation.Mode.== infix(_:_:)((unsigned __int8 *)&v165, (unsigned __int8 *)&v161))|| ((uint64_t v67 = CalculateExpression.postfixStack.getter(), v67 >> 62)? (v68 = sub_1BDDB0448()): (v68 = *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10)), swift_bridgeObjectRelease(), v68 < 2))
              {
                swift_release();
                uint64_t v36 = 0;
                return v36 & 1;
              }
            }
            uint64_t v69 = CalculateExpression.postfixStack.getter();
            unint64_t v21 = v69;
            if (!(v69 >> 62))
            {
              uint64_t v70 = *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (v70) {
                goto LABEL_93;
              }
              goto LABEL_180;
            }
LABEL_179:
            uint64_t v70 = sub_1BDDB0448();
            if (v70)
            {
LABEL_93:
              uint64_t v25 = __OFSUB__(v70, 1);
              unsigned __int8 v71 = v70 - 1;
              if (!v25)
              {
                uint64_t v160 = (void (*)(long long *__return_ptr, uint64_t))v14;
                if ((v21 & 0xC000000000000001) == 0)
                {
                  if ((v71 & 0x8000000000000000) != 0)
                  {
                    __break(1u);
                  }
                  else if (v71 < *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  {
                    swift_retain();
                    goto LABEL_98;
                  }
                  __break(1u);
                  goto LABEL_185;
                }
LABEL_182:
                MEMORY[0x1C18862A0](v71, v21);
LABEL_98:
                swift_bridgeObjectRelease();
                uint64_t v72 = (unsigned char *)CalculateExpression.rich.getter();
                swift_release();
                type metadata accessor for CalculateExpression.RichExpression();
                swift_allocObject();
                uint64_t v3 = sub_1BDD1832C(v72);
                swift_release();
                uint64_t v73 = *(void (**)(void))(*(void *)v3 + 232);
                swift_retain();
                v73(0);
                (*(void (**)(void))(*(void *)v3 + 256))(0);
                swift_release();
                uint64_t v74 = *sub_1BDCFF6D4();
                swift_retain();
                uint64_t v75 = static CalculateExpression.Operation.== infix(_:_:)(v156, v74);
                uint64_t v76 = swift_release();
                unint64_t v77 = 0;
                if (v75)
                {
                  uint64_t v78 = CalculateExpression.postfixStack.getter();
                  if (v78 >> 62) {
                    unint64_t v79 = sub_1BDDB0448();
                  }
                  else {
                    unint64_t v79 = *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  }
                  uint64_t v76 = swift_bridgeObjectRelease();
                  unint64_t v77 = v79 > 1;
                }
                uint64_t v80 = v156;
                v160(&v165, v76);
                LOBYTE(v161) = v165;
                LOBYTE(v168) = 1;
                LODWORD(v157) = v77;
                if ((sub_1BDDAFD28() & 1) != 0 && !v77)
                {
                  id v81 = v3;
                  uint64_t v3 = 0;
                  goto LABEL_117;
                }
                uint64_t v82 = CalculateExpression.postfixStack.getter();
                uint64_t v83 = CalculateExpression.postfixStack.getter();
                if (v83 >> 62) {
                  unsigned __int8 v84 = sub_1BDDB0448();
                }
                else {
                  unsigned __int8 v84 = *(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10);
                }
                swift_bridgeObjectRelease();
                int v85 = v84 - 2;
                if (__OFSUB__(v84, 2))
                {
                  __break(1u);
                }
                else if ((v82 & 0xC000000000000001) == 0)
                {
                  if ((v85 & 0x8000000000000000) != 0)
                  {
                    __break(1u);
                  }
                  else if (v85 < *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  {
                    swift_retain();
                    goto LABEL_112;
                  }
                  __break(1u);
                  goto LABEL_213;
                }
                MEMORY[0x1C18862A0](v85, v82);
LABEL_112:
                swift_bridgeObjectRelease();
                uint64_t v86 = (unsigned char *)CalculateExpression.rich.getter();
                swift_release();
                swift_allocObject();
                uint64_t v87 = sub_1BDD1832C(v86);
                swift_release();
                unint64_t v88 = swift_retain();
                v160(&v165, v88);
                LOBYTE(v161) = 2;
                uint64_t v89 = static CalculateExpression.Operation.Mode.== infix(_:_:)((unsigned __int8 *)&v165, (unsigned __int8 *)&v161);
                swift_release();
                if (v89) {
                  id v81 = v87;
                }
                else {
                  id v81 = v3;
                }
                if (!v89) {
                  uint64_t v3 = v87;
                }
LABEL_117:
                unint64_t v90 = sub_1BDCE62DC();
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269E8);
                uint64_t inited = swift_initStackObject();
                *(_OWORD *)(inited + 16) = xmmword_1BDDB37C0;
                *(void *)(inited + 32) = @"CalculateKeyFormat";
                uint64_t v92 = objc_allocWithZone(NSNumber);
                uint64_t v93 = @"CalculateKeyFormat";
                uint64_t v94 = objc_msgSend(v92, sel_initWithUnsignedInteger_, 0);
                *(void *)(inited + 64) = sub_1BDCE6874(0, (unint64_t *)&qword_1EBA26990);
                *(void *)(inited + 40) = v94;
                uint64_t v95 = sub_1BDD06F78(inited);
                char v96 = sub_1BDD13854(v95, v90);
                type metadata accessor for CalculateExpression();
                sub_1BDD1E6C4(&v165);
                unint64_t v97 = sub_1BDDAF9F8();
                MEMORY[0x1F4188790](v97 - 8, v98);
                unint64_t v100 = (char *)&v152 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0);
                sub_1BDD3EF5C();
                CalculateExpression.__allocating_init(_:options:base:id:)(0, 0xE000000000000000, v96, (char *)&v165, (uint64_t)v100);
                (*(void (**)(long long *__return_ptr))(*(void *)v155 + 384))(&v165);
                LODWORD(v158) = v165;
                CalculateExpression.base.setter();
                swift_retain();
                uint64_t v159 = (uint64_t)v81;
                sub_1BDD4AC2C();
                if (!v3)
                {
                  a2 = 0;
                  uint64_t v113 = 1;
                  goto LABEL_135;
                }
                uint64_t v101 = *(uint64_t (**)(void))(*(void *)v3 + 392);
                uint64_t v102 = swift_retain();
                int v103 = ((uint64_t (*)(uint64_t))v101)(v102);
                uint64_t v104 = v103;
                if (v103 >> 62)
                {
                  uint64_t v105 = sub_1BDDB0448();
                  if (v105)
                  {
LABEL_120:
                    uint64_t v25 = __OFSUB__(v105, 1);
                    char v106 = v105 - 1;
                    if (!v25)
                    {
                      if ((v104 & 0xC000000000000001) == 0)
                      {
                        if ((v106 & 0x8000000000000000) != 0)
                        {
                          __break(1u);
                        }
                        else if (v106 < *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10))
                        {
                          unsigned __int8 v107 = *(void *)(v104 + 8 * v106 + 32);
                          swift_retain();
                          goto LABEL_125;
                        }
                        __break(1u);
                        goto LABEL_206;
                      }
LABEL_203:
                      unsigned __int8 v107 = MEMORY[0x1C18862A0](v106, v104);
LABEL_125:
                      swift_bridgeObjectRelease();
                      type metadata accessor for CalculateExpression.RichToken();
                      unint64_t v100 = (char *)sub_1BDD072D4(v107);
                      uint64_t v108 = v101();
                      if (!(v108 >> 62))
                      {
                        char v109 = *(void *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_127:
                        uint64_t v80 = v156;
                        swift_bridgeObjectRelease();
                        if (v109 >= 2 && (uint64_t v110 = (*(uint64_t (**)(void))(*(void *)v3 + 416))(0)) != 0)
                        {
                          uint64_t v111 = *(unsigned char *)(v110 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
                          swift_release();
                          LOBYTE(v165) = v111;
                          LOBYTE(v161) = 4;
                          sub_1BDCF0848();
                          uint64_t v112 = sub_1BDDAFD28();
                        }
                        else
                        {
                          uint64_t v112 = 0;
                        }
                        type metadata accessor for CalculateExpression.CustomOperandOperation();
                        a2 = CalculateExpression.CustomOperandOperation.__allocating_init(_:negative:)((uint64_t)v100, v112 & 1);
                        swift_release();
                        uint64_t v113 = a2 == 0;
                        if (v157 && a2)
                        {
                          swift_retain();
                          sub_1BDCFF4F4();
                          uint64_t v114 = swift_retain();
                          CalculateExpression.update(_:)(v114);
                          swift_release();
                          CalculateExpression.update(_:)(a2);
                          CalculateExpression.update(_:)(v80);
                          swift_release();
                          uint64_t v14 = (void (*)(long long *__return_ptr))v160;
                          goto LABEL_140;
                        }
LABEL_135:
                        unint64_t v115 = CalculateExpression.update(_:)(v80);
                        uint64_t v14 = (void (*)(long long *__return_ptr))v160;
                        v160(&v165, v115);
                        LOBYTE(v161) = 2;
                        if (static CalculateExpression.Operation.Mode.== infix(_:_:)((unsigned __int8 *)&v165, (unsigned __int8 *)&v161))
                        {
                          if (v113)
                          {
LABEL_140:
                            uint64_t v117 = CalculateExpression.error.getter();
                            unint64_t v13 = v155;
                            (*(void (**)(void *))(*(void *)v155 + 352))(v117);
                            uint64_t v118 = CalculateExpression.postfixStack.getter();
                            unint64_t v21 = v118;
                            if (!(v118 >> 62))
                            {
                              uint64_t v119 = *(void *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x10);
                              if (v119) {
                                goto LABEL_142;
                              }
                              goto LABEL_186;
                            }
LABEL_185:
                            uint64_t v119 = sub_1BDDB0448();
                            if (v119)
                            {
LABEL_142:
                              uint64_t v25 = __OFSUB__(v119, 1);
                              uint64_t v120 = v119 - 1;
                              if (!v25)
                              {
                                uint64_t v157 = a2;
                                if ((v21 & 0xC000000000000001) == 0)
                                {
                                  if ((v120 & 0x8000000000000000) != 0)
                                  {
                                    __break(1u);
                                  }
                                  else if (v120 < *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
                                  {
                                    swift_retain();
                                    goto LABEL_147;
                                  }
                                  __break(1u);
                                  goto LABEL_191;
                                }
LABEL_188:
                                MEMORY[0x1C18862A0](v120, v21);
LABEL_147:
                                swift_bridgeObjectRelease();
                                unint64_t v121 = CalculateExpression.rich.getter();
                                uint64_t v122 = swift_release();
                                uint64_t v123 = (*(uint64_t (**)(uint64_t))(*(void *)v121 + 392))(v122);
                                swift_release();
                                uint64_t v154 = v3;
                                if (!(v123 >> 62))
                                {
                                  uint64_t v124 = *(void *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_149:
                                  swift_bridgeObjectRelease();
                                  char v125 = (uint64_t (**)(long long *))(*(void *)v13 + 408);
                                  int v126 = *v125;
                                  uint64_t v127 = (uint64_t (*)(long long *, void))(*v125)(&v165);
                                  sub_1BDD03588(v124);
                                  uint64_t v128 = v127(&v165, 0);
                                  ((void (*)(long long *__return_ptr, uint64_t))v14)(&v165, v128);
                                  LOBYTE(v161) = 2;
                                  if (!static CalculateExpression.Operation.Mode.== infix(_:_:)((unsigned __int8 *)&v165, (unsigned __int8 *)&v161))
                                  {
                                    v14(&v165);
                                    LOBYTE(v161) = 3;
                                    if (!static CalculateExpression.Operation.Mode.== infix(_:_:)((unsigned __int8 *)&v165, (unsigned __int8 *)&v161))
                                    {
LABEL_161:
                                      uint64_t v138 = v155;
                                      (*(void (**)(void))(*(void *)v155 + 232))(0);
                                      (*(void (**)(uint64_t))(*(void *)v138 + 256))(1);
                                      uint64_t v139 = CalculateExpression.result.getter();
                                      if (v139)
                                      {
                                        uint64_t v140 = v139;
                                        type metadata accessor for CalculateExpression.CustomOperandOperation();
                                        uint64_t v141 = v140;
                                        CalculateExpression.CustomOperandOperation.__allocating_init(_:)(v141);
                                        uint64_t v143 = v142;
                                        *(void *)&char v161 = MEMORY[0x1E4FBC860];
                                        unint64_t v144 = (*(uint64_t (**)(void))(*(void *)v142 + 128))();
                                        if (v144)
                                        {
                                          LOBYTE(v165) = 4;
                                          type metadata accessor for CalculateExpression.RichToken();
                                          swift_allocObject();
                                          uint64_t v145 = CalculateExpression.RichToken.init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v165, 0);
                                          MEMORY[0x1C1885EA0](v145);
                                          if (*(void *)((v161 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v161 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                                            sub_1BDDB0008();
                                          }
                                          sub_1BDDB0048();
                                          unint64_t v144 = sub_1BDDAFFD8();
                                        }
                                        id v146 = (*(uint64_t (**)(uint64_t))(*(void *)v143 + 120))(v144);
                                        LOBYTE(v165) = v158;
                                        (*(void (**)(long long *))(*(void *)v146 + 400))(&v165);
                                        uint64_t v147 = swift_retain();
                                        MEMORY[0x1C1885EA0](v147);
                                        if (*(void *)((v161 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v161 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                                          sub_1BDDB0008();
                                        }
                                        sub_1BDDB0048();
                                        sub_1BDDAFFD8();
                                        id v148 = v161;
                                        id v149 = (void (*)(long long *, void))v126(&v165);
                                        sub_1BDCE4468(v148);
                                        v149(&v165, 0);
                                        swift_release();
                                        swift_release();
                                        swift_release();

                                        swift_release();
                                        goto LABEL_171;
                                      }
                                      type metadata accessor for CalculateExpression.RichToken();
                                      LOBYTE(v165) = v158;
                                      sub_1BDCE8A80(48, 0xE100000000000000, (char *)&v165);
                                      unint64_t v77 = v126(&v165);
                                      uint64_t v151 = v150;
                                      MEMORY[0x1C1885EA0]();
                                      if (*(void *)((*v151 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*v151 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                                      {
LABEL_170:
                                        sub_1BDDB0048();
                                        sub_1BDDAFFD8();
                                        ((void (*)(long long *, void))v77)(&v165, 0);
                                        swift_release();
                                        swift_release();
LABEL_171:
                                        swift_release();
                                        swift_release();
                                        swift_release();
                                        uint64_t v36 = 1;
                                        return v36 & 1;
                                      }
LABEL_213:
                                      sub_1BDDB0008();
                                      goto LABEL_170;
                                    }
                                  }
                                  uint64_t v129 = CalculateExpression.postfixStack.getter();
                                  char v130 = CalculateExpression.postfixStack.getter();
                                  if (v130 >> 62) {
                                    uint64_t v131 = sub_1BDDB0448();
                                  }
                                  else {
                                    uint64_t v131 = *(void *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x10);
                                  }
                                  swift_bridgeObjectRelease();
                                  uint64_t v132 = v131 - 2;
                                  if (__OFSUB__(v131, 2))
                                  {
                                    __break(1u);
                                  }
                                  else if ((v129 & 0xC000000000000001) == 0)
                                  {
                                    if ((v132 & 0x8000000000000000) != 0)
                                    {
                                      __break(1u);
                                    }
                                    else if (v132 < *(void *)((v129 & 0xFFFFFFFFFFFFFF8) + 0x10))
                                    {
                                      swift_retain();
                                      goto LABEL_158;
                                    }
                                    __break(1u);
                                    goto LABEL_199;
                                  }
                                  MEMORY[0x1C18862A0](v132, v129);
LABEL_158:
                                  swift_bridgeObjectRelease();
                                  uint64_t v133 = CalculateExpression.rich.getter();
                                  uint64_t v134 = swift_release();
                                  uint64_t v135 = (*(uint64_t (**)(uint64_t))(*(void *)v133 + 392))(v134);
                                  swift_release();
                                  if (!(v135 >> 62))
                                  {
                                    uint64_t v136 = *(void *)((v135 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_160:
                                    swift_bridgeObjectRelease();
                                    unint64_t v137 = (void (*)(long long *, void))v126(&v165);
                                    sub_1BDD03588(v136);
                                    v137(&v165, 0);
                                    goto LABEL_161;
                                  }
LABEL_199:
                                  swift_bridgeObjectRetain();
                                  uint64_t v136 = sub_1BDDB0448();
                                  swift_bridgeObjectRelease();
                                  goto LABEL_160;
                                }
LABEL_191:
                                swift_bridgeObjectRetain();
                                uint64_t v124 = sub_1BDDB0448();
                                swift_bridgeObjectRelease();
                                goto LABEL_149;
                              }
LABEL_187:
                              __break(1u);
                              goto LABEL_188;
                            }
LABEL_186:
                            swift_bridgeObjectRelease();
                            swift_release();
                            uint64_t v120 = swift_release();
                            __break(1u);
                            goto LABEL_187;
                          }
                        }
                        else
                        {
                          v14(&v165);
                          LOBYTE(v161) = 3;
                          if (v113 | !static CalculateExpression.Operation.Mode.== infix(_:_:)((unsigned __int8 *)&v165, (unsigned __int8 *)&v161))goto LABEL_140; {
                        }
                          }
                        uint64_t v116 = swift_retain();
                        CalculateExpression.update(_:)(v116);
                        swift_release();
                        goto LABEL_140;
                      }
LABEL_206:
                      char v109 = sub_1BDDB0448();
                      goto LABEL_127;
                    }
LABEL_202:
                    __break(1u);
                    goto LABEL_203;
                  }
                }
                else
                {
                  uint64_t v105 = *(void *)((v103 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  if (v105) {
                    goto LABEL_120;
                  }
                }
                swift_release();
                char v106 = swift_bridgeObjectRelease();
                __break(1u);
                goto LABEL_202;
              }
LABEL_181:
              __break(1u);
              goto LABEL_182;
            }
LABEL_180:
            unsigned __int8 v71 = swift_bridgeObjectRelease();
            __break(1u);
            goto LABEL_181;
          }
          __break(1u);
          goto LABEL_179;
        }
        uint64_t v27 = MEMORY[0x1C18862A0](v26, v23);
        goto LABEL_20;
      }
    }
    else
    {
      unint64_t v24 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v24) {
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
LABEL_37:
  LODWORD(v154) = (*(uint64_t (**)(unint64_t, uint64_t))(*(void *)v156 + 104))(v13, a2);
  if (v154) {
    (*(void (**)(void))(*(void *)v13 + 352))(0);
  }
  sub_1BDCEBD5C();
  unint64_t v168 = MEMORY[0x1E4FBC870];
  CalculateExpression.RichExpression.editingToken(matching:)((uint64_t (*)(void *))sub_1BDD138E0, &v165);
  uint64_t v39 = v165;
  if ((void)v165)
  {
    char v161 = v165;
    uint64_t v162 = v166;
    uint64_t v163 = v167;
    uint64_t v40 = CalculateExpression.RichExpression.EditingToken.token.getter();
    sub_1BDD02E18(v39);
  }
  else
  {
    uint64_t v40 = 0;
  }
  uint64_t v41 = CalculateExpression.RichExpression.editingTokens()();
  char v42 = v41;
  uint64_t v159 = *(void *)(v41 + 16);
  if (v159)
  {
    uint64_t v153 = v40;
    unint64_t v13 = 0;
    uint64_t v158 = v41 + 32;
    uint64_t v157 = v41;
    while (1)
    {
      if (v13 >= *(void *)(v42 + 16))
      {
        __break(1u);
LABEL_173:
        __break(1u);
LABEL_174:
        unint64_t v62 = sub_1BDDB0448();
        goto LABEL_77;
      }
      char v43 = v158 + 32 * v13;
      char v44 = *(void (**)(long long *__return_ptr, uint64_t))(v43 + 24);
      unint64_t v46 = *(uint64_t **)v43;
      unint64_t v45 = *(void *)(v43 + 8);
      swift_retain();
      swift_retain_n();
      sub_1BDD14A88((uint64_t *)&v165, (uint64_t)v46);
      swift_release();
      *(void *)&uint64_t v165 = v45;
      swift_retain();
      sub_1BDD231C0((uint64_t *)&v165);
      uint64_t v47 = v165;
      uint64_t v48 = *v46;
      uint64_t v49 = v165 - 1;
      if (__OFSUB__((void)v165, 1)) {
        goto LABEL_173;
      }
      uint64_t v160 = v44;
      uint64_t v50 = *(uint64_t (**)(uint64_t))(v48 + 416);
      uint64_t v51 = v50(v165 - 1);
      if (!v51)
      {
LABEL_44:
        swift_release();
        swift_release_n();
        goto LABEL_45;
      }
      uint64_t v52 = v51;
      while (1)
      {
        LOBYTE(v161) = *(unsigned char *)(v52 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        uint64_t v164 = 10;
        if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v161, &v164))
        {
          unint64_t v53 = (*(uint64_t (**)(void))(*(void *)v52 + 256))();
          if (v53)
          {
            uint64_t v54 = v53;
            if ((*(uint64_t (**)(void))(*(void *)v53 + 568))()) {
              goto LABEL_68;
            }
            unint64_t v53 = swift_release();
          }
          uint64_t v55 = (*(uint64_t (**)(uint64_t))(*(void *)v52 + 280))(v53);
          if (v55) {
            break;
          }
        }
LABEL_57:
        if (v47 >= 1)
        {
          uint64_t v56 = v47 + 1;
          while (1)
          {
            uint64_t v47 = v56 - 2;
            unsigned __int8 v57 = v50(v56 - 2);
            if (v57)
            {
              uint64_t v58 = *(unsigned char *)(v57 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
              swift_release();
              LOBYTE(v161) = v58;
              uint64_t v164 = 15;
              sub_1BDCF0848();
              if (sub_1BDDAFD28()) {
                break;
              }
            }
            if ((unint64_t)--v56 <= 1)
            {
              uint64_t v47 = 0;
              break;
            }
          }
          swift_release();
          uint64_t v49 = v47 - 1;
        }
        else
        {
          swift_release();
        }
        uint64_t v52 = v50(v49);
        if (!v52) {
          goto LABEL_44;
        }
      }
      uint64_t v54 = v55;
      if (((*(uint64_t (**)(void))(*(void *)v55 + 568))() & 1) == 0) {
        break;
      }
LABEL_68:
      swift_retain();
      sub_1BDD14A88((uint64_t *)&v161, v54);
      swift_release();
      swift_release();
      swift_release();
      swift_release_n();
      swift_release();
LABEL_45:
      char v42 = v157;
      if (++v13 == v159)
      {
        swift_bridgeObjectRelease();
        unint64_t v13 = v155;
        uint64_t v40 = v153;
        goto LABEL_71;
      }
    }
    swift_release();
    goto LABEL_57;
  }
  swift_bridgeObjectRelease();
LABEL_71:
  if (*sub_1BDCFF918() == v156 || *sub_1BDD01170() == v156) {
    uint64_t v59 = 0;
  }
  else {
    uint64_t v59 = 2;
  }
  sub_1BDCE8FB8(v168, v40, v59);
  swift_bridgeObjectRelease();
  uint64_t v60 = sub_1BDCE7328();
  uint64_t v61 = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 392))(v60);
  if (v61 >> 62) {
    goto LABEL_174;
  }
  unint64_t v62 = *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_77:
  uint64_t v63 = swift_bridgeObjectRelease();
  if (!v62) {
    (*(void (**)(uint64_t))(*(void *)v13 + 424))(v63);
  }
  swift_release();
  uint64_t v36 = (char)v154;
  return v36 & 1;
}

uint64_t sub_1BDD13854(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_1BDD17398(a1, (uint64_t)sub_1BDD17348, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1BDD138E0(long long *a1)
{
  long long v6 = *a1;
  uint64_t v1 = *((void *)a1 + 2);
  uint64_t v2 = *((void *)a1 + 3);
  uint64_t v3 = *sub_1BDCFF898();
  long long v7 = v6;
  uint64_t v8 = v1;
  uint64_t v9 = v2;
  char v4 = *(uint64_t (**)(long long *))(*(void *)v3 + 136);
  swift_retain();
  LOBYTE(v4) = v4(&v7);
  swift_release();
  return v4 & 1;
}

uint64_t sub_1BDD1396C(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v3 = *(unsigned char *)(a1 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  v14[1] = v3;
  if ((CalculateExpression.TokenType.isOperand.getter() & 1) == 0)
  {
    v14[0] = v3;
    unsigned __int8 v13 = 16;
    if (!static CalculateExpression.TokenType.== infix(_:_:)(v14, &v13))
    {
      unsigned __int8 v12 = v3;
      unsigned __int8 v11 = 7;
      if (!static CalculateExpression.TokenType.== infix(_:_:)(&v12, &v11))
      {
        unsigned __int8 v10 = v3;
        unsigned __int8 v9 = 8;
        if (!static CalculateExpression.TokenType.== infix(_:_:)(&v10, &v9)) {
          goto LABEL_10;
        }
      }
    }
  }
  unsigned __int8 v4 = *(unsigned char *)(a2 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  v18[1] = v4;
  if ((CalculateExpression.TokenType.isOperand.getter() & 1) != 0
    || (v18[0] = v4, unsigned __int8 v17 = 15, static CalculateExpression.TokenType.== infix(_:_:)(v18, &v17))
    || (v16 = v4, unsigned __int8 v15 = 10, static CalculateExpression.TokenType.== infix(_:_:)(&v16, &v15)))
  {
    unsigned __int8 v8 = v3;
    char v5 = 1;
    unsigned __int8 v7 = 1;
    if (static CalculateExpression.TokenType.== infix(_:_:)(&v8, &v7)) {
      char v5 = CalculateExpression.TokenType.isConstant.getter() ^ 1;
    }
  }
  else
  {
LABEL_10:
    char v5 = 0;
  }
  return v5 & 1;
}

unint64_t sub_1BDD13AE4(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_1BDDAFF08();
  }
  __break(1u);
  return result;
}

uint64_t CalculateExpression.RichExpression.deinit()
{
  swift_weakDestroy();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BDD13B60()
{
  sub_1BDDB0558();
  (*(void (**)(unsigned char *))(*(void *)v0 + 168))(v2);
  return sub_1BDDB0578();
}

uint64_t sub_1BDD13BC0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 760))();
}

uint64_t sub_1BDD13C0C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 168))();
}

uint64_t sub_1BDD13C50()
{
  sub_1BDDB0558();
  (*(void (**)(unsigned char *))(**(void **)v0 + 168))(v2);
  return sub_1BDDB0578();
}

uint64_t sub_1BDD13CB0(uint64_t a1, uint64_t a2)
{
  return sub_1BDD13CD4(a1, a2, MEMORY[0x1F418C118]);
}

uint64_t sub_1BDD13CBC(uint64_t a1, uint64_t a2)
{
  return sub_1BDD13CD4(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1BDD13CD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1BDDAFD68();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BDD13D18(uint64_t a1)
{
  uint64_t v2 = sub_1BDCFF314(&qword_1EBA26918, 255, (void (*)(uint64_t))type metadata accessor for CalculateKey);
  uint64_t v3 = sub_1BDCFF314(&qword_1EA0DEFF0, 255, (void (*)(uint64_t))type metadata accessor for CalculateKey);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

char *sub_1BDD13DDC(int64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v1 = v3;
  if (!result || a1 > *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v3 + 16) <= a1) {
      int64_t v5 = a1;
    }
    else {
      int64_t v5 = *(void *)(v3 + 16);
    }
    return sub_1BDD17224(result, v5, 0);
  }
  return result;
}

uint64_t sub_1BDD13E54(unint64_t a1)
{
  if (!(a1 >> 62)) {
    return *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1BDDB0448();
  swift_bridgeObjectRelease();
  return v2;
}

unint64_t sub_1BDD13EB4(uint64_t a1, uint64_t a2)
{
  sub_1BDDB0558();
  sub_1BDDAFDB8();
  uint64_t v4 = sub_1BDDB0578();
  return sub_1BDD13FB4(a1, a2, v4);
}

unint64_t sub_1BDD13F2C(uint64_t a1)
{
  uint64_t v2 = sub_1BDDB0548();
  return sub_1BDD14098(a1, v2);
}

unint64_t sub_1BDD13F70(uint64_t a1)
{
  uint64_t v2 = sub_1BDDB02C8();
  return sub_1BDD14134(a1, v2);
}

unint64_t sub_1BDD13FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unsigned __int8 v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1BDDB04E8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unsigned __int8 v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1BDDB04E8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1BDD14098(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1BDD14134(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1BDD198F8(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1C18861D0](v9, a1);
      sub_1BDD19954((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1BDD141FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1BDDAFEF8();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    char v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1BDD05D28();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    char v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    char v7 = (unsigned __int8 *)sub_1BDDB03C8();
  }
LABEL_7:
  BOOL v11 = sub_1BDD143DC(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 | ((((unint64_t)v11 >> 32) & 1) << 32);
}

uint64_t sub_1BDD142E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1BDDAFEF8();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1BDD05D28();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v9 = (void *)sub_1BDDB03C8();
  }
LABEL_7:
  uint64_t v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1BDD143DC(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            uint64_t v23 = (int)v8 * (uint64_t)(int)a3;
            if (v23 != (int)v23) {
              goto LABEL_72;
            }
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__OFADD__(v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned int v12 = 0;
      unsigned __int8 v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          unsigned int v28 = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            uint64_t v31 = (int)v28 * (uint64_t)(int)a3;
            if (v31 != (int)v31) {
              goto LABEL_72;
            }
            unsigned __int8 v32 = v29 + v30;
            unsigned int v28 = v31 + v32;
            if (__OFADD__(v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          unsigned __int8 v13 = 0;
          unsigned int v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          unint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            uint64_t v14 = (int)v8 * (uint64_t)(int)a3;
            if (v14 != (int)v14) {
              goto LABEL_72;
            }
            unsigned __int8 v15 = v10 + v11;
            unsigned int v8 = v14 - v15;
            if (__OFSUB__(v14, v15)) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned int v12 = 0;
        unsigned __int8 v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_1BDD1465C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unsigned __int8 v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1BDD148D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1BDDB0558();
  swift_bridgeObjectRetain();
  sub_1BDDAFDB8();
  uint64_t v8 = sub_1BDDB0578();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    char v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1BDDB04E8() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      unsigned __int8 v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1BDDB04E8() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1BDD15884(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1BDD14A88(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v8 = sub_1BDDB0298();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      v20[9] = v8;
      type metadata accessor for CalculateExpression.RichExpression();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v20[0];
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1BDDB0288();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v18 = sub_1BDD14D08(v7, result + 1);
    v20[0] = v18;
    if (*(void *)(v18 + 24) <= *(void *)(v18 + 16))
    {
      swift_retain();
      sub_1BDD154E4();
      uint64_t v19 = v20[0];
    }
    else
    {
      uint64_t v19 = v18;
      swift_retain();
    }
    sub_1BDD157C0(a2, v19);
    uint64_t *v3 = v19;
  }
  else
  {
    sub_1BDDB0558();
    unint64_t v10 = *(void (**)(void *))(*(void *)a2 + 168);
    swift_bridgeObjectRetain();
    v10(v20);
    uint64_t v11 = sub_1BDDB0578();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      uint64_t v14 = *(void *)(v6 + 48);
      if (*(void *)(v14 + 8 * v13) == a2)
      {
LABEL_12:
        swift_release();
        swift_bridgeObjectRelease();
        *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v13);
        swift_retain();
        return 0;
      }
      uint64_t v15 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v15;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        if (*(void *)(v14 + 8 * v13) == a2) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20[0] = *v2;
    uint64_t *v2 = 0x8000000000000000;
    uint64_t v17 = swift_retain();
    sub_1BDD15A20(v17, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v20[0];
  }
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_1BDD14D08(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26998);
    uint64_t v2 = sub_1BDDB0308();
    uint64_t v17 = v2;
    sub_1BDDB0278();
    uint64_t v3 = sub_1BDDB02A8();
    if (v3)
    {
      uint64_t v4 = v3;
      type metadata accessor for CalculateExpression.RichExpression();
      do
      {
        v16[0] = v4;
        swift_dynamicCast();
        uint64_t v2 = v17;
        if (*(void *)(v17 + 24) <= *(void *)(v17 + 16))
        {
          sub_1BDD154E4();
          uint64_t v2 = v17;
        }
        uint64_t v5 = v16[9];
        sub_1BDDB0558();
        (*(void (**)(void *))(*(void *)v5 + 168))(v16);
        uint64_t result = sub_1BDDB0578();
        uint64_t v7 = v2 + 56;
        uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v9 = result & ~v8;
        unint64_t v10 = v9 >> 6;
        if (((-1 << v9) & ~*(void *)(v2 + 56 + 8 * (v9 >> 6))) != 0)
        {
          unint64_t v11 = __clz(__rbit64((-1 << v9) & ~*(void *)(v2 + 56 + 8 * (v9 >> 6)))) | v9 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v12 = 0;
          unint64_t v13 = (unint64_t)(63 - v8) >> 6;
          do
          {
            if (++v10 == v13 && (v12 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v14 = v10 == v13;
            if (v10 == v13) {
              unint64_t v10 = 0;
            }
            v12 |= v14;
            uint64_t v15 = *(void *)(v7 + 8 * v10);
          }
          while (v15 == -1);
          unint64_t v11 = __clz(__rbit64(~v15)) + (v10 << 6);
        }
        *(void *)(v7 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        *(void *)(*(void *)(v2 + 48) + 8 * v11) = v5;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_1BDDB02A8();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_1BDD14F2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF050);
  uint64_t v3 = sub_1BDDB02F8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1BDDB0558();
      sub_1BDDAFDB8();
      uint64_t result = sub_1BDDB0578();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1BDD1520C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF048);
  uint64_t v3 = sub_1BDDB02F8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    BOOL v27 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v11 << 6);
      }
      else
      {
        int64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v8) {
          goto LABEL_33;
        }
        unint64_t v16 = v27[v15];
        ++v11;
        if (!v16)
        {
          int64_t v11 = v15 + 1;
          if (v15 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v16 = v27[v11];
          if (!v16)
          {
            int64_t v11 = v15 + 2;
            if (v15 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v16 = v27[v11];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero(v27, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v27 = -1 << v26;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v27[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v11 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v27[v11];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
      sub_1BDCF06D4();
      uint64_t result = sub_1BDDAFCE8();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v9 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1BDD154E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26998);
  uint64_t v3 = sub_1BDDB02F8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      sub_1BDDB0558();
      (*(void (**)(char *))(*(void *)v19 + 168))(v28);
      uint64_t result = sub_1BDDB0578();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

unint64_t sub_1BDD157C0(uint64_t a1, uint64_t a2)
{
  sub_1BDDB0558();
  (*(void (**)(unsigned char *))(*(void *)a1 + 168))(v5);
  sub_1BDDB0578();
  unint64_t result = sub_1BDDB0268();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_1BDD15884(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1BDD14F2C();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (uint64_t)sub_1BDD15B8C();
      goto LABEL_22;
    }
    sub_1BDD16080();
  }
  uint64_t v11 = *v4;
  sub_1BDDB0558();
  sub_1BDDAFDB8();
  unint64_t result = sub_1BDDB0578();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (unint64_t result = sub_1BDDB04E8(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = sub_1BDDB0518();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          unint64_t result = sub_1BDDB04E8();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *unint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1BDD15A20(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_13;
  }
  if (a3)
  {
    sub_1BDD154E4();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_1BDD15ED4();
      goto LABEL_13;
    }
    sub_1BDD165D0();
  }
  uint64_t v8 = *v3;
  sub_1BDDB0558();
  (*(void (**)(unsigned char *))(*(void *)v5 + 168))(v15);
  unint64_t result = sub_1BDDB0578();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    unint64_t result = type metadata accessor for CalculateExpression.RichExpression();
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_12:
      unint64_t result = sub_1BDDB0518();
      __break(1u);
    }
    else
    {
      while (1)
      {
        a2 = (a2 + 1) & ~v9;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_12;
        }
      }
    }
  }
LABEL_13:
  uint64_t v11 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v11 + 48) + 8 * a2) = v5;
  uint64_t v12 = *(void *)(v11 + 16);
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    *(void *)(v11 + 16) = v14;
  }
  return result;
}

void *sub_1BDD15B8C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF050);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1BDDB02E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BDD15D40()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF048);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1BDDB02E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BDD15ED4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26998);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1BDDB02E8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    unint64_t result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BDD16080()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF050);
  uint64_t v3 = sub_1BDDB02F8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1BDDB0558();
    swift_bridgeObjectRetain();
    sub_1BDDAFDB8();
    uint64_t result = sub_1BDDB0578();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BDD16330()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF048);
  uint64_t v3 = sub_1BDDB02F8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v26 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v26) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v26) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v26) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v11);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_1BDCF06D4();
    uint64_t result = sub_1BDDAFCE8();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v9 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v26)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BDD165D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26998);
  uint64_t v3 = sub_1BDDB02F8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v26 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v27 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v27) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v27) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v26 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v27) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v26 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
    sub_1BDDB0558();
    char v18 = *(void (**)(char *))(*(void *)v17 + 168);
    swift_retain();
    v18(v28);
    uint64_t result = sub_1BDDB0578();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v8 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v27)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v26 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v27) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void *sub_1BDD168AC()
{
  uint64_t v1 = *v0;
  uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v0 = v1;
  if (!result)
  {
    uint64_t result = sub_1BDD1693C(result, v1[2] + 1, 1, v1);
    *uint64_t v0 = result;
  }
  return result;
}

void *sub_1BDD168F8(void *result)
{
  unint64_t v2 = (*v1)[3];
  if ((uint64_t)result + 1 > (uint64_t)(v2 >> 1))
  {
    uint64_t result = sub_1BDD1693C((void *)(v2 > 1), (int64_t)result + 1, 1, *v1);
    void *v1 = result;
  }
  return result;
}

void *sub_1BDD1693C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF020);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF028);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1BDD16A60(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DEFF8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1BDD16B5C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF040);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  size_t v15 = 16 * v8;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, v15);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1BDD16C54(uint64_t result, unint64_t a2)
{
  uint64_t v2 = result;
  if (!(a2 >> 62))
  {
    if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= result) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1BDDB0448();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 < v2) {
    goto LABEL_6;
  }
LABEL_3:
  if (v2 < 0) {
LABEL_7:
  }
    __break(1u);
  return result;
}

unint64_t sub_1BDD16CD4(unint64_t result, int64_t a2, uint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  unint64_t v5 = *v3;
  int64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v7 = result;
  unint64_t v8 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (!result || v10 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v10) {
      int64_t v12 = v6 + v9;
    }
    else {
      int64_t v12 = v6;
    }
    uint64_t result = (unint64_t)sub_1BDD16A60((char *)result, v12, 1, (char *)v5);
    unint64_t v5 = result;
  }
  unint64_t v13 = (void *)(v5 + 32 + 8 * v7);
  if (!v9) {
    goto LABEL_19;
  }
  uint64_t v14 = *(void *)(v5 + 16);
  BOOL v15 = __OFSUB__(v14, a2);
  uint64_t v16 = v14 - a2;
  if (v15) {
    goto LABEL_25;
  }
  uint64_t result = (unint64_t)(v13 + 1);
  uint64_t v17 = (void *)(v5 + 32 + 8 * a2);
  if (v13 + 1 != v17 || result >= (unint64_t)&v17[v16]) {
    uint64_t result = (unint64_t)memmove((void *)result, v17, 8 * v16);
  }
  uint64_t v18 = *(void *)(v5 + 16);
  BOOL v15 = __OFADD__(v18, v9);
  uint64_t v19 = v18 + v9;
  if (!v15)
  {
    *(void *)(v5 + 16) = v19;
LABEL_19:
    *unint64_t v13 = a3;
    unint64_t *v3 = v5;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

char *sub_1BDD16DE4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(void))
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = a5;
    unint64_t v9 = a4;
    uint64_t v12 = a3;
    uint64_t v7 = a2;
    uint64_t v10 = a1;
    unint64_t v11 = *v6;
    if (!(*v6 >> 62))
    {
      if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1BDDB0448();
  swift_bridgeObjectRelease();
  if (v26 < v7) {
    goto LABEL_32;
  }
LABEL_4:
  uint64_t v13 = v7 - v10;
  if (__OFSUB__(v7, v10))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v5 = 1 - v13;
  if (__OFSUB__(1, v13))
  {
LABEL_34:
    __break(1u);
LABEL_35:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    uint64_t v15 = v14 + v5;
    if (!__OFADD__(v14, v5)) {
      goto LABEL_8;
    }
LABEL_37:
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  char v30 = v9;
  unint64_t v11 = *v6;
  unint64_t v9 = v8;
  if (*v6 >> 62) {
    goto LABEL_35;
  }
  uint64_t v14 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v15 = v14 + v5;
  if (__OFADD__(v14, v5)) {
    goto LABEL_37;
  }
LABEL_8:
  unint64_t v11 = *v6;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *int64_t v6 = v11;
  uint64_t v29 = v12;
  uint64_t v14 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v11 & 0x8000000000000000) == 0
    && (v11 & 0x4000000000000000) == 0)
  {
    uint64_t v17 = v11 & 0xFFFFFFFFFFFFFF8;
    if (v15 <= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v14 = 1;
  }
  if (v11 >> 62) {
    goto LABEL_38;
  }
  uint64_t v18 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v18 <= v15) {
    uint64_t v18 = v15;
  }
  swift_bridgeObjectRetain();
  unint64_t v11 = MEMORY[0x1C18862B0](v14, v18, 1, v11);
  swift_bridgeObjectRelease();
  *int64_t v6 = v11;
  uint64_t v17 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  uint64_t v19 = (void *)(v17 + 32 + 8 * v10);
  v9(v30);
  swift_arrayDestroy();
  if (v5)
  {
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
      uint64_t v21 = v27 - v7;
      if (!__OFSUB__(v27, v7)) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v20 = *(void *)(v17 + 16);
      uint64_t v21 = v20 - v7;
      if (!__OFSUB__(v20, v7))
      {
LABEL_21:
        uint64_t result = (char *)(v19 + 1);
        unint64_t v23 = (char *)(v17 + 32 + 8 * v7);
        if (v19 + 1 != (void *)v23 || result >= &v23[8 * v21]) {
          uint64_t result = (char *)memmove(result, v23, 8 * v21);
        }
        if (!(v11 >> 62))
        {
          uint64_t v24 = *(void *)(v17 + 16);
          uint64_t v25 = v24 + v5;
          if (!__OFADD__(v24, v5))
          {
LABEL_26:
            *(void *)(v17 + 16) = v25;
            goto LABEL_27;
          }
LABEL_44:
          __break(1u);
          return result;
        }
LABEL_42:
        swift_bridgeObjectRetain();
        uint64_t v28 = sub_1BDDB0448();
        uint64_t result = (char *)swift_bridgeObjectRelease();
        uint64_t v25 = v28 + v5;
        if (!__OFADD__(v28, v5)) {
          goto LABEL_26;
        }
        goto LABEL_44;
      }
    }
    __break(1u);
    goto LABEL_42;
  }
LABEL_27:
  *uint64_t v19 = v29;
  return (char *)sub_1BDDAFFD8();
}

uint64_t sub_1BDD170A0(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = result;
  if ((a3 & 0xC000000000000001) == 0) {
    goto LABEL_7;
  }
  if (a2 < result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (result == a2)
  {
LABEL_7:
    if (a3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1BDDB0458();
      swift_bridgeObjectRelease();
      return v7;
    }
    if ((a2 & 0x8000000000000000) == 0)
    {
      uint64_t v7 = a3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      return v7;
    }
    __break(1u);
    goto LABEL_13;
  }
  if (result < a2)
  {
    type metadata accessor for CalculateExpression.Token();
    uint64_t result = v5;
    do
    {
      uint64_t v6 = result + 1;
      sub_1BDDB0388();
      uint64_t result = v6;
    }
    while (a2 != v6);
    goto LABEL_7;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1BDD171A0()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v0 = v1;
  if ((result & 1) == 0)
  {
    int64_t v3 = *(void *)(v1 + 16) + 1;
    return (uint64_t)sub_1BDD17224(0, v3, 1);
  }
  return result;
}

char *sub_1BDD171FC(char *result)
{
  unint64_t v2 = *(void *)(*(void *)v1 + 24);
  if ((uint64_t)(result + 1) > (uint64_t)(v2 >> 1)) {
    return sub_1BDD17224((char *)(v2 > 1), (int64_t)(result + 1), 1);
  }
  return result;
}

char *sub_1BDD17224(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BDD17244(a1, a2, a3, *v3);
  unint64_t *v3 = result;
  return result;
}

char *sub_1BDD17244(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269E0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

id sub_1BDD17348@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id v4 = *a1;
  sub_1BDD18D98((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
  *a2 = v4;
  return v4;
}

uint64_t sub_1BDD17398(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v46 = a1;
  uint64_t v47 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v48 = v8;
  uint64_t v49 = 0;
  uint64_t v50 = v11 & v9;
  uint64_t v51 = a2;
  uint64_t v52 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BDD18154((uint64_t)&v44);
  uint64_t v12 = v44;
  if (!v44) {
    goto LABEL_27;
  }
  sub_1BDD198E8(v45, v43);
  uint64_t v13 = *(void **)a5;
  unint64_t v15 = sub_1BDCE6070((uint64_t)v12);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v19 = v14;
  if (v13[3] >= v18)
  {
    if (a4)
    {
      if (v14) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_1BDD17E30();
      if (v19) {
        goto LABEL_12;
      }
    }
LABEL_14:
    unint64_t v23 = *(void **)a5;
    *(void *)(*(void *)a5 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    *(void *)(v23[6] + 8 * v15) = v12;
    sub_1BDD198E8(v43, (_OWORD *)(v23[7] + 32 * v15));
    uint64_t v24 = v23[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v23[2] = v26;
LABEL_16:
    sub_1BDD18154((uint64_t)&v44);
    for (uint64_t i = v44; v44; uint64_t i = v44)
    {
      sub_1BDD198E8(v45, v43);
      uint64_t v29 = *(void **)a5;
      unint64_t v31 = sub_1BDCE6070((uint64_t)i);
      uint64_t v32 = v29[2];
      BOOL v33 = (v30 & 1) == 0;
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33)) {
        goto LABEL_28;
      }
      char v35 = v30;
      if (v29[3] < v34)
      {
        sub_1BDD17964(v34, 1);
        unint64_t v36 = sub_1BDCE6070((uint64_t)i);
        if ((v35 & 1) != (v37 & 1)) {
          goto LABEL_30;
        }
        unint64_t v31 = v36;
      }
      if (v35)
      {
        sub_1BDD18D98((uint64_t)v43, (uint64_t)v42);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);

        uint64_t v28 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v31);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
        sub_1BDD198E8(v42, v28);
      }
      else
      {
        uint64_t v38 = *(void **)a5;
        *(void *)(*(void *)a5 + 8 * (v31 >> 6) + 64) |= 1 << v31;
        *(void *)(v38[6] + 8 * v31) = i;
        sub_1BDD198E8(v43, (_OWORD *)(v38[7] + 32 * v31));
        uint64_t v39 = v38[2];
        BOOL v25 = __OFADD__(v39, 1);
        uint64_t v40 = v39 + 1;
        if (v25) {
          goto LABEL_29;
        }
        void v38[2] = v40;
      }
      sub_1BDD18154((uint64_t)&v44);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BDCE68B0();
    return swift_release();
  }
  sub_1BDD17964(v18, a4 & 1);
  unint64_t v20 = sub_1BDCE6070((uint64_t)v12);
  if ((v19 & 1) == (v21 & 1))
  {
    unint64_t v15 = v20;
    if ((v19 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_12:
    sub_1BDD18D98((uint64_t)v43, (uint64_t)v42);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);

    char v22 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v15);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
    sub_1BDD198E8(v42, v22);
    goto LABEL_16;
  }
LABEL_30:
  type metadata accessor for CalculateKey();
  uint64_t result = sub_1BDDB0528();
  __break(1u);
  return result;
}

uint64_t sub_1BDD176C4(uint64_t a1, char a2)
{
  int64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF030);
  uint64_t result = sub_1BDDB0478();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v33 = a2;
    uint64_t v32 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v30 = -1 << v10;
    uint64_t v31 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13) {
          goto LABEL_31;
        }
        unint64_t v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v19 = v9[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                uint64_t result = swift_release();
                int64_t v3 = v32;
                goto LABEL_38;
              }
              if (v31 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v30;
              }
              int64_t v3 = v32;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v19 = v9[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
      char v22 = *(unsigned char *)(*(void *)(v5 + 56) + v17);
      uint64_t result = sub_1BDDB0548();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v7 + 48) + 8 * v15) = v21;
      *(unsigned char *)(*(void *)(v7 + 56) + v15) = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1BDD17964(uint64_t a1, char a2)
{
  int64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269C8);
  char v35 = a2;
  uint64_t v6 = sub_1BDDB0478();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    int64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    uint64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    char v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_1BDD198E8(v22, v36);
    }
    else
    {
      sub_1BDD18D98((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    sub_1BDDAFD68();
    sub_1BDDB0558();
    sub_1BDDAFDB8();
    uint64_t v24 = sub_1BDDB0578();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_1BDD198E8(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

void *sub_1BDD17CA0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF030);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1BDDB0468();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BDD17E30()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269C8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1BDDB0468();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    int64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_1BDD18D98(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_1BDD198E8(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

char *sub_1BDD17FF8(uint64_t a1)
{
  return sub_1BDD16B5C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1BDD1800C(uint64_t a1)
{
  return sub_1BDD16A60(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BDD18020(char a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1BDD13F2C(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1BDD17CA0();
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(unsigned char *)(v16[7] + v10) = a1 & 1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(void *)(v16[6] + 8 * v10) = a2;
    *(unsigned char *)(v16[7] + v10) = a1 & 1;
    uint64_t v18 = v16[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (!v19)
    {
      v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_1BDD176C4(result, a3 & 1);
  uint64_t result = sub_1BDD13F2C(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    uint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1BDDB0528();
  __break(1u);
  return result;
}

uint64_t sub_1BDD18154@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = *(void **)(*(void *)(v3 + 48) + 8 * v10);
    sub_1BDD18D98(*(void *)(v3 + 56) + 32 * v10, (uint64_t)v24 + 8);
    *(void *)&v24[0] = v11;
    id v12 = v11;
    goto LABEL_23;
  }
  int64_t v13 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v14 = (unint64_t)(v6 + 64) >> 6;
  if (v13 < v14)
  {
    unint64_t v15 = *(void *)(v4 + 8 * v13);
    if (v15)
    {
LABEL_7:
      uint64_t v9 = (v15 - 1) & v15;
      unint64_t v10 = __clz(__rbit64(v15)) + (v13 << 6);
      int64_t v7 = v13;
      goto LABEL_3;
    }
    int64_t v16 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v14)
    {
      unint64_t v15 = *(void *)(v4 + 8 * v16);
      if (v15)
      {
LABEL_10:
        int64_t v13 = v16;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v14)
      {
        unint64_t v15 = *(void *)(v4 + 8 * (v5 + 3));
        if (v15)
        {
          int64_t v13 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v16 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v14)
        {
          unint64_t v15 = *(void *)(v4 + 8 * v16);
          if (v15) {
            goto LABEL_10;
          }
          int64_t v13 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v14)
          {
            unint64_t v15 = *(void *)(v4 + 8 * v13);
            if (v15) {
              goto LABEL_7;
            }
            int64_t v7 = v14 - 1;
            int64_t v17 = v5 + 6;
            while (v14 != v17)
            {
              unint64_t v15 = *(void *)(v4 + 8 * v17++);
              if (v15)
              {
                int64_t v13 = v17 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  uint64_t v25 = 0;
  memset(v24, 0, sizeof(v24));
LABEL_23:
  uint64_t *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  uint64_t v18 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_1BDD199F8((uint64_t)v24, (uint64_t)v22);
  if (*(void *)&v22[0])
  {
    v20[0] = v22[0];
    v20[1] = v22[1];
    uint64_t v21 = v23;
    v18(v20);
    return sub_1BDCE43CC((uint64_t)v20, &qword_1EBA26908);
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

unsigned char *sub_1BDD1832C(unsigned char *a1)
{
  uint64_t v2 = (unsigned char *)v1;
  uint64_t v4 = swift_weakInit();
  *(_DWORD *)(v1 + 24) = 16777473;
  *(unsigned char *)(v1 + 28) = 1;
  uint64_t v5 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = v5;
  uint64_t v6 = (uint64_t *)(v1 + 40);
  *(_WORD *)(v1 + 48) = 0;
  *(unsigned char *)(v1 + 50) = 0;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 392))(v4);
  swift_beginAccess();
  *uint64_t v6 = v7;
  uint64_t v8 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)a1 + 176))(v8);
  swift_beginAccess();
  swift_weakAssign();
  uint64_t v9 = swift_release();
  char v10 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 224))(v9);
  uint64_t v11 = (*(uint64_t (**)(void))(*(void *)v2 + 232))(v10 & 1);
  LOBYTE(v7) = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 248))(v11);
  uint64_t v12 = swift_beginAccess();
  v2[25] = v7 & 1;
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)a1 + 272))(v15, v12);
  LOBYTE(v7) = v15[0];
  uint64_t v13 = swift_beginAccess();
  v2[26] = v7;
  LOBYTE(v7) = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 296))(v13);
  swift_beginAccess();
  v2[27] = v7 & 1;
  v2[28] = a1[28];
  v2[48] = a1[48];
  v2[49] = a1[49];
  v2[50] = a1[50];
  return v2;
}

unint64_t sub_1BDD185E8()
{
  unint64_t result = qword_1EA0DEFC0;
  if (!qword_1EA0DEFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0DEFC0);
  }
  return result;
}

uint64_t sub_1BDD1863C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1BDDB00F8();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1BDD148D8(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

void sub_1BDD186D4(uint64_t a1)
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 208))(a1);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    while (1)
    {
      uint64_t v5 = *(void **)(v2 + 8 * v4 + 32);
      id v6 = v5;
      uint64_t v7 = (void *)sub_1BDDAF978();
      id v8 = objc_msgSend(v7, sel_code);

      if (v8 == (id)-1012) {
        break;
      }
      ++v4;

      if (v3 == v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_6:
    uint64_t v9 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(*(void *)a1 + 136))(v9);
    id v10 = objc_allocWithZone((Class)CalculateError);
    uint64_t v11 = (void *)sub_1BDDAFD38();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v10, sel_initUnbalancedSymbol_, v11);

    uint64_t v13 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)a1 + 224))(v20);
    unint64_t v15 = v14;
    int64_t v16 = *v14;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *unint64_t v15 = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      int64_t v16 = sub_1BDD1693C(0, v16[2] + 1, 1, v16);
      *unint64_t v15 = v16;
    }
    unint64_t v19 = v16[2];
    unint64_t v18 = v16[3];
    if (v19 >= v18 >> 1)
    {
      int64_t v16 = sub_1BDD1693C((void *)(v18 > 1), v19 + 1, 1, v16);
      *unint64_t v15 = v16;
    }
    v16[2] = v19 + 1;
    v16[v19 + 4] = v12;
    v13(v20, 0);
  }
}

uint64_t sub_1BDD18918(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = (uint64_t (**)(void))(*a1 + 264);
  uint64_t v5 = *v4;
  unint64_t v6 = (*v4)();
  if (v6 >> 62) {
    uint64_t v7 = sub_1BDDB0448();
  }
  else {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v8 = swift_bridgeObjectRelease();
  if (v3 < v7) {
    *a2 = ++v3;
  }
  unint64_t v9 = ((uint64_t (*)(uint64_t))v5)(v8);
  if (v9 >> 62) {
    uint64_t v10 = sub_1BDDB0448();
  }
  else {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 < v10)
  {
    uint64_t result = ((uint64_t (*)(uint64_t))v5)(result);
    if ((result & 0xC000000000000001) == 0)
    {
      if (v3 < 0)
      {
        __break(1u);
      }
      else if ((unint64_t)v3 < *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v12 = *(void *)(result + 8 * v3 + 32);
        swift_retain();
        goto LABEL_12;
      }
      __break(1u);
      return result;
    }
    uint64_t v12 = MEMORY[0x1C18862A0](v3, result);
LABEL_12:
    swift_bridgeObjectRelease();
    unsigned __int8 v13 = *(unsigned char *)(v12 + 48);
    swift_release();
    unsigned __int8 v15 = v13;
    unsigned __int8 v14 = 17;
    uint64_t result = static CalculateExpression.TokenType.== infix(_:_:)(&v15, &v14);
    if (result) {
      *a2 = v3 + 1;
    }
  }
  return result;
}

unint64_t sub_1BDD18AA8(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  uint64_t result = sub_1BDDAFDF8();
  if (v6) {
    uint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }
  return sub_1BDDAFF08();
}

unint64_t sub_1BDD18B58(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1BDDB0448();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26998);
      uint64_t result = sub_1BDDB0318();
      unint64_t v3 = result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1BDDB0448();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  unint64_t v3 = MEMORY[0x1E4FBC870];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  unint64_t v8 = v3 + 56;
  while ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t result = MEMORY[0x1C18862A0](v7, v1);
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_26;
    }
LABEL_17:
    sub_1BDDB0558();
    (*(void (**)(char *))(*(void *)v9 + 168))(v20);
    uint64_t result = sub_1BDDB0578();
    uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)(v8 + 8 * (v12 >> 6));
    uint64_t v15 = 1 << v12;
    uint64_t v16 = *(void *)(v3 + 48);
    if (((1 << v12) & v14) == 0) {
      goto LABEL_23;
    }
    if (*(void *)(v16 + 8 * v12) == v9)
    {
LABEL_10:
      uint64_t result = swift_release();
      if (v7 == v5) {
        return v3;
      }
    }
    else
    {
      uint64_t v17 = ~v11;
      while (1)
      {
        unint64_t v12 = (v12 + 1) & v17;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)(v8 + 8 * (v12 >> 6));
        uint64_t v15 = 1 << v12;
        if ((v14 & (1 << v12)) == 0) {
          break;
        }
        if (*(void *)(v16 + 8 * v12) == v9) {
          goto LABEL_10;
        }
      }
LABEL_23:
      *(void *)(v8 + 8 * v13) = v15 | v14;
      *(void *)(v16 + 8 * v12) = v9;
      uint64_t v18 = *(void *)(v3 + 16);
      BOOL v10 = __OFADD__(v18, 1);
      uint64_t v19 = v18 + 1;
      if (v10) {
        goto LABEL_27;
      }
      *(void *)(v3 + 16) = v19;
      if (v7 == v5) {
        return v3;
      }
    }
  }
  if (v7 >= *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_28;
  }
  unint64_t v9 = *(void *)(v1 + 32 + 8 * v7);
  uint64_t result = swift_retain();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_17;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1BDD18D98(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1BDD18DF4()
{
  unint64_t result = qword_1EA0DEFC8;
  if (!qword_1EA0DEFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0DEFC8);
  }
  return result;
}

unint64_t sub_1BDD18E4C()
{
  unint64_t result = qword_1EA0DEFD0;
  if (!qword_1EA0DEFD0)
  {
    sub_1BDDAF9F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0DEFD0);
  }
  return result;
}

unint64_t sub_1BDD18E9C()
{
  unint64_t result = qword_1EBA26870;
  if (!qword_1EBA26870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA26870);
  }
  return result;
}

unint64_t sub_1BDD18EF4()
{
  unint64_t result = qword_1EA0DEFD8;
  if (!qword_1EA0DEFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0DEFD8);
  }
  return result;
}

uint64_t sub_1BDD18F48(uint64_t a1, uint64_t a2)
{
  return sub_1BDCFF314(&qword_1EBA26880, a2, (void (*)(uint64_t))type metadata accessor for CalculateExpression.RichExpression);
}

uint64_t sub_1BDD18F90()
{
  return type metadata accessor for CalculateExpression.RichToken();
}

uint64_t method lookup function for CalculateExpression.RichToken(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalculateExpression.RichToken);
}

uint64_t dispatch thunk of CalculateExpression.RichToken.text.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.text.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.isImplicit.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.isImplicit.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.left.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.left.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.right.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.right.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.maxSuperscript.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)()
{
  return (*(uint64_t (**)(void))(v0 + 336))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.isZero.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.isLog.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.isFlip.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.customBaseValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.isImplicitLiteral.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.base.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.base.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of CalculateExpression.RichToken.base.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t method lookup function for CalculateExpression.RichExpression(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalculateExpression.RichExpression);
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.parent.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.parent.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.replaceOperand.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.replaceOperand.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.pushOperand.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.pushOperand.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.pushOperand.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.offset.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.offset.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.offset.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.editable.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.editable.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.format.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.effectiveBase.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.tokens.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.tokens.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.needsParentheses(allowExponent:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 552))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.isEmpty.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 560))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.isPlaceholder.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 568))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.isZero.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 576))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.accessibilityMathEquation.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 752))();
}

uint64_t dispatch thunk of CalculateExpression.RichExpression.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 760))();
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t sub_1BDD196A0(unsigned __int8 *a1)
{
  return *a1;
}

ValueMetadata *type metadata accessor for CalculateExpression.RichExpression.BaselineOffset()
{
  return &type metadata for CalculateExpression.RichExpression.BaselineOffset;
}

uint64_t _s9OperationC4ModeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14RichExpressionC14BaselineOffsetOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDD19818);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14RichExpressionC8WrapModeOMa()
{
  return &_s14RichExpressionC8WrapModeON;
}

uint64_t sub_1BDD19850()
{
  return sub_1BDCFF314(&qword_1EA0DEFE0, 255, (void (*)(uint64_t))type metadata accessor for CalculateKey);
}

uint64_t sub_1BDD1989C()
{
  return sub_1BDCFF314(&qword_1EA0DEFE8, 255, (void (*)(uint64_t))type metadata accessor for CalculateKey);
}

_OWORD *sub_1BDD198E8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1BDD198F8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1BDD19954(uint64_t a1)
{
  return a1;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1BDD199F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26910);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDD19A60(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BDD19AC4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BDD19B10(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF060);
    long long v2 = (void *)sub_1BDDB0488();
  }
  else
  {
    long long v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA28C90);
  uint64_t v5 = MEMORY[0x1F4188790](v3, v4);
  int v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v10 = *(int *)(v5 + 48);
    unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v22[1] = a1;
    uint64_t v12 = a1 + v11;
    uint64_t v13 = *(void *)(v6 + 72);
    swift_retain();
    while (1)
    {
      sub_1BDD1E5D0(v12, (uint64_t)v8);
      unint64_t result = sub_1BDD1CE5C((uint64_t)v8);
      if (v15) {
        break;
      }
      unint64_t v16 = result;
      *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v17 = v2[6];
      uint64_t v18 = sub_1BDDAF9F8();
      unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v8, v18);
      *(void *)(v2[7] + 8 * v16) = *(void *)&v8[v10];
      uint64_t v19 = v2[2];
      BOOL v20 = __OFADD__(v19, 1);
      uint64_t v21 = v19 + 1;
      if (v20) {
        goto LABEL_12;
      }
      v2[2] = v21;
      v12 += v13;
      if (!--v9)
      {
        swift_release();
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  return result;
}

uint64_t sub_1BDD19CFC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + qword_1EBA2A778);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (!*(void *)(v4 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_1BDD1CE5C(a1);
  if (v6)
  {
    uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = 0;
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1BDD19D90(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1BDDAF9F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  int v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = (uint64_t *)((char *)v1 + qword_1EBA2A770);
  swift_beginAccess();
  uint64_t v10 = *v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA28C88);
  MEMORY[0x1F4188790](v11 - 8, v12);
  uint64_t v14 = &v23[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = *(void *)(v3 + 520);
  uint64_t v16 = *(void *)(v3 + 536);
  swift_bridgeObjectRetain();
  MEMORY[0x1C1885BC0](a1, v10, v15, v4, v16);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4) == 1)
  {
    sub_1BDD1DD48((uint64_t)v14);
    return 0;
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(v8, v14, v4);
    uint64_t v18 = (uint64_t *)((char *)v1 + qword_1EBA2A778);
    swift_beginAccess();
    uint64_t v19 = *v18;
    if (*(void *)(v19 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v20 = sub_1BDD1CE5C((uint64_t)v8);
      if (v21)
      {
        uint64_t v17 = *(void *)(*(void *)(v19 + 56) + 8 * v20);
        swift_retain();
      }
      else
      {
        uint64_t v17 = 0;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = 0;
    }
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return v17;
}

uint64_t sub_1BDD19FF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 520);
  uint64_t v6 = sub_1BDDAF9F8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v8 = sub_1BDDB01D8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v12 = (char *)&v18 - v11;
  uint64_t v13 = (uint64_t *)((char *)v2 + qword_1EBA2A770);
  swift_beginAccess();
  uint64_t v24 = *v13;
  uint64_t v20 = v5;
  uint64_t v21 = *(void *)(v4 + 528);
  uint64_t v22 = *(void *)(v4 + 536);
  uint64_t v23 = a1;
  sub_1BDDAFCB8();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1BDDAFF48();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v12, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v19, 1, 1, v5);
  }
  else
  {
    uint64_t v15 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v16 = *(void *)(v5 - 8);
    uint64_t v17 = v19;
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v19, v12, v5);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v17, 0, 1, v5);
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v15, v6);
  }
}

uint64_t sub_1BDD1A310()
{
  uint64_t v0 = sub_1BDDAF9F8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2, v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  CalculateExpression.id.getter((uint64_t)v5);
  char v6 = sub_1BDDAF9D8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v0);
  return v6 & 1;
}

uint64_t sub_1BDD1A41C(uint64_t a1, uint64_t a2)
{
  sub_1BDD1A99C(a1);
  sub_1BDD1AD60();
  swift_release();
  sub_1BDD1A6D8(a1, a2);
  swift_retain();
  sub_1BDD3E8AC();
  return sub_1BDD1A54C(v2, a2);
}

uint64_t sub_1BDD1A484(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1BDD1AD60();
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 624))(result, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BDD1A50C(uint64_t a1)
{
  uint64_t v3 = sub_1BDD1AD60();
  sub_1BDD1A54C(v1, a1);
  return v3;
}

uint64_t sub_1BDD1A54C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)a1 + 520);
  uint64_t v5 = sub_1BDDB01D8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v12 - v8;
  uint64_t v10 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v12 - v8, a2, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v9, 0, 1, v4);
  (*(void (**)(char *))(*(void *)a1 + 776))(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1BDD1A6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  v21[0] = a2;
  v21[1] = v4;
  uint64_t v5 = *(void *)(v4 + 520);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v8 = (char *)v21 - v7;
  uint64_t v9 = sub_1BDDAF9F8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  CalculateExpression.id.getter((uint64_t)v13);
  uint64_t v14 = (uint64_t *)((char *)v2 + qword_1EBA2A778);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = *v14;
  *uint64_t v14 = 0x8000000000000000;
  sub_1BDD1D81C(a1, (uint64_t)v13, isUniquelyReferenced_nonNull_native);
  *uint64_t v14 = v22;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  swift_endAccess();
  (*(void (**)(char *, void, uint64_t))(v6 + 16))(v8, v21[0], v5);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA28C88);
  MEMORY[0x1F4188790](v16 - 8, v17);
  uint64_t v19 = (char *)v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  CalculateExpression.id.getter((uint64_t)v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  swift_beginAccess();
  sub_1BDDAFCB8();
  sub_1BDDAFCD8();
  return swift_endAccess();
}

uint64_t sub_1BDD1A99C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v28 = *v1;
  uint64_t v4 = *(void *)(v28 + 520);
  uint64_t v5 = sub_1BDDB01D8();
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  uint64_t v7 = MEMORY[0x1F4188790](v5, v6);
  uint64_t v9 = (char *)&v26 - v8;
  uint64_t v10 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v7, v11);
  uint64_t v13 = (char *)&v26 - v12;
  uint64_t v14 = sub_1BDDAF9F8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v16);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  CalculateExpression.id.getter((uint64_t)v18);
  swift_beginAccess();
  sub_1BDD1D04C((uint64_t)v18);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  swift_endAccess();
  swift_release();
  uint64_t v19 = CalculateExpression.document.getter();
  if (v19)
  {
    uint64_t v20 = v19;
    swift_release();
    if ((void *)v20 == v2) {
      sub_1BDD3E8AC();
    }
  }
  (*(void (**)(uint64_t))(*v2 + 616))(a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v4) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v9, v27);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v9, v4);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA28C88);
  MEMORY[0x1F4188790](v22 - 8, v23);
  uint64_t v25 = (char *)&v26 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1BDDAFCB8();
  sub_1BDDAFC88();
  sub_1BDD1DD48((uint64_t)v25);
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v4);
}

uint64_t sub_1BDD1AD60()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1BDDAF9F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA28C88);
  MEMORY[0x1F4188790](v7 - 8, v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1BDDAFCB8();
  sub_1BDDAFC88();
  swift_endAccess();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v10, v2);
    swift_beginAccess();
    uint64_t v11 = sub_1BDD1D04C((uint64_t)v6);
    swift_endAccess();
    if (v11)
    {
      swift_retain();
      uint64_t v12 = CalculateExpression.document.getter();
      if (!v12 || (uint64_t v13 = v12, swift_release(), v13 != v1))
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
        swift_release();
        return v11;
      }
      sub_1BDD3E8AC();
      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return v11;
  }
  sub_1BDD1DD48((uint64_t)v10);
  return 0;
}

uint64_t sub_1BDD1AFD8()
{
  return sub_1BDDB0138();
}

uint64_t sub_1BDD1B0B4()
{
  (*(void (**)(void))(*(void *)v0 + 696))();
  uint64_t v1 = sub_1BDDB0128();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x1C1885E30](&v5, v1, WitnessTable);
  swift_bridgeObjectRelease();
  sub_1BDDB0368();
  swift_getWitnessTable();
  uint64_t v3 = sub_1BDDAFF88();
  swift_bridgeObjectRelease();
  uint64_t v5 = v3;
  sub_1BDDB0078();
  swift_getWitnessTable();
  return sub_1BDDAFF58();
}

uint64_t sub_1BDD1B280()
{
  (*(void (**)(void))(*(void *)v0 + 696))();
  uint64_t v1 = sub_1BDDB0128();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x1C1885E30](&v5, v1, WitnessTable);
  swift_bridgeObjectRelease();
  sub_1BDDB0368();
  swift_getWitnessTable();
  uint64_t v3 = sub_1BDDAFF88();
  swift_bridgeObjectRelease();
  *(void *)&long long v5 = v3;
  sub_1BDDB0078();
  swift_getWitnessTable();
  sub_1BDDAFD08();
  sub_1BDDB0438();
  swift_getWitnessTable();
  sub_1BDDB0148();
  sub_1BDDB0538();
  swift_getWitnessTable();
  return sub_1BDDAFF68();
}

uint64_t sub_1BDD1B4F4()
{
  return *(unsigned __int8 *)(v0 + qword_1EBA2A780);
}

uint64_t sub_1BDD1B504(uint64_t result)
{
  *(unsigned char *)(v1 + qword_1EBA2A780) = result;
  return result;
}

uint64_t sub_1BDD1B514@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 568);
  swift_beginAccess();
  uint64_t v4 = sub_1BDDB01D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BDD1B5C4(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 568);
  swift_beginAccess();
  uint64_t v4 = sub_1BDDB01D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t sub_1BDD1B67C(uint64_t (*a1)(uint64_t))
{
  uint64_t v3 = v1;
  uint64_t v5 = *(void *)(*(void *)(*(void *)v1 + 520) - 8);
  MEMORY[0x1F4188790](a1, *(void *)(*(void *)v1 + 520));
  uint64_t v7 = (char *)&v26 - v6;
  uint64_t v32 = v8;
  uint64_t v9 = sub_1BDDB01D8();
  uint64_t v11 = MEMORY[0x1F4188790](v9, v10);
  uint64_t result = MEMORY[0x1F4188790](v11, v12);
  uint64_t v17 = (char *)&v26 - v14;
  if (*(unsigned char *)(v3 + qword_1EBA2A780))
  {
    __break(1u);
  }
  else
  {
    uint64_t v27 = v7;
    uint64_t v28 = v16;
    uint64_t v30 = v15;
    uint64_t v31 = result;
    uint64_t v29 = v5;
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v18((char *)&v26 - v14, 1, 1, v32);
    uint64_t v19 = sub_1BDD1B5C4((uint64_t)v17);
    *(unsigned char *)(v3 + qword_1EBA2A780) = 1;
    uint64_t result = a1(v19);
    if (!v2)
    {
      uint64_t v26 = v18;
      *(unsigned char *)(v3 + qword_1EBA2A780) = 0;
      uint64_t v20 = v28;
      sub_1BDD1B514(v28);
      uint64_t v21 = v29;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v20, 1, v32) == 1)
      {
        return (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v20, v31);
      }
      else
      {
        uint64_t v22 = v27;
        uint64_t v23 = v20;
        uint64_t v24 = v32;
        (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v27, v23, v32);
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v17, v22, v24);
        uint64_t v25 = v26;
        v26(v17, 0, 1, v24);
        (*(void (**)(char *))(*(void *)v3 + 776))(v17);
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        v25(v17, 1, 1, v24);
        sub_1BDD1B5C4((uint64_t)v17);
        return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v22, v24);
      }
    }
  }
  return result;
}

uint64_t sub_1BDD1B9D0(uint64_t a1)
{
  uint64_t v2 = (uint64_t)v1;
  uint64_t v98 = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void (**)(void, void, void))(*v1 + 520);
  uint64_t v99 = sub_1BDDB01D8();
  uint64_t v5 = *(void *)(v99 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v99, v6);
  char v96 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7, v9);
  uint64_t v95 = (char *)&v87 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10, v12);
  uint64_t v93 = (char *)&v87 - v14;
  uint64_t v16 = MEMORY[0x1F4188790](v13, v15);
  uint64_t v94 = (uint64_t)&v87 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16, v18);
  uint64_t v21 = (char *)&v87 - v20;
  uint64_t v23 = MEMORY[0x1F4188790](v19, v22);
  uint64_t v25 = (char *)&v87 - v24;
  uint64_t v27 = MEMORY[0x1F4188790](v23, v26);
  uint64_t v29 = (char *)&v87 - v28;
  unint64_t v100 = v4;
  uint64_t v30 = *((void *)v4 - 1);
  uint64_t v32 = MEMORY[0x1F4188790](v27, v31);
  uint64_t v92 = (char *)&v87 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x1F4188790](v32, v34);
  char v37 = (char *)&v87 - v36;
  uint64_t v39 = MEMORY[0x1F4188790](v35, v38);
  uint64_t v41 = (char *)&v87 - v40;
  uint64_t v97 = v3;
  if ((*(uint64_t (**)(uint64_t))(v3 + 360))(v39))
  {
    char v42 = *(uint64_t (**)(void))(*(void *)v2 + 488);
    return v42();
  }
  char v44 = *(unsigned char *)(v2 + qword_1EBA2A780);
  uint64_t v91 = v5;
  unint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = (unsigned int (**)(char *, uint64_t, void))(v30 + 48);
  uint64_t v47 = v30;
  if ((v44 & 1) == 0)
  {
    uint64_t v52 = v99;
    v45(v29, v98, v99);
    uint64_t v53 = (uint64_t)v100;
    if ((*v46)(v29, 1, v100) == 1)
    {
      uint64_t v54 = (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v29, v52);
      uint64_t v55 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 696))(v54);
      uint64_t v56 = v97;
      uint64_t v57 = *(void *)(v97 + 536);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v41, v29, v53);
      sub_1BDD1CDEC(v53, v53);
      swift_allocObject();
      uint64_t v62 = sub_1BDDAFFE8();
      (*(void (**)(uint64_t, char *, uint64_t))(v30 + 16))(v63, v41, v53);
      sub_1BDDB0078();
      uint64_t v64 = MEMORY[0x1C1885F60](v62, v53);
      uint64_t v56 = v97;
      if (v64) {
        sub_1BDD1DDDC(v62, v53, *(void *)(v97 + 536));
      }
      swift_bridgeObjectRelease();
      uint64_t v101 = (*(uint64_t (**)(char *))(*(void *)v2 + 712))(v41);
      uint64_t v57 = *(void *)(v56 + 536);
      swift_getWitnessTable();
      uint64_t v55 = sub_1BDDB0108();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v41, v53);
    }
    uint64_t v101 = v55;
    uint64_t v73 = swift_retain();
    MEMORY[0x1F4188790](v73, v74);
    uint64_t v75 = *(void *)(v56 + 528);
    *(&v87 - 6) = v53;
    *(&v87 - 5) = v75;
    *(&v87 - 4) = v57;
    *(&v87 - 3) = (uint64_t)sub_1BDD1E55C;
    *(&v87 - 2) = v2;
    uint64_t v99 = v57;
    sub_1BDDB0128();
    uint64_t v76 = type metadata accessor for CalculateExpression();
    swift_getWitnessTable();
    uint64_t v98 = v76;
    unint64_t v77 = sub_1BDDAFF28();
    swift_bridgeObjectRelease();
    swift_release();
    if (v77 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_1BDDB0448();
      uint64_t v78 = result;
      if (!result) {
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v78 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v78) {
        goto LABEL_32;
      }
    }
    if (v78 < 1)
    {
      __break(1u);
      return result;
    }
    uint64_t v79 = 0;
    do
    {
      if ((v77 & 0xC000000000000001) != 0) {
        MEMORY[0x1C18862A0](v79, v77);
      }
      else {
        swift_retain();
      }
      ++v79;
      char v80 = sub_1BDD013AC();
      CalculateExpression.setNeedsEvaluation(rebuild:)(v80 & 1);
      swift_release();
    }
    while (v78 != v79);
LABEL_32:
    uint64_t v81 = swift_bridgeObjectRelease_n();
    uint64_t v101 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 696))(v81);
    uint64_t v82 = sub_1BDDAFF88();
    swift_bridgeObjectRelease();
    uint64_t v101 = v82;
    uint64_t v83 = swift_retain();
    MEMORY[0x1F4188790](v83, v84);
    uint64_t v85 = v99;
    *(&v87 - 6) = (uint64_t)v100;
    *(&v87 - 5) = v75;
    *(&v87 - 4) = v85;
    *(&v87 - 3) = (uint64_t)sub_1BDD1E55C;
    *(&v87 - 2) = v2;
    sub_1BDDB0078();
    swift_getWitnessTable();
    uint64_t v86 = sub_1BDDAFF28();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t))(*(void *)v2 + 344))(v86);
  }
  uint64_t v48 = v99;
  unint64_t v90 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v45(v21, v98, v99);
  uint64_t v49 = *v46;
  uint64_t v50 = v100;
  if ((*v46)(v21, 1, v100) == 1)
  {
    uint64_t v51 = *(uint64_t (**)(void))(*(void *)v2 + 696);
    uint64_t v89 = v47;
    uint64_t v88 = v51();
    uint64_t v101 = v88;
    sub_1BDDB0128();
    swift_getWitnessTable();
    sub_1BDDAFF78();
    uint64_t v47 = v89;
    uint64_t v48 = v99;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v21, v48);
  }
  else
  {
    (*(void (**)(char *, char *, void))(v47 + 32))(v25, v21, v50);
    (*(void (**)(char *, void, uint64_t, void (*)(void, void, void)))(v47 + 56))(v25, 0, 1, v50);
  }
  uint64_t v58 = v50;
  unsigned int v59 = v49(v25, 1, v50);
  uint64_t v60 = (unsigned int (*)(uint64_t, uint64_t, void))v49;
  if (v59 == 1)
  {
    uint64_t v61 = *(void (**)(char *, uint64_t))(v91 + 8);
    v61(v25, v48);
  }
  else
  {
    unint64_t v100 = *(void (**)(void, void, void))(v47 + 32);
    v100(v37, v25, v58);
    uint64_t v65 = v94;
    uint64_t v66 = v47;
    sub_1BDD1B514(v94);
    uint64_t v67 = v65;
    if (v60(v65, 1, v58) != 1)
    {
      uint64_t v70 = v92;
      v100(v92, v65, v58);
      uint64_t v71 = (uint64_t)v93;
      sub_1BDDB0508();
      (*(void (**)(uint64_t, void, uint64_t, void (*)(void, void, void)))(v66 + 56))(v71, 0, 1, v58);
      sub_1BDD1B5C4(v71);
      uint64_t v72 = *(void (**)(void, void))(v66 + 8);
      v72(v70, v58);
      return ((uint64_t (*)(char *, void (*)(void, void, void)))v72)(v37, v58);
    }
    (*(void (**)(char *, void (*)(void, void, void)))(v66 + 8))(v37, v58);
    uint64_t v61 = *(void (**)(char *, uint64_t))(v91 + 8);
    uint64_t v48 = v99;
    v61((char *)v67, v99);
    uint64_t v47 = v66;
  }
  uint64_t v68 = v96;
  v90(v96, v98, v48);
  if (v60((uint64_t)v68, 1, v58) == 1)
  {
    uint64_t v101 = (*(uint64_t (**)(void))(*(void *)v2 + 696))();
    sub_1BDDB0128();
    swift_getWitnessTable();
    uint64_t v69 = (uint64_t)v95;
    sub_1BDDAFF78();
    swift_bridgeObjectRelease();
    v61(v68, v48);
  }
  else
  {
    uint64_t v69 = (uint64_t)v95;
    (*(void (**)(char *, char *, void))(v47 + 32))(v95, v68, v58);
    (*(void (**)(uint64_t, void, uint64_t, void (*)(void, void, void)))(v47 + 56))(v69, 0, 1, v58);
  }
  return sub_1BDD1B5C4(v69);
}

uint64_t sub_1BDD1C5E4()
{
  (*(void (**)(void))(*(void *)v0 + 696))();
  sub_1BDDB0128();
  swift_getWitnessTable();
  sub_1BDDAFF88();
  swift_bridgeObjectRelease();
  sub_1BDDB0078();
  type metadata accessor for CalculateExpression();
  swift_retain();
  swift_getWitnessTable();
  uint64_t v1 = sub_1BDDAFF28();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t CalculateIndexedDocument.__allocating_init()()
{
  return CalculateIndexedDocument.init()();
}

uint64_t CalculateIndexedDocument.init()()
{
  uint64_t v1 = *v0;
  uint64_t v2 = qword_1EBA2A778;
  swift_retain();
  *(uint64_t *)((char *)v0 + v2) = sub_1BDD19B10(MEMORY[0x1E4FBC860]);
  uint64_t v3 = qword_1EBA2A770;
  uint64_t v4 = *(void *)(v1 + 520);
  sub_1BDDAF9F8();
  swift_getTupleTypeMetadata2();
  sub_1BDDB0018();
  *(uint64_t *)((char *)v0 + v3) = sub_1BDDAFC98();
  *((unsigned char *)v0 + qword_1EBA2A780) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))((uint64_t)v0 + *(void *)(*v0 + 568), 1, 1, v4);
  swift_release();
  return CalculateDocument.init()();
}

uint64_t CalculateIndexedDocument.__allocating_init(expressions:options:)(uint64_t a1, uint64_t a2)
{
  return CalculateIndexedDocument.init(expressions:options:)(a1, a2);
}

uint64_t CalculateIndexedDocument.init(expressions:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = qword_1EBA2A778;
  swift_retain();
  *(uint64_t *)((char *)v2 + v6) = sub_1BDD19B10(MEMORY[0x1E4FBC860]);
  uint64_t v7 = qword_1EBA2A770;
  uint64_t v8 = *(void *)(v5 + 520);
  sub_1BDDAF9F8();
  swift_getTupleTypeMetadata2();
  sub_1BDDB0018();
  *(uint64_t *)((char *)v2 + v7) = sub_1BDDAFC98();
  *((unsigned char *)v2 + qword_1EBA2A780) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))((uint64_t)v2 + *(void *)(*v2 + 568), 1, 1, v8);
  swift_release();
  return CalculateDocument.init(expressions:options:)(a1, a2);
}

uint64_t CalculateIndexedDocument.__allocating_init(expressions:options:synchronous:)(uint64_t a1, uint64_t a2, char a3)
{
  return CalculateIndexedDocument.init(expressions:options:synchronous:)(a1, a2, a3);
}

uint64_t CalculateIndexedDocument.init(expressions:options:synchronous:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = *v3;
  uint64_t v8 = qword_1EBA2A778;
  swift_retain();
  *(uint64_t *)((char *)v3 + v8) = sub_1BDD19B10(MEMORY[0x1E4FBC860]);
  uint64_t v9 = qword_1EBA2A770;
  uint64_t v10 = *(void *)(v7 + 520);
  sub_1BDDAF9F8();
  swift_getTupleTypeMetadata2();
  sub_1BDDB0018();
  *(uint64_t *)((char *)v3 + v9) = sub_1BDDAFC98();
  *((unsigned char *)v3 + qword_1EBA2A780) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))((uint64_t)v3 + *(void *)(*v3 + 568), 1, 1, v10);
  swift_release();
  return CalculateDocument.init(expressions:options:synchronous:)(a1, a2, a3);
}

uint64_t sub_1BDD1CC30()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 568);
  uint64_t v2 = sub_1BDDB01D8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(v1, v2);
}

uint64_t CalculateIndexedDocument.deinit()
{
  uint64_t v0 = CalculateDocument.deinit();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 568);
  uint64_t v2 = sub_1BDDB01D8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t CalculateIndexedDocument.__deallocating_deinit()
{
  uint64_t v0 = CalculateIndexedDocument.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t sub_1BDD1CDEC(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
  }
  else
  {
    return MEMORY[0x1F4185768](0, a2);
  }
}

unint64_t sub_1BDD1CE5C(uint64_t a1)
{
  sub_1BDDAF9F8();
  sub_1BDD1E58C((unint64_t *)&qword_1EA0DEFD0);
  uint64_t v2 = sub_1BDDAFCE8();
  return sub_1BDD1CED4(a1, v2);
}

unint64_t sub_1BDD1CED4(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = a1;
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  uint64_t v16 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v15 = ~v3;
    uint64_t v5 = sub_1BDDAF9F8();
    uint64_t v7 = v5;
    uint64_t v8 = *(void **)(v5 - 8);
    uint64_t v9 = (void (*)(char *, unint64_t, uint64_t))v8[2];
    uint64_t v10 = v8[8];
    uint64_t v11 = v8[9];
    uint64_t v12 = (uint64_t (**)(char *, uint64_t))(v8 + 1);
    do
    {
      MEMORY[0x1F4188790](v5, v6);
      v9((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v18 + 48) + v11 * v4, v7);
      sub_1BDD1E58C(qword_1EA0DF068);
      char v13 = sub_1BDDAFD28();
      uint64_t v5 = (*v12)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
      if (v13) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v15;
    }
    while (((*(void *)(v16 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1BDD1D04C(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1BDD1CE5C(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BDD1DA7C();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_1BDDAF9F8();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_1BDD1D550(v4, v7);
  uint64_t *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1BDD1D144(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF060);
  int v44 = a2;
  uint64_t v6 = sub_1BDDB0478();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 64);
  char v42 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  uint64_t v40 = v2;
  int64_t v41 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v41) {
      break;
    }
    uint64_t v19 = v42;
    unint64_t v20 = v42[v18];
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v20 = v42[v14];
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v44 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = v42[v21];
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v41) {
              goto LABEL_34;
            }
            unint64_t v20 = v42[v14];
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    uint64_t v22 = sub_1BDDAF9F8();
    uint64_t v23 = *(void *)(v22 - 8);
    MEMORY[0x1F4188790](v22, v24);
    uint64_t v26 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v28 = *(void *)(v27 + 72);
    unint64_t v29 = *(void *)(v5 + 48) + v28 * v17;
    uint64_t v45 = v30;
    if (v44)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v23 + 32))((char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v22);
      uint64_t v31 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))((char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v22);
      uint64_t v31 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
      swift_retain();
    }
    sub_1BDD1E58C((unint64_t *)&qword_1EA0DEFD0);
    uint64_t result = sub_1BDDAFCE8();
    uint64_t v32 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v33 = result & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v12 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v33) & ~*(void *)(v12 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v37 = v34 == v36;
        if (v34 == v36) {
          unint64_t v34 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v12 + 8 * v34);
      }
      while (v38 == -1);
      unint64_t v15 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v23 + 32))(*(void *)(v7 + 48) + v28 * v15, v26, v22);
    *(void *)(*(void *)(v7 + 56) + 8 * v15) = v31;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  uint64_t v19 = v42;
  if ((v44 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
  if (v39 >= 64) {
    bzero(v19, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v19 = -1 << v39;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

unint64_t sub_1BDD1D550(unint64_t result, uint64_t a2)
{
  uint64_t v2 = a2;
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1BDDB0258();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      uint64_t v8 = (result + 1) & v7;
      uint64_t result = sub_1BDDAF9F8();
      unint64_t v42 = result;
      uint64_t v10 = *(void **)(result - 8);
      unint64_t v11 = (void (*)(char *, unint64_t, unint64_t))v10[2];
      uint64_t v39 = v10 + 2;
      uint64_t v40 = v11;
      uint64_t v12 = v10[8];
      uint64_t v13 = v10[9];
      uint64_t v37 = v13;
      uint64_t v38 = v12;
      unint64_t v36 = (uint64_t (**)(char *, unint64_t))(v10 + 1);
      uint64_t v41 = v4;
      unint64_t v14 = result;
      do
      {
        MEMORY[0x1F4188790](result, v9);
        unint64_t v16 = v8;
        unint64_t v17 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
        int64_t v18 = v13 * v6;
        v40(v17, *(void *)(v2 + 48) + v13 * v6, v14);
        uint64_t v19 = v2;
        sub_1BDD1E58C((unint64_t *)&qword_1EA0DEFD0);
        uint64_t v20 = sub_1BDDAFCE8();
        int64_t v21 = v17;
        uint64_t v8 = v16;
        uint64_t result = (*v36)(v21, v14);
        uint64_t v22 = v20 & v7;
        if (v3 >= (uint64_t)v16)
        {
          if (v22 >= v16 && v3 >= v22)
          {
LABEL_16:
            uint64_t v2 = v19;
            uint64_t v25 = *(void *)(v19 + 48);
            uint64_t v13 = v37;
            uint64_t result = v25 + v37 * v3;
            uint64_t v9 = v25 + v18;
            if (v37 * v3 < v18 || result >= v9 + v37)
            {
              uint64_t result = swift_arrayInitWithTakeFrontToBack();
              uint64_t v4 = v41;
            }
            else
            {
              uint64_t v4 = v41;
              if (v37 * v3 != v18) {
                uint64_t result = swift_arrayInitWithTakeBackToFront();
              }
            }
            uint64_t v26 = *(void *)(v2 + 56);
            uint64_t v27 = (void *)(v26 + 8 * v3);
            uint64_t v28 = (void *)(v26 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v27 >= v28 + 1))
            {
              *uint64_t v27 = *v28;
              int64_t v3 = v6;
            }
            goto LABEL_5;
          }
        }
        else if (v22 >= v16 || v3 >= v22)
        {
          goto LABEL_16;
        }
        uint64_t v4 = v41;
        uint64_t v2 = v19;
        uint64_t v13 = v37;
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v29 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v29 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << result) - 1;
  }
  *unint64_t v29 = v31 & v30;
  uint64_t v32 = *(void *)(v2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v34;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

uint64_t sub_1BDD1D81C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1BDD1CE5C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_release();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1BDD1DA7C();
    goto LABEL_7;
  }
  sub_1BDD1D144(v13, a3 & 1);
  unint64_t v19 = sub_1BDD1CE5C(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_14:
    sub_1BDDAF9F8();
    uint64_t result = sub_1BDDB0528();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  unint64_t v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v21 = sub_1BDDAF9F8();
  MEMORY[0x1F4188790](v21, v22);
  uint64_t v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v25 + 16))(v24, a2);
  return sub_1BDD1D9C4(v10, (uint64_t)v24, a1, v16);
}

uint64_t sub_1BDD1D9C4(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1BDDAF9F8();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

void *sub_1BDD1DA7C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF060);
  uint64_t v32 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1BDDB0468();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v36 = v2;
  if (!v3)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v30 = v36;
    unint64_t v29 = v32;
LABEL_28:
    *unint64_t v29 = v30;
    return result;
  }
  uint64_t v4 = v2;
  uint64_t result = (void *)(v2 + 64);
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
  {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v6);
    uint64_t v4 = v36;
  }
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v35 = v1;
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  uint64_t v33 = v1 + 64;
  int64_t v34 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v36;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      uint64_t v15 = v35;
      goto LABEL_12;
    }
    int64_t v26 = v8 + 1;
    uint64_t v15 = v35;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v34) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    ++v8;
    if (!v27)
    {
      int64_t v8 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v8);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v27 - 1) & v27;
    unint64_t v14 = __clz(__rbit64(v27)) + (v8 << 6);
LABEL_12:
    uint64_t v16 = sub_1BDDAF9F8();
    uint64_t v17 = *(void *)(v16 - 8);
    MEMORY[0x1F4188790](v16, v18);
    char v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v22 = *(void *)(v21 + 72) * v14;
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v20, *(void *)(v15 + 48) + v22, v16);
    uint64_t v23 = *(void *)(v15 + 56);
    uint64_t v24 = 8 * v14;
    uint64_t v25 = *(void *)(v23 + 8 * v14);
    (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(void *)(v12 + 48) + v22, v20, v16);
    *(void *)(*(void *)(v12 + 56) + v24) = v25;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v34)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    unint64_t v29 = v32;
    uint64_t v30 = v36;
    goto LABEL_28;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v28);
  if (v27)
  {
    int64_t v8 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v8 >= v34) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v8);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BDD1DD48(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA28C88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BDD1DDA8()
{
  return sub_1BDD1A310() & 1;
}

uint64_t sub_1BDD1DDDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v7, v10);
  uint64_t v53 = (char *)&v41 - v12;
  uint64_t v42 = v13;
  uint64_t v15 = MEMORY[0x1F4188790](v11, v14);
  uint64_t v17 = (char *)&v41 - v16;
  if (MEMORY[0x1C1885F50](v15))
  {
    sub_1BDDB0328();
    uint64_t v18 = sub_1BDDB0318();
  }
  else
  {
    uint64_t v18 = MEMORY[0x1E4FBC870];
  }
  uint64_t v46 = MEMORY[0x1C1885F60](v5, a2);
  if (!v46) {
    return v18;
  }
  uint64_t v19 = 0;
  uint64_t v51 = (void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
  uint64_t v52 = v18 + 56;
  uint64_t v48 = v6 + 32;
  uint64_t v50 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v43 = v6;
  uint64_t v44 = v5;
  uint64_t v45 = v17;
  while (1)
  {
    char v20 = sub_1BDDB0038();
    sub_1BDDAFFF8();
    if (v20)
    {
      uint64_t v21 = *(void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
      v21(v17, (uint64_t *)(v5+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v19), a2);
      BOOL v22 = __OFADD__(v19, 1);
      uint64_t v23 = v19 + 1;
      if (v22) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t result = sub_1BDDB0398();
      if (v42 != 8) {
        goto LABEL_23;
      }
      uint64_t v54 = result;
      uint64_t v21 = *v51;
      (*v51)(v17, &v54, a2);
      swift_unknownObjectRelease();
      BOOL v22 = __OFADD__(v19, 1);
      uint64_t v23 = v19 + 1;
      if (v22)
      {
LABEL_20:
        __break(1u);
        return v18;
      }
    }
    uint64_t v49 = v23;
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v47(v53, v17, a2);
    uint64_t v24 = sub_1BDDAFCE8();
    uint64_t v25 = v18;
    uint64_t v26 = -1 << *(unsigned char *)(v18 + 32);
    unint64_t v27 = v24 & ~v26;
    unint64_t v28 = v27 >> 6;
    uint64_t v29 = *(void *)(v52 + 8 * (v27 >> 6));
    uint64_t v30 = 1 << v27;
    uint64_t v31 = *(void *)(v6 + 72);
    if (((1 << v27) & v29) != 0)
    {
      uint64_t v32 = ~v26;
      do
      {
        v21(v9, (uint64_t *)(*(void *)(v25 + 48) + v31 * v27), a2);
        uint64_t v33 = a3;
        char v34 = sub_1BDDAFD28();
        uint64_t v35 = *v50;
        (*v50)(v9, a2);
        if (v34)
        {
          v35(v53, a2);
          a3 = v33;
          uint64_t v6 = v43;
          uint64_t v5 = v44;
          uint64_t v18 = v25;
          goto LABEL_7;
        }
        unint64_t v27 = (v27 + 1) & v32;
        unint64_t v28 = v27 >> 6;
        uint64_t v29 = *(void *)(v52 + 8 * (v27 >> 6));
        uint64_t v30 = 1 << v27;
        a3 = v33;
      }
      while ((v29 & (1 << v27)) != 0);
      uint64_t v6 = v43;
      uint64_t v5 = v44;
    }
    uint64_t v36 = v53;
    *(void *)(v52 + 8 * v28) = v30 | v29;
    unint64_t v37 = *(void *)(v25 + 48) + v31 * v27;
    uint64_t v18 = v25;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v47)(v37, v36, a2);
    uint64_t v39 = *(void *)(v25 + 16);
    BOOL v22 = __OFADD__(v39, 1);
    uint64_t v40 = v39 + 1;
    if (v22) {
      break;
    }
    *(void *)(v25 + 16) = v40;
LABEL_7:
    uint64_t v17 = v45;
    uint64_t v19 = v49;
    if (v49 == v46) {
      return v18;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1BDD1E198(uint64_t a1)
{
  return sub_1BDD1E1F8(a1, MEMORY[0x1E4FBAFC8]) & 1;
}

uint64_t sub_1BDD1E1C8(uint64_t a1)
{
  return sub_1BDD1E1F8(a1, MEMORY[0x1E4FBAFC0]) & 1;
}

uint64_t sub_1BDD1E1F8(uint64_t a1, uint64_t (*a2)(uint64_t, void))
{
  return a2(a1, *(void *)(v2 + 40)) & 1;
}

uint64_t sub_1BDD1E238@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BDD1E250(a1);
}

uint64_t sub_1BDD1E250@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 40))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1BDD1E284()
{
  uint64_t result = sub_1BDDB01D8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CalculateIndexedDocument()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for CalculateIndexedDocument(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalculateIndexedDocument);
}

uint64_t dispatch thunk of CalculateIndexedDocument.expression(withId:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 600))();
}

uint64_t dispatch thunk of CalculateIndexedDocument.expression(at:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 608))();
}

uint64_t dispatch thunk of CalculateIndexedDocument.index(of:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 616))();
}

uint64_t dispatch thunk of CalculateIndexedDocument.insert(_:at:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 624))();
}

uint64_t dispatch thunk of CalculateIndexedDocument.moveExpression(from:to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 632))();
}

uint64_t dispatch thunk of CalculateIndexedDocument.removeExpression(at:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 640))();
}

uint64_t dispatch thunk of CalculateIndexedDocument.indexes.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 696))();
}

uint64_t dispatch thunk of CalculateIndexedDocument.indexes(before:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 704))();
}

uint64_t dispatch thunk of CalculateIndexedDocument.indexes(after:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 712))();
}

uint64_t dispatch thunk of CalculateIndexedDocument.perform<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 768))();
}

uint64_t dispatch thunk of CalculateIndexedDocument.markResultsNeedUpdate(from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 776))();
}

uint64_t sub_1BDD1E560()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 608))();
}

uint64_t sub_1BDD1E58C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BDDAF9F8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BDD1E5D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA28C90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDD1E638()
{
  return 1;
}

uint64_t sub_1BDD1E640(uint64_t a1)
{
  return 1;
}

uint64_t CalculateExpression.ClearOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  return MEMORY[0x1F4186488](v0, 16, 7);
}

void sub_1BDD1E6C4(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1BDD1E6D0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16) != 1) {
    return 0;
  }
  CalculateExpression.RichExpression.editingToken(matching:)(sub_1BDD1F510, &v75);
  uint64_t v2 = (void *)v75;
  if (!(void)v75) {
    return 0;
  }
  uint64_t v3 = (uint64_t)&v75;
  uint64_t v4 = *((void *)&v75 + 1);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(*(void *)v75 + 560);
  uint64_t v6 = *(void *)v75 + 560;
  sub_1BDD02DD4(v75);
  uint64_t v7 = swift_retain();
  if ((v5(v7) & 1) == 0 && ((*(uint64_t (**)(void))(*v2 + 568))() & 1) == 0)
  {
    sub_1BDD1F874(v2, v4, (uint64_t)v67);
    if (v67[0])
    {
      uint64_t v8 = v73;
      uint64_t v9 = v74;
      if (v74 < v73)
      {
        __break(1u);
      }
      else
      {
        uint64_t v6 = v74 + 1;
        if (!__OFADD__(v74, 1))
        {
          uint64_t v10 = v71;
          uint64_t v11 = v72;
          if (sub_1BDD1F5FC((uint64_t)v2, v73, v74 + 1)) {
            goto LABEL_9;
          }
          uint64_t v64 = v10;
          uint64_t v65 = *(uint64_t (**)(void))(*v2 + 416);
          uint64_t v13 = ((uint64_t (*)(uint64_t))v65)(v8);
          if (v13)
          {
            char v14 = *(unsigned char *)(v13 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
            swift_release();
            LOBYTE(v75) = v14;
            v66[0] = 15;
            sub_1BDCF0848();
            if (sub_1BDDAFD28())
            {
              uint64_t v15 = ((uint64_t (*)(uint64_t))v65)(v9);
              if (v15)
              {
                char v16 = *(unsigned char *)(v15 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
                swift_release();
                LOBYTE(v75) = v16;
                v66[0] = 16;
                if (sub_1BDDAFD28())
                {
                  if (__OFSUB__(v9, 1))
                  {
LABEL_88:
                    __break(1u);
                    goto LABEL_89;
                  }
                  sub_1BDD1F874(v2, v9 - 1, (uint64_t)&v75);
                  if ((v75 & 1) == 0) {
                    goto LABEL_9;
                  }
                  if ((BYTE1(v75) & 1) != 0 && v8 >= *((uint64_t *)&v75 + 1))
                  {
                    unsigned __int8 v60 = v76;
                    uint64_t v6 = v77;
                    uint64_t v61 = v78;
                    if ((v76 & 1) != (v77 & 1))
                    {
                      if (v11) {
                        goto LABEL_67;
                      }
                      uint64_t v17 = ((uint64_t (*)(uint64_t))v65)(v64);
                      if (v17)
                      {
                        unsigned __int8 v18 = *(unsigned char *)(v17 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
                        swift_release();
                        v66[0] = v18;
                        if (sub_1BDDAFD28())
                        {
                          uint64_t v19 = (uint64_t (**)(unsigned __int8 *))(*v2 + 408);
                          char v20 = *v19;
                          uint64_t v3 = (*v19)(v66);
                          sub_1BDD02E58(v9);
                          swift_release();
                          ((void (*)(unsigned __int8 *, void))v3)(v66, 0);
                          if (v61 >= v64)
                          {
                            uint64_t v21 = (void (*)(unsigned __int8 *, void))v20(v66);
                            sub_1BDD03824(v64, v61);
                            v21(v66, 0);
                            type metadata accessor for CalculateExpression.RichToken();
                            v66[0] = 4;
                            char v22 = sub_1BDD013AC();
                            uint64_t v8 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v66, v22 & 1);
                            uint64_t result = v20(v66);
                            uint64_t v3 = result;
                            if (!(*v23 >> 62))
                            {
                              uint64_t v24 = *(void *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
                              goto LABEL_27;
                            }
LABEL_105:
                            swift_bridgeObjectRetain();
                            uint64_t v24 = sub_1BDDB0448();
                            uint64_t result = swift_bridgeObjectRelease();
LABEL_27:
                            if (v24 < v64)
                            {
                              __break(1u);
                            }
                            else if ((v64 & 0x8000000000000000) == 0)
                            {
                              uint64_t v25 = v64;
                              uint64_t v26 = v64;
                              uint64_t v27 = v8;
LABEL_76:
                              sub_1BDD0572C(v25, v26, v27);
                              ((void (*)(unsigned __int8 *, void))v3)(v66, 0);
                              goto LABEL_45;
                            }
                            __break(1u);
                            return result;
                          }
LABEL_104:
                          __break(1u);
                          goto LABEL_105;
                        }
                      }
                    }
                    uint64_t v65 = *(uint64_t (**)(void))(*v2 + 408);
                    uint64_t v3 = ((uint64_t (*)(unsigned __int8 *))v65)(v66);
                    sub_1BDD02E58(v9);
                    swift_release();
                    ((void (*)(unsigned __int8 *, void))v3)(v66, 0);
                    uint64_t v9 = v61;
                    if (v61 >= v8)
                    {
                      uint64_t v48 = (void (*)(unsigned __int8 *, void))((uint64_t (*)(unsigned __int8 *))v65)(v66);
                      sub_1BDD03824(v8, v61);
                      v48(v66, 0);
                      if (((v60 ^ v6) & 1) == 0) {
                        goto LABEL_45;
                      }
                      type metadata accessor for CalculateExpression.RichToken();
                      v66[0] = 4;
                      char v49 = sub_1BDD013AC();
                      uint64_t v3 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v66, v49 & 1);
                      uint64_t v6 = ((uint64_t (*)(unsigned __int8 *))v65)(v66);
                      uint64_t v9 = *v50;
                      if (!((unint64_t)*v50 >> 62))
                      {
                        if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= v8) {
                          goto LABEL_65;
                        }
                        goto LABEL_98;
                      }
LABEL_97:
                      swift_bridgeObjectRetain();
                      uint64_t v58 = sub_1BDDB0448();
                      swift_bridgeObjectRelease();
                      if (v58 >= v8)
                      {
LABEL_65:
                        if (v8 < 0)
                        {
                          __break(1u);
LABEL_67:
                          uint64_t v51 = (uint64_t *)(*v2 + 408);
                          uint64_t v3 = *v51;
                          uint64_t v6 = (uint64_t)v66;
                          uint64_t v52 = (void (*)(unsigned __int8 *, void))((uint64_t (*)(unsigned __int8 *))*v51)(v66);
                          sub_1BDD02E58(v9);
                          swift_release();
                          v52(v66, 0);
                          uint64_t v8 = v64 + 1;
                          if (!__OFADD__(v64, 1))
                          {
                            uint64_t v6 = v61;
                            if (v61 >= v8)
                            {
                              uint64_t v53 = (void (*)(unsigned __int8 *, void))((uint64_t (*)(unsigned __int8 *))v3)(v66);
                              sub_1BDD03824(v8, v61);
                              v53(v66, 0);
                              uint64_t v54 = ((uint64_t (*)(uint64_t))v65)(v64);
                              if (v54)
                              {
                                unsigned __int8 v55 = *(unsigned char *)(v54 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
                                swift_release();
                                v66[0] = v55;
                                if (CalculateExpression.TokenType.isBasicOperator.getter()) {
                                  goto LABEL_45;
                                }
                              }
                              if (v64 < 0) {
                                goto LABEL_45;
                              }
                              type metadata accessor for CalculateExpression.RichToken();
                              v66[0] = 3;
                              char v56 = sub_1BDD013AC();
                              uint64_t v6 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v66, v56 & 1);
                              uint64_t v3 = ((uint64_t (*)(unsigned __int8 *))v3)(v66);
                              if (!(*v57 >> 62))
                              {
                                if (*(void *)((*v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= v8) {
                                  goto LABEL_74;
                                }
                                goto LABEL_102;
                              }
LABEL_101:
                              swift_bridgeObjectRetain();
                              uint64_t v59 = sub_1BDDB0448();
                              swift_bridgeObjectRelease();
                              if (v59 >= v8)
                              {
LABEL_74:
                                if ((v8 & 0x8000000000000000) == 0)
                                {
                                  uint64_t v25 = v8;
                                  uint64_t v26 = v8;
                                  uint64_t v27 = v6;
                                  goto LABEL_76;
                                }
                                goto LABEL_103;
                              }
LABEL_102:
                              __break(1u);
LABEL_103:
                              __break(1u);
                              goto LABEL_104;
                            }
LABEL_100:
                            __break(1u);
                            goto LABEL_101;
                          }
LABEL_99:
                          __break(1u);
                          goto LABEL_100;
                        }
                        goto LABEL_40;
                      }
LABEL_98:
                      __break(1u);
                      goto LABEL_99;
                    }
LABEL_96:
                    __break(1u);
                    goto LABEL_97;
                  }
                }
              }
            }
          }
          if (v67[1])
          {
            uint64_t v3 = v69;
            uint64_t v9 = v70;
            uint64_t v63 = v68;
            uint64_t v28 = v65();
            if (!v28
              || (unsigned __int8 v29 = *(unsigned char *)(v28 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type),
                  swift_release(),
                  v66[0] = v29,
                  sub_1BDCF0848(),
                  (sub_1BDDAFD28() & 1) == 0))
            {
              if (v11)
              {
                if (v3)
                {
                  uint64_t v11 = v63 + 1;
                  if (!__OFADD__(v63, 1))
                  {
                    if (v8 >= v11)
                    {
                      uint64_t v64 = *(void *)(*v2 + 408);
                      uint64_t v43 = (void (*)(unsigned __int8 *, void))((uint64_t (*)(unsigned __int8 *))v64)(v66);
                      sub_1BDD03824(v11, v8);
                      v43(v66, 0);
                      uint64_t v44 = ((uint64_t (*)(uint64_t))v65)(v63);
                      if (v44)
                      {
                        unsigned __int8 v45 = *(unsigned char *)(v44 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
                        swift_release();
                        v66[0] = v45;
                        if (CalculateExpression.TokenType.isBasicOperator.getter()) {
                          goto LABEL_45;
                        }
                      }
                      if (v63 < 0) {
                        goto LABEL_45;
                      }
                      type metadata accessor for CalculateExpression.RichToken();
                      v66[0] = 3;
                      char v46 = sub_1BDD013AC();
                      uint64_t v6 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v66, v46 & 1);
                      uint64_t v8 = ((uint64_t (*)(unsigned __int8 *))v64)(v66);
                      uint64_t v9 = *v47;
                      if (!((unint64_t)*v47 >> 62))
                      {
                        uint64_t v3 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
                        if (v3 < v11)
                        {
LABEL_92:
                          __break(1u);
LABEL_93:
                          __break(1u);
                          goto LABEL_94;
                        }
LABEL_59:
                        if ((v11 & 0x8000000000000000) == 0)
                        {
                          sub_1BDD0572C(v11, v11, v6);
                          ((void (*)(unsigned __int8 *, void))v8)(v66, 0);
                          goto LABEL_45;
                        }
                        goto LABEL_93;
                      }
LABEL_91:
                      swift_bridgeObjectRetain();
                      uint64_t v3 = sub_1BDDB0448();
                      swift_bridgeObjectRelease();
                      if (v3 < v11) {
                        goto LABEL_92;
                      }
                      goto LABEL_59;
                    }
LABEL_90:
                    __break(1u);
                    goto LABEL_91;
                  }
LABEL_89:
                  __break(1u);
                  goto LABEL_90;
                }
                uint64_t v40 = ((uint64_t (*)(uint64_t))v65)(v63);
                if (v40)
                {
                  unsigned __int8 v41 = *(unsigned char *)(v40 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
                  swift_release();
                  v66[0] = v41;
                  sub_1BDCF0848();
                  if (sub_1BDDAFD28())
                  {
                    uint64_t v6 = v64 + 1;
                    if (!__OFADD__(v64, 1))
                    {
                      uint64_t v9 = v63;
                      if (v6 >= v63)
                      {
                        uint64_t v42 = (void (*)(unsigned __int8 *, void))(*(uint64_t (**)(unsigned __int8 *))(*v2 + 408))(v66);
                        sub_1BDD03824(v63, v6);
                        v42(v66, 0);
                        goto LABEL_45;
                      }
                      goto LABEL_95;
                    }
LABEL_94:
                    __break(1u);
LABEL_95:
                    __break(1u);
                    goto LABEL_96;
                  }
                }
              }
              uint64_t v38 = v64 + 1;
              if (!__OFADD__(v64, 1))
              {
                if (v38 >= v9)
                {
                  uint64_t v39 = (void (*)(unsigned __int8 *, void))(*(uint64_t (**)(unsigned __int8 *))(*v2 + 408))(v66);
                  sub_1BDD03824(v9, v38);
                  v39(v66, 0);
                  goto LABEL_45;
                }
                goto LABEL_87;
              }
LABEL_86:
              __break(1u);
LABEL_87:
              __break(1u);
              goto LABEL_88;
            }
          }
          type metadata accessor for CalculateExpression.RichToken();
          v66[0] = 16;
          char v30 = sub_1BDD013AC();
          uint64_t v61 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v66, v30 & 1);
          uint64_t v65 = (uint64_t (*)(void))(*v2 + 408);
          uint64_t v62 = *(uint64_t (**)(unsigned __int8 *))v65;
          uint64_t v3 = (*(uint64_t (**)(unsigned __int8 *))v65)(v66);
          if (!(*v31 >> 62))
          {
            uint64_t v9 = *(void *)((*v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v9 >= v6) {
              goto LABEL_35;
            }
            goto LABEL_80;
          }
LABEL_79:
          swift_bridgeObjectRetain();
          uint64_t v9 = sub_1BDDB0448();
          swift_bridgeObjectRelease();
          if (v9 >= v6)
          {
LABEL_35:
            if ((v6 & 0x8000000000000000) == 0)
            {
              sub_1BDD0572C(v6, v6, v61);
              ((void (*)(unsigned __int8 *, void))v3)(v66, 0);
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
              uint64_t v32 = swift_allocObject();
              *(_OWORD *)(v32 + 16) = xmmword_1BDDB3760;
              v66[0] = 1;
              char v33 = sub_1BDD013AC();
              *(void *)(v32 + 32) = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(49, 0xE100000000000000, v66, v33 & 1);
              v66[0] = 6;
              char v34 = sub_1BDD013AC();
              *(void *)(v32 + 40) = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v66, v34 & 1);
              *(void *)uint64_t v66 = v32;
              sub_1BDDAFFD8();
              uint64_t v3 = *(void *)v66;
              uint64_t v9 = (uint64_t)v62;
              uint64_t v6 = v62(v66);
              sub_1BDD053AC(v8, v8, v3);
              ((void (*)(unsigned __int8 *, void))v6)(v66, 0);
              v66[0] = 15;
              char v35 = sub_1BDD013AC();
              uint64_t v36 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v66, v35 & 1);
              uint64_t v8 = v64 + 1;
              if (!__OFADD__(v64, 1))
              {
                uint64_t v3 = v36;
                uint64_t v6 = v62(v66);
                uint64_t v9 = *v37;
                if (!((unint64_t)*v37 >> 62))
                {
                  uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  if (v11 >= v8) {
                    goto LABEL_39;
                  }
                  goto LABEL_84;
                }
LABEL_83:
                swift_bridgeObjectRetain();
                uint64_t v11 = sub_1BDDB0448();
                swift_bridgeObjectRelease();
                if (v11 >= v8)
                {
LABEL_39:
                  if ((v8 & 0x8000000000000000) == 0)
                  {
LABEL_40:
                    sub_1BDD0572C(v8, v8, v3);
                    ((void (*)(unsigned __int8 *, void))v6)(v66, 0);
LABEL_45:
                    sub_1BDD02E18((uint64_t)v2);
                    swift_release();
                    sub_1BDD02E18((uint64_t)v2);
                    return 1;
                  }
                  goto LABEL_85;
                }
LABEL_84:
                __break(1u);
LABEL_85:
                __break(1u);
                goto LABEL_86;
              }
LABEL_82:
              __break(1u);
              goto LABEL_83;
            }
LABEL_81:
            __break(1u);
            goto LABEL_82;
          }
LABEL_80:
          __break(1u);
          goto LABEL_81;
        }
      }
      __break(1u);
      goto LABEL_79;
    }
  }
LABEL_9:
  swift_release();
  sub_1BDD02E18((uint64_t)v2);
  sub_1BDD02E18((uint64_t)v2);
  return 0;
}

uint64_t sub_1BDD1F510(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (((*(uint64_t (**)(void))(*(void *)*a1 + 456))() & 1) != 0
    || ((*(uint64_t (**)(void))(*(void *)v1 + 560))() & 1) != 0)
  {
    return 1;
  }
  else
  {
    return (*(uint64_t (**)(void))(*(void *)v1 + 568))() & 1;
  }
}

uint64_t CalculateExpression.ReciprocalOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t sub_1BDD1F5FC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 - 1;
  if (__OFSUB__(a3, 1)) {
    goto LABEL_28;
  }
  uint64_t v5 = *(uint64_t (**)(uint64_t))(*(void *)result + 416);
  do
  {
    if (!v5(a2)) {
      goto LABEL_11;
    }
    swift_release();
    sub_1BDCF0848();
    if ((sub_1BDDAFD28() & 1) == 0) {
      goto LABEL_11;
    }
    if (!v5(v3)) {
      goto LABEL_11;
    }
    swift_release();
    uint64_t result = sub_1BDDAFD28();
    if ((result & 1) == 0) {
      goto LABEL_11;
    }
    if (__OFADD__(a2, 1))
    {
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    ++a2;
    BOOL v6 = __OFSUB__(v3--, 1);
  }
  while (!v6);
  __break(1u);
LABEL_11:
  if (v5(a2))
  {
    swift_release();
    sub_1BDCF0848();
    uint64_t result = sub_1BDDAFD28();
    if (result)
    {
      BOOL v6 = __OFADD__(a2++, 1);
      if (v6) {
        goto LABEL_29;
      }
    }
  }
  if (a2 != v3) {
    return 0;
  }
  uint64_t v7 = v5(v3);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = v7;
  unsigned __int8 v13 = *(unsigned char *)(v7 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  unsigned __int8 v12 = 1;
  if (!static CalculateExpression.TokenType.== infix(_:_:)(&v13, &v12))
  {
    swift_release();
    return 0;
  }
  if ((*(uint64_t (**)(void))(*(void *)v8 + 208))() != 49 || v9 != 0xE100000000000000)
  {
    char v11 = sub_1BDDB04E8();
    swift_release();
    swift_bridgeObjectRelease();
    return (v11 & 1) != 0;
  }
  swift_release();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1BDD1F874@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v40 = a2;
  uint64_t result = sub_1BDD231C0(&v40);
  uint64_t v36 = v40;
  uint64_t v7 = v40 - 1;
  if (__OFSUB__(v40, 1))
  {
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v8 = (uint64_t (**)(uint64_t))(*a1 + 416);
  uint64_t v9 = *v8;
  uint64_t v10 = (*v8)(v40 - 1);
  if (v10)
  {
    char v11 = *(unsigned char *)(v10 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    LOBYTE(v39) = v11;
    unsigned __int8 v38 = 17;
    sub_1BDCF0848();
    uint64_t result = sub_1BDDAFD28();
    if (result)
    {
      BOOL v12 = __OFSUB__(v7--, 1);
      if (v12) {
        goto LABEL_44;
      }
    }
  }
  uint64_t v13 = v9(v7);
  if (!v13) {
    goto LABEL_14;
  }
  char v14 = *(unsigned char *)(v13 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  LOBYTE(v39) = v14;
  unsigned __int8 v38 = 4;
  sub_1BDCF0848();
  uint64_t result = sub_1BDDAFD28();
  if ((result & 1) == 0) {
    goto LABEL_14;
  }
  BOOL v12 = __OFSUB__(v7--, 1);
  if (v12) {
    goto LABEL_45;
  }
  uint64_t v15 = v9(v7);
  if (v15)
  {
    char v16 = *(unsigned char *)(v15 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    LOBYTE(v39) = v16;
    unsigned __int8 v38 = 17;
    uint64_t result = sub_1BDDAFD28();
    if (result)
    {
      BOOL v12 = __OFSUB__(v7--, 1);
      if (v12) {
        goto LABEL_50;
      }
    }
  }
  char v17 = 1;
  for (uint64_t i = v7 - 1; __OFSUB__(v7, 1); uint64_t i = v7 - 1)
  {
    __break(1u);
LABEL_14:
    char v17 = 0;
  }
  uint64_t v34 = a2;
  uint64_t v39 = i;
  uint64_t result = sub_1BDD231C0(&v39);
  uint64_t v19 = v39 - 1;
  if (__OFSUB__(v39, 1))
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v35 = v39;
  uint64_t v20 = v9(v39 - 1);
  if (v20)
  {
    unsigned __int8 v21 = *(unsigned char *)(v20 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    unsigned __int8 v38 = v21;
    unsigned __int8 v37 = 17;
    sub_1BDCF0848();
    uint64_t result = sub_1BDDAFD28();
    if (result)
    {
      BOOL v12 = __OFSUB__(v19--, 1);
      if (v12) {
        goto LABEL_46;
      }
    }
  }
  uint64_t v22 = v9(v19);
  if (!v22)
  {
    char v32 = 0;
    goto LABEL_28;
  }
  unsigned __int8 v23 = *(unsigned char *)(v22 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  unsigned __int8 v38 = v23;
  unsigned __int8 v37 = 4;
  sub_1BDCF0848();
  uint64_t result = sub_1BDDAFD28();
  if ((result & 1) == 0)
  {
    char v32 = 0;
    goto LABEL_28;
  }
  BOOL v12 = __OFSUB__(v19--, 1);
  if (v12)
  {
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v24 = v9(v19);
  if (v24)
  {
    unsigned __int8 v25 = *(unsigned char *)(v24 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    unsigned __int8 v38 = v25;
    unsigned __int8 v37 = 17;
    uint64_t result = sub_1BDDAFD28();
    if (result)
    {
      BOOL v12 = __OFSUB__(v19--, 1);
      if (v12) {
        goto LABEL_51;
      }
    }
  }
  char v32 = 1;
LABEL_28:
  uint64_t v26 = v9(v7);
  char v33 = v17;
  if (!v26
    || (unsigned __int8 v27 = *(unsigned char *)(v26 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type),
        swift_release(),
        unsigned __int8 v38 = v27,
        unsigned __int8 v37 = 6,
        sub_1BDCF0848(),
        uint64_t result = sub_1BDDAFD28(),
        (result & 1) == 0))
  {
    char v28 = 0;
    goto LABEL_34;
  }
  if (i < v35) {
    goto LABEL_48;
  }
  if (__OFADD__(i, 1))
  {
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    return result;
  }
  char v28 = sub_1BDD1F5FC((uint64_t)a1, v35, i + 1);
LABEL_34:
  uint64_t result = v9(v36);
  if (result)
  {
    unsigned __int8 v29 = *(unsigned char *)(result + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    unsigned __int8 v38 = v29;
    if (CalculateExpression.TokenType.isOperand.getter())
    {
      uint64_t result = swift_release();
      BOOL v30 = 1;
      char v31 = v32;
    }
    else
    {
      unsigned __int8 v38 = v29;
      unsigned __int8 v37 = 15;
      char v31 = v32;
      if (static CalculateExpression.TokenType.== infix(_:_:)(&v38, &v37))
      {
        uint64_t result = swift_release();
        BOOL v30 = 1;
      }
      else
      {
        unsigned __int8 v38 = v29;
        unsigned __int8 v37 = 10;
        BOOL v30 = static CalculateExpression.TokenType.== infix(_:_:)(&v38, &v37);
        uint64_t result = swift_release();
      }
    }
  }
  else
  {
    BOOL v30 = 0;
    char v31 = v32;
  }
  *(unsigned char *)a3 = v30;
  *(unsigned char *)(a3 + 1) = v28 & 1;
  *(void *)(a3 + 8) = v19;
  *(unsigned char *)(a3 + 16) = v31;
  *(void *)(a3 + 24) = v35;
  *(void *)(a3 + 32) = i;
  *(void *)(a3 + 40) = v7;
  *(unsigned char *)(a3 + 48) = v33;
  *(void *)(a3 + 56) = v36;
  *(void *)(a3 + 64) = v34;
  return result;
}

uint64_t method lookup function for CalculateExpression.ReciprocalOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalculateExpression.ReciprocalOperation);
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s19ReciprocalOperationC17ReciprocalPatternVwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[72]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s19ReciprocalOperationC17ReciprocalPatternVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 72) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *_s19ReciprocalOperationC17ReciprocalPatternVMa()
{
  return &_s19ReciprocalOperationC17ReciprocalPatternVN;
}

uint64_t _s19ReciprocalOperationC17ReciprocalPatternV4TermVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t _s19ReciprocalOperationC17ReciprocalPatternV4TermVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s19ReciprocalOperationC17ReciprocalPatternV4TermVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *_s19ReciprocalOperationC17ReciprocalPatternV4TermVMa()
{
  return &_s19ReciprocalOperationC17ReciprocalPatternV4TermVN;
}

uint64_t sub_1BDD1FF04@<X0>(char *a1@<X8>)
{
  uint64_t result = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  char v5 = 3;
  if (result) {
    BOOL v6 = 0;
  }
  else {
    BOOL v6 = v4 == 0xE000000000000000;
  }
  if (!v6)
  {
    uint64_t result = sub_1BDDB04E8();
    if (result) {
      char v5 = 3;
    }
    else {
      char v5 = 1;
    }
  }
  *a1 = v5;
  return result;
}

unint64_t sub_1BDD1FF58(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16) != 1) {
    return 0;
  }
  CalculateExpression.RichExpression.editingToken(matching:)(sub_1BDD20AFC, &v63);
  uint64_t v3 = v63;
  if (!(void)v63) {
    return 0;
  }
  uint64_t v5 = *((void *)&v63 + 1);
  uint64_t v4 = v64;
  uint64_t v6 = v65;
  uint64_t v7 = *(uint64_t (**)(uint64_t))(*(void *)v63 + 416);
  uint64_t v8 = (void (*)(void, void))(*(void *)v63 + 416);
  uint64_t v9 = swift_retain();
  sub_1BDD02DD4(v9);
  uint64_t v10 = v7(v5);
  if (!v10)
  {
    sub_1BDD02E18(v3);
    swift_release();
    uint64_t v15 = v3;
LABEL_41:
    sub_1BDD02E18(v15);
    return 0;
  }
  uint64_t v59 = v2;
  uint64_t v60 = v4;
  uint64_t v11 = (uint64_t)&OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
  uint64_t v12 = OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
  uint64_t v13 = *(unsigned __int8 *)(v10 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  LOBYTE(v63) = *(unsigned char *)(v10 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  LOBYTE(v62) = 18;
  unint64_t v14 = v10;
  sub_1BDCF0848();
  if (sub_1BDDAFD28())
  {
    sub_1BDD02E18(v3);
    swift_release();
    sub_1BDD02E18(v3);
    swift_release();
    return 0;
  }
  uint64_t v62 = v5;
  LOBYTE(v63) = v13;
  unint64_t v16 = (unint64_t)&v63;
  uint64_t v58 = (_OWORD *)v6;
  if (CalculateExpression.TokenType.isOperand.getter()) {
    goto LABEL_8;
  }
  LOBYTE(v63) = v13;
  unsigned __int8 v61 = 7;
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v63, &v61))
  {
    if (__OFSUB__(v5, 1)) {
      goto LABEL_97;
    }
    uint64_t v20 = v7(v5 - 1);
    if (v20)
    {
      char v21 = *(unsigned char *)(v20 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      swift_release();
      LOBYTE(v63) = v21;
      unint64_t v16 = (unint64_t)&v63;
      if (CalculateExpression.TokenType.isOperand.getter())
      {
LABEL_8:
        uint64_t v6 = v5;
        while (1)
        {
          uint64_t v12 = v6;
          BOOL v17 = __OFSUB__(v6--, 1);
          if (v17) {
            break;
          }
          unint64_t v16 = v3;
          uint64_t v18 = v7(v6);
          if (v18)
          {
            char v19 = *(unsigned char *)(v18 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
            swift_release();
            LOBYTE(v63) = v19;
            unint64_t v16 = (unint64_t)&v63;
            if (CalculateExpression.TokenType.isOperand.getter()) {
              continue;
            }
          }
          goto LABEL_21;
        }
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
        goto LABEL_88;
      }
    }
  }
  char v22 = *(unsigned char *)(v14 + v12);
  LOBYTE(v63) = v22;
  unsigned __int8 v61 = 16;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v63, &v61))
  {
    LOBYTE(v63) = v22;
    unsigned __int8 v61 = 7;
    if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v63, &v61))
    {
      LOBYTE(v63) = v22;
      unsigned __int8 v61 = 8;
      if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v63, &v61)) {
        goto LABEL_40;
      }
    }
  }
  unint64_t v16 = v3;
  sub_1BDD231C0(&v62);
  uint64_t v12 = v62;
  if (v62 < 0) {
    goto LABEL_40;
  }
LABEL_21:
  if (v5 < v12) {
    goto LABEL_86;
  }
  uint64_t v13 = 0;
  uint64_t v6 = v12;
  while (1)
  {
    unint64_t v16 = v3;
    uint64_t v23 = v7(v6);
    if (v23)
    {
      unint64_t v16 = v23;
      uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v23 + 328))(v23);
      swift_release();
      if (v11 > v13) {
        uint64_t v13 = v11;
      }
    }
    else if (v13 <= 0)
    {
      uint64_t v13 = 0;
    }
    if (v5 == v6) {
      break;
    }
    BOOL v17 = __OFADD__(v6++, 1);
    if (v17)
    {
      __break(1u);
      break;
    }
  }
  uint64_t v24 = v60 + v13;
  if (__OFADD__(v60, v13)) {
    goto LABEL_87;
  }
  uint64_t v8 = (void (*)(void, void))(v24 + 1);
  unint64_t v16 = (unint64_t)v58;
  if (__OFADD__(v24, 1))
  {
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  if ((uint64_t)v8 >= *(void *)sub_1BDD3A680())
  {
LABEL_40:
    sub_1BDD02E18(v3);
    swift_release();
    swift_release();
    uint64_t v15 = v3;
    goto LABEL_41;
  }
  uint64_t v6 = type metadata accessor for CalculateExpression.RichToken();
  LOBYTE(v63) = 7;
  char v25 = sub_1BDD013AC();
  uint64_t v7 = (uint64_t (*)(uint64_t))CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v63, v25 & 1);
  uint64_t v13 = *(void *)(v59 + 16);
  uint64_t v8 = *(void (**)(void, void))(v59 + 24);
  if (v13 == 101 && v8 == (void (*)(void, void))0xE100000000000000 || (sub_1BDDB04E8() & 1) != 0)
  {
    LOBYTE(v63) = 13;
    char v26 = sub_1BDD013AC() & 1;
    uint64_t v27 = 0;
    unint64_t v28 = 0;
  }
  else
  {
    if (!v13 && v8 == (void (*)(void, void))0xE000000000000000 || (sub_1BDDB04E8() & 1) != 0) {
      char v30 = 18;
    }
    else {
      char v30 = 1;
    }
    LOBYTE(v63) = v30;
    swift_bridgeObjectRetain();
    char v26 = sub_1BDD013AC() & 1;
    uint64_t v27 = v13;
    unint64_t v28 = (unint64_t)v8;
  }
  uint64_t v59 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v27, v28, (unsigned __int8 *)&v63, v26);
  unint64_t v16 = v3;
  unint64_t result = (*(uint64_t (**)(void))(*(void *)v3 + 392))();
  uint64_t v11 = v5 + 1;
  if (__OFADD__(v5, 1)) {
    goto LABEL_89;
  }
  unint64_t v16 = result;
  char v56 = v8;
  uint64_t v8 = (void (*)(void, void))(result >> 62);
  if (!(result >> 62))
  {
    if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) >= v12) {
      goto LABEL_53;
    }
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
LABEL_90:
  swift_bridgeObjectRetain();
  uint64_t v53 = sub_1BDDB0448();
  unint64_t result = swift_bridgeObjectRelease();
  if (v53 < v12) {
    goto LABEL_91;
  }
LABEL_53:
  if (v12 < 0)
  {
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  if (v8)
  {
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_1BDDB0448();
    unint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v14 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((uint64_t)v14 < v11) {
    goto LABEL_93;
  }
  uint64_t v55 = v13;
  if (v11 < 0)
  {
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  if ((v16 & 0xC000000000000001) != 0)
  {
    if (v11 < (unint64_t)v12) {
      goto LABEL_98;
    }
    if (v12 != v11)
    {
      if (v12 >= (unint64_t)v11)
      {
        __break(1u);
        return result;
      }
      uint64_t v31 = v12;
      do
      {
        uint64_t v32 = v31 + 1;
        sub_1BDDB0388();
        uint64_t v31 = v32;
      }
      while (v11 != v32);
    }
  }
  if (v8)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1BDDB0458();
    uint64_t v13 = v34;
    uint64_t v33 = v35;
    unint64_t v14 = v36;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v6 = v16 & 0xFFFFFFFFFFFFFF8;
    uint64_t v13 = (v16 & 0xFFFFFFFFFFFFFF8) + 32;
    unint64_t v14 = (2 * v11) | 1;
    uint64_t v33 = v12;
  }
  uint64_t v57 = (uint64_t)v7;
  if (v14)
  {
    uint64_t v7 = (uint64_t (*)(uint64_t))v33;
    sub_1BDDB04F8();
    swift_unknownObjectRetain_n();
    uint64_t v39 = swift_dynamicCastClass();
    if (!v39)
    {
      swift_unknownObjectRelease();
      uint64_t v39 = MEMORY[0x1E4FBC860];
    }
    uint64_t v40 = *(void *)(v39 + 16);
    swift_release();
    if (!__OFSUB__(v14 >> 1, v7))
    {
      if (v40 == (v14 >> 1) - (void)v7)
      {
        uint64_t v38 = swift_dynamicCastClass();
        uint64_t v7 = (uint64_t (*)(uint64_t))v57;
        if (!v38)
        {
          swift_unknownObjectRelease();
          uint64_t v38 = MEMORY[0x1E4FBC860];
        }
        goto LABEL_76;
      }
      goto LABEL_100;
    }
    goto LABEL_99;
  }
  while (1)
  {
    sub_1BDD20C6C(v6, v13, v33, v14);
    uint64_t v38 = v37;
LABEL_76:
    swift_unknownObjectRelease();
    type metadata accessor for CalculateExpression.RichExpression();
    uint64_t v41 = sub_1BDD07294(v38);
    LOBYTE(v63) = 1;
    (*(void (**)(long long *))(*(void *)v41 + 280))(&v63);
    uint64_t v42 = *(void (**)(uint64_t))(*(void *)v7 + 288);
    uint64_t v43 = swift_retain();
    uint64_t v54 = v41;
    v42(v43);
    uint64_t v7 = *(uint64_t (**)(uint64_t))(*(void *)v3 + 408);
    uint64_t v44 = (void (*)(long long *, void))v7((uint64_t)&v63);
    sub_1BDD03824(v12, v11);
    v44(&v63, 0);
    if ((v55 || v56 != (void (*)(void, void))0xE000000000000000) && (sub_1BDDB04E8() & 1) == 0) {
      break;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_1BDDB3730;
    *(void *)(v45 + 32) = v59;
    *(void *)&long long v63 = v45;
    sub_1BDDAFFD8();
    uint64_t v46 = v63;
    swift_retain();
    uint64_t v6 = sub_1BDD07294(v46);
    uint64_t v47 = *(void (**)(uint64_t))(*(void *)v57 + 264);
    uint64_t v48 = swift_retain();
    v47(v48);
    LOBYTE(v63) = 3;
    (*(void (**)(long long *))(*(void *)v6 + 280))(&v63);
    swift_retain();
    uint64_t v8 = (void (*)(void, void))v7((uint64_t)&v63);
    uint64_t v11 = *v49;
    if ((unint64_t)*v49 >> 62)
    {
LABEL_95:
      swift_bridgeObjectRetain();
      unint64_t v14 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v14 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v13 = v57;
    if ((uint64_t)v14 >= v12)
    {
      sub_1BDD0572C(v12, v12, v57);
      v8(&v63, 0);
      swift_release();
      sub_1BDD02E18(v3);
      swift_release();
      goto LABEL_84;
    }
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    swift_unknownObjectRelease();
    uint64_t v33 = (uint64_t)v7;
    uint64_t v7 = (uint64_t (*)(uint64_t))v57;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_1BDDB3760;
  *(void *)(v50 + 32) = v59;
  *(void *)(v50 + 40) = v57;
  *(void *)&long long v63 = v50;
  sub_1BDDAFFD8();
  unint64_t v51 = v63;
  swift_retain();
  swift_retain();
  uint64_t v52 = (void (*)(long long *, void))v7((uint64_t)&v63);
  sub_1BDD053AC(v12, v12, v51);
  v52(&v63, 0);
  (*(void (**)(void))(*(void *)v54 + 304))(0);
  swift_release();
  sub_1BDD02E18(v3);
LABEL_84:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BDD02E18(v3);
  return 1;
}

uint64_t sub_1BDD20AFC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((*(uint64_t (**)(void))(*(void *)*a1 + 456))())
  {
    (*(void (**)(uint64_t *__return_ptr))(*(void *)v1 + 272))(&v4);
    sub_1BDD18E9C();
    char v2 = sub_1BDDAFD28() ^ 1;
  }
  else
  {
    char v2 = 0;
  }
  return v2 & 1;
}

void sub_1BDD20BBC()
{
}

uint64_t sub_1BDD20BEC()
{
  return swift_bridgeObjectRelease();
}

uint64_t CalculateExpression.ExponentialOperation.deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CalculateExpression.ExponentialOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 32, 7);
}

void sub_1BDD20C6C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_11:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      if (v4 != a3)
      {
LABEL_7:
        type metadata accessor for CalculateExpression.RichToken();
        swift_arrayInitWithCopy();
        return;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
      uint64_t v7 = (void *)swift_allocObject();
      int64_t v8 = _swift_stdlib_malloc_size(v7);
      uint64_t v9 = v8 - 32;
      if (v8 < 32) {
        uint64_t v9 = v8 - 25;
      }
      v7[2] = v5;
      v7[3] = (2 * (v9 >> 3)) | 1;
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
    goto LABEL_11;
  }
}

uint64_t method lookup function for CalculateExpression.ExponentialOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalculateExpression.ExponentialOperation);
}

unint64_t sub_1BDD20D64(uint64_t a1)
{
  char v2 = *(uint64_t (**)(void))(*(void *)a1 + 176);
  if (!v2()) {
    return 0;
  }
  uint64_t v3 = CalculateExpression.format.getter();
  uint64_t v4 = swift_release();
  if (v3 != 2) {
    return 0;
  }
  if (!((uint64_t (*)(uint64_t))v2)(v4)) {
    return 1;
  }
  unint64_t v5 = CalculateExpression.postfixStack.getter();
  swift_release();
  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1BDDB0448();
  swift_bridgeObjectRelease();
  if (!v6)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return 1;
  }
LABEL_6:
  unint64_t result = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
    goto LABEL_20;
  }
  if ((v5 & 0xC000000000000001) != 0)
  {
LABEL_20:
    MEMORY[0x1C18862A0](result, v5);
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v8 = CalculateExpression.rich.getter();
    unint64_t v9 = (*(uint64_t (**)(void))(*(void *)v8 + 392))();
    swift_release();
    if (!(v9 >> 62))
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_13:
      swift_bridgeObjectRelease();
      uint64_t v11 = (uint64_t (**)(unsigned char *))(*(void *)a1 + 408);
      uint64_t v12 = *v11;
      uint64_t v13 = (void (*)(unsigned char *, void))(*v11)(v18);
      sub_1BDD03588(v10);
      v13(v18, 0);
      uint64_t v14 = *(void *)CalculateExpression.rich.getter();
      unint64_t v15 = (*(uint64_t (**)(void))(v14 + 392))();
      swift_release();
      unint64_t v16 = (void (*)(unsigned char *, void))v12(v18);
      sub_1BDD053AC(0, 0, v15);
      v16(v18, 0);
      (*(void (**)(void))(*(void *)a1 + 232))(0);
      uint64_t v17 = 1;
      (*(void (**)(uint64_t))(*(void *)a1 + 256))(1);
      swift_release();
      return v17;
    }
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (result < *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t CalculateExpression.RollInOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t sub_1BDD210EC()
{
  swift_beginAccess();
  return MEMORY[0x1C1887190](v0 + 16);
}

uint64_t sub_1BDD21130()
{
  return swift_unknownObjectRelease();
}

void (*sub_1BDD21184(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = MEMORY[0x1C1887190](v1 + 16);
  return sub_1BDD21200;
}

void sub_1BDD21200(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_1BDD21280()
{
  swift_allocObject();
  uint64_t v0 = sub_1BDD21414();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_1BDD212CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (*(uint64_t (**)(void))(*(void *)a1 + 104))();
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)a2 + 104))();
  if (!v3)
  {
    if (!v4)
    {
      char v5 = 1;
      return v5 & 1;
    }
    goto LABEL_5;
  }
  if (!v4)
  {
LABEL_5:
    swift_unknownObjectRelease();
    char v5 = 0;
    return v5 & 1;
  }
  swift_unknownObjectRetain();
  char v5 = sub_1BDDAFD28();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v5 & 1;
}

uint64_t sub_1BDD213D0()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t sub_1BDD21408(uint64_t *a1, uint64_t *a2)
{
  return sub_1BDD212CC(*a1, *a2);
}

uint64_t sub_1BDD21414()
{
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  return v0;
}

uint64_t static CalculateExpression.Operation.ee.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29590);
}

uint64_t static CalculateExpression.Operation.factorial.getter()
{
  return sub_1BDCF69AC(qword_1EBA297C0);
}

uint64_t static CalculateExpression.Operation.openParenthesis.getter()
{
  return sub_1BDCF69AC(&qword_1EBA294C0);
}

uint64_t static CalculateExpression.Operation.closeParenthesis.getter()
{
  return sub_1BDCF69AC(&qword_1EBA294D0);
}

uint64_t static CalculateExpression.Operation.pi.getter()
{
  return sub_1BDCF69AC(&qword_1EBA295A0);
}

uint64_t static CalculateExpression.Operation.eulerNumber.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29450);
}

uint64_t static CalculateExpression.Operation.random.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29720);
}

uint64_t static CalculateExpression.Operation.square.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29740);
}

uint64_t static CalculateExpression.Operation.cube.getter()
{
  return sub_1BDCF69AC(&qword_1EBA295C0);
}

uint64_t static CalculateExpression.Operation.power.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29620);
}

uint64_t static CalculateExpression.Operation.squareRoot.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29440);
}

uint64_t static CalculateExpression.Operation.cubeRoot.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29790);
}

uint64_t static CalculateExpression.Operation.root.getter()
{
  return sub_1BDCF69AC(&qword_1EBA295E0);
}

uint64_t static CalculateExpression.Operation.reciprocal.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29430);
}

uint64_t static CalculateExpression.Operation.sine.getter()
{
  return sub_1BDCF69AC(&qword_1EBA295F0);
}

uint64_t static CalculateExpression.Operation.cosine.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29630);
}

uint64_t static CalculateExpression.Operation.tangent.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29780);
}

uint64_t static CalculateExpression.Operation.inverseSine.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29460);
}

uint64_t static CalculateExpression.Operation.inverseCosine.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29470);
}

uint64_t static CalculateExpression.Operation.inverseTangent.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29490);
}

uint64_t static CalculateExpression.Operation.hyperbolicSine.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29480);
}

uint64_t static CalculateExpression.Operation.hyperbolicCosine.getter()
{
  return sub_1BDCF69AC(&qword_1EBA294F0);
}

uint64_t static CalculateExpression.Operation.hyperbolicTangent.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29520);
}

uint64_t static CalculateExpression.Operation.inverseHyperbolicSine.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29560);
}

uint64_t static CalculateExpression.Operation.inverseHyperbolicCosine.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29570);
}

uint64_t static CalculateExpression.Operation.inverseHyperbolicTangent.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29580);
}

uint64_t static CalculateExpression.Operation.logarithmBase10.getter()
{
  return sub_1BDCF69AC(&qword_1EBA294B0);
}

uint64_t static CalculateExpression.Operation.logarithmBase2.getter()
{
  return sub_1BDCF69AC(&qword_1EBA294A0);
}

uint64_t static CalculateExpression.Operation.logarithmBaseCustom.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29530);
}

uint64_t static CalculateExpression.Operation.logarithmNatural.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29500);
}

uint64_t static CalculateExpression.Operation.exponentialBase10.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29510);
}

uint64_t static CalculateExpression.Operation.exponentialBase2.getter()
{
  return sub_1BDCF69AC(&qword_1EBA294E0);
}

uint64_t static CalculateExpression.Operation.exponentialBaseCustom.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29550);
}

uint64_t static CalculateExpression.Operation.exponentialBaseEuler.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29540);
}

uint64_t sub_1BDD2193C()
{
  type metadata accessor for CalculateExpression.LiteralOperation();
  uint64_t result = sub_1BDCF6A7C(65, 0xE100000000000000);
  qword_1EA0DF9A8 = result;
  return result;
}

uint64_t *sub_1BDD21978()
{
  if (qword_1EA0DF9A0 != -1) {
    swift_once();
  }
  return &qword_1EA0DF9A8;
}

uint64_t static CalculateExpression.Operation.digitA.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DF9A0);
}

uint64_t sub_1BDD219E8()
{
  type metadata accessor for CalculateExpression.LiteralOperation();
  uint64_t result = sub_1BDCF6A7C(66, 0xE100000000000000);
  qword_1EA0DF9B8 = result;
  return result;
}

uint64_t *sub_1BDD21A24()
{
  if (qword_1EA0DF9B0 != -1) {
    swift_once();
  }
  return &qword_1EA0DF9B8;
}

uint64_t static CalculateExpression.Operation.digitB.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DF9B0);
}

uint64_t sub_1BDD21A94()
{
  type metadata accessor for CalculateExpression.LiteralOperation();
  uint64_t result = sub_1BDCF6A7C(67, 0xE100000000000000);
  qword_1EA0DF9C8 = result;
  return result;
}

uint64_t *sub_1BDD21AD0()
{
  if (qword_1EA0DF9C0 != -1) {
    swift_once();
  }
  return &qword_1EA0DF9C8;
}

uint64_t static CalculateExpression.Operation.digitC.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DF9C0);
}

uint64_t sub_1BDD21B40()
{
  type metadata accessor for CalculateExpression.LiteralOperation();
  uint64_t result = sub_1BDCF6A7C(68, 0xE100000000000000);
  qword_1EA0DF9D8 = result;
  return result;
}

uint64_t *sub_1BDD21B7C()
{
  if (qword_1EA0DF9D0 != -1) {
    swift_once();
  }
  return &qword_1EA0DF9D8;
}

uint64_t static CalculateExpression.Operation.digitD.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DF9D0);
}

uint64_t sub_1BDD21BEC()
{
  type metadata accessor for CalculateExpression.LiteralOperation();
  uint64_t result = sub_1BDCF6A7C(69, 0xE100000000000000);
  qword_1EA0DF9E8 = result;
  return result;
}

uint64_t *sub_1BDD21C28()
{
  if (qword_1EA0DF9E0 != -1) {
    swift_once();
  }
  return &qword_1EA0DF9E8;
}

uint64_t static CalculateExpression.Operation.digitE.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DF9E0);
}

uint64_t sub_1BDD21C98()
{
  type metadata accessor for CalculateExpression.LiteralOperation();
  uint64_t result = sub_1BDCF6A7C(70, 0xE100000000000000);
  qword_1EA0DF9F8 = result;
  return result;
}

uint64_t *sub_1BDD21CD4()
{
  if (qword_1EA0DF9F0 != -1) {
    swift_once();
  }
  return &qword_1EA0DF9F8;
}

uint64_t static CalculateExpression.Operation.digitF.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DF9F0);
}

uint64_t sub_1BDD21D44()
{
  type metadata accessor for CalculateExpression.LiteralOperation();
  uint64_t result = sub_1BDCF6A7C(12336, 0xE200000000000000);
  qword_1EA0DFA08 = result;
  return result;
}

uint64_t *sub_1BDD21D80()
{
  if (qword_1EA0DFA00 != -1) {
    swift_once();
  }
  return &qword_1EA0DFA08;
}

uint64_t static CalculateExpression.Operation.digit00.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DFA00);
}

uint64_t sub_1BDD21DF0()
{
  type metadata accessor for CalculateExpression.LiteralOperation();
  uint64_t result = sub_1BDCF6A7C(17990, 0xE200000000000000);
  qword_1EA0DFA18 = result;
  return result;
}

uint64_t *sub_1BDD21E2C()
{
  if (qword_1EA0DFA10 != -1) {
    swift_once();
  }
  return &qword_1EA0DFA18;
}

uint64_t static CalculateExpression.Operation.digitFF.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DFA10);
}

uint64_t sub_1BDD21E9C()
{
  type metadata accessor for CalculateExpression.BasicOperatorOperation();
  uint64_t result = sub_1BDCF60D4(4476481, 0xE300000000000000);
  qword_1EA0DFA28 = result;
  return result;
}

uint64_t *sub_1BDD21EDC()
{
  if (qword_1EA0DFA20 != -1) {
    swift_once();
  }
  return &qword_1EA0DFA28;
}

uint64_t static CalculateExpression.Operation.and.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DFA20);
}

uint64_t sub_1BDD21F4C()
{
  type metadata accessor for CalculateExpression.BasicOperatorOperation();
  uint64_t result = sub_1BDCF60D4(21071, 0xE200000000000000);
  qword_1EA0DFA38 = result;
  return result;
}

uint64_t *sub_1BDD21F88()
{
  if (qword_1EA0DFA30 != -1) {
    swift_once();
  }
  return &qword_1EA0DFA38;
}

uint64_t static CalculateExpression.Operation.or.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DFA30);
}

uint64_t sub_1BDD21FF8()
{
  type metadata accessor for CalculateExpression.BasicOperatorOperation();
  uint64_t result = sub_1BDCF60D4(5394254, 0xE300000000000000);
  qword_1EA0DFA48 = result;
  return result;
}

uint64_t *sub_1BDD22038()
{
  if (qword_1EA0DFA40 != -1) {
    swift_once();
  }
  return &qword_1EA0DFA48;
}

uint64_t static CalculateExpression.Operation.nor.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DFA40);
}

uint64_t sub_1BDD220A8()
{
  type metadata accessor for CalculateExpression.BasicOperatorOperation();
  uint64_t result = sub_1BDCF60D4(5394264, 0xE300000000000000);
  qword_1EA0DFA58 = result;
  return result;
}

uint64_t *sub_1BDD220E8()
{
  if (qword_1EA0DFA50 != -1) {
    swift_once();
  }
  return &qword_1EA0DFA58;
}

uint64_t static CalculateExpression.Operation.xor.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DFA50);
}

uint64_t sub_1BDD22158()
{
  type metadata accessor for CalculateExpression.BasicOperatorOperation();
  uint64_t result = sub_1BDCF60D4(6582125, 0xE300000000000000);
  qword_1EA0DFA68 = result;
  return result;
}

uint64_t *sub_1BDD22198()
{
  if (qword_1EA0DFA60 != -1) {
    swift_once();
  }
  return &qword_1EA0DFA68;
}

uint64_t static CalculateExpression.Operation.mod.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DFA60);
}

uint64_t sub_1BDD22208(uint64_t a1)
{
  return sub_1BDD224C8(a1, 29, 49, 0xE100000000000000, &qword_1EA0DFA78);
}

uint64_t *sub_1BDD22220()
{
  if (qword_1EA0DFA70 != -1) {
    swift_once();
  }
  return &qword_1EA0DFA78;
}

uint64_t static CalculateExpression.Operation.leftShift.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DFA70);
}

uint64_t sub_1BDD22290(uint64_t a1)
{
  return sub_1BDD224C8(a1, 30, 49, 0xE100000000000000, &qword_1EA0DFA88);
}

uint64_t *sub_1BDD222A8()
{
  if (qword_1EA0DFA80 != -1) {
    swift_once();
  }
  return &qword_1EA0DFA88;
}

uint64_t static CalculateExpression.Operation.rightShift.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DFA80);
}

uint64_t sub_1BDD22318(uint64_t a1)
{
  return sub_1BDD224C8(a1, 29, 0, 0xE000000000000000, &qword_1EA0DFA98);
}

uint64_t *sub_1BDD22330()
{
  if (qword_1EA0DFA90 != -1) {
    swift_once();
  }
  return &qword_1EA0DFA98;
}

uint64_t static CalculateExpression.Operation.leftShiftCustom.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DFA90);
}

uint64_t sub_1BDD223A0(uint64_t a1)
{
  return sub_1BDD224C8(a1, 30, 0, 0xE000000000000000, &qword_1EA0DFAA8);
}

uint64_t *sub_1BDD223B8()
{
  if (qword_1EA0DFAA0 != -1) {
    swift_once();
  }
  return &qword_1EA0DFAA8;
}

uint64_t static CalculateExpression.Operation.rightShiftCustom.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DFAA0);
}

uint64_t sub_1BDD22428(uint64_t a1)
{
  return sub_1BDD224C8(a1, 31, 49, 0xE100000000000000, &qword_1EA0DFAB8);
}

uint64_t *sub_1BDD22440()
{
  if (qword_1EA0DFAB0 != -1) {
    swift_once();
  }
  return &qword_1EA0DFAB8;
}

uint64_t static CalculateExpression.Operation.leftRotate.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DFAB0);
}

uint64_t sub_1BDD224B0(uint64_t a1)
{
  return sub_1BDD224C8(a1, 32, 49, 0xE100000000000000, &qword_1EA0DFAC8);
}

uint64_t sub_1BDD224C8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  type metadata accessor for CalculateExpression.ShiftOperation();
  char v10 = a2;
  uint64_t result = sub_1BDD03DDC(&v10, a3, a4);
  *a5 = result;
  return result;
}

uint64_t *sub_1BDD2252C()
{
  if (qword_1EA0DFAC0 != -1) {
    swift_once();
  }
  return &qword_1EA0DFAC8;
}

uint64_t static CalculateExpression.Operation.rightRotate.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DFAC0);
}

uint64_t sub_1BDD2259C()
{
  type metadata accessor for CalculateExpression.FlipOperation();
  uint64_t result = sub_1BDD03CEC(56, 0xE100000000000000);
  qword_1EA0DFAD8 = result;
  return result;
}

uint64_t *sub_1BDD225D8()
{
  if (qword_1EA0DFAD0 != -1) {
    swift_once();
  }
  return &qword_1EA0DFAD8;
}

uint64_t static CalculateExpression.Operation.byteFlip.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DFAD0);
}

uint64_t sub_1BDD22648()
{
  type metadata accessor for CalculateExpression.FlipOperation();
  uint64_t result = sub_1BDD03CEC(13873, 0xE200000000000000);
  qword_1EA0DFAE8 = result;
  return result;
}

uint64_t *sub_1BDD22684()
{
  if (qword_1EA0DFAE0 != -1) {
    swift_once();
  }
  return &qword_1EA0DFAE8;
}

uint64_t static CalculateExpression.Operation.wordFlip.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DFAE0);
}

uint64_t sub_1BDD226F4()
{
  type metadata accessor for CalculateExpression.NotOperation();
  uint64_t result = sub_1BDCF6A48();
  qword_1EA0DFAF8 = result;
  return result;
}

uint64_t *sub_1BDD22728()
{
  if (qword_1EA0DFAF0 != -1) {
    swift_once();
  }
  return &qword_1EA0DFAF8;
}

uint64_t static CalculateExpression.Operation.not.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DFAF0);
}

uint64_t sub_1BDD22798()
{
  type metadata accessor for CalculateExpression.NegOperation();
  uint64_t result = sub_1BDCF6A48();
  qword_1EA0DFB08 = result;
  return result;
}

uint64_t *sub_1BDD227CC()
{
  if (qword_1EA0DFB00 != -1) {
    swift_once();
  }
  return &qword_1EA0DFB08;
}

uint64_t static CalculateExpression.Operation.neg.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DFB00);
}

uint64_t sub_1BDD2283C(uint64_t a1)
{
  return sub_1BDD228B8(a1, &qword_1EA0DFAF0, &qword_1EA0DFAF8, &qword_1EA0DFB18);
}

uint64_t static CalculateExpression.Operation.onesComplement.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DFB10);
}

uint64_t sub_1BDD2288C(uint64_t a1)
{
  return sub_1BDD228B8(a1, &qword_1EA0DFB00, &qword_1EA0DFB08, &qword_1EA0DFB28);
}

uint64_t sub_1BDD228B8(uint64_t a1, void *a2, void *a3, void *a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  *a4 = *a3;
  return swift_retain();
}

uint64_t static CalculateExpression.Operation.twosComplement.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DFB20);
}

uint64_t *sub_1BDD22934()
{
  if (qword_1EBA295D0 != -1) {
    swift_once();
  }
  return &qword_1EBA295C8;
}

uint64_t *sub_1BDD22980()
{
  if (qword_1EBA29600 != -1) {
    swift_once();
  }
  return &qword_1EBA295F8;
}

uint64_t *sub_1BDD229CC()
{
  if (qword_1EBA29730 != -1) {
    swift_once();
  }
  return &qword_1EBA29728;
}

uint64_t *sub_1BDD22A18()
{
  if (qword_1EBA29770 != -1) {
    swift_once();
  }
  return &qword_1EBA29768;
}

uint64_t sub_1BDD22A64()
{
  type metadata accessor for CalculateExpression.EnterOperation();
  uint64_t result = sub_1BDCF6A48();
  qword_1EA0DFB38 = result;
  return result;
}

uint64_t *sub_1BDD22A98()
{
  if (qword_1EA0DFB30 != -1) {
    swift_once();
  }
  return &qword_1EA0DFB38;
}

uint64_t static CalculateExpression.Operation.enter.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DFB30);
}

uint64_t sub_1BDD22B08()
{
  type metadata accessor for CalculateExpression.RootOperation();
  char v0 = sub_1BDD013AC();
  uint64_t result = sub_1BDCF5FD8(121, 0xE100000000000000, v0 & 1);
  qword_1EA0DFB48 = result;
  return result;
}

uint64_t *sub_1BDD22B4C()
{
  if (qword_1EA0DFB40 != -1) {
    swift_once();
  }
  return &qword_1EA0DFB48;
}

uint64_t static CalculateExpression.Operation.reverseRoot.getter()
{
  return sub_1BDCF69AC(&qword_1EA0DFB40);
}

uint64_t static CalculateExpression.Operation.delete.getter()
{
  return sub_1BDCF69AC(&qword_1EBA29640);
}

BOOL static CalculateExpression.Operation.Mode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CalculateExpression.Operation.Mode.hash(into:)()
{
  return sub_1BDDB0568();
}

uint64_t CalculateExpression.Operation.Mode.hashValue.getter()
{
  return sub_1BDDB0578();
}

void sub_1BDD22C68(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1BDD22C70()
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v0 + 80))(&var1);
  uint64_t v1 = var1;
  if (!(_BYTE)var1) {
    uint64_t v1 = 0;
  }
  if (var1 - 2 >= 2) {
    return v1;
  }
  else {
    return 2;
  }
}

uint64_t CalculateExpression.Operation.deinit()
{
  return v0;
}

uint64_t CalculateExpression.Operation.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t sub_1BDD22CF4()
{
  return swift_allocObject();
}

BOOL static CalculateExpression.Operation.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t CalculateExpression.Operation.hash(into:)()
{
  return sub_1BDDB0568();
}

uint64_t CalculateExpression.Operation.hashValue.getter()
{
  return sub_1BDDB0578();
}

uint64_t sub_1BDD22D84()
{
  return sub_1BDDB0578();
}

uint64_t sub_1BDD22DCC()
{
  return sub_1BDDB0568();
}

uint64_t sub_1BDD22DF8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CalculateExpression.Operation();
  uint64_t result = sub_1BDDB0358();
  *a1 = result;
  return result;
}

uint64_t sub_1BDD22E38(void (*a1)(void, void), uint64_t *a2)
{
  uint64_t v6 = (uint64_t (*)(unsigned __int8 *))a2[1];
  uint64_t v7 = (uint64_t (*)(unsigned __int8 *))((char *)v6 - 1);
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
    goto LABEL_19;
  }
  char v5 = a1;
  uint64_t v8 = *a2;
  uint64_t v24 = (uint64_t)v6 - 1;
  char v2 = *(uint64_t (**)(char *))(*(void *)v8 + 416);
  uint64_t v3 = *(void *)v8 + 416;
  swift_retain();
  uint64_t v9 = v2((char *)v6 - 1);
  if (!v9
    || (unsigned __int8 v10 = *(unsigned char *)(v9 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type),
        swift_release(),
        v23[0] = v10,
        sub_1BDCF0848(),
        uint64_t result = sub_1BDDAFD28(),
        (result & 1) == 0))
  {
LABEL_6:
    sub_1BDD231C0(&v24);
    type metadata accessor for CalculateExpression.RichToken();
    v23[0] = 16;
    char v12 = sub_1BDD013AC();
    uint64_t v13 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v23, v12 & 1);
    uint64_t v4 = (uint64_t)v6 + 1;
    if (!__OFADD__(v6, 1))
    {
      uint64_t v3 = v13;
      char v22 = v5;
      uint64_t v14 = (uint64_t (**)(unsigned __int8 *))(*(void *)v8 + 408);
      char v2 = (uint64_t (*)(char *))v14;
      uint64_t v7 = *v14;
      char v5 = (void (*)(void, void))(*v14)(v23);
      if (!(*v15 >> 62))
      {
        uint64_t v16 = *(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v16 >= v4) {
          goto LABEL_9;
        }
        goto LABEL_21;
      }
LABEL_20:
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
      if (v16 >= v4)
      {
LABEL_9:
        if ((v4 & 0x8000000000000000) == 0)
        {
          sub_1BDD0572C(v4, v4, v3);
          v5(v23, 0);
          uint64_t v3 = (uint64_t)v6 + 2;
          if (!__OFADD__(v6, 2))
          {
            uint64_t v16 = (uint64_t)v22;
            swift_retain();
            uint64_t v6 = v7;
            uint64_t v4 = v7(v23);
            if (!(*v17 >> 62))
            {
              if (*(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= v3) {
                goto LABEL_13;
              }
              goto LABEL_25;
            }
LABEL_24:
            swift_bridgeObjectRetain();
            uint64_t v20 = sub_1BDDB0448();
            swift_bridgeObjectRelease();
            if (v20 >= v3)
            {
LABEL_13:
              if ((v3 & 0x8000000000000000) == 0)
              {
                sub_1BDD0572C(v3, v3, v16);
                ((void (*)(unsigned __int8 *, void))v4)(v23, 0);
                v23[0] = 15;
                char v18 = sub_1BDD013AC();
                uint64_t v7 = (uint64_t (*)(unsigned __int8 *))CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v23, v18 & 1);
                uint64_t v3 = v24;
                uint64_t result = v6(v23);
                char v2 = (uint64_t (*)(char *))result;
                if (!(*v19 >> 62))
                {
                  if (*(void *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= v3) {
                    goto LABEL_16;
                  }
                  goto LABEL_28;
                }
LABEL_27:
                swift_bridgeObjectRetain();
                uint64_t v21 = sub_1BDDB0448();
                uint64_t result = swift_bridgeObjectRelease();
                if (v21 >= v3)
                {
LABEL_16:
                  if ((v3 & 0x8000000000000000) == 0)
                  {
                    sub_1BDD0572C(v3, v3, (uint64_t)v7);
                    ((void (*)(unsigned __int8 *, void))v2)(v23, 0);
                    return swift_release();
                  }
                  goto LABEL_29;
                }
LABEL_28:
                __break(1u);
LABEL_29:
                __break(1u);
                goto LABEL_30;
              }
LABEL_26:
              __break(1u);
              goto LABEL_27;
            }
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!__OFSUB__(v7, 1))
  {
    uint64_t v24 = (uint64_t)v6 - 2;
    goto LABEL_6;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BDD231C0(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (uint64_t (**)(uint64_t))(*v1 + 416);
  char v5 = *v4;
  uint64_t v6 = (*v4)(*a1);
  if (v6)
  {
    char v7 = *(unsigned char *)(v6 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    BYTE4(v24) = v7;
    BYTE3(v24) = 7;
    sub_1BDCF0848();
    if (sub_1BDDAFD28())
    {
      uint64_t v8 = v5(v3);
      if (!v8
        || (uint64_t v9 = (*(uint64_t (**)(void))(*(void *)v8 + 256))(), v10 = swift_release(), !v9)
        || (char v11 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 568))(v10), swift_release(), (v11 & 1) == 0))
      {
        uint64_t result = v5(v3);
        if (!result
          || (uint64_t v13 = (*(uint64_t (**)(void))(*(void *)result + 256))(), result = swift_release(), !v13)
          || ((*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v13 + 272))(&v24, result),
              swift_release(),
              sub_1BDD18E9C(),
              uint64_t result = sub_1BDDAFD28(),
              (result & 1) == 0))
        {
          BOOL v14 = __OFSUB__(v3--, 1);
          if (v14)
          {
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
          *a1 = v3;
          uint64_t v15 = v5(v3);
          if (v15)
          {
            char v16 = *(unsigned char *)(v15 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
            swift_release();
            BYTE2(v24) = v16;
            BYTE1(v24) = 17;
            uint64_t result = sub_1BDDAFD28();
            if (result)
            {
              BOOL v14 = __OFSUB__(v3--, 1);
              if (v14)
              {
LABEL_32:
                __break(1u);
                return result;
              }
              *a1 = v3;
            }
          }
        }
      }
    }
  }
  uint64_t v17 = v5(v3);
  if (v17)
  {
    char v18 = *(unsigned char *)(v17 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    char v25 = v18;
    HIBYTE(v24) = 8;
    sub_1BDCF0848();
    uint64_t result = sub_1BDDAFD28();
    if (result)
    {
      BOOL v14 = __OFSUB__(v3--, 1);
      if (v14)
      {
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      *a1 = v3;
      uint64_t v19 = v5(v3);
      if (v19)
      {
        char v20 = *(unsigned char *)(v19 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        swift_release();
        BYTE6(v24) = v20;
        BYTE5(v24) = 17;
        uint64_t result = sub_1BDDAFD28();
        if (result)
        {
          BOOL v14 = __OFSUB__(v3--, 1);
          if (v14)
          {
LABEL_31:
            __break(1u);
            goto LABEL_32;
          }
          *a1 = v3;
        }
      }
    }
  }
  uint64_t result = v5(v3);
  if (!result) {
    return result;
  }
  char v21 = *(unsigned char *)(result + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  char v29 = v21;
  char v28 = 16;
  sub_1BDCF0848();
  uint64_t result = sub_1BDDAFD28();
  if ((result & 1) == 0) {
    return result;
  }
  uint64_t result = sub_1BDD2365C((uint64_t)a1);
  uint64_t v22 = *a1 - 1;
  if (__OFSUB__(*a1, 1)) {
    goto LABEL_29;
  }
  uint64_t result = v5(*a1 - 1);
  if (result)
  {
    char v23 = *(unsigned char *)(result + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    char v27 = v23;
    char v26 = 10;
    uint64_t result = sub_1BDDAFD28();
    if (result) {
      *a1 = v22;
    }
  }
  return result;
}

uint64_t CalculateExpression.RichExpression.EditingToken.expression.getter()
{
  return swift_retain();
}

uint64_t CalculateExpression.RichExpression.EditingToken.tokenIndex.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t CalculateExpression.RichExpression.EditingToken.depth.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t CalculateExpression.RichExpression.EditingToken.child.getter()
{
  return swift_retain();
}

uint64_t CalculateExpression.RichExpression.EditingToken.token.getter()
{
  return (*(uint64_t (**)(void))(*(void *)*v0 + 416))(v0[1]);
}

uint64_t sub_1BDD2365C(uint64_t result)
{
  if ((*(void *)result & 0x8000000000000000) != 0) {
    return result;
  }
  char v2 = (void *)result;
  uint64_t v3 = 0;
  uint64_t v4 = *(uint64_t (**)(void))(*(void *)v1 + 392);
  for (uint64_t i = *(void *)result + 4; ; --i)
  {
    uint64_t v7 = i - 4;
    uint64_t result = v4();
    if ((result & 0xC000000000000001) == 0) {
      break;
    }
    uint64_t v8 = MEMORY[0x1C18862A0](i - 4, result);
LABEL_8:
    swift_bridgeObjectRelease();
    unsigned __int8 v9 = *(unsigned char *)(v8 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    unsigned __int8 v15 = v9;
    unsigned __int8 v14 = 16;
    uint64_t result = static CalculateExpression.TokenType.== infix(_:_:)(&v15, &v14);
    if (result)
    {
      BOOL v6 = __OFADD__(v3++, 1);
      if (v6) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t result = v4();
      if ((result & 0xC000000000000001) != 0)
      {
        uint64_t v10 = MEMORY[0x1C18862A0](i - 4, result);
      }
      else
      {
        if ((unint64_t)v7 >= *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_21;
        }
        uint64_t v10 = *(void *)(result + 8 * i);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      unsigned __int8 v11 = *(unsigned char *)(v10 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      swift_release();
      unsigned __int8 v13 = v11;
      unsigned __int8 v12 = 15;
      uint64_t result = static CalculateExpression.TokenType.== infix(_:_:)(&v13, &v12);
      if (result)
      {
        BOOL v6 = __OFSUB__(v3--, 1);
        if (v6) {
          goto LABEL_22;
        }
        if (v3 < 1) {
          return result;
        }
      }
    }
    void *v2 = i - 5;
    if (v7 <= 0) {
      return result;
    }
  }
  if ((unint64_t)v7 < *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v8 = *(void *)(result + 8 * i);
    swift_retain();
    goto LABEL_8;
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

BOOL sub_1BDD2381C(uint64_t a1)
{
  uint64_t v3 = (uint64_t (**)(void))(*v1 + 392);
  uint64_t v4 = *v3;
  unint64_t v5 = (*v3)();
  if (v5 >> 62) {
    goto LABEL_23;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  uint64_t v7 = swift_bridgeObjectRelease();
  if (v6 <= a1) {
    return 0;
  }
  uint64_t v8 = 0;
  if ((a1 & 0x8000000000000000) == 0)
  {
    do
    {
      uint64_t v11 = ((uint64_t (*)(uint64_t))v4)(v7);
      if ((v11 & 0xC000000000000001) != 0)
      {
        uint64_t v12 = MEMORY[0x1C18862A0](a1, v11);
      }
      else
      {
        if ((unint64_t)a1 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_21:
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          uint64_t v6 = sub_1BDDB0448();
          goto LABEL_3;
        }
        uint64_t v12 = *(void *)(v11 + 8 * a1 + 32);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      unsigned __int8 v13 = *(unsigned char *)(v12 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      unsigned __int8 v19 = v13;
      unsigned __int8 v18 = 16;
      if (static CalculateExpression.TokenType.== infix(_:_:)(&v19, &v18))
      {
        uint64_t v7 = swift_release();
        BOOL v9 = __OFSUB__(v8--, 1);
        if (v9) {
          goto LABEL_21;
        }
      }
      else
      {
        unsigned __int8 v17 = v13;
        unsigned __int8 v16 = 15;
        BOOL v14 = static CalculateExpression.TokenType.== infix(_:_:)(&v17, &v16);
        uint64_t v7 = swift_release();
        if (v14)
        {
          BOOL v9 = __OFADD__(v8++, 1);
          if (v9) {
            goto LABEL_22;
          }
        }
      }
    }
    while (a1-- > 0);
  }
  return v8 > 0;
}

uint64_t CalculateExpression.RichExpression.editingToken(matching:)@<X0>(uint64_t (*a1)(void *)@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = sub_1BDD23C1C(0);
  sub_1BDD23A3C(v4, a1, a2);
  return swift_bridgeObjectRelease();
}

uint64_t CalculateExpression.RichExpression.editingTokens()()
{
  return sub_1BDD23C1C(0);
}

double sub_1BDD23A3C@<D0>(uint64_t a1@<X0>, uint64_t (*a2)(void *)@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    unsigned __int8 v13 = a3;
    uint64_t v4 = (uint64_t *)(swift_bridgeObjectRetain() + 32 * v3 + 16);
    do
    {
      uint64_t v6 = *(v4 - 2);
      uint64_t v5 = *(v4 - 1);
      uint64_t v7 = *v4;
      uint64_t v8 = v4[1];
      BOOL v9 = *(uint64_t (**)(uint64_t))(*(void *)v6 + 296);
      swift_retain();
      uint64_t v10 = swift_retain_n();
      if (v9(v10))
      {
        v16[0] = v6;
        v16[1] = v5;
        v16[2] = v7;
        v16[3] = v8;
        if ((a2(v16) & 1) != 0
          || ((*(void (**)(uint64_t *__return_ptr))(*(void *)v6 + 272))(&v19),
              char v18 = v19,
              char v17 = 0,
              sub_1BDD24410(),
              sub_1BDDAFF98(),
              sub_1BDDAFF98(),
              v16[0] == v15))
        {
          swift_bridgeObjectRelease();
          swift_release();
LABEL_12:
          *unsigned __int8 v13 = v6;
          v13[1] = v5;
          v13[2] = v7;
          v13[3] = v8;
          return result;
        }
        BOOL v11 = sub_1BDD2381C(v5);
        swift_release();
        if (v11)
        {
          swift_bridgeObjectRelease();
          goto LABEL_12;
        }
      }
      else
      {
        swift_release();
      }
      swift_release();
      --v3;
      v4 -= 4;
      swift_release();
    }
    while (v3);
    swift_bridgeObjectRelease();
    a3 = v13;
  }
  double result = 0.0;
  *a3 = 0u;
  a3[1] = 0u;
  return result;
}

uint64_t sub_1BDD23C1C(uint64_t a1)
{
  char v2 = v1;
  unint64_t v4 = (*(uint64_t (**)(void))(*v1 + 392))();
  if (v4 >> 62) {
    uint64_t v5 = sub_1BDDB0448();
  }
  else {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v7 = v5 - 1;
  if (__OFSUB__(v5, 1))
  {
    __break(1u);
  }
  else
  {
    if ((v7 & 0x8000000000000000) == 0)
    {
      uint64_t v8 = *(uint64_t (**)(uint64_t))(*v1 + 416);
      do
      {
        uint64_t v10 = v8(--v5);
        if (!v10)
        {
          uint64_t v7 = v5;
          goto LABEL_14;
        }
        uint64_t v11 = v10;
        char v12 = *(unsigned char *)(v10 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        LOBYTE(v24) = v12;
        LOBYTE(v23) = 16;
        if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v24, (unsigned __int8 *)&v23)
          && ((*(uint64_t (**)(void))(*(void *)v11 + 232))() & 1) != 0)
        {
          swift_release();
        }
        else
        {
          LOBYTE(v24) = v12;
          LOBYTE(v23) = 17;
          BOOL v9 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v24, (unsigned __int8 *)&v23);
          swift_release();
          if (!v9) {
            goto LABEL_14;
          }
        }
        --v7;
      }
      while (v5 >= 1);
      uint64_t v7 = -1;
    }
LABEL_14:
    uint64_t v24 = v7;
    unsigned __int8 v13 = (uint64_t (**)(uint64_t))(*v2 + 416);
    BOOL v14 = *v13;
    uint64_t v15 = (*v13)(v7);
    uint64_t v16 = v7;
    if (v15)
    {
      char v17 = *(unsigned char *)(v15 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      LOBYTE(v23) = v17;
      sub_1BDCF0848();
      if (sub_1BDDAFD28() & 1) != 0 || (LOBYTE(v23) = v17, (sub_1BDDAFD28()))
      {
        swift_release();
        uint64_t v16 = v7;
      }
      else
      {
        sub_1BDD231C0(&v24);
        swift_release();
        uint64_t v16 = v24;
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269D8);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1BDDB37C0;
    swift_retain();
    uint64_t v19 = v14(v16);
    *(void *)(v18 + 32) = v2;
    *(void *)(v18 + 40) = v7;
    *(void *)(v18 + 48) = a1;
    *(void *)(v18 + 56) = v19;
    uint64_t v23 = v18;
    uint64_t v20 = v14(v16);
    if (!v20) {
      return v23;
    }
    uint64_t v21 = v20;
    if ((*(uint64_t (**)(void))(*(void *)v20 + 256))())
    {
      uint64_t result = a1 + 1;
      if (!__OFADD__(a1, 1)) {
        goto LABEL_26;
      }
      __break(1u);
    }
    if (!(*(uint64_t (**)(void))(*(void *)v21 + 280))()) {
      goto LABEL_27;
    }
    uint64_t result = a1 + 1;
    if (!__OFADD__(a1, 1))
    {
LABEL_26:
      uint64_t v22 = sub_1BDD23C1C(result);
      sub_1BDD23FB4(v22);
      swift_release();
LABEL_27:
      swift_release();
      return v23;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDD23FB4(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_1BDD24464((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t *v1 = v3;
    return result;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1BDD240A4()
{
  return MEMORY[0x1E4FBB060];
}

uint64_t method lookup function for CalculateExpression.Operation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalculateExpression.Operation);
}

uint64_t dispatch thunk of CalculateExpression.Operation.mode.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 80))();
}

uint64_t dispatch thunk of CalculateExpression.Operation.operandCount.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

unsigned char *_s9OperationC4ModeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDD241FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CalculateExpression.Operation.Mode()
{
  return &type metadata for CalculateExpression.Operation.Mode;
}

uint64_t _s12EditingTokenVwxx()
{
  swift_release();
  return swift_release();
}

uint64_t _s12EditingTokenVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_retain();
  return a1;
}

void *_s12EditingTokenVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s12EditingTokenVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t _s12EditingTokenVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s12EditingTokenVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CalculateExpression.RichExpression.EditingToken()
{
  return &type metadata for CalculateExpression.RichExpression.EditingToken;
}

unint64_t sub_1BDD24410()
{
  unint64_t result = qword_1EBA26878;
  if (!qword_1EBA26878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBA26878);
  }
  return result;
}

char *sub_1BDD24464(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269D8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unsigned __int8 v13 = v10 + 32;
  BOOL v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

id sub_1BDD24568()
{
  if (MEMORY[0x1E4FA80B0]) {
    BOOL v0 = MEMORY[0x1E4FA8098] == 0;
  }
  else {
    BOOL v0 = 1;
  }
  if (v0 || MEMORY[0x1E4FA80B8] == 0 || MEMORY[0x1E4FA80A8] == 0 || MEMORY[0x1E4FA80A0] == 0) {
    unsigned int v4 = (objc_class *)type metadata accessor for StocksKitCurrencyCache();
  }
  else {
    unsigned int v4 = (objc_class *)type metadata accessor for StocksKitCurrencyCacheImpl();
  }
  id result = objc_msgSend(objc_allocWithZone(v4), sel_init);
  qword_1EBA29B20 = (uint64_t)result;
  return result;
}

id StocksKitCurrencyCache.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

uint64_t *sub_1BDD24614()
{
  if (qword_1EBA29B28 != -1) {
    swift_once();
  }
  return &qword_1EBA29B20;
}

id static StocksKitCurrencyCache.shared.getter()
{
  if (qword_1EBA29B28 != -1) {
    swift_once();
  }
  BOOL v0 = (void *)qword_1EBA29B20;
  return v0;
}

BOOL static StocksKitCurrencyCache.isEnabled.getter()
{
  if (MEMORY[0x1E4FA80A0]) {
    BOOL v0 = MEMORY[0x1E4FA80A8] == 0;
  }
  else {
    BOOL v0 = 1;
  }
  return !v0 && MEMORY[0x1E4FA80B8] != 0 && MEMORY[0x1E4FA8098] != 0 && MEMORY[0x1E4FA80B0] != 0;
}

uint64_t sub_1BDD247A0()
{
  return sub_1BDD249D8(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 0);
}

uint64_t sub_1BDD24940(const void *a1)
{
  uint64_t v2 = (void (**)(void *, void))_Block_copy(a1);
  v2[2](v2, 0);
  _Block_release(v2);
  int v3 = *(uint64_t (**)(void))(v1 + 8);
  return sub_1BDD2CE08(v3);
}

uint64_t sub_1BDD249D8(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_1BDD24B60(const void *a1)
{
  uint64_t v2 = (void (**)(void *, void))_Block_copy(a1);
  v2[2](v2, 0);
  _Block_release(v2);
  int v3 = *(uint64_t (**)(void))(v1 + 8);
  return sub_1BDD2CE08(v3);
}

uint64_t sub_1BDD24C10(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1BDD24C30, 0, 0);
}

uint64_t sub_1BDD24C30()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_1BDDAF9C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  int v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

unint64_t sub_1BDD24D3C()
{
  return sub_1BDD24D48(MEMORY[0x1E4FBC860]);
}

unint64_t sub_1BDD24D48(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF1B0);
  uint64_t v2 = (void *)sub_1BDDB0488();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unsigned int v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    int64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_1BDD13EB4(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    int64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *int64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t StocksKitCurrencyCache.ProviderData.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StocksKitCurrencyCache.ProviderData.destination.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StocksKitCurrencyCache.ProviderData();
  return sub_1BDD19A60(v1 + *(int *)(v3 + 20), a1, &qword_1EBA26850);
}

uint64_t type metadata accessor for StocksKitCurrencyCache.ProviderData()
{
  uint64_t result = qword_1EBA29B10;
  if (!qword_1EBA29B10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t StocksKitCurrencyCache.ProviderData.logo.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for StocksKitCurrencyCache.ProviderData() + 24));
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  unint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1BDD24F78(v4, v5, v6, v7);
}

uint64_t sub_1BDD24F78(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2 >> 60 != 15)
  {
    sub_1BDD24FC8(result, a2);
    return sub_1BDD25020(a3, a4);
  }
  return result;
}

uint64_t sub_1BDD24FC8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1BDD25020(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1BDD24FC8(a1, a2);
  }
  return a1;
}

uint64_t sub_1BDD25034(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t StocksKitCurrencyCache.ProviderLogo.light.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_1BDD24FC8(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t StocksKitCurrencyCache.ProviderLogo.dark.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1BDD25020(v1, *(void *)(v0 + 24));
  return v1;
}

double StocksKitCurrencyCache.ProviderLogo.scale.getter()
{
  return *(double *)(v0 + 32);
}

uint64_t sub_1BDD2510C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1BDD2512C, 0, 0);
}

uint64_t sub_1BDD2512C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for StocksKitCurrencyCache.ProviderData();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

id StocksKitCurrencyCache.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StocksKitCurrencyCache();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for StocksKitCurrencyCache()
{
  return self;
}

id StocksKitCurrencyCache.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StocksKitCurrencyCache();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t StocksKitCurrencyCacheImpl.refresh()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1BDD252B8, 0, 0);
}

uint64_t sub_1BDD252B8()
{
  uint64_t v1 = sub_1BDDAFC28();
  v0[3] = v1;
  v0[4] = *(void *)(v1 - 8);
  uint64_t v2 = swift_task_alloc();
  v0[5] = v2;
  sub_1BDDAFBA8();
  v0[6] = sub_1BDDAFB98();
  uint64_t v3 = sub_1BDDAFB68();
  v0[7] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v0[8] = v4;
  uint64_t v5 = swift_task_alloc();
  v0[9] = v5;
  (*(void (**)(void))(v4 + 104))();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[10] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1BDD2547C;
  return MEMORY[0x1F415C888](v2, v5, 0x158E460913D00000, 1, 0);
}

uint64_t sub_1BDD2547C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[8] + 8))(v2[9], v2[7]);
  swift_release();
  if (v0)
  {
    uint64_t v3 = sub_1BDD25758;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = sub_1BDD2560C;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

void sub_1BDD2560C()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[5];
  uint64_t v3 = *(void *)(v0[2] + OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_currencyDataLock);
  *(void *)(swift_task_alloc() + 16) = v2;
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1BDD2588C(v4);
  os_unfair_lock_unlock(v5);
  if (!v1)
  {
    uint64_t v7 = v0[4];
    uint64_t v6 = v0[5];
    uint64_t v8 = v0[3];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_task_dealloc();
    uint64_t v9 = (void (*)(BOOL))v0[1];
    BOOL v10 = v0[11] == 0;
    v9(v10);
  }
}

uint64_t sub_1BDD25758()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_currencyDataLock);
  uint64_t v3 = v2 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v2 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_1BDD25874(v3);
  os_unfair_lock_unlock(v4);

  uint64_t v5 = *(uint64_t (**)(BOOL))(v0 + 8);
  BOOL v6 = *(void *)(v0 + 88) == 0;
  return v5(v6);
}

uint64_t sub_1BDD25874(uint64_t a1)
{
  return sub_1BDD260C0(a1);
}

uint64_t sub_1BDD2588C(uint64_t a1)
{
  return sub_1BDD26134(a1);
}

uint64_t sub_1BDD25A0C(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  id v4 = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  void *v5 = v2;
  v5[1] = sub_1BDD2D040;
  v5[2] = v4;
  return MEMORY[0x1F4188298](sub_1BDD252B8, 0, 0);
}

uint64_t StocksKitCurrencyCacheImpl.refresh(timeout:)(double a1)
{
  *(void *)(v2 + 24) = v1;
  *(double *)(v2 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1BDD25AF0, 0, 0);
}

uint64_t sub_1BDD25AF0()
{
  uint64_t v1 = sub_1BDDAFC28();
  v0[4] = v1;
  v0[5] = *(void *)(v1 - 8);
  uint64_t v2 = swift_task_alloc();
  v0[6] = v2;
  sub_1BDDAFBA8();
  v0[7] = sub_1BDDAFB98();
  uint64_t v3 = sub_1BDDB0588();
  uint64_t v5 = v4;
  uint64_t v6 = sub_1BDDAFB68();
  v0[8] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v0[9] = v7;
  uint64_t v8 = swift_task_alloc();
  v0[10] = v8;
  (*(void (**)(void))(v7 + 104))();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[11] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1BDD25CC8;
  return MEMORY[0x1F415C888](v2, v8, v3, v5, 0);
}

uint64_t sub_1BDD25CC8()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[9] + 8))(v2[10], v2[8]);
  swift_release();
  if (v0)
  {
    uint64_t v3 = sub_1BDD25FA4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = sub_1BDD25E58;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

void sub_1BDD25E58()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[6];
  uint64_t v3 = *(void *)(v0[3] + OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_currencyDataLock);
  *(void *)(swift_task_alloc() + 16) = v2;
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1BDD2588C(v4);
  os_unfair_lock_unlock(v5);
  if (!v1)
  {
    uint64_t v7 = v0[5];
    uint64_t v6 = v0[6];
    uint64_t v8 = v0[4];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_task_dealloc();
    uint64_t v9 = (void (*)(BOOL))v0[1];
    BOOL v10 = v0[12] == 0;
    v9(v10);
  }
}

uint64_t sub_1BDD25FA4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_currencyDataLock);
  uint64_t v3 = v2 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v2 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_1BDD25874(v3);
  os_unfair_lock_unlock(v4);

  uint64_t v5 = *(uint64_t (**)(BOOL))(v0 + 8);
  BOOL v6 = *(void *)(v0 + 96) == 0;
  return v5(v6);
}

uint64_t sub_1BDD260C0(uint64_t a1)
{
  sub_1BDCE43CC(a1, &qword_1EBA268D0);
  uint64_t v2 = sub_1BDDAFC28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_1BDD26134(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1BDCE43CC(a1, &qword_1EBA268D0);
  uint64_t v4 = sub_1BDDAFC28();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, v3, v4);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
}

uint64_t sub_1BDD2636C(const void *a1, void *a2, double a3)
{
  v3[2] = a2;
  v3[3] = _Block_copy(a1);
  id v6 = a2;
  uint64_t v7 = swift_task_alloc();
  v3[4] = v7;
  *(void *)uint64_t v7 = v3;
  *(void *)(v7 + 8) = sub_1BDD26440;
  *(void *)(v7 + 24) = v6;
  *(double *)(v7 + 16) = a3;
  return MEMORY[0x1F4188298](sub_1BDD25AF0, 0, 0);
}

uint64_t sub_1BDD26440(char a1)
{
  uint64_t v3 = *(void (***)(void, void))(*v1 + 24);
  uint64_t v4 = *(void **)(*v1 + 16);
  uint64_t v7 = *v1;
  swift_task_dealloc();

  v3[2](v3, a1 & 1);
  _Block_release(v3);
  uint64_t v5 = *(uint64_t (**)(void))(v7 + 8);
  return v5();
}

Swift::Bool __swiftcall StocksKitCurrencyCacheImpl.refreshSynchronously(timeout:)(Swift::Double timeout)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26900);
  MEMORY[0x1F4188790](v3 - 8, v4);
  id v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF0A8);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 20) = 0;
  *(unsigned char *)(v7 + 16) = 0;
  dispatch_semaphore_t v8 = dispatch_semaphore_create(0);
  uint64_t v9 = sub_1BDDB00C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  *(Swift::Double *)(v10 + 32) = timeout;
  *(void *)(v10 + 40) = v1;
  *(void *)(v10 + 48) = v7;
  *(void *)(v10 + 56) = v8;
  id v11 = v1;
  swift_retain();
  uint64_t v12 = v8;
  sub_1BDD27468((uint64_t)v6, (uint64_t)&unk_1EA0DF0B8, v10);
  swift_release();
  sub_1BDDB01A8();
  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 20));
  sub_1BDD27614((unsigned char *)(v7 + 16), &v16);
  os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 20));
  Swift::Bool v13 = v16;

  swift_release();
  return v13;
}

uint64_t sub_1BDD26730(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 32) = a6;
  *(void *)(v7 + 40) = a7;
  *(void *)(v7 + 24) = a5;
  *(double *)(v7 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1BDD26758, 0, 0);
}

uint64_t sub_1BDD26758()
{
  uint64_t v1 = (void *)v0;
  double v2 = *(double *)(v0 + 16);
  uint64_t v3 = sub_1BDDAFC28();
  *(void *)(v0 + 48) = v3;
  *(void *)(v0 + 56) = *(void *)(v3 - 8);
  *(void *)(v0 + 64) = swift_task_alloc();
  uint64_t v4 = swift_task_alloc();
  v1[9] = v4;
  sub_1BDDAFBA8();
  v1[10] = sub_1BDDAFB98();
  if (v2 == 0.0)
  {
    uint64_t v5 = sub_1BDDAFB68();
    v1[16] = v5;
    uint64_t v6 = *(void *)(v5 - 8);
    v1[17] = v6;
    uint64_t v7 = swift_task_alloc();
    v1[18] = v7;
    (*(void (**)(void))(v6 + 104))();
    dispatch_semaphore_t v8 = (void *)swift_task_alloc();
    v1[19] = v8;
    *dispatch_semaphore_t v8 = v1;
    v8[1] = sub_1BDD26D64;
    uint64_t v9 = v4;
    uint64_t v10 = v7;
    uint64_t v11 = 0x158E460913D00000;
    uint64_t v12 = 1;
  }
  else
  {
    uint64_t v13 = sub_1BDDB0588();
    uint64_t v15 = v14;
    uint64_t v16 = sub_1BDDAFB68();
    v1[11] = v16;
    uint64_t v17 = *(void *)(v16 - 8);
    v1[12] = v17;
    uint64_t v18 = swift_task_alloc();
    v1[13] = v18;
    (*(void (**)(void))(v17 + 104))();
    uint64_t v19 = (void *)swift_task_alloc();
    v1[14] = v19;
    *uint64_t v19 = v1;
    v19[1] = sub_1BDD26A40;
    uint64_t v9 = v4;
    uint64_t v10 = v18;
    uint64_t v11 = v13;
    uint64_t v12 = v15;
  }
  return MEMORY[0x1F415C888](v9, v10, v11, v12, 0);
}

uint64_t sub_1BDD26A40()
{
  double v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[12] + 8))(v2[13], v2[11]);
  swift_release();
  if (v0)
  {
    uint64_t v3 = sub_1BDD27088;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = sub_1BDD26BD0;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

void sub_1BDD26BD0()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[3];
  (*(void (**)(uint64_t, void, void))(v0[7] + 32))(v2, v0[9], v0[6]);
  swift_task_dealloc();
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_currencyDataLock);
  *(void *)(swift_task_alloc() + 16) = v2;
  uint64_t v5 = v4 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v4 + 16);
  uint64_t v6 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(void *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v6);
  sub_1BDD2588C(v5);
  os_unfair_lock_unlock(v6);
  if (!v1)
  {
    uint64_t v7 = (os_unfair_lock_s *)v0[4];
    swift_task_dealloc();
    dispatch_semaphore_t v8 = v7 + 4;
    v7 += 5;
    os_unfair_lock_lock(v7);
    sub_1BDD27454(v8);
    os_unfair_lock_unlock(v7);
    (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
    swift_task_dealloc();
    sub_1BDDB01B8();
    uint64_t v9 = (void (*)(void))v0[1];
    v9();
  }
}

uint64_t sub_1BDD26D64()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[17] + 8))(v2[18], v2[16]);
  swift_release();
  if (v0)
  {
    uint64_t v3 = sub_1BDD271E4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = sub_1BDD26EF4;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

void sub_1BDD26EF4()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[3];
  (*(void (**)(uint64_t, void, void))(v0[7] + 32))(v2, v0[9], v0[6]);
  swift_task_dealloc();
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_currencyDataLock);
  *(void *)(swift_task_alloc() + 16) = v2;
  uint64_t v5 = v4 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v4 + 16);
  uint64_t v6 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(void *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v6);
  sub_1BDD2588C(v5);
  os_unfair_lock_unlock(v6);
  if (!v1)
  {
    uint64_t v7 = (os_unfair_lock_s *)v0[4];
    swift_task_dealloc();
    dispatch_semaphore_t v8 = v7 + 4;
    v7 += 5;
    os_unfair_lock_lock(v7);
    sub_1BDD27454(v8);
    os_unfair_lock_unlock(v7);
    (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
    swift_task_dealloc();
    sub_1BDDB01B8();
    uint64_t v9 = (void (*)(void))v0[1];
    v9();
  }
}

uint64_t sub_1BDD27088()
{
  uint64_t v1 = (void *)v0[15];
  uint64_t v2 = v0[3];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_currencyDataLock);
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1BDD25874(v4);
  os_unfair_lock_unlock(v5);
  uint64_t v6 = (os_unfair_lock_s *)v0[4];
  uint64_t v7 = v6 + 4;
  dispatch_semaphore_t v8 = v6 + 5;
  os_unfair_lock_lock(v6 + 5);
  sub_1BDD27460(v7);
  os_unfair_lock_unlock(v8);

  sub_1BDDB01B8();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1BDD271E4()
{
  uint64_t v1 = (void *)v0[20];
  uint64_t v2 = v0[3];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_currencyDataLock);
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1BDD25874(v4);
  os_unfair_lock_unlock(v5);
  uint64_t v6 = (os_unfair_lock_s *)v0[4];
  uint64_t v7 = v6 + 4;
  dispatch_semaphore_t v8 = v6 + 5;
  os_unfair_lock_lock(v6 + 5);
  sub_1BDD27460(v7);
  os_unfair_lock_unlock(v8);

  sub_1BDDB01B8();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1BDD27340()
{
  swift_unknownObjectRelease();

  swift_release();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1BDD27390()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 40);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_1BDD2D034;
  *(void *)(v4 + 40) = v3;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = v2;
  return MEMORY[0x1F4188298](sub_1BDD26758, 0, 0);
}

unsigned char *sub_1BDD27454(unsigned char *result)
{
  *uint64_t result = 1;
  return result;
}

unsigned char *sub_1BDD27460(unsigned char *result)
{
  *uint64_t result = 0;
  return result;
}

uint64_t sub_1BDD27468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1BDDB00C8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1BDDB00B8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1BDCE43CC(a1, &qword_1EBA26900);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1BDDB0088();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

unsigned char *sub_1BDD27614@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

Swift::Bool __swiftcall StocksKitCurrencyCacheImpl.refreshSynchronously()()
{
  return StocksKitCurrencyCacheImpl.refreshSynchronously(timeout:)(0.0);
}

uint64_t StocksKitCurrencyCacheImpl.needsRefresh.getter()
{
  uint64_t v1 = sub_1BDDAF9C8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x1F4188790](v1, v4);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26860);
  MEMORY[0x1F4188790](v5 - 8, v6);
  uint64_t v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA268D0);
  MEMORY[0x1F4188790](v9 - 8, v10);
  uint64_t v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_currencyDataLock);
  uint64_t v14 = v13 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v13 + 16);
  uint64_t v15 = (os_unfair_lock_s *)(v13 + ((*(unsigned int *)(*(void *)v13 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v15);
  sub_1BDD2D000(v14, (uint64_t)v12);
  os_unfair_lock_unlock(v15);
  uint64_t v16 = sub_1BDDAFC28();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16) == 1)
  {
    sub_1BDCE43CC((uint64_t)v12, &qword_1EBA268D0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v8, 1, 1, v1);
  }
  else
  {
    sub_1BDDAFC08();
    (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v12, v16);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v2 + 56))(v8, 0, 1, v1);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1) != 1)
    {
      uint64_t v19 = (*(uint64_t (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 32))(&v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)], v8, v1);
      MEMORY[0x1F4188790](v19, v20);
      sub_1BDDAF9B8();
      char v18 = sub_1BDDAF9A8();
      uint64_t v21 = *(void (**)(unsigned char *, uint64_t))(v2 + 8);
      v21(&v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)], v1);
      v21(&v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)], v1);
      return v18 & 1;
    }
  }
  sub_1BDCE43CC((uint64_t)v8, &qword_1EBA26860);
  char v18 = 1;
  return v18 & 1;
}

uint64_t StocksKitCurrencyCacheImpl.lastRefreshDate.getter(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1BDD27A74, 0, 0);
}

uint64_t sub_1BDD27A74()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = sub_1BDDAF9C8();
  uint64_t v40 = *(void *)(v2 - 8);
  uint64_t v3 = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26860);
  uint64_t v4 = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA268D0);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_currencyDataLock);
  uint64_t v7 = v6 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v6 + 16);
  uint64_t v8 = (os_unfair_lock_s *)(v6 + ((*(unsigned int *)(*(void *)v6 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v8);
  sub_1BDD2D000(v7, v5);
  os_unfair_lock_unlock(v8);
  uint64_t v9 = v4;
  uint64_t v10 = v3;
  uint64_t v39 = v2;
  uint64_t v11 = sub_1BDDAFC28();
  *(void *)(v0 + 32) = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = v12;
  *(void *)(v0 + 40) = v12;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v5, 1, v11) == 1)
  {
    sub_1BDCE43CC(v5, &qword_1EBA268D0);
    swift_task_dealloc();
    uint64_t v14 = v40;
    uint64_t v15 = v9;
    uint64_t v16 = v39;
    uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56);
    v38(v9, 1, 1, v39);
  }
  else
  {
    sub_1BDDAFC18();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v5, v11);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56);
    uint64_t v16 = v39;
    v17(v9, 0, 1, v39);
    uint64_t v14 = v40;
    uint64_t v15 = v9;
    swift_task_dealloc();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v9, 1, v39) != 1)
    {
      uint64_t v32 = *(void *)(v0 + 16);
      uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32);
      v33(v10, v15, v39);
      swift_task_dealloc();
      v33(v32, v10, v39);
      v17(v32, 0, 1, v39);
      goto LABEL_11;
    }
    uint64_t v38 = v17;
  }
  uint64_t v18 = *(void *)(v0 + 24);
  sub_1BDCE43CC(v15, &qword_1EBA26860);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = swift_task_alloc();
  uint64_t v20 = swift_task_alloc();
  uint64_t v21 = *(uint64_t **)(v18 + OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_lastRefreshDateLock);
  *(void *)(v0 + 48) = v21;
  uint64_t v22 = *v21;
  uint64_t v23 = *(void *)(*MEMORY[0x1E4FBBAB0] + *v21 + 16);
  *(void *)(v0 + 56) = v23;
  uint64_t v24 = (uint64_t)v21 + v23;
  uint64_t v25 = *(unsigned int *)(v22 + 48);
  *(_DWORD *)(v0 + 120) = v25;
  char v26 = (os_unfair_lock_s *)((char *)v21 + ((v25 + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v26);
  sub_1BDD28528(v24, v20);
  os_unfair_lock_unlock(v26);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v20, 1, v16) == 1)
  {
    sub_1BDCE43CC(v20, &qword_1EBA26860);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = swift_task_alloc();
    *(void *)(v0 + 64) = v27;
    sub_1BDDAFBA8();
    *(void *)(v0 + 72) = sub_1BDDAFB98();
    uint64_t v28 = sub_1BDDAFB68();
    *(void *)(v0 + 80) = v28;
    uint64_t v29 = *(void *)(v28 - 8);
    *(void *)(v0 + 88) = v29;
    uint64_t v30 = swift_task_alloc();
    *(void *)(v0 + 96) = v30;
    (*(void (**)(void))(v29 + 104))();
    uint64_t v31 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v31;
    *uint64_t v31 = v0;
    v31[1] = sub_1BDD2813C;
    return MEMORY[0x1F415C888](v27, v30, 0x158E460913D00000, 1, 0);
  }
  uint64_t v34 = *(void *)(v0 + 16);
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32);
  v35(v19, v20, v16);
  swift_task_dealloc();
  v35(v34, v19, v16);
  v38(v34, 0, 1, v16);
LABEL_11:
  swift_task_dealloc();
  unint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

uint64_t sub_1BDD2813C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[11] + 8))(v2[12], v2[10]);
  swift_release();
  if (v0)
  {
    uint64_t v3 = sub_1BDD28444;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = sub_1BDD282CC;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

void sub_1BDD282CC()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(v0 + 120) + 3) & 0x1FFFFFFFCLL));
  uint64_t v5 = v3 + *(void *)(v0 + 56);
  *(void *)(swift_task_alloc() + 16) = v2;
  os_unfair_lock_lock(v4);
  sub_1BDD2855C(v5);
  if (v1)
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(v0 + 48) + ((*(unsigned int *)(v0 + 120) + 3) & 0x1FFFFFFFCLL)));
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 64);
    uint64_t v7 = *(void *)(v0 + 40);
    uint64_t v8 = *(void *)(v0 + 32);
    os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(v0 + 48) + ((*(unsigned int *)(v0 + 120) + 3) & 0x1FFFFFFFCLL)));
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    uint64_t v9 = *(void *)(v0 + 48);
    uint64_t v10 = *(void *)(v0 + 16);
    uint64_t v11 = (os_unfair_lock_s *)(v9 + ((*(unsigned int *)(v0 + 120) + 3) & 0x1FFFFFFFCLL));
    uint64_t v12 = v9 + *(void *)(v0 + 56);
    swift_task_dealloc();
    os_unfair_lock_lock(v11);
    sub_1BDD2D018(v12, v10);
    os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(v0 + 48) + ((*(unsigned int *)(v0 + 120) + 3) & 0x1FFFFFFFCLL)));
    uint64_t v13 = *(void (**)(void))(v0 + 8);
    v13();
  }
}

uint64_t sub_1BDD28444()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(v0 + 120) + 3) & 0x1FFFFFFFCLL));
  uint64_t v4 = v1 + *(void *)(v0 + 56);
  swift_task_dealloc();
  os_unfair_lock_lock(v3);
  sub_1BDD2D018(v4, v2);
  os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(v0 + 48) + ((*(unsigned int *)(v0 + 120) + 3) & 0x1FFFFFFFCLL)));
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1BDD28528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDD19A60(a1, a2, &qword_1EBA26860);
}

uint64_t sub_1BDD2855C(uint64_t a1)
{
  sub_1BDCE43CC(a1, &qword_1EBA26860);
  sub_1BDDAFC18();
  uint64_t v2 = sub_1BDDAF9C8();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

unint64_t StocksKitCurrencyCacheImpl.currencyData.getter()
{
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF0D0);
  MEMORY[0x1F4188790](v90, v1);
  uint64_t v89 = (char *)v73 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF0D8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5);
  uint64_t v7 = (char *)v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1BDDAFC28();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v12 = (char *)v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA268D0);
  MEMORY[0x1F4188790](v13 - 8, v14);
  uint64_t v16 = (char *)v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v0 + OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_currencyDataLock);
  uint64_t v18 = v17 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v17 + 16);
  uint64_t v19 = (os_unfair_lock_s *)(v17 + ((*(unsigned int *)(*(void *)v17 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v19);
  sub_1BDD28EC4(v18, (uint64_t)v16);
  os_unfair_lock_unlock(v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v16, 1, v8) == 1)
  {
    sub_1BDCE43CC((uint64_t)v16, &qword_1EBA268D0);
    return sub_1BDD24D48(MEMORY[0x1E4FBC860]);
  }
  uint64_t v75 = v8;
  uint64_t v76 = v4;
  uint64_t v74 = v9;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v16, v8);
  unint64_t v86 = sub_1BDD24D48(MEMORY[0x1E4FBC860]);
  uint64_t v21 = sub_1BDDAFBD8();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21, v23);
  uint64_t v82 = v24;
  uint64_t v25 = (char *)v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDDAFBE8();
  sub_1BDDAFBB8();
  char v26 = *(void (**)(char *, uint64_t))(v22 + 8);
  uint64_t v83 = v22 + 8;
  uint64_t v84 = v21;
  uint64_t v81 = v26;
  v26(v25, v21);
  swift_getOpaqueTypeConformance2();
  sub_1BDDAFF18();
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF0E0);
  v73[1] = v73;
  MEMORY[0x1F4188790](v27 - 8, v28);
  uint64_t v30 = (char *)v73 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v31 = v12;
  uint64_t v79 = v7;
  uint64_t v80 = v3;
  unsigned __int8 v77 = v30;
  for (i = v12; ; uint64_t v31 = i)
  {
    sub_1BDDB01E8();
    uint64_t v33 = sub_1BDDAFC48();
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v30, 1, v33);
    if (v35 == 1)
    {
      (*(void (**)(char *, uint64_t))(v76 + 8))(v7, v3);
      (*(void (**)(char *, uint64_t))(v74 + 8))(v31, v75);
      return v86;
    }
    uint64_t v89 = (char *)v73;
    uint64_t v37 = *(void *)(v34 + 64);
    MEMORY[0x1F4188790](v35, v36);
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))((char *)v73 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0), v30, v33);
    uint64_t v90 = sub_1BDDAFC38();
    uint64_t v39 = v38;
    MEMORY[0x1F4188790](v90, v38);
    uint64_t v41 = (char *)v73 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v42 = sub_1BDDAFBE8();
    MEMORY[0x1F4188790](v42, v43);
    sub_1BDDAFC58();
    uint64_t v87 = (char *)v73 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
    double v44 = COERCE_DOUBLE(sub_1BDDAFBC8());
    char v46 = v45;
    uint64_t v88 = *(void (**)(char *, uint64_t))(v34 + 8);
    v88((char *)v73 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0), v33);
    v81(v41, v84);
    double v47 = (v46 & 1) != 0 ? 0.0 : v44;
    id v48 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v47);
    if (v48) {
      break;
    }
    uint64_t v61 = v86;
    swift_bridgeObjectRetain();
    unint64_t v62 = sub_1BDD13EB4(v90, v39);
    char v64 = v63;
    swift_bridgeObjectRelease();
    if ((v64 & 1) == 0) {
      goto LABEL_6;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v91 = (void *)v61;
    uint64_t v7 = v79;
    uint64_t v3 = v80;
    uint64_t v30 = v77;
    uint64_t v66 = v87;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1BDD2ADD4();
      uint64_t v61 = (uint64_t)v91;
    }
    swift_bridgeObjectRelease();
    uint64_t v67 = *(void **)(*(void *)(v61 + 56) + 8 * v62);
    unint64_t v86 = v61;
    sub_1BDD2ABFC(v62, v61);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v88(v66, v33);
LABEL_7:
    ;
  }
  id v49 = v48;
  unint64_t v50 = v86;
  char v51 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v91 = (void *)v50;
  uint64_t v52 = v90;
  unint64_t v54 = sub_1BDD13EB4(v90, v39);
  uint64_t v55 = *(void *)(v50 + 16);
  BOOL v56 = (v53 & 1) == 0;
  uint64_t v57 = v55 + v56;
  if (!__OFADD__(v55, v56))
  {
    char v58 = v53;
    if (*(void *)(v50 + 24) >= v57)
    {
      if ((v51 & 1) == 0) {
        sub_1BDD2ADD4();
      }
    }
    else
    {
      sub_1BDD2A8EC(v57, v51);
      unint64_t v59 = sub_1BDD13EB4(v52, v39);
      if ((v58 & 1) != (v60 & 1)) {
        goto LABEL_30;
      }
      unint64_t v54 = v59;
    }
    uint64_t v68 = v91;
    unint64_t v86 = (unint64_t)v91;
    if (v58)
    {
      uint64_t v32 = v91[7];

      *(void *)(v32 + 8 * v54) = v49;
    }
    else
    {
      v91[(v54 >> 6) + 8] |= 1 << v54;
      unsigned __int8 v69 = (uint64_t *)(v68[6] + 16 * v54);
      *unsigned __int8 v69 = v52;
      v69[1] = v39;
      *(void *)(v68[7] + 8 * v54) = v49;
      uint64_t v70 = v68[2];
      BOOL v71 = __OFADD__(v70, 1);
      uint64_t v72 = v70 + 1;
      if (v71) {
        goto LABEL_29;
      }
      v68[2] = v72;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v7 = v79;
    uint64_t v3 = v80;
    uint64_t v30 = v77;
    v88(v87, v33);
    goto LABEL_7;
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  unint64_t result = sub_1BDDB0528();
  __break(1u);
  return result;
}

uint64_t sub_1BDD28EC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDD19A60(a1, a2, &qword_1EBA268D0);
}

uint64_t StocksKitCurrencyCacheImpl.providerData.getter(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1BDD28F18, 0, 0);
}

uint64_t sub_1BDD28F18()
{
  uint64_t v1 = sub_1BDDAFC28();
  v0[3] = v1;
  v0[4] = *(void *)(v1 - 8);
  v0[5] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA268D0);
  uint64_t v2 = swift_task_alloc();
  v0[6] = v2;
  v0[7] = sub_1BDDAFBA8();
  v0[8] = sub_1BDDAFB98();
  uint64_t v3 = sub_1BDDAFB68();
  v0[9] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v0[10] = v4;
  uint64_t v5 = swift_task_alloc();
  v0[11] = v5;
  (*(void (**)(void))(v4 + 104))();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[12] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1BDD29110;
  return MEMORY[0x1F415C888](v2, v5, 0x158E460913D00000, 1, 0);
}

uint64_t sub_1BDD29110()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v3 = v2[11];
  uint64_t v4 = v2[10];
  uint64_t v5 = v2[9];
  if (v0)
  {
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_1BDD29E1C;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_release();
    swift_task_dealloc();
    uint64_t v6 = sub_1BDD292D4;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1BDD292D4()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v1, 0, 1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  swift_task_dealloc();
  uint64_t v5 = sub_1BDDAFB28();
  v0[13] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v0[14] = v6;
  uint64_t v7 = swift_task_alloc();
  v0[15] = v7;
  uint64_t v8 = sub_1BDDAFB58();
  v0[16] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v0[17] = *(void *)(v9 + 64);
  uint64_t v10 = swift_task_alloc();
  sub_1BDDAFBF8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA268C8);
  uint64_t v11 = swift_task_alloc();
  sub_1BDDAFB38();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v0[18] = v12;
  v0[19] = (v9 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v12(v10, v8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    sub_1BDCE43CC(v11, &qword_1EBA268C8);
    swift_task_dealloc();
    uint64_t v13 = (void (*)(uint64_t, uint64_t))v0[18];
    uint64_t v14 = v0[16];
    uint64_t v16 = v0[4];
    uint64_t v15 = v0[5];
    uint64_t v17 = (uint64_t *)v0[2];
    uint64_t v32 = v0[3];
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = swift_task_alloc();
    sub_1BDDAFBF8();
    uint64_t v19 = sub_1BDDAFB48();
    uint64_t v30 = v20;
    uint64_t v31 = v19;
    v13(v18, v14);
    uint64_t v21 = swift_task_alloc();
    sub_1BDDAFBF8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26850);
    uint64_t v22 = swift_task_alloc();
    sub_1BDDAFAD8();
    v13(v21, v14);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v32);
    uint64_t *v17 = v31;
    v17[1] = v30;
    uint64_t v23 = type metadata accessor for StocksKitCurrencyCache.ProviderData();
    sub_1BDD25034(v22, (uint64_t)v17 + *(int *)(v23 + 20));
    uint64_t v24 = (char *)v17 + *(int *)(v23 + 24);
    *(_OWORD *)uint64_t v24 = xmmword_1BDDB3EC0;
    *((void *)v24 + 3) = 0;
    *((void *)v24 + 4) = 0;
    *((void *)v24 + 2) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v17, 0, 1, v23);
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    return v25();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v7, v11, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = sub_1BDDAFB18();
    v0[20] = v27;
    v0[21] = *(void *)(v27 - 8);
    v0[22] = swift_task_alloc();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA268C0);
    uint64_t v28 = swift_task_alloc();
    v0[23] = v28;
    v0[24] = sub_1BDDAFB98();
    uint64_t v29 = (void *)swift_task_alloc();
    v0[25] = v29;
    *uint64_t v29 = v0;
    v29[1] = sub_1BDD297E8;
    return MEMORY[0x1F415C890](v28, v7);
  }
}

uint64_t sub_1BDD297E8()
{
  swift_task_dealloc();
  swift_release();
  if (v0)
  {

    uint64_t v1 = sub_1BDD2991C;
  }
  else
  {
    uint64_t v1 = sub_1BDD29B70;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1BDD2991C()
{
  uint64_t v1 = v0[23];
  uint64_t v3 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v4 = v0[13];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[21] + 56))(v1, 1, 1, v0[20]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_1BDCE43CC(v1, &qword_1EBA268C0);
  swift_task_dealloc();
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v0[18];
  uint64_t v6 = v0[16];
  uint64_t v8 = v0[4];
  uint64_t v7 = v0[5];
  uint64_t v9 = (uint64_t *)v0[2];
  uint64_t v21 = v0[3];
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = swift_task_alloc();
  sub_1BDDAFBF8();
  uint64_t v11 = sub_1BDDAFB48();
  uint64_t v19 = v12;
  uint64_t v20 = v11;
  v5(v10, v6);
  uint64_t v13 = swift_task_alloc();
  sub_1BDDAFBF8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26850);
  uint64_t v14 = swift_task_alloc();
  sub_1BDDAFAD8();
  v5(v13, v6);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v21);
  *uint64_t v9 = v20;
  v9[1] = v19;
  uint64_t v15 = type metadata accessor for StocksKitCurrencyCache.ProviderData();
  sub_1BDD25034(v14, (uint64_t)v9 + *(int *)(v15 + 20));
  uint64_t v16 = (char *)v9 + *(int *)(v15 + 24);
  *(_OWORD *)uint64_t v16 = xmmword_1BDDB3EC0;
  *((void *)v16 + 3) = 0;
  *((void *)v16 + 4) = 0;
  *((void *)v16 + 2) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 0, 1, v15);
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1BDD29B70()
{
  uint64_t v2 = v0[22];
  uint64_t v1 = v0[23];
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[21];
  uint64_t v6 = v0[14];
  uint64_t v5 = v0[15];
  uint64_t v7 = v0[13];
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v1, 0, 1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  swift_task_dealloc();
  uint64_t v8 = sub_1BDDAFAF8();
  uint64_t v33 = v9;
  uint64_t v34 = v8;
  uint64_t v10 = sub_1BDDAFAE8();
  uint64_t v31 = v11;
  uint64_t v32 = v10;
  sub_1BDDAFB08();
  uint64_t v13 = v12;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  uint64_t v14 = (void (*)(uint64_t, uint64_t))v0[18];
  uint64_t v15 = v0[16];
  uint64_t v17 = v0[4];
  uint64_t v16 = v0[5];
  uint64_t v18 = (uint64_t *)v0[2];
  uint64_t v30 = v0[3];
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = swift_task_alloc();
  sub_1BDDAFBF8();
  uint64_t v20 = sub_1BDDAFB48();
  uint64_t v28 = v21;
  uint64_t v29 = v20;
  v14(v19, v15);
  uint64_t v22 = swift_task_alloc();
  sub_1BDDAFBF8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26850);
  uint64_t v23 = swift_task_alloc();
  sub_1BDDAFAD8();
  v14(v22, v15);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v30);
  *uint64_t v18 = v29;
  v18[1] = v28;
  uint64_t v24 = type metadata accessor for StocksKitCurrencyCache.ProviderData();
  sub_1BDD25034(v23, (uint64_t)v18 + *(int *)(v24 + 20));
  uint64_t v25 = (uint64_t *)((char *)v18 + *(int *)(v24 + 24));
  *uint64_t v25 = v34;
  v25[1] = v33;
  v25[2] = v32;
  v25[3] = v31;
  v25[4] = v13;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v18, 0, 1, v24);
  swift_task_dealloc();
  char v26 = (uint64_t (*)(void))v0[1];
  return v26();
}

uint64_t sub_1BDD29E1C()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[2];
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v1, 1, 1, v2);
  sub_1BDCE43CC(v1, &qword_1EBA268D0);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = type metadata accessor for StocksKitCurrencyCache.ProviderData();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

id StocksKitCurrencyCacheImpl.init()()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_currencyDataLock;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA268D0);
  MEMORY[0x1F4188790](v3 - 8, v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1BDDAFC28();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269B0);
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + ((*(unsigned int *)(*(void *)v8 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  uint64_t v9 = (void *)MEMORY[0x1E4FBBAB0];
  sub_1BDD19A60((uint64_t)v6, v8 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v8 + 16), &qword_1EBA268D0);
  uint64_t v10 = v0;
  sub_1BDCE43CC((uint64_t)v6, &qword_1EBA268D0);
  *(void *)&v0[v2] = v8;
  uint64_t v11 = OBJC_IVAR____TtC9Calculate26StocksKitCurrencyCacheImpl_lastRefreshDateLock;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26860);
  MEMORY[0x1F4188790](v12 - 8, v13);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1BDDAF9C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269A8);
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + ((*(unsigned int *)(*(void *)v17 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1BDD19A60((uint64_t)v15, v17 + *(void *)(*v9 + *(void *)v17 + 16), &qword_1EBA26860);
  sub_1BDCE43CC((uint64_t)v15, &qword_1EBA26860);
  *(void *)&v10[v11] = v17;

  v19.receiver = v10;
  v19.super_class = ObjectType;
  return objc_msgSendSuper2(&v19, sel_init);
}

uint64_t sub_1BDD2A234()
{
  swift_release();
  return swift_release();
}

id StocksKitCurrencyCacheImpl.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BDD2A2F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1BDD2D034;
  return v6();
}

uint64_t sub_1BDD2A3C4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  void *v5 = v4;
  v5[1] = sub_1BDD2D034;
  return v7();
}

uint64_t sub_1BDD2A490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1BDDB00C8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1BDDB00B8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1BDCE43CC(a1, &qword_1EBA26900);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1BDDB0088();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1BDD2A63C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1BDD2D044;
  return v6(a1);
}

uint64_t sub_1BDD2A718(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1BDD2A7F4;
  return v6(a1);
}

uint64_t sub_1BDD2A7F4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1BDD2A8EC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF1B0);
  char v38 = a2;
  uint64_t v6 = sub_1BDDB0478();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_1BDDB0558();
    sub_1BDDAFDB8();
    uint64_t result = sub_1BDDB0578();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

unint64_t sub_1BDD2ABFC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1BDDB0258();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1BDDB0558();
        swift_bridgeObjectRetain();
        sub_1BDDAFDB8();
        uint64_t v9 = sub_1BDDB0578();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          int64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          unint64_t v15 = (void *)(v14 + 8 * v3);
          unint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *unint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  uint64_t *v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

id sub_1BDD2ADD4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF1B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1BDDB0468();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    BOOL v21 = (void *)(*(void *)(v4 + 48) + v16);
    *BOOL v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t method lookup function for StocksKitCurrencyCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StocksKitCurrencyCache);
}

uint64_t dispatch thunk of StocksKitCurrencyCache.refresh()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1BDD2D030;
  return v5();
}

uint64_t dispatch thunk of StocksKitCurrencyCache.refresh(timeout:)(double a1)
{
  uint64_t v4 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x58);
  unint64_t v8 = (uint64_t (*)(__n128))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1BDD2B1B8;
  v6.n128_f64[0] = a1;
  return v8(v6);
}

uint64_t sub_1BDD2B1B8(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of StocksKitCurrencyCache.refreshSynchronously(timeout:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of StocksKitCurrencyCache.refreshSynchronously()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of StocksKitCurrencyCache.needsRefresh.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of StocksKitCurrencyCache.lastRefreshDate.getter(uint64_t a1)
{
  uint64_t v4 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x78);
  unint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1BDD2D034;
  return v7(a1);
}

uint64_t dispatch thunk of StocksKitCurrencyCache.currencyData.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of StocksKitCurrencyCache.providerData.getter(uint64_t a1)
{
  uint64_t v4 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x88);
  unint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1BDD2B5B4;
  return v7(a1);
}

uint64_t sub_1BDD2B5B4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t *initializeBufferWithCopyOfBuffer for StocksKitCurrencyCache.ProviderData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1BDDAF998();
    uint64_t v12 = *(void *)(v11 - 8);
    int64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26850);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(a3 + 24);
    unint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    unint64_t v19 = *(uint64_t *)((char *)a2 + v16 + 8);
    if (v19 >> 60 == 15)
    {
      long long v20 = *((_OWORD *)v18 + 1);
      *(_OWORD *)unint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v20;
    }
    else
    {
      uint64_t v21 = *v18;
      sub_1BDD24FC8(*v18, v19);
      *(void *)unint64_t v17 = v21;
      *((void *)v17 + 1) = v19;
      int64_t v22 = v18 + 2;
      unint64_t v23 = v18[3];
      if (v23 >> 60 == 15)
      {
        *((_OWORD *)v17 + 1) = *(_OWORD *)v22;
      }
      else
      {
        uint64_t v24 = *v22;
        sub_1BDD24FC8(*v22, v18[3]);
        *((void *)v17 + 2) = v24;
        *((void *)v17 + 3) = v23;
      }
    }
    *((void *)v17 + 4) = v18[4];
  }
  return v4;
}

uint64_t destroy for StocksKitCurrencyCache.ProviderData(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1BDDAF998();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!result) {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  unint64_t v9 = v8[1];
  if (v9 >> 60 != 15)
  {
    uint64_t result = sub_1BDD2B9B8(*v8, v9);
    unint64_t v10 = v8[3];
    if (v10 >> 60 != 15)
    {
      uint64_t v11 = v8[2];
      return sub_1BDD2B9B8(v11, v10);
    }
  }
  return result;
}

uint64_t sub_1BDD2B9B8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

void *initializeWithCopy for StocksKitCurrencyCache.ProviderData(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  unint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1BDDAF998();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26850);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (void *)((char *)a2 + v14);
  unint64_t v17 = *(void *)((char *)a2 + v14 + 8);
  if (v17 >> 60 == 15)
  {
    long long v18 = *((_OWORD *)v16 + 1);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v18;
  }
  else
  {
    uint64_t v19 = *v16;
    sub_1BDD24FC8(*v16, v17);
    *(void *)uint64_t v15 = v19;
    *((void *)v15 + 1) = v17;
    long long v20 = v16 + 2;
    unint64_t v21 = v16[3];
    if (v21 >> 60 == 15)
    {
      *((_OWORD *)v15 + 1) = *(_OWORD *)v20;
    }
    else
    {
      uint64_t v22 = *v20;
      sub_1BDD24FC8(*v20, v16[3]);
      *((void *)v15 + 2) = v22;
      *((void *)v15 + 3) = v21;
    }
  }
  *((void *)v15 + 4) = v16[4];
  return a1;
}

void *assignWithCopy for StocksKitCurrencyCache.ProviderData(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1BDDAF998();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26850);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (void *)((char *)a1 + v15);
  unint64_t v17 = (void *)((char *)a2 + v15);
  unint64_t v18 = *(void *)((char *)a2 + v15 + 8);
  if (*(void *)((char *)a1 + v15 + 8) >> 60 != 15)
  {
    if (v18 >> 60 == 15)
    {
      sub_1BDD2BF14(v16);
      uint64_t v21 = v17[4];
      long long v22 = *((_OWORD *)v17 + 1);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v22;
      void v16[4] = v21;
      return a1;
    }
    uint64_t v26 = *v17;
    sub_1BDD24FC8(*v17, v18);
    uint64_t v27 = *v16;
    unint64_t v28 = v16[1];
    *uint64_t v16 = v26;
    v16[1] = v18;
    sub_1BDD2B9B8(v27, v28);
    uint64_t v29 = v17 + 2;
    unint64_t v30 = v17[3];
    if ((unint64_t)v16[3] >> 60 == 15)
    {
      if (v30 >> 60 != 15)
      {
        uint64_t v31 = *v29;
        sub_1BDD24FC8(*v29, v17[3]);
        v16[2] = v31;
        v16[3] = v30;
LABEL_24:
        void v16[4] = v17[4];
        return a1;
      }
    }
    else
    {
      if (v30 >> 60 != 15)
      {
        uint64_t v33 = *v29;
        sub_1BDD24FC8(*v29, v17[3]);
        uint64_t v34 = v16[2];
        unint64_t v35 = v16[3];
        v16[2] = v33;
        v16[3] = v30;
        sub_1BDD2B9B8(v34, v35);
        goto LABEL_24;
      }
      sub_1BDD2BEC0((uint64_t)(v16 + 2));
    }
    *((_OWORD *)v16 + 1) = *(_OWORD *)v29;
    goto LABEL_24;
  }
  if (v18 >> 60 == 15)
  {
    long long v19 = *(_OWORD *)v17;
    long long v20 = *((_OWORD *)v17 + 1);
    void v16[4] = v17[4];
    *(_OWORD *)uint64_t v16 = v19;
    *((_OWORD *)v16 + 1) = v20;
  }
  else
  {
    uint64_t v23 = *v17;
    sub_1BDD24FC8(*v17, v18);
    *uint64_t v16 = v23;
    v16[1] = v18;
    uint64_t v24 = v17 + 2;
    unint64_t v25 = v17[3];
    if (v25 >> 60 == 15)
    {
      *((_OWORD *)v16 + 1) = *(_OWORD *)v24;
    }
    else
    {
      uint64_t v32 = *v24;
      sub_1BDD24FC8(*v24, v17[3]);
      v16[2] = v32;
      v16[3] = v25;
    }
    void v16[4] = v17[4];
  }
  return a1;
}

uint64_t sub_1BDD2BEC0(uint64_t a1)
{
  return a1;
}

uint64_t *sub_1BDD2BF14(uint64_t *a1)
{
  return a1;
}

_OWORD *initializeWithTake for StocksKitCurrencyCache.ProviderData(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1BDDAF998();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26850);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = *(int *)(a3 + 24);
  int v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)int v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((void *)v13 + 4) = *((void *)v14 + 4);
  return a1;
}

void *assignWithTake for StocksKitCurrencyCache.ProviderData(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1BDDAF998();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26850);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 24);
  unint64_t v17 = (void *)((char *)a1 + v16);
  unint64_t v18 = (void *)((char *)a2 + v16);
  unint64_t v19 = *(void *)((char *)a1 + v16 + 8);
  if (v19 >> 60 != 15)
  {
    unint64_t v20 = v18[1];
    if (v20 >> 60 == 15)
    {
      sub_1BDD2BF14(v17);
      goto LABEL_10;
    }
    uint64_t v22 = *v17;
    uint64_t *v17 = *v18;
    v17[1] = v20;
    sub_1BDD2B9B8(v22, v19);
    uint64_t v23 = v18 + 2;
    unint64_t v24 = v17[3];
    if (v24 >> 60 != 15)
    {
      unint64_t v25 = v18[3];
      if (v25 >> 60 != 15)
      {
        uint64_t v26 = v17[2];
        v17[2] = *v23;
        v17[3] = v25;
        sub_1BDD2B9B8(v26, v24);
        goto LABEL_17;
      }
      sub_1BDD2BEC0((uint64_t)(v17 + 2));
    }
    *((_OWORD *)v17 + 1) = *(_OWORD *)v23;
LABEL_17:
    v17[4] = v18[4];
    return a1;
  }
LABEL_10:
  long long v21 = *((_OWORD *)v18 + 1);
  *(_OWORD *)unint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v21;
  v17[4] = v18[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for StocksKitCurrencyCache.ProviderData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1BDD2C2CC);
}

uint64_t sub_1BDD2C2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26850);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for StocksKitCurrencyCache.ProviderData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1BDD2C394);
}

uint64_t sub_1BDD2C394(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26850);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1BDD2C440()
{
  sub_1BDD2C4E0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1BDD2C4E0()
{
  if (!qword_1EBA26858)
  {
    sub_1BDDAF998();
    unint64_t v0 = sub_1BDDB01D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBA26858);
    }
  }
}

uint64_t destroy for StocksKitCurrencyCache.ProviderLogo(uint64_t *a1)
{
  uint64_t result = sub_1BDD2B9B8(*a1, a1[1]);
  unint64_t v3 = a1[3];
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = a1[2];
    return sub_1BDD2B9B8(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for StocksKitCurrencyCache.ProviderLogo(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1BDD24FC8(*a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = a2 + 2;
  unint64_t v7 = a2[3];
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
  }
  else
  {
    uint64_t v8 = *v6;
    sub_1BDD24FC8(*v6, a2[3]);
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v7;
  }
  *(void *)(a1 + 32) = a2[4];
  return a1;
}

uint64_t *assignWithCopy for StocksKitCurrencyCache.ProviderLogo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1BDD24FC8(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1BDD2B9B8(v6, v7);
  uint64_t v8 = a2 + 2;
  unint64_t v9 = a2[3];
  if ((unint64_t)a1[3] >> 60 != 15)
  {
    if (v9 >> 60 != 15)
    {
      uint64_t v11 = *v8;
      sub_1BDD24FC8(*v8, a2[3]);
      uint64_t v12 = a1[2];
      unint64_t v13 = a1[3];
      a1[2] = v11;
      a1[3] = v9;
      sub_1BDD2B9B8(v12, v13);
      goto LABEL_8;
    }
    sub_1BDD2BEC0((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v9 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v8;
    goto LABEL_8;
  }
  uint64_t v10 = *v8;
  sub_1BDD24FC8(*v8, a2[3]);
  a1[2] = v10;
  a1[3] = v9;
LABEL_8:
  a1[4] = a2[4];
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *assignWithTake for StocksKitCurrencyCache.ProviderLogo(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1BDD2B9B8(v4, v5);
  uint64_t v6 = (uint64_t *)(a2 + 16);
  unint64_t v7 = a1[3];
  if (v7 >> 60 != 15)
  {
    unint64_t v8 = *(void *)(a2 + 24);
    if (v8 >> 60 != 15)
    {
      uint64_t v9 = a1[2];
      a1[2] = *v6;
      a1[3] = v8;
      sub_1BDD2B9B8(v9, v7);
      goto LABEL_6;
    }
    sub_1BDD2BEC0((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v6;
LABEL_6:
  a1[4] = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for StocksKitCurrencyCache.ProviderLogo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for StocksKitCurrencyCache.ProviderLogo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StocksKitCurrencyCache.ProviderLogo()
{
  return &type metadata for StocksKitCurrencyCache.ProviderLogo;
}

uint64_t type metadata accessor for StocksKitCurrencyCacheImpl()
{
  return self;
}

void type metadata accessor for os_unfair_lock_s()
{
  if (!qword_1EBA26948)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EBA26948);
    }
  }
}

unint64_t sub_1BDD2C8D4()
{
  unint64_t result = qword_1EBA26990;
  if (!qword_1EBA26990)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBA26990);
  }
  return result;
}

uint64_t sub_1BDD2C918()
{
  double v2 = v0[2];
  unsigned int v3 = (const void *)*((void *)v0 + 3);
  uint64_t v4 = (void *)*((void *)v0 + 4);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_1BDD2D034;
  uint64_t v6 = (uint64_t (*)(const void *, void *, double))((char *)&dword_1EA0DF110 + dword_1EA0DF110);
  return v6(v3, v4, v2);
}

uint64_t sub_1BDD2C9D0()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_1BDD2D034;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EA0DF120 + dword_1EA0DF120);
  return v6(v2, v3, v4);
}

uint64_t sub_1BDD2CA94(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *unint64_t v7 = v2;
  v7[1] = sub_1BDD2D034;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EA0DF130 + dword_1EA0DF130);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1BDD2CB60()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1BDD2CB98(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1BDD2D034;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA0DF140 + dword_1EA0DF140);
  return v6(a1, v4);
}

uint64_t sub_1BDD2CC54()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1BDD2D034;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1EA0DF150 + dword_1EA0DF150);
  return v5(v2, v3);
}

uint64_t objectdestroy_19Tm()
{
  _Block_release(*(const void **)(v0 + 24));

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1BDD2CD4C()
{
  uint64_t v2 = *(const void **)(v0 + 24);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1BDD2D034;
  uint64_t v4 = (uint64_t (*)(const void *))((char *)&dword_1EA0DF170 + dword_1EA0DF170);
  return v4(v2);
}

uint64_t sub_1BDD2CE08(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t objectdestroy_39Tm()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1BDD2CE54()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1BDD2D034;
  uint64_t v4 = (uint64_t (*)(const void *))((char *)&dword_1EA0DF190 + dword_1EA0DF190);
  return v4(v2);
}

uint64_t objectdestroy_23Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1BDD2CF48(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1BDD2B5B4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA0DF1B8 + dword_1EA0DF1B8);
  return v6(a1, v4);
}

uint64_t sub_1BDD2D000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDD28EC4(a1, a2);
}

uint64_t sub_1BDD2D018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDD28528(a1, a2);
}

uint64_t sub_1BDD2D048(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)a1 + 176);
  if (!v2()) {
    return 0;
  }
  uint64_t v3 = CalculateExpression.format.getter();
  uint64_t v4 = swift_release();
  if (v3 != 2) {
    return 0;
  }
  if (!((uint64_t (*)(uint64_t))v2)(v4)) {
    return 1;
  }
  unint64_t v5 = CalculateExpression.postfixStack.getter();
  swift_release();
  if (!(v5 >> 62))
  {
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1BDDB0448();
  swift_bridgeObjectRelease();
  if (!v19)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    return 1;
  }
LABEL_6:
  if ((v5 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1C18862A0](0, v5);
  }
  else
  {
    if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_25;
    }
    swift_retain();
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = CalculateExpression.rich.getter();
  unint64_t v7 = (*(uint64_t (**)(void))(*(void *)v6 + 392))();
  swift_release();
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_11;
  }
LABEL_25:
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1BDDB0448();
  swift_bridgeObjectRelease();
LABEL_11:
  swift_bridgeObjectRelease();
  uint64_t v9 = (uint64_t (**)(unsigned char *))(*(void *)a1 + 408);
  uint64_t v10 = *v9;
  uint64_t result = (*v9)(v21);
  unint64_t v13 = (void (*)(unsigned char *, void))result;
  if (!v8)
  {
LABEL_17:
    v13(v21, 0);
    uint64_t v15 = *(void *)CalculateExpression.rich.getter();
    unint64_t v16 = (*(uint64_t (**)(void))(v15 + 392))();
    swift_release();
    unint64_t v17 = (void (*)(unsigned char *, void))v10(v21);
    sub_1BDCE4468(v16);
    v17(v21, 0);
    (*(void (**)(void))(*(void *)a1 + 232))(0);
    uint64_t v18 = 1;
    (*(void (**)(uint64_t))(*(void *)a1 + 256))(1);
    swift_release();
    return v18;
  }
  if (v8 < 0)
  {
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1BDDB0448();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v14 = v20;
    if (v20 < 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  if (*v12 >> 62) {
    goto LABEL_27;
  }
  uint64_t v14 = *(void *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v14 < 0)
  {
LABEL_16:
    sub_1BDD03824(0, v8);
    goto LABEL_17;
  }
LABEL_15:
  if (v14 >= v8) {
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t CalculateExpression.RollOutOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t sub_1BDD2D428(uint64_t a1, uint64_t a2)
{
  void (**v72)(char *__return_ptr, uint64_t);
  void (*v73)(char *__return_ptr, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  BOOL v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  void (*v83)(long long *, void);
  void (*v84)(long long *, void);
  void (*v85)(long long *, void);
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  char v95;
  long long v96;

  if (*(unsigned char *)(a2 + 16) != 1) {
    return 0;
  }
  CalculateExpression.RichExpression.editingToken(matching:)(sub_1BDD2E384, &v96);
  uint64_t v4 = v96;
  if (!(void)v96) {
    return 0;
  }
  uint64_t v5 = *((void *)&v96 + 1);
  uint64_t v6 = *(uint64_t (**)(uint64_t))(*(void *)v96 + 416);
  uint64_t v7 = *(void *)v96 + 416;
  sub_1BDD02DD4(v96);
  swift_retain();
  uint64_t v89 = v6;
  uint64_t v8 = v6(v5);
  type metadata accessor for CalculateExpression.RichToken();
  LOBYTE(v96) = 16;
  char v9 = sub_1BDD013AC();
  uint64_t v10 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v96, v9 & 1);
  if (__OFADD__(v5, 1)) {
    goto LABEL_92;
  }
  uint64_t v88 = v5 + 1;
  uint64_t v92 = v8;
  if (v5 < 0)
  {
LABEL_18:
    sub_1BDD02E18(v4);
    swift_release();
    swift_release();
    swift_release();
    sub_1BDD02E18(v4);
    return 0;
  }
  uint64_t v90 = v10;
  uint64_t v7 = 0;
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v4 + 392);
  uint64_t v91 = v5;
  uint64_t v11 = v5;
  do
  {
    uint64_t v15 = v2();
    uint64_t v16 = v15;
    if ((v15 & 0xC000000000000001) != 0)
    {
      uint64_t v17 = MEMORY[0x1C18862A0](v11, v15);
    }
    else
    {
      if ((unint64_t)v11 >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_31;
      }
      uint64_t v17 = *(void *)(v15 + 8 * v11 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    char v18 = *(unsigned char *)(v17 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    LOBYTE(v96) = v18;
    LOBYTE(v93) = 16;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v96, (unsigned __int8 *)&v93))
    {
      uint64_t v12 = swift_release();
      BOOL v13 = __OFADD__(v7++, 1);
      if (v13)
      {
        __break(1u);
        goto LABEL_48;
      }
    }
    else
    {
      LOBYTE(v96) = v18;
      LOBYTE(v93) = 15;
      uint64_t v5 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v96, (unsigned __int8 *)&v93);
      uint64_t v12 = swift_release();
      if (v5)
      {
        BOOL v13 = __OFSUB__(v7--, 1);
        if (v13)
        {
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          if (((*(uint64_t (**)(void))(*(void *)v5 + 232))() & 1) == 0) {
            goto LABEL_100;
          }
          unint64_t v70 = v2();
          if (v70 >> 62) {
            goto LABEL_141;
          }
          uint64_t v71 = *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_96;
        }
      }
    }
    BOOL v14 = v11-- <= 0;
  }
  while (!v14);
  uint64_t v16 = v91;
  if ((v7 & 0x8000000000000000) == 0) {
    goto LABEL_18;
  }
  if (!v8)
  {
    uint64_t v20 = *(uint64_t (**)(long long *))(*(void *)v4 + 408);
    swift_retain();
    long long v21 = (void (*)(long long *, void))v20(&v96);
    uint64_t v2 = *v22;
    if (!((unint64_t)*v22 >> 62)
      || (swift_bridgeObjectRetain(),
          uint64_t v11 = sub_1BDDB0448(),
          swift_bridgeObjectRelease(),
          (v11 & 0x8000000000000000) == 0))
    {
      sub_1BDD0572C(0, 0, v90);
      v21(&v96, 0);
      sub_1BDD02E18(v4);
      goto LABEL_28;
    }
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
    goto LABEL_132;
  }
  if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 224))(v12) & 1) != 0
    || ((*(uint64_t (**)(void))(*(void *)v4 + 576))() & 1) != 0
    || ((*(uint64_t (**)(void))(*(void *)v4 + 560))() & 1) != 0
    || ((*(uint64_t (**)(void))(*(void *)v4 + 568))() & 1) != 0)
  {
    goto LABEL_18;
  }
LABEL_31:
  uint64_t v24 = v89(v16);
  uint64_t v11 = v16;
  uint64_t v87 = v16;
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v11 = v91;
    unint64_t v86 = ~v91;
    uint64_t v87 = v91;
    while (1)
    {
      uint64_t v26 = OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
      char v27 = *(unsigned char *)(v25 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      LOBYTE(v96) = v27;
      if ((CalculateExpression.TokenType.isOperator.getter() & 1) == 0) {
        break;
      }
      LOBYTE(v96) = v27;
      if (CalculateExpression.TokenType.isPostfixOperator.getter())
      {
        LOBYTE(v96) = v27;
        LOBYTE(v93) = 9;
        if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v96, (unsigned __int8 *)&v93)) {
          break;
        }
        if (!(*(uint64_t (**)(void))(*(void *)a1 + 176))()) {
          break;
        }
        uint64_t v28 = v25;
        uint64_t v29 = CalculateExpression.engine.getter();
        swift_release();
        BOOL v30 = v29 == 1;
        uint64_t v25 = v28;
        if (!v30) {
          break;
        }
      }
      LOBYTE(v96) = *(unsigned char *)(v25 + v26);
      LOBYTE(v93) = 7;
      sub_1BDCF0848();
      if (sub_1BDDAFD28()) {
        break;
      }
      uint64_t v85 = (void (*)(long long *, void))(*(uint64_t (**)(long long *))(*(void *)v4 + 408))(&v96);
      uint64_t v32 = v31;
      unint64_t v33 = *v31;
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *uint64_t v32 = v33;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v33 & 0x8000000000000000) != 0
        || (v33 & 0x4000000000000000) != 0)
      {
        sub_1BDD02F24(v33);
        unint64_t v33 = v35;
        *uint64_t v32 = v35;
      }
      uint64_t v36 = v33 & 0xFFFFFFFFFFFFFF8;
      unint64_t v37 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t v38 = v87;
      if (v87 >= v37) {
        goto LABEL_128;
      }
      unint64_t v39 = v37 - 1;
      memmove((void *)(v36 + 8 * v87 + 32), (const void *)(v36 + 8 * v87 + 40), 8 * (v86 + v37));
      *(void *)(v36 + 16) = v39;
      sub_1BDDAFFD8();
      swift_release();
      v85(&v96, 0);
      swift_release();
      --v87;
      uint64_t v25 = v89(v38 - 1);
      uint64_t v11 = ++v86;
      if (!v25) {
        goto LABEL_49;
      }
    }
LABEL_48:
    swift_release();
  }
LABEL_49:
  uint64_t v40 = v89(v87);
  if (v40)
  {
    LOBYTE(v96) = *(unsigned char *)(v40 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    LOBYTE(v93) = 15;
    BOOL v41 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v96, (unsigned __int8 *)&v93);
    swift_release();
    if (v41) {
      goto LABEL_18;
    }
  }
  unint64_t v42 = v87 + 1;
  if (__OFADD__(v87, 1))
  {
LABEL_132:
    __break(1u);
    goto LABEL_133;
  }
  uint64_t v43 = v89(v87 + 1);
  if (!v43) {
    goto LABEL_63;
  }
  uint64_t v44 = v43;
  char v45 = *(unsigned char *)(v43 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  LOBYTE(v96) = v45;
  LOBYTE(v93) = 16;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v96, (unsigned __int8 *)&v93)
    || ((*(uint64_t (**)(void))(*(void *)v44 + 232))() & 1) == 0)
  {
    swift_release();
LABEL_63:
    BOOL v56 = *(uint64_t (**)(uint64_t))(*(void *)v4 + 408);
    swift_retain();
    uint64_t v89 = v56;
    uint64_t v11 = v56((uint64_t)&v96);
    if (!(*v57 >> 62))
    {
      uint64_t v58 = *(void *)((*v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_65;
    }
LABEL_133:
    swift_bridgeObjectRetain();
    uint64_t v58 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
LABEL_65:
    if (v58 < v88)
    {
      __break(1u);
    }
    else if ((v88 & 0x8000000000000000) == 0)
    {
      sub_1BDD0572C(v88, v88, v90);
      uint64_t v59 = ((uint64_t (*)(long long *, void))v11)(&v96, 0);
      unint64_t v60 = ((uint64_t (*)(uint64_t))v2)(v59);
      if (!(v60 >> 62))
      {
        uint64_t v61 = *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_69;
      }
LABEL_136:
      uint64_t v61 = sub_1BDDB0448();
LABEL_69:
      uint64_t v62 = swift_bridgeObjectRelease();
      if (v88 < v61)
      {
        uint64_t v11 = 0;
        uint64_t v7 = v91;
        do
        {
          unint64_t v63 = v7 + 1;
          uint64_t v64 = ((uint64_t (*)(uint64_t))v2)(v62);
          if ((v64 & 0xC000000000000001) != 0)
          {
            uint64_t v5 = MEMORY[0x1C18862A0](v7 + 1, v64);
          }
          else
          {
            if ((v63 & 0x8000000000000000) != 0) {
              goto LABEL_124;
            }
            if (v63 >= *(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_125;
            }
            uint64_t v5 = *(void *)(v64 + 8 * v7 + 40);
            swift_retain();
          }
          swift_bridgeObjectRelease();
          char v65 = *(unsigned char *)(v5 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
          LOBYTE(v96) = v65;
          LOBYTE(v93) = 15;
          if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v96, (unsigned __int8 *)&v93))
          {
            uint64_t v66 = swift_release();
            BOOL v13 = __OFADD__(v11++, 1);
            if (v13) {
              goto LABEL_129;
            }
          }
          else
          {
            LOBYTE(v96) = v65;
            LOBYTE(v93) = 16;
            if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v96, (unsigned __int8 *)&v93))
            {
              if (!v11) {
                goto LABEL_93;
              }
              uint64_t v66 = swift_release();
              BOOL v13 = __OFSUB__(v11--, 1);
              if (v13) {
                goto LABEL_131;
              }
            }
            else
            {
              uint64_t v66 = swift_release();
            }
          }
          uint64_t v67 = v7 + 2;
          if (__OFADD__(v63, 1)) {
            goto LABEL_126;
          }
          unint64_t v68 = ((uint64_t (*)(uint64_t))v2)(v66);
          if (v68 >> 62) {
            uint64_t v69 = sub_1BDDB0448();
          }
          else {
            uint64_t v69 = *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          uint64_t v62 = swift_bridgeObjectRelease();
          ++v7;
        }
        while (v67 < v69);
      }
      goto LABEL_101;
    }
    __break(1u);
    goto LABEL_136;
  }
  uint64_t v46 = (*(uint64_t (**)(void))(*(void *)v44 + 208))();
  unint64_t v48 = v47;
  LOBYTE(v96) = v45;
  char v49 = sub_1BDD013AC() & 1;
  uint64_t v2 = (uint64_t (*)(void))CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v46, v48, (unsigned __int8 *)&v96, v49);
  unint64_t v50 = (void (*)(long long *, void))(*(uint64_t (**)(long long *))(*(void *)v4 + 408))(&v96);
  uint64_t v52 = v51;
  unint64_t v53 = *v51;
  int v54 = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v52 = v53;
  if (!v54 || (v53 & 0x8000000000000000) != 0 || (v53 & 0x4000000000000000) != 0)
  {
    sub_1BDD02F24(v53);
    unint64_t v53 = v55;
    *uint64_t v52 = v55;
  }
  uint64_t v7 = v92;
  if ((v42 & 0x8000000000000000) != 0) {
    goto LABEL_139;
  }
  if (v42 < *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 8 * v42 + 0x20) = v2;
    swift_release();
    sub_1BDDAFFD8();
    v50(&v96, 0);
    sub_1BDD02E18(v4);
    swift_release();
LABEL_119:
    swift_release();
LABEL_28:
    swift_release();
    swift_release();
    uint64_t v23 = v4;
LABEL_29:
    sub_1BDD02E18(v23);
    return 1;
  }
  while (1)
  {
    __break(1u);
LABEL_141:
    uint64_t v71 = sub_1BDDB0448();
LABEL_96:
    uint64_t result = swift_bridgeObjectRelease();
    if (__OFSUB__(v71, 1)) {
      break;
    }
    if (v71 - 2 != v7) {
      goto LABEL_120;
    }
    uint64_t v72 = (void (**)(char *__return_ptr, uint64_t))(*(void *)v4 + 272);
    uint64_t v73 = *v72;
    (*v72)(&v95, result);
    uint64_t v94 = 1;
    sub_1BDD24410();
    sub_1BDDAFF98();
    uint64_t v74 = sub_1BDDAFF98();
    if ((void)v96 != v93)
    {
      v73(&v95, v74);
      uint64_t v94 = 2;
      sub_1BDDAFF98();
      sub_1BDDAFF98();
      if ((void)v96 != v93)
      {
LABEL_120:
        uint64_t v84 = (void (*)(long long *, void))v89((uint64_t)&v96);
        sub_1BDD02E58(v7 + 1);
        swift_release();
        v84(&v96, 0);
        sub_1BDD02E18(v4);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v23 = v4;
        goto LABEL_29;
      }
    }
LABEL_100:
    uint64_t v62 = swift_release();
LABEL_101:
    uint64_t v11 = v88 - 1;
    if (v88 - 1 >= 0)
    {
      uint64_t v75 = 0;
      do
      {
        uint64_t v76 = ((uint64_t (*)(uint64_t))v2)(v62);
        if ((v76 & 0xC000000000000001) != 0)
        {
          unsigned __int8 v77 = MEMORY[0x1C18862A0](v11, v76);
        }
        else
        {
          if ((unint64_t)v11 >= *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_123;
          }
          unsigned __int8 v77 = *(void *)(v76 + 8 * v11 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        uint64_t v78 = *(unsigned char *)(v77 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        LOBYTE(v96) = v78;
        LOBYTE(v93) = 16;
        if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v96, (unsigned __int8 *)&v93))
        {
          uint64_t v62 = swift_release();
          BOOL v13 = __OFADD__(v75++, 1);
          if (v13) {
            goto LABEL_127;
          }
        }
        else
        {
          LOBYTE(v96) = v78;
          LOBYTE(v93) = 15;
          uint64_t v79 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v96, (unsigned __int8 *)&v93);
          uint64_t v62 = swift_release();
          if (v79)
          {
            if (!v75) {
              goto LABEL_116;
            }
            BOOL v13 = __OFSUB__(v75--, 1);
            if (v13) {
              goto LABEL_130;
            }
          }
        }
        BOOL v14 = v11-- <= 0;
      }
      while (!v14);
    }
    uint64_t v11 = -1;
LABEL_116:
    LOBYTE(v96) = 15;
    uint64_t v80 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v96, 1);
    uint64_t v81 = v11 + 1;
    uint64_t v83 = (void (*)(long long *, void))v89((uint64_t)&v96);
    uint64_t v7 = v92;
    if (*v82 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = (uint64_t (*)(void))sub_1BDDB0448();
      swift_bridgeObjectRelease();
      if ((uint64_t)v2 >= v81)
      {
LABEL_118:
        sub_1BDD0572C(v81, v81, v80);
        v83(&v96, 0);
        sub_1BDD02E18(v4);
        goto LABEL_119;
      }
    }
    else
    {
      uint64_t v2 = *(uint64_t (**)(void))((*v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if ((uint64_t)v2 >= v81) {
        goto LABEL_118;
      }
    }
    __break(1u);
LABEL_139:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDD2E384(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (((*(uint64_t (**)(void))(*(void *)*a1 + 560))() & 1) != 0
    || ((*(uint64_t (**)(void))(*(void *)v1 + 568))() & 1) != 0)
  {
    return 1;
  }
  else
  {
    return (*(uint64_t (**)(void))(*(void *)v1 + 544))() & 1;
  }
}

uint64_t CalculateExpression.CloseParenthesisOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t sub_1BDD2E470@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 136))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1BDD2E4BC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDD2E51C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BDD2E568(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDD2E5BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 160))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1BDD2E608(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 40) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDD2E668()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BDD2E6B4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

void CalculateExpression.Token.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48);
}

uint64_t sub_1BDD2E714()
{
  return swift_weakLoadStrong();
}

uint64_t sub_1BDD2E758()
{
  return swift_release();
}

void (*sub_1BDD2E7AC(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = swift_weakLoadStrong();
  return sub_1BDD2E828;
}

void sub_1BDD2E828(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_weakAssign();
  if (a2)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_release();
  }
  free(v3);
}

uint64_t sub_1BDD2E8A8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDD2E8E0(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BDD2E928())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1BDD2E97C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)v0 + 184))();
  if (v2)
  {
    uint64_t v3 = v2;
    if (((*(uint64_t (**)(uint64_t))(*(void *)v2 + 232))(v2) & 1) == 0) {
      (*(void (**)(void))(*(void *)v3 + 256))();
    }
    swift_release();
  }
  uint64_t v4 = *(uint64_t (**)(void))(*(void *)v1 + 208);
  return v4();
}

uint64_t sub_1BDD2EA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  char v13 = *a5;
  *(void *)(v12 + 40) = 0;
  *(void *)(v12 + 32) = 0;
  swift_weakInit();
  *(_OWORD *)(v12 + 88) = 0u;
  *(_OWORD *)(v12 + 72) = 0u;
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  swift_beginAccess();
  *(void *)(v12 + 32) = a3;
  *(void *)(v12 + 40) = a4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 48) = v13;
  *(void *)(v12 + 64) = a6;
  return v12;
}

uint64_t sub_1BDD2EB18()
{
  uint64_t v1 = v0;
  uint64_t v3 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v4 = *(uint64_t (**)(void))(*v0 + 136);
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = ((uint64_t (*)(uint64_t))v4)(v5);
  if (!v2)
  {
    uint64_t v10 = swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (v3 == v6 && v2 == v7)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    if (!v1[10]) {
      goto LABEL_8;
    }
LABEL_13:
    uint64_t v11 = v1[9];
    goto LABEL_14;
  }
  char v9 = sub_1BDDB04E8();
  swift_bridgeObjectRelease();
  uint64_t v10 = swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
LABEL_10:
    v0[11] = ((uint64_t (*)(uint64_t))v4)(v10);
    v0[12] = v12;
    uint64_t v13 = swift_bridgeObjectRelease();
    uint64_t v14 = ((uint64_t (*)(uint64_t))v4)(v13);
    uint64_t v16 = v15;
    Swift::Bool v17 = sub_1BDD013AC() & 1;
    v18._uint64_t countAndFlagsBits = v14;
    v18._object = v16;
    v22.value.super.super.Class isa = 0;
    v22.Swift::Bool is_nil = 0;
    v23.char value = 1;
    v23.Swift::Bool is_nil = 2;
    Swift::String v20 = CalculateExpression.formatLiteral(_:presentation:formatter:significantDigits:forceScientificNotation:)(v18, v17, v22, v23, v19);
    swift_bridgeObjectRelease();
    *(Swift::String *)(v1 + 9) = v20;
    goto LABEL_12;
  }
  if (v0[10]) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v11 = v4();
LABEL_14:
  swift_bridgeObjectRetain();
  return v11;
}

uint64_t sub_1BDD2EC9C()
{
  unsigned __int8 v12 = v0[48];
  unsigned __int8 v11 = 10;
  if (static CalculateExpression.TokenType.== infix(_:_:)(&v12, &v11))
  {
    (*(void (**)(void))(*(void *)v0 + 136))();
    uint64_t v1 = sub_1BDDAFD78();
    uint64_t v3 = v2;
    swift_bridgeObjectRelease();
    uint64_t v4 = self;
    id v5 = objc_msgSend(v4, sel_trigonometricSet);
    uint64_t v6 = sub_1BDDB00E8();

    LOBYTE(v5) = sub_1BDD0F59C(v1, v3, v6);
    swift_bridgeObjectRelease();
    if (v5)
    {
      char v7 = 1;
    }
    else
    {
      id v8 = objc_msgSend(v4, sel_laTeXTrigonometricSet);
      uint64_t v9 = sub_1BDDB00E8();

      char v7 = sub_1BDD0F59C(v1, v3, v9);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t CalculateExpression.Token.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CalculateExpression.Token.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 104, 7);
}

uint64_t sub_1BDD2EEAC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 184))();
  *a2 = result;
  return result;
}

uint64_t sub_1BDD2EEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 192);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_1BDD2EF4C()
{
  uint64_t v1 = v0;
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v0 + 232))();
  if ((result & 1) == 0)
  {
    uint64_t result = (*(uint64_t (**)(void))(*(void *)v0 + 184))();
    if (result)
    {
      uint64_t v3 = CalculateExpression.plain.getter();
      swift_release();
      if (v3 == v1)
      {
        type metadata accessor for CalculateExpression.RichExpression();
        uint64_t v4 = (void *)swift_retain();
        sub_1BDCE3218(v4);
        sub_1BDD4AC2C();
        sub_1BDD49CFC();
      }
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1BDD2F030@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 264))();
  *a2 = result;
  return result;
}

uint64_t sub_1BDD2F084(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 272);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1BDD2F0E0(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)(v1 + 24) = 1;
  return result;
}

uint64_t (*sub_1BDD2F138(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BDD2F190;
}

uint64_t sub_1BDD2F190(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    *(unsigned char *)(*(void *)(a1 + 24) + 24) = 1;
  }
  return result;
}

char *sub_1BDD2F1C8()
{
  unint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 264))();
  unint64_t v2 = v1;
  if (!(v1 >> 62))
  {
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA268F0);
    sub_1BDD19AC4(&qword_1EBA268F8, &qword_1EBA268F0);
    uint64_t v13 = sub_1BDDAFD18();
    swift_bridgeObjectRelease();
    return (char *)v13;
  }
  uint64_t v3 = sub_1BDDB0448();
  if (!v3) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v14 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1BDD17224(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x1C18862A0](v5, v2);
      }
      else
      {
        uint64_t v6 = *(void *)(v2 + 8 * v5 + 32);
        swift_retain();
      }
      uint64_t v7 = (*(uint64_t (**)(void))(*(void *)v6 + 136))();
      uint64_t v9 = v8;
      swift_release();
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      if (v11 >= v10 >> 1) {
        sub_1BDD17224((char *)(v10 > 1), v11 + 1, 1);
      }
      ++v5;
      *(void *)(v14 + 16) = v11 + 1;
      uint64_t v12 = v14 + 16 * v11;
      *(void *)(v12 + 32) = v7;
      *(void *)(v12 + 40) = v9;
    }
    while (v3 != v5);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDD2F3D0()
{
  unint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 264))();
  swift_retain();
  sub_1BDD367BC(v1, v0);
  swift_bridgeObjectRelease();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA268F0);
  sub_1BDD19AC4(&qword_1EBA268F8, &qword_1EBA268F0);
  uint64_t v2 = sub_1BDDAFD18();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t CalculateExpression.PlainExpression.init()()
{
  swift_weakInit();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(_WORD *)(v0 + 24) = 1;
  *(void *)(v0 + 32) = v1;
  *(unsigned char *)(v0 + 40) = 1;
  uint64_t v2 = MEMORY[0x1E4FBC870];
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 64) = v2;
  *(unsigned char *)(v0 + 72) = 0;
  *(void *)(v0 + 80) = v1;
  *(_DWORD *)(v0 + 88) = 0;
  return v0;
}

void sub_1BDD2F520()
{
  if (v0[40] != 1) {
    return;
  }
  uint64_t v1 = v0;
  uint64_t v2 = MEMORY[0x1E4FBC870];
  v0[40] = 0;
  uint64_t v28 = v2;
  unint64_t v3 = (*(uint64_t (**)(void))(*(void *)v0 + 264))();
  unint64_t v4 = v3;
  if (v3 >> 62)
  {
LABEL_59:
    uint64_t v5 = sub_1BDDB0448();
    if (v5) {
      goto LABEL_4;
    }
LABEL_60:
    swift_bridgeObjectRelease();
    char v18 = 0;
    uint64_t v10 = 0;
    uint64_t v19 = 0;
    goto LABEL_61;
  }
  uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5) {
    goto LABEL_60;
  }
LABEL_4:
  long long v21 = v1;
  unint64_t v6 = 0;
  char v22 = 0;
  char v7 = 0;
  uint64_t v1 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  unint64_t v8 = v4 & 0xC000000000000001;
  char v9 = 1;
  uint64_t v25 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v11 = (unsigned char *)MEMORY[0x1C18862A0](v6, v4);
      unint64_t v12 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_57;
      }
    }
    else
    {
      if (v6 >= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_58;
      }
      unint64_t v11 = *(unsigned char **)(v4 + 8 * v6 + 32);
      swift_retain();
      unint64_t v12 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
        goto LABEL_59;
      }
    }
    char v13 = v11[48];
    LOBYTE(v26) = v13;
    unsigned __int8 v27 = 17;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v26, &v27))
    {
      swift_release();
      if (v12 == v5) {
        goto LABEL_46;
      }
      goto LABEL_6;
    }
    if (v7)
    {
      LOBYTE(v26) = v13;
      unsigned __int8 v27 = 35;
      HIDWORD(v25) |= static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v26, &v27);
    }
    else
    {
      LOBYTE(v25) = BYTE4(v25) | v25;
    }
    LOBYTE(v26) = v13;
    unsigned __int8 v27 = 14;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v26, &v27)
      || (LOBYTE(v26) = v13, unsigned __int8 v27 = 0, static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v26, &v27)))
    {
      (*(void (**)(void))(*(void *)v11 + 136))();
      uint64_t v10 = sub_1BDDAFD78();
      uint64_t v15 = v14;
      swift_bridgeObjectRelease();
      if (v9)
      {
        swift_bridgeObjectRelease();
        swift_release();
        if (v12 != v5)
        {
          char v9 = 0;
          char v7 = 1;
          uint64_t v23 = v15;
          uint64_t v24 = v11;
          unint64_t v8 = v4 & 0xC000000000000001;
          goto LABEL_7;
        }
        swift_bridgeObjectRelease();
        uint64_t v19 = v15;
        uint64_t v1 = v21;
LABEL_48:
        char v18 = v22;
        if (v25) {
          goto LABEL_61;
        }
        goto LABEL_52;
      }
      sub_1BDD148D8(&v26, v10, v15);
      swift_bridgeObjectRelease();
      LOBYTE(v26) = v11[48];
      unsigned __int8 v27 = 14;
      BOOL v16 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v26, &v27);
      swift_release();
      if (!v16)
      {
        unint64_t v8 = v4 & 0xC000000000000001;
        if (v12 != v5) {
          goto LABEL_34;
        }
LABEL_46:
        swift_bridgeObjectRelease();
        uint64_t v10 = (uint64_t)v1;
        uint64_t v1 = v21;
        uint64_t v19 = v23;
        unint64_t v11 = v24;
        goto LABEL_48;
      }
      unint64_t v8 = v4 & 0xC000000000000001;
      if (v12 == v5) {
        goto LABEL_45;
      }
LABEL_28:
      char v7 = 0;
      char v9 = 0;
      char v22 = 1;
      goto LABEL_6;
    }
    if (v22)
    {
      swift_release();
      if (v12 == v5) {
        goto LABEL_45;
      }
      goto LABEL_28;
    }
    LOBYTE(v26) = v13;
    if (CalculateExpression.TokenType.isOperator.getter())
    {
      swift_release();
      if (v12 == v5) {
        goto LABEL_50;
      }
      goto LABEL_33;
    }
    LOBYTE(v26) = v13;
    unsigned __int8 v27 = 35;
    sub_1BDCF0848();
    if ((sub_1BDDAFD28() & 1) == 0) {
      break;
    }
    swift_release();
    if (v12 == v5) {
      goto LABEL_50;
    }
    char v22 = 0;
    char v7 = 0;
    char v9 = 0;
    uint64_t v10 = (uint64_t)v1;
    unint64_t v8 = v4 & 0xC000000000000001;
LABEL_7:
    ++v6;
    uint64_t v1 = (unsigned char *)v10;
  }
  LOBYTE(v26) = v13;
  unsigned __int8 v27 = 19;
  if (sub_1BDDAFD28())
  {
    swift_release();
    unint64_t v8 = v4 & 0xC000000000000001;
    if (v12 == v5) {
      goto LABEL_50;
    }
LABEL_33:
    char v22 = 0;
LABEL_34:
    char v7 = 0;
    char v9 = 0;
LABEL_6:
    uint64_t v10 = (uint64_t)v1;
    goto LABEL_7;
  }
  LOBYTE(v26) = v13;
  char v17 = CalculateExpression.TokenType.isAnyUnknown.getter();
  swift_release();
  unint64_t v8 = v4 & 0xC000000000000001;
  if ((v17 & 1) == 0)
  {
    if (v12 == v5)
    {
LABEL_45:
      swift_bridgeObjectRelease();
      char v18 = 1;
      goto LABEL_51;
    }
    goto LABEL_28;
  }
  if (v12 != v5) {
    goto LABEL_33;
  }
LABEL_50:
  swift_bridgeObjectRelease();
  char v18 = 0;
LABEL_51:
  uint64_t v10 = (uint64_t)v1;
  uint64_t v1 = v21;
  uint64_t v19 = v23;
  unint64_t v11 = v24;
  if (v25) {
    goto LABEL_61;
  }
LABEL_52:
  if (v19)
  {
    sub_1BDD148D8(&v26, v10, v19);
    swift_bridgeObjectRelease();
    if (v11)
    {
      LOBYTE(v26) = v11[48];
      unsigned __int8 v27 = 14;
      sub_1BDCF0848();
      char v20 = sub_1BDDAFD28();
      uint64_t v10 = 0;
      uint64_t v19 = 0;
      v18 |= v20;
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v19 = 0;
    }
  }
  else
  {
    uint64_t v10 = 0;
  }
LABEL_61:
  *((void *)v1 + 6) = v10;
  *((void *)v1 + 7) = v19;
  swift_bridgeObjectRelease();
  *((void *)v1 + 8) = v28;
  swift_bridgeObjectRelease();
  v1[88] = v18 & 1;
  swift_release();
}

uint64_t sub_1BDD2FA20()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t sub_1BDD2FA54(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 72) = a1;
  return result;
}

uint64_t (*sub_1BDD2FA94())()
{
  return j__swift_endAccess;
}

uint64_t sub_1BDD2FAE8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDD2FB20(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 80) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BDD2FB68())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1BDD2FBBC()
{
  if (*(unsigned char *)(v0 + 40) == 1) {
    sub_1BDD2F520();
  }
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BDD2FBFC()
{
  if (*(unsigned char *)(v0 + 40) == 1) {
    sub_1BDD2F520();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDD2FC34()
{
  if (*(unsigned char *)(v0 + 40) == 1) {
    sub_1BDD2F520();
  }
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t sub_1BDD2FC5C()
{
  uint64_t v0 = (void *)sub_1BDDAFD38();
  uint64_t v1 = (void *)sub_1BDDAFD38();
  v6[4] = sub_1BDD2FD54;
  v6[5] = 0;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  v6[2] = sub_1BDD2FD60;
  v6[3] = &block_descriptor_54;
  uint64_t v2 = _Block_copy(v6);
  id v3 = objc_msgSend(v0, sel_calc_stringByReplacingOccurrencesOfRegex_usingBlockWithResult_, v1, v2);
  _Block_release(v2);

  uint64_t v4 = sub_1BDDAFD68();
  return v4;
}

uint64_t sub_1BDD2FD54()
{
  return 8284;
}

id sub_1BDD2FD60(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();

  uint64_t v5 = (void *)sub_1BDDAFD38();
  swift_bridgeObjectRelease();
  return v5;
}

id sub_1BDD2FDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  uint64_t v7 = sub_1BDDAFD68();
  uint64_t v9 = v8;
  swift_retain();
  v6(v7, v9, a3, a4);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)sub_1BDDAFD38();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1BDD2FE94()
{
  return 0;
}

uint64_t sub_1BDD2FEA0()
{
  return 32;
}

unint64_t sub_1BDD2FEAC(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_1BDD35E28(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned int v5 = sub_1BDDB0348();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
        sub_1BDDB03C8();
      }
      unsigned int v5 = sub_1BDDB03D8();
    }
  }
  else
  {
    unsigned int v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

uint64_t CalculateExpression.PlainExpression.__allocating_init(_:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  CalculateExpression.PlainExpression.init(_:)(a1);
  return v2;
}

uint64_t CalculateExpression.PlainExpression.init(_:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = swift_weakInit();
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 32) = MEMORY[0x1E4FBC860];
  unint64_t v7 = v1 + 32;
  *(_WORD *)(v1 + 24) = 1;
  *(unsigned char *)(v1 + 40) = 1;
  *(void *)(v1 + 48) = 0;
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = MEMORY[0x1E4FBC870];
  *(unsigned char *)(v1 + 72) = 0;
  *(void *)(v1 + 80) = v6;
  *(_DWORD *)(v1 + 88) = 0;
  uint64_t v80 = *(uint64_t (**)(void))(*a1 + 176);
  ((void (*)(uint64_t))v80)(v5);
  swift_beginAccess();
  swift_weakAssign();
  swift_release();
  unint64_t v86 = 0;
  char v85 = 0;
  if (swift_weakLoadStrong())
  {
    uint64_t v8 = CalculateExpression.format.getter();
    uint64_t v9 = swift_release();
    if (v8 == 2)
    {
      v83[0] = MEMORY[0x1E4FBC860];
      uint64_t v10 = (uint64_t (**)(uint64_t))(*a1 + 392);
      uint64_t v2 = (uint64_t (*)(void))*v10;
      unint64_t v11 = (*v10)(v9);
      unint64_t v12 = v11;
      if (v11 >> 62) {
        uint64_t v13 = sub_1BDDB0448();
      }
      else {
        uint64_t v13 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (__OFSUB__(v13, 2))
      {
        __break(1u);
        goto LABEL_129;
      }
      uint64_t v14 = (*(uint64_t (**)(uint64_t))(*a1 + 416))(v13 - 2);
      if (!v14
        || (char v15 = *(unsigned char *)(v14 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type),
            swift_release(),
            char v84 = v15,
            v82[0] = 4,
            sub_1BDCF0848(),
            uint64_t v14 = sub_1BDDAFD28(),
            (v14 & 1) == 0))
      {
LABEL_17:
        unint64_t v24 = ((uint64_t (*)(uint64_t))v2)(v14);
        unint64_t v12 = v24;
        if (!(v24 >> 62))
        {
          uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v25) {
            goto LABEL_19;
          }
          goto LABEL_130;
        }
LABEL_129:
        uint64_t v25 = sub_1BDDB0448();
        if (v25)
        {
LABEL_19:
          BOOL v20 = __OFSUB__(v25, 1);
          unint64_t v26 = v25 - 1;
          if (!v20)
          {
            if ((v12 & 0xC000000000000001) == 0)
            {
              if ((v26 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else if (v26 < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                swift_retain();
                goto LABEL_24;
              }
              __break(1u);
              goto LABEL_135;
            }
LABEL_132:
            MEMORY[0x1C18862A0](v26, v12);
LABEL_24:
            uint64_t v27 = swift_bridgeObjectRelease();
            MEMORY[0x1C1885EA0](v27);
            if (*(void *)((v83[0] & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v83[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            {
LABEL_25:
              sub_1BDDB0048();
              sub_1BDDAFFD8();
              type metadata accessor for CalculateExpression.RichExpression();
              uint64_t v28 = (void *)sub_1BDD07294(v83[0]);
              uint64_t v29 = *(void *)sub_1BDD34ED0(v28, &v86, &v85);
              uint64_t v30 = (*(uint64_t (**)(void))(v29 + 264))();
              swift_release();
              swift_release();
              swift_beginAccess();
              *(void *)(v3 + 32) = v30;
              uint64_t Strong = swift_bridgeObjectRelease();
              goto LABEL_56;
            }
LABEL_135:
            sub_1BDDB0008();
            goto LABEL_25;
          }
LABEL_131:
          __break(1u);
          goto LABEL_132;
        }
LABEL_130:
        unint64_t v26 = swift_bridgeObjectRelease();
        __break(1u);
        goto LABEL_131;
      }
      unint64_t v16 = v2();
      unint64_t v17 = v16;
      if (!(v16 >> 62))
      {
        uint64_t v18 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_10;
      }
LABEL_139:
      uint64_t v18 = sub_1BDDB0448();
LABEL_10:
      uint64_t v19 = swift_bridgeObjectRelease();
      BOOL v20 = __OFSUB__(v18, 2);
      unint64_t v21 = v18 - 2;
      if (v20)
      {
        __break(1u);
      }
      else
      {
        uint64_t v22 = ((uint64_t (*)(uint64_t))v2)(v19);
        unint64_t v17 = v22;
        if ((v22 & 0xC000000000000001) == 0)
        {
          if ((v21 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v21 < *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            swift_retain();
            goto LABEL_15;
          }
          __break(1u);
          goto LABEL_144;
        }
      }
      MEMORY[0x1C18862A0](v21, v17);
LABEL_15:
      uint64_t v23 = swift_bridgeObjectRelease();
      MEMORY[0x1C1885EA0](v23);
      if (*(void *)((v83[0] & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v83[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
LABEL_16:
        sub_1BDDB0048();
        uint64_t v14 = sub_1BDDAFFD8();
        goto LABEL_17;
      }
LABEL_144:
      sub_1BDDB0008();
      goto LABEL_16;
    }
  }
  uint64_t v32 = *(void *)sub_1BDD34ED0(a1, &v86, &v85);
  uint64_t v33 = (*(uint64_t (**)(void))(v32 + 264))();
  swift_release();
  swift_beginAccess();
  *(void *)(v1 + 32) = v33;
  swift_bridgeObjectRelease();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_56;
  }
  char v34 = CalculateExpression.allowPartialExpressions.getter();
  uint64_t Strong = swift_release();
  if ((v34 & 1) == 0) {
    goto LABEL_56;
  }
  unint64_t v17 = *(void *)v7;
  if (!(*(void *)v7 >> 62))
  {
    uint64_t v35 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v36 = v35 - 1;
    if (!__OFSUB__(v35, 1)) {
      goto LABEL_30;
    }
LABEL_138:
    __break(1u);
    goto LABEL_139;
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1BDDB0448();
  uint64_t Strong = swift_bridgeObjectRelease();
  uint64_t v36 = v35 - 1;
  if (__OFSUB__(v35, 1)) {
    goto LABEL_138;
  }
LABEL_30:
  if ((v36 & 0x8000000000000000) == 0)
  {
    while (1)
    {
      unint64_t v37 = v35 - 1;
      swift_beginAccess();
      unint64_t v38 = *(void *)v7;
      if ((*(void *)v7 & 0xC000000000000001) != 0)
      {
        uint64_t v39 = MEMORY[0x1C18862A0](v35 - 1);
      }
      else
      {
        if (v37 >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          swift_bridgeObjectRetain();
          uint64_t v74 = sub_1BDDB0448();
          if (v74) {
            goto LABEL_106;
          }
          goto LABEL_124;
        }
        uint64_t v39 = *(void *)(v38 + 8 * v35 + 24);
        swift_retain();
      }
      swift_endAccess();
      char v40 = *(unsigned char *)(v39 + 48);
      swift_release();
      LOBYTE(v83[0]) = v40;
      v82[0] = 16;
      uint64_t Strong = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v83, v82);
      if ((Strong & 1) == 0)
      {
        swift_beginAccess();
        unint64_t v41 = *(void *)v7;
        if ((*(void *)v7 & 0xC000000000000001) != 0)
        {
          uint64_t v42 = MEMORY[0x1C18862A0](v35 - 1);
        }
        else
        {
          if (v37 >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_122;
          }
          uint64_t v42 = *(void *)(v41 + 8 * v35 + 24);
          swift_retain();
        }
        swift_endAccess();
        char v43 = *(unsigned char *)(v42 + 48);
        swift_release();
        LOBYTE(v83[0]) = v43;
        v82[0] = 17;
        uint64_t Strong = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v83, v82);
        if ((Strong & 1) == 0) {
          break;
        }
      }
      --v35;
      if ((uint64_t)v37 < 1) {
        goto LABEL_56;
      }
    }
    swift_beginAccess();
    unint64_t v44 = *(void *)v7;
    if ((*(void *)v7 & 0xC000000000000001) != 0)
    {
      uint64_t v45 = MEMORY[0x1C18862A0](v35 - 1);
    }
    else
    {
      if (v37 >= *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_147;
      }
      uint64_t v45 = *(void *)(v44 + 8 * v35 + 24);
      swift_retain();
    }
    swift_endAccess();
    char v46 = *(unsigned char *)(v45 + 48);
    swift_release();
    LOBYTE(v83[0]) = v46;
    if (CalculateExpression.TokenType.isBinaryOperator.getter()) {
      goto LABEL_52;
    }
    uint64_t result = swift_beginAccess();
    unint64_t v48 = *(void *)v7;
    if ((*(void *)v7 & 0xC000000000000001) != 0) {
      goto LABEL_151;
    }
    if (v37 >= *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    uint64_t v49 = *(void *)(v48 + 8 * v35 + 24);
    swift_retain();
    while (1)
    {
      swift_endAccess();
      char v50 = *(unsigned char *)(v49 + 48);
      swift_release();
      LOBYTE(v83[0]) = v50;
      v82[0] = 15;
      uint64_t Strong = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)v83, v82);
      if ((Strong & 1) == 0) {
        break;
      }
LABEL_52:
      if (*(void *)v7 >> 62)
      {
LABEL_147:
        swift_bridgeObjectRetain();
        uint64_t v79 = sub_1BDDB0448();
        swift_bridgeObjectRelease();
        unint64_t v52 = v79 - v37;
        if (__OFSUB__(v79, v37))
        {
LABEL_149:
          __break(1u);
          goto LABEL_150;
        }
      }
      else
      {
        uint64_t v51 = *(void *)((*(void *)v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
        unint64_t v52 = v51 - v37;
        if (__OFSUB__(v51, v37)) {
          goto LABEL_149;
        }
      }
      uint64_t v53 = v52 - 1;
      if (!__OFSUB__(v52, 1))
      {
        swift_beginAccess();
        sub_1BDD30E3C(v53);
        uint64_t Strong = swift_endAccess();
        break;
      }
LABEL_150:
      __break(1u);
LABEL_151:
      uint64_t v49 = MEMORY[0x1C18862A0](v37);
    }
  }
LABEL_56:
  if (v85) {
    goto LABEL_60;
  }
  unint64_t v54 = (*(uint64_t (**)(uint64_t))(*a1 + 392))(Strong);
  if (v54 >> 62) {
LABEL_126:
  }
    uint64_t v55 = sub_1BDDB0448();
  else {
    uint64_t v55 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v55)
  {
LABEL_60:
    swift_beginAccess();
    *(void *)unint64_t v7 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v56 = 0;
  while (1)
  {
    if (*(void *)v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v70 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
      if (v56 >= v70) {
        goto LABEL_104;
      }
    }
    else if (v56 >= *(void *)((*(void *)v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_104;
    }
    swift_beginAccess();
    unint64_t v58 = *(void *)v7;
    if ((*(void *)v7 & 0xC000000000000001) != 0)
    {
      uint64_t v59 = MEMORY[0x1C18862A0](v56);
    }
    else
    {
      if (v56 < 0)
      {
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
        goto LABEL_121;
      }
      if ((unint64_t)v56 >= *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_113;
      }
      uint64_t v59 = *(void *)(v58 + 8 * v56 + 32);
      swift_retain();
    }
    swift_endAccess();
    unsigned __int8 v60 = *(unsigned char *)(v59 + 48);
    swift_release();
    v82[0] = v60;
    if ((CalculateExpression.TokenType.isWordBasedBitwiseOperator.getter() & 1) == 0) {
      goto LABEL_62;
    }
    swift_beginAccess();
    unint64_t v61 = *(void *)v7;
    if ((*(void *)v7 & 0xC000000000000001) != 0)
    {
      uint64_t v62 = MEMORY[0x1C18862A0](v56);
    }
    else
    {
      if (v56 < 0) {
        goto LABEL_115;
      }
      if ((unint64_t)v56 >= *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_116;
      }
      uint64_t v62 = *(void *)(v61 + 8 * v56 + 32);
      swift_retain();
    }
    swift_endAccess();
    unsigned __int8 v63 = *(unsigned char *)(v62 + 48);
    swift_release();
    v82[0] = v63;
    unsigned __int8 v81 = 9;
    if (static CalculateExpression.TokenType.== infix(_:_:)(v82, &v81))
    {
      if (!v80() || (uint64_t v64 = CalculateExpression.engine.getter(), swift_release(), v64 != 1))
      {
LABEL_62:
        uint64_t v57 = v56;
        goto LABEL_63;
      }
    }
    uint64_t v57 = v56 + 1;
    if (__OFADD__(v56, 1)) {
      goto LABEL_117;
    }
    if (*(void *)v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
      if (v57 >= v71) {
        goto LABEL_85;
      }
    }
    else if (v57 >= *(void *)((*(void *)v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_85;
    }
    type metadata accessor for CalculateExpression.Token();
    uint64_t v65 = swift_allocObject();
    *(void *)(v65 + 40) = 0;
    *(void *)(v65 + 32) = 0;
    swift_weakInit();
    *(_OWORD *)(v65 + 88) = 0u;
    *(_OWORD *)(v65 + 72) = 0u;
    *(void *)(v65 + 16) = 32;
    *(void *)(v65 + 24) = 0xE100000000000000;
    swift_beginAccess();
    *(void *)(v65 + 32) = 0;
    *(void *)(v65 + 40) = 0;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v65 + 48) = 17;
    *(void *)(v65 + 64) = MEMORY[0x1E4FBC860];
    swift_beginAccess();
    if (*(void *)v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v72 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
      if (v72 < v57) {
        goto LABEL_119;
      }
    }
    else if (*(void *)((*(void *)v7 & 0xFFFFFFFFFFFFFF8) + 0x10) < v57)
    {
      goto LABEL_119;
    }
    if (v57 < 0) {
      goto LABEL_120;
    }
    sub_1BDD35B7C(v56 + 1, v56 + 1, v65, (void (*)(uint64_t))type metadata accessor for CalculateExpression.Token);
    swift_endAccess();
LABEL_85:
    if (v56 >= 1)
    {
      swift_beginAccess();
      unint64_t v66 = *(void *)v7;
      if ((*(void *)v7 & 0xC000000000000001) != 0)
      {
        uint64_t v67 = MEMORY[0x1C18862A0](v56);
      }
      else
      {
        if ((unint64_t)v56 >= *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_118;
        }
        uint64_t v67 = *(void *)(v66 + 8 * v56 + 32);
        swift_retain();
      }
      swift_endAccess();
      unsigned __int8 v68 = *(unsigned char *)(v67 + 48);
      swift_release();
      v82[0] = v68;
      if ((CalculateExpression.TokenType.isPrefixOperator.getter() & 1) == 0) {
        break;
      }
    }
LABEL_63:
    uint64_t v56 = v57 + 1;
    if (__OFADD__(v57, 1)) {
      goto LABEL_114;
    }
  }
  type metadata accessor for CalculateExpression.Token();
  uint64_t v69 = swift_allocObject();
  *(void *)(v69 + 40) = 0;
  *(void *)(v69 + 32) = 0;
  swift_weakInit();
  *(_OWORD *)(v69 + 88) = 0u;
  *(_OWORD *)(v69 + 72) = 0u;
  *(void *)(v69 + 16) = 32;
  *(void *)(v69 + 24) = 0xE100000000000000;
  swift_beginAccess();
  *(void *)(v69 + 32) = 0;
  *(void *)(v69 + 40) = 0;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v69 + 48) = 17;
  *(void *)(v69 + 64) = MEMORY[0x1E4FBC860];
  swift_beginAccess();
  if (!(*(void *)v7 >> 62))
  {
    if (*(void *)((*(void *)v7 & 0xFFFFFFFFFFFFFF8) + 0x10) < v56) {
      goto LABEL_103;
    }
    goto LABEL_92;
  }
  swift_bridgeObjectRetain();
  uint64_t v73 = sub_1BDDB0448();
  swift_bridgeObjectRelease();
  if (v73 >= v56)
  {
LABEL_92:
    sub_1BDD35B7C(v56, v56, v69, (void (*)(uint64_t))type metadata accessor for CalculateExpression.Token);
    swift_endAccess();
    goto LABEL_63;
  }
LABEL_103:
  __break(1u);
LABEL_104:
  unint64_t v7 = *(void *)v7;
  if (v7 >> 62) {
    goto LABEL_123;
  }
  uint64_t v74 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v74)
  {
LABEL_106:
    if (v74 < 1)
    {
      __break(1u);
      goto LABEL_126;
    }
    uint64_t v75 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        uint64_t v76 = MEMORY[0x1C18862A0](v75, v7);
      }
      else
      {
        uint64_t v76 = *(void *)(v7 + 8 * v75 + 32);
        swift_retain();
      }
      ++v75;
      unsigned __int8 v77 = *(void (**)(uint64_t))(*(void *)v76 + 192);
      uint64_t v78 = swift_retain();
      v77(v78);
      swift_release();
    }
    while (v74 != v75);
  }
LABEL_124:
  swift_bridgeObjectRelease();
  swift_release();
  return v3;
}

uint64_t sub_1BDD30E3C(uint64_t result)
{
  if (!result) {
    return result;
  }
  uint64_t v2 = result;
  if (result < 0)
  {
    __break(1u);
  }
  else if (!(*v1 >> 62))
  {
    uint64_t v3 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v4 = -v3;
    if (!__OFSUB__(0, v3)) {
      goto LABEL_5;
    }
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1BDDB0448();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v4 = -v3;
  if (__OFSUB__(0, v3)) {
    goto LABEL_19;
  }
LABEL_5:
  uint64_t v5 = -v2;
  if (v4 <= 0 && v4 > v5) {
    goto LABEL_22;
  }
  uint64_t result = v3 - v2;
  if (__OFADD__(v3, v5)) {
    goto LABEL_20;
  }
  if (v3 < result)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    return result;
  }
  return sub_1BDD37044(result, v3);
}

uint64_t sub_1BDD30F10()
{
  sub_1BDD30F64();
  return *(unsigned __int8 *)(v0 + 89);
}

uint64_t sub_1BDD30F2C()
{
  sub_1BDD30F64();
  return *(unsigned __int8 *)(v0 + 90);
}

uint64_t sub_1BDD30F48()
{
  sub_1BDD30F64();
  return *(unsigned __int8 *)(v0 + 91);
}

void sub_1BDD30F64()
{
  if (v0[24] != 1) {
    return;
  }
  v0[24] = 0;
  uint64_t v2 = (uint64_t (**)(void))(*(void *)v0 + 264);
  uint64_t v3 = *v2;
  unint64_t v4 = (*v2)();
  if (v4 >> 62) {
LABEL_91:
  }
    uint64_t v5 = sub_1BDDB0448();
  else {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v6 = swift_bridgeObjectRelease();
  if (v5 < 1)
  {
    unint64_t v8 = 0;
    goto LABEL_10;
  }
  uint64_t v7 = ((uint64_t (*)(uint64_t))v3)(v6);
  unint64_t v8 = v7;
  if ((v7 & 0xC000000000000001) != 0) {
    goto LABEL_97;
  }
  if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_99;
  }
  uint64_t v9 = *(void *)(v7 + 32);
  swift_retain();
LABEL_8:
  swift_bridgeObjectRelease();
  unsigned __int8 v10 = *(unsigned char *)(v9 + 48);
  swift_release();
  unsigned __int8 v60 = v10;
  unsigned __int8 v59 = 4;
  unint64_t v8 = static CalculateExpression.TokenType.== infix(_:_:)(&v60, &v59);
LABEL_10:
  unint64_t v11 = v3();
  if (v11 >> 62) {
    uint64_t v12 = sub_1BDDB0448();
  }
  else {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v13 = swift_bridgeObjectRelease();
  if ((uint64_t)v8 < v12)
  {
    uint64_t v14 = ((uint64_t (*)(uint64_t))v3)(v13);
    uint64_t v5 = v14;
    if ((v14 & 0xC000000000000001) != 0)
    {
LABEL_99:
      uint64_t v15 = MEMORY[0x1C18862A0](v8, v5);
    }
    else
    {
      if (v8 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_101;
      }
      uint64_t v15 = *(void *)(v14 + 8 * v8 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    unsigned __int8 v16 = *(unsigned char *)(v15 + 48);
    swift_release();
    unsigned __int8 v60 = v16;
    unsigned __int8 v59 = 10;
    v8 += static CalculateExpression.TokenType.== infix(_:_:)(&v60, &v59);
  }
  unint64_t v17 = v3();
  if (v17 >> 62) {
    uint64_t v18 = sub_1BDDB0448();
  }
  else {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v19 = swift_bridgeObjectRelease();
  if ((uint64_t)v8 >= v18)
  {
LABEL_48:
    LOBYTE(v5) = 0;
    ++v8;
    goto LABEL_50;
  }
  uint64_t v20 = ((uint64_t (*)(uint64_t))v3)(v19);
  uint64_t v5 = v20;
  if ((v20 & 0xC000000000000001) == 0)
  {
    if (v8 >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_103;
    }
    uint64_t v21 = *(void *)(v20 + 8 * v8 + 32);
    swift_retain();
    goto LABEL_23;
  }
LABEL_101:
  uint64_t v21 = MEMORY[0x1C18862A0](v8, v5);
LABEL_23:
  swift_bridgeObjectRelease();
  unsigned __int8 v22 = *(unsigned char *)(v21 + 48);
  swift_release();
  unsigned __int8 v60 = v22;
  unsigned __int8 v59 = 15;
  if (!static CalculateExpression.TokenType.== infix(_:_:)(&v60, &v59)) {
    goto LABEL_48;
  }
  unint64_t v23 = v3();
  if (v23 >> 62) {
    uint64_t v24 = sub_1BDDB0448();
  }
  else {
    uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v25 = swift_bridgeObjectRelease();
  if ((uint64_t)v8 >= v24)
  {
LABEL_49:
    LOBYTE(v5) = 0;
LABEL_50:
    unint64_t v36 = v3();
    if (v36 >> 62) {
      uint64_t v37 = sub_1BDDB0448();
    }
    else {
      uint64_t v37 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v38 = swift_bridgeObjectRelease();
    if ((uint64_t)v8 < v37)
    {
      uint64_t v39 = ((uint64_t (*)(uint64_t))v3)(v38);
      uint64_t v18 = v39;
      if ((v39 & 0xC000000000000001) == 0)
      {
        if ((v8 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v8 < *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v40 = *(void *)(v39 + 8 * v8 + 32);
          swift_retain();
          goto LABEL_57;
        }
        __break(1u);
LABEL_106:
        uint64_t v47 = MEMORY[0x1C18862A0](v8, v18);
LABEL_65:
        swift_bridgeObjectRelease();
        unsigned __int8 v48 = *(unsigned char *)(v47 + 48);
        swift_release();
        unsigned __int8 v60 = v48;
        unsigned __int8 v59 = 7;
        if (static CalculateExpression.TokenType.== infix(_:_:)(&v60, &v59))
        {
          LOBYTE(v5) = 0;
          ++v8;
          char v1 = 1;
          goto LABEL_68;
        }
LABEL_67:
        char v1 = 0;
LABEL_68:
        if ((*(uint64_t (**)(void))(*(void *)v0 + 624))())
        {
          BOOL v49 = 0;
LABEL_73:
          v0[89] = v49;
          v0[90] = v1;
          v0[91] = v5 & 1;
          return;
        }
        unint64_t v50 = v3();
        if (!(v50 >> 62))
        {
          uint64_t v51 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_72:
          swift_bridgeObjectRelease();
          BOOL v49 = v8 == v51;
          goto LABEL_73;
        }
LABEL_109:
        uint64_t v51 = sub_1BDDB0448();
        goto LABEL_72;
      }
LABEL_103:
      uint64_t v40 = MEMORY[0x1C18862A0](v8, v18);
LABEL_57:
      swift_bridgeObjectRelease();
      unsigned __int8 v41 = *(unsigned char *)(v40 + 48);
      swift_release();
      unsigned __int8 v60 = v41;
      unsigned __int8 v59 = 8;
      BOOL v42 = static CalculateExpression.TokenType.== infix(_:_:)(&v60, &v59);
      v8 += v42;
      LOBYTE(v5) = !v42 & v5;
    }
    unint64_t v43 = v3();
    if (v43 >> 62) {
      uint64_t v44 = sub_1BDDB0448();
    }
    else {
      uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v45 = swift_bridgeObjectRelease();
    if ((uint64_t)v8 >= v44) {
      goto LABEL_67;
    }
    uint64_t v46 = ((uint64_t (*)(uint64_t))v3)(v45);
    uint64_t v18 = v46;
    if ((v46 & 0xC000000000000001) != 0) {
      goto LABEL_106;
    }
    if ((v8 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v8 < *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v47 = *(void *)(v46 + 8 * v8 + 32);
      swift_retain();
      goto LABEL_65;
    }
    __break(1u);
    goto LABEL_109;
  }
  uint64_t v26 = 0;
  char v1 = 15;
  while (1)
  {
    uint64_t v27 = ((uint64_t (*)(uint64_t))v3)(v25);
    if ((v27 & 0xC000000000000001) != 0)
    {
      uint64_t v28 = MEMORY[0x1C18862A0](v8, v27);
    }
    else
    {
      if (v8 >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_88;
      }
      uint64_t v28 = *(void *)(v27 + 8 * v8 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    unsigned __int8 v29 = *(unsigned char *)(v28 + 48);
    swift_release();
    unsigned __int8 v60 = v29;
    unsigned __int8 v59 = 15;
    if (static CalculateExpression.TokenType.== infix(_:_:)(&v60, &v59))
    {
      BOOL v30 = __OFADD__(v26++, 1);
      if (v30) {
        goto LABEL_89;
      }
      goto LABEL_41;
    }
    uint64_t v31 = v3();
    if ((v31 & 0xC000000000000001) != 0)
    {
      uint64_t v32 = MEMORY[0x1C18862A0](v8, v31);
    }
    else
    {
      if (v8 >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_90;
      }
      uint64_t v32 = *(void *)(v31 + 8 * v8 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    unsigned __int8 v33 = *(unsigned char *)(v32 + 48);
    swift_release();
    unsigned __int8 v60 = v33;
    unsigned __int8 v59 = 16;
    if (static CalculateExpression.TokenType.== infix(_:_:)(&v60, &v59))
    {
      BOOL v30 = __OFSUB__(v26--, 1);
      if (v30)
      {
        __break(1u);
LABEL_97:
        uint64_t v9 = MEMORY[0x1C18862A0](0, v8);
        goto LABEL_8;
      }
      if (v26 <= 0) {
        break;
      }
    }
LABEL_41:
    unint64_t v34 = v3();
    if (v34 >> 62) {
      uint64_t v35 = sub_1BDDB0448();
    }
    else {
      uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    ++v8;
    uint64_t v25 = swift_bridgeObjectRelease();
    if ((uint64_t)v8 >= v35) {
      goto LABEL_49;
    }
  }
  unint64_t v52 = v3();
  unint64_t v53 = v52;
  if (v52 >> 62) {
    uint64_t v54 = sub_1BDDB0448();
  }
  else {
    uint64_t v54 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v55 = swift_bridgeObjectRelease();
  if (__OFSUB__(v54, 1))
  {
    __break(1u);
    goto LABEL_113;
  }
  if (v54 - 1 != v8)
  {
    LOBYTE(v5) = 0;
    goto LABEL_85;
  }
  uint64_t v56 = ((uint64_t (*)(uint64_t))v3)(v55);
  unint64_t v53 = v56;
  if ((v56 & 0xC000000000000001) != 0)
  {
LABEL_113:
    uint64_t v57 = MEMORY[0x1C18862A0](v8, v53);
LABEL_83:
    swift_bridgeObjectRelease();
    unsigned __int8 v58 = *(unsigned char *)(v57 + 48);
    swift_release();
    unsigned __int8 v60 = v58;
    unsigned __int8 v59 = 16;
    LOBYTE(v5) = static CalculateExpression.TokenType.== infix(_:_:)(&v60, &v59);
LABEL_85:
    BOOL v30 = __OFADD__(v8++, 1);
    if (!v30) {
      goto LABEL_50;
    }
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  if ((v8 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v8 < *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v57 = *(void *)(v56 + 8 * v8 + 32);
    swift_retain();
    goto LABEL_83;
  }
  __break(1u);
}

uint64_t sub_1BDD31744(char a1)
{
  if ((a1 & 1) != 0 || ((*(uint64_t (**)(void))(*(void *)v1 + 568))() & 1) == 0)
  {
    if (((*(uint64_t (**)(void))(*(void *)v1 + 600))() & 1) != 0
      || ((*(uint64_t (**)(void))(*(void *)v1 + 536))() & 1) != 0)
    {
      char v2 = 0;
    }
    else
    {
      char v2 = (*(uint64_t (**)(void))(*(void *)v1 + 624))() ^ 1;
    }
  }
  else
  {
    char v2 = 1;
  }
  return v2 & 1;
}

BOOL sub_1BDD31828()
{
  unint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 264))();
  if (v1 >> 62) {
    uint64_t v2 = sub_1BDDB0448();
  }
  else {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v2 == 0;
}

uint64_t sub_1BDD318AC()
{
  unint64_t v1 = *(uint64_t (**)(unsigned char *))(*(void *)v0 + 280);
  swift_retain();
  uint64_t v2 = (uint64_t (*)(unsigned char *, void))v1(v6);
  unint64_t v4 = v3;
  MEMORY[0x1C1885EA0]();
  if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1BDDB0008();
  }
  sub_1BDDB0048();
  sub_1BDDAFFD8();
  return v2(v6, 0);
}

uint64_t sub_1BDD31978(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = a1;
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (a2 - 1 >= 2)
  {
    if (a2) {
      goto LABEL_3;
    }
LABEL_7:
    int v10 = 0;
    goto LABEL_8;
  }
  a1 = (*(uint64_t (**)(BOOL))(*(void *)a1 + 616))(a2 == 1);
  if ((a1 & 1) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  type metadata accessor for CalculateExpression.Token();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 40) = 0;
  *(void *)(v6 + 32) = 0;
  swift_weakInit();
  *(_OWORD *)(v6 + 88) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  *(void *)(v6 + 16) = 40;
  *(void *)(v6 + 24) = 0xE100000000000000;
  swift_beginAccess();
  *(void *)(v6 + 32) = 0;
  *(void *)(v6 + 40) = 0;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v6 + 48) = 15;
  *(void *)(v6 + 64) = v5;
  uint64_t v7 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*v2 + 280))(v20);
  uint64_t v9 = v8;
  MEMORY[0x1C1885EA0]();
  if (*(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1BDDB0008();
  }
  sub_1BDDB0048();
  sub_1BDDAFFD8();
  a1 = v7(v20, 0);
  int v10 = 1;
LABEL_8:
  unint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 264))(a1);
  uint64_t v12 = (uint64_t (**)(unsigned char *))(*v3 + 280);
  uint64_t v13 = *v12;
  uint64_t v14 = (uint64_t (*)(unsigned char *, void))(*v12)(v20);
  sub_1BDD31CB8(v11);
  uint64_t result = v14(v20, 0);
  if (v10)
  {
    type metadata accessor for CalculateExpression.Token();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 40) = 0;
    *(void *)(v16 + 32) = 0;
    swift_weakInit();
    *(_OWORD *)(v16 + 88) = 0u;
    *(_OWORD *)(v16 + 72) = 0u;
    *(void *)(v16 + 16) = 41;
    *(void *)(v16 + 24) = 0xE100000000000000;
    swift_beginAccess();
    *(void *)(v16 + 32) = 0;
    *(void *)(v16 + 40) = 0;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v16 + 48) = 16;
    *(void *)(v16 + 64) = v5;
    unint64_t v17 = (uint64_t (*)(unsigned char *, void))v13(v20);
    uint64_t v19 = v18;
    MEMORY[0x1C1885EA0]();
    if (*(void *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1BDDB0008();
    }
    sub_1BDDB0048();
    sub_1BDDAFFD8();
    return v17(v20, 0);
  }
  return result;
}

uint64_t sub_1BDD31CB8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x1C18862B0](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    unint64_t *v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_1BDD3604C(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();
  return sub_1BDDAFFD8();
}

uint64_t sub_1BDD31E84()
{
  uint64_t v14 = 0;
  unint64_t v15 = 0xE000000000000000;
  unint64_t v1 = (uint64_t (**)(uint64_t))(*(void *)v0 + 288);
  uint64_t v2 = *v1;
  uint64_t v3 = (*v1)(0);
  if (v3)
  {
    unsigned __int8 v13 = *(unsigned char *)(v3 + 48);
    unsigned __int8 v12 = 4;
    if (static CalculateExpression.TokenType.== infix(_:_:)(&v13, &v12))
    {
      sub_1BDDAFE18();
      uint64_t v4 = 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    swift_release();
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v2(v4);
  if (v5)
  {
    uint64_t v6 = v5;
    unsigned __int8 v13 = *(unsigned char *)(v5 + 48);
    unsigned __int8 v12 = 1;
    if (static CalculateExpression.TokenType.== infix(_:_:)(&v13, &v12))
    {
      (*(void (**)(void))(*(void *)v6 + 136))();
      sub_1BDDAFE18();
      swift_bridgeObjectRelease();
      uint64_t v7 = swift_release();
      uint64_t v8 = v4 + 1;
      unint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)v0 + 264))(v7);
      if (v9 >> 62) {
        uint64_t v10 = sub_1BDDB0448();
      }
      else {
        uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v8 == v10) {
        return v14;
      }
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BDD32070(void *a1, unint64_t *a2, unsigned char *a3)
{
  uint64_t v5 = v3;
  uint64_t v7 = (uint64_t)a2;
  unint64_t v9 = *a2;
  unint64_t v10 = *(void *)(*a1 + 392);
  uint64_t v104 = (void (*)(uint64_t, void))(*a1 + 392);
  uint64_t v11 = ((uint64_t (*)(void))v10)();
  uint64_t v12 = v11;
  uint64_t v105 = (uint64_t (*)(uint64_t))v10;
  if ((v11 & 0xC000000000000001) == 0)
  {
    if ((v9 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v9 < *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v13 = *(void *)(v11 + 8 * v9 + 32);
      swift_retain();
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_65;
  }
  uint64_t v13 = MEMORY[0x1C18862A0](v9, v11);
LABEL_5:
  swift_bridgeObjectRelease();
  sub_1BDD36EA8(a1, (uint64_t *)v7);
  unint64_t v10 = sub_1BDD33FEC(a1, (uint64_t *)v7, a3);
  unint64_t v108 = v10;
  type metadata accessor for CalculateExpression.PlainExpression();
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  *(_WORD *)(v12 + 24) = 1;
  uint64_t v14 = MEMORY[0x1E4FBC860];
  *(void *)(v12 + 32) = MEMORY[0x1E4FBC860];
  *(unsigned char *)(v12 + 40) = 1;
  *(void *)(v12 + 48) = 0;
  *(void *)(v12 + 56) = 0;
  *(void *)(v12 + 64) = MEMORY[0x1E4FBC870];
  *(unsigned char *)(v12 + 72) = 0;
  *(void *)(v12 + 80) = v14;
  *(_DWORD *)(v12 + 88) = 0;
  uint64_t v15 = *(void *)v13 + 344;
  uint64_t v4 = *(uint64_t (**)(uint64_t))v15;
  uint64_t v16 = swift_bridgeObjectRetain();
  if ((v4(v16) & 1) == 0)
  {
    if ((*(uint64_t (**)(void))(*(void *)v13 + 360))())
    {
      uint64_t v19 = swift_bridgeObjectRelease();
      uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 280))(v19);
      if (!v18) {
        goto LABEL_44;
      }
      uint64_t v20 = v18;
      if (((*(uint64_t (**)(void))(*(void *)v18 + 560))() & 1) != 0
        || ((*(uint64_t (**)(void))(*(void *)v20 + 568))() & 1) != 0)
      {
        uint64_t v18 = swift_release();
        goto LABEL_44;
      }
      v107[0] = 0;
      uint64_t v5 = (void (*)(uint64_t))sub_1BDD34ED0(v20, v107, a3);
      if (v10 >> 62) {
        goto LABEL_178;
      }
      swift_retain();
      goto LABEL_43;
    }
    if ((*(uint64_t (**)(void))(*(void *)v13 + 368))())
    {
      uint64_t v21 = (*(uint64_t (**)(void))(*(void *)v13 + 280))();
      if (v21)
      {
        v106[0] = 0;
        uint64_t v103 = sub_1BDD34ED0(v21, v106, a3);
        uint64_t v4 = (uint64_t (*)(uint64_t))(v10 >> 62);
        if (!(v10 >> 62))
        {
          if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1) {
            goto LABEL_19;
          }
          goto LABEL_163;
        }
LABEL_162:
        swift_bridgeObjectRetain();
        uint64_t v97 = sub_1BDDB0448();
        swift_bridgeObjectRelease();
        if (v97 == 1)
        {
LABEL_19:
          uint64_t v7 = type metadata accessor for CalculateExpression.Token();
          uint64_t v22 = swift_retain();
          uint64_t v23 = sub_1BDD362D4(v22, 0);
          swift_release();
          uint64_t v24 = (void (**)(uint64_t))(*(void *)v12 + 632);
          uint64_t v25 = *v24;
          (*v24)(v23);
          swift_release();
          uint64_t v102 = *(void (**)(uint64_t, void))(*(void *)v12 + 640);
          v102(v103, 0);
          uint64_t v26 = swift_allocObject();
          *(void *)(v26 + 40) = 0;
          *(void *)(v26 + 32) = 0;
          swift_weakInit();
          *(_OWORD *)(v26 + 88) = 0u;
          *(_OWORD *)(v26 + 72) = 0u;
          *(void *)(v26 + 16) = 40;
          *(void *)(v26 + 24) = 0xE100000000000000;
          swift_beginAccess();
          *(void *)(v26 + 32) = 0;
          *(void *)(v26 + 40) = 0;
          swift_bridgeObjectRelease();
          *(unsigned char *)(v26 + 48) = 15;
          *(void *)(v26 + 64) = MEMORY[0x1E4FBC860];
          v25(v26);
          swift_release();
          if (v4)
          {
            swift_bridgeObjectRetain();
            uint64_t v27 = sub_1BDDB0448();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v27 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (!v27) {
            goto LABEL_192;
          }
          unint64_t v47 = v27 - 1;
          if (__OFSUB__(v27, 1)) {
            goto LABEL_180;
          }
          if ((v10 & 0xC000000000000001) == 0)
          {
            if ((v47 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v47 < *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              uint64_t v48 = *(void *)(v10 + 8 * v47 + 32);
              swift_retain();
LABEL_61:
              swift_bridgeObjectRelease();
              v102(v48, 0);
              swift_release();
              uint64_t v49 = swift_allocObject();
              *(void *)(v49 + 40) = 0;
              *(void *)(v49 + 32) = 0;
              swift_weakInit();
              *(_OWORD *)(v49 + 88) = 0u;
              *(_OWORD *)(v49 + 72) = 0u;
              *(void *)(v49 + 16) = 41;
              *(void *)(v49 + 24) = 0xE100000000000000;
              swift_beginAccess();
              *(void *)(v49 + 32) = 0;
              *(void *)(v49 + 40) = 0;
              swift_bridgeObjectRelease();
              *(unsigned char *)(v49 + 48) = 16;
              *(void *)(v49 + 64) = MEMORY[0x1E4FBC860];
              v25(v49);
              swift_release();
              swift_release();
LABEL_147:
              swift_release();
              swift_release();
              goto LABEL_148;
            }
            __break(1u);
            goto LABEL_185;
          }
          uint64_t v48 = MEMORY[0x1C18862A0](v47, v10);
          goto LABEL_61;
        }
LABEL_163:
        uint64_t v98 = swift_bridgeObjectRelease();
        *a3 = 1;
        unint64_t v99 = v105(v98);
        if (v99 >> 62) {
          goto LABEL_181;
        }
        uint64_t v91 = *(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_165:
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_144;
      }
    }
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
      if (v28 == 1) {
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v28 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v28 == 1)
      {
LABEL_23:
        uint64_t v7 = type metadata accessor for CalculateExpression.Token();
        uint64_t v29 = swift_retain();
        uint64_t v30 = sub_1BDD362D4(v29, 0);
        swift_release();
        a3 = (unsigned char *)(*(void *)v12 + 632);
        uint64_t v15 = *(void *)a3;
        (*(void (**)(uint64_t))a3)(v30);
        swift_release();
        uint64_t v31 = swift_allocObject();
        *(void *)(v31 + 40) = 0;
        *(void *)(v31 + 32) = 0;
        swift_weakInit();
        *(_OWORD *)(v31 + 88) = 0u;
        *(_OWORD *)(v31 + 72) = 0u;
        *(void *)(v31 + 16) = 40;
        *(void *)(v31 + 24) = 0xE100000000000000;
        swift_beginAccess();
        *(void *)(v31 + 32) = 0;
        *(void *)(v31 + 40) = 0;
        swift_bridgeObjectRelease();
        *(unsigned char *)(v31 + 48) = 15;
        *(void *)(v31 + 64) = MEMORY[0x1E4FBC860];
        ((void (*)(uint64_t))v15)(v31);
        swift_release();
        if ((v10 & 0xC000000000000001) != 0) {
          goto LABEL_160;
        }
        if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v32 = *(void *)(v10 + 32);
          swift_retain();
          goto LABEL_26;
        }
        __break(1u);
        goto LABEL_162;
      }
    }
    uint64_t v18 = swift_bridgeObjectRelease();
    if (v28) {
      goto LABEL_141;
    }
    type metadata accessor for CalculateExpression.Token();
    uint64_t v92 = swift_retain();
    uint64_t v93 = sub_1BDD362D4(v92, 0);
    swift_release();
    uint64_t v15 = *(void *)(*(void *)v12 + 632);
    ((void (*)(uint64_t))v15)(v93);
    swift_release();
    uint64_t v94 = swift_allocObject();
    *(void *)(v94 + 40) = 0;
    *(void *)(v94 + 32) = 0;
    swift_weakInit();
    *(_OWORD *)(v94 + 88) = 0u;
    *(_OWORD *)(v94 + 72) = 0u;
    *(void *)(v94 + 16) = 40;
    *(void *)(v94 + 24) = 0xE100000000000000;
    swift_beginAccess();
    *(void *)(v94 + 32) = 0;
    *(void *)(v94 + 40) = 0;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v94 + 48) = 15;
    uint64_t v95 = MEMORY[0x1E4FBC860];
    *(void *)(v94 + 64) = MEMORY[0x1E4FBC860];
    ((void (*)(uint64_t))v15)(v94);
    swift_release();
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 40) = 0;
    *(void *)(v33 + 32) = 0;
    swift_weakInit();
    *(_OWORD *)(v33 + 88) = 0u;
    *(_OWORD *)(v33 + 72) = 0u;
    *(void *)(v33 + 16) = 41;
    *(void *)(v33 + 24) = 0xE100000000000000;
    swift_beginAccess();
    *(void *)(v33 + 32) = 0;
    *(void *)(v33 + 40) = 0;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v33 + 48) = 16;
    *(void *)(v33 + 64) = v95;
    goto LABEL_146;
  }
  uint64_t v17 = swift_bridgeObjectRelease();
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 256))(v17);
  if (!v18) {
    goto LABEL_30;
  }
  uint64_t v15 = v18;
  if (((*(uint64_t (**)(void))(*(void *)v18 + 560))() & 1) != 0
    || ((*(uint64_t (**)(void))(*(void *)v15 + 568))() & 1) != 0)
  {
    uint64_t v18 = swift_release();
    goto LABEL_30;
  }
  v107[0] = 0;
  uint64_t v5 = (void (*)(uint64_t))sub_1BDD34ED0(v15, v107, a3);
  if (!(v10 >> 62))
  {
    swift_retain();
LABEL_29:
    sub_1BDD35B7C(0, 0, (uint64_t)v5, (void (*)(uint64_t))type metadata accessor for CalculateExpression.PlainExpression);
    swift_release();
    uint64_t v18 = swift_release();
    unint64_t v10 = v108;
LABEL_30:
    uint64_t v4 = (uint64_t (*)(uint64_t))(v10 >> 62);
    if (!(v10 >> 62))
    {
      uint64_t v34 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v34 == 1) {
        goto LABEL_32;
      }
      goto LABEL_67;
    }
LABEL_65:
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    if (v15 == 1) {
      goto LABEL_32;
    }
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1BDDB0448();
    uint64_t v18 = swift_bridgeObjectRelease();
LABEL_67:
    if (v34 != 2) {
      goto LABEL_76;
    }
    if ((v10 & 0xC000000000000001) != 0) {
      goto LABEL_156;
    }
    if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_158;
    }
    uint64_t v5 = *(void (**)(uint64_t))(v10 + 32);
    uint64_t v50 = swift_retain();
    goto LABEL_71;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v100 = sub_1BDDB0448();
  swift_bridgeObjectRelease();
  if ((v100 & 0x8000000000000000) == 0) {
    goto LABEL_29;
  }
  __break(1u);
  while (2)
  {
    uint64_t v68 = MEMORY[0x1C18862A0](0, v10);
    uint64_t v67 = v68;
LABEL_110:
    uint64_t v4 = (uint64_t (*)(uint64_t))(*(uint64_t (**)(uint64_t))(*(void *)v67 + 648))(v68);
    uint64_t v70 = v69;
    uint64_t v18 = swift_release();
    if (!v70) {
      goto LABEL_115;
    }
    if (v4 == (uint64_t (*)(uint64_t))12337 && v70 == 0xE200000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    char v71 = sub_1BDDB04E8();
    uint64_t v18 = swift_bridgeObjectRelease();
    if ((v71 & 1) == 0) {
      goto LABEL_115;
    }
    while (1)
    {
LABEL_46:
      uint64_t v7 = type metadata accessor for CalculateExpression.Token();
      uint64_t v39 = swift_retain();
      uint64_t v40 = sub_1BDD362D4(v39, 0);
      swift_release();
      a3 = (unsigned char *)(*(void *)v12 + 632);
      unsigned __int8 v41 = *(void (**)(uint64_t))a3;
      (*(void (**)(uint64_t))a3)(v40);
      swift_release();
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 40) = 0;
      *(void *)(v42 + 32) = 0;
      swift_weakInit();
      *(_OWORD *)(v42 + 88) = 0u;
      *(_OWORD *)(v42 + 72) = 0u;
      *(void *)(v42 + 16) = 40;
      *(void *)(v42 + 24) = 0xE100000000000000;
      swift_beginAccess();
      *(void *)(v42 + 32) = 0;
      *(void *)(v42 + 40) = 0;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v42 + 48) = 15;
      *(void *)(v42 + 64) = MEMORY[0x1E4FBC860];
      v41(v42);
      swift_release();
      if (v15)
      {
        swift_bridgeObjectRetain();
        uint64_t v43 = sub_1BDDB0448();
        if (!v43)
        {
LABEL_151:
          unint64_t v44 = swift_bridgeObjectRelease();
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          uint64_t v45 = MEMORY[0x1C18862A0](v44, v10);
LABEL_53:
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, void))(*(void *)v12 + 640))(v45, 0);
          swift_release();
          uint64_t v46 = swift_allocObject();
          *(void *)(v46 + 40) = 0;
          *(void *)(v46 + 32) = 0;
          swift_weakInit();
          *(_OWORD *)(v46 + 88) = 0u;
          *(_OWORD *)(v46 + 72) = 0u;
          *(void *)(v46 + 16) = 41;
          *(void *)(v46 + 24) = 0xE100000000000000;
          swift_beginAccess();
          *(void *)(v46 + 32) = 0;
          *(void *)(v46 + 40) = 0;
          swift_bridgeObjectRelease();
          *(unsigned char *)(v46 + 48) = 16;
          *(void *)(v46 + 64) = MEMORY[0x1E4FBC860];
          v41(v46);
          goto LABEL_147;
        }
      }
      else
      {
        uint64_t v43 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v43) {
          goto LABEL_151;
        }
      }
      unint64_t v44 = v43 - 1;
      if (__OFSUB__(v43, 1)) {
        goto LABEL_152;
      }
      if ((v10 & 0xC000000000000001) != 0) {
        goto LABEL_153;
      }
      if ((v44 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v44 < *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v45 = *(void *)(v10 + 8 * v44 + 32);
        swift_retain();
        goto LABEL_53;
      }
      __break(1u);
LABEL_156:
      uint64_t v50 = MEMORY[0x1C18862A0](0, v10);
      uint64_t v5 = (void (*)(uint64_t))v50;
LABEL_71:
      uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 648))(v50);
      uint64_t v52 = v51;
      uint64_t v18 = swift_release();
      if (v52) {
        break;
      }
LABEL_76:
      if (v4)
      {
        swift_bridgeObjectRetain();
        uint64_t v53 = sub_1BDDB0448();
        uint64_t v18 = swift_bridgeObjectRelease();
        if (v53 != 2) {
          goto LABEL_141;
        }
      }
      else if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) != 2)
      {
        goto LABEL_141;
      }
      uint64_t v4 = (uint64_t (*)(uint64_t))(v10 & 0xC000000000000001);
      if ((v10 & 0xC000000000000001) == 0)
      {
        if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v54 = *(void *)(v10 + 32);
          uint64_t v55 = swift_retain();
          goto LABEL_83;
        }
        __break(1u);
LABEL_160:
        uint64_t v32 = MEMORY[0x1C18862A0](0, v10);
LABEL_26:
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, void))(*(void *)v12 + 640))(v32, 0);
        swift_release();
        uint64_t v33 = swift_allocObject();
        *(void *)(v33 + 40) = 0;
        *(void *)(v33 + 32) = 0;
        swift_weakInit();
        *(_OWORD *)(v33 + 88) = 0u;
        *(_OWORD *)(v33 + 72) = 0u;
        *(void *)(v33 + 16) = 41;
        *(void *)(v33 + 24) = 0xE100000000000000;
        swift_beginAccess();
        *(void *)(v33 + 32) = 0;
        *(void *)(v33 + 40) = 0;
        swift_bridgeObjectRelease();
        *(unsigned char *)(v33 + 48) = 16;
        *(void *)(v33 + 64) = MEMORY[0x1E4FBC860];
LABEL_146:
        ((void (*)(uint64_t))v15)(v33);
        goto LABEL_147;
      }
LABEL_158:
      uint64_t v55 = MEMORY[0x1C18862A0](0, v10);
      uint64_t v54 = v55;
LABEL_83:
      uint64_t v56 = (*(uint64_t (**)(uint64_t))(*(void *)v54 + 648))(v55);
      uint64_t v58 = v57;
      swift_release();
      if (!v58) {
        goto LABEL_91;
      }
      if (v56 == 51 && v58 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v59 = sub_1BDDB04E8();
        swift_bridgeObjectRelease();
        if ((v59 & 1) == 0)
        {
LABEL_91:
          type metadata accessor for CalculateExpression.Token();
          uint64_t v60 = swift_allocObject();
          *(void *)(v60 + 40) = 0;
          *(void *)(v60 + 32) = 0;
          swift_weakInit();
          *(_OWORD *)(v60 + 88) = 0u;
          *(_OWORD *)(v60 + 72) = 0u;
          *(void *)(v60 + 16) = 1953460082;
          *(void *)(v60 + 24) = 0xE400000000000000;
          swift_beginAccess();
          *(void *)(v60 + 32) = 0;
          *(void *)(v60 + 40) = 0;
          swift_bridgeObjectRelease();
          *(unsigned char *)(v60 + 48) = 10;
          a3 = (unsigned char *)MEMORY[0x1E4FBC860];
          *(void *)(v60 + 64) = MEMORY[0x1E4FBC860];
          uint64_t v5 = *(void (**)(uint64_t))(*(void *)v12 + 632);
          v5(v60);
          swift_release();
          uint64_t v61 = swift_allocObject();
          *(void *)(v61 + 40) = 0;
          *(void *)(v61 + 32) = 0;
          swift_weakInit();
          *(_OWORD *)(v61 + 88) = 0u;
          *(_OWORD *)(v61 + 72) = 0u;
          *(void *)(v61 + 16) = 40;
          *(void *)(v61 + 24) = 0xE100000000000000;
          swift_beginAccess();
          *(void *)(v61 + 32) = 0;
          *(void *)(v61 + 40) = 0;
          swift_bridgeObjectRelease();
          *(unsigned char *)(v61 + 48) = 15;
          *(void *)(v61 + 64) = a3;
          v5(v61);
          swift_release();
          uint64_t v105 = v4;
          if (v4) {
            goto LABEL_170;
          }
          if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
          {
            uint64_t v62 = *(void *)(v10 + 40);
            swift_retain();
            goto LABEL_94;
          }
          __break(1u);
LABEL_172:
          uint64_t v65 = MEMORY[0x1C18862A0](0, v10);
LABEL_97:
          v104(v65, 0);
          swift_release();
          uint64_t v66 = swift_allocObject();
          *(void *)(v66 + 40) = 0;
          *(void *)(v66 + 32) = 0;
          swift_weakInit();
          *(_OWORD *)(v66 + 88) = 0u;
          *(_OWORD *)(v66 + 72) = 0u;
          *(void *)(v66 + 16) = 41;
          *(void *)(v66 + 24) = 0xE100000000000000;
          swift_beginAccess();
          *(void *)(v66 + 32) = 0;
          *(void *)(v66 + 40) = 0;
          swift_bridgeObjectRelease();
          *(unsigned char *)(v66 + 48) = 16;
          *(void *)(v66 + 64) = MEMORY[0x1E4FBC860];
          v5(v66);
          goto LABEL_147;
        }
      }
      type metadata accessor for CalculateExpression.Token();
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 40) = 0;
      *(void *)(v7 + 32) = 0;
      swift_weakInit();
      *(_OWORD *)(v7 + 88) = 0u;
      *(_OWORD *)(v7 + 72) = 0u;
      *(void *)(v7 + 16) = 10193122;
      *(void *)(v7 + 24) = 0xA300000000000000;
      swift_beginAccess();
      *(void *)(v7 + 32) = 0;
      *(void *)(v7 + 40) = 0;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v7 + 48) = 10;
      *(void *)(v7 + 64) = MEMORY[0x1E4FBC860];
      (*(void (**)(uint64_t))(*(void *)v12 + 632))(v7);
      swift_release();
      if (v4) {
        goto LABEL_176;
      }
      if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
      {
        uint64_t v37 = *(void *)(v10 + 40);
        swift_retain();
        goto LABEL_40;
      }
      __break(1u);
LABEL_178:
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v101 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
      if (v101 < 0)
      {
        __break(1u);
LABEL_180:
        __break(1u);
LABEL_181:
        uint64_t v91 = sub_1BDDB0448();
        goto LABEL_165;
      }
LABEL_43:
      sub_1BDD35B7C(0, 0, (uint64_t)v5, (void (*)(uint64_t))type metadata accessor for CalculateExpression.PlainExpression);
      swift_release();
      uint64_t v18 = swift_release();
      unint64_t v10 = v108;
LABEL_44:
      uint64_t v15 = v10 >> 62;
      if (v10 >> 62) {
        goto LABEL_104;
      }
      uint64_t v38 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v38 != 1) {
        goto LABEL_106;
      }
    }
    if (v15 != 50 || v52 != 0xE100000000000000)
    {
      uint64_t v15 = sub_1BDDB04E8();
      uint64_t v18 = swift_bridgeObjectRelease();
      if (v15) {
        goto LABEL_32;
      }
      goto LABEL_76;
    }
    swift_bridgeObjectRelease();
LABEL_32:
    type metadata accessor for CalculateExpression.Token();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 40) = 0;
    *(void *)(v7 + 32) = 0;
    swift_weakInit();
    *(_OWORD *)(v7 + 88) = 0u;
    *(_OWORD *)(v7 + 72) = 0u;
    *(void *)(v7 + 16) = 10127586;
    *(void *)(v7 + 24) = 0xA300000000000000;
    swift_beginAccess();
    *(void *)(v7 + 32) = 0;
    *(void *)(v7 + 40) = 0;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v7 + 48) = 10;
    *(void *)(v7 + 64) = MEMORY[0x1E4FBC860];
    (*(void (**)(uint64_t))(*(void *)v12 + 632))(v7);
    swift_release();
    if (!v4)
    {
      uint64_t v35 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v35) {
        goto LABEL_34;
      }
LABEL_99:
      unint64_t v36 = swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_100;
    }
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1BDDB0448();
    if (!v35) {
      goto LABEL_99;
    }
LABEL_34:
    unint64_t v36 = v35 - 1;
    if (__OFSUB__(v35, 1))
    {
LABEL_100:
      __break(1u);
LABEL_101:
      uint64_t v37 = MEMORY[0x1C18862A0](v36, v10);
      goto LABEL_39;
    }
    if ((v10 & 0xC000000000000001) != 0) {
      goto LABEL_101;
    }
    if ((v36 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v36 < *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v37 = *(void *)(v10 + 8 * v36 + 32);
      swift_retain();
LABEL_39:
      swift_bridgeObjectRelease();
      goto LABEL_40;
    }
    __break(1u);
LABEL_104:
    swift_bridgeObjectRetain();
    uint64_t v5 = (void (*)(uint64_t))sub_1BDDB0448();
    swift_bridgeObjectRelease();
    if (v5 == (void (*)(uint64_t))1) {
      goto LABEL_46;
    }
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_1BDDB0448();
    uint64_t v18 = swift_bridgeObjectRelease();
LABEL_106:
    if (v38 != 2)
    {
LABEL_115:
      if (!v15)
      {
        if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) != 2) {
          goto LABEL_141;
        }
        goto LABEL_119;
      }
      swift_bridgeObjectRetain();
      uint64_t v72 = sub_1BDDB0448();
      uint64_t v18 = swift_bridgeObjectRelease();
      if (v72 == 2)
      {
LABEL_119:
        uint64_t v105 = (uint64_t (*)(uint64_t))(v10 & 0xC000000000000001);
        if ((v10 & 0xC000000000000001) != 0) {
          goto LABEL_174;
        }
        if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v73 = *(void *)(v10 + 32);
          uint64_t v74 = swift_retain();
          goto LABEL_122;
        }
        __break(1u);
LABEL_176:
        uint64_t v37 = MEMORY[0x1C18862A0](1, v10);
LABEL_40:
        (*(void (**)(uint64_t, uint64_t))(*(void *)v12 + 640))(v37, 2);
        goto LABEL_147;
      }
LABEL_141:
      *a3 = 1;
      unint64_t v90 = v105(v18);
      if (v90 >> 62) {
        uint64_t v91 = sub_1BDDB0448();
      }
      else {
        uint64_t v91 = *(void *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
LABEL_144:
      swift_release();
      *(void *)uint64_t v7 = v91;
LABEL_148:
      swift_bridgeObjectRelease();
      return v12;
    }
    if ((v10 & 0xC000000000000001) != 0) {
      continue;
    }
    break;
  }
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v67 = *(void *)(v10 + 32);
    uint64_t v68 = swift_retain();
    goto LABEL_110;
  }
  __break(1u);
LABEL_170:
  uint64_t v62 = MEMORY[0x1C18862A0](1, v10);
LABEL_94:
  uint64_t v104 = *(void (**)(uint64_t, void))(*(void *)v12 + 640);
  v104(v62, 0);
  swift_release();
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 40) = 0;
  *(void *)(v63 + 32) = 0;
  swift_weakInit();
  *(_OWORD *)(v63 + 88) = 0u;
  *(_OWORD *)(v63 + 72) = 0u;
  *(void *)(v63 + 16) = 44;
  *(void *)(v63 + 24) = 0xE100000000000000;
  swift_beginAccess();
  *(void *)(v63 + 32) = 0;
  *(void *)(v63 + 40) = 0;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v63 + 48) = 11;
  *(void *)(v63 + 64) = a3;
  v5(v63);
  swift_release();
  uint64_t v64 = swift_allocObject();
  *(void *)(v64 + 40) = 0;
  *(void *)(v64 + 32) = 0;
  swift_weakInit();
  *(_OWORD *)(v64 + 88) = 0u;
  *(_OWORD *)(v64 + 72) = 0u;
  *(void *)(v64 + 16) = 32;
  *(void *)(v64 + 24) = 0xE100000000000000;
  swift_beginAccess();
  *(void *)(v64 + 32) = 0;
  *(void *)(v64 + 40) = 0;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v64 + 48) = 17;
  *(void *)(v64 + 64) = a3;
  v5(v64);
  swift_release();
  if (v105) {
    goto LABEL_172;
  }
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v65 = *(void *)(v10 + 32);
    swift_retain();
    goto LABEL_97;
  }
  __break(1u);
LABEL_174:
  uint64_t v74 = MEMORY[0x1C18862A0](0, v10);
  uint64_t v73 = v74;
LABEL_122:
  uint64_t v75 = (*(uint64_t (**)(uint64_t))(*(void *)v73 + 648))(v74);
  uint64_t v77 = v76;
  swift_release();
  swift_bridgeObjectRelease();
  type metadata accessor for CalculateExpression.Token();
  uint64_t v78 = swift_retain();
  uint64_t v79 = sub_1BDD362D4(v78, 0);
  swift_release();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)v12 + 632);
  v4(v79);
  swift_release();
  if (!v77)
  {
    uint64_t v81 = swift_allocObject();
    *(void *)(v81 + 32) = v75;
    *(void *)(v81 + 40) = 0;
    swift_weakInit();
    *(void *)(v81 + 72) = v75;
    *(void *)(v81 + 80) = 0;
    *(void *)(v81 + 88) = v75;
    *(void *)(v81 + 96) = 0;
    *(void *)(v81 + 16) = 40;
    *(void *)(v81 + 24) = 0xE100000000000000;
    swift_beginAccess();
    *(void *)(v81 + 32) = v75;
    *(void *)(v81 + 40) = 0;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v81 + 48) = 15;
    *(void *)(v81 + 64) = MEMORY[0x1E4FBC860];
    v4(v81);
    swift_release();
    if (v105) {
      goto LABEL_187;
    }
    if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v82 = *(void *)(v10 + 32);
      swift_retain();
      goto LABEL_128;
    }
    __break(1u);
LABEL_189:
    uint64_t v86 = MEMORY[0x1C18862A0](1, v10);
LABEL_131:
    v104(v86, 0);
    swift_release();
    uint64_t v87 = swift_allocObject();
    *(void *)(v87 + 32) = v75;
    *(void *)(v87 + 40) = 0;
    swift_weakInit();
    *(void *)(v87 + 72) = v75;
    *(void *)(v87 + 80) = 0;
    *(void *)(v87 + 88) = v75;
    *(void *)(v87 + 96) = 0;
    *(void *)(v87 + 16) = 41;
    *(void *)(v87 + 24) = 0xE100000000000000;
    swift_beginAccess();
    *(void *)(v87 + 32) = v75;
    goto LABEL_138;
  }
  if (v105)
  {
    uint64_t v80 = MEMORY[0x1C18862A0](0, v10);
    goto LABEL_134;
  }
  if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_191;
  }
  uint64_t v80 = *(void *)(v10 + 32);
  swift_retain();
LABEL_134:
  uint64_t v88 = (void (***)(uint64_t))(*(void *)v12 + 640);
  uint64_t v24 = *v88;
  ((void (*)(uint64_t, void))*v88)(v80, 0);
  swift_release();
  uint64_t v75 = swift_allocObject();
  *(void *)(v75 + 40) = 0;
  *(void *)(v75 + 32) = 0;
  swift_weakInit();
  *(_OWORD *)(v75 + 88) = 0u;
  *(_OWORD *)(v75 + 72) = 0u;
  *(void *)(v75 + 16) = 40;
  *(void *)(v75 + 24) = 0xE100000000000000;
  swift_beginAccess();
  *(void *)(v75 + 32) = 0;
  *(void *)(v75 + 40) = 0;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v75 + 48) = 15;
  *(void *)(v75 + 64) = MEMORY[0x1E4FBC860];
  v4(v75);
  swift_release();
  if (v105)
  {
LABEL_185:
    uint64_t v89 = MEMORY[0x1C18862A0](1, v10);
LABEL_137:
    ((void (*)(uint64_t, void))v24)(v89, 0);
    swift_release();
    uint64_t v87 = swift_allocObject();
    *(void *)(v87 + 40) = 0;
    *(void *)(v87 + 32) = 0;
    swift_weakInit();
    *(_OWORD *)(v87 + 88) = 0u;
    *(_OWORD *)(v87 + 72) = 0u;
    *(void *)(v87 + 16) = 41;
    *(void *)(v87 + 24) = 0xE100000000000000;
    swift_beginAccess();
    *(void *)(v87 + 32) = 0;
LABEL_138:
    *(void *)(v87 + 40) = 0;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v87 + 48) = 16;
    *(void *)(v87 + 64) = MEMORY[0x1E4FBC860];
    v4(v87);
    goto LABEL_147;
  }
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    uint64_t v89 = *(void *)(v10 + 40);
    swift_retain();
    goto LABEL_137;
  }
  __break(1u);
LABEL_187:
  uint64_t v82 = MEMORY[0x1C18862A0](0, v10);
LABEL_128:
  uint64_t v104 = *(void (**)(uint64_t, void))(*(void *)v12 + 640);
  v104(v82, 0);
  swift_release();
  uint64_t v83 = swift_allocObject();
  *(void *)(v83 + 32) = v75;
  *(void *)(v83 + 40) = 0;
  swift_weakInit();
  *(void *)(v83 + 72) = v75;
  *(void *)(v83 + 80) = 0;
  *(void *)(v83 + 88) = v75;
  *(void *)(v83 + 96) = 0;
  *(void *)(v83 + 16) = 44;
  *(void *)(v83 + 24) = 0xE100000000000000;
  swift_beginAccess();
  *(void *)(v83 + 32) = v75;
  *(void *)(v83 + 40) = 0;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v83 + 48) = 11;
  uint64_t v84 = MEMORY[0x1E4FBC860];
  *(void *)(v83 + 64) = MEMORY[0x1E4FBC860];
  v4(v83);
  swift_release();
  uint64_t v85 = swift_allocObject();
  *(void *)(v85 + 32) = v75;
  *(void *)(v85 + 40) = 0;
  swift_weakInit();
  *(void *)(v85 + 72) = v75;
  *(void *)(v85 + 80) = 0;
  *(void *)(v85 + 88) = v75;
  *(void *)(v85 + 96) = 0;
  *(void *)(v85 + 16) = 32;
  *(void *)(v85 + 24) = 0xE100000000000000;
  swift_beginAccess();
  *(void *)(v85 + 32) = v75;
  *(void *)(v85 + 40) = 0;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v85 + 48) = 17;
  *(void *)(v85 + 64) = v84;
  v4(v85);
  swift_release();
  if (v105) {
    goto LABEL_189;
  }
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    uint64_t v86 = *(void *)(v10 + 40);
    swift_retain();
    goto LABEL_131;
  }
  __break(1u);
LABEL_191:
  __break(1u);
LABEL_192:
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1BDD33FEC(void *a1, uint64_t *a2, unsigned char *a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = *a2;
  unint64_t v10 = (uint64_t (**)(void))(*a1 + 392);
  uint64_t v11 = *v10;
  unint64_t v12 = (*v10)();
  if (v12 >> 62) {
    uint64_t v13 = sub_1BDDB0448();
  }
  else {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v14 = swift_bridgeObjectRelease();
  if (v9 >= v13) {
    goto LABEL_18;
  }
  uint64_t v15 = ((uint64_t (*)(uint64_t))v11)(v14);
  if ((v15 & 0xC000000000000001) == 0)
  {
    if (v9 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v9 < *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v16 = *(void *)(v15 + 8 * v9 + 32);
      swift_retain();
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v16 = MEMORY[0x1C18862A0](v9, v15);
LABEL_8:
  swift_bridgeObjectRelease();
  uint64_t v4 = &OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
  unsigned __int8 v17 = *(unsigned char *)(v16 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  unsigned __int8 v29 = v17;
  unsigned __int8 v28 = 15;
  if (!static CalculateExpression.TokenType.== infix(_:_:)(&v29, &v28))
  {
LABEL_18:
    uint64_t v24 = sub_1BDD3463C(a1, a2, (uint64_t)a3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1BDDB3730;
    *(void *)(v25 + 32) = v24;
    uint64_t v30 = v25;
    sub_1BDDAFFD8();
    return v30;
  }
  sub_1BDD36EA8(a1, a2);
  uint64_t v5 = sub_1BDD342BC((uint64_t)a1, a2, (uint64_t)a3);
  uint64_t v9 = *a2;
  unint64_t v18 = v11();
  if (!(v18 >> 62))
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_11;
  }
LABEL_25:
  uint64_t v19 = sub_1BDDB0448();
LABEL_11:
  uint64_t v20 = swift_bridgeObjectRelease();
  if (v9 >= v19) {
    goto LABEL_20;
  }
  uint64_t result = ((uint64_t (*)(uint64_t))v11)(v20);
  if ((result & 0xC000000000000001) != 0)
  {
    uint64_t v22 = MEMORY[0x1C18862A0](v9, result);
LABEL_16:
    swift_bridgeObjectRelease();
    unsigned __int8 v23 = *(unsigned char *)(v22 + *v4);
    swift_release();
    unsigned __int8 v27 = v23;
    unsigned __int8 v26 = 16;
    if (static CalculateExpression.TokenType.== infix(_:_:)(&v27, &v26))
    {
      sub_1BDD36EA8(a1, a2);
      return v5;
    }
LABEL_20:
    *a3 = 1;
    return v5;
  }
  if (v9 < 0)
  {
    __break(1u);
  }
  else if ((unint64_t)v9 < *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v22 = *(void *)(result + 8 * v9 + 32);
    swift_retain();
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDD342BC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v32 = MEMORY[0x1E4FBC860];
  ((void (*)(void))sub_1BDD34ED0)();
  uint64_t v6 = swift_retain();
  MEMORY[0x1C1885EA0](v6);
  if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_37:
  }
    sub_1BDDB0008();
  uint64_t v7 = *(uint64_t (**)(void))(*(void *)a1 + 392);
  while (1)
  {
    sub_1BDDB0048();
    uint64_t v9 = sub_1BDDAFFD8();
    uint64_t v10 = *a2;
    unint64_t v11 = ((uint64_t (*)(uint64_t))v7)(v9);
    uint64_t v12 = v11 >> 62 ? sub_1BDDB0448() : *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v13 = swift_bridgeObjectRelease();
    if (v10 >= v12) {
      break;
    }
    uint64_t v14 = ((uint64_t (*)(uint64_t))v7)(v13);
    if ((v14 & 0xC000000000000001) != 0)
    {
      uint64_t v15 = MEMORY[0x1C18862A0](v10, v14);
    }
    else
    {
      if (v10 < 0)
      {
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      if ((unint64_t)v10 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_34;
      }
      uint64_t v15 = *(void *)(v14 + 8 * v10 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    unsigned __int8 v16 = *(unsigned char *)(v15 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    unsigned __int8 v31 = v16;
    unsigned __int8 v30 = 11;
    if (!static CalculateExpression.TokenType.== infix(_:_:)(&v31, &v30)) {
      break;
    }
    unint64_t v17 = v7();
    if (v17 >> 62) {
      uint64_t v18 = sub_1BDDB0448();
    }
    else {
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v19 = swift_bridgeObjectRelease();
    if (v10 < v18) {
      *a2 = ++v10;
    }
    unint64_t v20 = ((uint64_t (*)(uint64_t))v7)(v19);
    if (v20 >> 62) {
      uint64_t v21 = sub_1BDDB0448();
    }
    else {
      uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v22 = swift_bridgeObjectRelease();
    if (v10 >= v21)
    {
      swift_release();
    }
    else
    {
      uint64_t v23 = ((uint64_t (*)(uint64_t))v7)(v22);
      if ((v23 & 0xC000000000000001) != 0)
      {
        uint64_t v24 = MEMORY[0x1C18862A0](v10, v23);
      }
      else
      {
        if (v10 < 0) {
          goto LABEL_35;
        }
        if ((unint64_t)v10 >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_36;
        }
        uint64_t v24 = *(void *)(v23 + 8 * v10 + 32);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      unsigned __int8 v25 = *(unsigned char *)(v24 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      swift_release();
      unsigned __int8 v29 = v25;
      unsigned __int8 v28 = 17;
      BOOL v26 = static CalculateExpression.TokenType.== infix(_:_:)(&v29, &v28);
      swift_release();
      if (v26) {
        *a2 = v10 + 1;
      }
    }
    sub_1BDD34ED0(a1, a2, a3);
    uint64_t v8 = swift_retain();
    MEMORY[0x1C1885EA0](v8);
    if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1BDDB0008();
    }
  }
  swift_release();
  return v32;
}

uint64_t sub_1BDD3463C(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  type metadata accessor for CalculateExpression.PlainExpression();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = swift_weakInit();
  uint64_t v10 = MEMORY[0x1E4FBC860];
  *(_WORD *)(v8 + 24) = 1;
  *(void *)(v8 + 32) = v10;
  *(unsigned char *)(v8 + 40) = 1;
  uint64_t v11 = MEMORY[0x1E4FBC870];
  *(void *)(v8 + 48) = 0;
  *(void *)(v8 + 56) = 0;
  *(void *)(v8 + 64) = v11;
  *(unsigned char *)(v8 + 72) = 0;
  *(void *)(v8 + 80) = v10;
  *(_DWORD *)(v8 + 88) = 0;
  unint64_t v12 = *a2;
  uint64_t v13 = (uint64_t (**)(uint64_t))(*a1 + 392);
  uint64_t v14 = (uint64_t (*)(void))*v13;
  unint64_t v15 = (*v13)(v9);
  if (v15 >> 62) {
    uint64_t v16 = sub_1BDDB0448();
  }
  else {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v17 = swift_bridgeObjectRelease();
  if ((uint64_t)v12 >= v16) {
    return v8;
  }
  uint64_t v18 = ((uint64_t (*)(uint64_t))v14)(v17);
  uint64_t v19 = v18;
  uint64_t v55 = v14;
  if ((v18 & 0xC000000000000001) == 0)
  {
    if ((v12 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v12 < *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v20 = *(void *)(v18 + 8 * v12 + 32);
      swift_retain();
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_65;
  }
  uint64_t v20 = MEMORY[0x1C18862A0](v12, v18);
LABEL_8:
  swift_bridgeObjectRelease();
  uint64_t v21 = (uint64_t (*)(void))*(unsigned __int8 *)(v20 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  unsigned __int8 v63 = v21;
  unsigned __int8 v62 = 4;
  if (!static CalculateExpression.TokenType.== infix(_:_:)(&v63, &v62))
  {
    uint64_t v21 = v55;
    goto LABEL_18;
  }
  uint64_t v22 = v55();
  if ((v22 & 0xC000000000000001) == 0)
  {
    if ((v12 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v12 < *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v23 = *(void *)(v22 + 8 * v12 + 32);
      swift_retain();
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_72;
  }
  uint64_t v23 = MEMORY[0x1C18862A0](v12, v22);
LABEL_13:
  swift_bridgeObjectRelease();
  type metadata accessor for CalculateExpression.Token();
  uint64_t v24 = (*(uint64_t (**)(void))(*a1 + 176))();
  uint64_t v25 = sub_1BDD362D4(v23, v24);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t))(*(void *)v8 + 632))(v25);
  swift_release();
  uint64_t v26 = sub_1BDD36EA8(a1, a2);
  unint64_t v12 = *a2;
  uint64_t v21 = v55;
  unint64_t v27 = ((uint64_t (*)(uint64_t))v55)(v26);
  if (!(v27 >> 62))
  {
    uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_15;
  }
LABEL_72:
  uint64_t v28 = sub_1BDDB0448();
LABEL_15:
  swift_bridgeObjectRelease();
  if ((uint64_t)v12 >= v28) {
    return v8;
  }
LABEL_18:
  uint64_t v29 = v21();
  uint64_t v19 = v29;
  if ((v29 & 0xC000000000000001) == 0)
  {
    if ((v12 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v12 < *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v30 = *(void *)(v29 + 8 * v12 + 32);
      swift_retain();
      goto LABEL_22;
    }
    __break(1u);
    goto LABEL_68;
  }
LABEL_65:
  uint64_t v30 = MEMORY[0x1C18862A0](v12, v19);
LABEL_22:
  swift_bridgeObjectRelease();
  unsigned __int8 v31 = *(unsigned char *)(v30 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  unsigned __int8 v61 = v31;
  unsigned __int8 v60 = 15;
  if (!static CalculateExpression.TokenType.== infix(_:_:)(&v61, &v60))
  {
    unsigned __int8 v59 = v31;
    unsigned __int8 v58 = 10;
    if (static CalculateExpression.TokenType.== infix(_:_:)(&v59, &v58))
    {
      uint64_t v39 = sub_1BDD32070(a1, a2, a3);
      (*(void (**)(uint64_t, void))(*(void *)v8 + 640))(v39, 0);
      uint64_t v40 = swift_release();
    }
    else
    {
      v57[1] = v31;
      uint64_t v40 = CalculateExpression.TokenType.isOperand.getter();
      if (v40)
      {
        type metadata accessor for CalculateExpression.Token();
        unsigned __int8 v41 = *(uint64_t (**)(uint64_t))(*(void *)v4 + 184);
        uint64_t v42 = swift_retain();
        uint64_t v43 = v41(v42);
        uint64_t v44 = sub_1BDD362D4(v30, v43);
        swift_release();
        swift_release();
        (*(void (**)(uint64_t))(*(void *)v8 + 632))(v44);
        swift_release();
        uint64_t v40 = sub_1BDD36EA8(a1, a2);
      }
      else
      {
        *(unsigned char *)a3 = 1;
      }
    }
    uint64_t v21 = v55;
    goto LABEL_46;
  }
  unint64_t v32 = sub_1BDD33FEC(a1, a2, a3);
  uint64_t v33 = v32;
  unint64_t v34 = v32 >> 62;
  if (!(v32 >> 62))
  {
    uint64_t v35 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v35 == 1) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1BDDB0448();
  swift_bridgeObjectRelease();
  if (v35 != 1) {
LABEL_25:
  }
    *(unsigned char *)a3 = 1;
LABEL_26:
  if (v34)
  {
    if (v33 < 0) {
      uint64_t v35 = v33;
    }
    else {
      uint64_t v35 = v33 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    a3 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    uint64_t v21 = v55;
    if (a3) {
      goto LABEL_28;
    }
LABEL_41:
    uint64_t v40 = swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  a3 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v21 = v55;
  if (!a3) {
    goto LABEL_41;
  }
LABEL_28:
  unint64_t v36 = *(void (**)(uint64_t, void))(*(void *)v8 + 640);
  if (a3 < 1) {
    goto LABEL_78;
  }
  uint64_t v37 = 0;
  do
  {
    if ((v33 & 0xC000000000000001) != 0)
    {
      uint64_t v38 = MEMORY[0x1C18862A0](v37, v33);
    }
    else
    {
      uint64_t v38 = *(void *)(v33 + 8 * v37 + 32);
      swift_retain();
    }
    ++v37;
    v36(v38, 0);
    swift_release();
  }
  while (a3 != v37);
  uint64_t v40 = swift_bridgeObjectRelease();
  uint64_t v21 = v55;
LABEL_46:
  a3 = *a2;
  unint64_t v45 = ((uint64_t (*)(uint64_t))v21)(v40);
  if (!(v45 >> 62))
  {
    uint64_t v46 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_48;
  }
LABEL_68:
  uint64_t v46 = sub_1BDDB0448();
LABEL_48:
  uint64_t v47 = swift_bridgeObjectRelease();
  if (a3 >= v46)
  {
LABEL_59:
    swift_release();
    return v8;
  }
  uint64_t v48 = ((uint64_t (*)(uint64_t))v21)(v47);
  uint64_t v35 = v48;
  if ((v48 & 0xC000000000000001) == 0)
  {
    if (a3 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)a3 < *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v49 = *(void *)(v48 + 8 * a3 + 32);
      swift_retain();
      goto LABEL_53;
    }
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  uint64_t v49 = MEMORY[0x1C18862A0](a3, v48);
LABEL_53:
  swift_bridgeObjectRelease();
  unsigned __int8 v50 = *(unsigned char *)(v49 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  v57[0] = v50;
  unsigned __int8 v56 = 8;
  if (!static CalculateExpression.TokenType.== infix(_:_:)(v57, &v56)) {
    goto LABEL_59;
  }
  uint64_t result = v55();
  uint64_t v35 = result;
  if ((result & 0xC000000000000001) != 0)
  {
LABEL_79:
    uint64_t v52 = MEMORY[0x1C18862A0](a3, v35);
    goto LABEL_58;
  }
  if (a3 < 0)
  {
    __break(1u);
  }
  else if ((unint64_t)a3 < *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v52 = *(void *)(result + 8 * a3 + 32);
    swift_retain();
LABEL_58:
    swift_bridgeObjectRelease();
    type metadata accessor for CalculateExpression.Token();
    uint64_t v53 = (*(uint64_t (**)(void))(*a1 + 176))();
    uint64_t v54 = sub_1BDD362D4(v52, v53);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t))(*(void *)v8 + 632))(v54);
    swift_release();
    sub_1BDD36EA8(a1, a2);
    goto LABEL_59;
  }
  __break(1u);
  return result;
}

unint64_t sub_1BDD34ED0(void *a1, unint64_t *a2, unsigned char *a3)
{
  type metadata accessor for CalculateExpression.PlainExpression();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = swift_weakInit();
  uint64_t v8 = MEMORY[0x1E4FBC860];
  *(_WORD *)(v6 + 24) = 1;
  *(void *)(v6 + 32) = v8;
  *(unsigned char *)(v6 + 40) = 1;
  uint64_t v9 = MEMORY[0x1E4FBC870];
  *(void *)(v6 + 48) = 0;
  *(void *)(v6 + 56) = 0;
  *(void *)(v6 + 64) = v9;
  *(unsigned char *)(v6 + 72) = 0;
  *(void *)(v6 + 80) = v8;
  *(_DWORD *)(v6 + 88) = 0;
  uint64_t v10 = (uint64_t (**)(uint64_t))(*a1 + 392);
  uint64_t v11 = *v10;
  uint64_t v12 = *a2;
  unint64_t v13 = (*v10)(v7);
  if (v13 >> 62) {
LABEL_67:
  }
    uint64_t v14 = sub_1BDDB0448();
  else {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v15 = swift_bridgeObjectRelease();
  if (v12 >= v14) {
    return v6;
  }
  uint64_t v16 = 0;
  unsigned __int8 v56 = (uint64_t *)a2;
  uint64_t v57 = a1;
  unsigned __int8 v59 = v11;
  unsigned __int8 v60 = v10;
  uint64_t v55 = a3;
  while (1)
  {
    uint64_t v17 = v11(v15);
    if ((v17 & 0xC000000000000001) != 0)
    {
      uint64_t v12 = MEMORY[0x1C18862A0](v12, v17);
    }
    else
    {
      if (v12 < 0)
      {
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
        goto LABEL_67;
      }
      if ((unint64_t)v12 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_64;
      }
      uint64_t v12 = *(void *)(v17 + 8 * v12 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    uint64_t v10 = (uint64_t (**)(uint64_t))OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
    uint64_t v11 = (uint64_t (*)(uint64_t))*(unsigned __int8 *)(v12
                                                              + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    v63[0] = *(unsigned char *)(v12 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    LOBYTE(v62) = 15;
    if (static CalculateExpression.TokenType.== infix(_:_:)(v63, (unsigned __int8 *)&v62))
    {
      BOOL v18 = __OFADD__(v16++, 1);
      if (v18) {
        goto LABEL_65;
      }
    }
    else
    {
      v63[0] = v11;
      LOBYTE(v62) = 16;
      if (static CalculateExpression.TokenType.== infix(_:_:)(v63, (unsigned __int8 *)&v62))
      {
        if (!v16) {
          goto LABEL_61;
        }
        BOOL v18 = __OFSUB__(v16--, 1);
        if (v18) {
          goto LABEL_66;
        }
      }
      else if (!v16)
      {
        v63[0] = v11;
        LOBYTE(v62) = 11;
        if (static CalculateExpression.TokenType.== infix(_:_:)(v63, (unsigned __int8 *)&v62))
        {
LABEL_61:
          swift_release();
          return v6;
        }
        uint64_t v16 = 0;
      }
    }
    v63[0] = v11;
    LOBYTE(v62) = 10;
    if (!static CalculateExpression.TokenType.== infix(_:_:)(v63, (unsigned __int8 *)&v62)) {
      break;
    }
    uint64_t v19 = sub_1BDD32070(a1, a2, a3);
    (*(void (**)(uint64_t, void))(*(void *)v6 + 640))(v19, 0);
    swift_release();
LABEL_35:
    uint64_t v38 = swift_release();
LABEL_37:
    uint64_t v12 = *a2;
    uint64_t v11 = v59;
    uint64_t v10 = v60;
    unint64_t v39 = v59(v38);
    if (v39 >> 62) {
      uint64_t v40 = sub_1BDDB0448();
    }
    else {
      uint64_t v40 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v15 = swift_bridgeObjectRelease();
    if (v12 >= v40) {
      return v6;
    }
  }
  v63[0] = v11;
  LOBYTE(v62) = 7;
  if (static CalculateExpression.TokenType.== infix(_:_:)(v63, (unsigned __int8 *)&v62))
  {
    uint64_t v20 = (*(uint64_t (**)(void))(*(void *)v12 + 256))();
    if (v20)
    {
      uint64_t v62 = 0;
      char v61 = 0;
      uint64_t v21 = *(void *)sub_1BDD34ED0(v20, &v62, &v61);
      unint64_t v22 = (*(uint64_t (**)(void))(v21 + 264))();
      uint64_t v23 = (void (*)(unsigned __int8 *, void))(*(uint64_t (**)(unsigned __int8 *))(*(void *)v6 + 280))(v63);
      sub_1BDD31CB8(v22);
      v23(v63, 0);
      swift_release();
      swift_release();
    }
    type metadata accessor for CalculateExpression.Token();
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 40) = 0;
    *(void *)(v24 + 32) = 0;
    swift_weakInit();
    *(_OWORD *)(v24 + 88) = 0u;
    *(_OWORD *)(v24 + 72) = 0u;
    *(void *)(v24 + 16) = 94;
    *(void *)(v24 + 24) = 0xE100000000000000;
    swift_beginAccess();
    *(void *)(v24 + 32) = 0;
    *(void *)(v24 + 40) = 0;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v24 + 48) = 7;
    *(void *)(v24 + 64) = MEMORY[0x1E4FBC860];
    uint64_t v25 = *(uint64_t (**)(unsigned __int8 *))(*(void *)v6 + 280);
    uint64_t v26 = (void (*)(unsigned __int8 *, void))v25(v63);
    uint64_t v28 = v27;
    MEMORY[0x1C1885EA0]();
    if (*(void *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1BDDB0008();
    }
    sub_1BDDB0048();
    sub_1BDDAFFD8();
    v26(v63, 0);
    uint64_t v29 = sub_1BDD36EA8(v57, v56);
    uint64_t v30 = (*(uint64_t (**)(uint64_t))(*(void *)v12 + 280))(v29);
    if (v30)
    {
      uint64_t v62 = 0;
      char v61 = 0;
      uint64_t v31 = *(void *)sub_1BDD34ED0(v30, &v62, &v61);
      unint64_t v32 = (*(uint64_t (**)(void))(v31 + 264))();
      uint64_t v33 = (void (*)(unsigned __int8 *, void))v25(v63);
      sub_1BDD31CB8(v32);
      v33(v63, 0);
      swift_release();
      swift_release();
    }
    uint64_t v38 = swift_release();
    a3 = v55;
    a2 = (unint64_t *)v56;
    a1 = v57;
    goto LABEL_37;
  }
  v63[0] = v11;
  if (CalculateExpression.TokenType.isAnyUnknown.getter())
  {
    *a3 = 1;
LABEL_34:
    sub_1BDD36EA8(a1, (uint64_t *)a2);
    goto LABEL_35;
  }
  v63[0] = v11;
  LOBYTE(v62) = 1;
  if (static CalculateExpression.TokenType.== infix(_:_:)(v63, (unsigned __int8 *)&v62))
  {
    type metadata accessor for CalculateExpression.Token();
    unint64_t v34 = *(uint64_t (**)(uint64_t))(*(void *)v58 + 184);
    uint64_t v35 = swift_retain();
    uint64_t v36 = v34(v35);
    a1 = v57;
    uint64_t v37 = sub_1BDD362D4(v12, v36);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t))(*(void *)v6 + 632))(v37);
    swift_release();
    goto LABEL_34;
  }
  uint64_t v41 = sub_1BDD36EA8(a1, (uint64_t *)a2);
  unint64_t v42 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 264))(v41);
  unint64_t v43 = v42;
  if (!(v42 >> 62))
  {
    uint64_t v44 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v44) {
      goto LABEL_43;
    }
LABEL_58:
    swift_bridgeObjectRelease();
LABEL_59:
    type metadata accessor for CalculateExpression.Token();
    uint64_t v51 = *(uint64_t (**)(uint64_t))(*a1 + 176);
    uint64_t v52 = swift_retain();
    uint64_t v53 = v51(v52);
    a1 = v57;
    uint64_t v54 = sub_1BDD362D4(v12, v53);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t))(*(void *)v6 + 632))(v54);
    swift_release();
    uint64_t v38 = swift_release();
    a2 = (unint64_t *)v56;
    goto LABEL_37;
  }
  uint64_t v44 = sub_1BDDB0448();
  if (!v44) {
    goto LABEL_58;
  }
LABEL_43:
  BOOL v18 = __OFSUB__(v44, 1);
  unint64_t result = v44 - 1;
  if (!v18)
  {
    if ((v43 & 0xC000000000000001) != 0)
    {
      uint64_t v46 = MEMORY[0x1C18862A0](result, v43);
    }
    else
    {
      if ((result & 0x8000000000000000) != 0) {
        goto LABEL_69;
      }
      if (result >= *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_70;
      }
      uint64_t v46 = *(void *)(v43 + 8 * result + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    unsigned __int8 v47 = *(unsigned char *)(v46 + 48);
    swift_release();
    v63[0] = v47;
    LOBYTE(v62) = 1;
    sub_1BDCF0848();
    if (sub_1BDDAFD28())
    {
      v63[0] = *((unsigned char *)v10 + v12);
      LOBYTE(v62) = 13;
      if (static CalculateExpression.TokenType.== infix(_:_:)(v63, (unsigned __int8 *)&v62))
      {
        uint64_t v48 = (*(uint64_t (**)(uint64_t))(*a1 + 416))(*v56);
        if (v48)
        {
          int v49 = *(unsigned __int8 *)(v48 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
          swift_release();
          v63[0] = 3;
          if (v49 != 53)
          {
            LOBYTE(v62) = v49;
            if (sub_1BDDAFD28() & 1) != 0 || (v63[0] = 4, LOBYTE(v62) = v49, (sub_1BDDAFD28()))
            {
              type metadata accessor for CalculateExpression.Token();
              uint64_t v50 = swift_allocObject();
              *(void *)(v50 + 40) = 0;
              *(void *)(v50 + 32) = 0;
              swift_weakInit();
              *(_OWORD *)(v50 + 88) = 0u;
              *(_OWORD *)(v50 + 72) = 0u;
              *(void *)(v50 + 16) = 38851;
              *(void *)(v50 + 24) = 0xA200000000000000;
              swift_beginAccess();
              *(void *)(v50 + 32) = 0;
              *(void *)(v50 + 40) = 0;
              swift_bridgeObjectRelease();
              *(unsigned char *)(v50 + 48) = 5;
              *(void *)(v50 + 64) = MEMORY[0x1E4FBC860];
              (*(void (**)(uint64_t))(*(void *)v6 + 632))(v50);
              swift_release();
            }
          }
        }
      }
    }
    goto LABEL_59;
  }
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
  return result;
}

uint64_t CalculateExpression.PlainExpression.deinit()
{
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CalculateExpression.Token._notesFormattedText.getter()
{
  unint64_t v1 = v0;
  unint64_t v2 = sub_1BDCF0558((uint64_t)&unk_1F1866700);
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_1BDCF0668(v1[48]), (v4 & 1) != 0))
  {
    uint64_t v5 = *(void *)(*(void *)(v2 + 56) + 16 * v3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 136))(v6);
  }
  return v5;
}

char *sub_1BDD35A78(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269E0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1BDD35B7C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v6 = a4;
    uint64_t v9 = a3;
    uint64_t v5 = a2;
    uint64_t v7 = a1;
    unint64_t v8 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1BDDB0448();
  swift_bridgeObjectRelease();
  if (v24 < v5) {
    goto LABEL_32;
  }
LABEL_4:
  uint64_t v11 = v5 - v7;
  if (__OFSUB__(v5, v7))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v10 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_34:
    __break(1u);
LABEL_35:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    uint64_t v13 = v12 + v10;
    if (!__OFADD__(v12, v10)) {
      goto LABEL_8;
    }
LABEL_37:
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v8 = *v4;
  if (*v4 >> 62) {
    goto LABEL_35;
  }
  uint64_t v12 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v13 = v12 + v10;
  if (__OFADD__(v12, v10)) {
    goto LABEL_37;
  }
LABEL_8:
  unint64_t v8 = *v4;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *char v4 = v8;
  uint64_t v27 = v9;
  uint64_t v12 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v8 & 0x8000000000000000) == 0
    && (v8 & 0x4000000000000000) == 0)
  {
    uint64_t v15 = v8 & 0xFFFFFFFFFFFFFF8;
    if (v13 <= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v12 = 1;
  }
  if (v8 >> 62) {
    goto LABEL_38;
  }
  uint64_t v16 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v16 <= v13) {
    uint64_t v16 = v13;
  }
  swift_bridgeObjectRetain();
  unint64_t v8 = MEMORY[0x1C18862B0](v12, v16, 1, v8);
  uint64_t isUniquelyReferenced_nonNull_bridgeObject = swift_bridgeObjectRelease();
  *char v4 = v8;
  uint64_t v15 = v8 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  uint64_t v17 = (void *)(v15 + 32 + 8 * v7);
  v6(isUniquelyReferenced_nonNull_bridgeObject);
  swift_arrayDestroy();
  if (v10)
  {
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
      uint64_t v19 = v25 - v5;
      if (!__OFSUB__(v25, v5)) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v18 = *(void *)(v15 + 16);
      uint64_t v19 = v18 - v5;
      if (!__OFSUB__(v18, v5))
      {
LABEL_21:
        unint64_t result = (char *)(v17 + 1);
        uint64_t v21 = (char *)(v15 + 32 + 8 * v5);
        if (v17 + 1 != (void *)v21 || result >= &v21[8 * v19]) {
          unint64_t result = (char *)memmove(result, v21, 8 * v19);
        }
        if (!(v8 >> 62))
        {
          uint64_t v22 = *(void *)(v15 + 16);
          uint64_t v23 = v22 + v10;
          if (!__OFADD__(v22, v10))
          {
LABEL_26:
            *(void *)(v15 + 16) = v23;
            goto LABEL_27;
          }
LABEL_44:
          __break(1u);
          return result;
        }
LABEL_42:
        swift_bridgeObjectRetain();
        uint64_t v26 = sub_1BDDB0448();
        unint64_t result = (char *)swift_bridgeObjectRelease();
        uint64_t v23 = v26 + v10;
        if (!__OFADD__(v26, v10)) {
          goto LABEL_26;
        }
        goto LABEL_44;
      }
    }
    __break(1u);
    goto LABEL_42;
  }
LABEL_27:
  void *v17 = v27;
  return (char *)sub_1BDDAFFD8();
}

unint64_t sub_1BDD35E28(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    unint64_t result = sub_1BDD35EC8(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_1BDD35F38(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_1BDD35EC8(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    unint64_t result = sub_1BDD0627C(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16) {
    __break(1u);
  }
  return result;
}

unint64_t sub_1BDD35F38(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    unint64_t v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((unsigned char *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            unint64_t v10 = v5 - 1;
            int v11 = *((unsigned char *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          unint64_t v5 = v10;
        }
        return v5 << 16;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 != (a2 & 0xFFFFFFFFFFFFLL))
        {
          do
LABEL_9:
            int v7 = *(unsigned char *)(v6 + v5--) & 0xC0;
          while (v7 == 128);
          ++v5;
        }
      }
      else
      {
        unint64_t v12 = result >> 16;
        uint64_t v6 = sub_1BDDB03C8();
        unint64_t v5 = v12;
        if (v12 != v9) {
          goto LABEL_9;
        }
      }
      return v5 << 16;
    }
    uint64_t v8 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v8 = a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5 != v8)
    {
      return MEMORY[0x1F4184CD0]();
    }
  }
  return result;
}

uint64_t sub_1BDD3604C(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1BDDB0448();
    unint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1BDDB0448();
      unint64_t result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_1BDD19AC4(&qword_1EA0DF1E0, &qword_1EA0DF1D8);
          swift_bridgeObjectRetain();
          for (unint64_t i = 0; i != v7; ++i)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF1D8);
            unint64_t v10 = sub_1BDD03690(v13, i, a3);
            uint64_t v12 = *v11;
            swift_retain();
            ((void (*)(uint64_t (**)(), void))v10)(v13, 0);
            *(void *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        type metadata accessor for CalculateExpression.Token();
        swift_arrayInitWithCopy();
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDD36208(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v1 = result;
  unint64_t result = sub_1BDDAFDC8();
  if (__OFSUB__(result, v1))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  sub_1BDDAFDF8();
  return sub_1BDDAFF08();
}

uint64_t sub_1BDD362D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t countAndFlagsBits = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 208))(a1);
  object = v7;
  unsigned __int8 v9 = *(unsigned char *)(a1 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  unsigned __int8 v70 = v9;
  unsigned __int8 v69 = 1;
  swift_bridgeObjectRetain();
  if (static CalculateExpression.TokenType.== infix(_:_:)(&v70, &v69))
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1BDD0F9B4(countAndFlagsBits, (unint64_t)object);
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    if (v12)
    {
      if (v10 == 45 && v12 == 0xE100000000000000) {
        goto LABEL_20;
      }
      char v14 = sub_1BDDB04E8();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1BDD0F9B4(countAndFlagsBits, (unint64_t)object);
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    if (!v17)
    {
LABEL_14:
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    if (v15 != 43 || v17 != 0xE100000000000000)
    {
      char v19 = sub_1BDDB04E8();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0) {
        goto LABEL_14;
      }
LABEL_21:
      uint64_t v22 = sub_1BDD36208(1);
      uint64_t v24 = v23;
      uint64_t v26 = v25;
      uint64_t v28 = v27;
      swift_bridgeObjectRelease();
      uint64_t countAndFlagsBits = MEMORY[0x1C1885C90](v22, v24, v26, v28);
      uint64_t v30 = v29;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      object = v30;
LABEL_22:
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1BDD0F9B4(countAndFlagsBits, (unint64_t)object);
      uint64_t v33 = v32;
      swift_bridgeObjectRelease();
      if (!v33) {
        goto LABEL_28;
      }
      if (v31 == 101 && v33 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v34 = sub_1BDDB04E8();
        swift_bridgeObjectRelease();
        if ((v34 & 1) == 0) {
          goto LABEL_28;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_1BDD36208(1);
      uint64_t v37 = v36;
      uint64_t v39 = v38;
      uint64_t v41 = v40;
      swift_bridgeObjectRelease();
      uint64_t countAndFlagsBits = MEMORY[0x1C1885C90](v35, v37, v39, v41);
      unint64_t v43 = v42;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      object = v43;
LABEL_28:
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_1BDD0F9B4(countAndFlagsBits, (unint64_t)object);
      uint64_t v46 = v45;
      uint64_t v47 = swift_bridgeObjectRelease();
      if (!v46) {
        goto LABEL_34;
      }
      if (v44 == 46 && v46 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v48 = sub_1BDDB04E8();
        uint64_t v47 = swift_bridgeObjectRelease();
        if ((v48 & 1) == 0) {
          goto LABEL_34;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_1BDD36208(1);
      uint64_t v51 = v50;
      uint64_t v53 = v52;
      uint64_t v55 = v54;
      swift_bridgeObjectRelease();
      uint64_t countAndFlagsBits = MEMORY[0x1C1885C90](v49, v51, v53, v55);
      uint64_t v57 = v56;
      swift_bridgeObjectRelease();
      uint64_t v47 = swift_bridgeObjectRelease();
      object = v57;
LABEL_34:
      (*(void (**)(uint64_t))(*(void *)a1 + 376))(v47);
      if (v58)
      {
        uint64_t v20 = countAndFlagsBits;
        if (a2) {
          goto LABEL_36;
        }
      }
      else
      {
        uint64_t v20 = sub_1BDDB04C8();
        unsigned __int8 v60 = v59;
        swift_bridgeObjectRelease();
        object = v60;
        if (a2)
        {
LABEL_36:
          swift_retain();
          Swift::Bool v61 = sub_1BDD013AC() & 1;
          v62._uint64_t countAndFlagsBits = v20;
          v62._object = object;
          v71.value.super.super.Class isa = 0;
          v71.Swift::Bool is_nil = 0;
          v72.char value = 1;
          v72.Swift::Bool is_nil = 2;
          Swift::String v64 = CalculateExpression.formatLiteral(_:presentation:formatter:significantDigits:forceScientificNotation:)(v62, v61, v71, v72, v63);
          uint64_t countAndFlagsBits = v64._countAndFlagsBits;
          swift_release();
          uint64_t v21 = object;
          object = v64._object;
          goto LABEL_40;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v21 = object;
      uint64_t countAndFlagsBits = v20;
      goto LABEL_40;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  swift_bridgeObjectRelease();
  unsigned __int8 v68 = v9;
  unsigned __int8 v67 = 9;
  uint64_t v20 = 0;
  if (static CalculateExpression.TokenType.== infix(_:_:)(&v68, &v67) && a2)
  {
    if (CalculateExpression.engine.getter() == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      object = (void *)0xE300000000000000;
      uint64_t countAndFlagsBits = 6582125;
    }
    else
    {
      uint64_t v20 = 0;
      uint64_t v21 = 0;
    }
  }
  else
  {
    uint64_t v21 = 0;
  }
LABEL_40:
  unsigned __int8 v66 = v9;
  return (*(uint64_t (**)(uint64_t, void *, uint64_t, void *, unsigned __int8 *, void))(v3 + 240))(countAndFlagsBits, object, v20, v21, &v66, MEMORY[0x1E4FBC860]);
}

char *sub_1BDD367BC(unint64_t a1, uint64_t a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
    if (!v3) {
      return (char *)v4;
    }
    uint64_t v26 = MEMORY[0x1E4FBC860];
    unint64_t result = sub_1BDD17224(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0) {
      break;
    }
    uint64_t v6 = 0;
    uint64_t v4 = v26;
    unint64_t v22 = v2 & 0xC000000000000001;
    unint64_t v23 = v2;
    uint64_t v21 = v3;
    while (v3 != v6)
    {
      if (v22)
      {
        uint64_t v7 = (unsigned char *)MEMORY[0x1C18862A0](v6, v2);
      }
      else
      {
        uint64_t v7 = *(unsigned char **)(v2 + 8 * v6 + 32);
        swift_retain();
      }
      unsigned __int8 v25 = v7[48];
      unsigned __int8 v24 = 1;
      uint64_t v8 = static CalculateExpression.TokenType.== infix(_:_:)(&v25, &v24);
      if ((v8 & 1) != 0
        && (type metadata accessor for CalculateExpression(),
            unsigned __int8 v9 = *(uint64_t (**)(void))(*(void *)v7 + 136),
            v9(),
            char v10 = static CalculateExpression.isHighPrecisionLiteral(_:)(),
            uint64_t v8 = swift_bridgeObjectRelease(),
            (v10 & 1) != 0)
        && (uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 184))(v8)) != 0)
      {
        v11._uint64_t countAndFlagsBits = v9();
        v27.value.super.super.Class isa = 0;
        v27.Swift::Bool is_nil = 0;
        v28.char value = 1;
        v28.Swift::Bool is_nil = 2;
        Swift::String v13 = CalculateExpression.formatLiteral(_:presentation:formatter:significantDigits:forceScientificNotation:)(v11, 1, v27, v28, v12);
        uint64_t countAndFlagsBits = v13._countAndFlagsBits;
        object = v13._object;
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t countAndFlagsBits = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 136))(v8);
        object = v16;
      }
      uint64_t v3 = v21;
      swift_release();
      uint64_t v26 = v4;
      unint64_t v18 = *(void *)(v4 + 16);
      unint64_t v17 = *(void *)(v4 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1BDD17224((char *)(v17 > 1), v18 + 1, 1);
        uint64_t v4 = v26;
      }
      ++v6;
      *(void *)(v4 + 16) = v18 + 1;
      uint64_t v19 = v4 + 16 * v18;
      *(void *)(v19 + 32) = countAndFlagsBits;
      *(void *)(v19 + 40) = object;
      unint64_t v2 = v23;
      if (v21 == v6) {
        return (char *)v4;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for CalculateExpression.Token()
{
  return self;
}

unint64_t sub_1BDD36A80()
{
  unint64_t result = qword_1EA0DF1D0;
  if (!qword_1EA0DF1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0DF1D0);
  }
  return result;
}

uint64_t method lookup function for CalculateExpression.Token(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalculateExpression.Token);
}

uint64_t dispatch thunk of CalculateExpression.Token.text.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of CalculateExpression.Token.normalizedText.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of CalculateExpression.Token.errors.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of CalculateExpression.Token.formattedText(parent:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of CalculateExpression.Token.isTrigonometric.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t method lookup function for CalculateExpression.PlainExpression(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalculateExpression.PlainExpression);
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.parent.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.parent.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.parent.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.tokens.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.tokens.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.tokens.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.text.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.copyableText.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 312))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.__allocating_init(parent:options:)()
{
  return (*(uint64_t (**)(void))(v0 + 496))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 504))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.needsParentheses(allowExponent:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 616))();
}

uint64_t dispatch thunk of CalculateExpression.PlainExpression.isEmpty.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 624))();
}

unsigned char *_s15PlainExpressionC8WrapModeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDD36E70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s15PlainExpressionC8WrapModeOMa()
{
  return &_s15PlainExpressionC8WrapModeON;
}

uint64_t sub_1BDD36EA8(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unsigned int v4 = (uint64_t (**)(void))(*a1 + 392);
  uint64_t v5 = *v4;
  unint64_t v6 = (*v4)();
  if (v6 >> 62) {
    uint64_t v7 = sub_1BDDB0448();
  }
  else {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v8 = swift_bridgeObjectRelease();
  if (v3 < v7) {
    *a2 = ++v3;
  }
  unint64_t v9 = ((uint64_t (*)(uint64_t))v5)(v8);
  if (v9 >> 62) {
    uint64_t v10 = sub_1BDDB0448();
  }
  else {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 < v10)
  {
    uint64_t result = ((uint64_t (*)(uint64_t))v5)(result);
    if ((result & 0xC000000000000001) == 0)
    {
      if (v3 < 0)
      {
        __break(1u);
      }
      else if ((unint64_t)v3 < *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v12 = *(void *)(result + 8 * v3 + 32);
        swift_retain();
        goto LABEL_12;
      }
      __break(1u);
      return result;
    }
    uint64_t v12 = MEMORY[0x1C18862A0](v3, result);
LABEL_12:
    swift_bridgeObjectRelease();
    unsigned __int8 v13 = *(unsigned char *)(v12 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    unsigned __int8 v15 = v13;
    unsigned __int8 v14 = 17;
    uint64_t result = static CalculateExpression.TokenType.== infix(_:_:)(&v15, &v14);
    if (result) {
      *a2 = v3 + 1;
    }
  }
  return result;
}

uint64_t sub_1BDD37044(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    unint64_t v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1BDDB0448();
  swift_bridgeObjectRelease();
  if (v19 < v2) {
    goto LABEL_32;
  }
LABEL_4:
  uint64_t v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_34:
    __break(1u);
LABEL_35:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    uint64_t v9 = v8 + v6;
    if (!__OFADD__(v8, v6)) {
      goto LABEL_8;
    }
LABEL_37:
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v5 = *v3;
  if (*v3 >> 62) {
    goto LABEL_35;
  }
  uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v9 = v8 - v7;
  if (__OFADD__(v8, v6)) {
    goto LABEL_37;
  }
LABEL_8:
  unint64_t v5 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v3 = v5;
  uint64_t v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v8 = 1;
  }
  if (v5 >> 62) {
    goto LABEL_38;
  }
  uint64_t v12 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9) {
    uint64_t v12 = v9;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = MEMORY[0x1C18862B0](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  unint64_t *v3 = v5;
  uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  type metadata accessor for CalculateExpression.Token();
  uint64_t result = swift_arrayDestroy();
  if (v6)
  {
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1BDDB0448();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v15 = v20 - v2;
      if (!__OFSUB__(v20, v2)) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v14 = *(void *)(v11 + 16);
      uint64_t v15 = v14 - v2;
      if (!__OFSUB__(v14, v2))
      {
LABEL_21:
        uint64_t v16 = (const void *)(v11 + 32 + 8 * v2);
        if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v16 + 8 * v15) {
          uint64_t result = (uint64_t)memmove((void *)(v11 + 32 + 8 * v4), v16, 8 * v15);
        }
        if (!(v5 >> 62))
        {
          uint64_t v17 = *(void *)(v11 + 16);
          uint64_t v18 = v17 + v6;
          if (!__OFADD__(v17, v6))
          {
LABEL_26:
            *(void *)(v11 + 16) = v18;
            goto LABEL_27;
          }
LABEL_44:
          __break(1u);
          return result;
        }
LABEL_42:
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_1BDDB0448();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v18 = v21 + v6;
        if (!__OFADD__(v21, v6)) {
          goto LABEL_26;
        }
        goto LABEL_44;
      }
    }
    __break(1u);
    goto LABEL_42;
  }
LABEL_27:
  return sub_1BDDAFFD8();
}

uint64_t sub_1BDD372E4(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16) != 1) {
    return 0;
  }
  CalculateExpression.RichExpression.editingToken(matching:)((uint64_t (*)(void *))sub_1BDD37878, &v31);
  uint64_t v3 = v31;
  if (!(void)v31) {
    return 0;
  }
  unint64_t v5 = *((void *)&v31 + 1);
  uint64_t v4 = v32;
  uint64_t v6 = v33;
  uint64_t v7 = *(uint64_t (**)(unint64_t))(*(void *)v31 + 416);
  uint64_t v8 = swift_retain();
  sub_1BDD02DD4(v8);
  uint64_t v9 = v7(v5);
  type metadata accessor for CalculateExpression.RichToken();
  LOBYTE(v31) = 8;
  char v10 = sub_1BDD013AC();
  uint64_t v11 = (void (*)(void, void))CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v31, v10 & 1);
  if (!v9)
  {
    swift_release();
    sub_1BDD02E18(v3);
    swift_release();
    sub_1BDD02E18(v3);
    return 0;
  }
  char v12 = *(unsigned char *)(v9 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  LOBYTE(v31) = v12;
  swift_retain();
  if (CalculateExpression.TokenType.isOperator.getter())
  {
    LOBYTE(v31) = v12;
    unsigned __int8 v30 = 8;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v31, &v30)
      || (LOBYTE(v31) = v12, unsigned __int8 v30 = 9, static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v31, &v30)))
    {
      *(void *)&long long v31 = v3;
      *((void *)&v31 + 1) = v5;
      uint64_t v32 = v4;
      uint64_t v33 = v6;
      sub_1BDD22E38(v11, (uint64_t *)&v31);
LABEL_30:
      sub_1BDD02E18(v3);
      swift_release();
      swift_release_n();
      goto LABEL_31;
    }
    LOBYTE(v31) = v12;
    unsigned __int8 v30 = 7;
    if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v31, &v30))
    {
      uint64_t v18 = (*(uint64_t (**)(void))(*(void *)v9 + 280))();
      if (v18)
      {
        if (((*(uint64_t (**)(void))(*(void *)v18 + 568))() & 1) == 0)
        {
          uint64_t v29 = (uint64_t)v11;
          uint64_t v2 = v5 + 1;
          if (!__OFADD__(v5, 1))
          {
            unsigned __int8 v25 = *(uint64_t (**)(long long *))(*(void *)v3 + 408);
            swift_retain();
            uint64_t result = v25(&v31);
            Swift::Int_optional v28 = (void (*)(long long *, void))result;
            if (!(*v26 >> 62))
            {
              uint64_t v27 = *(void *)((*v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
              goto LABEL_36;
            }
LABEL_46:
            swift_bridgeObjectRetain();
            uint64_t v27 = sub_1BDDB0448();
            uint64_t result = swift_bridgeObjectRelease();
LABEL_36:
            if (v27 < v2)
            {
              __break(1u);
            }
            else if ((v2 & 0x8000000000000000) == 0)
            {
              sub_1BDD0572C(v2, v2, v29);
              v28(&v31, 0);
              sub_1BDD02E18(v3);
              swift_release();
              goto LABEL_18;
            }
            __break(1u);
            return result;
          }
LABEL_45:
          __break(1u);
          goto LABEL_46;
        }
        swift_release();
      }
    }
    uint64_t v19 = *(uint64_t (**)(long long *))(*(void *)v3 + 408);
    swift_retain();
    uint64_t v20 = (void (*)(long long *, void))v19(&v31);
    unint64_t v22 = v21;
    uint64_t v2 = *v21;
    int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    uint64_t *v22 = v2;
    if (!isUniquelyReferenced_nonNull_bridgeObject || v2 < 0 || (v2 & 0x4000000000000000) != 0)
    {
      sub_1BDD02F24(v2);
      uint64_t v2 = v24;
      uint64_t *v22 = v24;
    }
    if ((v5 & 0x8000000000000000) == 0)
    {
      if (v5 < *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20) = v11;
        swift_release();
        sub_1BDDAFFD8();
        v20(&v31, 0);
        goto LABEL_30;
      }
      goto LABEL_44;
    }
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  LOBYTE(v31) = v12;
  if ((CalculateExpression.TokenType.isOperand.getter() & 1) == 0)
  {
    LOBYTE(v31) = v12;
    unsigned __int8 v30 = 16;
    if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v31, &v30)) {
      goto LABEL_30;
    }
  }
  uint64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v15 = *(uint64_t (**)(long long *))(*(void *)v3 + 408);
    uint64_t v29 = (uint64_t)v11;
    swift_retain();
    uint64_t v2 = v15(&v31);
    if (!(*v16 >> 62))
    {
      uint64_t v17 = *(void *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1BDDB0448();
  swift_bridgeObjectRelease();
LABEL_15:
  if (v17 < v14)
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v14 < 0)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  sub_1BDD0572C(v5 + 1, v5 + 1, v29);
  ((void (*)(long long *, void))v2)(&v31, 0);
  sub_1BDD02E18(v3);
LABEL_18:
  swift_release();
  swift_release_n();
LABEL_31:
  swift_release();
  sub_1BDD02E18(v3);
  return 1;
}

uint64_t sub_1BDD37878(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 456))() & 1;
}

uint64_t CalculateExpression.FactorialOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t sub_1BDD378FC(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)a1 + 176);
  uint64_t result = v2();
  if (!result) {
    return result;
  }
  uint64_t v4 = CalculateExpression.format.getter();
  uint64_t v5 = swift_release();
  if (v4 != 2) {
    return 0;
  }
  uint64_t v6 = ((uint64_t (*)(uint64_t))v2)(v5);
  if (v6)
  {
    unint64_t v7 = CalculateExpression.postfixStack.getter();
    swift_release();
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
      if (v8)
      {
LABEL_6:
        unint64_t v9 = v8 - 1;
        if (__OFSUB__(v8, 1))
        {
          __break(1u);
        }
        else if ((v7 & 0xC000000000000001) == 0)
        {
          if ((v9 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v9 < *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            swift_retain();
            goto LABEL_11;
          }
          __break(1u);
          goto LABEL_33;
        }
        MEMORY[0x1C18862A0](v9, v7);
LABEL_11:
        swift_bridgeObjectRelease();
        uint64_t v10 = CalculateExpression.rich.getter();
        unint64_t v11 = (*(uint64_t (**)(void))(*(void *)v10 + 392))();
        swift_release();
        if (!(v11 >> 62))
        {
          uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_13:
          swift_bridgeObjectRelease();
          unsigned __int8 v13 = (void (*)(void *, void))(*(uint64_t (**)(void *))(*(void *)a1 + 408))(v22);
          sub_1BDD03588(v12);
          v13(v22, 0);
          uint64_t v6 = swift_release();
          goto LABEL_17;
        }
LABEL_33:
        swift_bridgeObjectRetain();
        uint64_t v12 = sub_1BDDB0448();
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v8) {
        goto LABEL_6;
      }
    }
    uint64_t v6 = swift_bridgeObjectRelease();
  }
LABEL_17:
  unint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 392))(v6);
  if (v14 >> 62) {
    uint64_t v15 = sub_1BDDB0448();
  }
  else {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v15)
  {
    type metadata accessor for CalculateExpression.RichToken();
    (*(void (**)(void *__return_ptr))(*(void *)a1 + 384))(v22);
    sub_1BDCE8A80(48, 0xE100000000000000, (char *)v22);
    uint64_t v16 = (void (*)(void *, void))(*(uint64_t (**)(void *))(*(void *)a1 + 408))(v22);
    uint64_t v18 = v17;
    MEMORY[0x1C1885EA0]();
    if (*(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1BDDB0008();
    }
    sub_1BDDB0048();
    sub_1BDDAFFD8();
    v16(v22, 0);
  }
  BOOL v19 = v15 == 0;
  BOOL v20 = v15 != 0;
  uint64_t v21 = v19;
  (*(void (**)(uint64_t))(*(void *)a1 + 232))(v21);
  (*(void (**)(BOOL))(*(void *)a1 + 256))(v20);
  return 1;
}

uint64_t CalculateExpression.DropOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  return MEMORY[0x1F4186488](v0, 16, 7);
}

void sub_1BDD37D54(uint64_t a1, uint64_t a2)
{
  void (*v18)(long long *__return_ptr, uint64_t);
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t (*v25)(void);
  void *v26;
  uint64_t v27;
  void (*v28)(long long *, void);
  uint64_t (*v29)(long long *);
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(long long *);
  void (*v34)(long long *, void);
  unint64_t *v35;
  unint64_t *v36;
  unint64_t v37;
  int isUniquelyReferenced_nonNull_bridgeObject;
  unint64_t v39;
  uint64_t v40;
  char v41;
  void (*v42)(long long *, void);
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t (*v49)(void);
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  void (*v55)(void);
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t (*v60)(long long *, void);
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t (*)(void), void);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  void (*v76)(long long *, void);
  uint64_t v77;
  unint64_t v78;
  char v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(unint64_t);
  uint64_t (*v84)(void);
  uint64_t (*v85)(void);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  long long v90;

  if (*(unsigned char *)(a2 + 16) != 1) {
    return;
  }
  uint64_t v3 = v2;
  uint64_t v5 = *(uint64_t (**)(void))(*(void *)a1 + 176);
  if (!v5()) {
    goto LABEL_10;
  }
  uint64_t v6 = CalculateExpression.format.getter();
  uint64_t v7 = swift_release();
  if (v6 != 2
    || ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 248))(v7) & 1) == 0
    || *(void *)(v2 + 16) == 101 && *(void *)(v2 + 24) == 0xE100000000000000)
  {
    goto LABEL_10;
  }
  if (sub_1BDDB04E8()) {
    goto LABEL_10;
  }
  type metadata accessor for CalculateExpression.RichToken();
  (*(void (**)(long long *__return_ptr))(*(void *)a1 + 384))(&v90);
  sub_1BDCE8A80(48, 0xE100000000000000, (char *)&v90);
  uint64_t v8 = (*(uint64_t (**)(long long *))(*(void *)a1 + 408))(&v90);
  uint64_t v10 = v9;
  MEMORY[0x1C1885EA0]();
  if (*(void *)((*v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_126;
  }
  while (1)
  {
    sub_1BDDB0048();
    sub_1BDDAFFD8();
    ((void (*)(long long *, void))v8)(&v90, 0);
    (*(void (**)(uint64_t))(*(void *)a1 + 232))(1);
    (*(void (**)(void))(*(void *)a1 + 256))(0);
LABEL_10:
    CalculateExpression.RichExpression.editingToken(matching:)(sub_1BDD392D8, &v90);
    uint64_t v11 = v90;
    if (!(void)v90) {
      return;
    }
    uint64_t v84 = v5;
    unint64_t v12 = *((void *)&v90 + 1);
    unsigned __int8 v13 = *(uint64_t (**)(unint64_t))(*(void *)v90 + 416);
    uint64_t v14 = swift_retain();
    sub_1BDD02DD4(v14);
    unint64_t v15 = v12;
    uint64_t v83 = v13;
    uint64_t v16 = v13(v12);
    type metadata accessor for CalculateExpression.RichToken();
    uint64_t v5 = *(uint64_t (**)(void))(v3 + 16);
    uint64_t v17 = *(void (**)(long long *, void))(v3 + 24);
    uint64_t v18 = *(void (**)(long long *__return_ptr, uint64_t))(*(void *)a1 + 384);
    BOOL v19 = swift_bridgeObjectRetain();
    v18(&v90, v19);
    uint64_t v86 = sub_1BDCE8A80((uint64_t)v5, (uint64_t)v17, (char *)&v90);
    ((void (*)(long long *__return_ptr))v18)(&v90);
    uint64_t v3 = sub_1BDCE8A80(48, 0xE100000000000000, (char *)&v90);
    if (!v16)
    {
      if (v5 == (uint64_t (*)(void))12336 && v17 == (void (*)(long long *, void))0xE200000000000000
        || (sub_1BDDB04E8() & 1) != 0)
      {
        swift_release();
        swift_retain();
        uint64_t v17 = (void (*)(long long *, void))v3;
        unint64_t v23 = v12;
      }
      else
      {
        unint64_t v23 = v12;
        uint64_t v17 = (void (*)(long long *, void))v86;
      }
      uint64_t v29 = *(uint64_t (**)(long long *))(*(void *)v11 + 408);
      swift_retain();
      uint64_t v5 = (uint64_t (*)(void))&v90;
      uint64_t v8 = v29(&v90);
      if (!(*v30 >> 62)
        || (swift_bridgeObjectRetain(),
            uint64_t v82 = sub_1BDDB0448(),
            swift_bridgeObjectRelease(),
            (v82 & 0x8000000000000000) == 0))
      {
        sub_1BDD0572C(0, 0, (uint64_t)v17);
        ((void (*)(long long *, void))v8)(&v90, 0);
        (*(void (**)(void))(*(void *)a1 + 232))(0);
        swift_release();
        sub_1BDD02E18(v11);
        swift_release();
        goto LABEL_57;
      }
      __break(1u);
LABEL_122:
      __break(1u);
      goto LABEL_123;
    }
    uint64_t v85 = v5;
    uint64_t v87 = v16;
    BOOL v20 = *(uint64_t (**)(uint64_t))(*(void *)v16 + 384);
    uint64_t v21 = swift_retain();
    unint64_t v22 = v20(v21);
    if (v22) {
      unint64_t v22 = (*(uint64_t (**)(void))(*(void *)v16 + 240))(0);
    }
    unint64_t v23 = v12;
    if (((*(uint64_t (**)(uint64_t))(*(void *)v16 + 352))(v22) & 1) != 0
      && (v5 != (uint64_t (*)(void))46 || v17 != (void (*)(long long *, void))0xE100000000000000)
      && (sub_1BDDB04E8() & 1) == 0)
    {
      break;
    }
    if (((*(uint64_t (**)(void))(*(void *)a1 + 224))() & 1) != 0
      && (v5 != (uint64_t (*)(void))101 || v17 != (void (*)(long long *, void))0xE100000000000000)
      && (sub_1BDDB04E8() & 1) == 0)
    {
      if (v5 == (uint64_t (*)(void))12336 && v17 == (void (*)(long long *, void))0xE200000000000000
        || (sub_1BDDB04E8() & 1) != 0)
      {
        swift_release();
        swift_retain();
        uint64_t v86 = v3;
      }
      if (v5 == (uint64_t (*)(void))46 && v17 == (void (*)(long long *, void))0xE100000000000000
        || (long long v31 = sub_1BDDB04E8(), (v31 & 1) != 0))
      {
        long long v31 = (*(uint64_t (**)(uint64_t, unint64_t))(*(void *)v86 + 216))(11824, 0xE200000000000000);
      }
      if (((uint64_t (*)(uint64_t))v84)(v31))
      {
        uint64_t v32 = CalculateExpression.format.getter();
        swift_release();
        if (v32 == 2)
        {
          uint64_t v33 = *(uint64_t (**)(long long *))(*(void *)v11 + 408);
          swift_retain();
          char v34 = (void (*)(long long *, void))v33(&v90);
          uint64_t v36 = v35;
          uint64_t v37 = *v35;
          int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
          char *v36 = v37;
          if (!isUniquelyReferenced_nonNull_bridgeObject
            || (v37 & 0x8000000000000000) != 0
            || (v37 & 0x4000000000000000) != 0)
          {
            sub_1BDD02F24(v37);
            uint64_t v37 = v39;
            char *v36 = v39;
          }
          if ((v23 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v23 < *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 8 * v23 + 0x20) = v86;
            swift_release();
            sub_1BDDAFFD8();
            v34(&v90, 0);
            uint64_t v40 = v83(v23 - 1);
            if (v40)
            {
              uint64_t v41 = *(unsigned char *)(v40 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
              swift_release();
              LOBYTE(v90) = v41;
              LOBYTE(v88) = 4;
              sub_1BDCF0848();
              if (sub_1BDDAFD28())
              {
                unint64_t v42 = (void (*)(long long *, void))v33(&v90);
                sub_1BDD02E58(v23 - 1);
                swift_release();
                v42(&v90, 0);
              }
            }
            goto LABEL_82;
          }
          __break(1u);
          goto LABEL_129;
        }
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
      unint64_t v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_1BDDB3730;
      *(void *)(v43 + 32) = v86;
      *(void *)&unint64_t v90 = v43;
      sub_1BDDAFFD8();
      uint64_t v44 = v90;
      uint64_t v45 = *(void (**)(uint64_t))(*(void *)v11 + 400);
      swift_retain();
      v45(v44);
LABEL_82:
      (*(void (**)(void))(*(void *)a1 + 232))(0);
      swift_release();
      uint64_t v46 = v11;
      goto LABEL_83;
    }
    uint64_t v3 = OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
    uint64_t v24 = *(unsigned char *)(v16 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    LOBYTE(v90) = v24;
    if ((CalculateExpression.TokenType.isOperator.getter() & 1) == 0)
    {
      LOBYTE(v90) = v24;
      LOBYTE(v88) = 15;
      if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v90, (unsigned __int8 *)&v88))
      {
        LOBYTE(v90) = v24;
        if ((CalculateExpression.TokenType.isConstant.getter() & 1) == 0)
        {
          LOBYTE(v90) = v24;
          LOBYTE(v88) = 18;
          if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v90, (unsigned __int8 *)&v88))
          {
            LOBYTE(v90) = v24;
            LOBYTE(v88) = 16;
            if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v90, (unsigned __int8 *)&v88))
            {
              LOBYTE(v90) = v24;
              LOBYTE(v88) = 1;
              if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v90, (unsigned __int8 *)&v88))goto LABEL_52; {
              if (v84())
              }
              {
                (*(void (**)(void))(*(void *)v16 + 640))();
                swift_release();
              }
              if (v5 == (uint64_t (*)(void))101 && v17 == (void (*)(long long *, void))0xE100000000000000
                || (sub_1BDDB04E8() & 1) != 0)
              {
                *(void *)&unint64_t v90 = (*(uint64_t (**)(void))(*(void *)v16 + 208))();
                *((void *)&v90 + 1) = v47;
                uint64_t v88 = 101;
                uint64_t v89 = 0xE100000000000000;
                sub_1BDCEB640();
                char v48 = sub_1BDDB0228();
                swift_bridgeObjectRelease();
                if (v48) {
                  goto LABEL_98;
                }
              }
              if (v5 == (uint64_t (*)(void))46 && v17 == (void (*)(long long *, void))0xE100000000000000
                || (sub_1BDDB04E8() & 1) != 0)
              {
                uint64_t v49 = *(uint64_t (**)(void))(*(void *)v16 + 208);
                *(void *)&unint64_t v90 = v49();
                *((void *)&v90 + 1) = v50;
                uint64_t v88 = 46;
                uint64_t v89 = 0xE100000000000000;
                sub_1BDCEB640();
                uint64_t v51 = sub_1BDDB0228();
                uint64_t v52 = swift_bridgeObjectRelease();
                if (v51) {
                  goto LABEL_98;
                }
                *(void *)&unint64_t v90 = ((uint64_t (*)(uint64_t))v49)(v52);
                *((void *)&v90 + 1) = v53;
                uint64_t v88 = 101;
                uint64_t v89 = 0xE100000000000000;
                uint64_t v54 = sub_1BDDB0228();
                swift_bridgeObjectRelease();
                if (v54) {
                  goto LABEL_98;
                }
              }
              uint64_t v55 = *(void (**)(void))(*(void *)v16 + 208);
              v55();
              unsigned __int8 v56 = sub_1BDDAFEC8();
              uint64_t v57 = swift_bridgeObjectRelease();
              if ((v56 & 1) != 0
                || (((void (*)(uint64_t))v55)(v57),
                    char v58 = sub_1BDDAFEC8(),
                    unsigned __int8 v59 = swift_bridgeObjectRelease(),
                    (v58 & 1) != 0))
              {
                unsigned __int8 v60 = (uint64_t (*)(long long *, void))(*(uint64_t (**)(long long *))(*(void *)v87 + 224))(&v90);
                sub_1BDD39434();
                swift_bridgeObjectRelease();
                unsigned __int8 v59 = v60(&v90, 0);
              }
              Swift::Bool v61 = ((uint64_t (*)(uint64_t))v55)(v59);
              sub_1BDCEB694(45, 0xE100000000000000, v61, v62);
              Swift::String v64 = v63;
              uint64_t v65 = swift_bridgeObjectRelease();
              if ((v64 & 1) == 0) {
                goto LABEL_132;
              }
              unsigned __int8 v66 = ((uint64_t (*)(uint64_t))v55)(v65);
              sub_1BDCEB694(43, 0xE100000000000000, v66, v67);
              unsigned __int8 v69 = v68;
              uint64_t v65 = swift_bridgeObjectRelease();
              if ((v69 & 1) == 0
                || (uint64_t v77 = ((uint64_t (*)(uint64_t))v55)(v65),
                    sub_1BDCEB694(101, 0xE100000000000000, v77, v78),
                    uint64_t v80 = v79,
                    uint64_t v65 = swift_bridgeObjectRelease(),
                    (v80 & 1) == 0))
              {
LABEL_132:
                ((void (*)(uint64_t))v55)(v65);
                v55();
                swift_bridgeObjectRelease();
                unsigned __int8 v70 = sub_1BDDAFE98();
                uint64_t v65 = swift_bridgeObjectRelease();
                if (v70 >= 4)
                {
LABEL_98:
                  swift_release();
                  sub_1BDD02E18(v11);
                  swift_release();
                  swift_release_n();
                  goto LABEL_57;
                }
              }
              *(void *)&unint64_t v90 = ((uint64_t (*)(uint64_t))v55)(v65);
              *((void *)&v90 + 1) = v81;
              swift_bridgeObjectRetain();
              sub_1BDDAFE18();
              swift_bridgeObjectRelease();
              (*(void (**)(void, void))(*(void *)v87 + 216))(v90, *((void *)&v90 + 1));
              (*(void (**)(void))(*(void *)a1 + 232))(0);
              (*(void (**)(void))(*(void *)a1 + 256))(0);
              swift_release();
              sub_1BDD02E18(v11);
              swift_release();
              goto LABEL_53;
            }
          }
        }
      }
    }
    if (v5 == (uint64_t (*)(void))101 && v17 == (void (*)(long long *, void))0xE100000000000000
      || (sub_1BDDB04E8() & 1) != 0)
    {
      goto LABEL_98;
    }
    if (v5 == (uint64_t (*)(void))12336 && v17 == (void (*)(long long *, void))0xE200000000000000
      || (sub_1BDDB04E8() & 1) != 0)
    {
      swift_release();
      uint64_t v86 = swift_retain();
    }
    if (v5 == (uint64_t (*)(void))46 && v17 == (void (*)(long long *, void))0xE100000000000000
      || (sub_1BDDB04E8() & 1) != 0)
    {
      (*(void (**)(uint64_t, unint64_t))(*(void *)v86 + 216))(11824, 0xE200000000000000);
    }
    uint64_t v8 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_122;
    }
    unsigned __int8 v25 = *(uint64_t (**)(void))(*(void *)v11 + 408);
    uint64_t v5 = (uint64_t (*)(void))(*(void *)v11 + 408);
    swift_retain();
    uint64_t v85 = v25;
    uint64_t v17 = (void (*)(long long *, void))((uint64_t (*)(long long *))v25)(&v90);
    if (!(*v26 >> 62))
    {
      uint64_t v27 = *(void *)((*v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_47;
    }
LABEL_123:
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
LABEL_47:
    if (v27 < v8)
    {
      __break(1u);
    }
    else if ((v8 & 0x8000000000000000) == 0)
    {
      sub_1BDD0572C(v8, v8, v86);
      v17(&v90, 0);
      LOBYTE(v90) = *(unsigned char *)(v87 + v3);
      LOBYTE(v88) = 18;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v90, (unsigned __int8 *)&v88))
      {
        Swift::Int_optional v28 = (void (*)(long long *, void))((uint64_t (*)(long long *))v85)(&v90);
        sub_1BDD02E58(v23);
        swift_release();
        v28(&v90, 0);
      }
      (*(void (**)(void))(*(void *)a1 + 232))(0);
      goto LABEL_52;
    }
    __break(1u);
LABEL_126:
    sub_1BDDB0008();
  }
  if (v5 == (uint64_t (*)(void))101 && v17 == (void (*)(long long *, void))0xE100000000000000
    || (sub_1BDDB04E8() & 1) != 0)
  {
    goto LABEL_98;
  }
  (*(void (**)(void))(*(void *)a1 + 232))(0);
  if (v5 == (uint64_t (*)(void))48 && v17 == (void (*)(long long *, void))0xE100000000000000) {
    goto LABEL_52;
  }
  if ((sub_1BDDB04E8() & 1) != 0
    || v5 == (uint64_t (*)(void))12336 && v17 == (void (*)(long long *, void))0xE200000000000000)
  {
    goto LABEL_52;
  }
  if (sub_1BDDB04E8()) {
    goto LABEL_52;
  }
  NSNumberFormatter_optional v71 = *(uint64_t (**)(uint64_t (*)(void), void))(*(void *)v16 + 216);
  swift_bridgeObjectRetain();
  Swift::Int_optional v72 = v71(v5, v17);
  if (!((uint64_t (*)(uint64_t))v84)(v72)) {
    goto LABEL_52;
  }
  uint64_t v73 = CalculateExpression.format.getter();
  swift_release();
  if (v73 != 2) {
    goto LABEL_52;
  }
  if (!__OFSUB__(v12, 1))
  {
    uint64_t v74 = v83(v12 - 1);
    if (v74)
    {
      uint64_t v75 = *(unsigned char *)(v74 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      swift_release();
      LOBYTE(v90) = v75;
      LOBYTE(v88) = 4;
      sub_1BDCF0848();
      if (sub_1BDDAFD28())
      {
        uint64_t v76 = (void (*)(long long *, void))(*(uint64_t (**)(long long *))(*(void *)v11 + 408))(&v90);
        sub_1BDD02E58(v15 - 1);
        swift_release();
        v76(&v90, 0);
        swift_release();
        uint64_t v46 = v11;
LABEL_83:
        sub_1BDD02E18(v46);
        swift_release();
        swift_release_n();
LABEL_57:
        swift_release();
        sub_1BDD02E18(v11);
        return;
      }
    }
LABEL_52:
    swift_release();
    sub_1BDD02E18(v11);
    swift_release();
LABEL_53:
    swift_release_n();
    goto LABEL_57;
  }
LABEL_129:
  __break(1u);
}

uint64_t sub_1BDD392D8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (((*(uint64_t (**)(void))(*(void *)*a1 + 560))() & 1) != 0
    || ((*(uint64_t (**)(void))(*(void *)v1 + 568))() & 1) != 0
    || ((*(uint64_t (**)(void))(*(void *)v1 + 544))() & 1) != 0)
  {
    LOBYTE(v2) = 1;
  }
  else if ((*(uint64_t (**)(void))(*(void *)v1 + 456))())
  {
    uint64_t v2 = CalculateExpression.RichExpression.EditingToken.token.getter();
    if (v2)
    {
      swift_release();
      sub_1BDCF0848();
      LOBYTE(v2) = sub_1BDDAFD28();
    }
  }
  else
  {
    LOBYTE(v2) = 0;
  }
  return v2 & 1;
}

uint64_t sub_1BDD39434()
{
  uint64_t v1 = v0[1];
  if ((v1 & 0x2000000000000000) == 0)
  {
    if ((*v0 & 0xFFFFFFFFFFFFLL) != 0) {
      goto LABEL_5;
    }
    __break(1u);
  }
  if ((v1 & 0xF00000000000000) == 0)
  {
    __break(1u);
    return result;
  }
LABEL_5:
  sub_1BDDAFDE8();
  return sub_1BDDAFE38();
}

void sub_1BDD3949C()
{
}

uint64_t CalculateExpression.LiteralOperation.deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CalculateExpression.LiteralOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t method lookup function for CalculateExpression.LiteralOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalculateExpression.LiteralOperation);
}

void sub_1BDD3955C(char *a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  BOOL v5 = v4 == 121 && v3 == 0xE100000000000000;
  if (v5 || (sub_1BDDB04E8() & 1) != 0)
  {
    char v6 = 2;
  }
  else
  {
    char v6 = 3;
    if (v4 || v3 != 0xE000000000000000)
    {
      if (sub_1BDDB04E8()) {
        char v6 = 3;
      }
      else {
        char v6 = 1;
      }
    }
  }
  *a1 = v6;
}

uint64_t sub_1BDD395F4()
{
  type metadata accessor for CalculateExpression.RichToken();
  unsigned __int8 v33 = 10;
  char v1 = sub_1BDD013AC();
  uint64_t v2 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(10127586, 0xA300000000000000, &v33, v1 & 1);
  uint64_t v3 = *(void *)(v0 + 16);
  unint64_t v4 = *(void *)(v0 + 24);
  BOOL v5 = v3 == 50 && v4 == 0xE100000000000000;
  if (!v5 && (sub_1BDDB04E8() & 1) == 0)
  {
    if (v3) {
      BOOL v6 = 0;
    }
    else {
      BOOL v6 = v4 == 0xE000000000000000;
    }
    char v7 = v6;
    if (v6
      || ((char v8 = sub_1BDDB04E8(), v3 == 121) ? (v9 = v4 == 0xE100000000000000) : (v9 = 0),
          !v9 ? (char v10 = 0) : (char v10 = 1),
          (v8 & 1) != 0 || (v10 & 1) != 0 || (sub_1BDDB04E8() & 1) != 0))
    {
      char v29 = 18;
      char v11 = sub_1BDD013AC() & 1;
      unint64_t v12 = &v29;
      uint64_t v13 = 0;
      unint64_t v14 = 0;
    }
    else
    {
      char v32 = 1;
      swift_bridgeObjectRetain();
      char v11 = sub_1BDD013AC() & 1;
      unint64_t v12 = &v32;
      uint64_t v13 = v3;
      unint64_t v14 = v4;
    }
    uint64_t v15 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v13, v14, (unsigned __int8 *)v12, v11);
    type metadata accessor for CalculateExpression.RichExpression();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1BDDB3730;
    *(void *)(v16 + 32) = v15;
    uint64_t v31 = v16;
    sub_1BDDAFFD8();
    uint64_t v17 = v31;
    swift_retain();
    uint64_t v18 = sub_1BDD07294(v17);
    uint64_t v19 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 264))(v18);
    BOOL v20 = *(uint64_t (**)(uint64_t))(*(void *)v2 + 256);
    uint64_t v21 = v20(v19);
    if (v21)
    {
      uint64_t v22 = v21;
      if (v7)
      {
        char v23 = 1;
      }
      else
      {
        char v24 = sub_1BDDB04E8();
        BOOL v26 = v3 == 121 && v4 == 0xE100000000000000;
        char v23 = 1;
        if ((v24 & 1) == 0 && !v26) {
          char v23 = sub_1BDDB04E8();
        }
      }
      (*(void (**)(void))(*(void *)v22 + 304))(v23 & 1);
      uint64_t v21 = swift_release();
    }
    uint64_t v27 = v20(v21);
    if (v27)
    {
      char v30 = 1;
      (*(void (**)(char *))(*(void *)v27 + 280))(&v30);
      swift_release();
    }
    swift_release();
  }
  return v2;
}

uint64_t CalculateExpression.RootOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.FunctionOperation.deinit();
  return MEMORY[0x1F4186488](v0, 33, 7);
}

uint64_t sub_1BDD39948(uint64_t a1)
{
  unint64_t v2 = *(void *)(*(void *)a1 + 176);
  if (!((uint64_t (*)(void))v2)()) {
    return 0;
  }
  uint64_t v3 = CalculateExpression.format.getter();
  uint64_t v4 = swift_release();
  if (v3 != 2) {
    return 0;
  }
  uint64_t v5 = ((uint64_t (*)(uint64_t))v2)(v4);
  if (v5)
  {
    unint64_t v6 = CalculateExpression.postfixStack.getter();
    swift_release();
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
  }
  if (v5 >= *(void *)sub_1BDD3A694()) {
    return 0;
  }
  if (!((uint64_t (*)(void))v2)()) {
    return 1;
  }
  unint64_t v7 = CalculateExpression.postfixStack.getter();
  swift_release();
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1BDDB0448();
  swift_bridgeObjectRelease();
  if (!v8)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    return 1;
  }
LABEL_11:
  unint64_t v9 = v8 - 1;
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
  }
  else if ((v7 & 0xC000000000000001) == 0)
  {
    if ((v9 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v9 < *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      swift_retain();
      goto LABEL_16;
    }
    __break(1u);
    goto LABEL_35;
  }
  MEMORY[0x1C18862A0](v9, v7);
LABEL_16:
  swift_bridgeObjectRelease();
  uint64_t v10 = CalculateExpression.rich.getter();
  unint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 392))(v10);
  swift_release();
  if (!(v2 >> 62))
  {
    uint64_t v11 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11) {
      goto LABEL_18;
    }
LABEL_36:
    swift_bridgeObjectRelease();
    unint64_t v16 = MEMORY[0x1E4FBC860];
LABEL_37:
    uint64_t v17 = (void (*)(void *, void))(*(uint64_t (**)(void *))(*(void *)a1 + 408))(v18);
    sub_1BDCE4468(v16);
    v17(v18, 0);
    (*(void (**)(void))(*(void *)a1 + 256))(0);
    uint64_t v14 = 1;
    (*(void (**)(uint64_t))(*(void *)a1 + 232))(1);
    swift_release();
    return v14;
  }
LABEL_35:
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1BDDB0448();
  swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_36;
  }
LABEL_18:
  v18[0] = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1BDDB0408();
  if ((v11 & 0x8000000000000000) == 0)
  {
    type metadata accessor for CalculateExpression.RichToken();
    uint64_t v13 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        uint64_t v15 = MEMORY[0x1C18862A0](v13, v2);
      }
      else {
        uint64_t v15 = swift_retain();
      }
      ++v13;
      sub_1BDD072D4(v15);
      sub_1BDDB03E8();
      sub_1BDDB0418();
      sub_1BDDB0428();
      sub_1BDDB03F8();
    }
    while (v11 != v13);
    unint64_t v16 = v18[0];
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  __break(1u);
  return result;
}

uint64_t CalculateExpression.EnterOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t type metadata accessor for CalculateExpression.EnterOperation()
{
  return self;
}

uint64_t sub_1BDD39DB0()
{
  unint64_t v1 = sub_1BDD39E7C((uint64_t)&unk_1F1866318);
  uint64_t v3 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_1BDD13EB4(v3, v2);
    if (v6)
    {
      unint64_t v7 = v5;
      type metadata accessor for CalculateExpression.RichToken();
      LOBYTE(v7) = *(unsigned char *)(*(void *)(v1 + 56) + v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unsigned __int8 v10 = v7;
      char v8 = sub_1BDD013AC();
      return CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v3, v2, &v10, v8 & 1);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

unint64_t sub_1BDD39E7C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269C0);
  unint64_t v2 = (void *)sub_1BDDB0488();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BDD13EB4(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unsigned __int8 v10 = (uint64_t *)(v2[6] + 16 * result);
    *unsigned __int8 v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1BDD39F90()
{
}

uint64_t CalculateExpression.ConstantOperation.deinit()
{
  uint64_t v0 = CalculateExpression.OperandOperation.deinit();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CalculateExpression.ConstantOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.OperandOperation.deinit();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t method lookup function for CalculateExpression.ConstantOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalculateExpression.ConstantOperation);
}

id sub_1BDD3A178()
{
  if (qword_1EBA29B30 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EBA2AF88;
  uint64_t v2 = *(void *)(qword_1EBA2AF88 + 16);
  if (v2)
  {
    uint64_t v3 = OBJC_IVAR____TtC9Calculate23NumberFormatterObserver_numberFormatter;
    swift_bridgeObjectRetain();
    uint64_t v4 = v1 + 40;
    do
    {
      uint64_t v5 = *(void **)&v0[v3];
      swift_bridgeObjectRetain();
      id v6 = v5;
      char v7 = (void *)sub_1BDDAFD38();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_removeObserver_forKeyPath_, v0, v7);

      v4 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for NumberFormatterObserver();
  return objc_msgSendSuper2(&v9, sel_dealloc);
}

uint64_t sub_1BDD3A348(uint64_t a1, uint64_t a2)
{
  return sub_1BDD02078(a1, a2, MEMORY[0x1F418C130]);
}

uint64_t sub_1BDD3A354(uint64_t a1)
{
  uint64_t v2 = sub_1BDD3A63C(&qword_1EBA26978);
  uint64_t v3 = sub_1BDD3A63C(&qword_1EA0DF218);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

void sub_1BDD3A3EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  if ((objc_msgSend(*(id *)(v5 + OBJC_IVAR____TtC9Calculate23NumberFormatterObserver_numberFormatter), sel_shouldIgnoreChanges) & 1) == 0)
  {
    if (a4 && *(void *)(a4 + 16))
    {
      id v9 = (id)*MEMORY[0x1E4F284D0];
      unint64_t v10 = sub_1BDCE6070((uint64_t)v9);
      if (v11)
      {
        sub_1BDD18D98(*(void *)(a4 + 56) + 32 * v10, (uint64_t)&v15);

        if (*((void *)&v16 + 1))
        {
          sub_1BDD2C8D4();
          if (swift_dynamicCast())
          {
            unsigned int v12 = objc_msgSend(v14, sel_BOOLValue);

            if (v12)
            {
              uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v5
                                                            + OBJC_IVAR____TtC9Calculate23NumberFormatterObserver_willChange);
              if (v13) {
                v13(a1, a2);
              }
              return;
            }
          }
LABEL_13:
          (*(void (**)(uint64_t, uint64_t))(v5 + OBJC_IVAR____TtC9Calculate23NumberFormatterObserver_didChange))(a1, a2);
          return;
        }
      }
      else
      {
        long long v15 = 0u;
        long long v16 = 0u;
      }
    }
    else
    {
      long long v15 = 0u;
      long long v16 = 0u;
    }
    sub_1BDCE627C((uint64_t)&v15);
    goto LABEL_13;
  }
}

void type metadata accessor for NSKeyValueChangeKey()
{
  if (!qword_1EBA26988)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1EBA26988);
    }
  }
}

uint64_t sub_1BDD3A5A0()
{
  return sub_1BDD3A63C(&qword_1EA0DF208);
}

uint64_t sub_1BDD3A5D4()
{
  return sub_1BDD3A63C(&qword_1EA0DF210);
}

uint64_t sub_1BDD3A608()
{
  return sub_1BDD3A63C(&qword_1EBA26980);
}

uint64_t sub_1BDD3A63C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NSKeyValueChangeKey();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1BDD3A680()
{
  return &unk_1BDDB44B0;
}

uint64_t static CalculateExpression.maximumDepth.getter()
{
  return 3;
}

void *sub_1BDD3A694()
{
  return &unk_1BDDB44B8;
}

uint64_t static CalculateExpression.maximumPostfixDepth.getter()
{
  return 64;
}

uint64_t sub_1BDD3A6A8()
{
  uint64_t result = sub_1BDCF0210((uint64_t)&unk_1F1866E88);
  qword_1EA0DFFD8 = result;
  return result;
}

uint64_t sub_1BDD3A6D0()
{
  uint64_t result = sub_1BDCF0210((uint64_t)&unk_1F1866E28);
  qword_1EBA29998 = result;
  return result;
}

uint64_t sub_1BDD3A6F8()
{
  uint64_t result = sub_1BDCF0210((uint64_t)&unk_1F1866EB0);
  qword_1EBA299C8 = result;
  return result;
}

uint64_t sub_1BDD3A720()
{
  uint64_t result = sub_1BDCF0210((uint64_t)&unk_1F1866F08);
  qword_1EA0DFFE8 = result;
  return result;
}

uint64_t sub_1BDD3A748()
{
  uint64_t result = sub_1BDCF0210((uint64_t)&unk_1F1866EE0);
  qword_1EA0E0000 = result;
  return result;
}

uint64_t sub_1BDD3A770()
{
  uint64_t result = sub_1BDCF0210((uint64_t)&unk_1F1866F38);
  qword_1EBA28FE0 = result;
  return result;
}

uint64_t sub_1BDD3A798()
{
  uint64_t result = sub_1BDCF0210((uint64_t)&unk_1F1866E00);
  qword_1EBA29980 = result;
  return result;
}

uint64_t sub_1BDD3A7C0()
{
  uint64_t result = sub_1BDCF0210((uint64_t)&unk_1F1866E60);
  qword_1EBA299B0 = result;
  return result;
}

uint64_t sub_1BDD3A7E8()
{
  uint64_t result = sub_1BDCF0210((uint64_t)&unk_1F1866F60);
  qword_1EBA299E0 = result;
  return result;
}

uint64_t sub_1BDD3A810()
{
  uint64_t result = sub_1BDCF0210((uint64_t)&unk_1F1866F90);
  qword_1EBA299F0 = result;
  return result;
}

uint64_t sub_1BDD3A838()
{
  uint64_t result = sub_1BDCF0210((uint64_t)&unk_1F1866FC0);
  qword_1EBA29A00 = result;
  return result;
}

uint64_t sub_1BDD3A860()
{
  uint64_t result = sub_1BDCF0210((uint64_t)&unk_1F1867A78);
  qword_1EBA2A0A0 = result;
  return result;
}

uint64_t CalculateExpression.TokenType.isBasicOperator.getter()
{
  return sub_1BDCE8614(&qword_1EA0DFFD0, &qword_1EA0DFFD8);
}

uint64_t CalculateExpression.TokenType.isOperator.getter()
{
  return sub_1BDCE8614(qword_1EBA299A0, &qword_1EBA29998);
}

uint64_t CalculateExpression.TokenType.isBinaryOperator.getter()
{
  return sub_1BDCE8614(qword_1EBA299D0, &qword_1EBA299C8);
}

uint64_t CalculateExpression.TokenType.isBitwiseOperator.getter()
{
  return sub_1BDCE8614(&qword_1EA0DFFE0, &qword_1EA0DFFE8);
}

uint64_t CalculateExpression.TokenType.isPrefixOperator.getter()
{
  return sub_1BDCE8614(&qword_1EA0DFFF8, &qword_1EA0E0000);
}

uint64_t CalculateExpression.TokenType.isPostfixOperator.getter()
{
  return sub_1BDCE8614(qword_1EBA28F58, &qword_1EBA28FE0);
}

uint64_t CalculateExpression.TokenType.isConstant.getter()
{
  return sub_1BDCE8614(&qword_1EBA29988, &qword_1EBA29980);
}

uint64_t CalculateExpression.TokenType.isParenthesis.getter()
{
  return sub_1BDCE8614(qword_1EBA299B8, &qword_1EBA299B0);
}

uint64_t CalculateExpression.TokenType.isOpen.getter()
{
  return sub_1BDCE8614(&qword_1EBA299E8, &qword_1EBA299E0);
}

uint64_t CalculateExpression.TokenType.isClose.getter()
{
  return sub_1BDCE8614(&qword_1EBA299F8, &qword_1EBA299F0);
}

uint64_t CalculateExpression.TokenType.isLaTeX.getter()
{
  return sub_1BDCE8614(qword_1EBA29A08, &qword_1EBA29A00);
}

uint64_t CalculateExpression.TokenType.isAnyUnknown.getter()
{
  return sub_1BDCE8614(qword_1EBA2A0A8, &qword_1EBA2A0A0);
}

unint64_t sub_1BDD3AA38()
{
  unint64_t result = sub_1BDD4FF5C((uint64_t)&unk_1F1866FF0);
  qword_1EA0E0010 = result;
  return result;
}

unint64_t sub_1BDD3AA60(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF270);
  uint64_t v2 = (void *)sub_1BDDB0488();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BDD13EB4(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void CalculateExpression.TokenType.match.getter(char *a1@<X8>)
{
  uint64_t v3 = *v1;
  if (qword_1EA0E0008 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1EA0E0010;
  if (*(void *)(qword_1EA0E0010 + 16) && (unint64_t v5 = sub_1BDCF0668(v3), (v6 & 1) != 0)) {
    char v7 = *(unsigned char *)(*(void *)(v4 + 56) + v5);
  }
  else {
    char v7 = 53;
  }
  *a1 = v7;
}

unint64_t sub_1BDD3AC00()
{
  unint64_t result = sub_1BDD50034((uint64_t)&unk_1F1866A58);
  qword_1EBA29950 = result;
  return result;
}

unint64_t sub_1BDD3AC28@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  uint64_t v2 = result;
  if (qword_1EBA29958 != -1) {
    unint64_t result = swift_once();
  }
  uint64_t v4 = qword_1EBA29950;
  if (*(void *)(qword_1EBA29950 + 16) && (unint64_t result = sub_1BDD4D928(v2), (v5 & 1) != 0)) {
    char v6 = *(unsigned char *)(*(void *)(v4 + 56) + result);
  }
  else {
    char v6 = 52;
  }
  *a2 = v6;
  return result;
}

uint64_t CalculateExpression.TokenType.hash(into:)()
{
  return sub_1BDDB0568();
}

uint64_t CalculateExpression.TokenType.hashValue.getter()
{
  return sub_1BDDB0578();
}

uint64_t sub_1BDD3AD28()
{
  uint64_t v0 = *sub_1BDD087D4();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1BDD5010C((uint64_t)&unk_1F1866478, v0);
  uint64_t result = swift_arrayDestroy();
  qword_1EA0E0020 = v1;
  return result;
}

uint64_t sub_1BDD3AD88(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  uint64_t v19 = a2;
  if ((result & 0xC000000000000001) != 0)
  {
    sub_1BDDB0278();
    type metadata accessor for CalculateExpression.Operation();
    sub_1BDCF1294(&qword_1EBA26898, (void (*)(uint64_t))type metadata accessor for CalculateExpression.Operation);
    uint64_t result = sub_1BDDB0118();
    uint64_t v2 = v20;
    uint64_t v17 = v21;
    uint64_t v3 = v22;
    uint64_t v4 = v23;
    unint64_t v5 = v24;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = -1 << *(unsigned char *)(result + 32);
    uint64_t v17 = result + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(result + 56);
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if (v2 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
      uint64_t v12 = v4;
      goto LABEL_29;
    }
    int64_t v14 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v14 >= v9) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v17 + 8 * v14);
    uint64_t v12 = v4 + 1;
    if (!v15)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v17 + 8 * v12);
      if (!v15)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v9) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v17 + 8 * v12);
        if (!v15)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v9) {
            goto LABEL_32;
          }
          unint64_t v15 = *(void *)(v17 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v4 + 5;
            if (v4 + 5 >= v9) {
              goto LABEL_32;
            }
            unint64_t v15 = *(void *)(v17 + 8 * v12);
            if (!v15)
            {
              uint64_t v16 = v4 + 6;
              while (v9 != v16)
              {
                unint64_t v15 = *(void *)(v17 + 8 * v16++);
                if (v15)
                {
                  uint64_t v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_1BDCE68B0();
              return v19;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
    uint64_t v13 = *(void *)(*(void *)(v2 + 48) + 8 * v11);
    swift_retain();
    if (!v13) {
      goto LABEL_32;
    }
    while (1)
    {
      sub_1BDCF0978(&v18, v13);
      uint64_t result = swift_release();
      uint64_t v4 = v12;
      unint64_t v5 = v10;
      if ((v2 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_1BDDB02A8())
      {
        type metadata accessor for CalculateExpression.Operation();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        uint64_t v13 = v18;
        swift_unknownObjectRelease();
        uint64_t v12 = v4;
        uint64_t v10 = v5;
        if (v13) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
  return result;
}

uint64_t static CalculateExpression.allWordBasedSymbols.getter()
{
  if (qword_1EA0E0018 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t CalculateExpression.Base.rawValue.getter()
{
  return qword_1BDDB50D8[*v0];
}

uint64_t sub_1BDD3B0A8()
{
  return sub_1BDDB0578();
}

uint64_t sub_1BDD3B0F8()
{
  return sub_1BDDB0568();
}

uint64_t sub_1BDD3B130()
{
  return sub_1BDDB0578();
}

Calculate::CalculateExpression::Base_optional sub_1BDD3B17C(Swift::Int *a1)
{
  return CalculateExpression.Base.init(rawValue:)(*a1);
}

uint64_t sub_1BDD3B184@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  swift_beginAccess();
  uint64_t v5 = sub_1BDDAF9F8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1BDD3B280(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_1BDDAF9F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  uint64_t v9 = *a2;
  swift_getKeyPath();
  uint64_t v12 = v9;
  uint64_t v13 = v8;
  uint64_t v14 = v9;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA48();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1BDD3B408(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  swift_beginAccess();
  uint64_t v4 = sub_1BDDAF9F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(v3, a2, v4);
  return swift_endAccess();
}

uint64_t CalculateExpression.hash(into:)()
{
  uint64_t v1 = sub_1BDDAF9F8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1, v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v9 = v0;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v6 = v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v6, v1);
  sub_1BDD1E58C((unint64_t *)&qword_1EA0DEFD0);
  sub_1BDDAFCF8();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

uint64_t CalculateExpression.debugDescription.getter()
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v1 = *(uint64_t (**)(uint64_t))(*(void *)sub_1BDD5018C() + 264);
  uint64_t v2 = swift_retain();
  unint64_t v3 = v1(v2);
  swift_release();
  swift_retain();
  sub_1BDD504B0(v3, v0, (uint64_t)&v7, (unint64_t)&v6);
  swift_bridgeObjectRelease();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA268F0);
  sub_1BDD19AC4(&qword_1EBA268F8, &qword_1EBA268F0);
  uint64_t v4 = sub_1BDDAFD18();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t CalculateExpression.plain.getter()
{
  sub_1BDD5018C();
  return swift_retain();
}

uint64_t CalculateExpression.document.getter()
{
  return sub_1BDCE04B4();
}

uint64_t sub_1BDD3B7AC(uint64_t a1, void *a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_1BDD198E8((_OWORD *)a1, v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_1BDD4EC50(v7, a2, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v6;

    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BDCE43CC(a1, &qword_1EBA269F8);
    sub_1BDD4E074((uint64_t)a2, v7);

    return sub_1BDCE43CC((uint64_t)v7, &qword_1EBA269F8);
  }
}

void *sub_1BDD3B868()
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalResult);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

id sub_1BDD3B930@<X0>(uint64_t *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v4 = (void **)(v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalResult);
  swift_beginAccess();
  uint64_t v5 = *v4;
  *a2 = *v4;
  return v5;
}

void sub_1BDD3BA08(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  id v2 = v1;
  sub_1BDDAFA48();
  swift_release();
}

void sub_1BDD3BAE4(uint64_t a1, void *a2)
{
  uint64_t v3 = (void **)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalResult);
  swift_beginAccess();
  uint64_t v4 = *v3;
  unint64_t *v3 = a2;
  id v5 = a2;
}

uint64_t CalculateExpression.isEvaluating.getter()
{
  return sub_1BDD4B084((uint64_t)&unk_1BDDB4538, &OBJC_IVAR____TtC9Calculate19CalculateExpression__isEvaluating);
}

uint64_t sub_1BDD3BB58@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BDD4B234(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression__isEvaluating, a2);
}

uint64_t sub_1BDD3BB6C()
{
  return swift_release();
}

uint64_t sub_1BDD3BC3C()
{
  return swift_release();
}

id CalculateExpression.result.getter()
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation) == 1) {
    sub_1BDD3BE54();
  }
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  uint64_t v1 = (id *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalResult);
  swift_beginAccess();
  id result = *v1;
  if (*v1) {
    return objc_msgSend(result, sel_ignoringNaN);
  }
  return result;
}

uint64_t CalculateExpression.needsEvaluation.getter()
{
  return sub_1BDCF015C((uint64_t)&unk_1BDDB4560, &OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation);
}

void sub_1BDD3BE54()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  *(void *)&long long v42 = v0;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong
    || (char v3 = (*(uint64_t (**)(uint64_t))(*(void *)Strong + 216))(Strong), swift_release(), (v3 & 1) != 0))
  {
    swift_getKeyPath();
    *(void *)&long long v42 = v0;
    sub_1BDDAFA58();
    swift_release();
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation) == 1)
    {
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x1F4188790](KeyPath, v5);
      sub_1BDDAFA48();
      swift_release();
      uint64_t v6 = sub_1BDD3C8D4();
      uint64_t v8 = v7;
      swift_getKeyPath();
      *(void *)&long long v42 = v0;
      sub_1BDDAFA58();
      swift_release();
      uint64_t v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__options);
      swift_beginAccess();
      uint64_t v10 = *v9;
      swift_getKeyPath();
      *(void *)&long long v42 = v1;
      swift_bridgeObjectRetain();
      sub_1BDDAFA58();
      swift_release();
      uint64_t v11 = swift_weakLoadStrong();
      uint64_t v40 = v6;
      if (v11)
      {
        uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 168))(v11);
        uint64_t v10 = sub_1BDD3DA44(v10, v12);
        swift_release();
      }
      id v13 = objc_allocWithZone(NSNumber);
      uint64_t v14 = @"CalculateKeyForceResult";
      id v15 = objc_msgSend(v13, sel_initWithBool_, 1);
      uint64_t v16 = sub_1BDCE6874(0, (unint64_t *)&qword_1EBA26990);
      uint64_t v43 = v16;
      *(void *)&long long v42 = v15;
      sub_1BDD198E8(&v42, v41);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1BDD4EC50(v41, v14, isUniquelyReferenced_nonNull_native);

      swift_bridgeObjectRelease();
      uint64_t v18 = @"CalculateKeyVariables";
      uint64_t v19 = sub_1BDCE6964();
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA268E0);
      *(void *)&long long v42 = v19;
      sub_1BDD198E8(&v42, v41);
      char v20 = swift_isUniquelyReferenced_nonNull_native();
      sub_1BDD4EC50(v41, v18, v20);

      swift_bridgeObjectRelease();
      if (!*(void *)(v10 + 16)
        || (swift_bridgeObjectRetain(),
            uint64_t v21 = @"CalculateKeyAllowEqualSign",
            sub_1BDD4D9C0((uint64_t)v21),
            char v23 = v22,
            swift_bridgeObjectRelease(),
            v21,
            (v23 & 1) == 0))
      {
        uint64_t v43 = MEMORY[0x1E4FBB390];
        LOBYTE(v42) = 1;
        sub_1BDD198E8(&v42, v41);
        unint64_t v24 = @"CalculateKeyAllowEqualSign";
        char v25 = swift_isUniquelyReferenced_nonNull_native();
        sub_1BDD4EC50(v41, v24, v25);

        swift_bridgeObjectRelease();
      }
      BOOL v26 = *(void (**)(uint64_t))(*(void *)sub_1BDD5018C() + 448);
      uint64_t v27 = swift_retain();
      v26(v27);
      uint64_t v29 = v28;
      swift_release();
      swift_bridgeObjectRelease();
      if (v29)
      {
        id v30 = objc_allocWithZone(NSNumber);
        uint64_t v31 = @"CalculateKeyConvertTrivial";
        id v32 = objc_msgSend(v30, sel_initWithBool_, 0);
        uint64_t v43 = v16;
        *(void *)&long long v42 = v32;
        sub_1BDD198E8(&v42, v41);
        char v33 = swift_isUniquelyReferenced_nonNull_native();
        sub_1BDD4EC50(v41, v31, v33);

        swift_bridgeObjectRelease();
      }
      char v34 = (id *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression_internalRequest);
      swift_beginAccess();
      if (*v34) {
        objc_msgSend(*v34, sel_cancel);
      }
      uint64_t v35 = swift_getKeyPath();
      MEMORY[0x1F4188790](v35, v36);
      *(void *)&v41[0] = v1;
      sub_1BDDAFA48();
      swift_release();
      uint64_t v37 = (unsigned char *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
      swift_beginAccess();
      *uint64_t v37 = 0;
      swift_retain();
      id v38 = evaluate(_:options:resultHandler:)(v40, v8, v10, (uint64_t)sub_1BDD50C34, v1);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      id v39 = *v34;
      *char v34 = v38;
    }
  }
}

void *sub_1BDD3C4D0()
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalError);
  swift_beginAccess();
  id v2 = *v1;
  id v3 = v2;
  return v2;
}

id sub_1BDD3C59C@<X0>(uint64_t *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v4 = (void **)(v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalError);
  swift_beginAccess();
  uint64_t v5 = *v4;
  *a2 = *v4;
  return v5;
}

uint64_t sub_1BDD3C668(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  id v2 = v1;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA48();

  return swift_release();
}

void sub_1BDD3C744(uint64_t a1, void *a2)
{
  uint64_t v3 = (void **)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalError);
  swift_beginAccess();
  uint64_t v4 = *v3;
  unint64_t *v3 = a2;
  id v5 = a2;
}

void *CalculateExpression.error.getter()
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation) == 1) {
    sub_1BDD3BE54();
  }
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalError);
  swift_beginAccess();
  id v2 = *v1;
  id v3 = v2;
  return v2;
}

uint64_t sub_1BDD3C8D4()
{
  uint64_t v0 = sub_1BDCE7050();
  swift_bridgeObjectRetain();
  uint64_t v1 = *(void (**)(uint64_t))(*(void *)sub_1BDD5018C() + 448);
  uint64_t v2 = swift_retain();
  v1(v2);
  uint64_t v4 = v3;
  swift_release();
  swift_bridgeObjectRelease();
  if (!v4) {
    return v0;
  }
  sub_1BDCEB640();
  if (sub_1BDDB0228())
  {
    uint64_t v5 = sub_1BDDB01F8();
    swift_bridgeObjectRelease();
    if (*(void *)(v5 + 16) >= 2uLL) {
      goto LABEL_7;
    }
    __break(1u);
  }
  if ((sub_1BDDB0228() & 1) == 0) {
    return v0;
  }
  uint64_t v6 = sub_1BDDB01F8();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16) >= 2uLL)
  {
LABEL_7:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return sub_1BDDAFEF8();
  }
  __break(1u);
  return result;
}

uint64_t CalculateExpression.declaredSymbol.getter()
{
  uint64_t v0 = *(uint64_t (**)(uint64_t))(*(void *)sub_1BDD5018C() + 448);
  uint64_t v1 = swift_retain();
  uint64_t v2 = v0(v1);
  swift_release();
  return v2;
}

uint64_t CalculateExpression.graphNeedsEvaluation.getter()
{
  return sub_1BDCF015C((uint64_t)&unk_1BDDB45D8, &OBJC_IVAR____TtC9Calculate19CalculateExpression__graphNeedsEvaluation);
}

uint64_t sub_1BDD3CB48@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BDD42030(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression__graphNeedsEvaluation, a2);
}

uint64_t sub_1BDD3CB5C()
{
  return swift_release();
}

void *sub_1BDD3CC2C()
{
  return sub_1BDD468E8((uint64_t)&unk_1BDDB4FF8, &OBJC_IVAR____TtC9Calculate19CalculateExpression___graphableResult);
}

id sub_1BDD3CC40@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1BDD46B20(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___graphableResult, a2);
}

void sub_1BDD3CC54(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  id v2 = v1;
  sub_1BDDAFA48();
  swift_release();
}

uint64_t CalculateExpression.graphableVariable.getter()
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__graphableVariable);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

double (*CalculateExpression.graphableFunction.getter())()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  uint64_t v11 = v0;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v2 = v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__graphableVariable;
  swift_beginAccess();
  if (*(void *)(v2 + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (void *)sub_1BDD50C80();
    if (v3)
    {
      id v4 = v3;
      uint64_t v5 = (void *)sub_1BDDAFD38();
      swift_bridgeObjectRelease();
      id v6 = objc_msgSend(v4, sel_graphableFunctionFor_, v5);

      uint64_t v7 = sub_1BDD524F4;
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
  }
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___updateGraphable) == 1) {
    sub_1BDD3F748();
  }
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___isGraphable) != 1) {
    return sub_1BDD3D194;
  }
  uint64_t v8 = (void *)sub_1BDD50C80();
  if (!v8) {
    return sub_1BDD3D194;
  }
  id v9 = objc_msgSend(v8, sel_graphableFunction, v1, v11);
  uint64_t v7 = sub_1BDD51558;
  if (!v9) {
    return sub_1BDD3D194;
  }
  id v6 = v9;
LABEL_11:
  *(void *)(swift_allocObject() + 16) = v6;
  return (double (*)())v7;
}

uint64_t CalculateExpression.isGraphable.getter()
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___updateGraphable) == 1) {
    sub_1BDD3F748();
  }
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___isGraphable);
}

double sub_1BDD3D194()
{
  return NAN;
}

uint64_t sub_1BDD3D1A0()
{
  if (qword_1EBA29318 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBA29310;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDDB4460;
  swift_bridgeObjectRetain();
  *(void *)(inited + 32) = *sub_1BDD21D80();
  swift_retain();
  *(void *)(inited + 40) = *sub_1BDD21EDC();
  swift_retain();
  *(void *)(inited + 48) = *sub_1BDD21F88();
  swift_retain();
  *(void *)(inited + 56) = *sub_1BDD22038();
  swift_retain();
  *(void *)(inited + 64) = *sub_1BDD220E8();
  swift_retain();
  *(void *)(inited + 72) = *sub_1BDD22728();
  swift_retain();
  *(void *)(inited + 80) = *sub_1BDD227CC();
  swift_retain();
  *(void *)(inited + 88) = *sub_1BDD22198();
  swift_retain();
  *(void *)(inited + 96) = *sub_1BDD22220();
  swift_retain();
  *(void *)(inited + 104) = *sub_1BDD222A8();
  swift_retain();
  *(void *)(inited + 112) = *sub_1BDD22330();
  swift_retain();
  *(void *)(inited + 120) = *sub_1BDD223B8();
  swift_retain();
  *(void *)(inited + 128) = *sub_1BDD22440();
  swift_retain();
  *(void *)(inited + 136) = *sub_1BDD2252C();
  swift_retain();
  *(void *)(inited + 144) = *sub_1BDD225D8();
  swift_retain();
  *(void *)(inited + 152) = *sub_1BDD22684();
  sub_1BDDAFFD8();
  swift_retain();
  unint64_t v2 = sub_1BDCF089C(inited, v0);
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EA0E0030 = v2;
  return result;
}

uint64_t sub_1BDD3D364()
{
  if (qword_1EA0E0028 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EA0E0030;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDDB3760;
  swift_bridgeObjectRetain();
  *(void *)(inited + 32) = *sub_1BDCFFB30();
  swift_retain();
  *(void *)(inited + 40) = *sub_1BDCFFAA8();
  sub_1BDDAFFD8();
  swift_retain();
  unint64_t v2 = sub_1BDCF089C(inited, v0);
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EA0E0040 = v2;
  return result;
}

uint64_t sub_1BDD3D448()
{
  if (qword_1EA0E0038 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EA0E0040;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDDB4470;
  swift_bridgeObjectRetain();
  *(void *)(inited + 32) = *sub_1BDD21978();
  swift_retain();
  *(void *)(inited + 40) = *sub_1BDD21A24();
  swift_retain();
  *(void *)(inited + 48) = *sub_1BDD21AD0();
  swift_retain();
  *(void *)(inited + 56) = *sub_1BDD21B7C();
  swift_retain();
  *(void *)(inited + 64) = *sub_1BDD21C28();
  swift_retain();
  *(void *)(inited + 72) = *sub_1BDD21CD4();
  swift_retain();
  *(void *)(inited + 80) = *sub_1BDD21E2C();
  sub_1BDDAFFD8();
  swift_retain();
  unint64_t v2 = sub_1BDCF089C(inited, v0);
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EA0E0050 = v2;
  return result;
}

uint64_t sub_1BDD3D57C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDDB4480;
  *(void *)(inited + 32) = *sub_1BDD22934();
  swift_retain();
  *(void *)(inited + 40) = *sub_1BDD229CC();
  swift_retain();
  *(void *)(inited + 48) = *sub_1BDD22A18();
  swift_retain();
  *(void *)(inited + 56) = *sub_1BDD22980();
  swift_retain();
  *(void *)(inited + 64) = *sub_1BDD22A98();
  swift_retain();
  *(void *)(inited + 72) = *sub_1BDD22B4C();
  sub_1BDDAFFD8();
  if (inited >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    unint64_t v2 = MEMORY[0x1E4FBC870];
    goto LABEL_6;
  }
  uint64_t v1 = *(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  if (!v1) {
    goto LABEL_5;
  }
LABEL_3:
  unint64_t v2 = sub_1BDCE0EA8(inited);
LABEL_6:
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EA0E0060 = v2;
  return result;
}

uint64_t sub_1BDD3D6B0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1BDD4B5A8(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression__allowedOperations, a2);
}

uint64_t sub_1BDD3D6C4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDD3D7A4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BDD42030(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation, a2);
}

uint64_t sub_1BDD3D7B8()
{
  return swift_release();
}

Swift::Void __swiftcall CalculateExpression.setNeedsEvaluation(rebuild:)(Swift::Bool rebuild)
{
  if (rebuild)
  {
    unint64_t v2 = (unsigned char *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
    swift_beginAccess();
    unsigned char *v2 = 1;
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x1F4188790](KeyPath, v4);
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA48();
  swift_release();
  uint64_t v5 = swift_getKeyPath();
  MEMORY[0x1F4188790](v5, v6);
  sub_1BDDAFA48();
  swift_release();
}

uint64_t CalculateExpression.options.getter()
{
  return sub_1BDD3F168();
}

uint64_t sub_1BDD3DA44(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_1BDD4F164(a1, (uint64_t)sub_1BDD17348, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1BDD3DAD0()
{
  return sub_1BDD3DBD8((uint64_t)&unk_1BDDB46F0, &OBJC_IVAR____TtC9Calculate19CalculateExpression___documentReferenceCount);
}

uint64_t sub_1BDD3DAE4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1BDD3DCA4(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___documentReferenceCount, a2);
}

uint64_t sub_1BDD3DAF8()
{
  return swift_release();
}

uint64_t sub_1BDD3DBC4()
{
  return sub_1BDD3DBD8((uint64_t)&unk_1BDDB4718, &OBJC_IVAR____TtC9Calculate19CalculateExpression___graphReferenceCount);
}

uint64_t sub_1BDD3DBD8(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v4 = v2 + *a2;
  swift_beginAccess();
  return *(void *)v4;
}

uint64_t sub_1BDD3DC90@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1BDD3DCA4(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___graphReferenceCount, a2);
}

uint64_t sub_1BDD3DCA4@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v6 = (void *)(v5 + *a2);
  uint64_t result = swift_beginAccess();
  *a3 = *v6;
  return result;
}

uint64_t sub_1BDD3DD70()
{
  return swift_release();
}

uint64_t CalculateExpression.referenceCount.getter()
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___documentReferenceCount);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  uint64_t v3 = (void *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___graphReferenceCount);
  swift_beginAccess();
  uint64_t result = v2 + *v3;
  if (__OFADD__(v2, *v3)) {
    __break(1u);
  }
  return result;
}

void sub_1BDD3DF64(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF250);
    uint64_t v2 = (void *)sub_1BDDB0488();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v33 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v32 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v7 = (unint64_t *)&unk_1EA0DF248;
  uint64_t v8 = off_1E6364F78;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v16 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v16 >= v32) {
    goto LABEL_32;
  }
  unint64_t v17 = *(void *)(v33 + 8 * v16);
  int64_t v18 = i + 1;
  if (!v17)
  {
    int64_t v18 = i + 2;
    if (i + 2 >= v32) {
      goto LABEL_32;
    }
    unint64_t v17 = *(void *)(v33 + 8 * v18);
    if (!v17)
    {
      int64_t v18 = i + 3;
      if (i + 3 >= v32) {
        goto LABEL_32;
      }
      unint64_t v17 = *(void *)(v33 + 8 * v18);
      if (!v17)
      {
        int64_t v18 = i + 4;
        if (i + 4 >= v32) {
          goto LABEL_32;
        }
        unint64_t v17 = *(void *)(v33 + 8 * v18);
        if (!v17)
        {
          int64_t v19 = i + 5;
          if (i + 5 < v32)
          {
            unint64_t v17 = *(void *)(v33 + 8 * v19);
            if (v17)
            {
              int64_t v18 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v18 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_36;
              }
              if (v18 >= v32) {
                break;
              }
              unint64_t v17 = *(void *)(v33 + 8 * v18);
              ++v19;
              if (v17) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_1BDCE68B0();
          return;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v17 - 1) & v17;
  unint64_t v15 = __clz(__rbit64(v17)) + (v18 << 6);
  for (i = v18; ; unint64_t v15 = __clz(__rbit64(v5)) | (i << 6))
  {
    char v20 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v15);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    char v23 = *(void **)(*(void *)(v1 + 56) + 8 * v15);
    sub_1BDCE6874(0, v7);
    swift_bridgeObjectRetain();
    id v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF1E8);
    swift_dynamicCast();
    unint64_t v25 = sub_1BDD13EB4(v22, v21);
    unint64_t v26 = v25;
    if (v27)
    {
      uint64_t v9 = v1;
      int64_t v10 = i;
      uint64_t v11 = v8;
      uint64_t v12 = v7;
      id v13 = (uint64_t *)(v2[6] + 16 * v25);
      swift_bridgeObjectRelease();
      *id v13 = v22;
      v13[1] = v21;
      uint64_t v14 = v2[7];

      *(void *)(v14 + 8 * v26) = v35;
      uint64_t v7 = v12;
      uint64_t v8 = v11;
      int64_t i = v10;
      uint64_t v1 = v9;
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v25;
    uint64_t v28 = (uint64_t *)(v2[6] + 16 * v25);
    *uint64_t v28 = v22;
    v28[1] = v21;
    *(void *)(v2[7] + 8 * v25) = v35;
    uint64_t v29 = v2[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (v30) {
      goto LABEL_34;
    }
    v2[2] = v31;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t sub_1BDD3E298(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26900);
  MEMORY[0x1F4188790](v6 - 8, v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = (void *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a2;
  v10[4] = a1;
  uint64_t v11 = self;
  id v12 = a1;
  id v13 = a2;
  swift_retain();
  id v14 = objc_msgSend(v11, sel_currentThread);
  unsigned int v15 = objc_msgSend(v14, sel_isMainThread);

  if (v15)
  {
    uint64_t KeyPath = swift_getKeyPath();
    id v30 = v12;
    MEMORY[0x1F4188790](KeyPath, v17);
    *(&v29 - 2) = a3;
    *(&v29 - 1) = (uint64_t)a2;
    uint64_t v31 = a3;
    id v18 = a2;
    sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
    sub_1BDDAFA48();

    swift_release();
    uint64_t v19 = swift_getKeyPath();
    MEMORY[0x1F4188790](v19, v20);
    *(&v29 - 2) = a3;
    *(&v29 - 1) = (uint64_t)a1;
    uint64_t v31 = a3;
    id v21 = v30;
    sub_1BDDAFA48();
    swift_release();

    uint64_t v22 = swift_getKeyPath();
    MEMORY[0x1F4188790](v22, v23);
    *(&v29 - 2) = a3;
    *((unsigned char *)&v29 - 8) = 0;
    uint64_t v31 = a3;
    sub_1BDDAFA48();
  }
  else
  {
    uint64_t v25 = sub_1BDDB00C8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v9, 1, 1, v25);
    sub_1BDDB00A8();
    swift_retain();
    uint64_t v26 = sub_1BDDB0098();
    char v27 = (void *)swift_allocObject();
    uint64_t v28 = MEMORY[0x1E4FBCFD8];
    v27[2] = v26;
    v27[3] = v28;
    v27[4] = sub_1BDD52220;
    v27[5] = v10;
    sub_1BDD27468((uint64_t)v9, (uint64_t)&unk_1EA0DF268, (uint64_t)v27);
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1BDD3E648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  sub_1BDDB00A8();
  v5[4] = sub_1BDDB0098();
  uint64_t v7 = sub_1BDDB0088();
  return MEMORY[0x1F4188298](sub_1BDD3E6E0, v7, v6);
}

uint64_t sub_1BDD3E6E0()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 16);
  uint64_t v2 = swift_release();
  v1(v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t CalculateExpression.foundSymbols.getter()
{
  uint64_t v0 = *(uint64_t (**)(uint64_t))(*(void *)sub_1BDD5018C() + 456);
  uint64_t v1 = swift_retain();
  uint64_t v2 = v0(v1);
  swift_release();
  return v2;
}

uint64_t sub_1BDD3E7B8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BDD3EA08(a1);
}

uint64_t sub_1BDD3E7CC()
{
  return swift_release();
}

uint64_t sub_1BDD3E8AC()
{
  return swift_release();
}

uint64_t sub_1BDD3E980()
{
  return swift_release();
}

uint64_t sub_1BDD3E9F4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BDD3EA08(a1);
}

uint64_t sub_1BDD3EA08@<X0>(uint64_t *a1@<X8>)
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  *a1 = result;
  return result;
}

uint64_t sub_1BDD3EAD8()
{
  return swift_release();
}

uint64_t CalculateExpression.parent.setter()
{
  return swift_release();
}

void (*CalculateExpression.parent.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC9Calculate19CalculateExpression___observationRegistrar;
  void *v3 = v1;
  v3[6] = sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  void *v3 = v1;
  swift_getKeyPath();
  sub_1BDDAFA78();
  swift_release();
  v3[7] = OBJC_IVAR____TtC9Calculate19CalculateExpression__parent;
  swift_beginAccess();
  v3[3] = swift_weakLoadStrong();
  return sub_1BDD3EDCC;
}

void sub_1BDD3EDCC(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_weakAssign();
  uint64_t v4 = v3[4];
  if (a2)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_release();
  }
  void *v3 = v4;
  swift_getKeyPath();
  sub_1BDDAFA68();
  swift_release();
  free(v3);
}

uint64_t sub_1BDD3EE90()
{
  unint64_t v0 = sub_1BDCE1914(MEMORY[0x1E4FBC860]);
  char v8 = 1;
  uint64_t v1 = sub_1BDDAF9F8();
  MEMORY[0x1F4188790](v1 - 8, v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDDAF9E8();
  type metadata accessor for CalculateExpression();
  uint64_t v5 = swift_allocObject();
  uint64_t result = CalculateExpression.init(_:options:base:id:)(48, 0xE100000000000000, v0, &v8, (uint64_t)v4);
  qword_1EA0E0950 = v5;
  return result;
}

uint64_t sub_1BDD3EF5C()
{
  return sub_1BDDAF9E8();
}

uint64_t CalculateExpression.__allocating_init(_:options:base:id:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  CalculateExpression.init(_:options:base:id:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t sub_1BDD3EFE4()
{
  return sub_1BDD3F168();
}

uint64_t sub_1BDD3EFF8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1BDD4106C(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___variableResults, a2);
}

uint64_t sub_1BDD3F00C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDD3F0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___variableResults);
  swift_beginAccess();
  void *v3 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDD3F154()
{
  return sub_1BDD3F168();
}

uint64_t sub_1BDD3F168()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDD3F224@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1BDD4106C(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression__variables, a2);
}

uint64_t sub_1BDD3F238()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDD3F318(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__variables);
  swift_beginAccess();
  void *v3 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BDCE1A44(MEMORY[0x1E4FBC860]);
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA48();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_1BDCE1C78();
}

uint64_t sub_1BDD3F450()
{
  return sub_1BDCF015C((uint64_t)&unk_1BDDB4678, &OBJC_IVAR____TtC9Calculate19CalculateExpression___updateGraphable);
}

uint64_t sub_1BDD3F464@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BDD42030(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___updateGraphable, a2);
}

uint64_t sub_1BDD3F478()
{
  return swift_release();
}

uint64_t sub_1BDD3F548()
{
  return sub_1BDCF015C((uint64_t)&unk_1BDDB46A0, &OBJC_IVAR____TtC9Calculate19CalculateExpression___isGraphable);
}

uint64_t sub_1BDD3F55C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BDD42030(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___isGraphable, a2);
}

uint64_t sub_1BDD3F570()
{
  return swift_release();
}

uint64_t sub_1BDD3F640()
{
  return sub_1BDCF11F0();
}

uint64_t sub_1BDD3F654@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1BDD4B5A8(a1, OBJC_IVAR____TtC9Calculate19CalculateExpression___graphableVariables, a2);
}

uint64_t sub_1BDD3F668()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDD3F748()
{
  swift_getKeyPath();
  uint64_t v1 = sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  uint64_t result = swift_release();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___updateGraphable) == 1)
  {
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x1F4188790](KeyPath, v4);
    sub_1BDDAFA48();
    swift_release();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(*(void *)sub_1BDD5018C() + 400);
    uint64_t v6 = swift_retain();
    char v7 = v5(v6);
    swift_release();
    uint64_t v48 = v1;
    if (v7)
    {
      char v8 = *(uint64_t (**)(uint64_t))(*(void *)sub_1BDD5018C() + 264);
      uint64_t v9 = swift_retain();
      unint64_t v10 = v8(v9);
      swift_release();
      if (v10 >> 62) {
        goto LABEL_41;
      }
      uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      for (; v11; uint64_t v11 = sub_1BDDB0448())
      {
        if ((v10 & 0xC000000000000001) != 0)
        {
          uint64_t v13 = MEMORY[0x1C18862A0](0, v10);
          uint64_t v12 = v13;
        }
        else
        {
          uint64_t v12 = *(void *)(v10 + 32);
          uint64_t v13 = swift_retain();
        }
        uint64_t v14 = *(void *)((*(uint64_t (**)(uint64_t))(*(void *)v12 + 232))(v13) + 16);
        swift_bridgeObjectRelease();
        if (v14) {
          break;
        }
        swift_release();
        if (v11 == 1) {
          break;
        }
        uint64_t v37 = 5;
        while (1)
        {
          uint64_t v38 = v37 - 4;
          if ((v10 & 0xC000000000000001) == 0) {
            break;
          }
          uint64_t v39 = MEMORY[0x1C18862A0](v37 - 4, v10);
          BOOL v40 = __OFADD__(v38, 1);
          uint64_t v41 = v37 - 3;
          if (v40) {
            goto LABEL_40;
          }
LABEL_33:
          uint64_t v42 = *(void *)((*(uint64_t (**)(void))(*(void *)v39 + 232))() + 16);
          swift_bridgeObjectRelease();
          if (!v42)
          {
            swift_release();
            ++v37;
            if (v41 != v11) {
              continue;
            }
          }
          goto LABEL_9;
        }
        uint64_t v39 = *(void *)(v10 + 8 * v37);
        swift_retain();
        BOOL v40 = __OFADD__(v38, 1);
        uint64_t v41 = v37 - 3;
        if (!v40) {
          goto LABEL_33;
        }
LABEL_40:
        __break(1u);
LABEL_41:
        swift_bridgeObjectRetain();
      }
LABEL_9:
      swift_bridgeObjectRelease_n();
      swift_release();
    }
    uint64_t v15 = swift_getKeyPath();
    MEMORY[0x1F4188790](v15, v16);
    sub_1BDDAFA48();
    uint64_t v47 = 0;
    swift_release();
    uint64_t v17 = *(uint64_t (**)(uint64_t))(*(void *)sub_1BDD5018C() + 264);
    uint64_t v18 = swift_retain();
    unint64_t v19 = v17(v18);
    swift_release();
    if (v19 >> 62) {
      goto LABEL_37;
    }
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v20)
    {
LABEL_12:
      uint64_t v21 = 4;
      do
      {
        uint64_t v22 = v21 - 4;
        if ((v19 & 0xC000000000000001) != 0)
        {
          uint64_t v23 = MEMORY[0x1C18862A0](v21 - 4, v19);
          uint64_t v25 = v23;
          uint64_t v26 = v21 - 3;
          if (__OFADD__(v22, 1)) {
            goto LABEL_36;
          }
        }
        else
        {
          uint64_t v25 = *(void *)(v19 + 8 * v21);
          uint64_t v23 = swift_retain();
          uint64_t v26 = v21 - 3;
          if (__OFADD__(v22, 1))
          {
LABEL_36:
            __break(1u);
LABEL_37:
            swift_bridgeObjectRetain();
            uint64_t v20 = sub_1BDDB0448();
            if (!v20) {
              break;
            }
            goto LABEL_12;
          }
        }
        char v27 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v25 + 232);
        uint64_t v28 = *(void *)(v27(v23, v24) + 16);
        uint64_t v29 = swift_bridgeObjectRelease();
        if (v28)
        {
          uint64_t v30 = *(void *)(((uint64_t (*)(uint64_t))v27)(v29) + 16);
          uint64_t v31 = swift_bridgeObjectRelease();
          if (v30 != 1) {
            goto LABEL_24;
          }
          uint64_t v32 = ((uint64_t (*)(uint64_t))v27)(v31);
          if (!*(void *)(v32 + 16))
          {
            swift_release();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            goto LABEL_26;
          }
          id v33 = *(id *)(v32 + 32);
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF028);
          sub_1BDCE6874(0, &qword_1EA0DF230);
          if ((swift_dynamicCast() & 1) == 0
            || (id v34 = objc_msgSend(v49, sel_code, v47, v48), v49, v34 != (id)-1003))
          {
LABEL_24:
            swift_release();
            swift_bridgeObjectRelease_n();
LABEL_26:
            uint64_t v35 = swift_getKeyPath();
            MEMORY[0x1F4188790](v35, v36);
            sub_1BDDAFA48();
            return swift_release();
          }
        }
        swift_release();
        ++v21;
      }
      while (v26 != v20);
    }
    swift_bridgeObjectRelease_n();
    uint64_t v43 = *(void (**)(uint64_t))(*(void *)sub_1BDD5018C() + 424);
    uint64_t v44 = swift_retain();
    v43(v44);
    swift_release();
    uint64_t v45 = swift_getKeyPath();
    MEMORY[0x1F4188790](v45, v46);
    sub_1BDDAFA48();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BDD3FEA4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_1BDDAFEE8();
  }
  else {
    return 0;
  }
}

uint64_t sub_1BDD3FEEC()
{
  return swift_release();
}

uint64_t (*sub_1BDD40098(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BDD400F8;
}

uint64_t sub_1BDD400F8(uint64_t a1, char a2)
{
  return sub_1BDD479C4(a1, a2, (uint64_t (*)(uint64_t))sub_1BDD3FEEC);
}

uint64_t sub_1BDD40110@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v4 = (void *)(v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression__graphableVariable);
  swift_beginAccess();
  uint64_t v5 = v4[1];
  *a2 = *v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDD401DC()
{
  return swift_bridgeObjectRelease();
}

uint64_t CalculateExpression.graphableVariable.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDD4039C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__graphableVariable);
  swift_beginAccess();
  void *v5 = a2;
  v5[1] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_1BDD3FEEC();
}

void (*CalculateExpression.graphableVariable.modify(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC9Calculate19CalculateExpression___observationRegistrar;
  void *v3 = v1;
  v3[6] = sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  void *v3 = v1;
  swift_getKeyPath();
  sub_1BDDAFA78();
  swift_release();
  v3[7] = sub_1BDD40098((uint64_t)v3);
  return sub_1BDD40538;
}

void sub_1BDD40538(void *a1)
{
}

uint64_t CalculateExpression.graphableVariables.getter()
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___updateGraphable) == 1) {
    sub_1BDD3F748();
  }
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  return swift_bridgeObjectRetain();
}

uint64_t CalculateExpression.isLikelyMath.getter()
{
  uint64_t v0 = *(uint64_t (**)(uint64_t))(*(void *)sub_1BDD5018C() + 488);
  uint64_t v1 = swift_retain();
  LOBYTE(v0) = v0(v1);
  swift_release();
  return v0 & 1;
}

uint64_t sub_1BDD406B8()
{
  return sub_1BDCF015C((uint64_t)"ع2,", &OBJC_IVAR____TtC9Calculate19CalculateExpression___updateExpression);
}

uint64_t sub_1BDD406CC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BDD42030(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___updateExpression, a2);
}

uint64_t sub_1BDD406E0()
{
  return swift_release();
}

uint64_t sub_1BDD407B0()
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___expression);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BDD4086C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression___expression + 8);
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression___expression);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDD40924()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDD40A08@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_1BDCE7050();
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDD40A48()
{
  return CalculateExpression.expression.setter();
}

uint64_t CalculateExpression.expression.setter()
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA48();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_1BDDAFA48();
  swift_release();
  sub_1BDCE1C78();
  swift_getKeyPath();
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA48();
  swift_release();
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
  swift_beginAccess();
  unsigned char *v1 = 1;
  swift_getKeyPath();
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t))(*(void *)result + 488))(result);
    return swift_release();
  }
  return result;
}

uint64_t (*CalculateExpression.expression.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[2] = v1;
  *a1 = sub_1BDCE7050();
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1BDD40E34;
}

uint64_t sub_1BDD40E34(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return CalculateExpression.expression.setter();
  }
  swift_bridgeObjectRetain();
  CalculateExpression.expression.setter();
  return swift_bridgeObjectRelease();
}

uint64_t CalculateExpression.copyableExpression.getter()
{
  uint64_t v0 = *(uint64_t (**)(uint64_t))(*(void *)sub_1BDD5018C() + 304);
  uint64_t v1 = swift_retain();
  uint64_t v2 = v0(v1);
  swift_release();
  return v2;
}

uint64_t sub_1BDD40F1C()
{
  return swift_release();
}

uint64_t sub_1BDD41058@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1BDD4106C(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression__options, a2);
}

uint64_t sub_1BDD4106C@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v6 = (void *)(v5 + *a2);
  swift_beginAccess();
  *a3 = *v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDD4113C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDD4121C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__options);
  swift_beginAccess();
  void *v3 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDD41284()
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__selectedRange;
  swift_beginAccess();
  return *(void *)v1;
}

__n128 sub_1BDD41348@<Q0>(uint64_t *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v4 = (__n128 *)(v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression__selectedRange);
  swift_beginAccess();
  unsigned __int8 v5 = v4[1].n128_u8[0];
  __n128 result = *v4;
  *a2 = *v4;
  a2[1].n128_u8[0] = v5;
  return result;
}

uint64_t sub_1BDD41418()
{
  return swift_release();
}

uint64_t sub_1BDD414F8()
{
  return sub_1BDCF015C((uint64_t)&unk_1BDDB4830, &OBJC_IVAR____TtC9Calculate19CalculateExpression___assumeDegrees);
}

uint64_t sub_1BDD4150C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BDD42030(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___assumeDegrees, a2);
}

uint64_t sub_1BDD41520()
{
  return swift_release();
}

uint64_t sub_1BDD415F0()
{
  return CalculateExpression.assumeDegrees.setter();
}

uint64_t CalculateExpression.assumeDegrees.setter()
{
  sub_1BDD40F1C();
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA48();
  swift_release();
  uint64_t v1 = sub_1BDCE6874(0, (unint64_t *)&qword_1EBA26990);
  swift_getKeyPath();
  uint64_t v2 = @"CalculateKeyAssumeDegrees";
  sub_1BDDAFA58();
  swift_release();
  v4[3] = v1;
  v4[0] = sub_1BDDB01C8();
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA78();
  swift_release();
  swift_beginAccess();
  sub_1BDD3B7AC((uint64_t)v4, v2);
  swift_endAccess();
  swift_getKeyPath();
  sub_1BDDAFA68();
  swift_release();
  swift_getKeyPath();
  v4[0] = v0;
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  v4[0] = v0;
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  v4[0] = v0;
  sub_1BDDAFA58();
  swift_release();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t))(*(void *)result + 488))(result);
    return swift_release();
  }
  return result;
}

uint64_t (*CalculateExpression.assumeDegrees.modify(uint64_t a1))()
{
  *(void *)(a1 + 8) = v1;
  swift_getKeyPath();
  *(void *)a1 = v1;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___assumeDegrees);
  return sub_1BDD41A44;
}

uint64_t sub_1BDD41A44()
{
  return CalculateExpression.assumeDegrees.setter();
}

uint64_t sub_1BDD41A6C()
{
  return sub_1BDCF015C((uint64_t)&unk_1BDDB4858, &OBJC_IVAR____TtC9Calculate19CalculateExpression___allowPartialExpressions);
}

uint64_t sub_1BDD41A80@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BDD42030(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___allowPartialExpressions, a2);
}

uint64_t sub_1BDD41A94()
{
  return swift_release();
}

uint64_t sub_1BDD41B64()
{
  return CalculateExpression.allowPartialExpressions.setter();
}

uint64_t CalculateExpression.allowPartialExpressions.setter()
{
  sub_1BDD40F1C();
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA48();
  swift_release();
  uint64_t v1 = sub_1BDCE6874(0, (unint64_t *)&qword_1EBA26990);
  swift_getKeyPath();
  uint64_t v2 = @"CalculateKeyAllowPartialExpressions";
  sub_1BDDAFA58();
  swift_release();
  v5[3] = v1;
  v5[0] = sub_1BDDB01C8();
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA78();
  swift_release();
  swift_beginAccess();
  sub_1BDD3B7AC((uint64_t)v5, v2);
  swift_endAccess();
  swift_getKeyPath();
  sub_1BDDAFA68();
  swift_release();
  uint64_t v3 = (unsigned char *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
  swift_beginAccess();
  unsigned char *v3 = 1;
  swift_getKeyPath();
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t))(*(void *)result + 488))(result);
    return swift_release();
  }
  return result;
}

uint64_t (*CalculateExpression.allowPartialExpressions.modify(uint64_t a1))()
{
  *(void *)(a1 + 8) = v1;
  swift_getKeyPath();
  *(void *)a1 = v1;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___allowPartialExpressions);
  return sub_1BDD41FE0;
}

uint64_t sub_1BDD41FE0()
{
  return CalculateExpression.allowPartialExpressions.setter();
}

uint64_t sub_1BDD42008()
{
  return sub_1BDCF015C((uint64_t)&unk_1BDDB4880, &OBJC_IVAR____TtC9Calculate19CalculateExpression___flexibleFractionDigits);
}

uint64_t sub_1BDD4201C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BDD42030(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___flexibleFractionDigits, a2);
}

uint64_t sub_1BDD42030@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, unsigned char *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  uint64_t result = swift_release();
  *a3 = *(unsigned char *)(v5 + *a2);
  return result;
}

uint64_t sub_1BDD420E4()
{
  return swift_release();
}

uint64_t sub_1BDD421B4()
{
  return CalculateExpression.flexibleFractionDigits.setter();
}

uint64_t CalculateExpression.flexibleFractionDigits.setter()
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA48();
  swift_release();
  uint64_t v0 = sub_1BDCE6874(0, (unint64_t *)&qword_1EBA26990);
  swift_getKeyPath();
  uint64_t v1 = @"CalculateKeyFlexibleFractionDigits";
  sub_1BDDAFA58();
  swift_release();
  v3[3] = v0;
  v3[0] = sub_1BDDB01C8();
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA78();
  swift_release();
  swift_beginAccess();
  sub_1BDD3B7AC((uint64_t)v3, v1);
  swift_endAccess();
  swift_getKeyPath();
  sub_1BDDAFA68();
  swift_release();
  return sub_1BDD42404();
}

uint64_t sub_1BDD42404()
{
  uint64_t v98 = *v0;
  swift_getKeyPath();
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___observationRegistrar;
  uint64_t v110 = v0;
  uint64_t v2 = sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  if (*(void *)((char *)v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___format) != 2)
  {
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x1F4188790](KeyPath, v33);
    uint64_t v110 = v0;
    sub_1BDDAFA48();
    return swift_release();
  }
  unint64_t v111 = MEMORY[0x1E4FBC860];
  unint64_t v112 = MEMORY[0x1E4FBC860];
  unint64_t v108 = (void *)sub_1BDD19B10(MEMORY[0x1E4FBC860]);
  uint64_t v3 = swift_getKeyPath();
  uint64_t v110 = v0;
  sub_1BDDAFA58();
  swift_release();
  unint64_t v99 = v0;
  uint64_t v4 = *(void *)((char *)v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__postfixStack);
  if ((unint64_t)v4 >> 62) {
    goto LABEL_80;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  unint64_t v6 = swift_bridgeObjectRetain();
LABEL_4:
  uint64_t v103 = v1;
  uint64_t v100 = v2;
  if (v5)
  {
    if (v5 >= 1)
    {
      uint64_t v7 = 0;
      unint64_t v104 = v4 & 0xC000000000000001;
      uint64_t v102 = v4;
      uint64_t v101 = v5;
      while (1)
      {
        if (v104)
        {
          uint64_t v2 = MEMORY[0x1C18862A0](v7, v4);
        }
        else
        {
          uint64_t v2 = *(void *)(v4 + 8 * v7 + 32);
          swift_retain();
        }
        uint64_t v9 = *(uint64_t (**)(void))(*(void *)sub_1BDCE25A0() + 392);
        swift_retain();
        unint64_t v10 = v9();
        swift_release();
        if (v10 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v31 = sub_1BDDB0448();
          swift_bridgeObjectRelease();
          if (!v31)
          {
LABEL_7:
            swift_bridgeObjectRelease();
            goto LABEL_8;
          }
        }
        else if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_7;
        }
        if ((v10 & 0xC000000000000001) != 0)
        {
          uint64_t v11 = MEMORY[0x1C18862A0](0, v10);
        }
        else
        {
          if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_77;
          }
          uint64_t v11 = *(void *)(v10 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        uint64_t v106 = v11;
        uint64_t v12 = v11 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_id;
        uint64_t v13 = sub_1BDDAF9F8();
        uint64_t v105 = v93;
        uint64_t v1 = *(char **)(v13 - 8);
        MEMORY[0x1F4188790](v13, v14);
        uint64_t v16 = (char *)v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v4 = *((void *)v1 + 2);
        ((void (*)(char *, uint64_t, uint64_t))v4)(v16, v12, v13);
        unint64_t v107 = v2;
        swift_retain();
        uint64_t v17 = v108;
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v110 = v17;
        uint64_t v2 = sub_1BDD1CE5C((uint64_t)v16);
        uint64_t v20 = v17[2];
        BOOL v21 = (v19 & 1) == 0;
        uint64_t v22 = v20 + v21;
        if (__OFADD__(v20, v21))
        {
          __break(1u);
LABEL_77:
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          if (v4 < 0) {
            uint64_t v3 = v4;
          }
          else {
            uint64_t v3 = v4 & 0xFFFFFFFFFFFFFF8;
          }
          swift_bridgeObjectRetain_n();
          uint64_t v5 = sub_1BDDB0448();
          unint64_t v6 = swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        char v23 = v19;
        if (v17[3] >= v22)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_1BDD1DA7C();
          }
        }
        else
        {
          sub_1BDD1D144(v22, isUniquelyReferenced_nonNull_native);
          unint64_t v24 = sub_1BDD1CE5C((uint64_t)v16);
          if ((v23 & 1) != (v25 & 1)) {
            goto LABEL_97;
          }
          uint64_t v2 = v24;
        }
        unint64_t v108 = v110;
        if (v23)
        {
          uint64_t v26 = v110[7];
          swift_release();
          *(void *)(v26 + 8 * v2) = v107;
        }
        else
        {
          v110[((unint64_t)v2 >> 6) + 8] |= 1 << v2;
          ((void (*)(uint64_t, char *, uint64_t))v4)(v108[6] + *((void *)v1 + 9) * v2, v16, v13);
          char v27 = v108;
          *(void *)(v108[7] + 8 * v2) = v107;
          uint64_t v28 = v27[2];
          BOOL v29 = __OFADD__(v28, 1);
          uint64_t v30 = v28 + 1;
          if (v29) {
            goto LABEL_79;
          }
          v27[2] = v30;
        }
        swift_bridgeObjectRelease();
        (*((void (**)(char *, uint64_t))v1 + 1))(v16, v13);
        swift_release();
        uint64_t v1 = v103;
        uint64_t v4 = v102;
        uint64_t v5 = v101;
LABEL_8:
        ++v7;
        char v8 = *(void (**)(void))(*(void *)sub_1BDCE25A0() + 352);
        swift_retain();
        v8(0);
        swift_release();
        swift_release();
        if (v5 == v7) {
          goto LABEL_32;
        }
      }
    }
    __break(1u);
    goto LABEL_92;
  }
LABEL_32:
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(*(void *)sub_1BDCE25A0() + 392);
  uint64_t v35 = swift_retain();
  uint64_t v36 = ((uint64_t (*)(uint64_t))v3)(v35);
  unint64_t v6 = swift_release();
  if ((unint64_t)v36 >> 62)
  {
    if (v36 < 0) {
      uint64_t v3 = v36;
    }
    else {
      uint64_t v3 = v36 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1BDDB0448();
    unint64_t v6 = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2)
  {
    if (v2 < 1)
    {
LABEL_92:
      __break(1u);
      goto LABEL_93;
    }
    uint64_t v97 = OBJC_IVAR____TtC9Calculate19CalculateExpression___engine;
    unint64_t v37 = v36 & 0xC000000000000001;
    char v96 = (char *)v99 + OBJC_IVAR____TtC9Calculate19CalculateExpression__base;
    swift_beginAccess();
    uint64_t v4 = 0;
    uint64_t v38 = 0;
    uint64_t v95 = @"CalculateKeyEngine";
    v93[1] = MEMORY[0x1E4FBC848] + 8;
    long long v94 = xmmword_1BDDB37C0;
    uint64_t v102 = v36;
    uint64_t v101 = v2;
    unint64_t v107 = v36 & 0xC000000000000001;
    while (1)
    {
      if (v37)
      {
        uint64_t v39 = MEMORY[0x1C18862A0](v4, v36);
      }
      else
      {
        uint64_t v39 = *(void *)(v36 + 8 * v4 + 32);
        swift_retain();
      }
      uint64_t v40 = swift_retain();
      MEMORY[0x1C1885EA0](v40);
      if (*(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1BDDB0008();
      }
      sub_1BDDB0048();
      sub_1BDDAFFD8();
      uint64_t v41 = *(unsigned __int8 *)(v39 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      if (qword_1EBA29970 != -1) {
        swift_once();
      }
      if (sub_1BDCE8528(v41, qword_1EBA29968)) {
        break;
      }
      swift_release();
LABEL_38:
      if (v2 == ++v4) {
        goto LABEL_68;
      }
    }
    unint64_t v42 = v111;
    if (v111 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v84 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
      if (v84 <= 0)
      {
LABEL_66:
        swift_release();
        unint64_t v37 = v107;
        goto LABEL_38;
      }
      swift_bridgeObjectRetain();
      if (!sub_1BDDB0448())
      {
        uint64_t v105 = (void *)v39;
        uint64_t v106 = v38;
        swift_bridgeObjectRelease();
        goto LABEL_59;
      }
    }
    else
    {
      if (!*(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_66;
      }
      swift_bridgeObjectRetain();
    }
    if ((v42 & 0xC000000000000001) != 0)
    {
      uint64_t v43 = MEMORY[0x1C18862A0](0, v42);
    }
    else
    {
      if (!*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_78;
      }
      uint64_t v43 = *(void *)(v42 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    uint64_t v44 = v108;
    if (v108[2])
    {
      unint64_t v45 = sub_1BDD1CE5C(v43 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_id);
      if (v46)
      {
        uint64_t v47 = *(void *)(v44[7] + 8 * v45);
        uint64_t v48 = swift_retain_n();
        MEMORY[0x1C1885EA0](v48);
        if (*(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1BDDB0008();
        }
        sub_1BDDB0048();
        sub_1BDDAFFD8();
        uint64_t v49 = swift_getKeyPath();
        MEMORY[0x1F4188790](v49, v50);
        uint64_t v109 = v47;
        sub_1BDDAFA48();
        swift_release();
        uint64_t v51 = swift_getKeyPath();
        MEMORY[0x1F4188790](v51, v52);
        uint64_t v109 = v47;
        sub_1BDDAFA48();
        swift_release();
        uint64_t v53 = swift_getKeyPath();
        MEMORY[0x1F4188790](v53, v54);
        uint64_t v109 = v47;
        sub_1BDDAFA48();
        swift_release();
        uint64_t v55 = swift_getKeyPath();
        MEMORY[0x1F4188790](v55, v56);
        uint64_t v109 = v47;
        sub_1BDDAFA48();
        swift_release();
        uint64_t v57 = swift_getKeyPath();
        MEMORY[0x1F4188790](v57, v58);
        uint64_t v109 = v47;
        sub_1BDDAFA48();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v1 = v103;
        uint64_t v36 = v102;
        uint64_t v2 = v101;
        unint64_t v37 = v107;
        unint64_t v59 = MEMORY[0x1E4FBC860];
LABEL_62:
        swift_bridgeObjectRelease();
        unint64_t v111 = v59;
        goto LABEL_38;
      }
    }
    uint64_t v105 = (void *)v39;
    uint64_t v106 = v38;
    swift_release();
LABEL_59:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269E8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v94;
    Swift::Bool v61 = v95;
    *(void *)(inited + 32) = v95;
    swift_getKeyPath();
    Swift::String v62 = v99;
    uint64_t v109 = (uint64_t)v99;
    Swift::Bool_optional v63 = v61;
    sub_1BDDAFA58();
    swift_release();
    id v64 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, *(void *)((char *)v62 + v97));
    *(void *)(inited + 64) = sub_1BDCE6874(0, (unint64_t *)&qword_1EBA26990);
    *(void *)(inited + 40) = v64;
    unint64_t v65 = sub_1BDCE1914(inited);
    LOBYTE(v109) = 1;
    uint64_t v66 = sub_1BDDAF9F8();
    MEMORY[0x1F4188790](v66 - 8, v67);
    unsigned __int8 v69 = (char *)v93 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1BDDAF9E8();
    uint64_t v70 = swift_allocObject();
    CalculateExpression.init(_:options:base:id:)(0, 0xE000000000000000, v65, &v109, v69);
    swift_getKeyPath();
    uint64_t v109 = (uint64_t)v62;
    sub_1BDDAFA58();
    swift_release();
    uint64_t v71 = swift_getKeyPath();
    MEMORY[0x1F4188790](v71, v72);
    unint64_t v104 = v70 + OBJC_IVAR____TtC9Calculate19CalculateExpression___observationRegistrar;
    uint64_t v109 = v70;
    uint64_t v38 = v106;
    sub_1BDDAFA48();
    swift_release();
    uint64_t v73 = *(void (**)(uint64_t))(*(void *)sub_1BDCE25A0() + 400);
    swift_retain();
    uint64_t v74 = swift_bridgeObjectRetain();
    v73(v74);
    swift_release();
    uint64_t v75 = swift_getKeyPath();
    MEMORY[0x1F4188790](v75, v76);
    uint64_t v109 = v70;
    swift_retain();
    sub_1BDDAFA48();
    swift_release();
    swift_release();
    uint64_t v77 = swift_getKeyPath();
    MEMORY[0x1F4188790](v77, v78);
    uint64_t v109 = v70;
    sub_1BDDAFA48();
    swift_release();
    uint64_t v79 = swift_getKeyPath();
    MEMORY[0x1F4188790](v79, v80);
    uint64_t v109 = v70;
    sub_1BDDAFA48();
    swift_release();
    uint64_t v81 = swift_getKeyPath();
    MEMORY[0x1F4188790](v81, v82);
    uint64_t v109 = v70;
    sub_1BDDAFA48();
    swift_release();
    uint64_t v83 = swift_retain();
    MEMORY[0x1C1885EA0](v83);
    if (*(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1BDDB0008();
    }
    sub_1BDDB0048();
    sub_1BDDAFFD8();
    swift_release();
    swift_release();
    uint64_t v1 = v103;
    unint64_t v59 = MEMORY[0x1E4FBC860];
    uint64_t v36 = v102;
    uint64_t v2 = v101;
    unint64_t v37 = v107;
    goto LABEL_62;
  }
LABEL_68:
  swift_bridgeObjectRelease();
  uint64_t v3 = v112;
  if (!(v112 >> 62))
  {
    uint64_t v85 = *(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v85) {
      goto LABEL_70;
    }
LABEL_89:
    swift_bridgeObjectRelease();
    uint64_t v87 = v99;
    goto LABEL_90;
  }
  swift_bridgeObjectRetain();
  uint64_t v85 = sub_1BDDB0448();
  if (!v85) {
    goto LABEL_89;
  }
LABEL_70:
  unint64_t v6 = v85 - 1;
  if (__OFSUB__(v85, 1))
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_94:
    MEMORY[0x1C18862A0](v6, v3);
    goto LABEL_75;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v6 < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
LABEL_75:
    swift_bridgeObjectRelease();
    uint64_t v86 = sub_1BDCE25A0();
    swift_retain();
    swift_release();
    uint64_t v87 = v99;
    uint64_t v88 = *(uint64_t (**)(uint64_t))(*(void *)sub_1BDCE25A0() + 344);
    uint64_t v89 = swift_retain();
    uint64_t v90 = v88(v89);
    swift_release();
    (*(void (**)(uint64_t))(*(void *)v86 + 352))(v90);
    swift_release();
LABEL_90:
    uint64_t v91 = swift_getKeyPath();
    MEMORY[0x1F4188790](v91, v92);
    uint64_t v109 = (uint64_t)v87;
    sub_1BDDAFA48();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_97:
  uint64_t result = sub_1BDDB0528();
  __break(1u);
  return result;
}

uint64_t (*CalculateExpression.flexibleFractionDigits.modify(uint64_t a1))()
{
  *(void *)(a1 + 8) = v1;
  swift_getKeyPath();
  *(void *)a1 = v1;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___flexibleFractionDigits);
  return sub_1BDD43818;
}

uint64_t sub_1BDD43818()
{
  return CalculateExpression.flexibleFractionDigits.setter();
}

uint64_t sub_1BDD43840()
{
  return sub_1BDCE8978((uint64_t)&unk_1BDDB48A8, &OBJC_IVAR____TtC9Calculate19CalculateExpression___engine);
}

uint64_t sub_1BDD43854@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1BDD45164(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___engine, a2);
}

uint64_t sub_1BDD43868()
{
  return swift_release();
}

uint64_t CalculateExpression.engine.getter()
{
  return sub_1BDCE8978((uint64_t)&unk_1BDDB48A8, &OBJC_IVAR____TtC9Calculate19CalculateExpression___engine);
}

void sub_1BDD43948(uint64_t *a1)
{
}

void CalculateExpression.engine.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_getKeyPath();
  v35[0] = v1;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  if (*(void *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___engine) == a1) {
    return;
  }
  uint64_t v31 = OBJC_IVAR____TtC9Calculate19CalculateExpression___engine;
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)sub_1BDCE25A0() + 344);
  uint64_t v5 = swift_retain();
  id v34 = (void *)v4(v5);
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x1F4188790](KeyPath, v7);
  sub_1BDDAFA48();
  swift_release();
  uint64_t v8 = swift_getKeyPath();
  MEMORY[0x1F4188790](v8, v9);
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  v35[0] = v1;
  sub_1BDDAFA58();
  swift_release();
  uint64_t v10 = OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation) == 1) {
    sub_1BDD3BE54();
  }
  swift_getKeyPath();
  v35[0] = v1;
  sub_1BDDAFA58();
  swift_release();
  uint64_t v11 = (id *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalResult);
  swift_beginAccess();
  uint64_t v32 = v11;
  uint64_t v33 = v10;
  if (!*v11)
  {
    CalculateExpression.clear()();
    goto LABEL_8;
  }
  id v12 = objc_msgSend(*v11, sel_ignoringNaN);
  CalculateExpression.clear()();
  if (!v12)
  {
LABEL_8:
    uint64_t v30 = 0;
    goto LABEL_9;
  }
  type metadata accessor for CalculateExpression.CustomOperandOperation();
  id v13 = v12;
  CalculateExpression.CustomOperandOperation.__allocating_init(_:)(v13);
  CalculateExpression.update(_:)(v14);
  uint64_t v30 = v13;

  swift_release();
LABEL_9:
  uint64_t v15 = swift_getKeyPath();
  MEMORY[0x1F4188790](v15, v16);
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  v35[0] = v2;
  uint64_t v17 = @"CalculateKeyEngine";
  sub_1BDDAFA58();
  swift_release();
  id v18 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, *(void *)(v2 + v31));
  v35[3] = sub_1BDCE6874(0, (unint64_t *)&qword_1EBA26990);
  v35[0] = v18;
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA78();
  swift_release();
  swift_beginAccess();
  sub_1BDD3B7AC((uint64_t)v35, v17);
  swift_endAccess();
  swift_getKeyPath();
  sub_1BDDAFA68();
  swift_release();
  char v19 = (unsigned char *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
  swift_beginAccess();
  *char v19 = 1;
  uint64_t v20 = swift_getKeyPath();
  MEMORY[0x1F4188790](v20, v21);
  sub_1BDDAFA48();
  swift_release();
  uint64_t v22 = swift_getKeyPath();
  MEMORY[0x1F4188790](v22, v23);
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  if (*(unsigned char *)(v2 + v33) == 1) {
    sub_1BDD3BE54();
  }
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  if (*v32)
  {
    id v24 = objc_msgSend(*v32, sel_ignoringNaN, v30);
    CalculateExpression.clear()();
    if (v24)
    {
      type metadata accessor for CalculateExpression.CustomOperandOperation();
      id v24 = v24;
      CalculateExpression.CustomOperandOperation.__allocating_init(_:)(v24);
      CalculateExpression.update(_:)(v25);

      swift_release();
    }
  }
  else
  {
    CalculateExpression.clear()();
    id v24 = 0;
  }
  sub_1BDCE2B80();
  uint64_t v26 = *(void (**)(void *))(*(void *)sub_1BDCE25A0() + 352);
  swift_retain();
  id v27 = v34;
  v26(v34);
  swift_release();
  uint64_t v28 = *(void (**)(uint64_t))(*(void *)sub_1BDCE25A0() + 232);
  swift_retain();
  v28(1);
  swift_release();
  sub_1BDD42404();
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    (*(void (**)(uint64_t))(*(void *)Strong + 488))(Strong);

    swift_release();
  }
  else
  {
  }
}

Swift::Void __swiftcall CalculateExpression.clear()()
{
  uint64_t v1 = *(void (**)(uint64_t))(*(void *)sub_1BDCE25A0() + 424);
  uint64_t v2 = swift_retain();
  v1(v2);
  swift_release();
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA48();
  swift_release();
  sub_1BDD42404();
  swift_getKeyPath();
  sub_1BDDAFA48();
  swift_release();
  uint64_t v3 = (unsigned char *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
  swift_beginAccess();
  unsigned char *v3 = 1;
  swift_getKeyPath();
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    (*(void (**)(uint64_t))(*(void *)Strong + 488))(Strong);
    swift_release();
  }
}

uint64_t CalculateExpression.update(_:)(uint64_t a1)
{
  void (*v18)(uint64_t *__return_ptr, uint64_t);
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  int v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  long long v61;
  uint64_t v62;

  uint64_t v2 = v1;
  swift_getKeyPath();
  unsigned __int8 v60 = v1;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x1F4188790](KeyPath, v5);
    unsigned __int8 v60 = v1;
    sub_1BDDAFA48();
    swift_release();
    char v6 = CalculateExpression.update(_:)(a1);
    swift_release();
    return v6 & 1;
  }
  uint64_t v7 = sub_1BDCE25A0();
  swift_getKeyPath();
  swift_retain();
  sub_1BDDAFA58();
  swift_release();
  unsigned __int8 v60 = v1;
  swift_getKeyPath();
  sub_1BDDAFA78();
  swift_release();
  uint64_t v8 = v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__selectedRange;
  swift_beginAccess();
  unint64_t v59 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v7 + 712))(a1, v8);
  swift_endAccess();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA68();
  swift_release();
  uint64_t v9 = swift_getKeyPath();
  MEMORY[0x1F4188790](v9, v10);
  sub_1BDDAFA48();
  swift_release();
  uint64_t v11 = swift_getKeyPath();
  MEMORY[0x1F4188790](v11, v12);
  sub_1BDDAFA48();
  swift_release();
  sub_1BDD42404();
  uint64_t v13 = swift_getKeyPath();
  MEMORY[0x1F4188790](v13, v14);
  unsigned __int8 v60 = v2;
  sub_1BDDAFA48();
  swift_release();
  sub_1BDCE25A0();
  swift_retain();
  uint64_t v15 = CalculateExpression.RichExpression.editingTokens()();
  swift_release();
  unint64_t v16 = *(void *)(v15 + 16);
  if (!v16) {
    goto LABEL_15;
  }
  uint64_t v58 = v15 + 32;
  uint64_t v17 = v15 + 32 + 32 * (v16 - 1);
  id v18 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)v17 + 272);
  char v19 = swift_retain();
  v18(&v60, v19);
  swift_release();
  sub_1BDD18E9C();
  uint64_t result = sub_1BDDAFD28();
  if (result)
  {
    swift_bridgeObjectRelease();
    sub_1BDD00788();
    uint64_t v21 = swift_getKeyPath();
    MEMORY[0x1F4188790](v21, v22);
    unsigned __int8 v60 = v2;
    swift_retain();
    sub_1BDDAFA48();
LABEL_6:
    swift_release();
    swift_release();
    char v6 = v59;
LABEL_16:
    uint64_t v41 = (unsigned char *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
    swift_beginAccess();
    *uint64_t v41 = 1;
    unint64_t v42 = swift_getKeyPath();
    MEMORY[0x1F4188790](v42, v43);
    sub_1BDDAFA48();
    swift_release();
    uint64_t v44 = swift_getKeyPath();
    MEMORY[0x1F4188790](v44, v45);
    sub_1BDDAFA48();
    swift_release();
    return v6 & 1;
  }
  uint64_t v23 = *(void *)(v15 + 16);
  id v24 = v23 - 2;
  if (v23 < 2) {
    goto LABEL_15;
  }
  if (v16 > v23)
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v25 = v58 + 32 * (v16 - 1);
  uint64_t v26 = *(void *)(v25 + 24);
  unsigned __int8 v60 = *(void *)v17;
  Swift::Bool v61 = *(_OWORD *)(v25 + 8);
  Swift::String v62 = v26;
  id v27 = CalculateExpression.RichExpression.EditingToken.token.getter();
  if (!v27
    || (uint64_t v28 = v24,
        BOOL v29 = *(unsigned __int8 *)(v27 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type),
        uint64_t result = swift_release(),
        v29 != 18))
  {
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v39 = swift_getKeyPath();
    MEMORY[0x1F4188790](v39, v40);
    unsigned __int8 v60 = v2;
    sub_1BDDAFA48();
    swift_release();
    char v6 = v59;
    goto LABEL_16;
  }
  if (v28 < *(void *)(v15 + 16))
  {
    uint64_t v30 = (uint64_t *)(v58 + 32 * v28);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = v30[2];
    id v34 = v30[3];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    unsigned __int8 v60 = v32;
    *(void *)&Swift::Bool v61 = v31;
    *((void *)&v61 + 1) = v33;
    Swift::String v62 = v34;
    uint64_t v35 = CalculateExpression.RichExpression.EditingToken.token.getter();
    if (v35)
    {
      uint64_t v36 = *(unsigned __int8 *)(v35 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      swift_release();
      if (v36 == 7)
      {
        sub_1BDD0010C();
        unint64_t v37 = swift_getKeyPath();
        MEMORY[0x1F4188790](v37, v38);
        unsigned __int8 v60 = v2;
        swift_retain();
        sub_1BDDAFA48();
        swift_release();
        swift_release();
        goto LABEL_6;
      }
    }
    char v6 = v59;
    if (v34)
    {
      char v46 = *(uint64_t (**)(uint64_t))(*(void *)v34 + 360);
      uint64_t v47 = swift_retain();
      uint64_t v48 = v46(v47);
      swift_release();
      if (v48)
      {
        sub_1BDD008A0();
        uint64_t v57 = swift_getKeyPath();
        MEMORY[0x1F4188790](v57, v49);
        unsigned __int8 v60 = v2;
        swift_retain();
        sub_1BDDAFA48();
        swift_release();
        swift_release();
LABEL_24:
        swift_release();
        swift_release();
        goto LABEL_16;
      }
      uint64_t v50 = *(uint64_t (**)(uint64_t))(*(void *)v34 + 344);
      uint64_t v51 = swift_retain();
      uint64_t v52 = v50(v51);
      swift_release();
      if (v52)
      {
        sub_1BDD002E4();
        uint64_t v53 = swift_getKeyPath();
        MEMORY[0x1F4188790](v53, v54);
        unsigned __int8 v60 = v2;
        swift_retain();
        sub_1BDDAFA48();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_16;
      }
    }
    uint64_t v55 = swift_getKeyPath();
    MEMORY[0x1F4188790](v55, v56);
    unsigned __int8 v60 = v2;
    sub_1BDDAFA48();
    swift_release();
    goto LABEL_24;
  }
LABEL_26:
  __break(1u);
  return result;
}

void (*CalculateExpression.engine.modify(void *a1))(uint64_t *a1)
{
  a1[2] = v1;
  swift_getKeyPath();
  a1[1] = v1;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  *a1 = *(void *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___engine);
  return sub_1BDD45114;
}

void sub_1BDD45114(uint64_t *a1)
{
}

uint64_t sub_1BDD4513C()
{
  return sub_1BDCE8978((uint64_t)&unk_1BDDB4920, &OBJC_IVAR____TtC9Calculate19CalculateExpression___format);
}

uint64_t sub_1BDD45150@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1BDD45164(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___format, a2);
}

uint64_t sub_1BDD45164@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  uint64_t result = swift_release();
  *a3 = *(void *)(v5 + *a2);
  return result;
}

uint64_t sub_1BDD45218()
{
  return swift_release();
}

void sub_1BDD452E4(uint64_t *a1)
{
}

void CalculateExpression.format.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_getKeyPath();
  v45[0] = v1;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v4 = OBJC_IVAR____TtC9Calculate19CalculateExpression___format;
  if (*(void *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___format) != a1)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t))(*(void *)sub_1BDCE25A0() + 224);
    uint64_t v6 = swift_retain();
    char v42 = v5(v6);
    swift_release();
    if (a1 != 2)
    {
      swift_getKeyPath();
      v45[0] = v1;
      sub_1BDDAFA58();
      swift_release();
      if (*(void *)(v1 + v4) != 2) {
        sub_1BDD40F1C();
      }
    }
    uint64_t v7 = *(uint64_t (**)(uint64_t))(*(void *)sub_1BDCE25A0() + 344);
    uint64_t v8 = swift_retain();
    uint64_t v9 = v7(v8);
    swift_release();
    if (a1 != 2) {
      goto LABEL_10;
    }
    swift_getKeyPath();
    v45[0] = v1;
    sub_1BDDAFA58();
    swift_release();
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation) == 1) {
      sub_1BDD3BE54();
    }
    swift_getKeyPath();
    v45[0] = v1;
    sub_1BDDAFA58();
    swift_release();
    uint64_t v10 = (id *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalResult);
    swift_beginAccess();
    if (*v10) {
      id v44 = objc_msgSend(*v10, sel_ignoringNaN);
    }
    else {
LABEL_10:
    }
      id v44 = 0;
    swift_getKeyPath();
    v45[0] = v2;
    sub_1BDDAFA58();
    swift_release();
    uint64_t v43 = *(void *)(v2 + v4);
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x1F4188790](KeyPath, v12);
    sub_1BDDAFA48();
    swift_release();
    swift_getKeyPath();
    v45[0] = v2;
    uint64_t v13 = @"CalculateKeyFormat";
    sub_1BDDAFA58();
    swift_release();
    id v14 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, *(void *)(v2 + v4));
    v45[3] = sub_1BDCE6874(0, (unint64_t *)&qword_1EBA26990);
    v45[0] = v14;
    swift_getKeyPath();
    sub_1BDDAFA58();
    swift_release();
    swift_getKeyPath();
    sub_1BDDAFA78();
    swift_release();
    swift_beginAccess();
    sub_1BDD3B7AC((uint64_t)v45, v13);
    swift_endAccess();
    swift_getKeyPath();
    sub_1BDDAFA68();
    swift_release();
    if (a1 == 2 && !v43)
    {
      CalculateExpression.clear()();
      uint64_t v15 = (void *)v9;
      if (!v44) {
        goto LABEL_28;
      }
      type metadata accessor for CalculateExpression.CustomOperandOperation();
      id v16 = v44;
      CalculateExpression.CustomOperandOperation.__allocating_init(_:)(v16);
      CalculateExpression.update(_:)(v17);

LABEL_27:
      swift_release();
LABEL_28:
      uint64_t v26 = *(void (**)(void *))(*(void *)sub_1BDCE25A0() + 352);
      swift_retain();
      id v27 = v15;
      v26(v15);
      swift_release();
      uint64_t v28 = *(void (**)(uint64_t))(*(void *)sub_1BDCE25A0() + 232);
      swift_retain();
      v28(1);
      swift_release();
      BOOL v29 = *(void (**)(BOOL))(*(void *)sub_1BDCE25A0() + 256);
      swift_retain();
      v29((v42 & 1) == 0);
      swift_release();
      sub_1BDCE2B80();
      uint64_t v30 = swift_getKeyPath();
      MEMORY[0x1F4188790](v30, v31);
      v45[0] = v2;
      sub_1BDDAFA48();
      swift_release();
      uint64_t v32 = swift_getKeyPath();
      MEMORY[0x1F4188790](v32, v33);
      v45[0] = v2;
      sub_1BDDAFA48();
      swift_release();
      sub_1BDD42404();
      uint64_t v34 = swift_getKeyPath();
      MEMORY[0x1F4188790](v34, v35);
      v45[0] = v2;
      sub_1BDDAFA48();
      swift_release();
      uint64_t v36 = (unsigned char *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
      swift_beginAccess();
      unsigned char *v36 = 1;
      uint64_t v37 = swift_getKeyPath();
      MEMORY[0x1F4188790](v37, v38);
      sub_1BDDAFA48();
      swift_release();
      uint64_t v39 = swift_getKeyPath();
      MEMORY[0x1F4188790](v39, v40);
      sub_1BDDAFA48();
      swift_release();
      swift_getKeyPath();
      sub_1BDDAFA58();
      swift_release();
      swift_beginAccess();
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        (*(void (**)(uint64_t))(*(void *)Strong + 488))(Strong);

        swift_release();
      }
      else
      {
      }
      return;
    }
    uint64_t v15 = (void *)v9;
    if (a1 || v43 != 2) {
      goto LABEL_28;
    }
    swift_getKeyPath();
    v45[0] = v2;
    sub_1BDDAFA58();
    swift_release();
    unint64_t v18 = *(void *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression__postfixStack);
    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1BDDB0448();
      if (v19)
      {
LABEL_19:
        unint64_t v20 = v19 - 1;
        if (__OFSUB__(v19, 1))
        {
          __break(1u);
        }
        else if ((v18 & 0xC000000000000001) == 0)
        {
          if ((v20 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v20 < *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            swift_retain();
LABEL_24:
            swift_bridgeObjectRelease();
            uint64_t v21 = sub_1BDCE25A0();
            swift_retain();
            uint64_t v22 = *(uint64_t (**)(uint64_t))(*(void *)sub_1BDCE25A0() + 392);
            uint64_t v23 = swift_retain();
            uint64_t v24 = v22(v23);
            swift_release();
            (*(void (**)(uint64_t))(*(void *)v21 + 400))(v24);
            swift_release();
            goto LABEL_27;
          }
          __break(1u);
          return;
        }
        MEMORY[0x1C18862A0](v20, v18);
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v19) {
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void (**)(void))(*(void *)sub_1BDCE25A0() + 400);
    swift_retain();
    v25(MEMORY[0x1E4FBC860]);
    goto LABEL_27;
  }
}

uint64_t CalculateExpression.postfixStack.getter()
{
  return sub_1BDCF11F0();
}

void (*CalculateExpression.format.modify(void *a1))(uint64_t *a1)
{
  a1[2] = v1;
  swift_getKeyPath();
  a1[1] = v1;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  *a1 = *(void *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___format);
  return sub_1BDD45ED4;
}

void sub_1BDD45ED4(uint64_t *a1)
{
}

uint64_t CalculateExpression.effectiveLocale.getter@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  uint64_t v13 = v1;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___locales);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26868);
  MEMORY[0x1F4188790]();
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = sub_1BDDAFA38();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  if (v6)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v5, v3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v7) != 1) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v5, v7);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v5, 1, 1, v7);
  }
  id v11 = objc_msgSend(self, sel_systemLocale);
  sub_1BDDAFA28();

  return sub_1BDCE43CC((uint64_t)v5, &qword_1EBA26868);
}

uint64_t sub_1BDD46130()
{
  return sub_1BDCF11F0();
}

uint64_t sub_1BDD46144@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1BDD4B5A8(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___locales, a2);
}

uint64_t sub_1BDD46158()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDD46238@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression___locales);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDD462EC()
{
  return CalculateExpression.locales.setter();
}

uint64_t CalculateExpression.locales.setter()
{
  uint64_t v1 = v0;
  sub_1BDD40F1C();
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA48();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  v6[0] = v0;
  uint64_t v2 = @"CalculateKeyLocales";
  sub_1BDDAFA58();
  swift_release();
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___locales);
  v6[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA268E8);
  v6[0] = v3;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1BDDAFA58();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA78();
  swift_release();
  swift_beginAccess();
  sub_1BDD3B7AC((uint64_t)v6, v2);
  swift_endAccess();
  swift_getKeyPath();
  sub_1BDDAFA68();
  swift_release();
  uint64_t v4 = (unsigned char *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
  swift_beginAccess();
  *uint64_t v4 = 1;
  swift_getKeyPath();
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t))(*(void *)result + 488))(result);
    return swift_release();
  }
  return result;
}

uint64_t (*CalculateExpression.locales.modify(void *a1))(uint64_t a1, char a2)
{
  a1[2] = v1;
  swift_getKeyPath();
  a1[1] = v1;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  *a1 = *(void *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___locales);
  swift_bridgeObjectRetain();
  return sub_1BDD46774;
}

uint64_t sub_1BDD46774(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return CalculateExpression.locales.setter();
  }
  swift_bridgeObjectRetain();
  CalculateExpression.locales.setter();
  return swift_bridgeObjectRelease();
}

void *sub_1BDD467D0()
{
  return sub_1BDD468E8((uint64_t)&unk_1BDDB4FD0, &OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatterObserver);
}

id sub_1BDD467E4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1BDD46B20(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatterObserver, a2);
}

void sub_1BDD467F8(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  id v2 = v1;
  sub_1BDDAFA48();
  swift_release();
}

void *sub_1BDD468D4()
{
  return sub_1BDD468E8((uint64_t)&unk_1BDDB4998, &OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatter);
}

void *sub_1BDD468E8(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v4 = *(void **)(v2 + *a2);
  id v5 = v4;
  return v4;
}

uint64_t sub_1BDD46990()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    swift_getKeyPath();
    sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
    sub_1BDDAFA58();
    swift_release();
    if (*(void *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___format) == 2) {
      sub_1BDD42404();
    }
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x1F4188790](KeyPath, v3);
    sub_1BDDAFA48();
    swift_release();
    return swift_release();
  }
  return result;
}

id sub_1BDD46B0C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1BDD46B20(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatter, a2);
}

id sub_1BDD46B20@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v6 = *(void **)(v5 + *a2);
  *a3 = v6;
  return v6;
}

void sub_1BDD46BE4(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  id v2 = v1;
  sub_1BDDAFA48();
  swift_release();
}

id sub_1BDD46CC0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v4 = *(void **)(v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatter);
  *a2 = v4;
  return v4;
}

void sub_1BDD46D80(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  CalculateExpression.numberFormatter.setter(v1);
}

void CalculateExpression.numberFormatter.setter(void *a1)
{
  uint64_t v2 = v1;
  sub_1BDD40F1C();
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  id v4 = a1;
  sub_1BDDAFA48();
  swift_release();

  swift_getKeyPath();
  uint64_t v5 = @"CalculateKeyNumberFormatter";
  sub_1BDDAFA58();
  swift_release();
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatter);
  if (v6)
  {
    *((void *)&v15 + 1) = sub_1BDCE6874(0, &qword_1EBA26950);
    *(void *)&long long v14 = v6;
  }
  else
  {
    long long v14 = 0u;
    long long v15 = 0u;
  }
  swift_getKeyPath();
  id v7 = v6;
  sub_1BDDAFA58();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA78();
  swift_release();
  swift_beginAccess();
  sub_1BDD3B7AC((uint64_t)&v14, v5);
  swift_endAccess();
  swift_getKeyPath();
  sub_1BDDAFA68();
  swift_release();
  uint64_t v8 = (unsigned char *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
  swift_beginAccess();
  *uint64_t v8 = 1;
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x1F4188790](KeyPath, v10);
  sub_1BDDAFA48();
  swift_release();
  uint64_t v11 = swift_getKeyPath();
  MEMORY[0x1F4188790](v11, v12);
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    (*(void (**)(uint64_t))(*(void *)Strong + 488))(Strong);
    swift_release();
  }
}

void (*CalculateExpression.numberFormatter.modify(void *a1))(void **a1, char a2)
{
  a1[2] = v1;
  swift_getKeyPath();
  a1[1] = v1;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___numberFormatter);
  *a1 = v3;
  id v4 = v3;
  return sub_1BDD4727C;
}

void sub_1BDD4727C(void **a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    CalculateExpression.numberFormatter.setter(v2);
  }
  else
  {
    CalculateExpression.numberFormatter.setter(*a1);
  }
}

uint64_t sub_1BDD472E8()
{
  sub_1BDCE2B80();
  sub_1BDCE25A0();
  uint64_t v1 = swift_retain();
  sub_1BDD47648(v1);
  swift_release();
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA48();
  uint64_t v2 = swift_release();
  sub_1BDD42404(v2);
  swift_getKeyPath();
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA48();
  swift_release();
  id v3 = (unsigned char *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
  swift_beginAccess();
  unsigned char *v3 = 1;
  swift_getKeyPath();
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t))(*(void *)result + 488))(result);
    return swift_release();
  }
  return result;
}

unint64_t sub_1BDD47648(uint64_t a1)
{
  unint64_t result = (*(uint64_t (**)(void))(*(void *)a1 + 392))();
  unint64_t v3 = result;
  if (result >> 62)
  {
    unint64_t result = sub_1BDDB0448();
    uint64_t v4 = result;
    if (result)
    {
LABEL_3:
      if (v4 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v5 = (unsigned char *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__base);
        swift_beginAccess();
        for (uint64_t i = 0; i != v4; ++i)
        {
          if ((v3 & 0xC000000000000001) != 0)
          {
            uint64_t v7 = MEMORY[0x1C18862A0](i, v3);
          }
          else
          {
            uint64_t v7 = *(void *)(v3 + 8 * i + 32);
            swift_retain();
          }
          if (*(unsigned char *)(v7 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type) == 1)
          {
            swift_getKeyPath();
            uint64_t v11 = v1;
            sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
            sub_1BDDAFA58();
            swift_release();
            LOBYTE(v11) = *v5;
            (*(void (**)(uint64_t *))(*(void *)v7 + 400))(&v11);
          }
          else
          {
            uint64_t v8 = (*(uint64_t (**)(void))(*(void *)v7 + 256))();
            if (v8)
            {
              ((void (*)(void))sub_1BDD47648)();
              uint64_t v8 = swift_release();
            }
            uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 280))(v8);
            if (v9)
            {
              uint64_t v10 = v9;
              if (((*(uint64_t (**)(void))(*(void *)v7 + 368))() & 1) == 0) {
                sub_1BDD47648(v10);
              }
              swift_release();
            }
          }
          swift_release();
        }
        return swift_bridgeObjectRelease();
      }
      return result;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BDD4794C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BDD479AC;
}

uint64_t sub_1BDD479AC(uint64_t a1, char a2)
{
  return sub_1BDD479C4(a1, a2, (uint64_t (*)(uint64_t))sub_1BDD472E8);
}

uint64_t sub_1BDD479C4(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

uint64_t sub_1BDD47A08@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v4 = (unsigned char *)(v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression__base);
  uint64_t result = swift_beginAccess();
  *a2 = *v4;
  return result;
}

uint64_t sub_1BDD47AD0()
{
  return swift_release();
}

uint64_t CalculateExpression.base.setter()
{
  return swift_release();
}

void (*CalculateExpression.base.modify(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  void v3[5] = OBJC_IVAR____TtC9Calculate19CalculateExpression___observationRegistrar;
  void *v3 = v1;
  v3[6] = sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  void *v3 = v1;
  swift_getKeyPath();
  sub_1BDDAFA78();
  swift_release();
  v3[7] = sub_1BDD4794C((uint64_t)v3);
  return sub_1BDD47D8C;
}

void sub_1BDD47D8C(void *a1)
{
}

unint64_t CalculateExpression.lastOperand.getter()
{
  unint64_t v3 = v0;
  uint64_t v4 = sub_1BDCE25A0();
  uint64_t v5 = *(uint64_t (**)(void))(*(void *)v4 + 392);
  uint64_t v6 = *(void *)v4 + 392;
  swift_retain();
  unint64_t v7 = v5();
  uint64_t v8 = v7;
  if (v7 >> 62) {
    goto LABEL_65;
  }
  for (uint64_t i = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10); ; uint64_t i = sub_1BDDB0448())
  {
    swift_bridgeObjectRelease();
    unint64_t v10 = i - 1;
    if (__OFSUB__(i, 1))
    {
      __break(1u);
LABEL_67:
      swift_once();
      goto LABEL_11;
    }
    Swift::String v62 = v5;
    uint64_t v11 = (uint64_t (**)(uint64_t))(*(void *)v4 + 416);
    uint64_t v2 = *v11;
    uint64_t v6 = (*v11)(i - 1);
    if (!v6) {
      goto LABEL_62;
    }
    swift_getKeyPath();
    uint64_t v63 = v6;
    v64[0] = v3;
    sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
    swift_retain();
    sub_1BDDAFA58();
    swift_release();
    uint64_t v1 = (unint64_t *)&OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
    uint64_t v5 = (uint64_t (*)(void))&qword_1EBA28FF0[2];
    if (*(void *)(v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression___format) == 2)
    {
      uint64_t v12 = *(unsigned __int8 *)(v6 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      if (qword_1EBA29970 != -1) {
        goto LABEL_75;
      }
      goto LABEL_7;
    }
LABEL_10:
    unint64_t v3 = *v1;
    uint64_t v8 = *(unsigned __int8 *)(v6 + *v1);
    if (*((void *)v5 + 302) != -1) {
      goto LABEL_67;
    }
LABEL_11:
    unint64_t result = sub_1BDCE8528(v8, qword_1EBA29968);
    if ((result & 1) == 0) {
      break;
    }
    uint64_t v61 = i;
    uint64_t v6 = v10 - 1;
    if (!__OFSUB__(v10, 1)) {
      goto LABEL_13;
    }
LABEL_64:
    __break(1u);
LABEL_65:
    ;
  }
  unsigned int v26 = *(unsigned __int8 *)(v6 + v3);
  if (v26 == 7)
  {
    uint64_t v61 = i;
    uint64_t v6 = v10 - 1;
    if (__OFSUB__(v10, 1))
    {
      __break(1u);
      goto LABEL_80;
    }
    uint64_t v27 = v2(v10 - 1);
    if (v27)
    {
      uint64_t v28 = *(unsigned __int8 *)(v27 + *v1);
      swift_release();
      if (sub_1BDCE8528(v28, qword_1EBA29968))
      {
LABEL_13:
        unint64_t v3 = v10;
        while (1)
        {
          uint64_t v16 = v2(v6);
          if (!v16) {
            break;
          }
          unint64_t v17 = v10;
          unint64_t v18 = v1;
          uint64_t v1 = (unint64_t *)*(unsigned __int8 *)(v16 + *v1);
          swift_release();
          uint64_t v5 = (uint64_t (*)(void))qword_1EBA29968;
          if (!*(void *)(qword_1EBA29968 + 16)
            || (sub_1BDDB0558(),
                sub_1BDDB0568(),
                uint64_t v8 = (uint64_t)v64,
                uint64_t v19 = sub_1BDDB0578(),
                uint64_t v20 = -1 << *((unsigned char *)v5 + 32),
                unint64_t v21 = v19 & ~v20,
                uint64_t v22 = (void *)((char *)v5 + 56),
                ((*(void *)((char *)v5 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v21) & 1) == 0))
          {
LABEL_34:
            uint64_t v6 = v63;
            uint64_t v13 = swift_release();
            v64[0] = v3;
            unint64_t v10 = v17;
            goto LABEL_37;
          }
          uint64_t v23 = *((void *)v5 + 6);
          if (*(unsigned __int8 *)(v23 + v21) != v1)
          {
            uint64_t v24 = ~v20;
            unint64_t v25 = (v21 + 1) & v24;
            if (((*(void *)((char *)v22 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
              goto LABEL_34;
            }
            while (*(unsigned __int8 *)(v23 + v25) != v1)
            {
              unint64_t v25 = (v25 + 1) & v24;
              if (((*(void *)((char *)v22 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
              {
                v64[0] = v3;
                uint64_t v6 = v63;
                uint64_t v13 = swift_release();
                unint64_t v10 = v17;
                goto LABEL_37;
              }
            }
          }
          unint64_t v3 = v6;
          BOOL v15 = __OFSUB__(v6--, 1);
          uint64_t v1 = v18;
          unint64_t v10 = v17;
          if (v15) {
            goto LABEL_64;
          }
        }
        uint64_t v6 = v63;
        uint64_t v13 = swift_release();
        v64[0] = v3;
LABEL_37:
        uint64_t i = v61;
        if ((v3 & 0x8000000000000000) != 0) {
          goto LABEL_62;
        }
        goto LABEL_38;
      }
    }
    uint64_t v6 = v63;
    unsigned int v26 = *(unsigned __int8 *)(v63 + v3);
  }
  BOOL v29 = v26 > 0x10;
  int v30 = (1 << v26) & 0x10180;
  if (v29 || v30 == 0)
  {
    swift_release();
    goto LABEL_62;
  }
  v64[0] = v10;
  sub_1BDD231C0(v64);
  uint64_t v13 = swift_release();
  unint64_t v3 = v64[0];
  if (v64[0] < 0) {
    goto LABEL_62;
  }
LABEL_38:
  while (2)
  {
    if ((uint64_t)v10 < (uint64_t)v3)
    {
      __break(1u);
      goto LABEL_69;
    }
    unint64_t result = ((uint64_t (*)(uint64_t))v62)(v13);
    BOOL v15 = __OFADD__(v10++, 1);
    if (v15)
    {
LABEL_69:
      __break(1u);
      break;
    }
    uint64_t v6 = result;
    uint64_t v1 = (unint64_t *)(result >> 62);
    if (!(result >> 62))
    {
      uint64_t v12 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v12 >= v3)
      {
        if (v12 >= (uint64_t)v10) {
          goto LABEL_43;
        }
LABEL_72:
        __break(1u);
      }
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      swift_once();
LABEL_7:
      if ((sub_1BDCE8528(v12, qword_1EBA29968) & 1) == 0) {
        goto LABEL_10;
      }
      uint64_t v13 = swift_release();
      v64[0] = v10;
      unint64_t v3 = v10;
      if ((v10 & 0x8000000000000000) != 0) {
        goto LABEL_62;
      }
      continue;
    }
    break;
  }
  unint64_t result = sub_1BDDB0448();
  if ((uint64_t)result < (uint64_t)v3) {
    goto LABEL_82;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1BDDB0448();
  unint64_t result = swift_bridgeObjectRelease();
  if (v12 < (uint64_t)v10) {
    goto LABEL_72;
  }
LABEL_43:
  if ((v10 & 0x8000000000000000) != 0) {
    goto LABEL_74;
  }
  if ((v6 & 0xC000000000000001) == 0) {
    goto LABEL_50;
  }
  if (v10 < v3)
  {
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  if (v3 == v10) {
    goto LABEL_50;
  }
  if (v3 >= v10)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  type metadata accessor for CalculateExpression.RichToken();
  unint64_t v32 = v3;
  do
  {
    unint64_t v33 = v32 + 1;
    sub_1BDDB0388();
    unint64_t v32 = v33;
  }
  while (i != v33);
LABEL_50:
  if (v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1BDDB0458();
    uint64_t i = v34;
    unint64_t v3 = v35;
    unint64_t v10 = v36;
    swift_bridgeObjectRelease_n();
    if (v10) {
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  uint64_t v12 = v6 & 0xFFFFFFFFFFFFFF8;
  uint64_t i = (v6 & 0xFFFFFFFFFFFFFF8) + 32;
  unint64_t v10 = (2 * v10) | 1;
  if ((v10 & 1) == 0)
  {
LABEL_54:
    sub_1BDD20C6C(v12, i, v3, v10);
    uint64_t v38 = v37;
    goto LABEL_61;
  }
LABEL_55:
  sub_1BDDB04F8();
  swift_unknownObjectRetain_n();
  uint64_t v39 = swift_dynamicCastClass();
  if (!v39)
  {
    swift_unknownObjectRelease();
    uint64_t v39 = MEMORY[0x1E4FBC860];
  }
  uint64_t v40 = *(void *)(v39 + 16);
  swift_release();
  if (__OFSUB__(v10 >> 1, v3)) {
    goto LABEL_77;
  }
  if (v40 != (v10 >> 1) - v3)
  {
LABEL_78:
    swift_unknownObjectRelease();
    goto LABEL_54;
  }
  uint64_t v38 = swift_dynamicCastClass();
  if (!v38)
  {
    swift_unknownObjectRelease();
    uint64_t v38 = MEMORY[0x1E4FBC860];
  }
LABEL_61:
  swift_unknownObjectRelease();
  type metadata accessor for CalculateExpression.RichExpression();
  sub_1BDD07294(v38);
  type metadata accessor for CalculateExpression.PlainExpression();
  uint64_t v41 = (void *)swift_retain();
  uint64_t v42 = *(void *)CalculateExpression.PlainExpression.__allocating_init(_:)(v41);
  uint64_t v43 = (*(uint64_t (**)(void))(v42 + 296))();
  unint64_t v45 = v44;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDDB37C0;
  *(void *)(inited + 32) = @"CalculateKeyLocales";
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF220);
  sub_1BDDAFA38();
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1BDDB37C0;
  uint64_t v48 = @"CalculateKeyLocales";
  sub_1BDDAFA08();
  *(void *)(inited + 64) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA268E8);
  *(void *)(inited + 40) = v47;
  unint64_t v49 = sub_1BDCE1914(inited);
  v50._uint64_t countAndFlagsBits = v43;
  v50._object = v45;
  evaluate(_:options:)(v51, v50, (Swift::OpaquePointer)v49);
  uint64_t v53 = v52;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (v53)
  {
LABEL_63:
    swift_release();
    swift_release();
    return v53;
  }
  else
  {
LABEL_62:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269E8);
    uint64_t v54 = swift_initStackObject();
    *(_OWORD *)(v54 + 16) = xmmword_1BDDB37C0;
    *(void *)(v54 + 32) = @"CalculateKeyLocales";
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF220);
    sub_1BDDAFA38();
    uint64_t v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_1BDDB37C0;
    uint64_t v56 = @"CalculateKeyLocales";
    sub_1BDDAFA08();
    *(void *)(v54 + 64) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA268E8);
    *(void *)(v54 + 40) = v55;
    unint64_t v57 = sub_1BDCE1914(v54);
    v58._uint64_t countAndFlagsBits = 48;
    v58._object = (void *)0xE100000000000000;
    evaluate(_:options:)(v59, v58, (Swift::OpaquePointer)v57);
    uint64_t v53 = v60;
    unint64_t result = swift_bridgeObjectRelease();
    if (v53) {
      goto LABEL_63;
    }
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
  }
  return result;
}

void CalculateExpression.lastOperand.setter(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_allocWithZone(MEMORY[0x1E4F28EE0]);
  id v5 = a1;
  id v6 = objc_msgSend(v4, sel_init);
  objc_msgSend(v6, sel_setNumberStyle_, 0);
  objc_msgSend(v6, sel_setUsesGroupingSeparator_, 0);
  objc_msgSend(v5, sel_setNumberFormatter_, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF220);
  sub_1BDDAFA38();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BDDB37C0;
  sub_1BDDAFA08();
  unint64_t v7 = (void *)sub_1BDDAFFB8();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setLocales_, v7);

  id v8 = objc_msgSend(v5, sel_formattedResult);
  uint64_t v9 = sub_1BDDAFD68();
  unint64_t v11 = v10;

  uint64_t v12 = HIBYTE(v11) & 0xF;
  uint64_t v13 = v9 & 0xFFFFFFFFFFFFLL;
  if ((v11 & 0x2000000000000000) != 0) {
    uint64_t v14 = HIBYTE(v11) & 0xF;
  }
  else {
    uint64_t v14 = v9 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v87 = v5;
  if (v14)
  {
    if ((v11 & 0x1000000000000000) != 0)
    {
      unint64_t v16 = sub_1BDD4FDF4(v9, v11, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1BDD05AAC);
      char v18 = v85;
LABEL_37:
      swift_bridgeObjectRelease();
      if (v18) {
        unint64_t v25 = 0;
      }
      else {
        unint64_t v25 = v16;
      }
      goto LABEL_40;
    }
    if ((v11 & 0x2000000000000000) == 0)
    {
      if ((v9 & 0x1000000000000000) != 0) {
        BOOL v15 = (unsigned __int8 *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        BOOL v15 = (unsigned __int8 *)sub_1BDDB03C8();
      }
      unint64_t v16 = (unint64_t)sub_1BDD05AAC(v15, v13, 10);
      char v18 = v17 & 1;
      goto LABEL_37;
    }
    v90[0] = v9;
    v90[1] = v11 & 0xFFFFFFFFFFFFFFLL;
    if (v9 == 43)
    {
      if (!v12) {
        goto LABEL_115;
      }
      if (v12 == 1 || (BYTE1(v9) - 48) > 9u) {
        goto LABEL_33;
      }
      unint64_t v16 = (BYTE1(v9) - 48);
      if (v12 != 2)
      {
        if ((BYTE2(v9) - 48) > 9u) {
          goto LABEL_33;
        }
        unint64_t v16 = 10 * (BYTE1(v9) - 48) + (BYTE2(v9) - 48);
        uint64_t v22 = v12 - 3;
        if (v22)
        {
          uint64_t v23 = (unsigned __int8 *)v90 + 3;
          while (1)
          {
            unsigned int v24 = *v23 - 48;
            if (v24 > 9) {
              goto LABEL_33;
            }
            if (!is_mul_ok(v16, 0xAuLL)) {
              goto LABEL_33;
            }
            BOOL v20 = __CFADD__(10 * v16, v24);
            unint64_t v16 = 10 * v16 + v24;
            if (v20) {
              goto LABEL_33;
            }
            char v18 = 0;
            ++v23;
            if (!--v22) {
              goto LABEL_37;
            }
          }
        }
      }
    }
    else
    {
      if (v9 == 45)
      {
        if (v12)
        {
          if (v12 != 1)
          {
            unsigned __int8 v19 = BYTE1(v9) - 48;
            if ((BYTE1(v9) - 48) <= 9u)
            {
              unint64_t v16 = 0;
              BOOL v20 = v19 == 0;
              unint64_t v21 = -(uint64_t)v19;
              if (!v20) {
                goto LABEL_34;
              }
              if (v12 == 2)
              {
                char v18 = 0;
                unint64_t v16 = v21;
                goto LABEL_37;
              }
              unsigned __int8 v80 = BYTE2(v9) - 48;
              if ((BYTE2(v9) - 48) <= 9u && is_mul_ok(v21, 0xAuLL))
              {
                unint64_t v81 = 10 * v21;
                unint64_t v16 = v81 - v80;
                if (v81 >= v80)
                {
                  uint64_t v82 = v12 - 3;
                  if (v82)
                  {
                    uint64_t v83 = (unsigned __int8 *)v90 + 3;
                    while (1)
                    {
                      unsigned int v84 = *v83 - 48;
                      if (v84 > 9) {
                        goto LABEL_33;
                      }
                      if (!is_mul_ok(v16, 0xAuLL)) {
                        goto LABEL_33;
                      }
                      BOOL v20 = 10 * v16 >= v84;
                      unint64_t v16 = 10 * v16 - v84;
                      if (!v20) {
                        goto LABEL_33;
                      }
                      char v18 = 0;
                      ++v83;
                      if (!--v82) {
                        goto LABEL_37;
                      }
                    }
                  }
                  goto LABEL_36;
                }
              }
            }
          }
LABEL_33:
          unint64_t v16 = 0;
LABEL_34:
          char v18 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
        return;
      }
      if (!v12 || (v9 - 48) > 9u) {
        goto LABEL_33;
      }
      unint64_t v16 = (v9 - 48);
      if (v12 != 1)
      {
        if ((BYTE1(v9) - 48) > 9u) {
          goto LABEL_33;
        }
        unint64_t v16 = 10 * (v9 - 48) + (BYTE1(v9) - 48);
        uint64_t v77 = v12 - 2;
        if (v77)
        {
          uint64_t v78 = (unsigned __int8 *)v90 + 2;
          while (1)
          {
            unsigned int v79 = *v78 - 48;
            if (v79 > 9) {
              goto LABEL_33;
            }
            if (!is_mul_ok(v16, 0xAuLL)) {
              goto LABEL_33;
            }
            BOOL v20 = __CFADD__(10 * v16, v79);
            unint64_t v16 = 10 * v16 + v79;
            if (v20) {
              goto LABEL_33;
            }
            char v18 = 0;
            ++v78;
            if (!--v77) {
              goto LABEL_37;
            }
          }
        }
      }
    }
LABEL_36:
    char v18 = 0;
    goto LABEL_37;
  }
LABEL_105:
  swift_bridgeObjectRelease();
  unint64_t v25 = 0;
LABEL_40:
  type metadata accessor for CalculateExpression.RichToken();
  v90[0] = v25;
  swift_getKeyPath();
  v92[1] = v2;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  unsigned int v26 = (unsigned char *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression__base);
  swift_beginAccess();
  sub_1BDD185E8();
  uint64_t v27 = sub_1BDDAFED8();
  uint64_t v29 = v28;
  swift_getKeyPath();
  v90[0] = v2;
  sub_1BDDAFA58();
  swift_release();
  LOBYTE(v90[0]) = *v26;
  sub_1BDCE8A80(v27, v29, (char *)v90);
  uint64_t v30 = sub_1BDCE25A0();
  uint64_t v31 = *(uint64_t (**)(void))(*(void *)v30 + 392);
  swift_retain();
  unint64_t v32 = v31();
  if (v32 >> 62) {
    uint64_t v33 = sub_1BDDB0448();
  }
  else {
    uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v34 = (void (*)(void *, void))(v33 - 1);
  if (!__OFSUB__(v33, 1))
  {
    uint64_t v89 = *(uint64_t (**)(uint64_t))(*(void *)v30 + 416);
    uint64_t v35 = v89(v33 - 1);
    v92[0] = -1;
    uint64_t v88 = v35;
    if (!v35) {
      goto LABEL_80;
    }
    uint64_t v36 = v35;
    uint64_t v86 = v33 - 1;
    swift_getKeyPath();
    v90[0] = v2;
    swift_retain();
    sub_1BDDAFA58();
    swift_release();
    uint64_t v37 = &OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
    uint64_t v38 = &qword_1EBA28FF0[2];
    if (*(void *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression___format) == 2)
    {
      uint64_t v39 = *(unsigned __int8 *)(v36 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      if (qword_1EBA29970 != -1) {
        goto LABEL_113;
      }
      goto LABEL_46;
    }
    while (1)
    {
      uint64_t v40 = *v37;
      uint64_t v41 = *(unsigned __int8 *)(v36 + v40);
      if (v38[302] != -1) {
        swift_once();
      }
      if (sub_1BDCE8528(v41, qword_1EBA29968))
      {
        uint64_t v36 = v86 - 1;
        if (!__OFSUB__(v86, 1))
        {
          uint64_t v39 = v86;
          goto LABEL_56;
        }
LABEL_104:
        __break(1u);
        goto LABEL_105;
      }
      unsigned int v53 = *(unsigned __int8 *)(v36 + v40);
      uint64_t v39 = v86;
      if (v53 != 7) {
        goto LABEL_70;
      }
      uint64_t v36 = v86 - 1;
      if (__OFSUB__(v86, 1)) {
        goto LABEL_116;
      }
      uint64_t v54 = v89(v86 - 1);
      if (!v54) {
        break;
      }
      uint64_t v55 = *(unsigned __int8 *)(v54 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      swift_release();
      uint64_t v56 = v55;
      uint64_t v39 = v86;
      if ((sub_1BDCE8528(v56, qword_1EBA29968) & 1) == 0) {
        break;
      }
LABEL_56:
      while (1)
      {
        uint64_t v38 = (void *)v30;
        uint64_t v43 = v89(v36);
        if (!v43) {
          break;
        }
        int v44 = *(unsigned __int8 *)(v43 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        swift_release();
        uint64_t v45 = qword_1EBA29968;
        if (!*(void *)(qword_1EBA29968 + 16)
          || (sub_1BDDB0558(),
              uint64_t v38 = v90,
              sub_1BDDB0568(),
              uint64_t v46 = sub_1BDDB0578(),
              uint64_t v47 = -1 << *(unsigned char *)(v45 + 32),
              unint64_t v48 = v46 & ~v47,
              uint64_t v49 = v45 + 56,
              ((*(void *)(v45 + 56 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48) & 1) == 0))
        {
          swift_release();
          v92[0] = v39;
          if ((v39 & 0x8000000000000000) == 0) {
            goto LABEL_77;
          }
          goto LABEL_80;
        }
        uint64_t v50 = *(void *)(v45 + 48);
        if (*(unsigned __int8 *)(v50 + v48) != v44)
        {
          uint64_t v51 = ~v47;
          unint64_t v52 = (v48 + 1) & v51;
          if (((*(void *)(v49 + ((v52 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v52) & 1) == 0) {
            break;
          }
          while (*(unsigned __int8 *)(v50 + v52) != v44)
          {
            unint64_t v52 = (v52 + 1) & v51;
            if (((*(void *)(v49 + ((v52 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v52) & 1) == 0)
            {
              v92[0] = v39;
              swift_release();
              if ((v39 & 0x8000000000000000) == 0) {
                goto LABEL_77;
              }
              goto LABEL_80;
            }
          }
        }
        uint64_t v39 = v36;
        if (__OFSUB__(v36--, 1)) {
          goto LABEL_104;
        }
      }
      swift_release();
      v92[0] = v39;
      if (v39 < 0) {
        goto LABEL_80;
      }
      while (1)
      {
LABEL_77:
        uint64_t v37 = (uint64_t *)v86;
        if (v86 < v39)
        {
          __break(1u);
        }
        else
        {
          uint64_t v57 = (*(uint64_t (**)(void *))(*(void *)v30 + 408))(v90);
          uint64_t v38 = v58;
          if (!__OFADD__(v86, 1))
          {
            unint64_t v59 = (void (*)(void *, void))v57;
            sub_1BDD03824(v39, v86 + 1);
            v59(v90, 0);
            goto LABEL_80;
          }
        }
        __break(1u);
LABEL_113:
        swift_once();
LABEL_46:
        if ((sub_1BDCE8528(v39, qword_1EBA29968) & 1) == 0) {
          break;
        }
        swift_release();
        uint64_t v39 = v86;
        v92[0] = v86;
        if (v86 < 0) {
          goto LABEL_80;
        }
      }
    }
    uint64_t v36 = v88;
    unsigned int v53 = *(unsigned __int8 *)(v88 + v40);
LABEL_70:
    if (v53 > 0x10 || ((1 << v53) & 0x10180) == 0)
    {
      swift_release();
LABEL_80:
      uint64_t v60 = *(uint64_t (**)(void *))(*(void *)v30 + 408);
      swift_retain();
      uint64_t v34 = (void (*)(void *, void))v60(v90);
      Swift::String v62 = v61;
      MEMORY[0x1C1885EA0]();
      if (*(void *)((*v62 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v62 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_109;
      }
      goto LABEL_81;
    }
    v92[0] = v39;
    uint64_t v38 = (void *)v30;
    sub_1BDD231C0(v92);
    swift_release();
    uint64_t v39 = v92[0];
    if (v92[0] < 0) {
      goto LABEL_80;
    }
    goto LABEL_77;
  }
  __break(1u);
LABEL_109:
  sub_1BDDB0008();
LABEL_81:
  sub_1BDDB0048();
  sub_1BDDAFFD8();
  v34(v90, 0);
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x1F4188790](KeyPath, v64);
  v90[0] = v2;
  sub_1BDDAFA48();
  swift_release();
  uint64_t v65 = swift_getKeyPath();
  MEMORY[0x1F4188790](v65, v66);
  v90[0] = v2;
  sub_1BDDAFA48();
  swift_release();
  sub_1BDD42404();
  uint64_t v67 = swift_getKeyPath();
  MEMORY[0x1F4188790](v67, v68);
  v90[0] = v2;
  sub_1BDDAFA48();
  swift_release();
  uint64_t v69 = swift_getKeyPath();
  MEMORY[0x1F4188790](v69, v70);
  v90[0] = v2;
  sub_1BDDAFA48();
  swift_release();
  uint64_t v71 = (unsigned char *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
  swift_beginAccess();
  *uint64_t v71 = 1;
  uint64_t v72 = swift_getKeyPath();
  MEMORY[0x1F4188790](v72, v73);
  uint64_t v91 = v2;
  sub_1BDDAFA48();
  swift_release();
  uint64_t v74 = swift_getKeyPath();
  MEMORY[0x1F4188790](v74, v75);
  uint64_t v91 = v2;
  sub_1BDDAFA48();
  swift_release();
  swift_getKeyPath();
  uint64_t v91 = v2;
  sub_1BDDAFA58();
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    (*(void (**)(uint64_t))(*(void *)Strong + 488))(Strong);
    swift_release();
  }
  swift_release();
  swift_release();

  swift_release();
}

void CalculateExpression.bits.getter()
{
  uint64_t v0 = sub_1BDDB0028();
  *(void *)(v0 + 16) = 64;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  uint64_t v1 = (void *)CalculateExpression.lastOperand.getter();
  unint64_t v3 = (int *)resultTree(v1, v2);
  unint64_t v4 = treeIntegerValue(v3);

  if (v4)
  {
    uint64_t v5 = 95;
    while ((unint64_t)(v5 - 32) < *(void *)(v0 + 16))
    {
      *(unsigned char *)(v0 + v5) = v4 & 1;
      if (v5 != 32)
      {
        --v5;
        BOOL v6 = v4 > 1;
        v4 >>= 1;
        if (v6) {
          continue;
        }
      }
      return;
    }
    __break(1u);
  }
}

void sub_1BDD495FC(void *a1@<X8>)
{
  CalculateExpression.bits.getter();
  *a1 = v2;
}

void sub_1BDD49628()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  CalculateExpression.bits.setter(v0);
}

void CalculateExpression.bits.setter(uint64_t a1)
{
  if (*(void *)(a1 + 16) == 64)
  {
    uint64_t v1 = 0;
    unint64_t v2 = 0;
    uint64_t v3 = 1;
    for (uint64_t i = 95; i != 31; --i)
    {
      if (*(unsigned char *)(a1 + i) == 1)
      {
        BOOL v5 = __CFADD__(v1, v3);
        v1 += v3;
        if (v5)
        {
          __break(1u);
          goto LABEL_8;
        }
      }
      v3 <<= v2++ < 0x3F;
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = v1;
    uint64_t v6 = sub_1BDDB04C8();
    id v8 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269E8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BDDB44A0;
    *(void *)(inited + 32) = @"CalculateKeyEngine";
    id v10 = objc_allocWithZone(NSNumber);
    unint64_t v11 = @"CalculateKeyEngine";
    id v12 = objc_msgSend(v10, sel_initWithUnsignedInteger_, 1, v21);
    uint64_t v13 = sub_1BDCE6874(0, (unint64_t *)&qword_1EBA26990);
    *(void *)(inited + 40) = v12;
    *(void *)(inited + 64) = v13;
    *(void *)(inited + 72) = @"CalculateKeyLocales";
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF220);
    sub_1BDDAFA38();
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1BDDB37C0;
    BOOL v15 = @"CalculateKeyLocales";
    sub_1BDDAFA08();
    *(void *)(inited + 104) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA268E8);
    *(void *)(inited + 80) = v14;
    unint64_t v16 = sub_1BDCE1914(inited);
    v17._uint64_t countAndFlagsBits = v6;
    v17._object = v8;
    evaluate(_:options:)(v18, v17, (Swift::OpaquePointer)v16);
    BOOL v20 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v20) {
      CalculateExpression.lastOperand.setter(v20);
    }
    else {
      __break(1u);
    }
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

void (*CalculateExpression.bits.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  CalculateExpression.bits.getter();
  *a1 = v3;
  return sub_1BDD4990C;
}

void sub_1BDD4990C(uint64_t *a1, char a2)
{
  if (a2)
  {
    uint64_t v2 = swift_bridgeObjectRetain();
    CalculateExpression.bits.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    CalculateExpression.bits.setter(*a1);
  }
}

uint64_t CalculateExpression.ascii.getter()
{
  uint64_t v0 = (void *)CalculateExpression.lastOperand.getter();
  uint64_t v2 = (int *)resultTree(v0, v1);
  unint64_t v3 = treeIntegerValue(v2);

  uint64_t v4 = 0;
  if (v3)
  {
    do
    {
      unsigned int v5 = (((v3 & 0x3F) << 8) | (v3 >> 6)) + 33217;
      if ((v3 & 0x80) == 0) {
        unsigned int v5 = (v3 + 1);
      }
      v9[0] = (v5 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v5) >> 3)) & 7)));
      v9[0] = MEMORY[0x1C1885CA0](v9);
      v9[1] = v6;
      swift_bridgeObjectRetain();
      sub_1BDDAFE18();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = v9[0];
      BOOL v7 = v3 >= 0x100;
      v3 >>= 8;
    }
    while (v7);
  }
  return v4;
}

void CalculateExpression.unicode.getter()
{
  uint64_t v0 = (void *)CalculateExpression.lastOperand.getter();
  uint64_t v2 = (int *)resultTree(v0, v1);
  unsigned int v3 = treeIntegerValue(v2);

  if (HIWORD(v3) > 0x10u || (v3 & 0xFFFFF800) == 55296)
  {
    if ((v3 & 0xF800) == 0xD800) {
      return;
    }
  }
  else
  {
    if ((v3 & 0xFFFFFF80) != 0)
    {
      int v6 = (v3 & 0x3F) << 8;
      unsigned int v5 = (v6 | (v3 >> 6)) + 33217;
      int v7 = (v6 | (v3 >> 6) & 0x3F) << 8;
      int v8 = (((v7 | (v3 >> 12) & 0x3F) << 8) | (v3 >> 18)) - 2122219023;
      int v9 = (v7 | (v3 >> 12)) + 8487393;
      if (HIWORD(v3)) {
        int v9 = v8;
      }
      if (v3 >= 0x800) {
        unsigned int v5 = v9;
      }
      goto LABEL_14;
    }
    if (v3 <= 0xFF) {
      goto LABEL_13;
    }
    __break(1u);
  }
  if ((v3 & 0xFF80) != 0)
  {
    int v10 = (v3 & 0x3F) << 8;
    unsigned int v5 = (((unsigned __int16)v3 >> 12) | ((((unsigned __int16)v3 >> 6) & 0x3F | v10) << 8)) + 8487393;
    if ((unsigned __int16)v3 < 0x800u) {
      unsigned int v5 = (v10 | ((unsigned __int16)v3 >> 6)) + 33217;
    }
    goto LABEL_14;
  }
  if ((unsigned __int16)v3 <= 0xFFu)
  {
LABEL_13:
    unsigned int v5 = (v3 + 1);
LABEL_14:
    uint64_t v11 = (v5 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v5) >> 3)) & 7)));
    MEMORY[0x1C1885CA0](&v11);
    return;
  }
  __break(1u);
}

unint64_t sub_1BDD49BF4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = CalculateExpression.lastOperand.getter();
  *a1 = result;
  return result;
}

void sub_1BDD49C20(id *a1)
{
}

void (*CalculateExpression.lastOperand.modify(unint64_t *a1))(void **a1, char a2)
{
  a1[1] = v1;
  *a1 = CalculateExpression.lastOperand.getter();
  return sub_1BDD49C94;
}

void sub_1BDD49C94(void **a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    CalculateExpression.lastOperand.setter(v3);
  }
  else
  {
    CalculateExpression.lastOperand.setter(v2);
  }
}

uint64_t sub_1BDD49CFC()
{
  return swift_release();
}

Swift::Void __swiftcall CalculateExpression.inlineEvaluate()()
{
  CalculateExpression.inlineEvaluate(_:)(v0);
}

void CalculateExpression.inlineEvaluate(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_getKeyPath();
  v36[0] = a1;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v4 = OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation) == 1) {
    sub_1BDD3BE54();
  }
  swift_getKeyPath();
  v36[0] = a1;
  sub_1BDDAFA58();
  swift_release();
  unsigned int v5 = (id *)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalResult);
  swift_beginAccess();
  if (*v5) {
    id v6 = objc_msgSend(*v5, sel_ignoringNaN);
  }
  else {
    id v6 = 0;
  }
  swift_getKeyPath();
  v36[0] = a1;
  sub_1BDDAFA58();
  swift_release();
  if (*(unsigned char *)(a1 + v4) == 1) {
    sub_1BDD3BE54();
  }
  swift_getKeyPath();
  v36[0] = a1;
  sub_1BDDAFA58();
  swift_release();
  int v7 = (id *)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalError);
  swift_beginAccess();
  id v8 = *v7;
  id v9 = *v7;
  CalculateExpression.clear()();
  if (!v6) {
    goto LABEL_27;
  }
  type metadata accessor for CalculateExpression.CustomOperandOperation();
  id v10 = v6;
  CalculateExpression.CustomOperandOperation.__allocating_init(_:)(v10);
  CalculateExpression.update(_:)(v11);
  swift_release();
  id v12 = *(uint64_t (**)(uint64_t))(*(void *)sub_1BDCE25A0() + 520);
  uint64_t v13 = swift_retain();
  char v14 = v12(v13);
  swift_release();
  if ((v14 & 1) == 0) {
    goto LABEL_26;
  }
  BOOL v15 = *(uint64_t (**)(void *))(*(void *)sub_1BDCE25A0() + 408);
  swift_retain();
  unint64_t v16 = (void (*)(void *, void))v15(v36);
  char v18 = v17;
  uint64_t v19 = *v17;
  if (!((unint64_t)*v17 >> 62))
  {
    if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_12;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_1BDDB0448();
  swift_bridgeObjectRelease();
  if (!v31) {
    goto LABEL_29;
  }
LABEL_12:
  sub_1BDD4FEEC();
  if (v20) {
    goto LABEL_16;
  }
  if ((unint64_t)*v18 >> 62) {
    goto LABEL_38;
  }
  uint64_t v21 = *(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  unint64_t v22 = v21 - 1;
  if (__OFSUB__(v21, 1))
  {
LABEL_40:
    __break(1u);
    return;
  }
  while (1)
  {
    sub_1BDD02E58(v22);
LABEL_16:
    swift_release();
    v16(v36, 0);
    swift_release();
    uint64_t v23 = *(uint64_t (**)(void *))(*(void *)sub_1BDCE25A0() + 408);
    swift_retain();
    unint64_t v16 = (void (*)(void *, void))v23(v36);
    char v18 = v24;
    uint64_t v19 = *v24;
    if ((unint64_t)*v24 >> 62)
    {
LABEL_30:
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
      if (!v32)
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
    }
    else if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_31;
    }
    uint64_t v19 = *v18;
    if (!((unint64_t)*v18 >> 62))
    {
      if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_33;
      }
      goto LABEL_20;
    }
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    if (!v33)
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
LABEL_20:
    if ((v19 & 0xC000000000000001) == 0) {
      break;
    }
LABEL_34:
    MEMORY[0x1C18862A0](0, v19);
LABEL_23:
    if ((unint64_t)*v18 >> 62) {
      goto LABEL_36;
    }
    if (*(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_25;
    }
LABEL_37:
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    unint64_t v22 = v35 - 1;
    if (__OFSUB__(v35, 1)) {
      goto LABEL_40;
    }
  }
  if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
    goto LABEL_23;
  }
  __break(1u);
LABEL_36:
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_1BDDB0448();
  swift_bridgeObjectRelease();
  if (!v34) {
    goto LABEL_37;
  }
LABEL_25:
  sub_1BDD03824(0, 1);
  swift_release();
  v16(v36, 0);
  swift_release();
LABEL_26:

LABEL_27:
  sub_1BDD3BE54();
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x1F4188790](KeyPath, v26);
  v36[0] = v2;
  sub_1BDDAFA48();
  swift_release();
  uint64_t v27 = *(void (**)(id))(*(void *)sub_1BDCE25A0() + 352);
  id v28 = v8;
  swift_retain();
  v27(v8);
  swift_release();
  uint64_t v29 = *(void (**)(uint64_t))(*(void *)sub_1BDCE25A0() + 232);
  swift_retain();
  v29(1);
  swift_release();
  uint64_t v30 = *(void (**)(void))(*(void *)sub_1BDCE25A0() + 256);
  swift_retain();
  v30(0);
  swift_release();
}

unint64_t CalculateExpression.__allocating_init(result:error:options:base:id:)(void *a1, void *a2, uint64_t a3, char *a4, uint64_t a5)
{
  v53[0] = *a4;
  uint64_t v9 = sub_1BDDAF9F8();
  MEMORY[0x1F4188790](v9, v10);
  id v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = v14;
  uint64_t v51 = v13;
  (*(void (**)(char *, uint64_t))(v14 + 16))(v12, a5);
  uint64_t v15 = swift_allocObject();
  CalculateExpression.init(_:options:base:id:)(0, 0xE000000000000000, a3, v53, (uint64_t)v12);
  uint64_t v52 = a5;
  if (!a1)
  {
    swift_retain();
LABEL_21:
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x1F4188790](KeyPath, v32);
    *(&v48 - 2) = v15;
    *(&v48 - 1) = (uint64_t)a2;
    *(void *)unsigned int v53 = v15;
    id v33 = a2;
    sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
    sub_1BDDAFA48();

    swift_release();
    uint64_t v34 = swift_getKeyPath();
    MEMORY[0x1F4188790](v34, v35);
    *(&v48 - 2) = v15;
    *(&v48 - 1) = (uint64_t)a1;
    *(void *)unsigned int v53 = v15;
    id v36 = a1;
    sub_1BDDAFA48();
    swift_release();

    uint64_t v37 = swift_getKeyPath();
    MEMORY[0x1F4188790](v37, v38);
    *(&v48 - 2) = v15;
    *((unsigned char *)&v48 - 8) = 0;
    *(void *)unsigned int v53 = v15;
    sub_1BDDAFA48();
    swift_release();
    uint64_t v39 = *(void (**)(void *))(*(void *)sub_1BDCE25A0() + 352);
    id v40 = a2;
    swift_retain();
    v39(a2);
    swift_release();
    uint64_t v41 = *(void (**)(uint64_t))(*(void *)sub_1BDCE25A0() + 232);
    swift_retain();
    v41(1);
    swift_release();
    uint64_t v42 = *(void (**)(void))(*(void *)sub_1BDCE25A0() + 256);
    swift_retain();
    v42(0);
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v52, v51);
    return v15;
  }
  type metadata accessor for CalculateExpression.CustomOperandOperation();
  id v16 = a1;
  swift_retain();
  id v17 = v16;
  CalculateExpression.CustomOperandOperation.__allocating_init(_:)(v17);
  CalculateExpression.update(_:)(v18);
  swift_release();
  uint64_t v19 = *(uint64_t (**)(uint64_t))(*(void *)sub_1BDCE25A0() + 520);
  uint64_t v20 = swift_retain();
  LOBYTE(v16) = v19(v20);
  swift_release();
  if ((v16 & 1) == 0)
  {

    goto LABEL_21;
  }
  uint64_t v21 = *(uint64_t (**)(char *))(*(void *)sub_1BDCE25A0() + 408);
  swift_retain();
  uint64_t v22 = v21(v53);
  unsigned int v24 = v23;
  uint64_t v25 = *v23;
  if ((unint64_t)*v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
    if (v43) {
      goto LABEL_5;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (!*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_23;
  }
LABEL_5:
  sub_1BDD4FEEC();
  if (v26) {
    goto LABEL_9;
  }
  if ((unint64_t)*v24 >> 62) {
    goto LABEL_32;
  }
  uint64_t v27 = *(void *)((*v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
  unint64_t result = v27 - 1;
  if (!__OFSUB__(v27, 1))
  {
    do
    {
      sub_1BDD02E58(result);
LABEL_9:
      swift_release();
      ((void (*)(char *, void))v22)(v53, 0);
      swift_release();
      uint64_t v29 = *(uint64_t (**)(char *))(*(void *)sub_1BDCE25A0() + 408);
      swift_retain();
      uint64_t v22 = v29(v53);
      unsigned int v24 = v30;
      uint64_t v25 = *v30;
      if ((unint64_t)*v30 >> 62)
      {
LABEL_24:
        swift_bridgeObjectRetain();
        uint64_t v44 = sub_1BDDB0448();
        swift_bridgeObjectRelease();
        if (!v44)
        {
LABEL_25:
          __break(1u);
          goto LABEL_26;
        }
      }
      else if (!*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_25;
      }
      uint64_t v25 = *v24;
      if (!((unint64_t)*v24 >> 62))
      {
        if (!*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_27;
        }
        goto LABEL_13;
      }
LABEL_26:
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
      if (!v45)
      {
LABEL_27:
        __break(1u);
LABEL_28:
        id v17 = (id)v22;
        MEMORY[0x1C18862A0](0, v25);
        goto LABEL_16;
      }
LABEL_13:
      id v49 = v17;
      if ((v25 & 0xC000000000000001) != 0) {
        goto LABEL_28;
      }
      if (!*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_30;
      }
      id v17 = (id)v22;
      swift_retain();
LABEL_16:
      uint64_t v22 = *v24;
      if (!((unint64_t)*v24 >> 62))
      {
        if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_18;
        }
        goto LABEL_31;
      }
LABEL_30:
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
      if (v46)
      {
LABEL_18:
        sub_1BDD03824(0, 1);
        swift_release();
        ((void (*)(char *, void))v17)(v53, 0);
        swift_release();

        goto LABEL_21;
      }
LABEL_31:
      __break(1u);
LABEL_32:
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
      unint64_t result = v47 - 1;
    }
    while (!__OFSUB__(v47, 1));
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDD4AC2C()
{
  return swift_release();
}

uint64_t sub_1BDD4AD00()
{
  return sub_1BDD4AD28();
}

uint64_t sub_1BDD4AD14()
{
  return sub_1BDD4AD28();
}

uint64_t sub_1BDD4AD28()
{
  return swift_retain();
}

uint64_t sub_1BDD4ADE4()
{
  return sub_1BDD4B084((uint64_t)&unk_1BDDB47E0, &OBJC_IVAR____TtC9Calculate19CalculateExpression___updatePlain);
}

uint64_t sub_1BDD4ADF8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BDD4B234(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___updatePlain, a2);
}

uint64_t sub_1BDD4AE0C()
{
  return swift_release();
}

uint64_t sub_1BDD4AEDC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1BDD4B3E4(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___plain, a2);
}

uint64_t sub_1BDD4AEF0()
{
  return swift_release();
}

void sub_1BDD4AFD0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  void *v1 = v1[4];
  swift_getKeyPath();
  sub_1BDDAFA68();
  swift_release();
  free(v1);
}

uint64_t sub_1BDD4B05C()
{
  return sub_1BDD4B084((uint64_t)&unk_1BDDB49E8, &OBJC_IVAR____TtC9Calculate19CalculateExpression___updateRich);
}

uint64_t sub_1BDD4B070()
{
  return sub_1BDD4B084((uint64_t)&unk_1BDDB48F8, &OBJC_IVAR____TtC9Calculate19CalculateExpression___notifyUpdatedRich);
}

uint64_t sub_1BDD4B084(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v4 = (unsigned __int8 *)(v2 + *a2);
  swift_beginAccess();
  return *v4;
}

uint64_t sub_1BDD4B13C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BDD4B234(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___notifyUpdatedRich, a2);
}

uint64_t sub_1BDD4B150()
{
  return swift_release();
}

uint64_t sub_1BDD4B220@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1BDD4B234(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___updateRich, a2);
}

uint64_t sub_1BDD4B234@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, unsigned char *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  id v6 = (unsigned char *)(v5 + *a2);
  uint64_t result = swift_beginAccess();
  *a3 = *v6;
  return result;
}

uint64_t sub_1BDD4B300()
{
  return swift_release();
}

uint64_t sub_1BDD4B3D0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1BDD4B3E4(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression___rich, a2);
}

uint64_t sub_1BDD4B3E4@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  id v6 = (void *)(v5 + *a2);
  swift_beginAccess();
  *a3 = *v6;
  return swift_retain();
}

uint64_t sub_1BDD4B4B4()
{
  return swift_release();
}

uint64_t sub_1BDD4B594@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1BDD4B5A8(a1, &OBJC_IVAR____TtC9Calculate19CalculateExpression__postfixStack, a2);
}

uint64_t sub_1BDD4B5A8@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  *a3 = *(void *)(v5 + *a2);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDD4B660()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDD4B740@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression__activeOperation);
  return swift_retain();
}

uint64_t sub_1BDD4B7F4()
{
  return swift_release();
}

uint64_t CalculateExpression.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  uint64_t v2 = sub_1BDDAF9F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_weakDestroy();
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___observationRegistrar;
  uint64_t v4 = sub_1BDDAFA98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t CalculateExpression.__deallocating_deinit()
{
  CalculateExpression.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t CalculateExpression.hashValue.getter()
{
  sub_1BDDB0558();
  uint64_t v1 = sub_1BDDAF9F8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1, v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v8 = v0;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v6 = v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v6, v1);
  sub_1BDD1E58C((unint64_t *)&qword_1EA0DEFD0);
  sub_1BDDAFCF8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return sub_1BDDB0578();
}

uint64_t sub_1BDD4BCCC()
{
  return CalculateExpression.hashValue.getter();
}

uint64_t sub_1BDD4BCF0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1BDDAF9F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v9[1] = v1;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v7 = v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v7, v2);
  sub_1BDD1E58C((unint64_t *)&qword_1EA0DEFD0);
  sub_1BDDAFCF8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_1BDD4BE98()
{
  uint64_t v1 = *v0;
  sub_1BDDB0558();
  uint64_t v2 = sub_1BDDAF9F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v9 = v1;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v7 = v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v7, v2);
  sub_1BDD1E58C((unint64_t *)&qword_1EA0DEFD0);
  sub_1BDDAFCF8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return sub_1BDDB0578();
}

uint64_t sub_1BDD4C044@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC9Calculate19CalculateExpression__id;
  swift_beginAccess();
  uint64_t v5 = sub_1BDDAF9F8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t sub_1BDD4C140()
{
  return CalculateExpression.debugDescription.getter();
}

uint64_t sub_1BDD4C164(uint64_t *a1)
{
  uint64_t v2 = v1;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  sub_1BDD51DA0((uint64_t)(a1 + 2), (uint64_t)v53, &qword_1EA0DF228);
  sub_1BDD51DA0((uint64_t)v53, (uint64_t)&v54, &qword_1EA0DF228);
  uint64_t v5 = v54;
  if (!Strong)
  {
    if (v54)
    {
      char v6 = 0;
      return v6 & 1;
    }
LABEL_7:
    uint64_t v8 = *a1;
    uint64_t v7 = a1[1];
    if (v8 == sub_1BDD3C8D4() && v7 == v9)
    {
      swift_bridgeObjectRelease();
      char v51 = 0;
    }
    else
    {
      char v10 = sub_1BDDB04E8();
      swift_bridgeObjectRelease();
      char v51 = v10 ^ 1;
    }
    uint64_t v11 = (unsigned char *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
    swift_beginAccess();
    *uint64_t v11 = 0;
    if (a1[5])
    {
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x1F4188790](KeyPath, v13);
      swift_retain();
      sub_1BDDAFA48();
      swift_release();
      uint64_t v14 = swift_getKeyPath();
      MEMORY[0x1F4188790](v14, v15);
      sub_1BDDAFA48();
      swift_release();
      swift_release();
      if (!a1[6]) {
        goto LABEL_14;
      }
    }
    else if (!a1[6])
    {
LABEL_14:
      swift_getKeyPath();
      sub_1BDDAFA58();
      swift_release();
      uint64_t v20 = (void *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression___documentReferenceCount);
      swift_beginAccess();
      if (*v20 != a1[10])
      {
        uint64_t v21 = swift_getKeyPath();
        MEMORY[0x1F4188790](v21, v22);
        sub_1BDDAFA48();
        swift_release();
      }
      swift_getKeyPath();
      sub_1BDDAFA58();
      swift_release();
      swift_beginAccess();
      uint64_t v23 = a1[4];
      uint64_t v24 = swift_bridgeObjectRetain();
      char v25 = sub_1BDD4D6E0(v24, v23);
      swift_bridgeObjectRelease();
      if ((v25 & 1) == 0)
      {
        uint64_t v26 = swift_getKeyPath();
        MEMORY[0x1F4188790](v26, v27);
        swift_bridgeObjectRetain();
        sub_1BDDAFA48();
        swift_release();
        swift_bridgeObjectRelease();
      }
      swift_getKeyPath();
      sub_1BDDAFA58();
      swift_release();
      id v28 = (id *)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalError);
      swift_beginAccess();
      if (*v28
        && (id v29 = *v28,
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF028),
            sub_1BDCE6874(0, &qword_1EA0DF230),
            swift_dynamicCast()))
      {
        uint64_t v30 = v52;
        uint64_t v31 = (void *)a1[8];
        if (!v31) {
          goto LABEL_27;
        }
      }
      else
      {
        uint64_t v30 = 0;
        uint64_t v31 = (void *)a1[8];
        if (!v31) {
          goto LABEL_27;
        }
      }
      id v32 = v31;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF028);
      sub_1BDCE6874(0, &qword_1EA0DF230);
      if (swift_dynamicCast())
      {
        uint64_t v33 = v52;
        if (v30)
        {
LABEL_28:
          swift_unknownObjectRelease();
          if (v33)
          {
            swift_unknownObjectRelease();
            if (v30 == v33)
            {
LABEL_31:
              swift_getKeyPath();
              sub_1BDDAFA58();
              swift_release();
              uint64_t v37 = (void **)(v2 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalResult);
              swift_beginAccess();
              uint64_t v38 = (void *)a1[7];
              if (*v37)
              {
                if (v38 && *v37 == v38) {
                  goto LABEL_39;
                }
              }
              else if (!v38)
              {
LABEL_39:
                sub_1BDCE1A44(MEMORY[0x1E4FBC860]);
                uint64_t v42 = swift_getKeyPath();
                MEMORY[0x1F4188790](v42, v43);
                sub_1BDDAFA48();
                swift_release();
                swift_bridgeObjectRelease();
                uint64_t v44 = swift_getKeyPath();
                MEMORY[0x1F4188790](v44, v45);
                sub_1BDDAFA48();
                swift_release();
                uint64_t v46 = swift_getKeyPath();
                MEMORY[0x1F4188790](v46, v47);
                sub_1BDDAFA48();
                swift_release();
                uint64_t v48 = swift_getKeyPath();
                MEMORY[0x1F4188790](v48, v49);
                sub_1BDDAFA48();
                swift_release();
                char v6 = v51;
                return v6 & 1;
              }
              uint64_t v39 = swift_getKeyPath();
              MEMORY[0x1F4188790](v39, v40);
              id v41 = v38;
              sub_1BDDAFA48();
              swift_release();

              goto LABEL_39;
            }
          }
LABEL_30:
          uint64_t v34 = swift_getKeyPath();
          MEMORY[0x1F4188790](v34, v35);
          id v36 = v31;
          sub_1BDDAFA48();

          swift_release();
          goto LABEL_31;
        }
LABEL_25:
        if (!v33) {
          goto LABEL_31;
        }
        swift_unknownObjectRelease();
        goto LABEL_30;
      }
LABEL_27:
      uint64_t v33 = 0;
      if (v30) {
        goto LABEL_28;
      }
      goto LABEL_25;
    }
    uint64_t v16 = swift_getKeyPath();
    MEMORY[0x1F4188790](v16, v17);
    swift_retain();
    sub_1BDDAFA48();
    swift_release();
    uint64_t v18 = swift_getKeyPath();
    MEMORY[0x1F4188790](v18, v19);
    sub_1BDDAFA48();
    swift_release();
    swift_release();
    goto LABEL_14;
  }
  swift_release();
  char v6 = 0;
  if (v5 && Strong == v5) {
    goto LABEL_7;
  }
  return v6 & 1;
}

uint64_t CalculateExpression.graphReferenceCount.getter()
{
  return sub_1BDD3DBD8((uint64_t)&unk_1BDDB4718, &OBJC_IVAR____TtC9Calculate19CalculateExpression___graphReferenceCount);
}

uint64_t CalculateExpression.graphReferenceCount.setter()
{
  return swift_release();
}

void (*CalculateExpression.graphReferenceCount.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  void v3[5] = v1;
  swift_getKeyPath();
  v3[6] = OBJC_IVAR____TtC9Calculate19CalculateExpression___observationRegistrar;
  void *v3 = v1;
  v3[7] = sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v4 = (void *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___graphReferenceCount);
  swift_beginAccess();
  v3[3] = *v4;
  return sub_1BDD4CE0C;
}

void sub_1BDD4CE0C(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  v1[4] = v1[5];
  sub_1BDDAFA48();
  swift_release();
  free(v1);
}

uint64_t CalculateExpression.documentReferenceCount.getter()
{
  return sub_1BDD3DBD8((uint64_t)&unk_1BDDB46F0, &OBJC_IVAR____TtC9Calculate19CalculateExpression___documentReferenceCount);
}

uint64_t CalculateExpression.documentReferenceCount.setter()
{
  return swift_release();
}

void (*CalculateExpression.documentReferenceCount.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  void v3[5] = v1;
  swift_getKeyPath();
  v3[6] = OBJC_IVAR____TtC9Calculate19CalculateExpression___observationRegistrar;
  void *v3 = v1;
  v3[7] = sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v4 = (void *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___documentReferenceCount);
  swift_beginAccess();
  v3[3] = *v4;
  return sub_1BDD4D0B8;
}

void sub_1BDD4D0B8(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  v1[4] = v1[5];
  sub_1BDDAFA48();
  swift_release();
  free(v1);
}

uint64_t sub_1BDD4D184(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  int v6 = a5;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = Strong;
    swift_getKeyPath();
    sub_1BDDAFA58();
    swift_release();
    uint64_t v9 = (unint64_t *)(v8 + OBJC_IVAR____TtC9Calculate19CalculateExpression__options);
    swift_beginAccess();
    unint64_t v10 = *v9;
    swift_bridgeObjectRetain();
    swift_release();
  }
  else
  {
    unint64_t v10 = sub_1BDCE1914(MEMORY[0x1E4FBC860]);
  }
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  swift_beginAccess();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_1BDD3DA44(v11, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BDDB37C0;
  *(void *)(inited + 32) = @"CalculateKeyNumberFormatter";
  *(void *)(inited + 64) = sub_1BDCE6874(0, &qword_1EBA26950);
  *(void *)(inited + 40) = a2;
  uint64_t v14 = @"CalculateKeyNumberFormatter";
  id v15 = a2;
  unint64_t v16 = sub_1BDCE1914(inited);
  sub_1BDD3DA44(v16, v12);
  uint64_t v17 = (void *)sub_1BDDAFD38();
  type metadata accessor for CalculateKey();
  sub_1BDCF1294(&qword_1EBA26918, (void (*)(uint64_t))type metadata accessor for CalculateKey);
  uint64_t v18 = (void *)sub_1BDDAFC68();
  swift_bridgeObjectRelease();
  id v19 = 0;
  if (v6 != 2) {
    id v19 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v6 & 1);
  }
  id v20 = CalculateTermFormatDecimalString(v17, v18, v19);

  if (!v20) {
    return 0;
  }
  uint64_t v21 = sub_1BDDAFD68();

  return v21;
}

uint64_t sub_1BDD4D4C4(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void CalculateExpression.accessibilityMathEquationDescription.getter()
{
  uint64_t v0 = self;
  uint64_t v1 = *(void (**)(uint64_t))(*(void *)sub_1BDCE25A0() + 752);
  uint64_t v2 = swift_retain();
  v1(v2);
  swift_release();
  uint64_t v3 = (void *)sub_1BDDAFC68();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v0, sel_mathExpressionWithDictionary_, v3);

  if (v4)
  {
    sub_1BDDB0238();
    swift_unknownObjectRelease();
    sub_1BDD198E8(&v6, &v7);
    sub_1BDCE6874(0, &qword_1EBA26970);
    swift_dynamicCast();
    if (objc_msgSend(v5, sel_speakableDescription))
    {
      sub_1BDDAF968();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1BDD4D680()
{
  return sub_1BDDB0578();
}

void *sub_1BDD4D6C4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1BDD4D6D4(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1BDD4D6E0(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v19 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v10 >= v19) {
      return 1;
    }
    unint64_t v11 = *(void *)(v4 + 8 * v10);
    ++v3;
    if (!v11)
    {
      int64_t v3 = v10 + 1;
      if (v10 + 1 >= v19) {
        return 1;
      }
      unint64_t v11 = *(void *)(v4 + 8 * v3);
      if (!v11)
      {
        int64_t v3 = v10 + 2;
        if (v10 + 2 >= v19) {
          return 1;
        }
        unint64_t v11 = *(void *)(v4 + 8 * v3);
        if (!v11)
        {
          int64_t v3 = v10 + 3;
          if (v10 + 3 >= v19) {
            return 1;
          }
          unint64_t v11 = *(void *)(v4 + 8 * v3);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v3 << 6);
LABEL_24:
    uint64_t v13 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v9);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BDD13EB4(v14, v15);
    char v17 = v16;
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      swift_release();
      return 0;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF238);
    sub_1BDD19AC4(&qword_1EA0DF240, &qword_1EA0DF238);
    char v18 = sub_1BDDAFD28();
    uint64_t result = swift_release();
    if ((v18 & 1) == 0) {
      return 0;
    }
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v19) {
    return 1;
  }
  unint64_t v11 = *(void *)(v4 + 8 * v12);
  if (v11)
  {
    int64_t v3 = v12;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v3 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v3 >= v19) {
      return 1;
    }
    unint64_t v11 = *(void *)(v4 + 8 * v3);
    ++v12;
    if (v11) {
      goto LABEL_23;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

unint64_t sub_1BDD4D928(uint64_t a1)
{
  sub_1BDDB0558();
  sub_1BDDB0568();
  uint64_t v2 = sub_1BDDB0578();
  return sub_1BDD14098(a1, v2);
}

uint64_t sub_1BDD4D994()
{
  return sub_1BDD3B408(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_1BDD4D9C0(uint64_t a1)
{
  sub_1BDDAFD68();
  sub_1BDDB0558();
  sub_1BDDAFDB8();
  uint64_t v2 = sub_1BDDB0578();
  swift_bridgeObjectRelease();
  return sub_1BDCE6104(a1, v2);
}

uint64_t sub_1BDD4DA50(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269A0);
    uint64_t v2 = sub_1BDDB0308();
    uint64_t v14 = v2;
    sub_1BDDB0278();
    if (sub_1BDDB02A8())
    {
      type metadata accessor for CalculateExpression.Operation();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_1BDCF0E64();
          uint64_t v2 = v14;
        }
        sub_1BDCF1294(&qword_1EBA26898, (void (*)(uint64_t))type metadata accessor for CalculateExpression.Operation);
        uint64_t result = sub_1BDDAFCE8();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_1BDDB02A8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

unint64_t sub_1BDD4DC8C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for CalculateExpression.Operation();
  sub_1BDCF1294(&qword_1EBA26898, (void (*)(uint64_t))type metadata accessor for CalculateExpression.Operation);
  sub_1BDDAFCE8();
  unint64_t result = sub_1BDDB0268();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_1BDD4DD74()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269A0);
  uint64_t v3 = sub_1BDDB02F8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v25 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v26 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v26) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v26) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v25 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v26) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v25 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
    type metadata accessor for CalculateExpression.Operation();
    sub_1BDCF1294(&qword_1EBA26898, (void (*)(uint64_t))type metadata accessor for CalculateExpression.Operation);
    swift_retain();
    uint64_t result = sub_1BDDAFCE8();
    uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v21 = 0;
      unint64_t v22 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v22 && (v21 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v23 = v20 == v22;
        if (v20 == v22) {
          unint64_t v20 = 0;
        }
        v21 |= v23;
        uint64_t v24 = *(void *)(v8 + 8 * v20);
      }
      while (v24 == -1);
      unint64_t v11 = __clz(__rbit64(~v24)) + (v20 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v26)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v25 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v26) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

double sub_1BDD4E074@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1BDD4D9C0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BDD17E30();
      uint64_t v9 = v11;
    }

    sub_1BDD198E8((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_1BDD4E788(v6, v9);
    uint64_t *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1BDD4E16C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF270);
  char v37 = a2;
  uint64_t v6 = sub_1BDDB0478();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    id v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1BDDB0558();
    sub_1BDDAFDB8();
    uint64_t result = sub_1BDDB0578();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1BDD4E478(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF250);
  char v38 = a2;
  uint64_t v6 = sub_1BDDB0478();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    id v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      id v33 = v32;
      swift_bridgeObjectRetain();
    }
    sub_1BDDB0558();
    sub_1BDDAFDB8();
    uint64_t result = sub_1BDDB0578();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

unint64_t sub_1BDD4E788(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1BDDB0258();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        unint64_t v10 = *(void **)(*(void *)(a2 + 48) + 8 * v6);
        sub_1BDDAFD68();
        sub_1BDDB0558();
        id v11 = v10;
        sub_1BDDAFDB8();
        uint64_t v12 = sub_1BDDB0578();

        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(a2 + 48);
          unint64_t v15 = (void *)(v14 + 8 * v3);
          unint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || v15 >= v16 + 1) {
            *unint64_t v15 = *v16;
          }
          uint64_t v17 = *(void *)(a2 + 56);
          uint64_t v18 = (_OWORD *)(v17 + 32 * v3);
          unint64_t v19 = (_OWORD *)(v17 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v18 >= v19 + 2))
          {
            long long v9 = v19[1];
            *uint64_t v18 = *v19;
            v18[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *unint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1BDD4E97C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1BDD13EB4(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1BDD4EDFC();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1BDD4E16C(result, a4 & 1);
  uint64_t result = sub_1BDD13EB4(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_1BDDB0528();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v20 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v20 = a2;
  v20[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  unsigned __int8 v18[2] = v23;
  return swift_bridgeObjectRetain();
}

void sub_1BDD4EAE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1BDD13EB4(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1BDD4EFAC();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1BDD4E478(v15, a4 & 1);
  unint64_t v20 = sub_1BDD13EB4(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_1BDDB0528();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  BOOL v22 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  unsigned __int8 v18[2] = v25;
  swift_bridgeObjectRetain();
}

_OWORD *sub_1BDD4EC50(_OWORD *a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_1BDD4D9C0((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1BDD17E30();
      goto LABEL_7;
    }
    sub_1BDD17964(v12, a3 & 1);
    unint64_t v18 = sub_1BDD4D9C0((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for CalculateKey();
    uint64_t result = (_OWORD *)sub_1BDDB0528();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    char v16 = (_OWORD *)(v15[7] + 32 * v9);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
    return sub_1BDD198E8(a1, v16);
  }
LABEL_13:
  sub_1BDD4ED94(v9, (uint64_t)a2, a1, v15);
  return a2;
}

_OWORD *sub_1BDD4ED94(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_1BDD198E8(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

void *sub_1BDD4EDFC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF270);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1BDDB0468();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    BOOL v22 = (void *)(*(void *)(v4 + 48) + v16);
    void *v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BDD4EFAC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF250);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1BDDB0468();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void **)(*(void *)(v2 + 56) + v20);
    BOOL v22 = (void *)(*(void *)(v4 + 48) + v16);
    void *v22 = v18;
    v22[1] = v19;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    id v23 = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1BDD4F164(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v46 = a1;
  uint64_t v47 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v48 = v8;
  uint64_t v49 = 0;
  uint64_t v50 = v11 & v9;
  uint64_t v51 = a2;
  uint64_t v52 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BDD18154((uint64_t)&v44);
  unint64_t v12 = v44;
  if (!v44) {
    goto LABEL_27;
  }
  sub_1BDD198E8(v45, v43);
  int64_t v13 = *(void **)a5;
  unint64_t v15 = sub_1BDD4D9C0((uint64_t)v12);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v19 = v14;
  if (v13[3] >= v18)
  {
    if (a4)
    {
      if (v14) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_1BDD17E30();
      if (v19) {
        goto LABEL_12;
      }
    }
LABEL_14:
    id v23 = *(void **)a5;
    *(void *)(*(void *)a5 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    *(void *)(v23[6] + 8 * v15) = v12;
    sub_1BDD198E8(v43, (_OWORD *)(v23[7] + 32 * v15));
    uint64_t v24 = v23[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v23[2] = v26;
LABEL_16:
    sub_1BDD18154((uint64_t)&v44);
    for (uint64_t i = v44; v44; uint64_t i = v44)
    {
      sub_1BDD198E8(v45, v43);
      id v29 = *(void **)a5;
      unint64_t v31 = sub_1BDD4D9C0((uint64_t)i);
      uint64_t v32 = v29[2];
      BOOL v33 = (v30 & 1) == 0;
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33)) {
        goto LABEL_28;
      }
      char v35 = v30;
      if (v29[3] < v34)
      {
        sub_1BDD17964(v34, 1);
        unint64_t v36 = sub_1BDD4D9C0((uint64_t)i);
        if ((v35 & 1) != (v37 & 1)) {
          goto LABEL_30;
        }
        unint64_t v31 = v36;
      }
      if (v35)
      {
        sub_1BDD18D98((uint64_t)v43, (uint64_t)v42);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);

        uint64_t v28 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v31);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
        sub_1BDD198E8(v42, v28);
      }
      else
      {
        char v38 = *(void **)a5;
        *(void *)(*(void *)a5 + 8 * (v31 >> 6) + 64) |= 1 << v31;
        *(void *)(v38[6] + 8 * v31) = i;
        sub_1BDD198E8(v43, (_OWORD *)(v38[7] + 32 * v31));
        uint64_t v39 = v38[2];
        BOOL v25 = __OFADD__(v39, 1);
        uint64_t v40 = v39 + 1;
        if (v25) {
          goto LABEL_29;
        }
        void v38[2] = v40;
      }
      sub_1BDD18154((uint64_t)&v44);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BDCE68B0();
    return swift_release();
  }
  sub_1BDD17964(v18, a4 & 1);
  unint64_t v20 = sub_1BDD4D9C0((uint64_t)v12);
  if ((v19 & 1) == (v21 & 1))
  {
    unint64_t v15 = v20;
    if ((v19 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_12:
    sub_1BDD18D98((uint64_t)v43, (uint64_t)v42);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);

    BOOL v22 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v15);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
    sub_1BDD198E8(v42, v22);
    goto LABEL_16;
  }
LABEL_30:
  type metadata accessor for CalculateKey();
  uint64_t result = sub_1BDDB0528();
  __break(1u);
  return result;
}

uint64_t sub_1BDD4F490(unint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  void v28[2] = *MEMORY[0x1E4F143B8];
  if (!*(void *)(a2 + 16))
  {
LABEL_17:
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  v28[0] = a1;
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_4;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    return v2;
  }
LABEL_23:
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1BDDB0448();
  if (!v4) {
    goto LABEL_24;
  }
LABEL_4:
  unint64_t v5 = 0;
  uint64_t v24 = a1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v25 = a1 & 0xC000000000000001;
  uint64_t v22 = v4;
  unint64_t v23 = a1 + 32;
  uint64_t v6 = v2 + 56;
  while (1)
  {
    if (v25)
    {
      uint64_t v7 = MEMORY[0x1C18862A0](v5, a1);
      BOOL v8 = __OFADD__(v5++, 1);
      if (v8)
      {
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
    }
    else
    {
      if (v5 >= *(void *)(v24 + 16))
      {
        __break(1u);
        goto LABEL_23;
      }
      uint64_t v7 = *(void *)(v23 + 8 * v5);
      swift_retain();
      BOOL v8 = __OFADD__(v5++, 1);
      if (v8) {
        goto LABEL_16;
      }
    }
    v28[1] = v5;
    uint64_t v27 = v7;
    type metadata accessor for CalculateExpression.Operation();
    sub_1BDCF1294(&qword_1EBA26898, (void (*)(uint64_t))type metadata accessor for CalculateExpression.Operation);
    uint64_t v9 = sub_1BDDAFCE8();
    uint64_t v10 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v11 = v9 & ~v10;
    if ((*(void *)(v6 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11)) {
      break;
    }
LABEL_5:
    swift_release();
    if (v5 == v22) {
      goto LABEL_24;
    }
  }
  uint64_t v12 = ~v10;
  sub_1BDCF1294((unint64_t *)&qword_1EBA268A0, (void (*)(uint64_t))type metadata accessor for CalculateExpression.Operation);
  while (1)
  {
    uint64_t v26 = *(void *)(*(void *)(v2 + 48) + 8 * v11);
    if (sub_1BDDAFD28()) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v12;
    if (((*(void *)(v6 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
      goto LABEL_5;
    }
  }
  uint64_t isStackAllocationSafe = swift_release();
  char v15 = *(unsigned char *)(v2 + 32);
  unint64_t v16 = (unint64_t)((1 << v15) + 63) >> 6;
  size_t v17 = 8 * v16;
  if ((v15 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe, v14);
    memcpy((char *)&v22 - ((v17 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v17);
    uint64_t v18 = sub_1BDD4F858((uint64_t)&v22 - ((v17 + 15) & 0x3FFFFFFFFFFFFFF0), v16, v2, v11, v28);
    swift_release();
    swift_bridgeObjectRelease();
    return v18;
  }
  else
  {
    char v19 = (void *)swift_slowAlloc();
    memcpy(v19, (const void *)(v2 + 56), v17);
    uint64_t v20 = sub_1BDD4F858((uint64_t)v19, v16, v2, v11, v28);
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x1C18870B0](v19, -1, -1);
    return v20;
  }
}

uint64_t sub_1BDD4F858(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v22 = (unint64_t *)result;
  uint64_t v23 = v7 - 1;
  uint64_t v8 = a3 + 56;
  while (1)
  {
    unint64_t v9 = a5[1];
    if (*a5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1BDDB0448();
      uint64_t result = swift_bridgeObjectRelease();
      if (v9 == v20)
      {
LABEL_22:
        swift_retain();
        return sub_1BDD4FB08(v22, a2, v23, a3);
      }
    }
    else if (v9 == *(void *)((*a5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_22;
    }
    if ((*a5 & 0xC000000000000001) != 0)
    {
      uint64_t result = MEMORY[0x1C18862A0](v9);
      goto LABEL_9;
    }
    if ((v9 & 0x8000000000000000) != 0) {
      break;
    }
    if (v9 >= *(void *)((*a5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_24;
    }
    uint64_t result = swift_retain();
LABEL_9:
    uint64_t v10 = a5[1];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_25;
    }
    a5[1] = v12;
    type metadata accessor for CalculateExpression.Operation();
    sub_1BDCF1294(&qword_1EBA26898, (void (*)(uint64_t))type metadata accessor for CalculateExpression.Operation);
    uint64_t v13 = sub_1BDDAFCE8();
    uint64_t v14 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v15 = v13 & ~v14;
    if ((*(void *)(v8 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
    {
      uint64_t v16 = ~v14;
      sub_1BDCF1294((unint64_t *)&qword_1EBA268A0, (void (*)(uint64_t))type metadata accessor for CalculateExpression.Operation);
      while ((sub_1BDDAFD28() & 1) == 0)
      {
        unint64_t v15 = (v15 + 1) & v16;
        if (((*(void *)(v8 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
          goto LABEL_2;
        }
      }
      uint64_t result = swift_release();
      uint64_t v17 = (v15 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v18 = *(unint64_t *)((char *)v22 + v17);
      *(unint64_t *)((char *)v22 + v17) = v18 & ~(1 << v15);
      if ((v18 & (1 << v15)) != 0)
      {
        uint64_t v19 = v23 - 1;
        if (__OFSUB__(v23, 1)) {
          goto LABEL_26;
        }
        --v23;
        if (!v19) {
          return MEMORY[0x1E4FBC870];
        }
      }
    }
    else
    {
LABEL_2:
      uint64_t result = swift_release();
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1BDD4FB08(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269A0);
  uint64_t result = sub_1BDDB0318();
  uint64_t v6 = result;
  uint64_t v28 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      uint64_t v30 = v10;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v28)
      {
LABEL_37:
        swift_release();
        return v6;
      }
      unint64_t v15 = a1[v14];
      uint64_t v16 = v10 + 1;
      if (!v15)
      {
        uint64_t v16 = v10 + 2;
        if (v10 + 2 >= v28) {
          goto LABEL_37;
        }
        unint64_t v15 = a1[v16];
        if (!v15)
        {
          uint64_t v16 = v10 + 3;
          if (v10 + 3 >= v28) {
            goto LABEL_37;
          }
          unint64_t v15 = a1[v16];
          if (!v15)
          {
            uint64_t v17 = v10 + 4;
            if (v10 + 4 >= v28) {
              goto LABEL_37;
            }
            unint64_t v15 = a1[v17];
            if (!v15)
            {
              while (1)
              {
                uint64_t v16 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v16 >= v28) {
                  goto LABEL_37;
                }
                unint64_t v15 = a1[v16];
                ++v17;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v16 = v10 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      uint64_t v30 = v16;
      unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    uint64_t v18 = *(void *)(*(void *)(a4 + 48) + 8 * v13);
    type metadata accessor for CalculateExpression.Operation();
    sub_1BDCF1294(&qword_1EBA26898, (void (*)(uint64_t))type metadata accessor for CalculateExpression.Operation);
    swift_retain();
    uint64_t result = sub_1BDDAFCE8();
    uint64_t v19 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v11 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v11 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v6 + 48) + 8 * v22) = v18;
    ++*(void *)(v6 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v10 = v30;
    if (!v5) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1BDD4FDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1BDDAFEF8();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1BDD05D28();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v9 = (void *)sub_1BDDB03C8();
  }
LABEL_7:
  uint64_t v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

void sub_1BDD4FEEC()
{
  unint64_t v1 = *v0;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v0 = v1;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v1 & 0x8000000000000000) != 0
    || (v1 & 0x4000000000000000) != 0)
  {
    sub_1BDD02F24(v1);
    unint64_t v1 = v3;
    *uint64_t v0 = v3;
  }
  uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v4 - 1;
    sub_1BDDAFFD8();
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1BDD4FF5C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF278);
    unint64_t v3 = (void *)sub_1BDDB0488();
    for (uint64_t i = (char *)(a1 + 33); ; i += 2)
    {
      unsigned __int8 v5 = *(i - 1);
      char v6 = *i;
      unint64_t result = sub_1BDCF0668(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      *(unsigned char *)(v3[7] + result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

unint64_t sub_1BDD50034(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269D0);
    unint64_t v3 = (void *)sub_1BDDB0488();
    for (uint64_t i = (unsigned char *)(a1 + 40); ; i += 16)
    {
      uint64_t v5 = *((void *)i - 1);
      char v6 = *i;
      unint64_t result = sub_1BDD4D928(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v3[6] + 8 * result) = v5;
      *(unsigned char *)(v3[7] + result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

uint64_t sub_1BDD5010C(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = a2;
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    unint64_t v3 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v4 = *(v3 - 1);
      uint64_t v5 = *v3;
      swift_bridgeObjectRetain();
      sub_1BDD148D8(&v7, v4, v5);
      swift_bridgeObjectRelease();
      v3 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return a2;
}

uint64_t sub_1BDD5018C()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  uint64_t v2 = (unsigned char *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression___updatePlain);
  swift_beginAccess();
  if (*v2 == 1)
  {
    swift_getKeyPath();
    sub_1BDDAFA58();
    swift_release();
    unint64_t v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___updateRich);
    swift_beginAccess();
    LODWORD(v3) = *v3;
    type metadata accessor for CalculateExpression.PlainExpression();
    if (v3 == 1)
    {
      uint64_t v4 = swift_retain();
      CalculateExpression.PlainExpression.__allocating_init(parent:options:)(v4, 0);
    }
    else
    {
      sub_1BDCE25A0();
      uint64_t v7 = (void *)swift_retain();
      CalculateExpression.PlainExpression.__allocating_init(_:)(v7);
    }
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x1F4188790](KeyPath, v6);
    sub_1BDDAFA48();
    swift_release();
    swift_release();
    uint64_t v8 = swift_getKeyPath();
    MEMORY[0x1F4188790](v8, v9);
    sub_1BDDAFA48();
    swift_release();
  }
  swift_getKeyPath();
  sub_1BDDAFA58();
  swift_release();
  uint64_t v10 = v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___plain;
  swift_beginAccess();
  return *(void *)v10;
}

uint64_t sub_1BDD504B0(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a1 >> 62)
  {
LABEL_49:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (!v7) {
    return v8;
  }
  char v35 = (uint64_t *)a4;
  unint64_t v36 = (uint64_t *)a3;
  uint64_t v42 = MEMORY[0x1E4FBC860];
  a3 = (uint64_t)&v42;
  uint64_t result = (uint64_t)sub_1BDD17224(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v10 = 0;
    uint64_t v8 = v42;
    while (1)
    {
      if (v7 == v10)
      {
        __break(1u);
        goto LABEL_49;
      }
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v11 = (unsigned __int8 *)MEMORY[0x1C18862A0](v10, a1);
      }
      else
      {
        uint64_t v11 = *(unsigned __int8 **)(a1 + 8 * v10 + 32);
        swift_retain();
      }
      uint64_t v12 = v11[48];
      if (v12 == 1) {
        goto LABEL_14;
      }
      if (qword_1EBA29988 != -1) {
        swift_once();
      }
      if (sub_1BDCE8528(v12, qword_1EBA29980))
      {
LABEL_14:
        uint64_t v13 = (*(uint64_t (**)(void))(*(void *)v11 + 136))();
        unint64_t v15 = v14;
        uint64_t v40 = v13;
        unint64_t v41 = v14;
        sub_1BDCEB640();
        a3 = (uint64_t)&v40;
        if (sub_1BDDB0228())
        {
          swift_bridgeObjectRelease();
          uint64_t v16 = 0xE27265626D756E3CLL;
          a4 = 0xAB000000003EA680;
        }
        else
        {
          uint64_t v40 = v13;
          unint64_t v41 = v15;
          a3 = sub_1BDDB0228();
          swift_bridgeObjectRelease();
          if (a3) {
            uint64_t v16 = 0xE27265626D756E3CLL;
          }
          else {
            uint64_t v16 = 0x3E7265626D756E3CLL;
          }
          if (a3) {
            a4 = 0xAB000000003EA680;
          }
          else {
            a4 = 0xE800000000000000;
          }
        }
      }
      else
      {
        int v20 = v11[48];
        if (!v11[48])
        {
          a4 = 0xE600000000000000;
          uint64_t v16 = 0x3E64726F773CLL;
          goto LABEL_22;
        }
        if (v20 == 19)
        {
          a4 = 0xE600000000000000;
          uint64_t v16 = 0x3E74696E753CLL;
          goto LABEL_22;
        }
        if (v20 != 14)
        {
          a3 = (uint64_t)v11;
          uint64_t v16 = (*(uint64_t (**)(void))(*(void *)v11 + 136))();
          a4 = v25;
          goto LABEL_22;
        }
        unint64_t v21 = v11;
        swift_getKeyPath();
        uint64_t v40 = a2;
        sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
        sub_1BDDAFA58();
        swift_release();
        swift_beginAccess();
        uint64_t Strong = swift_weakLoadStrong();
        if (Strong)
        {
          uint64_t v23 = Strong;
          uint64_t v40 = 1918989884;
          unint64_t v41 = 0xE400000000000000;
          uint64_t v24 = (*(uint64_t (**)(void))(*(void *)v11 + 136))();
          (*(void (**)(uint64_t))(*(void *)v23 + 424))(v24);
          swift_bridgeObjectRelease();
          sub_1BDDB04C8();
          sub_1BDDAFE18();
          swift_bridgeObjectRelease();
          a3 = (uint64_t)&v40;
          sub_1BDDAFE18();
          swift_release();
        }
        else
        {
          uint64_t v26 = v36;
          if (*v36 || (*v36 = sub_1BDD3AA60(MEMORY[0x1E4FBC860]), uint64_t result = swift_bridgeObjectRelease(), *v36))
          {
            (*(void (**)(void))(*(void *)v11 + 136))();
            uint64_t v27 = sub_1BDDAFD78();
            uint64_t v29 = v28;
            swift_bridgeObjectRelease();
            if (*(void *)(*v36 + 16))
            {
              sub_1BDD13EB4(v27, v29);
              if (v30)
              {
                swift_bridgeObjectRelease();
                uint64_t v40 = 1918989884;
                unint64_t v41 = 0xE400000000000000;
                sub_1BDDB04C8();
                sub_1BDDAFE18();
                swift_bridgeObjectRelease();
                a3 = (uint64_t)&v40;
                sub_1BDDAFE18();
                uint64_t v16 = v40;
                a4 = v41;
                goto LABEL_22;
              }
            }
            uint64_t result = swift_bridgeObjectRelease();
            uint64_t v26 = v36;
            uint64_t v11 = v21;
          }
          if (__OFADD__(*v35, 1)) {
            goto LABEL_51;
          }
          ++*v35;
          if (*v26)
          {
            (*(void (**)(uint64_t))(*(void *)v11 + 136))(result);
            uint64_t v39 = sub_1BDDAFD78();
            uint64_t v34 = v31;
            swift_bridgeObjectRelease();
            uint64_t v32 = *v35;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v40 = *v26;
            uint64_t *v26 = 0x8000000000000000;
            sub_1BDD4E97C(v32, v39, v34, isUniquelyReferenced_nonNull_native);
            uint64_t *v26 = v40;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          uint64_t v40 = 1918989884;
          unint64_t v41 = 0xE400000000000000;
          sub_1BDDB04C8();
          sub_1BDDAFE18();
          swift_bridgeObjectRelease();
          a3 = (uint64_t)&v40;
          sub_1BDDAFE18();
        }
        uint64_t v16 = v40;
        a4 = v41;
      }
LABEL_22:
      if (v38)
      {
        swift_release();
        swift_release();
        return v8;
      }
      swift_release();
      uint64_t v42 = v8;
      unint64_t v18 = *(void *)(v8 + 16);
      unint64_t v17 = *(void *)(v8 + 24);
      if (v18 >= v17 >> 1)
      {
        a3 = (uint64_t)&v42;
        sub_1BDD17224((char *)(v17 > 1), v18 + 1, 1);
        uint64_t v8 = v42;
      }
      ++v10;
      *(void *)(v8 + 16) = v18 + 1;
      uint64_t v19 = v8 + 16 * v18;
      *(void *)(v19 + 32) = v16;
      *(void *)(v19 + 40) = a4;
      if (v7 == v10) {
        return v8;
      }
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

void sub_1BDD50BD0()
{
  sub_1BDD3BAE4(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1BDD50BFC()
{
  return sub_1BDCF6078(&OBJC_IVAR____TtC9Calculate19CalculateExpression__isEvaluating);
}

void sub_1BDD50C1C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1BDD50C34(void *a1, void *a2)
{
  return sub_1BDD3E298(a1, a2, v2);
}

void sub_1BDD50C3C()
{
  sub_1BDD3C744(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1BDD50C68()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression__graphNeedsEvaluation) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1BDD50C80()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  *(void *)&long long v46 = v0;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA58();
  swift_release();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__graphNeedsEvaluation) != 1)
  {
    swift_getKeyPath();
    *(void *)&long long v46 = v0;
    goto LABEL_30;
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x1F4188790](KeyPath, v3);
  sub_1BDDAFA48();
  swift_release();
  uint64_t v44 = sub_1BDD3C8D4();
  uint64_t v43 = v4;
  swift_getKeyPath();
  *(void *)&long long v46 = v0;
  sub_1BDDAFA58();
  swift_release();
  uint64_t v5 = (Swift::OpaquePointer *)(v0 + OBJC_IVAR____TtC9Calculate19CalculateExpression__options);
  swift_beginAccess();
  v6._rawValue = v5->_rawValue;
  swift_getKeyPath();
  *(void *)&long long v46 = v1;
  swift_bridgeObjectRetain();
  sub_1BDDAFA58();
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)Strong + 168))(Strong);
    v6._rawValue = (void *)sub_1BDD3DA44((uint64_t)v6._rawValue, v8);
    swift_release();
  }
  id v9 = objc_allocWithZone(NSNumber);
  uint64_t v10 = @"CalculateKeyForceResult";
  id v11 = objc_msgSend(v9, sel_initWithBool_, 1);
  uint64_t v47 = sub_1BDCE6874(0, (unint64_t *)&qword_1EBA26990);
  *(void *)&long long v46 = v11;
  sub_1BDD198E8(&v46, v45);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1BDD4EC50(v45, v10, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  uint64_t v13 = sub_1BDCE6964();
  swift_getKeyPath();
  *(void *)&long long v46 = v1;
  swift_bridgeObjectRetain();
  sub_1BDDAFA58();
  swift_release();
  uint64_t v14 = v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression__graphableVariable;
  swift_beginAccess();
  if (*(void *)(v14 + 8))
  {
    rawValue = v6._rawValue;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_1BDDAFD78();
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    if (qword_1EBA2A0B8 != -1) {
      swift_once();
    }
    uint64_t v18 = qword_1EA0E0950;
    swift_getKeyPath();
    *(void *)&long long v46 = v18;
    sub_1BDDAFA58();
    swift_release();
    if (*(unsigned char *)(v18 + OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation) == 1) {
      sub_1BDD3BE54();
    }
    swift_getKeyPath();
    *(void *)&long long v46 = v18;
    sub_1BDDAFA58();
    swift_release();
    uint64_t v19 = (id *)(v18 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalResult);
    swift_beginAccess();
    if (*v19) {
      id v20 = objc_msgSend(*v19, sel_ignoringNaN);
    }
    else {
      id v20 = 0;
    }
    uint64_t v23 = v43;
    char v24 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v46 = v13;
    sub_1BDD4EAE0((uint64_t)v20, v15, v17, v24);
    uint64_t v13 = v46;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6._rawValue = rawValue;
    goto LABEL_26;
  }
  if (!*(void *)(v13 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  sub_1BDD13EB4(120, 0xE100000000000000);
  char v22 = v21;
  swift_bridgeObjectRelease();
  if ((v22 & 1) == 0)
  {
LABEL_18:
    if (qword_1EBA2A0B8 != -1) {
      swift_once();
    }
    uint64_t v25 = qword_1EA0E0950;
    swift_getKeyPath();
    *(void *)&long long v46 = v25;
    sub_1BDDAFA58();
    swift_release();
    if (*(unsigned char *)(v25 + OBJC_IVAR____TtC9Calculate19CalculateExpression__needsEvaluation)) {
      sub_1BDD3BE54();
    }
    swift_getKeyPath();
    *(void *)&long long v46 = v25;
    sub_1BDDAFA58();
    swift_release();
    uint64_t v26 = (id *)(v25 + OBJC_IVAR____TtC9Calculate19CalculateExpression__internalResult);
    swift_beginAccess();
    uint64_t v23 = v43;
    if (*v26) {
      id v27 = objc_msgSend(*v26, sel_ignoringNaN);
    }
    else {
      id v27 = 0;
    }
    char v28 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v46 = v13;
    sub_1BDD4EAE0((uint64_t)v27, 120, 0xE100000000000000, v28);
    uint64_t v13 = v46;
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  uint64_t v23 = v43;
LABEL_26:
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA268E0);
  *(void *)&long long v46 = v13;
  sub_1BDD198E8(&v46, v45);
  uint64_t v29 = @"CalculateKeyVariables";
  char v30 = swift_isUniquelyReferenced_nonNull_native();
  sub_1BDD4EC50(v45, v29, v30);

  swift_bridgeObjectRelease();
  if (!*((void *)v6._rawValue + 2)
    || (swift_bridgeObjectRetain(),
        uint64_t v31 = @"CalculateKeyAllowEqualSign",
        sub_1BDD4D9C0((uint64_t)v31),
        char v33 = v32,
        swift_bridgeObjectRelease(),
        v31,
        (v33 & 1) == 0))
  {
    uint64_t v47 = MEMORY[0x1E4FBB390];
    LOBYTE(v46) = 1;
    sub_1BDD198E8(&v46, v45);
    uint64_t v34 = @"CalculateKeyAllowEqualSign";
    char v35 = swift_isUniquelyReferenced_nonNull_native();
    sub_1BDD4EC50(v45, v34, v35);

    swift_bridgeObjectRelease();
  }
  v36._uint64_t countAndFlagsBits = v44;
  v36._object = v23;
  evaluate(_:options:)((CalculateResult_optional *)&v48, v36, v6);
  uint64_t v38 = v37;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v39 = swift_getKeyPath();
  MEMORY[0x1F4188790](v39, v40);
  *(void *)&long long v46 = v1;
  sub_1BDDAFA48();
  swift_release();

  swift_getKeyPath();
  *(void *)&long long v46 = v1;
LABEL_30:
  sub_1BDDAFA58();
  swift_release();
  return *(void *)(v1 + OBJC_IVAR____TtC9Calculate19CalculateExpression___graphableResult);
}

uint64_t sub_1BDD51520()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1BDD51558()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1BDD51568()
{
  return sub_1BDD3E980();
}

uint64_t sub_1BDD51594()
{
  return sub_1BDD52098();
}

uint64_t sub_1BDD515AC()
{
  return sub_1BDD3F318(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1BDD515C8()
{
  return sub_1BDD4039C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1BDD515F8()
{
  return sub_1BDD5218C();
}

uint64_t sub_1BDD51610()
{
  return sub_1BDD4121C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1BDD5163C()
{
  return sub_1BDD51F44();
}

uint64_t sub_1BDD51654()
{
  return sub_1BDD51F88();
}

uint64_t sub_1BDD5166C()
{
  return sub_1BDD520FC(&OBJC_IVAR____TtC9Calculate19CalculateExpression___documentReferenceCount);
}

uint64_t sub_1BDD5168C()
{
  return sub_1BDD3F0EC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1BDD516B8()
{
  return sub_1BDD520FC(&OBJC_IVAR____TtC9Calculate19CalculateExpression___graphReferenceCount);
}

uint64_t sub_1BDD516D8()
{
  swift_release();

  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 49, 7);
}

uint64_t sub_1BDD51720()
{
  return sub_1BDD4D184(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
}

uint64_t sub_1BDD51730()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1BDD51768()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

char *sub_1BDD517B8()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v3 = *(uint64_t (**)(id))(v0 + 40);
  int v29 = *(unsigned __int8 *)(v0 + 56);
  unint64_t v27 = *(void *)(v0 + 72);
  uint64_t v28 = *(void *)(v0 + 64);
  unint64_t v5 = (unint64_t)objc_msgSend(v1, sel_usesSignificantDigits);
  id v6 = objc_msgSend(v1, sel_maximumSignificantDigits);
  uint64_t v7 = &selRef_unitExponent;
  objc_msgSend(v1, sel_setUsesSignificantDigits_, 1);
  uint64_t v8 = &off_1E6366000;
  uint64_t v26 = v3;
  uint64_t v9 = v3(objc_msgSend(v1, sel_setMaximumSignificantDigits_, v2));
  uint64_t v11 = v10;
  swift_beginAccess();
  *(void *)(v4 + 16) = v9;
  *(void *)(v4 + 24) = v11;
  swift_bridgeObjectRelease();
  if (v29 != 2) {
    goto LABEL_15;
  }
  unsigned int v30 = v5;
  swift_beginAccess();
  uint64_t v25 = v4;
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_1BDDAFD38();
  swift_bridgeObjectRelease();
  uint64_t result = (char *)objc_msgSend(v1, sel_decimalSeparator);
  if (result)
  {
    uint64_t v14 = result;
    uint64_t v15 = (char *)objc_msgSend(v12, sel_rangeOfString_, result);

    uint64_t v16 = (void *)sub_1BDDAFD38();
    uint64_t v17 = (char *)objc_msgSend(v12, sel_rangeOfString_, v16);

    if (v17 == (char *)sub_1BDDAF928()) {
      uint64_t v17 = (char *)objc_msgSend(v12, sel_length);
    }
    uint64_t result = (char *)sub_1BDDAF928();
    uint64_t v18 = v17;
    if (v15 == result || (uint64_t v18 = v15 + 1, !__OFADD__(v15, 1)))
    {
      if (!__OFSUB__(v17, v18))
      {
        if ((uint64_t)objc_msgSend(v1, sel_maximumFractionDigits) >= v17 - v18)
        {

          unint64_t v5 = v30;
          uint64_t v7 = &selRef_unitExponent;
          uint64_t v8 = &off_1E6366000;
LABEL_15:
          objc_msgSend(v1, (SEL)v8[421], v6, v25);
          return (char *)objc_msgSend(v1, v7[203], v5);
        }
        uint64_t v19 = sub_1BDCE087C(v28, v27);
        uint64_t v7 = &selRef_unitExponent;
        if (v20)
        {

          uint64_t v8 = &off_1E6366000;
          goto LABEL_14;
        }
        uint64_t v21 = v19;
        uint64_t result = (char *)objc_msgSend(v1, sel_maximumFractionDigits);
        if (!__OFADD__(v21, result))
        {
          uint64_t v8 = &off_1E6366000;
          uint64_t v22 = v26(objc_msgSend(v1, sel_setMaximumSignificantDigits_, &result[v21]));
          uint64_t v24 = v23;

          swift_beginAccess();
          *(void *)(v25 + 16) = v22;
          *(void *)(v25 + 24) = v24;
          swift_bridgeObjectRelease();
LABEL_14:
          unint64_t v5 = v30;
          goto LABEL_15;
        }
        goto LABEL_18;
      }
      __break(1u);
    }
    __break(1u);
LABEL_18:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDD51A84()
{
  return sub_1BDCF1294(&qword_1EBA26A00, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
}

uint64_t sub_1BDD51ACC()
{
  return sub_1BDD1E58C((unint64_t *)&qword_1EA0DEFD0);
}

uint64_t sub_1BDD51AF4()
{
  return type metadata accessor for CalculateExpression();
}

uint64_t method lookup function for CalculateExpression(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalculateExpression);
}

uint64_t dispatch thunk of CalculateExpression.__allocating_init(_:options:base:id:)()
{
  return (*(uint64_t (**)(void))(v0 + 416))();
}

uint64_t getEnumTagSinglePayload for CalculateExpression.TokenType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xCC) {
    goto LABEL_17;
  }
  if (a2 + 52 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 52) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 52;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 52;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 52;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x35;
  int v8 = v6 - 53;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CalculateExpression.TokenType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 52 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 52) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xCC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xCB)
  {
    unsigned int v6 = ((a2 - 204) >> 8) + 1;
    *uint64_t result = a2 + 52;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDD51C84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 52;
        break;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CalculateExpression.Base(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDD51D78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1BDD51DA0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BDD51E04()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1BDD51E3C()
{
  return sub_1BDD46990();
}

uint64_t sub_1BDD51E44(uint64_t result, uint64_t a2)
{
  if (a2)
  {
    if ((uint64_t v3 = result, result == 0x656C61636F6CLL) && a2 == 0xE600000000000000
      || (sub_1BDDB04E8() & 1) != 0
      || v3 == 0xD000000000000015 && a2 == 0x80000001BDEF1E60
      || (uint64_t result = sub_1BDDB04E8(), (result & 1) != 0))
    {
      return sub_1BDD40F1C();
    }
  }
  return result;
}

uint64_t sub_1BDD51F24()
{
  return sub_1BDCF5D94(&OBJC_IVAR____TtC9Calculate19CalculateExpression__postfixStack);
}

uint64_t sub_1BDD51F44()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression__activeOperation) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_1BDD51F88()
{
  char v1 = *(unsigned char *)(v0 + 24);
  int v2 = (unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression__base);
  swift_beginAccess();
  unsigned char *v2 = v1;
  return sub_1BDD472E8();
}

uint64_t sub_1BDD51FF0()
{
  return sub_1BDD52008();
}

uint64_t sub_1BDD52008()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression__selectedRange;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = v2;
  *(unsigned char *)(v4 + 16) = v3;
  return result;
}

uint64_t sub_1BDD52078()
{
  return sub_1BDCF5D94(OBJC_IVAR____TtC9Calculate19CalculateExpression___graphableVariables);
}

uint64_t sub_1BDD52098()
{
  return swift_weakAssign();
}

uint64_t sub_1BDD520FC(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 24);
  char v3 = (void *)(*(void *)(v1 + 16) + *a1);
  uint64_t result = swift_beginAccess();
  void *v3 = v2;
  return result;
}

void sub_1BDD52154()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC9Calculate19CalculateExpression___isGraphable) = *(unsigned char *)(v0 + 24);
}

void sub_1BDD5216C()
{
}

uint64_t sub_1BDD5218C()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (void *)(v0[2] + OBJC_IVAR____TtC9Calculate19CalculateExpression___expression);
  void *v2 = v0[3];
  v2[1] = v1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDD521D8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1BDD52220()
{
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v2 = *(void **)(v0 + 32);
  swift_getKeyPath();
  id v3 = v1;
  sub_1BDCF1294(&qword_1EBA268B8, (void (*)(uint64_t))type metadata accessor for CalculateExpression);
  sub_1BDDAFA48();

  swift_release();
  swift_getKeyPath();
  id v4 = v2;
  sub_1BDDAFA48();

  swift_release();
  swift_getKeyPath();
  sub_1BDDAFA48();
  return swift_release();
}

uint64_t sub_1BDD523BC()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1BDD523FC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *id v4 = v1;
  v4[1] = sub_1BDD2B5B4;
  return sub_1BDD3E648((uint64_t)v4, v5, v6, v2, v3);
}

void type metadata accessor for CalculateTokenType(uint64_t a1)
{
}

uint64_t sub_1BDD524A8()
{
  return sub_1BDCF1294(&qword_1EBA26958, type metadata accessor for CalculateTokenType);
}

void sub_1BDD52500()
{
}

void sub_1BDD52518()
{
}

uint64_t sub_1BDD52530()
{
  return sub_1BDD515AC();
}

uint64_t sub_1BDD52548()
{
  return sub_1BDD5168C();
}

uint64_t sub_1BDD52560()
{
  return sub_1BDD51610();
}

uint64_t sub_1BDD52578()
{
  return sub_1BDD51568();
}

uint64_t sub_1BDD52590()
{
  return sub_1BDD4D994();
}

void sub_1BDD525A8()
{
}

void sub_1BDD525C0()
{
}

void sub_1BDD525D8()
{
}

uint64_t sub_1BDD525F0()
{
  return sub_1BDD515C8();
}

unint64_t sub_1BDD5260C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269C8);
  uint64_t v2 = sub_1BDDB0488();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BDD52BA8(v6, (uint64_t)&v13);
    uint64_t v7 = v13;
    unint64_t result = sub_1BDCE6070(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_1BDD198E8(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id evaluate(_:options:resultHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = self;
  uint64_t v8 = (void *)sub_1BDDAFD38();
  type metadata accessor for CalculateKey();
  sub_1BDD52B64(&qword_1EBA26918);
  char v9 = (void *)sub_1BDDAFC68();
  void v13[4] = a4;
  v13[5] = a5;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  v13[2] = sub_1BDD52880;
  v13[3] = &block_descriptor_2;
  uint64_t v10 = _Block_copy(v13);
  swift_retain();
  swift_release();
  id v11 = objc_msgSend(v7, sel_evaluate_options_resultHandler_, v8, v9, v10);
  _Block_release(v10);

  return v11;
}

void sub_1BDD52880(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

unint64_t sub_1BDD5290C()
{
  return sub_1BDD5260C(MEMORY[0x1E4FBC860]);
}

void __swiftcall evaluate(_:options:)(CalculateResult_optional *__return_ptr retstr, Swift::String _, Swift::OpaquePointer options)
{
  uint64_t v3 = self;
  uint64_t v4 = (void *)sub_1BDDAFD38();
  type metadata accessor for CalculateKey();
  sub_1BDD52B64(&qword_1EBA26918);
  uint64_t v5 = (void *)sub_1BDDAFC68();
  id v6 = objc_msgSend(v3, sel_evaluate_options_, v4, v5);
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> evaluateError(_:options:)(CalculateResult *__return_ptr retstr, Swift::String _, Swift::OpaquePointer options)
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = self;
  uint64_t v4 = (void *)sub_1BDDAFD38();
  type metadata accessor for CalculateKey();
  sub_1BDD52B64(&qword_1EBA26918);
  uint64_t v5 = (void *)sub_1BDDAFC68();
  v9[0] = 0;
  id v6 = objc_msgSend(v3, sel_evaluate_options_error_, v4, v5, v9);

  if (v6)
  {
    id v7 = v9[0];
  }
  else
  {
    id v8 = v9[0];
    sub_1BDDAF988();

    swift_willThrow();
  }
}

void __swiftcall CalculateResult.converted(to:from:)(CalculateResult_optional *__return_ptr retstr, CalculateUnit *to, CalculateUnit *from)
{
  uint64_t v4 = (void *)CalculateResultConvertFrom(v3, (const char *)to, (uint64_t)from);
  id v5 = v4;
}

uint64_t sub_1BDD52B64(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CalculateKey();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BDD52BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA26928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDD52C10(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16) != 1) {
    return 0;
  }
  CalculateExpression.RichExpression.editingToken(matching:)(sub_1BDD1F510, &v47);
  uint64_t v3 = v47;
  if (!(void)v47) {
    return 0;
  }
  unint64_t v4 = *((void *)&v47 + 1);
  id v5 = *(uint64_t (**)(unint64_t))(*(void *)v47 + 416);
  id v6 = (uint64_t (*)(long long *))(*(void *)v47 + 416);
  uint64_t v7 = swift_retain();
  sub_1BDD02DD4(v7);
  uint64_t v8 = v5(v4);
  if (!v8)
  {
    swift_release();
    sub_1BDD02E18(v3);
    sub_1BDD02E18(v3);
    return 0;
  }
  char v9 = (uint64_t (*)(long long *))v8;
  uint64_t v10 = type metadata accessor for CalculateExpression.RichToken();
  LOBYTE(v47) = 34;
  char v11 = sub_1BDD013AC();
  uint64_t v44 = (void (*)(long long *, void))v10;
  uint64_t v12 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v47, v11 & 1);
  (*(void (**)(void))(*(void *)a1 + 232))(0);
  uint64_t v13 = v5(v4);
  if (!v13)
  {
    char v20 = *(uint64_t (**)(long long *))(*(void *)v3 + 408);
    swift_retain();
    uint64_t v14 = v20(&v47);
    uint64_t v22 = v21;
    MEMORY[0x1C1885EA0]();
    if (*(void *)((*v22 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_15:
      sub_1BDDB0048();
      sub_1BDDAFFD8();
      ((void (*)(long long *, void))v14)(&v47, 0);
      sub_1BDD02E18(v3);
      swift_release();
      swift_release();
LABEL_37:
      swift_release();
      sub_1BDD02E18(v3);
      return 1;
    }
LABEL_39:
    sub_1BDDB0008();
    goto LABEL_15;
  }
  uint64_t v45 = v12;
  LOBYTE(v14) = *(unsigned char *)(v13 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  LOBYTE(v47) = v14;
  LOBYTE(v46) = 16;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v47, (unsigned __int8 *)&v46))
  {
    LOBYTE(v47) = v14;
    if ((CalculateExpression.TokenType.isOperand.getter() & 1) == 0) {
      goto LABEL_28;
    }
  }
  unint64_t v46 = v4;
  sub_1BDD231C0((uint64_t *)&v46);
  uint64_t v14 = v46;
  unint64_t v15 = v46 - 1;
  if (__OFSUB__(v46, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v16 = v5(v46 - 1);
  if (v16)
  {
    char v17 = *(unsigned char *)(v16 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    LOBYTE(v47) = v17;
    sub_1BDCF0848();
    if (sub_1BDDAFD28())
    {
      uint64_t v18 = (void (*)(long long *, void))(*(uint64_t (**)(long long *))(*(void *)v3 + 408))(&v47);
      sub_1BDD02E58(v15);
      swift_release();
      v18(&v47, 0);
LABEL_36:
      sub_1BDD02E18(v3);
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_37;
    }
  }
  uint64_t v23 = v5(v15);
  if (v23)
  {
    char v24 = *(unsigned char *)(v23 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    LOBYTE(v47) = v24;
    sub_1BDCF0848();
    if (sub_1BDDAFD28())
    {
      uint64_t v43 = v15;
      LOBYTE(v47) = 16;
      char v25 = sub_1BDD013AC();
      uint64_t v26 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v47, v25 & 1);
      uint64_t v14 = v4 + 1;
      if (!__OFADD__(v4, 1))
      {
        id v5 = (uint64_t (*)(unint64_t))v26;
        unint64_t v27 = (uint64_t (**)(long long *))(*(void *)v3 + 408);
        id v6 = *v27;
        uint64_t v42 = (void (*)(long long *, void))(*v27)(&v47);
        if (!(*v28 >> 62))
        {
          if (*(void *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= v14) {
            goto LABEL_21;
          }
          goto LABEL_44;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v41 = sub_1BDDB0448();
        swift_bridgeObjectRelease();
        if (v41 >= v14)
        {
LABEL_21:
          if ((v14 & 0x8000000000000000) == 0)
          {
            sub_1BDD0572C(v14, v14, (uint64_t)v5);
            v42(&v47, 0);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
            uint64_t v29 = swift_allocObject();
            *(_OWORD *)(v29 + 16) = xmmword_1BDDB3760;
            *(void *)(v29 + 32) = v45;
            LOBYTE(v47) = 15;
            swift_retain();
            char v30 = sub_1BDD013AC();
            *(void *)(v29 + 40) = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v47, v30 & 1);
            *(void *)&long long v47 = v29;
            sub_1BDDAFFD8();
            unint64_t v31 = v47;
            char v32 = (void (*)(long long *, void))v6(&v47);
            sub_1BDD053AC(v43, v43, v31);
            v32(&v47, 0);
            goto LABEL_36;
          }
          goto LABEL_45;
        }
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
  }
  char v33 = *(uint64_t (**)(long long *))(*(void *)v3 + 408);
  id v5 = (uint64_t (*)(unint64_t))(*(void *)v3 + 408);
  swift_retain();
  uint64_t v44 = (void (*)(long long *, void))v33(&v47);
  if (*v34 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v35 = *(void *)((*v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v6 = v9;
  if (v35 < v14)
  {
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v36 = v45;
  if ((v14 & 0x8000000000000000) == 0)
  {
LABEL_35:
    sub_1BDD0572C(v14, v14, v36);
    v44(&v47, 0);
    goto LABEL_36;
  }
  __break(1u);
LABEL_28:
  LOBYTE(v47) = v14;
  LOBYTE(v46) = 34;
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v47, (unsigned __int8 *)&v46))
  {
    char v37 = (void (*)(long long *, void))(*(uint64_t (**)(long long *))(*(void *)v3 + 408))(&v47);
    sub_1BDD02E58(v4);
    swift_release();
    v37(&v47, 0);
    sub_1BDD02E18(v3);
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_37;
  }
  uint64_t v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v38 = *(uint64_t (**)(long long *))(*(void *)v3 + 408);
  swift_retain();
  uint64_t result = v38(&v47);
  uint64_t v44 = (void (*)(long long *, void))result;
  if (*v39 >> 62)
  {
LABEL_47:
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1BDDB0448();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  uint64_t v40 = *(void *)((*v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_33:
  if (v40 < v14)
  {
    __break(1u);
  }
  else
  {
    uint64_t v36 = v45;
    if ((v14 & 0x8000000000000000) == 0) {
      goto LABEL_35;
    }
  }
  __break(1u);
  return result;
}

uint64_t CalculateExpression.NegOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t type metadata accessor for CalculateExpression.NegOperation()
{
  return self;
}

uint64_t sub_1BDD53470(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16) != 1) {
    return 0;
  }
  CalculateExpression.RichExpression.editingToken(matching:)(sub_1BDD1F510, &v106);
  unint64_t v4 = (void *)v106;
  if (!(void)v106) {
    return 0;
  }
  uint64_t v5 = *((void *)&v106 + 1);
  id v6 = *(uint64_t (**)(uint64_t))(*(void *)v106 + 560);
  sub_1BDD02DD4(v106);
  uint64_t v7 = swift_retain();
  if ((v6(v7) & 1) != 0
    || ((*(uint64_t (**)(void))(*v4 + 568))() & 1) != 0
    || (sub_1BDD54768(v4, v5, (uint64_t)v101), (v101[0] & 1) == 0))
  {
LABEL_6:
    swift_release();
    sub_1BDD02E18((uint64_t)v4);
    sub_1BDD02E18((uint64_t)v4);
    return 0;
  }
  uint64_t v9 = *v4 + 416;
  uint64_t v97 = v104;
  uint64_t v98 = *(uint64_t (**)(void))v9;
  uint64_t v10 = (*(uint64_t (**)(void))v9)();
  if (!v10) {
    goto LABEL_15;
  }
  char v11 = *(unsigned char *)(v10 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  LOBYTE(v106) = v11;
  v100[0] = 15;
  uint64_t v2 = sub_1BDCF0848();
  if ((sub_1BDDAFD28() & 1) == 0) {
    goto LABEL_15;
  }
  int64_t v12 = v105;
  uint64_t v13 = ((uint64_t (*)(int64_t))v98)(v105);
  if (!v13) {
    goto LABEL_15;
  }
  char v14 = *(unsigned char *)(v13 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  swift_release();
  LOBYTE(v106) = v14;
  v100[0] = 16;
  if ((sub_1BDDAFD28() & 1) == 0) {
    goto LABEL_15;
  }
  if (__OFSUB__(v12, 1))
  {
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }
  sub_1BDD54768(v4, v12 - 1, (uint64_t)&v106);
  if ((v106 & 1) == 0) {
    goto LABEL_6;
  }
  if (v97 < *((uint64_t *)&v106 + 1))
  {
LABEL_15:
    id v6 = (uint64_t (*)(uint64_t))v97;
    uint64_t v15 = ((uint64_t (*)(uint64_t))v98)(v97);
    if (v15)
    {
      uint64_t v2 = v15;
      v100[0] = *(unsigned char *)(v15 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      unsigned __int8 v99 = 1;
      if (static CalculateExpression.TokenType.== infix(_:_:)(v100, &v99))
      {
        uint64_t v95 = *(void *)(*(void *)v2 + 208);
        uint64_t v16 = ((uint64_t (*)(void))v95)();
        uint64_t v92 = sub_1BDCEB694(101, 0xE100000000000000, v16, v17);
        char v19 = v18;
        uint64_t v20 = swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {
          ((void (*)(uint64_t))v95)(v20);
          char v21 = sub_1BDDAFEC8();
          uint64_t v22 = swift_bridgeObjectRelease();
          if (v21) {
            goto LABEL_39;
          }
          uint64_t v23 = ((uint64_t (*)(uint64_t))v95)(v22);
          sub_1BDCEB694(45, 0xE100000000000000, v23, v24);
          char v26 = v25;
          uint64_t v27 = swift_bridgeObjectRelease();
          if ((v26 & 1) == 0)
          {
            uint64_t v28 = (void (*)(unsigned __int8 *, void))(*(uint64_t (**)(unsigned __int8 *))(*(void *)v2 + 224))(v100);
            sub_1BDDAFE38();
            swift_bridgeObjectRelease();
            v28(v100, 0);
            goto LABEL_39;
          }
          ((void (*)(uint64_t))v95)(v27);
          unint64_t v52 = sub_1BDDAFE08();
          uint64_t v53 = swift_bridgeObjectRelease();
          uint64_t v54 = ((uint64_t (*)(uint64_t))v95)(v53);
          unint64_t v56 = sub_1BDD13AE4(v52, v54, v55);
          unint64_t v58 = v57;
          uint64_t v60 = v59;
          uint64_t v62 = v61;
          swift_bridgeObjectRelease();
          if (sub_1BDD54A54(v56, v58, v62, v60, 48, 0xE100000000000000))
          {
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_52;
          }
          char v66 = sub_1BDD54A54(v56, v58, v62, v60, 12331, 0xE200000000000000);
          uint64_t v67 = swift_bridgeObjectRelease();
          if (v66) {
            goto LABEL_39;
          }
          ((void (*)(uint64_t))v95)(v67);
          uint64_t v68 = sub_1BDDAFEE8();
          uint64_t v70 = v69;
          swift_bridgeObjectRelease();
          if (v68 != 43 || v70 != 0xE100000000000000)
          {
            char v72 = sub_1BDDB04E8();
            swift_bridgeObjectRelease();
            if ((v72 & 1) == 0) {
              goto LABEL_91;
            }
            goto LABEL_90;
          }
LABEL_89:
          swift_bridgeObjectRelease();
LABEL_90:
          unsigned int v84 = (void (*)(unsigned __int8 *, void))(*(uint64_t (**)(unsigned __int8 *))(*(void *)v2 + 224))(v100);
          sub_1BDDAFE38();
          swift_bridgeObjectRelease();
          v84(v100, 0);
LABEL_91:
          char v85 = (void (*)(unsigned __int8 *, void))(*(uint64_t (**)(unsigned __int8 *))(*(void *)v2 + 224))(v100);
          sub_1BDDAFE28();
          v85(v100, 0);
          goto LABEL_39;
        }
      }
      swift_release();
      id v6 = (uint64_t (*)(uint64_t))v97;
    }
    if (v103)
    {
      uint64_t v97 = v9;
      uint64_t v2 = v102;
      uint64_t v37 = v102 + 1;
      if (!__OFADD__(v102, 1))
      {
        if ((uint64_t)v6 >= v37)
        {
          uint64_t v93 = *(uint64_t (**)(unsigned __int8 *))(*v4 + 408);
          uint64_t v38 = (void (*)(unsigned __int8 *, void))v93(v100);
          uint64_t v95 = v37;
          sub_1BDD03824(v37, (uint64_t)v6);
          v38(v100, 0);
          uint64_t v39 = ((uint64_t (*)(uint64_t))v98)(v2);
          if (v39)
          {
            unsigned __int8 v40 = *(unsigned char *)(v39 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
            v100[0] = v40;
            if (CalculateExpression.TokenType.isBasicOperator.getter())
            {
LABEL_39:
              swift_release();
              goto LABEL_52;
            }
            v100[0] = v40;
            unsigned __int8 v99 = 15;
            BOOL v41 = static CalculateExpression.TokenType.== infix(_:_:)(v100, &v99);
            swift_release();
            if (v41) {
              goto LABEL_52;
            }
          }
          if (v2 < 0 || (*(uint64_t (**)(void))(*(void *)a1 + 368))() == 2) {
            goto LABEL_52;
          }
          type metadata accessor for CalculateExpression.RichToken();
          v100[0] = 3;
          char v42 = sub_1BDD013AC();
          uint64_t v2 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v100, v42 & 1);
          uint64_t v9 = v93(v100);
          if (!(*v43 >> 62))
          {
            uint64_t v44 = *(void *)((*v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_45:
            if (v44 < v95)
            {
              __break(1u);
            }
            else if ((v95 & 0x8000000000000000) == 0)
            {
              sub_1BDD0572C(v95, v95, v2);
              ((void (*)(unsigned __int8 *, void))v9)(v100, 0);
              goto LABEL_52;
            }
            __break(1u);
            goto LABEL_115;
          }
LABEL_112:
          swift_bridgeObjectRetain();
          uint64_t v44 = sub_1BDDB0448();
          swift_bridgeObjectRelease();
          goto LABEL_45;
        }
        goto LABEL_104;
      }
    }
    else
    {
      if (v105 >= (uint64_t)v6)
      {
        uint64_t v2 = v105 + 1;
        if (!__OFADD__(v105, 1))
        {
          if (sub_1BDD54550((uint64_t)v4, (uint64_t)v6, v105 + 1))
          {
LABEL_52:
            (*(void (**)(void))(*(void *)a1 + 232))(0);
            sub_1BDD02E18((uint64_t)v4);
            swift_release();
            sub_1BDD02E18((uint64_t)v4);
            return 1;
          }
          uint64_t v29 = (*(uint64_t (**)(void))(*(void *)a1 + 368))();
          uint64_t v30 = type metadata accessor for CalculateExpression.RichToken();
          if (v29 != 2)
          {
            v100[0] = 16;
            char v45 = sub_1BDD013AC();
            uint64_t v98 = (uint64_t (*)(void))v30;
            uint64_t v92 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v100, v45 & 1);
            uint64_t v95 = *(void *)(*v4 + 408);
            uint64_t v91 = (void (*)(unsigned __int8 *, void))((uint64_t (*)(unsigned __int8 *))v95)(v100);
            if (!(*v46 >> 62))
            {
              uint64_t v9 = *(void *)((*v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (v9 < v2)
              {
LABEL_110:
                __break(1u);
LABEL_111:
                __break(1u);
                goto LABEL_112;
              }
LABEL_50:
              if ((v2 & 0x8000000000000000) == 0)
              {
                sub_1BDD0572C(v2, v2, v92);
                v91(v100, 0);
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
                uint64_t v47 = swift_allocObject();
                *(_OWORD *)(v47 + 16) = xmmword_1BDDB3760;
                v100[0] = 15;
                char v48 = sub_1BDD013AC();
                *(void *)(v47 + 32) = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v100, v48 & 1);
                v100[0] = 4;
                char v49 = sub_1BDD013AC();
                *(void *)(v47 + 40) = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v100, v49 & 1);
                *(void *)uint64_t v100 = v47;
                sub_1BDDAFFD8();
                unint64_t v50 = *(void *)v100;
                uint64_t v51 = (void (*)(unsigned __int8 *, void))((uint64_t (*)(unsigned __int8 *))v95)(v100);
                sub_1BDD053AC(v97, v97, v50);
                v51(v100, 0);
                goto LABEL_52;
              }
              goto LABEL_111;
            }
LABEL_109:
            swift_bridgeObjectRetain();
            uint64_t v9 = sub_1BDDB0448();
            swift_bridgeObjectRelease();
            if (v9 < v2) {
              goto LABEL_110;
            }
            goto LABEL_50;
          }
          v100[0] = 4;
          char v31 = sub_1BDD013AC();
          id v6 = (uint64_t (*)(uint64_t))CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v100, v31 & 1);
          uint64_t v2 = (*(uint64_t (**)(unsigned __int8 *))(*v4 + 408))(v100);
          if (!(*v32 >> 62))
          {
            uint64_t v33 = *(void *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_30:
            uint64_t v34 = v97;
            if (v33 < v97)
            {
              __break(1u);
            }
            else if ((v97 & 0x8000000000000000) == 0)
            {
              uint64_t v35 = v97;
              uint64_t v36 = (uint64_t)v6;
LABEL_33:
              sub_1BDD0572C(v34, v35, v36);
LABEL_34:
              ((void (*)(unsigned __int8 *, void))v2)(v100, 0);
              goto LABEL_52;
            }
            __break(1u);
            goto LABEL_109;
          }
LABEL_106:
          swift_bridgeObjectRetain();
          uint64_t v33 = sub_1BDDB0448();
          swift_bridgeObjectRelease();
          goto LABEL_30;
        }
        goto LABEL_103;
      }
      __break(1u);
    }
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }
  if ((v107 & 1) == 0)
  {
    if ((v103 & 1) == 0)
    {
      uint64_t v63 = v97 + 1;
      if (!__OFADD__(v97, 1))
      {
        if (v12 >= v63)
        {
          if (sub_1BDD54550((uint64_t)v4, v97 + 1, v12)) {
            goto LABEL_52;
          }
          type metadata accessor for CalculateExpression.RichToken();
          v100[0] = 4;
          char v64 = sub_1BDD013AC();
          uint64_t v98 = (uint64_t (*)(void))CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v100, v64 & 1);
          uint64_t result = (*(uint64_t (**)(unsigned __int8 *))(*v4 + 408))(v100);
          uint64_t v2 = result;
          if (!(*v65 >> 62))
          {
            if (*(void *)((*v65 & 0xFFFFFFFFFFFFFF8) + 0x10) < v63)
            {
LABEL_123:
              __break(1u);
              goto LABEL_124;
            }
            goto LABEL_62;
          }
LABEL_122:
          swift_bridgeObjectRetain();
          uint64_t v90 = sub_1BDDB0448();
          uint64_t result = swift_bridgeObjectRelease();
          if (v90 < v63) {
            goto LABEL_123;
          }
LABEL_62:
          if (v63 < 0)
          {
LABEL_124:
            __break(1u);
            goto LABEL_125;
          }
          uint64_t v34 = v63;
          uint64_t v35 = v63;
LABEL_83:
          uint64_t v36 = (uint64_t)v98;
          goto LABEL_33;
        }
        goto LABEL_116;
      }
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
      goto LABEL_117;
    }
LABEL_74:
    uint64_t v75 = v102 + 1;
    if (!__OFADD__(v102, 1))
    {
      uint64_t v96 = v102;
      uint64_t v2 = v97;
      if (v97 >= v75)
      {
        long long v94 = *(uint64_t (**)(unsigned __int8 *))(*v4 + 408);
        uint64_t v76 = (void (*)(unsigned __int8 *, void))v94(v100);
        sub_1BDD03824(v75, v97);
        v76(v100, 0);
        uint64_t v77 = ((uint64_t (*)(uint64_t))v98)(v96);
        if (v77)
        {
          unsigned __int8 v78 = *(unsigned char *)(v77 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
          swift_release();
          v100[0] = v78;
          if (CalculateExpression.TokenType.isBasicOperator.getter()) {
            goto LABEL_52;
          }
        }
        if (v96 < 0) {
          goto LABEL_52;
        }
        uint64_t v9 = v75;
        type metadata accessor for CalculateExpression.RichToken();
        v100[0] = 3;
        char v79 = sub_1BDD013AC();
        uint64_t v98 = (uint64_t (*)(void))CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, v100, v79 & 1);
        uint64_t v2 = v94(v100);
        if (!(*v80 >> 62))
        {
          uint64_t v63 = *(void *)((*v80 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v63 < v9)
          {
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
            goto LABEL_122;
          }
LABEL_81:
          uint64_t v34 = v9;
          if ((v9 & 0x8000000000000000) == 0)
          {
            uint64_t v35 = v9;
            goto LABEL_83;
          }
          goto LABEL_121;
        }
LABEL_119:
        swift_bridgeObjectRetain();
        uint64_t v63 = sub_1BDDB0448();
        swift_bridgeObjectRelease();
        if (v63 < v9) {
          goto LABEL_120;
        }
        goto LABEL_81;
      }
LABEL_118:
      __break(1u);
      goto LABEL_119;
    }
LABEL_117:
    __break(1u);
    goto LABEL_118;
  }
  if ((v103 & 1) == 0)
  {
    uint64_t v73 = (uint64_t (**)(void))(*v4 + 408);
    uint64_t v98 = *v73;
    uint64_t v2 = ((uint64_t (*)(unsigned __int8 *))*v73)(v100);
    sub_1BDD02E58(v12);
    swift_release();
    ((void (*)(unsigned __int8 *, void))v2)(v100, 0);
    uint64_t v9 = v108;
    uint64_t v74 = v97;
    if (v108 < v97)
    {
      __break(1u);
      goto LABEL_74;
    }
LABEL_97:
    uint64_t v2 = ((uint64_t (*)(unsigned __int8 *))v98)(v100);
    sub_1BDD03824(v74, v9);
    goto LABEL_34;
  }
  uint64_t v2 = v102;
  uint64_t result = ((uint64_t (*)(uint64_t))v98)(v102);
  if (result)
  {
    unsigned __int8 v81 = *(unsigned char *)(result + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    v100[0] = v81;
    uint64_t result = CalculateExpression.TokenType.isBasicOperator.getter();
    if (result)
    {
      uint64_t v82 = v2 + 1;
      if (__OFADD__(v2, 1))
      {
LABEL_129:
        __break(1u);
        goto LABEL_130;
      }
      uint64_t v83 = v97;
      if (v97 < v82)
      {
        __break(1u);
        goto LABEL_89;
      }
LABEL_100:
      uint64_t v89 = (void (*)(unsigned __int8 *, void))(*(uint64_t (**)(unsigned __int8 *))(*v4 + 408))(v100);
      sub_1BDD03824(v82, v83);
      v89(v100, 0);
      goto LABEL_52;
    }
  }
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v86 = v109 + 1;
    if (__OFADD__(v109, 1))
    {
LABEL_125:
      __break(1u);
      goto LABEL_126;
    }
    if (v12 < v86)
    {
LABEL_126:
      __break(1u);
      goto LABEL_127;
    }
    uint64_t v87 = (uint64_t (**)(void))(*v4 + 408);
    uint64_t v98 = *v87;
    uint64_t result = ((uint64_t (*)(unsigned __int8 *))*v87)(v100);
    if (__OFADD__(v12, 1))
    {
LABEL_127:
      __break(1u);
      goto LABEL_128;
    }
    uint64_t v88 = (uint64_t (*)(unsigned __int8 *, void))result;
    sub_1BDD03824(v86, v12 + 1);
    uint64_t result = v88(v100, 0);
    uint64_t v9 = v108;
    uint64_t v74 = v97;
    if (v108 < v97)
    {
LABEL_128:
      __break(1u);
      goto LABEL_129;
    }
    goto LABEL_97;
  }
  uint64_t v83 = v97;
  if (v97 > v2)
  {
    uint64_t v82 = v2 + 1;
    goto LABEL_100;
  }
LABEL_130:
  __break(1u);
  return result;
}

uint64_t CalculateExpression.NegateOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t sub_1BDD54550(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 - 1;
  if (__OFSUB__(a3, 1)) {
    goto LABEL_25;
  }
  uint64_t v5 = *(uint64_t (**)(uint64_t))(*(void *)result + 416);
  do
  {
    if (!v5(a2)) {
      goto LABEL_11;
    }
    swift_release();
    sub_1BDCF0848();
    if ((sub_1BDDAFD28() & 1) == 0) {
      goto LABEL_11;
    }
    if (!v5(v3)) {
      goto LABEL_11;
    }
    swift_release();
    uint64_t result = sub_1BDDAFD28();
    if ((result & 1) == 0) {
      goto LABEL_11;
    }
    if (__OFADD__(a2, 1))
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return result;
    }
    ++a2;
  }
  while (!__OFSUB__(v3--, 1));
  __break(1u);
LABEL_11:
  if (a2 != v3) {
    return 0;
  }
  uint64_t v7 = v5(a2);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = v7;
  unsigned __int8 v13 = *(unsigned char *)(v7 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  unsigned __int8 v12 = 1;
  if (!static CalculateExpression.TokenType.== infix(_:_:)(&v13, &v12))
  {
    swift_release();
    return 0;
  }
  if ((*(uint64_t (**)(void))(*(void *)v8 + 208))() != 48 || v9 != 0xE100000000000000)
  {
    char v11 = sub_1BDDB04E8();
    swift_release();
    swift_bridgeObjectRelease();
    return (v11 & 1) != 0;
  }
  swift_release();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1BDD54768@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v5 = (uint64_t (**)(uint64_t))(*a1 + 416);
  id v6 = *v5;
  uint64_t v7 = (*v5)(a2);
  uint64_t result = a2;
  if (v7)
  {
    unsigned __int8 v9 = *(unsigned char *)(v7 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    unsigned __int8 v25 = v9;
    unsigned __int8 v24 = 9;
    sub_1BDCF0848();
    char v10 = sub_1BDDAFD28();
    uint64_t result = a2;
    if (v10)
    {
      uint64_t result = a2 - 1;
      if (__OFSUB__(a2, 1))
      {
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v26 = a2 - 1;
    }
  }
  uint64_t v11 = v6(result);
  if (v11)
  {
    unsigned __int8 v12 = *(unsigned char *)(v11 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    unsigned __int8 v25 = v12;
    unsigned __int8 v24 = 15;
    sub_1BDCF0848();
    char v13 = sub_1BDDAFD28();
  }
  else
  {
    char v13 = 0;
  }
  uint64_t result = sub_1BDD231C0(&v26);
  uint64_t v14 = v26;
  uint64_t v15 = v26 - 1;
  if (__OFSUB__(v26, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v16 = v6(v26 - 1);
  if (v16)
  {
    unsigned __int8 v17 = *(unsigned char *)(v16 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_release();
    unsigned __int8 v25 = v17;
    unsigned __int8 v24 = 17;
    sub_1BDCF0848();
    uint64_t result = sub_1BDDAFD28();
    if (result)
    {
      BOOL v18 = __OFSUB__(v15--, 1);
      if (v18) {
        goto LABEL_28;
      }
    }
  }
  uint64_t result = v6(v15);
  if (!result
    || (unsigned __int8 v19 = *(unsigned char *)(result + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type),
        swift_release(),
        unsigned __int8 v25 = v19,
        unsigned __int8 v24 = 4,
        sub_1BDCF0848(),
        uint64_t result = sub_1BDDAFD28(),
        (result & 1) == 0))
  {
    char v20 = 0;
    BOOL v21 = 0;
    if (v13) {
      goto LABEL_25;
    }
    goto LABEL_18;
  }
  BOOL v18 = __OFSUB__(v15--, 1);
  if (!v18)
  {
    char v20 = 1;
    if (v13)
    {
      BOOL v21 = 0;
LABEL_25:
      *(unsigned char *)a3 = v21;
      *(void *)(a3 + 8) = v15;
      *(unsigned char *)(a3 + 16) = v20;
      *(void *)(a3 + 24) = v14;
      *(void *)(a3 + 32) = a2;
      return result;
    }
LABEL_18:
    char v23 = v20;
    uint64_t result = v6(v14);
    if (result)
    {
      unsigned __int8 v22 = *(unsigned char *)(result + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      unsigned __int8 v25 = v22;
      if ((CalculateExpression.TokenType.isOperand.getter() & 1) != 0
        || (v25 = v22, unsigned __int8 v24 = 15, static CalculateExpression.TokenType.== infix(_:_:)(&v25, &v24)))
      {
        uint64_t result = swift_release();
        BOOL v21 = 1;
      }
      else
      {
        unsigned __int8 v25 = v22;
        unsigned __int8 v24 = 10;
        BOOL v21 = static CalculateExpression.TokenType.== infix(_:_:)(&v25, &v24);
        uint64_t result = swift_release();
      }
    }
    else
    {
      BOOL v21 = 0;
    }
    char v20 = v23;
    goto LABEL_25;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1BDD54A54(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a6) & 0xF;
  }
  else {
    uint64_t v6 = a5 & 0xFFFFFFFFFFFFLL;
  }
  if (a3 == a5 && a4 == a6 && !(a1 >> 16) && a2 >> 16 == v6) {
    return 1;
  }
  else {
    return sub_1BDDB04B8() & 1;
  }
}

uint64_t method lookup function for CalculateExpression.NegateOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalculateExpression.NegateOperation);
}

uint64_t _s15NegateOperationC13NegatePatternVwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[40]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s15NegateOperationC13NegatePatternVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *_s15NegateOperationC13NegatePatternVMa()
{
  return &_s15NegateOperationC13NegatePatternVN;
}

uint64_t sub_1BDD54B94(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16) != 1) {
    return 0;
  }
  uint64_t v3 = v2;
  CalculateExpression.RichExpression.editingToken(matching:)(sub_1BDD20AFC, &v63);
  uint64_t v5 = v63;
  if (!(void)v63) {
    return 0;
  }
  uint64_t v6 = *((void *)&v63 + 1);
  uint64_t v7 = v64;
  uint64_t v8 = v65;
  unsigned __int8 v9 = *(uint64_t (**)(uint64_t))(*(void *)v63 + 416);
  uint64_t v10 = swift_retain();
  sub_1BDD02DD4(v10);
  uint64_t v11 = v9(v6);
  uint64_t v12 = type metadata accessor for CalculateExpression.RichToken();
  LOBYTE(v63) = 7;
  char v13 = sub_1BDD013AC();
  uint64_t v14 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v63, v13 & 1);
  if (!v11)
  {
    swift_release();
    sub_1BDD02E18(v5);
    swift_release();
    uint64_t v30 = v5;
LABEL_20:
    sub_1BDD02E18(v30);
    return 0;
  }
  uint64_t v60 = (void (*)(void, void))v12;
  uint64_t v61 = v14;
  uint64_t v15 = *(uint64_t (**)(uint64_t))(*(void *)v11 + 328);
  uint64_t v16 = swift_retain();
  uint64_t v17 = v15(v16);
  BOOL v18 = &v7[v17];
  if (__OFADD__(v7, v17))
  {
    __break(1u);
    goto LABEL_58;
  }
  unsigned __int8 v19 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  uint64_t v20 = *(void *)sub_1BDD3A680();
  swift_release();
  if ((uint64_t)v19 >= v20)
  {
    swift_release();
    swift_release();
    swift_release();
    sub_1BDD02E18(v5);
LABEL_19:
    uint64_t v30 = v5;
    goto LABEL_20;
  }
  BOOL v21 = *(void (**)(void))(*(void *)a1 + 232);
  swift_retain();
  v21(0);
  uint64_t v22 = *(void *)(v3 + 16);
  unint64_t v23 = *(void *)(v3 + 24);
  if (v22) {
    BOOL v24 = 0;
  }
  else {
    BOOL v24 = v23 == 0xE000000000000000;
  }
  int v25 = v24;
  LODWORD(v58) = v25;
  if (v24 || (sub_1BDDB04E8() & 1) != 0)
  {
    LOBYTE(v63) = 18;
    char v26 = sub_1BDD013AC() & 1;
    uint64_t v27 = 0;
    unint64_t v28 = 0;
  }
  else
  {
    LOBYTE(v63) = 1;
    swift_bridgeObjectRetain();
    char v26 = sub_1BDD013AC() & 1;
    uint64_t v27 = v22;
    unint64_t v28 = v23;
  }
  uint64_t v8 = (void (*)(void, void))CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v27, v28, (unsigned __int8 *)&v63, v26);
  type metadata accessor for CalculateExpression.RichExpression();
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1BDDB3730;
  *(void *)(v31 + 32) = v8;
  *(void *)&long long v63 = v31;
  sub_1BDDAFFD8();
  uint64_t v32 = v63;
  swift_retain();
  uint64_t v33 = sub_1BDD07294(v32);
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(*(void *)v61 + 288))(v33);
  uint64_t v35 = *(uint64_t (**)(uint64_t))(*(void *)v61 + 280);
  uint64_t v36 = v35(v34);
  if (v36)
  {
    uint64_t v37 = v36;
    if (v58) {
      char v38 = 1;
    }
    else {
      char v38 = sub_1BDDB04E8();
    }
    (*(void (**)(void))(*(void *)v37 + 304))(v38 & 1);
    uint64_t v36 = swift_release();
  }
  uint64_t v39 = v61;
  uint64_t v40 = v35(v36);
  if (v40)
  {
    LOBYTE(v63) = 1;
    (*(void (**)(long long *))(*(void *)v40 + 280))(&v63);
    swift_release();
  }
  uint64_t v41 = OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
  char v42 = *(unsigned char *)(v11 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  LOBYTE(v63) = v42;
  LOBYTE(v62) = 7;
  uint64_t v59 = v8;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v63, (unsigned __int8 *)&v62))
  {
    LOBYTE(v63) = v42;
    if ((CalculateExpression.TokenType.isOperator.getter() & 1) == 0) {
      goto LABEL_45;
    }
    LOBYTE(v63) = v42;
    LOBYTE(v62) = 8;
    sub_1BDCF0848();
    if (sub_1BDDAFD28()) {
      goto LABEL_45;
    }
    LOBYTE(v63) = v42;
    LOBYTE(v62) = 9;
    if (sub_1BDDAFD28()) {
      goto LABEL_45;
    }
    swift_release();
    sub_1BDD02E18(v5);
    swift_release();
    swift_release();
    swift_release_n();
    goto LABEL_19;
  }
  uint64_t v58 = v41;
  uint64_t v43 = (*(uint64_t (**)(void))(*(void *)v11 + 280))();
  if (v43)
  {
    uint64_t v44 = v43;
    if ((*(uint64_t (**)(uint64_t))(*(void *)v43 + 568))(v43))
    {
      swift_release();
LABEL_38:
      swift_release();
      sub_1BDD02E18(v5);
      swift_release();
      swift_release();
      swift_release_n();
      uint64_t v30 = v5;
      goto LABEL_20;
    }
    char v45 = (*(uint64_t (**)(void))(*(void *)v44 + 560))();
    swift_release();
    if (v45) {
      goto LABEL_38;
    }
  }
  uint64_t v62 = v6;
  sub_1BDD231C0(&v62);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_1BDDB3760;
  LOBYTE(v63) = 16;
  char v47 = sub_1BDD013AC();
  uint64_t v8 = v60;
  *(void *)(v46 + 32) = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v63, v47 & 1);
  *(void *)(v46 + 40) = v61;
  *(void *)&long long v63 = v46;
  sub_1BDDAFFD8();
  if (__OFADD__(v6, 1)) {
    goto LABEL_63;
  }
  uint64_t v57 = (uint64_t)v7;
  unint64_t v48 = v63;
  char v49 = *(uint64_t (**)(long long *))(*(void *)v5 + 408);
  swift_retain();
  unint64_t v50 = (void (*)(long long *, void))v49(&v63);
  sub_1BDD053AC(v6 + 1, v6 + 1, v48);
  v50(&v63, 0);
  LOBYTE(v63) = 15;
  char v51 = sub_1BDD013AC();
  uint64_t v46 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v63, v51 & 1);
  uint64_t v39 = v62;
  uint64_t result = v49(&v63);
  uint64_t v8 = (void (*)(void, void))result;
  if (*v52 >> 62) {
    goto LABEL_64;
  }
  uint64_t v53 = *(void *)((*v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v41 = v58;
    if (v53 < v39) {
      break;
    }
    uint64_t v7 = (char *)v57;
    if (v39 < 0) {
      goto LABEL_66;
    }
    sub_1BDD0572C(v39, v39, v46);
    v8(&v63, 0);
    uint64_t v8 = v59;
LABEL_45:
    char v54 = *(unsigned char *)(v11 + v41);
    LOBYTE(v63) = v54;
    if ((CalculateExpression.TokenType.isOperand.getter() & 1) == 0)
    {
      LOBYTE(v63) = v54;
      LOBYTE(v62) = 16;
      if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v63, (unsigned __int8 *)&v62))
      {
        LOBYTE(v63) = v54;
        LOBYTE(v62) = 8;
        if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v63, (unsigned __int8 *)&v62))
        {
          LOBYTE(v63) = v54;
          LOBYTE(v62) = 9;
          if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v63, (unsigned __int8 *)&v62)) {
            goto LABEL_55;
          }
        }
      }
    }
    a1 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
LABEL_59:
      __break(1u);
    }
    else
    {
      uint64_t v8 = (void (*)(void, void))v7;
      unint64_t v55 = *(uint64_t (**)(long long *))(*(void *)v5 + 408);
      swift_retain();
      uint64_t v7 = (char *)v55(&v63);
      if (!(*v56 >> 62))
      {
        uint64_t v46 = *(void *)((*v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_52;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_1BDDB0448();
    swift_bridgeObjectRelease();
LABEL_52:
    uint64_t v39 = v61;
    if (v46 < a1)
    {
      __break(1u);
    }
    else if ((a1 & 0x8000000000000000) == 0)
    {
      sub_1BDD0572C(a1, a1, v61);
      ((void (*)(long long *, void))v7)(&v63, 0);
LABEL_55:
      swift_release();
      sub_1BDD02E18(v5);
      swift_release();
      swift_release();
      swift_release_n();
      sub_1BDD02E18(v5);
      return 1;
    }
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_1BDDB0448();
    uint64_t result = swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

void sub_1BDD55534()
{
}

uint64_t CalculateExpression.PowerOperation.deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CalculateExpression.PowerOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t method lookup function for CalculateExpression.PowerOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalculateExpression.PowerOperation);
}

uint64_t CalculateExpression.EqualsOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t sub_1BDD55628()
{
  type metadata accessor for CalculateExpression.RichToken();
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v1 = *(void *)(v0 + 24);
  unsigned __int8 v5 = 10;
  swift_bridgeObjectRetain();
  char v3 = sub_1BDD013AC();
  return CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v2, v1, &v5, v3 & 1);
}

uint64_t sub_1BDD55690(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16) != 1) {
    return 0;
  }
  char v3 = v2;
  CalculateExpression.RichExpression.editingToken(matching:)(sub_1BDD56914, &v105);
  uint64_t v5 = v105;
  if (!(void)v105) {
    return 0;
  }
  unint64_t v6 = *((void *)&v105 + 1);
  uint64_t v7 = v106;
  uint64_t v8 = v107;
  unsigned __int8 v9 = *(uint64_t **)(*(void *)v105 + 416);
  uint64_t v10 = *(void *)v105 + 416;
  sub_1BDD02DD4(v105);
  swift_retain();
  uint64_t v100 = (void (*)(long long *, void))v10;
  unint64_t v101 = v6;
  uint64_t v97 = v9;
  uint64_t v102 = ((uint64_t (*)(unint64_t))v9)(v6);
  uint64_t v11 = (*(uint64_t (**)(void))(*v2 + 144))();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BDDB3760;
  *(void *)(v12 + 32) = v11;
  uint64_t v13 = type metadata accessor for CalculateExpression.RichToken();
  LOBYTE(v105) = 15;
  swift_retain();
  char v14 = sub_1BDD013AC();
  *(void *)(v12 + 40) = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v105, v14 & 1);
  *(void *)&long long v105 = v12;
  sub_1BDDAFFD8();
  unint64_t v15 = v105;
  LOBYTE(v105) = 16;
  uint64_t v98 = (void (*)(long long *, void))v13;
  CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v105, 1);
  *(void *)&long long v105 = v15;
  swift_bridgeObjectRetain();
  uint64_t v16 = swift_retain();
  MEMORY[0x1C1885EA0](v16);
  if (*(void *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_69;
  }
  while (1)
  {
    sub_1BDDB0048();
    sub_1BDDAFFD8();
    unint64_t v17 = v105;
    uint64_t v18 = swift_release();
    uint64_t v19 = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 328))(v18);
    if (__OFADD__(v7, v19))
    {
      __break(1u);
      goto LABEL_118;
    }
    if (v7 + v19 >= *(void *)sub_1BDD3A680())
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BDD02E18(v5);
      uint64_t v22 = v5;
LABEL_13:
      sub_1BDD02E18(v22);
      return 0;
    }
    if (!v102
      || ((*(uint64_t (**)(void))(*(void *)v5 + 576))() & 1) != 0
      && ((*(uint64_t (**)(void))(*(void *)a1 + 224))() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t))(*(void *)v5 + 400))(v17);
      sub_1BDD02E18(v5);
      swift_release();
      swift_release();
      goto LABEL_10;
    }
    uint64_t v96 = v7;
    if ((*(uint64_t (**)(void))(*(void *)a1 + 224))())
    {
      swift_bridgeObjectRelease();
      unint64_t v23 = (uint64_t (**)(long long *))(*(void *)v5 + 408);
      BOOL v24 = *v23;
      int v25 = (void (*)(long long *, void))(*v23)(&v105);
      sub_1BDD053AC(0, 0, v15);
      v25(&v105, 0);
      LOBYTE(v105) = 16;
      char v26 = sub_1BDD013AC();
      CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v105, v26 & 1);
      uint64_t v27 = (void (*)(long long *, void))v24(&v105);
      uint64_t v29 = v28;
      MEMORY[0x1C1885EA0]();
      if (*(void *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1BDDB0008();
      }
      sub_1BDDB0048();
      sub_1BDDAFFD8();
      v27(&v105, 0);
      (*(void (**)(void))(*(void *)a1 + 232))(0);
      sub_1BDD02E18(v5);
      swift_release();
      swift_release();
      goto LABEL_29;
    }
    a1 = (uint64_t)&OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
    uint64_t v30 = OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
    uint64_t v7 = *(unsigned __int8 *)(v102 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    LOBYTE(v105) = *(unsigned char *)(v102 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    swift_retain();
    if ((CalculateExpression.TokenType.isOperand.getter() & 1) == 0)
    {
      LOBYTE(v105) = v7;
      LOBYTE(v104) = 7;
      if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v105, (unsigned __int8 *)&v104)) {
        break;
      }
      if (__OFSUB__(v101, 1)) {
        goto LABEL_76;
      }
      uint64_t v39 = ((uint64_t (*)(unint64_t))v97)(v101 - 1);
      if (!v39) {
        break;
      }
      char v40 = *(unsigned char *)(v39 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      swift_release();
      LOBYTE(v105) = v40;
      if ((CalculateExpression.TokenType.isOperand.getter() & 1) == 0) {
        break;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v7 = v101;
    uint64_t v30 = v101;
    char v3 = v97;
    while (1)
    {
      unint64_t v17 = v30;
      if (__OFSUB__(v30--, 1)) {
        break;
      }
      uint64_t v32 = ((uint64_t (*)(uint64_t))v97)(v30);
      if (v32)
      {
        char v33 = *(unsigned char *)(v32 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        swift_release();
        LOBYTE(v105) = v33;
        if (CalculateExpression.TokenType.isOperand.getter()) {
          continue;
        }
      }
      LOBYTE(v105) = 16;
      char v34 = sub_1BDD013AC();
      uint64_t v35 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v105, v34 & 1);
      uint64_t v8 = v101 + 1;
      if (__OFADD__(v101, 1))
      {
        __break(1u);
      }
      else
      {
        uint64_t v100 = (void (*)(long long *, void))v35;
        uint64_t v36 = (uint64_t *)(*(void *)v5 + 408);
        uint64_t v7 = *v36;
        char v3 = v36;
        uint64_t v98 = (void (*)(long long *, void))((uint64_t (*)(long long *))*v36)(&v105);
        uint64_t v30 = *v37;
        if (!((unint64_t)*v37 >> 62))
        {
          a1 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (a1 >= v8) {
            goto LABEL_26;
          }
LABEL_74:
          __break(1u);
          goto LABEL_75;
        }
      }
      swift_bridgeObjectRetain();
      a1 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
      if (a1 < v8) {
        goto LABEL_74;
      }
LABEL_26:
      if ((v8 & 0x8000000000000000) == 0)
      {
        sub_1BDD0572C(v8, v8, (uint64_t)v100);
        v98(&v105, 0);
        char v38 = (void (*)(long long *, void))((uint64_t (*)(long long *))v7)(&v105);
        sub_1BDD053AC(v17, v17, v15);
        v38(&v105, 0);
        sub_1BDD02E18(v5);
        swift_release();
        goto LABEL_28;
      }
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      swift_bridgeObjectRetain();
      if (!sub_1BDDB0448())
      {
LABEL_79:
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_80;
      }
LABEL_44:
      uint64_t v91 = v3;
      uint64_t v92 = v30;
      unint64_t v90 = v15 & 0xC000000000000001;
      if ((v15 & 0xC000000000000001) != 0) {
        goto LABEL_91;
      }
      if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v45 = *(void *)(v15 + 32);
        swift_retain();
        goto LABEL_47;
      }
      __break(1u);
      goto LABEL_93;
    }
    __break(1u);
LABEL_69:
    sub_1BDDB0008();
  }
  char v41 = *(unsigned char *)(v102 + v30);
  LOBYTE(v105) = v41;
  LOBYTE(v104) = 16;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v105, (unsigned __int8 *)&v104))
  {
    LOBYTE(v105) = v41;
    LOBYTE(v104) = 7;
    if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v105, (unsigned __int8 *)&v104))
    {
      LOBYTE(v105) = v41;
      LOBYTE(v104) = 8;
      if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v105, (unsigned __int8 *)&v104))
      {
        swift_bridgeObjectRelease();
        unint64_t v15 = v101 + 1;
        if (__OFADD__(v101, 1)) {
          goto LABEL_77;
        }
        char v51 = (uint64_t (**)(long long *))(*(void *)v5 + 408);
        unint64_t v52 = *v51;
        uint64_t v53 = (void (*)(long long *, void))(*v51)(&v105);
        sub_1BDD053AC(v15, v15, v17);
        v53(&v105, 0);
        LOBYTE(v105) = *(unsigned char *)(v102 + v30);
        LOBYTE(v104) = 18;
        if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v105, (unsigned __int8 *)&v104))
        {
          char v54 = (void (*)(long long *, void))v52(&v105);
          sub_1BDD02E58(v101);
          swift_release();
          v54(&v105, 0);
          sub_1BDD02E18(v5);
          swift_release();
          swift_release_n();
          swift_release();
          uint64_t v20 = v5;
        }
        else
        {
          sub_1BDD02E18(v5);
          swift_release();
LABEL_28:
          swift_release_n();
LABEL_29:
          swift_release();
          uint64_t v20 = v5;
        }
LABEL_30:
        sub_1BDD02E18(v20);
        return 1;
      }
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v104 = v101;
  sub_1BDD231C0((uint64_t *)&v104);
  if ((v104 & 0x8000000000000000) != 0)
  {
    sub_1BDD02E18(v5);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
    swift_release();
    uint64_t v22 = v5;
    goto LABEL_13;
  }
  uint64_t v95 = v104;
  uint64_t v7 = v96;
  if (*((unsigned char *)v3 + 32) != 1) {
    goto LABEL_81;
  }
  uint64_t v42 = ((uint64_t (*)(unint64_t))v97)(v104);
  if (!v42) {
    goto LABEL_81;
  }
  uint64_t v30 = v42;
  LOBYTE(v105) = *(unsigned char *)(v42 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  unsigned __int8 v103 = 10;
  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v105, &v103))
  {
    char v3 = *(uint64_t **)(*(void *)v30 + 208);
    uint64_t v93 = ((uint64_t (*)(void))v3)();
    unint64_t v17 = v43;
    if (v15 >> 62) {
      goto LABEL_78;
    }
    uint64_t v44 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v44) {
      goto LABEL_79;
    }
    goto LABEL_44;
  }
  while (2)
  {
    while (2)
    {
      swift_release();
LABEL_81:
      LOBYTE(v105) = 16;
      char v64 = sub_1BDD013AC();
      uint64_t v65 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v105, v64 & 1);
      a1 = v101 + 1;
      if (__OFADD__(v101, 1))
      {
        __break(1u);
      }
      else
      {
        uint64_t v8 = v65;
        char v66 = (uint64_t *)(*(void *)v5 + 408);
        uint64_t v7 = *v66;
        unint64_t v17 = (unint64_t)v66;
        uint64_t v100 = (void (*)(long long *, void))((uint64_t (*)(long long *))*v66)(&v105);
        if (!(*v67 >> 62))
        {
          if (*(void *)((*v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a1) {
            goto LABEL_84;
          }
LABEL_89:
          __break(1u);
          goto LABEL_90;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v69 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
      if (v69 < a1) {
        goto LABEL_89;
      }
LABEL_84:
      if ((a1 & 0x8000000000000000) == 0)
      {
        sub_1BDD0572C(a1, a1, v8);
        v100(&v105, 0);
        uint64_t v68 = (void (*)(long long *, void))((uint64_t (*)(long long *))v7)(&v105);
        sub_1BDD053AC(v95, v95, v15);
        v68(&v105, 0);
        sub_1BDD02E18(v5);
LABEL_86:
        swift_release();
        swift_release_n();
LABEL_10:
        swift_release();
        uint64_t v20 = v5;
        goto LABEL_30;
      }
LABEL_90:
      __break(1u);
LABEL_91:
      uint64_t v45 = MEMORY[0x1C18862A0](0, v15);
LABEL_47:
      uint64_t v46 = swift_bridgeObjectRelease();
      uint64_t v47 = (*(uint64_t (**)(uint64_t))(*(void *)v45 + 208))(v46);
      uint64_t v49 = v48;
      swift_release();
      if (v93 == v47 && v17 == v49)
      {
        uint64_t v50 = swift_bridgeObjectRelease_n();
        char v3 = v97;
      }
      else
      {
        char v55 = sub_1BDDB04E8();
        swift_bridgeObjectRelease();
        uint64_t v50 = swift_bridgeObjectRelease();
        char v3 = v97;
        if ((v55 & 1) == 0) {
          continue;
        }
      }
      break;
    }
    if (((uint64_t (*)(uint64_t))v91)(v50) == 1885957222 && v56 == 0xE400000000000000)
    {
      uint64_t v57 = swift_bridgeObjectRelease();
LABEL_61:
      uint64_t v59 = (*(uint64_t (**)(uint64_t))(*(void *)v92 + 280))(v57);
      if (!v59) {
        goto LABEL_95;
      }
      unint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)v59 + 392))(v59);
      swift_release();
      if (!(v17 >> 62))
      {
        unint64_t v60 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v60) {
          goto LABEL_64;
        }
LABEL_94:
        swift_bridgeObjectRelease();
LABEL_95:
        uint64_t v93 = 0;
        unint64_t v17 = 0;
        goto LABEL_96;
      }
LABEL_93:
      swift_bridgeObjectRetain();
      unint64_t v60 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
      if (!v60) {
        goto LABEL_94;
      }
LABEL_64:
      if ((v17 & 0xC000000000000001) != 0) {
        goto LABEL_129;
      }
      if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v61 = *(void *)(v17 + 32);
        swift_retain();
        goto LABEL_67;
      }
      __break(1u);
LABEL_131:
      uint64_t v74 = MEMORY[0x1C18862A0](0, v60);
LABEL_105:
      uint64_t v75 = swift_bridgeObjectRelease();
      uint64_t v72 = (*(uint64_t (**)(uint64_t))(*(void *)v74 + 208))(v75);
      uint64_t v77 = v76;
      swift_release();
      char v3 = v97;
      goto LABEL_109;
    }
    char v58 = sub_1BDDB04E8();
    uint64_t v57 = swift_bridgeObjectRelease();
    if (v58) {
      goto LABEL_61;
    }
LABEL_118:
    swift_bridgeObjectRelease();
    long long v94 = *(uint64_t (**)(long long *))(*(void *)v5 + 408);
    char v79 = (void (*)(long long *, void))v94(&v105);
    sub_1BDD02E58(v101);
    swift_release();
    v79(&v105, 0);
    unint64_t v15 = v95;
    while (1)
    {
      uint64_t v80 = ((uint64_t (*)(unint64_t))v3)(v15);
      if (!v80)
      {
LABEL_126:
        sub_1BDD02E18(v5);
        swift_release();
        goto LABEL_86;
      }
      unint64_t v17 = v80;
      unsigned __int8 v99 = (void (*)(long long *, void))v94(&v105);
      uint64_t v82 = v81;
      unint64_t v83 = *v81;
      char isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *uint64_t v82 = v83;
      if ((isUniquelyReferenced_nonNull_bridgeObject & 1) == 0
        || (v83 & 0x8000000000000000) != 0
        || (v83 & 0x4000000000000000) != 0)
      {
        sub_1BDD02F24(v83);
        unint64_t v83 = v85;
        *uint64_t v82 = v85;
      }
      uint64_t v7 = v83 & 0xFFFFFFFFFFFFFF8;
      uint64_t v86 = *(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t v15 = v95;
      if (v95 >= v86) {
        break;
      }
      uint64_t v87 = v8;
      uint64_t v88 = v86 - 1;
      memmove((void *)(v7 + 8 * v95 + 32), (const void *)(v7 + 8 * v95 + 40), 8 * (v86 - 1 - v95));
      *(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10) = v88;
      sub_1BDDAFFD8();
      swift_release();
      v99(&v105, 0);
      LOBYTE(v105) = *(unsigned char *)(v17 + *(void *)a1);
      unsigned __int8 v103 = 15;
      BOOL v89 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v105, &v103);
      swift_release();
      uint64_t v8 = v87;
      char v3 = v97;
      if (v89) {
        goto LABEL_126;
      }
    }
    __break(1u);
LABEL_129:
    uint64_t v61 = MEMORY[0x1C18862A0](0, v17);
LABEL_67:
    uint64_t v62 = swift_bridgeObjectRelease();
    uint64_t v93 = (*(uint64_t (**)(uint64_t))(*(void *)v61 + 208))(v62);
    unint64_t v17 = v63;
    swift_release();
LABEL_96:
    if (v90)
    {
      swift_bridgeObjectRetain();
      uint64_t v70 = MEMORY[0x1C18862A0](0, v15);
      uint64_t v71 = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v70 = *(void *)(v15 + 32);
      uint64_t v71 = swift_retain();
    }
    uint64_t v72 = (*(uint64_t (**)(uint64_t))(*(void *)v70 + 280))(v71);
    uint64_t v73 = swift_release();
    if (!v72) {
      goto LABEL_108;
    }
    unint64_t v60 = (*(uint64_t (**)(uint64_t))(*(void *)v72 + 392))(v73);
    uint64_t result = swift_release();
    if (!(v60 >> 62))
    {
      uint64_t v72 = *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v72) {
        goto LABEL_102;
      }
LABEL_107:
      swift_bridgeObjectRelease();
LABEL_108:
      uint64_t v77 = 0;
LABEL_109:
      if (v17)
      {
        if (!v77) {
          goto LABEL_115;
        }
        if (v93 == v72 && v17 == v77)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          char v78 = sub_1BDDB04E8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v78 & 1) == 0) {
            continue;
          }
        }
      }
      else if (v77)
      {
LABEL_115:
        swift_release();
LABEL_80:
        swift_bridgeObjectRelease();
        goto LABEL_81;
      }
      goto LABEL_118;
    }
    break;
  }
  swift_bridgeObjectRetain();
  uint64_t v72 = sub_1BDDB0448();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v72) {
    goto LABEL_107;
  }
LABEL_102:
  if ((v60 & 0xC000000000000001) != 0) {
    goto LABEL_131;
  }
  if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v74 = *(void *)(v60 + 32);
    swift_retain();
    goto LABEL_105;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDD56914(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (((*(uint64_t (**)(void))(*(void *)*a1 + 560))() & 1) != 0
    || ((*(uint64_t (**)(void))(*(void *)v1 + 568))() & 1) != 0
    || ((*(uint64_t (**)(void))(*(void *)v1 + 544))() & 1) != 0)
  {
    return 1;
  }
  else
  {
    return (*(uint64_t (**)(void))(*(void *)v1 + 456))() & 1;
  }
}

void sub_1BDD569FC()
{
}

uint64_t CalculateExpression.FunctionOperation.deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CalculateExpression.FunctionOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 33, 7);
}

uint64_t method lookup function for CalculateExpression.FunctionOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalculateExpression.FunctionOperation);
}

uint64_t dispatch thunk of CalculateExpression.FunctionOperation.functionToken.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of CalculateExpression.FunctionOperation.requireParentheses.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t static CalculateDocument.== infix(_:_:)()
{
  return sub_1BDDAF9D8() & 1;
}

uint64_t CalculateDocument.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9Calculate17CalculateDocument_id;
  uint64_t v4 = sub_1BDDAF9F8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

unint64_t sub_1BDD56BA4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF288);
    uint64_t v2 = (void *)sub_1BDDB0488();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA28C98);
  uint64_t v5 = MEMORY[0x1F4188790](v3, v4);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v10 = &v8[*(int *)(v5 + 48)];
    unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v31[1] = a1;
    uint64_t v12 = a1 + v11;
    uint64_t v13 = *(void *)(v6 + 72);
    swift_retain();
    while (1)
    {
      sub_1BDD19A60(v12, (uint64_t)v8, &qword_1EBA28C98);
      unint64_t result = sub_1BDD1CE5C((uint64_t)v8);
      if (v15) {
        break;
      }
      unint64_t v16 = result;
      *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v17 = v2[6];
      uint64_t v18 = sub_1BDDAF9F8();
      unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v8, v18);
      uint64_t v19 = v2[7] + 120 * v16;
      uint64_t v20 = *((void *)v10 + 2);
      char v21 = v10[72];
      char v22 = v10[112];
      long long v23 = *(_OWORD *)(v10 + 24);
      long long v24 = *(_OWORD *)(v10 + 40);
      long long v25 = *(_OWORD *)(v10 + 56);
      long long v26 = *((_OWORD *)v10 + 5);
      long long v27 = *((_OWORD *)v10 + 6);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v10;
      *(void *)(v19 + 16) = v20;
      *(_OWORD *)(v19 + 24) = v23;
      *(_OWORD *)(v19 + 40) = v24;
      *(_OWORD *)(v19 + 56) = v25;
      *(unsigned char *)(v19 + 72) = v21;
      *(_OWORD *)(v19 + 80) = v26;
      *(_OWORD *)(v19 + 96) = v27;
      *(unsigned char *)(v19 + 112) = v22;
      uint64_t v28 = v2[2];
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29) {
        goto LABEL_13;
      }
      v2[2] = v30;
      v12 += v13;
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        swift_release();
        return (unint64_t)v2;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  return result;
}

uint64_t sub_1BDD56DE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 168))();
  *a2 = result;
  return result;
}

uint64_t sub_1BDD56E2C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BDD57E04(a1, a2, a3, a4, (uint64_t)&unk_1BDDB5220, (uint64_t)sub_1BDD5F178);
}

uint64_t sub_1BDD56E4C()
{
  return sub_1BDD57A74();
}

uint64_t sub_1BDD56E60()
{
  return sub_1BDD57330();
}

uint64_t sub_1BDD56E80@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 216))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1BDD56ED0(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BDD58640(a1, a2, a3, a4, (uint64_t)"Ȳ2,", (uint64_t)sub_1BDD5FE78);
}

uint64_t sub_1BDD56EF0()
{
  return sub_1BDD586F8((uint64_t)"Ȳ2,", &OBJC_IVAR____TtC9Calculate17CalculateDocument__synchronous);
}

uint64_t sub_1BDD56F04()
{
  return sub_1BDD573F0();
}

uint64_t (*sub_1BDD56F24())()
{
  return j__swift_endAccess;
}

uint64_t sub_1BDD56F80@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 264))();
  *a2 = result;
  return result;
}

uint64_t sub_1BDD56FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 272);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1BDD57030()
{
  return sub_1BDD57CB0();
}

uint64_t sub_1BDD57044()
{
  return sub_1BDD57330();
}

void (*sub_1BDD57064(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))(*(void *)v1 + 504))(KeyPath);
  swift_release();
  void v3[5] = OBJC_IVAR____TtC9Calculate17CalculateDocument___observationRegistrar;
  void *v3 = v1;
  swift_getKeyPath();
  v3[6] = sub_1BDD5FB20(qword_1EBA28560, (void (*)(uint64_t))type metadata accessor for CalculateDocument);
  sub_1BDDAFA78();
  swift_release();
  v3[7] = sub_1BDD56F24();
  return sub_1BDD57198;
}

void sub_1BDD57198(void *a1)
{
}

uint64_t CalculateDocument.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  sub_1BDDAF9E8();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__options) = sub_1BDCE1914(MEMORY[0x1E4FBC860]);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__synchronous) = 1;
  *(void *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__declaredSymbols) = MEMORY[0x1E4FBC870];
  *(void *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__expressions) = v1;
  *(void *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__anonymizedSymbols) = sub_1BDD3AA60(v1);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__isEvaluating) = 0;
  sub_1BDDAFA88();
  return v0;
}

uint64_t CalculateDocument.init()()
{
  sub_1BDDAF9E8();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__options) = sub_1BDCE1914(MEMORY[0x1E4FBC860]);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__synchronous) = 1;
  *(void *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__declaredSymbols) = MEMORY[0x1E4FBC870];
  *(void *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__expressions) = v1;
  *(void *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__anonymizedSymbols) = sub_1BDD3AA60(v1);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument__isEvaluating) = 0;
  sub_1BDDAFA88();
  return v0;
}

uint64_t sub_1BDD57310()
{
  return sub_1BDD57330();
}

uint64_t sub_1BDD57330()
{
  swift_getKeyPath();
  (*(void (**)(void))(*(void *)v0 + 512))();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BDD573D0()
{
  return sub_1BDD573F0();
}

uint64_t sub_1BDD573F0()
{
  swift_getKeyPath();
  (*(void (**)(void))(*(void *)v0 + 512))();
  return swift_release();
}

uint64_t CalculateDocument.__allocating_init(expressions:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  CalculateDocument.init(expressions:options:)(a1, a2);
  return v4;
}

uint64_t CalculateDocument.init(expressions:options:)(uint64_t a1, uint64_t a2)
{
  sub_1BDDAF9E8();
  unint64_t v4 = MEMORY[0x1E4FBC860];
  *(void *)(v2 + OBJC_IVAR____TtC9Calculate17CalculateDocument__options) = sub_1BDCE1914(MEMORY[0x1E4FBC860]);
  *(unsigned char *)(v2 + OBJC_IVAR____TtC9Calculate17CalculateDocument__synchronous) = 1;
  *(void *)(v2 + OBJC_IVAR____TtC9Calculate17CalculateDocument__declaredSymbols) = MEMORY[0x1E4FBC870];
  *(void *)(v2 + OBJC_IVAR____TtC9Calculate17CalculateDocument__expressions) = v4;
  *(void *)(v2 + OBJC_IVAR____TtC9Calculate17CalculateDocument__anonymizedSymbols) = sub_1BDD3AA60(v4);
  *(unsigned char *)(v2 + OBJC_IVAR____TtC9Calculate17CalculateDocument__isEvaluating) = 0;
  sub_1BDDAFA88();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v9 = v2;
  uint64_t v10 = a2;
  uint64_t v6 = *(void (**)(void))(*(void *)v2 + 512);
  ((void (*)(uint64_t, uint64_t (*)(), unsigned char *, uint64_t))v6)(KeyPath, sub_1BDD5F178, v8, MEMORY[0x1E4FBC848] + 8);
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  v6();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BDD5B8E4(v4);
  return v2;
}

uint64_t CalculateDocument.__allocating_init(expressions:options:synchronous:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  CalculateDocument.init(expressions:options:synchronous:)(a1, a2, a3);
  return v6;
}

uint64_t CalculateDocument.init(expressions:options:synchronous:)(uint64_t a1, uint64_t a2, char a3)
{
  sub_1BDDAF9E8();
  unint64_t v5 = MEMORY[0x1E4FBC860];
  *(void *)(v3 + OBJC_IVAR____TtC9Calculate17CalculateDocument__options) = sub_1BDCE1914(MEMORY[0x1E4FBC860]);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC9Calculate17CalculateDocument__synchronous) = 1;
  *(void *)(v3 + OBJC_IVAR____TtC9Calculate17CalculateDocument__declaredSymbols) = MEMORY[0x1E4FBC870];
  *(void *)(v3 + OBJC_IVAR____TtC9Calculate17CalculateDocument__expressions) = v5;
  *(void *)(v3 + OBJC_IVAR____TtC9Calculate17CalculateDocument__anonymizedSymbols) = sub_1BDD3AA60(v5);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC9Calculate17CalculateDocument__isEvaluating) = 0;
  sub_1BDDAFA88();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v10 = v3;
  char v11 = a3;
  uint64_t v7 = *(void (**)(void))(*(void *)v3 + 512);
  ((void (*)(uint64_t, void (*)(), unsigned char *, uint64_t))v7)(KeyPath, sub_1BDD5FE78, v9, MEMORY[0x1E4FBC848] + 8);
  swift_release();
  swift_getKeyPath();
  v7();
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  v7();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BDD5B8E4(v5);
  return v3;
}

uint64_t (*sub_1BDD578E8(void *a1))(void *a1, char a2)
{
  uint64_t v2 = OBJC_IVAR____TtC9Calculate17CalculateDocument__expressions;
  a1[2] = OBJC_IVAR____TtC9Calculate17CalculateDocument__expressions;
  *a1 = *(void *)(v1 + v2);
  a1[1] = v1;
  swift_bridgeObjectRetain();
  return sub_1BDD57940;
}

uint64_t sub_1BDD57940(void *a1, char a2)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1[2];
  unint64_t v4 = *(void *)(v3 + v2);
  *(void *)(v3 + v2) = *a1;
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1BDD5B8E4(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BDD5B8E4(v4);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDD579B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 336))();
  *a2 = result;
  return result;
}

uint64_t sub_1BDD57A04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 344);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1BDD57A60()
{
  return sub_1BDD57A74();
}

uint64_t sub_1BDD57A74()
{
  swift_getKeyPath();
  (*(void (**)(void))(*(void *)v0 + 504))();
  swift_release();
  return swift_bridgeObjectRetain();
}

void (*sub_1BDD57AF0(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t))(*(void *)v1 + 504))(KeyPath);
  swift_release();
  void v3[5] = OBJC_IVAR____TtC9Calculate17CalculateDocument___observationRegistrar;
  void *v3 = v1;
  swift_getKeyPath();
  v3[6] = sub_1BDD5FB20(qword_1EBA28560, (void (*)(uint64_t))type metadata accessor for CalculateDocument);
  sub_1BDDAFA78();
  swift_release();
  v3[7] = sub_1BDD578E8(v3);
  return sub_1BDD57C24;
}

void sub_1BDD57C24(void *a1)
{
}

BOOL sub_1BDD57C30()
{
  return ((*(uint64_t (**)(void))(*(void *)v0 + 216))() & 1) == 0;
}

uint64_t sub_1BDD57C70()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t sub_1BDD57C9C()
{
  return sub_1BDD57CB0();
}

uint64_t sub_1BDD57CB0()
{
  swift_getKeyPath();
  (*(void (**)(void))(*(void *)v0 + 504))();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDD57D40@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  (*(void (**)(void))(*(void *)v3 + 504))();
  swift_release();
  unint64_t v4 = (void *)(v3 + OBJC_IVAR____TtC9Calculate17CalculateDocument__anonymizedSymbols);
  swift_beginAccess();
  *a2 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDD57DE4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BDD57E04(a1, a2, a3, a4, (uint64_t)&unk_1BDDB52E8, (uint64_t)sub_1BDD5FE60);
}

uint64_t sub_1BDD57E04(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = *a1;
  uint64_t v8 = *a2;
  uint64_t KeyPath = swift_getKeyPath();
  v12[2] = v8;
  v12[3] = v7;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, void *, uint64_t))(*(void *)v8 + 512);
  swift_bridgeObjectRetain();
  v10(KeyPath, a6, v12, MEMORY[0x1E4FBC848] + 8);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BDD57EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC9Calculate17CalculateDocument__anonymizedSymbols);
  swift_beginAccess();
  void *v3 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDD57F30()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  uint64_t v2 = (void (**)(void))(*(void *)v0 + 504);
  uint64_t v3 = *v2;
  (*v2)();
  swift_release();
  unint64_t v4 = &v0[OBJC_IVAR____TtC9Calculate17CalculateDocument__anonymizedSymbols];
  uint64_t v5 = swift_beginAccess();
  if (*(void *)(*(void *)v4 + 16)) {
    goto LABEL_17;
  }
  (*(void (**)(uint64_t))(*(void *)v0 + 264))(v5);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = (char *)sub_1BDD5D718(v6);
  swift_bridgeObjectRelease();
  uint64_t v45 = v7;
  sub_1BDD5D6AC(&v45);
  swift_bridgeObjectRelease();
  uint64_t v41 = *((void *)v45 + 2);
  if (!v41)
  {
LABEL_16:
    swift_release();
LABEL_17:
    uint64_t v31 = sub_1BDDAFD78();
    uint64_t v33 = v32;
    swift_getKeyPath();
    v3();
    swift_release();
    uint64_t v34 = *(void *)v4;
    if (*(void *)(*(void *)v4 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v35 = sub_1BDD13EB4(v31, v33);
      if (v36) {
        uint64_t v37 = *(void *)(*(void *)(v34 + 56) + 8 * v35);
      }
      else {
        uint64_t v37 = 0;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v37 = 0;
    }
    swift_bridgeObjectRelease();
    return v37;
  }
  uint64_t v8 = 0;
  uint64_t v9 = v45 + 40;
  char v40 = v3;
  uint64_t v39 = v0;
  while (1)
  {
    uint64_t v42 = v9;
    uint64_t v43 = v8;
    uint64_t v10 = sub_1BDDAFD78();
    uint64_t v12 = v11;
    swift_getKeyPath();
    v3();
    swift_release();
    uint64_t v45 = v1;
    swift_getKeyPath();
    sub_1BDD5FB20(qword_1EBA28560, (void (*)(uint64_t))type metadata accessor for CalculateDocument);
    uint64_t v13 = v10;
    sub_1BDDAFA78();
    swift_release();
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *(void *)v4;
    uint64_t v44 = *(void **)v4;
    *(void *)unint64_t v4 = 0x8000000000000000;
    unint64_t v17 = sub_1BDD13EB4(v10, v12);
    uint64_t v18 = *(void *)(v15 + 16);
    BOOL v19 = (v16 & 1) == 0;
    uint64_t v20 = v18 + v19;
    if (__OFADD__(v18, v19)) {
      break;
    }
    char v21 = v16;
    if (*(void *)(v15 + 24) < v20)
    {
      sub_1BDD4E16C(v20, isUniquelyReferenced_nonNull_native);
      unint64_t v22 = sub_1BDD13EB4(v10, v12);
      long long v24 = v42;
      if ((v21 & 1) != (v23 & 1)) {
        goto LABEL_26;
      }
      unint64_t v17 = v22;
      goto LABEL_10;
    }
    long long v24 = v42;
    uint64_t v25 = v43;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1BDD4EDFC();
LABEL_10:
      uint64_t v25 = v43;
    }
    uint64_t v26 = v25 + 1;
    if (v21)
    {
      *(void *)(v44[7] + 8 * v17) = v26;
      uint64_t v8 = v26;
    }
    else
    {
      v44[(v17 >> 6) + 8] |= 1 << v17;
      long long v27 = (uint64_t *)(v44[6] + 16 * v17);
      *long long v27 = v13;
      v27[1] = v12;
      *(void *)(v44[7] + 8 * v17) = v26;
      uint64_t v28 = v44[2];
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29) {
        goto LABEL_25;
      }
      v44[2] = v30;
      uint64_t v8 = v26;
      swift_bridgeObjectRetain();
    }
    uint64_t v9 = v24 + 16;
    *(void *)unint64_t v4 = v44;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v1 = v39;
    uint64_t v45 = v39;
    swift_getKeyPath();
    sub_1BDDAFA68();
    swift_release();
    uint64_t v3 = v40;
    if (v41 == v8) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  sub_1BDDB0528();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1BDD58388()
{
  sub_1BDCE6874(0, qword_1EBA28CD0);
  uint64_t v0 = sub_1BDDAFAC8();
  MEMORY[0x1F4188790](v0 - 8, v1);
  sub_1BDDAFAB8();
  uint64_t v2 = sub_1BDDB0158();
  MEMORY[0x1F4188790](v2, v3);
  v9[1] = MEMORY[0x1E4FBC860];
  sub_1BDD5FDC8(&qword_1EBA28CC8, MEMORY[0x1F41AB120]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA28CB8);
  sub_1BDD19AC4(&qword_1EBA28CC0, &qword_1EBA28CB8);
  sub_1BDDB0248();
  uint64_t v4 = sub_1BDDB0168();
  MEMORY[0x1F4188790](v4, v5);
  (*(void (**)(char *, void))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4FBCC50]);
  uint64_t result = sub_1BDDB0198();
  qword_1EBA2A788 = result;
  return result;
}

uint64_t sub_1BDD585C8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 456))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1BDD58620(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BDD58640(a1, a2, a3, a4, (uint64_t)&unk_1BDDB52C0, (uint64_t)sub_1BDD5FE90);
}

uint64_t sub_1BDD58640(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v7 = *a1;
  uint64_t v8 = *a2;
  uint64_t KeyPath = swift_getKeyPath();
  v11[2] = v8;
  char v12 = v7;
  (*(void (**)(uint64_t, uint64_t, void *, uint64_t))(*(void *)v8 + 512))(KeyPath, a6, v11, MEMORY[0x1E4FBC848] + 8);
  return swift_release();
}

uint64_t sub_1BDD586E4()
{
  return sub_1BDD586F8((uint64_t)&unk_1BDDB52C0, &OBJC_IVAR____TtC9Calculate17CalculateDocument__isEvaluating);
}

uint64_t sub_1BDD586F8(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  (*(void (**)(void))(*(void *)v2 + 504))();
  swift_release();
  return *(unsigned __int8 *)(v2 + *a2);
}

uint64_t sub_1BDD58764()
{
  uint64_t v303 = *MEMORY[0x1E4F143B8];
  unint64_t v1 = swift_allocObject();
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v3 = (uint64_t *)(v1 + 16);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1BDD56BA4(v2);
  uint64_t v262 = (uint64_t *)(v4 + 16);
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v0;
  v5[3] = v1;
  v5[4] = v4;
  uint64_t v6 = self;
  swift_retain();
  swift_retain();
  swift_retain();
  id v227 = v6;
  uint64_t v241 = v4;
  unint64_t v242 = v1;
  uint64_t v250 = v5;
  uint64_t v220 = (void *)v0;
  if (objc_msgSend(v6, sel_isMainThread))
  {
    sub_1BDD5A644(v0, v1, (void *)v4);
    uint64_t v218 = 0;
    uint64_t v219 = 0;
  }
  else
  {
    sub_1BDCE6874(0, qword_1EBA28CD0);
    uint64_t v7 = sub_1BDDB0178();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = sub_1BDD5F320;
    *(void *)(v8 + 24) = v5;
    uint64_t v9 = swift_allocObject();
    uint64_t v218 = sub_1BDD5F364;
    uint64_t v219 = v8;
    *(void *)(v9 + 16) = sub_1BDD5F364;
    *(void *)(v9 + 24) = v8;
    uint64_t v292 = sub_1BDD5F364;
    uint64_t v293 = v9;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v289 = 1107296256;
    uint64_t v290 = sub_1BDD5AAE4;
    unint64_t v291 = &block_descriptor_3;
    uint64_t v10 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync((dispatch_queue_t)v7, v10);

    _Block_release(v10);
    LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v7) {
      goto LABEL_198;
    }
    uint64_t v4 = v241;
    unint64_t v1 = v242;
  }
  unint64_t v280 = sub_1BDCE1B5C(MEMORY[0x1E4FBC860]);
  uint64_t v278 = MEMORY[0x1E4FBC870];
  uint64_t v279 = MEMORY[0x1E4FBC870];
  swift_beginAccess();
  uint64_t v11 = *v3;
  if ((unint64_t)*v3 >> 62) {
    goto LABEL_191;
  }
  uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v12) {
    goto LABEL_192;
  }
LABEL_7:
  unint64_t v13 = 0;
  unint64_t v249 = v11 & 0xC000000000000001;
  uint64_t v240 = v11 & 0xFFFFFFFFFFFFFF8;
  uint64_t v239 = v11 + 32;
  uint64_t v235 = v298;
  uint64_t v237 = @"CalculateKeyVariables";
  uint64_t v238 = @"CalculateKeyAllowEqualSign";
  uint64_t v234 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v236 = v11;
  uint64_t v247 = v12;
  do
  {
    while (1)
    {
      if (v249)
      {
        uint64_t v14 = MEMORY[0x1C18862A0](v13, v11);
        BOOL v15 = __OFADD__(v13, 1);
        unint64_t v16 = v13 + 1;
        if (v15) {
          goto LABEL_183;
        }
      }
      else
      {
        if (v13 >= *(void *)(v240 + 16)) {
          goto LABEL_185;
        }
        uint64_t v14 = *(void *)(v239 + 8 * v13);
        swift_retain();
        BOOL v15 = __OFADD__(v13, 1);
        unint64_t v16 = v13 + 1;
        if (v15) {
          goto LABEL_183;
        }
      }
      unint64_t v256 = v16;
      uint64_t v272 = sub_1BDDAF9F8();
      uint64_t v17 = *(void *)(v272 - 8);
      MEMORY[0x1F4188790](v272, v18);
      uint64_t v271 = v19;
      uint64_t v20 = (char *)&v217 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v257 = v14;
      CalculateExpression.id.getter((uint64_t)v20);
      char v21 = v262;
      swift_beginAccess();
      uint64_t v22 = *v21;
      if (*(void *)(v22 + 16))
      {
        unint64_t v23 = sub_1BDD1CE5C((uint64_t)v20);
        if (v24) {
          break;
        }
      }
      swift_endAccess();
      swift_release();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v272);
      unint64_t v13 = v256;
      if (v256 == v247) {
        goto LABEL_178;
      }
    }
    uint64_t v25 = *(void *)(v22 + 56) + 120 * v23;
    uint64_t v26 = *(void *)(v25 + 8);
    uint64_t v248 = *(void *)v25;
    uint64_t v274 = &v217;
    uint64_t v28 = *(uint64_t (**)(uint64_t))(v25 + 16);
    long long v27 = *(uint64_t **)(v25 + 24);
    uint64_t v29 = *(void *)(v25 + 32);
    uint64_t v4 = *(void *)(v25 + 40);
    uint64_t v31 = *(void *)(v25 + 48);
    uint64_t v30 = *(void **)(v25 + 56);
    uint64_t v32 = *(void **)(v25 + 64);
    char v33 = *(unsigned char *)(v25 + 72);
    uint64_t v244 = *(void *)(v25 + 80);
    uint64_t v253 = *(void *)(v25 + 88);
    uint64_t v245 = *(void *)(v25 + 96);
    uint64_t v254 = *(void *)(v25 + 104);
    id v255 = v30;
    LOBYTE(v25) = *(unsigned char *)(v25 + 112);
    char v277 = v33;
    char v276 = v25;
    swift_endAccess();
    uint64_t v263 = v26;
    swift_bridgeObjectRetain();
    uint64_t v246 = v28;
    swift_retain();
    uint64_t v275 = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v265 = (void *)v4;
    swift_retain();
    uint64_t v252 = v31;
    id v34 = v255;
    swift_retain();
    id v35 = v34;
    id v251 = v32;
    id v36 = v32;
    uint64_t v269 = v17;
    uint64_t v37 = *(void (**)(void, void))(v17 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v259 = (uint64_t (*)(char *, uint64_t))v37;
    uint64_t v260 = v17 + 8;
    v37(v20, v272);
    uint64_t v38 = v280;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unsigned __int8 v39 = sub_1BDD4D6E0(v29, v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v39 & 1) == 0)
    {

      char v277 = 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      id v255 = 0;
      uint64_t v29 = v38;
    }
    uint64_t v40 = v257;
    uint64_t v284 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF280);
    *(void *)&long long v282 = v29;
    sub_1BDD198E8(&v282, v287);
    uint64_t v41 = v237;
    swift_bridgeObjectRetain();
    uint64_t v42 = v275;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v281 = (uint64_t)v42;
    sub_1BDD4EC50(v287, v41, isUniquelyReferenced_nonNull_native);
    uint64_t v44 = v281;
    v243 = v41;

    swift_bridgeObjectRelease();
    uint64_t v45 = v265;
    unint64_t v261 = (void *)v44;
    if ((v39 & (v265 != 0)) == 1)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for CalculateExpression.PlainExpression();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v46 = (void *)CalculateExpression.PlainExpression.__allocating_init(parent:options:)(v40, v44);
      swift_retain_n();
      swift_release();
      type metadata accessor for CalculateExpression.RichExpression();
      uint64_t v47 = sub_1BDCE3218(v46);
      uint64_t v48 = swift_release();
      uint64_t v245 = (*(uint64_t (**)(uint64_t))(*v46 + 448))(v48);
      uint64_t v50 = v49;
      uint64_t v51 = swift_bridgeObjectRelease();
      char v52 = (*(uint64_t (**)(uint64_t))(*v46 + 488))(v51);
      swift_release();
      char v276 = v52 & 1;
      uint64_t v252 = v47;
      uint64_t v254 = v50;
      uint64_t v45 = v46;
    }
    uint64_t v53 = (uint64_t (**)(unint64_t))(*v45 + 288);
    char v54 = *v53;
    uint64_t v55 = (*v53)(0);
    if (v55)
    {
      char v56 = *(unsigned char *)(v55 + 48);
      swift_release();
      LOBYTE(v282) = v56;
      LOBYTE(v287[0]) = 17;
      sub_1BDCF0848();
      unint64_t v1 = sub_1BDDAFD28() & 1;
    }
    else
    {
      unint64_t v1 = 0;
    }
    uint64_t v57 = v54(v1);
    uint64_t v265 = v45;
    if (v57
      && (char v58 = *(unsigned char *)(v57 + 48),
          swift_release(),
          LOBYTE(v282) = v58,
          LOBYTE(v287[0]) = 14,
          sub_1BDCF0848(),
          (sub_1BDDAFD28() & 1) != 0))
    {
      uint64_t v59 = v1 + 1;
      uint64_t v60 = v54(v1 + 1);
      if (v60)
      {
        char v61 = *(unsigned char *)(v60 + 48);
        swift_release();
        LOBYTE(v282) = v61;
        LOBYTE(v287[0]) = 17;
        if (sub_1BDDAFD28()) {
          uint64_t v59 = v1 | 2;
        }
      }
      uint64_t v62 = v54(v59);
      if (v62
        && (char v63 = *(unsigned char *)(v62 + 48),
            swift_release(),
            LOBYTE(v282) = v63,
            LOBYTE(v287[0]) = 35,
            (sub_1BDDAFD28() & 1) != 0))
      {
        uint64_t v4 = v59 + 1;
        uint64_t v64 = v54(v59 + 1);
        if (v64)
        {
          char v65 = *(unsigned char *)(v64 + 48);
          swift_release();
          LOBYTE(v282) = v65;
          LOBYTE(v287[0]) = 17;
          if (sub_1BDDAFD28()) {
            uint64_t v66 = v59 + 2;
          }
          else {
            uint64_t v66 = v59 + 1;
          }
        }
        else
        {
          uint64_t v66 = v59 + 1;
        }
        uint64_t v45 = v265;
        unint64_t v68 = (*(uint64_t (**)(void))(*v265 + 264))();
        if (v68 >> 62) {
          uint64_t v69 = sub_1BDDB0448();
        }
        else {
          uint64_t v69 = *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        if (v66 >= v69) {
          uint64_t v67 = 0;
        }
        else {
          uint64_t v67 = v4;
        }
      }
      else
      {
        uint64_t v67 = 0;
        uint64_t v45 = v265;
      }
    }
    else
    {
      uint64_t v67 = 0;
    }
    uint64_t v70 = (uint64_t (**)(void))(*v45 + 264);
    uint64_t v71 = *v70;
    unint64_t v72 = (*v70)();
    if (v72 >> 62) {
      uint64_t v11 = sub_1BDDB0448();
    }
    else {
      uint64_t v11 = *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v73 = swift_bridgeObjectRelease();
    if (v11 < v67) {
      goto LABEL_186;
    }
    uint64_t v270 = v29;
    if (v67 != v11)
    {
      if (v67 >= v11) {
        goto LABEL_188;
      }
      do
      {
        uint64_t v167 = ((uint64_t (*)(uint64_t))v71)(v73);
        if ((v167 & 0xC000000000000001) != 0)
        {
          uint64_t v4 = MEMORY[0x1C18862A0](v67, v167);
        }
        else
        {
          if (v67 < 0)
          {
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
            goto LABEL_182;
          }
          if ((unint64_t)v67 >= *(void *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_181;
          }
          uint64_t v4 = *(void *)(v167 + 8 * v67 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        LOBYTE(v282) = *(unsigned char *)(v4 + 48);
        LOBYTE(v287[0]) = 14;
        if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v282, (unsigned __int8 *)v287))
        {
          (*(void (**)(void))(*(void *)v4 + 136))();
          uint64_t v168 = sub_1BDDAFD78();
          unint64_t v1 = v169;
          swift_bridgeObjectRelease();
          unint64_t v170 = v280;
          if (!*(void *)(v280 + 16) || (unint64_t v171 = sub_1BDD13EB4(v168, v1), (v172 & 1) == 0))
          {
            swift_release();
            uint64_t v73 = swift_bridgeObjectRelease();
            goto LABEL_140;
          }
          uint64_t v173 = *(void *)(*(void *)(v170 + 56) + 8 * v171);
          swift_retain();
          uint64_t v174 = swift_bridgeObjectRelease();
          uint64_t v175 = (*(uint64_t (**)(uint64_t))(*(void *)v173 + 104))(v174);
          uint64_t v176 = swift_release();
          if (v175)
          {
            unint64_t v1 = (unint64_t)&v217;
            MEMORY[0x1F4188790](v176, v177);
            uint64_t v179 = (char *)&v217 - ((v178 + 15) & 0xFFFFFFFFFFFFFFF0);
            CalculateExpression.id.getter((uint64_t)v179);
            swift_beginAccess();
            unint64_t v181 = sub_1BDD5AB0C(&v282);
            if (*(void *)(v180 + 8))
            {
              uint64_t v182 = *(void *)(v180 + 80);
              BOOL v15 = __OFADD__(v182, 1);
              uint64_t v183 = v182 + 1;
              if (v15) {
                goto LABEL_187;
              }
              *(void *)(v180 + 80) = v183;
            }
            ((void (*)(long long *, void))v181)(&v282, 0);
            swift_endAccess();
            swift_release();
            swift_release();
            uint64_t v73 = v259(v179, v272);
            uint64_t v29 = v270;
            goto LABEL_140;
          }
        }
        uint64_t v73 = swift_release();
LABEL_140:
        ++v67;
      }
      while (v11 != v67);
    }
    if (v277) {
      goto LABEL_85;
    }
    uint64_t v74 = *(void *)(v278 + 56);
    uint64_t v273 = v278 + 56;
    uint64_t v75 = 1 << *(unsigned char *)(v278 + 32);
    if (v75 < 64) {
      uint64_t v76 = ~(-1 << v75);
    }
    else {
      uint64_t v76 = -1;
    }
    unint64_t v77 = v76 & v74;
    uint64_t v274 = (uint64_t *)((unint64_t)(v75 + 63) >> 6);
    uint64_t v275 = (uint64_t *)v278;
    swift_bridgeObjectRetain();
    unint64_t v1 = 0;
    while (2)
    {
      if (v77)
      {
        unint64_t v78 = __clz(__rbit64(v77));
        v77 &= v77 - 1;
        unint64_t v79 = v78 | (v1 << 6);
LABEL_70:
        unint64_t v83 = (uint64_t *)(v275[6] + 16 * v79);
        uint64_t v4 = *v83;
        uint64_t v11 = v83[1];
        unsigned int v84 = *(uint64_t (**)(uint64_t))(*v265 + 456);
        swift_bridgeObjectRetain();
        uint64_t v85 = swift_retain();
        uint64_t v86 = v84(v85);
        if (!*(void *)(v86 + 16)) {
          goto LABEL_53;
        }
        sub_1BDDB0558();
        sub_1BDDAFDB8();
        uint64_t v87 = sub_1BDDB0578();
        uint64_t v88 = -1 << *(unsigned char *)(v86 + 32);
        unint64_t v89 = v87 & ~v88;
        if (((*(void *)(v86 + 56 + ((v89 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v89) & 1) == 0) {
          goto LABEL_53;
        }
        uint64_t v90 = *(void *)(v86 + 48);
        uint64_t v91 = (void *)(v90 + 16 * v89);
        BOOL v92 = *v91 == v4 && v91[1] == v11;
        if (!v92 && (sub_1BDDB04E8() & 1) == 0)
        {
          uint64_t v93 = ~v88;
          while (1)
          {
            unint64_t v89 = (v89 + 1) & v93;
            if (((*(void *)(v86 + 56 + ((v89 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v89) & 1) == 0) {
              break;
            }
            long long v94 = (void *)(v90 + 16 * v89);
            BOOL v95 = *v94 == v4 && v94[1] == v11;
            if (v95 || (sub_1BDDB04E8() & 1) != 0) {
              goto LABEL_84;
            }
          }
LABEL_53:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          continue;
        }
LABEL_84:
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        char v277 = 1;
        uint64_t v29 = v270;
LABEL_85:
        uint64_t v11 = sub_1BDCE1A44(MEMORY[0x1E4FBC860]);
        uint64_t v96 = *(void *)(v29 + 64);
        uint64_t v266 = v29 + 64;
        uint64_t v97 = 1 << *(unsigned char *)(v29 + 32);
        if (v97 < 64) {
          uint64_t v98 = ~(-1 << v97);
        }
        else {
          uint64_t v98 = -1;
        }
        unint64_t v99 = v98 & v96;
        int64_t v267 = (unint64_t)(v97 + 63) >> 6;
        uint64_t v268 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v269 + 56);
        unint64_t v264 = (uint64_t (**)(char *, uint64_t, uint64_t))(v269 + 48);
        uint64_t v258 = (void (**)(char *, char *, uint64_t))(v269 + 32);
        uint64_t v100 = swift_bridgeObjectRetain();
        uint64_t v102 = 0;
        uint64_t v269 = v11;
        if (v99)
        {
LABEL_89:
          uint64_t v273 = (v99 - 1) & v99;
          uint64_t v274 = v102;
          unint64_t v103 = __clz(__rbit64(v99)) | ((void)v102 << 6);
          goto LABEL_104;
        }
        while (2)
        {
          int64_t v104 = (int64_t)v102 + 1;
          if (__OFADD__(v102, 1))
          {
            __break(1u);
            goto LABEL_180;
          }
          uint64_t v105 = (uint64_t)v261;
          if (v104 >= v267) {
            goto LABEL_131;
          }
          unint64_t v106 = *(void *)(v266 + 8 * v104);
          int64_t v107 = (int64_t)v102 + 1;
          if (v106) {
            goto LABEL_103;
          }
          int64_t v107 = (int64_t)v102 + 2;
          if ((uint64_t)v102 + 2 >= v267) {
            goto LABEL_131;
          }
          unint64_t v106 = *(void *)(v266 + 8 * v107);
          if (v106) {
            goto LABEL_103;
          }
          int64_t v107 = (int64_t)v102 + 3;
          if ((uint64_t)v102 + 3 >= v267) {
            goto LABEL_131;
          }
          unint64_t v106 = *(void *)(v266 + 8 * v107);
          if (v106)
          {
LABEL_103:
            uint64_t v273 = (v106 - 1) & v106;
            uint64_t v274 = (uint64_t *)v107;
            unint64_t v103 = __clz(__rbit64(v106)) + (v107 << 6);
LABEL_104:
            uint64_t v275 = &v217;
            uint64_t v109 = (uint64_t *)(*(void *)(v29 + 48) + 16 * v103);
            uint64_t v110 = *v109;
            uint64_t v4 = v109[1];
            uint64_t v111 = *(void *)(*(void *)(v29 + 56) + 8 * v103);
            MEMORY[0x1F4188790](v100, v101);
            uint64_t v113 = (char *)&v217 - ((v112 + 15) & 0xFFFFFFFFFFFFFFF0);
            uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA28C88);
            MEMORY[0x1F4188790](v114 - 8, v115);
            uint64_t v117 = (char *)&v217 - ((v116 + 15) & 0xFFFFFFFFFFFFFFF0);
            uint64_t v118 = *(uint64_t (**)(uint64_t))(*(void *)v111 + 104);
            swift_bridgeObjectRetain();
            uint64_t v119 = swift_retain();
            if (v118(v119))
            {
              CalculateExpression.id.getter((uint64_t)v117);
              swift_release();
              uint64_t v120 = v272;
              (*v268)(v117, 0, 1, v272);
              int v121 = (*v264)(v117, 1, v120);
              uint64_t v11 = v269;
              if (v121 != 1)
              {
                (*v258)(v113, v117, v272);
                uint64_t v122 = v262;
                swift_beginAccess();
                uint64_t v123 = *v122;
                if (!*(void *)(v123 + 16) || (unint64_t v124 = sub_1BDD1CE5C((uint64_t)v113), (v125 & 1) == 0))
                {
                  swift_endAccess();
                  v259(v113, v272);
                  goto LABEL_111;
                }
                char v130 = (void *)(*(void *)(v123 + 56) + 120 * v124);
                uint64_t v131 = v130[1];
                uint64_t v132 = v130[2];
                uint64_t v134 = v130[3];
                uint64_t v133 = v130[4];
                uint64_t v135 = v130[5];
                uint64_t v228 = v130[6];
                uint64_t v229 = v135;
                uint64_t v136 = (void *)v130[7];
                unint64_t v137 = (void *)v130[8];
                uint64_t v230 = v130[11];
                id v231 = v137;
                uint64_t v232 = v130[13];
                id v233 = v136;
                swift_endAccess();
                uint64_t v225 = v131;
                swift_bridgeObjectRetain();
                uint64_t v224 = v132;
                swift_retain();
                uint64_t v223 = v134;
                swift_bridgeObjectRetain();
                uint64_t v222 = v133;
                swift_bridgeObjectRetain();
                swift_retain();
                swift_retain();
                id v138 = v233;
                id v139 = v231;
                swift_bridgeObjectRetain();
                id v221 = v138;
                swift_bridgeObjectRetain();
                int v226 = swift_isUniquelyReferenced_nonNull_native();
                *(void *)&long long v282 = v11;
                unint64_t v1 = sub_1BDD13EB4(v110, v4);
                uint64_t v141 = *(void *)(v11 + 16);
                BOOL v142 = (v140 & 1) == 0;
                uint64_t v143 = v141 + v142;
                if (__OFADD__(v141, v142)) {
                  goto LABEL_190;
                }
                char v144 = v140;
                if (*(void *)(v11 + 24) >= v143)
                {
                  if (v226)
                  {
                    uint64_t v11 = v282;
                    if ((v140 & 1) == 0) {
                      goto LABEL_123;
                    }
                  }
                  else
                  {
                    sub_1BDD4EFAC();
                    uint64_t v11 = v282;
                    if ((v144 & 1) == 0) {
                      goto LABEL_123;
                    }
                  }
                }
                else
                {
                  sub_1BDD4E478(v143, v226);
                  unint64_t v145 = sub_1BDD13EB4(v110, v4);
                  if ((v144 & 1) != (v146 & 1))
                  {
                    uint64_t result = sub_1BDDB0528();
                    __break(1u);
                    return result;
                  }
                  unint64_t v1 = v145;
                  uint64_t v11 = v282;
                  if ((v144 & 1) == 0)
                  {
LABEL_123:
                    *(void *)(v11 + 8 * (v1 >> 6) + 64) |= 1 << v1;
                    uint64_t v147 = (uint64_t *)(*(void *)(v11 + 48) + 16 * v1);
                    *uint64_t v147 = v110;
                    v147[1] = v4;
                    *(void *)(*(void *)(v11 + 56) + 8 * v1) = v233;
                    uint64_t v148 = *(void *)(v11 + 16);
                    BOOL v15 = __OFADD__(v148, 1);
                    uint64_t v149 = v148 + 1;
                    if (v15)
                    {
                      __break(1u);
LABEL_198:
                      __break(1u);
LABEL_199:
                      __break(1u);
                    }
                    *(void *)(v11 + 16) = v149;
                    swift_bridgeObjectRetain();
LABEL_128:

                    swift_release();
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_release();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();

                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    uint64_t v100 = v259(v113, v272);
                    uint64_t v29 = v270;
LABEL_117:
                    unint64_t v99 = v273;
                    uint64_t v102 = v274;
                    uint64_t v269 = v11;
                    if (v273) {
                      goto LABEL_89;
                    }
                    continue;
                  }
                }
                uint64_t v150 = *(void *)(v11 + 56);

                *(void *)(v150 + 8 * v1) = v233;
                goto LABEL_128;
              }
            }
            else
            {
              (*v268)(v117, 1, 1, v272);
              uint64_t v11 = v269;
            }
            sub_1BDD1DD48((uint64_t)v117);
LABEL_111:
            swift_bridgeObjectRetain();
            unint64_t v1 = sub_1BDD13EB4(v110, v4);
            char v127 = v126;
            swift_bridgeObjectRelease();
            uint64_t v29 = v270;
            if ((v127 & 1) == 0)
            {
              swift_release();
              uint64_t v100 = swift_bridgeObjectRelease();
              unint64_t v99 = v273;
              uint64_t v102 = v274;
              if (v273) {
                goto LABEL_89;
              }
              continue;
            }
            char v128 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&long long v282 = v11;
            if ((v128 & 1) == 0)
            {
              sub_1BDD4EFAC();
              uint64_t v11 = v282;
            }
            swift_bridgeObjectRelease();
            uint64_t v129 = *(void **)(*(void *)(v11 + 56) + 8 * v1);
            sub_1BDD2ABFC(v1, v11);
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            goto LABEL_117;
          }
          break;
        }
        uint64_t v108 = (char *)v102 + 4;
        if ((uint64_t)v102 + 4 >= v267)
        {
LABEL_131:
          swift_release();
          uint64_t v284 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EBA268E0);
          *(void *)&long long v282 = v11;
          sub_1BDD198E8(&v282, v287);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v151 = v243;
          char v152 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v281 = v105;
          sub_1BDD4EC50(v287, v151, v152);
          uint64_t v153 = v281;

          swift_bridgeObjectRelease();
          if (!*(void *)(v153 + 16)
            || (swift_bridgeObjectRetain(),
                uint64_t v154 = v238,
                sub_1BDD4D9C0((uint64_t)v154),
                char v156 = v155,
                swift_bridgeObjectRelease(),
                v154,
                (v156 & 1) == 0))
          {
            uint64_t v284 = (void *)MEMORY[0x1E4FBB390];
            LOBYTE(v282) = 1;
            sub_1BDD198E8(&v282, v287);
            uint64_t v157 = v238;
            char v158 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v281 = v153;
            sub_1BDD4EC50(v287, v157, v158);
            uint64_t v153 = v281;

            swift_bridgeObjectRelease();
          }
          LOBYTE(v287[0]) = 0;
          uint64_t v159 = (void *)sub_1BDDAFD38();
          uint64_t v160 = swift_bridgeObjectRetain();
          sub_1BDD5AC74(v160);
          swift_bridgeObjectRelease();
          char v161 = (void *)sub_1BDDAFC68();
          swift_bridgeObjectRelease();
          *(void *)&long long v282 = 0;
          id v162 = CalculateEvaluateError((uint64_t)v159, (uint64_t)v161, (uint64_t)&v282, (uint64_t)v287);

          id v163 = (id)v282;
          if (LOBYTE(v287[0]) == 1)
          {
            type metadata accessor for StocksKitCurrencyCache();
            if (static StocksKitCurrencyCache.isEnabled.getter())
            {
              uint64_t v164 = (id *)sub_1BDD24614();
              uint64_t v165 = *(void (**)(double))((*MEMORY[0x1E4FBC8C8] & *(void *)*v164) + 0x60);
              id v166 = *v164;
              v165(6.0);
            }
            else
            {
              if (objc_msgSend(v227, sel_isMainThread))
              {
                id v184 = objc_msgSend(self, sel_shared);
                objc_msgSend(v184, sel_setTimeout_, 6.0);
              }
              id v166 = objc_msgSend(self, sel_shared);
              objc_msgSend(v166, sel_refreshIfNeeded);
            }

            uint64_t v185 = (void *)sub_1BDDAFD38();
            swift_bridgeObjectRelease();
            sub_1BDD5AC74(v153);
            swift_bridgeObjectRelease();
            uint64_t v186 = (void *)sub_1BDDAFC68();
            swift_bridgeObjectRelease();
            *(void *)&long long v282 = v163;
            id v187 = CalculateEvaluateError((uint64_t)v185, (uint64_t)v186, (uint64_t)&v282, (uint64_t)v287);

            id v188 = (id)v282;
            id v162 = v187;
            id v163 = v188;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          id v189 = v162;

          id v190 = v163;
          char v277 = 0;
          uint64_t v191 = v254;
          if (v254)
          {
            swift_bridgeObjectRetain();
            uint64_t v192 = v245;
            sub_1BDD148D8((uint64_t *)&v282, v245, v191);

            uint64_t v193 = swift_bridgeObjectRelease();
            id v195 = v162;
            id v196 = v163;
          }
          else
          {

            id v195 = v162;
            id v196 = v163;
            uint64_t v192 = v245;
          }
          goto LABEL_163;
        }
        unint64_t v106 = *(void *)(v266 + 8 * (void)v108);
        if (v106)
        {
          int64_t v107 = (int64_t)v102 + 4;
          goto LABEL_103;
        }
        while (1)
        {
          int64_t v107 = (int64_t)(v108 + 1);
          if (__OFADD__(v108, 1)) {
            break;
          }
          if (v107 >= v267) {
            goto LABEL_131;
          }
          unint64_t v106 = *(void *)(v266 + 8 * v107);
          ++v108;
          if (v106) {
            goto LABEL_103;
          }
        }
LABEL_182:
        __break(1u);
LABEL_183:
        __break(1u);
LABEL_184:
        __break(1u);
LABEL_185:
        __break(1u);
LABEL_186:
        __break(1u);
LABEL_187:
        __break(1u);
LABEL_188:
        __break(1u);
LABEL_189:
        __break(1u);
LABEL_190:
        __break(1u);
LABEL_191:
        swift_bridgeObjectRetain_n();
        uint64_t v12 = sub_1BDDB0448();
        swift_bridgeObjectRelease();
        if (!v12)
        {
LABEL_192:
          swift_bridgeObjectRelease();
          uint64_t v207 = MEMORY[0x1E4FBC870];
          goto LABEL_193;
        }
        goto LABEL_7;
      }
      break;
    }
    int64_t v80 = v1 + 1;
    if (__OFADD__(v1, 1)) {
      goto LABEL_184;
    }
    if (v80 >= (uint64_t)v274)
    {
      uint64_t v193 = swift_release();
      uint64_t v29 = v270;
      goto LABEL_173;
    }
    unint64_t v81 = *(void *)(v273 + 8 * v80);
    ++v1;
    uint64_t v29 = v270;
    if (v81) {
      goto LABEL_69;
    }
    unint64_t v1 = v80 + 1;
    if (v80 + 1 >= (uint64_t)v274) {
      goto LABEL_172;
    }
    unint64_t v81 = *(void *)(v273 + 8 * v1);
    if (v81) {
      goto LABEL_69;
    }
    unint64_t v1 = v80 + 2;
    if (v80 + 2 >= (uint64_t)v274) {
      goto LABEL_172;
    }
    unint64_t v81 = *(void *)(v273 + 8 * v1);
    if (v81) {
      goto LABEL_69;
    }
    int64_t v82 = v80 + 3;
    if (v82 >= (uint64_t)v274) {
      goto LABEL_172;
    }
    unint64_t v81 = *(void *)(v273 + 8 * v82);
    if (v81)
    {
      unint64_t v1 = v82;
LABEL_69:
      unint64_t v77 = (v81 - 1) & v81;
      unint64_t v79 = __clz(__rbit64(v81)) + (v1 << 6);
      goto LABEL_70;
    }
    while (1)
    {
      unint64_t v1 = v82 + 1;
      if (__OFADD__(v82, 1)) {
        goto LABEL_189;
      }
      if ((uint64_t)v1 >= (uint64_t)v274) {
        break;
      }
      unint64_t v81 = *(void *)(v273 + 8 * v1);
      ++v82;
      if (v81) {
        goto LABEL_69;
      }
    }
LABEL_172:
    uint64_t v193 = swift_release();
LABEL_173:
    uint64_t v191 = v254;
    uint64_t v192 = v245;
    if (v254)
    {
      swift_bridgeObjectRetain();
      sub_1BDD5E46C(v192, v191);
      swift_bridgeObjectRelease();
      uint64_t v193 = swift_bridgeObjectRelease();
    }
    id v196 = v251;
    id v195 = v255;
LABEL_163:
    uint64_t v275 = &v217;
    MEMORY[0x1F4188790](v193, v194);
    unint64_t v198 = (char *)&v217 - ((v197 + 15) & 0xFFFFFFFFFFFFFFF0);
    CalculateExpression.id.getter((uint64_t)v198);
    uint64_t aBlock = v248;
    uint64_t v289 = v263;
    uint64_t v290 = v246;
    unint64_t v291 = v261;
    uint64_t v292 = (uint64_t (*)())v29;
    uint64_t v293 = (uint64_t)v265;
    uint64_t v294 = v252;
    id v295 = v195;
    id v255 = v195;
    id v251 = v196;
    id v296 = v196;
    char v297 = v277;
    uint64_t v199 = v235;
    *uint64_t v235 = v281;
    *(_DWORD *)((char *)v199 + 3) = *(_DWORD *)((char *)&v281 + 3);
    *(void *)&v298[7] = v244;
    uint64_t v299 = v253;
    uint64_t v300 = v192;
    uint64_t v301 = v191;
    char v302 = v276;
    uint64_t v200 = v262;
    swift_beginAccess();
    sub_1BDD5F408((uint64_t)&aBlock);
    char v201 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v287[0] = *v200;
    *uint64_t v200 = 0x8000000000000000;
    sub_1BDD5CD0C((uint64_t)&aBlock, (uint64_t)v198, v201);
    *uint64_t v200 = *(void *)&v287[0];
    swift_bridgeObjectRelease();
    v259(v198, v272);
    swift_endAccess();
    if (v191)
    {
      swift_bridgeObjectRetain_n();
      sub_1BDD148D8((uint64_t *)&v282, v192, v191);
      swift_bridgeObjectRelease();
      uint64_t v11 = v236;
      if (v276)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF238);
        swift_retain();
        uint64_t v202 = sub_1BDD21280();
        unint64_t v203 = v280;
        char v204 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v282 = v203;
        sub_1BDD5CED8(v202, v192, v191, v204);
        unint64_t v280 = v282;
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1BDD5C098(v192, v191);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
      }
      uint64_t v206 = v247;
      unint64_t v13 = v256;
      id v205 = v251;
    }
    else
    {
      swift_release();
      swift_release();
      id v205 = v251;
      uint64_t v11 = v236;
      uint64_t v206 = v247;
      unint64_t v13 = v256;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v241;
    unint64_t v1 = v242;
  }
  while (v13 != v206);
LABEL_178:
  swift_bridgeObjectRelease();
  uint64_t v207 = v279;
LABEL_193:
  swift_bridgeObjectRelease();
  unint64_t v208 = (void *)swift_allocObject();
  v208[2] = v1;
  v208[3] = v4;
  uint64_t v209 = v220;
  v208[4] = v220;
  v208[5] = v207;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (objc_msgSend(v227, sel_isMainThread))
  {
    sub_1BDD5B03C(v1, v4, v209, v207);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v210 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1BDCE6874(0, qword_1EBA28CD0);
    uint64_t v211 = sub_1BDDB0178();
    uint64_t v212 = swift_allocObject();
    *(void *)(v212 + 16) = sub_1BDD5F3EC;
    *(void *)(v212 + 24) = v208;
    uint64_t v213 = swift_allocObject();
    uint64_t v210 = sub_1BDD5FE54;
    *(void *)(v213 + 16) = sub_1BDD5FE54;
    *(void *)(v213 + 24) = v212;
    uint64_t v285 = sub_1BDD5FE54;
    uint64_t v286 = v213;
    *(void *)&long long v282 = MEMORY[0x1E4F143A8];
    *((void *)&v282 + 1) = 1107296256;
    uint64_t v283 = sub_1BDD5AAE4;
    uint64_t v284 = &block_descriptor_41;
    unint64_t v214 = _Block_copy(&v282);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v211, v214);

    swift_release();
    swift_release();
    _Block_release(v214);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      goto LABEL_199;
    }
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BDCE03A8((uint64_t)v218);
  return sub_1BDCE03A8((uint64_t)v210);
}

uint64_t sub_1BDD5A644(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = (uint64_t *)(a2 + 16);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 360))(a1);
  if (v6)
  {
    uint64_t v7 = (*(uint64_t (**)(void))(*(void *)a1 + 368))();
    uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 344))(v7);
  }
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 336))(v6);
  swift_beginAccess();
  uint64_t *v5 = v8;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  unint64_t v9 = *v5;
  if (v9 >> 62) {
    goto LABEL_26;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v10) {
    return swift_bridgeObjectRelease();
  }
LABEL_5:
  if (v10 >= 1)
  {
    uint64_t v11 = 0;
    a3 += 2;
    unint64_t v43 = v9 & 0xC000000000000001;
    unint64_t v42 = v9;
    uint64_t v41 = v10;
    while (1)
    {
      if (v43)
      {
        uint64_t v12 = MEMORY[0x1C18862A0](v11, v9);
      }
      else
      {
        uint64_t v12 = *(void *)(v9 + 8 * v11 + 32);
        swift_retain();
      }
      uint64_t v13 = sub_1BDDAF9F8();
      uint64_t v44 = &v40;
      unint64_t v9 = *(void *)(v13 - 8);
      MEMORY[0x1F4188790](v13, v14);
      unint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      CalculateExpression.id.getter((uint64_t)v16);
      uint64_t v17 = swift_retain();
      sub_1BDD5EEA0(v17, (uint64_t)v46);
      swift_beginAccess();
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v45 = (void *)*a3;
      uint64_t v19 = v45;
      *a3 = 0x8000000000000000;
      unint64_t v21 = sub_1BDD1CE5C((uint64_t)v16);
      uint64_t v22 = v19[2];
      BOOL v23 = (v20 & 1) == 0;
      uint64_t v24 = v22 + v23;
      if (__OFADD__(v22, v23))
      {
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        swift_bridgeObjectRetain();
        uint64_t v10 = sub_1BDDB0448();
        if (!v10) {
          return swift_bridgeObjectRelease();
        }
        goto LABEL_5;
      }
      char v25 = v20;
      if (v19[3] >= v24)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v20) {
            goto LABEL_18;
          }
        }
        else
        {
          sub_1BDD5D12C();
          uint64_t v19 = v45;
          if (v25) {
            goto LABEL_18;
          }
        }
      }
      else
      {
        sub_1BDD5C168(v24, isUniquelyReferenced_nonNull_native);
        uint64_t v19 = v45;
        unint64_t v26 = sub_1BDD1CE5C((uint64_t)v16);
        if ((v25 & 1) != (v27 & 1)) {
          goto LABEL_29;
        }
        unint64_t v21 = v26;
        if (v25)
        {
LABEL_18:
          sub_1BDD5FCE8((uint64_t)v46, v19[7] + 120 * v21);
          goto LABEL_22;
        }
      }
      v19[(v21 >> 6) + 8] |= 1 << v21;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 16))(v19[6] + *(void *)(v9 + 72) * v21, v16, v13);
      uint64_t v28 = v19[7] + 120 * v21;
      long long v29 = v46[0];
      long long v30 = v46[1];
      long long v31 = v46[3];
      *(_OWORD *)(v28 + 32) = v46[2];
      *(_OWORD *)(v28 + 48) = v31;
      *(_OWORD *)uint64_t v28 = v29;
      *(_OWORD *)(v28 + 16) = v30;
      long long v32 = v46[4];
      long long v33 = v46[5];
      long long v34 = v46[6];
      *(unsigned char *)(v28 + 112) = v47;
      *(_OWORD *)(v28 + 80) = v33;
      *(_OWORD *)(v28 + 96) = v34;
      *(_OWORD *)(v28 + 64) = v32;
      uint64_t v35 = v19[2];
      BOOL v36 = __OFADD__(v35, 1);
      uint64_t v37 = v35 + 1;
      if (v36) {
        goto LABEL_25;
      }
      v19[2] = v37;
LABEL_22:
      *a3 = v19;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v13);
      swift_endAccess();
      uint64_t v38 = (id *)(v12 + OBJC_IVAR____TtC9Calculate19CalculateExpression_internalRequest);
      swift_beginAccess();
      if (*v38) {
        objc_msgSend(*v38, sel_cancel);
      }
      ++v11;
      sub_1BDD3BC3C();
      swift_release();
      unint64_t v9 = v42;
      if (v41 == v11) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  __break(1u);
LABEL_29:
  uint64_t result = sub_1BDDB0528();
  __break(1u);
  return result;
}

uint64_t sub_1BDD5AAE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void (*sub_1BDD5AB0C(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_1BDDAF9F8();
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  v2[6] = malloc(*(void *)(v4 + 64));
  (*(void (**)(void))(v5 + 16))();
  v2[7] = sub_1BDD5E2B8(v2);
  return sub_1BDD5ABFC;
}

void sub_1BDD5ABFC(void *a1)
{
  unint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void **)(*a1 + 48);
  uint64_t v3 = *(void *)(*a1 + 32);
  uint64_t v4 = *(void *)(*a1 + 40);
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);
  free(v1);
}

uint64_t sub_1BDD5AC74(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF010);
    uint64_t v2 = sub_1BDDB0488();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = *(void **)(*(void *)(a1 + 48) + 8 * v12);
    sub_1BDD18D98(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v39 + 8);
    *(void *)&v39[0] = v17;
    v37[0] = v39[0];
    v37[1] = v39[1];
    uint64_t v38 = v40;
    *(void *)&v36[0] = v17;
    type metadata accessor for CalculateKey();
    id v18 = v17;
    swift_dynamicCast();
    sub_1BDD198E8((_OWORD *)((char *)v37 + 8), v31);
    long long v32 = v28;
    long long v33 = v29;
    uint64_t v34 = v30;
    sub_1BDD198E8(v31, v35);
    long long v28 = v32;
    long long v29 = v33;
    uint64_t v30 = v34;
    sub_1BDD198E8(v35, v36);
    sub_1BDD198E8(v36, &v32);
    uint64_t result = sub_1BDDB02C8();
    uint64_t v19 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v20) & ~*(void *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(void *)(v10 + 32) = v30;
    uint64_t result = (uint64_t)sub_1BDD198E8(&v32, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_1BDCE68B0();
    return v2;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1BDD5B03C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  v38[1] = a4;
  swift_beginAccess();
  unint64_t v7 = *(void *)(a1 + 16);
  if (v7 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1BDDB0448();
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  unsigned __int8 v39 = a3;
  if (v8)
  {
    int v40 = 0;
    unint64_t v9 = 0;
    unint64_t v42 = (uint64_t *)(a2 + 16);
    unint64_t v43 = v7 & 0xC000000000000001;
    uint64_t v41 = v7 & 0xFFFFFFFFFFFFFF8;
    while (2)
    {
      unint64_t v10 = v9;
      while (1)
      {
        if (v43)
        {
          MEMORY[0x1C18862A0](v10, v7);
          unint64_t v9 = v10 + 1;
          if (__OFADD__(v10, 1)) {
            goto LABEL_24;
          }
        }
        else
        {
          if (v10 >= *(void *)(v41 + 16)) {
            goto LABEL_25;
          }
          swift_retain();
          unint64_t v9 = v10 + 1;
          if (__OFADD__(v10, 1))
          {
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
        }
        uint64_t v11 = v8;
        uint64_t v12 = sub_1BDDAF9F8();
        a3 = v38;
        uint64_t v13 = *(void *)(v12 - 8);
        MEMORY[0x1F4188790](v12, v14);
        int64_t v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
        CalculateExpression.id.getter((uint64_t)v16);
        uint64_t v17 = v42;
        swift_beginAccess();
        a2 = *v17;
        if (!*(void *)(a2 + 16)) {
          break;
        }
        unint64_t v18 = sub_1BDD1CE5C((uint64_t)v16);
        if ((v19 & 1) == 0) {
          break;
        }
        uint64_t v20 = *(void *)(a2 + 56) + 120 * v18;
        long long v22 = *(_OWORD *)(v20 + 32);
        long long v21 = *(_OWORD *)(v20 + 48);
        long long v23 = *(_OWORD *)(v20 + 16);
        v44[0] = *(_OWORD *)v20;
        v44[1] = v23;
        v44[2] = v22;
        v44[3] = v21;
        long long v24 = *(_OWORD *)(v20 + 64);
        long long v25 = *(_OWORD *)(v20 + 80);
        long long v26 = *(_OWORD *)(v20 + 96);
        char v45 = *(unsigned char *)(v20 + 112);
        v44[5] = v25;
        v44[6] = v26;
        v44[4] = v24;
        swift_endAccess();
        sub_1BDD5F408((uint64_t)v44);
        (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
        a2 = sub_1BDD4C164((uint64_t *)v44);
        sub_1BDD5FD24((uint64_t)v44);
        swift_release();
        if (a2) {
          goto LABEL_18;
        }
        ++v10;
        uint64_t v8 = v11;
        if (v9 == v11) {
          goto LABEL_21;
        }
      }
      swift_endAccess();
      swift_release();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
LABEL_18:
      int v40 = 1;
      uint64_t v8 = v11;
      if (v9 != v11) {
        continue;
      }
      break;
    }
  }
  else
  {
    int v40 = 0;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  uint64_t v27 = v39;
  long long v28 = *(void (**)(uint64_t))(*v39 + 272);
  uint64_t v29 = swift_bridgeObjectRetain();
  v28(v29);
  sub_1BDD3AA60(MEMORY[0x1E4FBC860]);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v32 = MEMORY[0x1F4188790](KeyPath, v31);
  long long v33 = *(void (**)(uint64_t, uint64_t (*)()))(*v27 + 512);
  v33(v32, sub_1BDD5FCF8);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v34 = swift_getKeyPath();
  uint64_t v36 = MEMORY[0x1F4188790](v34, v35);
  v33(v36, (uint64_t (*)())sub_1BDD5FE90);
  uint64_t result = swift_release();
  if (v40) {
    return (*(uint64_t (**)(uint64_t))(*v27 + 488))(result);
  }
  return result;
}

uint64_t sub_1BDD5B4D4()
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v0 + 456))();
  if ((result & 1) == 0)
  {
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v4 = MEMORY[0x1F4188790](KeyPath, v3);
    uint64_t v17 = v0;
    char v18 = 1;
    (*(void (**)(uint64_t, void (*)()))(*(void *)v0 + 512))(v4, sub_1BDD5FE90);
    uint64_t v5 = swift_release();
    if ((*(uint64_t (**)(uint64_t))(*(void *)v0 + 216))(v5))
    {
      return (*(uint64_t (**)(void))(*(void *)v0 + 480))();
    }
    else
    {
      if (qword_1EBA2A9B0 != -1) {
        swift_once();
      }
      v19[3] = qword_1EBA2A788;
      aBlock[4] = sub_1BDD5F4B0;
      aBlock[5] = v0;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BDD4D4C4;
      aBlock[3] = &block_descriptor_45;
      uint64_t v6 = _Block_copy(aBlock);
      uint64_t v7 = sub_1BDDAFAC8();
      v19[2] = v19;
      uint64_t v8 = *(void *)(v7 - 8);
      MEMORY[0x1F4188790](v7, v9);
      uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      swift_retain();
      sub_1BDDAFAB8();
      uint64_t v12 = sub_1BDDAFAA8();
      v19[1] = v19;
      uint64_t v13 = *(void *)(v12 - 8);
      MEMORY[0x1F4188790](v12, v14);
      int64_t v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      v19[4] = MEMORY[0x1E4FBC860];
      sub_1BDD5FDC8(&qword_1EBA28CA0, MEMORY[0x1F41AAF50]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA28CA8);
      sub_1BDD19AC4(&qword_1EBA28CB0, &qword_1EBA28CA8);
      sub_1BDDB0248();
      MEMORY[0x1C1886080](0, v11, v16, v6);
      _Block_release(v6);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      return swift_release();
    }
  }
  return result;
}

unint64_t sub_1BDD5B8E4(unint64_t a1)
{
  uint64_t v2 = v1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BDDB0448();
    uint64_t v4 = result;
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t result = swift_bridgeObjectRetain();
  }
  if (v4)
  {
    if (v4 < 1)
    {
      __break(1u);
      goto LABEL_43;
    }
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = 0;
      do
      {
        uint64_t v10 = MEMORY[0x1C18862A0](v6, a1);
        uint64_t v11 = CalculateExpression.document.getter();
        if (v11)
        {
          uint64_t v7 = v11;
          swift_release();
          BOOL v8 = v7 == v2;
        }
        else
        {
          BOOL v8 = 0;
        }
        ++v6;
        uint64_t v9 = (BOOL *)(v10 + OBJC_IVAR____TtC9Calculate19CalculateExpression_isRemoving);
        swift_beginAccess();
        *uint64_t v9 = v8;
        swift_unknownObjectRelease();
      }
      while (v4 != v6);
    }
    else
    {
      uint64_t v12 = 0;
      do
      {
        uint64_t v16 = *(void *)(a1 + 8 * v12 + 32);
        swift_retain();
        uint64_t v17 = CalculateExpression.document.getter();
        if (v17)
        {
          uint64_t v13 = v17;
          swift_release();
          BOOL v14 = v13 == v2;
        }
        else
        {
          BOOL v14 = 0;
        }
        ++v12;
        uint64_t v15 = (BOOL *)(v16 + OBJC_IVAR____TtC9Calculate19CalculateExpression_isRemoving);
        swift_beginAccess();
        *uint64_t v15 = v14;
        swift_release();
      }
      while (v4 != v12);
    }
  }
  uint64_t v18 = swift_bridgeObjectRelease();
  unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 336))(v18);
  unint64_t v19 = result;
  if (result >> 62)
  {
    unint64_t result = sub_1BDDB0448();
    uint64_t v20 = result;
    if (result)
    {
LABEL_18:
      if (v20 >= 1)
      {
        for (uint64_t i = 0; i != v20; ++i)
        {
          if ((v19 & 0xC000000000000001) != 0)
          {
            uint64_t v23 = MEMORY[0x1C18862A0](i, v19);
          }
          else
          {
            uint64_t v23 = *(void *)(v19 + 8 * i + 32);
            swift_retain();
          }
          long long v24 = (unsigned char *)(v23 + OBJC_IVAR____TtC9Calculate19CalculateExpression_isRemoving);
          swift_beginAccess();
          *long long v24 = 0;
          uint64_t v25 = CalculateExpression.document.getter();
          if (!v25 || (uint64_t v26 = v25, swift_release(), v26 != v2))
          {
            swift_retain();
            sub_1BDD3E8AC();
            char v22 = sub_1BDD013AC();
            CalculateExpression.setNeedsEvaluation(rebuild:)(v22 & 1);
          }
          swift_release();
        }
        goto LABEL_30;
      }
LABEL_43:
      __break(1u);
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v20 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v20) {
      goto LABEL_18;
    }
  }
LABEL_30:
  uint64_t v27 = swift_bridgeObjectRelease();
  if (v4)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      for (uint64_t j = 0; j != v4; ++j)
      {
        uint64_t v29 = (unsigned char *)(MEMORY[0x1C18862A0](j, a1) + OBJC_IVAR____TtC9Calculate19CalculateExpression_isRemoving);
        swift_beginAccess();
        if (*v29 == 1) {
          sub_1BDD3E8AC();
        }
        swift_unknownObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      for (uint64_t k = 0; k != v4; ++k)
      {
        uint64_t v31 = (unsigned char *)(*(void *)(a1 + 8 * k + 32) + OBJC_IVAR____TtC9Calculate19CalculateExpression_isRemoving);
        swift_beginAccess();
        if (*v31 == 1)
        {
          swift_retain();
          sub_1BDD3E8AC();
          swift_release();
        }
      }
    }
    uint64_t v27 = swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)v2 + 488))(v27);
}

uint64_t sub_1BDD5BC98()
{
  return sub_1BDDAFA58();
}

uint64_t sub_1BDD5BD20()
{
  return sub_1BDDAFA48();
}

uint64_t CalculateDocument.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument_id;
  uint64_t v2 = sub_1BDDAF9F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument___observationRegistrar;
  uint64_t v4 = sub_1BDDAFA98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t CalculateDocument.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument_id;
  uint64_t v2 = sub_1BDDAF9F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + OBJC_IVAR____TtC9Calculate17CalculateDocument___observationRegistrar;
  uint64_t v4 = sub_1BDDAFA98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v6 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x1F4186488](v0, v5, v6);
}

uint64_t sub_1BDD5BFEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Calculate17CalculateDocument_id;
  uint64_t v4 = sub_1BDDAF9F8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_1BDD5C064()
{
  return sub_1BDDAF9D8() & 1;
}

uint64_t sub_1BDD5C098(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1BDD13EB4(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BDD5D4F4();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1BDD2ABFC(v6, v9);
  uint64_t *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1BDD5C168(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF288);
  int v75 = a2;
  uint64_t v89 = sub_1BDDB0478();
  if (*(void *)(v5 + 16))
  {
    unint64_t v68 = v2;
    uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v7 = *(void *)(v5 + 64);
    uint64_t v70 = (void *)(v5 + 64);
    if (v6 < 64) {
      uint64_t v8 = ~(-1 << v6);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & v7;
    int64_t v69 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v10 = v89 + 64;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    uint64_t v74 = v5;
    while (1)
    {
      if (v9)
      {
        uint64_t v85 = (v9 - 1) & v9;
        int64_t v86 = v12;
        unint64_t v21 = __clz(__rbit64(v9)) | (v12 << 6);
      }
      else
      {
        int64_t v22 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v69) {
          goto LABEL_34;
        }
        unint64_t v23 = v70[v22];
        int64_t v24 = v12 + 1;
        if (!v23)
        {
          int64_t v24 = v12 + 2;
          if (v12 + 2 >= v69) {
            goto LABEL_34;
          }
          unint64_t v23 = v70[v24];
          if (!v23)
          {
            uint64_t v25 = v12 + 3;
            if (v12 + 3 >= v69)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v68;
              if (v75)
              {
                uint64_t v66 = 1 << *(unsigned char *)(v5 + 32);
                if (v66 >= 64) {
                  bzero(v70, ((unint64_t)(v66 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v70 = -1 << v66;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v70[v25];
            if (!v23)
            {
              while (1)
              {
                int64_t v24 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_41;
                }
                if (v24 >= v69) {
                  goto LABEL_34;
                }
                unint64_t v23 = v70[v24];
                ++v25;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v24 = v12 + 3;
          }
        }
LABEL_21:
        uint64_t v85 = (v23 - 1) & v23;
        int64_t v86 = v24;
        unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
      }
      uint64_t v92 = sub_1BDDAF9F8();
      uint64_t v26 = *(void *)(v92 - 8);
      MEMORY[0x1F4188790](v92, v27);
      uint64_t v30 = v29;
      uint64_t v31 = *(void *)(v5 + 48);
      uint64_t v87 = *(void *)(v30 + 72);
      uint64_t v88 = v32;
      uint64_t v33 = v31 + v87 * v21;
      uint64_t v34 = 120 * v21;
      uint64_t v91 = (char *)&v67 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v75)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))((char *)&v67 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), v33, v92);
        uint64_t v35 = *(void *)(v5 + 56) + v34;
        uint64_t v36 = *(void *)v35;
        uint64_t v83 = *(void *)(v35 + 8);
        uint64_t v84 = v36;
        uint64_t v37 = *(void *)(v35 + 16);
        uint64_t v81 = *(void *)(v35 + 24);
        uint64_t v82 = v37;
        uint64_t v38 = *(void *)(v35 + 32);
        uint64_t v39 = *(void *)(v35 + 48);
        uint64_t v90 = *(void *)(v35 + 40);
        int v40 = *(void **)(v35 + 56);
        unint64_t v79 = *(void **)(v35 + 64);
        int64_t v80 = v40;
        int v76 = *(unsigned __int8 *)(v35 + 72);
        uint64_t v41 = *(void *)(v35 + 80);
        uint64_t v42 = *(void *)(v35 + 88);
        uint64_t v77 = v38;
        uint64_t v78 = v41;
        uint64_t v43 = *(void *)(v35 + 96);
        uint64_t v44 = *(void *)(v35 + 104);
        char v45 = *(unsigned char *)(v35 + 112);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))((char *)&v67 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), v33, v92);
        uint64_t v46 = *(void *)(v5 + 56) + v34;
        uint64_t v47 = *(void *)v46;
        uint64_t v83 = *(void *)(v46 + 8);
        uint64_t v84 = v47;
        uint64_t v48 = *(void *)(v46 + 16);
        uint64_t v49 = *(void *)(v46 + 24);
        uint64_t v50 = *(void *)(v46 + 32);
        uint64_t v90 = *(void *)(v46 + 40);
        uint64_t v52 = *(void *)(v46 + 48);
        uint64_t v51 = *(void **)(v46 + 56);
        uint64_t v53 = *(void **)(v46 + 64);
        int v76 = *(unsigned __int8 *)(v46 + 72);
        uint64_t v54 = *(void *)(v46 + 88);
        uint64_t v78 = *(void *)(v46 + 80);
        uint64_t v55 = *(void *)(v46 + 104);
        uint64_t v72 = *(void *)(v46 + 96);
        uint64_t v73 = v26;
        int v71 = *(unsigned __int8 *)(v46 + 112);
        swift_bridgeObjectRetain();
        uint64_t v82 = v48;
        swift_retain();
        uint64_t v81 = v49;
        uint64_t v26 = v73;
        swift_bridgeObjectRetain();
        uint64_t v77 = v50;
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v39 = v52;
        swift_retain();
        int64_t v80 = v51;
        id v56 = v51;
        unint64_t v79 = v53;
        id v57 = v53;
        uint64_t v44 = v55;
        char v45 = v71;
        swift_bridgeObjectRetain();
        uint64_t v42 = v54;
        uint64_t v43 = v72;
        swift_bridgeObjectRetain();
      }
      uint64_t v58 = v89;
      sub_1BDD5FDC8((unint64_t *)&qword_1EA0DEFD0, MEMORY[0x1F418BBD0]);
      uint64_t result = sub_1BDDAFCE8();
      uint64_t v59 = -1 << *(unsigned char *)(v58 + 32);
      unint64_t v60 = result & ~v59;
      unint64_t v61 = v60 >> 6;
      if (((-1 << v60) & ~*(void *)(v10 + 8 * (v60 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v60) & ~*(void *)(v10 + 8 * (v60 >> 6)))) | v60 & 0x7FFFFFFFFFFFFFC0;
        BOOL v14 = v91;
      }
      else
      {
        char v62 = 0;
        unint64_t v63 = (unint64_t)(63 - v59) >> 6;
        BOOL v14 = v91;
        do
        {
          if (++v61 == v63 && (v62 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v64 = v61 == v63;
          if (v61 == v63) {
            unint64_t v61 = 0;
          }
          v62 |= v64;
          uint64_t v65 = *(void *)(v10 + 8 * v61);
        }
        while (v65 == -1);
        unint64_t v13 = __clz(__rbit64(~v65)) + (v61 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v15 = v89;
      uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v26 + 32))(*(void *)(v89 + 48) + v13 * v87, v14, v92);
      uint64_t v16 = *(void *)(v15 + 56) + 120 * v13;
      uint64_t v17 = v83;
      *(void *)uint64_t v16 = v84;
      *(void *)(v16 + 8) = v17;
      uint64_t v18 = v81;
      *(void *)(v16 + 16) = v82;
      *(void *)(v16 + 24) = v18;
      uint64_t v19 = v90;
      *(void *)(v16 + 32) = v77;
      *(void *)(v16 + 40) = v19;
      uint64_t v20 = v80;
      *(void *)(v16 + 48) = v39;
      *(void *)(v16 + 56) = v20;
      *(void *)(v16 + 64) = v79;
      *(unsigned char *)(v16 + 72) = v76;
      *(void *)(v16 + 80) = v78;
      *(void *)(v16 + 88) = v42;
      *(void *)(v16 + 96) = v43;
      *(void *)(v16 + 104) = v44;
      *(unsigned char *)(v16 + 112) = v45;
      ++*(void *)(v15 + 16);
      uint64_t v5 = v74;
      unint64_t v9 = v85;
      int64_t v12 = v86;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v89;
  return result;
}

uint64_t sub_1BDD5C6FC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF258);
  char v36 = a2;
  uint64_t v6 = sub_1BDDB0478();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1BDDB0558();
    sub_1BDDAFDB8();
    uint64_t result = sub_1BDDB0578();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

unint64_t sub_1BDD5CA14(unint64_t result, uint64_t a2)
{
  uint64_t v2 = a2;
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1BDDB0258();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      uint64_t v8 = (result + 1) & v7;
      uint64_t result = sub_1BDDAF9F8();
      unint64_t v43 = result;
      unint64_t v10 = *(void **)(result - 8);
      uint64_t v11 = (void (*)(char *, unint64_t, unint64_t))v10[2];
      int v40 = v10 + 2;
      uint64_t v41 = v11;
      uint64_t v12 = v10[8];
      uint64_t v13 = v10[9];
      uint64_t v38 = v13;
      uint64_t v39 = v12;
      uint64_t v37 = (uint64_t (**)(char *, unint64_t))(v10 + 1);
      uint64_t v42 = v4;
      unint64_t v14 = result;
      do
      {
        MEMORY[0x1F4188790](result, v9);
        unint64_t v16 = v8;
        unint64_t v17 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
        int64_t v18 = v13 * v6;
        v41(v17, *(void *)(v2 + 48) + v13 * v6, v14);
        uint64_t v19 = v2;
        uint64_t v20 = v7;
        uint64_t v21 = v19;
        sub_1BDD5FDC8((unint64_t *)&qword_1EA0DEFD0, MEMORY[0x1F418BBD0]);
        uint64_t v22 = sub_1BDDAFCE8();
        unint64_t v23 = v17;
        uint64_t v8 = v16;
        uint64_t result = (*v37)(v23, v14);
        uint64_t v24 = v22 & v20;
        uint64_t v7 = v20;
        if (v3 >= (uint64_t)v16)
        {
          if (v24 >= v16 && v3 >= v24)
          {
LABEL_16:
            uint64_t v2 = v21;
            uint64_t v27 = *(void *)(v21 + 48);
            uint64_t v13 = v38;
            if (v38 * v3 < v18 || v27 + v38 * v3 >= (unint64_t)(v27 + v18 + v38))
            {
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v4 = v42;
            }
            else
            {
              uint64_t v4 = v42;
              if (v38 * v3 != v18) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            uint64_t v28 = *(void *)(v2 + 56);
            uint64_t result = v28 + 120 * v3;
            uint64_t v9 = (const void *)(v28 + 120 * v6);
            if (120 * v3 < (uint64_t)(120 * v6)
              || result >= (unint64_t)v9 + 120
              || (v29 = v3 == v6, int64_t v3 = v6, !v29))
            {
              uint64_t result = (unint64_t)memmove((void *)result, v9, 0x78uLL);
              int64_t v3 = v6;
            }
            goto LABEL_5;
          }
        }
        else if (v24 >= v16 || v3 >= v24)
        {
          goto LABEL_16;
        }
        uint64_t v4 = v42;
        uint64_t v2 = v21;
        uint64_t v13 = v38;
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v30 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v30 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << result) - 1;
  }
  *uint64_t v30 = v32 & v31;
  uint64_t v33 = *(void *)(v2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v35;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

uint64_t sub_1BDD5CD0C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1BDD1CE5C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1BDD5D12C();
      goto LABEL_7;
    }
    sub_1BDD5C168(v13, a3 & 1);
    unint64_t v19 = sub_1BDD1CE5C(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      unint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      uint64_t v21 = sub_1BDDAF9F8();
      MEMORY[0x1F4188790](v21, v22);
      uint64_t v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t))(v25 + 16))(v24, a2);
      return sub_1BDD5D048(v10, (uint64_t)v24, a1, v16);
    }
LABEL_15:
    sub_1BDDAF9F8();
    uint64_t result = sub_1BDDB0528();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v17 = v16[7] + 120 * v10;
  return sub_1BDD5FCE8(a1, v17);
}

uint64_t sub_1BDD5CED8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1BDD13EB4(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1BDD5D4F4();
LABEL_7:
    int64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1BDD5C6FC(v15, a4 & 1);
  unint64_t v21 = sub_1BDD13EB4(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_1BDDB0528();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  int64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  unsigned __int8 v18[2] = v26;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDD5D048(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1BDDAF9F8();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v11 = a4[7] + 120 * a1;
  long long v12 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v11 + 48) = v12;
  long long v13 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)a3;
  *(_OWORD *)(v11 + 16) = v13;
  *(unsigned char *)(v11 + 112) = *(unsigned char *)(a3 + 112);
  long long v14 = *(_OWORD *)(a3 + 96);
  long long v15 = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v11 + 80) = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v11 + 96) = v14;
  *(_OWORD *)(v11 + 64) = v15;
  uint64_t v16 = a4[2];
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    a4[2] = v18;
  }
  return result;
}

void *sub_1BDD5D12C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF288);
  uint64_t v48 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1BDDB0468();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v52 = v2;
  if (!v3)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v47 = v52;
    uint64_t v46 = v48;
LABEL_28:
    *uint64_t v46 = v47;
    return result;
  }
  uint64_t v4 = v2;
  uint64_t result = (void *)(v2 + 64);
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  uint64_t v49 = (const void *)(v1 + 64);
  if (v4 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
  {
    uint64_t result = memmove(result, v49, 8 * v6);
    uint64_t v4 = v52;
    uint64_t v3 = *(void *)(v1 + 16);
  }
  int64_t v8 = 0;
  *(void *)(v4 + 16) = v3;
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v50 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v51 = v1;
  while (1)
  {
    if (v11)
    {
      uint64_t v53 = (v11 - 1) & v11;
      int64_t v54 = v8;
      unint64_t v12 = __clz(__rbit64(v11)) | (v8 << 6);
      uint64_t v13 = v51;
      goto LABEL_12;
    }
    int64_t v42 = v8 + 1;
    uint64_t v13 = v51;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v42 >= v50) {
      goto LABEL_26;
    }
    unint64_t v43 = *((void *)v49 + v42);
    int64_t v44 = v8 + 1;
    if (!v43)
    {
      int64_t v44 = v8 + 2;
      if (v8 + 2 >= v50) {
        goto LABEL_26;
      }
      unint64_t v43 = *((void *)v49 + v44);
      if (!v43) {
        break;
      }
    }
LABEL_25:
    uint64_t v53 = (v43 - 1) & v43;
    int64_t v54 = v44;
    unint64_t v12 = __clz(__rbit64(v43)) + (v44 << 6);
LABEL_12:
    uint64_t v14 = sub_1BDDAF9F8();
    uint64_t v66 = &v48;
    uint64_t v15 = *(void *)(v14 - 8);
    MEMORY[0x1F4188790](v14, v16);
    uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v20 = *(void *)(v19 + 72) * v12;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v18, *(void *)(v13 + 48) + v20, v14);
    uint64_t v21 = 120 * v12;
    uint64_t v22 = *(void *)(v13 + 56) + 120 * v12;
    uint64_t v23 = *(void *)(v22 + 8);
    uint64_t v65 = *(void *)v22;
    uint64_t v24 = *(void *)(v22 + 16);
    uint64_t v25 = *(void *)(v22 + 24);
    uint64_t v26 = *(void *)(v22 + 32);
    uint64_t v27 = *(void *)(v22 + 48);
    uint64_t v55 = *(void *)(v22 + 40);
    uint64_t v56 = v27;
    uint64_t v28 = *(void **)(v22 + 56);
    BOOL v29 = *(void **)(v22 + 64);
    int v64 = *(unsigned __int8 *)(v22 + 72);
    uint64_t v63 = *(void *)(v22 + 80);
    uint64_t v30 = *(void *)(v22 + 88);
    uint64_t v59 = v29;
    uint64_t v60 = v30;
    uint64_t v62 = *(void *)(v22 + 96);
    uint64_t v31 = *(void *)(v22 + 104);
    id v57 = v28;
    uint64_t v58 = v31;
    int v61 = *(unsigned __int8 *)(v22 + 112);
    uint64_t v32 = v52;
    (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(void *)(v52 + 48) + v20, v18, v14);
    uint64_t v33 = *(void *)(v32 + 56) + v21;
    *(void *)uint64_t v33 = v65;
    *(void *)(v33 + 8) = v23;
    *(void *)(v33 + 16) = v24;
    *(void *)(v33 + 24) = v25;
    uint64_t v35 = v55;
    uint64_t v34 = v56;
    *(void *)(v33 + 32) = v26;
    *(void *)(v33 + 40) = v35;
    uint64_t v37 = v57;
    uint64_t v36 = v58;
    *(void *)(v33 + 48) = v34;
    *(void *)(v33 + 56) = v37;
    uint64_t v39 = v59;
    uint64_t v38 = v60;
    *(void *)(v33 + 64) = v59;
    *(unsigned char *)(v33 + 72) = v64;
    *(void *)(v33 + 80) = v63;
    *(void *)(v33 + 88) = v38;
    *(void *)(v33 + 96) = v62;
    *(void *)(v33 + 104) = v36;
    *(unsigned char *)(v33 + 112) = v61;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    id v40 = v37;
    id v41 = v39;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    unint64_t v11 = v53;
    int64_t v8 = v54;
  }
  uint64_t v45 = v8 + 3;
  if (v8 + 3 >= v50)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v46 = v48;
    uint64_t v47 = v52;
    goto LABEL_28;
  }
  unint64_t v43 = *((void *)v49 + v45);
  if (v43)
  {
    int64_t v44 = v8 + 3;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v44 = v45 + 1;
    if (__OFADD__(v45, 1)) {
      break;
    }
    if (v44 >= v50) {
      goto LABEL_26;
    }
    unint64_t v43 = *((void *)v49 + v44);
    ++v45;
    if (v43) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BDD5D4F4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF258);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1BDDB0468();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1BDD5D6AC(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1BDD5EE8C((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_1BDD5D800(v5);
  *a1 = v2;
  return result;
}

void *sub_1BDD5D718(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269E0);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1BDD5EC8C((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1BDCE68B0();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1BDD5D800(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1BDDB04A8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_1BDD5DEA8(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_151;
  }
  uint64_t v101 = result;
  uint64_t v98 = a1;
  if (v3 <= 1)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    int64_t v104 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v10 = MEMORY[0x1E4FBC860];
LABEL_117:
      uint64_t result = v10;
      uint64_t v100 = v7;
      if (v11 >= 2)
      {
        uint64_t v91 = *v98;
        do
        {
          unint64_t v92 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_146;
          }
          if (!v91) {
            goto LABEL_159;
          }
          uint64_t v93 = result;
          uint64_t v94 = *(void *)(result + 32 + 16 * v92);
          uint64_t v95 = *(void *)(result + 32 + 16 * (v11 - 1) + 8);
          uint64_t result = sub_1BDD5DF78((char *)(v91 + 16 * v94), (char *)(v91 + 16 * *(void *)(result + 32 + 16 * (v11 - 1))), v91 + 16 * v95, v104);
          if (v1) {
            break;
          }
          if (v95 < v94) {
            goto LABEL_147;
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_1BDD5E2A4(v93);
            uint64_t v93 = result;
          }
          if (v92 >= *(void *)(v93 + 16)) {
            goto LABEL_148;
          }
          uint64_t v96 = (void *)(v93 + 32 + 16 * v92);
          *uint64_t v96 = v94;
          v96[1] = v95;
          unint64_t v97 = *(void *)(v93 + 16);
          if (v11 > v97) {
            goto LABEL_149;
          }
          memmove((void *)(v93 + 32 + 16 * (v11 - 1)), (const void *)(v93 + 32 + 16 * v11), 16 * (v97 - v11));
          uint64_t result = v93;
          *(void *)(v93 + 16) = v97 - 1;
          unint64_t v11 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v100 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v100 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t result = sub_1BDDB0028();
    *(void *)(result + 16) = v6;
    uint64_t v100 = result;
    int64_t v104 = (char *)(result + 32);
  }
  uint64_t v8 = 0;
  uint64_t v9 = *a1;
  uint64_t v99 = v9 + 8;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v102 = v3;
  while (1)
  {
    uint64_t v12 = v8++;
    if (v8 >= v3) {
      goto LABEL_45;
    }
    int64_t v13 = (uint64_t *)(v9 + 16 * v8);
    uint64_t result = *v13;
    uint64_t v14 = v13[1];
    unint64_t v15 = (void *)(v9 + 16 * v12);
    if (result == *v15 && v14 == v15[1])
    {
      uint64_t v18 = v12 + 2;
      if (v12 + 2 >= v3) {
        goto LABEL_44;
      }
      int v17 = 0;
    }
    else
    {
      uint64_t result = sub_1BDDB04E8();
      int v17 = result;
      uint64_t v18 = v12 + 2;
      if (v12 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v19 = (void *)(v99 + 16 * v18);
    do
    {
      uint64_t result = *(v19 - 1);
      uint64_t v21 = (void *)(v9 + 16 * v8);
      if (result == *v21 && *v19 == v21[1])
      {
        if (v17) {
          goto LABEL_37;
        }
      }
      else
      {
        uint64_t result = sub_1BDDB04E8();
        if ((v17 ^ result)) {
          goto LABEL_36;
        }
      }
      v19 += 2;
      uint64_t v20 = v18 + 1;
      uint64_t v8 = v18;
      uint64_t v18 = v20;
    }
    while (v20 < v3);
    uint64_t v18 = v20;
LABEL_36:
    uint64_t v8 = v18;
    if (v17)
    {
LABEL_37:
      if (v18 < v12) {
        goto LABEL_155;
      }
      if (v12 < v18)
      {
        uint64_t v23 = 16 * v18;
        uint64_t v24 = 16 * v12;
        uint64_t v25 = v18;
        uint64_t v26 = v12;
        do
        {
          if (v26 != --v25)
          {
            if (!v9) {
              goto LABEL_158;
            }
            uint64_t v27 = v9 + v23;
            uint64_t v28 = *(void *)(v9 + v24);
            uint64_t v29 = *(void *)(v9 + v24 + 8);
            *(_OWORD *)(v9 + v24) = *(_OWORD *)(v9 + v23 - 16);
            *(void *)(v27 - 16) = v28;
            *(void *)(v27 - 8) = v29;
          }
          ++v26;
          v23 -= 16;
          v24 += 16;
        }
        while (v26 < v25);
      }
LABEL_44:
      uint64_t v8 = v18;
    }
LABEL_45:
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v12)) {
        goto LABEL_150;
      }
      if (v8 - v12 < v101) {
        break;
      }
    }
LABEL_66:
    if (v8 < v12) {
      goto LABEL_145;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1BDD5E1A8(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
      uint64_t v10 = result;
    }
    unint64_t v38 = *(void *)(v10 + 16);
    unint64_t v37 = *(void *)(v10 + 24);
    unint64_t v11 = v38 + 1;
    if (v38 >= v37 >> 1)
    {
      uint64_t result = (uint64_t)sub_1BDD5E1A8((char *)(v37 > 1), v38 + 1, 1, (char *)v10);
      uint64_t v10 = result;
    }
    *(void *)(v10 + 16) = v11;
    uint64_t v39 = v10 + 32;
    id v40 = (uint64_t *)(v10 + 32 + 16 * v38);
    *id v40 = v12;
    v40[1] = v8;
    if (v38)
    {
      uint64_t v103 = v8;
      while (1)
      {
        unint64_t v41 = v11 - 1;
        if (v11 >= 4)
        {
          unint64_t v46 = v39 + 16 * v11;
          uint64_t v47 = *(void *)(v46 - 64);
          uint64_t v48 = *(void *)(v46 - 56);
          BOOL v52 = __OFSUB__(v48, v47);
          uint64_t v49 = v48 - v47;
          if (v52) {
            goto LABEL_134;
          }
          uint64_t v51 = *(void *)(v46 - 48);
          uint64_t v50 = *(void *)(v46 - 40);
          BOOL v52 = __OFSUB__(v50, v51);
          uint64_t v44 = v50 - v51;
          char v45 = v52;
          if (v52) {
            goto LABEL_135;
          }
          unint64_t v53 = v11 - 2;
          int64_t v54 = (uint64_t *)(v39 + 16 * (v11 - 2));
          uint64_t v56 = *v54;
          uint64_t v55 = v54[1];
          BOOL v52 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          if (v52) {
            goto LABEL_136;
          }
          BOOL v52 = __OFADD__(v44, v57);
          uint64_t v58 = v44 + v57;
          if (v52) {
            goto LABEL_138;
          }
          if (v58 >= v49)
          {
            int v76 = (uint64_t *)(v39 + 16 * v41);
            uint64_t v78 = *v76;
            uint64_t v77 = v76[1];
            BOOL v52 = __OFSUB__(v77, v78);
            uint64_t v79 = v77 - v78;
            if (v52) {
              goto LABEL_144;
            }
            BOOL v69 = v44 < v79;
            goto LABEL_104;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v70 = *(void *)(v10 + 32);
            uint64_t v71 = *(void *)(v10 + 40);
            BOOL v52 = __OFSUB__(v71, v70);
            uint64_t v63 = v71 - v70;
            char v64 = v52;
            goto LABEL_98;
          }
          uint64_t v43 = *(void *)(v10 + 32);
          uint64_t v42 = *(void *)(v10 + 40);
          BOOL v52 = __OFSUB__(v42, v43);
          uint64_t v44 = v42 - v43;
          char v45 = v52;
        }
        if (v45) {
          goto LABEL_137;
        }
        unint64_t v53 = v11 - 2;
        uint64_t v59 = (uint64_t *)(v39 + 16 * (v11 - 2));
        uint64_t v61 = *v59;
        uint64_t v60 = v59[1];
        BOOL v62 = __OFSUB__(v60, v61);
        uint64_t v63 = v60 - v61;
        char v64 = v62;
        if (v62) {
          goto LABEL_139;
        }
        uint64_t v65 = (uint64_t *)(v39 + 16 * v41);
        uint64_t v67 = *v65;
        uint64_t v66 = v65[1];
        BOOL v52 = __OFSUB__(v66, v67);
        uint64_t v68 = v66 - v67;
        if (v52) {
          goto LABEL_141;
        }
        if (__OFADD__(v63, v68)) {
          goto LABEL_143;
        }
        if (v63 + v68 >= v44)
        {
          BOOL v69 = v44 < v68;
LABEL_104:
          if (v69) {
            unint64_t v41 = v53;
          }
          goto LABEL_106;
        }
LABEL_98:
        if (v64) {
          goto LABEL_140;
        }
        uint64_t v72 = (uint64_t *)(v39 + 16 * v41);
        uint64_t v74 = *v72;
        uint64_t v73 = v72[1];
        BOOL v52 = __OFSUB__(v73, v74);
        uint64_t v75 = v73 - v74;
        if (v52) {
          goto LABEL_142;
        }
        if (v75 < v63) {
          goto LABEL_15;
        }
LABEL_106:
        unint64_t v80 = v41 - 1;
        if (v41 - 1 >= v11)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v81 = v9;
        if (!v9) {
          goto LABEL_157;
        }
        uint64_t v82 = v10;
        uint64_t v83 = (uint64_t *)(v39 + 16 * v80);
        uint64_t v84 = *v83;
        uint64_t v85 = v39;
        unint64_t v86 = v41;
        uint64_t v87 = (void *)(v39 + 16 * v41);
        uint64_t v88 = v87[1];
        uint64_t v89 = v81;
        uint64_t result = sub_1BDD5DF78((char *)(v81 + 16 * *v83), (char *)(v81 + 16 * *v87), v81 + 16 * v88, v104);
        if (v1) {
          goto LABEL_114;
        }
        if (v88 < v84) {
          goto LABEL_131;
        }
        if (v86 > *(void *)(v82 + 16)) {
          goto LABEL_132;
        }
        *uint64_t v83 = v84;
        *(void *)(v85 + 16 * v80 + 8) = v88;
        unint64_t v90 = *(void *)(v82 + 16);
        if (v86 >= v90) {
          goto LABEL_133;
        }
        uint64_t v10 = v82;
        unint64_t v11 = v90 - 1;
        uint64_t result = (uint64_t)memmove(v87, v87 + 2, 16 * (v90 - 1 - v86));
        uint64_t v39 = v85;
        *(void *)(v82 + 16) = v90 - 1;
        uint64_t v9 = v89;
        uint64_t v8 = v103;
        if (v90 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_15:
    uint64_t v3 = v102;
    if (v8 >= v102)
    {
      uint64_t v7 = v100;
      goto LABEL_117;
    }
  }
  if (__OFADD__(v12, v101)) {
    goto LABEL_153;
  }
  if (v12 + v101 >= v3) {
    uint64_t v30 = v3;
  }
  else {
    uint64_t v30 = v12 + v101;
  }
  if (v30 >= v12)
  {
    if (v8 != v30)
    {
      uint64_t v31 = (uint64_t *)(v9 + 16 * v8);
      do
      {
        uint64_t v32 = (uint64_t *)(v9 + 16 * v8);
        uint64_t result = *v32;
        uint64_t v33 = v32[1];
        uint64_t v34 = v12;
        uint64_t v35 = v31;
        do
        {
          if (result == *(v35 - 2) && v33 == *(v35 - 1)) {
            break;
          }
          uint64_t result = sub_1BDDB04E8();
          if ((result & 1) == 0) {
            break;
          }
          if (!v9) {
            goto LABEL_156;
          }
          uint64_t result = *v35;
          uint64_t v33 = v35[1];
          *(_OWORD *)uint64_t v35 = *((_OWORD *)v35 - 1);
          *(v35 - 1) = v33;
          *(v35 - 2) = result;
          v35 -= 2;
          ++v34;
        }
        while (v8 != v34);
        ++v8;
        v31 += 2;
      }
      while (v8 != v30);
      uint64_t v8 = v30;
    }
    goto LABEL_66;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
  return result;
}

uint64_t sub_1BDD5DEA8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    uint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_1BDDB04E8(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)uint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BDD5DF78(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = __src - __dst + 15;
  if (__src - __dst >= 0) {
    int64_t v9 = __src - __dst;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 15;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 4;
  if (v10 >= v12 >> 4)
  {
    if (a4 != __src || &__src[16 * v13] <= a4) {
      memmove(a4, __src, 16 * v13);
    }
    uint64_t v14 = &v4[16 * v13];
    if (v7 >= v6 || v11 < 16) {
      goto LABEL_48;
    }
    int v17 = (char *)(a3 - 16);
    while (1)
    {
      uint64_t v18 = v17 + 16;
      uint64_t v19 = v6 - 16;
      BOOL v20 = *((void *)v14 - 2) == *((void *)v6 - 2) && *((void *)v14 - 1) == *((void *)v6 - 1);
      if (v20 || (sub_1BDDB04E8() & 1) == 0)
      {
        uint64_t v19 = v14 - 16;
        if (v18 != v14)
        {
          v14 -= 16;
LABEL_45:
          *(_OWORD *)int v17 = *(_OWORD *)v19;
          goto LABEL_46;
        }
        BOOL v21 = v17 >= v14;
        v14 -= 16;
        if (v21) {
          goto LABEL_45;
        }
      }
      else
      {
        if (v18 != v6)
        {
          v6 -= 16;
          goto LABEL_45;
        }
        BOOL v21 = v17 >= v6;
        v6 -= 16;
        if (v21) {
          goto LABEL_45;
        }
      }
LABEL_46:
      if (v6 > v7)
      {
        v17 -= 16;
        if (v14 > v4) {
          continue;
        }
      }
      goto LABEL_48;
    }
  }
  if (a4 != __dst || &__dst[16 * v10] <= a4) {
    memmove(a4, __dst, 16 * v10);
  }
  uint64_t v14 = &v4[16 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (v15 || (sub_1BDDB04E8() & 1) == 0) {
        break;
      }
      uint64_t v16 = v6;
      BOOL v15 = v7 == v6;
      v6 += 16;
      if (!v15) {
        goto LABEL_20;
      }
LABEL_21:
      v7 += 16;
      if (v4 >= v14 || (unint64_t)v6 >= a3) {
        goto LABEL_23;
      }
    }
    uint64_t v16 = v4;
    BOOL v15 = v7 == v4;
    v4 += 16;
    if (v15) {
      goto LABEL_21;
    }
LABEL_20:
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v16;
    goto LABEL_21;
  }
LABEL_23:
  uint64_t v6 = v7;
LABEL_48:
  if (v6 != v4 || v6 >= &v4[(v14 - v4 + (v14 - v4 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0]) {
    memmove(v6, v4, 16 * ((v14 - v4) / 16));
  }
  return 1;
}

char *sub_1BDD5E1A8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0DF290);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1BDD5E2A4(uint64_t a1)
{
  return sub_1BDD5E1A8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void (*sub_1BDD5E2B8(void *a1))(uint64_t a1)
{
  uint64_t v2 = malloc(0x68uLL);
  *a1 = v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v4 = sub_1BDDAF9F8();
  v2[8] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  v2[9] = v5;
  int64_t v7 = malloc(*(void *)(v5 + 64));
  v2[10] = v7;
  (*(void (**)(void))(v6 + 16))();
  v2[11] = sub_1BDD5E9CC(v2);
  v2[12] = sub_1BDD5E7C4(v2 + 4, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  return sub_1BDD5E3D4;
}

void sub_1BDD5E3D4(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 88);
  uint64_t v4 = *(void *)(*(void *)a1 + 72);
  uint64_t v3 = *(void **)(*(void *)a1 + 80);
  uint64_t v5 = *(void *)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 96))();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  v2(v1, 0);
  free(v3);
  free(v1);
}

uint64_t sub_1BDD5E46C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1BDDB0558();
  swift_bridgeObjectRetain();
  sub_1BDDAFDB8();
  uint64_t v6 = sub_1BDDB0578();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1BDDB04E8() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1BDDB04E8() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BDD15B8C();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_1BDD5E5FC(v8);
  uint64_t *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_1BDD5E5FC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1BDDB0258();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1BDDB0558();
        swift_bridgeObjectRetain();
        sub_1BDDAFDB8();
        uint64_t v10 = sub_1BDDB0578();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void (*sub_1BDD5E7C4(void *a1, uint64_t a2, char a3))(uint64_t *a1)
{
  uint64_t v4 = v3;
  uint64_t v8 = (char *)malloc(0x90uLL);
  *a1 = v8;
  *((void *)v8 + 15) = a2;
  *((void *)v8 + 16) = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_1BDD1CE5C(a2);
  v8[113] = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      *((void *)v8 + 17) = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*v4 + 56) + 120 * v11;
        uint64_t v18 = *(void *)(v17 + 16);
        long long v19 = *(_OWORD *)(v17 + 56);
        uint64_t v20 = *(unsigned __int8 *)(v17 + 72);
        long long v21 = *(_OWORD *)(v17 + 80);
        long long v22 = *(_OWORD *)(v17 + 96);
        char v23 = *(unsigned char *)(v17 + 112);
        long long v24 = *(_OWORD *)(v17 + 40);
        long long v25 = *(_OWORD *)(v17 + 24);
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v17;
        *((void *)v8 + 2) = v18;
        *(_OWORD *)(v8 + 24) = v25;
        *(_OWORD *)(v8 + 40) = v24;
LABEL_12:
        *(_OWORD *)(v8 + 56) = v19;
        *((void *)v8 + 9) = v20;
        *((_OWORD *)v8 + 5) = v21;
        *((_OWORD *)v8 + 6) = v22;
        v8[112] = v23;
        return sub_1BDD5E950;
      }
LABEL_11:
      uint64_t v20 = 0;
      char v23 = 0;
      *((void *)v8 + 6) = 0;
      long long v19 = 0uLL;
      *((_OWORD *)v8 + 1) = 0u;
      *((_OWORD *)v8 + 2) = 0u;
      *(_OWORD *)uint64_t v8 = 0u;
      long long v21 = 0uLL;
      long long v22 = 0uLL;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_1BDD5D12C();
      goto LABEL_7;
    }
    sub_1BDD5C168(v14, a3 & 1);
    unint64_t v26 = sub_1BDD1CE5C(a2);
    if ((v15 & 1) == (v27 & 1))
    {
      unint64_t v11 = v26;
      *((void *)v8 + 17) = v26;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  sub_1BDDAF9F8();
  uint64_t result = (void (*)(uint64_t *))sub_1BDDB0528();
  __break(1u);
  return result;
}

void sub_1BDD5E950(uint64_t *a1)
{
  uint64_t v1 = *a1;
  sub_1BDD5EA08(*a1, *(unsigned char *)(*a1 + 113), *(uint64_t **)(*a1 + 128), *(void *)(*a1 + 136), *(void *)(*a1 + 120));
  sub_1BDD5FB68(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void **)(v1 + 56), *(void **)(v1 + 64));
  free((void *)v1);
}

uint64_t (*sub_1BDD5E9CC(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_1BDD5E9FC;
}

uint64_t sub_1BDD5E9FC(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_1BDD5EA08(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  char v15 = *(void **)(a1 + 56);
  uint64_t v16 = *(void **)(a1 + 64);
  uint64_t v17 = *(void *)(a1 + 72);
  uint64_t v18 = *(void *)(a1 + 80);
  uint64_t v19 = *(void *)(a1 + 88);
  uint64_t v20 = *(void *)(a1 + 96);
  uint64_t v21 = *(void *)(a1 + 104);
  char v22 = *(unsigned char *)(a1 + 112);
  if (v9)
  {
    *(void *)&long long v44 = *(void *)a1;
    *((void *)&v44 + 1) = v9;
    *(void *)&long long v45 = v10;
    *((void *)&v45 + 1) = v11;
    *(void *)&long long v46 = v12;
    *((void *)&v46 + 1) = v13;
    *(void *)&long long v47 = v14;
    *((void *)&v47 + 1) = v15;
    *(void *)&long long v48 = v16;
    BYTE8(v48) = v17 & 1;
    *(void *)&long long v49 = v18;
    *((void *)&v49 + 1) = v19;
    *(void *)&long long v50 = v20;
    *((void *)&v50 + 1) = v21;
    char v51 = v22 & 1;
    char v23 = (void *)*a3;
    if (a2)
    {
      uint64_t v24 = v23[7] + 120 * a4;
      long long v25 = v49;
      *(_OWORD *)(v24 + 64) = v48;
      *(_OWORD *)(v24 + 80) = v25;
      *(_OWORD *)(v24 + 96) = v50;
      *(unsigned char *)(v24 + 112) = v51;
      long long v26 = v45;
      *(_OWORD *)uint64_t v24 = v44;
      *(_OWORD *)(v24 + 16) = v26;
      long long v27 = v47;
      *(_OWORD *)(v24 + 32) = v46;
      *(_OWORD *)(v24 + 48) = v27;
    }
    else
    {
      uint64_t v42 = v10;
      uint64_t v43 = v8;
      uint64_t v40 = v12;
      uint64_t v41 = v11;
      uint64_t v38 = v14;
      uint64_t v39 = v13;
      unint64_t v37 = v15;
      unint64_t v35 = a4;
      uint64_t v34 = a5;
      uint64_t v28 = sub_1BDDAF9F8();
      uint64_t v36 = &v34;
      MEMORY[0x1F4188790](v28, v29);
      uint64_t v31 = (char *)&v34 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t))(v32 + 16))(v31, v34);
      sub_1BDD5D048(v35, (uint64_t)v31, (uint64_t)&v44, v23);
      char v15 = v37;
      uint64_t v14 = v38;
      uint64_t v13 = v39;
      uint64_t v12 = v40;
      uint64_t v11 = v41;
      uint64_t v10 = v42;
      uint64_t v8 = v43;
    }
  }
  else if (a2)
  {
    uint64_t v36 = *(uint64_t **)(*a3 + 48);
    uint64_t v42 = v10;
    uint64_t v43 = v8;
    uint64_t v40 = v12;
    uint64_t v41 = v11;
    uint64_t v38 = v14;
    uint64_t v39 = v13;
    unint64_t v37 = v15;
    sub_1BDDAF9F8();
    swift_arrayDestroy();
    sub_1BDD5CA14(a4, *a3);
    char v15 = v37;
    uint64_t v14 = v38;
    uint64_t v13 = v39;
    uint64_t v12 = v40;
    uint64_t v11 = v41;
    uint64_t v10 = v42;
    uint64_t v8 = v43;
  }
  return sub_1BDD5FC28(v8, v9, v10, v11, v12, v13, v14, v15, v16);
}

uint64_t sub_1BDD5EC8C(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

char *sub_1BDD5EE8C(uint64_t a1)
{
  return sub_1BDD17244(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BDD5EEA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1BDD3C8D4();
  uint64_t v6 = v5;
  uint64_t v7 = CalculateExpression.document.getter();
  uint64_t v8 = sub_1BDCE62DC();
  uint64_t v9 = sub_1BDD3F154();
  uint64_t v10 = (unsigned char *)(a1 + OBJC_IVAR____TtC9Calculate19CalculateExpression_rebuild);
  swift_beginAccess();
  uint64_t v11 = 0;
  if ((*v10 & 1) == 0) {
    uint64_t v11 = sub_1BDD3B868();
  }
  uint64_t v34 = sub_1BDD3C4D0();
  char v33 = CalculateExpression.needsEvaluation.getter();
  uint64_t v12 = *(void *)CalculateExpression.plain.getter();
  uint64_t v32 = (*(uint64_t (**)(void))(v12 + 456))();
  swift_release();
  uint64_t v13 = *(void *)CalculateExpression.plain.getter();
  uint64_t v14 = (*(uint64_t (**)(void))(v13 + 448))();
  uint64_t v30 = v15;
  uint64_t v31 = v14;
  swift_release();
  uint64_t v16 = *(void *)CalculateExpression.plain.getter();
  char v17 = (*(uint64_t (**)(void))(v16 + 488))();
  swift_release();
  CalculateExpression.declaredSymbol.getter();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    uint64_t v28 = v7;
    uint64_t v29 = v9;
    uint64_t v20 = v6;
    uint64_t v21 = v11;
    uint64_t v22 = v4;
    id v23 = objc_allocWithZone(NSNumber);
    uint64_t v24 = @"CalculateKeyConvertTrivial";
    id v25 = objc_msgSend(v23, sel_initWithBool_, 0);
    uint64_t v37 = sub_1BDCE6874(0, (unint64_t *)&qword_1EBA26990);
    *(void *)&long long v36 = v25;
    uint64_t v4 = v22;
    uint64_t v11 = v21;
    sub_1BDD198E8(&v36, v35);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1BDD4EC50(v35, v24, isUniquelyReferenced_nonNull_native);
    swift_release();

    uint64_t v6 = v20;
    uint64_t v7 = v28;
    uint64_t v9 = v29;
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_release();
  }
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v7;
  *(void *)(a2 + 24) = v8;
  *(void *)(a2 + 32) = v9;
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = v11;
  *(void *)(a2 + 64) = v34;
  *(unsigned char *)(a2 + 72) = v33 & 1;
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = v32;
  *(void *)(a2 + 96) = v31;
  *(void *)(a2 + 104) = v30;
  *(unsigned char *)(a2 + 112) = v17 & 1;
  return result;
}

uint64_t sub_1BDD5F178()
{
  return sub_1BDD5FE10();
}

void sub_1BDD5F190()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC9Calculate17CalculateDocument__synchronous) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1BDD5F1A8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC9Calculate17CalculateDocument__declaredSymbols);
  swift_beginAccess();
  void *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDD5F218()
{
  return sub_1BDD5F248();
}

void sub_1BDD5F230()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC9Calculate17CalculateDocument__isEvaluating) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1BDD5F248()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC9Calculate17CalculateDocument__expressions);
  *(void *)(v1 + OBJC_IVAR____TtC9Calculate17CalculateDocument__expressions) = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_1BDD5B8E4(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDD5F2A0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1BDD5F2D8()
{
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1BDD5F320()
{
  return sub_1BDD5A644(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1BDD5F32C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1BDD5F364()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1BDD5F38C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1BDD5F39C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1BDD5F3EC()
{
  return sub_1BDD5B03C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1BDD5F3F8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1BDD5F408(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 56);
  uint64_t v3 = *(void **)(a1 + 64);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  id v4 = v2;
  id v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BDD5F4B0()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 480))();
}

uint64_t sub_1BDD5F4DC()
{
  return sub_1BDD5FDC8((unint64_t *)&qword_1EA0DEFD0, MEMORY[0x1F418BBD0]);
}

uint64_t sub_1BDD5F50C()
{
  return type metadata accessor for CalculateDocument();
}

uint64_t method lookup function for CalculateDocument(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalculateDocument);
}

uint64_t dispatch thunk of CalculateDocument.options.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of CalculateDocument.synchronous.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of CalculateDocument.declaredSymbols.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of CalculateDocument.declaredSymbols.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of CalculateDocument.declaredSymbols.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of CalculateDocument.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of CalculateDocument.__allocating_init(expressions:options:)()
{
  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t dispatch thunk of CalculateDocument.__allocating_init(expressions:options:synchronous:)()
{
  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of CalculateDocument.expressions.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of CalculateDocument.expressions.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of CalculateDocument.expressions.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of CalculateDocument.isEvaluating.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t destroy for CalculateDocument.Evaluation(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CalculateDocument.Evaluation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void **)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void **)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  id v9 = v7;
  id v10 = v8;
  *(void *)(a1 + 64) = v8;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v11;
  uint64_t v12 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v12;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CalculateDocument.Evaluation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void **)(a1 + 56);
  uint64_t v5 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v5;
  id v6 = v5;

  uint64_t v7 = *(void **)(a1 + 64);
  uint64_t v8 = *(void **)(a2 + 64);
  id v9 = v8;
  *(void *)(a1 + 64) = v8;

  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  return a1;
}

__n128 __swift_memcpy113_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for CalculateDocument.Evaluation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();

  long long v4 = *(void **)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);

  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for CalculateDocument.Evaluation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 113)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CalculateDocument.Evaluation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 112) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 113) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 113) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CalculateDocument.Evaluation()
{
  return &type metadata for CalculateDocument.Evaluation;
}

uint64_t sub_1BDD5FB20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BDD5FB68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BDD5FC28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    id v10 = a8;
    id v11 = a9;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BDD5FCE8(uint64_t a1, uint64_t a2)
{
  return assignWithTake for CalculateDocument.Evaluation(a2, a1);
}

uint64_t sub_1BDD5FCF8()
{
  return sub_1BDD57EC8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1BDD5FD24(uint64_t a1)
{
  long long v3 = *(void **)(a1 + 56);
  unint64_t v2 = *(void **)(a1 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BDD5FDC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BDD5FE10()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC9Calculate17CalculateDocument__options) = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDD5FE60()
{
  return sub_1BDD5FCF8();
}

void sub_1BDD5FE78()
{
}

void sub_1BDD5FE90()
{
}

uint64_t sub_1BDD5FEA8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v9 = *a1;
  uint64_t v10 = v2;
  uint64_t v11 = v3;
  uint64_t v12 = v4;
  uint64_t v5 = CalculateExpression.RichExpression.EditingToken.token.getter();
  if (v5 && (char v6 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 384))(v5), swift_release(), (v6 & 1) != 0))
  {
    char v7 = 1;
  }
  else
  {
    uint64_t v9 = v1;
    uint64_t v10 = v2;
    uint64_t v11 = v3;
    uint64_t v12 = v4;
    char v7 = sub_1BDD2E384(&v9);
  }
  return v7 & 1;
}

uint64_t sub_1BDD5FF64()
{
  uint64_t v0 = type metadata accessor for CalculateExpression.RichToken();
  v3[0] = 1;
  v3[1] = 0xE000000000000000;
  sub_1BDD60038(v0, 0.0, 1.0);
  sub_1BDDB00D8();
  uint64_t v1 = sub_1BDCE8A80(0, 0xE000000000000000, (char *)v3);
  (*(void (**)(uint64_t))(*(void *)v1 + 240))(1);
  return v1;
}

uint64_t CalculateExpression.RandOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.OperandOperation.deinit();
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t sub_1BDD60038(uint64_t result, float a2, float a3)
{
  if (a2 == a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  float v5 = a3 - a2;
  if ((~COERCE_INT(a3 - a2) & 0x7F800000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t result = MEMORY[0x1C18870D0](&v7, 8);
  if ((float)((float)(v5 * (float)((float)(v7 & 0xFFFFFF) * 0.000000059605)) + a2) == a3) {
    return sub_1BDD60038(v6, a2, a3);
  }
  return result;
}

uint64_t sub_1BDD600E4(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16) != 1) {
    return 0;
  }
  CalculateExpression.RichExpression.editingToken(matching:)(sub_1BDD1F510, &v46);
  uint64_t v3 = v46;
  if (!(void)v46) {
    return 0;
  }
  unint64_t v4 = *((void *)&v46 + 1);
  float v5 = v47;
  uint64_t v6 = type metadata accessor for CalculateExpression.RichToken();
  LOBYTE(v46) = 33;
  uint64_t v7 = swift_retain();
  sub_1BDD02DD4(v7);
  char v8 = sub_1BDD013AC();
  uint64_t v9 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v46, v8 & 1);
  (*(void (**)(void))(*(void *)a1 + 232))(0);
  uint64_t v10 = *(uint64_t (**)(unint64_t))(*(void *)v3 + 416);
  unint64_t v44 = v4;
  uint64_t v11 = v10(v4);
  if (!v11)
  {
    uint64_t v21 = *(uint64_t (**)(long long *))(*(void *)v3 + 408);
    swift_retain();
    uint64_t v12 = (void (*)(long long *, void))v21(&v46);
    id v23 = v22;
    MEMORY[0x1C1885EA0]();
    if (*(void *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_12:
      sub_1BDDB0048();
      sub_1BDDAFFD8();
      v12(&v46, 0);
      sub_1BDD02E18(v3);
      swift_release();
      swift_release();
      uint64_t v24 = v3;
      goto LABEL_27;
    }
LABEL_38:
    sub_1BDDB0008();
    goto LABEL_12;
  }
  uint64_t v12 = (void (*)(long long *, void))v11;
  uint64_t v43 = v5;
  uint64_t v13 = &OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
  char v14 = *(unsigned char *)(v11 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
  LOBYTE(v46) = v14;
  LOBYTE(v45) = 16;
  if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v46, (unsigned __int8 *)&v45))
  {
    LOBYTE(v46) = v14;
    if ((CalculateExpression.TokenType.isOperand.getter() & 1) == 0)
    {
      LOBYTE(v46) = v14;
      LOBYTE(v45) = 33;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v46, (unsigned __int8 *)&v45))
      {
        uint64_t v37 = (void (*)(long long *, void))(*(uint64_t (**)(long long *))(*(void *)v3 + 408))(&v46);
        sub_1BDD02E58(v44);
        swift_release();
        v37(&v46, 0);
        sub_1BDD02E18(v3);
        swift_release();
        swift_release();
        swift_release();
        uint64_t v24 = v3;
        goto LABEL_27;
      }
      uint64_t v6 = v44 + 1;
      if (!__OFADD__(v44, 1))
      {
        uint64_t v38 = *(uint64_t (**)(long long *))(*(void *)v3 + 408);
        swift_retain();
        uint64_t result = v38(&v46);
        uint64_t v13 = (uint64_t *)result;
        if (!(*v39 >> 62))
        {
          uint64_t v40 = *(void *)((*v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_34;
        }
LABEL_47:
        swift_bridgeObjectRetain();
        uint64_t v40 = sub_1BDDB0448();
        uint64_t result = swift_bridgeObjectRelease();
LABEL_34:
        if (v40 < v6)
        {
          __break(1u);
        }
        else if ((v6 & 0x8000000000000000) == 0)
        {
          sub_1BDD0572C(v6, v6, v9);
          ((void (*)(long long *, void))v13)(&v46, 0);
          sub_1BDD02E18(v3);
          swift_release();
          swift_release();
          swift_release();
          uint64_t v24 = v3;
          goto LABEL_27;
        }
        __break(1u);
        return result;
      }
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
  }
  unint64_t v45 = v44;
  sub_1BDD231C0((uint64_t *)&v45);
  uint64_t v15 = v45;
  unint64_t v16 = v45 - 1;
  if (__OFSUB__(v45, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v17 = v10(v45 - 1);
  if (!v17
    || (char v18 = *(unsigned char *)(v17 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type),
        swift_release(),
        LOBYTE(v46) = v18,
        sub_1BDCF0848(),
        (sub_1BDDAFD28() & 1) == 0))
  {
    uint64_t v25 = v10(v16);
    if (v25
      && (uint64_t v26 = *(unsigned __int8 *)(v25 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type),
          swift_release(),
          LOBYTE(v46) = v26,
          sub_1BDCF0848(),
          (sub_1BDDAFD28() & 1) != 0))
    {
      LOBYTE(v46) = 16;
      char v27 = sub_1BDD013AC();
      uint64_t v28 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v46, v27 & 1);
      uint64_t v15 = v44 + 1;
      if (!__OFADD__(v44, 1))
      {
        uint64_t v26 = v28;
        uint64_t v29 = (uint64_t **)(*(void *)v3 + 408);
        uint64_t v13 = *v29;
        uint64_t v42 = (void (*)(long long *, void))((uint64_t (*)(long long *))*v29)(&v46);
        if (!(*v30 >> 62))
        {
          if (*(void *)((*v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= v15) {
            goto LABEL_19;
          }
          goto LABEL_44;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v41 = sub_1BDDB0448();
        swift_bridgeObjectRelease();
        if (v41 >= v15)
        {
LABEL_19:
          if ((v15 & 0x8000000000000000) == 0)
          {
            sub_1BDD0572C(v15, v15, v26);
            v42(&v46, 0);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
            uint64_t v31 = swift_allocObject();
            *(_OWORD *)(v31 + 16) = xmmword_1BDDB3760;
            *(void *)(v31 + 32) = v9;
            LOBYTE(v46) = 15;
            swift_retain();
            char v32 = sub_1BDD013AC();
            *(void *)(v31 + 40) = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v46, v32 & 1);
            *(void *)&long long v46 = v31;
            sub_1BDDAFFD8();
            unint64_t v33 = v46;
            uint64_t v34 = (void (*)(long long *, void))((uint64_t (*)(long long *))v13)(&v46);
            sub_1BDD053AC(v16, v16, v33);
            v34(&v46, 0);
            goto LABEL_26;
          }
          goto LABEL_45;
        }
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v26 = *(void *)(*(void *)v3 + 408);
      swift_retain();
      uint64_t v6 = ((uint64_t (*)(long long *))v26)(&v46);
      unint64_t v16 = *v35;
      if (*v35 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v36 = sub_1BDDB0448();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v36 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v13 = v43;
      if (v36 < v15)
      {
        __break(1u);
      }
      else if ((v15 & 0x8000000000000000) == 0)
      {
        sub_1BDD0572C(v15, v15, v9);
        ((void (*)(long long *, void))v6)(&v46, 0);
        goto LABEL_26;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v19 = (void (*)(long long *, void))(*(uint64_t (**)(long long *))(*(void *)v3 + 408))(&v46);
  sub_1BDD02E58(v16);
  swift_release();
  v19(&v46, 0);
LABEL_26:
  sub_1BDD02E18(v3);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v24 = v3;
LABEL_27:
  sub_1BDD02E18(v24);
  return 1;
}

uint64_t CalculateExpression.NotOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t type metadata accessor for CalculateExpression.NotOperation()
{
  return self;
}

uint64_t sub_1BDD609A4()
{
  type metadata accessor for CalculateExpression.RichToken();
  char v1 = 1;
  return sub_1BDCE8A80(48, 0xE100000000000000, &v1);
}

uint64_t sub_1BDD609EC(uint64_t a1, unint64_t a2)
{
  void (**v10)(long long *__return_ptr);
  void (*v11)(long long *__return_ptr);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  void (*v21)(long long *, void);
  void *v22;
  void *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void (*v30)(long long *, void);
  uint64_t (*v31)(unint64_t);
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  BOOL v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  void (*v42)(long long *, void);
  uint64_t (*v43)(uint64_t);
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  void (*v52)(long long *, void);
  void (*v53)(long long *, void);
  char v54;
  void (*v55)(long long *, void);
  void *v56;
  void *v57;
  uint64_t (*v58)(long long *);
  void (*v59)(long long *, void);
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t (*v65)(long long *);
  uint64_t (*v66)(void);
  char v67;
  unsigned __int8 v68;
  long long v69;

  float v5 = *(uint64_t (**)(void))(*(void *)v2 + 128);
  uint64_t v6 = (long long *)(*(void *)v2 + 128);
  uint64_t v67 = v5();
  uint64_t v7 = (*(uint64_t (**)(void))(*(void *)v2 + 120))();
  uint64_t v66 = *(uint64_t (**)(void))(*(void *)a1 + 176);
  uint64_t v8 = v66();
  if (v8)
  {
    uint64_t v9 = v8;
    if (CalculateExpression.engine.getter() == 1) {
      (*(void (**)(uint64_t))(*(void *)v7 + 640))(v9);
    }
    uint64_t v8 = swift_release();
  }
  uint64_t v10 = (void (**)(long long *__return_ptr))(*(void *)a1 + 384);
  uint64_t v11 = *v10;
  ((void (*)(long long *__return_ptr, uint64_t))*v10)(&v69, v8);
  uint64_t v12 = (*(uint64_t (**)(long long *))(*(void *)v7 + 400))(&v69);
  if ((((uint64_t (*)(uint64_t))v5)(v12) & 1) != 0 && (*(uint64_t (**)(void))(*(void *)a1 + 368))() != 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
    unint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1BDDB5420;
    type metadata accessor for CalculateExpression.RichToken();
    LOBYTE(v69) = 15;
    uint64_t v17 = sub_1BDD013AC();
    *(void *)(v16 + 32) = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v69, v17 & 1);
    LOBYTE(v69) = 4;
    char v18 = sub_1BDD013AC();
    *(void *)(v16 + 40) = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v69, v18 & 1);
    *(void *)(v16 + 48) = v7;
    LOBYTE(v69) = 16;
    swift_retain();
    uint64_t v19 = sub_1BDD013AC();
    *(void *)(v16 + 56) = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v69, v19 & 1);
    *(void *)&BOOL v69 = v16;
    uint64_t v15 = sub_1BDDAFFD8();
    char v14 = v69;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1BDDB3730;
    *(void *)(v13 + 32) = v7;
    *(void *)&BOOL v69 = v13;
    sub_1BDDAFFD8();
    char v14 = v69;
    uint64_t v15 = swift_retain();
  }
  if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 368))(v15) != 2)
  {
    if ((*(unsigned char *)(a2 + 16) & 1) == 0
      || (CalculateExpression.RichExpression.editingToken(matching:)(sub_1BDD618F0, &v69), (uint64_t v6 = (long long *)v69) == 0))
    {
      swift_release();
      swift_bridgeObjectRelease();
      return 0;
    }
    a2 = *((void *)&v69 + 1);
    uint64_t v31 = *(uint64_t (**)(unint64_t))(*(void *)v69 + 416);
    char v32 = swift_retain();
    sub_1BDD02DD4(v32);
    float v5 = (uint64_t (*)(void))v31(a2);
    if (v5)
    {
      if (((*(uint64_t (**)(void))(*(void *)a1 + 224))() & 1) == 0)
      {
        type metadata accessor for CalculateExpression.RandOperation();
        if (!swift_dynamicCastClass())
        {
          swift_retain();
          goto LABEL_52;
        }
        uint64_t v43 = *(uint64_t (**)(uint64_t))(*(void *)v5 + 384);
        unint64_t v44 = swift_retain();
        uint64_t result = v43(v44);
        if ((result & 1) == 0) {
          goto LABEL_52;
        }
        if (v14 >> 62) {
          goto LABEL_99;
        }
        if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1) {
          goto LABEL_52;
        }
        goto LABEL_47;
      }
      (*(void (**)(unint64_t))(*(void *)v6 + 400))(v14);
    }
    else
    {
      uint64_t v42 = (void (*)(long long *, void))(*(uint64_t (**)(long long *))(*(void *)v6 + 408))(&v69);
      sub_1BDD053AC(0, 0, v14);
      v42(&v69, 0);
    }
LABEL_61:
    (*(void (**)(void))(*(void *)a1 + 232))(0);
    swift_release();
    sub_1BDD02E18((uint64_t)v6);
    swift_release();
    swift_release();
    sub_1BDD02E18((uint64_t)v6);
    return 1;
  }
  uint64_t v20 = (*(uint64_t (**)(void))(*(void *)a1 + 248))();
  if (v20)
  {
    type metadata accessor for CalculateExpression.RichToken();
    v11(&v69);
    a2 = sub_1BDCE8A80(48, 0xE100000000000000, (char *)&v69);
    uint64_t v6 = &v69;
    uint64_t v21 = (void (*)(long long *, void))(*(uint64_t (**)(long long *))(*(void *)a1 + 408))(&v69);
    id v23 = v22;
    MEMORY[0x1C1885EA0]();
    if (*(void *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1BDDB0008();
    }
    sub_1BDDB0048();
    sub_1BDDAFFD8();
    v21(&v69, 0);
    (*(void (**)(uint64_t))(*(void *)a1 + 232))(1);
    uint64_t v20 = (*(uint64_t (**)(void))(*(void *)a1 + 256))(0);
  }
  if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 224))(v20))
  {
LABEL_15:
    if (!v66()) {
      goto LABEL_67;
    }
    uint64_t v24 = CalculateExpression.postfixStack.getter();
    swift_release();
    if (v24 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
      if (v25)
      {
LABEL_18:
        uint64_t v26 = v25 - 1;
        if (__OFSUB__(v25, 1))
        {
          __break(1u);
        }
        else if ((v24 & 0xC000000000000001) == 0)
        {
          if ((v26 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v26 < *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            swift_retain();
            goto LABEL_23;
          }
          __break(1u);
          goto LABEL_93;
        }
        MEMORY[0x1C18862A0](v26, v24);
LABEL_23:
        swift_bridgeObjectRelease();
        char v27 = CalculateExpression.rich.getter();
        uint64_t v28 = (*(uint64_t (**)(void))(*(void *)v27 + 392))();
        swift_release();
        if (!(v28 >> 62))
        {
          uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_25:
          swift_bridgeObjectRelease();
          uint64_t v30 = (void (*)(long long *, void))(*(uint64_t (**)(long long *))(*(void *)a1 + 408))(&v69);
          sub_1BDD03588(v29);
          v30(&v69, 0);
          swift_release();
          goto LABEL_67;
        }
LABEL_93:
        swift_bridgeObjectRetain();
        uint64_t v29 = sub_1BDDB0448();
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v25) {
        goto LABEL_18;
      }
    }
    goto LABEL_66;
  }
  type metadata accessor for CalculateExpression.RandOperation();
  if (!swift_dynamicCastClass()) {
    goto LABEL_67;
  }
  uint64_t v34 = (*(uint64_t (**)(void))(*(void *)a1 + 392))();
  unint64_t v35 = v34;
  if (!(v34 >> 62))
  {
    uint64_t v36 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v36) {
      goto LABEL_35;
    }
LABEL_66:
    swift_bridgeObjectRelease();
    goto LABEL_67;
  }
  uint64_t v36 = sub_1BDDB0448();
  if (!v36) {
    goto LABEL_66;
  }
LABEL_35:
  uint64_t v37 = __OFSUB__(v36, 1);
  uint64_t v38 = v36 - 1;
  if (v37)
  {
    __break(1u);
    goto LABEL_95;
  }
  if ((v35 & 0xC000000000000001) != 0)
  {
LABEL_95:
    uint64_t v39 = MEMORY[0x1C18862A0](v38, v35);
LABEL_40:
    uint64_t v40 = swift_bridgeObjectRelease();
    uint64_t v41 = (*(uint64_t (**)(uint64_t))(*(void *)v39 + 384))(v40);
    swift_release();
    if ((v41 & 1) == 0)
    {
LABEL_67:
      if ((v67 & 1) == 0) {
        goto LABEL_70;
      }
      type metadata accessor for CalculateExpression.RichToken();
      LOBYTE(v69) = 4;
      int64_t v54 = sub_1BDD013AC();
      CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v69, v54 & 1);
      uint64_t v55 = (void (*)(long long *, void))(*(uint64_t (**)(long long *))(*(void *)a1 + 408))(&v69);
      uint64_t v57 = v56;
      MEMORY[0x1C1885EA0]();
      if (*(void *)((*v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_88;
      }
      while (1)
      {
        sub_1BDDB0048();
        sub_1BDDAFFD8();
        v55(&v69, 0);
LABEL_70:
        uint64_t v58 = *(uint64_t (**)(long long *))(*(void *)a1 + 408);
        uint64_t v55 = (void (*)(long long *, void))(*(void *)a1 + 408);
        swift_bridgeObjectRetain();
        uint64_t v59 = (void (*)(long long *, void))v58(&v69);
        sub_1BDCE4468(v14);
        v59(&v69, 0);
        (*(void (**)(void))(*(void *)a1 + 232))(0);
        if (v14 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v60 = sub_1BDDB0448();
          swift_bridgeObjectRelease();
          if (!v60)
          {
LABEL_81:
            swift_release();
            swift_bridgeObjectRelease();
            return 1;
          }
        }
        else
        {
          uint64_t v60 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v60) {
            goto LABEL_81;
          }
        }
        uint64_t v61 = v60 - 1;
        if (__OFSUB__(v60, 1)) {
          break;
        }
        if ((v14 & 0xC000000000000001) != 0) {
          goto LABEL_85;
        }
        if ((v61 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v61 < *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          BOOL v62 = *(void *)(v14 + 8 * v61 + 32);
          swift_retain();
          goto LABEL_77;
        }
        __break(1u);
LABEL_88:
        sub_1BDDB0008();
      }
      __break(1u);
LABEL_85:
      BOOL v62 = MEMORY[0x1C18862A0](v61, v14);
LABEL_77:
      swift_bridgeObjectRelease();
      uint64_t v63 = *(unsigned char *)(v62 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      swift_release();
      LOBYTE(v69) = v63;
      if (CalculateExpression.TokenType.isConstant.getter())
      {
        unint64_t v33 = 1;
        (*(void (**)(uint64_t))(*(void *)a1 + 256))(1);
        swift_release();
        return v33;
      }
      swift_release();
      return 1;
    }
    goto LABEL_15;
  }
  if ((v38 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v38 < *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v39 = *(void *)(v35 + 8 * v38 + 32);
    swift_retain();
    goto LABEL_40;
  }
  __break(1u);
  while (1)
  {
    __break(1u);
LABEL_99:
    swift_bridgeObjectRetain();
    char v64 = sub_1BDDB0448();
    uint64_t result = swift_bridgeObjectRelease();
    if (v64 == 1) {
      break;
    }
LABEL_52:
    char v51 = *((unsigned char *)v5 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
    LOBYTE(v69) = v51;
    if ((CalculateExpression.TokenType.isOperator.getter() & 1) == 0)
    {
      LOBYTE(v69) = v51;
      uint64_t v68 = 15;
      if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v69, &v68))
      {
        LOBYTE(v69) = v51;
        if ((CalculateExpression.TokenType.isOperand.getter() & 1) == 0)
        {
          LOBYTE(v69) = v51;
          uint64_t v68 = 18;
          if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v69, &v68))
          {
            LOBYTE(v69) = v51;
            uint64_t v68 = 16;
            if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v69, &v68))
            {
              swift_release();
              swift_bridgeObjectRelease();
              goto LABEL_61;
            }
          }
        }
      }
    }
    if (!__OFADD__(a2, 1))
    {
      uint64_t v65 = *(uint64_t (**)(long long *))(*(void *)v6 + 408);
      BOOL v52 = (void (*)(long long *, void))v65(&v69);
      sub_1BDD053AC(a2 + 1, a2 + 1, v14);
      v52(&v69, 0);
      LOBYTE(v69) = v51;
      uint64_t v68 = 18;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v69, &v68))
      {
        unint64_t v53 = (void (*)(long long *, void))v65(&v69);
        sub_1BDD02E58(a2);
        swift_release();
        v53(&v69, 0);
      }
      goto LABEL_60;
    }
  }
LABEL_47:
  if ((v14 & 0xC000000000000001) != 0)
  {
    long long v46 = MEMORY[0x1C18862A0](0, v14);
LABEL_50:
    long long v47 = swift_bridgeObjectRelease();
    long long v48 = (*(uint64_t (**)(uint64_t))(*(void *)v46 + 208))(v47);
    long long v50 = v49;
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)v5 + 216))(v48, v50);
LABEL_60:
    swift_release();
    goto LABEL_61;
  }
  if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    long long v46 = *(void *)(v14 + 32);
    swift_retain();
    goto LABEL_50;
  }
  __break(1u);
  return result;
}

uint64_t CalculateExpression.OperandOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t sub_1BDD618F0(uint64_t *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v4 = *a1;
  long long v5 = *(_OWORD *)(a1 + 1);
  uint64_t v6 = v2;
  return (*(uint64_t (**)(uint64_t *))(*(void *)v1 + 136))(&v4) & 1;
}

uint64_t type metadata accessor for CalculateExpression.OperandOperation()
{
  return self;
}

uint64_t method lookup function for CalculateExpression.OperandOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalculateExpression.OperandOperation);
}

uint64_t dispatch thunk of CalculateExpression.OperandOperation.operand.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of CalculateExpression.OperandOperation.isNegative.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t sub_1BDD619D4()
{
  type metadata accessor for CalculateExpression.RichToken();
  unsigned __int8 v26 = 10;
  char v1 = sub_1BDD013AC();
  uint64_t v2 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(6778732, 0xE300000000000000, &v26, v1 & 1);
  uint64_t v3 = *(void *)(v0 + 16);
  unint64_t v4 = *(void *)(v0 + 24);
  if (v3) {
    BOOL v5 = 0;
  }
  else {
    BOOL v5 = v4 == 0xE000000000000000;
  }
  int v6 = v5;
  if (v5 || (sub_1BDDB04E8() & 1) != 0)
  {
    char v22 = 18;
    char v7 = sub_1BDD013AC() & 1;
    uint64_t v8 = &v22;
    uint64_t v9 = 0;
    unint64_t v10 = 0;
  }
  else
  {
    char v25 = 1;
    swift_bridgeObjectRetain();
    char v7 = sub_1BDD013AC() & 1;
    uint64_t v8 = &v25;
    uint64_t v9 = v3;
    unint64_t v10 = v4;
  }
  uint64_t v11 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v9, v10, (unsigned __int8 *)v8, v7);
  type metadata accessor for CalculateExpression.RichExpression();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BDDB3730;
  *(void *)(v12 + 32) = v11;
  uint64_t v24 = v12;
  sub_1BDDAFFD8();
  uint64_t v13 = v24;
  swift_retain();
  uint64_t v14 = sub_1BDD07294(v13);
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 288))(v14);
  unint64_t v16 = *(uint64_t (**)(uint64_t))(*(void *)v2 + 280);
  uint64_t v17 = v16(v15);
  if (v17)
  {
    uint64_t v18 = v17;
    if (v6) {
      char v19 = 1;
    }
    else {
      char v19 = sub_1BDDB04E8();
    }
    (*(void (**)(void))(*(void *)v18 + 304))(v19 & 1);
    uint64_t v17 = swift_release();
  }
  uint64_t v20 = v16(v17);
  if (v20)
  {
    char v23 = 2;
    (*(void (**)(char *))(*(void *)v20 + 280))(&v23);
    swift_release();
  }
  swift_release();
  return v2;
}

uint64_t CalculateExpression.LogOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.FunctionOperation.deinit();
  return MEMORY[0x1F4186488](v0, 33, 7);
}

uint64_t _sSo13CalculateUnitC0A0E2idSSvg_0()
{
  id v1 = objc_msgSend(v0, sel_name);
  uint64_t v2 = sub_1BDDAFD68();

  return v2;
}

uint64_t sub_1BDD61CF8()
{
  return MEMORY[0x1E4FBB1B0];
}

void sub_1BDD61D04(uint64_t *a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_name);
  uint64_t v4 = sub_1BDDAFD68();
  uint64_t v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

void CalculateExpression.CustomOperandOperation.__allocating_init(_:)(void *a1)
{
  uint64_t v2 = v1;
  if (objc_msgSend(a1, sel_unitType) == (id)16)
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28EE0]), sel_init);
    objc_msgSend(v4, sel_setMaximumFractionDigits_, 8);
    uint64_t v5 = sub_1BDDAFA38();
    uint64_t v6 = *(void *)(v5 - 8);
    MEMORY[0x1F4188790](v5, v7);
    uint64_t v9 = (char *)v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1BDDAFA08();
    unint64_t v10 = (void *)sub_1BDDAFA18();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    objc_msgSend(v4, sel_setLocale_, v10);

    objc_msgSend(v4, sel_setUsesGroupingSeparator_, 0);
    objc_msgSend(v4, sel_setNumberStyle_, 1);
    objc_msgSend(v4, sel_setRoundingMode_, 6);
    unint64_t v11 = (unint64_t)objc_msgSend(a1, sel_numberFormatter);
    objc_msgSend(a1, sel_setNumberFormatter_, v4);
    id v12 = objc_msgSend(a1, sel_terms);
    sub_1BDD62480();
    unint64_t v13 = sub_1BDDAFFC8();

    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v14)
      {
LABEL_4:
        if ((v13 & 0xC000000000000001) != 0)
        {
          id v15 = (id)MEMORY[0x1C18862A0](0, v13);
          goto LABEL_7;
        }
        if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v15 = *(id *)(v13 + 32);
LABEL_7:
          unint64_t v16 = v15;
          swift_bridgeObjectRelease();
          id v17 = objc_msgSend(v16, sel_formattedValue);

          uint64_t v14 = sub_1BDDAFD68();
          unint64_t v19 = v18;

LABEL_18:
          objc_msgSend(a1, sel_setNumberFormatter_, v11);
          goto LABEL_19;
        }
        __break(1u);
        goto LABEL_40;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v19 = 0xE000000000000000;
    goto LABEL_18;
  }
  id v20 = objc_msgSend(a1, sel_terms);
  sub_1BDD62480();
  unint64_t v11 = sub_1BDDAFFC8();

  if (!(v11 >> 62))
  {
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_10;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1BDDB0448();
  swift_bridgeObjectRelease();
  if (!v24) {
    goto LABEL_21;
  }
LABEL_10:
  if ((v11 & 0xC000000000000001) != 0)
  {
LABEL_40:
    id v21 = (id)MEMORY[0x1C18862A0](0, v11);
    goto LABEL_13;
  }
  if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v21 = *(id *)(v11 + 32);
LABEL_13:
    id v4 = v21;
    swift_bridgeObjectRelease();
    char v22 = (id *)CalculateTermDecimalString(v4);
    if (v22)
    {
      unint64_t v11 = (unint64_t)v22;
      uint64_t v14 = sub_1BDDAFD68();
      unint64_t v19 = v23;
LABEL_19:

      goto LABEL_23;
    }

LABEL_22:
    uint64_t v14 = 0;
    unint64_t v19 = 0xE000000000000000;
LABEL_23:
    v54[0] = v14;
    v54[1] = v19;
    v53[2] = 12357;
    v53[3] = 0xE200000000000000;
    v53[0] = 3156805;
    v53[1] = 0xE300000000000000;
    sub_1BDCEB640();
    uint64_t v25 = sub_1BDDB0208();
    unint64_t v27 = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1BDD3FEA4(v25, v27);
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    if (v30)
    {
      if (v28 == 43 && v30 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_28:
        unint64_t v32 = sub_1BDD18AA8(1uLL, v25, v27);
        uint64_t v34 = v33;
        uint64_t v36 = v35;
        uint64_t v38 = v37;
        swift_bridgeObjectRelease();
        uint64_t v25 = MEMORY[0x1C1885C90](v32, v34, v36, v38);
        unint64_t v27 = v39;
        uint64_t v40 = 0;
        goto LABEL_35;
      }
      char v31 = sub_1BDDB04E8();
      swift_bridgeObjectRelease();
      if (v31) {
        goto LABEL_28;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_1BDD3FEA4(v25, v27);
    uint64_t v40 = v42;
    swift_bridgeObjectRelease();
    if (!v40)
    {
LABEL_36:
      type metadata accessor for CalculateExpression.RichToken();
      LOBYTE(v54[0]) = 1;
      uint64_t v52 = sub_1BDCE8A80(v25, v27, (char *)v54);
      (*(void (**)(uint64_t, uint64_t))(v2 + 160))(v52, v40);

      return;
    }
    if (v41 == 45 && v40 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v43 = sub_1BDDB04E8();
      swift_bridgeObjectRelease();
      if ((v43 & 1) == 0)
      {
        uint64_t v40 = 0;
        goto LABEL_36;
      }
    }
    uint64_t v40 = 1;
    unint64_t v44 = sub_1BDD18AA8(1uLL, v25, v27);
    uint64_t v46 = v45;
    uint64_t v48 = v47;
    uint64_t v50 = v49;
    swift_bridgeObjectRelease();
    uint64_t v25 = MEMORY[0x1C1885C90](v44, v46, v48, v50);
    unint64_t v27 = v51;
LABEL_35:
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  __break(1u);
}

uint64_t CalculateExpression.CustomOperandOperation.__allocating_init(_:negative:)(uint64_t a1, char a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(unsigned char *)(v4 + 24) = a2;
  return sub_1BDCF5BC4();
}

uint64_t CalculateExpression.CustomOperandOperation.init(_:negative:)(uint64_t a1, char a2)
{
  *(void *)(v2 + 16) = a1;
  *(unsigned char *)(v2 + 24) = a2;
  return sub_1BDCF5BC4();
}

uint64_t sub_1BDD623C0()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_1BDD623C8()
{
  return swift_retain();
}

void sub_1BDD623D0()
{
}

uint64_t sub_1BDD62400()
{
  return swift_release();
}

uint64_t CalculateExpression.CustomOperandOperation.deinit()
{
  uint64_t v0 = CalculateExpression.OperandOperation.deinit();
  swift_release();
  return v0;
}

uint64_t CalculateExpression.CustomOperandOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.OperandOperation.deinit();
  swift_release();
  return MEMORY[0x1F4186488](v0, 25, 7);
}

unint64_t sub_1BDD62480()
{
  unint64_t result = qword_1EBA26930;
  if (!qword_1EBA26930)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBA26930);
  }
  return result;
}

uint64_t type metadata accessor for CalculateExpression.CustomOperandOperation()
{
  return self;
}

uint64_t method lookup function for CalculateExpression.CustomOperandOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalculateExpression.CustomOperandOperation);
}

uint64_t dispatch thunk of CalculateExpression.CustomOperandOperation.__allocating_init(_:negative:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

void sub_1BDD62510(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16) == 1)
  {
    CalculateExpression.RichExpression.editingToken(matching:)(sub_1BDD2E384, &v57);
    uint64_t v3 = v57;
    if ((void)v57)
    {
      uint64_t v4 = *((void *)&v57 + 1);
      uint64_t v5 = *(void *)(*(void *)v57 + 416);
      sub_1BDD02DD4(v57);
      swift_retain();
      uint64_t v6 = (uint64_t (*)(uint64_t))((uint64_t (*)(uint64_t))v5)(v4);
      type metadata accessor for CalculateExpression.RichToken();
      LOBYTE(v57) = 15;
      char v7 = sub_1BDD013AC();
      uint64_t v8 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v57, v7 & 1);
      uint64_t v9 = v4 + 1;
      if (!__OFADD__(v4, 1))
      {
        uint64_t v10 = v8;
        if ((*(uint64_t (**)(void))(*(void *)a1 + 224))())
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
          uint64_t v11 = swift_allocObject();
          *(_OWORD *)(v11 + 16) = xmmword_1BDDB3730;
          *(void *)(v11 + 32) = v10;
          *(void *)&long long v57 = v11;
          sub_1BDDAFFD8();
          uint64_t v12 = v57;
          uint64_t v5 = *(void *)a1 + 400;
          unint64_t v13 = *(void (**)(uint64_t))v5;
          swift_retain();
          v13(v12);
          uint64_t v14 = (*(uint64_t (**)(void))(*(void *)a1 + 232))(0);
LABEL_12:
          uint64_t v9 = 0;
          goto LABEL_13;
        }
        if (!v6
          || ((*(uint64_t (**)(void))(*(void *)v3 + 576))() & 1) != 0
          || ((*(uint64_t (**)(void))(*(void *)v3 + 560))() & 1) != 0
          || ((*(uint64_t (**)(void))(*(void *)v3 + 568))() & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
          uint64_t v15 = swift_allocObject();
          *(_OWORD *)(v15 + 16) = xmmword_1BDDB3730;
          *(void *)(v15 + 32) = v10;
          *(void *)&long long v57 = v15;
          sub_1BDDAFFD8();
          uint64_t v16 = v57;
          uint64_t v5 = *(void *)v3 + 400;
          id v17 = *(void (**)(uint64_t))v5;
          swift_retain();
          uint64_t v14 = ((uint64_t (*)(uint64_t))v17)(v16);
          goto LABEL_12;
        }
        uint64_t v33 = ((uint64_t (*)(uint64_t))v5)(v4 + 1);
        if (v33)
        {
          uint64_t v34 = v33;
          char v35 = *(unsigned char *)(v33 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
          LOBYTE(v57) = v35;
          unsigned __int8 v56 = 15;
          if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v57, &v56)
            && ((*(uint64_t (**)(void))(*(void *)v34 + 232))() & 1) != 0)
          {
            uint64_t v36 = (*(uint64_t (**)(void))(*(void *)v34 + 208))();
            unint64_t v38 = v37;
            LOBYTE(v57) = v35;
            char v39 = sub_1BDD013AC() & 1;
            uint64_t v40 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(v36, v38, (unsigned __int8 *)&v57, v39);
            uint64_t v41 = (void (*)(long long *, void))(*(uint64_t (**)(long long *))(*(void *)v3 + 408))(&v57);
            char v43 = v42;
            unint64_t v44 = *v42;
            int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
            *char v43 = v44;
            if (!isUniquelyReferenced_nonNull_bridgeObject
              || (v44 & 0x8000000000000000) != 0
              || (v44 & 0x4000000000000000) != 0)
            {
              sub_1BDD02F24(v44);
              unint64_t v44 = v46;
              *char v43 = v46;
            }
            if ((v9 & 0x8000000000000000) == 0)
            {
              if ((unint64_t)v9 < *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 8 * v9 + 0x20) = v40;
                swift_release();
                sub_1BDDAFFD8();
                v41(&v57, 0);
                sub_1BDD02E18(v3);
                swift_release();
                swift_release();
                swift_release();
LABEL_42:
                swift_release();
                sub_1BDD02E18(v3);
                return;
              }
              goto LABEL_93;
            }
LABEL_92:
            __break(1u);
LABEL_93:
            __break(1u);
            return;
          }
          swift_release();
        }
        uint64_t v5 = *(void *)(*(void *)v3 + 408);
        swift_retain();
        uint64_t v55 = (uint64_t (*)(long long *, void))((uint64_t (*)(long long *))v5)(&v57);
        if (!(*v47 >> 62))
        {
          if (*(void *)((*v47 & 0xFFFFFFFFFFFFFF8) + 0x10) >= v9) {
            goto LABEL_56;
          }
          goto LABEL_90;
        }
LABEL_89:
        swift_bridgeObjectRetain();
        uint64_t v53 = sub_1BDDB0448();
        swift_bridgeObjectRelease();
        if (v53 >= v9)
        {
LABEL_56:
          if ((v9 & 0x8000000000000000) == 0)
          {
            sub_1BDD0572C(v9, v9, v10);
            uint64_t v14 = v55(&v57, 0);
            if (v9)
            {
              int64_t v54 = (uint64_t (*)(long long *))v5;
              uint64_t v5 = 0;
              uint64_t v6 = *(uint64_t (**)(uint64_t))(*(void *)v3 + 392);
              uint64_t v48 = (uint64_t (*)(long long *, void))v4;
              uint64_t v4 = *(void *)v3 + 392;
              uint64_t v55 = v48;
              uint64_t v10 = (uint64_t)v48 + 5;
              while (1)
              {
                a1 = v10 - 4;
                uint64_t v49 = v6(v14);
                if ((v49 & 0xC000000000000001) != 0)
                {
                  uint64_t v23 = MEMORY[0x1C18862A0](v10 - 4, v49);
                }
                else
                {
                  if ((unint64_t)a1 >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                    goto LABEL_86;
                  }
                  uint64_t v23 = *(void *)(v49 + 8 * v10);
                  swift_retain();
                }
                swift_bridgeObjectRelease();
                char v50 = *(unsigned char *)(v23 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
                LOBYTE(v57) = v50;
                unsigned __int8 v56 = 16;
                if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v57, &v56))
                {
                  uint64_t v14 = swift_release();
                  BOOL v27 = __OFADD__(v5++, 1);
                  if (v27) {
                    goto LABEL_87;
                  }
                }
                else
                {
                  LOBYTE(v57) = v50;
                  unsigned __int8 v56 = 15;
                  if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v57, &v56))
                  {
                    if (!v5) {
                      goto LABEL_75;
                    }
                    uint64_t v14 = swift_release();
                    BOOL v27 = __OFSUB__(v5--, 1);
                    if (v27) {
                      goto LABEL_88;
                    }
                  }
                  else
                  {
                    uint64_t v14 = swift_release();
                  }
                }
                --v10;
                if (a1 <= 1) {
                  goto LABEL_78;
                }
              }
            }
            goto LABEL_13;
          }
          goto LABEL_91;
        }
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
        goto LABEL_92;
      }
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      uint64_t v20 = sub_1BDDB0448();
LABEL_16:
      uint64_t v21 = swift_bridgeObjectRelease();
      if (a1 < v20)
      {
        uint64_t v55 = (uint64_t (*)(long long *, void))v4;
        uint64_t v4 = 0;
        v9 += 5;
        uint64_t v5 = 15;
        while (1)
        {
          a1 = v9 - 4;
          uint64_t v22 = v6(v21);
          uint64_t v23 = v22;
          if ((v22 & 0xC000000000000001) != 0)
          {
            uint64_t v24 = MEMORY[0x1C18862A0](v9 - 4, v22);
          }
          else
          {
            if (a1 < 0)
            {
              __break(1u);
LABEL_73:
              __break(1u);
LABEL_74:
              __break(1u);
LABEL_75:
              if ((*(uint64_t (**)(void))(*(void *)v23 + 232))())
              {
                unint64_t v51 = (void (*)(long long *, void))v54(&v57);
                sub_1BDD02E58(a1);
                swift_release();
                v51(&v57, 0);
                sub_1BDD02E18(v3);
                swift_release();
                goto LABEL_41;
              }
LABEL_77:
              uint64_t v14 = swift_release();
LABEL_78:
              uint64_t v4 = (uint64_t)v55;
LABEL_13:
              a1 = v9 + 1;
              if (!__OFADD__(v9, 1))
              {
                unint64_t v18 = (uint64_t (**)(uint64_t))(*(void *)v3 + 392);
                uint64_t v6 = *v18;
                unint64_t v19 = (*v18)(v14);
                if (!(v19 >> 62))
                {
                  uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  goto LABEL_16;
                }
                goto LABEL_82;
              }
              goto LABEL_81;
            }
            if ((unint64_t)a1 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_73;
            }
            uint64_t v24 = *(void *)(v22 + 8 * v9);
            swift_retain();
          }
          swift_bridgeObjectRelease();
          char v25 = *(unsigned char *)(v24 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
          LOBYTE(v57) = v25;
          unsigned __int8 v56 = 15;
          if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v57, &v56))
          {
            uint64_t v26 = swift_release();
            BOOL v27 = __OFADD__(v4++, 1);
            if (v27)
            {
              __break(1u);
              goto LABEL_77;
            }
          }
          else
          {
            LOBYTE(v57) = v25;
            unsigned __int8 v56 = 16;
            BOOL v28 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v57, &v56);
            uint64_t v26 = swift_release();
            if (v28)
            {
              if (!v4) {
                goto LABEL_36;
              }
              BOOL v27 = __OFSUB__(v4--, 1);
              if (v27)
              {
                __break(1u);
                goto LABEL_80;
              }
            }
          }
          BOOL v27 = __OFADD__(a1, 1);
          a1 = v9 - 3;
          if (v27) {
            goto LABEL_74;
          }
          unint64_t v29 = v6(v26);
          if (v29 >> 62) {
            uint64_t v30 = sub_1BDDB0448();
          }
          else {
            uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          uint64_t v21 = swift_bridgeObjectRelease();
          ++v9;
          if (a1 >= v30)
          {
LABEL_36:
            uint64_t v4 = (uint64_t)v55;
            break;
          }
        }
      }
      LOBYTE(v57) = 16;
      uint64_t v31 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)(0, 0, (unsigned __int8 *)&v57, 1);
      uint64_t v10 = (*(uint64_t (**)(long long *))(*(void *)v3 + 408))(&v57);
      uint64_t v9 = *v32;
      if ((unint64_t)*v32 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v52 = sub_1BDDB0448();
        swift_bridgeObjectRelease();
        if (v52 >= a1)
        {
LABEL_39:
          if ((a1 & 0x8000000000000000) == 0)
          {
            sub_1BDD0572C(a1, a1, v31);
            ((void (*)(long long *, void))v10)(&v57, 0);
            sub_1BDD02E18(v3);
LABEL_41:
            swift_release();
            swift_release();
            goto LABEL_42;
          }
          goto LABEL_85;
        }
      }
      else if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a1)
      {
        goto LABEL_39;
      }
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
      goto LABEL_89;
    }
  }
}

uint64_t CalculateExpression.OpenParenthesisOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  return MEMORY[0x1F4186488](v0, 16, 7);
}

void sub_1BDD62FC4(char *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  if (v3 == 15420 && v4 == 0xE200000000000000) {
    goto LABEL_14;
  }
  char v6 = sub_1BDDB04E8();
  BOOL v8 = v3 == 15934 && v4 == 0xE200000000000000;
  char v9 = 3;
  if ((v6 & 1) == 0 && !v8)
  {
    if (sub_1BDDB04E8())
    {
LABEL_14:
      char v9 = 3;
      goto LABEL_15;
    }
    if (v3 == 37 && v4 == 0xE100000000000000 || (sub_1BDDB04E8()) && *(unsigned char *)(v1 + 32) != 1) {
      char v9 = 1;
    }
    else {
      char v9 = 2;
    }
  }
LABEL_15:
  *a1 = v9;
}

void sub_1BDD630B0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16) == 1)
  {
    uint64_t v3 = v2;
    CalculateExpression.RichExpression.editingToken(matching:)(sub_1BDD64410, &v103);
    uint64_t v5 = v103;
    if ((void)v103)
    {
      unint64_t v6 = *((void *)&v103 + 1);
      char v7 = v105;
      uint64_t v101 = v104;
      sub_1BDD02DD4(v103);
      swift_retain();
      unint64_t v8 = sub_1BDD39E7C((uint64_t)&unk_1F18664E8);
      uint64_t v10 = *(void (**)(long long *, void))(v3 + 16);
      uint64_t v9 = *(void *)(v3 + 24);
      uint64_t v11 = *(void *)(v8 + 16);
      swift_bridgeObjectRetain();
      if (!v11)
      {
LABEL_158:
        swift_bridgeObjectRelease();
        __break(1u);
        goto LABEL_159;
      }
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_1BDD13EB4((uint64_t)v10, v9);
      if ((v13 & 1) == 0)
      {
LABEL_157:
        swift_bridgeObjectRelease();
        goto LABEL_158;
      }
      unint64_t v14 = v12;
      type metadata accessor for CalculateExpression.RichToken();
      LOBYTE(v14) = *(unsigned char *)(*(void *)(v8 + 56) + v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LOBYTE(v103) = v14;
      char v15 = sub_1BDD013AC();
      uint64_t v16 = CalculateExpression.RichToken.__allocating_init(text:type:isImplicit:)((uint64_t)v10, v9, (unsigned __int8 *)&v103, v15 & 1);
      uint64_t v17 = (*(uint64_t (**)(void))(*(void *)a1 + 232))(0);
      if (((*(uint64_t (**)(uint64_t))(*(void *)v5 + 576))(v17) & 1) != 0
        && (v10 == (void (*)(long long *, void))45 && v9 == 0xE100000000000000
         || (sub_1BDDB04E8() & 1) != 0))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBA269F0);
        uint64_t v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_1BDDB3730;
        *(void *)(v18 + 32) = v16;
        *(void *)&long long v103 = v18;
        sub_1BDDAFFD8();
        uint64_t v19 = v103;
        uint64_t v20 = *(void (**)(uint64_t))(*(void *)v5 + 400);
        swift_retain();
        v20(v19);
        sub_1BDD02E18(v5);
        swift_release();
        swift_release();
        uint64_t v21 = v5;
LABEL_128:
        sub_1BDD02E18(v21);
        return;
      }
      uint64_t v96 = *(uint64_t (**)(unint64_t))(*(void *)v5 + 416);
      uint64_t v22 = v96(v6);
      if (!v22)
      {
        swift_release();
        swift_release();
        sub_1BDD02E18(v5);
        uint64_t v32 = v5;
LABEL_44:
        sub_1BDD02E18(v32);
        return;
      }
      uint64_t v23 = v22;
      uint64_t v98 = v7;
      uint64_t v99 = v16;
      BOOL v24 = v10 == (void (*)(long long *, void))45 && v9 == 0xE100000000000000;
      char v25 = v24;
      char v95 = v25;
      uint64_t v100 = v22;
      if (!v24)
      {
        if ((sub_1BDDB04E8() & 1) == 0)
        {
          char v39 = *(unsigned char *)(v23 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
          LOBYTE(v103) = v39;
          unsigned __int8 v102 = 15;
          if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v103, &v102)
            || (LOBYTE(v103) = v39,
                unsigned __int8 v102 = 18,
                static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v103, &v102)))
          {
LABEL_43:
            swift_release();
            swift_release();
            swift_release();
            sub_1BDD02E18(v5);
            uint64_t v32 = v5;
            goto LABEL_44;
          }
        }
        if ((sub_1BDDB04E8() & 1) == 0) {
          goto LABEL_23;
        }
      }
      char v26 = *(unsigned char *)(v23 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      LOBYTE(v103) = v26;
      uint64_t v23 = v100;
      if ((CalculateExpression.TokenType.isBinaryOperator.getter() & 1) == 0
        || (LOBYTE(v103) = v26, v102 = 4, sub_1BDCF0848(), uint64_t v23 = v100, (sub_1BDDAFD28() & 1) != 0)
        || (LOBYTE(v103) = v26, v102 = 3, uint64_t v23 = v100, (sub_1BDDAFD28() & 1) != 0))
      {
LABEL_23:
        BOOL v27 = &OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
        uint64_t v97 = OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
        char v28 = *(unsigned char *)(v23 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
        LOBYTE(v103) = v28;
        if ((CalculateExpression.TokenType.isBinaryOperator.getter() & 1) != 0
          || (LOBYTE(v103) = v28, (CalculateExpression.TokenType.isPostfixOperator.getter() & 1) != 0))
        {
          uint64_t v29 = OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type;
          uint64_t v30 = (unsigned char *)v99;
          LOBYTE(v103) = *(unsigned char *)(v99 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
          unsigned __int8 v102 = 9;
          if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v103, &v102))
          {
            if (!(*(uint64_t (**)(void))(*(void *)a1 + 176))()
              || (v31 = CalculateExpression.engine.getter(), swift_release(), BOOL v24 = v31 == 1, v30 = (unsigned char *)v99, !v24))
            {
              LOBYTE(v103) = *(unsigned char *)(v100 + v97);
              unsigned __int8 v102 = v30[v29];
              if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v103, &v102))
              {
                *(void *)&long long v103 = v5;
                *((void *)&v103 + 1) = v6;
                uint64_t v104 = v101;
                uint64_t v105 = v98;
                sub_1BDD22E38((void (*)(void, void))v30, (uint64_t *)&v103);
                sub_1BDD02E18(v5);
                swift_release();
                swift_release();
                swift_release();
                uint64_t v21 = v5;
                goto LABEL_128;
              }
            }
          }
          uint64_t v33 = v30;
          char v34 = *(unsigned char *)(v100 + v97);
          LOBYTE(v103) = v34;
          unsigned __int8 v102 = v33[v29];
          if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v103, &v102)
            && ((*(uint64_t (**)(void))(*(void *)v100 + 232))() & 1) == 0)
          {
            swift_release();
            swift_release();
            swift_release();
            sub_1BDD02E18(v5);
            goto LABEL_88;
          }
          LOBYTE(v103) = v34;
          unsigned __int8 v102 = 8;
          BOOL v27 = v98;
          if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v103, &v102))
          {
            LOBYTE(v103) = v34;
            unsigned __int8 v102 = 9;
            if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v103, &v102)
              || (*(uint64_t (**)(void))(*(void *)a1 + 176))()
              && (uint64_t v56 = CalculateExpression.engine.getter(), swift_release(), v56 == 1))
            {
              LOBYTE(v103) = *(unsigned char *)(v100 + v97);
              unsigned __int8 v102 = 7;
              uint64_t v57 = static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v103, &v102);
              if (v57)
              {
                uint64_t v57 = (*(uint64_t (**)(void))(*(void *)v100 + 280))();
                if (v57)
                {
                  if (((*(uint64_t (**)(void))(*(void *)v57 + 568))() & 1) == 0)
                  {
                    uint64_t v9 = v6 + 1;
                    if (!__OFADD__(v6, 1))
                    {
                      uint64_t v70 = *(uint64_t (**)(long long *))(*(void *)v5 + 408);
                      swift_retain();
                      uint64_t v10 = (void (*)(long long *, void))v70(&v103);
                      if (!(*v71 >> 62))
                      {
                        uint64_t v72 = *(void *)((*v71 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_107:
                        if (v72 < v9)
                        {
                          __break(1u);
                        }
                        else if ((v9 & 0x8000000000000000) == 0)
                        {
                          sub_1BDD0572C(v9, v9, v99);
                          v10(&v103, 0);
                          sub_1BDD02E18(v5);
                          swift_release();
                          swift_release();
                          goto LABEL_40;
                        }
                        __break(1u);
                        goto LABEL_157;
                      }
LABEL_154:
                      swift_bridgeObjectRetain();
                      uint64_t v72 = sub_1BDDB0448();
                      swift_bridgeObjectRelease();
                      goto LABEL_107;
                    }
LABEL_153:
                    __break(1u);
                    goto LABEL_154;
                  }
                  uint64_t v57 = swift_release();
                }
              }
              unint64_t v58 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 392))(v57);
              if (!(v58 >> 62))
              {
                uint64_t v59 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
                goto LABEL_85;
              }
LABEL_145:
              uint64_t v59 = sub_1BDDB0448();
LABEL_85:
              uint64_t v60 = swift_bridgeObjectRelease();
              if (v59 == 1)
              {
                (*(void (**)(uint64_t))(*(void *)v5 + 424))(v60);
                sub_1BDD02E18(v5);
                swift_release();
                swift_release();
                swift_release();
                uint64_t v21 = v5;
                goto LABEL_128;
              }
              unint64_t v65 = v6 - 1;
              if (!__OFSUB__(v6, 1))
              {
                uint64_t v66 = v96(v6 - 1);
                if (v66)
                {
                  char v67 = *(unsigned char *)(v66 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
                  swift_release();
                  LOBYTE(v103) = v67;
                  unsigned __int8 v102 = 15;
                  sub_1BDCF0848();
                  if (sub_1BDDAFD28())
                  {
                    uint64_t v68 = (void (*)(long long *, void))(*(uint64_t (**)(long long *))(*(void *)v5 + 408))(&v103);
                    sub_1BDD02E58(v6);
                    swift_release();
                    v68(&v103, 0);
                    sub_1BDD02E18(v5);
                    swift_release();
                    goto LABEL_40;
                  }
                }
                if ((v95 & 1) == 0)
                {
                  if ((sub_1BDDB04E8() & 1) == 0)
                  {
                    uint64_t v73 = v96(v6 - 1);
                    if (v73)
                    {
                      char v74 = *(unsigned char *)(v73 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
                      swift_release();
                      LOBYTE(v103) = v74;
                      if (CalculateExpression.TokenType.isOperator.getter())
                      {
                        uint64_t v75 = v96(v6 - 1);
                        if (!v75
                          || (char v76 = *(unsigned char *)(v75 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type),
                              swift_release(),
                              LOBYTE(v103) = v76,
                              unsigned __int8 v102 = 9,
                              sub_1BDCF0848(),
                              (sub_1BDDAFD28() & 1) == 0))
                        {
                          unint64_t v86 = (uint64_t (**)(long long *))(*(void *)v5 + 408);
                          uint64_t v87 = *v86;
                          uint64_t v88 = (void (*)(long long *, void))(*v86)(&v103);
                          sub_1BDD02E58(v6);
                          swift_release();
                          v88(&v103, 0);
                          swift_retain();
                          uint64_t v89 = (void (*)(long long *, void))v87(&v103);
                          uint64_t v91 = v90;
                          unint64_t v92 = *v90;
                          int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
                          *uint64_t v91 = v92;
                          if (!isUniquelyReferenced_nonNull_bridgeObject
                            || (v92 & 0x8000000000000000) != 0
                            || (v92 & 0x4000000000000000) != 0)
                          {
                            sub_1BDD02F24(v92);
                            unint64_t v92 = v94;
                            *uint64_t v91 = v94;
                          }
                          if ((v65 & 0x8000000000000000) == 0)
                          {
                            if (v65 < *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10))
                            {
                              *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 8 * v65 + 0x20) = v99;
                              swift_release();
                              sub_1BDDAFFD8();
                              v89(&v103, 0);
                              goto LABEL_127;
                            }
LABEL_160:
                            __break(1u);
                            return;
                          }
LABEL_159:
                          __break(1u);
                          goto LABEL_160;
                        }
                      }
                    }
                  }
                  if (v10 == (void (*)(long long *, void))37 && v9 == 0xE100000000000000) {
                    goto LABEL_163;
                  }
                }
                if (sub_1BDDB04E8())
                {
LABEL_163:
                  uint64_t v77 = v96(v6 - 1);
                  if (v77)
                  {
                    char v78 = *(unsigned char *)(v77 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
                    swift_release();
                    LOBYTE(v103) = v78;
                    unsigned __int8 v102 = 9;
                    sub_1BDCF0848();
                    if (sub_1BDDAFD28())
                    {
                      uint64_t v79 = (void (*)(long long *, void))(*(uint64_t (**)(long long *))(*(void *)v5 + 408))(&v103);
                      sub_1BDD02E58(v6);
                      swift_release();
                      v79(&v103, 0);
                      goto LABEL_127;
                    }
                  }
                }
                unint64_t v80 = *(uint64_t (**)(long long *))(*(void *)v5 + 408);
                swift_retain();
                uint64_t v81 = (void (*)(long long *, void))v80(&v103);
                uint64_t v83 = v82;
                uint64_t v9 = *v82;
                int v84 = swift_isUniquelyReferenced_nonNull_bridgeObject();
                *uint64_t v83 = v9;
                if (!v84 || v9 < 0 || (v9 & 0x4000000000000000) != 0)
                {
                  sub_1BDD02F24(v9);
                  uint64_t v9 = v85;
                  *uint64_t v83 = v85;
                }
                if ((v6 & 0x8000000000000000) == 0)
                {
                  uint64_t v10 = (void (*)(long long *, void))v99;
                  if (v6 < *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  {
                    *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v99;
                    swift_release();
                    sub_1BDDAFFD8();
                    v81(&v103, 0);
                    goto LABEL_127;
                  }
                  goto LABEL_152;
                }
LABEL_151:
                __break(1u);
LABEL_152:
                __break(1u);
                goto LABEL_153;
              }
LABEL_150:
              __break(1u);
              goto LABEL_151;
            }
          }
          uint64_t v35 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
          }
          else
          {
            uint64_t v36 = *(uint64_t (**)(long long *))(*(void *)v5 + 408);
            BOOL v27 = (uint64_t *)(*(void *)v5 + 408);
            swift_retain();
            uint64_t v9 = v36(&v103);
            if (!(*v37 >> 62))
            {
              uint64_t v38 = *(void *)((*v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_37:
              if (v38 < v35)
              {
                __break(1u);
              }
              else if ((v35 & 0x8000000000000000) == 0)
              {
                sub_1BDD0572C(v6 + 1, v6 + 1, v99);
                ((void (*)(long long *, void))v9)(&v103, 0);
                sub_1BDD02E18(v5);
                swift_release();
LABEL_40:
                swift_release();
                swift_release();
LABEL_88:
                uint64_t v21 = v5;
                goto LABEL_128;
              }
              __break(1u);
              goto LABEL_141;
            }
          }
          swift_bridgeObjectRetain();
          uint64_t v38 = sub_1BDDB0448();
          swift_bridgeObjectRelease();
          goto LABEL_37;
        }
        if ((v95 & 1) == 0)
        {
          char v40 = sub_1BDDB04E8();
          BOOL v41 = v10 == (void (*)(long long *, void))43 && v9 == 0xE100000000000000;
          BOOL v42 = v41;
          if ((v40 & 1) == 0 && !v42 && (sub_1BDDB04E8() & 1) == 0) {
            goto LABEL_63;
          }
        }
        LOBYTE(v103) = v28;
        unsigned __int8 v102 = 1;
        if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v103, &v102)
          || (BOOL v27 = *(uint64_t **)(*(void *)v100 + 208),
              uint64_t v43 = ((uint64_t (*)(void))v27)(),
              uint64_t v45 = sub_1BDD0F9B4(v43, v44),
              uint64_t v47 = v46,
              swift_bridgeObjectRelease(),
              !v47))
        {
LABEL_63:
          char v51 = *(unsigned char *)(v100 + v97);
          LOBYTE(v103) = v51;
          if ((CalculateExpression.TokenType.isOperand.getter() & 1) == 0)
          {
            LOBYTE(v103) = v51;
            unsigned __int8 v102 = 16;
            if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v103, &v102))
            {
              LOBYTE(v103) = v51;
              unsigned __int8 v102 = 15;
              if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v103, &v102)
                || (v95 & 1) == 0 && (sub_1BDDB04E8() & 1) == 0)
              {
                LOBYTE(v103) = v51;
                unsigned __int8 v102 = 18;
                if (!static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v103, &v102)) {
                  goto LABEL_43;
                }
              }
            }
          }
          uint64_t v35 = v6 + 1;
          if (!__OFADD__(v6, 1))
          {
            BOOL v27 = *(uint64_t **)(*(void *)v5 + 408);
            swift_retain();
            uint64_t v9 = ((uint64_t (*)(long long *))v27)(&v103);
            if (!(*v52 >> 62))
            {
              uint64_t v53 = *(void *)((*v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_72:
              BOOL v54 = v53 < v35;
              uint64_t v10 = (void (*)(long long *, void))v99;
              if (v54)
              {
                __break(1u);
              }
              else if ((v35 & 0x8000000000000000) == 0)
              {
                sub_1BDD0572C(v35, v35, v99);
                ((void (*)(long long *, void))v9)(&v103, 0);
                LOBYTE(v103) = *(unsigned char *)(v100 + v97);
                unsigned __int8 v102 = 18;
                if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v103, &v102))
                {
                  uint64_t v55 = (void (*)(long long *, void))((uint64_t (*)(long long *))v27)(&v103);
                  sub_1BDD02E58(v6);
                  swift_release();
                  v55(&v103, 0);
                }
                goto LABEL_127;
              }
              __break(1u);
              goto LABEL_145;
            }
LABEL_142:
            swift_bridgeObjectRetain();
            uint64_t v53 = sub_1BDDB0448();
            swift_bridgeObjectRelease();
            goto LABEL_72;
          }
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (v45 == 101 && v47 == 0xE100000000000000)
        {
          uint64_t v50 = swift_bridgeObjectRelease();
        }
        else
        {
          char v49 = sub_1BDDB04E8();
          uint64_t v50 = swift_bridgeObjectRelease();
          if ((v49 & 1) == 0) {
            goto LABEL_63;
          }
        }
        *(void *)&long long v103 = ((uint64_t (*)(uint64_t))v27)(v50);
        *((void *)&v103 + 1) = v69;
        swift_bridgeObjectRetain();
        sub_1BDDAFE18();
        swift_bridgeObjectRelease();
        (*(void (**)(void, void))(*(void *)v100 + 216))(v103, *((void *)&v103 + 1));
LABEL_127:
        sub_1BDD02E18(v5);
        swift_release();
        swift_release();
        swift_release();
        uint64_t v21 = v5;
        goto LABEL_128;
      }
      uint64_t v61 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
      }
      else
      {
        BOOL v62 = *(uint64_t (**)(long long *))(*(void *)v5 + 408);
        swift_retain();
        uint64_t v9 = v62(&v103);
        if (!(*v63 >> 62))
        {
          uint64_t v64 = *(void *)((*v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_92;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v64 = sub_1BDDB0448();
      swift_bridgeObjectRelease();
LABEL_92:
      BOOL v54 = v64 < v61;
      uint64_t v10 = (void (*)(long long *, void))v99;
      if (v54)
      {
        __break(1u);
      }
      else if ((v61 & 0x8000000000000000) == 0)
      {
        sub_1BDD0572C(v6 + 1, v6 + 1, v99);
        ((void (*)(long long *, void))v9)(&v103, 0);
        goto LABEL_127;
      }
      __break(1u);
      goto LABEL_150;
    }
  }
}

uint64_t sub_1BDD64410(uint64_t *a1)
{
  uint64_t v2 = *a1;
  long long v22 = *(_OWORD *)(a1 + 1);
  uint64_t v3 = a1[3];
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  if (v5 == 45 && v4 == 0xE100000000000000) {
    goto LABEL_15;
  }
  char v7 = sub_1BDDB04E8();
  BOOL v9 = v5 == 43 && v4 == 0xE100000000000000;
  if (v7 & 1) != 0 || v9 || (char v10 = 0, (sub_1BDDB04E8()))
  {
    if ((sub_1BDDB04E8() & 1) == 0)
    {
      uint64_t v13 = swift_retain();
      goto LABEL_21;
    }
LABEL_15:
    uint64_t v11 = *(uint64_t (**)(uint64_t))(*(void *)v2 + 560);
    uint64_t v12 = swift_retain();
    if ((v11(v12) & 1) != 0
      || ((*(uint64_t (**)(void))(*(void *)v2 + 568))() & 1) != 0
      || (uint64_t v13 = (*(uint64_t (**)(void))(*(void *)v2 + 544))(), (v13 & 1) != 0))
    {
      (*(void (**)(uint64_t *__return_ptr))(*(void *)v2 + 272))(&v24);
      unsigned __int8 v23 = 3;
      sub_1BDD18E9C();
      uint64_t v13 = sub_1BDDAFD28();
      if ((v13 & 1) == 0)
      {
        char v10 = 1;
LABEL_33:
        swift_release();
        return v10 & 1;
      }
    }
LABEL_21:
    if (((*(uint64_t (**)(uint64_t))(*(void *)v2 + 456))(v13) & 1) != 0
      && (v24 = v2, v25 = v22, v26 = v3, (uint64_t v14 = CalculateExpression.RichExpression.EditingToken.token.getter()) != 0))
    {
      uint64_t v15 = v14;
      LOBYTE(v24) = *(unsigned char *)(v14 + OBJC_IVAR____TtCC9Calculate19CalculateExpression9RichToken_type);
      unsigned __int8 v23 = 1;
      if (static CalculateExpression.TokenType.== infix(_:_:)((unsigned __int8 *)&v24, &v23)
        && (uint64_t v16 = (*(uint64_t (**)(void))(*(void *)v15 + 208))(),
            uint64_t v18 = sub_1BDD0F9B4(v16, v17),
            uint64_t v20 = v19,
            swift_bridgeObjectRelease(),
            v20))
      {
        if (v18 == 101 && v20 == 0xE100000000000000) {
          char v10 = 1;
        }
        else {
          char v10 = sub_1BDDB04E8();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        char v10 = 0;
      }
      swift_release();
    }
    else
    {
      char v10 = 0;
    }
    goto LABEL_33;
  }
  return v10 & 1;
}

void sub_1BDD64710()
{
}

uint64_t CalculateExpression.BasicOperatorOperation.deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CalculateExpression.BasicOperatorOperation.__deallocating_deinit()
{
  uint64_t v0 = CalculateExpression.Operation.deinit();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 33, 7);
}

uint64_t method lookup function for CalculateExpression.BasicOperatorOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CalculateExpression.BasicOperatorOperation);
}

void sub_1BDD656A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDD65C9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDD65E90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

unint64_t treeDecimalValue(double *a1)
{
  int v1 = *(_DWORD *)a1;
  if (*(_DWORD *)a1 == 1)
  {
    double v3 = a1[4];
    if (my_rnd_mode) {
      int v4 = 4;
    }
    else {
      int v4 = 0;
    }
    return __binary64_to_bid128(v4, &my_fpsf, v3);
  }
  else if (v1 == 2)
  {
    return *((void *)a1 + 6);
  }
  else if (v1 == 4)
  {
    return *((void *)a1 + 8);
  }
  else
  {
    return 0;
  }
}

double *newConstantNode(unsigned __int8 *a1)
{
  if (my_rnd_mode) {
    int v1 = 4;
  }
  else {
    int v1 = 0;
  }
  unint64_t v2 = __bid128_from_string(a1, v1, &my_fpsf);
  return newDecimalNode(v2, v3);
}

double *newDecimalNode(unint64_t a1, unint64_t a2)
{
  int v4 = (double *)malloc_type_calloc(1uLL, 0xD0uLL, 0x10A00405A5B035DuLL);
  v4[4] = __bid128_to_binary64(a1, a2, 4, &my_fpsf);
  *((void *)v4 + 6) = a1;
  *((void *)v4 + 7) = a2;
  unint64_t v5 = -1;
  if (!__bid128_quiet_greater_equal(a1, a2, 0xFFFFFFFFFFFFFFFFLL, 0x3040000000000000uLL, &my_fpsf)) {
    unint64_t v5 = __bid128_to_uint64_int(a1, a2, &my_fpsf);
  }
  *((void *)v4 + 8) = v5;
  *((void *)v4 + 1) = functionConstant;
  *(_DWORD *)int v4 = g_PreferredType;
  *((_DWORD *)v4 + 51) = 0;
  return v4;
}

void functionConstant(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionConstant_block_invoke;
  v2[3] = &__block_descriptor_48_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  v2[5] = a1;
  evaluateUnary(a1, a2, v2);
}

uint64_t __functionConstant_block_invoke(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 32);
  uint64_t v1 = *(void *)(result + 40);
  *(void *)(v2 + 32) = *(void *)(v1 + 32);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v1 + 48);
  uint64_t v3 = *(void *)(result + 32);
  int v4 = *(int **)(result + 40);
  *(void *)(v3 + 64) = *((void *)v4 + 8);
  if (*((unsigned char *)v4 + 203)) {
    g_isTrivial = 0;
  }
  int v5 = g_PowNestingLevel;
  if (!g_PowNestingLevel && (g_foundFirstCoefficient & 1) == 0)
  {
    int v6 = *v4;
    if (*v4 == 1)
    {
      if (my_rnd_mode) {
        int v7 = 4;
      }
      else {
        int v7 = 0;
      }
      unint64_t result = __binary64_to_bid128(v7, &my_fpsf, *((double *)v4 + 4));
    }
    else if (v6 == 2)
    {
      unint64_t result = *((void *)v4 + 6);
      uint64_t v8 = *((void *)v4 + 7);
    }
    else
    {
      if (v6 == 4) {
        unint64_t result = *((void *)v4 + 8);
      }
      else {
        unint64_t result = 0;
      }
      uint64_t v8 = 0x3040000000000000;
    }
    g_firstCoefficient_0 = result;
    qword_1EBA2A5C8 = v8;
    g_foundFirstCoefficient = 1;
    *(unsigned char *)(v3 + 202) = 1;
  }
  if (g_GeneratingConvertTerm == 1 && !v5)
  {
    int v9 = *v4;
    if (*v4 == 1)
    {
      if (my_rnd_mode) {
        int v11 = 4;
      }
      else {
        int v11 = 0;
      }
      unint64_t v10 = __binary64_to_bid128(v11, &my_fpsf, *((double *)v4 + 4));
    }
    else if (v9 == 2)
    {
      unint64_t v10 = *((void *)v4 + 6);
      unint64_t v12 = *((void *)v4 + 7);
    }
    else
    {
      if (v9 == 4) {
        unint64_t v10 = *((void *)v4 + 8);
      }
      else {
        unint64_t v10 = 0;
      }
      unint64_t v12 = 0x3040000000000000;
    }
    unint64_t result = __bid128_quiet_equal(v10, v12, 1uLL, 0x3040000000000000uLL, &my_fpsf);
    if (!result)
    {
      *(_DWORD *)(v3 + 204) = 11;
      *(void *)(v3 + 48) = 0;
      *(void *)(v3 + 56) = 0x7C00000000000000;
    }
  }
  return result;
}

void evaluateUnary(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  int v5 = a3;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v8 = 0u;
  memset(v7, 0, sizeof(v7));
  evaluateTree(*(void *)(a1 + 16), (uint64_t)v7);
  *(void *)(a2 + 8) = functionNoOp;
  *(_DWORD *)a2 = *(_DWORD *)a1;
  my_rnd_mode = 1;
  my_fpsf = 0;
  if (HIDWORD(v18))
  {
    *(_DWORD *)(a2 + 204) = HIDWORD(v18);
    goto LABEL_17;
  }
  if ((~*((void *)&v9 + 1) & 0x7C00000000000000) == 0)
  {
    *(void *)(a2 + 32) = 0x7FF8000000000000;
    *(void *)(a2 + 56) = 0x7C00000000000000;
LABEL_16:
    *(void *)(a2 + 48) = 0;
    goto LABEL_17;
  }
  v5[2](v5, v7, *(double *)&v8);
  if (!*(_DWORD *)(a2 + 204))
  {
    if ((my_fpsf & 4) != 0)
    {
      int v6 = 1;
    }
    else if ((my_fpsf & 8) != 0)
    {
      int v6 = 3;
    }
    else if ((my_fpsf & 0x10) != 0)
    {
      int v6 = 2;
    }
    else
    {
      int v6 = 4 * (my_fpsf & 1);
    }
    *(_DWORD *)(a2 + 204) = v6;
  }
  if (__bid128_quiet_equal(*(void *)(a2 + 48), *(void *)(a2 + 56), 0, 0x3040000000000000uLL, &my_fpsf))
  {
    *(void *)(a2 + 56) = 0x3040000000000000;
    goto LABEL_16;
  }
LABEL_17:
  if (!*(_DWORD *)(a2 + 204))
  {
    if ((~*(void *)(a2 + 56) & 0x7C00000000000000) != 0) {
      goto LABEL_21;
    }
    *(_DWORD *)(a2 + 204) = 4;
  }
  *(void *)(a2 + 32) = 0x7FF8000000000000;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = 0x7C00000000000000;
LABEL_21:
}

uint64_t evaluateTree(uint64_t result, uint64_t a2)
{
  *(_OWORD *)(a2 + 176) = 0u;
  *(_OWORD *)(a2 + 192) = 0u;
  *(_OWORD *)(a2 + 144) = 0u;
  *(_OWORD *)(a2 + 160) = 0u;
  *(_OWORD *)(a2 + 112) = 0u;
  *(_OWORD *)(a2 + 128) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  if (result)
  {
    *(_DWORD *)a2 = *(_DWORD *)result;
    uint64_t v2 = *(uint64_t (**)(void))(result + 8);
    if (v2)
    {
      return v2();
    }
    else
    {
      *(void *)(a2 + 8) = functionNoOp;
      *(_DWORD *)a2 = *(_DWORD *)result;
      *(void *)(a2 + 32) = 0x7FF8000000000000;
      *(void *)(a2 + 48) = 0;
      *(void *)(a2 + 56) = 0x7C00000000000000;
    }
  }
  return result;
}

uint64_t functionNoOp(uint64_t a1, uint64_t a2)
{
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 3221225472;
  void v3[2] = __functionNoOp_block_invoke;
  v3[3] = &__block_descriptor_48_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v3[4] = a2;
  void v3[5] = a1;
  return evaluateUnary(a1, a2, v3);
}

__n128 __functionNoOp_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v1 = *(void *)(a1 + 40);
  *(void *)(v2 + 32) = *(void *)(v1 + 32);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v1 + 48);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  *(void *)(v4 + 64) = *(void *)(v3 + 64);
  long long v5 = *(_OWORD *)(v3 + 120);
  long long v6 = *(_OWORD *)(v3 + 104);
  long long v7 = *(_OWORD *)(v3 + 88);
  *(_OWORD *)(v4 + 72) = *(_OWORD *)(v3 + 72);
  *(_OWORD *)(v4 + 88) = v7;
  *(_OWORD *)(v4 + 104) = v6;
  *(_OWORD *)(v4 + 120) = v5;
  __n128 result = *(__n128 *)(v3 + 136);
  long long v9 = *(_OWORD *)(v3 + 152);
  long long v10 = *(_OWORD *)(v3 + 168);
  *(_OWORD *)(v4 + 184) = *(_OWORD *)(v3 + 184);
  *(_OWORD *)(v4 + 168) = v10;
  *(_OWORD *)(v4 + 152) = v9;
  *(__n128 *)(v4 + 136) = result;
  return result;
}

void *newUnitNode(const char *a1)
{
  uint64_t v2 = malloc_type_calloc(1uLL, 0xD0uLL, 0x10A00405A5B035DuLL);
  v2[4] = 0x3FF0000000000000;
  void v2[6] = 1;
  v2[7] = 0x3040000000000000;
  v2[8] = 1;
  id v3 = (id)g_unitsInfo;
  uint64_t v4 = objc_msgSend(v3, "objectAtIndexedSubscript:", (int)strtoull(a1, 0, 10));

  LODWORD(v3) = [v4 unitID];
  LODWORD(v2[(int)[v4 unitType] + 9]) = v3;
  HIDWORD(v2[(int)[v4 unitType] + 9]) = 1;
  *((unsigned char *)v2 + 201) = 1;
  v2[1] = functionUnit;
  *(_DWORD *)uint64_t v2 = g_PreferredType;
  *((_DWORD *)v2 + 51) = 0;

  return v2;
}

void functionUnit(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionUnit_block_invoke;
  v2[3] = &__block_descriptor_48_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  v2[5] = a1;
  evaluateUnary(a1, a2, v2);
}

void __functionUnit_block_invoke(uint64_t a1)
{
  uint64_t v2 = 0;
  int v3 = 0;
  int v4 = 0;
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  *(void *)(v6 + 32) = *(void *)(v5 + 32);
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(v5 + 48);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  *(void *)(v7 + 64) = *(void *)(v8 + 64);
  long long v9 = (int *)(v8 + 76);
  do
  {
    int v10 = *v9;
    v9 += 2;
    if (v10)
    {
      if (v4 > 0) {
        goto LABEL_17;
      }
      int v4 = 1;
      int v3 = v2;
    }
    ++v2;
  }
  while (v2 != 16);
  if (!v3)
  {
LABEL_17:
    long long v32 = *(_OWORD *)(v8 + 72);
    long long v33 = *(_OWORD *)(v8 + 88);
    long long v34 = *(_OWORD *)(v8 + 104);
    *(_OWORD *)(v7 + 120) = *(_OWORD *)(v8 + 120);
    *(_OWORD *)(v7 + 104) = v34;
    *(_OWORD *)(v7 + 88) = v33;
    *(_OWORD *)(v7 + 72) = v32;
    long long v35 = *(_OWORD *)(v8 + 136);
    long long v36 = *(_OWORD *)(v8 + 152);
    long long v37 = *(_OWORD *)(v8 + 168);
    *(_OWORD *)(v7 + 184) = *(_OWORD *)(v8 + 184);
    *(_OWORD *)(v7 + 168) = v37;
    *(_OWORD *)(v7 + 152) = v36;
    *(_OWORD *)(v7 + 136) = v35;
    return;
  }
  uint64_t v11 = *(int *)(v8 + 8 * v3 + 72);
  id v12 = (id)g_unitsInfo;
  long long v13 = [v12 objectAtIndexedSubscript:v11];
  addUnitToSuggestions(v13);
  if ((g_GeneratingConvertTerm & 1) != 0
    || ([v13 typeInfo],
        long long v14 = objc_claimAutoreleasedReturnValue(),
        int v15 = [v14 isDecomposable],
        v14,
        !v15))
  {
    uint64_t v39 = *(void *)(a1 + 32);
    uint64_t v38 = *(void *)(a1 + 40);
    long long v40 = *(_OWORD *)(v38 + 152);
    long long v41 = *(_OWORD *)(v38 + 168);
    long long v42 = *(_OWORD *)(v38 + 184);
    *(_OWORD *)(v39 + 136) = *(_OWORD *)(v38 + 136);
    *(_OWORD *)(v39 + 184) = v42;
    *(_OWORD *)(v39 + 168) = v41;
    *(_OWORD *)(v39 + 152) = v40;
    long long v43 = *(_OWORD *)(v38 + 72);
    long long v44 = *(_OWORD *)(v38 + 88);
    long long v45 = *(_OWORD *)(v38 + 104);
    *(_OWORD *)(v39 + 120) = *(_OWORD *)(v38 + 120);
    *(_OWORD *)(v39 + 104) = v45;
    *(_OWORD *)(v39 + 88) = v44;
    *(_OWORD *)(v39 + 72) = v43;
  }
  else
  {
    long long v16 = [v13 typeInfo];
    unint64_t v17 = [v16 decompositionCoefficient];
    unint64_t v19 = v18;

    int v20 = [v13 isInverted];
    unint64_t v22 = [v13 baseNumerator];
    if (my_rnd_mode) {
      unsigned int v23 = 4;
    }
    else {
      unsigned int v23 = 0;
    }
    if (v20)
    {
      unint64_t v24 = __bid128_div(v17, v19, v22, v21, v23, &my_fpsf);
      uint64_t v26 = v25;
      unint64_t v28 = [v13 baseDenominator];
      if (my_rnd_mode) {
        unsigned int v29 = 4;
      }
      else {
        unsigned int v29 = 0;
      }
      unint64_t v30 = __bid128_mul(v24, v26, v28, v27, v29, &my_fpsf);
    }
    else
    {
      unint64_t v46 = __bid128_mul(v17, v19, v22, v21, v23, &my_fpsf);
      unint64_t v48 = v47;
      unint64_t v50 = [v13 baseDenominator];
      if (my_rnd_mode) {
        int v51 = 4;
      }
      else {
        int v51 = 0;
      }
      unint64_t v30 = __bid128_div(v46, v48, v50, v49, v51, &my_fpsf);
    }
    uint64_t v52 = *(int **)(a1 + 32);
    int v53 = *v52;
    if (*v52 == 1)
    {
      if (my_rnd_mode) {
        int v56 = 4;
      }
      else {
        int v56 = 0;
      }
      double v55 = *((double *)v52 + 4);
      *((double *)v52 + 4) = v55 * __bid128_to_binary64(v30, v31, v56, &my_fpsf);
    }
    else if (v53 == 2)
    {
      if (my_rnd_mode) {
        unsigned int v57 = 4;
      }
      else {
        unsigned int v57 = 0;
      }
      *((void *)v52 + 6) = __bid128_mul(*((void *)v52 + 6), *((void *)v52 + 7), v30, v31, v57, &my_fpsf);
      *((void *)v52 + 7) = v58;
    }
    else if (v53 == 4)
    {
      uint64_t v54 = *((void *)v52 + 8);
      int v72 = 0;
      *((void *)v52 + 8) = __bid128_to_uint64_int(v30, v31, &v72) * v54;
    }
    uint64_t v59 = [v13 typeInfo];
    uint64_t v60 = v59;
    if (v59)
    {
      [v59 decomposition];
    }
    else
    {
      long long v70 = 0u;
      long long v71 = 0u;
      long long v68 = 0u;
      long long v69 = 0u;
      long long v66 = 0u;
      long long v67 = 0u;
      long long v64 = 0u;
      long long v65 = 0u;
    }
    uint64_t v61 = *(void *)(a1 + 32);
    *(_OWORD *)(v61 + 136) = v68;
    *(_OWORD *)(v61 + 152) = v69;
    *(_OWORD *)(v61 + 168) = v70;
    *(_OWORD *)(v61 + 184) = v71;
    *(_OWORD *)(v61 + 72) = v64;
    *(_OWORD *)(v61 + 88) = v65;
    *(_OWORD *)(v61 + 104) = v66;
    *(_OWORD *)(v61 + 120) = v67;

    if ([v13 isInverted])
    {
      uint64_t v62 = 0;
      uint64_t v63 = *(void *)(a1 + 32) + 76;
      do
      {
        *(_DWORD *)(v63 + v62) = -*(_DWORD *)(v63 + v62);
        v62 += 8;
      }
      while (v62 != 128);
    }
  }
}

void addUnitToSuggestions(void *a1)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = (id)g_unitSuggestions;
  id v3 = (id)g_unitSuggestionsSet;
  int v4 = v3;
  if (v2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5)
  {
    uint64_t v6 = objc_msgSend(NSNumber, "numberWithInt:", objc_msgSend(v1, "unitID"));
    if (([v4 containsObject:v6] & 1) == 0)
    {
      [v4 addObject:v6];
      [v2 addObject:v6];
      id v7 = (id)g_unitsInfo;
      long long v14 = 0u;
      long long v15 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      uint64_t v8 = objc_msgSend(v1, "subunitIDs", 0);
      uint64_t v9 = [v8 countByEnumeratingWithState:&v14 objects:v18 count:16];
      if (v9)
      {
        uint64_t v10 = v9;
        uint64_t v11 = *(void *)v15;
        do
        {
          uint64_t v12 = 0;
          do
          {
            if (*(void *)v15 != v11) {
              objc_enumerationMutation(v8);
            }
            long long v13 = objc_msgSend(v7, "objectAtIndexedSubscript:", (int)objc_msgSend(*(id *)(*((void *)&v14 + 1) + 8 * v12), "intValue"));
            addUnitToSuggestions();

            ++v12;
          }
          while (v10 != v12);
          uint64_t v10 = [v8 countByEnumeratingWithState:&v14 objects:v18 count:16];
        }
        while (v10);
      }
    }
  }
}

void *newUnitIDNode(int a1)
{
  id v2 = malloc_type_calloc(1uLL, 0xD0uLL, 0x10A00405A5B035DuLL);
  v2[4] = 0x3FF0000000000000;
  void v2[6] = 1;
  v2[7] = 0x3040000000000000;
  v2[8] = 1;
  id v3 = [(id)g_unitsInfo objectAtIndexedSubscript:a1];
  int v4 = [v3 unitID];
  LODWORD(v2[(int)[v3 unitType] + 9]) = v4;
  HIDWORD(v2[(int)[v3 unitType] + 9]) = 1;
  *((unsigned char *)v2 + 201) = 1;
  v2[1] = functionUnit;
  *(_DWORD *)id v2 = g_PreferredType;
  *((_DWORD *)v2 + 51) = 0;

  return v2;
}

void *newVariableNode(const char *a1)
{
  id v2 = malloc_type_calloc(1uLL, 0xD0uLL, 0x10A00405A5B035DuLL);
  v2[1] = functionVariable;
  *(_DWORD *)id v2 = 4;
  *((_DWORD *)v2 + 51) = 0;
  v2[8] = (int)strtoull(a1, 0, 10);
  return v2;
}

uint64_t functionVariable(uint64_t result, uint64_t a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  if (g_variableResultTrees
    && (uint64_t v3 = *(void *)(result + 64), (v3 & 0x80000000) == 0)
    && g_variableResultTreesCount > (int)v3
    && (__n128 result = *(void *)(g_variableResultTrees + 8 * *(void *)(result + 64))) != 0)
  {
    evaluateTree(result, a2);
    for (uint64_t i = 0; i != 128; i += 8)
    {
      if (*(_DWORD *)(a2 + i + 76))
      {
        BOOL v5 = [(id)g_unitsInfo objectAtIndexedSubscript:*(int *)(a2 + i + 72)];
        addUnitToSuggestions(v5);
      }
    }
    __n128 result = UnitCountDecompose(*(void *)(a2 + 48), *(void *)(a2 + 56), a2 + 72, v11, (_DWORD *)(a2 + 204));
    long long v6 = v11[5];
    *(_OWORD *)(a2 + 136) = v11[4];
    *(_OWORD *)(a2 + 152) = v6;
    long long v7 = v11[7];
    *(_OWORD *)(a2 + 168) = v11[6];
    *(_OWORD *)(a2 + 184) = v7;
    long long v8 = v11[1];
    *(_OWORD *)(a2 + 72) = v11[0];
    *(_OWORD *)(a2 + 88) = v8;
    long long v9 = v11[3];
    *(_OWORD *)(a2 + 104) = v11[2];
    *(void *)(a2 + 48) = result;
    *(void *)(a2 + 56) = v10;
    *(_OWORD *)(a2 + 120) = v9;
    g_isTrivial = 0;
  }
  else
  {
    *(_DWORD *)a2 = 2;
    *(_DWORD *)(a2 + 204) = 12;
    *(void *)(a2 + 48) = 0;
    *(void *)(a2 + 56) = 0x7C00000000000000;
  }
  return result;
}

uint64_t UnitCountDecompose(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _DWORD *a5)
{
  uint64_t v74 = *MEMORY[0x1E4F143B8];
  id v54 = (id)g_unitsInfo;
  uint64_t v9 = 0;
  *a4 = 0u;
  a4[1] = 0u;
  a4[2] = 0u;
  a4[3] = 0u;
  a4[4] = 0u;
  a4[5] = 0u;
  a4[6] = 0u;
  a4[7] = 0u;
  uint64_t v52 = a5;
  do
  {
    uint64_t v10 = (int *)(a3 + 8 * v9);
    if (v10[1])
    {
      unint64_t v56 = a1;
      uint64_t v11 = [v54 objectAtIndexedSubscript:*v10];
      uint64_t v12 = [v11 typeInfo];
      char v13 = [v12 isDecomposable];

      if (v13)
      {
        int v14 = v10[1];
        if ([v11 isInverted]) {
          int v15 = -v14;
        }
        else {
          int v15 = v14;
        }
        long long v16 = objc_msgSend(v11, "typeInfo", v52);
        unint64_t v17 = [v16 decompositionCoefficient];
        uint64_t v53 = v18;

        unint64_t v19 = [v11 baseNumerator];
        if (v14 >= 0) {
          unint64_t v21 = v14;
        }
        else {
          unint64_t v21 = -v14;
        }
        if (v15 < 0) {
          unint64_t v22 = 0xB040000000000000;
        }
        else {
          unint64_t v22 = 0x3040000000000000;
        }
        if (my_rnd_mode) {
          unsigned int v23 = 4;
        }
        else {
          unsigned int v23 = 0;
        }
        unint64_t v25 = bid128_pow_fix(v19, v20, v21, v22, v23, &my_fpsf);
        if (my_rnd_mode) {
          unsigned int v26 = 4;
        }
        else {
          unsigned int v26 = 0;
        }
        unint64_t v27 = __bid128_mul(v17, v53, v25, v24, v26, &my_fpsf);
        unint64_t v29 = v28;
        unint64_t v30 = [v11 baseDenominator];
        if (my_rnd_mode) {
          unsigned int v32 = 4;
        }
        else {
          unsigned int v32 = 0;
        }
        unint64_t v34 = bid128_pow_fix(v30, v31, v21, v22, v32, &my_fpsf);
        if (my_rnd_mode) {
          unsigned int v35 = 4;
        }
        else {
          unsigned int v35 = 0;
        }
        unint64_t v36 = __bid128_div(v27, v29, v34, v33, v35, &my_fpsf);
        unint64_t v38 = __bid128_mul(v56, a2, v36, v37, v35, &my_fpsf);
        a2 = v39;
        long long v40 = [v11 typeInfo];
        long long v41 = v40;
        if (v40)
        {
          [v40 decomposition];
        }
        else
        {
          long long v63 = 0u;
          long long v64 = 0u;
          long long v61 = 0u;
          long long v62 = 0u;
          long long v59 = 0u;
          long long v60 = 0u;
          long long v57 = 0u;
          long long v58 = 0u;
        }
        long long v70 = v61;
        long long v71 = v62;
        long long v72 = v63;
        long long v73 = v64;
        long long v66 = v57;
        long long v67 = v58;
        long long v68 = v59;
        long long v69 = v60;

        uint64_t v42 = 0;
        a5 = v52;
        do
        {
          *(_DWORD *)((char *)&v66 + v42 + 4) *= v15;
          v42 += 8;
        }
        while (v42 != 128);
      }
      else
      {
        long long v72 = 0u;
        long long v73 = 0u;
        long long v70 = 0u;
        long long v71 = 0u;
        long long v68 = 0u;
        long long v69 = 0u;
        long long v66 = 0u;
        long long v67 = 0u;
        *((void *)&v66 + v9) = *(void *)v10;
        unint64_t v38 = v56;
      }
      long long v43 = a4[5];
      v65[4] = a4[4];
      v65[5] = v43;
      long long v44 = a4[7];
      v65[6] = a4[6];
      v65[7] = v44;
      long long v45 = a4[1];
      v65[0] = *a4;
      v65[1] = v45;
      long long v46 = a4[3];
      v65[2] = a4[2];
      v65[3] = v46;
      unint64_t v48 = UnitCountMultiply((uint64_t)v65, 1uLL, 0x3040000000000000uLL, (uint64_t)&v66, (uint64_t)a4, a5);
      if (my_rnd_mode) {
        unsigned int v49 = 4;
      }
      else {
        unsigned int v49 = 0;
      }
      a1 = __bid128_mul(v38, a2, v48, v47, v49, &my_fpsf);
      a2 = v50;
    }
    ++v9;
  }
  while (v9 != 16);

  return a1;
}

unint64_t bid128_pow_fix(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, unsigned int a5, int *a6)
{
  if (__bid128_isZero(a1, a2) && __bid128_isZero(a3, a4)) {
    return 0;
  }
  unint64_t v12 = __bid128_pow(a1, a2, a3, a4, a5, a6);
  uint64_t v14 = v13;
  int v20 = 0;
  unint64_t v15 = __bid128_round_integral_exact(a1, a2, 4, &v20);
  if (!__bid128_quiet_equal(a1, a2, v15, v16, &v20)) {
    return v12;
  }
  int v21 = 0;
  unint64_t v17 = __bid128_round_integral_exact(a3, a4, 4, &v21);
  if (!__bid128_quiet_equal(a3, a4, v17, v18, &v21)
    || !__bid128_quiet_greater_equal(a3, a4, 0, 0x3040000000000000uLL, a6))
  {
    return v12;
  }
  return __bid128_round_integral_exact(v12, v14, a5, a6);
}

unint64_t UnitCountMultiply(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, _DWORD *a6)
{
  if (g_GeneratingConvertTerm)
  {
    uint64_t v12 = 0;
    while (!*(_DWORD *)(a1 + v12 + 4) || !*(_DWORD *)(a4 + v12 + 4) || *(_DWORD *)(a1 + v12) == *(_DWORD *)(a4 + v12))
    {
      v12 += 8;
      if (v12 == 128)
      {
        for (uint64_t i = 0; i != 128; i += 8)
        {
          int v14 = *(_DWORD *)(a4 + i + 4);
          if (v14) {
            uint64_t v15 = a4;
          }
          else {
            uint64_t v15 = a1;
          }
          unint64_t v16 = (_DWORD *)(a5 + i);
          int v17 = *(_DWORD *)(a1 + i + 4) + v14;
          *unint64_t v16 = *(_DWORD *)(v15 + i);
          v16[1] = v17;
        }
        return a2;
      }
    }
    a2 = 0;
    if (a6) {
      *a6 = 8;
    }
  }
  else
  {
    for (uint64_t j = 0; j != 128; j += 8)
    {
      int v19 = *(_DWORD *)(a4 + j + 4);
      int v20 = (int *)(a1 + j);
      int v21 = *(_DWORD *)(a1 + j + 4);
      if (v21 | v19)
      {
        if (v21) {
          BOOL v22 = v19 == 0;
        }
        else {
          BOOL v22 = 1;
        }
        if (v22)
        {
          if (v19) {
            uint64_t v23 = a4;
          }
          else {
            uint64_t v23 = a1;
          }
          int v24 = *(_DWORD *)(v23 + j);
        }
        else
        {
          int v24 = *v20;
          int v25 = *(_DWORD *)(a4 + j);
          if (*v20 != v25)
          {
            a2 = UnitCountConvertID(a2, a3, v25, *(_DWORD *)(a4 + j + 4), v24, 0, a6);
            a3 = v26;
            int v24 = *v20;
            int v21 = v20[1];
          }
        }
        unint64_t v27 = (int *)(a5 + j);
        *unint64_t v27 = v24;
        v27[1] = v21 + v19;
      }
    }
  }
  return a2;
}

unint64_t UnitCountConvertID(unint64_t a1, unint64_t a2, int a3, int a4, int a5, int a6, _DWORD *a7)
{
  LODWORD(v10) = a4;
  id v14 = (id)g_unitsInfo;
  uint64_t v15 = v14;
  if (a3 == a5) {
    goto LABEL_103;
  }
  unint64_t v129 = a2;
  if (!a6
    || ([v14 objectAtIndexedSubscript:a5],
        unint64_t v16 = objc_claimAutoreleasedReturnValue(),
        [v16 typeInfo],
        int v17 = objc_claimAutoreleasedReturnValue(),
        int v18 = [v17 isTemperature],
        v17,
        v16,
        !v18))
  {
    unint64_t v34 = [v15 objectAtIndexedSubscript:a5];
    unsigned int v35 = [v34 typeInfo];
    int v36 = [v35 isCurrency];

    if (!v36)
    {
      uint64_t v42 = [v15 objectAtIndexedSubscript:a3];
      unint64_t v43 = [v42 baseNumerator];
      if ((v10 & 0x80000000) == 0) {
        unint64_t v45 = v10;
      }
      else {
        unint64_t v45 = -(int)v10;
      }
      if ((v10 & 0x80000000) != 0) {
        unint64_t v46 = 0xB040000000000000;
      }
      else {
        unint64_t v46 = 0x3040000000000000;
      }
      if (my_rnd_mode) {
        unsigned int v47 = 4;
      }
      else {
        unsigned int v47 = 0;
      }
      unint64_t v49 = bid128_pow_fix(v43, v44, v45, v46, v47, &my_fpsf);
      if (my_rnd_mode) {
        unsigned int v50 = 4;
      }
      else {
        unsigned int v50 = 0;
      }
      unint64_t v51 = __bid128_mul(1uLL, 0x3040000000000000, v49, v48, v50, &my_fpsf);
      unint64_t v53 = v52;

      id v54 = [v15 objectAtIndexedSubscript:a3];
      unint64_t v55 = [v54 baseDenominator];
      if (my_rnd_mode) {
        unsigned int v57 = 4;
      }
      else {
        unsigned int v57 = 0;
      }
      unint64_t v59 = bid128_pow_fix(v55, v56, v45, v46, v57, &my_fpsf);
      if (my_rnd_mode) {
        int v60 = 4;
      }
      else {
        int v60 = 0;
      }
      unint64_t v61 = __bid128_div(v51, v53, v59, v58, v60, &my_fpsf);
      unint64_t v63 = v62;

      uint64_t v64 = a5;
      long long v65 = [v15 objectAtIndexedSubscript:a5];
      unint64_t v66 = [v65 baseNumerator];
      if (my_rnd_mode) {
        unsigned int v68 = 4;
      }
      else {
        unsigned int v68 = 0;
      }
      unint64_t v70 = bid128_pow_fix(v66, v67, v45, v46, v68, &my_fpsf);
      if (my_rnd_mode) {
        int v71 = 4;
      }
      else {
        int v71 = 0;
      }
      unint64_t v72 = __bid128_div(v61, v63, v70, v69, v71, &my_fpsf);
      uint64_t v74 = v73;

      uint64_t v75 = [v15 objectAtIndexedSubscript:v64];
      unint64_t v76 = [v75 baseDenominator];
      if (my_rnd_mode) {
        unsigned int v78 = 4;
      }
      else {
        unsigned int v78 = 0;
      }
      unint64_t v80 = bid128_pow_fix(v76, v77, v45, v46, v78, &my_fpsf);
      if (my_rnd_mode) {
        unsigned int v81 = 4;
      }
      else {
        unsigned int v81 = 0;
      }
      unint64_t v82 = __bid128_mul(v72, v74, v80, v79, v81, &my_fpsf);
      uint64_t v84 = v83;

      if (my_rnd_mode) {
        unsigned int v85 = 4;
      }
      else {
        unsigned int v85 = 0;
      }
      unint64_t v86 = __bid128_mul(a1, v129, v82, v84, v85, &my_fpsf);
      goto LABEL_98;
    }
    g_containsCurrencyConversion = 1;
    uint64_t v37 = &off_1E63650E8;
    if (!+[StocksKitCurrencyCache isEnabled]) {
      uint64_t v37 = off_1E6364F60;
    }
    unint64_t v38 = [(__objc2_class *)*v37 shared];
    g_currencyNeedsRefresh = [v38 needsRefresh];

    uint64_t v39 = [(__objc2_class *)*v37 shared];
    long long v40 = [v39 currencyData];

    if (v40) {
      BOOL v41 = g_allowCurrencyConversions == 0;
    }
    else {
      BOOL v41 = 1;
    }
    if (v41)
    {
      a1 = 0;
      if (a7) {
        *a7 = 13;
      }
    }
    else
    {
      uint64_t v87 = [v15 objectAtIndexedSubscript:a3];
      uint64_t v88 = [v87 name];
      uint64_t v89 = [v40 objectForKey:v88];

      unint64_t v90 = [v15 objectAtIndexedSubscript:a5];
      uint64_t v91 = [v90 name];
      unint64_t v92 = [v40 objectForKey:v91];

      if (v89 && v92)
      {
        [v89 doubleValue];
        if (my_rnd_mode) {
          unsigned int v94 = 4;
        }
        else {
          unsigned int v94 = 0;
        }
        unint64_t v95 = __binary64_to_bid128(v94, &my_fpsf, v93);
        BOOL v97 = (v10 & 0x80000000) != 0;
        if ((v10 & 0x80000000) == 0) {
          unint64_t v10 = v10;
        }
        else {
          unint64_t v10 = -(int)v10;
        }
        if (v97) {
          unint64_t v98 = 0xB040000000000000;
        }
        else {
          unint64_t v98 = 0x3040000000000000;
        }
        unint64_t v100 = bid128_pow_fix(v95, v96, v10, v98, v94, &my_fpsf);
        if (my_rnd_mode) {
          int v101 = 4;
        }
        else {
          int v101 = 0;
        }
        unint64_t v102 = __bid128_div(a1, v129, v100, v99, v101, &my_fpsf);
        uint64_t v104 = v103;
        [v92 doubleValue];
        if (my_rnd_mode) {
          unsigned int v106 = 4;
        }
        else {
          unsigned int v106 = 0;
        }
        unint64_t v107 = __binary64_to_bid128(v106, &my_fpsf, v105);
        unint64_t v110 = bid128_pow_fix(v107, v108, v10, v98, v106, &my_fpsf);
        if (my_rnd_mode) {
          unsigned int v111 = 4;
        }
        else {
          unsigned int v111 = 0;
        }
        a1 = __bid128_mul(v102, v104, v110, v109, v111, &my_fpsf);
      }
      else
      {
        a1 = 0;
        if (a7) {
          *a7 = 13;
        }
      }
    }
    goto LABEL_103;
  }
  if (my_rnd_mode) {
    int v19 = 4;
  }
  else {
    int v19 = 0;
  }
  unint64_t v20 = __bid128_div(0x12uLL, 0x3040000000000000uLL, 0xAuLL, 0x3040000000000000uLL, v19, &my_fpsf);
  unint64_t v22 = v21;
  unint64_t v23 = __bid128_div(0xFuLL, 0x3040000000000000uLL, 0x64uLL, 0x3040000000000000uLL, v19, &my_fpsf);
  unint64_t v25 = __bid128_add(0x111uLL, 0x3040000000000000, v23, v24, v19, &my_fpsf);
  uint64_t v127 = v26;
  unint64_t v128 = v25;
  unint64_t v27 = [v15 objectAtIndexedSubscript:a3];
  int v28 = [v27 isFahrenheit];

  if (v28)
  {
    if (my_rnd_mode) {
      int v29 = 4;
    }
    else {
      int v29 = 0;
    }
    unint64_t v30 = __bid128_add(a1, v129, 0x20uLL, 0xB040000000000000, v29, &my_fpsf);
    unint64_t v32 = __bid128_div(v30, v31, v20, v22, v29, &my_fpsf);
LABEL_83:
    a1 = v32;
    uint64_t v114 = v33;
    goto LABEL_84;
  }
  uint64_t v112 = [v15 objectAtIndexedSubscript:a3];
  int v113 = [v112 isKelvin];

  uint64_t v114 = v129;
  if (v113)
  {
    if (my_rnd_mode) {
      int v115 = 4;
    }
    else {
      int v115 = 0;
    }
    unint64_t v32 = __bid128_sub(a1, v129, v128, v127, v115, &my_fpsf);
    goto LABEL_83;
  }
LABEL_84:
  uint64_t v116 = [v15 objectAtIndexedSubscript:a5];
  int v117 = [v116 isFahrenheit];

  if (v117)
  {
    if (my_rnd_mode) {
      unsigned int v118 = 4;
    }
    else {
      unsigned int v118 = 0;
    }
    unint64_t v119 = __bid128_mul(a1, v114, v20, v22, v118, &my_fpsf);
    if (my_rnd_mode) {
      int v121 = 4;
    }
    else {
      int v121 = 0;
    }
    unint64_t v122 = 32;
    uint64_t v123 = 0x3040000000000000;
LABEL_97:
    unint64_t v86 = __bid128_add(v119, v120, v122, v123, v121, &my_fpsf);
LABEL_98:
    a1 = v86;
    goto LABEL_103;
  }
  unint64_t v124 = [v15 objectAtIndexedSubscript:a5];
  int v125 = [v124 isKelvin];

  if (v125)
  {
    if (my_rnd_mode) {
      int v121 = 4;
    }
    else {
      int v121 = 0;
    }
    unint64_t v119 = a1;
    uint64_t v120 = v114;
    uint64_t v123 = v127;
    unint64_t v122 = v128;
    goto LABEL_97;
  }
LABEL_103:

  return a1;
}

void *newTreeObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result = malloc_type_calloc(1uLL, 0xD0uLL, 0x10A00405A5B035DuLL);
  result[2] = a2;
  result[3] = a3;
  result[1] = a1;
  *(_DWORD *)__n128 result = g_PreferredType;
  *((_DWORD *)result + 51) = 0;
  if (a2 && *(unsigned char *)(a2 + 201))
  {
    BOOL v7 = 1;
  }
  else if (a3)
  {
    BOOL v7 = *(unsigned char *)(a3 + 201) != 0;
  }
  else
  {
    BOOL v7 = 0;
  }
  *((unsigned char *)result + 201) = v7;
  return result;
}

void displayNode(int *a1)
{
  v54[6] = *(long double *)MEMORY[0x1E4F143B8];
  if (a1[51])
  {
    g_ErrorCode = a1[51];
    id v1 = (char *)g_ResultBuffer;
    if (g_ResultBuffer)
    {
      size_t v2 = g_BufferLen;
      snprintf(v1, v2, "");
    }
    return;
  }
  if (!g_ResultBuffer) {
    return;
  }
  int v4 = *a1;
  if (*a1 == 1)
  {
    uint64_t v11 = [MEMORY[0x1E4F28C28] maximumDecimalNumber];
    [v11 doubleValue];
    if (v12 < *((double *)a1 + 4))
    {
LABEL_14:

LABEL_15:
      snprintf((char *)g_ResultBuffer, g_BufferLen, "%16.*lg");
      return;
    }
    uint64_t v13 = [MEMORY[0x1E4F28C28] minimumDecimalNumber];
    [v13 doubleValue];
    double v14 = *((double *)a1 + 4);
    if (v15 > v14)
    {

      goto LABEL_14;
    }

    if (v14 != 0.0 && v14 < 1.0e-13 && v14 > -1.0e-13) {
      goto LABEL_15;
    }
    double v17 = *((double *)a1 + 4);
    if (v17 >= 4294967300.0)
    {
      snprintf((char *)g_ResultBuffer, g_BufferLen, "%.*lg");
      return;
    }
    if (modf(*((long double *)a1 + 4), v54) == 0.0)
    {
      snprintf((char *)g_ResultBuffer, g_BufferLen, "%ld");
      return;
    }
    int v27 = CountLeadingZeros(v18, v19, v17);
    int v28 = v27;
    if (v27 >= 100) {
      int v29 = 100;
    }
    else {
      int v29 = v27;
    }
    unint64_t v30 = objc_msgSend(@"%.", "stringByAppendingFormat:", @"%d", (g_Precision + v29));
    unint64_t v31 = [v30 stringByAppendingString:@"lf"];

    unint64_t v32 = objc_msgSend(NSString, "stringWithFormat:", v31, *((void *)a1 + 4));
    uint64_t v33 = [MEMORY[0x1E4F28C28] decimalNumberWithString:v32];
    unint64_t v34 = [v33 stringValue];

    if (!v34 || ![v34 length])
    {
      snprintf((char *)g_ResultBuffer, g_BufferLen, "%16.*lg", g_Precision, *((double *)a1 + 4));
LABEL_69:

      return;
    }
    unsigned int v35 = [MEMORY[0x1E4F28FE8] scannerWithString:v34];
    [v35 scanUpToString:@"." intoString:0];
    [v35 scanLocation];
    int v36 = [v34 length];
    int v37 = v36 + ~[v35 scanLocation];
    if ([v34 length] && objc_msgSend(v34, "characterAtIndex:", 0) == 45)
    {
      if ((unint64_t)[v34 length] < 3
        || [v34 characterAtIndex:1] != 48)
      {
        goto LABEL_62;
      }
      uint64_t v38 = 2;
    }
    else
    {
      if ((unint64_t)[v34 length] < 2
        || [v34 characterAtIndex:0] != 48)
      {
        goto LABEL_62;
      }
      uint64_t v38 = 1;
    }
    [v34 characterAtIndex:v38];
LABEL_62:
    int v44 = g_Precision;
    if (g_Precision >= v37) {
      int v44 = v37;
    }
    uint64_t v45 = v44 & ~(v44 >> 31);
    if (g_Precision > v37 || v28 < 1)
    {
      unint64_t v46 = objc_msgSend(@"%.", "stringByAppendingFormat:", @"%u", v45);
      unsigned int v47 = v46;
      uint64_t v48 = @"lf";
    }
    else
    {
      unint64_t v46 = objc_msgSend(@"%.", "stringByAppendingFormat:", @"%u", (v45 - 1));
      unsigned int v47 = v46;
      uint64_t v48 = @"le";
    }
    unint64_t v49 = [v46 stringByAppendingString:v48];

    unsigned int v50 = (char *)g_ResultBuffer;
    size_t v51 = g_BufferLen;
    id v52 = v49;
    snprintf(v50, v51, (const char *)[v52 UTF8String], *((void *)a1 + 4));

    goto LABEL_69;
  }
  if (v4 == 4)
  {
    snprintf((char *)g_ResultBuffer, g_BufferLen, "%llu");
    return;
  }
  if (v4 == 2)
  {
    __bid128_to_string((uint64_t)v54, *((void *)a1 + 6), *((void *)a1 + 7));
    BOOL v5 = (void *)MEMORY[0x1E4F28C28];
    long long v6 = [NSString stringWithUTF8String:v54];
    BOOL v7 = [v5 decimalNumberWithString:v6];

    id v8 = [v7 stringValue];
    long double v9 = strtold((const char *)[v8 UTF8String], 0);
    [v7 doubleValue];
    if (!v8 || (long double v16 = v10, ![v8 length]))
    {
      snprintf((char *)g_ResultBuffer, g_BufferLen, "Error!");
      goto LABEL_30;
    }
    if (fabs(v16) >= 1.0e16)
    {
      snprintf((char *)g_ResultBuffer, g_BufferLen, "%.*lg");
      goto LABEL_30;
    }
    if (modf(v16, &__y) == 0.0)
    {
      snprintf((char *)g_ResultBuffer, g_BufferLen, "%lld");
LABEL_30:

      return;
    }
    unint64_t v20 = [MEMORY[0x1E4F28FE8] scannerWithString:v8];
    [v20 scanUpToString:@"." intoString:0];
    [v20 scanLocation];
    int v21 = [v8 length];
    int v22 = [v20 scanLocation];
    if ([v8 length] && objc_msgSend(v8, "characterAtIndex:", 0) == 45)
    {
      unint64_t v23 = [v8 length];
      if (v23 < 3) {
        goto LABEL_42;
      }
      unint64_t v23 = [v8 characterAtIndex:1];
      if (v23 != 48) {
        goto LABEL_42;
      }
      uint64_t v25 = 2;
    }
    else
    {
      unint64_t v23 = [v8 length];
      if (v23 < 2) {
        goto LABEL_42;
      }
      unint64_t v23 = [v8 characterAtIndex:0];
      if (v23 != 48) {
        goto LABEL_42;
      }
      uint64_t v25 = 1;
    }
    unint64_t v23 = [v8 characterAtIndex:v25];
LABEL_42:
    int v26 = g_Precision & ~(g_Precision >> 31);
    if ((int)CountLeadingZeros(v23, v24, v9) < 1 || ((v21 + ~v22) & ~((v21 + ~v22) >> 31)) <= g_Precision)
    {
      uint64_t v39 = [MEMORY[0x1E4F28C30] decimalNumberHandlerWithRoundingMode:0 scale:(__int16)v26 raiseOnExactness:0 raiseOnOverflow:0 raiseOnUnderflow:1 raiseOnDivideByZero:0];
      long long v40 = [v7 decimalNumberByRoundingAccordingToBehavior:v39];
      BOOL v41 = (char *)g_ResultBuffer;
      size_t v42 = g_BufferLen;
      id v43 = [v40 stringValue];
      snprintf(v41, v42, "%s", (const char *)[v43 UTF8String]);
    }
    else
    {
      snprintf((char *)g_ResultBuffer, g_BufferLen, "%.*Lg", v26, v9);
    }

    goto LABEL_30;
  }
}

uint64_t CountLeadingZeros(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3 = 0;
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  if (a3 > -1.0 && a3 != 0.0 && a3 < 1.0)
  {
    double v5 = MEMORY[0x1F4188790](a1, a2);
    snprintf(v13, 0x80uLL, "%.100Lf", v5);
    long long v6 = [NSString stringWithUTF8String:v13];
    BOOL v7 = [MEMORY[0x1E4F28FE8] scannerWithString:v6];
    [v7 scanUpToString:@"." intoString:0];
    uint64_t v3 = 0;
    int v8 = [v7 scanLocation];
LABEL_8:
    ++v8;
    do
    {
      unint64_t v9 = [v6 length];
      unint64_t v10 = v9 >= 0x200 ? 512 : v9;
      if (v10 <= v8) {
        break;
      }
      int v11 = [v6 characterAtIndex:v8];
      if (v11 == 48)
      {
        uint64_t v3 = (v3 + 1);
        goto LABEL_8;
      }
      ++v8;
    }
    while ((v11 - 47) > 0xFFFFFFFD || (v11 - 48) > 9);
  }
  return v3;
}

void evaluateBinary(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v19 = 0u;
  memset(v20, 0, sizeof(v20));
  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  memset(v8, 0, sizeof(v8));
  evaluateTree(*(void *)(a1 + 16), (uint64_t)v20);
  evaluateTree(*(void *)(a1 + 24), (uint64_t)v8);
  *(void *)(a2 + 8) = functionNoOp;
  *(_DWORD *)a2 = *(_DWORD *)a1;
  my_rnd_mode = 1;
  my_fpsf = 0;
  int v6 = HIDWORD(v30);
  if (!HIDWORD(v30))
  {
    int v6 = HIDWORD(v19);
    if (!HIDWORD(v19))
    {
      if ((~*((void *)&v21 + 1) & 0x7C00000000000000) != 0 && (~*((void *)&v10 + 1) & 0x7C00000000000000) != 0)
      {
        (*((void (**)(id, _OWORD *, _OWORD *, double))v5 + 2))(v5, v20, v8, *(double *)&v9);
        if (*(_DWORD *)(a2 + 204)) {
          goto LABEL_4;
        }
        if ((my_fpsf & 4) != 0)
        {
          int v7 = 1;
        }
        else if ((my_fpsf & 8) != 0)
        {
          int v7 = 3;
        }
        else
        {
          int v7 = (my_fpsf & 0x10) != 0 ? 2 : 4 * (my_fpsf & 1);
        }
        *(_DWORD *)(a2 + 204) = v7;
        if (v7) {
          goto LABEL_4;
        }
      }
      else
      {
        *(void *)(a2 + 32) = 0x7FF8000000000000;
        *(void *)(a2 + 48) = 0;
        *(void *)(a2 + 56) = 0x7C00000000000000;
        if (*(_DWORD *)(a2 + 204)) {
          goto LABEL_4;
        }
      }
      if ((~*(void *)(a2 + 56) & 0x7C00000000000000) != 0) {
        goto LABEL_5;
      }
      int v6 = 4;
    }
  }
  *(_DWORD *)(a2 + 204) = v6;
LABEL_4:
  *(void *)(a2 + 32) = 0x7FF8000000000000;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = 0x7C00000000000000;
LABEL_5:
}

void freeTree(void *a1)
{
  if (a1)
  {
    freeTree(a1[2]);
    freeTree(a1[3]);
    free(a1);
  }
}

_OWORD *copyTree(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  size_t v2 = malloc_type_malloc(0xD0uLL, 0x10A00405A5B035DuLL);
  _OWORD *v2 = *(_OWORD *)a1;
  long long v3 = *(_OWORD *)(a1 + 64);
  long long v5 = *(_OWORD *)(a1 + 16);
  long long v4 = *(_OWORD *)(a1 + 32);
  v2[3] = *(_OWORD *)(a1 + 48);
  v2[4] = v3;
  v2[1] = v5;
  v2[2] = v4;
  long long v6 = *(_OWORD *)(a1 + 128);
  long long v8 = *(_OWORD *)(a1 + 80);
  long long v7 = *(_OWORD *)(a1 + 96);
  v2[7] = *(_OWORD *)(a1 + 112);
  v2[8] = v6;
  v2[5] = v8;
  void v2[6] = v7;
  long long v9 = *(_OWORD *)(a1 + 192);
  long long v11 = *(_OWORD *)(a1 + 144);
  long long v10 = *(_OWORD *)(a1 + 160);
  v2[11] = *(_OWORD *)(a1 + 176);
  v2[12] = v9;
  v2[9] = v11;
  v2[10] = v10;
  *((void *)v2 + 2) = copyTree(*(void *)(a1 + 16));
  *((void *)v2 + 3) = copyTree(*(void *)(a1 + 24));
  return v2;
}

uint64_t UnitCountHasNonAngleUnits(uint64_t a1)
{
  size_t v2 = [(id)g_unitsInfo infoForAngle];
  int v3 = [v2 unitType];

  if (*(_DWORD *)(a1 + 4)) {
    BOOL v4 = v3 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4) {
    return 1;
  }
  long long v5 = (int *)(a1 + 12);
  uint64_t v6 = 1;
  unint64_t v7 = 15;
  while (v6 != 16)
  {
    int v8 = *v5;
    v5 += 2;
    uint64_t v9 = v6 + 1;
    if (v8) {
      BOOL v10 = v3 == v6;
    }
    else {
      BOOL v10 = 1;
    }
    ++v6;
    if (!v10)
    {
      unint64_t v7 = v9 - 2;
      return v7 < 0xF;
    }
  }
  return v7 < 0xF;
}

unint64_t UnitCountConvert(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5, _DWORD *a6)
{
  uint64_t v9 = (long long *)a3;
  unint64_t v10 = a2;
  unint64_t v11 = a1;
  unsigned int v12 = *(_DWORD *)(a4 + 4);
  if (!v12)
  {
    long long v15 = (int *)(a4 + 12);
    unint64_t v16 = -1;
    while (v16 != 14)
    {
      int v17 = *v15;
      v15 += 2;
      ++v16;
      if (v17) {
        goto LABEL_9;
      }
    }
    unint64_t v16 = 15;
LABEL_9:
    int v14 = v16 < 0xF;
    int v13 = *(_DWORD *)(a3 + 4);
    if (v13)
    {
      if (v16 >= 0xF)
      {
LABEL_21:
        long long v21 = *v9;
        long long v22 = v9[1];
        long long v23 = v9[3];
        a5[2] = v9[2];
        a5[3] = v23;
        *a5 = v21;
        a5[1] = v22;
        long long v24 = v9[4];
        long long v25 = v9[5];
        long long v26 = v9[7];
        a5[6] = v9[6];
        a5[7] = v26;
        a5[4] = v24;
        a5[5] = v25;
        return v11;
      }
      goto LABEL_23;
    }
    goto LABEL_12;
  }
  int v13 = *(_DWORD *)(a3 + 4);
  if (!v13)
  {
    int v14 = 1;
LABEL_12:
    unint64_t v18 = -1;
    uint64_t v19 = 12;
    while (v18 != 14)
    {
      int v20 = *(_DWORD *)(a3 + v19);
      ++v18;
      v19 += 8;
      if (v20) {
        goto LABEL_17;
      }
    }
    unint64_t v18 = 15;
LABEL_17:
    if (((v18 > 0xE) & ~v14) != 0) {
      return v11;
    }
    if ((v14 ^ (v18 < 0xF)))
    {
      if (v14) {
        uint64_t v9 = (long long *)a4;
      }
      goto LABEL_21;
    }
    int v13 = 0;
  }
LABEL_23:
  if (v13 + v12)
  {
LABEL_32:
    int v34 = 0;
  }
  else
  {
    long long v27 = (int *)(a3 + 12);
    long long v28 = (int *)(a4 + 12);
    unint64_t v29 = -1;
    while (v29 != 14)
    {
      int v31 = *v27;
      v27 += 2;
      int v30 = v31;
      int v32 = *v28;
      v28 += 2;
      ++v29;
      if (v30 + v32)
      {
        if (v29 < 0xF) {
          goto LABEL_32;
        }
        break;
      }
    }
    if (my_rnd_mode) {
      int v33 = 4;
    }
    else {
      int v33 = 0;
    }
    int v34 = 1;
    unint64_t v11 = __bid128_div(1uLL, 0x3040000000000000uLL, a1, a2, v33, &my_fpsf);
    unint64_t v10 = v35;
    unsigned int v12 = *(_DWORD *)(a4 + 4);
  }
  if (v12 > 1)
  {
    BOOL v37 = 0;
  }
  else
  {
    int v36 = 0;
    BOOL v37 = 0;
    unint64_t v38 = 0;
    uint64_t v39 = (unsigned int *)(a4 + 12);
    do
    {
      if (v12)
      {
        if (v36 > 0) {
          break;
        }
        int v36 = 1;
      }
      BOOL v37 = v38 > 0xE;
      if (v38 == 15) {
        break;
      }
      unsigned int v40 = *v39;
      v39 += 2;
      unsigned int v12 = v40;
      ++v38;
    }
    while (v40 <= 1);
  }
  uint64_t v41 = 0;
  int v42 = v37;
  while (1)
  {
    if (v34) {
      int v43 = -*(_DWORD *)((char *)v9 + v41 + 4);
    }
    else {
      int v43 = *(_DWORD *)((char *)v9 + v41 + 4);
    }
    int v44 = *(_DWORD *)(a4 + v41 + 4);
    if (!(v44 | v43)) {
      goto LABEL_52;
    }
    if (v44 != v43) {
      break;
    }
    int v45 = *(_DWORD *)(a4 + v41);
    int v46 = *(_DWORD *)((char *)v9 + v41);
    if (v45 == v46)
    {
      LODWORD(v47) = *(_DWORD *)(a4 + v41);
      HIDWORD(v47) = v43;
    }
    else
    {
      unint64_t v11 = UnitCountConvertID(v11, v10, v46, v43, v45, v42, a6);
      unint64_t v10 = v48;
      uint64_t v47 = *(void *)(a4 + v41);
    }
    *(void *)((char *)a5 + v41) = v47;
LABEL_52:
    v41 += 8;
    if (v41 == 128) {
      return v11;
    }
  }
  unint64_t v11 = 0;
  if (a6) {
    *a6 = 8;
  }
  return v11;
}

void *UnitCountNextSmallestID(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(a1 + 4);
  if (v1 > 1) {
    return 0;
  }
  int v2 = 0;
  BOOL v3 = 0;
  unint64_t v4 = 0;
  long long v5 = (unsigned int *)(a1 + 12);
  do
  {
    if (v1)
    {
      if (v2 > 0) {
        break;
      }
      int v2 = 1;
    }
    BOOL v3 = v4 > 0xE;
    if (v4 == 15) {
      break;
    }
    unsigned int v6 = *v5;
    v5 += 2;
    unsigned int v1 = v6;
    ++v4;
  }
  while (v6 <= 1);
  if (!v3) {
    return 0;
  }
  uint64_t v7 = 0;
  int v8 = 0;
  uint64_t v9 = (int *)(a1 + 4);
  do
  {
    int v10 = *v9;
    v9 += 2;
    if (v10) {
      int v8 = v7;
    }
    ++v7;
  }
  while (v7 != 16);
  unint64_t v11 = [(id)g_unitsInfo objectAtIndexedSubscript:*(int *)(a1 + 8 * v8)];
  unsigned int v12 = [v11 nextSmallest];

  if (v12)
  {
    int v13 = [v11 nextSmallest];
    unsigned int v12 = (void *)[v13 unitID];
  }
  return v12;
}

BOOL UnitCountShouldImplicitlyAdd(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = *(_DWORD *)(a1 + 4);
  if (v2 <= 1)
  {
    int v4 = 0;
    BOOL v5 = 0;
    unint64_t v6 = 0;
    uint64_t v7 = (unsigned int *)(a1 + 12);
    do
    {
      if (v2)
      {
        if (v4 > 0) {
          break;
        }
        int v4 = 1;
      }
      BOOL v5 = v6 > 0xE;
      if (v6 == 15) {
        break;
      }
      unsigned int v8 = *v7;
      v7 += 2;
      unsigned int v2 = v8;
      ++v6;
    }
    while (v8 <= 1);
    if (v5)
    {
      unsigned int v9 = *(_DWORD *)(a2 + 4);
      if (v9 <= 1)
      {
        int v10 = 0;
        BOOL v11 = 0;
        unint64_t v12 = 0;
        int v13 = (unsigned int *)(a2 + 12);
        do
        {
          if (v9)
          {
            if (v10 > 0) {
              break;
            }
            int v10 = 1;
          }
          BOOL v11 = v12 > 0xE;
          if (v12 == 15) {
            break;
          }
          unsigned int v14 = *v13;
          v13 += 2;
          unsigned int v9 = v14;
          ++v12;
        }
        while (v14 <= 1);
        if (v11)
        {
          uint64_t v15 = 0;
          int v16 = 0;
          int v17 = (int *)(a2 + 4);
          unint64_t v18 = (int *)(a1 + 4);
          while (1)
          {
            int v20 = *v18;
            v18 += 2;
            int v19 = v20;
            int v21 = *v17;
            v17 += 2;
            if (v19 != v21) {
              break;
            }
            if (v19) {
              int v16 = v15;
            }
            if (++v15 == 16)
            {
              long long v22 = [(id)g_unitsInfo objectAtIndexedSubscript:*(int *)(a1 + 8 * v16)];
              long long v23 = (_DWORD *)(a2 + 8 * v16);
              do
              {
                long long v24 = [v22 nextSmallest];

                BOOL v25 = v24 != 0;
                if (!v24) {
                  break;
                }
                long long v22 = v24;
              }
              while ([v24 unitID] != *v23);

              return v25;
            }
          }
        }
      }
    }
  }
  return 0;
}

uint64_t UnitCountAngleUnitID(uint64_t a1)
{
  unsigned int v2 = [(id)g_unitsInfo infoForAngle];
  unsigned int v3 = [v2 unitType];

  uint64_t v4 = 0;
  uint64_t result = 0;
  uint64_t v6 = 8 * v3;
  while (1)
  {
    unsigned int v7 = *(_DWORD *)(a1 + v4 + 4);
    if (v7 > 1) {
      break;
    }
    if (v7 && v6 != v4) {
      break;
    }
    if (v6 == v4) {
      uint64_t result = *(unsigned int *)(a1 + v4);
    }
    v4 += 8;
    if (v4 == 128) {
      return result;
    }
  }
  return 0;
}

unint64_t UnitCountRequireDegrees(unint64_t a1, unint64_t a2, uint64_t a3, _DWORD *a4)
{
  int v7 = UnitCountAngleUnitID(a3);
  if (!v7) {
    return a1;
  }
  int v8 = v7;
  unsigned int v9 = [(id)g_unitsInfo infoForDegrees];
  unint64_t v10 = UnitCountConvertID(a1, a2, v8, 1, [v9 unitID], 1, a4);

  return v10;
}

unint64_t UnitCountRequireRadians(unint64_t a1, unint64_t a2, uint64_t a3, _DWORD *a4)
{
  int v7 = UnitCountAngleUnitID(a3);
  if (!v7) {
    return a1;
  }
  int v8 = v7;
  unsigned int v9 = [(id)g_unitsInfo infoForRadians];
  unint64_t v10 = UnitCountConvertID(a1, a2, v8, 1, [v9 unitID], 1, a4);

  return v10;
}

uint64_t UnitCountCompose(uint64_t a1, unint64_t a2, uint64_t a3, _OWORD *a4, _DWORD *a5)
{
  uint64_t v6 = (_OWORD *)a3;
  uint64_t v187 = *MEMORY[0x1E4F143B8];
  if (*(_DWORD *)(a3 + 4)) {
    goto LABEL_8;
  }
  int v7 = (int *)(a3 + 12);
  unint64_t v8 = -1;
  while (v8 != 14)
  {
    int v9 = *v7;
    v7 += 2;
    ++v8;
    if (v9) {
      goto LABEL_7;
    }
  }
  unint64_t v8 = 15;
LABEL_7:
  if (v8 < 0xF)
  {
LABEL_8:
    if (g_unitSuggestions) {
      BOOL v10 = g_unitSuggestionsSet == 0;
    }
    else {
      BOOL v10 = 1;
    }
    if (!v10)
    {
      id v128 = (id)g_unitSuggestions;
      id v11 = (id)g_unitSuggestionsSet;
      id v154 = (id)g_unitsInfo;
      uint64_t v133 = a5;
      uint64_t v134 = objc_opt_new();
      uint64_t v12 = 0;
      char v130 = v6;
      do
      {
        int v13 = [v154 infoForUnitType:v12];
        if ([v13 isDecomposable])
        {
          uint64_t v14 = 0;
          uint64_t v15 = 0;
          char v16 = 0;
          int v141 = 0;
          v184[0] = 0uLL;
          LOBYTE(v17) = 1;
LABEL_15:
          uint64_t v18 = (8 * v14) | 4;
          do
          {
            if (v13) {
              [v13 decomposition];
            }
            else {
              memset(v172, 0, sizeof(v172));
            }
            int v19 = *(_DWORD *)((char *)v172 + v18);
            int v20 = *(_DWORD *)((char *)v6 + v18);
            if (v19)
            {
              *((unsigned char *)v184 + v14) = 1;
              uint64_t v21 = (v20 / v19);
              if (v20 >= 0) {
                unsigned int v22 = v20;
              }
              else {
                unsigned int v22 = -v20;
              }
              if (v19 >= 0) {
                unsigned int v23 = v19;
              }
              else {
                unsigned int v23 = -v19;
              }
              if (v22 < v23 || v21 * v19 != v20 || (v16 & (v21 != v15)) != 0) {
                goto LABEL_79;
              }
              ++v141;
              ++v14;
              char v16 = 1;
              uint64_t v15 = (v20 / v19);
              if (v14 != 16) {
                goto LABEL_15;
              }
              if (v17) {
                goto LABEL_36;
              }
              goto LABEL_37;
            }
            int v17 = (v20 == 0) & v17;
            ++v14;
            v18 += 8;
          }
          while (v14 != 16);
          if ((v16 & 1) == 0) {
            goto LABEL_79;
          }
          uint64_t v21 = v15;
          if (v17)
          {
LABEL_36:
            g_composedType = v12;
            g_composedExponent = v21;
          }
LABEL_37:
          int v132 = v12;
          long long v170 = 0u;
          long long v171 = 0u;
          long long v168 = 0u;
          long long v169 = 0u;
          uint64_t v131 = v13;
          long long v24 = [v13 units];
          uint64_t v150 = [v24 countByEnumeratingWithState:&v168 objects:v186 count:16];
          if (v150)
          {
            uint64_t v25 = *(void *)v169;
            if ((int)v21 >= 0) {
              int v26 = v21;
            }
            else {
              int v26 = -(int)v21;
            }
            unsigned int v139 = v21;
            uint64_t v136 = *(void *)v169;
            obuint64_t j = v24;
            int v135 = v26;
            do
            {
              for (uint64_t i = 0; i != v150; ++i)
              {
                if (*(void *)v169 != v25) {
                  objc_enumerationMutation(v24);
                }
                long long v28 = *(void **)(*((void *)&v168 + 1) + 8 * i);
                if ([v28 isDisplayName]) {
                  BOOL v29 = v26 == 1;
                }
                else {
                  BOOL v29 = 1;
                }
                if (v29)
                {
                  if (![v28 impliesDivision]
                    || ([v28 isInverted] ? (BOOL v30 = v21 == -1) : (BOOL v30 = 1),
                        v30 && (([v28 isInverted] & 1) != 0 || v21 == 1)))
                  {
                    uint64_t v149 = i;
                    int v31 = objc_msgSend(NSNumber, "numberWithInt:", objc_msgSend(v28, "unitID"));
                    char v32 = [v11 containsObject:v31];

                    uint64_t i = v149;
                    int v33 = 10000 * v141;
                    if (v32) {
                      goto LABEL_74;
                    }
                    long long v176 = 0uLL;
                    long long v164 = 0u;
                    long long v165 = 0u;
                    long long v166 = 0u;
                    long long v167 = 0u;
                    int v34 = [v28 allSubunitIDs];
                    uint64_t v35 = [v34 countByEnumeratingWithState:&v164 objects:v185 count:16];
                    if (v35)
                    {
                      uint64_t v36 = v35;
                      int v33 = 0;
                      int v152 = 0;
                      uint64_t v37 = *(void *)v165;
                      do
                      {
                        for (uint64_t j = 0; j != v36; ++j)
                        {
                          if (*(void *)v165 != v37) {
                            objc_enumerationMutation(v34);
                          }
                          uint64_t v39 = *(void **)(*((void *)&v164 + 1) + 8 * j);
                          if ([v11 containsObject:v39])
                          {
                            id v40 = v11;
                            uint64_t v41 = v28;
                            int v42 = objc_msgSend(v154, "objectAtIndexedSubscript:", (int)objc_msgSend(v39, "intValue"));
                            int v43 = [v42 typeInfo];
                            int v44 = [v43 unitType];

                            if (*((unsigned char *)v184 + v44) && !*((unsigned char *)&v176 + v44))
                            {
                              *((unsigned char *)&v176 + v44) = 1;
                              ++v152;
                            }
                            long long v28 = v41;
                            ++v33;
                            id v11 = v40;
                          }
                        }
                        uint64_t v36 = [v34 countByEnumeratingWithState:&v164 objects:v185 count:16];
                      }
                      while (v36);
                    }
                    else
                    {
                      int v33 = 0;
                      int v152 = 0;
                    }

                    uint64_t v21 = v139;
                    uint64_t v25 = v136;
                    long long v24 = obj;
                    int v26 = v135;
                    uint64_t i = v149;
                    if (v152 == v141)
                    {
LABEL_74:
                      if (v33 >= 1)
                      {
                        int v45 = [UnitRank alloc];
                        int v46 = v28;
                        uint64_t v47 = v45;
                        uint64_t v48 = [v46 unitID];
                        unint64_t v49 = [NSNumber numberWithInt:v21];
                        uint64_t v50 = v48;
                        uint64_t i = v149;
                        *(float *)&double v51 = (float)-v33;
                        id v52 = [(UnitRank *)v47 initWithUnitID:v50 rank:0 locale:v49 context:v51];
                        [v134 addUnitRank:v52];
                      }
                    }
                  }
                }
              }
              uint64_t v150 = [v24 countByEnumeratingWithState:&v168 objects:v186 count:16];
            }
            while (v150);
          }

          uint64_t v6 = v130;
          int v13 = v131;
          LODWORD(v12) = v132;
LABEL_79:
          a5 = v133;
        }

        uint64_t v12 = (v12 + 1);
      }
      while (v12 != 16);
      if (!g_composedType)
      {
        uint64_t v96 = 0;
        int v97 = 0;
        int v98 = 0;
        unint64_t v99 = (int *)v6 + 1;
        do
        {
          int v100 = *v99;
          v99 += 2;
          if (v100)
          {
            if (v98 > 0) {
              goto LABEL_82;
            }
            int v98 = 1;
            int v97 = v96;
          }
          ++v96;
        }
        while (v96 != 16);
        if (v97 >= 1)
        {
          g_composedType = v97;
          g_composedExponent = *((_DWORD *)v6 + 2 * v97 + 1);
        }
      }
LABEL_82:
      [v134 sort];
      long long v53 = v6[5];
      v184[4] = v6[4];
      v184[5] = v53;
      long long v54 = v6[7];
      v184[6] = v6[6];
      v184[7] = v54;
      long long v55 = v6[1];
      v184[0] = *v6;
      v184[1] = v55;
      long long v56 = v6[3];
      v184[2] = v6[2];
      v184[3] = v56;
      long long v183 = 0u;
      long long v182 = 0u;
      long long v181 = 0u;
      long long v180 = 0u;
      long long v179 = 0u;
      long long v177 = 0u;
      long long v178 = 0u;
      long long v176 = 0u;
      long long v162 = 0u;
      long long v163 = 0u;
      long long v160 = 0u;
      long long v161 = 0u;
      id obja = [v134 ranks];
      uint64_t v142 = [obja countByEnumeratingWithState:&v160 objects:v175 count:16];
      if (v142)
      {
        uint64_t v140 = *(void *)v161;
        char v147 = 1;
        char v151 = 1;
        do
        {
          for (uint64_t k = 0; k != v142; ++k)
          {
            if (*(void *)v161 != v140) {
              objc_enumerationMutation(obja);
            }
            unint64_t v58 = *(void **)(*((void *)&v160 + 1) + 8 * k);
            unint64_t v59 = objc_msgSend(v154, "objectAtIndexedSubscript:", (int)objc_msgSend(v58, "unitID"));
            int v60 = [v58 context];
            int v61 = [v60 intValue];

            uint64_t v153 = v59;
            unint64_t v62 = [v59 typeInfo];
            unint64_t v63 = v62;
            if (v62) {
              [v62 decomposition];
            }
            else {
              memset(v159, 0, sizeof(v159));
            }

            uint64_t v64 = 0;
            while (1)
            {
              int v65 = *(_DWORD *)((char *)v159 + v64 + 4);
              if (v65)
              {
                if (v65 * v61 != *(_DWORD *)((char *)v184 + v64 + 4)) {
                  break;
                }
              }
              v64 += 8;
              if (v64 == 128)
              {
                uint64_t v66 = 0;
                unint64_t v68 = a1;
                unint64_t v67 = a2;
                do
                {
                  int v69 = *(_DWORD *)((char *)v159 + v66 + 4) * v61;
                  if (v69)
                  {
                    int v70 = *(_DWORD *)((char *)v184 + v66);
                    int v71 = *(_DWORD *)((char *)v159 + v66);
                    if (v70 != v71) {
                      unint64_t v68 = UnitCountConvertID(v68, v67, v70, v69, v71, 0, a5);
                    }
                    *(_DWORD *)((char *)v184 + v66 + 4) = 0;
                  }
                  v66 += 8;
                }
                while (v66 != 128);
                unint64_t v144 = v68;
                unint64_t v146 = v67;
                unint64_t v72 = [v59 baseNumerator];
                if (v61 >= 0) {
                  unint64_t v74 = v61;
                }
                else {
                  unint64_t v74 = -v61;
                }
                if (v61 < 0) {
                  unint64_t v75 = 0xB040000000000000;
                }
                else {
                  unint64_t v75 = 0x3040000000000000;
                }
                if (my_rnd_mode) {
                  unsigned int v76 = 4;
                }
                else {
                  unsigned int v76 = 0;
                }
                unint64_t v78 = bid128_pow_fix(v72, v73, v74, v75, v76, &my_fpsf);
                if (my_rnd_mode) {
                  int v79 = 4;
                }
                else {
                  int v79 = 0;
                }
                unint64_t v148 = __bid128_div(v144, v146, v78, v77, v79, &my_fpsf);
                uint64_t v81 = v80;
                unint64_t v82 = [v153 baseDenominator];
                if (my_rnd_mode) {
                  unsigned int v84 = 4;
                }
                else {
                  unsigned int v84 = 0;
                }
                unint64_t v86 = bid128_pow_fix(v82, v83, v74, v75, v84, &my_fpsf);
                if (my_rnd_mode) {
                  unsigned int v87 = 4;
                }
                else {
                  unsigned int v87 = 0;
                }
                a1 = __bid128_mul(v148, v81, v86, v85, v87, &my_fpsf);
                a2 = v88;
                int v89 = [v153 unitID];
                unint64_t v90 = [v153 typeInfo];
                *((_DWORD *)&v176 + 2 * (int)[v90 unitType]) = v89;

                if ([v153 isInverted]) {
                  int v91 = -v61;
                }
                else {
                  int v91 = v61;
                }
                unint64_t v92 = [v153 typeInfo];
                *((_DWORD *)&v176 + 2 * (int)[v92 unitType] + 1) = v91;

                if (v151)
                {
                  for (uint64_t m = 0; m != 128; m += 8)
                  {
                    if (*(_DWORD *)((char *)v184 + m + 4))
                    {
                      char v147 = 0;
                      char v151 = 0;
                      goto LABEL_131;
                    }
                  }
                  unsigned int v94 = [v153 typeInfo];
                  g_composedType = [v94 unitType];

                  char v147 = 0;
                  char v151 = 0;
                  if ([v153 isInverted]) {
                    int v95 = -v61;
                  }
                  else {
                    int v95 = v61;
                  }
                  g_composedExponent = v95;
LABEL_131:
                  a5 = v133;
                }
                else
                {
                  char v147 = 0;
                  char v151 = 0;
                  a5 = v133;
                }
                break;
              }
            }
          }
          uint64_t v142 = [obja countByEnumeratingWithState:&v160 objects:v175 count:16];
        }
        while (v142);
      }
      else
      {
        char v147 = 1;
      }

      memset(v174, 0, sizeof(v174));
      long long v155 = 0u;
      long long v156 = 0u;
      long long v157 = 0u;
      long long v158 = 0u;
      id v101 = v128;
      uint64_t v102 = [v101 countByEnumeratingWithState:&v155 objects:v173 count:16];
      if (v102)
      {
        uint64_t v103 = v102;
        uint64_t v104 = *(void *)v156;
        do
        {
          for (uint64_t n = 0; n != v103; ++n)
          {
            if (*(void *)v156 != v104) {
              objc_enumerationMutation(v101);
            }
            unsigned int v106 = objc_msgSend(v154, "objectAtIndexedSubscript:", (int)objc_msgSend(*(id *)(*((void *)&v155 + 1) + 8 * n), "intValue"));
            unint64_t v107 = [v106 typeInfo];
            int v108 = [v107 unitType];

            if (!*((_DWORD *)v174 + v108)) {
              *((_DWORD *)v174 + v108) = [v106 unitID];
            }
          }
          uint64_t v103 = [v101 countByEnumeratingWithState:&v155 objects:v173 count:16];
        }
        while (v103);
      }

      unsigned int v109 = DWORD1(v184[0]);
      if ((v147 & (DWORD1(v184[0]) < 2)) == 1)
      {
        int v110 = 0;
        BOOL v111 = 0;
        unint64_t v112 = 0;
        int v113 = (unsigned int *)((unint64_t)v184 | 0xC);
        do
        {
          if (v109)
          {
            if (v110 > 0) {
              break;
            }
            int v110 = 1;
          }
          BOOL v111 = v112 > 0xE;
          if (v112 == 15) {
            break;
          }
          unsigned int v114 = *v113;
          v113 += 2;
          unsigned int v109 = v114;
          ++v112;
        }
        while (v114 <= 1);
      }
      else
      {
        BOOL v111 = 0;
      }
      uint64_t v115 = 0;
      uint64_t v116 = (int *)v174;
      int v117 = v111;
      unint64_t v118 = a1;
      unint64_t v119 = a2;
      do
      {
        int v120 = *(_DWORD *)((char *)v184 + v115 + 4);
        if (v120)
        {
          uint64_t v121 = *(void *)((char *)v184 + v115);
          *(void *)((char *)&v176 + v115) = v121;
          int v122 = *v116;
          if (*v116 >= 1)
          {
            unint64_t v118 = UnitCountConvertID(v118, v119, v121, v120, *v116, v117, v133);
            *(_DWORD *)((char *)&v176 + v115) = v122;
          }
        }
        v115 += 8;
        ++v116;
      }
      while (v115 != 128);
      a1 = v118;
      long long v123 = v181;
      a4[4] = v180;
      a4[5] = v123;
      long long v124 = v183;
      a4[6] = v182;
      a4[7] = v124;
      long long v125 = v177;
      *a4 = v176;
      a4[1] = v125;
      long long v126 = v179;
      a4[2] = v178;
      a4[3] = v126;
    }
  }
  return a1;
}

unint64_t treeIntegerValue(int *a1)
{
  int v1 = *a1;
  if (*a1 == 1) {
    return (uint64_t)rint(*((double *)a1 + 4));
  }
  if (v1 == 2)
  {
    BOOL v5 = a1 + 12;
    unint64_t v3 = *((void *)a1 + 6);
    unint64_t v4 = *((void *)v5 + 1);
    int v6 = 0;
    return __bid128_to_uint64_int(v3, v4, &v6);
  }
  else if (v1 == 4)
  {
    return *((void *)a1 + 8);
  }
  else
  {
    return 0;
  }
}

void ___functionAdd_block_invoke(uint64_t a1, int *a2, int *a3)
{
  int v39 = 0;
  int v6 = *a3;
  if (*a3 == 1)
  {
    if (my_rnd_mode) {
      int v8 = 4;
    }
    else {
      int v8 = 0;
    }
    unint64_t v7 = __binary64_to_bid128(v8, &my_fpsf, *((double *)a3 + 4));
  }
  else if (v6 == 2)
  {
    unint64_t v7 = *((void *)a3 + 6);
    unint64_t v9 = *((void *)a3 + 7);
  }
  else
  {
    if (v6 == 4) {
      unint64_t v7 = *((void *)a3 + 8);
    }
    else {
      unint64_t v7 = 0;
    }
    unint64_t v9 = 0x3040000000000000;
  }
  if (g_GeneratingConvertTerm)
  {
    unint64_t v10 = 0;
    int v11 = 11;
    unint64_t v12 = 0x7C00000000000000;
LABEL_16:
    uint64_t v14 = *(void *)(a1 + 32);
    *(_DWORD *)(v14 + 204) = v11;
    *(void *)(v14 + 48) = v10;
    *(void *)(v14 + 56) = v12;
    return;
  }
  unint64_t v10 = UnitCountConvert(v7, v9, (uint64_t)(a3 + 18), (uint64_t)(a2 + 18), (_OWORD *)(*(void *)(a1 + 32) + 72), &v39);
  unint64_t v12 = v13;
  if ((~v13 & 0x7C00000000000000) == 0)
  {
    int v11 = v39;
    goto LABEL_16;
  }
  if (!*(unsigned char *)(a1 + 40)) {
    g_isTrivial = 0;
  }
  uint64_t v15 = *(double **)(a1 + 32);
  int v16 = *(_DWORD *)v15;
  if (*(_DWORD *)v15 == 1)
  {
    int v19 = *a2;
    if (*a2 == 1)
    {
      double v20 = *((double *)a2 + 4);
    }
    else if (v19 == 2)
    {
      if (my_rnd_mode) {
        int v28 = 4;
      }
      else {
        int v28 = 0;
      }
      double v20 = __bid128_to_binary64(*((void *)a2 + 6), *((void *)a2 + 7), v28, &my_fpsf);
    }
    else
    {
      double v20 = 0.0;
      if (v19 == 4)
      {
        unint64_t v21 = *((void *)a2 + 8);
        unint64_t v22 = (uint64_t)rint(1.79769313e308);
        if ((uint64_t)rint(2.22507386e-308) < v21 && v22 > v21) {
          double v20 = (double)v21;
        }
        else {
          double v20 = NAN;
        }
      }
    }
    if (my_rnd_mode) {
      int v29 = 4;
    }
    else {
      int v29 = 0;
    }
    v15[4] = v20 + __bid128_to_binary64(v10, v12, v29, &my_fpsf);
  }
  else if (v16 == 2)
  {
    int v24 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode) {
        int v30 = 4;
      }
      else {
        int v30 = 0;
      }
      unint64_t v25 = __binary64_to_bid128(v30, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v24 == 2)
    {
      unint64_t v25 = *((void *)a2 + 6);
      uint64_t v31 = *((void *)a2 + 7);
    }
    else
    {
      if (v24 == 4) {
        unint64_t v25 = *((void *)a2 + 8);
      }
      else {
        unint64_t v25 = 0;
      }
      uint64_t v31 = 0x3040000000000000;
    }
    if (my_rnd_mode) {
      int v32 = 4;
    }
    else {
      int v32 = 0;
    }
    *((void *)v15 + 6) = __bid128_add(v25, v31, v10, v12, v32, &my_fpsf);
    *((void *)v15 + 7) = v33;
  }
  else if (v16 == 4)
  {
    int v17 = *a2;
    if (*a2 == 1)
    {
      unint64_t v18 = (uint64_t)rint(*((double *)a2 + 4));
    }
    else if (v17 == 2)
    {
      unint64_t v26 = *((void *)a2 + 6);
      unint64_t v27 = *((void *)a2 + 7);
      int v40 = 0;
      unint64_t v18 = __bid128_to_uint64_int(v26, v27, &v40);
    }
    else if (v17 == 4)
    {
      unint64_t v18 = *((void *)a2 + 8);
    }
    else
    {
      unint64_t v18 = 0;
    }
    int v41 = 0;
    *((void *)v15 + 8) = __bid128_to_uint64_int(v10, v12, &v41) + v18;
  }
  if (*(unsigned char *)(a1 + 40) && *((unsigned char *)a2 + 202))
  {
    int v34 = *(int **)(a1 + 32);
    int v35 = *v34;
    if (*v34 == 1)
    {
      if (my_rnd_mode) {
        int v37 = 4;
      }
      else {
        int v37 = 0;
      }
      unint64_t v36 = __binary64_to_bid128(v37, &my_fpsf, *((double *)v34 + 4));
    }
    else if (v35 == 2)
    {
      unint64_t v36 = *((void *)v34 + 6);
      uint64_t v38 = *((void *)v34 + 7);
    }
    else
    {
      if (v35 == 4) {
        unint64_t v36 = *((void *)v34 + 8);
      }
      else {
        unint64_t v36 = 0;
      }
      uint64_t v38 = 0x3040000000000000;
    }
    g_firstCoefficient_0 = v36;
    qword_1EBA2A5C8 = v38;
    *((unsigned char *)v34 + 202) = 1;
  }
}

void functionAdd(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = ___functionAdd_block_invoke;
  v2[3] = &__block_descriptor_41_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  char v3 = 0;
  evaluateBinary(a1, a2, v2);
}

void functionSubtract(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionSubtract_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

void __functionSubtract_block_invoke(uint64_t a1, int *a2, int *a3)
{
  int v34 = 0;
  int v6 = *a3;
  if (*a3 == 1)
  {
    if (my_rnd_mode) {
      int v8 = 4;
    }
    else {
      int v8 = 0;
    }
    unint64_t v7 = __binary64_to_bid128(v8, &my_fpsf, *((double *)a3 + 4));
  }
  else if (v6 == 2)
  {
    unint64_t v7 = *((void *)a3 + 6);
    unint64_t v9 = *((void *)a3 + 7);
  }
  else
  {
    if (v6 == 4) {
      unint64_t v7 = *((void *)a3 + 8);
    }
    else {
      unint64_t v7 = 0;
    }
    unint64_t v9 = 0x3040000000000000;
  }
  if (g_GeneratingConvertTerm)
  {
    unint64_t v10 = 0;
    int v11 = 11;
    unint64_t v12 = 0x7C00000000000000;
LABEL_16:
    uint64_t v14 = *(void *)(a1 + 32);
    *(_DWORD *)(v14 + 204) = v11;
    *(void *)(v14 + 48) = v10;
    *(void *)(v14 + 56) = v12;
    return;
  }
  unint64_t v10 = UnitCountConvert(v7, v9, (uint64_t)(a3 + 18), (uint64_t)(a2 + 18), (_OWORD *)(*(void *)(a1 + 32) + 72), &v34);
  unint64_t v12 = v13;
  if ((~v13 & 0x7C00000000000000) == 0)
  {
    int v11 = v34;
    goto LABEL_16;
  }
  g_isTrivial = 0;
  uint64_t v15 = *(double **)(a1 + 32);
  int v16 = *(_DWORD *)v15;
  if (*(_DWORD *)v15 == 1)
  {
    int v19 = *a2;
    if (*a2 == 1)
    {
      double v20 = *((double *)a2 + 4);
    }
    else if (v19 == 2)
    {
      if (my_rnd_mode) {
        int v28 = 4;
      }
      else {
        int v28 = 0;
      }
      double v20 = __bid128_to_binary64(*((void *)a2 + 6), *((void *)a2 + 7), v28, &my_fpsf);
    }
    else
    {
      double v20 = 0.0;
      if (v19 == 4)
      {
        unint64_t v21 = *((void *)a2 + 8);
        unint64_t v22 = (uint64_t)rint(1.79769313e308);
        if ((uint64_t)rint(2.22507386e-308) < v21 && v22 > v21) {
          double v20 = (double)v21;
        }
        else {
          double v20 = NAN;
        }
      }
    }
    if (my_rnd_mode) {
      int v29 = 4;
    }
    else {
      int v29 = 0;
    }
    v15[4] = v20 - __bid128_to_binary64(v10, v12, v29, &my_fpsf);
  }
  else if (v16 == 2)
  {
    int v24 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode) {
        int v30 = 4;
      }
      else {
        int v30 = 0;
      }
      unint64_t v25 = __binary64_to_bid128(v30, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v24 == 2)
    {
      unint64_t v25 = *((void *)a2 + 6);
      uint64_t v31 = *((void *)a2 + 7);
    }
    else
    {
      if (v24 == 4) {
        unint64_t v25 = *((void *)a2 + 8);
      }
      else {
        unint64_t v25 = 0;
      }
      uint64_t v31 = 0x3040000000000000;
    }
    if (my_rnd_mode) {
      int v32 = 4;
    }
    else {
      int v32 = 0;
    }
    *((void *)v15 + 6) = __bid128_sub(v25, v31, v10, v12, v32, &my_fpsf);
    *((void *)v15 + 7) = v33;
  }
  else if (v16 == 4)
  {
    int v17 = *a2;
    if (*a2 == 1)
    {
      unint64_t v18 = (uint64_t)rint(*((double *)a2 + 4));
    }
    else if (v17 == 2)
    {
      unint64_t v26 = *((void *)a2 + 6);
      unint64_t v27 = *((void *)a2 + 7);
      int v35 = 0;
      unint64_t v18 = __bid128_to_uint64_int(v26, v27, &v35);
    }
    else if (v17 == 4)
    {
      unint64_t v18 = *((void *)a2 + 8);
    }
    else
    {
      unint64_t v18 = 0;
    }
    int v36 = 0;
    *((void *)v15 + 8) = v18 - __bid128_to_uint64_int(v10, v12, &v36);
  }
}

unint64_t trivialCoefficient(unint64_t result)
{
  if (!result) {
    return result;
  }
  int v1 = *(uint64_t (**)())(result + 8);
  if ((char *)v1 != (char *)functionNoOp
    && (char *)v1 != (char *)functionUnit
    && (char *)v1 != (char *)functionConstant)
  {
    if (v1 == functionCoefficientUnit)
    {
      unint64_t v4 = *(int **)(result + 16);
      if (v4)
      {
        if (*((void (**)(uint64_t, uint64_t))v4 + 1) == functionConstant)
        {
          int v5 = *v4;
          if (*v4 != 1)
          {
            if (v5 == 2) {
              return *((void *)v4 + 6);
            }
            if (v5 == 4) {
              return *((void *)v4 + 8);
            }
            return 0;
          }
          double v6 = *((double *)v4 + 4);
          goto LABEL_24;
        }
      }
    }
    if ((char *)v1 == (char *)functionPow)
    {
      uint64_t v2 = *(void *)(result + 16);
      if (v2)
      {
        if (*(void *)(result + 24) && *(void (**)(uint64_t, uint64_t))(v2 + 8) == functionUnit) {
          return treeDecimalValue(*(double **)(result + 16));
        }
      }
    }
    return 0;
  }
  int v3 = *(_DWORD *)result;
  if (*(_DWORD *)result != 1)
  {
    if (v3 == 2) {
      return *(void *)(result + 48);
    }
    if (v3 == 4) {
      return *(void *)(result + 64);
    }
    return 0;
  }
  double v6 = *(double *)(result + 32);
LABEL_24:
  if (my_rnd_mode) {
    int v7 = 4;
  }
  else {
    int v7 = 0;
  }
  return __binary64_to_bid128(v7, &my_fpsf, v6);
}

void functionPow(uint64_t a1, uint64_t a2)
{
  ++g_PowNestingLevel;
  int v2 = g_negationCount;
  g_negationCount = 0;
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 3221225472;
  void v3[2] = __functionPow_block_invoke;
  v3[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v3[4] = a2;
  evaluateBinary(a1, a2, v3);
  g_negationCount = v2;
  --g_PowNestingLevel;
}

uint64_t __functionPow_block_invoke(uint64_t result, int *a2, int *a3)
{
  uint64_t v3 = result;
  if (a3[19])
  {
LABEL_2:
    uint64_t v4 = *(void *)(v3 + 32);
    *(_DWORD *)(v4 + 204) = 9;
    *(void *)(v4 + 48) = 0;
    *(void *)(v4 + 56) = 0x7C00000000000000;
    return result;
  }
  unint64_t v7 = -1;
  uint64_t v8 = 21;
  while (v7 != 14)
  {
    int v9 = a3[v8];
    ++v7;
    v8 += 2;
    if (v9)
    {
      if (v7 < 0xF) {
        goto LABEL_2;
      }
      break;
    }
  }
  if (a2[19])
  {
LABEL_8:
    int v10 = *a3;
    if (*a3 == 1)
    {
      if (my_rnd_mode) {
        int v15 = 4;
      }
      else {
        int v15 = 0;
      }
      unint64_t v11 = __binary64_to_bid128(v15, &my_fpsf, *((double *)a3 + 4));
      unint64_t v17 = v16;
    }
    else if (v10 == 2)
    {
      unint64_t v11 = *((void *)a3 + 6);
      unint64_t v17 = *((void *)a3 + 7);
    }
    else
    {
      if (v10 == 4) {
        unint64_t v11 = *((void *)a3 + 8);
      }
      else {
        unint64_t v11 = 0;
      }
      unint64_t v17 = 0x3040000000000000;
    }
    int v68 = 0;
    unint64_t v18 = __bid128_round_integral_exact(v11, v17, 4, &v68);
    uint64_t result = __bid128_quiet_equal(v11, v17, v18, v19, &v68);
    if (!result) {
      goto LABEL_2;
    }
  }
  else
  {
    unint64_t v12 = a2 + 21;
    unint64_t v13 = -1;
    while (v13 != 14)
    {
      int v14 = *v12;
      v12 += 2;
      ++v13;
      if (v14)
      {
        if (v13 <= 0xE) {
          goto LABEL_8;
        }
        break;
      }
    }
  }
  int v20 = *a2;
  if (*a2 == 1)
  {
    if (my_rnd_mode) {
      int v22 = 4;
    }
    else {
      int v22 = 0;
    }
    unint64_t v21 = __binary64_to_bid128(v22, &my_fpsf, *((double *)a2 + 4));
  }
  else if (v20 == 2)
  {
    unint64_t v21 = *((void *)a2 + 6);
    unint64_t v23 = *((void *)a2 + 7);
  }
  else
  {
    if (v20 == 4) {
      unint64_t v21 = *((void *)a2 + 8);
    }
    else {
      unint64_t v21 = 0;
    }
    unint64_t v23 = 0x3040000000000000;
  }
  if (!__bid128_quiet_equal(v21, v23, 1uLL, 0x3040000000000000uLL, &my_fpsf)) {
    goto LABEL_42;
  }
  if (!a2[19])
  {
    int v24 = a2 + 21;
    unint64_t v25 = -1;
    while (v25 != 14)
    {
      int v26 = *v24;
      v24 += 2;
      ++v25;
      if (v26)
      {
        if (v25 < 0xF) {
          goto LABEL_43;
        }
        break;
      }
    }
LABEL_42:
    g_isTrivial = 0;
  }
LABEL_43:
  uint64_t v27 = *(void *)(v3 + 32);
  if (*(_DWORD *)v27 == 4 || *(_DWORD *)v27 == 1)
  {
    int v29 = *a2;
    if (*a2 == 1)
    {
      double v30 = *((double *)a2 + 4);
    }
    else if (v29 == 2)
    {
      if (my_rnd_mode) {
        int v36 = 4;
      }
      else {
        int v36 = 0;
      }
      double v30 = __bid128_to_binary64(*((void *)a2 + 6), *((void *)a2 + 7), v36, &my_fpsf);
    }
    else
    {
      double v30 = 0.0;
      if (v29 == 4)
      {
        unint64_t v31 = *((void *)a2 + 8);
        unint64_t v32 = (uint64_t)rint(1.79769313e308);
        if ((uint64_t)rint(2.22507386e-308) < v31 && v32 > v31) {
          double v30 = (double)v31;
        }
        else {
          double v30 = NAN;
        }
      }
    }
    int v37 = *a3;
    if (*a3 == 1)
    {
      double v38 = *((double *)a3 + 4);
    }
    else if (v37 == 2)
    {
      if (my_rnd_mode) {
        int v42 = 4;
      }
      else {
        int v42 = 0;
      }
      double v38 = __bid128_to_binary64(*((void *)a3 + 6), *((void *)a3 + 7), v42, &my_fpsf);
    }
    else
    {
      double v38 = 0.0;
      if (v37 == 4)
      {
        unint64_t v39 = *((void *)a3 + 8);
        unint64_t v40 = (uint64_t)rint(1.79769313e308);
        BOOL v41 = (uint64_t)rint(2.22507386e-308) < v39 && v40 > v39;
        double v38 = NAN;
        if (v41) {
          double v38 = (double)v39;
        }
      }
    }
    double v43 = pow(v30, v38);
    *(double *)(v27 + 32) = v43;
    *(void *)(v27 + 64) = (uint64_t)rint(v43);
  }
  else
  {
    int v34 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode) {
        int v44 = 4;
      }
      else {
        int v44 = 0;
      }
      unint64_t v35 = __binary64_to_bid128(v44, &my_fpsf, *((double *)a2 + 4));
      unint64_t v46 = v45;
    }
    else if (v34 == 2)
    {
      unint64_t v35 = *((void *)a2 + 6);
      unint64_t v46 = *((void *)a2 + 7);
    }
    else
    {
      if (v34 == 4) {
        unint64_t v35 = *((void *)a2 + 8);
      }
      else {
        unint64_t v35 = 0;
      }
      unint64_t v46 = 0x3040000000000000;
    }
    int v47 = *a3;
    if (*a3 == 1)
    {
      if (my_rnd_mode) {
        int v49 = 4;
      }
      else {
        int v49 = 0;
      }
      unint64_t v48 = __binary64_to_bid128(v49, &my_fpsf, *((double *)a3 + 4));
      unint64_t v51 = v50;
    }
    else if (v47 == 2)
    {
      unint64_t v48 = *((void *)a3 + 6);
      unint64_t v51 = *((void *)a3 + 7);
    }
    else
    {
      if (v47 == 4) {
        unint64_t v48 = *((void *)a3 + 8);
      }
      else {
        unint64_t v48 = 0;
      }
      unint64_t v51 = 0x3040000000000000;
    }
    if (my_rnd_mode) {
      unsigned int v52 = 4;
    }
    else {
      unsigned int v52 = 0;
    }
    *(void *)(v27 + 48) = bid128_pow_fix(v35, v46, v48, v51, v52, &my_fpsf);
    *(void *)(v27 + 56) = v53;
    uint64_t v27 = *(void *)(v3 + 32);
  }
  uint64_t v54 = 0;
  char v55 = g_isTrivial;
  if (my_rnd_mode) {
    int v56 = 4;
  }
  else {
    int v56 = 0;
  }
  do
  {
    unsigned int v57 = &a2[v54];
    *(_DWORD *)(v27 + v54 * 4 + 72) = a2[v54 + 18];
    if (v55)
    {
      int v58 = v57[19];
      BOOL v59 = v58 == 0;
      if (v58 < 0) {
        int v58 = -v58;
      }
      if (v59 || v58 == 1)
      {
        char v55 = 1;
      }
      else
      {
        int v61 = *a3;
        if (*a3 == 1)
        {
          unint64_t v62 = __binary64_to_bid128(v56, &my_fpsf, *((double *)a3 + 4));
        }
        else if (v61 == 2)
        {
          unint64_t v62 = *((void *)a3 + 6);
          uint64_t v63 = *((void *)a3 + 7);
        }
        else
        {
          if (v61 == 4) {
            unint64_t v62 = *((void *)a3 + 8);
          }
          else {
            unint64_t v62 = 0;
          }
          uint64_t v63 = 0x3040000000000000;
        }
        char v55 = 1;
        if (!__bid128_quiet_equal(v62, v63 & 0x7FFFFFFFFFFFFFFFLL, 1uLL, 0x3040000000000000uLL, &my_fpsf))
        {
          char v55 = 0;
          g_isTrivial = 0;
        }
      }
    }
    else
    {
      char v55 = 0;
    }
    int v64 = v57[19];
    int v65 = *a3;
    if (*a3 == 1)
    {
      unint64_t v66 = __binary64_to_bid128(v56, &my_fpsf, *((double *)a3 + 4));
    }
    else if (v65 == 2)
    {
      unint64_t v66 = *((void *)a3 + 6);
      uint64_t v67 = *((void *)a3 + 7);
    }
    else
    {
      if (v65 == 4) {
        unint64_t v66 = *((void *)a3 + 8);
      }
      else {
        unint64_t v66 = 0;
      }
      uint64_t v67 = 0x3040000000000000;
    }
    uint64_t result = __bid128_to_int32_int(v66, v67, &my_fpsf);
    *(_DWORD *)(v27 + v54 * 4 + 76) = result * v64;
    v54 += 2;
  }
  while (v54 != 32);
  return result;
}

void functionCoefficientUnit(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = ___functionMultiply_block_invoke;
  v2[3] = &__block_descriptor_49_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  void v2[5] = a1;
  char v3 = 1;
  evaluateBinary(a1, a2, v2);
}

void ___functionMultiply_block_invoke(uint64_t a1, int *a2, int *a3)
{
  int v48 = 0;
  uint64_t v6 = (uint64_t)(a2 + 18);
  int v7 = *a3;
  if (*a3 == 1)
  {
    if (my_rnd_mode) {
      int v9 = 4;
    }
    else {
      int v9 = 0;
    }
    unint64_t v8 = __binary64_to_bid128(v9, &my_fpsf, *((double *)a3 + 4));
    unint64_t v11 = v10;
  }
  else if (v7 == 2)
  {
    unint64_t v8 = *((void *)a3 + 6);
    unint64_t v11 = *((void *)a3 + 7);
  }
  else
  {
    if (v7 == 4) {
      unint64_t v8 = *((void *)a3 + 8);
    }
    else {
      unint64_t v8 = 0;
    }
    unint64_t v11 = 0x3040000000000000;
  }
  unint64_t v12 = UnitCountMultiply(v6, v8, v11, (uint64_t)(a3 + 18), *(void *)(a1 + 32) + 72, &v48);
  unint64_t v14 = v12;
  unint64_t v15 = v13;
  if ((~v13 & 0x7C00000000000000) == 0)
  {
    uint64_t v16 = *(void *)(a1 + 32);
    *(_DWORD *)(v16 + 204) = v48;
    *(void *)(v16 + 48) = v12;
    *(void *)(v16 + 56) = v13;
    return;
  }
  unint64_t v17 = *(void *)(*(void *)(a1 + 40) + 16);
  if (!v17)
  {
LABEL_27:
    unint64_t v18 = 0x3040000000000000;
    goto LABEL_28;
  }
  if (*(void (**)(uint64_t, uint64_t))(v17 + 8) != functionSameCurrency)
  {
    unint64_t v17 = trivialCoefficient(v17);
    goto LABEL_28;
  }
  int v19 = *a2;
  if (*a2 != 1)
  {
    if (v19 == 2)
    {
      unint64_t v17 = *((void *)a2 + 6);
      unint64_t v18 = *((void *)a2 + 7);
      goto LABEL_28;
    }
    if (v19 == 4) {
      unint64_t v17 = *((void *)a2 + 8);
    }
    else {
      unint64_t v17 = 0;
    }
    goto LABEL_27;
  }
  if (my_rnd_mode) {
    int v20 = 4;
  }
  else {
    int v20 = 0;
  }
  unint64_t v17 = __binary64_to_bid128(v20, &my_fpsf, *((double *)a2 + 4));
LABEL_28:
  if (g_isTrivial == 1)
  {
    if (__bid128_quiet_equal(v17, v18, 1uLL, 0x3040000000000000uLL, &my_fpsf)
      || (unint64_t v21 = trivialCoefficient(*(void *)(*(void *)(a1 + 40) + 24)),
          __bid128_quiet_equal(v21, v22, 1uLL, 0x3040000000000000uLL, &my_fpsf)))
    {
      if (a2[19]) {
        goto LABEL_42;
      }
      unint64_t v23 = a2 + 21;
      unint64_t v24 = -1;
      while (v24 != 14)
      {
        int v25 = *v23;
        v23 += 2;
        ++v24;
        if (v25)
        {
          if (v24 < 0xF) {
            goto LABEL_42;
          }
          break;
        }
      }
      if (a3[19]) {
        goto LABEL_42;
      }
      int v26 = a3 + 21;
      unint64_t v27 = -1;
      while (v27 != 14)
      {
        int v28 = *v26;
        v26 += 2;
        ++v27;
        if (v28)
        {
          if (v27 < 0xF) {
            goto LABEL_42;
          }
          break;
        }
      }
    }
    g_isTrivial = 0;
  }
LABEL_42:
  int v29 = *(double **)(a1 + 32);
  int v30 = *(_DWORD *)v29;
  if (*(_DWORD *)v29 == 1)
  {
    int v33 = *a2;
    if (*a2 == 1)
    {
      double v34 = *((double *)a2 + 4);
    }
    else if (v33 == 2)
    {
      if (my_rnd_mode) {
        int v42 = 4;
      }
      else {
        int v42 = 0;
      }
      double v34 = __bid128_to_binary64(*((void *)a2 + 6), *((void *)a2 + 7), v42, &my_fpsf);
    }
    else
    {
      double v34 = 0.0;
      if (v33 == 4)
      {
        unint64_t v35 = *((void *)a2 + 8);
        unint64_t v36 = (uint64_t)rint(1.79769313e308);
        if ((uint64_t)rint(2.22507386e-308) < v35 && v36 > v35) {
          double v34 = (double)v35;
        }
        else {
          double v34 = NAN;
        }
      }
    }
    if (my_rnd_mode) {
      int v43 = 4;
    }
    else {
      int v43 = 0;
    }
    v29[4] = v34 * __bid128_to_binary64(v14, v15, v43, &my_fpsf);
  }
  else if (v30 == 2)
  {
    int v38 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode) {
        int v44 = 4;
      }
      else {
        int v44 = 0;
      }
      unint64_t v39 = __binary64_to_bid128(v44, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v38 == 2)
    {
      unint64_t v39 = *((void *)a2 + 6);
      uint64_t v45 = *((void *)a2 + 7);
    }
    else
    {
      if (v38 == 4) {
        unint64_t v39 = *((void *)a2 + 8);
      }
      else {
        unint64_t v39 = 0;
      }
      uint64_t v45 = 0x3040000000000000;
    }
    if (my_rnd_mode) {
      unsigned int v46 = 4;
    }
    else {
      unsigned int v46 = 0;
    }
    *((void *)v29 + 6) = __bid128_mul(v39, v45, v14, v15, v46, &my_fpsf);
    *((void *)v29 + 7) = v47;
  }
  else if (v30 == 4)
  {
    int v31 = *a2;
    if (*a2 == 1)
    {
      unint64_t v32 = (uint64_t)rint(*((double *)a2 + 4));
    }
    else if (v31 == 2)
    {
      unint64_t v40 = *((void *)a2 + 6);
      unint64_t v41 = *((void *)a2 + 7);
      int v49 = 0;
      unint64_t v32 = __bid128_to_uint64_int(v40, v41, &v49);
    }
    else if (v31 == 4)
    {
      unint64_t v32 = *((void *)a2 + 8);
    }
    else
    {
      unint64_t v32 = 0;
    }
    int v50 = 0;
    *((void *)v29 + 8) = __bid128_to_uint64_int(v14, v15, &v50) * v32;
  }
  if (*(unsigned char *)(a1 + 48) && (*((unsigned char *)a2 + 202) || *((unsigned char *)a3 + 202))) {
    *(unsigned char *)(*(void *)(a1 + 32) + 202) = 1;
  }
}

void functionSameCurrency(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionSameCurrency_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

void __functionSameCurrency_block_invoke(uint64_t a1, int *a2, int *a3)
{
  uint64_t v6 = (long long *)(a2 + 18);
  uint64_t v51 = (uint64_t)(a3 + 18);
  id v7 = (id)g_unitsInfo;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 18;
  do
  {
    int v11 = a2[v10 + 1];
    if (v11 != a3[v10 + 1])
    {
LABEL_9:

      goto LABEL_10;
    }
    if (v11)
    {
      if (a2[v10] != a3[v10]) {
        goto LABEL_9;
      }
      unint64_t v12 = [v7 infoForUnitType:v8];
      char v13 = [v12 isCurrency];

      v9 |= v13;
    }
    ++v8;
    v10 += 2;
  }
  while (v8 != 16);

  if (v9)
  {
    uint64_t v14 = *(void *)(a1 + 32);
    *(void *)(v14 + 64) = *((void *)a2 + 8);
    *(void *)(v14 + 32) = *((void *)a2 + 4);
    *(_OWORD *)(v14 + 48) = *((_OWORD *)a2 + 3);
    uint64_t v15 = *(void *)(a1 + 32);
    long long v16 = *v6;
    long long v17 = v6[1];
    long long v18 = v6[2];
    *(_OWORD *)(v15 + 120) = v6[3];
    *(_OWORD *)(v15 + 104) = v18;
    *(_OWORD *)(v15 + 88) = v17;
    *(_OWORD *)(v15 + 72) = v16;
    long long v19 = v6[4];
    long long v20 = v6[5];
    long long v21 = v6[6];
    *(_OWORD *)(v15 + 184) = v6[7];
    *(_OWORD *)(v15 + 168) = v21;
    *(_OWORD *)(v15 + 152) = v20;
    *(_OWORD *)(v15 + 136) = v19;
    return;
  }
LABEL_10:
  int v52 = 0;
  int v22 = *a3;
  if (*a3 == 1)
  {
    if (my_rnd_mode) {
      int v24 = 4;
    }
    else {
      int v24 = 0;
    }
    unint64_t v23 = __binary64_to_bid128(v24, &my_fpsf, *((double *)a3 + 4));
    unint64_t v26 = v25;
  }
  else if (v22 == 2)
  {
    unint64_t v23 = *((void *)a3 + 6);
    unint64_t v26 = *((void *)a3 + 7);
  }
  else
  {
    if (v22 == 4) {
      unint64_t v23 = *((void *)a3 + 8);
    }
    else {
      unint64_t v23 = 0;
    }
    unint64_t v26 = 0x3040000000000000;
  }
  unint64_t v27 = UnitCountMultiply((uint64_t)v6, v23, v26, v51, *(void *)(a1 + 32) + 72, &v52);
  unint64_t v29 = v27;
  unint64_t v30 = v28;
  if ((~v28 & 0x7C00000000000000) != 0)
  {
    g_isTrivial = 0;
    unint64_t v32 = *(double **)(a1 + 32);
    int v33 = *(_DWORD *)v32;
    if (*(_DWORD *)v32 == 1)
    {
      int v36 = *a2;
      if (*a2 == 1)
      {
        double v37 = *((double *)a2 + 4);
      }
      else if (v36 == 2)
      {
        if (my_rnd_mode) {
          int v45 = 4;
        }
        else {
          int v45 = 0;
        }
        double v37 = __bid128_to_binary64(*((void *)a2 + 6), *((void *)a2 + 7), v45, &my_fpsf);
      }
      else
      {
        double v37 = 0.0;
        if (v36 == 4)
        {
          unint64_t v38 = *((void *)a2 + 8);
          unint64_t v39 = (uint64_t)rint(1.79769313e308);
          if ((uint64_t)rint(2.22507386e-308) < v38 && v39 > v38) {
            double v37 = (double)v38;
          }
          else {
            double v37 = NAN;
          }
        }
      }
      if (my_rnd_mode) {
        int v46 = 4;
      }
      else {
        int v46 = 0;
      }
      unsigned __int8 v32[4] = v37 * __bid128_to_binary64(v29, v30, v46, &my_fpsf);
    }
    else if (v33 == 2)
    {
      int v41 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode) {
          int v47 = 4;
        }
        else {
          int v47 = 0;
        }
        unint64_t v42 = __binary64_to_bid128(v47, &my_fpsf, *((double *)a2 + 4));
      }
      else if (v41 == 2)
      {
        unint64_t v42 = *((void *)a2 + 6);
        uint64_t v48 = *((void *)a2 + 7);
      }
      else
      {
        if (v41 == 4) {
          unint64_t v42 = *((void *)a2 + 8);
        }
        else {
          unint64_t v42 = 0;
        }
        uint64_t v48 = 0x3040000000000000;
      }
      if (my_rnd_mode) {
        unsigned int v49 = 4;
      }
      else {
        unsigned int v49 = 0;
      }
      *((void *)v32 + 6) = __bid128_mul(v42, v48, v29, v30, v49, &my_fpsf);
      *((void *)v32 + 7) = v50;
    }
    else if (v33 == 4)
    {
      int v34 = *a2;
      if (*a2 == 1)
      {
        unint64_t v35 = (uint64_t)rint(*((double *)a2 + 4));
      }
      else if (v34 == 2)
      {
        unint64_t v43 = *((void *)a2 + 6);
        unint64_t v44 = *((void *)a2 + 7);
        int v53 = 0;
        unint64_t v35 = __bid128_to_uint64_int(v43, v44, &v53);
      }
      else if (v34 == 4)
      {
        unint64_t v35 = *((void *)a2 + 8);
      }
      else
      {
        unint64_t v35 = 0;
      }
      int v54 = 0;
      *((void *)v32 + 8) = __bid128_to_uint64_int(v29, v30, &v54) * v35;
    }
  }
  else
  {
    uint64_t v31 = *(void *)(a1 + 32);
    *(_DWORD *)(v31 + 204) = v52;
    *(void *)(v31 + 48) = v27;
    *(void *)(v31 + 56) = v28;
  }
}

void functionMultiply(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = ___functionMultiply_block_invoke;
  v2[3] = &__block_descriptor_49_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  void v2[5] = a1;
  char v3 = 0;
  evaluateBinary(a1, a2, v2);
}

void functionDivide(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionDivide_block_invoke;
  v2[3] = &__block_descriptor_48_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  void v2[5] = a1;
  evaluateBinary(a1, a2, v2);
}

void __functionDivide_block_invoke(uint64_t a1, int *a2, int *a3)
{
  int v6 = *a3;
  if (*a3 == 1)
  {
    if (my_rnd_mode) {
      int v8 = 4;
    }
    else {
      int v8 = 0;
    }
    unint64_t v7 = __binary64_to_bid128(v8, &my_fpsf, *((double *)a3 + 4));
  }
  else if (v6 == 2)
  {
    unint64_t v7 = *((void *)a3 + 6);
    unint64_t v9 = *((void *)a3 + 7);
  }
  else
  {
    if (v6 == 4) {
      unint64_t v7 = *((void *)a3 + 8);
    }
    else {
      unint64_t v7 = 0;
    }
    unint64_t v9 = 0x3040000000000000;
  }
  if (__bid128_quiet_equal(v7, v9, 0, 0x3040000000000000uLL, &my_fpsf))
  {
    int v10 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode) {
        int v14 = 4;
      }
      else {
        int v14 = 0;
      }
      unint64_t v11 = __binary64_to_bid128(v14, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v10 == 2)
    {
      unint64_t v11 = *((void *)a2 + 6);
      unint64_t v15 = *((void *)a2 + 7);
    }
    else
    {
      if (v10 == 4) {
        unint64_t v11 = *((void *)a2 + 8);
      }
      else {
        unint64_t v11 = 0;
      }
      unint64_t v15 = 0x3040000000000000;
    }
    BOOL v16 = __bid128_quiet_equal(v11, v15, 0, 0x3040000000000000uLL, &my_fpsf);
    uint64_t v17 = *(void *)(a1 + 32);
    if (v16) {
      int v18 = 16;
    }
    else {
      int v18 = 1;
    }
    *(_DWORD *)(v17 + 204) = v18;
    my_fpsf |= 4u;
    *(void *)(v17 + 48) = 0;
    *(void *)(v17 + 56) = 0x7C00000000000000;
    return;
  }
  int v77 = 0;
  int v12 = *a3;
  if (*a3 == 1)
  {
    if (my_rnd_mode) {
      int v19 = 4;
    }
    else {
      int v19 = 0;
    }
    unint64_t v13 = __binary64_to_bid128(v19, &my_fpsf, *((double *)a3 + 4));
    unint64_t v21 = v20;
  }
  else if (v12 == 2)
  {
    unint64_t v13 = *((void *)a3 + 6);
    unint64_t v21 = *((void *)a3 + 7);
  }
  else
  {
    if (v12 == 4) {
      unint64_t v13 = *((void *)a3 + 8);
    }
    else {
      unint64_t v13 = 0;
    }
    unint64_t v21 = 0x3040000000000000;
  }
  int v22 = a2 + 18;
  unint64_t v23 = a3 + 18;
  uint64_t v24 = *(void *)(a1 + 32);
  if (g_GeneratingConvertTerm)
  {
    for (uint64_t i = 0; i != 32; i += 2)
    {
      if (a2[i + 19] && a3[i + 19] && a2[i + 18] != a3[i + 18])
      {
        unint64_t v13 = 0;
        unint64_t v21 = 0x7C00000000000000;
        int v42 = 8;
        goto LABEL_89;
      }
    }
    for (uint64_t j = 0; j != 32; j += 2)
    {
      int v27 = a3[j + 19];
      if (v27) {
        unint64_t v28 = a3 + 18;
      }
      else {
        unint64_t v28 = a2 + 18;
      }
      uint64_t v29 = v24 + j * 4;
      int v30 = a2[j + 19] - v27;
      *(_DWORD *)(v29 + 72) = v28[j];
      *(_DWORD *)(v29 + 76) = v30;
    }
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v32 = v24 + 72;
    do
    {
      int v33 = v23[v31 + 1];
      int v34 = &v22[v31];
      int v35 = v22[v31 + 1];
      if (v35 | v33)
      {
        if (v35) {
          BOOL v36 = v33 == 0;
        }
        else {
          BOOL v36 = 1;
        }
        if (v36)
        {
          if (v33) {
            double v37 = a3 + 18;
          }
          else {
            double v37 = a2 + 18;
          }
          int v38 = v37[v31];
        }
        else
        {
          int v38 = *v34;
          int v39 = v23[v31];
          if (*v34 != v39)
          {
            unint64_t v13 = UnitCountConvertID(v13, v21, v39, v23[v31 + 1], v38, 0, &v77);
            unint64_t v21 = v40;
            int v38 = *v34;
            int v35 = v34[1];
          }
        }
        int v41 = (int *)(v32 + v31 * 4);
        *int v41 = v38;
        v41[1] = v35 - v33;
      }
      v31 += 2;
    }
    while (v31 != 32);
  }
  if ((~v21 & 0x7C00000000000000) != 0)
  {
    if (g_isTrivial == 1)
    {
      unint64_t v43 = v13;
      unint64_t v44 = trivialCoefficient(*(void *)(*(void *)(a1 + 40) + 24));
      BOOL v46 = __bid128_quiet_equal(v44, v45, 1uLL, 0x3040000000000000uLL, &my_fpsf);
      unint64_t v13 = v43;
      if (v46)
      {
        if (a2[19]) {
          goto LABEL_81;
        }
        int v47 = a2 + 21;
        unint64_t v48 = -1;
        while (v48 != 14)
        {
          int v49 = *v47;
          v47 += 2;
          ++v48;
          if (v49)
          {
            if (v48 < 0xF) {
              goto LABEL_81;
            }
            break;
          }
        }
        if (a3[19]) {
          goto LABEL_81;
        }
        uint64_t v50 = a3 + 21;
        unint64_t v51 = -1;
        while (v51 != 14)
        {
          int v52 = *v50;
          v50 += 2;
          ++v51;
          if (v52)
          {
            if (v51 < 0xF) {
              goto LABEL_81;
            }
            break;
          }
        }
      }
      g_isTrivial = 0;
    }
LABEL_81:
    int v53 = *(double **)(a1 + 32);
    int v54 = *(_DWORD *)v53;
    if (*(_DWORD *)v53 == 1)
    {
      int v57 = *a2;
      if (*a2 == 1)
      {
        double v58 = *((double *)a2 + 4);
      }
      else if (v57 == 2)
      {
        if (my_rnd_mode) {
          int v69 = 4;
        }
        else {
          int v69 = 0;
        }
        unint64_t v70 = v13;
        double v71 = __bid128_to_binary64(*((void *)a2 + 6), *((void *)a2 + 7), v69, &my_fpsf);
        unint64_t v13 = v70;
        double v58 = v71;
      }
      else
      {
        double v58 = 0.0;
        if (v57 == 4)
        {
          unint64_t v59 = *((void *)a2 + 8);
          unint64_t v60 = (uint64_t)rint(1.79769313e308);
          if ((uint64_t)rint(2.22507386e-308) < v59 && v60 > v59) {
            double v58 = (double)v59;
          }
          else {
            double v58 = NAN;
          }
        }
      }
      if (my_rnd_mode) {
        int v72 = 4;
      }
      else {
        int v72 = 0;
      }
      void v53[4] = v58 / __bid128_to_binary64(v13, v21, v72, &my_fpsf);
    }
    else if (v54 == 2)
    {
      unint64_t v62 = v13;
      int v63 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode) {
          int v73 = 4;
        }
        else {
          int v73 = 0;
        }
        unint64_t v64 = __binary64_to_bid128(v73, &my_fpsf, *((double *)a2 + 4));
      }
      else if (v63 == 2)
      {
        unint64_t v64 = *((void *)a2 + 6);
        unint64_t v74 = *((void *)a2 + 7);
      }
      else
      {
        if (v63 == 4) {
          unint64_t v64 = *((void *)a2 + 8);
        }
        else {
          unint64_t v64 = 0;
        }
        unint64_t v74 = 0x3040000000000000;
      }
      if (my_rnd_mode) {
        int v75 = 4;
      }
      else {
        int v75 = 0;
      }
      *((void *)v53 + 6) = __bid128_div(v64, v74, v62, v21, v75, &my_fpsf);
      *((void *)v53 + 7) = v76;
    }
    else if (v54 == 4)
    {
      int v55 = *a2;
      if (*a2 == 1)
      {
        unint64_t v56 = (uint64_t)rint(*((double *)a2 + 4));
      }
      else if (v55 == 2)
      {
        unint64_t v65 = *((void *)a2 + 6);
        unint64_t v66 = *((void *)a2 + 7);
        int v78 = 0;
        unint64_t v67 = v13;
        unint64_t v68 = __bid128_to_uint64_int(v65, v66, &v78);
        unint64_t v13 = v67;
        unint64_t v56 = v68;
      }
      else if (v55 == 4)
      {
        unint64_t v56 = *((void *)a2 + 8);
      }
      else
      {
        unint64_t v56 = 0;
      }
      int v79 = 0;
      *((void *)v53 + 8) = v56 / __bid128_to_uint64_int(v13, v21, &v79);
    }
    return;
  }
  int v42 = v77;
  uint64_t v24 = *(void *)(a1 + 32);
LABEL_89:
  *(_DWORD *)(v24 + 204) = v42;
  *(void *)(v24 + 48) = v13;
  *(void *)(v24 + 56) = v21;
}

void functionNegate(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionNegate_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void __functionNegate_block_invoke(uint64_t a1, int *a2)
{
  int v2 = g_PowNestingLevel;
  if (g_GeneratingConvertTerm == 1 && g_PowNestingLevel == 0)
  {
    uint64_t v16 = *(void *)(a1 + 32);
    *(_DWORD *)(v16 + 204) = 11;
    *(void *)(v16 + 48) = 0;
    *(void *)(v16 + 56) = 0x7C00000000000000;
  }
  else
  {
    uint64_t v4 = *(void *)(a1 + 32);
    long long v5 = *(_OWORD *)(a2 + 18);
    long long v6 = *(_OWORD *)(a2 + 22);
    long long v7 = *(_OWORD *)(a2 + 26);
    *(_OWORD *)(v4 + 120) = *(_OWORD *)(a2 + 30);
    *(_OWORD *)(v4 + 104) = v7;
    *(_OWORD *)(v4 + 88) = v6;
    *(_OWORD *)(v4 + 72) = v5;
    long long v8 = *(_OWORD *)(a2 + 34);
    long long v9 = *(_OWORD *)(a2 + 38);
    long long v10 = *(_OWORD *)(a2 + 42);
    *(_OWORD *)(v4 + 184) = *(_OWORD *)(a2 + 46);
    *(_OWORD *)(v4 + 168) = v10;
    *(_OWORD *)(v4 + 152) = v9;
    *(_OWORD *)(v4 + 136) = v8;
    if (!v2)
    {
      int v11 = g_negationCount++;
      if (v11 >= 1) {
        g_isTrivial = 0;
      }
    }
    int v12 = *(double **)(a1 + 32);
    int v13 = *(_DWORD *)v12;
    if (*(_DWORD *)v12 == 1)
    {
      int v17 = *a2;
      if (*a2 == 1)
      {
        double v18 = *((double *)a2 + 4);
      }
      else if (v17 == 2)
      {
        if (my_rnd_mode) {
          int v26 = 4;
        }
        else {
          int v26 = 0;
        }
        double v18 = __bid128_to_binary64(*((void *)a2 + 6), *((void *)a2 + 7), v26, &my_fpsf);
      }
      else
      {
        double v18 = 0.0;
        if (v17 == 4)
        {
          unint64_t v19 = *((void *)a2 + 8);
          unint64_t v20 = (uint64_t)rint(1.79769313e308);
          BOOL v21 = (uint64_t)rint(2.22507386e-308) < v19 && v20 > v19;
          double v18 = (double)v19;
          if (!v21) {
            double v18 = NAN;
          }
        }
      }
      v12[4] = -v18;
    }
    else if (v13 == 2)
    {
      int v22 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode) {
          int v27 = 4;
        }
        else {
          int v27 = 0;
        }
        unint64_t v23 = __binary64_to_bid128(v27, &my_fpsf, *((double *)a2 + 4));
        uint64_t v29 = v28;
      }
      else if (v22 == 2)
      {
        unint64_t v23 = *((void *)a2 + 6);
        uint64_t v29 = *((void *)a2 + 7);
      }
      else
      {
        if (v22 == 4) {
          unint64_t v23 = *((void *)a2 + 8);
        }
        else {
          unint64_t v23 = 0;
        }
        uint64_t v29 = 0x3040000000000000;
      }
      *((void *)v12 + 6) = v23;
      *((void *)v12 + 7) = v29 ^ 0x8000000000000000;
    }
    else if (v13 == 4)
    {
      int v14 = *a2;
      if (*a2 == 1)
      {
        unint64_t v15 = (uint64_t)rint(*((double *)a2 + 4));
      }
      else if (v14 == 2)
      {
        unint64_t v24 = *((void *)a2 + 6);
        unint64_t v25 = *((void *)a2 + 7);
        int v30 = 0;
        unint64_t v15 = __bid128_to_uint64_int(v24, v25, &v30);
      }
      else if (v14 == 4)
      {
        unint64_t v15 = *((void *)a2 + 8);
      }
      else
      {
        unint64_t v15 = 0;
      }
      *((void *)v12 + 8) = -(uint64_t)v15;
    }
  }
}

void functionPercent(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionPercent_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

__n128 __functionPercent_block_invoke(uint64_t a1, int *a2, __n128 result)
{
  if (g_GeneratingConvertTerm == 1)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    *(_DWORD *)(v4 + 204) = 11;
    *(void *)(v4 + 48) = 0;
    *(void *)(v4 + 56) = 0x7C00000000000000;
  }
  else
  {
    g_isTrivial = 0;
    long long v6 = *(int **)(a1 + 32);
    int v7 = *v6;
    if (*v6 == 1)
    {
      int v10 = *a2;
      if (*a2 == 1)
      {
        double v11 = *((double *)a2 + 4);
      }
      else if (v10 == 2)
      {
        unint64_t v19 = *((void *)a2 + 6);
        unint64_t v20 = *((void *)a2 + 7);
        if (my_rnd_mode) {
          int v21 = 4;
        }
        else {
          int v21 = 0;
        }
        double v11 = __bid128_to_binary64(v19, v20, v21, &my_fpsf);
      }
      else
      {
        double v11 = 0.0;
        if (v10 == 4)
        {
          unint64_t v12 = *((void *)a2 + 8);
          unint64_t v13 = (uint64_t)rint(1.79769313e308);
          BOOL v14 = (uint64_t)rint(2.22507386e-308) < v12 && v13 > v12;
          double v11 = (double)v12;
          if (!v14) {
            double v11 = NAN;
          }
        }
      }
      *((double *)v6 + 4) = v11 / 100.0;
    }
    else if (v7 == 2)
    {
      int v15 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode) {
          int v22 = 4;
        }
        else {
          int v22 = 0;
        }
        unint64_t v16 = __binary64_to_bid128(v22, &my_fpsf, *((double *)a2 + 4));
      }
      else if (v15 == 2)
      {
        unint64_t v16 = *((void *)a2 + 6);
        unint64_t v23 = *((void *)a2 + 7);
      }
      else
      {
        if (v15 == 4) {
          unint64_t v16 = *((void *)a2 + 8);
        }
        else {
          unint64_t v16 = 0;
        }
        unint64_t v23 = 0x3040000000000000;
      }
      if (my_rnd_mode) {
        int v24 = 4;
      }
      else {
        int v24 = 0;
      }
      *((void *)v6 + 6) = __bid128_div(v16, v23, 0x64uLL, 0x3040000000000000uLL, v24, &my_fpsf);
      *((void *)v6 + 7) = v25;
      long long v6 = *(int **)(a1 + 32);
    }
    else if (v7 == 4)
    {
      int v8 = *a2;
      if (*a2 == 1)
      {
        unint64_t v9 = (uint64_t)rint(*((double *)a2 + 4));
      }
      else if (v8 == 2)
      {
        unint64_t v17 = *((void *)a2 + 6);
        unint64_t v18 = *((void *)a2 + 7);
        int v31 = 0;
        unint64_t v9 = __bid128_to_uint64_int(v17, v18, &v31);
      }
      else if (v8 == 4)
      {
        unint64_t v9 = *((void *)a2 + 8);
      }
      else
      {
        unint64_t v9 = 0;
      }
      *((void *)v6 + 8) = v9 / 0x64;
    }
    long long v26 = *(_OWORD *)(a2 + 18);
    long long v27 = *(_OWORD *)(a2 + 22);
    long long v28 = *(_OWORD *)(a2 + 26);
    *(_OWORD *)(v6 + 30) = *(_OWORD *)(a2 + 30);
    *(_OWORD *)(v6 + 26) = v28;
    *(_OWORD *)(v6 + 22) = v27;
    *(_OWORD *)(v6 + 18) = v26;
    uint64_t result = *(__n128 *)(a2 + 34);
    long long v29 = *(_OWORD *)(a2 + 38);
    long long v30 = *(_OWORD *)(a2 + 42);
    *(_OWORD *)(v6 + 46) = *(_OWORD *)(a2 + 46);
    *(_OWORD *)(v6 + 42) = v30;
    *(_OWORD *)(v6 + 38) = v29;
    *(__n128 *)(v6 + 34) = result;
  }
  return result;
}

void functionPercentIncrease(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionPercentIncrease_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

void __functionPercentIncrease_block_invoke(uint64_t a1, int *a2, int *a3)
{
  if (g_GeneratingConvertTerm)
  {
    int v4 = 11;
LABEL_5:
    uint64_t v6 = *(void *)(a1 + 32);
    *(_DWORD *)(v6 + 204) = v4;
    *(void *)(v6 + 48) = 0;
    *(void *)(v6 + 56) = 0x7C00000000000000;
    return;
  }
  if (a3[19])
  {
LABEL_4:
    int v4 = 9;
    goto LABEL_5;
  }
  unint64_t v8 = -1;
  uint64_t v9 = 21;
  while (v8 != 14)
  {
    int v10 = a3[v9];
    ++v8;
    v9 += 2;
    if (v10)
    {
      if (v8 <= 0xE) {
        goto LABEL_4;
      }
      break;
    }
  }
  g_isTrivial = 0;
  double v11 = *(int **)(a1 + 32);
  int v12 = *v11;
  if (*v11 == 1)
  {
    int v15 = *a2;
    if (*a2 == 1)
    {
      double v16 = *((double *)a2 + 4);
    }
    else if (v15 == 2)
    {
      unint64_t v29 = *((void *)a2 + 6);
      unint64_t v30 = *((void *)a2 + 7);
      if (my_rnd_mode) {
        int v31 = 4;
      }
      else {
        int v31 = 0;
      }
      double v16 = __bid128_to_binary64(v29, v30, v31, &my_fpsf);
    }
    else
    {
      double v16 = 0.0;
      if (v15 == 4)
      {
        unint64_t v17 = *((void *)a2 + 8);
        unint64_t v18 = (uint64_t)rint(1.79769313e308);
        if ((uint64_t)rint(2.22507386e-308) < v17 && v18 > v17) {
          double v16 = (double)v17;
        }
        else {
          double v16 = NAN;
        }
      }
    }
    int v32 = *a3;
    if (*a3 == 1)
    {
      double v33 = *((double *)a3 + 4);
    }
    else if (v32 == 2)
    {
      if (my_rnd_mode) {
        int v49 = 4;
      }
      else {
        int v49 = 0;
      }
      double v33 = __bid128_to_binary64(*((void *)a3 + 6), *((void *)a3 + 7), v49, &my_fpsf);
    }
    else
    {
      double v33 = 0.0;
      if (v32 == 4)
      {
        unint64_t v34 = *((void *)a3 + 8);
        unint64_t v35 = (uint64_t)rint(1.79769313e308);
        BOOL v36 = (uint64_t)rint(2.22507386e-308) < v34 && v35 > v34;
        double v33 = (double)v34;
        if (!v36) {
          double v33 = NAN;
        }
      }
    }
    *((double *)v11 + 4) = v16 * (v33 + 1.0);
    goto LABEL_80;
  }
  if (v12 == 2)
  {
    int v20 = *a3;
    if (*a3 == 1)
    {
      if (my_rnd_mode) {
        int v37 = 4;
      }
      else {
        int v37 = 0;
      }
      unint64_t v21 = __binary64_to_bid128(v37, &my_fpsf, *((double *)a3 + 4));
      uint64_t v39 = v38;
    }
    else if (v20 == 2)
    {
      unint64_t v21 = *((void *)a3 + 6);
      uint64_t v39 = *((void *)a3 + 7);
    }
    else
    {
      if (v20 == 4) {
        unint64_t v21 = *((void *)a3 + 8);
      }
      else {
        unint64_t v21 = 0;
      }
      uint64_t v39 = 0x3040000000000000;
    }
    if (my_rnd_mode) {
      unsigned int v40 = 4;
    }
    else {
      unsigned int v40 = 0;
    }
    uint64_t v41 = 0x3040000000000000;
    unint64_t v42 = __bid128_add(1uLL, 0x3040000000000000, v21, v39, v40, &my_fpsf);
    uint64_t v44 = v43;
    int v45 = *a2;
    if (*a2 == 1)
    {
      unint64_t v46 = __binary64_to_bid128(v40, &my_fpsf, *((double *)a2 + 4));
      uint64_t v41 = v50;
    }
    else if (v45 == 2)
    {
      unint64_t v46 = *((void *)a2 + 6);
      uint64_t v41 = *((void *)a2 + 7);
    }
    else if (v45 == 4)
    {
      unint64_t v46 = *((void *)a2 + 8);
    }
    else
    {
      unint64_t v46 = 0;
    }
    *((void *)v11 + 6) = __bid128_mul(v46, v41, v42, v44, v40, &my_fpsf);
    *((void *)v11 + 7) = v51;
    double v11 = *(int **)(a1 + 32);
    goto LABEL_80;
  }
  if (v12 == 4)
  {
    int v13 = *a2;
    if (*a2 == 1)
    {
      unint64_t v14 = (uint64_t)rint(*((double *)a2 + 4));
    }
    else
    {
      if (v13 == 2)
      {
        unint64_t v23 = *((void *)a2 + 6);
        unint64_t v24 = *((void *)a2 + 7);
        int v58 = 0;
        unint64_t v14 = __bid128_to_uint64_int(v23, v24, &v58);
        unint64_t v25 = *((void *)a2 + 6);
        unint64_t v26 = *((void *)a2 + 7);
        int v59 = 0;
        unint64_t v22 = __bid128_to_uint64_int(v25, v26, &v59);
        goto LABEL_34;
      }
      if (v13 != 4)
      {
        unint64_t v14 = 0;
        unint64_t v22 = 0;
        goto LABEL_34;
      }
      unint64_t v14 = *((void *)a2 + 8);
    }
    unint64_t v22 = v14;
LABEL_34:
    int v27 = *a3;
    if (*a3 == 1)
    {
      unint64_t v28 = (uint64_t)rint(*((double *)a3 + 4));
    }
    else if (v27 == 2)
    {
      unint64_t v47 = *((void *)a3 + 6);
      unint64_t v48 = *((void *)a3 + 7);
      int v60 = 0;
      unint64_t v28 = __bid128_to_uint64_int(v47, v48, &v60);
    }
    else if (v27 == 4)
    {
      unint64_t v28 = *((void *)a3 + 8);
    }
    else
    {
      unint64_t v28 = 0;
    }
    *((void *)v11 + 8) = v14 + v28 * v22;
  }
LABEL_80:
  long long v52 = *(_OWORD *)(a2 + 18);
  long long v53 = *(_OWORD *)(a2 + 22);
  long long v54 = *(_OWORD *)(a2 + 26);
  *(_OWORD *)(v11 + 30) = *(_OWORD *)(a2 + 30);
  *(_OWORD *)(v11 + 26) = v54;
  *(_OWORD *)(v11 + 22) = v53;
  *(_OWORD *)(v11 + 18) = v52;
  long long v55 = *(_OWORD *)(a2 + 34);
  long long v56 = *(_OWORD *)(a2 + 38);
  long long v57 = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(v11 + 46) = *(_OWORD *)(a2 + 46);
  *(_OWORD *)(v11 + 42) = v57;
  *(_OWORD *)(v11 + 38) = v56;
  *(_OWORD *)(v11 + 34) = v55;
}

void functionPercentDecrease(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionPercentDecrease_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

void __functionPercentDecrease_block_invoke(uint64_t a1, int *a2, int *a3)
{
  if (g_GeneratingConvertTerm)
  {
    int v4 = 11;
LABEL_5:
    uint64_t v6 = *(void *)(a1 + 32);
    *(_DWORD *)(v6 + 204) = v4;
    *(void *)(v6 + 48) = 0;
    *(void *)(v6 + 56) = 0x7C00000000000000;
    return;
  }
  if (a3[19])
  {
LABEL_4:
    int v4 = 9;
    goto LABEL_5;
  }
  unint64_t v8 = -1;
  uint64_t v9 = 21;
  while (v8 != 14)
  {
    int v10 = a3[v9];
    ++v8;
    v9 += 2;
    if (v10)
    {
      if (v8 <= 0xE) {
        goto LABEL_4;
      }
      break;
    }
  }
  g_isTrivial = 0;
  double v11 = *(int **)(a1 + 32);
  int v12 = *v11;
  if (*v11 == 1)
  {
    int v15 = *a2;
    if (*a2 == 1)
    {
      double v16 = *((double *)a2 + 4);
    }
    else if (v15 == 2)
    {
      unint64_t v29 = *((void *)a2 + 6);
      unint64_t v30 = *((void *)a2 + 7);
      if (my_rnd_mode) {
        int v31 = 4;
      }
      else {
        int v31 = 0;
      }
      double v16 = __bid128_to_binary64(v29, v30, v31, &my_fpsf);
    }
    else
    {
      double v16 = 0.0;
      if (v15 == 4)
      {
        unint64_t v17 = *((void *)a2 + 8);
        unint64_t v18 = (uint64_t)rint(1.79769313e308);
        if ((uint64_t)rint(2.22507386e-308) < v17 && v18 > v17) {
          double v16 = (double)v17;
        }
        else {
          double v16 = NAN;
        }
      }
    }
    int v32 = *a3;
    if (*a3 == 1)
    {
      double v33 = *((double *)a3 + 4);
    }
    else if (v32 == 2)
    {
      if (my_rnd_mode) {
        int v49 = 4;
      }
      else {
        int v49 = 0;
      }
      double v33 = __bid128_to_binary64(*((void *)a3 + 6), *((void *)a3 + 7), v49, &my_fpsf);
    }
    else
    {
      double v33 = 0.0;
      if (v32 == 4)
      {
        unint64_t v34 = *((void *)a3 + 8);
        unint64_t v35 = (uint64_t)rint(1.79769313e308);
        BOOL v36 = (uint64_t)rint(2.22507386e-308) < v34 && v35 > v34;
        double v33 = (double)v34;
        if (!v36) {
          double v33 = NAN;
        }
      }
    }
    *((double *)v11 + 4) = v16 * (1.0 - v33);
    goto LABEL_80;
  }
  if (v12 == 2)
  {
    int v20 = *a3;
    if (*a3 == 1)
    {
      if (my_rnd_mode) {
        int v37 = 4;
      }
      else {
        int v37 = 0;
      }
      unint64_t v21 = __binary64_to_bid128(v37, &my_fpsf, *((double *)a3 + 4));
      uint64_t v39 = v38;
    }
    else if (v20 == 2)
    {
      unint64_t v21 = *((void *)a3 + 6);
      uint64_t v39 = *((void *)a3 + 7);
    }
    else
    {
      if (v20 == 4) {
        unint64_t v21 = *((void *)a3 + 8);
      }
      else {
        unint64_t v21 = 0;
      }
      uint64_t v39 = 0x3040000000000000;
    }
    if (my_rnd_mode) {
      unsigned int v40 = 4;
    }
    else {
      unsigned int v40 = 0;
    }
    uint64_t v41 = 0x3040000000000000;
    unint64_t v42 = __bid128_sub(1uLL, 0x3040000000000000, v21, v39, v40, &my_fpsf);
    uint64_t v44 = v43;
    int v45 = *a2;
    if (*a2 == 1)
    {
      unint64_t v46 = __binary64_to_bid128(v40, &my_fpsf, *((double *)a2 + 4));
      uint64_t v41 = v50;
    }
    else if (v45 == 2)
    {
      unint64_t v46 = *((void *)a2 + 6);
      uint64_t v41 = *((void *)a2 + 7);
    }
    else if (v45 == 4)
    {
      unint64_t v46 = *((void *)a2 + 8);
    }
    else
    {
      unint64_t v46 = 0;
    }
    *((void *)v11 + 6) = __bid128_mul(v46, v41, v42, v44, v40, &my_fpsf);
    *((void *)v11 + 7) = v51;
    double v11 = *(int **)(a1 + 32);
    goto LABEL_80;
  }
  if (v12 == 4)
  {
    int v13 = *a2;
    if (*a2 == 1)
    {
      unint64_t v14 = (uint64_t)rint(*((double *)a2 + 4));
    }
    else
    {
      if (v13 == 2)
      {
        unint64_t v23 = *((void *)a2 + 6);
        unint64_t v24 = *((void *)a2 + 7);
        int v58 = 0;
        unint64_t v14 = __bid128_to_uint64_int(v23, v24, &v58);
        unint64_t v25 = *((void *)a2 + 6);
        unint64_t v26 = *((void *)a2 + 7);
        int v59 = 0;
        unint64_t v22 = __bid128_to_uint64_int(v25, v26, &v59);
        goto LABEL_34;
      }
      if (v13 != 4)
      {
        unint64_t v14 = 0;
        unint64_t v22 = 0;
        goto LABEL_34;
      }
      unint64_t v14 = *((void *)a2 + 8);
    }
    unint64_t v22 = v14;
LABEL_34:
    int v27 = *a3;
    if (*a3 == 1)
    {
      unint64_t v28 = (uint64_t)rint(*((double *)a3 + 4));
    }
    else if (v27 == 2)
    {
      unint64_t v47 = *((void *)a3 + 6);
      unint64_t v48 = *((void *)a3 + 7);
      int v60 = 0;
      unint64_t v28 = __bid128_to_uint64_int(v47, v48, &v60);
    }
    else if (v27 == 4)
    {
      unint64_t v28 = *((void *)a3 + 8);
    }
    else
    {
      unint64_t v28 = 0;
    }
    *((void *)v11 + 8) = v14 - v28 * v22;
  }
LABEL_80:
  long long v52 = *(_OWORD *)(a2 + 18);
  long long v53 = *(_OWORD *)(a2 + 22);
  long long v54 = *(_OWORD *)(a2 + 26);
  *(_OWORD *)(v11 + 30) = *(_OWORD *)(a2 + 30);
  *(_OWORD *)(v11 + 26) = v54;
  *(_OWORD *)(v11 + 22) = v53;
  *(_OWORD *)(v11 + 18) = v52;
  long long v55 = *(_OWORD *)(a2 + 34);
  long long v56 = *(_OWORD *)(a2 + 38);
  long long v57 = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(v11 + 46) = *(_OWORD *)(a2 + 46);
  *(_OWORD *)(v11 + 42) = v57;
  *(_OWORD *)(v11 + 38) = v56;
  *(_OWORD *)(v11 + 34) = v55;
}

void functionImplicitAdd(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = ___functionAdd_block_invoke;
  v2[3] = &__block_descriptor_41_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  char v3 = 1;
  evaluateBinary(a1, a2, v2);
}

void functionSqrRootInline(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionSqrRoot_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void __functionSqrRoot_block_invoke(uint64_t a1, int *a2)
{
  if (!a2[19])
  {
    int v7 = a2 + 21;
    unint64_t v8 = -1;
    while (v8 != 14)
    {
      int v9 = *v7;
      v7 += 2;
      ++v8;
      if (v9) {
        goto LABEL_16;
      }
    }
    unint64_t v8 = 15;
LABEL_16:
    int v3 = g_GeneratingConvertTerm;
    if (v8 < 0xF || g_GeneratingConvertTerm) {
      goto LABEL_3;
    }
LABEL_18:
    int v10 = (long long *)(a2 + 18);
    g_isTrivial = 0;
    double v11 = *(int **)(a1 + 32);
    int v12 = *v11;
    if (*v11 == 4) {
      goto LABEL_21;
    }
    if (v12 == 2)
    {
      int v18 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode) {
          int v22 = 4;
        }
        else {
          int v22 = 0;
        }
        unint64_t v19 = __binary64_to_bid128(v22, &my_fpsf, *((double *)a2 + 4));
        unint64_t v24 = v23;
      }
      else if (v18 == 2)
      {
        unint64_t v19 = *((void *)a2 + 6);
        unint64_t v24 = *((void *)a2 + 7);
      }
      else
      {
        if (v18 == 4) {
          unint64_t v19 = *((void *)a2 + 8);
        }
        else {
          unint64_t v19 = 0;
        }
        unint64_t v24 = 0x3040000000000000;
      }
      if (my_rnd_mode) {
        int v25 = 4;
      }
      else {
        int v25 = 0;
      }
      *((void *)v11 + 6) = __bid128_sqrt(v19, v24, v25);
      *((void *)v11 + 7) = v26;
      double v11 = *(int **)(a1 + 32);
    }
    else if (v12 == 1)
    {
LABEL_21:
      int v13 = *a2;
      if (*a2 == 1)
      {
        double v14 = *((double *)a2 + 4);
      }
      else if (v13 == 2)
      {
        if (my_rnd_mode) {
          int v20 = 4;
        }
        else {
          int v20 = 0;
        }
        double v14 = __bid128_to_binary64(*((void *)a2 + 6), *((void *)a2 + 7), v20, &my_fpsf);
      }
      else
      {
        double v14 = 0.0;
        if (v13 == 4)
        {
          unint64_t v15 = *((void *)a2 + 8);
          unint64_t v16 = (uint64_t)rint(1.79769313e308);
          BOOL v17 = (uint64_t)rint(2.22507386e-308) < v15 && v16 > v15;
          double v14 = (double)v15;
          if (!v17) {
            double v14 = NAN;
          }
        }
      }
      double v21 = sqrt(v14);
      *((double *)v11 + 4) = v21;
      *((void *)v11 + 8) = (uint64_t)rint(v21);
    }
    uint64_t v27 = 0;
    long long v28 = *v10;
    long long v29 = v10[1];
    long long v30 = v10[2];
    *(_OWORD *)(v11 + 30) = v10[3];
    *(_OWORD *)(v11 + 26) = v30;
    *(_OWORD *)(v11 + 22) = v29;
    *(_OWORD *)(v11 + 18) = v28;
    long long v31 = v10[4];
    long long v32 = v10[5];
    long long v33 = v10[6];
    *(_OWORD *)(v11 + 46) = v10[7];
    *(_OWORD *)(v11 + 42) = v33;
    *(_OWORD *)(v11 + 38) = v32;
    *(_OWORD *)(v11 + 34) = v31;
    uint64_t v34 = *(void *)(a1 + 32) + 76;
    do
    {
      *(int *)(v34 + v27) /= 2;
      v27 += 8;
    }
    while (v27 != 128);
    return;
  }
  int v3 = g_GeneratingConvertTerm;
LABEL_3:
  uint64_t v4 = 0;
  while ((a2[v4 + 19] & 1) == 0)
  {
    v4 += 2;
    if (v4 == 32) {
      goto LABEL_18;
    }
  }
  uint64_t v5 = *(void *)(a1 + 32);
  if (v3) {
    int v6 = 11;
  }
  else {
    int v6 = 9;
  }
  *(_DWORD *)(v5 + 204) = v6;
  *(void *)(v5 + 48) = 0;
  *(void *)(v5 + 56) = 0x7C00000000000000;
}

void functionSqrRoot(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionSqrRoot_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void functionCubeRootInline(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionCubeRoot_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void __functionCubeRoot_block_invoke(uint64_t a1, int *a2)
{
  v68[3] = *MEMORY[0x1E4F143B8];
  if (!a2[19])
  {
    unint64_t v8 = a2 + 21;
    unint64_t v9 = -1;
    while (v9 != 14)
    {
      int v10 = *v8;
      v8 += 2;
      ++v9;
      if (v10) {
        goto LABEL_16;
      }
    }
    unint64_t v9 = 15;
LABEL_16:
    int v4 = g_GeneratingConvertTerm;
    if (v9 < 0xF || g_GeneratingConvertTerm) {
      goto LABEL_3;
    }
LABEL_18:
    double v11 = (long long *)(a2 + 18);
    g_isTrivial = 0;
    int v12 = *(double **)(a1 + 32);
    int v13 = *(_DWORD *)v12;
    if (*(_DWORD *)v12 == 4) {
      goto LABEL_21;
    }
    if (v13 != 2)
    {
      if (v13 == 1)
      {
LABEL_21:
        int v14 = *a2;
        if (*a2 == 1)
        {
          double v15 = *((double *)a2 + 4);
        }
        else if (v14 == 2)
        {
          unint64_t v21 = *((void *)a2 + 6);
          unint64_t v22 = *((void *)a2 + 7);
          if (my_rnd_mode) {
            int v23 = 4;
          }
          else {
            int v23 = 0;
          }
          double v15 = __bid128_to_binary64(v21, v22, v23, &my_fpsf);
        }
        else
        {
          double v15 = 0.0;
          if (v14 == 4)
          {
            unint64_t v16 = *((void *)a2 + 8);
            unint64_t v17 = (uint64_t)rint(1.79769313e308);
            BOOL v18 = (uint64_t)rint(2.22507386e-308) < v16 && v17 > v16;
            double v15 = (double)v16;
            if (!v18) {
              double v15 = NAN;
            }
          }
        }
        double v24 = cbrt(v15);
        v12[4] = v24;
        *((void *)v12 + 8) = (uint64_t)rint(v24);
      }
LABEL_98:
      uint64_t v50 = 0;
      uint64_t v51 = *(void *)(a1 + 32);
      long long v52 = *v11;
      long long v53 = v11[1];
      long long v54 = v11[2];
      *(_OWORD *)(v51 + 120) = v11[3];
      *(_OWORD *)(v51 + 104) = v54;
      *(_OWORD *)(v51 + 88) = v53;
      *(_OWORD *)(v51 + 72) = v52;
      long long v55 = v11[4];
      long long v56 = v11[5];
      long long v57 = v11[6];
      *(_OWORD *)(v51 + 184) = v11[7];
      *(_OWORD *)(v51 + 168) = v57;
      *(_OWORD *)(v51 + 152) = v56;
      *(_OWORD *)(v51 + 136) = v55;
      uint64_t v58 = *(void *)(a1 + 32) + 76;
      do
      {
        *(int *)(v58 + v50) /= 3;
        v50 += 8;
      }
      while (v50 != 128);
      return;
    }
    int v19 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode) {
        int v25 = 4;
      }
      else {
        int v25 = 0;
      }
      unint64_t v20 = __binary64_to_bid128(v25, &my_fpsf, *((double *)a2 + 4));
      unint64_t v27 = v26;
    }
    else if (v19 == 2)
    {
      unint64_t v20 = *((void *)a2 + 6);
      unint64_t v27 = *((void *)a2 + 7);
    }
    else
    {
      if (v19 == 4) {
        unint64_t v20 = *((void *)a2 + 8);
      }
      else {
        unint64_t v20 = 0;
      }
      unint64_t v27 = 0x3040000000000000;
    }
    if (__bid128_quiet_equal(0, 0x3040000000000000uLL, v20, v27, &my_fpsf))
    {
      void v12[6] = 0.0;
      v12[7] = 2.76357394e-76;
      goto LABEL_98;
    }
    int v28 = *a2;
    if (*a2 == 1)
    {
      double v30 = *((double *)a2 + 4);
      if (my_rnd_mode) {
        int v31 = 4;
      }
      else {
        int v31 = 0;
      }
      unint64_t v29 = __binary64_to_bid128(v31, &my_fpsf, v30);
    }
    else
    {
      if (v28 != 2)
      {
        if (v28 == 4) {
          unint64_t v29 = *((void *)a2 + 8);
        }
        else {
          unint64_t v29 = 0;
        }
        unint64_t v33 = 0;
        uint64_t v36 = 0;
        if (my_rnd_mode) {
          int v31 = 4;
        }
        else {
          int v31 = 0;
        }
        unint64_t v32 = 0x3040000000000000;
        goto LABEL_73;
      }
      unint64_t v29 = *((void *)a2 + 6);
      unint64_t v32 = *((void *)a2 + 7);
      if (my_rnd_mode) {
        int v31 = 4;
      }
      else {
        int v31 = 0;
      }
    }
    unint64_t v33 = v32 & 0x8000000000000000;
    if (((v32 >> 61) & 3) == 3)
    {
      if ((v32 & 0x7800000000000000) == 0x7800000000000000)
      {
        unint64_t v34 = 0xFE00000000000000;
        if ((v32 & 0x3FFFFFFFFFFFLL) <= 0x314DC6448D93)
        {
          if ((v32 & 0x3FFFFFFFFFFFLL) != 0x314DC6448D93 || v29 < 0x38C15B0A00000000)
          {
            unint64_t v34 = 0xFE003FFFFFFFFFFFLL;
            unint64_t v35 = v29;
          }
          else
          {
            unint64_t v35 = 0;
          }
        }
        else
        {
          unint64_t v35 = 0;
        }
        if ((v32 & 0x7C00000000000000) == 0x7800000000000000)
        {
          unint64_t v34 = 0xF800000000000000;
          unint64_t v29 = 0;
        }
        else
        {
          unint64_t v29 = v35;
        }
        if ((v32 & 0x7C00000000000000) != 0x7C00000000000000)
        {
          unint64_t v29 = 0;
          unint64_t v47 = v33 | 0x7800000000000000;
          goto LABEL_97;
        }
        uint64_t v36 = v34 & v32;
LABEL_94:
        if ((~v32 & 0x7E00000000000000) == 0) {
          my_fpsf |= 1u;
        }
        unint64_t v47 = v36 & 0xFDFFFFFFFFFFFFFFLL;
        goto LABEL_97;
      }
      uint64_t v36 = 0;
      unint64_t v29 = 0;
LABEL_78:
      if ((~v32 & 0x7C00000000000000) != 0)
      {
        unint64_t v47 = v36 | v33;
LABEL_97:
        *((void *)v12 + 6) = v29;
        *((void *)v12 + 7) = v47;
        goto LABEL_98;
      }
      goto LABEL_94;
    }
    uint64_t v36 = v32 & 0x1FFFFFFFFFFFFLL;
    if ((v32 & 0x1FFFFFFFFFFFFLL) > 0x1ED09BEAD87C0
      || (v32 & 0x1FFFFFFFFFFFFLL) == 0x1ED09BEAD87C0 && v29 >= 0x378D8E6400000000)
    {
      unint64_t v29 = 0;
      uint64_t v36 = 0;
    }
LABEL_73:
    if (v36 | v29)
    {
      __n128 v60 = 0uLL;
      uint64_t v37 = (v32 >> 49) & 0x3FFF;
      unsigned int v38 = (21846 * v37 + 21846) >> 16;
      uint64_t v39 = v38 + 30709;
      v59[0] = __bid128_to_binary128(v29, v33 | ((unint64_t)(v37 + 32765 * v38 + 6177) << 49) | v36, v31, &my_fpsf);
      v59[1] = v40;
      uint64_t v64 = 0;
      unint64_t v65 = 0;
      uint64_t v66 = 0;
      memset(v62, 0, sizeof(v62));
      if ((uint64_t)__dpml_bid_unpack_x_or_y__(v59, 0, (uint64_t)&v64, (uint64_t *)&__dpml_bid_cbrt_x_table, (uint64_t)&v60, v61) >= 1)
      {
        uint64_t v41 = (v65 >> 11) | 0x3FE0000000000000;
        int v42 = HIDWORD(v64);
        unsigned int v43 = 43691 * (HIDWORD(v64) + 16496);
        double v44 = *(double *)&v41
            * (*(double *)&v41
             * (*(double *)&v41 * (*(double *)&v41 * (*(double *)&v41 * -0.0523843233 + 0.472479471) + -1.76634183)
              + 3.52535754)
             + -4.04499731)
            + 2.86586987;
        double v45 = *((double *)&__dpml_bid_cbrt_x_table + HIDWORD(v64) + -3 * (v43 >> 17) + 16503)
            * (*(double *)&v41 * -0.777777778 * (*(double *)&v41 * *(double *)&v41) * (v44 * v44 * (v44 * v44))
             + *(double *)&v41 * 1.55555556 * v44
             + v44
             * v44
             * (v44
              * v44)
             * (v44
              * (v44
               * v44))
             * (*(double *)&v41
              * 0.222222222
              * (*(double *)&v41
               * *(double *)&v41
               * (*(double *)&v41
                * *(double *)&v41))));
        v63[0].i32[0] = v64;
        v63[0].i32[1] = (*(void *)&v45 >> 52) + (v43 >> 17) - 6521;
        v63[1] = (int8x8_t)((*(void *)&v45 << 11) | 0x8000000000000000);
        v63[2] = 0;
        __dpml_bid_multiply__(v63, v63, v62);
        __dpml_bid_multiply__(v63, v62, v62);
        HIDWORD(v64) = v42 + 1;
        __dpml_bid_addsub__((uint64_t)v62, &v64, 0, (uint64_t)v67);
        HIDWORD(v64) = v42 - 1;
        __dpml_bid_addsub__((uint64_t)v62, &v64, 0, (uint64_t)v68);
        __dpml_bid_divide__((uint64_t)v67, v68, 2, (uint64_t)v67);
        __dpml_bid_multiply__(v63, v67, v63);
        --v63[0].i32[1];
        __dpml_bid_pack__((unsigned int *)v63, &v60, 0, 0);
      }
      unint64_t v29 = __binary128_to_bid128(v60.n128_u64[0], v60.n128_u64[1], v31, &my_fpsf);
      unint64_t v47 = v46 + (v39 << 49);
      goto LABEL_97;
    }
    goto LABEL_78;
  }
  int v4 = g_GeneratingConvertTerm;
LABEL_3:
  uint64_t v5 = 0;
  while ((715827882 - 1431655765 * a2[v5 + 19]) < 0x55555555)
  {
    v5 += 2;
    if (v5 == 32) {
      goto LABEL_18;
    }
  }
  uint64_t v6 = *(void *)(a1 + 32);
  if (v4) {
    int v7 = 11;
  }
  else {
    int v7 = 9;
  }
  *(_DWORD *)(v6 + 204) = v7;
  *(void *)(v6 + 48) = 0;
  *(void *)(v6 + 56) = 0x7C00000000000000;
}

void functionCubeRoot(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionCubeRoot_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void functionExp(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionExp_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

__n128 __functionExp_block_invoke(uint64_t a1, int *a2, __n128 result)
{
  if (a2[19])
  {
    if (g_GeneratingConvertTerm)
    {
LABEL_3:
      int v4 = 11;
LABEL_25:
      uint64_t v16 = *(void *)(a1 + 32);
      *(_DWORD *)(v16 + 204) = v4;
      *(void *)(v16 + 48) = 0;
      *(void *)(v16 + 56) = 0x7C00000000000000;
      return result;
    }
LABEL_24:
    int v4 = 9;
    goto LABEL_25;
  }
  uint64_t v5 = (long long *)(a2 + 18);
  unint64_t v6 = -1;
  uint64_t v7 = 21;
  while (v6 != 14)
  {
    int v8 = a2[v7];
    ++v6;
    v7 += 2;
    if (v8) {
      goto LABEL_9;
    }
  }
  unint64_t v6 = 15;
LABEL_9:
  if (v6 < 0xF || g_GeneratingConvertTerm)
  {
    if (g_GeneratingConvertTerm) {
      goto LABEL_3;
    }
    goto LABEL_24;
  }
  g_isTrivial = 0;
  unint64_t v9 = *(int **)(a1 + 32);
  int v10 = *v9;
  if (*v9 == 4) {
    goto LABEL_14;
  }
  if (v10 == 2)
  {
    int v17 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode) {
        int v21 = 4;
      }
      else {
        int v21 = 0;
      }
      unint64_t v18 = __binary64_to_bid128(v21, &my_fpsf, *((double *)a2 + 4));
      unint64_t v23 = v22;
    }
    else if (v17 == 2)
    {
      unint64_t v18 = *((void *)a2 + 6);
      unint64_t v23 = *((void *)a2 + 7);
    }
    else
    {
      if (v17 == 4) {
        unint64_t v18 = *((void *)a2 + 8);
      }
      else {
        unint64_t v18 = 0;
      }
      unint64_t v23 = 0x3040000000000000;
    }
    if (my_rnd_mode) {
      unsigned int v24 = 4;
    }
    else {
      unsigned int v24 = 0;
    }
    *((void *)v9 + 6) = __bid128_exp(v18, v23, v24, &my_fpsf);
    *((void *)v9 + 7) = v25;
    unint64_t v9 = *(int **)(a1 + 32);
  }
  else if (v10 == 1)
  {
LABEL_14:
    int v11 = *a2;
    if (*a2 == 1)
    {
      double v12 = *((double *)a2 + 4);
    }
    else if (v11 == 2)
    {
      if (my_rnd_mode) {
        int v19 = 4;
      }
      else {
        int v19 = 0;
      }
      double v12 = __bid128_to_binary64(*((void *)a2 + 6), *((void *)a2 + 7), v19, &my_fpsf);
    }
    else
    {
      double v12 = 0.0;
      if (v11 == 4)
      {
        unint64_t v13 = *((void *)a2 + 8);
        unint64_t v14 = (uint64_t)rint(1.79769313e308);
        BOOL v15 = (uint64_t)rint(2.22507386e-308) < v13 && v14 > v13;
        double v12 = (double)v13;
        if (!v15) {
          double v12 = NAN;
        }
      }
    }
    double v20 = exp(v12);
    *((double *)v9 + 4) = v20;
    *((void *)v9 + 8) = (uint64_t)rint(v20);
  }
  long long v26 = *v5;
  long long v27 = v5[1];
  long long v28 = v5[2];
  *(_OWORD *)(v9 + 30) = v5[3];
  *(_OWORD *)(v9 + 26) = v28;
  *(_OWORD *)(v9 + 22) = v27;
  *(_OWORD *)(v9 + 18) = v26;
  uint64_t result = (__n128)v5[4];
  long long v29 = v5[5];
  long long v30 = v5[6];
  *(_OWORD *)(v9 + 46) = v5[7];
  *(_OWORD *)(v9 + 42) = v30;
  *(_OWORD *)(v9 + 38) = v29;
  *(__n128 *)(v9 + 34) = result;
  return result;
}

void functionLn(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionLn_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

__n128 __functionLn_block_invoke(uint64_t a1, int *a2, __n128 result)
{
  if (a2[19])
  {
    if (g_GeneratingConvertTerm)
    {
LABEL_3:
      int v4 = 11;
LABEL_25:
      uint64_t v16 = *(void *)(a1 + 32);
      *(_DWORD *)(v16 + 204) = v4;
      *(void *)(v16 + 48) = 0;
      *(void *)(v16 + 56) = 0x7C00000000000000;
      return result;
    }
LABEL_24:
    int v4 = 9;
    goto LABEL_25;
  }
  uint64_t v5 = (long long *)(a2 + 18);
  unint64_t v6 = -1;
  uint64_t v7 = 21;
  while (v6 != 14)
  {
    int v8 = a2[v7];
    ++v6;
    v7 += 2;
    if (v8) {
      goto LABEL_9;
    }
  }
  unint64_t v6 = 15;
LABEL_9:
  if (v6 < 0xF || g_GeneratingConvertTerm)
  {
    if (g_GeneratingConvertTerm) {
      goto LABEL_3;
    }
    goto LABEL_24;
  }
  g_isTrivial = 0;
  unint64_t v9 = *(int **)(a1 + 32);
  int v10 = *v9;
  if (*v9 == 4) {
    goto LABEL_14;
  }
  if (v10 == 2)
  {
    int v17 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode) {
        int v21 = 4;
      }
      else {
        int v21 = 0;
      }
      unint64_t v18 = __binary64_to_bid128(v21, &my_fpsf, *((double *)a2 + 4));
      unint64_t v23 = v22;
    }
    else if (v17 == 2)
    {
      unint64_t v18 = *((void *)a2 + 6);
      unint64_t v23 = *((void *)a2 + 7);
    }
    else
    {
      if (v17 == 4) {
        unint64_t v18 = *((void *)a2 + 8);
      }
      else {
        unint64_t v18 = 0;
      }
      unint64_t v23 = 0x3040000000000000;
    }
    if (my_rnd_mode) {
      unsigned int v24 = 4;
    }
    else {
      unsigned int v24 = 0;
    }
    *((void *)v9 + 6) = __bid128_log(v18, v23, v24);
    *((void *)v9 + 7) = v25;
    unint64_t v9 = *(int **)(a1 + 32);
  }
  else if (v10 == 1)
  {
LABEL_14:
    int v11 = *a2;
    if (*a2 == 1)
    {
      double v12 = *((double *)a2 + 4);
    }
    else if (v11 == 2)
    {
      if (my_rnd_mode) {
        int v19 = 4;
      }
      else {
        int v19 = 0;
      }
      double v12 = __bid128_to_binary64(*((void *)a2 + 6), *((void *)a2 + 7), v19, &my_fpsf);
    }
    else
    {
      double v12 = 0.0;
      if (v11 == 4)
      {
        unint64_t v13 = *((void *)a2 + 8);
        unint64_t v14 = (uint64_t)rint(1.79769313e308);
        BOOL v15 = (uint64_t)rint(2.22507386e-308) < v13 && v14 > v13;
        double v12 = (double)v13;
        if (!v15) {
          double v12 = NAN;
        }
      }
    }
    double v20 = log(v12);
    *((double *)v9 + 4) = v20;
    *((void *)v9 + 8) = (uint64_t)rint(v20);
  }
  long long v26 = *v5;
  long long v27 = v5[1];
  long long v28 = v5[2];
  *(_OWORD *)(v9 + 30) = v5[3];
  *(_OWORD *)(v9 + 26) = v28;
  *(_OWORD *)(v9 + 22) = v27;
  *(_OWORD *)(v9 + 18) = v26;
  uint64_t result = (__n128)v5[4];
  long long v29 = v5[5];
  long long v30 = v5[6];
  *(_OWORD *)(v9 + 46) = v5[7];
  *(_OWORD *)(v9 + 42) = v30;
  *(_OWORD *)(v9 + 38) = v29;
  *(__n128 *)(v9 + 34) = result;
  return result;
}

void functionLog(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionLog_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

__n128 __functionLog_block_invoke(uint64_t a1, int *a2, __n128 result)
{
  if (a2[19])
  {
    if (g_GeneratingConvertTerm)
    {
LABEL_3:
      int v4 = 11;
LABEL_25:
      uint64_t v16 = *(void *)(a1 + 32);
      *(_DWORD *)(v16 + 204) = v4;
      *(void *)(v16 + 48) = 0;
      *(void *)(v16 + 56) = 0x7C00000000000000;
      return result;
    }
LABEL_24:
    int v4 = 9;
    goto LABEL_25;
  }
  uint64_t v5 = (long long *)(a2 + 18);
  unint64_t v6 = -1;
  uint64_t v7 = 21;
  while (v6 != 14)
  {
    int v8 = a2[v7];
    ++v6;
    v7 += 2;
    if (v8) {
      goto LABEL_9;
    }
  }
  unint64_t v6 = 15;
LABEL_9:
  if (v6 < 0xF || g_GeneratingConvertTerm)
  {
    if (g_GeneratingConvertTerm) {
      goto LABEL_3;
    }
    goto LABEL_24;
  }
  g_isTrivial = 0;
  unint64_t v9 = *(int **)(a1 + 32);
  int v10 = *v9;
  if (*v9 == 4) {
    goto LABEL_14;
  }
  if (v10 == 2)
  {
    int v17 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode) {
        int v21 = 4;
      }
      else {
        int v21 = 0;
      }
      unint64_t v18 = __binary64_to_bid128(v21, &my_fpsf, *((double *)a2 + 4));
      unint64_t v23 = v22;
    }
    else if (v17 == 2)
    {
      unint64_t v18 = *((void *)a2 + 6);
      unint64_t v23 = *((void *)a2 + 7);
    }
    else
    {
      if (v17 == 4) {
        unint64_t v18 = *((void *)a2 + 8);
      }
      else {
        unint64_t v18 = 0;
      }
      unint64_t v23 = 0x3040000000000000;
    }
    if (my_rnd_mode) {
      unsigned int v24 = 4;
    }
    else {
      unsigned int v24 = 0;
    }
    *((void *)v9 + 6) = __bid128_log10(v18, v23, v24, &my_fpsf);
    *((void *)v9 + 7) = v25;
    unint64_t v9 = *(int **)(a1 + 32);
  }
  else if (v10 == 1)
  {
LABEL_14:
    int v11 = *a2;
    if (*a2 == 1)
    {
      double v12 = *((double *)a2 + 4);
    }
    else if (v11 == 2)
    {
      if (my_rnd_mode) {
        int v19 = 4;
      }
      else {
        int v19 = 0;
      }
      double v12 = __bid128_to_binary64(*((void *)a2 + 6), *((void *)a2 + 7), v19, &my_fpsf);
    }
    else
    {
      double v12 = 0.0;
      if (v11 == 4)
      {
        unint64_t v13 = *((void *)a2 + 8);
        unint64_t v14 = (uint64_t)rint(1.79769313e308);
        BOOL v15 = (uint64_t)rint(2.22507386e-308) < v13 && v14 > v13;
        double v12 = (double)v13;
        if (!v15) {
          double v12 = NAN;
        }
      }
    }
    double v20 = log10(v12);
    *((double *)v9 + 4) = v20;
    *((void *)v9 + 8) = (uint64_t)rint(v20);
  }
  long long v26 = *v5;
  long long v27 = v5[1];
  long long v28 = v5[2];
  *(_OWORD *)(v9 + 30) = v5[3];
  *(_OWORD *)(v9 + 26) = v28;
  *(_OWORD *)(v9 + 22) = v27;
  *(_OWORD *)(v9 + 18) = v26;
  uint64_t result = (__n128)v5[4];
  long long v29 = v5[5];
  long long v30 = v5[6];
  *(_OWORD *)(v9 + 46) = v5[7];
  *(_OWORD *)(v9 + 42) = v30;
  *(_OWORD *)(v9 + 38) = v29;
  *(__n128 *)(v9 + 34) = result;
  return result;
}

void functionLogBase(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionLogBase_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

void __functionLogBase_block_invoke(uint64_t a1, int *a2, int *a3)
{
  if (!a3[19])
  {
    uint64_t v5 = (long long *)(a3 + 18);
    unint64_t v6 = -1;
    uint64_t v7 = 21;
    while (v6 != 14)
    {
      int v8 = a3[v7];
      ++v6;
      v7 += 2;
      if (v8)
      {
        if (v6 < 0xF) {
          goto LABEL_7;
        }
        break;
      }
    }
    if (!a2[19])
    {
      unint64_t v12 = -1;
      uint64_t v13 = 21;
      while (v12 != 14)
      {
        int v14 = a2[v13];
        ++v12;
        v13 += 2;
        if (v14) {
          goto LABEL_17;
        }
      }
      unint64_t v12 = 15;
LABEL_17:
      int v9 = g_GeneratingConvertTerm;
      if (v12 < 0xF || (g_GeneratingConvertTerm & 1) != 0) {
        goto LABEL_8;
      }
      g_isTrivial = 0;
      BOOL v15 = *(int **)(a1 + 32);
      int v16 = *v15;
      if (*v15 == 4) {
        goto LABEL_22;
      }
      if (v16 == 2)
      {
        int v22 = *a3;
        if (*a3 == 1)
        {
          if (my_rnd_mode) {
            int v35 = 4;
          }
          else {
            int v35 = 0;
          }
          unint64_t v23 = __binary64_to_bid128(v35, &my_fpsf, *((double *)a3 + 4));
        }
        else if (v22 == 2)
        {
          unint64_t v23 = *((void *)a3 + 6);
          unint64_t v36 = *((void *)a3 + 7);
        }
        else
        {
          if (v22 == 4) {
            unint64_t v23 = *((void *)a3 + 8);
          }
          else {
            unint64_t v23 = 0;
          }
          unint64_t v36 = 0x3040000000000000;
        }
        if (my_rnd_mode) {
          unsigned int v37 = 4;
        }
        else {
          unsigned int v37 = 0;
        }
        unint64_t v38 = __bid128_log10(v23, v36, v37, &my_fpsf);
        unint64_t v40 = v39;
        int v41 = *a2;
        if (*a2 == 1)
        {
          if (my_rnd_mode) {
            int v43 = 4;
          }
          else {
            int v43 = 0;
          }
          unint64_t v42 = __binary64_to_bid128(v43, &my_fpsf, *((double *)a2 + 4));
        }
        else if (v41 == 2)
        {
          unint64_t v42 = *((void *)a2 + 6);
          unint64_t v44 = *((void *)a2 + 7);
        }
        else
        {
          if (v41 == 4) {
            unint64_t v42 = *((void *)a2 + 8);
          }
          else {
            unint64_t v42 = 0;
          }
          unint64_t v44 = 0x3040000000000000;
        }
        if (my_rnd_mode) {
          unsigned int v45 = 4;
        }
        else {
          unsigned int v45 = 0;
        }
        unint64_t v47 = __bid128_log10(v42, v44, v45, &my_fpsf);
        if (my_rnd_mode) {
          int v48 = 4;
        }
        else {
          int v48 = 0;
        }
        *((void *)v15 + 6) = __bid128_div(v38, v40, v47, v46, v48, &my_fpsf);
        *((void *)v15 + 7) = v49;
        BOOL v15 = *(int **)(a1 + 32);
      }
      else if (v16 == 1)
      {
LABEL_22:
        int v17 = *a3;
        if (*a3 == 1)
        {
          double v18 = *((double *)a3 + 4);
        }
        else if (v17 == 2)
        {
          unint64_t v24 = *((void *)a3 + 6);
          unint64_t v25 = *((void *)a3 + 7);
          if (my_rnd_mode) {
            int v26 = 4;
          }
          else {
            int v26 = 0;
          }
          double v18 = __bid128_to_binary64(v24, v25, v26, &my_fpsf);
        }
        else
        {
          double v18 = 0.0;
          if (v17 == 4)
          {
            unint64_t v19 = *((void *)a3 + 8);
            unint64_t v20 = (uint64_t)rint(1.79769313e308);
            BOOL v21 = (uint64_t)rint(2.22507386e-308) < v19 && v20 > v19;
            double v18 = (double)v19;
            if (!v21) {
              double v18 = NAN;
            }
          }
        }
        double v27 = log10(v18);
        int v28 = *a2;
        if (*a2 == 1)
        {
          double v29 = *((double *)a2 + 4);
        }
        else if (v28 == 2)
        {
          if (my_rnd_mode) {
            int v33 = 4;
          }
          else {
            int v33 = 0;
          }
          double v29 = __bid128_to_binary64(*((void *)a2 + 6), *((void *)a2 + 7), v33, &my_fpsf);
        }
        else
        {
          double v29 = 0.0;
          if (v28 == 4)
          {
            unint64_t v30 = *((void *)a2 + 8);
            unint64_t v31 = (uint64_t)rint(1.79769313e308);
            BOOL v32 = (uint64_t)rint(2.22507386e-308) < v30 && v31 > v30;
            double v29 = (double)v30;
            if (!v32) {
              double v29 = NAN;
            }
          }
        }
        double v34 = v27 / log10(v29);
        *((double *)v15 + 4) = v34;
        *((void *)v15 + 8) = (uint64_t)rint(v34);
      }
      long long v50 = *v5;
      long long v51 = v5[1];
      long long v52 = v5[2];
      *(_OWORD *)(v15 + 30) = v5[3];
      *(_OWORD *)(v15 + 26) = v52;
      *(_OWORD *)(v15 + 22) = v51;
      *(_OWORD *)(v15 + 18) = v50;
      long long v53 = v5[4];
      long long v54 = v5[5];
      long long v55 = v5[6];
      *(_OWORD *)(v15 + 46) = v5[7];
      *(_OWORD *)(v15 + 42) = v55;
      *(_OWORD *)(v15 + 38) = v54;
      *(_OWORD *)(v15 + 34) = v53;
      return;
    }
  }
LABEL_7:
  int v9 = g_GeneratingConvertTerm;
LABEL_8:
  uint64_t v10 = *(void *)(a1 + 32);
  if (v9) {
    int v11 = 11;
  }
  else {
    int v11 = 9;
  }
  *(_DWORD *)(v10 + 204) = v11;
  *(void *)(v10 + 48) = 0;
  *(void *)(v10 + 56) = 0x7C00000000000000;
}

void functionSine(uint64_t a1, uint64_t a2)
{
  if (g_assumeDegrees)
  {
    v4[0] = MEMORY[0x1E4F143A8];
    v4[1] = 3221225472;
    v4[2] = __functionSinD_block_invoke;
    v4[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v4[4] = a2;
    int v2 = v4;
  }
  else
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    void v3[2] = __functionSine_block_invoke;
    v3[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v3[4] = a2;
    int v2 = v3;
  }
  evaluateUnary(a1, a2, v2);
}

void __functionSinD_block_invoke(uint64_t a1, int *a2)
{
  uint64_t v4 = (uint64_t)(a2 + 18);
  if ((UnitCountHasNonAngleUnits((uint64_t)(a2 + 18)) & 1) != 0 || g_GeneratingConvertTerm)
  {
    uint64_t v7 = *(void *)(a1 + 32);
    if (g_GeneratingConvertTerm) {
      int v8 = 11;
    }
    else {
      int v8 = 10;
    }
    *(_DWORD *)(v7 + 204) = v8;
    *(void *)(v7 + 48) = 0;
    *(void *)(v7 + 56) = 0x7C00000000000000;
  }
  else
  {
    g_isTrivial = 0;
    int v39 = 0;
    int v5 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode) {
        int v9 = 4;
      }
      else {
        int v9 = 0;
      }
      unint64_t v6 = __binary64_to_bid128(v9, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v5 == 2)
    {
      unint64_t v6 = *((void *)a2 + 6);
      unint64_t v10 = *((void *)a2 + 7);
    }
    else
    {
      if (v5 == 4) {
        unint64_t v6 = *((void *)a2 + 8);
      }
      else {
        unint64_t v6 = 0;
      }
      unint64_t v10 = 0x3040000000000000;
    }
    unint64_t v11 = UnitCountRequireDegrees(v6, v10, v4, &v39);
    uint64_t v13 = v12;
    if (DecimalToRadians_initialized == 1)
    {
      unint64_t v14 = DecimalToRadians_to_radians_0;
      uint64_t v15 = *(void *)algn_1EA0E0808;
    }
    else
    {
      DecimalToRadians_initialized = 1;
      int v40 = 0;
      if (DecimalPi_initialized == 1)
      {
        unint64_t v16 = DecimalPi_pi_0;
        unint64_t v17 = *(void *)algn_1EA0E07E8;
      }
      else
      {
        DecimalPi_initialized = 1;
        int v41 = 0;
        unint64_t v16 = __bid128_from_string("3.14159265358979323846264338327950288", 4, &v41);
        DecimalPi_pi_0 = v16;
        *(void *)algn_1EA0E07E8 = v17;
      }
      unint64_t v14 = __bid128_div(v16, v17, 0xB4uLL, 0x3040000000000000uLL, 4, &v40);
      uint64_t v15 = v18;
      DecimalToRadians_to_radians_0 = v14;
      *(void *)algn_1EA0E0808 = v18;
    }
    if (my_rnd_mode) {
      unsigned int v19 = 4;
    }
    else {
      unsigned int v19 = 0;
    }
    unint64_t v20 = __bid128_mul(v11, v13, v14, v15, v19, &my_fpsf);
    int v22 = *(int **)(a1 + 32);
    if (v39)
    {
      v22[51] = v39;
      *((void *)v22 + 6) = 0;
      *((void *)v22 + 7) = 0x7C00000000000000;
      return;
    }
    int v23 = *v22;
    if (*v22 == 4)
    {
LABEL_32:
      if (my_rnd_mode) {
        int v24 = 4;
      }
      else {
        int v24 = 0;
      }
      double v25 = __bid128_to_binary64(v20, v21, v24, &my_fpsf);
      double v26 = sin(v25);
      *((double *)v22 + 4) = v26;
      *((void *)v22 + 8) = (uint64_t)rint(v26);
      return;
    }
    if (v23 != 2)
    {
      if (v23 != 1) {
        return;
      }
      goto LABEL_32;
    }
    if (my_rnd_mode) {
      unsigned int v27 = 4;
    }
    else {
      unsigned int v27 = 0;
    }
    unint64_t v28 = __bid128_sin(v20, v21, v27);
    unint64_t v30 = v29;
    if (DecimalTrigZeroThresholdNegative_initialized == 1)
    {
      unint64_t v31 = DecimalTrigZeroThresholdNegative_threshold_0;
      unint64_t v32 = *(void *)algn_1EA0E0768;
    }
    else
    {
      DecimalTrigZeroThresholdNegative_initialized = 1;
      int v41 = 0;
      unint64_t v31 = __bid128_pow(0xAuLL, 0xB040000000000000, 0x1FuLL, 0xB040000000000000, 4u, &v41);
      unint64_t v32 = v33;
      DecimalTrigZeroThresholdNegative_threshold_0 = v31;
      *(void *)algn_1EA0E0768 = v33;
    }
    if (__bid128_quiet_greater_equal(v28, v30, v31, v32, &my_fpsf)
      && (DecimalTrigZeroThresholdPositive_initialized != 1
        ? (DecimalTrigZeroThresholdPositive_initialized = 1,
           int v41 = 0,
           unint64_t v34 = __bid128_pow(0xAuLL, 0x3040000000000000uLL, 0x1FuLL, 0xB040000000000000, 4u, &v41),
           uint64_t v35 = v36,
           DecimalTrigZeroThresholdPositive_threshold_0 = v34,
           *(void *)algn_1EA0E0788 = v36)
        : (unint64_t v34 = DecimalTrigZeroThresholdPositive_threshold_0, v35 = *(void *)algn_1EA0E0788),
          __bid128_quiet_less_equal(v28, v30, v34, v35, &my_fpsf)))
    {
      uint64_t v37 = *(void *)(a1 + 32);
      *(void *)(v37 + 48) = 0;
      *(void *)(v37 + 56) = 0x3040000000000000;
    }
    else
    {
      uint64_t v38 = *(void *)(a1 + 32);
      *(void *)(v38 + 48) = v28;
      *(void *)(v38 + 56) = v30;
    }
  }
}

void __functionSine_block_invoke(uint64_t a1, int *a2)
{
  uint64_t v4 = (uint64_t)(a2 + 18);
  if ((UnitCountHasNonAngleUnits((uint64_t)(a2 + 18)) & 1) != 0 || g_GeneratingConvertTerm)
  {
    uint64_t v7 = *(void *)(a1 + 32);
    if (g_GeneratingConvertTerm) {
      int v8 = 11;
    }
    else {
      int v8 = 10;
    }
    *(_DWORD *)(v7 + 204) = v8;
    *(void *)(v7 + 48) = 0;
    *(void *)(v7 + 56) = 0x7C00000000000000;
  }
  else
  {
    g_isTrivial = 0;
    int v30 = 0;
    int v5 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode) {
        int v9 = 4;
      }
      else {
        int v9 = 0;
      }
      unint64_t v6 = __binary64_to_bid128(v9, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v5 == 2)
    {
      unint64_t v6 = *((void *)a2 + 6);
      unint64_t v10 = *((void *)a2 + 7);
    }
    else
    {
      if (v5 == 4) {
        unint64_t v6 = *((void *)a2 + 8);
      }
      else {
        unint64_t v6 = 0;
      }
      unint64_t v10 = 0x3040000000000000;
    }
    unint64_t v11 = UnitCountRequireRadians(v6, v10, v4, &v30);
    uint64_t v13 = *(int **)(a1 + 32);
    if (v30)
    {
      v13[51] = v30;
      *((void *)v13 + 6) = 0;
      *((void *)v13 + 7) = 0x7C00000000000000;
      return;
    }
    int v14 = *v13;
    if (*v13 == 4)
    {
LABEL_23:
      if (my_rnd_mode) {
        int v15 = 4;
      }
      else {
        int v15 = 0;
      }
      double v16 = __bid128_to_binary64(v11, v12, v15, &my_fpsf);
      double v17 = sin(v16);
      *((double *)v13 + 4) = v17;
      *((void *)v13 + 8) = (uint64_t)rint(v17);
      return;
    }
    if (v14 != 2)
    {
      if (v14 != 1) {
        return;
      }
      goto LABEL_23;
    }
    if (my_rnd_mode) {
      unsigned int v18 = 4;
    }
    else {
      unsigned int v18 = 0;
    }
    unint64_t v19 = __bid128_sin(v11, v12, v18);
    unint64_t v21 = v20;
    if (DecimalTrigZeroThresholdNegative_initialized == 1)
    {
      unint64_t v22 = DecimalTrigZeroThresholdNegative_threshold_0;
      unint64_t v23 = *(void *)algn_1EA0E0768;
    }
    else
    {
      DecimalTrigZeroThresholdNegative_initialized = 1;
      int v31 = 0;
      unint64_t v22 = __bid128_pow(0xAuLL, 0xB040000000000000, 0x1FuLL, 0xB040000000000000, 4u, &v31);
      unint64_t v23 = v24;
      DecimalTrigZeroThresholdNegative_threshold_0 = v22;
      *(void *)algn_1EA0E0768 = v24;
    }
    if (__bid128_quiet_greater_equal(v19, v21, v22, v23, &my_fpsf)
      && (DecimalTrigZeroThresholdPositive_initialized != 1
        ? (DecimalTrigZeroThresholdPositive_initialized = 1,
           int v32 = 0,
           unint64_t v25 = __bid128_pow(0xAuLL, 0x3040000000000000uLL, 0x1FuLL, 0xB040000000000000, 4u, &v32),
           uint64_t v26 = v27,
           DecimalTrigZeroThresholdPositive_threshold_0 = v25,
           *(void *)algn_1EA0E0788 = v27)
        : (unint64_t v25 = DecimalTrigZeroThresholdPositive_threshold_0, v26 = *(void *)algn_1EA0E0788),
          __bid128_quiet_less_equal(v19, v21, v25, v26, &my_fpsf)))
    {
      uint64_t v28 = *(void *)(a1 + 32);
      *(void *)(v28 + 48) = 0;
      *(void *)(v28 + 56) = 0x3040000000000000;
    }
    else
    {
      uint64_t v29 = *(void *)(a1 + 32);
      *(void *)(v29 + 48) = v19;
      *(void *)(v29 + 56) = v21;
    }
  }
}

void functionSinD(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionSinD_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void functionCos(uint64_t a1, uint64_t a2)
{
  if (g_assumeDegrees)
  {
    v4[0] = MEMORY[0x1E4F143A8];
    v4[1] = 3221225472;
    v4[2] = __functionCosD_block_invoke;
    v4[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v4[4] = a2;
    int v2 = v4;
  }
  else
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    void v3[2] = __functionCos_block_invoke;
    v3[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v3[4] = a2;
    int v2 = v3;
  }
  evaluateUnary(a1, a2, v2);
}

void __functionCosD_block_invoke(uint64_t a1, int *a2)
{
  uint64_t v4 = (uint64_t)(a2 + 18);
  if ((UnitCountHasNonAngleUnits((uint64_t)(a2 + 18)) & 1) != 0 || g_GeneratingConvertTerm)
  {
    uint64_t v7 = *(void *)(a1 + 32);
    if (g_GeneratingConvertTerm) {
      int v8 = 11;
    }
    else {
      int v8 = 10;
    }
    *(_DWORD *)(v7 + 204) = v8;
    *(void *)(v7 + 48) = 0;
    *(void *)(v7 + 56) = 0x7C00000000000000;
  }
  else
  {
    g_isTrivial = 0;
    int v39 = 0;
    int v5 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode) {
        int v9 = 4;
      }
      else {
        int v9 = 0;
      }
      unint64_t v6 = __binary64_to_bid128(v9, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v5 == 2)
    {
      unint64_t v6 = *((void *)a2 + 6);
      unint64_t v10 = *((void *)a2 + 7);
    }
    else
    {
      if (v5 == 4) {
        unint64_t v6 = *((void *)a2 + 8);
      }
      else {
        unint64_t v6 = 0;
      }
      unint64_t v10 = 0x3040000000000000;
    }
    unint64_t v11 = UnitCountRequireDegrees(v6, v10, v4, &v39);
    uint64_t v13 = v12;
    if (DecimalToRadians_initialized == 1)
    {
      unint64_t v14 = DecimalToRadians_to_radians_0;
      uint64_t v15 = *(void *)algn_1EA0E0808;
    }
    else
    {
      DecimalToRadians_initialized = 1;
      int v40 = 0;
      if (DecimalPi_initialized == 1)
      {
        unint64_t v16 = DecimalPi_pi_0;
        unint64_t v17 = *(void *)algn_1EA0E07E8;
      }
      else
      {
        DecimalPi_initialized = 1;
        int v41 = 0;
        unint64_t v16 = __bid128_from_string("3.14159265358979323846264338327950288", 4, &v41);
        DecimalPi_pi_0 = v16;
        *(void *)algn_1EA0E07E8 = v17;
      }
      unint64_t v14 = __bid128_div(v16, v17, 0xB4uLL, 0x3040000000000000uLL, 4, &v40);
      uint64_t v15 = v18;
      DecimalToRadians_to_radians_0 = v14;
      *(void *)algn_1EA0E0808 = v18;
    }
    if (my_rnd_mode) {
      unsigned int v19 = 4;
    }
    else {
      unsigned int v19 = 0;
    }
    unint64_t v20 = __bid128_mul(v11, v13, v14, v15, v19, &my_fpsf);
    unint64_t v22 = *(int **)(a1 + 32);
    if (v39)
    {
      v22[51] = v39;
      *((void *)v22 + 6) = 0;
      *((void *)v22 + 7) = 0x7C00000000000000;
      return;
    }
    int v23 = *v22;
    if (*v22 == 4)
    {
LABEL_32:
      if (my_rnd_mode) {
        int v24 = 4;
      }
      else {
        int v24 = 0;
      }
      double v25 = __bid128_to_binary64(v20, v21, v24, &my_fpsf);
      double v26 = cos(v25);
      *((double *)v22 + 4) = v26;
      *((void *)v22 + 8) = (uint64_t)rint(v26);
      return;
    }
    if (v23 != 2)
    {
      if (v23 != 1) {
        return;
      }
      goto LABEL_32;
    }
    if (my_rnd_mode) {
      int v27 = 4;
    }
    else {
      int v27 = 0;
    }
    unint64_t v28 = __bid128_cos(v20, v21, v27);
    unint64_t v30 = v29;
    if (DecimalTrigZeroThresholdNegative_initialized == 1)
    {
      unint64_t v31 = DecimalTrigZeroThresholdNegative_threshold_0;
      unint64_t v32 = *(void *)algn_1EA0E0768;
    }
    else
    {
      DecimalTrigZeroThresholdNegative_initialized = 1;
      int v41 = 0;
      unint64_t v31 = __bid128_pow(0xAuLL, 0xB040000000000000, 0x1FuLL, 0xB040000000000000, 4u, &v41);
      unint64_t v32 = v33;
      DecimalTrigZeroThresholdNegative_threshold_0 = v31;
      *(void *)algn_1EA0E0768 = v33;
    }
    if (__bid128_quiet_greater_equal(v28, v30, v31, v32, &my_fpsf)
      && (DecimalTrigZeroThresholdPositive_initialized != 1
        ? (DecimalTrigZeroThresholdPositive_initialized = 1,
           int v41 = 0,
           unint64_t v34 = __bid128_pow(0xAuLL, 0x3040000000000000uLL, 0x1FuLL, 0xB040000000000000, 4u, &v41),
           uint64_t v35 = v36,
           DecimalTrigZeroThresholdPositive_threshold_0 = v34,
           *(void *)algn_1EA0E0788 = v36)
        : (unint64_t v34 = DecimalTrigZeroThresholdPositive_threshold_0, v35 = *(void *)algn_1EA0E0788),
          __bid128_quiet_less_equal(v28, v30, v34, v35, &my_fpsf)))
    {
      uint64_t v37 = *(void *)(a1 + 32);
      *(void *)(v37 + 48) = 0;
      *(void *)(v37 + 56) = 0x3040000000000000;
    }
    else
    {
      uint64_t v38 = *(void *)(a1 + 32);
      *(void *)(v38 + 48) = v28;
      *(void *)(v38 + 56) = v30;
    }
  }
}

void __functionCos_block_invoke(uint64_t a1, int *a2)
{
  uint64_t v4 = (uint64_t)(a2 + 18);
  if ((UnitCountHasNonAngleUnits((uint64_t)(a2 + 18)) & 1) != 0 || g_GeneratingConvertTerm)
  {
    uint64_t v7 = *(void *)(a1 + 32);
    if (g_GeneratingConvertTerm) {
      int v8 = 11;
    }
    else {
      int v8 = 10;
    }
    *(_DWORD *)(v7 + 204) = v8;
    *(void *)(v7 + 48) = 0;
    *(void *)(v7 + 56) = 0x7C00000000000000;
  }
  else
  {
    g_isTrivial = 0;
    int v30 = 0;
    int v5 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode) {
        int v9 = 4;
      }
      else {
        int v9 = 0;
      }
      unint64_t v6 = __binary64_to_bid128(v9, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v5 == 2)
    {
      unint64_t v6 = *((void *)a2 + 6);
      unint64_t v10 = *((void *)a2 + 7);
    }
    else
    {
      if (v5 == 4) {
        unint64_t v6 = *((void *)a2 + 8);
      }
      else {
        unint64_t v6 = 0;
      }
      unint64_t v10 = 0x3040000000000000;
    }
    unint64_t v11 = UnitCountRequireRadians(v6, v10, v4, &v30);
    uint64_t v13 = *(int **)(a1 + 32);
    if (v30)
    {
      v13[51] = v30;
      *((void *)v13 + 6) = 0;
      *((void *)v13 + 7) = 0x7C00000000000000;
      return;
    }
    int v14 = *v13;
    if (*v13 == 4)
    {
LABEL_23:
      if (my_rnd_mode) {
        int v15 = 4;
      }
      else {
        int v15 = 0;
      }
      double v16 = __bid128_to_binary64(v11, v12, v15, &my_fpsf);
      double v17 = cos(v16);
      *((double *)v13 + 4) = v17;
      *((void *)v13 + 8) = (uint64_t)rint(v17);
      return;
    }
    if (v14 != 2)
    {
      if (v14 != 1) {
        return;
      }
      goto LABEL_23;
    }
    if (my_rnd_mode) {
      int v18 = 4;
    }
    else {
      int v18 = 0;
    }
    unint64_t v19 = __bid128_cos(v11, v12, v18);
    unint64_t v21 = v20;
    if (DecimalTrigZeroThresholdNegative_initialized == 1)
    {
      unint64_t v22 = DecimalTrigZeroThresholdNegative_threshold_0;
      unint64_t v23 = *(void *)algn_1EA0E0768;
    }
    else
    {
      DecimalTrigZeroThresholdNegative_initialized = 1;
      int v31 = 0;
      unint64_t v22 = __bid128_pow(0xAuLL, 0xB040000000000000, 0x1FuLL, 0xB040000000000000, 4u, &v31);
      unint64_t v23 = v24;
      DecimalTrigZeroThresholdNegative_threshold_0 = v22;
      *(void *)algn_1EA0E0768 = v24;
    }
    if (__bid128_quiet_greater_equal(v19, v21, v22, v23, &my_fpsf)
      && (DecimalTrigZeroThresholdPositive_initialized != 1
        ? (DecimalTrigZeroThresholdPositive_initialized = 1,
           int v32 = 0,
           unint64_t v25 = __bid128_pow(0xAuLL, 0x3040000000000000uLL, 0x1FuLL, 0xB040000000000000, 4u, &v32),
           uint64_t v26 = v27,
           DecimalTrigZeroThresholdPositive_threshold_0 = v25,
           *(void *)algn_1EA0E0788 = v27)
        : (unint64_t v25 = DecimalTrigZeroThresholdPositive_threshold_0, v26 = *(void *)algn_1EA0E0788),
          __bid128_quiet_less_equal(v19, v21, v25, v26, &my_fpsf)))
    {
      uint64_t v28 = *(void *)(a1 + 32);
      *(void *)(v28 + 48) = 0;
      *(void *)(v28 + 56) = 0x3040000000000000;
    }
    else
    {
      uint64_t v29 = *(void *)(a1 + 32);
      *(void *)(v29 + 48) = v19;
      *(void *)(v29 + 56) = v21;
    }
  }
}

void functionCosD(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionCosD_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void functionTan(uint64_t a1, uint64_t a2)
{
  if (g_assumeDegrees)
  {
    v4[0] = MEMORY[0x1E4F143A8];
    v4[1] = 3221225472;
    v4[2] = __functionTanD_block_invoke;
    v4[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v4[4] = a2;
    int v2 = v4;
  }
  else
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    void v3[2] = __functionTan_block_invoke;
    v3[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v3[4] = a2;
    int v2 = v3;
  }
  evaluateUnary(a1, a2, v2);
}

void __functionTanD_block_invoke(uint64_t a1, int *a2)
{
  uint64_t v4 = (uint64_t)(a2 + 18);
  if ((UnitCountHasNonAngleUnits((uint64_t)(a2 + 18)) & 1) != 0 || g_GeneratingConvertTerm)
  {
    uint64_t v7 = *(void *)(a1 + 32);
    if (g_GeneratingConvertTerm) {
      int v8 = 11;
    }
    else {
      int v8 = 10;
    }
    *(_DWORD *)(v7 + 204) = v8;
    *(void *)(v7 + 48) = 0;
    *(void *)(v7 + 56) = 0x7C00000000000000;
  }
  else
  {
    g_isTrivial = 0;
    int v45 = 0;
    int v5 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode) {
        int v9 = 4;
      }
      else {
        int v9 = 0;
      }
      unint64_t v6 = __binary64_to_bid128(v9, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v5 == 2)
    {
      unint64_t v6 = *((void *)a2 + 6);
      unint64_t v10 = *((void *)a2 + 7);
    }
    else
    {
      if (v5 == 4) {
        unint64_t v6 = *((void *)a2 + 8);
      }
      else {
        unint64_t v6 = 0;
      }
      unint64_t v10 = 0x3040000000000000;
    }
    unint64_t v11 = UnitCountRequireDegrees(v6, v10, v4, &v45);
    uint64_t v13 = v12;
    if (DecimalToRadians_initialized == 1)
    {
      unint64_t v14 = DecimalToRadians_to_radians_0;
      uint64_t v15 = *(void *)algn_1EA0E0808;
    }
    else
    {
      DecimalToRadians_initialized = 1;
      int v46 = 0;
      if (DecimalPi_initialized == 1)
      {
        unint64_t v16 = DecimalPi_pi_0;
        unint64_t v17 = *(void *)algn_1EA0E07E8;
      }
      else
      {
        DecimalPi_initialized = 1;
        int v47 = 0;
        unint64_t v16 = __bid128_from_string("3.14159265358979323846264338327950288", 4, &v47);
        DecimalPi_pi_0 = v16;
        *(void *)algn_1EA0E07E8 = v17;
      }
      unint64_t v14 = __bid128_div(v16, v17, 0xB4uLL, 0x3040000000000000uLL, 4, &v46);
      uint64_t v15 = v18;
      DecimalToRadians_to_radians_0 = v14;
      *(void *)algn_1EA0E0808 = v18;
    }
    if (my_rnd_mode) {
      unsigned int v19 = 4;
    }
    else {
      unsigned int v19 = 0;
    }
    unint64_t v20 = __bid128_mul(v11, v13, v14, v15, v19, &my_fpsf);
    unint64_t v22 = *(int **)(a1 + 32);
    if (v45)
    {
      v22[51] = v45;
      *((void *)v22 + 6) = 0;
      *((void *)v22 + 7) = 0x7C00000000000000;
      return;
    }
    int v23 = *v22;
    if (*v22 == 4)
    {
LABEL_32:
      if (my_rnd_mode) {
        int v24 = 4;
      }
      else {
        int v24 = 0;
      }
      double v25 = __bid128_to_binary64(v20, v21, v24, &my_fpsf);
      double v26 = tan(v25);
      *((double *)v22 + 4) = v26;
      *((void *)v22 + 8) = (uint64_t)rint(v26);
      return;
    }
    if (v23 != 2)
    {
      if (v23 != 1) {
        return;
      }
      goto LABEL_32;
    }
    if (my_rnd_mode) {
      unsigned int v27 = 4;
    }
    else {
      unsigned int v27 = 0;
    }
    unint64_t v28 = __bid128_tan(v20, v21, v27);
    unint64_t v30 = v29;
    if (DecimalTrigZeroThresholdNegative_initialized == 1)
    {
      unint64_t v31 = DecimalTrigZeroThresholdNegative_threshold_0;
      unint64_t v32 = *(void *)algn_1EA0E0768;
    }
    else
    {
      DecimalTrigZeroThresholdNegative_initialized = 1;
      int v47 = 0;
      unint64_t v31 = __bid128_pow(0xAuLL, 0xB040000000000000, 0x1FuLL, 0xB040000000000000, 4u, &v47);
      unint64_t v32 = v33;
      DecimalTrigZeroThresholdNegative_threshold_0 = v31;
      *(void *)algn_1EA0E0768 = v33;
    }
    if (__bid128_quiet_greater_equal(v28, v30, v31, v32, &my_fpsf)
      && (DecimalTrigZeroThresholdPositive_initialized != 1
        ? (DecimalTrigZeroThresholdPositive_initialized = 1,
           int v47 = 0,
           unint64_t v34 = __bid128_pow(0xAuLL, 0x3040000000000000uLL, 0x1FuLL, 0xB040000000000000, 4u, &v47),
           uint64_t v35 = v36,
           DecimalTrigZeroThresholdPositive_threshold_0 = v34,
           *(void *)algn_1EA0E0788 = v36)
        : (unint64_t v34 = DecimalTrigZeroThresholdPositive_threshold_0, v35 = *(void *)algn_1EA0E0788),
          __bid128_quiet_less_equal(v28, v30, v34, v35, &my_fpsf)))
    {
      uint64_t v37 = *(void *)(a1 + 32);
      uint64_t v38 = 0x3040000000000000;
    }
    else
    {
      if (DecimalTrigInfThresholdNegative_initialized == 1)
      {
        unint64_t v39 = DecimalTrigInfThresholdNegative_threshold_0;
        uint64_t v40 = *(void *)algn_1EA0E07A8;
      }
      else
      {
        DecimalTrigInfThresholdNegative_initialized = 1;
        int v47 = 0;
        unint64_t v39 = __bid128_pow(0xAuLL, 0xB040000000000000, 0x1FuLL, 0x3040000000000000uLL, 4u, &v47);
        uint64_t v40 = v41;
        DecimalTrigInfThresholdNegative_threshold_0 = v39;
        *(void *)algn_1EA0E07A8 = v41;
      }
      if (!__bid128_quiet_less_equal(v28, v30, v39, v40, &my_fpsf))
      {
        unint64_t v42 = DecimalTrigInfThresholdPositive();
        if (!__bid128_quiet_greater_equal(v28, v30, v42, v43, &my_fpsf))
        {
          uint64_t v44 = *(void *)(a1 + 32);
          *(void *)(v44 + 48) = v28;
          *(void *)(v44 + 56) = v30;
          return;
        }
      }
      uint64_t v37 = *(void *)(a1 + 32);
      *(_DWORD *)(v37 + 204) = 4;
      uint64_t v38 = 0x7C00000000000000;
    }
    *(void *)(v37 + 48) = 0;
    *(void *)(v37 + 56) = v38;
  }
}

void __functionTan_block_invoke(uint64_t a1, int *a2)
{
  uint64_t v4 = (uint64_t)(a2 + 18);
  if ((UnitCountHasNonAngleUnits((uint64_t)(a2 + 18)) & 1) != 0 || g_GeneratingConvertTerm)
  {
    uint64_t v7 = *(void *)(a1 + 32);
    if (g_GeneratingConvertTerm) {
      int v8 = 11;
    }
    else {
      int v8 = 10;
    }
    *(_DWORD *)(v7 + 204) = v8;
    *(void *)(v7 + 48) = 0;
    *(void *)(v7 + 56) = 0x7C00000000000000;
  }
  else
  {
    g_isTrivial = 0;
    int v36 = 0;
    int v5 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode) {
        int v9 = 4;
      }
      else {
        int v9 = 0;
      }
      unint64_t v6 = __binary64_to_bid128(v9, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v5 == 2)
    {
      unint64_t v6 = *((void *)a2 + 6);
      unint64_t v10 = *((void *)a2 + 7);
    }
    else
    {
      if (v5 == 4) {
        unint64_t v6 = *((void *)a2 + 8);
      }
      else {
        unint64_t v6 = 0;
      }
      unint64_t v10 = 0x3040000000000000;
    }
    unint64_t v11 = UnitCountRequireRadians(v6, v10, v4, &v36);
    uint64_t v13 = *(int **)(a1 + 32);
    if (v36)
    {
      v13[51] = v36;
      *((void *)v13 + 6) = 0;
      *((void *)v13 + 7) = 0x7C00000000000000;
      return;
    }
    int v14 = *v13;
    if (*v13 == 4)
    {
LABEL_23:
      if (my_rnd_mode) {
        int v15 = 4;
      }
      else {
        int v15 = 0;
      }
      double v16 = __bid128_to_binary64(v11, v12, v15, &my_fpsf);
      double v17 = tan(v16);
      *((double *)v13 + 4) = v17;
      *((void *)v13 + 8) = (uint64_t)rint(v17);
      return;
    }
    if (v14 != 2)
    {
      if (v14 != 1) {
        return;
      }
      goto LABEL_23;
    }
    if (my_rnd_mode) {
      unsigned int v18 = 4;
    }
    else {
      unsigned int v18 = 0;
    }
    unint64_t v19 = __bid128_tan(v11, v12, v18);
    unint64_t v21 = v20;
    if (DecimalTrigZeroThresholdNegative_initialized == 1)
    {
      unint64_t v22 = DecimalTrigZeroThresholdNegative_threshold_0;
      unint64_t v23 = *(void *)algn_1EA0E0768;
    }
    else
    {
      DecimalTrigZeroThresholdNegative_initialized = 1;
      int v37 = 0;
      unint64_t v22 = __bid128_pow(0xAuLL, 0xB040000000000000, 0x1FuLL, 0xB040000000000000, 4u, &v37);
      unint64_t v23 = v24;
      DecimalTrigZeroThresholdNegative_threshold_0 = v22;
      *(void *)algn_1EA0E0768 = v24;
    }
    if (__bid128_quiet_greater_equal(v19, v21, v22, v23, &my_fpsf)
      && (DecimalTrigZeroThresholdPositive_initialized != 1
        ? (DecimalTrigZeroThresholdPositive_initialized = 1,
           int v37 = 0,
           unint64_t v25 = __bid128_pow(0xAuLL, 0x3040000000000000uLL, 0x1FuLL, 0xB040000000000000, 4u, &v37),
           uint64_t v26 = v27,
           DecimalTrigZeroThresholdPositive_threshold_0 = v25,
           *(void *)algn_1EA0E0788 = v27)
        : (unint64_t v25 = DecimalTrigZeroThresholdPositive_threshold_0, v26 = *(void *)algn_1EA0E0788),
          __bid128_quiet_less_equal(v19, v21, v25, v26, &my_fpsf)))
    {
      uint64_t v28 = *(void *)(a1 + 32);
      uint64_t v29 = 0x3040000000000000;
    }
    else
    {
      if (DecimalTrigInfThresholdNegative_initialized == 1)
      {
        unint64_t v30 = DecimalTrigInfThresholdNegative_threshold_0;
        uint64_t v31 = *(void *)algn_1EA0E07A8;
      }
      else
      {
        DecimalTrigInfThresholdNegative_initialized = 1;
        int v37 = 0;
        unint64_t v30 = __bid128_pow(0xAuLL, 0xB040000000000000, 0x1FuLL, 0x3040000000000000uLL, 4u, &v37);
        uint64_t v31 = v32;
        DecimalTrigInfThresholdNegative_threshold_0 = v30;
        *(void *)algn_1EA0E07A8 = v32;
      }
      if (!__bid128_quiet_less_equal(v19, v21, v30, v31, &my_fpsf))
      {
        unint64_t v33 = DecimalTrigInfThresholdPositive();
        if (!__bid128_quiet_greater_equal(v19, v21, v33, v34, &my_fpsf))
        {
          uint64_t v35 = *(void *)(a1 + 32);
          *(void *)(v35 + 48) = v19;
          *(void *)(v35 + 56) = v21;
          return;
        }
      }
      uint64_t v28 = *(void *)(a1 + 32);
      *(_DWORD *)(v28 + 204) = 4;
      uint64_t v29 = 0x7C00000000000000;
    }
    *(void *)(v28 + 48) = 0;
    *(void *)(v28 + 56) = v29;
  }
}

uint64_t DecimalTrigInfThresholdPositive()
{
  if (DecimalTrigInfThresholdPositive_initialized == 1) {
    return DecimalTrigInfThresholdPositive_threshold_0;
  }
  DecimalTrigInfThresholdPositive_initialized = 1;
  int v2 = 0;
  uint64_t result = __bid128_pow(0xAuLL, 0x3040000000000000uLL, 0x1FuLL, 0x3040000000000000uLL, 4u, &v2);
  DecimalTrigInfThresholdPositive_threshold_0 = result;
  *(void *)algn_1EA0E07C8 = v1;
  return result;
}

void functionTanD(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionTanD_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void functionASin(uint64_t a1, uint64_t a2)
{
  if (g_assumeDegrees)
  {
    v4[0] = MEMORY[0x1E4F143A8];
    v4[1] = 3221225472;
    v4[2] = __functionASinD_block_invoke;
    v4[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v4[4] = a2;
    int v2 = v4;
  }
  else
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    void v3[2] = __functionASin_block_invoke;
    v3[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v3[4] = a2;
    int v2 = v3;
  }
  evaluateUnary(a1, a2, v2);
}

void __functionASinD_block_invoke(uint64_t a1, int *a2)
{
  if (a2[19])
  {
    if (g_GeneratingConvertTerm)
    {
LABEL_3:
      int v3 = 11;
LABEL_25:
      uint64_t v15 = *(void *)(a1 + 32);
      *(_DWORD *)(v15 + 204) = v3;
      *(void *)(v15 + 48) = 0;
      *(void *)(v15 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    int v3 = 9;
    goto LABEL_25;
  }
  unint64_t v5 = -1;
  uint64_t v6 = 21;
  while (v5 != 14)
  {
    int v7 = a2[v6];
    ++v5;
    v6 += 2;
    if (v7) {
      goto LABEL_9;
    }
  }
  unint64_t v5 = 15;
LABEL_9:
  if (v5 < 0xF || g_GeneratingConvertTerm)
  {
    if (g_GeneratingConvertTerm) {
      goto LABEL_3;
    }
    goto LABEL_24;
  }
  g_isTrivial = 0;
  int v8 = *(double **)(a1 + 32);
  int v9 = *(_DWORD *)v8;
  if (*(_DWORD *)v8 == 4) {
    goto LABEL_14;
  }
  if (v9 != 2)
  {
    if (v9 != 1) {
      return;
    }
LABEL_14:
    int v10 = *a2;
    if (*a2 == 1)
    {
      double v11 = *((double *)a2 + 4);
    }
    else if (v10 == 2)
    {
      unint64_t v18 = *((void *)a2 + 6);
      unint64_t v19 = *((void *)a2 + 7);
      if (my_rnd_mode) {
        int v20 = 4;
      }
      else {
        int v20 = 0;
      }
      double v11 = __bid128_to_binary64(v18, v19, v20, &my_fpsf);
    }
    else
    {
      double v11 = 0.0;
      if (v10 == 4)
      {
        unint64_t v12 = *((void *)a2 + 8);
        unint64_t v13 = (uint64_t)rint(1.79769313e308);
        BOOL v14 = (uint64_t)rint(2.22507386e-308) < v12 && v13 > v12;
        double v11 = (double)v12;
        if (!v14) {
          double v11 = NAN;
        }
      }
    }
    double v21 = asin(v11) * 180.0 / 3.14159265;
    v8[4] = v21;
    *((void *)v8 + 8) = (uint64_t)rint(v21);
    return;
  }
  int v16 = *a2;
  if (*a2 == 1)
  {
    if (my_rnd_mode) {
      int v22 = 4;
    }
    else {
      int v22 = 0;
    }
    unint64_t v17 = __binary64_to_bid128(v22, &my_fpsf, *((double *)a2 + 4));
    unint64_t v24 = v23;
  }
  else if (v16 == 2)
  {
    unint64_t v17 = *((void *)a2 + 6);
    unint64_t v24 = *((void *)a2 + 7);
  }
  else
  {
    if (v16 == 4) {
      unint64_t v17 = *((void *)a2 + 8);
    }
    else {
      unint64_t v17 = 0;
    }
    unint64_t v24 = 0x3040000000000000;
  }
  unint64_t v25 = 0x3040000000000000;
  if (__bid128_quiet_equal(1uLL, 0x3040000000000000uLL, v17, v24, &my_fpsf)
    || ((int v26 = *a2, *a2 == 1)
      ? (!my_rnd_mode ? (v28 = 0) : (v28 = 4), unint64_t v27 = __binary64_to_bid128(v28, &my_fpsf, *((double *)a2 + 4)), v30 = v29)
      : v26 == 2
      ? (unint64_t v27 = *((void *)a2 + 6), v30 = *((void *)a2 + 7))
      : (v26 != 4 ? (unint64_t v27 = 0) : (unint64_t v27 = *((void *)a2 + 8)), v30 = 0x3040000000000000),
        unint64_t v25 = 0xB040000000000000,
        __bid128_quiet_equal(1uLL, 0xB040000000000000, v27, v30, &my_fpsf)))
  {
    *((void *)v8 + 6) = 90;
    *((void *)v8 + 7) = v25;
  }
  else
  {
    unint64_t v31 = treeDecimalValue((double *)a2);
    if (my_rnd_mode) {
      unsigned int v33 = 4;
    }
    else {
      unsigned int v33 = 0;
    }
    unint64_t v34 = __bid128_asin(v31, v32, v33);
    uint64_t v36 = v35;
    uint64_t v37 = *(void *)(a1 + 32);
    unint64_t v39 = DecimalToDegrees();
    if (my_rnd_mode) {
      unsigned int v40 = 4;
    }
    else {
      unsigned int v40 = 0;
    }
    *(void *)(v37 + 48) = __bid128_mul(v34, v36, v39, v38, v40, &my_fpsf);
    *(void *)(v37 + 56) = v41;
  }
}

void __functionASin_block_invoke(uint64_t a1, int *a2)
{
  if (a2[19])
  {
    if (g_GeneratingConvertTerm)
    {
LABEL_3:
      int v2 = 11;
LABEL_25:
      uint64_t v13 = *(void *)(a1 + 32);
      *(_DWORD *)(v13 + 204) = v2;
      *(void *)(v13 + 48) = 0;
      *(void *)(v13 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    int v2 = 9;
    goto LABEL_25;
  }
  unint64_t v3 = -1;
  uint64_t v4 = 21;
  while (v3 != 14)
  {
    int v5 = a2[v4];
    ++v3;
    v4 += 2;
    if (v5) {
      goto LABEL_9;
    }
  }
  unint64_t v3 = 15;
LABEL_9:
  if (v3 < 0xF || g_GeneratingConvertTerm)
  {
    if (g_GeneratingConvertTerm) {
      goto LABEL_3;
    }
    goto LABEL_24;
  }
  g_isTrivial = 0;
  uint64_t v6 = *(int **)(a1 + 32);
  int v7 = *v6;
  if (*v6 != 4)
  {
    if (v7 == 2)
    {
      int v14 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode) {
          int v18 = 4;
        }
        else {
          int v18 = 0;
        }
        unint64_t v15 = __binary64_to_bid128(v18, &my_fpsf, *((double *)a2 + 4));
        unint64_t v20 = v19;
      }
      else if (v14 == 2)
      {
        unint64_t v15 = *((void *)a2 + 6);
        unint64_t v20 = *((void *)a2 + 7);
      }
      else
      {
        if (v14 == 4) {
          unint64_t v15 = *((void *)a2 + 8);
        }
        else {
          unint64_t v15 = 0;
        }
        unint64_t v20 = 0x3040000000000000;
      }
      if (my_rnd_mode) {
        unsigned int v21 = 4;
      }
      else {
        unsigned int v21 = 0;
      }
      *((void *)v6 + 6) = __bid128_asin(v15, v20, v21);
      *((void *)v6 + 7) = v22;
      return;
    }
    if (v7 != 1) {
      return;
    }
  }
  int v8 = *a2;
  if (*a2 == 1)
  {
    double v9 = *((double *)a2 + 4);
  }
  else if (v8 == 2)
  {
    if (my_rnd_mode) {
      int v16 = 4;
    }
    else {
      int v16 = 0;
    }
    double v9 = __bid128_to_binary64(*((void *)a2 + 6), *((void *)a2 + 7), v16, &my_fpsf);
  }
  else
  {
    double v9 = 0.0;
    if (v8 == 4)
    {
      unint64_t v10 = *((void *)a2 + 8);
      unint64_t v11 = (uint64_t)rint(1.79769313e308);
      BOOL v12 = (uint64_t)rint(2.22507386e-308) < v10 && v11 > v10;
      double v9 = (double)v10;
      if (!v12) {
        double v9 = NAN;
      }
    }
  }
  double v17 = asin(v9);
  *((double *)v6 + 4) = v17;
  *((void *)v6 + 8) = (uint64_t)rint(v17);
}

uint64_t DecimalToDegrees()
{
  if (DecimalToDegrees_initialized == 1) {
    return DecimalToDegrees_toDegrees_0;
  }
  DecimalToDegrees_initialized = 1;
  int v5 = 0;
  if (DecimalPi_initialized == 1)
  {
    unint64_t v1 = DecimalPi_pi_0;
    unint64_t v2 = *(void *)algn_1EA0E07E8;
  }
  else
  {
    DecimalPi_initialized = 1;
    int v6 = 0;
    unint64_t v1 = __bid128_from_string("3.14159265358979323846264338327950288", 4, &v6);
    unint64_t v2 = v3;
    DecimalPi_pi_0 = v1;
    *(void *)algn_1EA0E07E8 = v3;
  }
  uint64_t result = __bid128_div(0xB4uLL, 0x3040000000000000uLL, v1, v2, 4, &v5);
  DecimalToDegrees_toDegrees_0 = result;
  *(void *)algn_1EA0E0828 = v4;
  return result;
}

void functionASinD(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionASinD_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void functionACos(uint64_t a1, uint64_t a2)
{
  if (g_assumeDegrees)
  {
    v4[0] = MEMORY[0x1E4F143A8];
    v4[1] = 3221225472;
    v4[2] = __functionACosD_block_invoke;
    v4[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v4[4] = a2;
    unint64_t v2 = v4;
  }
  else
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    void v3[2] = __functionACos_block_invoke;
    v3[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v3[4] = a2;
    unint64_t v2 = v3;
  }
  evaluateUnary(a1, a2, v2);
}

void __functionACosD_block_invoke(uint64_t a1, int *a2)
{
  if (a2[19])
  {
    if (g_GeneratingConvertTerm)
    {
LABEL_3:
      int v3 = 11;
LABEL_25:
      uint64_t v15 = *(void *)(a1 + 32);
      *(_DWORD *)(v15 + 204) = v3;
      *(void *)(v15 + 48) = 0;
      *(void *)(v15 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    int v3 = 9;
    goto LABEL_25;
  }
  unint64_t v5 = -1;
  uint64_t v6 = 21;
  while (v5 != 14)
  {
    int v7 = a2[v6];
    ++v5;
    v6 += 2;
    if (v7) {
      goto LABEL_9;
    }
  }
  unint64_t v5 = 15;
LABEL_9:
  if (v5 < 0xF || g_GeneratingConvertTerm)
  {
    if (g_GeneratingConvertTerm) {
      goto LABEL_3;
    }
    goto LABEL_24;
  }
  g_isTrivial = 0;
  int v8 = *(int **)(a1 + 32);
  int v9 = *v8;
  if (*v8 != 4)
  {
    if (v9 == 2)
    {
      int v16 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode) {
          int v22 = 4;
        }
        else {
          int v22 = 0;
        }
        unint64_t v17 = __binary64_to_bid128(v22, &my_fpsf, *((double *)a2 + 4));
        unint64_t v24 = v23;
      }
      else if (v16 == 2)
      {
        unint64_t v17 = *((void *)a2 + 6);
        unint64_t v24 = *((void *)a2 + 7);
      }
      else
      {
        if (v16 == 4) {
          unint64_t v17 = *((void *)a2 + 8);
        }
        else {
          unint64_t v17 = 0;
        }
        unint64_t v24 = 0x3040000000000000;
      }
      if (__bid128_quiet_equal(1uLL, 0x3040000000000000uLL, v17, v24, &my_fpsf))
      {
        *((void *)v8 + 6) = 0;
        *((void *)v8 + 7) = 0x3040000000000000;
      }
      else
      {
        int v25 = *a2;
        if (*a2 == 1)
        {
          if (my_rnd_mode) {
            int v27 = 4;
          }
          else {
            int v27 = 0;
          }
          unint64_t v26 = __binary64_to_bid128(v27, &my_fpsf, *((double *)a2 + 4));
          unint64_t v29 = v28;
        }
        else if (v25 == 2)
        {
          unint64_t v26 = *((void *)a2 + 6);
          unint64_t v29 = *((void *)a2 + 7);
        }
        else
        {
          if (v25 == 4) {
            unint64_t v26 = *((void *)a2 + 8);
          }
          else {
            unint64_t v26 = 0;
          }
          unint64_t v29 = 0x3040000000000000;
        }
        if (__bid128_quiet_equal(1uLL, 0xB040000000000000, v26, v29, &my_fpsf))
        {
          *((void *)v8 + 6) = 180;
          *((void *)v8 + 7) = 0x3040000000000000;
        }
        else
        {
          unint64_t v30 = treeDecimalValue((double *)a2);
          if (my_rnd_mode) {
            unsigned int v32 = 4;
          }
          else {
            unsigned int v32 = 0;
          }
          unint64_t v33 = __bid128_acos(v30, v31, v32);
          uint64_t v35 = v34;
          uint64_t v36 = *(void *)(a1 + 32);
          unint64_t v38 = DecimalToDegrees();
          if (my_rnd_mode) {
            unsigned int v39 = 4;
          }
          else {
            unsigned int v39 = 0;
          }
          *(void *)(v36 + 48) = __bid128_mul(v33, v35, v38, v37, v39, &my_fpsf);
          *(void *)(v36 + 56) = v40;
        }
      }
      return;
    }
    if (v9 != 1) {
      return;
    }
  }
  int v10 = *a2;
  if (*a2 == 1)
  {
    double v11 = *((double *)a2 + 4);
  }
  else if (v10 == 2)
  {
    unint64_t v18 = *((void *)a2 + 6);
    unint64_t v19 = *((void *)a2 + 7);
    if (my_rnd_mode) {
      int v20 = 4;
    }
    else {
      int v20 = 0;
    }
    double v11 = __bid128_to_binary64(v18, v19, v20, &my_fpsf);
  }
  else
  {
    double v11 = 0.0;
    if (v10 == 4)
    {
      unint64_t v12 = *((void *)a2 + 8);
      unint64_t v13 = (uint64_t)rint(1.79769313e308);
      BOOL v14 = (uint64_t)rint(2.22507386e-308) < v12 && v13 > v12;
      double v11 = (double)v12;
      if (!v14) {
        double v11 = NAN;
      }
    }
  }
  double v21 = acos(v11) * 180.0 / 3.14159265;
  *((double *)v8 + 4) = v21;
  *((void *)v8 + 8) = (uint64_t)rint(v21);
}

void __functionACos_block_invoke(uint64_t a1, int *a2)
{
  if (a2[19])
  {
    if (g_GeneratingConvertTerm)
    {
LABEL_3:
      int v2 = 11;
LABEL_25:
      uint64_t v14 = *(void *)(a1 + 32);
      *(_DWORD *)(v14 + 204) = v2;
      *(void *)(v14 + 48) = 0;
      *(void *)(v14 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    int v2 = 9;
    goto LABEL_25;
  }
  unint64_t v4 = -1;
  uint64_t v5 = 21;
  while (v4 != 14)
  {
    int v6 = a2[v5];
    ++v4;
    v5 += 2;
    if (v6) {
      goto LABEL_9;
    }
  }
  unint64_t v4 = 15;
LABEL_9:
  if (v4 < 0xF || g_GeneratingConvertTerm)
  {
    if (g_GeneratingConvertTerm) {
      goto LABEL_3;
    }
    goto LABEL_24;
  }
  g_isTrivial = 0;
  int v7 = *(int **)(a1 + 32);
  int v8 = *v7;
  if (*v7 != 4)
  {
    if (v8 == 2)
    {
      int v15 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode) {
          int v21 = 4;
        }
        else {
          int v21 = 0;
        }
        unint64_t v16 = __binary64_to_bid128(v21, &my_fpsf, *((double *)a2 + 4));
        unint64_t v23 = v22;
      }
      else if (v15 == 2)
      {
        unint64_t v16 = *((void *)a2 + 6);
        unint64_t v23 = *((void *)a2 + 7);
      }
      else
      {
        if (v15 == 4) {
          unint64_t v16 = *((void *)a2 + 8);
        }
        else {
          unint64_t v16 = 0;
        }
        unint64_t v23 = 0x3040000000000000;
      }
      if (__bid128_quiet_equal(1uLL, 0x3040000000000000uLL, v16, v23, &my_fpsf))
      {
        *((void *)v7 + 6) = 0;
        *((void *)v7 + 7) = 0x3040000000000000;
      }
      else
      {
        int v24 = *a2;
        if (*a2 == 1)
        {
          if (my_rnd_mode) {
            int v26 = 4;
          }
          else {
            int v26 = 0;
          }
          unint64_t v25 = __binary64_to_bid128(v26, &my_fpsf, *((double *)a2 + 4));
          unint64_t v28 = v27;
        }
        else if (v24 == 2)
        {
          unint64_t v25 = *((void *)a2 + 6);
          unint64_t v28 = *((void *)a2 + 7);
        }
        else
        {
          if (v24 == 4) {
            unint64_t v25 = *((void *)a2 + 8);
          }
          else {
            unint64_t v25 = 0;
          }
          unint64_t v28 = 0x3040000000000000;
        }
        if (__bid128_quiet_equal(1uLL, 0xB040000000000000, v25, v28, &my_fpsf))
        {
          if (DecimalPi_initialized == 1)
          {
            unint64_t v29 = DecimalPi_pi_0;
            uint64_t v30 = *(void *)algn_1EA0E07E8;
          }
          else
          {
            DecimalPi_initialized = 1;
            int v34 = 0;
            unint64_t v29 = __bid128_from_string("3.14159265358979323846264338327950288", 4, &v34);
            DecimalPi_pi_0 = v29;
            *(void *)algn_1EA0E07E8 = v30;
          }
        }
        else
        {
          unint64_t v31 = treeDecimalValue((double *)a2);
          if (my_rnd_mode) {
            unsigned int v33 = 4;
          }
          else {
            unsigned int v33 = 0;
          }
          unint64_t v29 = __bid128_acos(v31, v32, v33);
        }
        *((void *)v7 + 6) = v29;
        *((void *)v7 + 7) = v30;
      }
      return;
    }
    if (v8 != 1) {
      return;
    }
  }
  int v9 = *a2;
  if (*a2 == 1)
  {
    double v10 = *((double *)a2 + 4);
  }
  else if (v9 == 2)
  {
    unint64_t v17 = *((void *)a2 + 6);
    unint64_t v18 = *((void *)a2 + 7);
    if (my_rnd_mode) {
      int v19 = 4;
    }
    else {
      int v19 = 0;
    }
    double v10 = __bid128_to_binary64(v17, v18, v19, &my_fpsf);
  }
  else
  {
    double v10 = 0.0;
    if (v9 == 4)
    {
      unint64_t v11 = *((void *)a2 + 8);
      unint64_t v12 = (uint64_t)rint(1.79769313e308);
      BOOL v13 = (uint64_t)rint(2.22507386e-308) < v11 && v12 > v11;
      double v10 = (double)v11;
      if (!v13) {
        double v10 = NAN;
      }
    }
  }
  double v20 = acos(v10);
  *((double *)v7 + 4) = v20;
  *((void *)v7 + 8) = (uint64_t)rint(v20);
}

void functionACosD(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionACosD_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void functionATan(uint64_t a1, uint64_t a2)
{
  if (g_assumeDegrees)
  {
    v4[0] = MEMORY[0x1E4F143A8];
    v4[1] = 3221225472;
    v4[2] = __functionATanD_block_invoke;
    v4[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v4[4] = a2;
    int v2 = v4;
  }
  else
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    void v3[2] = __functionATan_block_invoke;
    v3[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
    v3[4] = a2;
    int v2 = v3;
  }
  evaluateUnary(a1, a2, v2);
}

void __functionATanD_block_invoke(uint64_t a1, int *a2)
{
  if (a2[19])
  {
    if (g_GeneratingConvertTerm)
    {
LABEL_3:
      int v3 = 11;
LABEL_25:
      uint64_t v14 = *(void *)(a1 + 32);
      *(_DWORD *)(v14 + 204) = v3;
      *(void *)(v14 + 48) = 0;
      *(void *)(v14 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    int v3 = 9;
    goto LABEL_25;
  }
  unint64_t v4 = -1;
  uint64_t v5 = 21;
  while (v4 != 14)
  {
    int v6 = a2[v5];
    ++v4;
    v5 += 2;
    if (v6) {
      goto LABEL_9;
    }
  }
  unint64_t v4 = 15;
LABEL_9:
  if (v4 < 0xF || g_GeneratingConvertTerm)
  {
    if (g_GeneratingConvertTerm) {
      goto LABEL_3;
    }
    goto LABEL_24;
  }
  g_isTrivial = 0;
  int v7 = *(double **)(a1 + 32);
  int v8 = *(_DWORD *)v7;
  if (*(_DWORD *)v7 != 4)
  {
    if (v8 == 2)
    {
      int v15 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode) {
          int v19 = 4;
        }
        else {
          int v19 = 0;
        }
        unint64_t v16 = __binary64_to_bid128(v19, &my_fpsf, *((double *)a2 + 4));
        unint64_t v21 = v20;
      }
      else if (v15 == 2)
      {
        unint64_t v16 = *((void *)a2 + 6);
        unint64_t v21 = *((void *)a2 + 7);
      }
      else
      {
        if (v15 == 4) {
          unint64_t v16 = *((void *)a2 + 8);
        }
        else {
          unint64_t v16 = 0;
        }
        unint64_t v21 = 0x3040000000000000;
      }
      if (my_rnd_mode) {
        unsigned int v22 = 4;
      }
      else {
        unsigned int v22 = 0;
      }
      unint64_t v23 = __bid128_atan(v16, v21, v22);
      uint64_t v25 = v24;
      uint64_t v26 = *(void *)(a1 + 32);
      if (DecimalToDegrees_initialized == 1)
      {
        unint64_t v27 = DecimalToDegrees_toDegrees_0;
        uint64_t v28 = *(void *)algn_1EA0E0828;
      }
      else
      {
        DecimalToDegrees_initialized = 1;
        int v35 = 0;
        if (DecimalPi_initialized == 1)
        {
          unint64_t v29 = DecimalPi_pi_0;
          unint64_t v30 = *(void *)algn_1EA0E07E8;
        }
        else
        {
          DecimalPi_initialized = 1;
          int v36 = 0;
          unint64_t v29 = __bid128_from_string("3.14159265358979323846264338327950288", 4, &v36);
          unint64_t v30 = v31;
          DecimalPi_pi_0 = v29;
          *(void *)algn_1EA0E07E8 = v31;
        }
        unint64_t v27 = __bid128_div(0xB4uLL, 0x3040000000000000uLL, v29, v30, 4, &v35);
        uint64_t v28 = v32;
        DecimalToDegrees_toDegrees_0 = v27;
        *(void *)algn_1EA0E0828 = v32;
      }
      if (my_rnd_mode) {
        unsigned int v33 = 4;
      }
      else {
        unsigned int v33 = 0;
      }
      *(void *)(v26 + 48) = __bid128_mul(v23, v25, v27, v28, v33, &my_fpsf);
      *(void *)(v26 + 56) = v34;
      return;
    }
    if (v8 != 1) {
      return;
    }
  }
  int v9 = *a2;
  if (*a2 == 1)
  {
    double v10 = *((double *)a2 + 4);
  }
  else if (v9 == 2)
  {
    if (my_rnd_mode) {
      int v17 = 4;
    }
    else {
      int v17 = 0;
    }
    double v10 = __bid128_to_binary64(*((void *)a2 + 6), *((void *)a2 + 7), v17, &my_fpsf);
  }
  else
  {
    double v10 = 0.0;
    if (v9 == 4)
    {
      unint64_t v11 = *((void *)a2 + 8);
      unint64_t v12 = (uint64_t)rint(1.79769313e308);
      BOOL v13 = (uint64_t)rint(2.22507386e-308) < v11 && v12 > v11;
      double v10 = (double)v11;
      if (!v13) {
        double v10 = NAN;
      }
    }
  }
  double v18 = atan(v10) * 180.0 / 3.14159265;
  v7[4] = v18;
  *((void *)v7 + 8) = (uint64_t)rint(v18);
}

void __functionATan_block_invoke(uint64_t a1, int *a2)
{
  if (a2[19])
  {
    if (g_GeneratingConvertTerm)
    {
LABEL_3:
      int v2 = 11;
LABEL_25:
      uint64_t v13 = *(void *)(a1 + 32);
      *(_DWORD *)(v13 + 204) = v2;
      *(void *)(v13 + 48) = 0;
      *(void *)(v13 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    int v2 = 9;
    goto LABEL_25;
  }
  unint64_t v3 = -1;
  uint64_t v4 = 21;
  while (v3 != 14)
  {
    int v5 = a2[v4];
    ++v3;
    v4 += 2;
    if (v5) {
      goto LABEL_9;
    }
  }
  unint64_t v3 = 15;
LABEL_9:
  if (v3 < 0xF || g_GeneratingConvertTerm)
  {
    if (g_GeneratingConvertTerm) {
      goto LABEL_3;
    }
    goto LABEL_24;
  }
  g_isTrivial = 0;
  int v6 = *(int **)(a1 + 32);
  int v7 = *v6;
  if (*v6 != 4)
  {
    if (v7 == 2)
    {
      int v14 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode) {
          int v18 = 4;
        }
        else {
          int v18 = 0;
        }
        unint64_t v15 = __binary64_to_bid128(v18, &my_fpsf, *((double *)a2 + 4));
        unint64_t v20 = v19;
      }
      else if (v14 == 2)
      {
        unint64_t v15 = *((void *)a2 + 6);
        unint64_t v20 = *((void *)a2 + 7);
      }
      else
      {
        if (v14 == 4) {
          unint64_t v15 = *((void *)a2 + 8);
        }
        else {
          unint64_t v15 = 0;
        }
        unint64_t v20 = 0x3040000000000000;
      }
      if (my_rnd_mode) {
        unsigned int v21 = 4;
      }
      else {
        unsigned int v21 = 0;
      }
      *((void *)v6 + 6) = __bid128_atan(v15, v20, v21);
      *((void *)v6 + 7) = v22;
      return;
    }
    if (v7 != 1) {
      return;
    }
  }
  int v8 = *a2;
  if (*a2 == 1)
  {
    double v9 = *((double *)a2 + 4);
  }
  else if (v8 == 2)
  {
    if (my_rnd_mode) {
      int v16 = 4;
    }
    else {
      int v16 = 0;
    }
    double v9 = __bid128_to_binary64(*((void *)a2 + 6), *((void *)a2 + 7), v16, &my_fpsf);
  }
  else
  {
    double v9 = 0.0;
    if (v8 == 4)
    {
      unint64_t v10 = *((void *)a2 + 8);
      unint64_t v11 = (uint64_t)rint(1.79769313e308);
      BOOL v12 = (uint64_t)rint(2.22507386e-308) < v10 && v11 > v10;
      double v9 = (double)v10;
      if (!v12) {
        double v9 = NAN;
      }
    }
  }
  double v17 = atan(v9);
  *((double *)v6 + 4) = v17;
  *((void *)v6 + 8) = (uint64_t)rint(v17);
}

void functionATanD(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionATanD_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void functionSinH(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionSinH_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void __functionSinH_block_invoke(uint64_t a1, int *a2)
{
  if (a2[19])
  {
    if (g_GeneratingConvertTerm)
    {
LABEL_3:
      int v2 = 11;
LABEL_25:
      uint64_t v13 = *(void *)(a1 + 32);
      *(_DWORD *)(v13 + 204) = v2;
      *(void *)(v13 + 48) = 0;
      *(void *)(v13 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    int v2 = 9;
    goto LABEL_25;
  }
  unint64_t v3 = -1;
  uint64_t v4 = 21;
  while (v3 != 14)
  {
    int v5 = a2[v4];
    ++v3;
    v4 += 2;
    if (v5) {
      goto LABEL_9;
    }
  }
  unint64_t v3 = 15;
LABEL_9:
  if (v3 < 0xF || g_GeneratingConvertTerm)
  {
    if (g_GeneratingConvertTerm) {
      goto LABEL_3;
    }
    goto LABEL_24;
  }
  g_isTrivial = 0;
  int v6 = *(int **)(a1 + 32);
  int v7 = *v6;
  if (*v6 != 4)
  {
    if (v7 != 2)
    {
      if (v7 != 1) {
        return;
      }
      goto LABEL_14;
    }
    int v14 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode) {
        int v19 = 4;
      }
      else {
        int v19 = 0;
      }
      unint64_t v15 = __binary64_to_bid128(v19, &my_fpsf, *((double *)a2 + 4));
      unint64_t v16 = v20;
    }
    else if (v14 == 2)
    {
      unint64_t v15 = *((void *)a2 + 6);
      unint64_t v16 = *((void *)a2 + 7);
    }
    else
    {
      if (v14 != 4)
      {
        unint64_t v15 = 0;
        if (my_rnd_mode) {
          int v22 = 4;
        }
        else {
          int v22 = 0;
        }
        unint64_t v16 = 0x3040000000000000;
        goto LABEL_58;
      }
      unint64_t v15 = *((void *)a2 + 8);
      unint64_t v16 = 0x3040000000000000;
    }
    if ((~v16 & 0x7C00000000000000) == 0)
    {
      if ((~v16 & 0x7E00000000000000) == 0) {
        my_fpsf |= 1u;
      }
      if ((v16 & 0x3FFFFFFFFFFFLL) > 0x314DC6448D93
        || (unint64_t v21 = v16 & 0xFC003FFFFFFFFFFFLL, v15 >= 0x38C15B0A00000000)
        && (v16 & 0x3FFFFFFFFFFFLL) == 0x314DC6448D93)
      {
        unint64_t v15 = 0;
        unint64_t v21 = v16 & 0xFC00000000000000;
      }
      goto LABEL_67;
    }
    if (my_rnd_mode) {
      int v22 = 4;
    }
    else {
      int v22 = 0;
    }
    if ((~v16 & 0x7800000000000000) == 0)
    {
      unint64_t v15 = 0;
      unint64_t v21 = v16 & 0x8000000000000000 | 0x7800000000000000;
LABEL_67:
      *((void *)v6 + 6) = v15;
      *((void *)v6 + 7) = v21;
      return;
    }
LABEL_58:
    __n128 v60 = 0uLL;
    v59[0] = 0;
    v59[1] = 0;
    __n128 v58 = 0uLL;
    unint64_t v61 = __bid128_to_binary128(v15, v16, v22, &my_fpsf);
    uint64_t v62 = v23;
    unint64_t v63 = 0;
    uint64_t v64 = 0;
    uint64_t v65 = 0;
    __dpml_bid_unpack_x_or_y__((uint64_t *)&v61, 0, (uint64_t)&v63, &qword_1BDDBAE40, (uint64_t)v59, v66);
    if (bid_f128_cmp(v59, (uint64_t *)&c_1em40_1174, 3u))
    {
      unint64_t v24 = bid128_ext_fma((int *)v66, (int *)&v63, (int *)&v57, &v67, v15, v16, 1uLL, 0x2FF0000000000000, v15, v16, v22, &my_fpsf);
    }
    else
    {
      if (bid_f128_cmp(v59, (uint64_t *)&c_one_1175, 3u))
      {
        if (v62 >= 0) {
          uint64_t v25 = 100;
        }
        else {
          uint64_t v25 = 101;
        }
        __dpml_bid_C_ux_hyperbolic__(&v60, (uint64_t *)&v61, &qword_1BDDBB5C0, 0x2C06uLL, v25, v66);
        unint64_t v27 = v60.n128_u64[1];
        unint64_t v26 = v60.n128_u64[0];
      }
      else
      {
        if (bid_f128_cmp(v59, (uint64_t *)&c_64_1176, 3u))
        {
          if (bid_f128_cmp((uint64_t *)&c_zero_1177, (uint64_t *)&v61, 3u))
          {
            unint64_t v28 = __bid128_exp(v15, v16, v22, &my_fpsf);
            uint64_t v30 = v29;
            unint64_t v31 = __bid128_div(1uLL, 0x3040000000000000uLL, v28, v29, v22, &my_fpsf);
            unint64_t v33 = __bid128_mul(5uLL, 0xB03E000000000000, v31, v32, v22, &my_fpsf);
            unint64_t v24 = bid128_ext_fma((int *)v66, (int *)&v63, (int *)&v57, &v67, v28, v30, 5uLL, 0x303E000000000000, v33, v34, v22, &my_fpsf);
          }
          else
          {
            unint64_t v49 = __bid128_exp(v15, v16 & 0x7FFFFFFFFFFFFFFFLL, v22, &my_fpsf);
            uint64_t v51 = v50;
            unint64_t v52 = __bid128_div(1uLL, 0x3040000000000000uLL, v49, v50, v22, &my_fpsf);
            unint64_t v54 = __bid128_mul(5uLL, 0x303E000000000000, v52, v53, v22, &my_fpsf);
            unint64_t v24 = bid128_ext_fma((int *)v66, (int *)&v63, (int *)&v57, &v67, v49, v51, 5uLL, 0xB03E000000000000, v54, v55, v22, &my_fpsf);
          }
          goto LABEL_66;
        }
        v66[0] = 0uLL;
        uint64_t v35 = v16 & 0x7FFFFFFFFFFFFFFFLL;
        unint64_t v36 = __bid128_add(v15, v35, 0xBE00000000000000, 0x3040363BF3B1CEEELL, v22, &my_fpsf);
        unint64_t v38 = __bid128_add(v36, v37, 0xBE00000000000000, 0xB040363BF3B1CEEELL, v22, &my_fpsf);
        unint64_t v40 = v39;
        unint64_t v41 = __bid128_sub(v15, v35, v38, v39, v22, &my_fpsf);
        unint64_t v43 = v42;
        v57.n128_u64[0] = __bid128_to_binary128(v38, v40, v22, &my_fpsf);
        v57.n128_u64[1] = v44;
        unint64_t v63 = __bid128_to_binary128(v41, v43, v22, &my_fpsf);
        uint64_t v64 = v45;
        if (bid_f128_cmp((uint64_t *)&v57, (uint64_t *)&c_11000_1178, 4u))
        {
          bid_f128_sub(&v57, (uint64_t *)&v57, (uint64_t *)&c_11000_1178);
          bid_f128_exp(v66, (uint64_t *)&v57);
          bid_f128_exp(&v58, (uint64_t *)&v63);
          bid_f128_mul(v66, (uint64_t *)v66, (uint64_t *)&v58);
          if (bid_f128_cmp((uint64_t *)&v61, (uint64_t *)&c_zero_1177, 1u)) {
            int v46 = (uint64_t *)&c_minus_half;
          }
          else {
            int v46 = (uint64_t *)&c_half_1179;
          }
          bid_f128_mul(v66, v46, (uint64_t *)v66);
          unint64_t v47 = __binary128_to_bid128(v66[0].n128_u64[0], v66[0].n128_u64[1], v22, &my_fpsf);
          unint64_t v24 = __bid128_mul(v47, v48, 0xD43EDE775707FD0ALL, 0x5550558ADA285F8BLL, v22, &my_fpsf);
          goto LABEL_66;
        }
        bid_f128_exp(v66, (uint64_t *)&v57);
        bid_f128_exp(&v58, (uint64_t *)&v63);
        bid_f128_mul(v66, (uint64_t *)v66, (uint64_t *)&v58);
        if (bid_f128_cmp((uint64_t *)&v61, (uint64_t *)&c_zero_1177, 1u)) {
          long long v56 = (uint64_t *)&c_minus_half;
        }
        else {
          long long v56 = (uint64_t *)&c_half_1179;
        }
        bid_f128_mul(v66, v56, (uint64_t *)v66);
        unint64_t v27 = v66[0].n128_u64[1];
        unint64_t v26 = v66[0].n128_u64[0];
      }
      unint64_t v24 = __binary128_to_bid128(v26, v27, v22, &my_fpsf);
    }
LABEL_66:
    unint64_t v15 = v24;
    goto LABEL_67;
  }
LABEL_14:
  int v8 = *a2;
  if (*a2 == 1)
  {
    double v9 = *((double *)a2 + 4);
  }
  else if (v8 == 2)
  {
    if (my_rnd_mode) {
      int v17 = 4;
    }
    else {
      int v17 = 0;
    }
    double v9 = __bid128_to_binary64(*((void *)a2 + 6), *((void *)a2 + 7), v17, &my_fpsf);
  }
  else
  {
    double v9 = 0.0;
    if (v8 == 4)
    {
      unint64_t v10 = *((void *)a2 + 8);
      unint64_t v11 = (uint64_t)rint(1.79769313e308);
      BOOL v12 = (uint64_t)rint(2.22507386e-308) < v10 && v11 > v10;
      double v9 = (double)v10;
      if (!v12) {
        double v9 = NAN;
      }
    }
  }
  double v18 = sinh(v9);
  *((double *)v6 + 4) = v18;
  *((void *)v6 + 8) = (uint64_t)rint(v18);
}

void functionCosH(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionCosH_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void __functionCosH_block_invoke(uint64_t a1, int *a2)
{
  if (a2[19])
  {
    if (g_GeneratingConvertTerm)
    {
LABEL_3:
      int v2 = 11;
LABEL_25:
      uint64_t v13 = *(void *)(a1 + 32);
      *(_DWORD *)(v13 + 204) = v2;
      *(void *)(v13 + 48) = 0;
      *(void *)(v13 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    int v2 = 9;
    goto LABEL_25;
  }
  unint64_t v3 = -1;
  uint64_t v4 = 21;
  while (v3 != 14)
  {
    int v5 = a2[v4];
    ++v3;
    v4 += 2;
    if (v5) {
      goto LABEL_9;
    }
  }
  unint64_t v3 = 15;
LABEL_9:
  if (v3 < 0xF || g_GeneratingConvertTerm)
  {
    if (g_GeneratingConvertTerm) {
      goto LABEL_3;
    }
    goto LABEL_24;
  }
  g_isTrivial = 0;
  int v6 = *(int **)(a1 + 32);
  int v7 = *v6;
  if (*v6 != 4)
  {
    if (v7 != 2)
    {
      if (v7 != 1) {
        return;
      }
      goto LABEL_14;
    }
    int v14 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode) {
        int v19 = 4;
      }
      else {
        int v19 = 0;
      }
      unint64_t v15 = __binary64_to_bid128(v19, &my_fpsf, *((double *)a2 + 4));
      unint64_t v16 = v20;
    }
    else if (v14 == 2)
    {
      unint64_t v15 = *((void *)a2 + 6);
      unint64_t v16 = *((void *)a2 + 7);
    }
    else
    {
      if (v14 != 4)
      {
        unint64_t v15 = 0;
        if (my_rnd_mode) {
          int v22 = 4;
        }
        else {
          int v22 = 0;
        }
        unint64_t v16 = 0x3040000000000000;
        goto LABEL_58;
      }
      unint64_t v15 = *((void *)a2 + 8);
      unint64_t v16 = 0x3040000000000000;
    }
    if ((~v16 & 0x7C00000000000000) == 0)
    {
      if ((~v16 & 0x7E00000000000000) == 0) {
        my_fpsf |= 1u;
      }
      if ((v16 & 0x3FFFFFFFFFFFLL) > 0x314DC6448D93
        || (unint64_t v21 = v16 & 0xFC003FFFFFFFFFFFLL, v15 >= 0x38C15B0A00000000)
        && (v16 & 0x3FFFFFFFFFFFLL) == 0x314DC6448D93)
      {
        unint64_t v15 = 0;
        unint64_t v21 = v16 & 0xFC00000000000000;
      }
      goto LABEL_71;
    }
    if (my_rnd_mode) {
      int v22 = 4;
    }
    else {
      int v22 = 0;
    }
    unint64_t v21 = 0x7800000000000000;
    if ((~v16 & 0x7800000000000000) == 0)
    {
      unint64_t v15 = 0;
LABEL_71:
      *((void *)v6 + 6) = v15;
      *((void *)v6 + 7) = v21;
      return;
    }
LABEL_58:
    __n128 v52 = 0uLL;
    v51[0] = 0;
    v51[1] = 0;
    __n128 v50 = 0uLL;
    v53[0] = __bid128_to_binary128(v15, v16, v22, &my_fpsf);
    v53[1] = v23;
    unint64_t v54 = 0;
    uint64_t v55 = 0;
    uint64_t v56 = 0;
    __dpml_bid_unpack_x_or_y__(v53, 0, (uint64_t)&v54, &qword_1BDDBAE40, (uint64_t)v51, v57);
    if (bid_f128_cmp(v51, (uint64_t *)&c_1em40_1104, 3u))
    {
      unint64_t v24 = __bid128_add(1uLL, 0x3040000000000000, 1uLL, 0x2FF0000000000000, v22, &my_fpsf);
    }
    else
    {
      if (bid_f128_cmp(v51, (uint64_t *)&c_one_1105, 3u))
      {
        __dpml_bid_C_ux_hyperbolic__(&v52, v53, &qword_1BDDBB5C8, 0x4440uLL, 19, v57);
        unint64_t v26 = v52.n128_u64[1];
        unint64_t v25 = v52.n128_u64[0];
      }
      else
      {
        if (bid_f128_cmp(v51, (uint64_t *)&c_64, 3u))
        {
          if (bid_f128_cmp((uint64_t *)&c_zero_1106, v53, 3u))
          {
            unint64_t v27 = v15;
            unint64_t v28 = v16;
          }
          else
          {
            unint64_t v28 = v16 & 0x7FFFFFFFFFFFFFFFLL;
            unint64_t v27 = v15;
          }
          unint64_t v42 = __bid128_exp(v27, v28, v22, &my_fpsf);
          uint64_t v44 = v43;
          unint64_t v45 = __bid128_div(1uLL, 0x3040000000000000uLL, v42, v43, v22, &my_fpsf);
          unint64_t v47 = __bid128_mul(5uLL, 0x303E000000000000, v45, v46, v22, &my_fpsf);
          unint64_t v24 = bid128_ext_fma((int *)v57, (int *)&v54, (int *)&v49, &v58, v42, v44, 5uLL, 0x303E000000000000, v47, v48, v22, &my_fpsf);
          goto LABEL_70;
        }
        v57[0] = 0uLL;
        uint64_t v29 = v16 & 0x7FFFFFFFFFFFFFFFLL;
        unint64_t v30 = __bid128_add(v15, v29, 0xBE00000000000000, 0x3040363BF3B1CEEELL, v22, &my_fpsf);
        unint64_t v32 = __bid128_add(v30, v31, 0xBE00000000000000, 0xB040363BF3B1CEEELL, v22, &my_fpsf);
        unint64_t v34 = v33;
        unint64_t v35 = __bid128_sub(v15, v29, v32, v33, v22, &my_fpsf);
        unint64_t v37 = v36;
        v49.n128_u64[0] = __bid128_to_binary128(v32, v34, v22, &my_fpsf);
        v49.n128_u64[1] = v38;
        unint64_t v54 = __bid128_to_binary128(v35, v37, v22, &my_fpsf);
        uint64_t v55 = v39;
        if (bid_f128_cmp((uint64_t *)&v49, (uint64_t *)&c_11000, 4u))
        {
          bid_f128_sub(&v49, (uint64_t *)&v49, (uint64_t *)&c_11000);
          bid_f128_exp(&v50, (uint64_t *)&v49);
          bid_f128_mul(v57, (uint64_t *)&c_half_1107, (uint64_t *)&v50);
          bid_f128_exp(&v50, (uint64_t *)&v54);
          bid_f128_mul(v57, (uint64_t *)v57, (uint64_t *)&v50);
          unint64_t v40 = __binary128_to_bid128(v57[0].n128_u64[0], v57[0].n128_u64[1], v22, &my_fpsf);
          unint64_t v24 = __bid128_mul(v40, v41, 0xD43EDE775707FD0ALL, 0x5550558ADA285F8BLL, v22, &my_fpsf);
          goto LABEL_70;
        }
        bid_f128_exp(&v50, (uint64_t *)&v49);
        bid_f128_mul(v57, (uint64_t *)&c_half_1107, (uint64_t *)&v50);
        bid_f128_exp(&v50, (uint64_t *)&v54);
        bid_f128_mul(v57, (uint64_t *)v57, (uint64_t *)&v50);
        unint64_t v26 = v57[0].n128_u64[1];
        unint64_t v25 = v57[0].n128_u64[0];
      }
      unint64_t v24 = __binary128_to_bid128(v25, v26, v22, &my_fpsf);
    }
LABEL_70:
    unint64_t v15 = v24;
    goto LABEL_71;
  }
LABEL_14:
  int v8 = *a2;
  if (*a2 == 1)
  {
    double v9 = *((double *)a2 + 4);
  }
  else if (v8 == 2)
  {
    if (my_rnd_mode) {
      int v17 = 4;
    }
    else {
      int v17 = 0;
    }
    double v9 = __bid128_to_binary64(*((void *)a2 + 6), *((void *)a2 + 7), v17, &my_fpsf);
  }
  else
  {
    double v9 = 0.0;
    if (v8 == 4)
    {
      unint64_t v10 = *((void *)a2 + 8);
      unint64_t v11 = (uint64_t)rint(1.79769313e308);
      BOOL v12 = (uint64_t)rint(2.22507386e-308) < v10 && v11 > v10;
      double v9 = (double)v10;
      if (!v12) {
        double v9 = NAN;
      }
    }
  }
  double v18 = cosh(v9);
  *((double *)v6 + 4) = v18;
  *((void *)v6 + 8) = (uint64_t)rint(v18);
}

void functionTanH(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionTanH_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void __functionTanH_block_invoke(uint64_t a1, int *a2)
{
  if (a2[19])
  {
    if (g_GeneratingConvertTerm)
    {
LABEL_3:
      int v2 = 11;
LABEL_25:
      uint64_t v13 = *(void *)(a1 + 32);
      *(_DWORD *)(v13 + 204) = v2;
      *(void *)(v13 + 48) = 0;
      *(void *)(v13 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    int v2 = 9;
    goto LABEL_25;
  }
  unint64_t v3 = -1;
  uint64_t v4 = 21;
  while (v3 != 14)
  {
    int v5 = a2[v4];
    ++v3;
    v4 += 2;
    if (v5) {
      goto LABEL_9;
    }
  }
  unint64_t v3 = 15;
LABEL_9:
  if (v3 < 0xF || g_GeneratingConvertTerm)
  {
    if (g_GeneratingConvertTerm) {
      goto LABEL_3;
    }
    goto LABEL_24;
  }
  g_isTrivial = 0;
  int v6 = *(int **)(a1 + 32);
  int v7 = *v6;
  if (*v6 != 4)
  {
    if (v7 != 2)
    {
      if (v7 != 1) {
        return;
      }
      goto LABEL_14;
    }
    int v14 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode) {
        int v19 = 4;
      }
      else {
        int v19 = 0;
      }
      unint64_t v15 = __binary64_to_bid128(v19, &my_fpsf, *((double *)a2 + 4));
      unint64_t v16 = v20;
    }
    else if (v14 == 2)
    {
      unint64_t v15 = *((void *)a2 + 6);
      unint64_t v16 = *((void *)a2 + 7);
    }
    else
    {
      if (v14 != 4)
      {
        unint64_t v15 = 0;
        if (my_rnd_mode) {
          unsigned int v21 = 4;
        }
        else {
          unsigned int v21 = 0;
        }
        unint64_t v16 = 0x3040000000000000;
        goto LABEL_56;
      }
      unint64_t v15 = *((void *)a2 + 8);
      unint64_t v16 = 0x3040000000000000;
    }
    if (my_rnd_mode) {
      unsigned int v21 = 4;
    }
    else {
      unsigned int v21 = 0;
    }
    if ((~v16 & 0x7C00000000000000) == 0)
    {
      if ((~v16 & 0x7E00000000000000) == 0) {
        my_fpsf |= 1u;
      }
      if ((v16 & 0x3FFFFFFFFFFFLL) > 0x314DC6448D93
        || (unint64_t v22 = v16 & 0xFC003FFFFFFFFFFFLL, v15 >= 0x38C15B0A00000000)
        && (v16 & 0x3FFFFFFFFFFFLL) == 0x314DC6448D93)
      {
        unint64_t v15 = 0;
        unint64_t v22 = v16 & 0xFC00000000000000;
      }
      goto LABEL_62;
    }
LABEL_56:
    __n128 v26 = 0uLL;
    v25[0] = 0;
    v25[1] = 0;
    v27[0] = __bid128_to_binary128(v15, v16, v21, &my_fpsf);
    v27[1] = v23;
    memset(v28, 0, sizeof(v28));
    __dpml_bid_unpack_x_or_y__(v27, 0, (uint64_t)v28, &qword_1BDDBAE40, (uint64_t)v25, v31);
    if (bid_f128_cmp(v25, (uint64_t *)&c_1em40_1195, 1u))
    {
      if (__bid128_isZero(v15, v16)) {
        unint64_t v24 = __bid128_mul(v15, v16, 1uLL, 0x3040000000000000, v21, &my_fpsf);
      }
      else {
        unint64_t v24 = bid128_ext_fma(v31, (int *)v28, &v30, &v29, v15, v16, 1uLL, 0xAFF0000000000000, v15, v16, v21, &my_fpsf);
      }
    }
    else
    {
      __dpml_bid_C_ux_hyperbolic__(&v26, v27, qword_1BDDBB5D0, 0x11846uLL, 0, v31);
      unint64_t v24 = __binary128_to_bid128(v26.n128_u64[0], v26.n128_u64[1], v21, &my_fpsf);
    }
    unint64_t v15 = v24;
LABEL_62:
    *((void *)v6 + 6) = v15;
    *((void *)v6 + 7) = v22;
    return;
  }
LABEL_14:
  int v8 = *a2;
  if (*a2 == 1)
  {
    double v9 = *((double *)a2 + 4);
  }
  else if (v8 == 2)
  {
    if (my_rnd_mode) {
      int v17 = 4;
    }
    else {
      int v17 = 0;
    }
    double v9 = __bid128_to_binary64(*((void *)a2 + 6), *((void *)a2 + 7), v17, &my_fpsf);
  }
  else
  {
    double v9 = 0.0;
    if (v8 == 4)
    {
      unint64_t v10 = *((void *)a2 + 8);
      unint64_t v11 = (uint64_t)rint(1.79769313e308);
      BOOL v12 = (uint64_t)rint(2.22507386e-308) < v10 && v11 > v10;
      double v9 = (double)v10;
      if (!v12) {
        double v9 = NAN;
      }
    }
  }
  double v18 = tanh(v9);
  *((double *)v6 + 4) = v18;
  *((void *)v6 + 8) = (uint64_t)rint(v18);
}

void functionASinH(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionASinH_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void __functionASinH_block_invoke(uint64_t a1, int *a2)
{
  if (a2[19])
  {
    if (g_GeneratingConvertTerm)
    {
LABEL_3:
      int v2 = 11;
LABEL_25:
      uint64_t v14 = *(void *)(a1 + 32);
      *(_DWORD *)(v14 + 204) = v2;
      *(void *)(v14 + 48) = 0;
      *(void *)(v14 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    int v2 = 9;
    goto LABEL_25;
  }
  unint64_t v4 = -1;
  uint64_t v5 = 21;
  while (v4 != 14)
  {
    int v6 = a2[v5];
    ++v4;
    v5 += 2;
    if (v6) {
      goto LABEL_9;
    }
  }
  unint64_t v4 = 15;
LABEL_9:
  if (v4 < 0xF || g_GeneratingConvertTerm)
  {
    if (g_GeneratingConvertTerm) {
      goto LABEL_3;
    }
    goto LABEL_24;
  }
  g_isTrivial = 0;
  int v7 = *(int **)(a1 + 32);
  int v8 = *v7;
  if (*v7 != 4)
  {
    if (v8 == 2)
    {
      int v15 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode) {
          int v21 = 4;
        }
        else {
          int v21 = 0;
        }
        unint64_t v16 = __binary64_to_bid128(v21, &my_fpsf, *((double *)a2 + 4));
        unint64_t v23 = v22;
      }
      else if (v15 == 2)
      {
        unint64_t v16 = *((void *)a2 + 6);
        unint64_t v23 = *((void *)a2 + 7);
      }
      else
      {
        if (v15 == 4) {
          unint64_t v16 = *((void *)a2 + 8);
        }
        else {
          unint64_t v16 = 0;
        }
        unint64_t v23 = 0x3040000000000000;
      }
      if (__bid128_quiet_equal(0, 0x3040000000000000uLL, v16, v23, &my_fpsf))
      {
        *((void *)v7 + 6) = 0;
        *((void *)v7 + 7) = 0x3040000000000000;
      }
      else
      {
        int v24 = *a2;
        if (*a2 == 1)
        {
          if (my_rnd_mode) {
            int v26 = 4;
          }
          else {
            int v26 = 0;
          }
          unint64_t v25 = __binary64_to_bid128(v26, &my_fpsf, *((double *)a2 + 4));
        }
        else if (v24 == 2)
        {
          unint64_t v25 = *((void *)a2 + 6);
          unint64_t v27 = *((void *)a2 + 7);
        }
        else
        {
          if (v24 == 4) {
            unint64_t v25 = *((void *)a2 + 8);
          }
          else {
            unint64_t v25 = 0;
          }
          unint64_t v27 = 0x3040000000000000;
        }
        if (my_rnd_mode) {
          int v28 = 4;
        }
        else {
          int v28 = 0;
        }
        *((void *)v7 + 6) = __bid128_asinh(v25, v27, v28);
        *((void *)v7 + 7) = v29;
      }
      return;
    }
    if (v8 != 1) {
      return;
    }
  }
  int v9 = *a2;
  if (*a2 == 1)
  {
    double v10 = *((double *)a2 + 4);
  }
  else if (v9 == 2)
  {
    unint64_t v17 = *((void *)a2 + 6);
    unint64_t v18 = *((void *)a2 + 7);
    if (my_rnd_mode) {
      int v19 = 4;
    }
    else {
      int v19 = 0;
    }
    double v10 = __bid128_to_binary64(v17, v18, v19, &my_fpsf);
  }
  else
  {
    double v10 = 0.0;
    if (v9 == 4)
    {
      unint64_t v11 = *((void *)a2 + 8);
      unint64_t v12 = (uint64_t)rint(1.79769313e308);
      BOOL v13 = (uint64_t)rint(2.22507386e-308) < v11 && v12 > v11;
      double v10 = (double)v11;
      if (!v13) {
        double v10 = NAN;
      }
    }
  }
  double v20 = asinh(v10);
  *((double *)v7 + 4) = v20;
  *((void *)v7 + 8) = (uint64_t)rint(v20);
}

void functionACosH(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionACosH_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void __functionACosH_block_invoke(uint64_t a1, int *a2)
{
  uint64_t v58 = *MEMORY[0x1E4F143B8];
  if (a2[19])
  {
    if (g_GeneratingConvertTerm)
    {
LABEL_3:
      int v2 = 11;
LABEL_25:
      uint64_t v13 = *(void *)(a1 + 32);
      *(_DWORD *)(v13 + 204) = v2;
      *(void *)(v13 + 48) = 0;
      *(void *)(v13 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    int v2 = 9;
    goto LABEL_25;
  }
  unint64_t v3 = -1;
  uint64_t v4 = 21;
  while (v3 != 14)
  {
    int v5 = a2[v4];
    ++v3;
    v4 += 2;
    if (v5) {
      goto LABEL_9;
    }
  }
  unint64_t v3 = 15;
LABEL_9:
  if (v3 < 0xF || g_GeneratingConvertTerm)
  {
    if (g_GeneratingConvertTerm) {
      goto LABEL_3;
    }
    goto LABEL_24;
  }
  g_isTrivial = 0;
  int v6 = *(int **)(a1 + 32);
  int v7 = *v6;
  if (*v6 != 4)
  {
    if (v7 != 2)
    {
      if (v7 != 1) {
        return;
      }
      goto LABEL_14;
    }
    int v14 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode) {
        int v19 = 4;
      }
      else {
        int v19 = 0;
      }
      unint64_t v15 = __binary64_to_bid128(v19, &my_fpsf, *((double *)a2 + 4));
      unint64_t v16 = v20;
    }
    else if (v14 == 2)
    {
      unint64_t v15 = *((void *)a2 + 6);
      unint64_t v16 = *((void *)a2 + 7);
    }
    else
    {
      if (v14 != 4)
      {
        unint64_t v15 = 0;
        unint64_t v31 = 0;
        uint64_t v32 = 0;
        if (my_rnd_mode) {
          int v21 = 4;
        }
        else {
          int v21 = 0;
        }
        unint64_t v16 = 0x3040000000000000;
        goto LABEL_82;
      }
      unint64_t v15 = *((void *)a2 + 8);
      unint64_t v16 = 0x3040000000000000;
    }
    if (my_rnd_mode) {
      int v21 = 4;
    }
    else {
      int v21 = 0;
    }
    if (((v16 >> 61) & 3) == 3)
    {
      if ((v16 & 0x7800000000000000) == 0x7800000000000000)
      {
        unint64_t v22 = v16 & 0x3FFFFFFFFFFFLL;
        BOOL v24 = (v16 & 0x3FFFFFFFFFFFLL) != 0x314DC6448D93 || v15 < 0x38C15B0A00000000;
        BOOL v25 = !v24;
        unint64_t v26 = 0xFE003FFFFFFFFFFFLL;
        if (v25) {
          unint64_t v26 = 0xFE00000000000000;
        }
        if (v25) {
          unint64_t v27 = 0;
        }
        else {
          unint64_t v27 = v15;
        }
        BOOL v28 = v22 > 0x314DC6448D93;
        if (v22 <= 0x314DC6448D93) {
          unint64_t v29 = v26;
        }
        else {
          unint64_t v29 = 0xFE00000000000000;
        }
        if (v28) {
          unint64_t v30 = 0;
        }
        else {
          unint64_t v30 = v27;
        }
        if ((v16 & 0x7C00000000000000) == 0x7800000000000000)
        {
          unint64_t v29 = 0xF800000000000000;
          unint64_t v31 = 0;
        }
        else
        {
          unint64_t v31 = v30;
        }
        if ((v16 & 0x7C00000000000000) == 0x7C00000000000000)
        {
          uint64_t v32 = v29 & v16;
LABEL_84:
          if ((~v16 & 0x7E00000000000000) == 0) {
            my_fpsf |= 1u;
          }
          unint64_t v34 = v32 & 0xFDFFFFFFFFFFFFFFLL;
          goto LABEL_103;
        }
        if ((v16 & 0x8000000000000000) == 0)
        {
          unint64_t v31 = 0;
          unint64_t v34 = 0x7800000000000000;
LABEL_103:
          *((void *)v6 + 6) = v31;
          *((void *)v6 + 7) = v34;
          return;
        }
LABEL_89:
        unint64_t v31 = 0;
        my_fpsf |= 1u;
        unint64_t v34 = 0x7C00000000000000;
        goto LABEL_103;
      }
      uint64_t v32 = 0;
      unint64_t v31 = 0;
      uint64_t v33 = (v16 >> 47) & 0x3FFF;
LABEL_83:
      if ((~v16 & 0x7C00000000000000) == 0) {
        goto LABEL_84;
      }
LABEL_87:
      __n128 v50 = 0uLL;
      __n128 v48 = 0uLL;
      __n128 v47 = 0uLL;
      if (__bid128_quiet_less(v15, v16, 0x192D5uLL, 0x3036000000000000, &my_fpsf))
      {
        if (__bid128_quiet_greater(1uLL, 0x3040000000000000, v15, v16, &my_fpsf)) {
          goto LABEL_89;
        }
        unint64_t v39 = bid128_ext_fma((int *)v54, v53, &v52, &v51, v15, v16, v15, v16, 1uLL, 0xB040000000000000, v21, &my_fpsf);
        unint64_t v41 = __bid128_sqrt(v39, v40, v21);
        v49.n128_u64[0] = __bid128_to_binary128(v41, v42, v21, &my_fpsf);
        v49.n128_u64[1] = v43;
        bid_f128_asinh(&v50, (uint64_t *)&v49);
        unint64_t v37 = v50.n128_u64[1];
        unint64_t v36 = v50.n128_u64[0];
        int v38 = v21;
      }
      else if (v33 < 0x1843)
      {
        v49.n128_u64[0] = __bid128_to_binary128(v15, v16, v21, &my_fpsf);
        v49.n128_u64[1] = v44;
        if ((__dpml_bid_unpack_x_or_y__((uint64_t *)&v49, 0, (uint64_t)v56, qword_1BDDBBB08, (uint64_t)&v50, v53) & 0x8000000000000000) == 0)
        {
          int v45 = v56[1];
          unint64_t v46 = v57;
          __dpml_bid_addsub__((uint64_t)v56, dword_1BDDBBB40, 2, (uint64_t)v54);
          if (v55[0].i32[0])
          {
            v54[0].i32[1] = 0x8000;
          }
          else if (v45 == 1 && v46 <= 0x87C3B666FB66CB63)
          {
            __dpml_bid_divide__((uint64_t)v55, v54, 2, (uint64_t)v54);
            __dpml_bid_ux_sqrt_evaluation__(v54, v55);
            __dpml_bid_evaluate_rational__(v55, (uint64_t)&unk_1BDDBC4C8, 17, 6uLL, (uint64_t)v54);
            __dpml_bid_multiply__(v54, qword_1BDDBC620, v54);
          }
          else
          {
            __dpml_bid_multiply__(v55, v54, v54);
            __dpml_bid_ffs_and_shift__((uint64_t)v54, 0);
            __dpml_bid_ux_sqrt_evaluation__(v54, v54);
            __dpml_bid_addsub__((uint64_t)v54, v56, 0, (uint64_t)v54);
            __dpml_bid_ux_log__((uint64_t)v54, qword_1BDDBBB58, v54);
          }
          __dpml_bid_pack__((unsigned int *)v54, &v50, 0, 2);
        }
        unint64_t v37 = v50.n128_u64[1];
        unint64_t v36 = v50.n128_u64[0];
        int v38 = v21;
      }
      else
      {
        v49.n128_u64[0] = __bid128_to_binary128(v31, v32 | 0x3040000000000000, v21, &my_fpsf);
        v49.n128_u64[1] = v35;
        bid_f128_add(&v49, (uint64_t *)&v49, (uint64_t *)&v49);
        bid_f128_itof(&v48, v33 - 6176);
        bid_f128_log(&v50, (uint64_t *)&v49);
        bid_f128_mul(&v47, (uint64_t *)&v48, (uint64_t *)&c_log10);
        bid_f128_add(&v50, (uint64_t *)&v50, (uint64_t *)&v47);
        unint64_t v37 = v50.n128_u64[1];
        unint64_t v36 = v50.n128_u64[0];
        int v38 = v21;
      }
      unint64_t v31 = __binary128_to_bid128(v36, v37, v38, &my_fpsf);
      goto LABEL_103;
    }
    uint64_t v32 = v16 & 0x1FFFFFFFFFFFFLL;
    if ((v16 & 0x1FFFFFFFFFFFFLL) > 0x1ED09BEAD87C0
      || (v16 & 0x1FFFFFFFFFFFFLL) == 0x1ED09BEAD87C0 && v15 >= 0x378D8E6400000000)
    {
      unint64_t v31 = 0;
      uint64_t v32 = 0;
    }
    else
    {
      unint64_t v31 = v15;
    }
LABEL_82:
    uint64_t v33 = (v16 >> 49) & 0x3FFF;
    if (v32 | v31) {
      goto LABEL_87;
    }
    goto LABEL_83;
  }
LABEL_14:
  int v8 = *a2;
  if (*a2 == 1)
  {
    double v9 = *((double *)a2 + 4);
  }
  else if (v8 == 2)
  {
    if (my_rnd_mode) {
      int v17 = 4;
    }
    else {
      int v17 = 0;
    }
    double v9 = __bid128_to_binary64(*((void *)a2 + 6), *((void *)a2 + 7), v17, &my_fpsf);
  }
  else
  {
    double v9 = 0.0;
    if (v8 == 4)
    {
      unint64_t v10 = *((void *)a2 + 8);
      unint64_t v11 = (uint64_t)rint(1.79769313e308);
      BOOL v12 = (uint64_t)rint(2.22507386e-308) < v10 && v11 > v10;
      double v9 = (double)v10;
      if (!v12) {
        double v9 = NAN;
      }
    }
  }
  double v18 = acosh(v9);
  *((double *)v6 + 4) = v18;
  *((void *)v6 + 8) = (uint64_t)rint(v18);
}

void functionATanH(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionATanH_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

void __functionATanH_block_invoke(uint64_t a1, int *a2)
{
  if (a2[19])
  {
    if (g_GeneratingConvertTerm)
    {
LABEL_3:
      int v3 = 11;
LABEL_25:
      uint64_t v15 = *(void *)(a1 + 32);
      *(_DWORD *)(v15 + 204) = v3;
      *(void *)(v15 + 48) = 0;
      *(void *)(v15 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    int v3 = 9;
    goto LABEL_25;
  }
  unint64_t v5 = -1;
  uint64_t v6 = 21;
  while (v5 != 14)
  {
    int v7 = a2[v6];
    ++v5;
    v6 += 2;
    if (v7) {
      goto LABEL_9;
    }
  }
  unint64_t v5 = 15;
LABEL_9:
  if (v5 < 0xF || g_GeneratingConvertTerm)
  {
    if (g_GeneratingConvertTerm) {
      goto LABEL_3;
    }
    goto LABEL_24;
  }
  g_isTrivial = 0;
  int v8 = *(int **)(a1 + 32);
  int v9 = *v8;
  if (*v8 != 4)
  {
    if (v9 == 2)
    {
      int v16 = *a2;
      if (*a2 == 1)
      {
        if (my_rnd_mode) {
          int v22 = 4;
        }
        else {
          int v22 = 0;
        }
        unint64_t v17 = __binary64_to_bid128(v22, &my_fpsf, *((double *)a2 + 4));
        unint64_t v24 = v23;
      }
      else if (v16 == 2)
      {
        unint64_t v17 = *((void *)a2 + 6);
        unint64_t v24 = *((void *)a2 + 7);
      }
      else
      {
        if (v16 == 4) {
          unint64_t v17 = *((void *)a2 + 8);
        }
        else {
          unint64_t v17 = 0;
        }
        unint64_t v24 = 0x3040000000000000;
      }
      if (__bid128_quiet_equal(0, 0x3040000000000000uLL, v17, v24, &my_fpsf))
      {
        *((void *)v8 + 6) = 0;
        *((void *)v8 + 7) = 0x3040000000000000;
      }
      else
      {
        int v25 = *a2;
        if (*a2 == 1)
        {
          if (my_rnd_mode) {
            int v27 = 4;
          }
          else {
            int v27 = 0;
          }
          unint64_t v26 = __binary64_to_bid128(v27, &my_fpsf, *((double *)a2 + 4));
          unint64_t v29 = v28;
        }
        else if (v25 == 2)
        {
          unint64_t v26 = *((void *)a2 + 6);
          unint64_t v29 = *((void *)a2 + 7);
        }
        else
        {
          if (v25 == 4) {
            unint64_t v26 = *((void *)a2 + 8);
          }
          else {
            unint64_t v26 = 0;
          }
          unint64_t v29 = 0x3040000000000000;
        }
        if (__bid128_quiet_equal(1uLL, 0x3040000000000000uLL, v26, v29, &my_fpsf))
        {
          *((void *)v8 + 6) = 0;
          *((void *)v8 + 7) = 0x7C00000000000000;
        }
        else
        {
          unint64_t v30 = treeDecimalValue((double *)a2);
          BOOL v32 = __bid128_quiet_equal(1uLL, 0xB040000000000000, v30, v31, &my_fpsf);
          uint64_t v33 = *(void *)(a1 + 32);
          if (v32)
          {
            *(void *)(v33 + 48) = 0;
            *(void *)(v33 + 56) = 0x7C00000000000000;
          }
          else
          {
            unint64_t v34 = treeDecimalValue((double *)a2);
            if (my_rnd_mode) {
              int v36 = 4;
            }
            else {
              int v36 = 0;
            }
            *(void *)(v33 + 48) = __bid128_atanh(v34, v35, v36);
            *(void *)(v33 + 56) = v37;
          }
        }
      }
      return;
    }
    if (v9 != 1) {
      return;
    }
  }
  int v10 = *a2;
  if (*a2 == 1)
  {
    double v11 = *((double *)a2 + 4);
  }
  else if (v10 == 2)
  {
    unint64_t v18 = *((void *)a2 + 6);
    unint64_t v19 = *((void *)a2 + 7);
    if (my_rnd_mode) {
      int v20 = 4;
    }
    else {
      int v20 = 0;
    }
    double v11 = __bid128_to_binary64(v18, v19, v20, &my_fpsf);
  }
  else
  {
    double v11 = 0.0;
    if (v10 == 4)
    {
      unint64_t v12 = *((void *)a2 + 8);
      unint64_t v13 = (uint64_t)rint(1.79769313e308);
      BOOL v14 = (uint64_t)rint(2.22507386e-308) < v12 && v13 > v12;
      double v11 = (double)v12;
      if (!v14) {
        double v11 = NAN;
      }
    }
  }
  double v21 = atanh(v11);
  *((double *)v8 + 4) = v21;
  *((void *)v8 + 8) = (uint64_t)rint(v21);
}

void functionCsc(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = malloc_type_calloc(1uLL, 0xD0uLL, 0x10A00405A5B035DuLL);
  if (my_rnd_mode) {
    int v5 = 4;
  }
  else {
    int v5 = 0;
  }
  unint64_t v6 = __bid128_from_string("1", v5, &my_fpsf);
  int v8 = newDecimalNode(v6, v7);
  int v9 = newTreeObject((uint64_t)functionDivide, (uint64_t)v8, (uint64_t)v4);
  functionSine(a1, (uint64_t)v4);
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __functionDivide_block_invoke;
  v10[3] = &__block_descriptor_48_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v10[4] = a2;
  v10[5] = v9;
  evaluateBinary((uint64_t)v9, a2, v10);
  freeTree(v9);
}

void functionSec(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = malloc_type_calloc(1uLL, 0xD0uLL, 0x10A00405A5B035DuLL);
  if (my_rnd_mode) {
    int v5 = 4;
  }
  else {
    int v5 = 0;
  }
  unint64_t v6 = __bid128_from_string("1", v5, &my_fpsf);
  int v8 = newDecimalNode(v6, v7);
  int v9 = newTreeObject((uint64_t)functionDivide, (uint64_t)v8, (uint64_t)v4);
  functionCos(a1, (uint64_t)v4);
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __functionDivide_block_invoke;
  v10[3] = &__block_descriptor_48_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v10[4] = a2;
  v10[5] = v9;
  evaluateBinary((uint64_t)v9, a2, v10);
  freeTree(v9);
}

void functionCot(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = malloc_type_calloc(1uLL, 0xD0uLL, 0x10A00405A5B035DuLL);
  if (my_rnd_mode) {
    int v5 = 4;
  }
  else {
    int v5 = 0;
  }
  unint64_t v6 = __bid128_from_string("1", v5, &my_fpsf);
  int v8 = newDecimalNode(v6, v7);
  int v9 = newTreeObject((uint64_t)functionDivide, (uint64_t)v8, (uint64_t)v4);
  functionTan(a1, (uint64_t)v4);
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __functionDivide_block_invoke;
  v10[3] = &__block_descriptor_48_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v10[4] = a2;
  v10[5] = v9;
  evaluateBinary((uint64_t)v9, a2, v10);
  freeTree(v9);
}

void functionCscH(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = malloc_type_calloc(1uLL, 0xD0uLL, 0x10A00405A5B035DuLL);
  if (my_rnd_mode) {
    int v5 = 4;
  }
  else {
    int v5 = 0;
  }
  unint64_t v6 = __bid128_from_string("1", v5, &my_fpsf);
  int v8 = newDecimalNode(v6, v7);
  int v9 = newTreeObject((uint64_t)functionDivide, (uint64_t)v8, (uint64_t)v4);
  uint64_t v10 = MEMORY[0x1E4F143A8];
  uint64_t v11 = 3221225472;
  unint64_t v12 = __functionSinH_block_invoke;
  unint64_t v13 = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  uint64_t v14 = (uint64_t)v4;
  evaluateUnary(a1, (uint64_t)v4, &v10);
  uint64_t v10 = MEMORY[0x1E4F143A8];
  uint64_t v11 = 3221225472;
  unint64_t v12 = __functionDivide_block_invoke;
  unint64_t v13 = &__block_descriptor_48_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  uint64_t v14 = a2;
  uint64_t v15 = v9;
  evaluateBinary((uint64_t)v9, a2, &v10);
  freeTree(v9);
}

void functionSecH(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = malloc_type_calloc(1uLL, 0xD0uLL, 0x10A00405A5B035DuLL);
  if (my_rnd_mode) {
    int v5 = 4;
  }
  else {
    int v5 = 0;
  }
  unint64_t v6 = __bid128_from_string("1", v5, &my_fpsf);
  int v8 = newDecimalNode(v6, v7);
  int v9 = newTreeObject((uint64_t)functionDivide, (uint64_t)v8, (uint64_t)v4);
  uint64_t v10 = MEMORY[0x1E4F143A8];
  uint64_t v11 = 3221225472;
  unint64_t v12 = __functionCosH_block_invoke;
  unint64_t v13 = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  uint64_t v14 = (uint64_t)v4;
  evaluateUnary(a1, (uint64_t)v4, &v10);
  uint64_t v10 = MEMORY[0x1E4F143A8];
  uint64_t v11 = 3221225472;
  unint64_t v12 = __functionDivide_block_invoke;
  unint64_t v13 = &__block_descriptor_48_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  uint64_t v14 = a2;
  uint64_t v15 = v9;
  evaluateBinary((uint64_t)v9, a2, &v10);
  freeTree(v9);
}

void functionCotH(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = malloc_type_calloc(1uLL, 0xD0uLL, 0x10A00405A5B035DuLL);
  if (my_rnd_mode) {
    int v5 = 4;
  }
  else {
    int v5 = 0;
  }
  unint64_t v6 = __bid128_from_string("1", v5, &my_fpsf);
  int v8 = newDecimalNode(v6, v7);
  int v9 = newTreeObject((uint64_t)functionDivide, (uint64_t)v8, (uint64_t)v4);
  uint64_t v10 = MEMORY[0x1E4F143A8];
  uint64_t v11 = 3221225472;
  unint64_t v12 = __functionTanH_block_invoke;
  unint64_t v13 = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  uint64_t v14 = (uint64_t)v4;
  evaluateUnary(a1, (uint64_t)v4, &v10);
  uint64_t v10 = MEMORY[0x1E4F143A8];
  uint64_t v11 = 3221225472;
  unint64_t v12 = __functionDivide_block_invoke;
  unint64_t v13 = &__block_descriptor_48_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  uint64_t v14 = a2;
  uint64_t v15 = v9;
  evaluateBinary((uint64_t)v9, a2, &v10);
  freeTree(v9);
}

void functionCeil(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionCeil_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

__n128 __functionCeil_block_invoke(uint64_t a1, int *a2, __n128 result)
{
  if (g_GeneratingConvertTerm == 1)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    *(_DWORD *)(v4 + 204) = 11;
    *(void *)(v4 + 48) = 0;
    *(void *)(v4 + 56) = 0x7C00000000000000;
    return result;
  }
  g_isTrivial = 0;
  unint64_t v6 = *(int **)(a1 + 32);
  int v7 = *v6;
  if (*v6 == 4) {
    goto LABEL_6;
  }
  if (v7 == 2)
  {
    int v13 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode) {
        int v20 = 4;
      }
      else {
        int v20 = 0;
      }
      unint64_t v14 = __binary64_to_bid128(v20, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v13 == 2)
    {
      unint64_t v14 = *((void *)a2 + 6);
      uint64_t v15 = *((void *)a2 + 7);
    }
    else
    {
      if (v13 != 4)
      {
        unint64_t v21 = 0;
        unint64_t v14 = 0;
        unint64_t v22 = 0;
        unint64_t v23 = 0;
        uint64_t v15 = 0x3040000000000000;
        uint64_t v24 = 0x3040000000000000;
        goto LABEL_51;
      }
      unint64_t v14 = *((void *)a2 + 8);
      uint64_t v15 = 0x3040000000000000;
    }
    if ((~v15 & 0x7800000000000000) == 0)
    {
      if ((~v15 & 0x7C00000000000000) != 0)
      {
        unint64_t v14 = 0;
        if (v15 < 0) {
          uint64_t v15 = 0xF800000000000000;
        }
        else {
          uint64_t v15 = 0x7800000000000000;
        }
      }
      else
      {
        if ((v15 & 0x3FFFFFFFFFFFuLL) > 0x314DC6448D93
          || v14 >= 0x38C15B0A00000000 && (v15 & 0x3FFFFFFFFFFFLL) == 0x314DC6448D93)
        {
          unint64_t v14 = 0;
          v15 &= 0xFFFFC00000000000;
        }
        if ((~v15 & 0x7E00000000000000) == 0) {
          my_fpsf |= 1u;
        }
        v15 &= 0xFC003FFFFFFFFFFFLL;
      }
      goto LABEL_109;
    }
    unint64_t v21 = v15 & 0x8000000000000000;
    if ((~v15 & 0x6000000000000000) != 0)
    {
      unint64_t v22 = v15 & 0x1FFFFFFFFFFFFLL;
      if ((v15 & 0x1FFFFFFFFFFFFuLL) > 0x1ED09BEAD87C0 || v14 >= 0x378D8E6400000000 && v22 == 0x1ED09BEAD87C0)
      {
        unint64_t v22 = 0;
        unint64_t v23 = 0;
      }
      else
      {
        unint64_t v23 = v14;
      }
      uint64_t v24 = v15;
    }
    else
    {
      unint64_t v22 = 0;
      unint64_t v23 = 0;
      uint64_t v24 = 4 * v15;
    }
LABEL_51:
    unint64_t v25 = v24 & 0x7FFE000000000000;
    if (!(v23 | v22))
    {
      unint64_t v14 = 0;
      uint64_t v27 = 0x3040000000000000;
      if (v25 > 0x3040000000000000) {
        uint64_t v27 = v25;
      }
      uint64_t v15 = v27 | v21;
      goto LABEL_109;
    }
    if (v25 <= 0x2FFC000000000000) {
      goto LABEL_53;
    }
    unint64_t v28 = HIDWORD(v23);
    if (v23 >> 53) {
      unint64_t v29 = HIDWORD(v23);
    }
    else {
      unint64_t v29 = v23;
    }
    if (v23 >> 53) {
      int v30 = -990;
    }
    else {
      int v30 = -1022;
    }
    if (v22) {
      unint64_t v29 = v22;
    }
    unint64_t v31 = (COERCE_UNSIGNED_INT64((double)v29) >> 52) & 0x7FF;
    if (v22) {
      int v30 = -958;
    }
    uint64_t v32 = (v31 + v30 - 1);
    int v33 = *((_DWORD *)&__bid_nr_digits + 8 * v32);
    if (!v33)
    {
      unint64_t v34 = (char *)&__bid_nr_digits + 32 * v32;
      int v33 = *((_DWORD *)v34 + 6);
      unint64_t v35 = *((void *)v34 + 1);
      if (v22 > v35 || v22 == v35 && v23 >= *((void *)&__bid_nr_digits + 4 * v32 + 2)) {
        ++v33;
      }
    }
    unint64_t v36 = v25 >> 49;
    if ((v25 >> 49) >> 5 > 0xC0) {
      goto LABEL_109;
    }
    if ((int)v36 + v33 - 6176 < 1)
    {
LABEL_53:
      unint64_t v14 = v21 == 0;
      uint64_t v26 = 0x3040000000000000;
LABEL_108:
      uint64_t v15 = v21 | v26;
LABEL_109:
      *((void *)v6 + 6) = v14;
      *((void *)v6 + 7) = v15;
      unint64_t v6 = *(int **)(a1 + 32);
      goto LABEL_110;
    }
    unsigned int v37 = v23;
    uint64_t v38 = (6175 - v36);
    unint64_t v39 = __bid_ten2mk128[2 * v38];
    unint64_t v40 = __bid_ten2mk128[2 * v38 + 1];
    unint64_t v41 = v40 * (unint64_t)HIDWORD(v23);
    unint64_t v42 = HIDWORD(v41) + HIDWORD(v40) * (unint64_t)HIDWORD(v23);
    unint64_t v43 = HIDWORD(v40) * (unint64_t)v23
        + v41
        + ((v40 * (unint64_t)v23) >> 32);
    unint64_t v44 = (v40 * v23) | ((unint64_t)v43 << 32);
    unint64_t v45 = v39 * (unint64_t)HIDWORD(v23);
    unint64_t v46 = v39 * (unint64_t)v23;
    unint64_t v47 = HIDWORD(v39) * (unint64_t)v37 + v45 + HIDWORD(v46);
    unint64_t v48 = v46 | ((unint64_t)v47 << 32);
    unint64_t v50 = v44 + HIDWORD(v45) + HIDWORD(v39) * (unint64_t)v28 + HIDWORD(v47);
    uint64_t v49 = (__PAIR128__(v42, v44)
         + __PAIR128__(HIDWORD(v43), HIDWORD(v45) + HIDWORD(v39) * (unint64_t)v28 + HIDWORD(v47))) >> 64;
    unint64_t v51 = HIDWORD(v22);
    unsigned int v52 = v22;
    unint64_t v53 = v40 * (unint64_t)HIDWORD(v22);
    unint64_t v54 = HIDWORD(v53) + HIDWORD(v40) * (unint64_t)HIDWORD(v22);
    unint64_t v55 = HIDWORD(v40) * (unint64_t)v22
        + v53
        + ((v40 * (unint64_t)v22) >> 32);
    unint64_t v56 = HIDWORD(v55);
    unint64_t v57 = (v40 * v22) | ((unint64_t)v55 << 32);
    unint64_t v58 = v39 * (unint64_t)HIDWORD(v22);
    unint64_t v59 = v39 * (unint64_t)v22;
    unint64_t v60 = HIDWORD(v58) + HIDWORD(v39) * (unint64_t)v51;
    unint64_t v61 = HIDWORD(v39) * (unint64_t)v52 + v58 + HIDWORD(v59);
    unint64_t v62 = v59 | ((unint64_t)v61 << 32);
    unint64_t v64 = v57 + v60 + HIDWORD(v61);
    uint64_t v63 = (__PAIR128__(v54, v57) + __PAIR128__(v56, v60 + HIDWORD(v61))) >> 64;
    unsigned long long v65 = __PAIR128__(v64, v50) + v62;
    BOOL v66 = __CFADD__(__CFADD__(v50, v62), v64);
    unint64_t v14 = v49 + *((void *)&v65 + 1);
    uint64_t v67 = __CFADD__(v49, *((void *)&v65 + 1)) || v66;
    unint64_t v68 = v63 + v67;
    if (v36 >= 0x181D)
    {
      if (!v21 && ((unint64_t)v65 > v40 || (void)v65 == v40 && v48 >= v39) && __CFADD__(v14++, 1)) {
        ++v68;
      }
      goto LABEL_107;
    }
    int v70 = __bid_shiftright128[v38];
    if (v36 >> 1 >= 0xC05)
    {
      unint64_t v71 = v68 >> v70;
      unint64_t v72 = (v68 << -(char)v70) | (v14 >> v70);
      if (v21)
      {
LABEL_90:
        unint64_t v68 = v71;
        unint64_t v14 = v72;
LABEL_107:
        uint64_t v26 = v68 | 0x3040000000000000;
        goto LABEL_108;
      }
      if ((__bid_maskhigh128[v38] & v14) == 0 && (unint64_t)v65 <= v40)
      {
        if ((void)v65 != v40) {
          goto LABEL_90;
        }
        unint64_t v68 = v71;
        unint64_t v14 = v72;
        if (v48 < v39) {
          goto LABEL_107;
        }
      }
      unint64_t v14 = v72 + 1;
      if (v72 == -1) {
        unint64_t v68 = v71 + 1;
      }
      else {
        unint64_t v68 = v71;
      }
      goto LABEL_107;
    }
    unint64_t v73 = v68 >> v70;
    if (v21)
    {
      unint64_t v68 = 0;
LABEL_93:
      unint64_t v14 = v73;
      goto LABEL_107;
    }
    if ((__bid_maskhigh128[v38] & v68) == 0 && !v14 && (unint64_t)v65 <= v40)
    {
      unint64_t v68 = 0;
      if ((void)v65 != v40) {
        goto LABEL_93;
      }
      unint64_t v14 = v73;
      if (v48 < v39) {
        goto LABEL_107;
      }
    }
    unint64_t v68 = 0;
    unint64_t v14 = v73 + 1;
    goto LABEL_107;
  }
  if (v7 == 1)
  {
LABEL_6:
    int v8 = *a2;
    if (*a2 == 1)
    {
      double v9 = *((double *)a2 + 4);
    }
    else if (v8 == 2)
    {
      unint64_t v16 = *((void *)a2 + 6);
      unint64_t v17 = *((void *)a2 + 7);
      if (my_rnd_mode) {
        int v18 = 4;
      }
      else {
        int v18 = 0;
      }
      double v9 = __bid128_to_binary64(v16, v17, v18, &my_fpsf);
    }
    else
    {
      double v9 = 0.0;
      if (v8 == 4)
      {
        unint64_t v10 = *((void *)a2 + 8);
        unint64_t v11 = (uint64_t)rint(1.79769313e308);
        BOOL v12 = (uint64_t)rint(2.22507386e-308) < v10 && v11 > v10;
        double v9 = (double)v10;
        if (!v12) {
          double v9 = NAN;
        }
      }
    }
    double v19 = ceil(v9);
    *((double *)v6 + 4) = v19;
    *((void *)v6 + 8) = (uint64_t)rint(v19);
  }
LABEL_110:
  long long v74 = *(_OWORD *)(a2 + 18);
  long long v75 = *(_OWORD *)(a2 + 22);
  long long v76 = *(_OWORD *)(a2 + 26);
  *(_OWORD *)(v6 + 30) = *(_OWORD *)(a2 + 30);
  *(_OWORD *)(v6 + 26) = v76;
  *(_OWORD *)(v6 + 22) = v75;
  *(_OWORD *)(v6 + 18) = v74;
  uint64_t result = *(__n128 *)(a2 + 34);
  long long v77 = *(_OWORD *)(a2 + 38);
  long long v78 = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(v6 + 46) = *(_OWORD *)(a2 + 46);
  *(_OWORD *)(v6 + 42) = v78;
  *(_OWORD *)(v6 + 38) = v77;
  *(__n128 *)(v6 + 34) = result;
  return result;
}

void functionFloor(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionFloor_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

__n128 __functionFloor_block_invoke(uint64_t a1, int *a2, __n128 result)
{
  if (g_GeneratingConvertTerm == 1)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    *(_DWORD *)(v4 + 204) = 11;
    *(void *)(v4 + 48) = 0;
    *(void *)(v4 + 56) = 0x7C00000000000000;
    return result;
  }
  g_isTrivial = 0;
  unint64_t v6 = *(int **)(a1 + 32);
  int v7 = *v6;
  if (*v6 == 4) {
    goto LABEL_6;
  }
  if (v7 == 2)
  {
    int v13 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode) {
        int v19 = 4;
      }
      else {
        int v19 = 0;
      }
      unint64_t v14 = __binary64_to_bid128(v19, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v13 == 2)
    {
      unint64_t v14 = *((void *)a2 + 6);
      uint64_t v20 = *((void *)a2 + 7);
    }
    else
    {
      if (v13 == 4) {
        unint64_t v14 = *((void *)a2 + 8);
      }
      else {
        unint64_t v14 = 0;
      }
      uint64_t v20 = 0x3040000000000000;
    }
    *((void *)v6 + 6) = __bid128_round_integral_negative(v14, v20, &my_fpsf);
    *((void *)v6 + 7) = v21;
    unint64_t v6 = *(int **)(a1 + 32);
  }
  else if (v7 == 1)
  {
LABEL_6:
    int v8 = *a2;
    if (*a2 == 1)
    {
      double v9 = *((double *)a2 + 4);
    }
    else if (v8 == 2)
    {
      unint64_t v15 = *((void *)a2 + 6);
      unint64_t v16 = *((void *)a2 + 7);
      if (my_rnd_mode) {
        int v17 = 4;
      }
      else {
        int v17 = 0;
      }
      double v9 = __bid128_to_binary64(v15, v16, v17, &my_fpsf);
    }
    else
    {
      double v9 = 0.0;
      if (v8 == 4)
      {
        unint64_t v10 = *((void *)a2 + 8);
        unint64_t v11 = (uint64_t)rint(1.79769313e308);
        BOOL v12 = (uint64_t)rint(2.22507386e-308) < v10 && v11 > v10;
        double v9 = (double)v10;
        if (!v12) {
          double v9 = NAN;
        }
      }
    }
    double v18 = floor(v9);
    *((double *)v6 + 4) = v18;
    *((void *)v6 + 8) = (uint64_t)rint(v18);
  }
  long long v22 = *(_OWORD *)(a2 + 18);
  long long v23 = *(_OWORD *)(a2 + 22);
  long long v24 = *(_OWORD *)(a2 + 26);
  *(_OWORD *)(v6 + 30) = *(_OWORD *)(a2 + 30);
  *(_OWORD *)(v6 + 26) = v24;
  *(_OWORD *)(v6 + 22) = v23;
  *(_OWORD *)(v6 + 18) = v22;
  uint64_t result = *(__n128 *)(a2 + 34);
  long long v25 = *(_OWORD *)(a2 + 38);
  long long v26 = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(v6 + 46) = *(_OWORD *)(a2 + 46);
  *(_OWORD *)(v6 + 42) = v26;
  *(_OWORD *)(v6 + 38) = v25;
  *(__n128 *)(v6 + 34) = result;
  return result;
}

void functionRound(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionRound_block_invoke;
  v2[3] = &__block_descriptor_40_e83_v16__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8l;
  v2[4] = a2;
  evaluateUnary(a1, a2, v2);
}

__n128 __functionRound_block_invoke(uint64_t a1, int *a2, __n128 result)
{
  if (g_GeneratingConvertTerm == 1)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    *(_DWORD *)(v4 + 204) = 11;
    *(void *)(v4 + 48) = 0;
    *(void *)(v4 + 56) = 0x7C00000000000000;
    return result;
  }
  g_isTrivial = 0;
  unint64_t v6 = *(int **)(a1 + 32);
  int v7 = *v6;
  if (*v6 == 4) {
    goto LABEL_6;
  }
  if (v7 == 2)
  {
    int v13 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode) {
        int v19 = 4;
      }
      else {
        int v19 = 0;
      }
      unint64_t v14 = __binary64_to_bid128(v19, &my_fpsf, *((double *)a2 + 4));
    }
    else if (v13 == 2)
    {
      unint64_t v14 = *((void *)a2 + 6);
      uint64_t v20 = *((void *)a2 + 7);
    }
    else
    {
      if (v13 == 4) {
        unint64_t v14 = *((void *)a2 + 8);
      }
      else {
        unint64_t v14 = 0;
      }
      uint64_t v20 = 0x3040000000000000;
    }
    if (my_rnd_mode) {
      int v21 = 4;
    }
    else {
      int v21 = 0;
    }
    *((void *)v6 + 6) = __bid128_round_integral_exact(v14, v20, v21, &my_fpsf);
    *((void *)v6 + 7) = v22;
    unint64_t v6 = *(int **)(a1 + 32);
  }
  else if (v7 == 1)
  {
LABEL_6:
    int v8 = *a2;
    if (*a2 == 1)
    {
      double v9 = *((double *)a2 + 4);
    }
    else if (v8 == 2)
    {
      unint64_t v15 = *((void *)a2 + 6);
      unint64_t v16 = *((void *)a2 + 7);
      if (my_rnd_mode) {
        int v17 = 4;
      }
      else {
        int v17 = 0;
      }
      double v9 = __bid128_to_binary64(v15, v16, v17, &my_fpsf);
    }
    else
    {
      double v9 = 0.0;
      if (v8 == 4)
      {
        unint64_t v10 = *((void *)a2 + 8);
        unint64_t v11 = (uint64_t)rint(1.79769313e308);
        BOOL v12 = (uint64_t)rint(2.22507386e-308) < v10 && v11 > v10;
        double v9 = (double)v10;
        if (!v12) {
          double v9 = NAN;
        }
      }
    }
    double v18 = round(v9);
    *((double *)v6 + 4) = v18;
    *((void *)v6 + 8) = (uint64_t)rint(v18);
  }
  long long v23 = *(_OWORD *)(a2 + 18);
  long long v24 = *(_OWORD *)(a2 + 22);
  long long v25 = *(_OWORD *)(a2 + 26);
  *(_OWORD *)(v6 + 30) = *(_OWORD *)(a2 + 30);
  *(_OWORD *)(v6 + 26) = v25;
  *(_OWORD *)(v6 + 22) = v24;
  *(_OWORD *)(v6 + 18) = v23;
  uint64_t result = *(__n128 *)(a2 + 34);
  long long v26 = *(_OWORD *)(a2 + 38);
  long long v27 = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(v6 + 46) = *(_OWORD *)(a2 + 46);
  *(_OWORD *)(v6 + 42) = v27;
  *(_OWORD *)(v6 + 38) = v26;
  *(__n128 *)(v6 + 34) = result;
  return result;
}

void functionRoundNearest(uint64_t a1, uint64_t a2)
{
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __functionRoundNearest_block_invoke;
  v2[3] = &__block_descriptor_40_e161_v24__0__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_8__TreeObject_i____TreeObject___TreeObject_d____2Q__Q_16_UnitCount_ii__BBBBi_16l;
  v2[4] = a2;
  evaluateBinary(a1, a2, v2);
}

void __functionRoundNearest_block_invoke(uint64_t a1, int *a2, int *a3)
{
  if (a3[19])
  {
    if (g_GeneratingConvertTerm)
    {
LABEL_3:
      int v4 = 11;
LABEL_25:
      uint64_t v17 = *(void *)(a1 + 32);
      *(_DWORD *)(v17 + 204) = v4;
      *(void *)(v17 + 48) = 0;
      *(void *)(v17 + 56) = 0x7C00000000000000;
      return;
    }
LABEL_24:
    int v4 = 9;
    goto LABEL_25;
  }
  unint64_t v7 = -1;
  uint64_t v8 = 21;
  while (v7 != 14)
  {
    int v9 = a3[v8];
    ++v7;
    v8 += 2;
    if (v9) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 15;
LABEL_9:
  if (v7 < 0xF || g_GeneratingConvertTerm)
  {
    if (g_GeneratingConvertTerm) {
      goto LABEL_3;
    }
    goto LABEL_24;
  }
  g_isTrivial = 0;
  unint64_t v10 = *(int **)(a1 + 32);
  int v11 = *v10;
  if (*v10 == 4) {
    goto LABEL_14;
  }
  if (v11 == 2)
  {
    int v18 = *a2;
    if (*a2 == 1)
    {
      if (my_rnd_mode) {
        int v34 = 4;
      }
      else {
        int v34 = 0;
      }
      unint64_t v19 = __binary64_to_bid128(v34, &my_fpsf, *((double *)a2 + 4));
      unint64_t v36 = v35;
    }
    else if (v18 == 2)
    {
      unint64_t v19 = *((void *)a2 + 6);
      unint64_t v36 = *((void *)a2 + 7);
    }
    else
    {
      if (v18 == 4) {
        unint64_t v19 = *((void *)a2 + 8);
      }
      else {
        unint64_t v19 = 0;
      }
      unint64_t v36 = 0x3040000000000000;
    }
    int v37 = *a3;
    if (*a3 == 1)
    {
      if (my_rnd_mode) {
        int v41 = 4;
      }
      else {
        int v41 = 0;
      }
      unint64_t v38 = __binary64_to_bid128(v41, &my_fpsf, *((double *)a3 + 4));
      unint64_t v43 = v42;
    }
    else if (v37 == 2)
    {
      unint64_t v38 = *((void *)a3 + 6);
      unint64_t v43 = *((void *)a3 + 7);
    }
    else
    {
      if (v37 == 4) {
        unint64_t v38 = *((void *)a3 + 8);
      }
      else {
        unint64_t v38 = 0;
      }
      unint64_t v43 = 0x3040000000000000;
    }
    if (my_rnd_mode) {
      unsigned int v44 = 4;
    }
    else {
      unsigned int v44 = 0;
    }
    unint64_t v45 = __bid128_div(v19, v36, v38, v43, v44, &my_fpsf);
    unint64_t v47 = __bid128_round_integral_exact(v45, v46, v44, &my_fpsf);
    uint64_t v49 = v48;
    int v50 = *a3;
    if (*a3 == 1)
    {
      unint64_t v51 = __binary64_to_bid128(v44, &my_fpsf, *((double *)a3 + 4));
      uint64_t v53 = v52;
    }
    else if (v50 == 2)
    {
      unint64_t v51 = *((void *)a3 + 6);
      uint64_t v53 = *((void *)a3 + 7);
    }
    else
    {
      if (v50 == 4) {
        unint64_t v51 = *((void *)a3 + 8);
      }
      else {
        unint64_t v51 = 0;
      }
      uint64_t v53 = 0x3040000000000000;
    }
    *((void *)v10 + 6) = __bid128_mul(v47, v49, v51, v53, v44, &my_fpsf);
    *((void *)v10 + 7) = v54;
    unint64_t v10 = *(int **)(a1 + 32);
    goto LABEL_96;
  }
  if (v11 == 1)
  {
LABEL_14:
    int v12 = *a2;
    if (*a2 == 1)
    {
      double v13 = *((double *)a2 + 4);
    }
    else if (v12 == 2)
    {
      unint64_t v20 = *((void *)a2 + 6);
      unint64_t v21 = *((void *)a2 + 7);
      if (my_rnd_mode) {
        int v22 = 4;
      }
      else {
        int v22 = 0;
      }
      double v13 = __bid128_to_binary64(v20, v21, v22, &my_fpsf);
    }
    else
    {
      double v13 = 0.0;
      if (v12 == 4)
      {
        unint64_t v14 = *((void *)a2 + 8);
        unint64_t v15 = (uint64_t)rint(1.79769313e308);
        if ((uint64_t)rint(2.22507386e-308) < v14 && v15 > v14) {
          double v13 = (double)v14;
        }
        else {
          double v13 = NAN;
        }
      }
    }
    int v23 = *a3;
    if (*a3 == 1)
    {
      double v27 = *((double *)a3 + 4);
      double v30 = round(v13 / v27);
    }
    else
    {
      if (v23 == 2)
      {
        if (my_rnd_mode) {
          int v31 = 4;
        }
        else {
          int v31 = 0;
        }
        double v32 = __bid128_to_binary64(*((void *)a3 + 6), *((void *)a3 + 7), v31, &my_fpsf);
        int v23 = *a3;
      }
      else
      {
        if (v23 == 4)
        {
          unint64_t v24 = *((void *)a3 + 8);
          unint64_t v25 = (uint64_t)rint(1.79769313e308);
          unint64_t v26 = (uint64_t)rint(2.22507386e-308);
          double v27 = (double)v24;
          BOOL v28 = v26 < v24 && v25 > v24;
          double v29 = NAN;
          if (v28) {
            double v29 = (double)v24;
          }
          double v30 = round(v13 / v29);
          goto LABEL_54;
        }
        double v32 = 0.0;
      }
      double v30 = round(v13 / v32);
      if (v23 == 1)
      {
        double v27 = *((double *)a3 + 4);
      }
      else
      {
        if (v23 == 2)
        {
          if (my_rnd_mode) {
            int v39 = 4;
          }
          else {
            int v39 = 0;
          }
          double v27 = __bid128_to_binary64(*((void *)a3 + 6), *((void *)a3 + 7), v39, &my_fpsf);
          goto LABEL_76;
        }
        double v27 = 0.0;
        if (v23 == 4)
        {
          unint64_t v24 = *((void *)a3 + 8);
          unint64_t v25 = (uint64_t)rint(1.79769313e308);
          unint64_t v26 = (uint64_t)rint(2.22507386e-308);
          double v27 = (double)v24;
LABEL_54:
          if (v26 >= v24 || v25 <= v24) {
            double v27 = NAN;
          }
        }
      }
    }
LABEL_76:
    double v40 = v30 * v27;
    *((double *)v10 + 4) = v40;
    *((void *)v10 + 8) = (uint64_t)rint(v40);
  }
LABEL_96:
  long long v55 = *(_OWORD *)(a2 + 18);
  long long v56 = *(_OWORD *)(a2 + 22);
  long long v57 = *(_OWORD *)(a2 + 26);
  *(_OWORD *)(v10 + 30) = *(_OWORD *)(a2 + 30);
  *(_OWORD *)(v10 + 26) = v57;
  *(_OWORD *)(v10 + 22) = v56;
  *(_OWORD *)(v10 + 18) = v55;
  long long v58 = *(_OWORD *)(a2 + 34);
  long long v59 = *(_OWORD *)(a2 + 38);
  long long v60 = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(v10 + 46) = *(_OWORD *)(a2 + 46);
  *(_OWORD *)(v10 + 42) = v60;
  *(_OWORD *)(v10 + 38) = v59;
  *(_OWORD *)(v10 + 34) = v58;
}