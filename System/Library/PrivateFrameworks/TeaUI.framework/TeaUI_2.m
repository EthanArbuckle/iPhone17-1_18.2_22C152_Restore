uint64_t (*CollectionViewListCell.isHighlighted.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = CollectionViewListCell.isHighlighted.getter() & 1;
  return sub_1B5F021A0;
}

uint64_t sub_1B5F021A0(uint64_t a1)
{
  return CollectionViewListCell.isHighlighted.setter(*(unsigned __int8 *)(a1 + 8));
}

uint64_t CollectionViewListCell.isSwiped.getter()
{
  OUTLINED_FUNCTION_0_1();
  return *v0;
}

uint64_t sub_1B5F021FC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  v3 = (unsigned char *)(*a1 + qword_1EB649B68);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1B5F02250()
{
  return _s5TeaUI6ActionC7triggeryyF_0();
}

uint64_t (*CollectionViewListCell.isSwiped.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_3_2();
  return sub_1B5F022C8;
}

uint64_t sub_1B5F022C8(uint64_t a1, char a2)
{
  return sub_1B5F022E0(a1, a2, (uint64_t (*)(uint64_t))sub_1B5F02250);
}

uint64_t sub_1B5F022E0(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

void *CollectionViewListCell.tsaxAccessibilityLabelForReordering.getter()
{
  uint64_t v1 = *(void **)(v0 + qword_1EB649B50);
  v2 = (void *)swift_dynamicCastObjCProtocolConditional();
  if (v2)
  {
    id v3 = v1;
    id v4 = objc_msgSend(v2, sel_tsaxAccessibilityLabelForReordering);
    if (v4)
    {
      v5 = v4;
      v2 = (void *)sub_1B61B20F0();
    }
    else
    {

      return 0;
    }
  }
  return v2;
}

uint64_t CollectionViewListCell.forwardsAccessibilityLabelFromView.getter()
{
  OUTLINED_FUNCTION_0_1();
  return *v0;
}

uint64_t CollectionViewListCell.forwardsAccessibilityLabelFromView.setter(char a1)
{
  id v3 = (unsigned char *)(v1 + qword_1EB649B20);
  uint64_t result = OUTLINED_FUNCTION_21();
  unsigned char *v3 = a1;
  return result;
}

uint64_t (*CollectionViewListCell.forwardsAccessibilityLabelFromView.modify())()
{
  return j__swift_endAccess;
}

id sub_1B5F02494(void *a1)
{
  id v1 = a1;
  CollectionViewListCell.accessibilityLabel.getter();
  uint64_t v3 = v2;

  if (v3)
  {
    id v4 = (void *)sub_1B61B20C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v4 = 0;
  }
  return v4;
}

uint64_t CollectionViewListCell.accessibilityLabel.getter()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = &v0[qword_1EB649B20];
  OUTLINED_FUNCTION_24();
  if (*v2 == 1)
  {
    id v3 = objc_msgSend(*(id *)&v0[qword_1EB649B50], sel_accessibilityLabel);
  }
  else
  {
    v7.receiver = v0;
    v7.super_class = ObjectType;
    id v3 = objc_msgSendSuper2(&v7, sel_accessibilityLabel);
  }
  id v4 = v3;
  if (!v4) {
    return 0;
  }
  uint64_t v5 = sub_1B61B20F0();

  return v5;
}

void sub_1B5F025D4(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v4 = sub_1B61B20F0();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  id v7 = a1;
  CollectionViewListCell.accessibilityLabel.setter(v4, v6);
}

void CollectionViewListCell.accessibilityLabel.setter(uint64_t a1, uint64_t a2)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = &v2[qword_1EB649B20];
  OUTLINED_FUNCTION_24();
  if (*v5 == 1)
  {
    uint64_t v6 = *(void **)&v2[qword_1EB649B50];
    if (a2)
    {
      sub_1B61B1F70();
      id v7 = (void *)sub_1B61B20C0();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v7 = 0;
    }
    objc_msgSend(v6, sel_setAccessibilityLabel_, v7);
  }
  if (a2)
  {
    v8 = (void *)sub_1B61B20C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  v9.receiver = v2;
  v9.super_class = ObjectType;
  objc_msgSendSuper2(&v9, sel_setAccessibilityLabel_, v8);
}

void (*CollectionViewListCell.accessibilityLabel.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  *a1 = CollectionViewListCell.accessibilityLabel.getter();
  a1[1] = v3;
  return sub_1B5F0279C;
}

void sub_1B5F0279C(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if (a2)
  {
    sub_1B61B1F70();
    CollectionViewListCell.accessibilityLabel.setter(v3, v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    CollectionViewListCell.accessibilityLabel.setter(*a1, v2);
  }
}

id sub_1B5F02810(void *a1)
{
  id v1 = a1;
  id v2 = CollectionViewListCell.accessibilityAttributedLabel.getter();

  return v2;
}

id CollectionViewListCell.accessibilityAttributedLabel.getter()
{
  ObjectType = (objc_class *)swift_getObjectType();
  id v2 = &v0[qword_1EB649B20];
  OUTLINED_FUNCTION_24();
  if (*v2 == 1)
  {
    id v3 = objc_msgSend(*(id *)&v0[qword_1EB649B50], sel_accessibilityAttributedLabel);
  }
  else
  {
    v5.receiver = v0;
    v5.super_class = ObjectType;
    id v3 = objc_msgSendSuper2(&v5, sel_accessibilityAttributedLabel);
  }
  return v3;
}

void sub_1B5F028F4(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  CollectionViewListCell.accessibilityAttributedLabel.setter(a3);
}

void CollectionViewListCell.accessibilityAttributedLabel.setter(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = &v1[qword_1EB649B20];
  OUTLINED_FUNCTION_24();
  if (*v4) {
    objc_msgSend(*(id *)&v1[qword_1EB649B50], sel_setAccessibilityAttributedLabel_, a1);
  }
  v5.receiver = v1;
  v5.super_class = ObjectType;
  objc_msgSendSuper2(&v5, sel_setAccessibilityAttributedLabel_, a1);
}

void (*CollectionViewListCell.accessibilityAttributedLabel.modify(id *a1))(void **a1, char a2)
{
  a1[1] = v1;
  *a1 = CollectionViewListCell.accessibilityAttributedLabel.getter();
  return sub_1B5F02A28;
}

void sub_1B5F02A28(void **a1, char a2)
{
  id v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    CollectionViewListCell.accessibilityAttributedLabel.setter(v2);
  }
  else
  {
    CollectionViewListCell.accessibilityAttributedLabel.setter(*a1);
  }
}

Swift::Void __swiftcall CollectionViewListCell.layoutSubviews()()
{
  v7.receiver = v0;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, sel_layoutSubviews);
  id v1 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v1, sel_bounds);
  OUTLINED_FUNCTION_8();

  double v2 = OUTLINED_FUNCTION_7();
  sub_1B5F02E14(v3, v2, v4, v5, v6);
}

id sub_1B5F02B34(uint64_t a1, char *a2)
{
  uint64_t v3 = sub_1B61B10B0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  double v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (RTLAdjuster.layoutDirection.getter() == 1
    && (id v7 = objc_msgSend(a2, sel__bridgedConfigurationState),
        sub_1B61B1080(),
        v7,
        LOBYTE(v7) = sub_1B61B10A0(),
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3),
        (v7 & 1) != 0))
  {
    v8 = *(void **)&a2[qword_1EB649B50];
    id v9 = objc_msgSend(a2, sel_contentView);
    id v10 = objc_msgSend(v9, sel_readableContentGuide);

    objc_msgSend(v10, sel_layoutFrame);
    double v12 = v11;

    objc_msgSend(a2, sel_layoutMargins);
    CGFloat v14 = v12 + v13;
    id v15 = objc_msgSend(a2, sel_readableContentGuide);
    objc_msgSend(v15, sel_layoutFrame);
    CGFloat v17 = v16;
    CGFloat v19 = v18;
    CGFloat v21 = v20;
    CGFloat v23 = v22;

    v46.origin.double x = v17;
    v46.origin.double y = v19;
    v46.size.width = v21;
    v46.size.double height = v23;
    CGFloat Width = CGRectGetWidth(v46);
    id v25 = objc_msgSend(a2, sel_contentView);
    objc_msgSend(v25, sel_frame);
    CGFloat v27 = v26;
    CGFloat v29 = v28;
    CGFloat v31 = v30;
    CGFloat v33 = v32;

    v47.origin.double x = v27;
    v47.origin.double y = v29;
    v47.size.width = v31;
    v47.size.double height = v33;
    v48.size.double height = CGRectGetHeight(v47);
    char v45 = 0;
    v48.origin.double y = 0.0;
    v48.origin.double x = v14;
    v48.size.width = Width;
    __C::CGRect v49 = RTLAdjuster.frame(_:alignment:)(v48, (TeaUI::RTLAdjuster::Alignment)&v45);
    double x = v49.origin.x;
    double y = v49.origin.y;
    double v36 = v49.size.width;
    double height = v49.size.height;
  }
  else
  {
    v8 = *(void **)&a2[qword_1EB649B50];
    id v38 = objc_msgSend(a2, sel_contentView);
    objc_msgSend(v38, sel_bounds);
    double x = v39;
    double y = v40;
    double v36 = v41;
    double height = v42;
  }
  return objc_msgSend(v8, sel_setFrame_, x, y, v36, height);
}

id sub_1B5F02E0C(uint64_t a1)
{
  return sub_1B5F02B34(a1, *(char **)(v1 + 16));
}

uint64_t sub_1B5F02E14(void (*a1)(uint64_t), double a2, double a3, double a4, double a5)
{
  uint64_t v10 = sub_1B61AFAF0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  double v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B61AFAE0();
  type metadata accessor for RTLAdjuster();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 40) = v10;
  *(void *)(v14 + 48) = sub_1B5F03ECC();
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v14 + 16));
  (*(void (**)(uint64_t *, char *, uint64_t))(v11 + 16))(boxed_opaque_existential_0, v13, v10);
  *(double *)(v14 + 56) = a2;
  *(double *)(v14 + 64) = a3;
  *(double *)(v14 + 72) = a4;
  *(double *)(v14 + 80) = a5;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  a1(v14);
  return swift_release();
}

void sub_1B5F02F7C(void *a1)
{
  id v1 = a1;
  CollectionViewListCell.layoutSubviews()();
}

uint64_t CollectionViewListCell.updateConfiguration(using:)(uint64_t a1)
{
  double v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = *MEMORY[0x1E4FBC8C8] & *(void *)v1;
  uint64_t v6 = sub_1B61B10B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1B61B1070();
  v19.receiver = v2;
  v19.super_class = ObjectType;
  objc_msgSendSuper2(&v19, sel__bridgedUpdateConfigurationUsingState_, v10);

  id v18 = *(id *)&v2[qword_1EB649B50];
  id v11 = v18;
  char v12 = sub_1B61B10A0();
  (*(void (**)(void, uint64_t, void))(*(void *)(*(void *)(v5 + 88) + 8) + 8))(v12 & 1, 1, *(void *)(v5 + 80));

  char v13 = sub_1B61B1060();
  CollectionViewListCell.isHighlighted.setter(v13 & 1);
  LOBYTE(v10) = sub_1B61B1050();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  if (v10) {
    char v14 = sub_1B61B10A0() ^ 1;
  }
  else {
    char v14 = 0;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  CollectionViewListCell.isSelected.setter(v14 & 1);
  char v15 = sub_1B61B1090();
  return CollectionViewListCell.isSwiped.setter(v15 & 1);
}

uint64_t sub_1B5F031C8(void *a1)
{
  uint64_t v2 = sub_1B61B10B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B61B1080();
  id v6 = a1;
  CollectionViewListCell.updateConfiguration(using:)((uint64_t)v5);

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void __swiftcall CollectionViewListCell.preferredLayoutAttributesFitting(_:)(UICollectionViewLayoutAttributes *__return_ptr retstr, UICollectionViewLayoutAttributes *a2)
{
  v5.receiver = v2;
  v5.super_class = (Class)swift_getObjectType();
  id v4 = [(UICollectionViewLayoutAttributes *)&v5 preferredLayoutAttributesFittingAttributes:a2];
  objc_msgSend(v4, sel_frame);
  objc_msgSend(v4, sel_setFrame_);
}

id sub_1B5F03330(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  CollectionViewListCell.preferredLayoutAttributesFitting(_:)(v6, v4);
  uint64_t v8 = v7;

  return v8;
}

void sub_1B5F03390(double a1)
{
  *(double *)(v1 + qword_1EB649B48) = a1;
}

id CollectionViewListCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B5F033D8(uint64_t a1)
{
  sub_1B5E74A74(*(void *)(a1 + qword_1EB649B40));
  uint64_t v2 = *(void *)(a1 + qword_1EB6411A8);
  return sub_1B5E3799C(v2);
}

void sub_1B5F03498(double a1)
{
}

uint64_t CollectionViewListCell.keyCommandBlocks.getter()
{
  uint64_t v9 = MEMORY[0x1E4FBC860];
  id v7 = *(id *)(v0 + qword_1EB649B50);
  sub_1B5E00AB8(0, (unint64_t *)&qword_1EB645AC8);
  id v1 = v7;
  if (OUTLINED_FUNCTION_12_22())
  {
    sub_1B5E30E70(v6, (uint64_t)v8);
    uint64_t v2 = OUTLINED_FUNCTION_1_34(v8);
    unint64_t v4 = v3(v2);
    sub_1B5E50C80(v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    OUTLINED_FUNCTION_6_1();
    sub_1B5E36D74((uint64_t)v6, (unint64_t *)&qword_1EB645AD0, (unint64_t *)&qword_1EB645AC8);
  }
  return v9;
}

uint64_t sub_1B5F035B4()
{
  return CollectionViewListCell.keyCommandBlocks.getter();
}

uint64_t CollectionViewListCell.isHighlightable.getter()
{
  id v7 = *(id *)(v0 + qword_1EB649B50);
  sub_1B5E00AB8(0, &qword_1EB6436D0);
  id v1 = v7;
  if (OUTLINED_FUNCTION_12_22())
  {
    sub_1B5E30E70(v6, (uint64_t)v8);
    uint64_t v2 = OUTLINED_FUNCTION_1_34(v8);
    char v4 = v3(v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    OUTLINED_FUNCTION_6_1();
    sub_1B5E36D74((uint64_t)v6, &qword_1EB6436D8, &qword_1EB6436D0);
    char v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_1B5F036C4()
{
  return CollectionViewListCell.isHighlightable.getter() & 1;
}

unint64_t sub_1B5F036EC()
{
  return (unint64_t)CollectionViewListCell.isHighlighted.getter() & 1;
}

uint64_t sub_1B5F03714(uint64_t a1)
{
  return CollectionViewListCell.isHighlighted.setter(a1);
}

uint64_t (*sub_1B5F03738(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = CollectionViewListCell.isHighlighted.modify((uint64_t)v2);
  return sub_1B5E966FC;
}

uint64_t CollectionViewListCell.isSelectable.getter()
{
  id v7 = *(id *)(v0 + qword_1EB649B50);
  sub_1B5E00AB8(0, qword_1EB642E80);
  id v1 = v7;
  if (OUTLINED_FUNCTION_12_22())
  {
    sub_1B5E30E70(v6, (uint64_t)v8);
    uint64_t v2 = OUTLINED_FUNCTION_1_34(v8);
    char v4 = v3(v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    OUTLINED_FUNCTION_6_1();
    sub_1B5E36D74((uint64_t)v6, &qword_1EB642E98, qword_1EB642E80);
    char v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_1B5F03880()
{
  return CollectionViewListCell.isSelectable.getter() & 1;
}

unint64_t sub_1B5F038A8()
{
  return (unint64_t)CollectionViewListCell.isSelected.getter() & 1;
}

uint64_t sub_1B5F038D0(char a1)
{
  return CollectionViewListCell.isSelected.setter(a1);
}

uint64_t (*sub_1B5F038F4(objc_super ***a1))()
{
  uint64_t v2 = (objc_super **)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (objc_super *)CollectionViewListCell.isSelected.modify(v2);
  return sub_1B5E966FC;
}

id CollectionViewListCell.traversedDisposerToken.getter()
{
  OUTLINED_FUNCTION_0_1();
  id v1 = *v0;
  return v1;
}

uint64_t (*sub_1B5F0399C(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = CollectionViewListCell.hasBeenTraversed.modify();
  return sub_1B5E966FC;
}

uint64_t CollectionViewListCell.registerForChanges(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + qword_1EB6411A8);
  uint64_t v4 = *(void *)(v2 + qword_1EB6411A8);
  void *v3 = a1;
  v3[1] = a2;
  sub_1B5E3799C(v4);
  return swift_retain();
}

uint64_t sub_1B5F03A48(uint64_t a1, uint64_t a2)
{
  return CollectionViewListCell.registerForChanges(block:)(a1, a2);
}

uint64_t CollectionViewListCell<>.shouldMonitorScroll.getter()
{
  OUTLINED_FUNCTION_18_0();
  return v0() & 1;
}

uint64_t CollectionViewListCell<>.shouldMonitorMotion.getter()
{
  OUTLINED_FUNCTION_18_0();
  return v0() & 1;
}

uint64_t CollectionViewListCell<>.blueprintViewportMonitor(_:viewportScrollDataDidChange:)()
{
  OUTLINED_FUNCTION_8_22();
  OUTLINED_FUNCTION_18_0();
  return v0();
}

uint64_t CollectionViewListCell<>.blueprintViewportMonitor(_:viewportMotionDataDidChange:)()
{
  OUTLINED_FUNCTION_8_22();
  OUTLINED_FUNCTION_18_0();
  return v0();
}

uint64_t CollectionViewListCell<>.blueprintViewportMonitor(_:viewportMotionEnabled:)()
{
  OUTLINED_FUNCTION_18_0();
  return v0();
}

uint64_t CollectionViewListCell<>.blueprintViewportMonitor(_:willDisplayCellWith:)()
{
  OUTLINED_FUNCTION_8_22();
  OUTLINED_FUNCTION_18_0();
  return v0();
}

uint64_t CollectionViewListCell<>.blueprintViewportMonitor(_:didEndDisplayingCellWith:)()
{
  OUTLINED_FUNCTION_8_22();
  OUTLINED_FUNCTION_18_0();
  return v0();
}

uint64_t sub_1B5F03D10()
{
  return CollectionViewListCell<>.shouldMonitorMotion.getter();
}

uint64_t sub_1B5F03D18()
{
  return CollectionViewListCell<>.shouldMonitorScroll.getter();
}

uint64_t sub_1B5F03D20()
{
  return CollectionViewListCell<>.blueprintViewportMonitor(_:viewportScrollDataDidChange:)();
}

uint64_t sub_1B5F03D28()
{
  return CollectionViewListCell<>.blueprintViewportMonitor(_:viewportMotionDataDidChange:)();
}

uint64_t sub_1B5F03D30()
{
  return CollectionViewListCell<>.blueprintViewportMonitor(_:viewportMotionEnabled:)();
}

uint64_t sub_1B5F03D38()
{
  return CollectionViewListCell<>.blueprintViewportMonitor(_:willDisplayCellWith:)();
}

uint64_t sub_1B5F03D40()
{
  return CollectionViewListCell<>.blueprintViewportMonitor(_:didEndDisplayingCellWith:)();
}

uint64_t CollectionViewListCell<>.setContextMenuPreviewing(_:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(a2 + 8))(a1, *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x50), a2);
}

uint64_t sub_1B5F03DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return CollectionViewListCell<>.setContextMenuPreviewing(_:)(a1, *(void *)(a3 - 8));
}

uint64_t sub_1B5F03DF8(char *a1)
{
  return CollectionViewListCell.isSwiped.setter(*a1);
}

uint64_t sub_1B5F03E28()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CollectionViewListCell()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1B5F03ECC()
{
  unint64_t result = qword_1EB64BCD8;
  if (!qword_1EB64BCD8)
  {
    sub_1B61AFAF0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB64BCD8);
  }
  return result;
}

uint64_t RestoreViewportBlueprintBookmarkApplicator.__allocating_init(blueprintLayoutProvider:blueprintViewProvider:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  RestoreViewportBlueprintBookmarkApplicator.init(blueprintLayoutProvider:blueprintViewProvider:)(a1, a2);
  return v4;
}

uint64_t RestoreViewportBlueprintBookmarkApplicator.init(blueprintLayoutProvider:blueprintViewProvider:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(void))(v4 + 32))();
  *(void *)(v2 + *(void *)(*(void *)v2 + 120)) = a2;
  return v2;
}

uint64_t RestoreViewportBlueprintBookmarkApplicator.deinit()
{
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(void))(v1 + 8))();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t RestoreViewportBlueprintBookmarkApplicator.__deallocating_deinit()
{
  RestoreViewportBlueprintBookmarkApplicator.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B5F040E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = sub_1B61AFCB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  uint64_t result = type metadata accessor for RestoreViewportBlueprintBookmarkApplicator.RestoreContext();
  *(double *)(a2 + *(int *)(result + 52)) = a3;
  return result;
}

uint64_t RestoreViewportBlueprintBookmarkApplicator.supportedBookmark.getter()
{
  type metadata accessor for BlueprintBookmark();
  return swift_storeEnumTagMultiPayload();
}

uint64_t RestoreViewportBlueprintBookmarkApplicator.prepare(bookmark:context:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = (uint64_t)v2;
  uint64_t v46 = *v2;
  uint64_t v6 = v46;
  sub_1B5F06230(0, &qword_1EB642538, (void (*)(uint64_t))sub_1B5E1DEB4);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v47 = (uint64_t)&v42 - v11;
  sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_13();
  uint64_t v43 = v13;
  uint64_t v44 = v12;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  char v45 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  double v42 = (char *)&v42 - v16;
  sub_1B5F052B0(a1, (uint64_t)v54, (uint64_t)&qword_1EB64A380, (uint64_t)&type metadata for BlueprintBookmarkContext, (void (*)(void, uint64_t, uint64_t))sub_1B5F0520C);
  uint64_t v17 = *(void *)(v6 + 80);
  uint64_t v18 = *(void *)(v6 + 96);
  BlueprintLayoutProviderType.layoutBlueprint.getter(v17, v18);
  uint64_t v19 = OUTLINED_FUNCTION_5_25();
  uint64_t v20 = OUTLINED_FUNCTION_5_25();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v22 = swift_getAssociatedConformanceWitness();
  v52[0] = v19;
  v52[1] = v20;
  v52[2] = AssociatedConformanceWitness;
  v52[3] = v22;
  uint64_t v23 = type metadata accessor for BlueprintLayout();
  swift_getWitnessTable();
  char v24 = sub_1B61B2A30();
  OUTLINED_FUNCTION_3_0();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v25 + 8))(v53, v23);
  if (v24) {
    goto LABEL_8;
  }
  sub_1B5F052B0((uint64_t)v54, (uint64_t)v52, (uint64_t)&qword_1EB64A380, (uint64_t)&type metadata for BlueprintBookmarkContext, (void (*)(void, uint64_t, uint64_t))sub_1B5F0520C);
  uint64_t result = sub_1B5F046D0((uint64_t)v52);
  if (result == 1) {
    goto LABEL_8;
  }
  memcpy(v53, v52, 0x80uLL);
  sub_1B5F046E8(v52[4], (uint64_t)v10);
  sub_1B5E1DEB4();
  uint64_t v28 = v27;
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v27) == 1)
  {
    uint64_t v29 = v47;
    sub_1B5F046E8(v52[5], v47);
    sub_1B5F05254((uint64_t)v10, (uint64_t)&qword_1EB642538, (uint64_t)sub_1B5E1DEB4, (void (*)(void))sub_1B5F06230);
  }
  else
  {
    uint64_t v29 = v47;
    sub_1B5F04970((uint64_t)v10, v47);
    __swift_storeEnumTagSinglePayload(v29, 0, 1, v28);
  }
  if (__swift_getEnumTagSinglePayload(v29, 1, v28) == 1)
  {
    uint64_t result = sub_1B5F05254(v29, (uint64_t)&qword_1EB642538, (uint64_t)sub_1B5E1DEB4, (void (*)(void))sub_1B5F06230);
LABEL_8:
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  double v30 = (double *)(v29 + *(int *)(v28 + 48));
  double v31 = *v30;
  double v32 = v30[1];
  CGFloat v33 = v42;
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 32);
  uint64_t v35 = v29;
  uint64_t v36 = v44;
  v34(v42, v35, v44);
  double v37 = sub_1B5F047B0(v3, (uint64_t)v53, v31, v32);
  uint64_t v38 = (uint64_t)v45;
  v34(v45, (uint64_t)v33, v36);
  uint64_t v39 = *(void *)(v46 + 88);
  uint64_t v40 = *(void *)(v46 + 104);
  uint64_t v48 = v17;
  uint64_t v49 = v39;
  uint64_t v50 = v18;
  uint64_t v51 = v40;
  *(void *)(a2 + 24) = type metadata accessor for RestoreViewportBlueprintBookmarkApplicator.RestoreContext();
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a2);
  return sub_1B5F040E4(v38, (uint64_t)boxed_opaque_existential_0, v37);
}

uint64_t sub_1B5F046D0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 32);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_1B5F046E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1B5F73D10((void (*)(uint64_t))sub_1B5F0619C, v2, a1);
  sub_1B61B1F70();
  sub_1B6178FB4(sub_1B5F061B8, v2);
  swift_bridgeObjectRelease();
  sub_1B5E6A500(v5, a2);
  return swift_release();
}

double sub_1B5F047B0(uint64_t a1, uint64_t a2, double a3, double a4)
{
  BlueprintLayoutProviderType.layoutBlueprint.getter(*(void *)(*(void *)a1 + 80), *(void *)(*(void *)a1 + 96));
  int v7 = v13[525];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for BlueprintLayout();
  (*(void (**)(unsigned char *, uint64_t))(*(void *)(v8 - 8) + 8))(v13, v8);
  uint64_t v9 = 104;
  if (v7) {
    uint64_t v9 = 96;
  }
  uint64_t v10 = 48;
  if (v7)
  {
    uint64_t v10 = 56;
    double v11 = a4;
  }
  else
  {
    double v11 = a3;
  }
  return v11 - (*(double *)(a2 + v10) + *(double *)(a2 + v9));
}

uint64_t type metadata accessor for RestoreViewportBlueprintBookmarkApplicator.RestoreContext()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1B5F04970(uint64_t a1, uint64_t a2)
{
  sub_1B5E1DEB4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t RestoreViewportBlueprintBookmarkApplicator.apply(bookmark:context:preparedContext:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  void (*v50)(void *__return_ptr, char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char v54;
  uint64_t v55;
  void (*v56)(uint64_t);
  void *v57;
  void (*v58)(uint64_t);
  uint64_t v59;
  uint64_t (*v60)(void);
  void *v61;
  double v62;
  double v63;
  uint64_t v64;
  double v65;
  double v66;
  char v67;
  uint64_t v68;
  void *v69;
  double v70;
  double v71;
  double v72;
  double v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  char *v78;
  BOOL v79;
  void *v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t (*v101)(void);
  uint64_t v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  void v108[3];
  uint64_t v109;
  char v110;
  void v111[5];
  void v112[4];
  char v113;
  unsigned char v114[136];

  uint64_t v4 = v3;
  v101 = a3;
  uint64_t v6 = *(void **)v4;
  v94 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_13();
  v92 = v7;
  MEMORY[0x1F4188790](v8);
  v91 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v6[11];
  uint64_t v12 = v6[12];
  uint64_t v13 = v6[13];
  v108[0] = v6[10];
  uint64_t v10 = v108[0];
  v108[1] = v11;
  v97 = v11;
  v108[2] = v12;
  v109 = v13;
  v100 = v13;
  uint64_t v14 = type metadata accessor for RestoreViewportBlueprintBookmarkApplicator.RestoreContext();
  v99 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_13();
  v102 = v15;
  MEMORY[0x1F4188790](v16);
  v98 = (char *)&v83 - v17;
  OUTLINED_FUNCTION_0_13();
  v96 = v18;
  MEMORY[0x1F4188790](v19);
  v95 = (char *)&v83 - v20;
  sub_1B5F052B0(a2, (uint64_t)v114, (uint64_t)&qword_1EB64A380, (uint64_t)&type metadata for BlueprintBookmarkContext, (void (*)(void, uint64_t, uint64_t))sub_1B5F0520C);
  uint64_t v21 = v4 + *(void *)(*(void *)v4 + 112);
  BlueprintLayoutProviderType.layoutBlueprint.getter(v10, v12);
  double v22 = COERCE_DOUBLE(OUTLINED_FUNCTION_4_36());
  double v23 = COERCE_DOUBLE(OUTLINED_FUNCTION_4_36());
  double v24 = COERCE_DOUBLE(swift_getAssociatedConformanceWitness());
  double v25 = COERCE_DOUBLE(swift_getAssociatedConformanceWitness());
  v103 = v22;
  v104 = v23;
  v105 = v24;
  v106 = v25;
  type metadata accessor for BlueprintLayout();
  swift_getWitnessTable();
  LOBYTE(a2) = sub_1B61B2A30();
  OUTLINED_FUNCTION_3_0();
  uint64_t v27 = *(uint64_t (**)(uint64_t))(v26 + 8);
  uint64_t v28 = v26 + 8;
  uint64_t v29 = OUTLINED_FUNCTION_3_43();
  uint64_t result = v27(v29);
  if (a2) {
    return result;
  }
  v87 = v21;
  v88 = v28;
  uint64_t v31 = (uint64_t)v98;
  uint64_t v32 = v99;
  v86 = v27;
  v89 = v10;
  v90 = v12;
  uint64_t v33 = v100;
  v93 = v14;
  sub_1B5E5F644((uint64_t)v101, (uint64_t)v108);
  if (!v109)
  {
    sub_1B5F05254((uint64_t)v108, (uint64_t)&qword_1EB64CAC0, MEMORY[0x1E4FBC840] + 8, (void (*)(void))sub_1B5F0520C);
    uint64_t v34 = v31;
    __swift_storeEnumTagSinglePayload(v31, 1, 1, v93);
    uint64_t v38 = v102;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v34, v32);
  }
  uint64_t v34 = v31;
  uint64_t v35 = v93;
  int v36 = swift_dynamicCast();
  __swift_storeEnumTagSinglePayload(v34, v36 ^ 1u, 1, v35);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v34, 1, v35);
  uint64_t v38 = v102;
  if (EnumTagSinglePayload == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v34, v32);
  }
  uint64_t v39 = v95;
  (*(void (**)(char *, uint64_t, uint64_t))(v96 + 32))(v95, v34, v35);
  uint64_t v40 = *(void *)(v4 + *(void *)(*(void *)v4 + 120));
  double v41 = *(uint64_t (**)(void))(v33 + 56);
  uint64_t v42 = v97;
  OUTLINED_FUNCTION_1_58();
  uint64_t v43 = (void *)v41();
  objc_msgSend(v43, sel_contentOffset);
  double v45 = v44;
  double v47 = v46;

  v101 = v41;
  v102 = v40;
  v99 = v33 + 56;
  OUTLINED_FUNCTION_1_58();
  uint64_t v48 = (void *)v41();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v50 = *(void (**)(void *__return_ptr, char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 80);
  uint64_t v51 = swift_checkMetadataState();
  v98 = (char *)AssociatedConformanceWitness;
  v50(v111, v39, v51, AssociatedConformanceWitness);

  sub_1B5F052B0((uint64_t)v111, (uint64_t)v112, (uint64_t)&unk_1EB647C50, (uint64_t)type metadata accessor for CGRect, (void (*)(void, uint64_t, uint64_t))sub_1B5F06230);
  if (v113)
  {
    v85 = ((uint64_t (*)(uint64_t, uint64_t))v101)(v42, v33);
    v53 = v91;
    v52 = v92;
    (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v91, v39, v94);
    v84 = v51;
    BlueprintLayoutProviderType.layoutBlueprint.getter(v89, v90);
    v54 = v110;
    v55 = OUTLINED_FUNCTION_3_43();
    v56 = (void (*)(uint64_t))v86;
    v86(v55);
    LOBYTE(v103) = v54;
    v57 = (void *)v85;
    (*((void (**)(char *, double *, void, uint64_t))v98 + 25))(v53, &v103, 0, v84);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v94);
    v58 = v56;
    v59 = v89;
    v60 = v101;
    OUTLINED_FUNCTION_1_58();
    v61 = (void *)v60();
    objc_msgSend(v61, sel_contentOffset);
    double v45 = v62;
    double v47 = v63;

    v64 = v90;
  }
  else
  {
    v65 = *(double *)v112;
    v66 = *(double *)&v112[1];
    v59 = v89;
    BlueprintLayoutProviderType.layoutBlueprint.getter(v89, v90);
    v67 = v110;
    v68 = OUTLINED_FUNCTION_3_43();
    v58 = (void (*)(uint64_t))v86;
    v86(v68);
    v60 = v101;
    OUTLINED_FUNCTION_1_58();
    v69 = (void *)v60();
    objc_msgSend(v69, sel_adjustedContentInset);
    v71 = v70;
    v73 = v72;

    if (v67) {
      double v47 = v66 - v71;
    }
    else {
      double v45 = v65 - v73;
    }
    v64 = v90;
  }
  BlueprintLayoutProviderType.layoutBlueprint.getter(v59, v64);
  v74 = v110;
  v75 = OUTLINED_FUNCTION_3_43();
  v58(v75);
  v76 = v96;
  if (v74)
  {
    sub_1B5F052B0((uint64_t)v114, (uint64_t)&v103, (uint64_t)&qword_1EB64A380, (uint64_t)&type metadata for BlueprintBookmarkContext, (void (*)(void, uint64_t, uint64_t))sub_1B5F0520C);
    v77 = sub_1B5F046D0((uint64_t)&v103);
    v78 = v95;
    if (v77 != 1)
    {
      v79 = v104 == v106 && v103 == v105;
      if (!v79 && v107 < 0.0)
      {
        OUTLINED_FUNCTION_1_58();
        v80 = (void *)v60();
        objc_msgSend(v80, sel_contentOffset);
        objc_msgSend(v80, sel_setContentOffset_);

        return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v78, v93);
      }
    }
    v81 = v93;
    double v47 = v47 - *(double *)&v95[*(int *)(v93 + 52)];
  }
  else
  {
    v81 = v93;
    v78 = v95;
    double v45 = v45 - *(double *)&v95[*(int *)(v93 + 52)];
  }
  OUTLINED_FUNCTION_1_58();
  v82 = (void *)v60();
  objc_msgSend(v82, sel_setContentOffset_, v45, v47);

  return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v78, v81);
}

void sub_1B5F0520C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1B61B2F80();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1B5F05254(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4(0);
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(uint64_t))(v5 + 8))(a1);
  return a1;
}

uint64_t sub_1B5F052B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void, uint64_t, uint64_t))
{
  a5(0, a3, a4);
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1B5F0531C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  void (*v27)(long long *__return_ptr, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  long long v51;
  long long v52;
  uint64_t v53;
  long long v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  long long v58;
  uint64_t v59;

  v59 = a3;
  uint64_t v43 = (void *)*a2;
  uint64_t v5 = v43;
  uint64_t v6 = v43[12];
  uint64_t v7 = v43[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  double v46 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  double v47 = (char *)&v42 - v9;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = type metadata accessor for BlueprintLayoutItem();
  uint64_t v49 = *(void *)(v11 - 8);
  uint64_t v50 = v11;
  MEMORY[0x1F4188790](v11);
  double v45 = (char *)&v42 - v12;
  double v44 = (char *)a2 + v5[14];
  BlueprintLayoutProviderType.layoutBlueprint.getter(v7, v6);
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = swift_getAssociatedConformanceWitness();
  *(void *)&uint64_t v51 = v13;
  *((void *)&v51 + 1) = AssociatedTypeWitness;
  *(void *)&v52 = v14;
  *((void *)&v52 + 1) = AssociatedConformanceWitness;
  uint64_t v15 = type metadata accessor for BlueprintLayout();
  uint64_t v48 = a1;
  LOBYTE(v13) = BlueprintLayout.contains(indexPath:)(a1, v15);
  uint64_t v16 = *(void (**)(long long *, uint64_t))(*(void *)(v15 - 8) + 8);
  v16(&v54, v15);
  if ((v13 & 1) == 0) {
    goto LABEL_10;
  }
  BlueprintLayoutProviderType.layoutBlueprint.getter(v7, v6);
  uint64_t v17 = v45;
  uint64_t v18 = v48;
  BlueprintLayout.subscript.getter(v48, v15);
  v16(&v54, v15);
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v47, v17, AssociatedTypeWitness);
  sub_1B5F061D8();
  if ((swift_dynamicCast() & 1) == 0)
  {
    double v23 = v17;
    v53 = 0;
    uint64_t v51 = 0u;
    v52 = 0u;
    sub_1B5F05254((uint64_t)&v51, (uint64_t)&unk_1E9DA9F10, (uint64_t)sub_1B5F061D8, (void (*)(void))sub_1B5F06230);
    goto LABEL_6;
  }
  sub_1B5E30E70(&v51, (uint64_t)&v54);
  uint64_t v19 = v56;
  uint64_t v20 = v57;
  __swift_project_boxed_opaque_existential_1(&v54, v56);
  char v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
  uint64_t v22 = v59;
  if (v21)
  {
    double v23 = v17;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v54);
LABEL_6:
    uint64_t v24 = v18;
    double v25 = (void *)(*(uint64_t (**)(void, void))(v43[13] + 56))(v43[11], v43[13]);
    swift_getAssociatedTypeWitness();
    uint64_t v26 = swift_getAssociatedConformanceWitness();
    uint64_t v27 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v26 + 80);
    uint64_t v28 = swift_checkMetadataState();
    v27(&v51, v24, v28, v26);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v23, v50);
    sub_1B5F052B0((uint64_t)&v51, (uint64_t)&v54, (uint64_t)&unk_1EB647C50, (uint64_t)type metadata accessor for CGRect, (void (*)(void, uint64_t, uint64_t))sub_1B5F06230);
    if ((v57 & 1) == 0)
    {
      v58 = v54;
      uint64_t v29 = v55;
      if (v55 > 0.0)
      {
        double v30 = v56;
        if (*(double *)&v56 > 0.0)
        {
          sub_1B5E1DEB4();
          uint64_t v32 = v31;
          uint64_t v33 = v59;
          uint64_t v34 = v59 + *(int *)(v31 + 48);
          uint64_t v35 = sub_1B61AFCB0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v24, v35);
          *(_OWORD *)uint64_t v34 = v58;
          *(double *)(v34 + 16) = v29;
          *(void *)(v34 + 24) = v30;
          int v36 = v33;
          double v37 = 0;
          uint64_t v38 = v32;
          return __swift_storeEnumTagSinglePayload(v36, v37, 1, v38);
        }
      }
    }
LABEL_10:
    sub_1B5E1DEB4();
    uint64_t v38 = v39;
    int v36 = v59;
    double v37 = 1;
    return __swift_storeEnumTagSinglePayload(v36, v37, 1, v38);
  }
  (*(void (**)(char *, uint64_t))(v49 + 8))(v17, v50);
  sub_1B5E1DEB4();
  __swift_storeEnumTagSinglePayload(v22, 1, 1, v41);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v54);
}

uint64_t sub_1B5F05904(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v32.f64[0] = a2;
  *(void *)&v33.f64[0] = a1;
  uint64_t v4 = *a3;
  double v30 = a3;
  uint64_t v31 = v4;
  sub_1B5E1DEB4();
  uint64_t v6 = v5 - 8;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(int *)(v6 + 56);
  uint64_t v10 = &v8[v9];
  uint64_t v11 = a1 + v9;
  uint64_t v12 = sub_1B61AFCB0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void (**)(void))(v13 + 16);
  ((void (*)(char *, void, uint64_t))v14)(v8, *(void *)&v33.f64[0], v12);
  double v15 = *(double *)v11;
  uint64_t v16 = *(void *)(v11 + 24);
  *(void *)uint64_t v10 = *(void *)v11;
  float64x2_t v33 = *(float64x2_t *)(v11 + 8);
  *(float64x2_t *)(v10 + 8) = v33;
  *((void *)v10 + 3) = v16;
  uint64_t v17 = *(void (**)(char *, uint64_t))(v13 + 8);
  v17(v8, v12);
  uint64_t v18 = *(int *)(v6 + 56);
  uint64_t v19 = &v8[v18];
  uint64_t v20 = *(void *)&v32.f64[0] + v18;
  v14(v8);
  double v21 = *(double *)v20;
  uint64_t v22 = *(void *)(v20 + 24);
  *(void *)uint64_t v19 = *(void *)v20;
  float64x2_t v32 = *(float64x2_t *)(v20 + 8);
  *(float64x2_t *)(v19 + 8) = v32;
  *((void *)v19 + 3) = v22;
  v17(v8, v12);
  BlueprintLayoutProviderType.layoutBlueprint.getter(*(void *)(v31 + 80), *(void *)(v31 + 96));
  LODWORD(v8) = v38[525];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v24 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v26 = swift_getAssociatedConformanceWitness();
  uint64_t v34 = AssociatedTypeWitness;
  uint64_t v35 = v24;
  uint64_t v36 = AssociatedConformanceWitness;
  uint64_t v37 = v26;
  uint64_t v27 = type metadata accessor for BlueprintLayout();
  (*(void (**)(unsigned char *, uint64_t))(*(void *)(v27 - 8) + 8))(v38, v27);
  unsigned __int8 v28 = vmovn_s64(vcgtq_f64(v32, v33)).u8[0];
  if (!v8) {
    unsigned __int8 v28 = v15 < v21;
  }
  return v28 & 1;
}

uint64_t sub_1B5F05BE8()
{
  return RestoreViewportBlueprintBookmarkApplicator.supportedBookmark.getter();
}

uint64_t sub_1B5F05C00@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return RestoreViewportBlueprintBookmarkApplicator.prepare(bookmark:context:)(a1, a2);
}

uint64_t sub_1B5F05C24(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return RestoreViewportBlueprintBookmarkApplicator.apply(bookmark:context:preparedContext:)(a1, a2, a3);
}

uint64_t sub_1B5F05C48()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for RestoreViewportBlueprintBookmarkApplicator()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for RestoreViewportBlueprintBookmarkApplicator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RestoreViewportBlueprintBookmarkApplicator);
}

uint64_t dispatch thunk of RestoreViewportBlueprintBookmarkApplicator.__allocating_init(blueprintLayoutProvider:blueprintViewProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1B5F05D28()
{
  uint64_t result = sub_1B61AFCB0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B5F05DC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1B61AFCB0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 52)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 52));
  }
  return a1;
}

uint64_t sub_1B5F05E8C(uint64_t a1)
{
  uint64_t v2 = sub_1B61AFCB0();
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_1B5F05EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B61AFCB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 52)) = *(void *)(a2 + *(int *)(a3 + 52));
  return a1;
}

uint64_t sub_1B5F05F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B61AFCB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 52)) = *(void *)(a2 + *(int *)(a3 + 52));
  return a1;
}

uint64_t sub_1B5F05FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B61AFCB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 52)) = *(void *)(a2 + *(int *)(a3 + 52));
  return a1;
}

uint64_t sub_1B5F06064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B61AFCB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 52)) = *(void *)(a2 + *(int *)(a3 + 52));
  return a1;
}

uint64_t sub_1B5F060E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B5F060F4);
}

uint64_t sub_1B5F060F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B61AFCB0();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t sub_1B5F0613C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B5F06150);
}

uint64_t sub_1B5F06150(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B61AFCB0();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_1B5F0619C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5F0531C(a1, v2, a2);
}

uint64_t sub_1B5F061B8(uint64_t a1, uint64_t a2)
{
  return sub_1B5F05904(a1, a2, v2) & 1;
}

unint64_t sub_1B5F061D8()
{
  unint64_t result = qword_1EB642088[0];
  if (!qword_1EB642088[0])
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, qword_1EB642088);
  }
  return result;
}

void sub_1B5F06230(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B61B2F80();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

CGSize __swiftcall ShineSizer.size(for:)(CGSize a1)
{
  CGFloat height = a1.height;
  CGFloat width = a1.width;
  unint64_t v4 = *v1;
  if ((~*v1 & 0xF000000000000007) != 0)
  {
    unint64_t v5 = v1[1];
    sub_1B5E8C23C(v4);
    sub_1B5E8C23C(v5);
    OUTLINED_FUNCTION_1_59(v6, v7);
    unint64_t v9 = v8.n128_u64[0];
    OUTLINED_FUNCTION_1_59(v8, v10);
    CGFloat height = v11;
    sub_1B5E8C284(v4);
    sub_1B5E8C284(v5);
    CGFloat width = *(double *)&v9;
  }
  double v12 = width;
  double v13 = height;
  result.CGFloat height = v13;
  result.CGFloat width = v12;
  return result;
}

void sub_1B5F06320()
{
  uint64_t v1 = *v0;
  switch((unint64_t)*v0 >> 61)
  {
    case 1uLL:
      uint64_t v8 = v1 & 0x1FFFFFFFFFFFFFFFLL;
      unint64_t v9 = *(void *)(v8 + 24);
      sub_1B5E8C23C(*(void *)(v8 + 16));
      sub_1B5E8C23C(v9);
      OUTLINED_FUNCTION_1_59(v10, v11);
      OUTLINED_FUNCTION_1_59(v12, v13);
      OUTLINED_FUNCTION_2_52(v14);
      break;
    case 2uLL:
      uint64_t v15 = v1 & 0x1FFFFFFFFFFFFFFFLL;
      unint64_t v16 = *(void *)(v15 + 16);
      uint64_t v17 = *(void (**)(uint64_t))(v15 + 24);
      sub_1B5E8C23C(v16);
      swift_retain();
      uint64_t v20 = OUTLINED_FUNCTION_1_59(v18, v19);
      v17(v20);
      swift_release();
      sub_1B5E8C284(v16);
      break;
    case 3uLL:
    case 4uLL:
      return;
    default:
      unint64_t v2 = *(void *)(v1 + 24);
      sub_1B5E8C23C(*(void *)(v1 + 16));
      sub_1B5E8C23C(v2);
      OUTLINED_FUNCTION_1_59(v3, v4);
      OUTLINED_FUNCTION_1_59(v5, v6);
      OUTLINED_FUNCTION_2_52(v7);
      break;
  }
}

unint64_t + infix(_:_:)@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>)
{
  return sub_1B5F06578(a1, (uint64_t)sub_1B5F064EC, a2, a3);
}

uint64_t sub_1B5F064A8()
{
  sub_1B5E8C284(*(void *)(v0 + 16));
  swift_release();
  return swift_deallocObject();
}

double sub_1B5F064EC(double a1)
{
  return *(double *)(v1 + 16) + a1;
}

unint64_t - infix(_:_:)@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>)
{
  return sub_1B5F06578(a1, (uint64_t)sub_1B5F0651C, a2, a3);
}

double sub_1B5F0651C(double a1)
{
  return a1 - *(double *)(v1 + 16);
}

unint64_t * infix(_:_:)@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>)
{
  return sub_1B5F06578(a1, (uint64_t)sub_1B5F0654C, a2, a3);
}

double sub_1B5F0654C(double a1)
{
  return *(double *)(v1 + 16) * a1;
}

unint64_t / infix(_:_:)@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>)
{
  return sub_1B5F06578(a1, (uint64_t)sub_1B5F06614, a2, a3);
}

unint64_t sub_1B5F06578@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>, double a4@<D0>)
{
  unint64_t v7 = *a1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  uint64_t v9 = swift_allocObject();
  *(double *)(v9 + 16) = a4;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = v9;
  *a3 = v8 | 0x4000000000000000;
  return sub_1B5E8C23C(v7);
}

double sub_1B5F06614(double a1)
{
  return a1 / *(double *)(v1 + 16);
}

unint64_t destroy for ShineSizer(unint64_t *a1)
{
  unint64_t result = *a1;
  if (((((result >> 57) >> 4) | (8 * ((result >> 57) & 8 | result & 7))) ^ 0x7F) >= 0x7B)
  {
    sub_1B5E8C284(result);
    unint64_t v3 = a1[1];
    return sub_1B5E8C284(v3);
  }
  return result;
}

uint64_t _s5TeaUI10ShineSizerOwCP_0(uint64_t a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  if (((((*a2 >> 57) >> 4) | (8 * ((*a2 >> 57) & 8 | *a2 & 7))) ^ 0x7F) < 0x7B)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    sub_1B5E8C23C(*a2);
    *(void *)a1 = v4;
    unint64_t v5 = a2[1];
    sub_1B5E8C23C(v5);
    *(void *)(a1 + 8) = v5;
  }
  return a1;
}

unint64_t *assignWithCopy for ShineSizer(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  unsigned int v6 = (((*a2 >> 57) >> 4) | (8 * ((*a2 >> 57) & 8 | *a2 & 7))) ^ 0x7F;
  if (((((v4 >> 57) >> 4) | (8 * ((v4 >> 57) & 8 | v4 & 7))) ^ 0x7F) < 0x7B)
  {
    if (v6 >= 0x7B)
    {
      sub_1B5E8C23C(*a2);
      *a1 = v5;
      unint64_t v10 = a2[1];
      sub_1B5E8C23C(v10);
      a1[1] = v10;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v6 < 0x7B)
  {
    sub_1B5E8C284(v4);
    sub_1B5E8C284(a1[1]);
    goto LABEL_7;
  }
  sub_1B5E8C23C(*a2);
  unint64_t v7 = *a1;
  *a1 = v5;
  sub_1B5E8C284(v7);
  unint64_t v8 = a2[1];
  sub_1B5E8C23C(v8);
  unint64_t v9 = a1[1];
  a1[1] = v8;
  sub_1B5E8C284(v9);
  return a1;
}

unint64_t *assignWithTake for ShineSizer(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a1;
  if (((((v4 >> 57) >> 4) | (8 * ((v4 >> 57) & 8 | v4 & 7))) ^ 0x7F) < 0x7B) {
    goto LABEL_5;
  }
  if (((((*a2 >> 57) >> 4) | (8 * ((*a2 >> 57) & 8 | *a2 & 7))) ^ 0x7F) < 0x7B)
  {
    sub_1B5E8C284(v4);
    sub_1B5E8C284(a1[1]);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *a2;
  sub_1B5E8C284(v4);
  unint64_t v5 = a1[1];
  a1[1] = a2[1];
  sub_1B5E8C284(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShineSizer(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7B && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 123);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 4) | (8 * ((*(void *)a1 >> 57) & 8 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7B) {
    unsigned int v3 = -1;
  }
  if (v3 + 1 >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ShineSizer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7A)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 123;
    if (a3 >= 0x7B) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7B) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = ((16 * (a2 ^ 0x7F)) | ((a2 ^ 0x7F) >> 3) | ((unint64_t)((16 * (a2 ^ 0x7F)) | ((a2 ^ 0x7F) >> 3)) << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1B5F0693C(void *a1)
{
  int v1 = ((*a1 >> 57) >> 4) | (8 * ((*a1 >> 57) & 8 | *a1 & 7));
  unsigned int v2 = v1 ^ 0x7F;
  unsigned int v3 = 128 - v1;
  if (v2 >= 0x7B) {
    return 0;
  }
  else {
    return v3;
  }
}

unint64_t *sub_1B5F0696C(unint64_t *result, unsigned int a2)
{
  if (a2 > 0x7B)
  {
    unint64_t v3 = a2 - 124;
    result[1] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
    unint64_t v3 = (v2 | (v2 << 57)) & 0xF000000000000007;
  }
  *unint64_t result = v3;
  return result;
}

ValueMetadata *type metadata accessor for ShineSizer()
{
  return &type metadata for ShineSizer;
}

unint64_t *initializeBufferWithCopyOfBuffer for ShineSizer.Expression(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1B5E8C23C(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for ShineSizer.Expression(unint64_t *a1)
{
  return sub_1B5E8C284(*a1);
}

unint64_t *assignWithCopy for ShineSizer.Expression(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1B5E8C23C(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_1B5E8C284(v4);
  return a1;
}

unint64_t *assignWithTake for ShineSizer.Expression(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_1B5E8C284(v3);
  return a1;
}

ValueMetadata *type metadata accessor for ShineSizer.Expression()
{
  return &type metadata for ShineSizer.Expression;
}

id sub_1B5F06A74()
{
  return objc_msgSend(v0, sel_contentInset);
}

id sub_1B5F06A88()
{
  return objc_msgSend(v0, sel_setContentInset_);
}

void (*sub_1B5F06A98(void *a1))(double **a1)
{
  unint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  objc_msgSend(v1, sel_contentInset);
  void *v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  v3[3] = v7;
  return sub_1B5F06B08;
}

void sub_1B5F06B08(double **a1)
{
  int v1 = *a1;
  objc_msgSend(*((id *)*a1 + 4), sel_setContentInset_, *v1, v1[1], v1[2], v1[3]);
  free(v1);
}

uint64_t String.width(constrainedTo:font:singleLine:)(void *a1, char a2, uint64_t a3, uint64_t a4, double a5)
{
  return sub_1B5F06B84(a1, a2, a5, a3, a4, MEMORY[0x1E4F1DB08]);
}

uint64_t String.height(constrainedTo:font:singleLine:)(void *a1, char a2, uint64_t a3, uint64_t a4, double a5)
{
  return sub_1B5F06B84(a1, a2, a5, a3, a4, MEMORY[0x1E4F1DAE0]);
}

uint64_t sub_1B5F06B84(void *a1, char a2, double a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(double, double, double, double))
{
  unint64_t v10 = (void *)sub_1B61B20C0();
  if (a2) {
    uint64_t v11 = 2;
  }
  else {
    uint64_t v11 = 3;
  }
  sub_1B5EE8150();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B61BE690;
  __n128 v13 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  *(void *)(inited + 64) = sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C68);
  *(void *)(inited + 40) = a1;
  type metadata accessor for Key(0);
  sub_1B5EE81A8();
  id v14 = v13;
  id v15 = a1;
  sub_1B61B1F50();
  unint64_t v16 = (void *)sub_1B61B1F00();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_boundingRectWithSize_options_attributes_context_, v11, v16, 0, a3, 1.79769313e308);
  double v18 = v17;
  double v20 = v19;
  double v22 = v21;
  double v24 = v23;

  return a6(v18, v20, v22, v24);
}

double String.textSize(inBoundingSize:with:paragraphStyle:fontTracking:singleLine:)(void *a1, void *a2, char a3, double a4, double a5, double a6)
{
  sub_1B5EE8150();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B61C0140;
  __n128 v12 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v13 = sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C68);
  *(void *)(inited + 40) = a1;
  id v14 = (void *)*MEMORY[0x1E4FB0738];
  *(void *)(inited + 64) = v13;
  *(void *)(inited + 72) = v14;
  uint64_t v15 = sub_1B5DFF760(0, &qword_1EB649958);
  *(void *)(inited + 80) = a2;
  unint64_t v16 = (void *)*MEMORY[0x1E4FB0710];
  *(void *)(inited + 104) = v15;
  *(void *)(inited + 112) = v16;
  *(void *)(inited + 144) = MEMORY[0x1E4FBC958];
  *(double *)(inited + 120) = a6;
  type metadata accessor for Key(0);
  sub_1B5EE81A8();
  id v17 = v12;
  id v18 = a1;
  id v19 = v14;
  id v20 = a2;
  id v21 = v16;
  OUTLINED_FUNCTION_0_55();
  sub_1B61B1F50();
  double v22 = (void *)sub_1B61B20C0();
  if (a3) {
    uint64_t v23 = 32;
  }
  else {
    uint64_t v23 = 33;
  }
  OUTLINED_FUNCTION_0_55();
  double v24 = (void *)sub_1B61B1F00();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_boundingRectWithSize_options_attributes_context_, v23, v24, 0, a4, a5);
  double v26 = v25;

  return v26;
}

double String.jsonObject()@<D0>(_OWORD *a1@<X8>)
{
  v17[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1B61B2150();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B61B2140();
  uint64_t v6 = sub_1B61B2100();
  unint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v8 >> 60 != 15)
  {
    unint64_t v9 = self;
    unint64_t v10 = (void *)sub_1B61AF990();
    v17[0] = 0;
    id v11 = objc_msgSend(v9, sel_JSONObjectWithData_options_error_, v10, 0, v17);

    id v12 = v17[0];
    if (v11)
    {
      sub_1B61B3030();
      sub_1B5E2E5C4(v6, v8);
      swift_unknownObjectRelease();
      return result;
    }
    id v14 = v12;
    uint64_t v15 = (void *)sub_1B61AF840();

    swift_willThrow();
    sub_1B5E2E5C4(v6, v8);
  }
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t static String.windowToolbarShareAction.getter()
{
  return 0x6572616873;
}

uint64_t static String.collapseSidebarKey.getter()
{
  return 0x657370616C6C6F63;
}

BOOL static BlueprintLayoutTransitionResult.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t BlueprintLayoutTransitionResult.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t BlueprintLayoutTransitionResult.hashValue.getter()
{
  return sub_1B61B3940();
}

uint64_t BlueprintLayoutTransitionManager.__allocating_init(layoutProvider:layoutCollectionProvider:layoutOptionsProvider:prepareLayout:)()
{
  OUTLINED_FUNCTION_3_44();
  uint64_t v0 = swift_allocObject();
  BlueprintLayoutTransitionManager.init(layoutProvider:layoutCollectionProvider:layoutOptionsProvider:prepareLayout:)();
  return v0;
}

void *BlueprintLayoutTransitionManager.init(layoutProvider:layoutCollectionProvider:layoutOptionsProvider:prepareLayout:)()
{
  OUTLINED_FUNCTION_3_44();
  *(void *)((char *)v1 + *(void *)(*v1 + 120)) = 0;
  OUTLINED_FUNCTION_10_0();
  *(void *)((char *)v1 + *(void *)(v6 + 128)) = 0;
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(void))(v7 + 32))();
  *(void *)((char *)v1 + *(void *)(*v1 + 112)) = v5;
  v1[2] = v4;
  v1[3] = v3;
  OUTLINED_FUNCTION_10_0();
  unint64_t v9 = (void *)((char *)v1 + *(void *)(v8 + 136));
  *unint64_t v9 = v2;
  v9[1] = v0;
  return v1;
}

void BlueprintLayoutTransitionManager.transitionLayout(blueprintView:layoutOptions:bookmarkManager:animated:completion:)(void *a1, uint64_t a2, const void *a3, uint64_t a4, int a5, void (*a6)(uint64_t), void (*a7)(uint64_t))
{
  uint64_t v8 = v7;
  v97 = a6;
  int v93 = a5;
  uint64_t v92 = a4;
  sub_1B61AFAB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v94 = v13;
  uint64_t v95 = v12;
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = MEMORY[0x1F4188790](v12);
  MEMORY[0x1F4188790](v16);
  v96 = (char *)&v86 - v17;
  uint64_t v18 = sub_1B61B1E30();
  OUTLINED_FUNCTION_0_10();
  uint64_t v20 = v19;
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_80();
  double v24 = (uint64_t *)(v23 - v22);
  memcpy(v107, a3, sizeof(v107));
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB64CA90);
  *double v24 = sub_1B61B2C50();
  (*(void (**)(uint64_t *, void, uint64_t))(v20 + 104))(v24, *MEMORY[0x1E4FBCBF0], v18);
  LOBYTE(a3) = sub_1B61B1E60();
  (*(void (**)(uint64_t *, uint64_t))(v20 + 8))(v24, v18);
  if ((a3 & 1) == 0)
  {
    __break(1u);
    return;
  }
  self;
  uint64_t v25 = swift_dynamicCastObjCClass();
  if (!v25)
  {
LABEL_15:
    uint64_t v39 = OUTLINED_FUNCTION_5_26();
    v97(v39);
    return;
  }
  double v26 = (void *)v25;
  id v27 = a1;
  id v28 = objc_msgSend(v26, sel_collectionViewLayout);
  swift_getObjectType();
  uint64_t v29 = dynamic_cast_existential_1_conditional((uint64_t)v28);
  if (!v29)
  {

    goto LABEL_15;
  }
  v88 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v90 = v27;
  v91 = a7;
  uint64_t v31 = *(void *)(*(void *)v8 + 120);
  if (!*(void *)(v8 + v31)
    || (float64x2_t v32 = (void *)v29,
        uint64_t v33 = v30,
        memcpy(v106, v107, 0x20DuLL),
        swift_retain(),
        uint64_t v34 = (void *)sub_1B60CF7E4(),
        swift_release(),
        (v89 = v34) == 0))
  {
    uint64_t v38 = OUTLINED_FUNCTION_5_26();
    v97(v38);
LABEL_26:

    return;
  }
  uint64_t v35 = *(void *)(v8 + v31);
  if (v35)
  {
    BOOL v36 = v89[2] == *(void *)(v35 + 16) && v89[3] == *(void *)(v35 + 24);
    if (v36 || (sub_1B61B3760() & 1) != 0)
    {
      LOBYTE(v106[0]) = 0;
      uint64_t v37 = v106;
LABEL_25:
      v97((uint64_t)v37);
      swift_release();
      goto LABEL_26;
    }
  }
  objc_msgSend(v26, sel_contentSize);
  double v41 = v40;
  double v43 = v42;
  uint64_t ObjectType = swift_getObjectType();
  objc_msgSend(v32, sel_collectionViewContentSize);
  if (v41 != v46 || v43 != v45)
  {
    objc_msgSend(v26, sel_setNeedsLayout);
    objc_msgSend(v26, sel_layoutIfNeeded);
    objc_msgSend(v26, sel_contentSize);
    double v49 = v48;
    double v51 = v50;
    objc_msgSend(v32, sel_collectionViewContentSize);
    if (v49 != v53 || v51 != v52)
    {
      uint64_t v37 = (uint64_t *)OUTLINED_FUNCTION_5_26();
      goto LABEL_25;
    }
  }
  v106[0] = (uint64_t)v32;
  v55 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v33 + 16))(ObjectType, v33);
  uint64_t v87 = v56;
  v57 = *(void (**)(void))(v8 + *(void *)(*(void *)v8 + 136));
  uint64_t v58 = swift_getObjectType();
  id v59 = v55;
  v57();

  sub_1B5F0797C(v92, (uint64_t)v103);
  uint64_t v60 = v104;
  uint64_t v86 = v58;
  if (v104)
  {
    uint64_t v61 = v105;
    __swift_project_boxed_opaque_existential_1(v103, v104);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v61 + 16))(&v98, v60, v61);
    nullsub_1(&v98, v62, v63, v64, v65);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
  }
  else
  {
    sub_1B5F0A5C8((uint64_t)v103, qword_1EB645B98, &qword_1EB645B90);
    sub_1B5F079F8(&v98);
  }
  sub_1B5F08600((uint64_t)&v98, (uint64_t)v106, (unint64_t *)&qword_1EB64A380);
  sub_1B5F08600((uint64_t)v106, (uint64_t)&v98, (unint64_t *)&qword_1EB64A380);
  v66 = v89;
  uint64_t v92 = sub_1B5F07A10((uint64_t)&v98, v89);
  uint64_t v68 = v67;
  char v70 = v69 & 1;
  sub_1B5F07E6C(v106);
  sub_1B5F07F0C(v66);
  uint64_t v71 = (uint64_t)v96;
  sub_1B61AFAA0();
  *(void *)&long long v98 = v59;
  (*(void (**)(uint64_t))(v87 + 8))(v86);
  sub_1B5FF87EC(v71, v92, v68, v70);
  swift_release();
  uint64_t v72 = v94;
  v73 = v88;
  uint64_t v74 = v71;
  uint64_t v75 = v95;
  (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v88, v74, v95);
  unint64_t v76 = (*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
  uint64_t v77 = v15 + v76 + 7;
  v78 = v59;
  unint64_t v79 = v77 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v80 = swift_allocObject();
  uint64_t v81 = v87;
  *(void *)(v80 + 16) = v78;
  *(void *)(v80 + 24) = v81;
  (*(void (**)(unint64_t, char *, uint64_t))(v72 + 32))(v80 + v76, v73, v75);
  v82 = (void (**)(uint64_t))(v80 + v79);
  v83 = v91;
  *v82 = v97;
  v82[1] = v83;
  v101 = sub_1B5F08444;
  uint64_t v102 = v80;
  *(void *)&long long v98 = MEMORY[0x1E4F143A8];
  *((void *)&v98 + 1) = 1107296256;
  v99 = sub_1B5E73DCC;
  v100 = &block_descriptor_22;
  v84 = _Block_copy(&v98);
  id v85 = v78;
  swift_retain();
  swift_release();
  objc_msgSend(v26, sel_setCollectionViewLayout_animated_completion_, v85, v93 & 1, v84);
  _Block_release(v84);

  swift_release();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v96, v75);
}

uint64_t sub_1B5F0797C(uint64_t a1, uint64_t a2)
{
  sub_1B5E36DD0(0, qword_1EB645B98, &qword_1EB645B90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double sub_1B5F079F8(_OWORD *a1)
{
  double result = 0.0;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1B5F07A10(uint64_t a1, void *a2)
{
  sub_1B5F08600(a1, (uint64_t)v32, (unint64_t *)&qword_1EB64A380);
  sub_1B5F08600((uint64_t)v32, (uint64_t)v33, (unint64_t *)&qword_1EB64A380);
  if (sub_1B5F046D0((uint64_t)v33) == 1) {
    return 0;
  }
  double v5 = *(double *)&v33[6];
  double v4 = *(double *)&v33[7];
  CGFloat v6 = *(double *)&v33[12];
  if (*(double *)&v33[7] == -*(double *)&v33[12]) {
    return v33[6];
  }
  if (*(double *)&v33[7] <= 0.0) {
    return 0;
  }
  double v7 = *(double *)&v33[14];
  CGFloat v29 = *(double *)&v33[13];
  double v8 = *(double *)&v33[15];
  double v9 = *(double *)v33;
  double v10 = *(double *)&v33[1];
  sub_1B61B0430();
  memcpy(__dst, &__src[40], 0x20EuLL);
  sub_1B60939AC();
  unint64_t v13 = v12;
  uint64_t v15 = v14;
  memcpy(__dst, __src, 0x498uLL);
  uint64_t v16 = sub_1B6131E30(v13, v15, v5, v4, v9, v10, v5, v4, v6, v29, v7, v8);
  if (v16)
  {
    unint64_t v11 = *(void *)(v16 + 16);
    sub_1B61B1F70();
    swift_release();
  }
  else
  {
    unint64_t v11 = MEMORY[0x1E4FBC860];
  }
  if (v11 >> 62)
  {
    sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C40);
    sub_1B61B1F70();
    unint64_t v17 = sub_1B61B34E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B61B1F70();
    sub_1B61B37D0();
    sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C40);
    unint64_t v17 = v11;
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_1B5F08668(a2, v17);
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_1B5F08D78(v18, v5, v4, v9, v10);
  unint64_t v20 = sub_1B5F08F24(v19);
  swift_bridgeObjectRelease();
  if (v20 >> 62)
  {
    sub_1B61B1F70();
    uint64_t v23 = sub_1B61B3530();
    swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_14;
    }
  }
  else if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_14:
    sub_1B5E7FBF8(0, (v20 & 0xC000000000000001) == 0, v20);
    if ((v20 & 0xC000000000000001) != 0) {
      id v21 = (id)MEMORY[0x1BA9B04B0](0, v20);
    }
    else {
      id v21 = *(id *)(v20 + 32);
    }
    uint64_t v22 = v21;
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  swift_bridgeObjectRelease();
  unint64_t v24 = sub_1B5F08F24(v18);
  swift_bridgeObjectRelease();
  if (v24 >> 62)
  {
    sub_1B61B1F70();
    uint64_t v28 = sub_1B61B3530();
    swift_bridgeObjectRelease();
    if (v28) {
      goto LABEL_21;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_29;
  }
LABEL_21:
  sub_1B5E7FBF8(0, (v24 & 0xC000000000000001) == 0, v24);
  if ((v24 & 0xC000000000000001) != 0) {
    id v25 = (id)MEMORY[0x1BA9B04B0](0, v24);
  }
  else {
    id v25 = *(id *)(v24 + 32);
  }
  uint64_t v22 = v25;
LABEL_24:
  swift_bridgeObjectRelease();
  memcpy(__dst, v33, 0x80uLL);
  id v26 = sub_1B5F08FA4(v22, (uint64_t)__dst, (uint64_t)a2);
  if (!v26)
  {

LABEL_30:
    sub_1B5EED720((uint64_t)__src);
    return 0;
  }
  id v27 = v26;
  objc_msgSend(v22, sel_frame);
  objc_msgSend(v27, sel_frame);

  sub_1B5EED720((uint64_t)__src);
  return 0;
}

uint64_t *sub_1B5F07E6C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1B5F07EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B5F07F0C(void *a1)
{
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_0_14();
  uint64_t v5 = v4;
  uint64_t v40 = *v6;
  uint64_t v41 = sub_1B61AFAB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_80();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_1B61B1E30();
  OUTLINED_FUNCTION_0_10();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_80();
  uint64_t v19 = (uint64_t *)(v18 - v17);
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB64CA90);
  *uint64_t v19 = sub_1B61B2C50();
  (*(void (**)(uint64_t *, void, uint64_t))(v15 + 104))(v19, *MEMORY[0x1E4FBCBF0], v13);
  char v20 = sub_1B61B1E60();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v15 + 8))(v19, v13);
  if (v20)
  {
    swift_weakLoadStrong();
    OUTLINED_FUNCTION_7_28();
    *(void *)(v2 + *(void *)(v22 + 128)) = v23;
    swift_release();
    OUTLINED_FUNCTION_7_28();
    *(void *)(v2 + *(void *)(v24 + 120)) = a1;
    swift_release();
    OUTLINED_FUNCTION_7_28();
    memcpy(v44, a1 + 75, sizeof(v44));
    memcpy(v43, a1 + 75, 0x498uLL);
    swift_retain();
    swift_retain();
    sub_1B5F096F4((uint64_t)v44);
    sub_1B61B0400();
    swift_release();
    sub_1B5EED720((uint64_t)v44);
    OUTLINED_FUNCTION_7_28();
    (*(void (**)(void))(*(void *)(v5 + 88) + 48))(*(void *)(v5 + 80));
    long long v25 = *(_OWORD *)(v40 + 96);
    v43[0] = *(_OWORD *)(v40 + 80);
    v43[1] = v25;
    type metadata accessor for BlueprintLayout();
    OUTLINED_FUNCTION_0_9();
    sub_1B61B0400();
    swift_release();
    uint64_t v26 = *(void *)(v2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v26 + 16))(ObjectType, v26);
    memcpy(v45, a1 + 222, 0x20DuLL);
    sub_1B5E62D40((uint64_t)v45);
    sub_1B61AFAA0();
    uint64_t v28 = sub_1B61AFA80();
    uint64_t v30 = v29;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v41);
    v46[0] = v28;
    v46[1] = v30;
    memcpy(&v46[2], v45, 0x20DuLL);
    memcpy(v43, v46, 0x21DuLL);
    nullsub_1(v43, v31, v32, v33, v34);
    sub_1B5F08600((uint64_t)v43, (uint64_t)&v42, (unint64_t *)&qword_1EB64AD88);
    sub_1B61B0400();
    swift_release();
    uint64_t result = sub_1B5F098D4((uint64_t)v46);
    uint64_t v35 = a1[288];
    uint64_t v36 = *(void *)(v35 + 16);
    if (v36)
    {
      sub_1B61B1F70();
      uint64_t v37 = v35 + 40;
      do
      {
        uint64_t v38 = *(void (**)(uint64_t))(v37 - 8);
        uint64_t v39 = swift_retain();
        v38(v39);
        swift_release();
        v37 += 16;
        --v36;
      }
      while (v36);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B5F082D4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = a2;
  (*(void (**)(uint64_t, uint64_t))(a3 + 8))(ObjectType, a3);
  sub_1B5FF88FC();
  swift_release();
  objc_msgSend(a2, sel_invalidateLayout);
  char v10 = 1;
  return a5(&v10);
}

uint64_t sub_1B5F08380()
{
  uint64_t v1 = sub_1B61AFAB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5F08444(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1B61AFAB0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void **)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(uint64_t (**)(char *))(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1B5F082D4(a1, v5, v6, v1 + v4, v7);
}

uint64_t BlueprintLayoutTransitionManager.pluginLayoutTransition(layoutOptions:)@<X0>(void *__src@<X0>, uint64_t a2@<X8>)
{
  memcpy(__dst, __src, 0x20DuLL);
  OUTLINED_FUNCTION_10_0();
  if (*(void *)(v2 + *(void *)(v5 + 120))
    && (memcpy(v14, __src, 0x20DuLL), swift_retain(), uint64_t v6 = sub_1B60CF7E4(), swift_release(), v6))
  {
    uint64_t v7 = __dst[1];
    uint64_t v8 = *(void *)(v6 + 608);
    swift_release();
    memcpy(v14, __dst, 0x20DuLL);
    uint64_t v15 = v7;
    uint64_t v16 = v8;
    nullsub_1(v14, v9, v10, v11, v12);
    sub_1B5F08600((uint64_t)v14, a2, (unint64_t *)&qword_1EB6418B8);
    return sub_1B5E62D40((uint64_t)__dst);
  }
  else
  {
    sub_1B5F085F8(v14);
    return sub_1B5F08600((uint64_t)v14, a2, (unint64_t *)&qword_1EB6418B8);
  }
}

void sub_1B5F085F8(void *a1)
{
}

uint64_t sub_1B5F08600(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_1B5F0520C(0, a3);
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1B5F08668(void *a1, unint64_t a2)
{
  uint64_t v56 = (void *)*a1;
  uint64_t v4 = v56[11];
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  double v47 = (char *)&v43 - v6;
  uint64_t v55 = *(void *)(v7 + 104);
  uint64_t v46 = type metadata accessor for BlueprintLayoutItem();
  uint64_t v8 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  v54 = (char *)&v43 - v9;
  uint64_t v57 = sub_1B61AFCB0();
  uint64_t v10 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  double v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = MEMORY[0x1E4FBC860];
  unint64_t v65 = MEMORY[0x1E4FBC860];
  if (a2 >> 62)
  {
    sub_1B61B1F70();
    uint64_t result = sub_1B61B3530();
    uint64_t v13 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    unint64_t v40 = MEMORY[0x1E4FBC860];
LABEL_34:
    if (v40 >> 62)
    {
      sub_1B61B1F70();
      uint64_t v41 = sub_1B61B3530();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v42 = v64;
    swift_bridgeObjectRelease();
    if (v41) {
      return v65;
    }
    else {
      return v42;
    }
  }
  uint64_t v13 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = sub_1B61B1F70();
  if (!v13) {
    goto LABEL_33;
  }
LABEL_3:
  if (v13 >= 1)
  {
    uint64_t v58 = v4;
    uint64_t v15 = 0;
    double v53 = a1 + 4;
    unint64_t v16 = a2 & 0xC000000000000001;
    double v51 = (void (**)(uint64_t, uint64_t))(v10 + 8);
    double v45 = (void (**)(char *, char *, uint64_t))(v5 + 16);
    double v44 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v17 = &selRef_setViewControllers_animated_;
    uint64_t v18 = &selRef_axSafelyAddObjectsFromArray_;
    uint64_t v19 = v57;
    unint64_t v52 = a2;
    unint64_t v50 = a2 & 0xC000000000000001;
    uint64_t v49 = v13;
    while (1)
    {
      if (v16) {
        id v20 = (id)MEMORY[0x1BA9B04B0](v15, a2);
      }
      else {
        id v20 = *(id *)(a2 + 8 * v15 + 32);
      }
      id v21 = v20;
      id v22 = [v20 v17[111]];
      if (v22 == (id)2) {
        goto LABEL_22;
      }
      if (v22 == (id)1) {
        break;
      }
      if (v22) {
        goto LABEL_22;
      }
      [v21 v18[85]];
      if (v24 <= 0.0 || v23 <= 0.0) {
        goto LABEL_22;
      }
      id v25 = objc_msgSend(v21, sel_indexPath);
      sub_1B61AFC40();

      uint64_t v26 = v56[12];
      v61[0] = v56[10];
      v61[1] = v58;
      v61[2] = v26;
      uint64_t v62 = v55;
      double v48 = (char *)type metadata accessor for BlueprintLayout();
      uint64_t v27 = (uint64_t)v12;
      char v28 = BlueprintLayout.contains(indexPath:)((uint64_t)v12, (uint64_t)v48);
      uint64_t v29 = *v51;
      (*v51)(v27, v19);
      if (v28)
      {
        id v30 = objc_msgSend(v21, (SEL)&selRef__expectedContentInsetDeltaForViewController_);
        double v43 = v29;
        id v31 = v30;
        sub_1B61AFC40();

        uint64_t v32 = v54;
        BlueprintLayout.subscript.getter(v27, (uint64_t)v48);
        double v48 = (char *)v27;
        v43(v27, v19);
        (*v45)(v47, v32, v58);
        sub_1B5E00AB8(0, qword_1EB642088);
        if (swift_dynamicCast())
        {
          sub_1B5E30E70(v59, (uint64_t)v61);
          uint64_t v33 = v62;
          uint64_t v34 = v63;
          __swift_project_boxed_opaque_existential_1(v61, v62);
          char v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8))(v33, v34);
          a2 = v52;
          unint64_t v16 = v50;
          uint64_t v13 = v49;
          if (v35)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
            uint64_t v19 = v57;
            double v12 = v48;
            goto LABEL_27;
          }
          (*v44)(v54, v46);

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
          uint64_t v19 = v57;
          double v12 = v48;
        }
        else
        {
          uint64_t v60 = 0;
          memset(v59, 0, sizeof(v59));
          sub_1B5F0A5C8((uint64_t)v59, &qword_1E9DA9F10, qword_1EB642088);
          uint64_t v19 = v57;
          double v12 = v48;
          a2 = v52;
          unint64_t v16 = v50;
          uint64_t v13 = v49;
LABEL_27:
          id v39 = v21;
          MEMORY[0x1BA9AF660]();
          if (*(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1B61B2580();
          }
          sub_1B61B25D0();
          sub_1B61B2510();

          (*v44)(v54, v46);
        }
LABEL_31:
        uint64_t v17 = &selRef_setViewControllers_animated_;
        uint64_t v18 = &selRef_axSafelyAddObjectsFromArray_;
        goto LABEL_23;
      }

      a2 = v52;
      uint64_t v17 = &selRef_setViewControllers_animated_;
      uint64_t v18 = &selRef_axSafelyAddObjectsFromArray_;
      unint64_t v16 = v50;
      double v12 = (char *)v27;
      uint64_t v13 = v49;
LABEL_23:
      if (v13 == ++v15)
      {
        swift_bridgeObjectRelease();
        unint64_t v40 = v65;
        goto LABEL_34;
      }
    }
    [v21 v18[85]];
    if (v37 > 0.0 && v36 > 0.0)
    {
      id v38 = v21;
      MEMORY[0x1BA9AF660]();
      if (*(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1B61B2580();
      }
      sub_1B61B25D0();
      sub_1B61B2510();

      goto LABEL_31;
    }
LABEL_22:

    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B5F08D78(unint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if (!(a1 >> 62))
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = sub_1B61B1F70();
    if (v10) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  sub_1B61B1F70();
  uint64_t result = sub_1B61B3530();
  uint64_t v10 = result;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v10 < 1)
  {
    __break(1u);
  }
  else
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v13 = (id)MEMORY[0x1BA9B04B0](i, a1);
      }
      else {
        id v13 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v14 = v13;
      objc_msgSend(v13, sel_frame);
      double v16 = v15;
      v20.origin.double x = a2;
      v20.origin.double y = a3;
      v20.size.CGFloat width = a4;
      v20.size.CGFloat height = a5;
      if (CGRectGetMinX(v20) <= v16
        && (objc_msgSend(v14, sel_frame),
            double v18 = v17,
            v21.origin.double x = a2,
            v21.origin.double y = a3,
            v21.size.CGFloat width = a4,
            v21.size.CGFloat height = a5,
            CGRectGetMinY(v21) <= v18))
      {
        sub_1B61B3370();
        sub_1B61B33B0();
        sub_1B61B33C0();
        sub_1B61B3380();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    return v19;
  }
  return result;
}

uint64_t sub_1B5F08F24(uint64_t a1)
{
  if (a1 < 0 || (a1 & 0x4000000000000000) != 0)
  {
    unint64_t v3 = sub_1B61B1F70();
    uint64_t v1 = (uint64_t)sub_1B5E48B48(v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v1 = a1 & 0xFFFFFFFFFFFFFF8;
    sub_1B61B1F70();
  }
  uint64_t v4 = v1;
  sub_1B5F09990(&v4);
  return v4;
}

id sub_1B5F08FA4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1B61AFCB0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = &v29[-v10];
  id v12 = objc_msgSend(a1, sel_representedElementCategory);
  if (v12 == (id)1)
  {
    id v19 = objc_msgSend(a1, sel_representedElementKind);
    if (!v19) {
      return 0;
    }
    CGRect v20 = v19;
    sub_1B61B20F0();

    memcpy(v30, (const void *)(a3 + 600), sizeof(v30));
    sub_1B5F096F4((uint64_t)v30);
    id v21 = objc_msgSend(a1, sel_indexPath);
    sub_1B61AFC40();

    uint64_t v22 = v30[143];
    if (*(void *)(v30[143] + 16))
    {
      sub_1B61B1F70();
      unint64_t v23 = sub_1B5E46C8C();
      if (v24)
      {
        uint64_t v25 = *(void *)(*(void *)(v22 + 56) + 8 * v23);
        sub_1B61B1F70();
        swift_bridgeObjectRelease();
        id v13 = sub_1B5E13AA0((uint64_t)v9, v25);
        swift_bridgeObjectRelease();
        if (v13)
        {
          if (BlueprintLayoutCollectionLayoutAttributes.requiresPinning.getter())
          {
            memcpy(v29, &v30[71], sizeof(v29));
            sub_1B5EED904((uint64_t)&v30[71]);
            BlueprintLayoutCollectionPinAdjuster.adjusted(layoutAttributes:offset:insets:contentSize:)();
            uint64_t v27 = v26;

            sub_1B5EED9F8((uint64_t)&v30[71]);
            swift_bridgeObjectRelease();
            id v13 = v27;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
          goto LABEL_19;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
LABEL_15:
    sub_1B5EED720((uint64_t)v30);
    return 0;
  }
  id v13 = 0;
  if (!v12)
  {
    memcpy(v30, (const void *)(a3 + 600), sizeof(v30));
    sub_1B5F096F4((uint64_t)v30);
    id v14 = objc_msgSend(a1, sel_indexPath);
    sub_1B61AFC40();

    uint64_t v15 = v30[142];
    if (*(void *)(v30[142] + 16))
    {
      unint64_t v16 = sub_1B5E46EC0();
      if (v17)
      {
        double v18 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
        id v13 = *(id *)(*(void *)(v15 + 56) + 8 * v16);
        v18(v11, v5);
LABEL_19:
        sub_1B5EED720((uint64_t)v30);
        return v13;
      }
    }
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v11, v5);
    goto LABEL_15;
  }
  return v13;
}

uint64_t BlueprintLayoutTransitionManager.deinit()
{
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(void))(v1 + 8))();
  swift_release();
  OUTLINED_FUNCTION_10_0();
  swift_release();
  OUTLINED_FUNCTION_10_0();
  swift_release();
  OUTLINED_FUNCTION_10_0();
  swift_release();
  return v0;
}

uint64_t BlueprintLayoutTransitionManager.__deallocating_deinit()
{
  BlueprintLayoutTransitionManager.deinit();
  OUTLINED_FUNCTION_0_14();
  return swift_deallocClassInstance();
}

unint64_t sub_1B5F09434()
{
  unint64_t result = qword_1E9DA9F18;
  if (!qword_1E9DA9F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DA9F18);
  }
  return result;
}

void sub_1B5F09480(void *a1, uint64_t a2, const void *a3, uint64_t a4, int a5, void (*a6)(uint64_t), void (*a7)(uint64_t))
{
}

uint64_t sub_1B5F094A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BlueprintLayoutTransitionManager.pluginLayoutTransition(layoutOptions:)(a1, a2);
}

unsigned char *storeEnumTagSinglePayload for BlueprintLayoutTransitionResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F09594);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BlueprintLayoutTransitionResult()
{
  return &type metadata for BlueprintLayoutTransitionResult;
}

uint64_t dispatch thunk of BlueprintLayoutTransitionManagerType.transitionLayout(blueprintView:layoutOptions:bookmarkManager:animated:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 16))();
}

uint64_t sub_1B5F095E8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for BlueprintLayoutTransitionManager()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for BlueprintLayoutTransitionManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BlueprintLayoutTransitionManager);
}

uint64_t dispatch thunk of BlueprintLayoutTransitionManager.__allocating_init(layoutProvider:layoutCollectionProvider:layoutOptionsProvider:prepareLayout:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1B5F096F4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 168);
  int v3 = *(void **)(a1 + 176);
  unsigned int v4 = *(void **)(a1 + 192);
  uint64_t v5 = *(void *)(a1 + 272);
  uint64_t v6 = *(void *)(a1 + 280);
  uint64_t v18 = *(void *)(a1 + 304);
  uint64_t v19 = *(void *)(a1 + 296);
  uint64_t v20 = *(void *)(a1 + 328);
  uint64_t v21 = *(void *)(a1 + 320);
  unint64_t v23 = *(void **)(a1 + 696);
  uint64_t v25 = *(void **)(a1 + 704);
  uint64_t v26 = *(void **)(a1 + 720);
  uint64_t v27 = *(void *)(a1 + 808);
  uint64_t v28 = *(void *)(a1 + 800);
  uint64_t v29 = *(void *)(a1 + 832);
  uint64_t v30 = *(void *)(a1 + 824);
  uint64_t v31 = *(void *)(a1 + 856);
  uint64_t v32 = *(void *)(a1 + 848);
  char v7 = *(unsigned char *)(a1 + 288);
  char v8 = *(unsigned char *)(a1 + 312);
  char v9 = *(unsigned char *)(a1 + 336);
  char v17 = *(unsigned char *)(a1 + 816);
  char v22 = *(unsigned char *)(a1 + 840);
  char v24 = *(unsigned char *)(a1 + 864);
  sub_1B61B1F70();
  sub_1B61B1F70();
  id v10 = v2;
  id v11 = v3;
  id v12 = v4;
  sub_1B5E62DEC(v5, v6, v7);
  sub_1B5E62DEC(v19, v18, v8);
  sub_1B5E62DEC(v21, v20, v9);
  id v13 = v23;
  id v14 = v25;
  id v15 = v26;
  sub_1B5E62DEC(v28, v27, v17);
  sub_1B5E62DEC(v30, v29, v22);
  sub_1B5E62DEC(v32, v31, v24);
  sub_1B61B1F70();
  sub_1B61B1F70();
  sub_1B61B1F70();
  sub_1B61B1F70();
  sub_1B61B1F70();
  sub_1B61B1F70();
  sub_1B61B1F70();
  sub_1B61B1F70();
  sub_1B61B1F70();
  sub_1B61B1F70();
  return a1;
}

uint64_t sub_1B5F098D4(uint64_t a1)
{
  int v3 = *(void **)(a1 + 144);
  uint64_t v2 = *(void **)(a1 + 152);
  uint64_t v4 = *(void *)(a1 + 248);
  uint64_t v5 = *(void *)(a1 + 256);
  uint64_t v6 = *(void *)(a1 + 272);
  uint64_t v7 = *(void *)(a1 + 280);
  uint64_t v12 = *(void *)(a1 + 304);
  uint64_t v13 = *(void *)(a1 + 296);
  char v8 = *(unsigned char *)(a1 + 264);
  char v9 = *(unsigned char *)(a1 + 288);
  char v11 = *(unsigned char *)(a1 + 312);

  swift_bridgeObjectRelease();
  sub_1B5E5F620(v4, v5, v8);
  sub_1B5E5F620(v6, v7, v9);
  sub_1B5E5F620(v13, v12, v11);
  return a1;
}

uint64_t sub_1B5F09990(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1B612ABF0(v2);
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1B5F09A0C(v6);
  return sub_1B61B3380();
}

void sub_1B5F09A0C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = sub_1B61B36D0();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        sub_1B5F0A1E8(0, v3, 1, a1);
      }
      return;
    }
    goto LABEL_140;
  }
  uint64_t v5 = v4;
  uint64_t v6 = sub_1B61AE6A0(v3 / 2);
  v147 = v7;
  uint64_t v148 = v6;
  uint64_t v143 = v3;
  v139 = a1;
  if (v3 <= 0)
  {
    id v10 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v77 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_105:
    if (v77 < 2)
    {
LABEL_116:
      swift_bridgeObjectRelease();
      if (v143 >= -1)
      {
        *(void *)((v148 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
        sub_1B61B2510();
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_145;
    }
    uint64_t v131 = *v139;
    while (1)
    {
      unint64_t v132 = v77 - 2;
      if (v77 < 2) {
        break;
      }
      if (!v131) {
        goto LABEL_149;
      }
      uint64_t v133 = v10[2 * v132 + 4];
      uint64_t v134 = v10[2 * v77 + 3];
      sub_1B5F0A324((void **)(v131 + 8 * v133), (id *)(v131 + 8 * v10[2 * v77 + 2]), v131 + 8 * v134, v147);
      if (v1) {
        goto LABEL_102;
      }
      if (v134 < v133) {
        goto LABEL_135;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B612A478();
        id v10 = v137;
      }
      if (v132 >= v10[2]) {
        goto LABEL_136;
      }
      v135 = &v10[2 * v132 + 4];
      void *v135 = v133;
      v135[1] = v134;
      unint64_t v136 = v10[2];
      if (v77 > v136) {
        goto LABEL_137;
      }
      memmove(&v10[2 * v77 + 2], &v10[2 * v77 + 4], 16 * (v136 - v77));
      v10[2] = v136 - 1;
      unint64_t v77 = v136 - 1;
      if (v136 <= 2) {
        goto LABEL_116;
      }
    }
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
    return;
  }
  uint64_t v142 = v5;
  uint64_t v8 = 0;
  uint64_t v9 = *a1;
  uint64_t v138 = *a1 - 8;
  id v10 = (void *)MEMORY[0x1E4FBC860];
  char v11 = &selRef_axSafelyAddObjectsFromArray_;
  while (1)
  {
    uint64_t v12 = v8;
    uint64_t v13 = v8 + 1;
    uint64_t v145 = v8;
    if (v8 + 1 >= v3) {
      goto LABEL_28;
    }
    id v14 = *(void **)(v9 + 8 * v8);
    id v15 = *(id *)(v9 + 8 * v13);
    id v16 = v14;
    [v15 v11[85]];
    double v18 = v17;
    [v16 v11[85]];
    double v20 = v19;
    [v15 v11[85]];
    double v22 = v21;
    double v24 = v23;
    [v16 v11[85]];
    double v26 = v25;
    double v28 = v27;

    uint64_t v13 = v12 + 2;
    if (v18 == v20) {
      BOOL v29 = v22 <= v26;
    }
    else {
      BOOL v29 = v24 < v28;
    }
    if (v13 >= v3) {
      goto LABEL_18;
    }
    v140 = v10;
    uint64_t v30 = v145;
    while (1)
    {
      uint64_t v31 = v13;
      uint64_t v32 = v9 + 8 * v30;
      uint64_t v33 = *(void **)(v32 + 8);
      id v34 = *(id *)(v32 + 16);
      id v35 = v33;
      [v34 v11[85]];
      double v37 = v36;
      [v35 v11[85]];
      double v39 = v38;
      [v34 v11[85]];
      double v41 = v40;
      double v43 = v42;
      [v35 v11[85]];
      double v45 = v44;
      double v47 = v46;

      if (v37 == v39)
      {
        uint64_t v13 = v31;
        if (((v29 ^ (v41 > v45)) & 1) == 0) {
          goto LABEL_17;
        }
        goto LABEL_14;
      }
      uint64_t v13 = v31;
      if (v29 == v43 >= v47) {
        break;
      }
LABEL_14:
      ++v13;
      uint64_t v48 = v30 + 1;
      uint64_t v49 = v30 + 3;
      ++v30;
      if (v49 >= v3)
      {
        uint64_t v13 = v48 + 2;
        goto LABEL_17;
      }
    }
    uint64_t v13 = v30 + 2;
LABEL_17:
    id v10 = v140;
LABEL_18:
    if (!v29)
    {
      uint64_t v12 = v145;
      goto LABEL_28;
    }
    uint64_t v12 = v145;
    if (v13 < v145) {
      goto LABEL_142;
    }
    if (v145 < v13)
    {
      unint64_t v50 = (uint64_t *)(v138 + 8 * v13);
      uint64_t v51 = v13;
      uint64_t v52 = v145;
      double v53 = (uint64_t *)(v9 + 8 * v145);
      do
      {
        if (v52 != --v51)
        {
          if (!v9) {
            goto LABEL_148;
          }
          uint64_t v54 = *v53;
          *double v53 = *v50;
          *unint64_t v50 = v54;
        }
        ++v52;
        --v50;
        ++v53;
      }
      while (v52 < v51);
    }
LABEL_28:
    if (v13 >= v3) {
      goto LABEL_49;
    }
    if (__OFSUB__(v13, v12)) {
      goto LABEL_139;
    }
    if (v13 - v12 >= v142) {
      goto LABEL_49;
    }
    if (__OFADD__(v12, v142)) {
      goto LABEL_143;
    }
    if (v12 + v142 >= v3) {
      uint64_t v55 = v3;
    }
    else {
      uint64_t v55 = v12 + v142;
    }
    if (v55 < v12) {
      goto LABEL_144;
    }
    if (v13 == v55) {
      goto LABEL_49;
    }
    v141 = v10;
    uint64_t v56 = v138 + 8 * v13;
    uint64_t v144 = v55;
    while (2)
    {
      uint64_t v57 = *(void **)(v9 + 8 * v13);
      uint64_t v58 = v56;
      while (2)
      {
        uint64_t v59 = v13;
        uint64_t v60 = *(void **)v58;
        id v61 = v57;
        id v62 = v60;
        [v61 v11[85]];
        double v64 = v63;
        [v62 v11[85]];
        double v66 = v65;
        [v61 v11[85]];
        double v68 = v67;
        double v70 = v69;
        [v62 v11[85]];
        double v72 = v71;
        double v74 = v73;

        if (v64 == v66)
        {
          if (v68 > v72) {
            goto LABEL_46;
          }
LABEL_43:
          if (!v9) {
            goto LABEL_146;
          }
          uint64_t v13 = v59;
          uint64_t v75 = *(void **)v58;
          uint64_t v57 = *(void **)(v58 + 8);
          *(void *)uint64_t v58 = v57;
          *(void *)(v58 + 8) = v75;
          v58 -= 8;
          if (v59 == ++v12) {
            goto LABEL_47;
          }
          continue;
        }
        break;
      }
      if (v70 < v74) {
        goto LABEL_43;
      }
LABEL_46:
      uint64_t v13 = v59;
LABEL_47:
      ++v13;
      v56 += 8;
      uint64_t v12 = v145;
      if (v13 != v144) {
        continue;
      }
      break;
    }
    uint64_t v13 = v144;
    id v10 = v141;
LABEL_49:
    if (v13 < v12) {
      goto LABEL_138;
    }
    uint64_t v146 = v13;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B612A374();
      id v10 = v129;
    }
    unint64_t v76 = v10[2];
    unint64_t v77 = v76 + 1;
    if (v76 >= v10[3] >> 1)
    {
      sub_1B612A374();
      id v10 = v130;
    }
    v10[2] = v77;
    v78 = v10 + 4;
    unint64_t v79 = &v10[2 * v76 + 4];
    *unint64_t v79 = v12;
    v79[1] = v13;
    if (v76) {
      break;
    }
    unint64_t v77 = 1;
LABEL_97:
    uint64_t v3 = v143;
    uint64_t v8 = v146;
    if (v146 >= v143) {
      goto LABEL_105;
    }
  }
  while (1)
  {
    unint64_t v80 = v77 - 1;
    if (v77 >= 4)
    {
      id v85 = &v78[2 * v77];
      uint64_t v86 = *(v85 - 8);
      uint64_t v87 = *(v85 - 7);
      BOOL v91 = __OFSUB__(v87, v86);
      uint64_t v88 = v87 - v86;
      if (v91) {
        goto LABEL_123;
      }
      uint64_t v90 = *(v85 - 6);
      uint64_t v89 = *(v85 - 5);
      BOOL v91 = __OFSUB__(v89, v90);
      uint64_t v83 = v89 - v90;
      char v84 = v91;
      if (v91) {
        goto LABEL_124;
      }
      unint64_t v92 = v77 - 2;
      int v93 = &v78[2 * v77 - 4];
      uint64_t v95 = *v93;
      uint64_t v94 = v93[1];
      BOOL v91 = __OFSUB__(v94, v95);
      uint64_t v96 = v94 - v95;
      if (v91) {
        goto LABEL_125;
      }
      BOOL v91 = __OFADD__(v83, v96);
      uint64_t v97 = v83 + v96;
      if (v91) {
        goto LABEL_127;
      }
      if (v97 >= v88)
      {
        v115 = &v78[2 * v80];
        uint64_t v117 = *v115;
        uint64_t v116 = v115[1];
        BOOL v91 = __OFSUB__(v116, v117);
        uint64_t v118 = v116 - v117;
        if (v91) {
          goto LABEL_133;
        }
        BOOL v108 = v83 < v118;
        goto LABEL_86;
      }
    }
    else
    {
      if (v77 != 3)
      {
        uint64_t v109 = v10[4];
        uint64_t v110 = v10[5];
        BOOL v91 = __OFSUB__(v110, v109);
        uint64_t v102 = v110 - v109;
        char v103 = v91;
        goto LABEL_80;
      }
      uint64_t v82 = v10[4];
      uint64_t v81 = v10[5];
      BOOL v91 = __OFSUB__(v81, v82);
      uint64_t v83 = v81 - v82;
      char v84 = v91;
    }
    if (v84) {
      goto LABEL_126;
    }
    unint64_t v92 = v77 - 2;
    long long v98 = &v78[2 * v77 - 4];
    uint64_t v100 = *v98;
    uint64_t v99 = v98[1];
    BOOL v101 = __OFSUB__(v99, v100);
    uint64_t v102 = v99 - v100;
    char v103 = v101;
    if (v101) {
      goto LABEL_128;
    }
    uint64_t v104 = &v78[2 * v80];
    uint64_t v106 = *v104;
    uint64_t v105 = v104[1];
    BOOL v91 = __OFSUB__(v105, v106);
    uint64_t v107 = v105 - v106;
    if (v91) {
      goto LABEL_130;
    }
    if (__OFADD__(v102, v107)) {
      goto LABEL_132;
    }
    if (v102 + v107 >= v83)
    {
      BOOL v108 = v83 < v107;
LABEL_86:
      if (v108) {
        unint64_t v80 = v92;
      }
      goto LABEL_88;
    }
LABEL_80:
    if (v103) {
      goto LABEL_129;
    }
    v111 = &v78[2 * v80];
    uint64_t v113 = *v111;
    uint64_t v112 = v111[1];
    BOOL v91 = __OFSUB__(v112, v113);
    uint64_t v114 = v112 - v113;
    if (v91) {
      goto LABEL_131;
    }
    if (v114 < v102) {
      goto LABEL_97;
    }
LABEL_88:
    unint64_t v119 = v80 - 1;
    if (v80 - 1 >= v77)
    {
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
    uint64_t v120 = v9;
    if (!v9) {
      goto LABEL_147;
    }
    v121 = v10;
    v122 = &v78[2 * v119];
    uint64_t v123 = *v122;
    unint64_t v124 = v80;
    v125 = &v78[2 * v80];
    uint64_t v126 = v125[1];
    uint64_t v127 = v120;
    sub_1B5F0A324((void **)(v120 + 8 * *v122), (id *)(v120 + 8 * *v125), v120 + 8 * v126, v147);
    if (v1) {
      break;
    }
    if (v126 < v123) {
      goto LABEL_120;
    }
    if (v124 > v121[2]) {
      goto LABEL_121;
    }
    uint64_t *v122 = v123;
    v78[2 * v119 + 1] = v126;
    unint64_t v128 = v121[2];
    if (v124 >= v128) {
      goto LABEL_122;
    }
    id v10 = v121;
    unint64_t v77 = v128 - 1;
    memmove(v125, v125 + 2, 16 * (v128 - 1 - v124));
    v121[2] = v128 - 1;
    uint64_t v9 = v127;
    char v11 = &selRef_axSafelyAddObjectsFromArray_;
    if (v128 <= 2) {
      goto LABEL_97;
    }
  }
LABEL_102:
  swift_bridgeObjectRelease();
  if (v143 < -1) {
    goto LABEL_141;
  }
  *(void *)((v148 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
  sub_1B61B2510();
  swift_bridgeObjectRelease();
}

void sub_1B5F0A1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = *a4;
    uint64_t v7 = *a4 + 8 * a3 - 8;
    while (2)
    {
      uint64_t v8 = *(void **)(v6 + 8 * v4);
      uint64_t v9 = a1;
      uint64_t v10 = v7;
      do
      {
        char v11 = *(void **)v10;
        id v12 = v8;
        id v13 = v11;
        objc_msgSend(v12, sel_frame);
        double v15 = v14;
        objc_msgSend(v13, sel_frame);
        double v17 = v16;
        objc_msgSend(v12, sel_frame);
        double v19 = v18;
        double v21 = v20;
        objc_msgSend(v13, sel_frame);
        double v23 = v22;
        double v25 = v24;

        if (v15 == v17)
        {
          if (v19 > v23) {
            break;
          }
        }
        else if (v21 >= v25)
        {
          break;
        }
        if (!v6)
        {
          __break(1u);
          return;
        }
        double v26 = *(void **)v10;
        uint64_t v8 = *(void **)(v10 + 8);
        *(void *)uint64_t v10 = v8;
        *(void *)(v10 + 8) = v26;
        v10 -= 8;
        ++v9;
      }
      while (v4 != v9);
      ++v4;
      v7 += 8;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
}

uint64_t sub_1B5F0A324(void **a1, id *a2, unint64_t a3, void **a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = (char *)a2 - (char *)a1;
  uint64_t v9 = a2 - a1;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 8;
  if (v9 >= v11)
  {
    sub_1B5E1D5A0(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
    uint64_t v32 = &v4[v11];
    if (v7 >= v6 || v10 < 8)
    {
      id v12 = &v4[v11];
      goto LABEL_44;
    }
    id v34 = (id *)(a3 - 8);
    id v12 = v32;
    uint64_t v56 = v4;
    while (1)
    {
      id v35 = v34 + 1;
      unint64_t v57 = (unint64_t)v12;
      double v36 = *--v12;
      double v37 = v6 - 1;
      double v38 = *(v6 - 1);
      id v39 = v36;
      id v40 = v38;
      objc_msgSend(v39, sel_frame);
      double v42 = v41;
      objc_msgSend(v40, sel_frame);
      double v44 = v43;
      objc_msgSend(v39, sel_frame);
      double v46 = v45;
      double v48 = v47;
      objc_msgSend(v40, sel_frame);
      double v50 = v49;
      double v52 = v51;

      if (v42 == v44)
      {
        if (v46 <= v50) {
          goto LABEL_33;
        }
      }
      else if (v48 < v52)
      {
LABEL_33:
        BOOL v53 = v35 != v6 || v34 >= v6;
        --v6;
        id v12 = (void **)v57;
        goto LABEL_37;
      }
      BOOL v53 = v35 != (id *)v57 || (unint64_t)v34 >= v57;
      double v37 = v12;
LABEL_37:
      uint64_t v4 = v56;
      if (v53) {
        *id v34 = *v37;
      }
      --v34;
      if (v6 <= v7 || v12 <= v56) {
        goto LABEL_44;
      }
    }
  }
  sub_1B5E1D5A0(a1, a2 - a1, a4);
  id v12 = &v4[v9];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    do
    {
      double v14 = *v4;
      id v15 = *v6;
      id v16 = v14;
      objc_msgSend(v15, sel_frame);
      double v18 = v17;
      objc_msgSend(v16, sel_frame);
      double v20 = v19;
      objc_msgSend(v15, sel_frame);
      double v22 = v21;
      double v24 = v23;
      objc_msgSend(v16, sel_frame);
      double v26 = v25;
      double v28 = v27;

      if (v18 == v20)
      {
        if (v22 > v26) {
          goto LABEL_8;
        }
      }
      else if (v24 >= v28)
      {
LABEL_8:
        BOOL v29 = v4;
        BOOL v30 = v7 == v4++;
        if (v30) {
          goto LABEL_14;
        }
LABEL_13:
        *uint64_t v7 = *v29;
        goto LABEL_14;
      }
      BOOL v29 = v6;
      BOOL v30 = v7 == v6++;
      if (!v30) {
        goto LABEL_13;
      }
LABEL_14:
      ++v7;
    }
    while (v4 < v12 && (unint64_t)v6 < a3);
  }
  uint64_t v6 = v7;
LABEL_44:
  sub_1B5E1D5A0(v4, v12 - v4, v6);
  return 1;
}

uint64_t sub_1B5F0A5C8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_1B5E36DD0(0, a2, a3);
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(uint64_t))(v4 + 8))(a1);
  return a1;
}

BOOL static KeyCommandTraverseStartBehavior.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t KeyCommandTraverseStartBehavior.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t KeyCommandTraverseStartBehavior.hashValue.getter()
{
  return sub_1B61B3940();
}

unint64_t sub_1B5F0A6BC()
{
  unint64_t result = qword_1E9DA9F20;
  if (!qword_1E9DA9F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DA9F20);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for KeyCommandTraverseStartBehavior(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F0A7D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyCommandTraverseStartBehavior()
{
  return &type metadata for KeyCommandTraverseStartBehavior;
}

double ImageBorder.lineWidth.getter()
{
  return *(double *)v0;
}

id ImageBorder.color.getter()
{
  return *(id *)(v0 + 8);
}

BOOL static ImageBorder.BlendMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ImageBorder.BlendMode.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t ImageBorder.BlendMode.hashValue.getter()
{
  return sub_1B61B3940();
}

void ImageBorder.blendMode.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t ImageBorder.init(lineWidth:color:blendMode:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  char v4 = *a2;
  *(double *)a3 = a4;
  *(void *)(a3 + 8) = result;
  *(unsigned char *)(a3 + 16) = v4;
  return result;
}

uint64_t ImageBorder.cacheIdentifier.getter()
{
  sub_1B61B2730();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  uint64_t v0 = sub_1B61B2B10();
  if (v0) {
    uint64_t v1 = v0;
  }
  else {
    uint64_t v1 = MEMORY[0x1E4FBC860];
  }
  MEMORY[0x1BA9AF6A0](v1, MEMORY[0x1E4FBC958]);
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  sub_1B61B3440();
  return 0;
}

unint64_t sub_1B5F0A9BC()
{
  unint64_t result = qword_1E9DA9F28;
  if (!qword_1E9DA9F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DA9F28);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ImageBorder(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for ImageBorder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  id v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for ImageBorder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  id v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageBorder(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 17))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageBorder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageBorder()
{
  return &type metadata for ImageBorder;
}

unsigned char *storeEnumTagSinglePayload for ImageBorder.BlendMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F0AC38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageBorder.BlendMode()
{
  return &type metadata for ImageBorder.BlendMode;
}

uint64_t PersonalizedAdsViewControllerProvider.__allocating_init(buttonStyle:onboardingFlowDelegate:)(unsigned char *a1)
{
  swift_unknownObjectRelease();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = *a1;
  return result;
}

uint64_t PersonalizedAdsViewControllerProvider.init(buttonStyle:onboardingFlowDelegate:)(unsigned char *a1)
{
  swift_unknownObjectRelease();
  *(unsigned char *)(v1 + 16) = *a1;
  return v1;
}

id PersonalizedAdsViewControllerProvider.viewController(onboardingFlowDelegate:primaryAction:secondaryAction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v15 = *(unsigned char *)(v6 + 16);
  id v13 = objc_allocWithZone((Class)type metadata accessor for PersonalizedAdsViewController());
  swift_unknownObjectRetain();
  sub_1B5E4DC4C(a3);
  sub_1B5E4DC4C(a5);
  return sub_1B61978AC(&v15, a1, a2, a3, a4, a5, a6);
}

uint64_t PersonalizedAdsViewControllerProvider.deinit()
{
  return v0;
}

uint64_t PersonalizedAdsViewControllerProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_1B5F0ADAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return PersonalizedAdsViewControllerProvider.viewController(onboardingFlowDelegate:primaryAction:secondaryAction:)(a1, a2, a3, a4, a5, a6);
}

uint64_t type metadata accessor for PersonalizedAdsViewControllerProvider()
{
  return self;
}

uint64_t method lookup function for PersonalizedAdsViewControllerProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PersonalizedAdsViewControllerProvider);
}

uint64_t dispatch thunk of PersonalizedAdsViewControllerProvider.__allocating_init(buttonStyle:onboardingFlowDelegate:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

void BarCompressionManager.detach(from:scrollView:)(uint64_t a1, uint64_t a2, void *a3)
{
  swift_getObjectType();
  sub_1B5F0F30C(a1, a3, v3);
}

BOOL static BarCompressionState.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t BarCompressionState.State.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t BarCompressionState.State.hashValue.getter()
{
  return sub_1B61B3940();
}

void BarCompressionState.barState.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t BarCompressionState.atTop.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t BarCompressionState.isScrollViewAttached.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

BOOL static BarCompressionState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 != *a2) | ((a1[1] ^ a2[1]) | (a2[2] ^ a1[2])) & 1) == 0;
}

uint64_t sub_1B5F0AF68@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1BA9B1EC0](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1B5F0AFC4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_delegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t BarCompressionManager.delegate.getter()
{
  OUTLINED_FUNCTION_0_1();
  return MEMORY[0x1BA9B1EC0](v0);
}

uint64_t BarCompressionManager.delegate.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_12_0();
  *(void *)(v2 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*BarCompressionManager.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC5TeaUI21BarCompressionManager_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1BA9B1EC0](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1B5E638CC;
}

uint64_t BarCompressionManager.isEnabled.getter()
{
  OUTLINED_FUNCTION_0_1();
  return *v0;
}

uint64_t BarCompressionManager.isEnabled.setter(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_12_0();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*BarCompressionManager.isEnabled.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t BarCompressionManager.shouldExpandAtBottom.getter()
{
  OUTLINED_FUNCTION_0_1();
  return *v0;
}

uint64_t BarCompressionManager.shouldExpandAtBottom.setter(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_12_0();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*BarCompressionManager.shouldExpandAtBottom.modify())()
{
  return j__swift_endAccess;
}

void BarCompressionManager.state.getter(unsigned char *a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager____lazy_storage___state;
  int v4 = *(unsigned __int16 *)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager____lazy_storage___state);
  unsigned int v5 = v4 | (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager____lazy_storage___state + 2) << 16);
  if ((v4 & 0xFF00) == 0x200)
  {
    LOWORD(v5) = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_barState);
    sub_1B5F0BE30();
    LOWORD(v7) = v6 <= 0.0;
    LOBYTE(v8) = *(void *)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_scrollView) != 0;
    *(_WORD *)uint64_t v3 = v5 | ((_WORD)v7 << 8);
    *(unsigned char *)(v3 + 2) = v8;
  }
  else
  {
    int v7 = (v5 >> 8) & 1;
    int v8 = HIWORD(v5) & 1;
  }
  *a1 = v5;
  a1[1] = v7;
  a1[2] = v8;
}

void sub_1B5F0B348(unsigned char *a1@<X8>)
{
  BarCompressionManager.state.getter(v4);
  char v2 = v4[1];
  char v3 = v4[2];
  *a1 = v4[0];
  a1[1] = v2;
  a1[2] = v3;
}

unsigned __int8 *sub_1B5F0B394(unsigned __int8 *a1)
{
  unsigned __int8 v1 = a1[1];
  unsigned __int8 v2 = a1[2];
  v4[0] = *a1;
  v4[1] = v1;
  v4[2] = v2;
  return BarCompressionManager.state.setter(v4);
}

unsigned __int8 *BarCompressionManager.state.setter(unsigned __int8 *result)
{
  if (result[1]) {
    __int16 v2 = 256;
  }
  else {
    __int16 v2 = 0;
  }
  __int16 v3 = v2 | *result;
  uint64_t v4 = v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager____lazy_storage___state;
  *(unsigned char *)(v4 + 2) = result[2] != 0;
  *(_WORD *)uint64_t v4 = v3;
  return result;
}

uint64_t (*BarCompressionManager.state.modify(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  BarCompressionManager.state.getter((unsigned char *)(a1 + 8));
  return sub_1B5F0B474;
}

uint64_t sub_1B5F0B474(uint64_t result)
{
  if (*(unsigned char *)(result + 9)) {
    __int16 v1 = 256;
  }
  else {
    __int16 v1 = 0;
  }
  __int16 v2 = v1 | *(unsigned __int8 *)(result + 8);
  uint64_t v3 = *(void *)result + OBJC_IVAR____TtC5TeaUI21BarCompressionManager____lazy_storage___state;
  *(unsigned char *)(v3 + 2) = *(unsigned char *)(result + 10) != 0;
  *(_WORD *)uint64_t v3 = v2;
  return result;
}

uint64_t static BarCompressionManager.didChangeStateNotification.getter()
{
  return sub_1B61B20C0();
}

void sub_1B5F0B4D8()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_barState);
  sub_1B5F0BE30();
  double v3 = v2;
  BOOL v4 = v2 <= 0.0;
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_scrollView);
  BarCompressionManager.state.getter(&v23);
  if (v1 != v23 || ((v4 ^ v24) & 1) != 0 || (((v5 != 0) ^ v25) & 1) != 0)
  {
    BOOL v6 = v5 != 0;
    BarCompressionManager.state.getter(&v23);
    unsigned __int8 v7 = v23;
    unsigned __int8 v8 = v24;
    unsigned __int8 v9 = v25;
    uint64_t v10 = v0 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager____lazy_storage___state;
    *(unsigned char *)(v10 + 2) = v5 != 0;
    *(_WORD *)uint64_t v10 = v1 | ((v3 <= 0.0) << 8);
    uint64_t v11 = v0 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_delegate;
    swift_beginAccess();
    if (MEMORY[0x1BA9B1EC0](v11))
    {
      uint64_t v12 = *(void *)(v11 + 8);
      uint64_t ObjectType = swift_getObjectType();
      char v20 = v1;
      BOOL v21 = v3 <= 0.0;
      BOOL v22 = v6;
      v19[0] = v7;
      v19[1] = v8;
      v19[2] = v9;
      (*(void (**)(uint64_t, char *, unsigned char *, uint64_t, uint64_t))(v12 + 8))(v0, &v20, v19, ObjectType, v12);
      swift_unknownObjectRelease();
    }
    id v14 = objc_msgSend(self, sel_defaultCenter);
    char v15 = (void *)sub_1B61B20C0();
    char v20 = v1;
    BOOL v21 = v3 <= 0.0;
    BOOL v22 = v6;
    uint64_t v16 = sub_1B5F0B6D0(&v20);
    sub_1B5F0B8AC(v16);
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    sub_1B5F0F270((uint64_t)v15, 0, v18, v14);
  }
}

uint64_t sub_1B5F0B6D0(char *a1)
{
  char v2 = *a1;
  char v3 = a1[1];
  char v4 = a1[2];
  sub_1B5F0FE24();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B61BE690;
  *(void *)(inited + 32) = 0x6574617473;
  *(void *)(inited + 40) = 0xE500000000000000;
  *(void *)(inited + 72) = &type metadata for BarCompressionState;
  *(unsigned char *)(inited + 48) = v2;
  *(unsigned char *)(inited + 49) = v3;
  *(unsigned char *)(inited + 50) = v4;
  uint64_t v16 = sub_1B61B1F50();
  if (!*(void *)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_tabBarAnimation)
    || (sub_1B5F0FFA4(),
        sub_1B5E001A8(0, &qword_1EB64BB38),
        swift_unknownObjectRetain(),
        (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v12 = 0;
    long long v10 = 0u;
    long long v11 = 0u;
    goto LABEL_6;
  }
  if (!*((void *)&v11 + 1))
  {
LABEL_6:
    sub_1B5F0FEDC((uint64_t)&v10);
    uint64_t v14 = MEMORY[0x1E4FBB390];
    LOBYTE(v13[0]) = 0;
    sub_1B5E1E4B4();
    return v16;
  }
  sub_1B5E30E70(&v10, (uint64_t)v13);
  uint64_t v6 = v14;
  uint64_t v7 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  *((void *)&v11 + 1) = MEMORY[0x1E4FBB390];
  LOBYTE(v10) = v8 & 1;
  sub_1B5E1E4B4();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return v16;
}

void sub_1B5F0B8AC(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1B5F0FDC4();
    uint64_t v2 = sub_1B61B3560();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v32 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  sub_1B61B1F70();
  swift_retain();
  int64_t v7 = 0;
  if (!v5) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v8 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v9 = v8 | (v7 << 6);
  while (1)
  {
    uint64_t v18 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v9);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    sub_1B5E17688(*(void *)(a1 + 56) + 32 * v9, (uint64_t)v44);
    *(void *)&long long v43 = v20;
    *((void *)&v43 + 1) = v19;
    v41[2] = v43;
    v42[0] = v44[0];
    v42[1] = v44[1];
    *(void *)&v41[0] = v20;
    *((void *)&v41[0] + 1) = v19;
    sub_1B61B1F70();
    swift_dynamicCast();
    sub_1B5E30E88(v42, v36);
    long long v37 = v33;
    long long v38 = v34;
    uint64_t v39 = v35;
    sub_1B5E30E88(v36, v40);
    long long v33 = v37;
    long long v34 = v38;
    uint64_t v35 = v39;
    sub_1B5E30E88(v40, v41);
    sub_1B5E30E88(v41, &v37);
    uint64_t v21 = sub_1B61B3200();
    uint64_t v22 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v6 + 8 * (v23 >> 6))) == 0)
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      while (++v24 != v27 || (v26 & 1) == 0)
      {
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v6 + 8 * v24);
        if (v29 != -1)
        {
          unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
          goto LABEL_38;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v6 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_38:
    *(void *)(v6 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    uint64_t v30 = *(void *)(v2 + 48) + 40 * v25;
    *(_OWORD *)uint64_t v30 = v33;
    *(_OWORD *)(v30 + 16) = v34;
    *(void *)(v30 + 32) = v35;
    sub_1B5E30E88(&v37, (_OWORD *)(*(void *)(v2 + 56) + 32 * v25));
    ++*(void *)(v2 + 16);
    if (v5) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_42;
    }
    if (v10 >= v31) {
      goto LABEL_40;
    }
    unint64_t v11 = *(void *)(v32 + 8 * v10);
    int64_t v12 = v7 + 1;
    if (!v11)
    {
      OUTLINED_FUNCTION_11_18();
      if (v13 == v14) {
        goto LABEL_40;
      }
      OUTLINED_FUNCTION_17_18();
      if (!v11)
      {
        OUTLINED_FUNCTION_11_18();
        if (v13 == v14) {
          goto LABEL_40;
        }
        OUTLINED_FUNCTION_17_18();
        if (!v11)
        {
          OUTLINED_FUNCTION_11_18();
          if (v13 == v14) {
            goto LABEL_40;
          }
          OUTLINED_FUNCTION_17_18();
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_28:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    int64_t v7 = v12;
  }
  int64_t v16 = v15 + 4;
  if (v16 >= v31)
  {
LABEL_40:
    swift_release();
    sub_1B5E405D4();
    return;
  }
  unint64_t v11 = *(void *)(v32 + 8 * v16);
  if (v11)
  {
    int64_t v12 = v16;
    goto LABEL_28;
  }
  while (!__OFADD__(v16, 1))
  {
    OUTLINED_FUNCTION_11_18();
    if (v13 == v14) {
      goto LABEL_40;
    }
    OUTLINED_FUNCTION_17_18();
    int64_t v16 = v17 + 1;
    if (v11) {
      goto LABEL_28;
    }
  }
LABEL_43:
  __break(1u);
}

void sub_1B5F0BC4C(void *a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_scrollView);
  *(void *)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_scrollView) = a1;
  id v3 = a1;

  sub_1B5F0B4D8();
}

BOOL sub_1B5F0BCA4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_scrollView);
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v2, sel_contentSize);
    double v4 = v3;
    objc_msgSend(v2, sel_frame);
    double Height = CGRectGetHeight(v9);

    BOOL v6 = Height < v4;
  }
  else
  {
    BOOL v6 = 0;
  }
  BOOL v7 = !*(void *)(v0 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_navigationBarAnimation)
    && !*(void *)(v0 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_tabBarAnimation)
    && *(void *)(v0 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_toolbarAnimation) == 0;
  if (UIAccessibilityIsVoiceOverRunning() || UIAccessibilityIsSwitchControlRunning() || v7) {
    return 0;
  }
  return v6;
}

BOOL sub_1B5F0BD78()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_scrollView);
  if (!v1) {
    return 0;
  }
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_navigationBarAnimation);
  if (!v2) {
    return 0;
  }
  id v3 = v1;
  if ((objc_msgSend(v2, sel_shouldCompressAtTop) & 1) == 0)
  {

    return 0;
  }
  sub_1B5F0BE30();
  if (v4 > 0.0)
  {
    objc_msgSend(v3, sel_contentSize);
    double v6 = v5;
    double v8 = v7;

    if (v6 == 0.0) {
      return v8 == 0.0;
    }
    return 0;
  }

  return 1;
}

void sub_1B5F0BE30()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_scrollView);
  if (v1)
  {
    id v2 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_navigationBarAnimation);
    id v3 = v1;
    if (v2) {
      objc_msgSend(v2, sel_topOffset);
    }
    objc_msgSend(v1, sel_contentOffset);
    objc_msgSend(v1, sel_contentInset);
  }
}

BOOL sub_1B5F0BEDC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_scrollView);
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v2, sel_contentOffset);
    if (v3 < *(double *)(v0 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_initialContentOffset + 8))
    {
      double v4 = *(double *)(v0 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_lastContentOffset + 8);
      objc_msgSend(v2, sel_contentOffset);
      if (v5 < v4)
      {
        objc_msgSend(v2, sel_contentOffset);
        double v7 = v6;
        objc_msgSend(v2, sel_contentInset);
        double v9 = v8;

        return v7 < -v9;
      }
    }
  }
  return 0;
}

uint64_t sub_1B5F0BFA8()
{
  swift_retain();
  sub_1B61B0CB0();
  swift_release();
  return v1;
}

uint64_t sub_1B5F0BFF4()
{
  return swift_release();
}

char *BarCompressionManager.__allocating_init(sceneStateManager:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return BarCompressionManager.init(sceneStateManager:)(a1);
}

char *BarCompressionManager.init(sceneStateManager:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_isEnabled] = 1;
  v1[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_shouldExpandAtBottom] = 1;
  double v4 = &v1[OBJC_IVAR____TtC5TeaUI21BarCompressionManager____lazy_storage___state];
  v4[2] = 0;
  *(_WORD *)double v4 = 512;
  *(void *)&v1[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_scrollView] = 0;
  double v5 = &v1[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_proxyMultiDelegate];
  _OWORD *v5 = 0u;
  v5[1] = 0u;
  uint64_t v6 = OBJC_IVAR____TtC5TeaUI21BarCompressionManager_barAnimator;
  id v7 = objc_allocWithZone((Class)TUDynamicBarAnimator);
  double v8 = v1;
  *(void *)&v1[v6] = objc_msgSend(v7, sel_init);
  *(void *)&v8[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_navigationBarAnimation] = 0;
  *(void *)&v8[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_tabBarAnimation] = 0;
  *(void *)&v8[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_toolbarAnimation] = 0;
  v8[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_barState] = 2;
  *(void *)&v8[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_observingToken] = 0;
  double v9 = &v8[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_lastContentOffset];
  *double v9 = 0;
  v9[1] = 0;
  int64_t v10 = &v8[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_initialContentOffset];
  *int64_t v10 = 0;
  v10[1] = 0;
  *(void *)&v8[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_scrollDebounce] = 0;
  uint64_t v11 = OBJC_IVAR____TtC5TeaUI21BarCompressionManager__lastBarCompressEvent;
  v18[0] = 2;
  sub_1B5F0F368();
  swift_allocObject();
  *(void *)&v8[v11] = sub_1B61B0C90();
  sub_1B5E176E4((uint64_t)a1, (uint64_t)&v8[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_sceneStateManager]);

  v19.receiver = v8;
  v19.super_class = ObjectType;
  int64_t v12 = (char *)objc_msgSendSuper2(&v19, sel_init);
  char v13 = *(void **)&v12[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_barAnimator];
  char v14 = v12;
  objc_msgSend(v13, sel_setDelegate_, v14);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5F0F3E4();
  uint64_t v15 = v14;
  sub_1B61B08E0();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  id v16 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v16, sel_addObserver_selector_name_object_, v15, sel_voiceOverStatusDidChange, *MEMORY[0x1E4FB25D0], 0);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v15;
}

void BarCompressionManager.attach(to:)(void *a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  v14[0] = a1;
  uint64_t v6 = *(void *)(a2 + 16);
  id v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(ObjectType, v6);
  sub_1B61B0430();
  swift_release();
  if (a1)
  {
    sub_1B5F0C47C(v14[0]);
  }
  else
  {
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FBA8A8]), sel_init);
    v14[0] = 0;
    v7(ObjectType, v6);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1B61B0440();
    swift_release();
    swift_release();
    __swift_project_boxed_opaque_existential_1(v14, (uint64_t)v14[3]);
    id v9 = v8;
    sub_1B61B00C0();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    *(void *)(v2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_observingToken) = v9;
    swift_unknownObjectRelease();
  }
  int64_t v10 = (void *)OUTLINED_FUNCTION_12_23();
  sub_1B5F0F5F0(v10, v11, v12, v13);
}

void sub_1B5F0C47C(void *a1)
{
  objc_msgSend(a1, sel_setScrollsToTop_, 1);
  id v2 = a1;
  sub_1B5F0BC4C(a1);
  sub_1B5F0CB80(v2);
}

void sub_1B5F0C4D8(void **a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1BA9B1EC0](v3);
  if (v4)
  {
    double v5 = (void *)v4;
    if (v2)
    {
      id v6 = v2;
      sub_1B5F0C47C(v6);

      double v5 = v6;
    }
  }
}

void BarCompressionManager.detach(from:)(void *a1, uint64_t a2)
{
  swift_getObjectType();
  (*(void (**)(void))(*(void *)(a2 + 16) + 8))();
  sub_1B61B0430();
  swift_release();
  if (a1)
  {
    sub_1B5F0C5FC(a1);
  }
  *(void *)(v2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_observingToken) = 0;
  swift_unknownObjectRelease();
  uint64_t v5 = OUTLINED_FUNCTION_12_23();
  sub_1B5F0F48C(v5, v6);
}

id sub_1B5F0C5FC(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  objc_msgSend(a1, sel_setScrollsToTop_, 1);
  sub_1B5F0BC4C(0);
  if (OUTLINED_FUNCTION_10_24())
  {
    self;
    uint64_t v4 = (void *)swift_dynamicCastObjCClass();
    if (v4)
    {
LABEL_3:
      objc_msgSend(v4, sel_removeDelegate_, v1);
      goto LABEL_17;
    }
    swift_unknownObjectRelease();
  }
  id v5 = OUTLINED_FUNCTION_10_24();
  if (v5)
  {
    uint64_t v6 = (uint64_t)v5;
    swift_getObjectType();
    if (dynamic_cast_existential_1_conditional(v6))
    {
      uint64_t v8 = v7;
      uint64_t v9 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(v1, ObjectType, v9, v8);
      goto LABEL_17;
    }
    swift_unknownObjectRelease();
  }
  if (OUTLINED_FUNCTION_10_24())
  {
    type metadata accessor for MultiScrollViewDelegate();
    if (swift_dynamicCastClass())
    {
      int64_t v10 = &OBJC_IVAR____TtC5TeaUI23MultiScrollViewDelegate_delegates;
      uint64_t v11 = &OBJC_IVAR____TtC5TeaUI23MultiScrollViewDelegate_respondsToSelectorCache;
LABEL_16:
      sub_1B5F0D190(v1, v10, v11);
      goto LABEL_17;
    }
    swift_unknownObjectRelease();
  }
  if (OUTLINED_FUNCTION_10_24())
  {
    type metadata accessor for MultiCollectionViewDelegate();
    if (swift_dynamicCastClass())
    {
      int64_t v10 = &OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_delegates;
      uint64_t v11 = &OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_respondsToSelectorCache;
      goto LABEL_16;
    }
    swift_unknownObjectRelease();
  }
  id result = OUTLINED_FUNCTION_10_24();
  if (!result) {
    return result;
  }
  self;
  uint64_t v4 = (void *)swift_dynamicCastObjCClass();
  if (v4) {
    goto LABEL_3;
  }
LABEL_17:
  return (id)swift_unknownObjectRelease();
}

void BarCompressionManager.attach(to:scrollView:)(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1B5F0C47C(a3);
  swift_getObjectType();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_16_0();
  sub_1B5F0F5F0(v3, v4, v5, v6);
}

Swift::Void __swiftcall BarCompressionManager.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  Class isa = a1.value.super.isa;
  uint64_t v3 = OBJC_IVAR____TtC5TeaUI21BarCompressionManager_navigationBarAnimation;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_navigationBarAnimation);
  if (v4) {
    objc_msgSend(v4, sel_reloadWithTraitCollection_, isa);
  }
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_tabBarAnimation);
  if (v5) {
    objc_msgSend(v5, sel_reloadWithTraitCollection_, isa);
  }
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_toolbarAnimation);
  if (v6) {
    objc_msgSend(v6, sel_reloadWithTraitCollection_, isa);
  }
  uint64_t v7 = *(void **)(v1 + v3);
  double v8 = 0.0;
  if (v7)
  {
    objc_msgSend(v7, sel_maximumBarHeightForTraitCollection_, isa);
    double v10 = v9;
    uint64_t v11 = *(void **)(v1 + v3);
    if (v11)
    {
      objc_msgSend(v11, sel_minimumBarHeightForTraitCollection_, isa);
      double v8 = v12;
    }
  }
  else
  {
    double v10 = 0.0;
  }
  char v13 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_barAnimator);
  objc_msgSend(v13, sel_setTopBarHeight_forState_, 1, v10);
  objc_msgSend(v13, sel_setTopBarHeight_forState_, 0, v8);
  v14.value.super.Class isa = 0;
  BarCompressionManager.resetBars(animated:traitCollection:)(0, v14);
}

Swift::Void __swiftcall BarCompressionManager.resetBars(animated:traitCollection:)(Swift::Bool animated, UITraitCollection_optional traitCollection)
{
  Class isa = traitCollection.value.super.isa;
  uint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_navigationBarAnimation);
  if (v5) {
    objc_msgSend(v5, sel_prepareForUpdates, *(void *)&traitCollection.is_nil);
  }
  uint64_t v6 = OBJC_IVAR____TtC5TeaUI21BarCompressionManager_tabBarAnimation;
  uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_tabBarAnimation);
  if (v7) {
    objc_msgSend(v7, sel_prepareForUpdates, *(void *)&traitCollection.is_nil);
  }
  double v8 = *(void **)(v2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_toolbarAnimation);
  if (v8) {
    objc_msgSend(v8, sel_prepareForUpdates, *(void *)&traitCollection.is_nil);
  }
  BOOL v9 = sub_1B5F0BD78();
  sub_1B5F0CA44(v9, animated);
  if (isa)
  {
    double v10 = *(void **)(v2 + v6);
    if (v10) {
      objc_msgSend(v10, sel_reloadWithTraitCollection_, isa);
    }
  }
  sub_1B5F0BFF4();
}

uint64_t sub_1B5F0CA44(char a1, char a2)
{
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_barState))
  {
    uint64_t v5 = (void *)swift_unknownObjectRetain();
    char v6 = a1 & 1;
    char v7 = a2 & 1;
    sub_1B5F0D284(v5, v6, v7);
    swift_unknownObjectRelease();
    double v8 = (void *)swift_unknownObjectRetain();
    sub_1B5F0D284(v8, v6, v7);
    swift_unknownObjectRelease();
    BOOL v9 = (void *)swift_unknownObjectRetain();
    sub_1B5F0D284(v9, v6, v7);
    return swift_unknownObjectRelease();
  }
  else
  {
    return sub_1B5F0BFF4();
  }
}

uint64_t BarCompressionManager.attachAnimations(to:)()
{
  swift_getObjectType();
  uint64_t v0 = OUTLINED_FUNCTION_16_0();
  return sub_1B5F0F654(v0, v1, v2, v3);
}

void sub_1B5F0CB80(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  if (objc_msgSend(a1, sel_delegate))
  {
    self;
    uint64_t v5 = (void *)swift_dynamicCastObjCClass();
    if (v5)
    {
LABEL_3:
      char v6 = v5;
      objc_msgSend(v5, sel_addDelegate_, v2);
      uint64_t v33 = sub_1B5DFF760(0, &qword_1EB63FE28);
      v32[0] = v6;
LABEL_17:
      uint64_t v18 = v2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_proxyMultiDelegate;
      swift_beginAccess();
      sub_1B5F0FFFC((uint64_t)v32, v18);
LABEL_18:
      swift_endAccess();
      return;
    }
    swift_unknownObjectRelease();
  }
  id v7 = objc_msgSend(a1, sel_delegate);
  if (v7)
  {
    uint64_t v8 = (uint64_t)v7;
    swift_getObjectType();
    uint64_t v9 = dynamic_cast_existential_1_conditional(v8);
    if (v9)
    {
      uint64_t v11 = v9;
      uint64_t v12 = v10;
      uint64_t v13 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(v2, ObjectType, v13, v12);
      uint64_t v33 = v13;
      v32[0] = v11;
      goto LABEL_17;
    }
    swift_unknownObjectRelease();
  }
  if (objc_msgSend(a1, sel_delegate))
  {
    uint64_t v14 = type metadata accessor for MultiScrollViewDelegate();
    uint64_t v15 = swift_dynamicCastClass();
    if (v15)
    {
      uint64_t v16 = v15;
      sub_1B602AA4C(v2);
LABEL_16:
      uint64_t v33 = v14;
      v32[0] = v16;
      goto LABEL_17;
    }
    swift_unknownObjectRelease();
  }
  if (objc_msgSend(a1, sel_delegate))
  {
    uint64_t v14 = type metadata accessor for MultiCollectionViewDelegate();
    uint64_t v17 = swift_dynamicCastClass();
    if (v17)
    {
      uint64_t v16 = v17;
      sub_1B602AAEC(v2);
      goto LABEL_16;
    }
    swift_unknownObjectRelease();
  }
  if (objc_msgSend(a1, sel_delegate))
  {
    self;
    uint64_t v5 = (void *)swift_dynamicCastObjCClass();
    if (v5) {
      goto LABEL_3;
    }
    swift_unknownObjectRelease();
  }
  uint64_t v19 = v2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_proxyMultiDelegate;
  swift_beginAccess();
  sub_1B5E5F644(v19, (uint64_t)v32);
  uint64_t v20 = v33;
  sub_1B5E15B34((uint64_t)v32);
  if (!v20)
  {
    sub_1B5F0D52C(a1, (uint64_t)v32);
    swift_beginAccess();
    sub_1B5F0FFFC((uint64_t)v32, v19);
    goto LABEL_18;
  }
  self;
  uint64_t v21 = swift_dynamicCastObjCClass();
  if (v21)
  {
    uint64_t v22 = (void *)v21;
    sub_1B5E5F644(v19, (uint64_t)v32);
    if (v33)
    {
      type metadata accessor for MultiCollectionViewDelegate();
      id v23 = a1;
      if (swift_dynamicCast())
      {
        unint64_t v24 = v30;
        sub_1B602AAEC(v2);
        objc_msgSend(v22, sel_setDelegate_, v30);

LABEL_45:
        return;
      }
    }
    else
    {
      sub_1B5E15B34((uint64_t)v32);
    }
  }
  self;
  uint64_t v25 = swift_dynamicCastObjCClass();
  if (v25)
  {
    char v26 = (void *)v25;
    sub_1B5E5F644(v19, (uint64_t)v32);
    if (v33)
    {
      sub_1B5DFF760(0, &qword_1EB63FE28);
      id v27 = a1;
      if (swift_dynamicCast())
      {
        BOOL v28 = v30;
        objc_msgSend(v30, sel_addDelegate_, v2);
        objc_msgSend(v26, sel_setDelegate_, objc_msgSend(v30, sel_delegate));

LABEL_50:
        goto LABEL_51;
      }
    }
    else
    {
      sub_1B5E15B34((uint64_t)v32);
    }
  }
  sub_1B5E5F644(v19, (uint64_t)v32);
  if (v33)
  {
    sub_1B5E001A8(0, &qword_1E9DAA020);
    if (swift_dynamicCast())
    {
      uint64_t v29 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 8))(v2, ObjectType, v29);
      objc_msgSend(a1, sel_setDelegate_, v30);
LABEL_51:
      swift_unknownObjectRelease();
      return;
    }
  }
  else
  {
    sub_1B5E15B34((uint64_t)v32);
  }
  sub_1B5E5F644(v19, (uint64_t)v32);
  if (v33)
  {
    type metadata accessor for MultiScrollViewDelegate();
    if (swift_dynamicCast())
    {
      unint64_t v24 = v30;
      sub_1B602AA4C(v2);
      objc_msgSend(a1, sel_setDelegate_, v30);
      goto LABEL_45;
    }
  }
  else
  {
    sub_1B5E15B34((uint64_t)v32);
  }
  sub_1B5E5F644(v19, (uint64_t)v32);
  if (!v33)
  {
    sub_1B5E15B34((uint64_t)v32);
    return;
  }
  sub_1B5DFF760(0, &qword_1EB63FE28);
  if (swift_dynamicCast())
  {
    BOOL v28 = v30;
    objc_msgSend(v30, sel_addDelegate_, v2);
    objc_msgSend(a1, sel_setDelegate_, objc_msgSend(v30, sel_delegate));
    goto LABEL_50;
  }
}

uint64_t sub_1B5F0D190(uint64_t a1, void *a2, void *a3)
{
  objc_msgSend(*(id *)(v3 + *a2), sel_removeObject_, a1);
  uint64_t v5 = (void *)(v3 + *a3);
  swift_beginAccess();
  void *v5 = MEMORY[0x1E4FBC868];
  return swift_bridgeObjectRelease();
}

void sub_1B5F0D200()
{
  if (UIAccessibilityIsVoiceOverRunning())
  {
    v0.value.super.Class isa = 0;
    BarCompressionManager.resetBars(animated:traitCollection:)(0, v0);
  }
}

id sub_1B5F0D284(void *a1, char a2, char a3)
{
  BOOL v7 = (a2 & 1) == 0;
  uint64_t v8 = *(void **)(v3 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_barAnimator);
  if (objc_msgSend(v8, sel_state) != (id)v7)
  {
    uint64_t v10 = sel_attemptTransitionToState_animated_;
    uint64_t v11 = a3 & 1;
    uint64_t v12 = v8;
    BOOL v13 = v7;
    return objc_msgSend(v12, v10, v13, v11);
  }
  id result = objc_msgSend(v8, sel_state);
  if (a2)
  {
    if (!result)
    {
      if (!a1) {
        return result;
      }
      objc_msgSend(a1, sel_updateWithPercentage_, 1.0);
      goto LABEL_13;
    }
LABEL_12:
    if (a1)
    {
LABEL_13:
      sub_1B5F0BE30();
      BOOL v15 = v14 <= 0.0;
      sub_1B5F0BE30();
      uint64_t v10 = sel_scrollViewIsAtTop_offset_;
      uint64_t v12 = a1;
      BOOL v13 = v15;
      return objc_msgSend(v12, v10, v13, v11);
    }
    return result;
  }
  if (result != (id)1) {
    goto LABEL_12;
  }
  if (a1)
  {
    objc_msgSend(a1, sel_updateWithPercentage_, 0.0);
    goto LABEL_13;
  }
  return result;
}

void sub_1B5F0D3C4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_scrollView);
  if (v1)
  {
    id v16 = v1;
    id v2 = objc_msgSend(v16, sel_window);
    uint64_t v3 = v2;
    if (v2)
    {
      objc_msgSend(v2, sel_safeAreaInsets);
      double v5 = v4;
    }
    else
    {
      double v5 = 0.0;
    }
    objc_msgSend(v16, sel_contentOffset);
    double v7 = v6;
    uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_barAnimator);
    id v9 = objc_msgSend(v8, sel_targetState);
    if (v7 < -v5)
    {
      id v10 = v9;
      if ((objc_msgSend(v16, sel_isDragging) & 1) == 0 && !v10)
      {
        objc_msgSend(v16, sel_contentInset);
        double v12 = v11;
        objc_msgSend(v8, sel_topBarHeight);
        double v14 = v13;
        objc_msgSend(v8, sel_maximumTopBarHeight);
        objc_msgSend(v16, sel_setContentOffset_animated_, 1, 0.0, -(v12 - vabdd_f64(v14, v15)));
      }
    }
  }
}

double sub_1B5F0D52C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  self;
  uint64_t v7 = swift_dynamicCastObjCClass();
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    id v9 = a1;
    if (objc_msgSend(v8, sel_delegate))
    {
      id v10 = (objc_class *)type metadata accessor for MultiCollectionViewDelegate();
      uint64_t v11 = swift_dynamicCastClass();
      if (v11)
      {
        uint64_t v12 = v11;
        id v13 = objc_msgSend(objc_allocWithZone(v10), sel_init);
        sub_1B602AAEC(v12);
        sub_1B602AAEC(v3);
        objc_msgSend(v8, sel_setDelegate_, v13);
        *(void *)(a2 + 24) = v10;
LABEL_10:
        swift_unknownObjectRelease();

LABEL_11:
        *(void *)a2 = v13;
        return result;
      }
      swift_unknownObjectRelease();
    }
  }
  self;
  uint64_t v14 = swift_dynamicCastObjCClass();
  if (v14)
  {
    double v15 = (void *)v14;
    id v9 = a1;
    id v16 = objc_msgSend(v15, sel_delegate);
    if (v16)
    {
      id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FAB268]), sel_initWithDelegate_delegateProtocol_, v16, &unk_1F0F75E68);
      objc_msgSend(v13, sel_addDelegate_, v3);
      objc_msgSend(v15, sel_setDelegate_, objc_msgSend(v13, sel_delegate));
      swift_unknownObjectRelease();
      *(void *)(a2 + 24) = sub_1B5DFF760(0, &qword_1EB63FE28);
      goto LABEL_10;
    }
  }
  id v18 = objc_msgSend(a1, sel_delegate);
  if (v18)
  {
    uint64_t v19 = (uint64_t)v18;
    swift_getObjectType();
    uint64_t v20 = dynamic_cast_existential_1_conditional(v19);
    if (v20)
    {
      uint64_t v22 = v20;
      uint64_t v23 = v21;
      uint64_t v24 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8))(v3, ObjectType, v24, v23);
      *(void *)(a2 + 24) = v24;
      *(void *)a2 = v22;
      return result;
    }
    swift_unknownObjectRelease();
  }
  if (objc_msgSend(a1, sel_delegate))
  {
    uint64_t v25 = type metadata accessor for MultiScrollViewDelegate();
    uint64_t v26 = swift_dynamicCastClass();
    if (v26)
    {
      uint64_t v27 = v26;
      sub_1B602AA4C(v3);
      *(void *)(a2 + 24) = v25;
      *(void *)a2 = v27;
      return result;
    }
    swift_unknownObjectRelease();
  }
  if (objc_msgSend(a1, sel_delegate))
  {
    uint64_t v28 = swift_dynamicCastObjCProtocolConditional();
    if (v28)
    {
      uint64_t v29 = v28;
      swift_getObjectType();
      sub_1B5DFF760(0, (unint64_t *)&qword_1EB647CC0);
      uint64_t v30 = dynamic_cast_existential_0_superclass_conditional(v29);
      if (v30)
      {
        uint64_t v31 = v30;
        uint64_t v32 = (objc_class *)type metadata accessor for MultiScrollViewDelegate();
        id v13 = objc_msgSend(objc_allocWithZone(v32), sel_init);
        sub_1B602AA24(v31);
        sub_1B602AA4C(v3);
        objc_msgSend(a1, sel_setDelegate_, v13);
        *(void *)(a2 + 24) = v32;
        swift_unknownObjectRelease();
        goto LABEL_11;
      }
    }
    swift_unknownObjectRelease();
  }
  id v33 = objc_msgSend(a1, sel_delegate);
  swift_unknownObjectRelease();
  if (!v33)
  {
    long long v34 = (objc_class *)type metadata accessor for MultiScrollViewDelegate();
    id v13 = objc_msgSend(objc_allocWithZone(v34), sel_init);
    sub_1B602AA4C(v3);
    objc_msgSend(a1, sel_setDelegate_, v13);
    *(void *)(a2 + 24) = v34;
    goto LABEL_11;
  }
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

id BarCompressionManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void BarCompressionManager.init()()
{
}

id BarCompressionManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall BarCompressionManager.scrollViewWillBeginDragging(_:)(UIScrollView *a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_isEnabled);
  OUTLINED_FUNCTION_24();
  if (*v3 == 1)
  {
    [(UIScrollView *)a1 contentOffset];
    sub_1B5F0DB38(v4, v5);
  }
}

id sub_1B5F0DB38(double a1, double a2)
{
  id result = (id)sub_1B5F0BCA4();
  if (result)
  {
    double v6 = (double *)(v2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_initialContentOffset);
    *double v6 = a1;
    v6[1] = a2;
    uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_barAnimator);
    return objc_msgSend(v7, sel_beginScrollingWithOffset_, a2);
  }
  return result;
}

Swift::Void __swiftcall BarCompressionManager.scrollViewDidScroll(_:)(UIScrollView *a1)
{
  uint64_t v2 = v1;
  double v4 = &v1[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_isEnabled];
  OUTLINED_FUNCTION_24();
  if (*v4 == 1)
  {
    [(UIScrollView *)a1 contentSize];
    if (v5 != 0.0 || (OUTLINED_FUNCTION_6_30(), v6 > 0.0))
    {
      sub_1B5F0BE30();
      double v8 = v7;
      uint64_t v9 = OBJC_IVAR____TtC5TeaUI21BarCompressionManager_navigationBarAnimation;
      if (*(void *)&v2[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_navigationBarAnimation])
      {
        OUTLINED_FUNCTION_5_27();
        sub_1B5F0BE30();
        OUTLINED_FUNCTION_4_37();
        swift_unknownObjectRelease();
      }
      if (*(void *)&v2[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_tabBarAnimation])
      {
        OUTLINED_FUNCTION_5_27();
        sub_1B5F0BE30();
        OUTLINED_FUNCTION_4_37();
        swift_unknownObjectRelease();
      }
      if (*(void *)&v2[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_toolbarAnimation])
      {
        OUTLINED_FUNCTION_5_27();
        sub_1B5F0BE30();
        OUTLINED_FUNCTION_4_37();
        swift_unknownObjectRelease();
      }
      uint64_t v10 = OBJC_IVAR____TtC5TeaUI21BarCompressionManager_barState;
      int v11 = v2[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_barState];
      BarCompressionManager.state.getter(&v42);
      if (v11 != v42 || (((v8 <= 0.0) ^ v43) & 1) != 0 || !v44)
      {
        uint64_t v39 = v9;
        BarCompressionManager.state.getter(&v42);
        unsigned __int8 v12 = v42;
        unsigned __int8 v13 = v43;
        char v14 = v44;
        double v15 = &v2[OBJC_IVAR____TtC5TeaUI21BarCompressionManager____lazy_storage___state];
        v15[2] = 1;
        *(_WORD *)double v15 = v11 | ((v8 <= 0.0) << 8);
        id v16 = &v2[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_delegate];
        OUTLINED_FUNCTION_24();
        if (MEMORY[0x1BA9B1EC0](v16))
        {
          uint64_t v17 = *((void *)v16 + 1);
          swift_getObjectType();
          OUTLINED_FUNCTION_14_18();
          v41[0] = v12;
          v41[1] = v13;
          v41[2] = v14;
          (*(void (**)(unsigned char *, char *, unsigned char *))(v17 + 8))(v2, v40, v41);
          swift_unknownObjectRelease();
        }
        id v18 = objc_msgSend(self, sel_defaultCenter);
        uint64_t v19 = (void *)OUTLINED_FUNCTION_3_45();
        OUTLINED_FUNCTION_14_18();
        uint64_t v20 = sub_1B5F0B6D0(v40);
        sub_1B5F0B8AC(v20);
        uint64_t v22 = v21;
        swift_bridgeObjectRelease();
        sub_1B5F0F270((uint64_t)v19, 0, v22, v18);

        uint64_t v9 = v39;
      }
      if ((uint64_t v23 = *(void **)&v2[v9]) != 0 && (objc_msgSend(v23, sel_shouldCompressAtTop) & 1) != 0
        || v2[v10] != 2
        || !sub_1B5F0BEDC())
      {
        if (UIScrollView.didReachBottom.getter())
        {
          uint64_t v24 = &v2[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_shouldExpandAtBottom];
          OUTLINED_FUNCTION_24();
          if (*v24 == 1)
          {
            if (v2[v10])
            {
              char v25 = objc_msgSend(self, sel_areAnimationsEnabled);
              char v26 = 0;
LABEL_26:
              sub_1B5F0CA44(v26, v25);
              return;
            }
          }
        }
        if (sub_1B5F0BD78())
        {
          char v25 = objc_msgSend(self, sel_areAnimationsEnabled);
          char v26 = 1;
          goto LABEL_26;
        }
        if (![(UIScrollView *)a1 isDragging])
        {
          OUTLINED_FUNCTION_6_30();
          if (v27 > 0.0 && !UIScrollView.didReachBottom.getter())
          {
            uint64_t v28 = OBJC_IVAR____TtC5TeaUI21BarCompressionManager_scrollDebounce;
            if (*(void *)&v2[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_scrollDebounce]) {
              goto LABEL_32;
            }
            OUTLINED_FUNCTION_6_30();
            sub_1B5F0DB38(v29, v30);
            uint64_t v31 = swift_allocObject();
            *(void *)(v31 + 16) = v2;
            sub_1B5F0FCFC(0, (unint64_t *)&qword_1EB642440, MEMORY[0x1E4FBC848] + 8, (uint64_t (*)(void, uint64_t))type metadata accessor for Debounce);
            uint64_t v32 = (void *)swift_allocObject();
            v32[4] = v31;
            v32[5] = 0;
            v32[2] = 0x3FE0000000000000;
            void v32[3] = sub_1B5F0F890;
            *(void *)&v2[v28] = v32;
            id v33 = v2;
            swift_release();
            if (*(void *)&v2[v28])
            {
LABEL_32:
              swift_retain();
              sub_1B5F0E17C((uint64_t)nullsub_1, 0);
              swift_release();
            }
          }
        }
        if ([(UIScrollView *)a1 isDragging]
          || *(void *)&v2[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_scrollDebounce])
        {
          if (sub_1B5F0BCA4())
          {
            long long v34 = *(void **)&v2[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_barAnimator];
            OUTLINED_FUNCTION_6_30();
            objc_msgSend(v34, sel_updateScrollingWithOffset_, v35);
          }
          OUTLINED_FUNCTION_6_30();
          double v36 = &v2[OBJC_IVAR____TtC5TeaUI21BarCompressionManager_lastContentOffset];
          *double v36 = v37;
          v36[1] = v38;
        }
      }
    }
  }
}

uint64_t sub_1B5F0E0CC(uint64_t a1)
{
  sub_1B5F0E114(1.0);
  *(void *)(a1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_scrollDebounce) = 0;
  return swift_release();
}

id sub_1B5F0E114(double a1)
{
  id result = (id)sub_1B5F0BD78();
  if ((result & 1) == 0)
  {
    id result = (id)sub_1B5F0BCA4();
    if (result)
    {
      double v4 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_barAnimator);
      return objc_msgSend(v4, sel_endScrollingWithTargetOffset_velocity_, 0.0, a1);
    }
  }
  return result;
}

void sub_1B5F0E17C(uint64_t a1, uint64_t a2)
{
  double v5 = *(void **)(v2 + 40);
  if (v5) {
    objc_msgSend(v5, sel_invalidate);
  }
  double v6 = self;
  double v7 = *(double *)(v2 + 16);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a1;
  v9[4] = a2;
  v13[4] = sub_1B5F0FDB8;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  v13[2] = sub_1B5EE7210;
  void v13[3] = &block_descriptor_23;
  uint64_t v10 = _Block_copy(v13);
  swift_retain();
  swift_release();
  id v11 = objc_msgSend(v6, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v10, v7);
  _Block_release(v10);
  unsigned __int8 v12 = *(void **)(v2 + 40);
  *(void *)(v2 + 40) = v11;
}

id BarCompressionManager.scrollViewWillEndDragging(_:withVelocity:targetContentOffset:)(double a1, double a2)
{
  id result = (id)OUTLINED_FUNCTION_0_1();
  if (*v2 == 1) {
    return sub_1B5F0E114(a2 * 1000.0);
  }
  return result;
}

Swift::Void __swiftcall BarCompressionManager.scrollViewDidScrollToTop(_:)(UIScrollView *a1)
{
  OUTLINED_FUNCTION_0_1();
  if (*v1 == 1)
  {
    v2.value.super.Class isa = 0;
    BarCompressionManager.resetBars(animated:traitCollection:)(1, v2);
  }
}

Swift::Bool __swiftcall BarCompressionManager.scrollViewShouldScrollToTop(_:)(UIScrollView *a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_isEnabled);
  OUTLINED_FUNCTION_24();
  if (*v3 != 1) {
    return 0;
  }
  double v4 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_navigationBarAnimation);
  if ((!v4
     || (objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_navigationBarAnimation), sel_respondsToSelector_, sel_shouldAlwaysScrollToTopOnTap) & 1) == 0|| (objc_msgSend(v4, sel_shouldAlwaysScrollToTopOnTap) & 1) == 0)&& *(unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_barState) == 1)
  {
    [(UIScrollView *)a1 setScrollsToTop:0];
    v6.value.super.Class isa = 0;
    BarCompressionManager.resetBars(animated:traitCollection:)(1, v6);
    return 0;
  }
  return 1;
}

Swift::Void __swiftcall BarCompressionManager.dynamicBarAnimatorOutputsDidChange(_:)(TUDynamicBarAnimator *a1)
{
  UITraitCollection_optional v2 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_scrollView);
  if (v2)
  {
    id v19 = v2;
    objc_msgSend(v19, sel_contentSize);
    if (v4 != 0.0 || (objc_msgSend(v19, sel_contentOffset), v5 > 0.0))
    {
      [(TUDynamicBarAnimator *)a1 topBarHeight];
      double v7 = v6;
      [(TUDynamicBarAnimator *)a1 minimumTopBarHeight];
      double v9 = v7 - v8;
      [(TUDynamicBarAnimator *)a1 maximumTopBarHeight];
      double v11 = v10;
      [(TUDynamicBarAnimator *)a1 minimumTopBarHeight];
      double v13 = 1.0;
      double v14 = 1.0 - v9 / (v11 - v12);
      if ((~*(void *)&v14 & 0x7FF0000000000000) != 0 || (*(void *)&v14 & 0xFFFFFFFFFFFFFLL) == 0)
      {
        if (v14 <= 1.0) {
          double v13 = v14;
        }
        if (v14 >= 0.0) {
          double v15 = v13;
        }
        else {
          double v15 = 0.0;
        }
        if (*(TUDynamicBarAnimator **)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_barAnimator) == a1)
        {
          uint64_t v16 = OBJC_IVAR____TtC5TeaUI21BarCompressionManager_navigationBarAnimation;
          if (*(void *)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_navigationBarAnimation))
          {
            if (objc_msgSend((id)swift_unknownObjectRetain(), sel_shouldCloseGapOnScroll)) {
              sub_1B5F0D3C4();
            }
            swift_unknownObjectRelease();
            uint64_t v17 = *(void **)(v1 + v16);
            if (v17) {
              objc_msgSend(v17, sel_updateWithPercentage_, v15);
            }
          }
          id v18 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_tabBarAnimation);
          if (v18) {
            objc_msgSend(v18, sel_updateWithPercentage_, v15, v13);
          }
          if (*(void *)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_toolbarAnimation))
          {
            objc_msgSend((id)swift_unknownObjectRetain(), sel_updateWithPercentage_, v15);
            swift_unknownObjectRelease();
          }
        }
      }
    }
  }
}

id BarCompressionManager.dynamicBarAnimator(_:canHideBarsByDraggingWithOffset:)(void *a1)
{
  UITraitCollection_optional v2 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_scrollView);
  if (!v2) {
    return 0;
  }
  double v4 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_navigationBarAnimation);
  if (!v4)
  {
    double v7 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_tabBarAnimation);
    if (v7)
    {
      id v8 = v2;
      swift_unknownObjectRetain();
      id v6 = objc_msgSend(v7, sel_animationShouldBeginForScrollView_currentlyFullyCompressed_, v8, objc_msgSend(a1, sel_state) == 0);
      swift_unknownObjectRelease();

      return v6;
    }
    return 0;
  }
  id v5 = v2;
  swift_unknownObjectRetain();
  id v6 = objc_msgSend(v4, sel_animationShouldBeginForScrollView_currentlyFullyCompressed_, v5, objc_msgSend(a1, sel_state) == 0);

  swift_unknownObjectRelease();
  return v6;
}

Swift::Void __swiftcall BarCompressionManager.dynamicBarAnimatorWillEnterSteadyState(_:)(TUDynamicBarAnimator *a1)
{
  int64_t v2 = [(TUDynamicBarAnimator *)a1 state];
  if (v2)
  {
    if (v2 != 1)
    {
      sub_1B61B34D0();
      __break(1u);
      return;
    }
    char v3 = 2;
  }
  else
  {
    char v3 = 1;
  }
  uint64_t v4 = OBJC_IVAR____TtC5TeaUI21BarCompressionManager_barState;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_barState) = v3;
  __int16 v5 = sub_1B5F0BFA8();
  if (v5 == 2) {
    goto LABEL_9;
  }
  __int16 v6 = v5;
  uint64_t v7 = 1;
  if ((v5 & 1) == 0) {
    uint64_t v7 = 2;
  }
  if (v7 == *(unsigned __int8 *)(v1 + v4))
  {
LABEL_9:
    uint64_t v8 = OBJC_IVAR____TtC5TeaUI21BarCompressionManager_scrollView;
    double v9 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_scrollView);
    if (v9) {
      objc_msgSend(v9, sel_setScrollsToTop_, 1);
    }
    int v10 = *(unsigned __int8 *)(v1 + v4);
    sub_1B5F0BE30();
    double v12 = v11;
    BOOL v13 = v11 <= 0.0;
    uint64_t v14 = *(void *)(v1 + v8);
    BarCompressionManager.state.getter(v26);
    if (v10 != v26[0] || ((v13 ^ v26[1]) & 1) != 0 || (((v14 != 0) ^ v26[2]) & 1) != 0)
    {
      BOOL v15 = v14 != 0;
      BarCompressionManager.state.getter(v26);
      uint64_t v16 = v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager____lazy_storage___state;
      *(unsigned char *)(v16 + 2) = v14 != 0;
      *(_WORD *)uint64_t v16 = v10 | ((v12 <= 0.0) << 8);
      uint64_t v17 = v1 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_delegate;
      OUTLINED_FUNCTION_24();
      if (MEMORY[0x1BA9B1EC0](v17))
      {
        swift_getObjectType();
        char v23 = v10;
        BOOL v24 = v12 <= 0.0;
        BOOL v25 = v15;
        uint64_t v18 = OUTLINED_FUNCTION_13_17();
        v19(v18);
        swift_unknownObjectRelease();
      }
      id v20 = objc_msgSend(self, sel_defaultCenter);
      uint64_t v21 = (void *)OUTLINED_FUNCTION_3_45();
      char v23 = v10;
      BOOL v24 = v12 <= 0.0;
      BOOL v25 = v15;
      uint64_t v22 = sub_1B5F0B6D0(&v23);
      sub_1B5F0B8AC(v22);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_15_16();
    }
  }
  else
  {
    sub_1B5F0BFF4();
    sub_1B5F0CA44(v6 & 1, HIBYTE(v6) & 1);
  }
}

Swift::Void __swiftcall BarCompressionManager.dynamicBarAnimatorWillLeaveSteadyState(_:)(TUDynamicBarAnimator *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC5TeaUI21BarCompressionManager_barState;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_barState) = 0;
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_navigationBarAnimation);
  if (v4) {
    objc_msgSend(v4, sel_prepareForUpdates);
  }
  __int16 v5 = *(void **)(v2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_tabBarAnimation);
  if (v5) {
    objc_msgSend(v5, sel_prepareForUpdates);
  }
  __int16 v6 = *(void **)(v2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_toolbarAnimation);
  if (v6) {
    objc_msgSend(v6, sel_prepareForUpdates);
  }
  int v7 = *(unsigned __int8 *)(v2 + v3);
  sub_1B5F0BE30();
  double v9 = v8;
  BOOL v10 = v8 <= 0.0;
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_scrollView);
  BarCompressionManager.state.getter(v23);
  if (v7 != v23[0] || ((v10 ^ v23[1]) & 1) != 0 || (((v11 != 0) ^ v23[2]) & 1) != 0)
  {
    BOOL v12 = v11 != 0;
    BarCompressionManager.state.getter(v23);
    uint64_t v13 = v2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager____lazy_storage___state;
    *(unsigned char *)(v13 + 2) = v11 != 0;
    *(_WORD *)uint64_t v13 = v7 | ((v9 <= 0.0) << 8);
    uint64_t v14 = v2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_delegate;
    OUTLINED_FUNCTION_24();
    if (MEMORY[0x1BA9B1EC0](v14))
    {
      swift_getObjectType();
      char v20 = v7;
      BOOL v21 = v9 <= 0.0;
      BOOL v22 = v12;
      uint64_t v15 = OUTLINED_FUNCTION_13_17();
      v16(v15);
      swift_unknownObjectRelease();
    }
    id v17 = objc_msgSend(self, sel_defaultCenter);
    uint64_t v18 = (void *)OUTLINED_FUNCTION_3_45();
    char v20 = v7;
    BOOL v21 = v9 <= 0.0;
    BOOL v22 = v12;
    uint64_t v19 = sub_1B5F0B6D0(&v20);
    sub_1B5F0B8AC(v19);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_15_16();
  }
}

uint64_t sub_1B5F0EF18()
{
  swift_getObjectType();
  return sub_1B61B06E0();
}

uint64_t sub_1B5F0EF54()
{
  swift_getObjectType();
  return sub_1B61B06F0();
}

uint64_t sub_1B5F0EFD4()
{
  swift_getObjectType();
  return sub_1B61B06E0();
}

uint64_t sub_1B5F0F010()
{
  swift_getObjectType();
  return sub_1B61B0710();
}

uint64_t sub_1B5F0F068()
{
  swift_getObjectType();
  return sub_1B61B06E0();
}

uint64_t sub_1B5F0F0A4()
{
  swift_getObjectType();
  return sub_1B61B06E0();
}

uint64_t sub_1B5F0F0E0()
{
  swift_getObjectType();
  return sub_1B61B0710();
}

uint64_t sub_1B5F0F138()
{
  swift_getObjectType();
  return sub_1B61B0760();
}

uint64_t sub_1B5F0F188()
{
  swift_getObjectType();
  return sub_1B61B06E0();
}

uint64_t sub_1B5F0F1C4(uint64_t a1, uint64_t a2, double a3)
{
  *(void *)(v3 + 32) = a2;
  *(void *)(v3 + 40) = 0;
  *(double *)(v3 + 16) = a3;
  *(void *)(v3 + 24) = a1;
  return v3;
}

uint64_t sub_1B5F0F1D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    __int16 v5 = *(void (**)(uint64_t))(Strong + 24);
    swift_retain();
    uint64_t v6 = swift_release();
    v5(v6);
    uint64_t Strong = swift_release();
  }
  return a3(Strong);
}

void sub_1B5F0F270(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = (id)sub_1B61B1F00();
  swift_bridgeObjectRelease();
  objc_msgSend(a4, sel_postNotificationName_object_userInfo_, a1, a2, v7);
}

void sub_1B5F0F30C(uint64_t a1, void *a2, uint64_t a3)
{
  sub_1B5F0C5FC(a2);
  sub_1B5F0F48C(a1, a3);
}

void sub_1B5F0F368()
{
  if (!qword_1EB641F30)
  {
    sub_1B5F0FCFC(255, &qword_1EB642198, (uint64_t)&type metadata for BarCompressionManager.BarCompressEvent, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1B61B0CD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB641F30);
    }
  }
}

unint64_t sub_1B5F0F3E4()
{
  unint64_t result = qword_1EB6440C0;
  if (!qword_1EB6440C0)
  {
    type metadata accessor for BarCompressionManager();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6440C0);
  }
  return result;
}

uint64_t type metadata accessor for BarCompressionManager()
{
  return self;
}

uint64_t sub_1B5F0F454()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_2();
  return swift_deallocObject();
}

void sub_1B5F0F484(void **a1)
{
  sub_1B5F0C4D8(a1, v1);
}

void sub_1B5F0F48C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OBJC_IVAR____TtC5TeaUI21BarCompressionManager_navigationBarAnimation;
  uint64_t v4 = *(void **)(a2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_navigationBarAnimation);
  if (v4 && (OUTLINED_FUNCTION_9_21() & 1) != 0) {
    objc_msgSend(v4, sel_detached);
  }
  uint64_t v5 = OBJC_IVAR____TtC5TeaUI21BarCompressionManager_tabBarAnimation;
  uint64_t v6 = *(void **)(a2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_tabBarAnimation);
  if (v6 && (OUTLINED_FUNCTION_9_21() & 1) != 0) {
    objc_msgSend(v6, sel_detached);
  }
  uint64_t v7 = OBJC_IVAR____TtC5TeaUI21BarCompressionManager_toolbarAnimation;
  double v8 = *(void **)(a2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_toolbarAnimation);
  if (v8 && (OUTLINED_FUNCTION_9_21() & 1) != 0) {
    objc_msgSend(v8, sel_detached);
  }
  *(void *)(a2 + v3) = 0;
  swift_unknownObjectRelease();
  *(void *)(a2 + v5) = 0;
  swift_unknownObjectRelease();
  *(void *)(a2 + v7) = 0;
  swift_unknownObjectRelease();
  __swift_project_boxed_opaque_existential_1((void *)(a2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_sceneStateManager), *(void *)(a2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_sceneStateManager + 24));
  sub_1B5F0F3E4();
  sub_1B61B08F0();
  id v9 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v9, sel_removeObserver_name_object_, a2, *MEMORY[0x1E4FB25D0], 0);
}

void sub_1B5F0F5F0(void *a1, uint64_t a2, uint64_t a3, uint64_t (**a4)(void, void))
{
  sub_1B5F0F654((uint64_t)a1, a2, a3, a4);
  v7.value.super.Class isa = (Class)objc_msgSend(a1, sel_traitCollection);
  Class isa = v7.value.super.isa;
  BarCompressionManager.traitCollectionDidChange(_:)(v7);
}

uint64_t sub_1B5F0F654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (**a4)(void, void))
{
  uint64_t v7 = OBJC_IVAR____TtC5TeaUI21BarCompressionManager_navigationBarAnimation;
  double v8 = *(void **)(a2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_navigationBarAnimation);
  if (v8 && (objc_msgSend(v8, sel_respondsToSelector_, sel_detached) & 1) != 0) {
    objc_msgSend(v8, sel_detached);
  }
  uint64_t v9 = OBJC_IVAR____TtC5TeaUI21BarCompressionManager_tabBarAnimation;
  BOOL v10 = *(void **)(a2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_tabBarAnimation);
  if (v10
    && (objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_tabBarAnimation), sel_respondsToSelector_, sel_detached) & 1) != 0)
  {
    objc_msgSend(v10, sel_detached);
  }
  uint64_t v11 = OBJC_IVAR____TtC5TeaUI21BarCompressionManager_toolbarAnimation;
  BOOL v12 = *(void **)(a2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_toolbarAnimation);
  if (v12
    && (objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC5TeaUI21BarCompressionManager_toolbarAnimation), sel_respondsToSelector_, sel_detached) & 1) != 0)
  {
    objc_msgSend(v12, sel_detached);
  }
  *(void *)(a2 + v7) = a4[2](a3, a4);
  swift_unknownObjectRelease();
  *(void *)(a2 + v9) = a4[3](a3, a4);
  swift_unknownObjectRelease();
  *(void *)(a2 + v11) = a4[4](a3, a4);
  uint64_t result = swift_unknownObjectRelease();
  uint64_t v14 = *(void **)(a2 + v7);
  if (v14)
  {
    uint64_t result = (uint64_t)objc_msgSend(*(id *)(a2 + v7), sel_respondsToSelector_, sel_attached);
    if (result) {
      uint64_t result = (uint64_t)objc_msgSend(v14, sel_attached);
    }
  }
  uint64_t v15 = *(void **)(a2 + v9);
  if (v15)
  {
    uint64_t result = (uint64_t)objc_msgSend(*(id *)(a2 + v9), sel_respondsToSelector_, sel_attached);
    if (result) {
      uint64_t result = (uint64_t)objc_msgSend(v15, sel_attached);
    }
  }
  uint64_t v16 = *(void **)(a2 + v11);
  if (v16)
  {
    uint64_t result = (uint64_t)objc_msgSend(v16, sel_respondsToSelector_, sel_attached);
    if (result)
    {
      return (uint64_t)objc_msgSend(v16, sel_attached);
    }
  }
  return result;
}

uint64_t sub_1B5F0F860()
{
  OUTLINED_FUNCTION_2();
  return swift_deallocObject();
}

uint64_t sub_1B5F0F890()
{
  return sub_1B5F0E0CC(*(void *)(v0 + 16));
}

unint64_t sub_1B5F0F89C()
{
  unint64_t result = qword_1E9DA9FB8;
  if (!qword_1E9DA9FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DA9FB8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BarCompressionState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v3 = -1;
    return (v3 + 1);
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      int v2 = a1[3];
      if (a1[3]) {
        goto LABEL_5;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)(a1 + 3);
      if (*(_WORD *)(a1 + 3))
      {
LABEL_5:
        int v3 = (*(unsigned __int16 *)a1 | (a1[2] << 16) | (v2 << 24)) - 16776962;
        return (v3 + 1);
      }
    }
  }
  unsigned int v4 = a1[1];
  BOOL v5 = v4 >= 2;
  int v3 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5) {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for BarCompressionState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554177) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFE) {
    int v3 = 0;
  }
  if (a2 > 0xFE)
  {
    *(_WORD *)unint64_t result = a2 - 255;
    *(unsigned char *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)(result + 1) = a2 + 1;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BarCompressionState()
{
  return &type metadata for BarCompressionState;
}

unsigned char *storeEnumTagSinglePayload for BarCompressionState.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F0FAD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BarCompressionState.State()
{
  return &type metadata for BarCompressionState.State;
}

uint64_t dispatch thunk of BarCompressionDelegate.barCompressionManager(_:barCompressionStateDidChange:fromState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t method lookup function for BarCompressionManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BarCompressionManager);
}

uint64_t dispatch thunk of BarCompressionManager.__allocating_init(sceneStateManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for BarCompressionManager.BarCompressEvent(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 65281 <= 0xFFFEFFFF) {
      int v2 = 2;
    }
    else {
      int v2 = 4;
    }
    if (a2 + 65281 < 0xFF0000) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((unsigned char *)a1 + 2)) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 16)) - 65282;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for BarCompressionManager.BarCompressEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F0FCC4);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BarCompressionManager.BarCompressEvent()
{
  return &type metadata for BarCompressionManager.BarCompressEvent;
}

void sub_1B5F0FCFC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B5F0FD48()
{
  swift_weakDestroy();
  OUTLINED_FUNCTION_2();
  return swift_deallocObject();
}

uint64_t sub_1B5F0FD78()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5F0FDB8(uint64_t a1)
{
  return sub_1B5F0F1D8(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

void sub_1B5F0FDC4()
{
  if (!qword_1EB647D08)
  {
    unint64_t v0 = sub_1B61B3570();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB647D08);
    }
  }
}

void sub_1B5F0FE24()
{
  if (!qword_1EB6499D0)
  {
    sub_1B5F0FE7C();
    unint64_t v0 = sub_1B61B36F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB6499D0);
    }
  }
}

void sub_1B5F0FE7C()
{
  if (!qword_1EB649948)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB649948);
    }
  }
}

uint64_t sub_1B5F0FEDC(uint64_t a1)
{
  sub_1B5F0FF38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B5F0FF38()
{
  if (!qword_1EB64BB50)
  {
    sub_1B5E001A8(255, &qword_1EB64BB38);
    unint64_t v0 = sub_1B61B2F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB64BB50);
    }
  }
}

unint64_t sub_1B5F0FFA4()
{
  unint64_t result = qword_1EB641D80[0];
  if (!qword_1EB641D80[0])
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, qword_1EB641D80);
  }
  return result;
}

uint64_t sub_1B5F0FFFC(uint64_t a1, uint64_t a2)
{
  sub_1B5F0FCFC(0, (unint64_t *)&qword_1EB64CAC0, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t dynamic_cast_existential_0_superclass_conditional(uint64_t a1)
{
  if (swift_dynamicCastMetatype()) {
    return a1;
  }
  else {
    return 0;
  }
}

uint64_t PageViewSession.identifier.getter()
{
  uint64_t v1 = *v0;
  sub_1B61B1F70();
  return v1;
}

double PageViewSession.durationThreshold.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t PageViewSession.createdDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PageViewSession() + 24);
  sub_1B61AFA70();
  OUTLINED_FUNCTION_6_0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  return v6(a1, v3, v4);
}

uint64_t type metadata accessor for PageViewSession()
{
  uint64_t result = qword_1EB641F60;
  if (!qword_1EB641F60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PageViewSession.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PageViewSession() + 28);
  return sub_1B5F101F0(v3, a1);
}

uint64_t sub_1B5F101F0(uint64_t a1, uint64_t a2)
{
  sub_1B5F10254();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1B5F10254()
{
  if (!qword_1EB6424B8)
  {
    sub_1B61AFA70();
    unint64_t v0 = sub_1B61B2F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB6424B8);
    }
  }
}

uint64_t PageViewSession.trigger.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for PageViewSession();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

double PageViewSession.duration.getter()
{
  sub_1B5F10254();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1B61AFA70();
  OUTLINED_FUNCTION_0_10();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_6_4();
  uint64_t v9 = type metadata accessor for PageViewSession();
  sub_1B5F101F0(v0 + *(int *)(v9 + 28), (uint64_t)v4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    sub_1B5F10850((uint64_t)v4, (void (*)(void))sub_1B5F10254);
    sub_1B61AFA30();
    return fabs(v10);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v1, v4, v5);
    sub_1B61AF9D0();
    double v11 = v12;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v5);
  }
  return v11;
}

BOOL static PageViewSession.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1B61AFA70();
  OUTLINED_FUNCTION_0_10();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  double v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1B5F107EC();
  uint64_t v12 = v11;
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_6_4();
  sub_1B5F10254();
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  id v17 = &v29[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  char v20 = &v29[-v19];
  MEMORY[0x1F4188790](v18);
  BOOL v22 = &v29[-v21];
  BOOL v23 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v23 || (v24 = sub_1B61B3760(), BOOL result = 0, (v24 & 1) != 0))
  {
    if (*(double *)(a1 + 16) == *(double *)(a2 + 16))
    {
      uint64_t v31 = v7;
      uint64_t v26 = type metadata accessor for PageViewSession();
      if (sub_1B61AFA50())
      {
        sub_1B5F101F0(a1 + *(int *)(v26 + 28), (uint64_t)v22);
        sub_1B5F101F0(a2 + *(int *)(v26 + 28), (uint64_t)v20);
        uint64_t v27 = v2 + *(int *)(v12 + 48);
        sub_1B5F101F0((uint64_t)v22, v2);
        sub_1B5F101F0((uint64_t)v20, v27);
        OUTLINED_FUNCTION_4_38(v2);
        if (v23)
        {
          sub_1B5F10850((uint64_t)v20, (void (*)(void))sub_1B5F10254);
          sub_1B5F10850((uint64_t)v22, (void (*)(void))sub_1B5F10254);
          OUTLINED_FUNCTION_4_38(v27);
          if (v23)
          {
            sub_1B5F10850(v2, (void (*)(void))sub_1B5F10254);
            return *(unsigned __int8 *)(a1 + *(int *)(v26 + 32)) == *(unsigned __int8 *)(a2 + *(int *)(v26 + 32));
          }
        }
        else
        {
          sub_1B5F101F0(v2, (uint64_t)v17);
          OUTLINED_FUNCTION_4_38(v27);
          if (!v28)
          {
            (*(void (**)(unsigned char *, uint64_t, uint64_t))(v31 + 32))(v10, v27, v5);
            sub_1B5F108BC();
            int v30 = sub_1B61B20B0();
            uint64_t v31 = *(void *)(v31 + 8);
            ((void (*)(unsigned char *, uint64_t))v31)(v10, v5);
            sub_1B5F10850((uint64_t)v20, (void (*)(void))sub_1B5F10254);
            sub_1B5F10850((uint64_t)v22, (void (*)(void))sub_1B5F10254);
            ((void (*)(unsigned char *, uint64_t))v31)(v17, v5);
            sub_1B5F10850(v2, (void (*)(void))sub_1B5F10254);
            if (v30) {
              return *(unsigned __int8 *)(a1 + *(int *)(v26 + 32)) == *(unsigned __int8 *)(a2 + *(int *)(v26 + 32));
            }
            return 0;
          }
          sub_1B5F10850((uint64_t)v20, (void (*)(void))sub_1B5F10254);
          sub_1B5F10850((uint64_t)v22, (void (*)(void))sub_1B5F10254);
          (*(void (**)(unsigned char *, uint64_t))(v31 + 8))(v17, v5);
        }
        sub_1B5F10850(v2, (void (*)(void))sub_1B5F107EC);
      }
    }
    return 0;
  }
  return result;
}

void sub_1B5F107EC()
{
  if (!qword_1E9DAA028)
  {
    sub_1B5F10254();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DAA028);
    }
  }
}

uint64_t sub_1B5F10850(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_6_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

BOOL static PageViewSessionTrigger.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_1B5F108BC()
{
  unint64_t result = qword_1E9DAA030;
  if (!qword_1E9DAA030)
  {
    sub_1B61AFA70();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA030);
  }
  return result;
}

uint64_t PageViewSessionTrigger.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t PageViewSessionTrigger.hashValue.getter()
{
  return sub_1B61B3940();
}

unint64_t sub_1B5F10994()
{
  unint64_t result = qword_1E9DAA038;
  if (!qword_1E9DAA038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA038);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for PageViewSession(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    double v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1B61AFA70();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    sub_1B61B1F70();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v13, 1, v11))
    {
      sub_1B5F10254();
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v11);
    }
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  }
  return v4;
}

uint64_t destroy for PageViewSession(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1B61AFA70();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v8(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t result = __swift_getEnumTagSinglePayload(v6, 1, v5);
  if (!result)
  {
    return v8(v6, v5);
  }
  return result;
}

void *initializeWithCopy for PageViewSession(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B61AFA70();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  sub_1B61B1F70();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v12, 1, v10))
  {
    sub_1B5F10254();
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v10);
  }
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *assignWithCopy for PageViewSession(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B61AFA70();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1 + v12, 1, v9);
  int v16 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (!v16)
    {
      v11(v13, v14, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1B5F10254();
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v9);
LABEL_7:
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for PageViewSession(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1B61AFA70();
  uint64_t v10 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  if (__swift_getEnumTagSinglePayload(a2 + v11, 1, v9))
  {
    sub_1B5F10254();
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v9);
  }
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

void *assignWithTake for PageViewSession(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B61AFA70();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1 + v13, 1, v10);
  int v17 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v10);
  if (!EnumTagSinglePayload)
  {
    if (!v17)
    {
      v12(v14, v15, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_1B5F10254();
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v15, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v10);
LABEL_7:
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for PageViewSession(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B5F111F8);
}

uint64_t sub_1B5F111F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1B61AFA70();
    OUTLINED_FUNCTION_2_4();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 24);
    }
    else
    {
      sub_1B5F10254();
      uint64_t v10 = v12;
      uint64_t v11 = *(int *)(a3 + 28);
    }
    return __swift_getEnumTagSinglePayload(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PageViewSession(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B5F112B8);
}

uint64_t sub_1B5F112B8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1B61AFA70();
    OUTLINED_FUNCTION_2_4();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 24);
    }
    else
    {
      sub_1B5F10254();
      uint64_t v10 = v12;
      uint64_t v11 = *(int *)(a4 + 28);
    }
    return __swift_storeEnumTagSinglePayload(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1B5F11360()
{
  sub_1B61AFA70();
  if (v0 <= 0x3F)
  {
    sub_1B5F10254();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for PageViewSessionTrigger(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F11514);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PageViewSessionTrigger()
{
  return &type metadata for PageViewSessionTrigger;
}

Swift::Void __swiftcall EditingHeaderFooterTableView.setEditing(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  int v3 = v2;
  v19.receiver = v3;
  v19.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v19, sel_setEditing_animated_, _, animated);
  unint64_t v6 = (unint64_t)objc_msgSend(v3, sel_numberOfSections);
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6;
    if (v6)
    {
      uint64_t v8 = 0;
      BOOL v9 = _;
      while (1)
      {
        id v10 = objc_msgSend(v3, sel_headerViewForSection_, v8, v13, (void)v14);
        if (!v10) {
          break;
        }
        v16[0] = v10;
        sub_1B5F117C4();
        sub_1B5F1176C();
        if ((swift_dynamicCast() & 1) == 0) {
          break;
        }
        if (!*((void *)&v14 + 1)) {
          goto LABEL_9;
        }
        sub_1B5E30E70(&v13, (uint64_t)v16);
        uint64_t v11 = v17;
        uint64_t v12 = v18;
        __swift_project_boxed_opaque_existential_1(v16, v17);
        (*(void (**)(BOOL, Swift::Bool, uint64_t, uint64_t))(v12 + 8))(v9, animated, v11, v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
LABEL_10:
        if (v7 == ++v8) {
          return;
        }
      }
      uint64_t v15 = 0;
      long long v13 = 0u;
      long long v14 = 0u;
LABEL_9:
      sub_1B5F116B8((uint64_t)&v13);
      goto LABEL_10;
    }
  }
}

uint64_t sub_1B5F116B8(uint64_t a1)
{
  sub_1B5F11714();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B5F11714()
{
  if (!qword_1EB63F400)
  {
    sub_1B5F1176C();
    unint64_t v0 = sub_1B61B2F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB63F400);
    }
  }
}

unint64_t sub_1B5F1176C()
{
  unint64_t result = qword_1EB63F3F8;
  if (!qword_1EB63F3F8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB63F3F8);
  }
  return result;
}

unint64_t sub_1B5F117C4()
{
  unint64_t result = qword_1E9DAA040;
  if (!qword_1E9DAA040)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9DAA040);
  }
  return result;
}

id EditingHeaderFooterTableView.__allocating_init(frame:style:)()
{
  id v5 = objc_allocWithZone((Class)OUTLINED_FUNCTION_0_56());
  return objc_msgSend(v5, sel_initWithFrame_style_, v0, v4, v3, v2, v1);
}

id EditingHeaderFooterTableView.init(frame:style:)()
{
  OUTLINED_FUNCTION_0_56();
  v7.receiver = v1;
  v7.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v7, sel_initWithFrame_style_, v0, v5, v4, v3, v2);
}

id EditingHeaderFooterTableView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id EditingHeaderFooterTableView.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id EditingHeaderFooterTableView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for EditingHeaderFooterTableView()
{
  return self;
}

uint64_t BlueprintViewAction.attributes.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_9_22();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_3_46();
  sub_1B5F138CC(v1, v0, (void (*)(void))type metadata accessor for BlueprintViewAction);
  swift_bridgeObjectRelease();
  sub_1B5EFFBD0();
  OUTLINED_FUNCTION_17_19();
  sub_1B5F155D4(v3, (void (*)(void))type metadata accessor for BlueprintViewAction.Action);
  return v0;
}

uint64_t type metadata accessor for BlueprintViewAction(uint64_t a1)
{
  return sub_1B5E30ED8(a1, qword_1EB63ED40);
}

uint64_t type metadata accessor for BlueprintViewAction.Action(uint64_t a1)
{
  return sub_1B5E30ED8(a1, qword_1EB63EC98);
}

BOOL BlueprintViewAction.style.getter()
{
  type metadata accessor for BlueprintViewAction(0);
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_7_0();
  sub_1B5F138CC(v0, v1, (void (*)(void))type metadata accessor for BlueprintViewAction);
  BOOL v3 = swift_getEnumCaseMultiPayload() != 1;
  swift_bridgeObjectRelease();
  sub_1B5EFFBD0();
  OUTLINED_FUNCTION_18_16();
  sub_1B5F155D4(v0, (void (*)(void))type metadata accessor for BlueprintViewAction.Action);
  return v3;
}

uint64_t BlueprintViewAction.title.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_9_22();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_3_46();
  sub_1B5F138CC(v1, (uint64_t)v0, (void (*)(void))type metadata accessor for BlueprintViewAction);
  uint64_t v3 = *v0;
  sub_1B5EFFBD0();
  uint64_t v5 = (uint64_t)v0 + *(int *)(v4 + 48);
  swift_bridgeObjectRelease();
  sub_1B5F155D4(v5, (void (*)(void))type metadata accessor for BlueprintViewAction.Action);
  return v3;
}

uint64_t BlueprintViewAction.action.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = OUTLINED_FUNCTION_9_22();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_7_0();
  sub_1B5F138CC(v1, v2, (void (*)(void))type metadata accessor for BlueprintViewAction);
  swift_bridgeObjectRelease();
  sub_1B5EFFBD0();
  OUTLINED_FUNCTION_18_16();
  return sub_1B5F13808(v1, a1, (void (*)(void))type metadata accessor for BlueprintViewAction.Action);
}

uint64_t BlueprintViewActionRequest.__allocating_init(item:action:source:sourceView:completion:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  BlueprintViewActionRequest.init(item:action:source:sourceView:completion:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t BlueprintViewActionable.leadingViewActions.getter()
{
  return 0;
}

BOOL BlueprintViewActionable.isEditable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))() != 0;
}

void BlueprintViewActionable.editingStyle.getter()
{
  OUTLINED_FUNCTION_83();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for BlueprintViewAction.Action(0);
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_81();
  uint64_t v8 = v6 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v39 - v10;
  uint64_t v12 = type metadata accessor for BlueprintViewAction(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  OUTLINED_FUNCTION_81();
  uint64_t v40 = v14 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  objc_super v19 = (char *)v39 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)v39 - v20;
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v3, v1);
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v43 = *(void *)(v22 + 16);
    if (v43)
    {
      unint64_t v24 = 0;
      uint64_t v25 = *(unsigned __int8 *)(v13 + 80);
      uint64_t v41 = v22;
      uint64_t v42 = v22 + ((v25 + 32) & ~v25);
      do
      {
        if (v24 >= *(void *)(v23 + 16))
        {
          __break(1u);
          JUMPOUT(0x1B5F12224);
        }
        sub_1B5F138CC(v42 + *(void *)(v13 + 72) * v24, (uint64_t)v21, (void (*)(void))type metadata accessor for BlueprintViewAction);
        sub_1B5F138CC((uint64_t)v21, (uint64_t)v19, (void (*)(void))type metadata accessor for BlueprintViewAction);
        swift_bridgeObjectRelease();
        sub_1B5EFFBD0();
        uint64_t v27 = v26;
        uint64_t v28 = *(void *)&v19[*(int *)(v26 + 64)];
        sub_1B5F155D4((uint64_t)&v19[*(int *)(v26 + 48)], (void (*)(void))type metadata accessor for BlueprintViewAction.Action);
        uint64_t v29 = *(void *)(v28 + 16);
        if (v29)
        {
          int v30 = (unsigned char *)(v28 + 40);
          do
          {
            if (*v30 == 2 && *((void *)v30 - 1) == 0)
            {
              swift_bridgeObjectRelease();
              uint64_t v32 = v40;
              sub_1B5F138CC((uint64_t)v21, v40, (void (*)(void))type metadata accessor for BlueprintViewAction);
              swift_bridgeObjectRelease();
              uint64_t v33 = v32 + *(int *)(v27 + 48);
              swift_bridgeObjectRelease();
              sub_1B5F13808(v33, v8, (void (*)(void))type metadata accessor for BlueprintViewAction.Action);
              sub_1B5F13808(v8, (uint64_t)v11, (void (*)(void))type metadata accessor for BlueprintViewAction.Action);
              sub_1B5F155D4((uint64_t)v21, (void (*)(void))type metadata accessor for BlueprintViewAction);
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              uint64_t v23 = v41;
              switch(EnumCaseMultiPayload)
              {
                case 1:
                  swift_bridgeObjectRelease();
                  goto LABEL_13;
                case 2:
                case 3:
                  goto LABEL_18;
                default:
                  sub_1B5EFFFC4();
                  v39[1] = &v11[*(int *)(v35 + 48)];
                  uint64_t v36 = v8;
                  uint64_t v37 = v4;
                  uint64_t v38 = *(void (**)(void))(*(void *)(sub_1B61AFCB0() - 8) + 8);
                  OUTLINED_FUNCTION_68();
                  v38();
                  OUTLINED_FUNCTION_68();
                  v38();
                  uint64_t v4 = v37;
                  uint64_t v8 = v36;
                  uint64_t v23 = v41;
                  goto LABEL_13;
              }
            }
            v30 += 16;
            --v29;
          }
          while (v29);
        }
        swift_bridgeObjectRelease();
        sub_1B5F155D4((uint64_t)v21, (void (*)(void))type metadata accessor for BlueprintViewAction);
LABEL_13:
        ++v24;
      }
      while (v24 != v43);
    }
LABEL_18:
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_73();
}

void BlueprintViewActionable.action(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_83();
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  OUTLINED_FUNCTION_0_13();
  uint64_t v32 = v31;
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (char *)&a9 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B5F13988(0, &qword_1EB63ED80, type metadata accessor for BlueprintViewAction, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v36 - 8);
  uint64_t v38 = (char *)&a9 - v37;
  uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v26, v24);
  sub_1B5F12514(v39, v28, (uint64_t)v38);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v35, v20, v26);
  uint64_t v40 = type metadata accessor for BlueprintViewAction(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v40) == 1)
  {
    uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(v26, v24);
    sub_1B5F12514(v41, v28, v30);
    swift_bridgeObjectRelease();
    uint64_t v42 = OUTLINED_FUNCTION_16_12();
    v43(v42);
    sub_1B5F1377C((uint64_t)v38);
  }
  else
  {
    uint64_t v44 = OUTLINED_FUNCTION_16_12();
    v45(v44);
    sub_1B5F13808((uint64_t)v38, v30, (void (*)(void))type metadata accessor for BlueprintViewAction);
    __swift_storeEnumTagSinglePayload(v30, 0, 1, v40);
  }
  OUTLINED_FUNCTION_73();
}

uint64_t BlueprintViewAction.isEditable.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_9_22();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_3_46();
  sub_1B5F138CC(v1, v0, (void (*)(void))type metadata accessor for BlueprintViewAction);
  swift_bridgeObjectRelease();
  sub_1B5EFFBD0();
  OUTLINED_FUNCTION_17_19();
  sub_1B5F155D4(v3, (void (*)(void))type metadata accessor for BlueprintViewAction.Action);
  uint64_t v4 = *(void *)(v0 + 16);
  if (v4)
  {
    uint64_t v5 = v4 - 1;
    uint64_t v6 = (unsigned char *)(v0 + 40);
    do
    {
      uint64_t v7 = v5;
      BOOL v8 = *v6 == 2 && *((void *)v6 - 1) == 0;
      uint64_t v9 = v8;
      if (v8) {
        break;
      }
      --v5;
      v6 += 16;
    }
    while (v7);
  }
  else
  {
    uint64_t v9 = 0;
  }
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1B5F12514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1B5F15564();
  uint64_t v34 = v6;
  MEMORY[0x1F4188790](v6);
  BOOL v8 = (void *)((char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = type metadata accessor for BlueprintViewAction.Action(0);
  uint64_t v9 = MEMORY[0x1F4188790](v32);
  uint64_t v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v30 - v12;
  uint64_t v14 = type metadata accessor for BlueprintViewAction(0);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v21 = (char *)v30 - v20;
  if (!a1 || (uint64_t v22 = *(void *)(a1 + 16)) == 0)
  {
    uint64_t v28 = 1;
    return __swift_storeEnumTagSinglePayload(a3, v28, 1, v18);
  }
  uint64_t v31 = a3;
  uint64_t v23 = a1;
  uint64_t v24 = a1 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  uint64_t v33 = *(void *)(v19 + 72);
  v30[0] = v18;
  v30[1] = v23;
  sub_1B61B1F70();
  while (1)
  {
    sub_1B5F138CC(v24, (uint64_t)v21, (void (*)(void))type metadata accessor for BlueprintViewAction);
    sub_1B5F138CC((uint64_t)v21, (uint64_t)v17, (void (*)(void))type metadata accessor for BlueprintViewAction);
    swift_bridgeObjectRelease();
    sub_1B5EFFBD0();
    uint64_t v26 = (uint64_t)&v17[*(int *)(v25 + 48)];
    swift_bridgeObjectRelease();
    sub_1B5F13808(v26, (uint64_t)v11, (void (*)(void))type metadata accessor for BlueprintViewAction.Action);
    sub_1B5F13808((uint64_t)v11, (uint64_t)v13, (void (*)(void))type metadata accessor for BlueprintViewAction.Action);
    uint64_t v27 = (uint64_t)v8 + *(int *)(v34 + 48);
    void *v8 = a2;
    sub_1B5F13808((uint64_t)v13, v27, (void (*)(void))type metadata accessor for BlueprintViewAction.Action);
    if (a2 != 2) {
      break;
    }
    if (swift_getEnumCaseMultiPayload() == 3) {
      goto LABEL_12;
    }
LABEL_9:
    sub_1B5F155D4((uint64_t)v21, (void (*)(void))type metadata accessor for BlueprintViewAction);
    sub_1B5F155D4((uint64_t)v8, (void (*)(void))sub_1B5F15564);
    v24 += v33;
    if (!--v22)
    {
      swift_bridgeObjectRelease();
      uint64_t v28 = 1;
      a3 = v31;
      goto LABEL_13;
    }
  }
  if (a2 != 1 || swift_getEnumCaseMultiPayload() != 2) {
    goto LABEL_9;
  }
LABEL_12:
  swift_bridgeObjectRelease();
  a3 = v31;
  sub_1B5F13808((uint64_t)v21, v31, (void (*)(void))type metadata accessor for BlueprintViewAction);
  uint64_t v28 = 0;
LABEL_13:
  uint64_t v18 = v30[0];
  return __swift_storeEnumTagSinglePayload(a3, v28, 1, v18);
}

void static BlueprintViewAction.Action.== infix(_:_:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_13();
  uint64_t v35 = v5;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_81();
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  v34[1] = (char *)v34 - v9;
  MEMORY[0x1F4188790](v8);
  v34[2] = (char *)v34 - v10;
  type metadata accessor for BlueprintViewAction.Action(0);
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_81();
  uint64_t v14 = (uint64_t *)(v12 - v13);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v34 - v16;
  sub_1B5F13868();
  MEMORY[0x1F4188790](v18 - 8);
  OUTLINED_FUNCTION_3_46();
  uint64_t v20 = (void *)(v0 + *(int *)(v19 + 56));
  sub_1B5F138CC(v4, v0, (void (*)(void))type metadata accessor for BlueprintViewAction.Action);
  sub_1B5F138CC(v2, (uint64_t)v20, (void (*)(void))type metadata accessor for BlueprintViewAction.Action);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1B5F138CC(v0, (uint64_t)v14, (void (*)(void))type metadata accessor for BlueprintViewAction.Action);
      uint64_t v25 = *v14;
      uint64_t v24 = v14[1];
      if (OUTLINED_FUNCTION_19_16() != 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      if (v25 == *v20 && v24 == v20[1])
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        sub_1B61B3760();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_21;
    case 2u:
      int v27 = OUTLINED_FUNCTION_19_16();
      uint64_t v28 = (void (*)(void))type metadata accessor for BlueprintViewAction.Action;
      if (v27 != 2) {
        goto LABEL_15;
      }
      goto LABEL_22;
    case 3u:
      int v29 = OUTLINED_FUNCTION_19_16();
      uint64_t v28 = (void (*)(void))type metadata accessor for BlueprintViewAction.Action;
      if (v29 == 3) {
        goto LABEL_22;
      }
      goto LABEL_15;
    default:
      sub_1B5F138CC(v0, (uint64_t)v17, (void (*)(void))type metadata accessor for BlueprintViewAction.Action);
      sub_1B5EFFFC4();
      uint64_t v22 = *(int *)(v21 + 48);
      if (OUTLINED_FUNCTION_19_16())
      {
        uint64_t v23 = *(void (**)(void))(v35 + 8);
        OUTLINED_FUNCTION_68();
        v23();
        OUTLINED_FUNCTION_68();
        v23();
LABEL_15:
        uint64_t v28 = (void (*)(void))sub_1B5F13868;
      }
      else
      {
        v34[0] = (char *)v20 + v22;
        uint64_t v30 = v35;
        uint64_t v31 = *(void (**)(void))(v35 + 32);
        OUTLINED_FUNCTION_12_1();
        v31();
        OUTLINED_FUNCTION_12_1();
        v31();
        OUTLINED_FUNCTION_12_1();
        v31();
        char v32 = sub_1B61AFC30();
        uint64_t v33 = *(void (**)(void))(v30 + 8);
        OUTLINED_FUNCTION_2_53();
        v33();
        if (v32) {
          sub_1B61AFC30();
        }
        OUTLINED_FUNCTION_2_53();
        v33();
        OUTLINED_FUNCTION_2_53();
        v33();
        OUTLINED_FUNCTION_2_53();
        v33();
LABEL_21:
        uint64_t v28 = (void (*)(void))type metadata accessor for BlueprintViewAction.Action;
      }
LABEL_22:
      sub_1B5F155D4(v0, v28);
      OUTLINED_FUNCTION_73();
      return;
  }
}

BOOL static BlueprintViewAction.Source.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t BlueprintViewAction.Source.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t BlueprintViewActionRequest.item.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v4 = v1 + *(void *)(v3 + 96);
  OUTLINED_FUNCTION_11_0();
  type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_6_0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  return v7(a1, v4, v5);
}

uint64_t BlueprintViewActionRequest.action.getter()
{
  OUTLINED_FUNCTION_10_0();
  return sub_1B5F138CC(v0 + *(void *)(v1 + 104), v2, (void (*)(void))type metadata accessor for BlueprintViewAction.Action);
}

void BlueprintViewActionRequest.source.getter()
{
  OUTLINED_FUNCTION_10_0();
  unsigned char *v2 = *(unsigned char *)(v0 + *(void *)(v1 + 112));
}

void *BlueprintViewActionRequest.sourceView.getter()
{
  OUTLINED_FUNCTION_10_0();
  uint64_t v2 = *(void **)(v0 + *(void *)(v1 + 120));
  id v3 = v2;
  return v2;
}

uint64_t BlueprintViewActionRequest.init(item:action:source:sourceView:completion:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v12 = *a3;
  OUTLINED_FUNCTION_11_0();
  *(unsigned char *)(v6 + *(void *)(v13 + 136)) = 0;
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_11_0();
  uint64_t v15 = v6 + v14;
  type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_6_0();
  (*(void (**)(uint64_t, uint64_t))(v16 + 32))(v15, a1);
  sub_1B5F13808(a2, v6 + *(void *)(*(void *)v6 + 104), (void (*)(void))type metadata accessor for BlueprintViewAction.Action);
  OUTLINED_FUNCTION_10_0();
  *(unsigned char *)(v6 + *(void *)(v17 + 112)) = v12;
  OUTLINED_FUNCTION_10_0();
  *(void *)(v6 + *(void *)(v18 + 120)) = a4;
  OUTLINED_FUNCTION_10_0();
  uint64_t v20 = (void *)(v6 + *(void *)(v19 + 128));
  *uint64_t v20 = a5;
  v20[1] = a6;
  return v6;
}

uint64_t BlueprintViewActionRequest.makeResponse(success:apply:)(char a1, char *a2)
{
  uint64_t v3 = *(void *)(*(void *)v2 + 136);
  if (*(unsigned char *)(v2 + v3))
  {
    uint64_t result = sub_1B61B34D0();
    __break(1u);
  }
  else
  {
    char v5 = *a2;
    *(unsigned char *)(v2 + v3) = 1;
    OUTLINED_FUNCTION_10_0();
    uint64_t v7 = (uint64_t *)(v2 + *(void *)(v6 + 128));
    uint64_t v9 = *v7;
    uint64_t v8 = v7[1];
    type metadata accessor for BlueprintViewActionResponse();
    uint64_t v10 = swift_allocObject();
    *(unsigned char *)(v10 + 40) = 0;
    *(unsigned char *)(v10 + 16) = a1 & 1;
    *(unsigned char *)(v10 + 41) = v5;
    *(void *)(v10 + 24) = v9;
    *(void *)(v10 + 32) = v8;
    swift_retain();
    return v10;
  }
  return result;
}

Swift::Void __swiftcall BlueprintViewActionRequest.cancel()()
{
  OUTLINED_FUNCTION_10_0();
  uint64_t v2 = *(void *)(v1 + 136);
  if (*(unsigned char *)(v0 + v2))
  {
    sub_1B61B34D0();
    __break(1u);
  }
  else
  {
    *(unsigned char *)(v0 + v2) = 2;
    swift_retain();
    sub_1B61B0F60();
    swift_release();
  }
}

uint64_t sub_1B5F13124(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + *(void *)(*(void *)a1 + 128)))(0);
}

uint64_t sub_1B5F13168()
{
  return _s5TeaUI16RestorationStateO9hashValueSivg_0();
}

uint64_t sub_1B5F13170()
{
  return sub_1B61B3940();
}

uint64_t BlueprintViewActionRequest.deinit()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v2 = v0 + *(void *)(v1 + 96);
  OUTLINED_FUNCTION_11_0();
  type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_6_0();
  (*(void (**)(uint64_t))(v3 + 8))(v2);
  sub_1B5F155D4(v0 + *(void *)(*(void *)v0 + 104), (void (*)(void))type metadata accessor for BlueprintViewAction.Action);
  OUTLINED_FUNCTION_10_0();

  OUTLINED_FUNCTION_10_0();
  swift_release();
  return v0;
}

uint64_t BlueprintViewActionRequest.__deallocating_deinit()
{
  BlueprintViewActionRequest.deinit();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall BlueprintViewActionResponse.complete(apply:)(TeaUI::BlueprintViewActionResponse::Apply apply)
{
  if ((*(unsigned char *)(v1 + 40) & 1) == 0 && *(unsigned __int8 *)(v1 + 41) == *(unsigned __int8 *)apply)
  {
    *(unsigned char *)(v1 + 40) = 1;
    swift_retain();
    sub_1B61B0F60();
    swift_release();
  }
}

uint64_t BlueprintViewActionResponse.deinit()
{
  swift_release();
  return v0;
}

uint64_t BlueprintViewActionResponse.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

void BlueprintViewAction.shortDescription.getter()
{
  OUTLINED_FUNCTION_83();
  uint64_t v25 = v2;
  type metadata accessor for BlueprintViewAction.Action(0);
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_7_0();
  type metadata accessor for BlueprintViewAction(0);
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B5F13988(0, &qword_1E9DAA050, type metadata accessor for BlueprintViewAction, MEMORY[0x1E4FAAAF8]);
  uint64_t v24 = v7;
  OUTLINED_FUNCTION_0_13();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  char v12 = (char *)&v23 - v11;
  sub_1B5F138CC(v0, (uint64_t)v6, (void (*)(void))type metadata accessor for BlueprintViewAction);
  swift_getEnumCaseMultiPayload();
  sub_1B5EFFBD0();
  uint64_t v14 = (uint64_t)&v6[*(int *)(v13 + 48)];
  unint64_t v15 = *(void *)&v6[*(int *)(v13 + 64)];
  sub_1B5F13808(v14, v1, (void (*)(void))type metadata accessor for BlueprintViewAction.Action);
  sub_1B5F13988(0, (unint64_t *)&qword_1EB6499D0, (uint64_t (*)(uint64_t))sub_1B5F0FE7C, MEMORY[0x1E4FBBE00]);
  uint64_t inited = (__n128 *)swift_initStackObject();
  uint64_t v17 = OUTLINED_FUNCTION_10_25(inited, (__n128)xmmword_1B61C0140);
  uint64_t v18 = OUTLINED_FUNCTION_4_39(v17, MEMORY[0x1E4FBB1A0]);
  sub_1B5F138CC(v1, (uint64_t)v18, (void (*)(void))type metadata accessor for BlueprintViewAction.Action);
  OUTLINED_FUNCTION_5_28();
  inited[10].n128_u64[1] = v19;
  inited[9].n128_u64[0] = v15;
  sub_1B61B1F50();
  sub_1B61B0540();
  sub_1B5F155D4(v1, (void (*)(void))type metadata accessor for BlueprintViewAction.Action);
  uint64_t v21 = v24;
  uint64_t v20 = v25;
  v25[3] = v24;
  v20[4] = sub_1B5F139EC();
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v20);
  (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 32))(boxed_opaque_existential_0, v12, v21);
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5F13724(uint64_t a1)
{
  uint64_t v2 = sub_1B5F15520(&qword_1E9DAA180);
  return MEMORY[0x1F415E228](a1, v2);
}

uint64_t sub_1B5F1377C(uint64_t a1)
{
  sub_1B5F13988(0, &qword_1EB63ED80, type metadata accessor for BlueprintViewAction, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B5F13808(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_6_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

void sub_1B5F13868()
{
  if (!qword_1E9DAA048)
  {
    type metadata accessor for BlueprintViewAction.Action(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DAA048);
    }
  }
}

uint64_t sub_1B5F138CC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_6_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for BlueprintViewActionResponse()
{
  return self;
}

uint64_t sub_1B5F13950()
{
  return sub_1B5F13124(v0);
}

uint64_t sub_1B5F13958()
{
  return (*(uint64_t (**)(void))(v0 + 24))(*(unsigned __int8 *)(v0 + 16));
}

void sub_1B5F13988(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1B5F139EC()
{
  unint64_t result = qword_1E9DAA058;
  if (!qword_1E9DAA058)
  {
    sub_1B5F13988(255, &qword_1E9DAA050, type metadata accessor for BlueprintViewAction, MEMORY[0x1E4FAAAF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA058);
  }
  return result;
}

unint64_t sub_1B5F13A70()
{
  unint64_t result = qword_1E9DAA060;
  if (!qword_1E9DAA060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA060);
  }
  return result;
}

unint64_t sub_1B5F13AC0()
{
  unint64_t result = qword_1E9DAA068;
  if (!qword_1E9DAA068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA068);
  }
  return result;
}

uint64_t sub_1B5F13B0C()
{
  return sub_1B5F15520(qword_1E9DAA070);
}

uint64_t dispatch thunk of BlueprintViewActionable.trailingViewActions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BlueprintViewActionable.leadingViewActions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of BlueprintViewActionable.isEditable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of BlueprintViewActionable.editingStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of BlueprintViewActionable.action(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

void *initializeBufferWithCopyOfBuffer for BlueprintViewAction(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    sub_1B5EFFBD0();
    uint64_t v9 = v8;
    uint64_t v10 = *(int *)(v8 + 48);
    uint64_t v11 = (void *)((char *)a1 + v10);
    char v12 = (void *)((char *)a2 + v10);
    uint64_t v13 = type metadata accessor for BlueprintViewAction.Action(0);
    sub_1B61B1F70();
    int v14 = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      if (v14 != 1)
      {
        if (!v14) {
          goto LABEL_9;
        }
        goto LABEL_14;
      }
    }
    else if (v14 != 1)
    {
      if (!v14)
      {
LABEL_9:
        uint64_t v16 = sub_1B61AFCB0();
        uint64_t v17 = *(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16);
        v17(v11, v12, v16);
        sub_1B5EFFFC4();
        v17((void *)((char *)v11 + *(int *)(v18 + 48)), (void *)((char *)v12 + *(int *)(v18 + 48)), v16);
LABEL_13:
        swift_storeEnumTagMultiPayload();
LABEL_15:
        *(void *)((char *)a1 + *(int *)(v9 + 64)) = *(void *)((char *)a2 + *(int *)(v9 + 64));
        sub_1B61B1F70();
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_14:
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
      goto LABEL_15;
    }
    uint64_t v19 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v19;
    sub_1B61B1F70();
    goto LABEL_13;
  }
  uint64_t v15 = *a2;
  *a1 = *a2;
  a1 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for BlueprintViewAction(uint64_t a1)
{
  swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  sub_1B5EFFBD0();
  uint64_t v3 = a1 + *(int *)(v2 + 48);
  type metadata accessor for BlueprintViewAction.Action(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v5 = sub_1B61AFCB0();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    v6(v3, v5);
    sub_1B5EFFFC4();
    v6(v3 + *(int *)(v7 + 48), v5);
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for BlueprintViewAction(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  sub_1B5EFFBD0();
  uint64_t v7 = v6;
  uint64_t v8 = *(int *)(v6 + 48);
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  uint64_t v11 = type metadata accessor for BlueprintViewAction.Action(0);
  sub_1B61B1F70();
  int v12 = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 1)
  {
    if (v12 == 1)
    {
      uint64_t v20 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v20;
      sub_1B61B1F70();
    }
    else
    {
      if (v12)
      {
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
        goto LABEL_15;
      }
      uint64_t v16 = sub_1B61AFCB0();
      uint64_t v17 = *(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16);
      v17(v9, v10, v16);
      sub_1B5EFFFC4();
      v17((void *)((char *)v9 + *(int *)(v18 + 48)), (void *)((char *)v10 + *(int *)(v18 + 48)), v16);
    }
    swift_storeEnumTagMultiPayload();
LABEL_15:
    *(void *)((char *)a1 + *(int *)(v7 + 64)) = *(void *)((char *)a2 + *(int *)(v7 + 64));
    goto LABEL_16;
  }
  if (v12 == 1)
  {
    uint64_t v19 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v19;
    sub_1B61B1F70();
  }
  else
  {
    if (v12)
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      goto LABEL_11;
    }
    uint64_t v13 = sub_1B61AFCB0();
    int v14 = *(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16);
    v14(v9, v10, v13);
    sub_1B5EFFFC4();
    v14((void *)((char *)v9 + *(int *)(v15 + 48)), (void *)((char *)v10 + *(int *)(v15 + 48)), v13);
  }
  swift_storeEnumTagMultiPayload();
LABEL_11:
  *(void *)((char *)a1 + *(int *)(v7 + 64)) = *(void *)((char *)a2 + *(int *)(v7 + 64));
LABEL_16:
  sub_1B61B1F70();
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for BlueprintViewAction(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1B5F155D4((uint64_t)a1, (void (*)(void))type metadata accessor for BlueprintViewAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    sub_1B5EFFBD0();
    uint64_t v6 = v5;
    uint64_t v7 = *(int *)(v5 + 48);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    uint64_t v10 = type metadata accessor for BlueprintViewAction.Action(0);
    sub_1B61B1F70();
    int v11 = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      if (v11 == 1)
      {
        void *v8 = *v9;
        v8[1] = v9[1];
        sub_1B61B1F70();
      }
      else
      {
        if (v11)
        {
          memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
          goto LABEL_12;
        }
        uint64_t v12 = sub_1B61AFCB0();
        uint64_t v13 = *(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16);
        v13(v8, v9, v12);
        sub_1B5EFFFC4();
        v13((void *)((char *)v8 + *(int *)(v14 + 48)), (void *)((char *)v9 + *(int *)(v14 + 48)), v12);
      }
      swift_storeEnumTagMultiPayload();
LABEL_12:
      *(void *)((char *)a1 + *(int *)(v6 + 64)) = *(void *)((char *)a2 + *(int *)(v6 + 64));
LABEL_17:
      sub_1B61B1F70();
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (v11 == 1)
    {
      void *v8 = *v9;
      v8[1] = v9[1];
      sub_1B61B1F70();
    }
    else
    {
      if (v11)
      {
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
        goto LABEL_16;
      }
      uint64_t v15 = sub_1B61AFCB0();
      uint64_t v16 = *(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16);
      v16(v8, v9, v15);
      sub_1B5EFFFC4();
      v16((void *)((char *)v8 + *(int *)(v17 + 48)), (void *)((char *)v9 + *(int *)(v17 + 48)), v15);
    }
    swift_storeEnumTagMultiPayload();
LABEL_16:
    *(void *)((char *)a1 + *(int *)(v6 + 64)) = *(void *)((char *)a2 + *(int *)(v6 + 64));
    goto LABEL_17;
  }
  return a1;
}

_OWORD *initializeWithTake for BlueprintViewAction(_OWORD *a1, _OWORD *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  sub_1B5EFFBD0();
  uint64_t v6 = v5;
  uint64_t v7 = *(int *)(v5 + 48);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for BlueprintViewAction.Action(0);
  int v11 = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    if (v11) {
      goto LABEL_5;
    }
LABEL_6:
    uint64_t v12 = sub_1B61AFCB0();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
    v13(v8, v9, v12);
    sub_1B5EFFFC4();
    v13(&v8[*(int *)(v14 + 48)], &v9[*(int *)(v14 + 48)], v12);
    swift_storeEnumTagMultiPayload();
    goto LABEL_7;
  }
  if (!v11) {
    goto LABEL_6;
  }
LABEL_5:
  memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_7:
  *(void *)((char *)a1 + *(int *)(v6 + 64)) = *(void *)((char *)a2 + *(int *)(v6 + 64));
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *assignWithTake for BlueprintViewAction(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_1B5F155D4((uint64_t)a1, (void (*)(void))type metadata accessor for BlueprintViewAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    sub_1B5EFFBD0();
    uint64_t v6 = v5;
    uint64_t v7 = *(int *)(v5 + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for BlueprintViewAction.Action(0);
    int v11 = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      if (v11) {
        goto LABEL_6;
      }
    }
    else if (v11)
    {
LABEL_6:
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_8:
      *(void *)((char *)a1 + *(int *)(v6 + 64)) = *(void *)((char *)a2 + *(int *)(v6 + 64));
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    uint64_t v12 = sub_1B61AFCB0();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
    v13(v8, v9, v12);
    sub_1B5EFFFC4();
    v13(&v8[*(int *)(v14 + 48)], &v9[*(int *)(v14 + 48)], v12);
    swift_storeEnumTagMultiPayload();
    goto LABEL_8;
  }
  return a1;
}

uint64_t sub_1B5F14858()
{
  uint64_t result = type metadata accessor for BlueprintViewAction.Action(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    uint64_t v4 = &v3;
    swift_getTupleTypeLayout3();
    uint64_t v5 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for BlueprintViewAction.Action(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      sub_1B61B1F70();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
      }
      uint64_t v8 = sub_1B61AFCB0();
      uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16);
      v9(a1, a2, v8);
      sub_1B5EFFFC4();
      v9((uint64_t *)((char *)a1 + *(int *)(v10 + 48)), (uint64_t *)((char *)a2 + *(int *)(v10 + 48)), v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for BlueprintViewAction.Action(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v3 = sub_1B61AFCB0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v6)((void *)(v3 - 8), a1, v3);
    sub_1B5EFFFC4();
    uint64_t v5 = a1 + *(int *)(v4 + 48);
    return v6(v5, v3);
  }
  return result;
}

void *initializeWithCopy for BlueprintViewAction.Action(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    sub_1B61B1F70();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = sub_1B61AFCB0();
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    sub_1B5EFFFC4();
    v8((void *)((char *)a1 + *(int *)(v9 + 48)), (void *)((char *)a2 + *(int *)(v9 + 48)), v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for BlueprintViewAction.Action(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1B5F155D4((uint64_t)a1, (void (*)(void))type metadata accessor for BlueprintViewAction.Action);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_1B61B1F70();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      uint64_t v7 = sub_1B61AFCB0();
      uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
      v8(a1, a2, v7);
      sub_1B5EFFFC4();
      v8((void *)((char *)a1 + *(int *)(v9 + 48)), (void *)((char *)a2 + *(int *)(v9 + 48)), v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for BlueprintViewAction.Action(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1B61AFCB0();
    uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
    v7(a1, a2, v6);
    sub_1B5EFFFC4();
    v7(&a1[*(int *)(v8 + 48)], &a2[*(int *)(v8 + 48)], v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for BlueprintViewAction.Action(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1B5F155D4((uint64_t)a1, (void (*)(void))type metadata accessor for BlueprintViewAction.Action);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1B61AFCB0();
      uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      sub_1B5EFFFC4();
      v7(&a1[*(int *)(v8 + 48)], &a2[*(int *)(v8 + 48)], v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1B5F14F8C()
{
  uint64_t result = sub_1B61AFCB0();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[4] = v2;
    v2[5] = &unk_1B61C6808;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void type metadata accessor for BlueprintViewAction.Attribute()
{
}

unsigned char *storeEnumTagSinglePayload for BlueprintViewAction.Source(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F15104);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for BlueprintViewAction.Source()
{
}

uint64_t sub_1B5F15138()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for BlueprintViewAction.Action(319);
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t type metadata accessor for BlueprintViewActionRequest()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for BlueprintViewActionRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BlueprintViewActionRequest);
}

uint64_t dispatch thunk of BlueprintViewActionRequest.__allocating_init(item:action:source:sourceView:completion:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t method lookup function for BlueprintViewActionResponse(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BlueprintViewActionResponse);
}

void type metadata accessor for BlueprintViewActionResponse.Apply()
{
}

unsigned char *sub_1B5F152A0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F1536CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for BlueprintViewActionResponse.State()
{
}

uint64_t sub_1B5F153A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

unsigned char *_s5TeaUI27BlueprintViewActionResponseC5ApplyOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F15474);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for BlueprintViewActionRequest.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B5F154B4()
{
  return swift_getWitnessTable();
}

unint64_t sub_1B5F154D4()
{
  unint64_t result = qword_1E9DAA178;
  if (!qword_1E9DAA178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA178);
  }
  return result;
}

uint64_t sub_1B5F15520(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for BlueprintViewAction(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B5F15564()
{
  if (!qword_1E9DAA188)
  {
    type metadata accessor for EditingStyle(255);
    type metadata accessor for BlueprintViewAction.Action(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DAA188);
    }
  }
}

uint64_t sub_1B5F155D4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_6_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

id sub_1B5F15638()
{
  id result = objc_msgSend(self, sel_systemBackgroundColor);
  qword_1E9DAA190 = (uint64_t)result;
  *(void *)algn_1E9DAA198 = 0;
  return result;
}

uint64_t ModalHostViewConfig.init(backgroundColor:visualEffect:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

id static ModalHostViewConfig.default.getter@<X0>(void *a1@<X8>)
{
  if (qword_1E9DA7EA0 != -1) {
    swift_once();
  }
  unint64_t v2 = *(void **)algn_1E9DAA198;
  id v5 = (id)qword_1E9DAA190;
  *a1 = qword_1E9DAA190;
  a1[1] = v2;
  id v3 = v2;
  return v5;
}

id ModalHostViewConfig.backgroundColor.getter()
{
  return *v0;
}

void *ModalHostViewConfig.visualEffect.getter()
{
  uint64_t v1 = *(void **)(v0 + 8);
  id v2 = v1;
  return v1;
}

void *initializeBufferWithCopyOfBuffer for ModalHostViewConfig(void *a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for ModalHostViewConfig(uint64_t a1)
{
  id v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for ModalHostViewConfig(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a1 + 8);
  uint64_t v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  return a1;
}

uint64_t assignWithTake for ModalHostViewConfig(uint64_t a1, _OWORD *a2)
{
  unsigned int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for ModalHostViewConfig()
{
  return &type metadata for ModalHostViewConfig;
}

id sub_1B5F15850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1B5F15B18(a1, (uint64_t)&v3[OBJC_IVAR____TtC5TeaUI28SwipeActionAnimationDelegate_swipeState]);
  uint64_t v8 = &v3[OBJC_IVAR____TtC5TeaUI28SwipeActionAnimationDelegate_completion];
  *(void *)uint64_t v8 = a2;
  *((void *)v8 + 1) = a3;
  v11.receiver = v3;
  v11.super_class = ObjectType;
  id v9 = objc_msgSendSuper2(&v11, sel_init);
  sub_1B5F15B7C(a1);
  return v9;
}

uint64_t sub_1B5F158E4(uint64_t a1, char a2)
{
  id v3 = *(uint64_t (**)(void, uint64_t))(v2 + OBJC_IVAR____TtC5TeaUI28SwipeActionAnimationDelegate_completion);
  if (v3) {
    return v3(a2 & 1, v2 + OBJC_IVAR____TtC5TeaUI28SwipeActionAnimationDelegate_swipeState);
  }
  return result;
}

void sub_1B5F159A0()
{
}

uint64_t sub_1B5F15A30()
{
  return type metadata accessor for SwipeActionAnimationDelegate();
}

uint64_t type metadata accessor for SwipeActionAnimationDelegate()
{
  uint64_t result = qword_1E9DAA218;
  if (!qword_1E9DAA218) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B5F15A80()
{
  uint64_t result = type metadata accessor for SwipeActionState(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B5F15B18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SwipeActionState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B5F15B7C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SwipeActionState(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void MenuItem.init<A>(command:context:title:key:alternate:)()
{
  OUTLINED_FUNCTION_83();
  unint64_t v1 = v0;
  id v3 = v2;
  uint64_t v34 = v4;
  uint64_t v35 = v5;
  uint64_t v7 = v6;
  id v9 = v8;
  uint64_t v36 = v10;
  OUTLINED_FUNCTION_14_19();
  uint64_t v12 = *(void *)(v11 + 88);
  sub_1B61B2F80();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v16 = v3[1];
  uint64_t v31 = *v3;
  uint64_t v17 = v3[2];
  uint64_t v33 = *v1;
  uint64_t v18 = sub_1B5F15EE0(v9, v7);
  OUTLINED_FUNCTION_7_29(v18, v19);
  OUTLINED_FUNCTION_6_31();
  v20();
  uint64_t v21 = (void *)swift_allocObject();
  uint64_t v22 = v34;
  v21[2] = v12;
  v21[3] = v22;
  v21[4] = v35;
  if (v16)
  {
    uint64_t v23 = v31;
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v23 = 0;
  }
  type metadata accessor for MenuGroupItem.CommandMenuItem();
  OUTLINED_FUNCTION_11_19();
  uint64_t v24 = (uint64_t)v9;
  uint64_t v26 = v25;
  sub_1B614F214(v32, v33, v24, (uint64_t)v15, (uint64_t)sub_1B5F161DC, (uint64_t)v21, v23, v16, v17, v16 == 0, v33);
  uint64_t v27 = OUTLINED_FUNCTION_3_47();
  v28(v27);
  uint64_t v29 = (uint64_t)v36;
  *uint64_t v36 = v26;
  OUTLINED_FUNCTION_4_40(v29);
  OUTLINED_FUNCTION_73();
}

void MenuItem.init<A, B>(command:context:title:state:key:alternate:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_12_24(v2, v3, v4);
  uint64_t v6 = *v5;
  uint64_t v7 = *(void *)(*v5 + 136);
  sub_1B61B2F80();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_29_2();
  uint64_t v9 = *(void *)(v1 + 8);
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = OUTLINED_FUNCTION_15_17();
  OUTLINED_FUNCTION_7_29(v11, v12);
  OUTLINED_FUNCTION_6_31();
  v13();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v7;
  v14[3] = *(void *)(v6 + 144);
  v14[4] = *(void *)(v6 + 152);
  v14[5] = v29;
  v14[6] = v30;
  if (v9)
  {
    uint64_t v15 = v27;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v15 = 0;
  }
  type metadata accessor for MenuGroupItem.CommandMenuItem();
  OUTLINED_FUNCTION_11_19();
  uint64_t v16 = OUTLINED_FUNCTION_9_23();
  uint64_t v18 = v17;
  sub_1B614F2BC(v16, v19, v20, v21, v22, v23, v24, v15, v9, v10, v9 == 0, v28);
  uint64_t v25 = OUTLINED_FUNCTION_3_47();
  v26(v25);
  *uint64_t v31 = v18;
  OUTLINED_FUNCTION_4_40((uint64_t)v31);
  OUTLINED_FUNCTION_73();
}

{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  long long *v6;
  long long *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  void (*v26)(void);
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  long long v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t *v51;
  char v52;

  OUTLINED_FUNCTION_83();
  double v50 = v0;
  double v51 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  double v48 = *v10;
  double v45 = *(void *)(v48 + 136);
  uint64_t v12 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_10();
  uint64_t v14 = v13;
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  MEMORY[0x1F4188790](v18);
  double v46 = v9;
  double v47 = (uint64_t)&v37 - v19;
  uint64_t v20 = *((void *)v7 + 2);
  uint64_t v38 = *((void *)v7 + 3);
  uint64_t v39 = v20;
  uint64_t v42 = *v5;
  uint64_t v21 = *v3;
  uint64_t v22 = v3[2];
  uint64_t v40 = v3[1];
  uint64_t v41 = v22;
  uint64_t v23 = *v50;
  uint64_t v43 = v21;
  uint64_t v44 = v23;
  uint64_t v24 = (uint64_t *)sub_1B5F15EE0(v11, v9);
  double v49 = v25;
  double v50 = v24;
  uint64_t v26 = *(void (**)(void))(v14 + 16);
  uint64_t v37 = *v7;
  OUTLINED_FUNCTION_13_18();
  v26();
  OUTLINED_FUNCTION_13_18();
  v26();
  uint64_t v27 = (*(unsigned __int8 *)(v14 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v28 = swift_allocObject();
  uint64_t v29 = v48;
  *(void *)(v28 + 16) = v45;
  *(void *)(v28 + 24) = *(void *)(v29 + 144);
  *(void *)(v28 + 32) = *(void *)(v29 + 152);
  *(_OWORD *)(v28 + 40) = v37;
  uint64_t v30 = v38;
  *(void *)(v28 + 56) = v39;
  *(void *)(v28 + 64) = v30;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v28 + v27, (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  double v52 = v42;
  uint64_t v31 = v40;
  uint64_t v32 = v40 == 0;
  if (v40) {
    uint64_t v33 = v41;
  }
  else {
    uint64_t v33 = 0;
  }
  if (v40) {
    uint64_t v34 = v43;
  }
  else {
    uint64_t v34 = 0;
  }
  type metadata accessor for MenuGroupItem.CommandMenuItem();
  OUTLINED_FUNCTION_11_19();
  uint64_t v35 = sub_1B614F2BC((uint64_t)v50, v49, (uint64_t)v11, v47, (uint64_t)sub_1B5F16614, v28, (uint64_t)&v52, v34, v31, v33, v32, v44);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v46, v12);
  uint64_t v36 = (uint64_t)v51;
  *double v51 = v35;
  OUTLINED_FUNCTION_4_40(v36);
  OUTLINED_FUNCTION_73();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;

  OUTLINED_FUNCTION_83();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v34 = v7;
  uint64_t v10 = v9;
  uint64_t v36 = v11;
  uint64_t v12 = *v9;
  uint64_t v13 = *(void *)(*v9 + 136);
  uint64_t v35 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_10();
  uint64_t v15 = v14;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_29_2();
  uint64_t v31 = *(void *)(v6 + 24);
  uint64_t v32 = *(void *)(v6 + 16);
  uint64_t v17 = v4[1];
  uint64_t v33 = *v4;
  uint64_t v30 = v4[2];
  uint64_t v18 = *v2;
  sub_1B5F15EE0(v10, v8);
  __swift_storeEnumTagSinglePayload(v0, 1, 1, v13);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v13;
  *(void *)(v19 + 24) = *(void *)(v12 + 144);
  *(void *)(v19 + 32) = *(void *)(v12 + 152);
  *(_OWORD *)(v19 + 40) = *(_OWORD *)v6;
  *(void *)(v19 + 56) = v32;
  *(void *)(v19 + 64) = v31;
  if (v17) {
    uint64_t v20 = v30;
  }
  else {
    uint64_t v20 = 0;
  }
  if (v17) {
    uint64_t v21 = v33;
  }
  else {
    uint64_t v21 = 0;
  }
  type metadata accessor for MenuGroupItem.CommandMenuItem();
  OUTLINED_FUNCTION_11_19();
  uint64_t v22 = OUTLINED_FUNCTION_9_23();
  uint64_t v29 = sub_1B614F2BC(v22, v23, v24, v25, v26, v27, v28, v21, v17, v20, v17 == 0, v18);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v34, v35);
  *uint64_t v36 = v29;
  OUTLINED_FUNCTION_4_40((uint64_t)v36);
  OUTLINED_FUNCTION_73();
}

uint64_t MenuItem.groupItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B5F16344(v1, a1);
}

uint64_t sub_1B5F15EE0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = sub_1B61AFAB0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v4 + 88);
  uint64_t v10 = sub_1B61B2F80();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v18 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v18 - v12, a2, v10);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
LABEL_6:
    uint64_t v20 = 0;
    long long v18 = 0u;
    long long v19 = 0u;
    goto LABEL_7;
  }
  sub_1B5E4D57C();
  if (!swift_dynamicCast()) {
    goto LABEL_6;
  }
  if (!*((void *)&v19 + 1))
  {
LABEL_7:
    sub_1B5E4D5D4((uint64_t)&v18);
    uint64_t v16 = a1[3];
    v21[0] = a1[2];
    v21[1] = v16;
    sub_1B61B1F70();
    _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
    sub_1B61AFAA0();
    sub_1B61AFA80();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
    swift_bridgeObjectRelease();
    return v21[0];
  }
  sub_1B5E30E70(&v18, (uint64_t)v21);
  uint64_t v14 = a1[3];
  *(void *)&long long v18 = a1[2];
  *((void *)&v18 + 1) = v14;
  sub_1B61B1F70();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  __swift_project_boxed_opaque_existential_1(v21, v21[3]);
  sub_1B61B02A0();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  uint64_t v15 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v15;
}

uint64_t sub_1B5F161A4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void MenuItem.init<A>(command:context:titleClosure:key:alternate:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v28 = v4;
  uint64_t v29 = v5;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v30 = v10;
  OUTLINED_FUNCTION_14_19();
  uint64_t v11 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_10();
  uint64_t v13 = v12;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v25 - v15;
  uint64_t v17 = *v3;
  uint64_t v18 = v3[1];
  uint64_t v19 = v3[2];
  uint64_t v26 = *v1;
  uint64_t v27 = v7;
  uint64_t v20 = sub_1B5F15EE0(v9, v7);
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v7, v11);
  if (!v18)
  {
    uint64_t v19 = 0;
    uint64_t v17 = 0;
  }
  type metadata accessor for MenuGroupItem.CommandMenuItem();
  OUTLINED_FUNCTION_11_19();
  uint64_t v23 = sub_1B614F214(v20, v22, (uint64_t)v9, (uint64_t)v16, v28, v29, v17, v18, v19, v18 == 0, v26);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v27, v11);
  uint64_t v24 = (uint64_t)v30;
  *uint64_t v30 = v23;
  OUTLINED_FUNCTION_4_40(v24);
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5F16344(uint64_t a1, uint64_t a2)
{
  return a2;
}

void MenuItem.init<A>(command:context:title:key:options:alternate:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_12_24(v5, v6, v7);
  OUTLINED_FUNCTION_14_19();
  uint64_t v9 = *(void *)(v8 + 88);
  sub_1B61B2F80();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v13 = *(void *)(v4 + 8);
  uint64_t v14 = *(void *)(v4 + 16);
  int v28 = *v2;
  uint64_t v15 = OUTLINED_FUNCTION_15_17();
  OUTLINED_FUNCTION_7_29(v15, v16);
  OUTLINED_FUNCTION_6_31();
  v17();
  uint64_t v18 = (void *)swift_allocObject();
  uint64_t v19 = v33;
  v18[2] = v9;
  v18[3] = v19;
  v18[4] = v34;
  if (v13)
  {
    uint64_t v20 = v29;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v20 = 0;
  }
  char v36 = v28;
  uint64_t v21 = type metadata accessor for MenuGroupItem.CommandMenuItem();
  uint64_t v22 = v0;
  uint64_t v23 = v21;
  sub_1B614F334(v32, v31, v22, (uint64_t)v12, (uint64_t)sub_1B5F161DC, (uint64_t)v18, v20, v13, v14, v13 == 0, (uint64_t)&v36, v30);
  uint64_t v24 = OUTLINED_FUNCTION_3_47();
  v25(v24);
  uint64_t v26 = (uint64_t)v35;
  *uint64_t v35 = v23;
  OUTLINED_FUNCTION_4_40(v26);
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5F1696C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_1B61B1F70();
  return v1;
}

void MenuItem.init<A>(command:context:titleClosure:key:options:alternate:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v32 = v1;
  uint64_t v33 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v34 = v6;
  uint64_t v35 = v7;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  OUTLINED_FUNCTION_14_19();
  uint64_t v12 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_10();
  uint64_t v14 = v13;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v29 - v16;
  uint64_t v18 = *v5;
  uint64_t v19 = v5[1];
  uint64_t v20 = v5[2];
  char v21 = *v3;
  uint64_t v22 = (void *)*v32;
  uint64_t v31 = v9;
  uint64_t v32 = v22;
  uint64_t v23 = sub_1B5F15EE0(v11, v9);
  uint64_t v29 = v24;
  uint64_t v30 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v9, v12);
  if (v19) {
    uint64_t v25 = v20;
  }
  else {
    uint64_t v25 = 0;
  }
  if (v19) {
    uint64_t v26 = v18;
  }
  else {
    uint64_t v26 = 0;
  }
  char v36 = v21;
  type metadata accessor for MenuGroupItem.CommandMenuItem();
  uint64_t v27 = sub_1B614F334(v30, v29, (uint64_t)v11, (uint64_t)v17, v33, v34, v26, v19, v25, v19 == 0, (uint64_t)&v36, (uint64_t)v32);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v31, v12);
  uint64_t v28 = (uint64_t)v35;
  *uint64_t v35 = v27;
  OUTLINED_FUNCTION_4_40(v28);
  OUTLINED_FUNCTION_73();
}

void MenuItem.init<A, B>(command:context:title:state:key:options:alternate:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v32 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v33 = v8;
  uint64_t v34 = v9;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = *v12;
  uint64_t v29 = *(void *)(*v12 + 136);
  uint64_t v15 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_10();
  uint64_t v17 = v16;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_29_2();
  int v19 = *v7;
  uint64_t v21 = *v5;
  uint64_t v20 = v5[1];
  uint64_t v22 = v5[2];
  LODWORD(v28) = *(unsigned __int8 *)(v3 + 16);
  HIDWORD(v28) = v19;
  uint64_t v23 = sub_1B5F15EE0(v13, v11);
  uint64_t v30 = v24;
  uint64_t v31 = v23;
  if (!v20)
  {
    uint64_t v22 = 0;
    uint64_t v21 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v0, v11, v15);
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = v29;
  v25[3] = *(void *)(v14 + 144);
  v25[4] = *(void *)(v14 + 152);
  v25[5] = v32;
  v25[6] = v33;
  char v35 = BYTE4(v28);
  type metadata accessor for MenuGroupItem.CommandMenuItem();
  OUTLINED_FUNCTION_10_26();
  HIDWORD(v27) = v20 == 0;
  uint64_t v26 = sub_1B614F3AC(v31, v30, (uint64_t)v13, v0, (uint64_t)sub_1B5F16340, (uint64_t)v25, (uint64_t)&v35, v21, v20, v22, v20 == 0, v27, v28);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v11, v15);
  *uint64_t v34 = v26;
  OUTLINED_FUNCTION_4_40((uint64_t)v34);
  OUTLINED_FUNCTION_73();
}

{
  uint64_t *v0;
  uint64_t *v1;
  long long *v2;
  long long *v3;
  uint64_t *v4;
  uint64_t *v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  long long *v8;
  long long *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  long long v43;
  uint64_t v44;
  uint64_t *v45;
  long long v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  int v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t *v62;
  long long v63;
  char v64;
  char v65[9];

  OUTLINED_FUNCTION_83();
  id v61 = v0;
  id v62 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v59 = *v12;
  uint64_t v58 = *(void *)(v59 + 136);
  double v45 = v12;
  double v47 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_10();
  uint64_t v15 = v14;
  uint64_t v17 = *(void *)(v16 + 64);
  int v19 = MEMORY[0x1F4188790](v18);
  uint64_t v42 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v41 - v20;
  uint64_t v22 = *((void *)v9 + 2);
  double v48 = *((void *)v9 + 3);
  double v49 = v22;
  uint64_t v54 = *v7;
  uint64_t v23 = v5[1];
  unint64_t v57 = *v5;
  BOOL v53 = v23;
  uint64_t v24 = v5[2];
  double v52 = *((unsigned __int8 *)v3 + 16);
  uint64_t v25 = *v61;
  uint64_t v55 = (uint64_t)&v41 - v20;
  uint64_t v56 = v25;
  uint64_t v26 = v11;
  uint64_t v27 = (uint64_t *)sub_1B5F15EE0(v13, v11);
  uint64_t v60 = v28;
  id v61 = v27;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v43 = *v9;
  double v51 = v23 == 0;
  if (v23) {
    uint64_t v30 = v24;
  }
  else {
    uint64_t v30 = 0;
  }
  double v50 = v30;
  uint64_t v31 = v57;
  if (!v23) {
    uint64_t v31 = 0;
  }
  unint64_t v57 = v31;
  double v46 = *v3;
  uint64_t v32 = v47;
  v29(v21, v26, v47);
  uint64_t v33 = v42;
  v29(v42, v26, v32);
  uint64_t v34 = (*(unsigned __int8 *)(v15 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  char v35 = swift_allocObject();
  char v36 = v59;
  *(void *)(v35 + 16) = v58;
  uint64_t v37 = (uint64_t)v45;
  *(void *)(v35 + 24) = *(void *)(v36 + 144);
  *(void *)(v35 + 32) = *(void *)(v36 + 152);
  *(_OWORD *)(v35 + 40) = v43;
  uint64_t v38 = v48;
  *(void *)(v35 + 56) = v49;
  *(void *)(v35 + 64) = v38;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v35 + v34, v33, v32);
  v65[0] = v54;
  double v63 = v46;
  double v64 = v52;
  type metadata accessor for MenuGroupItem.CommandMenuItem();
  OUTLINED_FUNCTION_10_26();
  uint64_t v39 = sub_1B614F3AC((uint64_t)v61, v60, v37, v55, (uint64_t)sub_1B5F16614, v35, (uint64_t)v65, v57, v53, v50, v51, *((uint64_t *)&v43 + 1), v44);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v26, v32);
  uint64_t v40 = (uint64_t)v62;
  *id v62 = v39;
  OUTLINED_FUNCTION_4_40(v40);
  OUTLINED_FUNCTION_73();
}

{
  uint64_t *v0;
  long long *v1;
  long long *v2;
  uint64_t *v3;
  uint64_t *v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  long long v46;
  char v47;
  char v48;

  OUTLINED_FUNCTION_83();
  uint64_t v42 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  double v45 = v13;
  uint64_t v14 = *v11;
  uint64_t v15 = *(void *)(*v11 + 136);
  sub_1B61B2F80();
  OUTLINED_FUNCTION_0_10();
  uint64_t v43 = v17;
  uint64_t v44 = v16;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v34 - v19;
  uint64_t v21 = *(void *)(v8 + 16);
  char v36 = *(void *)(v8 + 24);
  uint64_t v37 = v21;
  char v35 = *v6;
  uint64_t v22 = *v4;
  uint64_t v23 = v4[1];
  uint64_t v24 = v4[2];
  uint64_t v38 = *((unsigned __int8 *)v2 + 16);
  uint64_t v25 = *v42;
  uint64_t v39 = v22;
  uint64_t v40 = v25;
  uint64_t v26 = (uint64_t *)sub_1B5F15EE0(v12, v10);
  uint64_t v41 = v27;
  uint64_t v42 = v26;
  __swift_storeEnumTagSinglePayload((uint64_t)v20, 1, 1, v15);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v15;
  *(void *)(v28 + 24) = *(void *)(v14 + 144);
  *(void *)(v28 + 32) = *(void *)(v14 + 152);
  *(_OWORD *)(v28 + 40) = *(_OWORD *)v8;
  uint64_t v29 = v36;
  *(void *)(v28 + 56) = v37;
  *(void *)(v28 + 64) = v29;
  double v48 = v35;
  if (v23) {
    uint64_t v30 = v24;
  }
  else {
    uint64_t v30 = 0;
  }
  if (v23) {
    uint64_t v31 = v39;
  }
  else {
    uint64_t v31 = 0;
  }
  double v46 = *v2;
  double v47 = v38;
  type metadata accessor for MenuGroupItem.CommandMenuItem();
  uint64_t v32 = sub_1B614F3AC((uint64_t)v42, v41, (uint64_t)v12, (uint64_t)v20, (uint64_t)sub_1B5F167F8, v28, (uint64_t)&v48, v31, v23, v30, v23 == 0, (uint64_t)&v46, v40);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v10, v44);
  uint64_t v33 = (uint64_t)v45;
  *double v45 = v32;
  OUTLINED_FUNCTION_4_40(v33);
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5F16D08()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B5F16D40()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_1B61B1F70();
  return v1;
}

void sub_1B5F17054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_83();
  uint64_t v23 = v22;
  uint64_t v51 = v24;
  uint64_t v52 = v25;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v54 = a22;
  uint64_t v55 = v34;
  uint64_t v53 = a21;
  uint64_t v35 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_10();
  uint64_t v37 = v36;
  uint64_t v39 = MEMORY[0x1F4188790](v38);
  uint64_t v41 = (char *)&v50 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = MEMORY[0x1F4188790](v39);
  uint64_t v44 = (char *)&v50 - v43;
  MEMORY[0x1F4188790](v42);
  double v46 = (char *)&v50 - v45;
  uint64_t v56 = v33;
  uint64_t v57 = v31;
  uint64_t v58 = v29;
  uint64_t v59 = v27;
  double v47 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
  v47(v44, v51, v35);
  v47(v41, v52, v35);
  if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v23) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v46, v41, v35);
    double v48 = *(void (**)(char *, uint64_t))(v37 + 8);
    v48(v44, v35);
  }
  else
  {
    double v48 = *(void (**)(char *, uint64_t))(v37 + 8);
    v48(v41, v35);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v46, v44, v23);
    __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v23);
  }
  uint64_t v49 = type metadata accessor for StateCommandContextTitle();
  sub_1B61808E8(v55, (uint64_t)v46, v49);
  v48(v46, v35);
  OUTLINED_FUNCTION_73();
}

#error "1B5F17310: call analysis failed (funcsize=40)"

uint64_t sub_1B5F17540(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StateCommandTitle();
  return sub_1B61ADDD4(a1, v2);
}

uint64_t sub_1B5F17598(uint64_t a1)
{
  return sub_1B5F17540(a1);
}

uint64_t MenuItem.init(provider:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B5E30E70(a1, a2);
  *(unsigned char *)(a2 + 57) = 1;
  return result;
}

uint64_t destroy for MenuItem(uint64_t result)
{
  uint64_t v1 = result;
  switch(*(unsigned char *)(result + 57))
  {
    case 0:
      return swift_release();
    case 1:
    case 3:
      goto LABEL_2;
    case 2:
      int v2 = *(unsigned __int8 *)(result + 56);
      if (v2 == 2)
      {
        swift_bridgeObjectRelease();
        uint64_t result = v1 + 16;
LABEL_2:
        return __swift_destroy_boxed_opaque_existential_1(result);
      }
      else
      {
        if (v2 == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B5E54A34(*(id *)(v1 + 32), *(unsigned char *)(v1 + 40));
        }
        else
        {
          if (*(unsigned char *)(result + 56)) {
            return result;
          }

          swift_bridgeObjectRelease();
        }
        return swift_bridgeObjectRelease();
      }
    default:
      return result;
  }
}

uint64_t initializeWithCopy for MenuItem(uint64_t a1, uint64_t a2)
{
  switch(*(unsigned char *)(a2 + 57))
  {
    case 1:
      long long v4 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
      char v5 = 1;
      goto LABEL_12;
    case 2:
      int v6 = *(unsigned __int8 *)(a2 + 56);
      if (v6 == 2)
      {
        uint64_t v12 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v12;
        uint64_t v13 = a2 + 16;
        long long v14 = *(_OWORD *)(a2 + 40);
        *(_OWORD *)(a1 + 40) = v14;
        uint64_t v15 = v14;
        uint64_t v16 = **(void (***)(uint64_t, uint64_t, uint64_t))(v14 - 8);
        sub_1B61B1F70();
        v16(a1 + 16, v13, v15);
        *(unsigned char *)(a1 + 56) = 2;
      }
      else
      {
        if (v6 == 1)
        {
          uint64_t v7 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v7;
          uint64_t v8 = *(void *)(a2 + 24);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = v8;
          uint64_t v9 = *(void **)(a2 + 32);
          unsigned __int8 v10 = *(unsigned char *)(a2 + 40);
          sub_1B61B1F70();
          sub_1B61B1F70();
          sub_1B5E5496C(v9, v10);
          *(void *)(a1 + 32) = v9;
          *(unsigned char *)(a1 + 40) = v10;
          *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(unsigned char *)(a1 + 56) = 1;
        }
        else
        {
          uint64_t v17 = *(void **)a2;
          uint64_t v18 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v18;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(unsigned char *)(a1 + 56) = 0;
          id v19 = v17;
          sub_1B61B1F70();
        }
        sub_1B61B1F70();
      }
      char v5 = 2;
      goto LABEL_12;
    case 3:
      long long v11 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v11;
      (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1, a2);
      char v5 = 3;
LABEL_12:
      *(unsigned char *)(a1 + 57) = v5;
      break;
    default:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 57) = 0;
      swift_retain();
      break;
  }
  return a1;
}

uint64_t assignWithCopy for MenuItem(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1B5F17B54(a1);
    switch(*(unsigned char *)(a2 + 57))
    {
      case 1:
        uint64_t v4 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v4;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
        char v5 = 1;
        goto LABEL_13;
      case 2:
        int v6 = *(unsigned __int8 *)(a2 + 56);
        if (v6 == 2)
        {
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          uint64_t v10 = a2 + 16;
          uint64_t v11 = *(void *)(a2 + 40);
          *(void *)(a1 + 40) = v11;
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          uint64_t v12 = **(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
          sub_1B61B1F70();
          v12(a1 + 16, v10, v11);
          *(unsigned char *)(a1 + 56) = 2;
        }
        else
        {
          if (v6 == 1)
          {
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(void *)(a1 + 24) = *(void *)(a2 + 24);
            uint64_t v7 = *(void **)(a2 + 32);
            unsigned __int8 v8 = *(unsigned char *)(a2 + 40);
            sub_1B61B1F70();
            sub_1B61B1F70();
            sub_1B5E5496C(v7, v8);
            *(void *)(a1 + 32) = v7;
            *(unsigned char *)(a1 + 40) = v8;
            *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
            *(void *)(a1 + 48) = *(void *)(a2 + 48);
            *(unsigned char *)(a1 + 56) = 1;
          }
          else
          {
            uint64_t v13 = *(void **)a2;
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(unsigned char *)(a1 + 56) = 0;
            id v14 = v13;
            sub_1B61B1F70();
          }
          sub_1B61B1F70();
        }
        char v5 = 2;
        goto LABEL_13;
      case 3:
        uint64_t v9 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v9;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1, a2);
        char v5 = 3;
LABEL_13:
        *(unsigned char *)(a1 + 57) = v5;
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 57) = 0;
        swift_retain();
        break;
    }
  }
  return a1;
}

uint64_t sub_1B5F17B54(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy58_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

_OWORD *assignWithTake for MenuItem(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_1B5F17B54((uint64_t)a1);
    long long v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    a1[2] = a2[2];
    *(_OWORD *)((char *)a1 + 42) = *(_OWORD *)((char *)a2 + 42);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for MenuItem(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFD && *(unsigned char *)(a1 + 58))
    {
      int v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 57);
      if (v3 <= 3) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MenuItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 58) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 58) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 57) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MenuItem()
{
  return &type metadata for MenuItem;
}

uint64_t dispatch thunk of Debuggable.export.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for DebugExport()
{
  return &type metadata for DebugExport;
}

uint64_t dispatch thunk of ViewControllerBackable.backingViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ViewControllerBackable.onRecycle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t BlueprintLayoutProviderType.layoutBlueprint.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 48))();
  sub_1B61B0430();
  return swift_release();
}

uint64_t BlueprintLayoutProvider.layoutViewStateCollection.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  a1[3] = type metadata accessor for BlueprintLayout();
  a1[4] = (uint64_t)&protocol witness table for BlueprintLayout<A, B>;
  *a1 = swift_allocObject();
  uint64_t WitnessTable = swift_getWitnessTable();
  return BlueprintLayoutProviderType.layoutBlueprint.getter(v3, WitnessTable);
}

uint64_t sub_1B5F17E28()
{
  sub_1B5E5F620(*(void *)(v0 + 248), *(void *)(v0 + 256), *(unsigned char *)(v0 + 264));
  sub_1B5E5F620(*(void *)(v0 + 272), *(void *)(v0 + 280), *(unsigned char *)(v0 + 288));
  sub_1B5E5F620(*(void *)(v0 + 296), *(void *)(v0 + 304), *(unsigned char *)(v0 + 312));
  if (*(void *)(v0 + 568)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 544);
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t BlueprintLayoutProvider.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  BlueprintLayoutProvider.init()();
  return v0;
}

void *BlueprintLayoutProvider.init()()
{
  uint64_t v1 = *(void *)(*v0 + 88);
  uint64_t v2 = *(void *)(*v0 + 96);
  uint64_t v3 = *(void *)(*v0 + 104);
  v7[0] = *(void *)(*v0 + 80);
  v7[1] = v1;
  v7[2] = v2;
  v7[3] = v3;
  type metadata accessor for BlueprintLayout();
  sub_1B61B0470();
  if (qword_1EB648CE8 != -1) {
    swift_once();
  }
  memcpy(__dst, &word_1EB644200, 0x20DuLL);
  memcpy(__src, &word_1EB644200, 0x20DuLL);
  sub_1B5E62D40((uint64_t)__dst);
  uint64_t v4 = sub_1B5F1804C();
  BlueprintLayout.init(layoutOptions:sections:)(__src, v4, (uint64_t)v7);
  v0[2] = sub_1B61B0410();
  return v0;
}

uint64_t sub_1B5F1804C()
{
  return sub_1B61B2590();
}

uint64_t BlueprintLayoutProvider.observableLayoutBlueprint.getter()
{
  return swift_retain();
}

uint64_t BlueprintLayoutProvider.deinit()
{
  swift_release();
  return v0;
}

uint64_t BlueprintLayoutProvider.__deallocating_deinit()
{
  BlueprintLayoutProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B5F180E4()
{
  return BlueprintLayoutProvider.observableLayoutBlueprint.getter();
}

uint64_t sub_1B5F18108@<X0>(uint64_t *a1@<X8>)
{
  return BlueprintLayoutProvider.layoutViewStateCollection.getter(a1);
}

uint64_t sub_1B5F1812C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 96);
}

uint64_t sub_1B5F18134(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 104);
}

uint64_t dispatch thunk of BlueprintLayoutProviderType.observableLayoutBlueprint.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1B5F18150()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for BlueprintLayoutProvider()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for BlueprintLayoutProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BlueprintLayoutProvider);
}

uint64_t dispatch thunk of BlueprintLayoutProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1B5F181DC()
{
  sub_1B5E4CDAC();
  OUTLINED_FUNCTION_0_57();
  uint64_t result = sub_1B61B2F50();
  qword_1EB654AE8 = result;
  return result;
}

uint64_t sub_1B5F1822C()
{
  sub_1B5E4CDAC();
  OUTLINED_FUNCTION_0_57();
  uint64_t result = sub_1B61B2F50();
  qword_1EB654B70 = result;
  return result;
}

uint64_t sub_1B5F1827C()
{
  sub_1B5E4CDAC();
  OUTLINED_FUNCTION_0_57();
  uint64_t result = sub_1B61B2F50();
  qword_1EB654BE8 = result;
  return result;
}

uint64_t sub_1B5F182C8()
{
  sub_1B5E4CDAC();
  OUTLINED_FUNCTION_1_60();
  uint64_t result = sub_1B61B2F50();
  qword_1EB654B48 = result;
  return result;
}

uint64_t sub_1B5F18314()
{
  sub_1B5E4CDAC();
  OUTLINED_FUNCTION_1_60();
  uint64_t result = sub_1B61B2F50();
  qword_1EB654AA8 = result;
  return result;
}

uint64_t sub_1B5F1835C()
{
  sub_1B5E4CDAC();
  OUTLINED_FUNCTION_0_57();
  uint64_t result = sub_1B61B2F50();
  qword_1E9DC79F0 = result;
  return result;
}

uint64_t sub_1B5F183AC()
{
  sub_1B5E4CDAC();
  OUTLINED_FUNCTION_0_57();
  uint64_t result = sub_1B61B2F50();
  qword_1EB654B40 = result;
  return result;
}

uint64_t sub_1B5F183FC()
{
  sub_1B5E4CDAC();
  OUTLINED_FUNCTION_0_57();
  uint64_t result = sub_1B61B2F50();
  qword_1EB654B30 = result;
  return result;
}

uint64_t sub_1B5F18444()
{
  sub_1B5E4CDAC();
  OUTLINED_FUNCTION_0_57();
  uint64_t result = sub_1B61B2F50();
  qword_1E9DC79F8 = result;
  return result;
}

uint64_t sub_1B5F1848C()
{
  sub_1B5E4CDAC();
  OUTLINED_FUNCTION_0_57();
  uint64_t result = sub_1B61B2F50();
  qword_1EB654AB0 = result;
  return result;
}

uint64_t sub_1B5F184E0(uint64_t a1)
{
  return sub_1B5F18664(a1, qword_1E9DAA230);
}

uint64_t static Logger.commands.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B5F185A4(&qword_1E9DA7EC8, (uint64_t)qword_1E9DAA230, a1);
}

uint64_t sub_1B5F18524(uint64_t a1)
{
  return sub_1B5F18664(a1, qword_1EB654B90);
}

uint64_t sub_1B5F18548(uint64_t a1)
{
  return sub_1B5F18664(a1, qword_1EB654AF0);
}

uint64_t sub_1B5F18568(uint64_t a1)
{
  return sub_1B5F18664(a1, qword_1EB64B750);
}

uint64_t static Logger.tips.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B5F185A4(&qword_1EB64B770, (uint64_t)qword_1EB64B750, a1);
}

uint64_t sub_1B5F185A4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1B61B1020();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t sub_1B5F1863C(uint64_t a1)
{
  return sub_1B5F18664(a1, qword_1EB654BC8);
}

uint64_t sub_1B5F18664(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1B61B1020();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  OUTLINED_FUNCTION_0_57();
  return sub_1B61B1010();
}

uint64_t sub_1B5F186C8()
{
  sub_1B5F19178();
  swift_allocObject();
  uint64_t result = sub_1B61B06A0();
  qword_1E9DAA248 = result;
  return result;
}

uint64_t UICollectionViewListCell.ts_image(from:with:completion:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  uint64_t v11 = (void *)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  uint64_t v12 = qword_1E9DA7ED0;
  id v13 = v11;
  if (v12 != -1) {
    swift_once();
  }
  swift_unknownObjectRetain();
  sub_1B61B06D0();
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v5;
  void v16[3] = v13;
  v16[4] = a3;
  v16[5] = a4;
  uint64_t v17 = *(void (**)(void *, uint64_t (*)(void *, uint64_t), void *, uint64_t, uint64_t))(v15 + 8);
  id v18 = v13;
  id v19 = v5;
  swift_retain();
  v17(a2, sub_1B5F18BE4, v16, v14, v15);

  return swift_release();
}

uint64_t sub_1B5F18894(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v23 = a5;
  uint64_t v9 = sub_1B61B1D90();
  uint64_t v25 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1B61B1DF0();
  uint64_t v12 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB64CA90);
  uint64_t v15 = (void *)sub_1B61B2C50();
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v17 = (void *)swift_allocObject();
  id v17[2] = v16;
  v17[3] = a4;
  v17[4] = v23;
  v17[5] = a6;
  v17[6] = a1;
  aBlock[4] = sub_1B5F19168;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B5E3729C;
  aBlock[3] = &block_descriptor_24;
  id v18 = _Block_copy(aBlock);
  id v19 = a1;
  id v20 = a4;
  swift_retain();
  swift_release();
  sub_1B61B1DB0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1B5E5C57C();
  sub_1B5F18FB4(0, (unint64_t *)&qword_1EB647AD8, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1B5E5C5CC();
  sub_1B61B3100();
  MEMORY[0x1BA9AFE10](0, v14, v11, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v24);
}

uint64_t sub_1B5F18B9C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5F18BE4(void *a1, uint64_t a2)
{
  return sub_1B5F18894(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

void sub_1B5F18BF0(uint64_t a1, void *a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v8 = a1 + 16;
  swift_beginAccess();
  uint64_t v9 = MEMORY[0x1BA9B1EC0](v8);
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    if (qword_1E9DA7ED0 != -1) {
      swift_once();
    }
    uint64_t v11 = (void *)sub_1B61B06C0();

    if (v11)
    {
      sub_1B5DFF760(0, &qword_1EB648F40);
      id v12 = a2;
      id v13 = v11;
      char v14 = sub_1B61B2E10();

      if (v14) {
        a3(a5);
      }
    }
  }
}

Swift::Void __swiftcall UICollectionViewListCell.ts_clearImage()()
{
  sub_1B5F18FB4(0, &qword_1E9DAA250, MEMORY[0x1E4FB0F90], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v11[-1] - v1;
  uint64_t v3 = sub_1B61B1130();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v11[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1BA9AFE60](v11, v5);
  if (v12)
  {
    sub_1B5F19018();
    int v8 = swift_dynamicCast();
    __swift_storeEnumTagSinglePayload((uint64_t)v2, v8 ^ 1u, 1, v3);
    if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v3) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v2, v3);
      sub_1B61B1120();
      uint64_t v12 = v3;
      uint64_t v13 = MEMORY[0x1E4FB0F88];
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v11);
      (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 16))(boxed_opaque_existential_0, v7, v3);
      MEMORY[0x1BA9AFE70](v11);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      goto LABEL_6;
    }
  }
  else
  {
    sub_1B5F19070((uint64_t)v11, &qword_1E9DAA258, (uint64_t (*)(uint64_t))sub_1B5F19018);
    __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v3);
  }
  sub_1B5F19070((uint64_t)v2, &qword_1E9DAA250, MEMORY[0x1E4FB0F90]);
LABEL_6:
  if (qword_1E9DA7ED0 != -1) {
    swift_once();
  }
  swift_unknownObjectRetain();
  sub_1B61B06D0();
}

void sub_1B5F18FB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1B5F19018()
{
  unint64_t result = qword_1E9DAA260[0];
  if (!qword_1E9DAA260[0])
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, qword_1E9DAA260);
  }
  return result;
}

uint64_t sub_1B5F19070(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1B5F18FB4(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1B5F190E0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B5F19118()
{
  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1B5F19168()
{
  sub_1B5F18BF0(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

void sub_1B5F19178()
{
  if (!qword_1EB63FA00)
  {
    sub_1B5DFF760(255, &qword_1EB648F40);
    unint64_t v0 = sub_1B61B06B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB63FA00);
    }
  }
}

uint64_t LayeredViewProvider.__allocating_init(layerViewProvider:)()
{
  uint64_t v0 = swift_allocObject();
  LayeredViewProvider.init(layerViewProvider:)();
  return v0;
}

uint64_t LayeredViewProvider.init(layerViewProvider:)()
{
  OUTLINED_FUNCTION_1_6();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v2 + 88) - 8) + 32))(v0 + *(void *)(v1 + 112));
  return v0;
}

uint64_t LayeredViewProvider.view(for:)(uint64_t a1)
{
  uint64_t v19 = a1;
  OUTLINED_FUNCTION_1_6();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v21 = *(void *)(v3 + 64);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  id v20 = (char *)&v18 - v6;
  uint64_t v22 = v2;
  uint64_t v23 = v7[11];
  uint64_t v8 = v23;
  uint64_t v24 = v7[12];
  uint64_t v9 = v24;
  uint64_t v25 = v7[13];
  uint64_t v10 = v25;
  uint64_t v26 = v5;
  swift_getAssociatedTypeWitness();
  sub_1B61B2650();
  sub_1B61B0E80();
  uint64_t v11 = (void *)sub_1B61B01B0();
  swift_getAssociatedTypeWitness();
  sub_1B61B2650();
  swift_retain();
  sub_1B61B0D10();
  swift_release();

  swift_release();
  uint64_t v12 = v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v20, v19, v2);
  unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  char v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = v2;
  *((void *)v14 + 3) = v8;
  *((void *)v14 + 4) = v9;
  *((void *)v14 + 5) = v10;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v14[v13], v12, v2);
  swift_getAssociatedConformanceWitness();
  type metadata accessor for LayeredView();
  uint64_t v15 = (void *)sub_1B61B0C80();
  uint64_t v16 = sub_1B61B0D10();
  swift_release();
  swift_release();

  return v16;
}

uint64_t sub_1B5F19560()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 32) + 32))(*(void *)(v0 + 16));
}

uint64_t sub_1B5F195A4@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_1B61B2650();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = sub_1B5E37E58((void (*)(char *, uint64_t))sub_1B5F19AF4, a1, v4, AssociatedTypeWitness, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v7);
  *a2 = result;
  return result;
}

uint64_t sub_1B5F196E4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B5F195A4(v1, a1);
}

uint64_t sub_1B5F19700(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(*(void *)a2 + 104) + 40))(a1, *(void *)(*(void *)a2 + 88));
}

id sub_1B5F1977C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X4>, void *a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for LayeredView();
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  sub_1B61B1F70();
  id result = sub_1B60E4DC0();
  *a3 = result;
  return result;
}

uint64_t sub_1B5F1987C()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

id sub_1B5F19904@<X0>(void *a1@<X8>)
{
  return sub_1B5F1977C(*(void *)(v1 + 16), *(void *)(v1 + 32), a1);
}

uint64_t LayeredViewProvider.deinit()
{
  OUTLINED_FUNCTION_1_6();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v2 + 88) - 8) + 8))(v0 + *(void *)(v1 + 112));
  return v0;
}

uint64_t LayeredViewProvider.__deallocating_deinit()
{
  LayeredViewProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B5F19A1C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for LayeredViewProvider()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for LayeredViewProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LayeredViewProvider);
}

uint64_t dispatch thunk of LayeredViewProvider.__allocating_init(layerViewProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1B5F19AF4(uint64_t a1)
{
  return sub_1B5F19700(a1, v1);
}

uint64_t sub_1B5F19B14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, long long *a4@<X3>, uint64_t a5@<X8>)
{
  sub_1B61AFCB0();
  OUTLINED_FUNCTION_1_16();
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(a5, a1);
  uint64_t v8 = (int *)type metadata accessor for ContextMenuContext();
  uint64_t v9 = a5 + v8[21];
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_1_16();
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(v9, a2);
  memcpy((void *)(a5 + v8[22]), a3, 0x238uLL);
  return sub_1B5E30E70(a4, a5 + v8[23]);
}

uint64_t ContextMenuContext.indexPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1B61AFCB0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t ContextMenuContext.blueprint.getter()
{
  OUTLINED_FUNCTION_2_54();
  OUTLINED_FUNCTION_1_16();
  uint64_t v0 = OUTLINED_FUNCTION_3_48();
  return v1(v0);
}

uint64_t ContextMenuContext.layoutBlueprint.getter()
{
  type metadata accessor for BlueprintLayout();
  OUTLINED_FUNCTION_1_16();
  uint64_t v0 = OUTLINED_FUNCTION_3_48();
  return v1(v0);
}

uint64_t ContextMenuContext.rendererEnvironment.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5E176E4(v2 + *(int *)(a1 + 92), a2);
}

uint64_t sub_1B5F19D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 80);
}

uint64_t sub_1B5F19D74()
{
  uint64_t result = sub_1B61AFCB0();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Blueprint();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_1B5F19E60(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    uint64_t v16 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1B61AFCB0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[21];
    uint64_t v58 = a1;
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)((char *)a2 + v8 + 8);
    *(void *)uint64_t v9 = *(void *)((char *)a2 + v8);
    *((void *)v9 + 1) = v11;
    uint64_t v12 = (_OWORD *)((char *)a1 + v8 + 16);
    unint64_t v13 = (_OWORD *)((char *)a2 + v8 + 16);
    uint64_t v14 = *(void *)((char *)a2 + v8 + 40);
    sub_1B61B1F70();
    uint64_t v59 = a2;
    if (v14)
    {
      *((void *)v9 + 5) = v14;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v14 - 8))((uint64_t)(v9 + 16), (uint64_t)(v10 + 16), v14);
    }
    else
    {
      long long v17 = *((_OWORD *)v10 + 2);
      *uint64_t v12 = *v13;
      *((_OWORD *)v9 + 2) = v17;
    }
    uint64_t v18 = (int *)type metadata accessor for Blueprint();
    uint64_t v19 = v18[14];
    id v20 = &v9[v19];
    uint64_t v56 = &v10[v19];
    type metadata accessor for BlueprintSection();
    swift_getWitnessTable();
    swift_getWitnessTable();
    uint64_t v21 = sub_1B61B0670();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v20, v56, v21);
    uint64_t v22 = v18[15];
    uint64_t v55 = &v10[v22];
    uint64_t v57 = &v9[v22];
    type metadata accessor for BlueprintItem();
    swift_getWitnessTable();
    swift_getWitnessTable();
    swift_getWitnessTable();
    uint64_t v23 = sub_1B61B0A30();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v57, v55, v23);
    *(void *)&v9[v18[16]] = *(void *)&v10[v18[16]];
    uint64_t v24 = a3[22];
    uint64_t v16 = v58;
    uint64_t v25 = (char *)v58 + v24;
    uint64_t v26 = (char *)a2 + v24;
    *(_WORD *)uint64_t v25 = *(_WORD *)((char *)a2 + v24);
    *(_OWORD *)(v25 + 8) = *(_OWORD *)((char *)a2 + v24 + 8);
    *(_OWORD *)(v25 + 24) = *(_OWORD *)((char *)a2 + v24 + 24);
    *(_OWORD *)(v25 + 56) = *(_OWORD *)((char *)a2 + v24 + 56);
    *(_OWORD *)(v25 + 40) = *(_OWORD *)((char *)a2 + v24 + 40);
    *(_OWORD *)(v25 + 88) = *(_OWORD *)((char *)a2 + v24 + 88);
    *(_OWORD *)(v25 + 72) = *(_OWORD *)((char *)a2 + v24 + 72);
    *((void *)v25 + 13) = *(void *)((char *)a2 + v24 + 104);
    *((_OWORD *)v25 + 7) = *(_OWORD *)((char *)a2 + v24 + 112);
    uint64_t v27 = *(void **)((char *)a2 + v24 + 128);
    uint64_t v28 = *(void **)((char *)a2 + v24 + 136);
    *((void *)v25 + 16) = v27;
    *((void *)v25 + 17) = v28;
    uint64_t v29 = *(void **)((char *)a2 + v24 + 152);
    *((void *)v25 + 18) = *(void *)((char *)a2 + v24 + 144);
    *((void *)v25 + 19) = v29;
    long long v30 = *(_OWORD *)((char *)a2 + v24 + 176);
    *((_OWORD *)v25 + 10) = *(_OWORD *)((char *)a2 + v24 + 160);
    *((_OWORD *)v25 + 11) = v30;
    long long v31 = *(_OWORD *)((char *)a2 + v24 + 208);
    *((_OWORD *)v25 + 12) = *(_OWORD *)((char *)a2 + v24 + 192);
    *((_OWORD *)v25 + 13) = v31;
    uint64_t v32 = *(void *)((char *)a2 + v24 + 232);
    *((void *)v25 + 28) = *(void *)((char *)a2 + v24 + 224);
    uint64_t v33 = *(void *)((char *)a2 + v24 + 240);
    LOBYTE(v18) = *((unsigned char *)v59 + v24 + 248);
    swift_retain();
    id v34 = v27;
    id v35 = v28;
    id v36 = v29;
    sub_1B5E62DEC(v32, v33, (char)v18);
    *((void *)v25 + 29) = v32;
    *((void *)v25 + 30) = v33;
    v25[248] = (char)v18;
    uint64_t v37 = *((void *)v26 + 32);
    uint64_t v38 = *((void *)v26 + 33);
    LOBYTE(v18) = v26[272];
    sub_1B5E62DEC(v37, v38, (char)v18);
    *((void *)v25 + 32) = v37;
    *((void *)v25 + 33) = v38;
    v25[272] = (char)v18;
    uint64_t v39 = *((void *)v26 + 35);
    uint64_t v40 = *((void *)v26 + 36);
    LOBYTE(v18) = v26[296];
    sub_1B5E62DEC(v39, v40, (char)v18);
    *((void *)v25 + 35) = v39;
    *((void *)v25 + 36) = v40;
    v25[296] = (char)v18;
    long long v41 = *((_OWORD *)v26 + 20);
    *((_OWORD *)v25 + 19) = *((_OWORD *)v26 + 19);
    *((_OWORD *)v25 + 20) = v41;
    uint64_t v42 = *((void *)v26 + 43);
    *((void *)v25 + 42) = *((void *)v26 + 42);
    *((void *)v25 + 43) = v42;
    *((_WORD *)v25 + 176) = *((_WORD *)v26 + 176);
    long long v43 = *(_OWORD *)(v26 + 376);
    *(_OWORD *)(v25 + 360) = *(_OWORD *)(v26 + 360);
    *(_OWORD *)(v25 + 376) = v43;
    memcpy(v25 + 392, v26 + 392, 0x86uLL);
    uint64_t v44 = v25 + 528;
    uint64_t v45 = v26 + 528;
    uint64_t v46 = *((void *)v26 + 69);
    if (v46)
    {
      *((void *)v25 + 69) = v46;
      (**(void (***)(_OWORD *, _OWORD *))(v46 - 8))(v44, v45);
    }
    else
    {
      long long v47 = *((_OWORD *)v26 + 34);
      *uint64_t v44 = *v45;
      *((_OWORD *)v25 + 34) = v47;
    }
    *((void *)v25 + 70) = *((void *)v26 + 70);
    uint64_t v48 = a3[23];
    uint64_t v49 = (char *)v58 + v48;
    uint64_t v50 = (char *)v59 + v48;
    long long v51 = *(_OWORD *)((char *)v59 + v48 + 24);
    *(_OWORD *)((char *)v58 + v48 + 24) = v51;
    uint64_t v52 = v51;
    uint64_t v53 = **(void (***)(char *, char *, uint64_t))(v51 - 8);
    sub_1B61B1F70();
    v53(v49, v50, v52);
  }
  return v16;
}

uint64_t sub_1B5F1A330(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1B61AFCB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v13 = a1;
  uint64_t v5 = a1 + a2[21];
  swift_bridgeObjectRelease();
  if (*(void *)(v5 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(v5 + 16);
  }
  uint64_t v6 = type metadata accessor for Blueprint();
  uint64_t v7 = v5 + *(int *)(v6 + 56);
  type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v8 = sub_1B61B0670();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v5 + *(int *)(v6 + 60);
  type metadata accessor for BlueprintItem();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v10 = sub_1B61B0A30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();
  uint64_t v11 = v13 + a2[22];

  sub_1B5E5F620(*(void *)(v11 + 232), *(void *)(v11 + 240), *(unsigned char *)(v11 + 248));
  sub_1B5E5F620(*(void *)(v11 + 256), *(void *)(v11 + 264), *(unsigned char *)(v11 + 272));
  sub_1B5E5F620(*(void *)(v11 + 280), *(void *)(v11 + 288), *(unsigned char *)(v11 + 296));
  if (*(void *)(v11 + 552)) {
    __swift_destroy_boxed_opaque_existential_1(v11 + 528);
  }
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(v13 + a2[23]);
}

uint64_t sub_1B5F1A5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B61AFCB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v56 = a1;
  uint64_t v57 = a3;
  uint64_t v7 = *(int *)(a3 + 84);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  uint64_t v11 = (_OWORD *)(a1 + v7 + 16);
  uint64_t v12 = (_OWORD *)(a2 + v7 + 16);
  uint64_t v13 = *(void *)(a2 + v7 + 40);
  sub_1B61B1F70();
  uint64_t v55 = a2;
  if (v13)
  {
    *(void *)(v8 + 40) = v13;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8))(v8 + 16, v9 + 16, v13);
  }
  else
  {
    long long v14 = *(_OWORD *)(v9 + 32);
    *uint64_t v11 = *v12;
    *(_OWORD *)(v8 + 32) = v14;
  }
  uint64_t v15 = (int *)type metadata accessor for Blueprint();
  uint64_t v16 = v15[14];
  uint64_t v17 = v8 + v16;
  uint64_t v53 = v9 + v16;
  type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v18 = sub_1B61B0670();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v17, v53, v18);
  uint64_t v19 = v15[15];
  uint64_t v52 = v9 + v19;
  uint64_t v54 = v8 + v19;
  type metadata accessor for BlueprintItem();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v20 = sub_1B61B0A30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v54, v52, v20);
  *(void *)(v8 + v15[16]) = *(void *)(v9 + v15[16]);
  uint64_t v21 = *(int *)(v57 + 88);
  uint64_t v22 = v56 + v21;
  uint64_t v23 = a2 + v21;
  *(_WORD *)uint64_t v22 = *(_WORD *)(a2 + v21);
  *(_OWORD *)(v22 + 8) = *(_OWORD *)(a2 + v21 + 8);
  *(_OWORD *)(v22 + 24) = *(_OWORD *)(a2 + v21 + 24);
  *(_OWORD *)(v22 + 56) = *(_OWORD *)(a2 + v21 + 56);
  *(_OWORD *)(v22 + 40) = *(_OWORD *)(a2 + v21 + 40);
  *(_OWORD *)(v22 + 88) = *(_OWORD *)(a2 + v21 + 88);
  *(_OWORD *)(v22 + 72) = *(_OWORD *)(a2 + v21 + 72);
  *(void *)(v22 + 104) = *(void *)(a2 + v21 + 104);
  *(_OWORD *)(v22 + 112) = *(_OWORD *)(a2 + v21 + 112);
  uint64_t v24 = *(void **)(a2 + v21 + 128);
  uint64_t v25 = *(void **)(a2 + v21 + 136);
  *(void *)(v22 + 128) = v24;
  *(void *)(v22 + 136) = v25;
  uint64_t v26 = *(void **)(a2 + v21 + 152);
  *(void *)(v22 + 144) = *(void *)(a2 + v21 + 144);
  *(void *)(v22 + 152) = v26;
  long long v27 = *(_OWORD *)(a2 + v21 + 176);
  *(_OWORD *)(v22 + 160) = *(_OWORD *)(a2 + v21 + 160);
  *(_OWORD *)(v22 + 176) = v27;
  long long v28 = *(_OWORD *)(a2 + v21 + 208);
  *(_OWORD *)(v22 + 192) = *(_OWORD *)(a2 + v21 + 192);
  *(_OWORD *)(v22 + 208) = v28;
  uint64_t v29 = *(void *)(a2 + v21 + 232);
  *(void *)(v22 + 224) = *(void *)(a2 + v21 + 224);
  uint64_t v30 = *(void *)(a2 + v21 + 240);
  LOBYTE(v15) = *(unsigned char *)(v55 + v21 + 248);
  swift_retain();
  id v31 = v24;
  id v32 = v25;
  id v33 = v26;
  sub_1B5E62DEC(v29, v30, (char)v15);
  *(void *)(v22 + 232) = v29;
  *(void *)(v22 + 240) = v30;
  *(unsigned char *)(v22 + 248) = (_BYTE)v15;
  uint64_t v34 = *(void *)(v23 + 256);
  uint64_t v35 = *(void *)(v23 + 264);
  LOBYTE(v15) = *(unsigned char *)(v23 + 272);
  sub_1B5E62DEC(v34, v35, (char)v15);
  *(void *)(v22 + 256) = v34;
  *(void *)(v22 + 264) = v35;
  *(unsigned char *)(v22 + 272) = (_BYTE)v15;
  uint64_t v36 = *(void *)(v23 + 280);
  uint64_t v37 = *(void *)(v23 + 288);
  LOBYTE(v15) = *(unsigned char *)(v23 + 296);
  sub_1B5E62DEC(v36, v37, (char)v15);
  *(void *)(v22 + 280) = v36;
  *(void *)(v22 + 288) = v37;
  *(unsigned char *)(v22 + 296) = (_BYTE)v15;
  long long v38 = *(_OWORD *)(v23 + 320);
  *(_OWORD *)(v22 + 304) = *(_OWORD *)(v23 + 304);
  *(_OWORD *)(v22 + 320) = v38;
  uint64_t v39 = *(void *)(v23 + 344);
  *(void *)(v22 + 336) = *(void *)(v23 + 336);
  *(void *)(v22 + 344) = v39;
  *(_WORD *)(v22 + 352) = *(_WORD *)(v23 + 352);
  long long v40 = *(_OWORD *)(v23 + 376);
  *(_OWORD *)(v22 + 360) = *(_OWORD *)(v23 + 360);
  *(_OWORD *)(v22 + 376) = v40;
  memcpy((void *)(v22 + 392), (const void *)(v23 + 392), 0x86uLL);
  long long v41 = (_OWORD *)(v22 + 528);
  uint64_t v42 = (_OWORD *)(v23 + 528);
  uint64_t v43 = *(void *)(v23 + 552);
  if (v43)
  {
    *(void *)(v22 + 552) = v43;
    (**(void (***)(_OWORD *, _OWORD *))(v43 - 8))(v41, v42);
  }
  else
  {
    long long v44 = *(_OWORD *)(v23 + 544);
    *long long v41 = *v42;
    *(_OWORD *)(v22 + 544) = v44;
  }
  *(void *)(v22 + 560) = *(void *)(v23 + 560);
  uint64_t v45 = *(int *)(v57 + 92);
  uint64_t v46 = v56 + v45;
  uint64_t v47 = v55 + v45;
  long long v48 = *(_OWORD *)(v55 + v45 + 24);
  *(_OWORD *)(v56 + v45 + 24) = v48;
  uint64_t v49 = v48;
  uint64_t v50 = **(void (***)(uint64_t, uint64_t, uint64_t))(v48 - 8);
  sub_1B61B1F70();
  v50(v46, v47, v49);
  return v56;
}

uint64_t sub_1B5F1AA5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1B61AFCB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[21];
  uint64_t v8 = a1 + v7;
  uint64_t v52 = a2;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v9 + 40);
  uint64_t v53 = a1;
  if (*(void *)(v8 + 40))
  {
    if (v10)
    {
      __swift_assign_boxed_opaque_existential_0((uint64_t *)(v8 + 16), (uint64_t *)(v9 + 16));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(v8 + 16);
  }
  else if (v10)
  {
    *(void *)(v8 + 40) = v10;
    (**(void (***)(uint64_t, uint64_t))(v10 - 8))(v8 + 16, v9 + 16);
    goto LABEL_8;
  }
  long long v11 = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(v9 + 16);
  *(_OWORD *)(v8 + 32) = v11;
LABEL_8:
  uint64_t v12 = (int *)type metadata accessor for Blueprint();
  uint64_t v13 = v12[14];
  uint64_t v14 = v8 + v13;
  uint64_t v15 = v9 + v13;
  type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v16 = sub_1B61B0670();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = v12[15];
  uint64_t v51 = v8 + v17;
  uint64_t v18 = v9 + v17;
  type metadata accessor for BlueprintItem();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v19 = sub_1B61B0A30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v51, v18, v19);
  *(void *)(v8 + v12[16]) = *(void *)(v9 + v12[16]);
  swift_retain();
  swift_release();
  uint64_t v20 = a3[22];
  uint64_t v21 = v53 + v20;
  uint64_t v22 = a2 + v20;
  *(unsigned char *)uint64_t v21 = *(unsigned char *)(a2 + v20);
  *(unsigned char *)(v21 + 1) = *(unsigned char *)(a2 + v20 + 1);
  *(void *)(v21 + 8) = *(void *)(a2 + v20 + 8);
  *(void *)(v21 + 16) = *(void *)(a2 + v20 + 16);
  *(void *)(v21 + 24) = *(void *)(a2 + v20 + 24);
  *(void *)(v21 + 32) = *(void *)(a2 + v20 + 32);
  *(void *)(v21 + 40) = *(void *)(a2 + v20 + 40);
  *(void *)(v21 + 48) = *(void *)(a2 + v20 + 48);
  *(void *)(v21 + 56) = *(void *)(a2 + v20 + 56);
  *(void *)(v21 + 64) = *(void *)(a2 + v20 + 64);
  *(void *)(v21 + 72) = *(void *)(a2 + v20 + 72);
  *(void *)(v21 + 80) = *(void *)(a2 + v20 + 80);
  *(void *)(v21 + 88) = *(void *)(a2 + v20 + 88);
  *(void *)(v21 + 96) = *(void *)(a2 + v20 + 96);
  *(void *)(v21 + 104) = *(void *)(a2 + v20 + 104);
  *(void *)(v21 + 112) = *(void *)(a2 + v20 + 112);
  *(void *)(v21 + 120) = *(void *)(a2 + v20 + 120);
  uint64_t v23 = *(void **)(a2 + v20 + 128);
  uint64_t v24 = *(void **)(v21 + 128);
  *(void *)(v21 + 128) = v23;
  id v25 = v23;

  uint64_t v26 = *(void **)(v22 + 136);
  long long v27 = *(void **)(v21 + 136);
  *(void *)(v21 + 136) = v26;
  id v28 = v26;

  *(void *)(v21 + 144) = *(void *)(v22 + 144);
  uint64_t v29 = *(void **)(v22 + 152);
  uint64_t v30 = *(void **)(v21 + 152);
  *(void *)(v21 + 152) = v29;
  id v31 = v29;

  *(void *)(v21 + 160) = *(void *)(v22 + 160);
  *(void *)(v21 + 168) = *(void *)(v22 + 168);
  *(void *)(v21 + 176) = *(void *)(v22 + 176);
  *(void *)(v21 + 184) = *(void *)(v22 + 184);
  *(void *)(v21 + 192) = *(void *)(v22 + 192);
  *(void *)(v21 + 200) = *(void *)(v22 + 200);
  *(void *)(v21 + 208) = *(void *)(v22 + 208);
  *(void *)(v21 + 216) = *(void *)(v22 + 216);
  *(void *)(v21 + 224) = *(void *)(v22 + 224);
  uint64_t v32 = *(void *)(v22 + 232);
  uint64_t v33 = *(void *)(v22 + 240);
  LOBYTE(v12) = *(unsigned char *)(v22 + 248);
  sub_1B5E62DEC(v32, v33, (char)v12);
  uint64_t v34 = *(void *)(v21 + 232);
  uint64_t v35 = *(void *)(v21 + 240);
  *(void *)(v21 + 232) = v32;
  *(void *)(v21 + 240) = v33;
  char v36 = *(unsigned char *)(v21 + 248);
  *(unsigned char *)(v21 + 248) = (_BYTE)v12;
  sub_1B5E5F620(v34, v35, v36);
  uint64_t v37 = *(void *)(v22 + 256);
  uint64_t v38 = *(void *)(v22 + 264);
  LOBYTE(v12) = *(unsigned char *)(v22 + 272);
  sub_1B5E62DEC(v37, v38, (char)v12);
  uint64_t v39 = *(void *)(v21 + 256);
  uint64_t v40 = *(void *)(v21 + 264);
  *(void *)(v21 + 256) = v37;
  *(void *)(v21 + 264) = v38;
  char v41 = *(unsigned char *)(v21 + 272);
  *(unsigned char *)(v21 + 272) = (_BYTE)v12;
  sub_1B5E5F620(v39, v40, v41);
  uint64_t v42 = *(void *)(v22 + 280);
  uint64_t v43 = *(void *)(v22 + 288);
  LOBYTE(v12) = *(unsigned char *)(v22 + 296);
  sub_1B5E62DEC(v42, v43, (char)v12);
  uint64_t v44 = *(void *)(v21 + 280);
  uint64_t v45 = *(void *)(v21 + 288);
  *(void *)(v21 + 280) = v42;
  *(void *)(v21 + 288) = v43;
  char v46 = *(unsigned char *)(v21 + 296);
  *(unsigned char *)(v21 + 296) = (_BYTE)v12;
  sub_1B5E5F620(v44, v45, v46);
  *(void *)(v21 + 304) = *(void *)(v22 + 304);
  *(void *)(v21 + 312) = *(void *)(v22 + 312);
  *(void *)(v21 + 320) = *(void *)(v22 + 320);
  *(void *)(v21 + 328) = *(void *)(v22 + 328);
  *(void *)(v21 + 336) = *(void *)(v22 + 336);
  uint64_t v47 = *(void *)(v22 + 344);
  *(unsigned char *)(v21 + 352) = *(unsigned char *)(v22 + 352);
  *(void *)(v21 + 344) = v47;
  *(unsigned char *)(v21 + 353) = *(unsigned char *)(v22 + 353);
  *(void *)(v21 + 360) = *(void *)(v22 + 360);
  *(void *)(v21 + 368) = *(void *)(v22 + 368);
  *(void *)(v21 + 376) = *(void *)(v22 + 376);
  *(void *)(v21 + 384) = *(void *)(v22 + 384);
  *(void *)(v21 + 392) = *(void *)(v22 + 392);
  *(void *)(v21 + 400) = *(void *)(v22 + 400);
  *(void *)(v21 + 408) = *(void *)(v22 + 408);
  *(void *)(v21 + 416) = *(void *)(v22 + 416);
  *(void *)(v21 + 424) = *(void *)(v22 + 424);
  *(void *)(v21 + 432) = *(void *)(v22 + 432);
  *(void *)(v21 + 440) = *(void *)(v22 + 440);
  *(void *)(v21 + 448) = *(void *)(v22 + 448);
  *(void *)(v21 + 456) = *(void *)(v22 + 456);
  *(void *)(v21 + 464) = *(void *)(v22 + 464);
  *(void *)(v21 + 472) = *(void *)(v22 + 472);
  *(void *)(v21 + 480) = *(void *)(v22 + 480);
  *(void *)(v21 + 488) = *(void *)(v22 + 488);
  *(void *)(v21 + 496) = *(void *)(v22 + 496);
  *(void *)(v21 + 504) = *(void *)(v22 + 504);
  *(void *)(v21 + 512) = *(void *)(v22 + 512);
  *(unsigned char *)(v21 + 520) = *(unsigned char *)(v22 + 520);
  *(unsigned char *)(v21 + 521) = *(unsigned char *)(v22 + 521);
  *(unsigned char *)(v21 + 522) = *(unsigned char *)(v22 + 522);
  *(unsigned char *)(v21 + 523) = *(unsigned char *)(v22 + 523);
  *(unsigned char *)(v21 + 524) = *(unsigned char *)(v22 + 524);
  *(unsigned char *)(v21 + 525) = *(unsigned char *)(v22 + 525);
  uint64_t v48 = *(void *)(v22 + 552);
  if (!*(void *)(v21 + 552))
  {
    if (v48)
    {
      *(void *)(v21 + 552) = v48;
      (**(void (***)(uint64_t, uint64_t))(v48 - 8))(v21 + 528, v22 + 528);
      goto LABEL_15;
    }
LABEL_14:
    long long v49 = *(_OWORD *)(v22 + 544);
    *(_OWORD *)(v21 + 528) = *(_OWORD *)(v22 + 528);
    *(_OWORD *)(v21 + 544) = v49;
    goto LABEL_15;
  }
  if (!v48)
  {
    __swift_destroy_boxed_opaque_existential_1(v21 + 528);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(v21 + 528), (uint64_t *)(v22 + 528));
LABEL_15:
  *(void *)(v21 + 560) = *(void *)(v22 + 560);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v53 + a3[23]), (uint64_t *)(v52 + a3[23]));
  return v53;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        uint64_t *v3 = v12;
      }
      else
      {
        long long v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          uint64_t *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t sub_1B5F1B2E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1B61AFCB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[21];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(a2 + v7 + 16);
  _OWORD *v8 = *(_OWORD *)(a2 + v7);
  v8[1] = v10;
  v8[2] = *(_OWORD *)(a2 + v7 + 32);
  long long v11 = (int *)type metadata accessor for Blueprint();
  uint64_t v12 = v11[14];
  uint64_t v23 = (char *)v8 + v12;
  uint64_t v21 = v9 + v12;
  type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v13 = sub_1B61B0670();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v23, v21, v13);
  uint64_t v14 = v11[15];
  uint64_t v22 = v9 + v14;
  uint64_t v24 = (char *)v8 + v14;
  type metadata accessor for BlueprintItem();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v15 = sub_1B61B0A30();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v24, v22, v15);
  *(void *)((char *)v8 + v11[16]) = *(void *)(v9 + v11[16]);
  memcpy((void *)(a1 + a3[22]), (const void *)(a2 + a3[22]), 0x238uLL);
  uint64_t v16 = a3[23];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  return a1;
}

uint64_t sub_1B5F1B56C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1B61AFCB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[21];
  uint64_t v54 = a2;
  uint64_t v55 = a1;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  if (*(void *)(v8 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(v8 + 16);
  }
  long long v11 = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(v9 + 16);
  *(_OWORD *)(v8 + 32) = v11;
  uint64_t v12 = (int *)type metadata accessor for Blueprint();
  uint64_t v13 = v12[14];
  uint64_t v14 = v8 + v13;
  uint64_t v52 = v9 + v13;
  type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v15 = sub_1B61B0670();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v14, v52, v15);
  uint64_t v16 = v12[15];
  uint64_t v51 = v9 + v16;
  uint64_t v53 = v8 + v16;
  type metadata accessor for BlueprintItem();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v17 = sub_1B61B0A30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 40))(v53, v51, v17);
  *(void *)(v8 + v12[16]) = *(void *)(v9 + v12[16]);
  swift_release();
  uint64_t v18 = a3[22];
  uint64_t v19 = v55 + v18;
  uint64_t v20 = a2 + v18;
  *(_WORD *)uint64_t v19 = *(_WORD *)(v54 + v18);
  *(_OWORD *)(v19 + 8) = *(_OWORD *)(v54 + v18 + 8);
  *(_OWORD *)(v19 + 24) = *(_OWORD *)(v54 + v18 + 24);
  *(_OWORD *)(v19 + 40) = *(_OWORD *)(v54 + v18 + 40);
  *(_OWORD *)(v19 + 56) = *(_OWORD *)(v54 + v18 + 56);
  *(_OWORD *)(v19 + 72) = *(_OWORD *)(v54 + v18 + 72);
  *(_OWORD *)(v19 + 88) = *(_OWORD *)(v54 + v18 + 88);
  *(_OWORD *)(v19 + 104) = *(_OWORD *)(v54 + v18 + 104);
  *(void *)(v19 + 120) = *(void *)(v54 + v18 + 120);
  uint64_t v21 = *(void **)(v55 + v18 + 128);
  *(void *)(v19 + 128) = *(void *)(v54 + v18 + 128);

  uint64_t v22 = *(void **)(v19 + 136);
  *(void *)(v19 + 136) = *(void *)(v20 + 136);

  uint64_t v23 = *(void *)(v20 + 152);
  uint64_t v24 = *(void **)(v19 + 152);
  *(void *)(v19 + 144) = *(void *)(v20 + 144);
  *(void *)(v19 + 152) = v23;

  long long v25 = *(_OWORD *)(v20 + 176);
  *(_OWORD *)(v19 + 160) = *(_OWORD *)(v20 + 160);
  *(_OWORD *)(v19 + 176) = v25;
  long long v26 = *(_OWORD *)(v20 + 208);
  *(_OWORD *)(v19 + 192) = *(_OWORD *)(v20 + 192);
  *(_OWORD *)(v19 + 208) = v26;
  uint64_t v27 = *(void *)(v20 + 240);
  char v28 = *(unsigned char *)(v20 + 248);
  uint64_t v29 = *(void *)(v19 + 232);
  uint64_t v30 = *(void *)(v19 + 240);
  *(_OWORD *)(v19 + 224) = *(_OWORD *)(v20 + 224);
  *(void *)(v19 + 240) = v27;
  char v31 = *(unsigned char *)(v19 + 248);
  *(unsigned char *)(v19 + 248) = v28;
  sub_1B5E5F620(v29, v30, v31);
  char v32 = *(unsigned char *)(v20 + 272);
  uint64_t v33 = *(void *)(v19 + 256);
  uint64_t v34 = *(void *)(v19 + 264);
  *(_OWORD *)(v19 + 256) = *(_OWORD *)(v20 + 256);
  char v35 = *(unsigned char *)(v19 + 272);
  *(unsigned char *)(v19 + 272) = v32;
  sub_1B5E5F620(v33, v34, v35);
  char v36 = *(unsigned char *)(v20 + 296);
  uint64_t v37 = *(void *)(v19 + 280);
  uint64_t v38 = *(void *)(v19 + 288);
  *(_OWORD *)(v19 + 280) = *(_OWORD *)(v20 + 280);
  char v39 = *(unsigned char *)(v19 + 296);
  *(unsigned char *)(v19 + 296) = v36;
  sub_1B5E5F620(v37, v38, v39);
  long long v40 = *(_OWORD *)(v20 + 320);
  *(_OWORD *)(v19 + 304) = *(_OWORD *)(v20 + 304);
  *(_OWORD *)(v19 + 320) = v40;
  *(void *)(v19 + 336) = *(void *)(v20 + 336);
  *(void *)(v19 + 344) = *(void *)(v20 + 344);
  *(unsigned char *)(v19 + 352) = *(unsigned char *)(v20 + 352);
  *(unsigned char *)(v19 + 353) = *(unsigned char *)(v20 + 353);
  *(void *)(v19 + 360) = *(void *)(v20 + 360);
  long long v41 = *(_OWORD *)(v20 + 384);
  *(_OWORD *)(v19 + 368) = *(_OWORD *)(v20 + 368);
  *(_OWORD *)(v19 + 384) = v41;
  long long v42 = *(_OWORD *)(v20 + 416);
  *(_OWORD *)(v19 + 400) = *(_OWORD *)(v20 + 400);
  *(_OWORD *)(v19 + 416) = v42;
  long long v43 = *(_OWORD *)(v20 + 448);
  *(_OWORD *)(v19 + 432) = *(_OWORD *)(v20 + 432);
  *(_OWORD *)(v19 + 448) = v43;
  long long v44 = *(_OWORD *)(v20 + 480);
  *(_OWORD *)(v19 + 464) = *(_OWORD *)(v20 + 464);
  *(_OWORD *)(v19 + 480) = v44;
  *(_OWORD *)(v19 + 496) = *(_OWORD *)(v20 + 496);
  *(void *)(v19 + 512) = *(void *)(v20 + 512);
  *(unsigned char *)(v19 + 520) = *(unsigned char *)(v20 + 520);
  *(unsigned char *)(v19 + 521) = *(unsigned char *)(v20 + 521);
  *(unsigned char *)(v19 + 522) = *(unsigned char *)(v20 + 522);
  *(unsigned char *)(v19 + 523) = *(unsigned char *)(v20 + 523);
  *(unsigned char *)(v19 + 524) = *(unsigned char *)(v20 + 524);
  *(unsigned char *)(v19 + 525) = *(unsigned char *)(v20 + 525);
  if (*(void *)(v19 + 552)) {
    __swift_destroy_boxed_opaque_existential_1(v19 + 528);
  }
  long long v45 = *(_OWORD *)(v20 + 544);
  *(_OWORD *)(v19 + 528) = *(_OWORD *)(v20 + 528);
  *(_OWORD *)(v19 + 544) = v45;
  *(void *)(v19 + 560) = *(void *)(v20 + 560);
  swift_bridgeObjectRelease();
  uint64_t v46 = a3[23];
  uint64_t v47 = v55 + v46;
  uint64_t v48 = v54 + v46;
  __swift_destroy_boxed_opaque_existential_1(v55 + v46);
  long long v49 = *(_OWORD *)(v48 + 16);
  *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
  *(_OWORD *)(v47 + 16) = v49;
  *(void *)(v47 + 32) = *(void *)(v48 + 32);
  return v55;
}

uint64_t sub_1B5F1B9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B5F1B9E8);
}

uint64_t sub_1B5F1B9E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B61AFCB0();
  OUTLINED_FUNCTION_2_4();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    OUTLINED_FUNCTION_2_54();
    OUTLINED_FUNCTION_2_4();
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 84), a2, v9);
    }
    else
    {
      unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 88) + 128);
      if (v11 >= 0xFFFFFFFF) {
        LODWORD(v11) = -1;
      }
      return (v11 + 1);
    }
  }
}

uint64_t sub_1B5F1BAB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B5F1BACC);
}

void sub_1B5F1BACC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1B61AFCB0();
  OUTLINED_FUNCTION_2_4();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    OUTLINED_FUNCTION_2_54();
    OUTLINED_FUNCTION_2_4();
    if (*(_DWORD *)(v11 + 84) == a3) {
      __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 84), a2, a2, v10);
    }
    else {
      *(void *)(a1 + *(int *)(a4 + 88) + 128) = (a2 - 1);
    }
  }
}

uint64_t type metadata accessor for ContextMenuContext()
{
  return swift_getGenericMetadata();
}

uint64_t dispatch thunk of SelectedBackgroundViewProviding.selectedBackgroundView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SelectedBackgroundViewProviding.selectedBackgroundView.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of SelectedBackgroundViewProviding.selectedBackgroundView.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of SelectionStyleType.setup(cell:selectedBackgroundView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of SelectionStyleType.select(_:isHighlighted:hasBeenTraversed:view:selectedBackgroundView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t dispatch thunk of SelectionStyleType.willSetHighlighted(_:view:selectedBackgroundView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t sub_1B5F1BC34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return nullsub_1(a1, a2, a3, *(unsigned __int8 *)(v3 + 8), *(double *)v3);
}

uint64_t dispatch thunk of SelectionStyleType.didSetHighlighted(_:view:selectedBackgroundView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of SelectionStyleType.shouldRenderSelection(isSelected:isHighlighted:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_1B5F1BC68(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  return nullsub_1(a1, a2, a3, *v4, a4);
}

id MotionLayer.init(backingLayer:)(void *a1)
{
  *(void *)&v1[qword_1EB642818] = 0x8000000000000000;
  uint64_t v3 = &v1[qword_1EB642820];
  *(void *)uint64_t v3 = 0;
  v3[8] = 2;
  v1[qword_1EB642808] = 1;
  v1[qword_1EB642800] = 1;
  uint64_t v4 = (void **)&v1[qword_1EB642810];
  *(void *)&v1[qword_1EB642810] = 0;
  OUTLINED_FUNCTION_21();
  uint64_t v5 = *v4;
  *uint64_t v4 = a1;
  id v6 = a1;

  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for MotionLayer();
  id v7 = objc_msgSendSuper2(&v10, sel_init);
  objc_msgSend(v7, sel_addSublayer_, v6);
  id v8 = v6;
  objc_msgSend(v8, sel_setDelegate_, objc_msgSend(v7, sel_delegate));

  swift_unknownObjectRelease();
  return v7;
}

uint64_t type metadata accessor for MotionLayer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B5F1BDE0@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + qword_1EB642818);
  OUTLINED_FUNCTION_24();
  *a1 = *v3;
  return swift_retain();
}

uint64_t sub_1B5F1BE30(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(v1 + qword_1EB642818);
  OUTLINED_FUNCTION_21();
  void *v3 = v2;
  return swift_release();
}

uint64_t (*sub_1B5F1BE88())()
{
  return j__swift_endAccess;
}

uint64_t sub_1B5F1BEE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_1EB642820;
  OUTLINED_FUNCTION_24();
  uint64_t v4 = *(void *)v3;
  *(void *)a1 = *(void *)v3;
  char v5 = *(unsigned char *)(v3 + 8);
  *(unsigned char *)(a1 + 8) = v5;
  return sub_1B5E8C330(v4, v5);
}

uint64_t sub_1B5F1BF38(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v4 = v1 + qword_1EB642820;
  OUTLINED_FUNCTION_21();
  uint64_t v5 = *(void *)v4;
  *(void *)uint64_t v4 = v2;
  LOBYTE(v2) = *(unsigned char *)(v4 + 8);
  *(unsigned char *)(v4 + 8) = v3;
  sub_1B5E8C330(v5, v2);
  sub_1B5E8C348(v5, v2);
  uint64_t v7 = v5;
  char v8 = v2;
  sub_1B5F1C58C((uint64_t)&v7);
  return sub_1B5E8C348(v5, v2);
}

void (*sub_1B5F1BFD0(void *a1))(uint64_t *a1, char a2)
{
  char v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  uint64_t v4 = v1 + qword_1EB642820;
  OUTLINED_FUNCTION_24();
  uint64_t v5 = *(void *)v4;
  v3[3] = *(void *)v4;
  char v6 = *(unsigned char *)(v4 + 8);
  *((unsigned char *)v3 + 32) = v6;
  sub_1B5E8C330(v5, v6);
  return sub_1B5F1C054;
}

void sub_1B5F1C054(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 24);
  char v5 = *(unsigned char *)(v3 + 32);
  uint64_t v6 = v4;
  char v7 = v5;
  if (a2)
  {
    sub_1B5E8C330(v4, v5);
    sub_1B5F1BF38(&v6);
    sub_1B5E8C348(*(void *)(v3 + 24), *(unsigned char *)(v3 + 32));
  }
  else
  {
    sub_1B5F1BF38(&v6);
  }
  free((void *)v3);
}

uint64_t sub_1B5F1C0DC()
{
  OUTLINED_FUNCTION_0_1();
  return *v0;
}

uint64_t sub_1B5F1C110(char a1)
{
  return sub_1B5F1C1EC(a1, &qword_1EB642808);
}

void (*sub_1B5F1C11C(void *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = (unsigned char *)(v1 + qword_1EB642808);
  OUTLINED_FUNCTION_24();
  *((unsigned char *)v3 + 32) = *v4;
  return sub_1B5F1C194;
}

void sub_1B5F1C194(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1B5F1C1AC()
{
  OUTLINED_FUNCTION_0_1();
  return *v0;
}

uint64_t sub_1B5F1C1E0(char a1)
{
  return sub_1B5F1C1EC(a1, &qword_1EB642800);
}

uint64_t sub_1B5F1C1EC(char a1, void *a2)
{
  char v5 = (char *)(v2 + *a2);
  OUTLINED_FUNCTION_21();
  char v6 = *v5;
  char *v5 = a1;
  return sub_1B5F1C6F4(v6, a2);
}

void (*sub_1B5F1C244(void *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = (unsigned char *)(v1 + qword_1EB642800);
  OUTLINED_FUNCTION_24();
  *((unsigned char *)v3 + 32) = *v4;
  return sub_1B5F1C2BC;
}

void sub_1B5F1C2BC(uint64_t a1, uint64_t a2)
{
}

void sub_1B5F1C2D4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3 = *(void **)a1;
  a3(*(unsigned __int8 *)(*(void *)a1 + 32));
  free(v3);
}

void *sub_1B5F1C318()
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  id v2 = v1;
  return v1;
}

void sub_1B5F1C354(void *a1)
{
  uint64_t v3 = (void **)(v1 + qword_1EB642810);
  OUTLINED_FUNCTION_21();
  uint64_t v4 = *v3;
  void *v3 = a1;
}

void sub_1B5F1C3A0()
{
  uint64_t v1 = sub_1B5F1C318();
  if (v1)
  {
    id v3 = v1;
    if (sub_1B5F1C0DC() & 1) != 0 && (sub_1B5F1C1AC())
    {
      objc_msgSend(v0, sel_bounds);
      OUTLINED_FUNCTION_6_32();
      sub_1B5F1BDE0(v2);
      type metadata accessor for MotionLayer();
      OUTLINED_FUNCTION_7();
      MotionTransformable.transform(motionData:layer:bounds:motionTransform:)();

      swift_release();
    }
    else
    {
    }
  }
}

uint64_t sub_1B5F1C4C0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_retain();
  return sub_1B5F1BE30(&v2);
}

uint64_t sub_1B5F1C500@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1B5F1BEE4((uint64_t)&v4);
  char v3 = v5;
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v3;
  return result;
}

uint64_t sub_1B5F1C544(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = *(void *)a1;
  char v4 = v1;
  sub_1B5E8C330(v3, v1);
  return sub_1B5F1BF38(&v3);
}

uint64_t sub_1B5F1C58C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t v11 = *(void *)a1;
  char v12 = v2;
  uint64_t v3 = &v1[qword_1EB642820];
  swift_beginAccess();
  char v4 = v3[8];
  uint64_t v9 = *(void *)v3;
  char v10 = v4;
  uint64_t result = static MotionDisabledTransform.== infix(_:_:)((uint64_t)&v11, (uint64_t)&v9);
  if ((result & 1) == 0)
  {
    if ((sub_1B5F1C0DC() & 1) == 0 || (uint64_t result = sub_1B5F1C1AC(), (result & 1) == 0))
    {
      uint64_t result = (uint64_t)sub_1B5F1C318();
      if (result)
      {
        char v6 = (void *)result;
        objc_msgSend(v1, sel_bounds);
        uint64_t v7 = *(void *)v3;
        char v8 = v3[8];
        uint64_t v11 = v7;
        char v12 = v8;
        sub_1B5E8C330(v7, v8);
        type metadata accessor for MotionLayer();
        MotionTransformable.transform(layer:bounds:motionDisabled:)(v6, (uint64_t)&v11);

        return sub_1B5E8C348(v7, v8);
      }
    }
  }
  return result;
}

uint64_t sub_1B5F1C6F4(char a1, void *a2)
{
  char v4 = &v2[*a2];
  uint64_t result = OUTLINED_FUNCTION_24();
  if (*v4 & 1) == 0 && (a1)
  {
    uint64_t result = (uint64_t)sub_1B5F1C318();
    if (result)
    {
      char v6 = (void *)result;
      objc_msgSend(v2, sel_bounds);
      OUTLINED_FUNCTION_6_32();
      sub_1B5F1BEE4(v7);
      type metadata accessor for MotionLayer();
      OUTLINED_FUNCTION_7();
      MotionTransformable.transform(layer:bounds:motionDisabled:)(v8, v9);

      return sub_1B5E8C348(v10, v11);
    }
  }
  return result;
}

void sub_1B5F1C800(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_1B5F1C354(v1);
}

id MotionLayer.__allocating_init(backingLayer:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return MotionLayer.init(backingLayer:)(a1);
}

id MotionLayer.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id MotionLayer.init()()
{
  *(void *)&v0[qword_1EB642818] = 0x8000000000000000;
  id v1 = &v0[qword_1EB642820];
  *(void *)id v1 = 0;
  v1[8] = 2;
  v0[qword_1EB642808] = 1;
  v0[qword_1EB642800] = 1;
  *(void *)&v0[qword_1EB642810] = 0;
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for MotionLayer();
  return objc_msgSendSuper2(&v3, sel_init);
}

id sub_1B5F1C944()
{
  return MotionLayer.init()();
}

id MotionLayer.__allocating_init(layer:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  id v4 = objc_msgSend(v3, sel_initWithLayer_, sub_1B61B3740());
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v4;
}

char *MotionLayer.init(layer:)(void *a1)
{
  *(void *)&v1[qword_1EB642818] = 0x8000000000000000;
  id v3 = &v1[qword_1EB642820];
  *(void *)id v3 = 0;
  v3[8] = 2;
  v1[qword_1EB642808] = 1;
  v1[qword_1EB642800] = 1;
  *(void *)&v1[qword_1EB642810] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v4 = sub_1B61B3740();
  v32.receiver = v1;
  v32.super_class = (Class)type metadata accessor for MotionLayer();
  id v5 = objc_msgSendSuper2(&v32, sel_initWithLayer_, v4);
  swift_unknownObjectRelease();
  sub_1B5E17688((uint64_t)a1, (uint64_t)&v30);
  char v6 = (char *)v5;
  if (swift_dynamicCast())
  {
    sub_1B5F1BDE0(&v30);
    uint64_t v7 = v30;
    char v8 = &v6[qword_1EB642818];
    OUTLINED_FUNCTION_21();
    *(void *)char v8 = v7;
    swift_release();
    sub_1B5F1BEE4((uint64_t)&v30);
    uint64_t v9 = v30;
    char v10 = v31;
    char v11 = &v6[qword_1EB642820];
    OUTLINED_FUNCTION_21();
    uint64_t v12 = *(void *)v11;
    *(void *)char v11 = v9;
    char v13 = v11[8];
    v11[8] = v10;
    sub_1B5E8C348(v12, v13);
    LOBYTE(v11) = sub_1B5F1C0DC();
    uint64_t v14 = &v6[qword_1EB642808];
    OUTLINED_FUNCTION_21();
    *uint64_t v14 = v11 & 1;
    LOBYTE(v11) = sub_1B5F1C1AC();
    uint64_t v15 = &v6[qword_1EB642800];
    OUTLINED_FUNCTION_21();
    *uint64_t v15 = v11 & 1;
    id v16 = objc_msgSend(v29, sel_sublayers);
    if (v16)
    {
      uint64_t v17 = v16;
      sub_1B5F1D380();
      uint64_t v18 = sub_1B61B24E0();

      sub_1B5E7FBF8(0, (v18 & 0xC000000000000001) == 0, v18);
      if ((v18 & 0xC000000000000001) != 0) {
        id v19 = (id)MEMORY[0x1BA9B04B0](0, v18);
      }
      else {
        id v19 = *(id *)(v18 + 32);
      }
      uint64_t v20 = v19;

      swift_bridgeObjectRelease();
      uint64_t v21 = swift_dynamicCastUnknownClass();
      if (!v21) {
    }
      }
    else
    {

      uint64_t v21 = 0;
    }
    p_flags = &value witness table for PageViewSession.flags;
    uint64_t v23 = (void **)&v6[qword_1EB642810];
    OUTLINED_FUNCTION_21();
    uint64_t v24 = *v23;
    *uint64_t v23 = (void *)v21;
  }
  else
  {
    p_flags = (_DWORD *)(&value witness table for PageViewSession + 80);
  }
  long long v25 = (void **)&v6[*((void *)p_flags + 258)];
  swift_beginAccess();
  long long v26 = *v25;
  if (v26)
  {
    swift_endAccess();
    id v27 = v26;
    objc_msgSend(v27, sel_setDelegate_, objc_msgSend(v6, sel_delegate));

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_endAccess();
  }
  return v6;
}

char *sub_1B5F1CD40()
{
  swift_unknownObjectRetain();
  sub_1B61B3030();
  swift_unknownObjectRelease();
  return MotionLayer.init(layer:)(v1);
}

void sub_1B5F1CD90()
{
  *(void *)&v0[qword_1EB642818] = 0x8000000000000000;
  id v1 = &v0[qword_1EB642820];
  *(void *)id v1 = 0;
  v1[8] = 2;
  v0[qword_1EB642808] = 1;
  v0[qword_1EB642800] = 1;
  *(void *)&v0[qword_1EB642810] = 0;

  sub_1B61B34D0();
  __break(1u);
}

void sub_1B5F1CE40(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1B5F1CD90();
}

uint64_t sub_1B5F1CE5C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72546E6F69746F6DLL && a2 == 0xEF6D726F66736E61;
  if (v2 || (sub_1B61B3760() & 1) != 0 || a1 == 0xD000000000000017 && a2 == 0x80000001B61E36E0) {
    return 1;
  }
  if (sub_1B61B3760()) {
    return 1;
  }
  if (a1 == 0x6E6F69746F4D7369 && a2 == 0xEF64656C62616E45) {
    return 1;
  }
  OUTLINED_FUNCTION_5_29();
  char v6 = sub_1B61B3760();
  BOOL v8 = a1 == 0x6E6F69746F4D7369 && a2 == 0xEF6465776F6C6C41;
  uint64_t v9 = 1;
  if ((v6 & 1) == 0 && !v8)
  {
    OUTLINED_FUNCTION_5_29();
    if ((sub_1B61B3760() & 1) == 0)
    {
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      char v11 = (void *)sub_1B61B20C0();
      uint64_t v12 = (objc_class *)(*MEMORY[0x1E4FBC8C8] & *(void *)type metadata accessor for MotionLayer());
      v14.receiver = ObjCClassFromMetadata;
      v14.super_class = v12;
      uint64_t v9 = (uint64_t)objc_msgSendSuper2(&v14, sel_needsDisplayForKey_, v11);
    }
  }
  return v9;
}

uint64_t sub_1B5F1D04C()
{
  uint64_t v0 = sub_1B61B20F0();
  uint64_t v2 = v1;
  swift_getObjCClassMetadata();
  char v3 = sub_1B5F1CE5C(v0, v2);
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1B5F1D0B0()
{
  v23.receiver = v0;
  v23.super_class = (Class)type metadata accessor for MotionLayer();
  objc_msgSendSuper2(&v23, sel_layoutSublayers);
  id v1 = objc_msgSend(v0, sel_sublayers);
  if (v1)
  {
    uint64_t v2 = v1;
    sub_1B5F1D380();
    unint64_t v3 = sub_1B61B24E0();

    if (v3 >> 62)
    {
      sub_1B61B1F70();
      uint64_t v4 = sub_1B61B3530();
      swift_bridgeObjectRelease();
      if (v4) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v4)
      {
LABEL_4:
        if (v4 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v4; ++i)
        {
          if ((v3 & 0xC000000000000001) != 0) {
            id v6 = (id)MEMORY[0x1BA9B04B0](i, v3);
          }
          else {
            id v6 = *(id *)(v3 + 8 * i + 32);
          }
          uint64_t v7 = v6;
          objc_msgSend(v6, sel_bounds);
          OUTLINED_FUNCTION_8();
          objc_msgSend(v0, sel_bounds);
          v24.origin.double x = OUTLINED_FUNCTION_7();
          if (!CGRectEqualToRect(v24, v25))
          {
            objc_msgSend(v0, sel_bounds);
            objc_msgSend(v7, sel_setBounds_);
          }
          objc_msgSend(v7, sel_position);
          double v9 = v8;
          double v11 = v10;
          objc_msgSend(v0, sel_position);
          if (v9 != v13 || v11 != v12)
          {
            objc_msgSend(v0, sel_position);
            objc_msgSend(v7, sel_setPosition_);
          }
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = sub_1B5F1C318();
  if (v15)
  {
    id v16 = v15;
    if (sub_1B5F1C0DC() & 1) != 0 && (sub_1B5F1C1AC())
    {
    }
    else
    {
      objc_msgSend(v0, sel_bounds);
      OUTLINED_FUNCTION_8();
      sub_1B5F1BEE4((uint64_t)&v21);
      uint64_t v17 = v21;
      char v18 = v22;
      OUTLINED_FUNCTION_7();
      MotionTransformable.transform(layer:bounds:motionDisabled:)(v19, v20);

      sub_1B5E8C348(v17, v18);
    }
  }
}

void sub_1B5F1D338(void *a1)
{
  id v1 = a1;
  sub_1B5F1D0B0();
}

unint64_t sub_1B5F1D380()
{
  unint64_t result = qword_1EB647C78;
  if (!qword_1EB647C78)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB647C78);
  }
  return result;
}

id MotionLayer.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MotionLayer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1B5F1D41C(uint64_t a1)
{
  swift_release();
  sub_1B5E8C348(*(void *)(a1 + qword_1EB642820), *(unsigned char *)(a1 + qword_1EB642820 + 8));
  objc_super v2 = *(void **)(a1 + qword_1EB642810);
}

uint64_t (*sub_1B5F1D48C(void *a1))()
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1B5F1BE88();
  return sub_1B5E966FC;
}

uint64_t (*sub_1B5F1D4EC(void *a1))()
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1B5F1BFD0(v2);
  return sub_1B5E966FC;
}

uint64_t (*sub_1B5F1D54C(void *a1))()
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1B5F1C11C(v2);
  return sub_1B5E966FC;
}

uint64_t (*sub_1B5F1D5AC(void *a1))()
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1B5F1C244(v2);
  return sub_1B5E966FC;
}

uint64_t sub_1B5F1D608@<X0>(void *a1@<X8>)
{
  return sub_1B5F1BDE0(a1);
}

void *sub_1B5F1D634(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B5F1D64C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5F1C0DC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1B5F1D67C(char *a1)
{
  return sub_1B5F1C110(*a1);
}

uint64_t sub_1B5F1D6A8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5F1C1AC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1B5F1D6D8(char *a1)
{
  return sub_1B5F1C1E0(*a1);
}

void *sub_1B5F1D704@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1B5F1C318();
  *a1 = result;
  return result;
}

uint64_t sub_1B5F1D738()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MotionLayer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MotionLayer);
}

uint64_t dispatch thunk of MotionLayer.motionTransform.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MotionLayer.motionTransform.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MotionLayer.motionTransform.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MotionLayer.motionDisabledTransform.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MotionLayer.motionDisabledTransform.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of MotionLayer.motionDisabledTransform.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of MotionLayer.isMotionEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of MotionLayer.isMotionEnabled.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of MotionLayer.isMotionEnabled.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of MotionLayer.isMotionAllowed.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of MotionLayer.isMotionAllowed.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of MotionLayer.isMotionAllowed.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of MotionLayer.backingLayer.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of MotionLayer.__allocating_init(backingLayer:)()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of MotionLayer.transform(motionData:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

id ApplicationBackgroundFetchScheduler.__allocating_init(application:)(uint64_t a1)
{
  unint64_t v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR___TSApplicationBackgroundFetchScheduler_application] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id ApplicationBackgroundFetchScheduler.init(application:)(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR___TSApplicationBackgroundFetchScheduler_application] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

Swift::Void __swiftcall ApplicationBackgroundFetchScheduler.setMinimumBackgroundFetchInterval(_:)(Swift::Double a1)
{
  objc_msgSend(*(id *)(v1 + OBJC_IVAR___TSApplicationBackgroundFetchScheduler_application), sel_setMinimumBackgroundFetchInterval_, a1);
}

void ApplicationBackgroundFetchScheduler.init()()
{
}

id BackgroundTasksBackgroundFetchScheduler.__allocating_init(application:taskIdentifier:)()
{
  id v0 = objc_allocWithZone((Class)OUTLINED_FUNCTION_0_58());
  return BackgroundTasksBackgroundFetchScheduler.init(application:taskIdentifier:)();
}

id BackgroundTasksBackgroundFetchScheduler.init(application:taskIdentifier:)()
{
  OUTLINED_FUNCTION_0_58();
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR___TSBackgroundTasksBackgroundFetchScheduler_application] = v3;
  objc_super v5 = &v1[OBJC_IVAR___TSBackgroundTasksBackgroundFetchScheduler_taskIdentifier];
  *(void *)objc_super v5 = v2;
  *((void *)v5 + 1) = v0;
  *(void *)&v1[OBJC_IVAR___TSBackgroundTasksBackgroundFetchScheduler_minimumBackgroundFetchInterval] = *MEMORY[0x1E4FB2618];
  v7.receiver = v1;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

Swift::Void __swiftcall BackgroundTasksBackgroundFetchScheduler.setMinimumBackgroundFetchInterval(_:)(Swift::Double a1)
{
  *(Swift::Double *)(v1 + OBJC_IVAR___TSBackgroundTasksBackgroundFetchScheduler_minimumBackgroundFetchInterval) = a1;
  sub_1B5F1DD64();
}

void sub_1B5F1DD64()
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = sub_1B61AFA70();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = objc_msgSend(self, sel_sharedScheduler);
  if (*(double *)(v0 + OBJC_IVAR___TSBackgroundTasksBackgroundFetchScheduler_minimumBackgroundFetchInterval) == *MEMORY[0x1E4FB2618])
  {
    sub_1B5DFF760(0, (unint64_t *)&qword_1EB64D490);
    objc_super v5 = (void *)sub_1B61B2F40();
    sub_1B61B2BA0();
    sub_1B61B0F90();

    id v6 = (void *)sub_1B61B20C0();
    objc_msgSend(v18[0], sel_cancelTaskRequestWithIdentifier_, v6);

    id v7 = v18[0];
  }
  else
  {
    sub_1B5DFF760(0, &qword_1E9DAA378);
    sub_1B61B1F70();
    id v8 = sub_1B5F1E5E4();
    sub_1B61AFA20();
    double v9 = (void *)sub_1B61AF9F0();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    objc_msgSend(v8, sel_setEarliestBeginDate_, v9);

    sub_1B5DFF760(0, (unint64_t *)&qword_1EB64D490);
    double v10 = (void *)sub_1B61B2F40();
    sub_1B61B2BA0();
    sub_1B61B0F90();

    id v19 = 0;
    if (objc_msgSend(v18[0], sel_submitTaskRequest_error_, v8, &v19))
    {
      id v11 = v19;
    }
    else
    {
      id v12 = v19;
      double v13 = (void *)sub_1B61AF840();

      swift_willThrow();
      sub_1B5E4CCFC();
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1B61BE690;
      id v19 = 0;
      unint64_t v20 = 0xE000000000000000;
      v18[1] = v13;
      sub_1B5E00AB8(0, (unint64_t *)&qword_1EB647DB0);
      sub_1B61B3440();
      id v15 = v19;
      unint64_t v16 = v20;
      *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v14 + 64) = sub_1B5E2E40C();
      *(void *)(v14 + 32) = v15;
      *(void *)(v14 + 40) = v16;
      uint64_t v17 = (void *)sub_1B61B2F40();
      sub_1B61B2BA0();
      sub_1B61B0F90();
      swift_bridgeObjectRelease();
    }
  }
}

void BackgroundTasksBackgroundFetchScheduler.prepareForUse(with:)(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(self, sel_sharedScheduler);
  objc_super v5 = (void *)sub_1B61B20C0();
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB64CA90);
  id v6 = (void *)sub_1B61B2C50();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = v2;
  v10[4] = sub_1B5F1E4C8;
  v10[5] = v7;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  v10[2] = sub_1B5EE7210;
  v10[3] = &block_descriptor_25;
  id v8 = _Block_copy(v10);
  swift_unknownObjectRetain();
  id v9 = v2;
  swift_release();
  objc_msgSend(v4, sel_registerForTaskWithIdentifier_usingQueue_launchHandler_, v5, v6, v8);
  _Block_release(v8);
}

uint64_t sub_1B5F1E348(void *a1, id a2, char *a3)
{
  uint64_t result = (uint64_t)objc_msgSend(a2, sel_respondsToSelector_, sel_application_performFetchWithCompletionHandler_);
  if (result)
  {
    uint64_t v7 = *(void *)&a3[OBJC_IVAR___TSBackgroundTasksBackgroundFetchScheduler_application];
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a3;
    *(void *)(v8 + 24) = a1;
    v12[4] = sub_1B5F1E800;
    v12[5] = v8;
    v12[0] = MEMORY[0x1E4F143A8];
    v12[1] = 1107296256;
    v12[2] = sub_1B5F1E4D0;
    v12[3] = &block_descriptor_15;
    id v9 = _Block_copy(v12);
    swift_unknownObjectRetain();
    double v10 = a3;
    id v11 = a1;
    swift_retain();
    objc_msgSend(a2, sel_application_performFetchWithCompletionHandler_, v7, v9);
    _Block_release(v9);
    swift_release();
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B5F1E488()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1B5F1E4C8(void *a1)
{
  return sub_1B5F1E348(a1, *(id *)(v1 + 16), *(char **)(v1 + 24));
}

uint64_t sub_1B5F1E4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

id sub_1B5F1E524(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1B5F1DD64();
  return objc_msgSend(a3, sel_setTaskCompletedWithSuccess_, a1 != 2);
}

id sub_1B5F1E5E4()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v1 = (void *)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithIdentifier_, v1);

  return v2;
}

id BackgroundTasksBackgroundFetchScheduler.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void BackgroundTasksBackgroundFetchScheduler.init()()
{
}

uint64_t type metadata accessor for ApplicationBackgroundFetchScheduler()
{
  return self;
}

uint64_t method lookup function for ApplicationBackgroundFetchScheduler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ApplicationBackgroundFetchScheduler);
}

uint64_t dispatch thunk of ApplicationBackgroundFetchScheduler.__allocating_init(application:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata accessor for BackgroundTasksBackgroundFetchScheduler()
{
  return self;
}

uint64_t method lookup function for BackgroundTasksBackgroundFetchScheduler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BackgroundTasksBackgroundFetchScheduler);
}

uint64_t dispatch thunk of BackgroundTasksBackgroundFetchScheduler.__allocating_init(application:taskIdentifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1B5F1E7C0()
{
  return swift_deallocObject();
}

id sub_1B5F1E800(uint64_t a1)
{
  return sub_1B5F1E524(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t NoopShareMenuItemManager.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t NoopShareMenuItemManager.init()()
{
  return v0;
}

uint64_t NoopShareMenuItemManager.deinit()
{
  return v0;
}

uint64_t NoopShareMenuItemManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of ShareMenuItemManagerType.configureShareItem(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t type metadata accessor for NoopShareMenuItemManager()
{
  return self;
}

uint64_t method lookup function for NoopShareMenuItemManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NoopShareMenuItemManager);
}

uint64_t dispatch thunk of NoopShareMenuItemManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

BOOL static StackNavigationStepResult.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t StackNavigationStepResult.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t StackNavigationStepResult.hashValue.getter()
{
  return sub_1B61B3940();
}

unint64_t sub_1B5F1E944()
{
  unint64_t result = qword_1E9DAA380;
  if (!qword_1E9DAA380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA380);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StackNavigationStepResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F1EA5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StackNavigationStepResult()
{
  return &type metadata for StackNavigationStepResult;
}

uint64_t Command.__allocating_init(_:type:)(uint64_t a1, uint64_t a2, char *a3)
{
  char v6 = *a3;
  char v5 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, char *))(v3 + 120))(a1, a2, &v6, &v5);
}

uint64_t sub_1B5F1EAE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B5F1EB58(a1, a2, a3, (void (*)(unsigned char *))Command.LoggingBehavior.hash(into:));
}

BOOL static Command.CommandType.== infix(_:_:)(unsigned char *a1, unsigned char *a2)
{
  return OUTLINED_FUNCTION_0_59(*a1 ^ *a2);
}

uint64_t Command.CommandType.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t sub_1B5F1EB40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B5F1EB58(a1, a2, a3, (void (*)(unsigned char *))Command.CommandType.hash(into:));
}

uint64_t sub_1B5F1EB58(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_1B61B3900();
  a4(v6);
  return sub_1B61B3940();
}

uint64_t Command.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1B61B1F70();
  return v1;
}

uint64_t Command.__allocating_init(_:type:loggingBehavior:)(uint64_t a1, uint64_t a2, char *a3, char *a4)
{
  uint64_t result = swift_allocObject();
  char v9 = *a3;
  char v10 = *a4;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(unsigned char *)(result + 32) = v9;
  *(unsigned char *)(result + 33) = v10;
  return result;
}

uint64_t Command.init(_:type:loggingBehavior:)(uint64_t a1, uint64_t a2, char *a3, char *a4)
{
  char v5 = *a3;
  char v6 = *a4;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  *(unsigned char *)(v4 + 32) = v5;
  *(unsigned char *)(v4 + 33) = v6;
  return v4;
}

uint64_t sub_1B5F1EC48()
{
  return swift_bridgeObjectRelease();
}

uint64_t Command.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Command.__deallocating_deinit()
{
  Command.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B5F1ECA4()
{
  return Command.identifier.getter();
}

BOOL sub_1B5F1ECC8()
{
  return OUTLINED_FUNCTION_0_59(*v0);
}

uint64_t static Command.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return sub_1B61B3760();
  }
}

uint64_t sub_1B5F1ED00()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B5F1ED1C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B5F1ED38(uint64_t *a1, uint64_t *a2)
{
  return static Command.== infix(_:_:)(*a1, *a2) & 1;
}

uint64_t sub_1B5F1ED5C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Command()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for Command(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Command);
}

uint64_t dispatch thunk of Command.__allocating_init(_:type:loggingBehavior:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1B5F1EDF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 8);
}

uint64_t type metadata accessor for Command.LoggingBehavior()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_1B5F1EE14(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F1EEE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for Command.CommandType()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1B5F1EF28()
{
  uint64_t v0 = type metadata accessor for FatalErrorResolver();
  uint64_t v1 = swift_allocObject();
  qword_1EB654B20 = v0;
  unint64_t result = sub_1B5F1F5B4();
  qword_1EB654B28 = result;
  qword_1EB654B08 = v1;
  return result;
}

uint64_t *sub_1B5F1EF7C()
{
  if (qword_1EB641D78 != -1) {
    swift_once();
  }
  return &qword_1EB654B08;
}

uint64_t sub_1B5F1EFC8@<X0>(uint64_t a1@<X8>)
{
  sub_1B5F1EF7C();
  return sub_1B5E176E4((uint64_t)&qword_1EB654B08, a1);
}

uint64_t EnvironmentValues.resolver.getter()
{
  sub_1B5F1F054();
  return sub_1B61B1730();
}

unint64_t sub_1B5F1F054()
{
  unint64_t result = qword_1EB641BE0[0];
  if (!qword_1EB641BE0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB641BE0);
  }
  return result;
}

uint64_t sub_1B5F1F0A0(uint64_t a1)
{
  sub_1B5E176E4(a1, (uint64_t)v2);
  return EnvironmentValues.resolver.setter((uint64_t)v2);
}

uint64_t EnvironmentValues.resolver.setter(uint64_t a1)
{
  sub_1B5E176E4(a1, (uint64_t)v3);
  sub_1B5F1F054();
  sub_1B61B1740();
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

void (*EnvironmentValues.resolver.modify(void *a1))(uint64_t *a1, char a2)
{
  int v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[15] = v1;
  v3[16] = sub_1B5F1F054();
  sub_1B61B1730();
  return sub_1B5F1F1A4;
}

void sub_1B5F1F1A4(uint64_t *a1, char a2)
{
  id v2 = (void *)*a1;
  uint64_t v3 = *a1 + 40;
  if (a2)
  {
    sub_1B5E176E4(*a1, v3);
    sub_1B5E176E4(v3, (uint64_t)v2 + 80);
    sub_1B61B1740();
    __swift_destroy_boxed_opaque_existential_1(v3);
  }
  else
  {
    sub_1B5E176E4(*a1, v3);
    sub_1B61B1740();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  free(v2);
}

uint64_t sub_1B5F1F264()
{
  return EnvironmentValues.resolver.getter();
}

void sub_1B5F1F28C()
{
}

void sub_1B5F1F2D0()
{
}

void sub_1B5F1F314()
{
}

void sub_1B5F1F358()
{
}

void sub_1B5F1F39C()
{
}

void sub_1B5F1F3E0()
{
}

void sub_1B5F1F424()
{
}

void sub_1B5F1F468()
{
}

void sub_1B5F1F4AC()
{
}

uint64_t type metadata accessor for FatalErrorResolver()
{
  return self;
}

ValueMetadata *type metadata accessor for ResolverEnvironmentKey()
{
  return &type metadata for ResolverEnvironmentKey;
}

void sub_1B5F1F524()
{
}

void sub_1B5F1F534()
{
}

void sub_1B5F1F544()
{
}

void sub_1B5F1F554()
{
}

void sub_1B5F1F564()
{
}

void sub_1B5F1F574()
{
}

void sub_1B5F1F584()
{
}

void sub_1B5F1F594()
{
}

void sub_1B5F1F5A4()
{
}

unint64_t sub_1B5F1F5B4()
{
  unint64_t result = qword_1EB641CD8;
  if (!qword_1EB641CD8)
  {
    type metadata accessor for FatalErrorResolver();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB641CD8);
  }
  return result;
}

uint64_t MediaTimingData.duration.getter()
{
  return *(void *)v0;
}

unint64_t MediaTimingData.speed.getter()
{
  return OUTLINED_FUNCTION_0_61(*(unsigned int *)(v0 + 12));
}

uint64_t MediaTimingData.timeOffset.getter()
{
  return *(void *)(v0 + 24);
}

void *MediaTimingData.fillMode.getter()
{
  uint64_t v1 = *(void **)(v0 + 40);
  id v2 = v1;
  return v1;
}

unint64_t MediaTimingData.repeatCount.getter()
{
  return OUTLINED_FUNCTION_0_61(*(unsigned int *)(v0 + 48));
}

uint64_t MediaTimingData.repeatDuration.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t MediaTimingData.autoreverses.getter()
{
  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t MediaTimingData.init(duration:speed:timeOffset:fillMode:repeatCount:repeatDuration:autoreverses:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, char a11)
{
  *(void *)a9 = result;
  *(unsigned char *)(a9 + 8) = a2 & 1;
  *(_DWORD *)(a9 + 12) = a3;
  *(unsigned char *)(a9 + 16) = BYTE4(a3) & 1;
  *(void *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 32) = a5 & 1;
  *(void *)(a9 + 40) = a6;
  *(_DWORD *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 52) = BYTE4(a7) & 1;
  *(void *)(a9 + 56) = a8;
  *(unsigned char *)(a9 + 64) = a10 & 1;
  *(unsigned char *)(a9 + 65) = a11;
  return result;
}

void destroy for MediaTimingData(uint64_t a1)
{
}

uint64_t initializeWithCopy for MediaTimingData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v3 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v3;
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for MediaTimingData(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  LODWORD(v4) = *((_DWORD *)a2 + 3);
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(_DWORD *)(a1 + 12) = v4;
  uint64_t v5 = a2[3];
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 24) = v5;
  unsigned int v6 = *(void **)(a1 + 40);
  uint64_t v7 = (void *)a2[5];
  *(void *)(a1 + 40) = v7;
  id v8 = v7;

  int v9 = *((_DWORD *)a2 + 12);
  *(unsigned char *)(a1 + 52) = *((unsigned char *)a2 + 52);
  *(_DWORD *)(a1 + 48) = v9;
  uint64_t v10 = a2[7];
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 65) = *((unsigned char *)a2 + 65);
  return a1;
}

void *__swift_memcpy66_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x42uLL);
}

uint64_t assignWithTake for MediaTimingData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaTimingData(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 66))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 40);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaTimingData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 64) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 66) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 66) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaTimingData()
{
  return &type metadata for MediaTimingData;
}

Swift::Void __swiftcall TogglableSwitch.set(toggleState:animated:)(TeaUI::ToggleState toggleState, Swift::Bool animated)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  int v7 = *(unsigned __int8 *)toggleState;
  (*(void (**)(uint64_t *__return_ptr))(v3 + 8))(&v10);
  if (v7 != v10)
  {
    char v9 = v7;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(&v9, v5, v4);
    char v8 = v7;
    (*(void (**)(char *, Swift::Bool, uint64_t, uint64_t))(v4 + 32))(&v8, animated, v5, v4);
  }
}

Swift::Void __swiftcall TogglableSwitch.toggle()()
{
  (*(void (**)(uint64_t *__return_ptr))(v0 + 8))(&v4);
  if (v4)
  {
    char v3 = 0;
    uint64_t v1 = &v3;
  }
  else
  {
    char v2 = 1;
    uint64_t v1 = &v2;
  }
  TogglableSwitch.set(toggleState:animated:)((TeaUI::ToggleState)v1, 1);
}

void *TogglableSwitch.makeToggleRequest()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  TogglableSwitch.toggle()();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 8))(&v9, a1, a2);
  char v6 = v9;
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = v7;
  *(unsigned char *)a3 = v6;
  *(void *)(a3 + 8) = sub_1B5F1FC20;
  *(void *)(a3 + 16) = result;
  return result;
}

uint64_t sub_1B5F1FB3C(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1BA9B1EC0](v1);
  if (result)
  {
    TogglableSwitch.toggle()();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B5F1FBB0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B5F1FBE8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5F1FC20()
{
  return sub_1B5F1FB3C(*(void *)(v0 + 32));
}

uint64_t dispatch thunk of TogglableSwitch.toggleState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TogglableSwitch.toggleState.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of TogglableSwitch.toggleState.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of TogglableSwitch.didUpdateToggleState(toggleState:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

void OverlayAlert.init(image:title:subtitle:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  if (a1)
  {
    id v12 = objc_msgSend(a1, sel_imageWithRenderingMode_, 2);
  }
  else
  {
    id v12 = 0;
  }
  *a6 = v12;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
}

uint64_t assignWithCopy for OverlayAlert(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for OverlayAlert(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OverlayAlert(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OverlayAlert(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OverlayAlert()
{
  return &type metadata for OverlayAlert;
}

uint64_t dispatch thunk of OnboardingViewControllerProviding.viewController(onboardingFlowDelegate:primaryAction:secondaryAction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8))();
}

uint64_t *sub_1B5F1FE88(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1B61AFCB0();
    id v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    sub_1B61B1F70();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(_OWORD *)((char *)v4 + v13) = *(_OWORD *)((char *)a2 + v13);
  }
  return v4;
}

uint64_t sub_1B5F1FF94(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1B61AFCB0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_1B5F2000C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B61AFCB0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  sub_1B61B1F70();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  return a1;
}

void *sub_1B5F200C8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B61AFCB0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  return a1;
}

_OWORD *sub_1B5F20194(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B61AFCB0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  return a1;
}

void *sub_1B5F20234(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B61AFCB0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  return a1;
}

uint64_t sub_1B5F202DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B5F202F0);
}

uint64_t sub_1B5F202F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1B61AFCB0();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t sub_1B5F20378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B5F2038C);
}

uint64_t sub_1B5F2038C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1B61AFCB0();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SwipeActionRestoreState()
{
  uint64_t result = qword_1EB649458;
  if (!qword_1EB649458) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B5F20454()
{
  uint64_t result = sub_1B61AFCB0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t FloatingTabBarSidebarImpressionManager.isEnabled.getter()
{
  OUTLINED_FUNCTION_24();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t FloatingTabBarSidebarImpressionManager.isEnabled.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = a1;
  return result;
}

uint64_t (*FloatingTabBarSidebarImpressionManager.isEnabled.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1B5F205BC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 24;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1BA9B1EC0](v4);
  uint64_t v6 = *(void *)(v3 + 32);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1B5F20618(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 32) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t FloatingTabBarSidebarImpressionManager.delegate.getter()
{
  OUTLINED_FUNCTION_24();
  return MEMORY[0x1BA9B1EC0](v0 + 24);
}

uint64_t FloatingTabBarSidebarImpressionManager.delegate.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 32) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*FloatingTabBarSidebarImpressionManager.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  OUTLINED_FUNCTION_33_0();
  uint64_t v4 = MEMORY[0x1BA9B1EC0](v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1B5F20790;
}

void sub_1B5F20790(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 32) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t FloatingTabBarSidebarImpressionManager.__allocating_init(options:)(uint64_t *a1)
{
  uint64_t v2 = swift_allocObject();
  FloatingTabBarSidebarImpressionManager.init(options:)(a1);
  return v2;
}

uint64_t FloatingTabBarSidebarImpressionManager.init(options:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t v5 = a1[3];
  *(unsigned char *)(v1 + 16) = 1;
  *(void *)(v1 + 32) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v6 = v1 + OBJC_IVAR____TtC5TeaUI38FloatingTabBarSidebarImpressionManager_activeSession;
  uint64_t active = type metadata accessor for BlueprintImpressionActiveSession();
  __swift_storeEnumTagSinglePayload(v6, 1, 1, active);
  *(void *)(v1 + OBJC_IVAR____TtC5TeaUI38FloatingTabBarSidebarImpressionManager_activeImpressions) = MEMORY[0x1E4FBC868];
  uint64_t v8 = v1 + OBJC_IVAR____TtC5TeaUI38FloatingTabBarSidebarImpressionManager_options;
  *(void *)uint64_t v8 = v2;
  *(void *)(v8 + 8) = v3;
  *(unsigned char *)(v8 + 16) = v4;
  *(void *)(v8 + 24) = v5;
  return v1;
}

Swift::Void __swiftcall FloatingTabBarSidebarImpressionManager.startSession(trigger:)(TeaUI::BlueprintImpressionSessionTrigger trigger)
{
  uint64_t v3 = (char *)trigger;
  uint64_t v4 = sub_1B61AFAB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_7_30();
  uint64_t active = (int *)type metadata accessor for BlueprintImpressionActiveSession();
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_4();
  uint64_t v81 = v10;
  sub_1B5F22038();
  uint64_t v12 = OUTLINED_FUNCTION_14(v11);
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_9_24();
  MEMORY[0x1F4188790](v13);
  id v15 = (char *)v75 - v14;
  uint64_t v83 = sub_1B61AFA70();
  OUTLINED_FUNCTION_0_10();
  v75[0] = v16;
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_81();
  uint64_t v80 = v18 - v19;
  MEMORY[0x1F4188790](v20);
  char v21 = *v3;
  uint64_t v82 = (char *)v75 - v22;
  sub_1B61AFA60();
  OUTLINED_FUNCTION_24();
  if (*(unsigned char *)(v1 + 16) != 1
    || (uint64_t v23 = v1 + OBJC_IVAR____TtC5TeaUI38FloatingTabBarSidebarImpressionManager_activeSession,
        OUTLINED_FUNCTION_24(),
        sub_1B5F220F4(v23, (uint64_t)v15, (void (*)(void))sub_1B5F22038),
        int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, (uint64_t)active),
        sub_1B5F22220((uint64_t)v15, (void (*)(void))sub_1B5F22038),
        EnumTagSinglePayload != 1))
  {
LABEL_39:
    uint64_t v73 = OUTLINED_FUNCTION_16_13();
    v74(v73, v83);
    return;
  }
  sub_1B61AFAA0();
  uint64_t v25 = sub_1B61AFA80();
  char v26 = v21;
  uint64_t v28 = v27;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  uint64_t v29 = v81;
  uint64_t v30 = (char *)v81 + active[5];
  char v31 = *(void (**)(uint64_t, char *, uint64_t))(v75[0] + 16);
  uint64_t v78 = v75[0] + 16;
  unint64_t v77 = v31;
  v31((uint64_t)v30, v82, v83);
  *uint64_t v29 = v25;
  v29[1] = v28;
  *((unsigned char *)v29 + active[6]) = v26;
  *(uint64_t *)((char *)v29 + active[7]) = 0;
  sub_1B5F220F4((uint64_t)v29, v2, (void (*)(void))type metadata accessor for BlueprintImpressionActiveSession);
  __swift_storeEnumTagSinglePayload(v2, 0, 1, (uint64_t)active);
  OUTLINED_FUNCTION_33_0();
  sub_1B5F22090(v2, v23);
  swift_endAccess();
  OUTLINED_FUNCTION_24();
  if (MEMORY[0x1BA9B1EC0](v1 + 24))
  {
    uint64_t v32 = *(void *)(v1 + 32);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v32 + 8))(v1, v29, ObjectType, v32);
    swift_unknownObjectRelease();
  }
  uint64_t v34 = (uint64_t *)(v1 + OBJC_IVAR____TtC5TeaUI38FloatingTabBarSidebarImpressionManager_activeImpressions);
  OUTLINED_FUNCTION_24();
  uint64_t v35 = *v34;
  uint64_t v36 = *(void *)(*v34 + 64);
  v75[1] = *v34 + 64;
  uint64_t v37 = 1 << *(unsigned char *)(v35 + 32);
  uint64_t v38 = -1;
  if (v37 < 64) {
    uint64_t v38 = ~(-1 << v37);
  }
  unint64_t v39 = v38 & v36;
  v75[2] = (unint64_t)(v37 + 63) >> 6;
  uint64_t v79 = v35;
  sub_1B61B1F70();
  uint64_t v40 = 0;
  unsigned int v76 = 0x4030200u >> (8 * v26);
  if (!v39) {
    goto LABEL_9;
  }
LABEL_8:
  uint64_t v84 = (v39 - 1) & v39;
  uint64_t v85 = v40;
  for (unint64_t i = __clz(__rbit64(v39)) | (v40 << 6); ; unint64_t i = __clz(__rbit64(v44)) + (v46 << 6))
  {
    long long v49 = (uint64_t *)(*(void *)(v79 + 48) + 16 * i);
    uint64_t v51 = *v49;
    uint64_t v50 = v49[1];
    uint64_t v52 = *(void *)(*(void *)(v79 + 56) + 8 * i);
    uint64_t v53 = *(void **)(v52 + 16);
    uint64_t v54 = v80;
    v77(v80, v82, v83);
    LOBYTE(v86) = v76;
    uint64_t v55 = *v29;
    uint64_t v56 = v29[1];
    uint64_t v57 = v52 + OBJC_IVAR____TtC5TeaUI37FloatingTabBarSidebarActiveImpression_metadata;
    OUTLINED_FUNCTION_24();
    sub_1B5F220F4(v57, (uint64_t)v87, (void (*)(void))sub_1B5E5F6A8);
    type metadata accessor for FloatingTabBarSidebarActiveImpression(0);
    OUTLINED_FUNCTION_51();
    sub_1B61B1F70();
    swift_retain();
    id v58 = v53;
    sub_1B61B1F70();
    uint64_t v59 = sub_1B61081AC((uint64_t)v58, v54, (char *)&v86, v55, v56, (uint64_t)v87);
    OUTLINED_FUNCTION_33_0();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v86 = (void *)*v34;
    uint64_t v60 = v86;
    *uint64_t v34 = 0x8000000000000000;
    unint64_t v61 = sub_1B5E46C8C();
    if (__OFADD__(v60[2], (v62 & 1) == 0))
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    unint64_t v63 = v61;
    char v64 = v62;
    sub_1B5F22154();
    char v65 = sub_1B61B3480();
    uint64_t v29 = v81;
    if (v65)
    {
      unint64_t v66 = sub_1B5E46C8C();
      if ((v64 & 1) != (v67 & 1)) {
        goto LABEL_44;
      }
      unint64_t v63 = v66;
    }
    double v68 = v86;
    if (v64)
    {
      uint64_t v69 = v86[7];
      swift_release();
      *(void *)(v69 + 8 * v63) = v59;
    }
    else
    {
      v86[(v63 >> 6) + 8] |= 1 << v63;
      double v70 = (void *)(v68[6] + 16 * v63);
      *double v70 = v51;
      v70[1] = v50;
      *(void *)(v68[7] + 8 * v63) = v59;
      uint64_t v71 = v68[2];
      BOOL v43 = __OFADD__(v71, 1);
      uint64_t v72 = v71 + 1;
      if (v43) {
        goto LABEL_41;
      }
      v68[2] = v72;
      sub_1B61B1F70();
    }
    *uint64_t v34 = (uint64_t)v68;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    uint64_t v40 = v85;
    unint64_t v39 = v84;
    if (v84) {
      goto LABEL_8;
    }
LABEL_9:
    if (__OFADD__(v40, 1)) {
      goto LABEL_42;
    }
    OUTLINED_FUNCTION_15_18();
    if (v42 == v43) {
      goto LABEL_38;
    }
    OUTLINED_FUNCTION_14_20();
    uint64_t v46 = v45;
    if (!v44)
    {
      OUTLINED_FUNCTION_12_25();
      if (v42 == v43) {
        goto LABEL_38;
      }
      OUTLINED_FUNCTION_10_27();
      if (!v44)
      {
        OUTLINED_FUNCTION_12_25();
        if (v42 == v43) {
          goto LABEL_38;
        }
        OUTLINED_FUNCTION_10_27();
        if (!v44) {
          break;
        }
      }
    }
LABEL_27:
    uint64_t v84 = (v44 - 1) & v44;
    uint64_t v85 = v46;
  }
  OUTLINED_FUNCTION_15_18();
  if (v42 == v43)
  {
LABEL_38:
    swift_release();
    sub_1B5F22220((uint64_t)v29, (void (*)(void))type metadata accessor for BlueprintImpressionActiveSession);
    goto LABEL_39;
  }
  OUTLINED_FUNCTION_14_20();
  if (v44)
  {
    uint64_t v46 = v47;
    goto LABEL_27;
  }
  while (!__OFADD__(v47, 1))
  {
    OUTLINED_FUNCTION_12_25();
    if (v42 == v43) {
      goto LABEL_38;
    }
    OUTLINED_FUNCTION_10_27();
    uint64_t v47 = v48 + 1;
    if (v44) {
      goto LABEL_27;
    }
  }
LABEL_43:
  __break(1u);
LABEL_44:
  sub_1B61B3840();
  __break(1u);
}

Swift::Void __swiftcall FloatingTabBarSidebarImpressionManager.endSession(trigger:)(TeaUI::BlueprintImpressionSessionTrigger trigger)
{
  uint64_t v3 = (unsigned __int8 *)trigger;
  uint64_t v82 = type metadata accessor for BlueprintImpressionSession();
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_4();
  uint64_t v83 = v5;
  sub_1B5F22038();
  uint64_t v7 = OUTLINED_FUNCTION_14(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_81();
  uint64_t v10 = v8 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v81 - v12;
  uint64_t active = type metadata accessor for BlueprintImpressionActiveSession();
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_4();
  uint64_t v95 = v16;
  uint64_t v17 = sub_1B61AFA70();
  OUTLINED_FUNCTION_0_10();
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_9_24();
  uint64_t v22 = MEMORY[0x1F4188790](v21);
  CGRect v24 = (char *)&v81 - v23;
  MEMORY[0x1F4188790](v22);
  char v26 = (char *)&v81 - v25;
  int v84 = *v3;
  sub_1B61AFA60();
  OUTLINED_FUNCTION_24();
  if (*(unsigned char *)(v1 + 16) != 1)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v26, v17);
    return;
  }
  uint64_t v94 = v26;
  uint64_t v27 = v1 + OBJC_IVAR____TtC5TeaUI38FloatingTabBarSidebarImpressionManager_activeSession;
  OUTLINED_FUNCTION_24();
  sub_1B5F220F4(v27, (uint64_t)v13, (void (*)(void))sub_1B5F22038);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, active) == 1)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v94, v17);
    sub_1B5F22220((uint64_t)v13, (void (*)(void))sub_1B5F22038);
    return;
  }
  uint64_t v93 = v17;
  sub_1B5F221BC((uint64_t)v13, (uint64_t)v95);
  uint64_t v86 = active;
  __swift_storeEnumTagSinglePayload(v10, 1, 1, active);
  OUTLINED_FUNCTION_33_0();
  sub_1B5F22090(v10, v27);
  swift_endAccess();
  uint64_t v28 = (uint64_t *)(v1 + OBJC_IVAR____TtC5TeaUI38FloatingTabBarSidebarImpressionManager_activeImpressions);
  OUTLINED_FUNCTION_24();
  uint64_t v29 = *v28;
  uint64_t v30 = *(void *)(*v28 + 64);
  uint64_t v88 = *v28 + 64;
  uint64_t v31 = 1 << *(unsigned char *)(v29 + 32);
  uint64_t v32 = -1;
  if (v31 < 64) {
    uint64_t v32 = ~(-1 << v31);
  }
  unint64_t v33 = v32 & v30;
  uint64_t v91 = v1 + OBJC_IVAR____TtC5TeaUI38FloatingTabBarSidebarImpressionManager_options;
  uint64_t v85 = v1;
  uint64_t v92 = v29;
  sub_1B61B1F70();
  uint64_t v87 = v1 + 24;
  OUTLINED_FUNCTION_24();
  uint64_t v34 = 0;
  unint64_t v89 = (unint64_t)(v31 + 63) >> 6;
  uint64_t v81 = v19;
  uint64_t v35 = (void (**)(uint64_t))(v19 + 16);
  unsigned int v90 = 0x4030200u >> (8 * v84);
  if (!v33) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v36 = __clz(__rbit64(v33));
  v33 &= v33 - 1;
  for (unint64_t i = v36 | (v34 << 6); ; unint64_t i = __clz(__rbit64(v42)) + (v34 << 6))
  {
    uint64_t v47 = *(void *)(*(void *)(v92 + 56) + 8 * i);
    uint64_t v48 = *(void **)(v47 + 16);
    long long v49 = *v35;
    OUTLINED_FUNCTION_18_4();
    v49(v50);
    OUTLINED_FUNCTION_18_4();
    v49(v51);
    char v98 = *(unsigned char *)(v47 + OBJC_IVAR____TtC5TeaUI37FloatingTabBarSidebarActiveImpression_startTrigger);
    char v97 = v90;
    uint64_t v52 = *v95;
    uint64_t v53 = v95[1];
    uint64_t v54 = v47 + OBJC_IVAR____TtC5TeaUI37FloatingTabBarSidebarActiveImpression_metadata;
    OUTLINED_FUNCTION_24();
    sub_1B5F220F4(v54, (uint64_t)v96, (void (*)(void))sub_1B5E5F6A8);
    type metadata accessor for FloatingTabBarSidebarImpression(0);
    OUTLINED_FUNCTION_51();
    uint64_t v55 = sub_1B6107C08((uint64_t)v48, (uint64_t)v24, v2, &v98, &v97, v52, v53, (uint64_t)v96);
    swift_retain();
    id v56 = v48;
    sub_1B61B1F70();
    sub_1B61AFA40();
    double v58 = v57;
    sub_1B61AFA40();
    if (*(double *)(v91 + 24) <= v58 - v59 && MEMORY[0x1BA9B1EC0](v87))
    {
      uint64_t v60 = v85;
      uint64_t v61 = *(void *)(v85 + 32);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 32))(v60, v55, ObjectType, v61);
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();
    }
    swift_release();
    if (v33) {
      goto LABEL_8;
    }
LABEL_9:
    uint64_t v38 = v86;
    if (__OFADD__(v34, 1))
    {
      __break(1u);
LABEL_42:
      __break(1u);
      return;
    }
    OUTLINED_FUNCTION_15_18();
    if (v39 == v40) {
      goto LABEL_37;
    }
    OUTLINED_FUNCTION_14_20();
    uint64_t v34 = v41;
    if (!v42)
    {
      uint64_t v34 = v41 + 1;
      OUTLINED_FUNCTION_6_33();
      if (v39 == v40) {
        goto LABEL_37;
      }
      OUTLINED_FUNCTION_3_49();
      if (!v42)
      {
        uint64_t v34 = v43 + 2;
        OUTLINED_FUNCTION_6_33();
        if (v39 == v40) {
          goto LABEL_37;
        }
        OUTLINED_FUNCTION_3_49();
        if (!v42)
        {
          uint64_t v34 = v44 + 3;
          OUTLINED_FUNCTION_6_33();
          if (v39 == v40) {
            goto LABEL_37;
          }
          OUTLINED_FUNCTION_3_49();
          if (!v42) {
            break;
          }
        }
      }
    }
LABEL_30:
    unint64_t v33 = (v42 - 1) & v42;
  }
  OUTLINED_FUNCTION_15_18();
  if (v39 != v40)
  {
    OUTLINED_FUNCTION_14_20();
    if (!v42)
    {
      while (1)
      {
        uint64_t v34 = v45 + 1;
        if (__OFADD__(v45, 1)) {
          goto LABEL_42;
        }
        OUTLINED_FUNCTION_6_33();
        if (v39 == v40) {
          goto LABEL_37;
        }
        OUTLINED_FUNCTION_3_49();
        uint64_t v45 = v46 + 1;
        if (v42) {
          goto LABEL_30;
        }
      }
    }
    uint64_t v34 = v45;
    goto LABEL_30;
  }
LABEL_37:
  swift_release();
  unint64_t v63 = v95;
  uint64_t v65 = *v95;
  uint64_t v64 = v95[1];
  unint64_t v66 = (int *)v82;
  char v67 = v83;
  uint64_t v68 = v38;
  uint64_t v69 = *v35;
  OUTLINED_FUNCTION_18_4();
  v69(v70);
  OUTLINED_FUNCTION_18_4();
  v69(v71);
  char v72 = *((unsigned char *)v63 + *(int *)(v68 + 24));
  uint64_t v73 = *(uint64_t *)((char *)v63 + *(int *)(v68 + 28));
  *char v67 = v65;
  v67[1] = v64;
  *((unsigned char *)v67 + v66[7]) = v72;
  *((unsigned char *)v67 + v66[8]) = v84;
  *(uint64_t *)((char *)v67 + v66[9]) = v73;
  uint64_t v74 = v87;
  OUTLINED_FUNCTION_24();
  if (MEMORY[0x1BA9B1EC0](v74))
  {
    uint64_t v75 = v85;
    uint64_t v76 = *(void *)(v85 + 32);
    uint64_t v77 = swift_getObjectType();
    uint64_t v78 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v76 + 16);
    sub_1B61B1F70();
    v78(v75, v67, v77, v76);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1B61B1F70();
  }
  sub_1B5F22220((uint64_t)v67, (void (*)(void))type metadata accessor for BlueprintImpressionSession);
  sub_1B5F22220((uint64_t)v95, (void (*)(void))type metadata accessor for BlueprintImpressionActiveSession);
  uint64_t v79 = OUTLINED_FUNCTION_16_13();
  v80(v79, v93);
}

uint64_t FloatingTabBarSidebarImpressionManager.startImpression(tab:trigger:)(void *a1, char *a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = sub_1B61AFA70();
  uint64_t v8 = OUTLINED_FUNCTION_14(v7);
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_7_30();
  sub_1B5F22038();
  uint64_t v10 = OUTLINED_FUNCTION_14(v9);
  MEMORY[0x1F4188790](v10);
  uint64_t v11 = OUTLINED_FUNCTION_8_23();
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)((char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v15 = *a2;
  uint64_t v16 = v2 + OBJC_IVAR____TtC5TeaUI38FloatingTabBarSidebarImpressionManager_activeSession;
  OUTLINED_FUNCTION_24();
  sub_1B5F220F4(v16, v3, (void (*)(void))sub_1B5F22038);
  if (__swift_getEnumTagSinglePayload(v3, 1, v11) == 1)
  {
    uint64_t v17 = (void (*)(void))sub_1B5F22038;
    uint64_t v18 = v3;
  }
  else
  {
    sub_1B5F221BC(v3, (uint64_t)v14);
    id v19 = a1;
    sub_1B61AFA60();
    char v32 = v15;
    uint64_t v20 = *v14;
    uint64_t v21 = v14[1];
    type metadata accessor for FloatingTabBarSidebarActiveImpression(0);
    memset(v31, 0, sizeof(v31));
    OUTLINED_FUNCTION_51();
    sub_1B61B1F70();
    uint64_t v22 = sub_1B61081AC((uint64_t)v19, v2, &v32, v20, v21, (uint64_t)v31);
    id v23 = objc_msgSend(v19, sel__identifier);
    uint64_t v24 = sub_1B61B20F0();
    uint64_t v26 = v25;

    OUTLINED_FUNCTION_33_0();
    uint64_t v27 = swift_retain();
    sub_1B5E43A80(v27, v24, v26);
    swift_endAccess();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_24();
    if (MEMORY[0x1BA9B1EC0](v4 + 24))
    {
      uint64_t v28 = *(void *)(v4 + 32);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 24))(v4, v22, ObjectType, v28);
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();
    }
    uint64_t v17 = (void (*)(void))type metadata accessor for BlueprintImpressionActiveSession;
    uint64_t v18 = (uint64_t)v14;
  }
  return sub_1B5F22220(v18, v17);
}

uint64_t FloatingTabBarSidebarImpressionManager.endImpression(tab:trigger:)(void *a1, unsigned __int8 *a2)
{
  double v58 = a1;
  sub_1B5F22038();
  uint64_t v6 = OUTLINED_FUNCTION_14(v5);
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = OUTLINED_FUNCTION_8_23();
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1B61AFA70();
  OUTLINED_FUNCTION_0_10();
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_81();
  uint64_t v17 = v15 - v16;
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v52 - v20;
  MEMORY[0x1F4188790](v19);
  id v23 = (char *)&v52 - v22;
  int v24 = *a2;
  sub_1B61AFA60();
  OUTLINED_FUNCTION_24();
  if (*(unsigned char *)(v2 + 16) != 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v23, v11);
  }
  LODWORD(v52) = v24;
  uint64_t v56 = v13;
  double v57 = v23;
  uint64_t v53 = v21;
  uint64_t v54 = v17;
  uint64_t v55 = v11;
  uint64_t v25 = v58;
  uint64_t v26 = v2;
  uint64_t v27 = v2 + OBJC_IVAR____TtC5TeaUI38FloatingTabBarSidebarImpressionManager_activeSession;
  OUTLINED_FUNCTION_24();
  sub_1B5F220F4(v27, v3, (void (*)(void))sub_1B5F22038);
  if (__swift_getEnumTagSinglePayload(v3, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v55);
    return sub_1B5F22220(v3, (void (*)(void))sub_1B5F22038);
  }
  else
  {
    uint64_t v29 = v10;
    sub_1B5F221BC(v3, (uint64_t)v10);
    id v30 = objc_msgSend(v25, sel__identifier);
    uint64_t v31 = sub_1B61B20F0();
    uint64_t v33 = v32;

    OUTLINED_FUNCTION_33_0();
    uint64_t v34 = sub_1B5E42C70(v31, v33);
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v35 = v56;
    if (v34)
    {
      unint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
      uint64_t v37 = (uint64_t)v53;
      uint64_t v38 = v55;
      v36(v53, v34 + OBJC_IVAR____TtC5TeaUI37FloatingTabBarSidebarActiveImpression_startDate, v55);
      char v39 = v25;
      uint64_t v40 = v54;
      v36((char *)v54, (uint64_t)v57, v38);
      char v61 = *(unsigned char *)(v34 + OBJC_IVAR____TtC5TeaUI37FloatingTabBarSidebarActiveImpression_startTrigger);
      char v60 = v52;
      uint64_t v41 = v29[1];
      uint64_t v52 = *v29;
      uint64_t v42 = v34 + OBJC_IVAR____TtC5TeaUI37FloatingTabBarSidebarActiveImpression_metadata;
      OUTLINED_FUNCTION_24();
      sub_1B5F220F4(v42, (uint64_t)v59, (void (*)(void))sub_1B5E5F6A8);
      type metadata accessor for FloatingTabBarSidebarImpression(0);
      OUTLINED_FUNCTION_51();
      uint64_t v43 = sub_1B6107C08((uint64_t)v39, v37, v40, &v61, &v60, v52, v41, (uint64_t)v59);
      id v44 = v39;
      sub_1B61B1F70();
      sub_1B61AFA40();
      double v46 = v45;
      sub_1B61AFA40();
      uint64_t v48 = (uint64_t)v29;
      if (*(double *)(v26 + OBJC_IVAR____TtC5TeaUI38FloatingTabBarSidebarImpressionManager_options + 24) <= v46 - v47
        && (OUTLINED_FUNCTION_24(), MEMORY[0x1BA9B1EC0](v26 + 24)))
      {
        uint64_t v49 = *(void *)(v26 + 32);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 32))(v26, v43, ObjectType, v49);
        swift_release();
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
        swift_release();
      }
      uint64_t v51 = v57;
      sub_1B5F22220(v48, (void (*)(void))type metadata accessor for BlueprintImpressionActiveSession);
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v51, v38);
    }
    else
    {
      sub_1B5F22220((uint64_t)v10, (void (*)(void))type metadata accessor for BlueprintImpressionActiveSession);
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v57, v55);
    }
  }
}

uint64_t FloatingTabBarSidebarImpressionManager.deinit()
{
  sub_1B5E437C4(v0 + 24);
  sub_1B5F22220(v0 + OBJC_IVAR____TtC5TeaUI38FloatingTabBarSidebarImpressionManager_activeSession, (void (*)(void))sub_1B5F22038);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FloatingTabBarSidebarImpressionManager.__deallocating_deinit()
{
  FloatingTabBarSidebarImpressionManager.deinit();
  return swift_deallocClassInstance();
}

void sub_1B5F22038()
{
  if (!qword_1EB6418C8)
  {
    type metadata accessor for BlueprintImpressionActiveSession();
    unint64_t v0 = sub_1B61B2F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB6418C8);
    }
  }
}

uint64_t sub_1B5F22090(uint64_t a1, uint64_t a2)
{
  sub_1B5F22038();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B5F220F4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_6_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

void sub_1B5F22154()
{
  if (!qword_1E9DA8EF0)
  {
    type metadata accessor for FloatingTabBarSidebarActiveImpression(255);
    unint64_t v0 = sub_1B61B34B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DA8EF0);
    }
  }
}

uint64_t sub_1B5F221BC(uint64_t a1, uint64_t a2)
{
  uint64_t active = type metadata accessor for BlueprintImpressionActiveSession();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(active - 8) + 32))(a2, a1, active);
  return a2;
}

uint64_t sub_1B5F22220(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_6_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1B5F22280()
{
  return type metadata accessor for FloatingTabBarSidebarImpressionManager();
}

uint64_t type metadata accessor for FloatingTabBarSidebarImpressionManager()
{
  uint64_t result = qword_1EB641918;
  if (!qword_1EB641918) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1B5F222D0()
{
  sub_1B5F22038();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for FloatingTabBarSidebarImpressionManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FloatingTabBarSidebarImpressionManager);
}

uint64_t dispatch thunk of FloatingTabBarSidebarImpressionManager.__allocating_init(options:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

id Action.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

Swift::Void __swiftcall Action.register(in:for:)(UIControl *in, UIControlEvents a2)
{
  [(UIControl *)in addTarget:v2 action:sel_handleAction forControlEvents:a2];
}

id Action.reset()()
{
  swift_retain();
  uint64_t v0 = sub_1B61B04F0();
  sub_1B5EB0C80(v0);
  swift_release();
  swift_release();
  swift_retain();
  sub_1B61B0510();
  swift_release();
  return v2;
}

id Action.then(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  type metadata accessor for Then();
  Then.__allocating_init(block:)(a1, a2);
  sub_1B5F23050(0, (unint64_t *)&qword_1EB642640, MEMORY[0x1E4FAAFF8]);
  swift_allocObject();
  swift_retain();
  sub_1B61B0B30();
  swift_retain();
  sub_1B61B0500();
  swift_release();
  id v6 = v3;
  swift_release();
  return v6;
}

id Action.register(in:for:)(void *a1, uint64_t *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  if (a2[1])
  {
    uint64_t v12 = ObjectType;
    v11[0] = v2;
    objc_allocWithZone(MEMORY[0x1E4FB1968]);
    id v6 = v2;
    id v7 = sub_1B5F22E4C(v11, (uint64_t)sel_handleLongPressWithRecognizer_);
    objc_msgSend(v7, sel_setDelegate_, v6, v11[0]);
  }
  else
  {
    uint64_t v8 = *a2;
    uint64_t v12 = ObjectType;
    v11[0] = v2;
    objc_allocWithZone(MEMORY[0x1E4FB1D38]);
    id v9 = v2;
    id v7 = sub_1B5EEAF0C(v11, (uint64_t)sel_handleAction);
    objc_msgSend(v7, sel_setNumberOfTapsRequired_, v8, v11[0]);
  }
  objc_msgSend(a1, sel_addGestureRecognizer_, v7);
  return v7;
}

unint64_t sub_1B5F226A0()
{
  unint64_t result = qword_1EB6478F0;
  if (!qword_1EB6478F0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB6478F0);
  }
  return result;
}

id Action.debounce(delay:block:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v4 = v3;
  type metadata accessor for Debounce();
  Debounce.__allocating_init(delay:block:)(a1, a2, a3);
  sub_1B5F23050(0, (unint64_t *)&qword_1EB642640, MEMORY[0x1E4FAAFF8]);
  swift_allocObject();
  swift_retain();
  sub_1B61B0B30();
  swift_retain();
  sub_1B61B0500();
  swift_release();
  id v8 = v4;
  swift_release();
  return v8;
}

void *Action.keyCommand(key:flags:title:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = *MEMORY[0x1E4FBC8C8] & *v15;
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = *(void *)(v11 + 80);
  void v13[3] = v12;
  v13[4] = ObjectType;
  type metadata accessor for KeyCommandBlock();
  swift_allocObject();
  *(void *)((char *)v15 + qword_1E9DAA398) = KeyCommandBlock.init(key:flags:title:block:)(a1, a2, a3, a4, a5, (uint64_t)sub_1B5F23000, (uint64_t)v13);
  sub_1B61B1F70();
  sub_1B61B1F70();
  swift_release();
  return v15;
}

void sub_1B5F2297C(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1BA9B1EC0](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    _s5TeaUI6ActionC7triggeryyF_0();
  }
}

void *Action.chain(action:)()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = *MEMORY[0x1E4FBC8C8] & *v5;
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  uint64_t v3 = (void *)swift_allocObject();
  v3[2] = *(void *)(v1 + 80);
  v3[3] = v2;
  v3[4] = ObjectType;

  swift_release();
  return v5;
}

void sub_1B5F22ACC()
{
  id Strong = (id)swift_unknownObjectUnownedLoadStrong();
  _s5TeaUI6ActionC7triggeryyF_0();
}

id sub_1B5F22B18(void *a1)
{
  id result = objc_msgSend(a1, sel_state);
  if (result == (id)1)
  {
    _s5TeaUI6ActionC7triggeryyF_0();
    objc_msgSend(a1, sel_setEnabled_, 0);
    return objc_msgSend(a1, sel_setEnabled_, 1);
  }
  return result;
}

void sub_1B5F22B8C(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1B5F22B18(v4);
}

void sub_1B5F22BF4(void *a1)
{
  id v1 = a1;
  _s5TeaUI6ActionC7triggeryyF_0();
}

Swift::Bool __swiftcall Action.gestureRecognizer(_:shouldRecognizeSimultaneouslyWith:)(UIGestureRecognizer _, UIGestureRecognizer shouldRecognizeSimultaneouslyWith)
{
  return 1;
}

uint64_t sub_1B5F22C44()
{
  return 1;
}

id Action.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = qword_1E9DAA390;
  sub_1B5F23050(0, &qword_1EB642630, MEMORY[0x1E4FAAAD0]);
  swift_allocObject();
  uint64_t v3 = v0;
  *(void *)&v0[v2] = sub_1B61B0520();
  *(void *)&v3[qword_1E9DAA398] = 0;

  v5.receiver = v3;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id sub_1B5F22D00()
{
  return Action.init()();
}

id Action.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B5F22D5C()
{
  swift_release();
  return swift_release();
}

uint64_t Action.keyCommandBlocks.getter()
{
  uint64_t v1 = *(void *)(v0 + qword_1E9DAA398);
  if (v1)
  {
    sub_1B5E88D04();
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1B61C28A0;
    *(void *)(v2 + 32) = v1;
    uint64_t v5 = v2;
    sub_1B61B2510();
    uint64_t v3 = v5;
  }
  else
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
  }
  swift_retain();
  return v3;
}

uint64_t sub_1B5F22E28()
{
  return Action.keyCommandBlocks.getter();
}

id sub_1B5F22E4C(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[3];
  if (v4)
  {
    id v6 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v7 = *(void *)(v4 - 8);
    MEMORY[0x1F4188790](v6);
    id v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    uint64_t v10 = sub_1B61B3740();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    uint64_t v10 = 0;
  }
  id v11 = objc_msgSend(v2, sel_initWithTarget_action_, v10, a2);
  swift_unknownObjectRelease();
  return v11;
}

uint64_t sub_1B5F22F90()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B5F22FC8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1B5F23000()
{
  sub_1B5F2297C(*(void *)(v0 + 24));
}

uint64_t sub_1B5F2300C()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

void sub_1B5F23044()
{
}

void sub_1B5F23050(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1B5F226A0();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1B5F230B0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Action()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t getEnumTagSinglePayload for CollectionViewSupplementaryOrdering(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CollectionViewSupplementaryOrdering(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)id result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)id result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1B5F23168(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1B5F23184(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)id result = (a2 - 1);
    char v2 = 1;
  }
  else
  {
    char v2 = 0;
  }
  *(unsigned char *)(result + 8) = v2;
  return result;
}

uint64_t type metadata accessor for Action.Gesture()
{
  return __swift_instantiateGenericMetadata();
}

id Plugin.pluginViewController.getter()
{
  return *(id *)(v0 + 56);
}

uint64_t Plugin.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1B61B1F70();
  return v1;
}

uint64_t Plugin.isSticky.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_1B5F23200(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = swift_unknownObjectRetain();
  return sub_1B5F23284(v2, v1);
}

uint64_t sub_1B5F2323C()
{
  swift_beginAccess();
  return MEMORY[0x1BA9B1EC0](v0 + 40);
}

uint64_t sub_1B5F23284(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 48) = a2;
  OUTLINED_FUNCTION_17();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_1B5F232E4(void *a1))(uint64_t a1, char a2)
{
  char v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  OUTLINED_FUNCTION_17();
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1BA9B1EC0](v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1B5F23360;
}

void sub_1B5F23360(uint64_t a1, char a2)
{
  char v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 48) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_1B5F233E4()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 56))(ObjectType, v1);
}

uint64_t Plugin.__allocating_init(identifier:viewController:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = OUTLINED_FUNCTION_17();
  Plugin.init(identifier:viewController:)(v5, v6, a3);
  return v4;
}

void *Plugin.init(identifier:viewController:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1B61B0120();
  MEMORY[0x1F4188790](v8 - 8);
  v3[6] = 0;
  swift_unknownObjectWeakInit();
  v3[9] = 0;
  sub_1B61B0110();
  sub_1B61B0140();
  OUTLINED_FUNCTION_51();
  uint64_t v9 = sub_1B61B0130();
  v3[11] = 0;
  v3[12] = 0;
  v3[10] = v9;
  sub_1B61B0110();
  swift_allocObject();
  v3[13] = sub_1B61B0130();
  sub_1B5F23640();
  OUTLINED_FUNCTION_51();
  v3[14] = sub_1B61B09B0();
  v3[2] = a1;
  v3[3] = a2;
  uint64_t v10 = *(void **)a3;
  uint64_t v11 = *(void *)(a3 + 8);
  v4[7] = *(void *)a3;
  v4[8] = v11;
  *((unsigned char *)v4 + 32) = 1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40);
  id v14 = v10;
  v13(1, ObjectType, v11);
  uint64_t v15 = swift_getObjectType();
  uint64_t v16 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v11 + 16);
  swift_retain();
  v16(v4, &protocol witness table for Plugin, v15, v11);
  *(void *)a3 = v10;
  *(void *)(a3 + 8) = v11;
  return v4;
}

void sub_1B5F23640()
{
  if (!qword_1EB640B80)
  {
    unint64_t v0 = sub_1B61B09C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB640B80);
    }
  }
}

uint64_t Plugin.__allocating_init(identifier:isSticky:viewController:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  Plugin.init(identifier:isSticky:viewController:)(a1, a2, a3, a4);
  return v8;
}

void *Plugin.init(identifier:isSticky:viewController:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1B61B0120();
  MEMORY[0x1F4188790](v10 - 8);
  v4[6] = 0;
  swift_unknownObjectWeakInit();
  v4[9] = 0;
  sub_1B61B0110();
  sub_1B61B0140();
  OUTLINED_FUNCTION_51();
  uint64_t v11 = sub_1B61B0130();
  v4[11] = 0;
  v4[12] = 0;
  v4[10] = v11;
  sub_1B61B0110();
  swift_allocObject();
  v4[13] = sub_1B61B0130();
  sub_1B5F23640();
  OUTLINED_FUNCTION_51();
  v4[14] = sub_1B61B09B0();
  v4[2] = a1;
  unsigned __int8 v4[3] = a2;
  uint64_t v12 = *(void **)a4;
  uint64_t v13 = *(void *)(a4 + 8);
  v5[7] = *(void *)a4;
  v5[8] = v13;
  *((unsigned char *)v5 + 32) = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 40);
  id v16 = v12;
  v15(1, ObjectType, v13);
  uint64_t v17 = swift_getObjectType();
  uint64_t v18 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v13 + 16);
  swift_retain();
  v18(v5, &protocol witness table for Plugin, v17, v13);
  *(void *)a4 = v12;
  *(void *)(a4 + 8) = v13;
  return v5;
}

void sub_1B5F238A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  sub_1B61B1E30();
  OUTLINED_FUNCTION_0_62();
  MEMORY[0x1F4188790](v7);
  char v8 = OUTLINED_FUNCTION_1_61();
  uint64_t *v3 = sub_1B61B2C50();
  uint64_t v9 = OUTLINED_FUNCTION_2_55();
  v10(v9);
  sub_1B61B1E60();
  uint64_t v11 = OUTLINED_FUNCTION_7_5();
  v12(v11);
  if (v8)
  {
    if (v4[9])
    {
      sub_1B5F23BF0(a1, a2);
    }
    else
    {
      uint64_t v13 = sub_1B5F23FE4();
      id v14 = (void *)v4[7];
      uint64_t v15 = v4[8];
      uint64_t ObjectType = swift_getObjectType();

      uint64_t v17 = swift_allocObject();
      swift_weakInit();
      uint64_t v18 = (void *)swift_allocObject();
      id v18[2] = v17;
      v18[3] = a1;
      v18[4] = a2;
      v18[5] = v13;
      uint64_t v19 = *(void (**)(uint64_t (*)(double, double), void *, uint64_t, uint64_t))(v15 + 104);
      id v20 = v14;
      swift_retain();
      swift_retain();
      v19(sub_1B5F24094, v18, ObjectType, v15);
      swift_release();
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B5F23A64(double a1, double a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = (void *)result;
    MEMORY[0x1F4188790](result);
    sub_1B61B0140();
    swift_retain();
    sub_1B61B0B10();
    swift_release();
    uint64_t v12 = v11[2];
    uint64_t v13 = v11[3];
    uint64_t v15 = (void *)v11[7];
    uint64_t v14 = v11[8];
    type metadata accessor for PluginModel();
    swift_allocObject();
    sub_1B61B1F70();
    uint64_t v16 = sub_1B5E6296C(v12, v13, a6, v15, v14, a1, a2);
    a4(v16);
    swift_release();
    sub_1B61B09A0();
    return swift_release();
  }
  return result;
}

void sub_1B5F23BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  sub_1B61B1E30();
  OUTLINED_FUNCTION_0_62();
  MEMORY[0x1F4188790](v7);
  char v8 = OUTLINED_FUNCTION_1_61();
  uint64_t *v3 = sub_1B61B2C50();
  uint64_t v9 = OUTLINED_FUNCTION_2_55();
  v10(v9);
  sub_1B61B1E60();
  uint64_t v11 = OUTLINED_FUNCTION_7_5();
  v12(v11);
  if (v8)
  {
    if (*(void *)(v4 + 72))
    {
      sub_1B61B0E80();
      uint64_t v13 = (void *)sub_1B61B01B0();
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = a1;
      *(void *)(v14 + 24) = a2;
      type metadata accessor for Plugin();
      swift_retain();
      sub_1B61B0DC0();
      swift_release();
      swift_release();

      swift_release();
    }
    else
    {
      uint64_t v15 = OUTLINED_FUNCTION_17();
      sub_1B5F238A8(v15, v16);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B5F23D60()
{
  uint64_t result = MEMORY[0x1BA9ADB30]();
  if (!result) {
    __break(1u);
  }
  return result;
}

void sub_1B5F23D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a2;
  v9[4] = a3;
  uint64_t v10 = *(void (**)(uint64_t (*)(double, double), void *, uint64_t, uint64_t))(v5 + 112);
  id v11 = v6;
  swift_retain();
  swift_retain();
  v10(sub_1B5F246E8, v9, ObjectType, v5);
  swift_release();
  swift_release();
}

uint64_t sub_1B5F23E98(double a1, double a2, uint64_t a3, void (*a4)(void))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    swift_retain();
    sub_1B61B00F0();
    swift_release();
    if (*(double *)(v8 + 88) == a1 && *(double *)(v8 + 96) == a2)
    {
      uint64_t v10 = *(void *)(v8 + 72);
    }
    else
    {
      uint64_t v10 = sub_1B5F23FE4();
      *(double *)(v8 + 88) = a1;
      *(double *)(v8 + 96) = a2;
    }
    swift_retain();
    sub_1B61B0100();
    swift_release();
    uint64_t v11 = *(void *)(v8 + 16);
    uint64_t v12 = *(void *)(v8 + 24);
    uint64_t v14 = *(void **)(v8 + 56);
    uint64_t v13 = *(void *)(v8 + 64);
    type metadata accessor for PluginModel();
    swift_allocObject();
    sub_1B61B1F70();
    sub_1B5E6296C(v11, v12, v10, v14, v13, a1, a2);
    a4();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B5F23FE4()
{
  swift_retain();
  sub_1B61B00F0();
  uint64_t result = swift_release();
  uint64_t v2 = *(void *)(v0 + 72);
  if (__OFADD__(v2, 1))
  {
    __break(1u);
  }
  else
  {
    *(void *)(v0 + 72) = v2 + 1;
    swift_retain();
    sub_1B61B0100();
    swift_release();
    return v2;
  }
  return result;
}

uint64_t sub_1B5F24054()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B5F2408C()
{
  return objectdestroy_2Tm_2();
}

uint64_t sub_1B5F24094(double a1, double a2)
{
  return sub_1B5F23A64(a1, a2, *(void *)(v2 + 16), *(void (**)(uint64_t))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1B5F240A0()
{
  return sub_1B5F23D60();
}

uint64_t sub_1B5F240BC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1B5F240F4(uint64_t a1)
{
  sub_1B5F23D94(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t type metadata accessor for Plugin()
{
  return self;
}

uint64_t Plugin.deinit()
{
  swift_bridgeObjectRelease();
  sub_1B5E437C4(v0 + 40);

  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t Plugin.__deallocating_deinit()
{
  Plugin.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B5F2419C()
{
  return Plugin.identifier.getter();
}

uint64_t Plugin.pluggableViewController(_:didChangeSizeTo:)(double a1, double a2)
{
  char v3 = v2;
  uint64_t v6 = sub_1B5F23FE4();
  swift_beginAccess();
  uint64_t result = MEMORY[0x1BA9B1EC0](v3 + 5);
  if (result)
  {
    uint64_t v8 = v3[6];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = v3[2];
    uint64_t v11 = v3[3];
    uint64_t v13 = (void *)v3[7];
    uint64_t v12 = v3[8];
    type metadata accessor for PluginModel();
    swift_allocObject();
    sub_1B61B1F70();
    uint64_t v14 = sub_1B5E6296C(v10, v11, v6, v13, v12, a1, a2);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v8 + 8))(v3, v14, ObjectType, v8);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_1B5F242E8()
{
  return Plugin.pluginViewController.getter();
}

uint64_t Plugin.description.getter()
{
  v11[1] = *MEMORY[0x1E4F143B8];
  sub_1B5F2446C(0, (unint64_t *)&qword_1EB64D4A0, 255, (uint64_t (*)(uint64_t))sub_1B5E4CD54, MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1B61C0140;
  sub_1B5F2446C(0, &qword_1E9DAA400, v2, (uint64_t (*)(uint64_t))type metadata accessor for Plugin, MEMORY[0x1E4FBB078]);
  *(void *)(v1 + 56) = v3;
  *(void *)(v1 + 64) = sub_1B5F244D0(v3, v4, v5);
  *(void *)(v1 + 32) = v11;
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 24);
  *(void *)(v1 + 96) = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 104) = sub_1B5E2E40C();
  *(void *)(v1 + 72) = v7;
  *(void *)(v1 + 80) = v6;
  char v8 = *(unsigned char *)(v0 + 32);
  uint64_t v9 = MEMORY[0x1E4FBB3C8];
  *(void *)(v1 + 136) = MEMORY[0x1E4FBB390];
  *(void *)(v1 + 144) = v9;
  *(unsigned char *)(v1 + 112) = v8;
  sub_1B61B1F70();
  return sub_1B61B2130();
}

void sub_1B5F2446C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = a4(a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1B5F244D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t result = qword_1E9DAA408;
  if (!qword_1E9DAA408)
  {
    sub_1B5F2446C(255, &qword_1E9DAA400, a3, (uint64_t (*)(uint64_t))type metadata accessor for Plugin, MEMORY[0x1E4FBB078]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA408);
  }
  return result;
}

uint64_t sub_1B5F24550()
{
  return Plugin.description.getter();
}

uint64_t sub_1B5F24574@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5F2323C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t dispatch thunk of PluginDelegate.plugin(_:didResizePluginModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t method lookup function for Plugin(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Plugin);
}

uint64_t dispatch thunk of Plugin.delegate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of Plugin.delegate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of Plugin.delegate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of Plugin.itemCount.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of Plugin.__allocating_init(identifier:viewController:)()
{
  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t dispatch thunk of Plugin.__allocating_init(identifier:isSticky:viewController:)()
{
  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of Plugin.initialize(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of Plugin.relayout(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t sub_1B5F246E0()
{
  return objectdestroy_2Tm_2();
}

uint64_t sub_1B5F246E8(double a1, double a2)
{
  return sub_1B5F23E98(a1, a2, *(void *)(v2 + 16), *(void (**)(void))(v2 + 24));
}

__n128 sub_1B5F246F4()
{
  __n128 result = *(__n128 *)(v0 + 24);
  *(__n128 *)(*(void *)(v0 + 16) + 88) = result;
  return result;
}

void BlueprintImpressionManager.startImpression(at:view:triggerSource:)(uint64_t *a1, void *a2, char *a3)
{
  v292 = a3;
  v277 = a2;
  v290 = a1;
  uint64_t v291 = *v3;
  uint64_t v4 = *(void *)(v291 + 88);
  uint64_t v5 = *(void *)(v291 + 80);
  uint64_t v6 = OUTLINED_FUNCTION_108_0();
  uint64_t v7 = OUTLINED_FUNCTION_108_0();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v9 = swift_getAssociatedConformanceWitness();
  uint64_t v296 = v6;
  uint64_t v297 = v7;
  uint64_t v298 = AssociatedConformanceWitness;
  uint64_t v299 = v9;
  uint64_t active = type metadata accessor for BlueprintActiveImpressionSection();
  OUTLINED_FUNCTION_0_10();
  uint64_t v251 = v10;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_73_2(v12);
  uint64_t v258 = type metadata accessor for BlueprintImpressionManager.SectionContext();
  uint64_t v256 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_10();
  uint64_t v255 = v13;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_116();
  OUTLINED_FUNCTION_72_2(v16);
  type metadata accessor for BlueprintSection();
  uint64_t v260 = OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_0_10();
  uint64_t v259 = v17;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_30(v19);
  v267 = &protocol requirements base descriptor for BlueprintProviderType;
  uint64_t v261 = 0x803DFA27D5;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_116();
  OUTLINED_FUNCTION_72_2(v22);
  uint64_t v266 = type metadata accessor for BlueprintActiveImpression();
  OUTLINED_FUNCTION_0_10();
  uint64_t v265 = v23;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_21_4(v25);
  uint64_t v268 = sub_1B61AFA70();
  OUTLINED_FUNCTION_0_10();
  uint64_t v269 = v26;
  MEMORY[0x1F4188790](v27);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v28);
  OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v29);
  OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v30);
  OUTLINED_FUNCTION_116();
  OUTLINED_FUNCTION_21_4(v31);
  uint64_t v285 = v5;
  uint64_t v286 = v4;
  uint64_t v272 = type metadata accessor for BlueprintImpressionManager.Session();
  OUTLINED_FUNCTION_0_10();
  uint64_t v271 = v32;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v33);
  v273 = (uint64_t *)((char *)&v239 - v34);
  uint64_t v283 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v274 = v35;
  MEMORY[0x1F4188790](v36);
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_73_2(v37);
  type metadata accessor for BlueprintItem();
  uint64_t v38 = OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_0_10();
  uint64_t v281 = v39;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v40);
  uint64_t v42 = (char *)&v239 - v41;
  v287 = &qword_1B620370C;
  OUTLINED_FUNCTION_0_13();
  uint64_t v44 = v43;
  MEMORY[0x1F4188790](v45);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v46);
  OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v47);
  OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_2_7();
  uint64_t v49 = MEMORY[0x1F4188790](v48);
  MEMORY[0x1F4188790](v49);
  uint64_t v51 = (char *)&v239 - v50;
  uint64_t v278 = v6;
  uint64_t v296 = v6;
  uint64_t v297 = v7;
  uint64_t v52 = v3;
  uint64_t v279 = v7;
  uint64_t v276 = AssociatedConformanceWitness;
  uint64_t v298 = AssociatedConformanceWitness;
  uint64_t v299 = v9;
  uint64_t v280 = v9;
  uint64_t v288 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  uint64_t v284 = v53;
  MEMORY[0x1F4188790](v54);
  OUTLINED_FUNCTION_81();
  uint64_t v57 = v55 - v56;
  uint64_t v59 = MEMORY[0x1F4188790](v58);
  char v61 = (char *)&v239 - v60;
  uint64_t v62 = MEMORY[0x1F4188790](v59);
  uint64_t v64 = (char *)&v239 - v63;
  MEMORY[0x1F4188790](v62);
  OUTLINED_FUNCTION_116();
  OUTLINED_FUNCTION_30(v65);
  LODWORD(v292) = *v292;
  OUTLINED_FUNCTION_56_4();
  if (v66 == 1 && (sub_1B5F2808C() & 1) != 0)
  {
    v246 = v64;
    uint64_t v291 = v57;
    uint64_t v247 = v44;
    OUTLINED_FUNCTION_21_13();
    BlueprintProviderType.blueprint.getter();
    uint64_t v67 = v288;
    Blueprint.item(indexPath:)();
    uint64_t v68 = v287;
    OUTLINED_FUNCTION_28_11((uint64_t)v42, 1, (uint64_t)v287);
    if (v86)
    {
      OUTLINED_FUNCTION_5_1();
      v69();
      (*(void (**)(char *, uint64_t))(v281 + 8))(v42, v38);
      return;
    }
    OUTLINED_FUNCTION_82_2();
    OUTLINED_FUNCTION_81_1();
    OUTLINED_FUNCTION_107();
    v70();
    char v71 = BlueprintItem.isImpressionable.getter((uint64_t)v68);
    if ((v71 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t *))(v67 + 8))(v51, v68);
LABEL_15:
      uint64_t v91 = OUTLINED_FUNCTION_54_6();
LABEL_26:
      uint64_t v110 = v288;
LABEL_27:
      v92(v91, v110);
      return;
    }
    char v72 = v51;
    v241 = v61;
    v245 = v52 + 5;
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_97_1();
    OUTLINED_FUNCTION_38_7();
    OUTLINED_FUNCTION_57_5();
    uint64_t v73 = type metadata accessor for BlueprintImpressionManager.Context();
    sub_1B5E5F1A0();
    uint64_t v74 = OUTLINED_FUNCTION_36_8();
    uint64_t v244 = v73;
    uint64_t v281 = v75;
    MEMORY[0x1BA9AF190](v74);
    uint64_t v76 = v295;
    if (v295)
    {
      swift_endAccess();
      OUTLINED_FUNCTION_35_10();
      OUTLINED_FUNCTION_5_30();
      uint64_t v77 = v247;
      OUTLINED_FUNCTION_33();
      v78();
      uint64_t v79 = BlueprintItem.identifier.getter();
      uint64_t v81 = v80;
      uint64_t v82 = *(void *)(v77 + 8);
      v243 = (uint64_t *)(v77 + 8);
      uint64_t v242 = v82;
      OUTLINED_FUNCTION_59();
      v83();
      int v84 = v72;
      BOOL v86 = v79 == BlueprintItem.identifier.getter() && v81 == v85;
      if (v86)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        OUTLINED_FUNCTION_75_2();
        char v87 = OUTLINED_FUNCTION_44_7();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v87 & 1) == 0)
        {
          OUTLINED_FUNCTION_35_10();
          unint64_t v89 = (void *)MEMORY[0x1BA9B1EC0](v76 + *(void *)(v88 + 176));
          LOBYTE(v296) = (_BYTE)v292;
          BlueprintImpressionManager.endImpression(at:view:triggerSource:)();
          swift_release();

          OUTLINED_FUNCTION_97_1();
          uint64_t v90 = v247;
          goto LABEL_17;
        }
      }
      OUTLINED_FUNCTION_35_10();
      swift_unknownObjectWeakAssign();
      uint64_t v107 = v289;
      sub_1B5F2DAF0(v289, v84);
      OUTLINED_FUNCTION_33_8();
      OUTLINED_FUNCTION_63_5();
      OUTLINED_FUNCTION_48_0();
      v108();
      uint64_t v300 = v76;
      OUTLINED_FUNCTION_33_0();
      OUTLINED_FUNCTION_65_2();
      swift_retain();
      sub_1B61B2000();
      swift_endAccess();
      swift_release();
      OUTLINED_FUNCTION_59();
      v109();
      uint64_t v92 = *(void (**)(uint64_t, uint64_t))(v284 + 8);
      uint64_t v91 = v107;
      goto LABEL_26;
    }
    swift_endAccess();
    uint64_t v90 = v247;
    int v84 = v72;
LABEL_17:
    v243 = v52 + 7;
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_38_7();
    OUTLINED_FUNCTION_57_5();
    type metadata accessor for BlueprintImpressionManager.StagedContext();
    uint64_t v93 = OUTLINED_FUNCTION_36_8();
    uint64_t v242 = v94;
    MEMORY[0x1BA9AF190](v93);
    uint64_t v95 = v295;
    if (v295)
    {
      swift_endAccess();
      OUTLINED_FUNCTION_35_10();
      OUTLINED_FUNCTION_5_30();
      OUTLINED_FUNCTION_40_9();
      uint64_t v96 = v270;
      char v97 = v287;
      OUTLINED_FUNCTION_33();
      v98();
      uint64_t v99 = BlueprintItem.identifier.getter();
      uint64_t v101 = v100;
      uint64_t v102 = v96;
      char v103 = *(void (**)(void))(v90 + 8);
      ((void (*)(uint64_t, uint64_t *))v103)(v102, v97);
      if (v99 == BlueprintItem.identifier.getter() && v101 == v104)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        OUTLINED_FUNCTION_75_2();
        char v106 = OUTLINED_FUNCTION_44_7();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v106 & 1) == 0)
        {
          OUTLINED_FUNCTION_8_0();
          OUTLINED_FUNCTION_65_2();
          sub_1B61B1F30();
          swift_endAccess();
          swift_release();
          swift_release();
          OUTLINED_FUNCTION_42();
          v103();
          goto LABEL_15;
        }
      }
      OUTLINED_FUNCTION_35_10();
      swift_unknownObjectWeakAssign();
      sub_1B5F2DAF0(v289, v84);
      OUTLINED_FUNCTION_37_10();
      OUTLINED_FUNCTION_63_5();
      OUTLINED_FUNCTION_33();
      v111();
      uint64_t v300 = v95;
      OUTLINED_FUNCTION_33_0();
      OUTLINED_FUNCTION_65_2();
      swift_retain();
      OUTLINED_FUNCTION_89_1();
      sub_1B61B2000();
      swift_endAccess();
      swift_release();
    }
    else
    {
      swift_endAccess();
    }
    uint64_t v112 = v272;
    uint64_t v113 = v271;
    OUTLINED_FUNCTION_21_13();
    v115 = (char *)v52 + *(void *)(v114 + 136);
    OUTLINED_FUNCTION_5_30();
    uint64_t v116 = v273;
    (*(void (**)(uint64_t *, char *, uint64_t))(v113 + 16))(v273, v115, v112);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v118 = v288;
    if (EnumCaseMultiPayload == 1)
    {
      OUTLINED_FUNCTION_46();
      v119();
      uint64_t v91 = OUTLINED_FUNCTION_54_6();
      uint64_t v110 = v118;
      goto LABEL_27;
    }
    uint64_t v120 = v116[1];
    uint64_t v272 = *v116;
    uint64_t v121 = OUTLINED_FUNCTION_95_1();
    uint64_t v122 = BlueprintItem.impressionTraits.getter(v121);
    sub_1B5F295C0(v277, v122);
    double v124 = v123;
    swift_bridgeObjectRelease();
    BlueprintItem.impressionManagerOptions.getter(v112);
    if (v298 == 255)
    {
      OUTLINED_FUNCTION_21_13();
      uint64_t v126 = (uint64_t *)((char *)v52 + *(void *)(v125 + 168));
      uint64_t v270 = v126[1];
      int v240 = *((unsigned __int8 *)v126 + 16);
    }
    else
    {
      uint64_t v270 = v297;
      int v240 = v298 & 1;
      uint64_t v126 = &v296;
    }
    double v127 = *(double *)v126;
    sub_1B5F296FC();
    v273 = (uint64_t *)((char *)v116 + *(int *)(v128 + 48));
    uint64_t v271 = v120;
    if (v127 > v124)
    {
      if (qword_1EB648DC0 != -1) {
        swift_once();
      }
      id v129 = (id)qword_1EB654B48;
      sub_1B61B2B70();
      sub_1B5E6B8D4(0, (unint64_t *)&qword_1EB64D4A0, (unint64_t *)&qword_1EB64D4B0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v130 = swift_allocObject();
      *(_OWORD *)(v130 + 16) = xmmword_1B61C0140;
      OUTLINED_FUNCTION_21_13();
      unint64_t v132 = (uint64_t *)((char *)v52 + *(void *)(v131 + 160));
      uint64_t v134 = *v132;
      uint64_t v133 = v132[1];
      uint64_t v135 = MEMORY[0x1E4FBB1A0];
      *(void *)(v136 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v137 = sub_1B5E2E40C();
      *(void *)(v130 + 64) = v137;
      *(void *)(v130 + 32) = v134;
      *(void *)(v130 + 40) = v133;
      sub_1B61B1F70();
      uint64_t v138 = BlueprintItem.visualDescription.getter((uint64_t)v287);
      *(void *)(v130 + 96) = v135;
      *(void *)(v130 + 104) = v137;
      *(void *)(v130 + 72) = v138;
      *(void *)(v130 + 80) = v139;
      *(void *)(v130 + 136) = MEMORY[0x1E4FBC958];
      *(void *)(v130 + 144) = sub_1B5F2981C();
      *(double *)(v130 + 112) = v124;
      sub_1B61B0F90();

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_33_8();
      OUTLINED_FUNCTION_55_6();
      OUTLINED_FUNCTION_48_0();
      v140();
      uint64_t v141 = v284;
      uint64_t v142 = v291;
      uint64_t v143 = v288;
      OUTLINED_FUNCTION_33();
      v144();
      OUTLINED_FUNCTION_40_9();
      uint64_t v145 = v262;
      OUTLINED_FUNCTION_33();
      v146();
      OUTLINED_FUNCTION_25_12();
      uint64_t v148 = *(void **)(v147 - 256);
      id v149 = v148;
      uint64_t v295 = sub_1B5F29A34(v142, v145, v272, v271, v148, &v296);
      OUTLINED_FUNCTION_8_0();
      sub_1B61B1FD0();
      sub_1B61B2000();
      swift_endAccess();
      OUTLINED_FUNCTION_46();
      v150();
      (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v289, v143);
      goto LABEL_41;
    }
    if (qword_1EB648DC0 != -1) {
      swift_once();
    }
    id v152 = (id)qword_1EB654B48;
    LODWORD(v291) = sub_1B61B2B70();
    sub_1B5E6B8D4(0, (unint64_t *)&qword_1EB64D4A0, (unint64_t *)&qword_1EB64D4B0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v153 = swift_allocObject();
    *(_OWORD *)(v153 + 16) = xmmword_1B61C0140;
    OUTLINED_FUNCTION_21_13();
    v155 = (uint64_t *)((char *)v52 + *(void *)(v154 + 160));
    uint64_t v156 = *v155;
    uint64_t v157 = v155[1];
    uint64_t v158 = MEMORY[0x1E4FBB1A0];
    *(void *)(v159 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v160 = sub_1B5E2E40C();
    *(void *)(v153 + 64) = v160;
    *(void *)(v153 + 32) = v156;
    *(void *)(v153 + 40) = v157;
    sub_1B61B1F70();
    uint64_t v161 = OUTLINED_FUNCTION_95_1();
    uint64_t v162 = BlueprintItem.visualDescription.getter(v161);
    *(void *)(v153 + 96) = v158;
    *(void *)(v153 + 104) = v160;
    *(void *)(v153 + 72) = v162;
    *(void *)(v153 + 80) = v163;
    *(void *)(v153 + 136) = MEMORY[0x1E4FBC958];
    *(void *)(v153 + 144) = sub_1B5F2981C();
    *(double *)(v153 + 112) = v124;
    sub_1B61B0F90();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_37_10();
    OUTLINED_FUNCTION_55_6();
    uint64_t v262 = v164;
    uint64_t v239 = v165;
    OUTLINED_FUNCTION_33();
    v166();
    OUTLINED_FUNCTION_40_9();
    OUTLINED_FUNCTION_88_0();
    uint64_t v291 = (uint64_t)v84;
    OUTLINED_FUNCTION_33();
    v167();
    uint64_t v168 = v263;
    sub_1B61AFA60();
    LODWORD(v292) = v292 & 0x7F;
    LOBYTE(v295) = (_BYTE)v292;
    OUTLINED_FUNCTION_25_12();
    v170 = *(void **)(v169 - 256);
    id v171 = v170;
    sub_1B61B1F70();
    uint64_t v172 = OUTLINED_FUNCTION_68_1();
    uint64_t v176 = sub_1B5F29868(v172, v173, v168, v174, v272, v120, v170, v175);
    OUTLINED_FUNCTION_33_8();
    OUTLINED_FUNCTION_48_0();
    v177();
    uint64_t v295 = v176;
    OUTLINED_FUNCTION_8_0();
    sub_1B61B1FD0();
    swift_retain();
    sub_1B61B2000();
    swift_endAccess();
    OUTLINED_FUNCTION_8_0();
    sub_1B61B1FD0();
    sub_1B61B1F30();
    swift_endAccess();
    swift_release();
    double v178 = sub_1B5F298FC(v170);
    LOBYTE(v296) = (_BYTE)v292;
    sub_1B5F2DEDC((unsigned __int8 *)&v296, v282, v178, v179, v180, v181);
    v290 = v52 + 3;
    if (MEMORY[0x1BA9B1EC0]())
    {
      swift_getObjectType();
      OUTLINED_FUNCTION_101_1();
      v184(v182, v183);
      swift_unknownObjectRelease();
    }
    OUTLINED_FUNCTION_21_13();
    v186 = (uint64_t *)((char *)v52 + *(void *)(v185 + 192));
    OUTLINED_FUNCTION_5_30();
    uint64_t v187 = *v186;
    uint64_t v188 = type metadata accessor for BlueprintImpressionManagerProcessor();
    sub_1B61B1F70();
    uint64_t v189 = sub_1B61B24F0();
    uint64_t v295 = v189;
    uint64_t v190 = MEMORY[0x1BA9AF7B0](v187, v188);
    uint64_t v191 = v247;
    if (v189 != v190)
    {
      do
      {
        char v197 = sub_1B61B25B0();
        sub_1B61B2570();
        if (v197) {
          swift_retain();
        }
        else {
          sub_1B61B3300();
        }
        sub_1B61B1F70();
        MEMORY[0x1BA9AF7C0](&v295, v187, v188);
        swift_bridgeObjectRelease();
        sub_1B612F068();
        swift_release();
        uint64_t v198 = v295;
      }
      while (v198 != MEMORY[0x1BA9AF7B0](v187, v188));
    }
    swift_bridgeObjectRelease();
    v192 = v287;
    uint64_t v193 = v291;
    BlueprintItem.identifier.getter();
    uint64_t v194 = v264;
    Blueprint.section(forItem:)();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_28_11(v194, 1, (uint64_t)v267);
    if (v86)
    {
      swift_bridgeObjectRelease();
      swift_release();
      OUTLINED_FUNCTION_5_1();
      v195();
      (*(void (**)(uint64_t, uint64_t *))(v191 + 8))(v193, v192);
      OUTLINED_FUNCTION_53_9();
      OUTLINED_FUNCTION_5_1();
      v196();
      OUTLINED_FUNCTION_31_10();
    }
    else
    {
      OUTLINED_FUNCTION_55_6();
      OUTLINED_FUNCTION_107();
      v199();
      char v200 = BlueprintSection.isImpressionable.getter();
      if (v200)
      {
        uint64_t v201 = BlueprintSection.identifier.getter();
        uint64_t v203 = v202;
        uint64_t v283 = (uint64_t)(v52 + 6);
        OUTLINED_FUNCTION_24_0();
        uint64_t v204 = v52[6];
        uint64_t v293 = v201;
        uint64_t v294 = v203;
        uint64_t v205 = v254;
        uint64_t v206 = v258;
        MEMORY[0x1BA9AF190](&v293, v204, MEMORY[0x1E4FBB1A0], v258, MEMORY[0x1E4FBB1B0]);
        swift_bridgeObjectRelease();
        swift_endAccess();
        OUTLINED_FUNCTION_28_11(v205, 1, v206);
        if (v86)
        {
          OUTLINED_FUNCTION_5_1();
          v207();
          uint64_t v208 = v257;
          sub_1B61AFA60();
          v277 = (void *)BlueprintSection.identifier.getter();
          uint64_t v275 = v209;
          uint64_t v281 = *(void *)(v269 + 16);
          uint64_t v210 = v248;
          uint64_t v151 = v268;
          ((void (*)(uint64_t, uint64_t, uint64_t))v281)(v248, v208, v268);
          LOBYTE(v295) = (_BYTE)v292;
          sub_1B5F299A0(v210, (char *)&v295, v250);
          OUTLINED_FUNCTION_124();
          __swift_storeEnumTagSinglePayload(v211, v212, v213, v258);
          uint64_t v293 = (uint64_t)v277;
          uint64_t v294 = v275;
          OUTLINED_FUNCTION_33_0();
          sub_1B61B1FD0();
          sub_1B61B2000();
          swift_endAccess();
          OUTLINED_FUNCTION_33();
          v214();
          OUTLINED_FUNCTION_37_10();
          OUTLINED_FUNCTION_33();
          v215();
          ((void (*)(uint64_t, uint64_t, uint64_t))v281)(v249, v257, v151);
          LOBYTE(v295) = (_BYTE)v292;
          uint64_t v216 = v276;
          uint64_t v217 = v278;
          uint64_t v218 = v279;
          sub_1B5F8B938((char *)&v295, v272, v271, v253);
          if (MEMORY[0x1BA9B1EC0](v290))
          {
            uint64_t v219 = v52[4];
            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v219 + 64))(v52, v253, v285, v217, v218, v286, v216, v280, ObjectType, v219);
            swift_release();
            swift_unknownObjectRelease();
          }
          else
          {
            swift_release();
          }
          OUTLINED_FUNCTION_27_3();
          OUTLINED_FUNCTION_5_1();
          v232();
          OUTLINED_FUNCTION_59();
          v233();
          OUTLINED_FUNCTION_27_3();
          OUTLINED_FUNCTION_5_1();
          v234();
          OUTLINED_FUNCTION_5_1();
          v235();
          uint64_t v236 = OUTLINED_FUNCTION_14_21();
          v237(v236);
          OUTLINED_FUNCTION_5_1();
          v238();
          goto LABEL_42;
        }
        swift_bridgeObjectRelease();
        swift_release();
        OUTLINED_FUNCTION_5_1();
        v226();
        OUTLINED_FUNCTION_42();
        v227();
        OUTLINED_FUNCTION_5_1();
        v228();
        uint64_t v229 = OUTLINED_FUNCTION_14_21();
        v230(v229);
        OUTLINED_FUNCTION_5_1();
        v231();
LABEL_41:
        uint64_t v151 = v268;
LABEL_42:
        uint64_t v91 = OUTLINED_FUNCTION_31_10();
        uint64_t v110 = v151;
        goto LABEL_27;
      }
      swift_bridgeObjectRelease();
      swift_release();
      OUTLINED_FUNCTION_42();
      v221();
      OUTLINED_FUNCTION_5_1();
      v222();
      uint64_t v223 = OUTLINED_FUNCTION_14_21();
      v224(v223);
      OUTLINED_FUNCTION_53_9();
    }
    OUTLINED_FUNCTION_5_1();
    v225();
    OUTLINED_FUNCTION_27_3();
    uint64_t v91 = (uint64_t)v273;
    goto LABEL_27;
  }
}

uint64_t type metadata accessor for BlueprintImpressionManager.SectionContext()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for BlueprintImpressionManager.Session()
{
  return __swift_instantiateGenericMetadata();
}

void BlueprintImpressionManager.endImpression(at:view:triggerSource:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v2 = v1;
  v222 = v3;
  unint64_t v230 = v4;
  uint64_t v5 = *v0;
  uint64_t v208 = sub_1B61AFA70();
  OUTLINED_FUNCTION_0_10();
  uint64_t v207 = v6;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_116();
  OUTLINED_FUNCTION_30(v9);
  uint64_t v10 = *(void *)(v5 + 88);
  unint64_t v11 = *(void *)(v5 + 80);
  uint64_t v12 = OUTLINED_FUNCTION_113_1();
  uint64_t v13 = OUTLINED_FUNCTION_113_1();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v15 = swift_getAssociatedConformanceWitness();
  v239.n128_u64[0] = v12;
  v239.n128_u64[1] = v13;
  uint64_t v240 = AssociatedConformanceWitness;
  v241[0] = v15;
  uint64_t v215 = type metadata accessor for BlueprintImpressionSection();
  OUTLINED_FUNCTION_0_10();
  uint64_t v211 = v16;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_73_2((uint64_t)&v184[-v18]);
  type metadata accessor for BlueprintImpressionManager.SectionContext();
  uint64_t v205 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_10();
  uint64_t v204 = v19;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_30((uint64_t)&v184[-v21]);
  OUTLINED_FUNCTION_16_14((uint64_t)&v239.n128_i64[1]);
  uint64_t v214 = v22;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_82();
  uint64_t v216 = v24;
  v239.n128_u64[0] = v12;
  v239.n128_u64[1] = v13;
  uint64_t v240 = AssociatedConformanceWitness;
  v241[0] = v15;
  type metadata accessor for BlueprintSection();
  uint64_t v219 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_10();
  uint64_t v218 = v25;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v26);
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_30(v27);
  OUTLINED_FUNCTION_16_14((uint64_t)&v243);
  uint64_t v220 = v28;
  MEMORY[0x1F4188790](v29);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v30);
  OUTLINED_FUNCTION_116();
  OUTLINED_FUNCTION_45_7(v31);
  uint64_t v226 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  uint64_t v225 = v32;
  MEMORY[0x1F4188790](v33);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v34);
  OUTLINED_FUNCTION_116();
  OUTLINED_FUNCTION_21_4(v35);
  uint64_t v229 = type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_0_10();
  unint64_t v231 = v36;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v37);
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_45_7(v38);
  type metadata accessor for BlueprintImpression();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v39);
  char v40 = *v2;
  OUTLINED_FUNCTION_56_4();
  if (v44 == 1)
  {
    uint64_t v232 = v42;
    uint64_t v221 = v41;
    uint64_t v201 = v43;
    uint64_t v45 = v0 + 5;
    OUTLINED_FUNCTION_33_0();
    uint64_t v46 = sub_1B61AFCB0();
    uint64_t v203 = v0;
    unint64_t v47 = v12;
    uint64_t v48 = v46;
    v239.n128_u64[0] = v11;
    v239.n128_u64[1] = v47;
    unint64_t v202 = v47;
    OUTLINED_FUNCTION_90_1();
    uint64_t v49 = type metadata accessor for BlueprintImpressionManager.Context();
    unint64_t v50 = sub_1B5E5F1A0();
    uint64_t v200 = v48;
    uint64_t v194 = v49;
    sub_1B61B1FD0();
    uint64_t v193 = v45;
    sub_1B61B1F30();
    swift_endAccess();
    uint64_t v51 = v238;
    if (v238)
    {
      unint64_t v190 = v50;
      unint64_t v198 = v11;
      uint64_t v195 = AssociatedConformanceWitness;
      uint64_t v52 = v203;
      double v53 = sub_1B5F298FC(v222);
      int v189 = v40 & 0x7F;
      v239.n128_u8[0] = v40 & 0x7F;
      sub_1B5F2DAF4((unsigned __int8 *)&v239, v232, v53, v54, v55, v56);
      double v57 = DurationType.duration.getter(v221, (uint64_t)&protocol witness table for BlueprintImpression<A, B>);
      uint64_t v58 = (double *)&v51[*(void *)(*(void *)v51 + 168)];
      double v59 = v58[3];
      uint64_t v192 = v15;
      uint64_t v191 = v13;
      v222 = v51;
      uint64_t v199 = v10;
      if (v59 <= v57)
      {
        unint64_t v93 = v231;
        if (qword_1EB648DC0 != -1) {
          swift_once();
        }
        id v186 = (id)qword_1EB654B48;
        int v185 = sub_1B61B2B70();
        sub_1B5E6B8D4(0, (unint64_t *)&qword_1EB64D4A0, (unint64_t *)&qword_1EB64D4B0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
        uint64_t v94 = OUTLINED_FUNCTION_78_1();
        *(_OWORD *)(v94 + 16) = xmmword_1B61BE6A0;
        OUTLINED_FUNCTION_21_13();
        uint64_t v96 = (void *)((char *)v52 + *(void *)(v95 + 160));
        uint64_t v97 = *v96;
        uint64_t v98 = v96[1];
        uint64_t v99 = MEMORY[0x1E4FBB1A0];
        *(void *)(v100 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v101 = sub_1B5E2E40C();
        *(void *)(v94 + 64) = v101;
        uint64_t v187 = v97;
        *(void *)(v94 + 32) = v97;
        *(void *)(v94 + 40) = v98;
        OUTLINED_FUNCTION_5_30();
        OUTLINED_FUNCTION_85_0();
        uint64_t v103 = *(void *)(v102 - 256);
        unint64_t v230 = v104;
        char v197 = v105;
        OUTLINED_FUNCTION_33();
        v106();
        uint64_t v188 = v98;
        sub_1B61B1F70();
        uint64_t v107 = BlueprintItem.visualDescription.getter(v103);
        uint64_t v109 = v108;
        v196 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
        OUTLINED_FUNCTION_42();
        v110();
        *(void *)(v94 + 96) = v99;
        *(void *)(v94 + 104) = v101;
        *(void *)(v94 + 72) = v107;
        *(void *)(v94 + 80) = v109;
        v111 = v186;
        sub_1B61B0F90();

        swift_bridgeObjectRelease();
        MEMORY[0x1BA9B1EC0](v52 + 3);
        uint64_t v112 = v195;
        OUTLINED_FUNCTION_105_0();
        if (v113)
        {
          uint64_t v109 = v52[4];
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(void *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v109 + 16))(v52, v232, v103, v202, v191, v99, v112, v192, ObjectType, v109);
          swift_unknownObjectRelease();
        }
        OUTLINED_FUNCTION_41_12();
        OUTLINED_FUNCTION_5_30();
        uint64_t v115 = OUTLINED_FUNCTION_93_1();
        sub_1B61B1F70();
        uint64_t v116 = sub_1B61B24F0();
        v239.n128_u64[0] = v116;
        OUTLINED_FUNCTION_86_3();
        uint64_t v89 = v224;
        if (v116 != v117)
        {
          do
          {
            sub_1B61B25B0();
            OUTLINED_FUNCTION_47_7();
            if (v109) {
              swift_retain();
            }
            else {
              sub_1B61B3300();
            }
            sub_1B61B1F70();
            MEMORY[0x1BA9AF7C0](&v239, v112, v115);
            swift_bridgeObjectRelease();
            sub_1B612F090();
            swift_release();
            unint64_t v134 = v239.n128_u64[0];
            OUTLINED_FUNCTION_86_3();
          }
          while (v134 != v135);
        }
      }
      else
      {
        unint64_t v60 = v231;
        if (qword_1EB648DC0 != -1) {
          swift_once();
        }
        id v186 = (id)qword_1EB654B48;
        int v185 = sub_1B61B2B70();
        sub_1B5E6B8D4(0, (unint64_t *)&qword_1EB64D4A0, (unint64_t *)&qword_1EB64D4B0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
        uint64_t v61 = swift_allocObject();
        *(_OWORD *)(v61 + 16) = xmmword_1B61C4310;
        OUTLINED_FUNCTION_21_13();
        uint64_t v63 = (void *)((char *)v52 + *(void *)(v62 + 160));
        uint64_t v64 = *v63;
        uint64_t v65 = v63[1];
        uint64_t v66 = MEMORY[0x1E4FBB1A0];
        *(void *)(v67 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v68 = sub_1B5E2E40C();
        *(void *)(v61 + 64) = v68;
        uint64_t v187 = v64;
        *(void *)(v61 + 32) = v64;
        *(void *)(v61 + 40) = v65;
        OUTLINED_FUNCTION_24();
        unint64_t v69 = v60 + 16;
        uint64_t v70 = *(void (**)(uint64_t, char *, uint64_t))(v60 + 16);
        uint64_t v71 = v229;
        unint64_t v230 = v69;
        char v197 = v70;
        OUTLINED_FUNCTION_33();
        v72();
        uint64_t v188 = v65;
        sub_1B61B1F70();
        uint64_t v73 = BlueprintItem.visualDescription.getter(v71);
        uint64_t v75 = v74;
        uint64_t v76 = *(void (**)(uint64_t, uint64_t))(v231 + 8);
        v231 += 8;
        v196 = v76;
        OUTLINED_FUNCTION_42();
        v77();
        *(void *)(v61 + 96) = v66;
        *(void *)(v61 + 104) = v68;
        *(void *)(v61 + 72) = v73;
        *(void *)(v61 + 80) = v75;
        double v78 = DurationType.duration.getter(v221, (uint64_t)&protocol witness table for BlueprintImpression<A, B>);
        uint64_t v79 = MEMORY[0x1E4FBB3D0];
        uint64_t v80 = MEMORY[0x1E4FBB460];
        *(void *)(v61 + 136) = MEMORY[0x1E4FBB3D0];
        *(void *)(v61 + 144) = v80;
        *(double *)(v61 + 112) = v78;
        uint64_t v81 = *((void *)v58 + 3);
        *(void *)(v61 + 176) = v79;
        *(void *)(v61 + 184) = v80;
        *(void *)(v61 + 152) = v81;
        uint64_t v82 = v186;
        sub_1B61B0F90();

        swift_bridgeObjectRelease();
        MEMORY[0x1BA9B1EC0](v52 + 3);
        OUTLINED_FUNCTION_105_0();
        if (v83)
        {
          uint64_t v75 = v83;
          uint64_t v82 = (void *)v52[4];
          swift_getObjectType();
          OUTLINED_FUNCTION_22_16();
          v86(v84, v85);
          swift_unknownObjectRelease();
        }
        OUTLINED_FUNCTION_41_12();
        OUTLINED_FUNCTION_35_10();
        OUTLINED_FUNCTION_5_30();
        uint64_t v87 = OUTLINED_FUNCTION_93_1();
        sub_1B61B1F70();
        uint64_t v88 = sub_1B61B24F0();
        v239.n128_u64[0] = v88;
        OUTLINED_FUNCTION_86_3();
        uint64_t v89 = v224;
        if (v88 != v90)
        {
          do
          {
            sub_1B61B25B0();
            OUTLINED_FUNCTION_47_7();
            if (v82) {
              swift_retain();
            }
            else {
              sub_1B61B3300();
            }
            sub_1B61B1F70();
            MEMORY[0x1BA9AF7C0](&v239, v75, v87);
            swift_bridgeObjectRelease();
            sub_1B612F0B8();
            swift_release();
            unint64_t v91 = v239.n128_u64[0];
            OUTLINED_FUNCTION_86_3();
          }
          while (v91 != v92);
        }
      }
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_21_13();
      OUTLINED_FUNCTION_68_1();
      BlueprintProviderType.blueprint.getter();
      uint64_t v118 = &v222[*(void *)(*(void *)v222 + 136)];
      OUTLINED_FUNCTION_5_30();
      uint64_t v119 = v228;
      uint64_t v120 = v229;
      v197(v228, v118, v229);
      BlueprintItem.identifier.getter();
      uint64_t v122 = v121;
      v196(v119, v120);
      uint64_t v123 = v223;
      Blueprint.section(forItem:)();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_28_11(v123, 1, v89);
      uint64_t v124 = v227;
      if (v125)
      {
        swift_release();
        OUTLINED_FUNCTION_61_4();
        OUTLINED_FUNCTION_5_1();
        v126();
        OUTLINED_FUNCTION_5_1();
        v127();
        uint64_t v128 = OUTLINED_FUNCTION_31_10();
        uint64_t v130 = v241;
      }
      else
      {
        OUTLINED_FUNCTION_82_2();
        OUTLINED_FUNCTION_107();
        v131();
        char v132 = BlueprintSection.isImpressionable.getter();
        if ((v132 & 1) != 0
          && (swift_getWitnessTable(),
              swift_getWitnessTable(),
              OUTLINED_FUNCTION_81_1(),
              sub_1B61B2A80(),
              (v239.n128_u8[8] & 1) == 0))
        {
          unint64_t v136 = v239.n128_u64[0];
          sub_1B61B1F70();
          uint64_t v137 = sub_1B61B1F70();
          uint64_t v138 = swift_bridgeObjectRelease();
          v239.n128_u64[0] = v137;
          MEMORY[0x1F4188790](v138);
          sub_1B61B1F60();
          swift_getWitnessTable();
          char v139 = sub_1B61B2400();
          swift_bridgeObjectRelease();
          if (v139)
          {
            OUTLINED_FUNCTION_46_8();
            OUTLINED_FUNCTION_5_1();
            v140();
            OUTLINED_FUNCTION_83_1();
          }
          else
          {
            uint64_t v236 = BlueprintSection.identifier.getter();
            uint64_t v237 = v141;
            OUTLINED_FUNCTION_8_0();
            uint64_t v142 = v217;
            sub_1B61B1FD0();
            uint64_t v143 = v213;
            sub_1B61B1F30();
            swift_endAccess();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_28_11((uint64_t)v143, 1, v142);
            if (v125)
            {
              OUTLINED_FUNCTION_46_8();
              OUTLINED_FUNCTION_27_3();
              OUTLINED_FUNCTION_5_1();
              v144();
              OUTLINED_FUNCTION_42();
              v145();
              OUTLINED_FUNCTION_5_1();
              v146();
              OUTLINED_FUNCTION_27_3();
              uint64_t v128 = (uint64_t)v143;
              uint64_t v130 = &v234;
              goto LABEL_27;
            }
            OUTLINED_FUNCTION_107();
            v147();
            uint64_t v148 = (void *)((char *)v52 + *(void *)(*v52 + 176));
            OUTLINED_FUNCTION_5_30();
            uint64_t v149 = v148[3];
            if (v149)
            {
              uint64_t v150 = v148[4];
              __swift_project_boxed_opaque_existential_1(v148, v148[3]);
              uint64_t v143 = v184;
              OUTLINED_FUNCTION_0_13();
              uint64_t v152 = v151;
              MEMORY[0x1F4188790](v153);
              v155 = &v184[-((v154 + 15) & 0xFFFFFFFFFFFFFFF0)];
              OUTLINED_FUNCTION_33();
              v156();
              (*(void (**)(__n128 *__return_ptr, uint64_t, uint64_t))(v150 + 8))(&v239, v149, v150);
              (*(void (**)(unsigned char *, uint64_t))(v152 + 8))(v155, v149);
              uint64_t v142 = v217;
              uint64_t v157 = v241[0];
              uint64_t v158 = v241[1];
              __swift_project_boxed_opaque_existential_1(&v239, v241[0]);
              (*(void (**)(void *__return_ptr, unint64_t, uint64_t, uint64_t))(v158 + 8))(v233, v136, v157, v158);
              unint64_t v231 = v233[0];
              unint64_t v230 = v233[1];
              uint64_t v229 = v234;
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v239);
            }
            else
            {
              unint64_t v231 = 0;
              unint64_t v230 = 0;
              uint64_t v229 = 0;
            }
            uint64_t v159 = v206;
            OUTLINED_FUNCTION_33();
            v160();
            OUTLINED_FUNCTION_37_10();
            OUTLINED_FUNCTION_88_0();
            OUTLINED_FUNCTION_33();
            v161();
            uint64_t v162 = v209;
            uint64_t v163 = v216;
            OUTLINED_FUNCTION_48_0();
            v164();
            uint64_t v165 = v210;
            sub_1B61AFA60();
            LOBYTE(v233[0]) = *(unsigned char *)(v163 + *(int *)(v142 + 36));
            char v235 = v189;
            v166 = (uint64_t *)(v232 + *(int *)(v221 + 72));
            uint64_t v167 = *v166;
            uint64_t v168 = v166[1];
            v239.n128_u64[0] = v231;
            v239.n128_u64[1] = v230;
            uint64_t v240 = v229;
            sub_1B60787D8(v159, (uint64_t)v143, v162, v165, (char *)v233, &v235, v167, v168, v212, &v239);
            sub_1B61B1F70();
            DurationType.duration.getter(v215, (uint64_t)&protocol witness table for BlueprintImpressionSection<A, B>);
            OUTLINED_FUNCTION_21_13();
            if (*(double *)((char *)v52 + *(void *)(v169 + 168) + 24) > v170) {
              goto LABEL_47;
            }
            if (qword_1EB648DC0 != -1) {
              swift_once();
            }
            id v171 = (id)qword_1EB654B48;
            sub_1B61B2B70();
            sub_1B5E6B8D4(0, (unint64_t *)&qword_1EB64D4A0, (unint64_t *)&qword_1EB64D4B0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
            uint64_t v172 = OUTLINED_FUNCTION_78_1();
            *(_OWORD *)(v172 + 16) = xmmword_1B61BE6A0;
            uint64_t v173 = MEMORY[0x1E4FBB1A0];
            *(void *)(v172 + 56) = MEMORY[0x1E4FBB1A0];
            unint64_t v174 = sub_1B5E2E40C();
            *(void *)(v172 + 64) = v174;
            uint64_t v175 = v188;
            *(void *)(v172 + 32) = v187;
            *(void *)(v172 + 40) = v175;
            sub_1B61B1F70();
            BlueprintSection.visualDescription.getter();
            *(void *)(v172 + 96) = v173;
            *(void *)(v172 + 104) = v174;
            *(void *)(v172 + 72) = v176;
            *(void *)(v172 + 80) = v177;
            sub_1B61B0F90();

            swift_bridgeObjectRelease();
            if (MEMORY[0x1BA9B1EC0](v52 + 3))
            {
              swift_getObjectType();
              OUTLINED_FUNCTION_22_16();
              v180(v178, v179);
              OUTLINED_FUNCTION_46_8();
              swift_unknownObjectRelease();
            }
            else
            {
LABEL_47:
              OUTLINED_FUNCTION_46_8();
            }
            OUTLINED_FUNCTION_5_1();
            v181();
            OUTLINED_FUNCTION_27_3();
            OUTLINED_FUNCTION_5_1();
            v182();
            OUTLINED_FUNCTION_5_1();
            v183();
            OUTLINED_FUNCTION_31_10();
          }
        }
        else
        {
          OUTLINED_FUNCTION_46_8();
          (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v124, v89);
          OUTLINED_FUNCTION_61_4();
        }
        OUTLINED_FUNCTION_5_1();
        v133();
        id v129 = *(void (**)(uint64_t, void))(v201 + 8);
        uint64_t v128 = v232;
        uint64_t v130 = &v242;
      }
LABEL_27:
      v129(v128, *(v130 - 32));
      goto LABEL_28;
    }
    OUTLINED_FUNCTION_8_0();
    v239.n128_u64[0] = v11;
    v239.n128_u64[1] = v202;
    OUTLINED_FUNCTION_90_1();
    type metadata accessor for BlueprintImpressionManager.StagedContext();
    sub_1B61B1FD0();
    sub_1B61B1F30();
    swift_endAccess();
    swift_release();
  }
LABEL_28:
  OUTLINED_FUNCTION_73();
}

void BlueprintImpressionManager.updateImpressions(triggerSource:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(*v1 + 88);
  uint64_t v5 = *(void *)(*v1 + 80);
  uint64_t v6 = OUTLINED_FUNCTION_109_1();
  uint64_t v7 = OUTLINED_FUNCTION_109_1();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v44 = v6;
  uint64_t v45 = v7;
  uint64_t v42 = swift_getAssociatedConformanceWitness();
  uint64_t v43 = AssociatedConformanceWitness;
  uint64_t v46 = AssociatedConformanceWitness;
  uint64_t v47 = v42;
  uint64_t v9 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  uint64_t v11 = v10;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_82();
  uint64_t v41 = v13;
  char v14 = *v3;
  OUTLINED_FUNCTION_56_4();
  if (v15 == 1 && (sub_1B5F2808C() & 1) != 0)
  {
    uint64_t v16 = OUTLINED_FUNCTION_24();
    uint64_t v40 = v9;
    uint64_t v37 = &v32;
    MEMORY[0x1F4188790](v16);
    *(&v32 - 4) = v5;
    *(&v32 - 3) = v4;
    *(&v32 - 2) = (uint64_t)sub_1B5F2F55C;
    *(&v32 - 1) = (uint64_t)v1;
    uint64_t v17 = sub_1B61AFCB0();
    sub_1B61B1F70();
    OUTLINED_FUNCTION_32_10();
    uint64_t v18 = type metadata accessor for BlueprintImpressionManager.Context();
    uint64_t v39 = v11;
    uint64_t WitnessTable = v18;
    sub_1B5E5F1A0();
    OUTLINED_FUNCTION_89_1();
    uint64_t v35 = v17;
    uint64_t v34 = v19;
    uint64_t v38 = sub_1B61B1F80();
    uint64_t v33 = &v32;
    uint64_t v44 = v38;
    uint64_t v20 = MEMORY[0x1F4188790](v38);
    *(&v32 - 2) = (uint64_t)v1;
    *((unsigned char *)&v32 - 8) = v14;
    MEMORY[0x1F4188790](v20);
    OUTLINED_FUNCTION_103_2();
    *(void *)(v21 - 16) = sub_1B5F2F564;
    *(void *)(v21 - 8) = v22;
    uint64_t v37 = (uint64_t *)sub_1B61B1FD0();
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_1B61B23F0();
    uint64_t v23 = v41;
    BlueprintProviderType.blueprint.getter();
    uint64_t v24 = swift_beginAccess();
    uint64_t v33 = &v32;
    uint64_t v25 = MEMORY[0x1F4188790](v24);
    *(&v32 - 4) = (uint64_t)v1;
    *((unsigned char *)&v32 - 24) = v14;
    *(&v32 - 2) = v23;
    MEMORY[0x1F4188790](v25);
    OUTLINED_FUNCTION_103_2();
    *(void *)(v26 - 16) = sub_1B5F2F590;
    *(void *)(v26 - 8) = v27;
    sub_1B61B1F70();
    OUTLINED_FUNCTION_32_10();
    type metadata accessor for BlueprintImpressionManager.StagedContext();
    OUTLINED_FUNCTION_81_1();
    v1[7] = sub_1B61B1F80();
    uint64_t v28 = swift_bridgeObjectRelease();
    uint64_t v44 = v38;
    uint64_t v29 = MEMORY[0x1F4188790](v28);
    *(&v32 - 2) = v23;
    *(&v32 - 1) = (uint64_t)v1;
    MEMORY[0x1F4188790](v29);
    *(&v32 - 4) = v5;
    *(&v32 - 3) = v4;
    *(&v32 - 2) = (uint64_t)sub_1B5F2F5D8;
    *(&v32 - 1) = v30;
    sub_1B61B23F0();
    OUTLINED_FUNCTION_5_1();
    v31();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5F27D14@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  *(void *)a2 = result;
  *(double *)(a2 + 8) = a3;
  *(double *)(a2 + 16) = a4;
  *(double *)(a2 + 24) = a5;
  *(double *)(a2 + 32) = a6;
  return result;
}

uint64_t *BlueprintImpressionManagerOptions.init(requiredPercentVisible:requiredEndPercentVisible:requiredMinimumDurationInSeconds:)@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v4 = *result;
  char v5 = *((unsigned char *)result + 8);
  *(double *)a2 = a3;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5;
  *(double *)(a2 + 24) = a4;
  return result;
}

uint64_t BlueprintImpressionTracking.performWithoutImpressions(block:)()
{
  OUTLINED_FUNCTION_79_2();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  uint64_t v5 = v7(0, v4, v3);
  v2(v5);
  return v7(1, v1, v0);
}

double BlueprintImpressionManagerOptions.requiredPercentVisible.getter()
{
  return *(double *)v0;
}

void BlueprintImpressionManagerOptions.requiredEndPercentVisible.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)(v1 + 8);
  *(unsigned char *)(a1 + 8) = v2;
}

double BlueprintImpressionManagerOptions.requiredMinimumDurationInSeconds.getter()
{
  return *(double *)(v0 + 24);
}

BOOL static BlueprintImpressionManager.Behavior.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t BlueprintImpressionManager.Behavior.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t BlueprintImpressionManager.Behavior.hashValue.getter()
{
  return sub_1B61B3940();
}

uint64_t sub_1B5F27E94()
{
  return sub_1B61B3940();
}

uint64_t BlueprintImpressionManager.isEnabled.getter()
{
  OUTLINED_FUNCTION_24();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t BlueprintImpressionManager.isEnabled.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = a1;
  return result;
}

uint64_t (*BlueprintImpressionManager.isEnabled.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t BlueprintImpressionManager.layoutViewStateProvider.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_10_0();
  uint64_t v4 = v1 + *(void *)(v3 + 176);
  OUTLINED_FUNCTION_5_30();
  return sub_1B5F2F5E0(v4, a1);
}

uint64_t BlueprintImpressionManager.layoutViewStateProvider.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_10_0();
  uint64_t v4 = v1 + *(void *)(v3 + 176);
  OUTLINED_FUNCTION_8_0();
  sub_1B5F2F670(a1, v4);
  return swift_endAccess();
}

uint64_t (*BlueprintImpressionManager.layoutViewStateProvider.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1B5F2808C()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  if (*((unsigned char *)v0 + 16) == 1)
  {
    if (MEMORY[0x1BA9B1EC0](v0 + 3))
    {
      uint64_t v2 = v0[4];
      uint64_t ObjectType = swift_getObjectType();
      char v4 = (*(uint64_t (**)(uint64_t *, void, void, uint64_t, uint64_t))(v2 + 8))(v0, *(void *)(v1 + 80), *(void *)(v1 + 88), ObjectType, v2);
      swift_unknownObjectRelease();
    }
    else
    {
      char v4 = 1;
    }
  }
  else
  {
    char v4 = 0;
  }
  return v4 & 1;
}

uint64_t BlueprintImpressionManager.__allocating_init(provider:behavior:name:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  OUTLINED_FUNCTION_79_2();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = OUTLINED_FUNCTION_75_1();
  BlueprintImpressionManager.init(provider:behavior:name:options:)(v9, v10, v6, v5, a5);
  return v8;
}

uint64_t BlueprintImpressionManager.init(provider:behavior:name:options:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  char v24 = *a2;
  uint64_t v6 = *a5;
  uint64_t v27 = a5[1];
  char v26 = *((unsigned char *)a5 + 16);
  uint64_t v7 = a5[3];
  *(unsigned char *)(v5 + 16) = 1;
  *(void *)(v5 + 32) = 0;
  swift_unknownObjectWeakInit();
  sub_1B61AFCB0();
  OUTLINED_FUNCTION_115_1();
  OUTLINED_FUNCTION_115_1();
  OUTLINED_FUNCTION_75_1();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_75_1();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintImpressionManager.Context();
  sub_1B5E5F1A0();
  *(void *)(v5 + 40) = sub_1B61B1EE0();
  OUTLINED_FUNCTION_70_3();
  type metadata accessor for BlueprintImpressionManager.SectionContext();
  *(void *)(v5 + 48) = sub_1B61B1EE0();
  type metadata accessor for BlueprintImpressionManager.StagedContext();
  *(void *)(v5 + 56) = sub_1B61B1EE0();
  OUTLINED_FUNCTION_10_0();
  *(void *)(v5 + *(void *)(v8 + 136)) = 0;
  OUTLINED_FUNCTION_70_3();
  type metadata accessor for BlueprintImpressionManager.Session();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_10_0();
  uint64_t v10 = v5 + *(void *)(v9 + 176);
  *(_OWORD *)uint64_t v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(void *)(v10 + 32) = 0;
  OUTLINED_FUNCTION_10_0();
  uint64_t v12 = *(void *)(v11 + 192);
  OUTLINED_FUNCTION_70_3();
  type metadata accessor for BlueprintImpressionManagerProcessor();
  *(void *)(v5 + v12) = sub_1B61B1EF0();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_33();
  v13();
  *(unsigned char *)(v5 + *(void *)(*(void *)v5 + 152)) = v24;
  id v14 = objc_msgSend(self, sel_mainScreen);
  id v15 = objc_msgSend(v14, sel_coordinateSpace);

  uint64_t v16 = OUTLINED_FUNCTION_75_1();
  v17(v16);
  uint64_t v18 = v5 + *(void *)(*(void *)v5 + 184);
  *(void *)uint64_t v18 = v15;
  *(_OWORD *)(v18 + 8) = 0u;
  *(_OWORD *)(v18 + 24) = 0u;
  OUTLINED_FUNCTION_10_0();
  uint64_t v20 = (void *)(v5 + *(void *)(v19 + 160));
  *uint64_t v20 = a3;
  v20[1] = a4;
  OUTLINED_FUNCTION_10_0();
  uint64_t v22 = v5 + *(void *)(v21 + 168);
  *(void *)uint64_t v22 = v6;
  *(void *)(v22 + 8) = v27;
  *(unsigned char *)(v22 + 16) = v26;
  *(void *)(v22 + 24) = v7;
  return v5;
}

uint64_t BlueprintImpressionManager.add<A>(processor:)(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  OUTLINED_FUNCTION_4_7();
  type metadata accessor for BlueprintImpressionManagerProcessor();
  uint64_t v1 = OUTLINED_FUNCTION_68_1();
  v2(v1);
  OUTLINED_FUNCTION_89_1();
  sub_1B612F010(v3, v4);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_71_3();
  sub_1B61B2650();
  sub_1B61B2600();
  return swift_endAccess();
}

void BlueprintImpressionManager.startSession(triggerSource:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1B61AFA70();
  OUTLINED_FUNCTION_0_10();
  uint64_t v69 = v6;
  uint64_t v70 = v5;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_4();
  uint64_t v67 = v7;
  sub_1B61AFAB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v66 = v8;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_4_7();
  uint64_t active = (int *)type metadata accessor for BlueprintImpressionActiveSession();
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_4();
  unint64_t v68 = v12;
  uint64_t v13 = *(void *)(v4 + 80);
  uint64_t v64 = *(void *)(v4 + 88);
  uint64_t v65 = v13;
  uint64_t v14 = type metadata accessor for BlueprintImpressionManager.Session();
  OUTLINED_FUNCTION_0_10();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_81();
  uint64_t v20 = (uint64_t *)(v18 - v19);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v59 - v22;
  char v24 = *v3;
  OUTLINED_FUNCTION_56_4();
  if (v25 == 1 && (sub_1B5F2808C() & 1) != 0)
  {
    char v26 = (char *)v1 + *(void *)(*v1 + 136);
    OUTLINED_FUNCTION_5_30();
    OUTLINED_FUNCTION_40_9();
    uint64_t v63 = v26;
    OUTLINED_FUNCTION_33();
    v27();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v61 = *(void *)v23;
      sub_1B61AFAA0();
      uint64_t v62 = v16;
      uint64_t v28 = sub_1B61AFA80();
      uint64_t v60 = v28;
      uint64_t v30 = v29;
      OUTLINED_FUNCTION_5_1();
      v31();
      sub_1B61AFA60();
      char v32 = v24 & 0x7F;
      LODWORD(v66) = v24 & 0x7F;
      uint64_t v33 = v68;
      *unint64_t v68 = v28;
      v33[1] = v30;
      uint64_t v34 = v30;
      uint64_t v35 = (char *)v33 + active[5];
      uint64_t v36 = v69;
      uint64_t v37 = v70;
      OUTLINED_FUNCTION_107();
      v38();
      *((unsigned char *)v33 + active[6]) = v32;
      uint64_t v39 = active[7];
      uint64_t v40 = v61;
      *(uint64_t *)((char *)v33 + v39) = v61;
      sub_1B5F296FC();
      uint64_t v42 = (char *)v20 + v41[12];
      uint64_t v67 = v41[16];
      uint64_t v43 = v41[20];
      *uint64_t v20 = v60;
      v20[1] = v34;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v42, v35, v37);
      *((unsigned char *)v20 + v67) = v66;
      *(uint64_t *)((char *)v20 + v43) = v40;
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = v63;
      OUTLINED_FUNCTION_8_0();
      uint64_t v45 = *(void (**)(char *, uint64_t *, uint64_t))(v62 + 40);
      sub_1B61B1F70();
      v45(v44, v20, v14);
      swift_endAccess();
      if (MEMORY[0x1BA9B1EC0](v1 + 3))
      {
        uint64_t v46 = v1[4];
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(void *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 48))(v1, v33, v65, v64, ObjectType, v46);
        swift_unknownObjectRelease();
      }
      if (qword_1EB648DC0 != -1) {
        swift_once();
      }
      uint64_t v48 = (void *)qword_1EB654B48;
      sub_1B5E6B8D4(0, (unint64_t *)&qword_1EB64D4A0, (unint64_t *)&qword_1EB64D4B0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v49 = OUTLINED_FUNCTION_78_1();
      *(_OWORD *)(v49 + 16) = xmmword_1B61BE6A0;
      unint64_t v50 = (void *)((char *)v1 + *(void *)(*v1 + 160));
      uint64_t v52 = *v50;
      uint64_t v51 = v50[1];
      uint64_t v53 = MEMORY[0x1E4FBB1A0];
      *(void *)(v49 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v54 = sub_1B5E2E40C();
      *(void *)(v49 + 32) = v52;
      *(void *)(v49 + 40) = v51;
      uint64_t v55 = *v33;
      uint64_t v56 = v33[1];
      *(void *)(v49 + 96) = v53;
      *(void *)(v49 + 104) = v54;
      *(void *)(v49 + 64) = v54;
      *(void *)(v49 + 72) = v55;
      *(void *)(v49 + 80) = v56;
      id v57 = v48;
      sub_1B61B1F70();
      sub_1B61B1F70();
      sub_1B61B2BA0();
      sub_1B61B0F90();

      swift_bridgeObjectRelease();
      sub_1B5F2F700((uint64_t)v33, (void (*)(void))type metadata accessor for BlueprintImpressionActiveSession);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1B5F296FC();
      (*(void (**)(char *, uint64_t))(v69 + 8))(&v23[*(int *)(v58 + 48)], v70);
    }
  }
  OUTLINED_FUNCTION_73();
}

void BlueprintImpressionManager.endSession(triggerSource:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = (void *)*v0;
  uint64_t v89 = type metadata accessor for BlueprintImpressionSession();
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_4();
  uint64_t v90 = v6;
  uint64_t v7 = sub_1B61AFA70();
  OUTLINED_FUNCTION_0_10();
  uint64_t v94 = v8;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_2_7();
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_102_2(v12, v13, v14, v15, v16, v17, v18, v19, v75[0]);
  uint64_t v20 = v4[10];
  uint64_t v91 = v4[11];
  uint64_t v92 = v20;
  uint64_t v21 = type metadata accessor for BlueprintImpressionManager.Session();
  OUTLINED_FUNCTION_0_10();
  uint64_t v23 = v22;
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_81();
  uint64_t v27 = (uint64_t *)(v25 - v26);
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (uint64_t *)((char *)v75 - v29);
  int v31 = *v3;
  OUTLINED_FUNCTION_56_4();
  if (v32 != 1
    || (uint64_t v33 = (char *)v1 + v4[17],
        OUTLINED_FUNCTION_5_30(),
        uint64_t v34 = *(void (**)(uint64_t *, char *, uint64_t))(v23 + 16),
        uint64_t v87 = v33,
        v34(v30, v33, v21),
        swift_getEnumCaseMultiPayload() == 1))
  {
LABEL_11:
    OUTLINED_FUNCTION_73();
    return;
  }
  uint64_t v85 = v23;
  int v84 = v31;
  uint64_t v79 = *v30;
  uint64_t v78 = v30[1];
  sub_1B5F296FC();
  int v82 = *((unsigned __int8 *)v30 + *(int *)(v35 + 64));
  uint64_t v86 = *(uint64_t *)((char *)v30 + *(int *)(v35 + 80));
  uint64_t v36 = *(void (**)(void))(v94 + 32);
  uint64_t v83 = v7;
  uint64_t v81 = v94 + 32;
  uint64_t v80 = v36;
  OUTLINED_FUNCTION_107();
  v37();
  if (qword_1EB648DC0 != -1) {
    swift_once();
  }
  uint64_t v38 = (void *)qword_1EB654B48;
  sub_1B5E6B8D4(0, (unint64_t *)&qword_1EB64D4A0, (unint64_t *)&qword_1EB64D4B0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v39 = OUTLINED_FUNCTION_78_1();
  *(_OWORD *)(v39 + 16) = xmmword_1B61BE6A0;
  OUTLINED_FUNCTION_29();
  uint64_t v41 = (void *)((char *)v1 + *(void *)(v40 + 160));
  uint64_t v43 = *v41;
  uint64_t v42 = v41[1];
  *(void *)(v44 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v45 = sub_1B5E2E40C();
  *(void *)(v39 + 64) = v45;
  *(void *)(v39 + 32) = v43;
  *(void *)(v39 + 40) = v42;
  v34(v27, v87, v21);
  id v46 = v38;
  sub_1B61B1F70();
  uint64_t v47 = sub_1B5F293B4(v21);
  uint64_t v49 = v48;
  OUTLINED_FUNCTION_59();
  v50();
  *(void *)(v39 + 96) = MEMORY[0x1E4FBB1A0];
  *(void *)(v39 + 104) = v45;
  *(void *)(v39 + 72) = v47;
  *(void *)(v39 + 80) = v49;
  sub_1B61B2BA0();
  sub_1B61B0F90();

  swift_bridgeObjectRelease();
  uint64_t v77 = v1 + 3;
  uint64_t v51 = MEMORY[0x1BA9B1EC0]();
  uint64_t v52 = v91;
  if (v51)
  {
    uint64_t v76 = v1[4];
    v75[1] = v51;
    OUTLINED_FUNCTION_24();
    v75[0] = sub_1B61AFCB0();
    OUTLINED_FUNCTION_112_1();
    uint64_t v53 = v92;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    OUTLINED_FUNCTION_112_1();
    uint64_t v55 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v57 = swift_getAssociatedConformanceWitness();
    sub_1B61B1F70();
    uint64_t v95 = v53;
    uint64_t v96 = AssociatedTypeWitness;
    uint64_t v97 = v55;
    uint64_t v98 = v52;
    uint64_t v99 = AssociatedConformanceWitness;
    uint64_t v100 = v57;
    type metadata accessor for BlueprintImpressionManager.Context();
    sub_1B5E5F1A0();
    uint64_t v58 = sub_1B61B1F70();
    swift_bridgeObjectRelease();
    uint64_t v95 = v58;
    OUTLINED_FUNCTION_71_3();
    sub_1B61B1F60();
    swift_getWitnessTable();
    OUTLINED_FUNCTION_81_1();
    uint64_t v59 = sub_1B61B2670();
    LOBYTE(AssociatedConformanceWitness) = v84 & 0x7F;
    uint64_t ObjectType = swift_getObjectType();
    LOBYTE(v95) = AssociatedConformanceWitness;
    (*(void (**)(void *, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))(v76 + 40))(v1, v59, &v95, v53, v52, ObjectType);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v61 = v83;
  if (v86 != -1)
  {
    *uint64_t v27 = v86 + 1;
    swift_storeEnumTagMultiPayload();
    uint64_t v62 = v87;
    OUTLINED_FUNCTION_8_0();
    (*(void (**)(char *, uint64_t *, uint64_t))(v85 + 40))(v62, v27, v21);
    swift_endAccess();
    OUTLINED_FUNCTION_8_0();
    sub_1B61AFCB0();
    OUTLINED_FUNCTION_112_1();
    uint64_t v63 = v92;
    uint64_t v64 = swift_getAssociatedTypeWitness();
    OUTLINED_FUNCTION_112_1();
    uint64_t v65 = swift_getAssociatedTypeWitness();
    uint64_t v66 = swift_getAssociatedConformanceWitness();
    uint64_t v67 = swift_getAssociatedConformanceWitness();
    uint64_t v95 = v63;
    uint64_t v96 = v64;
    uint64_t v97 = v65;
    uint64_t v98 = v52;
    uint64_t v99 = v66;
    uint64_t v100 = v67;
    type metadata accessor for BlueprintImpressionManager.Context();
    sub_1B5E5F1A0();
    sub_1B61B1FD0();
    sub_1B61B1FC0();
    swift_endAccess();
    OUTLINED_FUNCTION_33();
    v68();
    uint64_t v69 = v88;
    sub_1B61AFA60();
    LOBYTE(v62) = v84 & 0x7F;
    uint64_t v70 = (int *)v89;
    uint64_t v71 = (uint64_t)v90;
    uint64_t v72 = v78;
    *uint64_t v90 = v79;
    *(void *)(v71 + 8) = v72;
    OUTLINED_FUNCTION_94_2();
    uint64_t v73 = v80;
    v80();
    ((void (*)(uint64_t, uint64_t, uint64_t))v73)(v71 + v70[6], v69, v61);
    *(unsigned char *)(v71 + v70[7]) = v82;
    *(unsigned char *)(v71 + v70[8]) = (_BYTE)v62;
    *(void *)(v71 + v70[9]) = v86;
    if (MEMORY[0x1BA9B1EC0](v77))
    {
      swift_getObjectType();
      OUTLINED_FUNCTION_101_1();
      v74();
      swift_unknownObjectRelease();
    }
    sub_1B5F2F700(v71, (void (*)(void))type metadata accessor for BlueprintImpressionSession);
    (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v93, v61);
    goto LABEL_11;
  }
  __break(1u);
}

uint64_t sub_1B5F293B4(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = (char *)v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v3 + 16))(v2);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return 0x7669746341746F6ELL;
  }
  sub_1B5F296FC();
  uint64_t v6 = &v2[*(int *)(v5 + 48)];
  v9[0] = 0x28657669746361;
  v9[1] = 0xE700000000000000;
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  uint64_t v4 = v9[0];
  uint64_t v7 = sub_1B61AFA70();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return v4;
}

Swift::Void __swiftcall BlueprintImpressionManager.endSession(trigger:)(TeaUI::BlueprintImpressionSessionTrigger trigger)
{
}

uint64_t type metadata accessor for BlueprintImpressionManager.Behavior()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for BlueprintImpressionManager.Context()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for BlueprintImpressionManager.StagedContext()
{
  return swift_getGenericMetadata();
}

void sub_1B5F295C0(void *a1, uint64_t a2)
{
  v16.origin.CGFloat x = sub_1B5F298FC(a1);
  CGFloat x = v16.origin.x;
  CGFloat y = v16.origin.y;
  CGFloat width = v16.size.width;
  CGFloat height = v16.size.height;
  if (CGRectGetHeight(v16) == 0.0 && *(void *)(a2 + 16))
  {
    v15.CGFloat x = x;
    v15.CGFloat y = y;
    CGRectContainsPoint(*(CGRect *)(v2 + *(void *)(*(void *)v2 + 184) + 8), v15);
  }
  else
  {
    uint64_t v8 = v2 + *(void *)(*(void *)v2 + 184);
    v19.origin.CGFloat x = x;
    v19.origin.CGFloat y = y;
    v19.size.CGFloat width = width;
    v19.size.CGFloat height = height;
    CGRect v17 = CGRectIntersection(*(CGRect *)(v8 + 8), v19);
    CGFloat v9 = v17.origin.x;
    CGFloat v10 = v17.origin.y;
    CGFloat v11 = v17.size.width;
    CGFloat v12 = v17.size.height;
    v17.origin.CGFloat x = x;
    v17.origin.CGFloat y = y;
    v17.size.CGFloat width = width;
    v17.size.CGFloat height = height;
    double v13 = CGRectGetHeight(v17);
    double v14 = CGRectGetHeight(*(CGRect *)(v8 + 8));
    if (v14 < v13) {
      double v13 = v14;
    }
    if (v13 > 0.0)
    {
      v18.origin.CGFloat x = v9;
      v18.origin.CGFloat y = v10;
      v18.size.CGFloat width = v11;
      v18.size.CGFloat height = v12;
      CGRectGetHeight(v18);
    }
  }
}

void sub_1B5F296FC()
{
  if (!qword_1EB647A78)
  {
    MEMORY[0x1F4188790](0);
    sub_1B61AFA70();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EB647A78);
    }
  }
}

unint64_t sub_1B5F2981C()
{
  unint64_t result = qword_1EB6425C8;
  if (!qword_1EB6425C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6425C8);
  }
  return result;
}

uint64_t sub_1B5F29868(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t *a8)
{
  return sub_1B5F2D86C(a1, a2, a3, a4, a5, a6, a7, a8);
}

double sub_1B5F298FC(void *a1)
{
  if (!a1) {
    return 0.0;
  }
  id v2 = a1;
  objc_msgSend(v2, sel_bounds);
  objc_msgSend(v2, sel_convertRect_toCoordinateSpace_, *(void *)(v1 + *(void *)(*(void *)v1 + 184)));
  double v4 = v3;

  return v4;
}

uint64_t sub_1B5F299A0@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = *a2;
  uint64_t v6 = sub_1B61AFA70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for BlueprintImpressionManager.SectionContext();
  *(unsigned char *)(a3 + *(int *)(result + 36)) = v5;
  return result;
}

uint64_t sub_1B5F29A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t *a6)
{
  return sub_1B5F2E438(a1, a2, a3, a4, a5, a6);
}

void BlueprintImpressionManager.endImpression(at:view:trigger:)(uint64_t a1, uint64_t a2, char *a3)
{
}

uint64_t BlueprintImpressionManager.endImpressions(with:triggerSource:)()
{
  return swift_bridgeObjectRelease();
}

void sub_1B5F29D48()
{
}

void BlueprintImpressionManager.updateImpression(at:view:triggerSource:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v1 = v0;
  uint64_t v92 = v2;
  uint64_t v80 = v3;
  uint64_t v91 = v4;
  char v5 = (void *)*v0;
  uint64_t v83 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v82 = v6;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_30(v8);
  uint64_t v9 = v5[11];
  uint64_t v10 = v5[10];
  uint64_t v11 = OUTLINED_FUNCTION_116_1();
  OUTLINED_FUNCTION_89_1();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v13 = type metadata accessor for BlueprintItem();
  sub_1B61B2F80();
  OUTLINED_FUNCTION_0_10();
  uint64_t v81 = v14;
  OUTLINED_FUNCTION_13();
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  CGRect v18 = (char *)v77 - v17;
  uint64_t v90 = v13;
  uint64_t v86 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_2_7();
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_102_2(v21, v22, v23, v24, v25, v26, v27, v28, v77[0]);
  uint64_t v29 = OUTLINED_FUNCTION_116_1();
  uint64_t v30 = swift_getAssociatedConformanceWitness();
  uint64_t v87 = v29;
  uint64_t v88 = AssociatedConformanceWitness;
  uint64_t v95 = v29;
  uint64_t v96 = v11;
  uint64_t v31 = v30;
  uint64_t v85 = v11;
  uint64_t v97 = v30;
  uint64_t v98 = AssociatedConformanceWitness;
  uint64_t v32 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  uint64_t v84 = v33;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v34);
  uint64_t v36 = (char *)v77 - v35;
  LODWORD(v35) = *v92;
  BOOL v37 = (int)v35 < 0;
  BOOL v38 = (int)v35 >= 0;
  int v39 = v37;
  if (*((unsigned char *)v1 + v5[19])) {
    BOOL v38 = v39;
  }
  if (v38)
  {
    uint64_t v92 = v36;
    if (sub_1B5F2808C())
    {
      OUTLINED_FUNCTION_35_10();
      BlueprintProviderType.blueprint.getter();
      uint64_t v40 = v91;
      Blueprint.item(indexPath:)();
      OUTLINED_FUNCTION_28_11((uint64_t)v18, 1, v90);
      if (v54)
      {
        OUTLINED_FUNCTION_104_1();
        OUTLINED_FUNCTION_5_1();
        v41();
        OUTLINED_FUNCTION_27_3();
        OUTLINED_FUNCTION_68_1();
LABEL_30:
        OUTLINED_FUNCTION_5_1();
        v74();
        goto LABEL_34;
      }
      uint64_t v81 = v32;
      OUTLINED_FUNCTION_107();
      v42();
      v77[1] = (uint64_t)(v1 + 5);
      OUTLINED_FUNCTION_24_0();
      uint64_t v43 = v1[5];
      uint64_t v95 = v10;
      uint64_t v96 = v87;
      uint64_t v97 = v85;
      uint64_t v98 = v9;
      uint64_t v99 = v31;
      uint64_t v100 = v88;
      uint64_t v44 = v40;
      uint64_t v45 = type metadata accessor for BlueprintImpressionManager.Context();
      unint64_t v46 = sub_1B5E5F1A0();
      MEMORY[0x1BA9AF190](&v93, v44, v43, v83, v45, v46);
      uint64_t v47 = v93;
      unint64_t v79 = v46;
      uint64_t v78 = v31;
      if (!v93)
      {
        swift_endAccess();
        uint64_t v57 = v85;
LABEL_22:
        OUTLINED_FUNCTION_24_0();
        uint64_t v95 = v10;
        uint64_t v96 = v87;
        uint64_t v97 = v57;
        uint64_t v98 = v9;
        uint64_t v99 = v78;
        uint64_t v100 = v88;
        uint64_t v59 = OUTLINED_FUNCTION_91_1();
        MEMORY[0x1BA9AF190](v59);
        uint64_t v60 = v94;
        if (v94)
        {
          swift_endAccess();
          OUTLINED_FUNCTION_29();
          OUTLINED_FUNCTION_5_30();
          uint64_t v61 = v86;
          OUTLINED_FUNCTION_40_9();
          OUTLINED_FUNCTION_33();
          v62();
          uint64_t v63 = BlueprintItem.identifier.getter();
          uint64_t v65 = v64;
          uint64_t v88 = *(void *)(v61 + 8);
          OUTLINED_FUNCTION_46();
          v66();
          uint64_t v67 = v89;
          if (v63 == BlueprintItem.identifier.getter() && v65 == v68)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v71 = v84;
          }
          else
          {
            OUTLINED_FUNCTION_75_2();
            OUTLINED_FUNCTION_68_1();
            char v70 = OUTLINED_FUNCTION_44_7();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v71 = v84;
            if ((v70 & 1) == 0)
            {
              OUTLINED_FUNCTION_29();
              swift_unknownObjectWeakAssign();
              uint64_t v72 = v92;
LABEL_33:
              OUTLINED_FUNCTION_88_0();
              OUTLINED_FUNCTION_48_0();
              v75();
              uint64_t v94 = v60;
              OUTLINED_FUNCTION_33_0();
              sub_1B61B1FD0();
              swift_retain();
              sub_1B61B2000();
              swift_endAccess();
              swift_release();
              OUTLINED_FUNCTION_46();
              v76();
              (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v81);
              goto LABEL_34;
            }
          }
          uint64_t v72 = v92;
          sub_1B5F2DAF0(v92, v67);
          OUTLINED_FUNCTION_29();
          swift_unknownObjectWeakAssign();
          goto LABEL_33;
        }
        swift_endAccess();
        OUTLINED_FUNCTION_84_1();
        OUTLINED_FUNCTION_5_1();
        v73();
        OUTLINED_FUNCTION_27_3();
        goto LABEL_30;
      }
      v77[0] = v45;
      swift_endAccess();
      OUTLINED_FUNCTION_10_0();
      OUTLINED_FUNCTION_24();
      OUTLINED_FUNCTION_40_9();
      OUTLINED_FUNCTION_33();
      v48();
      uint64_t v49 = BlueprintItem.identifier.getter();
      uint64_t v51 = v50;
      OUTLINED_FUNCTION_46();
      v52();
      BOOL v54 = v49 == BlueprintItem.identifier.getter() && v51 == v53;
      if (v54)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        OUTLINED_FUNCTION_75_2();
        char v55 = OUTLINED_FUNCTION_44_7();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v55 & 1) == 0)
        {
          uint64_t v56 = v47;
          OUTLINED_FUNCTION_29();
LABEL_21:
          swift_unknownObjectWeakAssign();
          OUTLINED_FUNCTION_37_10();
          OUTLINED_FUNCTION_55_6();
          OUTLINED_FUNCTION_33();
          v58();
          uint64_t v101 = v56;
          OUTLINED_FUNCTION_8_0();
          sub_1B61B1FD0();
          swift_retain();
          sub_1B61B2000();
          swift_endAccess();
          swift_release();
          uint64_t v57 = v85;
          goto LABEL_22;
        }
      }
      sub_1B5F2DAF0(v92, v89);
      uint64_t v56 = v47;
      OUTLINED_FUNCTION_29();
      goto LABEL_21;
    }
  }
LABEL_34:
  OUTLINED_FUNCTION_73();
}

BOOL sub_1B5F2A5B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = type metadata accessor for BlueprintItem();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = (uint64_t)a2 + *(void *)(v3 + 136);
  swift_beginAccess();
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v9(v7, v8, v4);
  char v10 = BlueprintItem.isImpressionable.getter(v4);
  uint64_t v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v7, v4);
  if ((v10 & 1) == 0) {
    return 0;
  }
  uint64_t v12 = (uint64_t)a2 + *(void *)(*a2 + 168);
  double v13 = *(double *)(v12 + 8);
  char v14 = *(unsigned char *)(v12 + 16);
  uint64_t v15 = (void *)MEMORY[0x1BA9B1EC0]((char *)a2 + *(void *)(*a2 + 176));
  v9(v7, v8, v4);
  uint64_t v16 = BlueprintItem.impressionTraits.getter(v4);
  v11(v7, v4);
  sub_1B5F295C0(v15, v16);
  double v18 = v17;
  swift_bridgeObjectRelease();

  if (v14) {
    return v18 < v13;
  }
  else {
    return v18 == v13;
  }
}

void sub_1B5F2A7D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  id v6 = (id)MEMORY[0x1BA9B1EC0](a2 + *(void *)(*(void *)a2 + 176));
  char v7 = a4 & 0x7F;
  BlueprintImpressionManager.endImpression(at:view:trigger:)(a1, (uint64_t)v6, &v7);
}

uint64_t sub_1B5F2A858(uint64_t a1, uint64_t (*a2)(uint64_t, void))
{
  sub_1B61AFCB0();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintImpressionManager.Context();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, *(void *)(a1 + *(int *)(TupleTypeMetadata2 + 48)));
}

uint64_t sub_1B5F2A98C(uint64_t a1, char *a2, void *a3, int a4, uint64_t a5)
{
  uint64_t v146 = a5;
  int v141 = a4;
  uint64_t v152 = a3;
  uint64_t v142 = a1;
  id v6 = *(void **)a2;
  uint64_t v8 = *(void *)(*(void *)a2 + 96);
  uint64_t v9 = *(void *)(*(void *)a2 + 112);
  uint64_t v10 = *(void *)(*(void *)a2 + 120);
  uint64_t v158 = *(void *)(*(void *)a2 + 88);
  uint64_t v7 = v158;
  uint64_t v159 = v8;
  uint64_t v160 = v9;
  uint64_t v161 = v10;
  uint64_t v147 = type metadata accessor for Blueprint();
  uint64_t v122 = *(void *)(v147 - 8);
  MEMORY[0x1F4188790](v147);
  uint64_t v123 = (char *)&v111 - v11;
  uint64_t v159 = v8;
  uint64_t v160 = v9;
  uint64_t v161 = v10;
  uint64_t active = type metadata accessor for BlueprintActiveImpressionSection();
  uint64_t v124 = *(void *)(active - 8);
  MEMORY[0x1F4188790](active);
  uint64_t v126 = (uint64_t)&v111 - v12;
  uint64_t v133 = sub_1B61AFA70();
  uint64_t v131 = *(void *)(v133 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v133);
  uint64_t v121 = (char *)&v111 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v120 = (char *)&v111 - v16;
  MEMORY[0x1F4188790](v15);
  char v132 = (char *)&v111 - v17;
  uint64_t v18 = v6[13];
  uint64_t v153 = v6[10];
  uint64_t v154 = v18;
  uint64_t v130 = type metadata accessor for BlueprintImpressionManager.SectionContext();
  uint64_t v129 = sub_1B61B2F80();
  uint64_t v128 = *(void *)(v129 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v129);
  uint64_t v119 = (uint64_t)&v111 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  double v127 = (char *)&v111 - v21;
  uint64_t v158 = v7;
  uint64_t v159 = v8;
  uint64_t v160 = v9;
  uint64_t v161 = v10;
  uint64_t v22 = type metadata accessor for BlueprintSection();
  uint64_t v135 = sub_1B61B2F80();
  uint64_t v134 = *(void *)(v135 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v135);
  uint64_t v143 = (char *)&v111 - v24;
  uint64_t v148 = v22;
  uint64_t v137 = *(void *)(v22 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v118 = (char *)&v111 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  unint64_t v136 = (char *)&v111 - v27;
  uint64_t v150 = v7;
  uint64_t v158 = v7;
  uint64_t v159 = v8;
  uint64_t v149 = v9;
  uint64_t v160 = v9;
  uint64_t v161 = v10;
  uint64_t v145 = type metadata accessor for BlueprintActiveImpression();
  uint64_t v144 = *(void *)(v145 - 8);
  MEMORY[0x1F4188790](v145);
  uint64_t v155 = (uint64_t)&v111 - v28;
  uint64_t v140 = sub_1B61AFCB0();
  uint64_t v138 = *(void *)(v140 - 8);
  MEMORY[0x1F4188790](v140);
  char v139 = (char *)&v111 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = v10;
  uint64_t v30 = type metadata accessor for BlueprintItem();
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v33 = (char *)&v111 - v32;
  uint64_t v34 = &a2[v6[17]];
  swift_beginAccess();
  uint64_t v35 = v31 + 16;
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  v36(v33, v34, v30);
  char v37 = BlueprintItem.isImpressionable.getter(v30);
  uint64_t v40 = *(void (**)(char *, uint64_t))(v31 + 8);
  uint64_t v38 = v31 + 8;
  int v39 = v40;
  v40(v33, v30);
  if ((v37 & 1) == 0) {
    return 0;
  }
  uint64_t v113 = v8;
  uint64_t v41 = (void *)MEMORY[0x1BA9B1EC0](&a2[*(void *)(*(void *)a2 + 160)]);
  uint64_t v117 = v34;
  uint64_t v116 = v35;
  uint64_t v115 = v36;
  v36(v33, v34, v30);
  uint64_t v42 = BlueprintItem.impressionTraits.getter(v30);
  uint64_t v43 = v152;
  uint64_t v44 = v42;
  uint64_t v45 = v33;
  uint64_t v111 = v30;
  v39(v33, v30);
  sub_1B5F295C0(v41, v44);
  double v47 = v46;
  swift_bridgeObjectRelease();

  double v48 = *(double *)&a2[*(void *)(*(void *)a2 + 152)];
  uint64_t v114 = v38;
  if (v48 > v47) {
    return 1;
  }
  uint64_t v112 = v39;
  v141 &= 0x7Fu;
  LOBYTE(v158) = v141;
  uint64_t v50 = sub_1B5F2E794((unsigned __int8 *)&v158);
  (*(void (**)(char *, uint64_t, uint64_t))(v138 + 16))(v139, v142, v140);
  uint64_t v156 = v50;
  swift_beginAccess();
  swift_retain();
  uint64_t v158 = v153;
  uint64_t v159 = v150;
  uint64_t v160 = v113;
  uint64_t v161 = v154;
  uint64_t v162 = v149;
  uint64_t v163 = v151;
  type metadata accessor for BlueprintImpressionManager.Context();
  sub_1B5E5F1A0();
  sub_1B61B1FD0();
  sub_1B61B2000();
  swift_endAccess();
  uint64_t v51 = v43;
  char v139 = a2;
  if (qword_1EB648DC0 != -1) {
    swift_once();
  }
  id v52 = (id)qword_1EB654B48;
  LODWORD(v142) = sub_1B61B2B70();
  sub_1B5E6B8D4(0, (unint64_t *)&qword_1EB64D4A0, (unint64_t *)&qword_1EB64D4B0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_1B61C0140;
  BOOL v54 = (void *)((char *)v43 + *(void *)(*v43 + 160));
  uint64_t v56 = *v54;
  uint64_t v55 = v54[1];
  uint64_t v57 = MEMORY[0x1E4FBB1A0];
  *(void *)(v53 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v58 = sub_1B5E2E40C();
  *(void *)(v53 + 64) = v58;
  *(void *)(v53 + 32) = v56;
  *(void *)(v53 + 40) = v55;
  uint64_t v59 = v111;
  v115(v45, v117, v111);
  sub_1B61B1F70();
  uint64_t v60 = BlueprintItem.visualDescription.getter(v59);
  uint64_t v61 = v51;
  uint64_t v63 = v62;
  v112(v45, v59);
  *(void *)(v53 + 96) = v57;
  *(void *)(v53 + 104) = v58;
  *(void *)(v53 + 72) = v60;
  *(void *)(v53 + 80) = v63;
  uint64_t v64 = v61;
  *(void *)(v53 + 136) = MEMORY[0x1E4FBC958];
  *(void *)(v53 + 144) = sub_1B5F2981C();
  *(double *)(v53 + 112) = v47;
  sub_1B61B0F90();

  swift_bridgeObjectRelease();
  uint64_t v65 = (void *)MEMORY[0x1BA9B1EC0](v50 + *(void *)(*(void *)v50 + 176));
  double v66 = sub_1B5F298FC(v65);
  double v68 = v67;
  double v70 = v69;
  double v72 = v71;

  LOBYTE(v158) = v141;
  uint64_t v73 = v155;
  uint64_t v142 = v50;
  sub_1B5F2DEDC((unsigned __int8 *)&v158, v155, v66, v68, v70, v72);
  uint64_t v140 = (uint64_t)(v61 + 3);
  uint64_t v74 = MEMORY[0x1BA9B1EC0]();
  uint64_t v76 = v153;
  uint64_t v75 = v154;
  if (v74)
  {
    uint64_t v77 = v61[4];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56))(v64, v73, v76, v150, v113, v75, v149, v151, ObjectType, v77);
    swift_unknownObjectRelease();
  }
  unint64_t v79 = (void *)((char *)v64 + *(void *)(*v64 + 192));
  swift_beginAccess();
  uint64_t v80 = *v79;
  uint64_t v81 = type metadata accessor for BlueprintImpressionManagerProcessor();
  sub_1B61B1F70();
  uint64_t v164 = sub_1B61B24F0();
  if (v164 != MEMORY[0x1BA9AF7B0](v80, v81))
  {
    do
    {
      char v85 = sub_1B61B25B0();
      sub_1B61B2570();
      if (v85) {
        swift_retain();
      }
      else {
        sub_1B61B3300();
      }
      sub_1B61B1F70();
      MEMORY[0x1BA9AF7C0](&v164, v80, v81);
      swift_bridgeObjectRelease();
      sub_1B612F068();
      swift_release();
      uint64_t v86 = v164;
    }
    while (v86 != MEMORY[0x1BA9AF7B0](v80, v81));
  }
  swift_bridgeObjectRelease();
  v115(v45, v117, v59);
  BlueprintItem.identifier.getter();
  v112(v45, v59);
  uint64_t v82 = (uint64_t)v143;
  uint64_t v83 = v146;
  Blueprint.section(forItem:)();
  swift_bridgeObjectRelease();
  uint64_t v84 = v148;
  if (__swift_getEnumTagSinglePayload(v82, 1, v148) != 1)
  {
    uint64_t v87 = v137;
    uint64_t v88 = v136;
    (*(void (**)(char *, uint64_t, uint64_t))(v137 + 32))(v136, v82, v84);
    if (BlueprintSection.isImpressionable.getter())
    {
      uint64_t v89 = BlueprintSection.identifier.getter();
      uint64_t v91 = v90;
      swift_beginAccess();
      uint64_t v92 = v64[6];
      uint64_t v156 = v89;
      uint64_t v157 = v91;
      uint64_t v93 = (uint64_t)v127;
      uint64_t v94 = v130;
      MEMORY[0x1BA9AF190](&v156, v92, MEMORY[0x1E4FBB1A0], v130, MEMORY[0x1E4FBB1B0]);
      swift_bridgeObjectRelease();
      swift_endAccess();
      if (__swift_getEnumTagSinglePayload(v93, 1, v94) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v93, v129);
        uint64_t v95 = v132;
        sub_1B61AFA60();
        uint64_t v96 = v94;
        uint64_t v97 = BlueprintSection.identifier.getter();
        uint64_t v99 = v98;
        uint64_t v100 = *(void (**)(char *, char *, uint64_t))(v131 + 16);
        uint64_t v101 = (uint64_t)v120;
        v100(v120, v95, v133);
        LOBYTE(v164) = v141;
        uint64_t v102 = v119;
        sub_1B5F299A0(v101, (char *)&v164, v119);
        __swift_storeEnumTagSinglePayload(v102, 0, 1, v96);
        uint64_t v156 = v97;
        uint64_t v157 = v99;
        swift_beginAccess();
        sub_1B61B1FD0();
        sub_1B61B2000();
        swift_endAccess();
        (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v123, v83, v147);
        (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v118, v136, v148);
        v100(v121, v132, v133);
        LOBYTE(v164) = v141;
        uint64_t v103 = v149;
        uint64_t v104 = v126;
        uint64_t v105 = v150;
        uint64_t v106 = v113;
        sub_1B5F8B938((char *)&v164, *(void *)&v139[*(void *)(*(void *)v139 + 144)], *(void *)&v139[*(void *)(*(void *)v139 + 144) + 8], v126);
        if (MEMORY[0x1BA9B1EC0](v140))
        {
          uint64_t v107 = v64[4];
          uint64_t v108 = swift_getObjectType();
          uint64_t v109 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v107 + 64);
          sub_1B61B1F70();
          uint64_t v110 = v108;
          uint64_t v104 = v126;
          v109(v64, v126, v153, v105, v106, v154, v103, v151, v110, v107);
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          sub_1B61B1F70();
          swift_release();
        }
        (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v104, active);
        (*(void (**)(char *, uint64_t))(v131 + 8))(v132, v133);
        (*(void (**)(char *, uint64_t))(v137 + 8))(v136, v148);
        goto LABEL_25;
      }
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v93, v129);
    }
    else
    {
      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v87 + 8))(v88, v84);
LABEL_25:
    (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v155, v145);
    return 0;
  }
  (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v155, v145);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v82, v135);
  return 0;
}

uint64_t sub_1B5F2BBB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a4;
  double v47 = *(void **)a2;
  uint64_t v7 = v47[12];
  uint64_t v8 = v47[14];
  uint64_t v9 = v47[15];
  uint64_t v46 = v47[11];
  uint64_t v53 = v46;
  uint64_t v54 = v7;
  uint64_t v41 = v8;
  uint64_t v55 = v8;
  uint64_t v56 = v9;
  uint64_t v10 = type metadata accessor for Blueprint();
  uint64_t v39 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  double v48 = (char *)&v36 - v11;
  uint64_t v51 = sub_1B61AFCB0();
  uint64_t v37 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v50 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = v7;
  uint64_t v40 = v9;
  uint64_t v13 = type metadata accessor for BlueprintItem();
  uint64_t v14 = sub_1B61B2F80();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v36 - v17;
  uint64_t v43 = *(void *)(v13 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v38 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v36 - v21;
  uint64_t v44 = a3;
  uint64_t v45 = v10;
  Blueprint.item(indexPath:)();
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v13) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  uint64_t v24 = v43;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v22, v18, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v50, a1, v51);
  uint64_t v25 = v47[13];
  uint64_t v53 = v47[10];
  uint64_t v54 = v46;
  uint64_t v55 = v42;
  uint64_t v56 = v25;
  uint64_t v57 = v41;
  uint64_t v58 = v40;
  type metadata accessor for BlueprintImpressionManager.StagedContext();
  uint64_t v26 = (uint64_t)v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v48, v44, v45);
  uint64_t v27 = (uint64_t)v38;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v38, v22, v13);
  uint64_t v28 = (uint64_t *)(a2 + *(void *)(*(void *)a2 + 160));
  uint64_t v29 = *v28;
  uint64_t v30 = v28[1];
  uint64_t v31 = (void *)MEMORY[0x1BA9B1EC0](a2 + *(void *)(*(void *)a2 + 176));
  uint64_t v32 = a2 + *(void *)(*(void *)a2 + 168);
  uint64_t v33 = *(void *)(v32 + 8);
  char v34 = *(unsigned char *)(v32 + 16);
  uint64_t v35 = *(void *)(v32 + 24);
  uint64_t v53 = *(void *)v32;
  uint64_t v54 = v33;
  LOBYTE(v55) = v34;
  uint64_t v56 = v35;
  sub_1B61B1F70();
  uint64_t v52 = sub_1B5F29A34(v26, v27, v29, v30, v31, &v53);
  swift_beginAccess();
  sub_1B5E5F1A0();
  sub_1B61B1FD0();
  sub_1B61B2000();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v22, v13);
}

void BlueprintImpressionManager.updateImpressionModel(at:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v83 = v2;
  uint64_t v3 = *v0;
  uint64_t v80 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v74 = v4;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_30(v6);
  uint64_t v7 = *(void *)(v3 + 88);
  uint64_t v8 = *(void *)(v3 + 80);
  uint64_t v9 = OUTLINED_FUNCTION_110();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintItem();
  uint64_t v11 = OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_0_10();
  uint64_t v75 = v12;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v68 - v14;
  OUTLINED_FUNCTION_0_13();
  uint64_t v81 = v16;
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_116();
  uint64_t v82 = v20;
  uint64_t v21 = OUTLINED_FUNCTION_110();
  uint64_t v22 = swift_getAssociatedConformanceWitness();
  uint64_t v78 = v21;
  uint64_t v79 = v9;
  uint64_t v86 = v21;
  uint64_t v87 = v9;
  uint64_t v23 = v22;
  uint64_t v88 = v22;
  uint64_t v89 = AssociatedConformanceWitness;
  uint64_t v76 = AssociatedConformanceWitness;
  uint64_t v24 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  uint64_t v77 = v25;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)v68 - v27;
  if (sub_1B5F2808C())
  {
    BlueprintProviderType.blueprint.getter();
    Blueprint.item(indexPath:)();
    OUTLINED_FUNCTION_28_11((uint64_t)v15, 1, v1);
    if (v45)
    {
      OUTLINED_FUNCTION_84_1();
      OUTLINED_FUNCTION_5_1();
      v29();
      uint64_t v30 = OUTLINED_FUNCTION_104_1();
      uint64_t v32 = v11;
      goto LABEL_26;
    }
    uint64_t v75 = v28;
    uint64_t v69 = v24;
    OUTLINED_FUNCTION_107();
    v33();
    v68[2] = v0 + 5;
    OUTLINED_FUNCTION_24_0();
    uint64_t v34 = v0[5];
    uint64_t v86 = v8;
    uint64_t v87 = v78;
    uint64_t v88 = v79;
    uint64_t v89 = v7;
    uint64_t v90 = v23;
    uint64_t v91 = v76;
    uint64_t v35 = type metadata accessor for BlueprintImpressionManager.Context();
    unint64_t v36 = sub_1B5E5F1A0();
    v68[1] = v35;
    MEMORY[0x1BA9AF190](&v84, v83, v34, v80, v35, v36);
    uint64_t v37 = v84;
    uint64_t v72 = v1;
    unint64_t v71 = v36;
    uint64_t v70 = v23;
    if (v84)
    {
      swift_endAccess();
      OUTLINED_FUNCTION_5_30();
      uint64_t v38 = v81;
      uint64_t v39 = v73;
      OUTLINED_FUNCTION_33();
      v40();
      v68[0] = BlueprintItem.identifier.getter();
      uint64_t v42 = v41;
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v1);
      uint64_t v43 = v82;
      BOOL v45 = v68[0] == BlueprintItem.identifier.getter() && v42 == v44;
      if (v45)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v46 = OUTLINED_FUNCTION_44_7();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v46 & 1) == 0)
        {
          swift_release();
LABEL_15:
          uint64_t v48 = v76;
          OUTLINED_FUNCTION_24_0();
          uint64_t v86 = v8;
          uint64_t v87 = v78;
          uint64_t v88 = v79;
          uint64_t v89 = v7;
          uint64_t v90 = v70;
          uint64_t v91 = v48;
          uint64_t v49 = OUTLINED_FUNCTION_91_1();
          MEMORY[0x1BA9AF190](v49);
          uint64_t v50 = v85;
          if (v85)
          {
            swift_endAccess();
            OUTLINED_FUNCTION_29();
            OUTLINED_FUNCTION_5_30();
            uint64_t v51 = v81;
            OUTLINED_FUNCTION_85_0();
            uint64_t v53 = *(void *)(v52 - 256);
            OUTLINED_FUNCTION_33();
            v54();
            uint64_t v55 = BlueprintItem.identifier.getter();
            uint64_t v57 = v56;
            uint64_t v60 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
            uint64_t v59 = v51 + 8;
            uint64_t v58 = v60;
            v60(v7, v53);
            if (v55 == BlueprintItem.identifier.getter() && v57 == v61)
            {
              swift_bridgeObjectRelease_n();
              OUTLINED_FUNCTION_77_1();
            }
            else
            {
              OUTLINED_FUNCTION_75_2();
              char v63 = OUTLINED_FUNCTION_44_7();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_77_1();
              if ((v63 & 1) == 0)
              {
                swift_release();
                uint64_t v64 = v82;
LABEL_25:
                v58(v64, v72);
                OUTLINED_FUNCTION_84_1();
                uint64_t v30 = v59;
                uint64_t v32 = v59;
                goto LABEL_26;
              }
            }
            uint64_t v66 = v82;
            sub_1B5F2DAF0(v59, v82);
            OUTLINED_FUNCTION_55_6();
            OUTLINED_FUNCTION_48_0();
            v67();
            uint64_t v85 = v50;
            OUTLINED_FUNCTION_33_0();
            sub_1B61B1FD0();
            swift_retain();
            sub_1B61B2000();
            swift_endAccess();
            swift_release();
            uint64_t v64 = v66;
            goto LABEL_25;
          }
          swift_endAccess();
          OUTLINED_FUNCTION_5_1();
          v65();
          OUTLINED_FUNCTION_84_1();
          uint64_t v30 = (uint64_t)v75;
          uint64_t v32 = v69;
LABEL_26:
          v31(v30, v32);
          goto LABEL_27;
        }
      }
      sub_1B5F2DAF0(v75, v43);
      OUTLINED_FUNCTION_37_10();
      OUTLINED_FUNCTION_33();
      v47();
      uint64_t v92 = v37;
      OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_71_3();
      sub_1B61B1FD0();
      swift_retain();
      sub_1B61B2000();
      swift_endAccess();
      swift_release();
      goto LABEL_15;
    }
    swift_endAccess();
    goto LABEL_15;
  }
LABEL_27:
  OUTLINED_FUNCTION_73();
}

Swift::Void __swiftcall BlueprintImpressionManager.reloadImpressions()()
{
  OUTLINED_FUNCTION_83();
  uint64_t v2 = v0;
  uint64_t v3 = *(void *)(*(void *)v0 + 80);
  uint64_t v4 = *(void *)(*(void *)v0 + 88);
  uint64_t v147 = type metadata accessor for BlueprintImpressionManager.SectionContext();
  uint64_t v146 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_10();
  uint64_t v129 = v5;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_30((uint64_t)v123 - v7);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v10 = type metadata accessor for BlueprintItem();
  uint64_t v142 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_10();
  int64_t v156 = v11;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_116();
  OUTLINED_FUNCTION_30(v14);
  uint64_t v154 = v10;
  uint64_t v153 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_116();
  uint64_t v134 = v17;
  uint64_t v160 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_116();
  OUTLINED_FUNCTION_30(v23);
  sub_1B5F2F754(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v24 - 8);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)v123 - v26;
  OUTLINED_FUNCTION_101_1();
  uint64_t v28 = swift_getAssociatedTypeWitness();
  uint64_t v144 = v4;
  uint64_t v29 = swift_getAssociatedConformanceWitness();
  uint64_t v162 = v28;
  uint64_t v163 = AssociatedTypeWitness;
  uint64_t v157 = AssociatedTypeWitness;
  uint64_t v164 = v29;
  uint64_t v165 = AssociatedConformanceWitness;
  uint64_t v130 = AssociatedConformanceWitness;
  uint64_t v158 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  uint64_t v31 = v30;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)v123 - v33;
  if ((sub_1B5F2808C() & 1) == 0) {
    goto LABEL_88;
  }
  v123[2] = v31;
  uint64_t v35 = v144;
  BlueprintProviderType.blueprint.getter();
  uint64_t v159 = v34;
  uint64_t v126 = (void *)(v2 + 56);
  OUTLINED_FUNCTION_24();
  uint64_t v127 = v2;
  sub_1B61B1F70();
  uint64_t v162 = v3;
  uint64_t v163 = v28;
  uint64_t v125 = v28;
  unint64_t v36 = (void *)v157;
  uint64_t v164 = v157;
  uint64_t v165 = v35;
  uint64_t v124 = v29;
  uint64_t v166 = v29;
  uint64_t v167 = v130;
  uint64_t v37 = type metadata accessor for BlueprintImpressionManager.StagedContext();
  unint64_t v38 = sub_1B5E5F1A0();
  OUTLINED_FUNCTION_94_2();
  uint64_t v39 = sub_1B61B1F70();
  swift_bridgeObjectRelease();
  sub_1B61B1F70();
  v123[1] = v39;
  uint64_t v140 = v37;
  uint64_t v149 = (void *)v38;
  sub_1B61B3490();
  uint64_t v135 = v169;
  uint64_t v148 = v171;
  int64_t v136 = (unint64_t)(v170 + 64) >> 6;
  uint64_t v155 = v19 + 16;
  uint64_t v152 = v19 + 32;
  uint64_t v40 = v172;
  uint64_t v139 = v153 + 32;
  uint64_t v137 = v153 + 8;
  uint64_t v151 = v19 + 8;
  int64_t v138 = v156 + 8;
  uint64_t v153 = v19;
  uint64_t v41 = v3;
  int64_t v156 = v3;
  uint64_t v42 = v36;
  uint64_t v43 = v150;
  uint64_t v44 = v126;
  uint64_t v133 = v27;
  uint64_t v132 = v168;
  if (!v172) {
    goto LABEL_4;
  }
LABEL_3:
  uint64_t v150 = (v40 - 1) & v40;
  uint64_t v45 = v143;
  while (1)
  {
    uint64_t v51 = *(void (**)(void))(v19 + 16);
    OUTLINED_FUNCTION_94_2();
    OUTLINED_FUNCTION_33();
    v51();
    OUTLINED_FUNCTION_124();
    __swift_storeEnumTagSinglePayload(v52, v53, v54, v1);
    OUTLINED_FUNCTION_28_11((uint64_t)v27, 1, v1);
    if (v55) {
      break;
    }
    OUTLINED_FUNCTION_52_8();
    OUTLINED_FUNCTION_49_0();
    v56();
    Blueprint.item(indexPath:)();
    OUTLINED_FUNCTION_28_11(v45, 1, v154);
    if (v55)
    {
      OUTLINED_FUNCTION_52_8();
      OUTLINED_FUNCTION_5_1();
      v57();
      OUTLINED_FUNCTION_33_0();
      sub_1B61B1FD0();
      sub_1B61B1F30();
      swift_endAccess();
      swift_release();
      OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_5_1();
      v58();
      uint64_t v19 = v153;
    }
    else
    {
      OUTLINED_FUNCTION_19();
      uint64_t v59 = v134;
      OUTLINED_FUNCTION_49_0();
      v60();
      OUTLINED_FUNCTION_24_0();
      uint64_t v1 = v140;
      uint64_t v42 = v149;
      MEMORY[0x1BA9AF190](v173, v43, *v44, v160, v140, v149);
      uint64_t v41 = v173[0];
      if (v173[0])
      {
        swift_endAccess();
        sub_1B5F2DAF0(v159, v59);
        OUTLINED_FUNCTION_33();
        v51();
        v173[0] = v41;
        OUTLINED_FUNCTION_33_0();
        sub_1B61B1FD0();
        swift_retain();
        sub_1B61B2000();
        swift_endAccess();
        swift_release();
      }
      else
      {
        swift_endAccess();
      }
      OUTLINED_FUNCTION_107_1();
      OUTLINED_FUNCTION_5_1();
      v61();
      OUTLINED_FUNCTION_52_8();
      OUTLINED_FUNCTION_5_1();
      v62();
      uint64_t v19 = v153;
      OUTLINED_FUNCTION_96_1();
      uint64_t v27 = v133;
    }
    uint64_t v40 = v150;
    if (v150) {
      goto LABEL_3;
    }
LABEL_4:
    uint64_t v45 = v143;
    if (__OFADD__(v148, 1)) {
      goto LABEL_90;
    }
    if (v148 + 1 >= v136)
    {
LABEL_34:
      OUTLINED_FUNCTION_50_6();
      break;
    }
    OUTLINED_FUNCTION_48_6();
    if (!v47)
    {
      OUTLINED_FUNCTION_43_6();
      if (v48 == v49) {
        goto LABEL_34;
      }
      OUTLINED_FUNCTION_59_3();
      if (!v47)
      {
        OUTLINED_FUNCTION_43_6();
        if (v48 == v49) {
          goto LABEL_34;
        }
        OUTLINED_FUNCTION_59_3();
        if (!v47)
        {
          OUTLINED_FUNCTION_43_6();
          if (v48 == v49) {
            goto LABEL_34;
          }
          OUTLINED_FUNCTION_59_3();
          if (!v47)
          {
            OUTLINED_FUNCTION_15_18();
            if (v48 == v49) {
              goto LABEL_34;
            }
            uint64_t v47 = *(void *)(v135 + 8 * v46);
            if (!v47)
            {
              do
              {
                OUTLINED_FUNCTION_15_18();
                if (v48 == v49) {
                  goto LABEL_34;
                }
                OUTLINED_FUNCTION_62_5();
              }
              while (!v47);
              uint64_t v46 = v50 - 1;
            }
          }
        }
      }
    }
    uint64_t v150 = (v47 - 1) & v47;
    uint64_t v148 = v46;
  }
  swift_release();
  uint64_t v63 = v129;
  OUTLINED_FUNCTION_24();
  sub_1B61B1F70();
  uint64_t v64 = sub_1B61B1F70();
  swift_bridgeObjectRelease();
  sub_1B61B1F70();
  uint64_t v143 = v64;
  sub_1B61B3490();
  uint64_t v65 = v173[0];
  uint64_t v150 = v173[1];
  uint64_t v66 = v173[3];
  uint64_t v67 = v174;
  int64_t v68 = (unint64_t)(v173[2] + 64) >> 6;
  uint64_t v69 = (void (**)(uint64_t, uint64_t))(v63 + 8);
  if (!v174) {
    goto LABEL_37;
  }
LABEL_36:
  OUTLINED_FUNCTION_99_0();
  uint64_t v71 = v70 | (v66 << 6);
  while (1)
  {
    uint64_t v83 = (uint64_t *)(*(void *)(v65 + 48) + 16 * v71);
    uint64_t v41 = *v83;
    uint64_t v42 = (void *)v83[1];
    sub_1B61B1F70();
    v84._countAndFlagsBits = v41;
    v84._object = v42;
    if (!Blueprint.contains(identifier:)(v84))
    {
      v161[4] = v41;
      v161[5] = v42;
      OUTLINED_FUNCTION_33_0();
      sub_1B61B1FD0();
      uint64_t v41 = v145;
      sub_1B61B1F30();
      swift_endAccess();
      (*v69)(v41, v146);
    }
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_96_1();
    if (v67) {
      goto LABEL_36;
    }
LABEL_37:
    if (__OFADD__(v66, 1))
    {
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
      return;
    }
    uint64_t v67 = v144;
    if (v66 + 1 >= v68) {
      goto LABEL_56;
    }
    OUTLINED_FUNCTION_48_6();
    if (!v73)
    {
      if (v72 + 1 >= v68) {
        goto LABEL_56;
      }
      OUTLINED_FUNCTION_18_17();
      if (!v75)
      {
        if (v74 + 2 >= v68) {
          goto LABEL_56;
        }
        OUTLINED_FUNCTION_18_17();
        if (!v77)
        {
          if (v76 + 3 >= v68) {
            goto LABEL_56;
          }
          OUTLINED_FUNCTION_18_17();
          if (!v79)
          {
            if (v78 + 4 >= v68) {
              goto LABEL_56;
            }
            if (!*(void *)(v150 + 8 * (v78 + 4))) {
              break;
            }
          }
        }
      }
    }
LABEL_51:
    OUTLINED_FUNCTION_67_1();
    uint64_t v66 = v82;
  }
  int64_t v80 = v66 + 6;
  while (v80 < v68)
  {
    OUTLINED_FUNCTION_62_5();
    if (v81) {
      goto LABEL_51;
    }
  }
LABEL_56:
  swift_release();
  uint64_t v85 = (void *)(v127 + 40);
  OUTLINED_FUNCTION_24();
  sub_1B61B1F70();
  uint64_t v162 = v41;
  uint64_t v163 = v125;
  uint64_t v164 = (uint64_t)v42;
  uint64_t v165 = v67;
  uint64_t v166 = v124;
  uint64_t v167 = v130;
  uint64_t v86 = type metadata accessor for BlueprintImpressionManager.Context();
  OUTLINED_FUNCTION_101_1();
  uint64_t v87 = sub_1B61B1F70();
  swift_bridgeObjectRelease();
  sub_1B61B1F70();
  uint64_t v146 = v87;
  uint64_t v88 = v85;
  sub_1B61B3490();
  uint64_t v89 = v162;
  uint64_t v150 = v163;
  uint64_t v157 = v165;
  uint64_t v90 = v166;
  int64_t v156 = (unint64_t)(v164 + 64) >> 6;
  uint64_t v91 = v128;
  uint64_t v92 = v131;
  uint64_t v148 = v162;
  uint64_t v147 = v86;
  OUTLINED_FUNCTION_94_2();
  while (2)
  {
    if (v90)
    {
      OUTLINED_FUNCTION_99_0();
LABEL_78:
      uint64_t v101 = *(void (**)(void))(v93 + 16);
      uint64_t v102 = v160;
      OUTLINED_FUNCTION_33();
      v101();
      OUTLINED_FUNCTION_124();
      __swift_storeEnumTagSinglePayload(v103, v104, v105, v102);
      OUTLINED_FUNCTION_28_11(v92, 1, v102);
      if (v55) {
        goto LABEL_87;
      }
      OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_49_0();
      v106();
      uint64_t v107 = v141;
      uint64_t v108 = v91;
      Blueprint.item(indexPath:)();
      uint64_t v91 = v154;
      OUTLINED_FUNCTION_28_11(v107, 1, v154);
      if (v55)
      {
        OUTLINED_FUNCTION_5_1();
        v109();
        OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_5_1();
        v110();
        uint64_t v91 = v108;
      }
      else
      {
        OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_88_0();
        OUTLINED_FUNCTION_49_0();
        v111();
        OUTLINED_FUNCTION_24_0();
        uint64_t v112 = *v88;
        uint64_t v113 = v86;
        uint64_t v114 = v88;
        uint64_t v88 = v149;
        MEMORY[0x1BA9AF190](v161, v108, v112, v160, v113, v149);
        uint64_t v115 = v161[0];
        if (v161[0])
        {
          swift_endAccess();
          sub_1B5F2DAF0(v159, v89);
          OUTLINED_FUNCTION_33();
          v101();
          v161[0] = v115;
          OUTLINED_FUNCTION_33_0();
          OUTLINED_FUNCTION_71_3();
          uint64_t v116 = v147;
          sub_1B61B1FD0();
          swift_retain();
          uint64_t v92 = v131;
          uint64_t v91 = (uint64_t)v114;
          sub_1B61B2000();
          swift_endAccess();
          swift_release();
          OUTLINED_FUNCTION_106_0();
          OUTLINED_FUNCTION_5_1();
          v117();
          OUTLINED_FUNCTION_5_1();
          v118();
          OUTLINED_FUNCTION_92_1();
          uint64_t v86 = v116;
        }
        else
        {
          swift_endAccess();
          OUTLINED_FUNCTION_106_0();
          OUTLINED_FUNCTION_5_1();
          v119();
          OUTLINED_FUNCTION_5_1();
          v120();
          OUTLINED_FUNCTION_92_1();
          uint64_t v86 = v147;
        }
        uint64_t v89 = v148;
      }
      continue;
    }
    break;
  }
  if (__OFADD__(v157, 1)) {
    goto LABEL_91;
  }
  if (v157 + 1 >= v156) {
    goto LABEL_86;
  }
  OUTLINED_FUNCTION_48_6();
  if (v94) {
    goto LABEL_77;
  }
  OUTLINED_FUNCTION_43_6();
  if (v48 == v49) {
    goto LABEL_86;
  }
  OUTLINED_FUNCTION_18_17();
  if (v95) {
    goto LABEL_77;
  }
  OUTLINED_FUNCTION_43_6();
  if (v48 == v49) {
    goto LABEL_86;
  }
  OUTLINED_FUNCTION_18_17();
  if (v96) {
    goto LABEL_77;
  }
  OUTLINED_FUNCTION_43_6();
  if (v48 == v49) {
    goto LABEL_86;
  }
  OUTLINED_FUNCTION_18_17();
  if (v97) {
    goto LABEL_77;
  }
  OUTLINED_FUNCTION_15_18();
  if (v48 == v49) {
    goto LABEL_86;
  }
  if (*(void *)(v150 + 8 * v98))
  {
LABEL_77:
    OUTLINED_FUNCTION_67_1();
    uint64_t v157 = v100;
    goto LABEL_78;
  }
  while (1)
  {
    OUTLINED_FUNCTION_15_18();
    if (v48 == v49) {
      break;
    }
    OUTLINED_FUNCTION_62_5();
    if (v99) {
      goto LABEL_77;
    }
  }
LABEL_86:
  OUTLINED_FUNCTION_50_6();
LABEL_87:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v121 = OUTLINED_FUNCTION_83_1();
  v122(v121, v158);
LABEL_88:
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5F2D86C(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t *a8)
{
  char v13 = *a4;
  uint64_t v14 = *a8;
  uint64_t v28 = a8[1];
  char v27 = *((unsigned char *)a8 + 16);
  uint64_t v15 = a8[3];
  swift_unknownObjectWeakInit();
  uint64_t v16 = v8 + *(void *)(*(void *)v8 + 128);
  uint64_t v17 = type metadata accessor for Blueprint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v16, a1, v17);
  uint64_t v18 = v8 + *(void *)(*(void *)v8 + 136);
  uint64_t v19 = type metadata accessor for BlueprintItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18, a2, v19);
  uint64_t v20 = v8 + *(void *)(*(void *)v8 + 144);
  uint64_t v21 = sub_1B61AFA70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a3, v21);
  *(unsigned char *)(v8 + *(void *)(*(void *)v8 + 152)) = v13;
  uint64_t v22 = (void *)(v8 + *(void *)(*(void *)v8 + 160));
  *uint64_t v22 = a5;
  v22[1] = a6;
  swift_unknownObjectWeakAssign();

  uint64_t v23 = v8 + *(void *)(*(void *)v8 + 168);
  *(void *)uint64_t v23 = v14;
  *(void *)(v23 + 8) = v28;
  *(unsigned char *)(v23 + 16) = v27;
  *(void *)(v23 + 24) = v15;
  return v8;
}

uint64_t sub_1B5F2DAF4@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v33 = a1;
  uint64_t v40 = a2;
  int64_t v11 = (void *)*v6;
  uint64_t v39 = sub_1B61AFA70();
  uint64_t v12 = *(void *)(v39 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v39);
  unint64_t v38 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v35 = (char *)&v32 - v15;
  uint64_t v16 = v11[15];
  uint64_t v36 = v11[12];
  uint64_t v17 = v36;
  uint64_t v18 = type metadata accessor for BlueprintItem();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v32 - v20;
  uint64_t v37 = v11[11];
  uint64_t v34 = v11[14];
  uint64_t v43 = v37;
  uint64_t v44 = v17;
  uint64_t v45 = v34;
  uint64_t v46 = v16;
  uint64_t v22 = type metadata accessor for Blueprint();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v32 - v24;
  LODWORD(v33) = *v33;
  uint64_t v26 = (uint64_t)v6 + v11[16];
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v25, v26, v22);
  uint64_t v27 = (uint64_t)v6 + *(void *)(*v6 + 136);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v27, v18);
  uint64_t v28 = (uint64_t)v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v35, (uint64_t)v6 + *(void *)(*v6 + 144), v39);
  uint64_t v29 = (uint64_t)v38;
  sub_1B61AFA60();
  uint64_t v30 = *v6;
  char v42 = *((unsigned char *)v6 + *(void *)(*v6 + 152));
  char v41 = (char)v33;
  sub_1B5FFC184((uint64_t)v25, (uint64_t)v21, v28, v29, &v42, &v41, *(uint64_t *)((char *)v6 + *(void *)(v30 + 160)), *(uint64_t *)((char *)v6 + *(void *)(v30 + 160) + 8), v40, a3, a4, a5, a6);
  return sub_1B61B1F70();
}

uint64_t sub_1B5F2DEDC@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v28 = a1;
  uint64_t v33 = a2;
  int64_t v11 = *(void **)v6;
  uint64_t v32 = sub_1B61AFA70();
  uint64_t v12 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v31 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v11[15];
  uint64_t v29 = v11[12];
  uint64_t v15 = v29;
  uint64_t v16 = type metadata accessor for BlueprintItem();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v27 - v18;
  uint64_t v30 = v11[11];
  uint64_t v27 = v11[14];
  uint64_t v35 = v30;
  uint64_t v36 = v15;
  uint64_t v37 = v27;
  uint64_t v38 = v14;
  uint64_t v20 = type metadata accessor for Blueprint();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v27 - v22;
  LODWORD(v28) = *v28;
  uint64_t v24 = v6 + v11[16];
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, v24, v20);
  uint64_t v25 = v6 + *(void *)(*(void *)v6 + 136);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v25, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v31, v6 + *(void *)(*(void *)v6 + 144), v32);
  char v34 = (char)v28;
  sub_1B5F8BA68(&v34, *(void *)(v6 + *(void *)(*(void *)v6 + 160)), *(void *)(v6 + *(void *)(*(void *)v6 + 160) + 8), v33, a3, a4, a5, a6);
  return sub_1B61B1F70();
}

uint64_t sub_1B5F2E25C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 128);
  uint64_t v2 = type metadata accessor for Blueprint();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 136);
  uint64_t v4 = type metadata accessor for BlueprintItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + *(void *)(*(void *)v0 + 144);
  uint64_t v6 = sub_1B61AFA70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t sub_1B5F2E420()
{
  return sub_1B5F2ECA0(sub_1B5F2E25C);
}

uint64_t sub_1B5F2E438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t *a6)
{
  uint64_t v12 = *a6;
  uint64_t v22 = a6[1];
  char v21 = *((unsigned char *)a6 + 16);
  uint64_t v13 = a6[3];
  swift_unknownObjectWeakInit();
  uint64_t v14 = v6 + *(void *)(*(void *)v6 + 128);
  uint64_t v15 = type metadata accessor for Blueprint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a1, v15);
  uint64_t v16 = v6 + *(void *)(*(void *)v6 + 136);
  uint64_t v17 = type metadata accessor for BlueprintItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v16, a2, v17);
  uint64_t v18 = (void *)(v6 + *(void *)(*(void *)v6 + 144));
  *uint64_t v18 = a3;
  v18[1] = a4;
  swift_unknownObjectWeakAssign();

  uint64_t v19 = v6 + *(void *)(*(void *)v6 + 152);
  *(void *)uint64_t v19 = v12;
  *(void *)(v19 + 8) = v22;
  *(unsigned char *)(v19 + 16) = v21;
  *(void *)(v19 + 24) = v13;
  return v6;
}

uint64_t sub_1B5F2E644(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_134();
  uint64_t v6 = v2 + *(void *)(v5 + 128);
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_134();
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_6_0();
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v6, a1);
  swift_endAccess();
  OUTLINED_FUNCTION_10_0();
  uint64_t v9 = v2 + *(void *)(v8 + 136);
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_71_3();
  type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_6_0();
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v9, a2);
  return swift_endAccess();
}

uint64_t sub_1B5F2E794(unsigned __int8 *a1)
{
  uint64_t v30 = a1;
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = sub_1B61AFA70();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v2[12];
  uint64_t v6 = v2[15];
  uint64_t v32 = type metadata accessor for BlueprintItem();
  uint64_t v7 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v31 = (char *)&v29 - v8;
  uint64_t v10 = v2[14];
  uint64_t v35 = v2[11];
  uint64_t v9 = v35;
  uint64_t v36 = v5;
  uint64_t v37 = v10;
  uint64_t v38 = v6;
  uint64_t v11 = type metadata accessor for Blueprint();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v29 - v13;
  LODWORD(v30) = *v30;
  uint64_t v15 = v2[13];
  uint64_t v35 = v2[10];
  uint64_t v36 = v9;
  uint64_t v37 = v5;
  uint64_t v38 = v15;
  uint64_t v39 = v10;
  uint64_t v40 = v6;
  type metadata accessor for BlueprintImpressionManager.Context();
  uint64_t v16 = v1 + v2[16];
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v16, v11);
  uint64_t v17 = v1 + *(void *)(*(void *)v1 + 136);
  swift_beginAccess();
  uint64_t v18 = (uint64_t)v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v31, v17, v32);
  uint64_t v19 = (uint64_t)v33;
  sub_1B61AFA60();
  char v34 = (char)v30;
  uint64_t v20 = (uint64_t *)(v1 + *(void *)(*(void *)v1 + 144));
  uint64_t v21 = *v20;
  uint64_t v22 = v20[1];
  uint64_t v23 = (void *)MEMORY[0x1BA9B1EC0](v1 + *(void *)(*(void *)v1 + 160));
  uint64_t v24 = v1 + *(void *)(*(void *)v1 + 152);
  uint64_t v25 = *(void *)(v24 + 8);
  char v26 = *(unsigned char *)(v24 + 16);
  uint64_t v27 = *(void *)(v24 + 24);
  uint64_t v35 = *(void *)v24;
  uint64_t v36 = v25;
  LOBYTE(v37) = v26;
  uint64_t v38 = v27;
  sub_1B61B1F70();
  return sub_1B5F29868((uint64_t)v14, v18, v19, &v34, v21, v22, v23, &v35);
}

uint64_t sub_1B5F2EB14()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 128);
  uint64_t v2 = type metadata accessor for Blueprint();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 136);
  uint64_t v4 = type metadata accessor for BlueprintItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t sub_1B5F2EC88()
{
  return sub_1B5F2ECA0(sub_1B5F2EB14);
}

uint64_t sub_1B5F2ECA0(uint64_t (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t BlueprintImpressionManager.deinit()
{
  sub_1B5E437C4(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_10_0();
  type metadata accessor for BlueprintImpressionManager.Session();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_5_1();
  v1();
  OUTLINED_FUNCTION_5_1();
  v2();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_10_0();
  sub_1B5F2F8A4(v0 + *(void *)(v3 + 176));
  OUTLINED_FUNCTION_10_0();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_10_0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BlueprintImpressionManager.__deallocating_deinit()
{
  BlueprintImpressionManager.deinit();
  return swift_deallocClassInstance();
}

void sub_1B5F2EEB4()
{
}

void sub_1B5F2EED8()
{
}

void sub_1B5F2EEFC(TeaUI::BlueprintImpressionSessionTrigger a1)
{
}

void sub_1B5F2EF20(uint64_t *a1, void *a2, char *a3)
{
}

void sub_1B5F2EF44()
{
}

void sub_1B5F2EF68(uint64_t a1, uint64_t a2, char *a3)
{
}

uint64_t sub_1B5F2EF8C()
{
  return BlueprintImpressionManager.endImpressions(with:triggerSource:)();
}

void sub_1B5F2EFB0()
{
}

void sub_1B5F2EFD4()
{
}

void sub_1B5F2EFF8()
{
}

void (*sub_1B5F2F024(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = BlueprintImpressionManager.isEnabled.modify();
  return sub_1B5E969A4;
}

uint64_t BlueprintImpressionManager.description.getter()
{
  return 0;
}

uint64_t sub_1B5F2F334()
{
  return BlueprintImpressionManager.description.getter();
}

uint64_t BlueprintImpressionManager.activeSession.getter@<X0>(void *a1@<X8>)
{
  OUTLINED_FUNCTION_134();
  OUTLINED_FUNCTION_134();
  uint64_t v3 = type metadata accessor for BlueprintImpressionManager.Session();
  OUTLINED_FUNCTION_0_10();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (uint64_t *)((char *)&v23 - v7);
  OUTLINED_FUNCTION_134();
  uint64_t v10 = v1 + *(void *)(v9 + 136);
  OUTLINED_FUNCTION_5_30();
  (*(void (**)(void *, uint64_t, uint64_t))(v5 + 16))(v8, v10, v3);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t active = type metadata accessor for BlueprintImpressionActiveSession();
    uint64_t v12 = (uint64_t)a1;
    uint64_t v13 = 1;
    uint64_t v14 = 1;
  }
  else
  {
    uint64_t v15 = *v8;
    uint64_t v16 = v8[1];
    sub_1B5F296FC();
    char v18 = *((unsigned char *)v8 + *(int *)(v17 + 64));
    uint64_t v19 = *(void *)((char *)v8 + *(int *)(v17 + 80));
    uint64_t v20 = type metadata accessor for BlueprintImpressionActiveSession();
    sub_1B61AFA70();
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_49_0();
    v21();
    *a1 = v15;
    a1[1] = v16;
    *((unsigned char *)a1 + *(int *)(v20 + 24)) = v18;
    *(void *)((char *)a1 + *(int *)(v20 + 28)) = v19;
    OUTLINED_FUNCTION_124();
    uint64_t active = v20;
  }
  return __swift_storeEnumTagSinglePayload(v12, v13, v14, active);
}

uint64_t sub_1B5F2F4F8@<X0>(void *a1@<X8>)
{
  return BlueprintImpressionManager.activeSession.getter(a1);
}

BOOL sub_1B5F2F51C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  return sub_1B61AFC90() == v1;
}

BOOL sub_1B5F2F55C(uint64_t a1, uint64_t *a2)
{
  return sub_1B5F2A5B4(a1, a2);
}

void sub_1B5F2F564(uint64_t a1, uint64_t a2)
{
  sub_1B5F2A7D4(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_1B5F2F570(uint64_t a1)
{
  return sub_1B5F2A858(a1, *(uint64_t (**)(uint64_t, void))(v1 + 32));
}

uint64_t sub_1B5F2F590(uint64_t a1, char *a2)
{
  return sub_1B5F2A98C(a1, a2, *(void **)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1B5F2F5A0(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v2 + 32))(a1, *a2) & 1;
}

uint64_t sub_1B5F2F5D8(uint64_t a1, uint64_t a2)
{
  return sub_1B5F2BBB4(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1B5F2F5E0(uint64_t a1, uint64_t a2)
{
  sub_1B5E6B8D4(0, &qword_1EB646D50, &qword_1EB646D48, (uint64_t)&protocol descriptor for BlueprintLayoutViewStateProviderType, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B5F2F670(uint64_t a1, uint64_t a2)
{
  sub_1B5E6B8D4(0, &qword_1EB646D50, &qword_1EB646D48, (uint64_t)&protocol descriptor for BlueprintLayoutViewStateProviderType, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B5F2F700(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_5_1();
  v3();
  return a1;
}

void sub_1B5F2F754(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1B61AFCB0();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1B5F2F7B4()
{
  unint64_t result = qword_1E9DAA418;
  if (!qword_1E9DAA418)
  {
    sub_1B5F2F754(255, &qword_1E9DAA410, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA418);
  }
  return result;
}

void sub_1B5F2F820()
{
}

void sub_1B5F2F840()
{
  if (!qword_1E9DAA420[0])
  {
    sub_1B61AFCB0();
    sub_1B5E5F1A0();
    unint64_t v0 = sub_1B61B2850();
    if (!v1) {
      atomic_store(v0, qword_1E9DAA420);
    }
  }
}

uint64_t sub_1B5F2F8A4(uint64_t a1)
{
  sub_1B5E6B8D4(0, &qword_1EB646D50, &qword_1EB646D48, (uint64_t)&protocol descriptor for BlueprintLayoutViewStateProviderType, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B5F2F92C()
{
  return swift_getWitnessTable();
}

uint64_t dispatch thunk of BlueprintImpressionManagerType.startSession(triggerSource:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of BlueprintImpressionManagerType.endSession(triggerSource:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of BlueprintImpressionManagerType.endSession(trigger:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of BlueprintImpressionManagerType.startImpression(at:view:triggerSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of BlueprintImpressionManagerType.endImpression(at:view:triggerSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of BlueprintImpressionManagerType.endImpression(at:view:trigger:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of BlueprintImpressionManagerType.endImpressions(with:triggerSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of BlueprintImpressionManagerType.updateImpression(at:view:triggerSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of BlueprintImpressionManagerType.updateImpressions(triggerSource:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of BlueprintImpressionManagerType.updateImpressionModel(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of BlueprintImpressionTracking.isEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BlueprintImpressionTracking.isEnabled.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of BlueprintImpressionTracking.isEnabled.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t getEnumTagSinglePayload for BlueprintImpressionManagerOptions(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 32))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BlueprintImpressionManagerOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BlueprintImpressionManagerOptions()
{
  return &type metadata for BlueprintImpressionManagerOptions;
}

ValueMetadata *type metadata accessor for BlueprintImpressionManagerOptions.EndPercentage()
{
  return &type metadata for BlueprintImpressionManagerOptions.EndPercentage;
}

uint64_t sub_1B5F2FAF0()
{
  uint64_t result = type metadata accessor for BlueprintImpressionManager.Session();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t type metadata accessor for BlueprintImpressionManager()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for BlueprintImpressionManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BlueprintImpressionManager);
}

uint64_t dispatch thunk of BlueprintImpressionManager.__allocating_init(provider:behavior:name:options:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

unsigned char *sub_1B5F2FC68(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F2FD34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1B5F2FD5C()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1B5F2FD64(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_unknownObjectRetain();
  return a1;
}

void *sub_1B5F2FDA4(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t sub_1B5F2FE0C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t type metadata accessor for BlueprintImpressionManager.Visibility()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B5F2FE6C()
{
  uint64_t result = type metadata accessor for Blueprint();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1B61AFA70();
      if (v3 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t sub_1B5F2FFB0()
{
  uint64_t result = type metadata accessor for Blueprint();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1B5F300B0()
{
  uint64_t result = sub_1B61AFA70();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = MEMORY[0x1E4FBADA0] + 64;
    swift_getTupleTypeLayout();
    unsigned int v4 = &v3;
    uint64_t v5 = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1B5F30180(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      sub_1B5F296FC();
      uint64_t v10 = v9;
      uint64_t v11 = *(int *)(v9 + 48);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_1B61AFA70();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      sub_1B61B1F70();
      v15(v12, v13, v14);
      *((unsigned char *)a1 + *(int *)(v10 + 64)) = *((unsigned char *)a2 + *(int *)(v10 + 64));
      *(uint64_t *)((char *)a1 + *(int *)(v10 + 80)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 80));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1B5F302D4(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    swift_bridgeObjectRelease();
    sub_1B5F296FC();
    uint64_t v4 = a1 + *(int *)(v3 + 48);
    uint64_t v5 = sub_1B61AFA70();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  return result;
}

void *sub_1B5F30364(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    sub_1B5F296FC();
    uint64_t v8 = v7;
    uint64_t v9 = *(int *)(v7 + 48);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1B61AFA70();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    sub_1B61B1F70();
    v13(v10, v11, v12);
    *((unsigned char *)a1 + *(int *)(v8 + 64)) = *((unsigned char *)a2 + *(int *)(v8 + 64));
    *(void *)((char *)a1 + *(int *)(v8 + 80)) = *(void *)((char *)a2 + *(int *)(v8 + 80));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1B5F30474(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_1B5F296FC();
      uint64_t v7 = v6;
      uint64_t v8 = *(int *)(v6 + 48);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1B61AFA70();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      sub_1B61B1F70();
      v12(v9, v10, v11);
      *((unsigned char *)a1 + *(int *)(v7 + 64)) = *((unsigned char *)a2 + *(int *)(v7 + 64));
      *(void *)((char *)a1 + *(int *)(v7 + 80)) = *(void *)((char *)a2 + *(int *)(v7 + 80));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

_OWORD *sub_1B5F305E0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    sub_1B5F296FC();
    uint64_t v7 = v6;
    uint64_t v8 = *(int *)(v6 + 48);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1B61AFA70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    *((unsigned char *)a1 + *(int *)(v7 + 64)) = *((unsigned char *)a2 + *(int *)(v7 + 64));
    *(void *)((char *)a1 + *(int *)(v7 + 80)) = *(void *)((char *)a2 + *(int *)(v7 + 80));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1B5F306D4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(_OWORD *, uint64_t))(v5 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }
    else
    {
      *a1 = *a2;
      sub_1B5F296FC();
      uint64_t v7 = v6;
      uint64_t v8 = *(int *)(v6 + 48);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1B61AFA70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      *((unsigned char *)a1 + *(int *)(v7 + 64)) = *((unsigned char *)a2 + *(int *)(v7 + 64));
      *(void *)((char *)a1 + *(int *)(v7 + 80)) = *(void *)((char *)a2 + *(int *)(v7 + 80));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1B5F3081C()
{
  uint64_t result = sub_1B61AFA70();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1B5F308B0(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1B61AFA70();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 36)) = *((unsigned char *)a2 + *(int *)(a3 + 36));
  }
  return a1;
}

uint64_t sub_1B5F3097C(uint64_t a1)
{
  uint64_t v2 = sub_1B61AFA70();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_1B5F309E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B61AFA70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 36)) = *(unsigned char *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t sub_1B5F30A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B61AFA70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 36)) = *(unsigned char *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t sub_1B5F30AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B61AFA70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 36)) = *(unsigned char *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t sub_1B5F30B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B61AFA70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 36)) = *(unsigned char *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t sub_1B5F30BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B5F30BE4);
}

uint64_t sub_1B5F30BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B61AFA70();
  OUTLINED_FUNCTION_2_3();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 36));
    if (v9 >= 7) {
      return v9 - 6;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1B5F30C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B5F30C84);
}

void sub_1B5F30C84(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1B61AFA70();
  OUTLINED_FUNCTION_2_3();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 36)) = a2 + 6;
  }
}

uint64_t sub_1B5F30D10(uint64_t a1)
{
  return sub_1B5F2F570(a1);
}

uint64_t sub_1B5F30D28(uint64_t a1, void *a2)
{
  return sub_1B5F2F5A0(a1, a2) & 1;
}

uint64_t OUTLINED_FUNCTION_90_1()
{
  *(void *)(v4 - 144) = v3;
  *(void *)(v4 - 136) = v1;
  *(void *)(v4 - 128) = v2;
  *(void *)(v4 - 120) = v0;
  return 255;
}

uint64_t OUTLINED_FUNCTION_93_1()
{
  return type metadata accessor for BlueprintImpressionManagerProcessor();
}

uint64_t OUTLINED_FUNCTION_111_1()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_112_1()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_113_1()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_114_1()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t dispatch thunk of Invalidatable.invalidate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id sub_1B5F30E0C(void *__src)
{
  memcpy(__dst, __src, 0x141uLL);
  double v4 = *(double *)&__dst[9];
  double MaxY = 0.0;
  if (*(unsigned char *)(__dst[23] + OBJC_IVAR___TSMastheadDisplayOptions_statusBarMode + 8) == 1)
  {
    objc_msgSend((id)__dst[33], sel_bounds);
    double MaxY = CGRectGetMaxY(v32);
  }
  sub_1B5E57984((uint64_t)&__dst[36], (uint64_t)v29);
  sub_1B5E57984((uint64_t)v29, (uint64_t)v30);
  double v6 = v30[0] - MaxY;
  if (v31) {
    double v6 = 0.0;
  }
  double v7 = MaxY + v6;
  sub_1B5F31050((uint64_t)__dst, MaxY + v6);
  double v9 = v8;
  objc_msgSend((id)__dst[32], sel_contentOffset);
  if (v10 >= -v7)
  {
    if (*(double *)&__dst[34] > 0.0 && (__dst[35] & 1) != 0)
    {
      double v20 = -(*(double *)&__dst[29] - v4);
      objc_msgSend((id)__dst[33], sel_bounds);
      OUTLINED_FUNCTION_0_63();
      if (0.0 - (v7 + v21) < v20) {
        double v19 = v20;
      }
      else {
        double v19 = 0.0 - (v7 + v21);
      }
    }
    else
    {
      objc_msgSend((id)__dst[33], sel_bounds, *(double *)&__dst[34]);
      OUTLINED_FUNCTION_0_63();
      double v19 = 0.0 - (v7 + v18);
    }
    v35.origin.CGFloat x = v4;
    v35.origin.CGFloat y = v1;
    v35.size.CGFloat width = v2;
    v35.size.CGFloat height = v3;
    CGRect v36 = CGRectOffset(v35, 0.0, v19);
    CGFloat x = v36.origin.x;
    CGFloat y = v36.origin.y;
    CGFloat width = v36.size.width;
    CGFloat height = v36.size.height;
    char v26 = (void *)__dst[33];
    double MidX = CGRectGetMidX(v36);
    v37.origin.CGFloat x = x;
    v37.origin.CGFloat y = y;
    v37.size.CGFloat width = width;
    v37.size.CGFloat height = height;
    objc_msgSend(v26, sel_setCenter_, MidX, CGRectGetMidY(v37));
    return objc_msgSend(v26, sel_setAlpha_, 1.0 - v9);
  }
  else
  {
    uint64_t v11 = (void *)__dst[33];
    objc_msgSend((id)__dst[33], sel_bounds);
    CGFloat v12 = v33.origin.x;
    CGFloat v13 = v33.origin.y;
    CGFloat v14 = v33.size.width;
    CGFloat v15 = v33.size.height;
    double v16 = CGRectGetMidX(v33);
    v34.origin.CGFloat x = v12;
    v34.origin.CGFloat y = v13;
    v34.size.CGFloat width = v14;
    v34.size.CGFloat height = v15;
    objc_msgSend(v11, sel_setCenter_, v16, CGRectGetMidY(v34));
    return objc_msgSend(v11, sel_setAlpha_, 1.0);
  }
}

id sub_1B5F31050(uint64_t a1, double a2)
{
  sub_1B5E57984(a1 + 288, (uint64_t)v5);
  id result = (id)sub_1B5E57984((uint64_t)v5, (uint64_t)v6);
  if ((v6[32] & 1) == 0 && a2 - vabdd_f64(44.0, a2) != 0.0) {
    return objc_msgSend(*(id *)(a1 + 256), sel_contentOffset, 0.0);
  }
  return result;
}

uint64_t type metadata accessor for MastheadViewScrollAnimator()
{
  return self;
}

void UICollectionViewLayout.register<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  static BlueprintLayoutSectionDecorationItemType.viewIdentifier.getter();
  id v5 = (id)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_registerClass_forDecorationViewOfKind_, ObjCClassFromMetadata, v5);
}

double sub_1B5F311EC()
{
  OUTLINED_FUNCTION_0_1();
  return *(double *)v0;
}

uint64_t sub_1B5F31244(double a1, double a2)
{
  id v5 = (double *)(v2 + OBJC_IVAR____TtC5TeaUI17PaddedShapeButton_contentOffset);
  uint64_t result = swift_beginAccess();
  double *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t sub_1B5F3129C(double *a1)
{
  return sub_1B5F31244(*a1, a1[1]);
}

uint64_t (*sub_1B5F312C4())()
{
  return j__swift_endAccess;
}

id PaddedShapeButton.onTap.getter()
{
  return OUTLINED_FUNCTION_3_4(OBJC_IVAR____TtC5TeaUI17PaddedShapeButton_onTap);
}

id PaddedShapeButton.onMenuPresentation.getter()
{
  return OUTLINED_FUNCTION_3_4(OBJC_IVAR____TtC5TeaUI17PaddedShapeButton_onMenuPresentation);
}

void sub_1B5F31338(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI17PaddedShapeButton__backgroundColor);
  *(void *)(v1 + OBJC_IVAR____TtC5TeaUI17PaddedShapeButton__backgroundColor) = a1;
}

char *PaddedShapeButton.init(frame:)()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = &v0[OBJC_IVAR____TtC5TeaUI17PaddedShapeButton_contentOffset];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  uint64_t v2 = OBJC_IVAR____TtC5TeaUI17PaddedShapeButton_onTap;
  sub_1B5E76EB0();
  double v4 = v3;
  id v5 = objc_allocWithZone(v3);
  double v6 = v0;
  *(void *)&v0[v2] = objc_msgSend(v5, sel_init);
  uint64_t v7 = OBJC_IVAR____TtC5TeaUI17PaddedShapeButton_onMenuPresentation;
  *(void *)&v6[v7] = objc_msgSend(objc_allocWithZone(v4), sel_init);
  *(void *)&v6[OBJC_IVAR____TtC5TeaUI17PaddedShapeButton__backgroundColor] = 0;

  v19.receiver = v6;
  v19.super_class = (Class)type metadata accessor for PaddedShapeButton();
  CGFloat v14 = (char *)OUTLINED_FUNCTION_6_34((uint64_t)v19.super_class, sel_initWithFrame_, v8, v9, v10, v11, v12, v13, v19);
  uint64_t v15 = *(void *)&v14[OBJC_IVAR____TtC5TeaUI17PaddedShapeButton_onTap];
  double v16 = v14;
  objc_msgSend(v16, sel_addTarget_action_forControlEvents_, v15, sel_handleAction, 64);
  id v17 = *(id *)&v16[OBJC_IVAR____TtC5TeaUI17PaddedShapeButton_onMenuPresentation];
  objc_msgSend(v16, sel_addTarget_action_forControlEvents_, v17, sel_handleAction, 0x4000);

  return v16;
}

uint64_t type metadata accessor for PaddedShapeButton()
{
  return self;
}

void PaddedShapeButton.init(coder:)()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC5TeaUI17PaddedShapeButton_contentOffset];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  uint64_t v2 = OBJC_IVAR____TtC5TeaUI17PaddedShapeButton_onTap;
  sub_1B5E76EB0();
  double v4 = v3;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(v3), sel_init);
  uint64_t v5 = OBJC_IVAR____TtC5TeaUI17PaddedShapeButton_onMenuPresentation;
  *(void *)&v0[v5] = objc_msgSend(objc_allocWithZone(v4), sel_init);
  *(void *)&v0[OBJC_IVAR____TtC5TeaUI17PaddedShapeButton__backgroundColor] = 0;

  OUTLINED_FUNCTION_1_62();
  __break(1u);
}

double sub_1B5F315A0(double a1, double a2)
{
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for PaddedShapeButton();
  objc_msgSendSuper2(&v9, sel_sizeThatFits_, a1, a2);
  double v7 = v6;
  OUTLINED_FUNCTION_0_1();
  return v7 + *v2 + *v2;
}

void sub_1B5F31700(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC5TeaUI17PaddedShapeButton__backgroundColor;
  if (!*(void *)&v2[OBJC_IVAR____TtC5TeaUI17PaddedShapeButton__backgroundColor]
    || (v14.receiver = v2,
        v14.super_class = (Class)type metadata accessor for PaddedShapeButton(),
        objc_msgSendSuper2(&v14, sel_isHighlighted) != (a1 & 1)))
  {
    v13.receiver = v2;
    v13.super_class = (Class)type metadata accessor for PaddedShapeButton();
    objc_msgSendSuper2(&v13, sel_setHighlighted_, a1 & 1);
    if ((a1 & 1) == 0)
    {
      uint64_t v11 = *(void **)&v2[v4];
      if (v11)
      {
        id v10 = *(id *)&v2[v4];
      }
      else
      {
        id v10 = objc_msgSend(v2, sel_backgroundColor);
        uint64_t v11 = 0;
      }
      id v12 = v11;
      goto LABEL_12;
    }
    sub_1B5F31338((uint64_t)objc_msgSend(v2, sel_backgroundColor));
    id v5 = objc_msgSend(v2, sel_backgroundColor);
    if (v5)
    {
      double v6 = v5;
      UIColor.getRGBA()((uint64_t)v15);

      sub_1B5F31888((uint64_t)v15, (uint64_t)v16);
      if ((v18 & 1) == 0)
      {
        double v7 = v17;
        id v8 = objc_msgSend(v2, sel_backgroundColor);
        if (v8)
        {
          objc_super v9 = v8;
          id v10 = objc_msgSend(v8, sel_colorWithAlphaComponent_, v7 * 0.5);
        }
        else
        {
          id v10 = 0;
        }
LABEL_12:
        objc_msgSend(v2, sel_setBackgroundColor_, v10);
      }
    }
  }
}

uint64_t sub_1B5F31888(uint64_t a1, uint64_t a2)
{
  sub_1B5F318EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B5F318EC()
{
  if (!qword_1EB6425B8)
  {
    sub_1B5F31944(255);
    unint64_t v0 = sub_1B61B2F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB6425B8);
    }
  }
}

uint64_t sub_1B5F31944(uint64_t a1)
{
  uint64_t v1 = qword_1EB6425B0;
  if (!qword_1EB6425B0)
  {
    MEMORY[0x1F4188790](a1);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v1 = TupleTypeMetadata;
    if (!v3) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EB6425B0);
    }
  }
  return v1;
}

id sub_1B5F31A64(SEL *a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for PaddedShapeButton();
  return objc_msgSendSuper2(&v4, *a1);
}

void sub_1B5F31AF4(char a1)
{
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for PaddedShapeButton();
  objc_msgSendSuper2(&v6, sel_setEnabled_, a1 & 1);
  if (a1)
  {
    uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC5TeaUI17PaddedShapeButton__backgroundColor];
    if (v3)
    {
      id v4 = *(id *)&v1[OBJC_IVAR____TtC5TeaUI17PaddedShapeButton__backgroundColor];
    }
    else
    {
      id v4 = objc_msgSend(v1, sel_backgroundColor);
      uint64_t v3 = 0;
    }
    id v5 = v3;
    objc_msgSend(v1, sel_setBackgroundColor_, v4);
  }
  else
  {
    sub_1B5F31338((uint64_t)objc_msgSend(v1, sel_backgroundColor));
    if (qword_1E9DA7FA8 != -1) {
      swift_once();
    }
    objc_msgSend(v1, sel_setBackgroundColor_, qword_1E9DAC208);
  }
}

id PaddedShapeButton.__deallocating_deinit()
{
  return sub_1B5F32368(type metadata accessor for PaddedShapeButton);
}

unint64_t sub_1B5F31C94()
{
  return sub_1B5F323A0();
}

id sub_1B5F31CE0()
{
  id v1 = objc_msgSend(v0, sel_layer);
  self;
  id v2 = objc_msgSend((id)OUTLINED_FUNCTION_3_3(), sel_fillColor);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithCGColor_, v2);
  }
  else
  {

    return 0;
  }
  return v4;
}

void sub_1B5F31DE0(void *a1)
{
  id v2 = objc_msgSend(v1, sel_layer);
  self;
  uint64_t v3 = (void *)OUTLINED_FUNCTION_3_3();
  if (a1) {
    id v4 = objc_msgSend(a1, sel_CGColor);
  }
  else {
    id v4 = 0;
  }
  objc_msgSend(v3, sel_setFillColor_, v4);
}

void sub_1B5F31E98()
{
  v14.receiver = v0;
  v14.super_class = (Class)type metadata accessor for PillButton();
  objc_msgSendSuper2(&v14, sel_layoutSubviews);
  objc_msgSend(v0, sel_bounds);
  double v2 = v1;
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  objc_msgSend(v0, sel_bounds);
  CGFloat v9 = CGRectGetHeight(v15) * 0.5;
  id v10 = objc_msgSend(self, sel_bezierPathWithRoundedRect_cornerRadius_, v2, v4, v6, v8, v9);
  id v11 = objc_msgSend(v0, sel_layer);
  self;
  id v12 = (void *)swift_dynamicCastObjCClassUnconditional();
  id v13 = objc_msgSend(v10, sel_CGPath);
  objc_msgSend(v12, sel_setPath_, v13);
}

id PillButton.init(frame:)()
{
  OUTLINED_FUNCTION_38();
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for PillButton();
  return OUTLINED_FUNCTION_6_34((uint64_t)v8.super_class, sel_initWithFrame_, v1, v2, v3, v4, v5, v6, v8);
}

id PillButton.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id PillButton.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PillButton();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id PillButton.__deallocating_deinit()
{
  return sub_1B5F32368(type metadata accessor for PillButton);
}

id RoundedRectButton.__allocating_init(frame:cornerRadius:)()
{
  OUTLINED_FUNCTION_5_31();
  id v1 = objc_allocWithZone(v0);
  OUTLINED_FUNCTION_7_31();
  return RoundedRectButton.init(frame:cornerRadius:)();
}

id RoundedRectButton.init(frame:cornerRadius:)()
{
  OUTLINED_FUNCTION_5_31();
  *(void *)(v0 + OBJC_IVAR____TtC5TeaUI17RoundedRectButton_cornerRadius) = v2;
  uint64_t v9 = type metadata accessor for RoundedRectButton();
  double v3 = OUTLINED_FUNCTION_7_31();
  id v6 = objc_msgSendSuper2(v4, v5, v3, v0, v9);
  id v7 = objc_msgSend(v6, sel_layer);
  objc_msgSend(v7, sel_setCornerRadius_, v1);

  return v6;
}

void RoundedRectButton.init(coder:)()
{
}

id _s5TeaUI17PaddedShapeButtonC5frameACSo6CGRectV_tcfC_0()
{
  OUTLINED_FUNCTION_38();
  id v5 = objc_allocWithZone(v4);
  return objc_msgSend(v5, sel_initWithFrame_, v3, v2, v1, v0);
}

void RoundedRectButton.init(frame:)()
{
}

id RoundedRectButton.__deallocating_deinit()
{
  return sub_1B5F32368(type metadata accessor for RoundedRectButton);
}

id sub_1B5F32368(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

unint64_t sub_1B5F323A0()
{
  unint64_t result = qword_1EB647B70;
  if (!qword_1EB647B70)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB647B70);
  }
  return result;
}

uint64_t type metadata accessor for PillButton()
{
  return self;
}

uint64_t type metadata accessor for RoundedRectButton()
{
  return self;
}

void sub_1B5F32428(uint64_t a1@<X8>)
{
  *(double *)a1 = sub_1B5F311EC();
  *(void *)(a1 + 8) = v2;
}

uint64_t method lookup function for PaddedShapeButton(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PaddedShapeButton);
}

uint64_t dispatch thunk of PaddedShapeButton.contentOffset.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of PaddedShapeButton.contentOffset.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of PaddedShapeButton.contentOffset.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t method lookup function for RoundedRectButton(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RoundedRectButton);
}

uint64_t dispatch thunk of RoundedRectButton.__allocating_init(frame:cornerRadius:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t BlueprintLayoutVisualRankBuilder.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t BlueprintLayoutVisualRankBuilder.init()()
{
  return v0;
}

uint64_t (*BlueprintLayoutVisualRankBuilder.build<A, B, C, D>(blueprint:layoutBlueprint:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10))()
{
  uint64_t v164 = a5;
  uint64_t v157 = a2;
  uint64_t v131 = a1;
  uint64_t v161 = a9;
  uint64_t v179 = a3;
  uint64_t v180 = a4;
  uint64_t v181 = a7;
  uint64_t v182 = a8;
  uint64_t v15 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_13();
  uint64_t v127 = v16;
  OUTLINED_FUNCTION_13();
  uint64_t v126 = v17;
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_21_4(v19);
  uint64_t v163 = a10;
  type metadata accessor for BlueprintLayoutItem();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_30(v21);
  OUTLINED_FUNCTION_0_13();
  uint64_t v167 = v22;
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_12();
  uint64_t v155 = v24;
  MEMORY[0x1F4188790](v25);
  *(void *)&long long v176 = (char *)v125 - v26;
  uint64_t v151 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_13();
  uint64_t v166 = v27;
  MEMORY[0x1F4188790](v28);
  OUTLINED_FUNCTION_21_4((uint64_t)v125 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_0_13();
  uint64_t v165 = v31;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v32);
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_30(v33);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v173 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_13();
  uint64_t v171 = v34;
  MEMORY[0x1F4188790](v35);
  OUTLINED_FUNCTION_12();
  uint64_t v172 = v36;
  MEMORY[0x1F4188790](v37);
  OUTLINED_FUNCTION_30((uint64_t)v125 - v38);
  uint64_t v160 = a3;
  uint64_t v179 = a3;
  uint64_t v180 = a4;
  uint64_t v162 = a4;
  uint64_t v158 = a7;
  uint64_t v181 = a7;
  uint64_t v182 = a8;
  uint64_t v159 = a8;
  uint64_t v39 = type metadata accessor for BlueprintSection();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v136 = sub_1B61B3520();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v41);
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_21_4(v42);
  uint64_t v137 = WitnessTable;
  uint64_t v175 = sub_1B61B3510();
  OUTLINED_FUNCTION_0_13();
  uint64_t v147 = v43;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v44);
  OUTLINED_FUNCTION_82();
  uint64_t v174 = v45;
  OUTLINED_FUNCTION_0_13();
  uint64_t v47 = v46;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v48);
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_30(v49);
  uint64_t v141 = swift_getTupleTypeMetadata2();
  uint64_t v140 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_13();
  uint64_t v51 = v50;
  MEMORY[0x1F4188790](v52);
  OUTLINED_FUNCTION_12();
  uint64_t v139 = v53;
  MEMORY[0x1F4188790](v54);
  OUTLINED_FUNCTION_30((uint64_t)v125 - v55);
  uint64_t v56 = v15;
  uint64_t v57 = swift_getWitnessTable();
  sub_1B61B3520();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v58);
  uint64_t v143 = sub_1B61B3510();
  OUTLINED_FUNCTION_0_13();
  v125[1] = v59;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v60);
  uint64_t v62 = (uint64_t **)((char *)v125 - v61);
  *(void *)&long long v184 = MEMORY[0x1E4FBC868];
  *((void *)&v184 + 1) = MEMORY[0x1E4FBC868];
  uint64_t v185 = -1;
  uint64_t v128 = v56;
  MEMORY[0x1BA9AF500](v56, v57);
  uint64_t v142 = v62;
  uint64_t v63 = v30;
  uint64_t v64 = v129;
  uint64_t v65 = v130;
  sub_1B61B34F0();
  uint64_t v144 = 0;
  uint64_t v138 = v51 + 32;
  uint64_t v135 = v47 + 32;
  v171 += 4;
  uint64_t v168 = (char **)(v165 + 4);
  uint64_t v154 = v167 + 32;
  uint64_t v153 = v167 + 16;
  uint64_t v150 = v167 + 8;
  uint64_t v149 = (char *)(v166 + 1);
  uint64_t v148 = v165 + 1;
  uint64_t v133 = v147 + 8;
  uint64_t v132 = v47 + 8;
  uint64_t v145 = a6;
  uint64_t v134 = v39;
  uint64_t v152 = v30;
  while (1)
  {
    uint64_t v66 = v139;
    uint64_t v67 = v142;
    sub_1B61B3500();
    OUTLINED_FUNCTION_19();
    uint64_t v68 = OUTLINED_FUNCTION_12_26();
    v69(v68, v66, v140);
    if (__swift_getEnumTagSinglePayload((uint64_t)v67, 1, v141) == 1) {
      goto LABEL_31;
    }
    uint64_t v70 = *v67;
    uint64_t v71 = OUTLINED_FUNCTION_12_26();
    v72(v71);
    MEMORY[0x1BA9AF500](v39, v137);
    sub_1B61B34F0();
    uint64_t v73 = v172;
    sub_1B61B3500();
    uint64_t v67 = *v171;
    uint64_t v74 = v169;
    ((void (*)(uint64_t **, uint64_t, uint64_t))*v171)(v169, v73, v173);
    uint64_t v75 = TupleTypeMetadata2;
    if (__swift_getEnumTagSinglePayload((uint64_t)v74, 1, TupleTypeMetadata2) != 1) {
      break;
    }
    uint64_t v147 = 0;
LABEL_28:
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_5_1();
    v108();
    uint64_t v39 = v134;
    OUTLINED_FUNCTION_5_1();
    v109();
    BOOL v95 = __OFADD__(v144, v147);
    v144 += v147;
    if (v95)
    {
      __break(1u);
LABEL_31:
      OUTLINED_FUNCTION_5_1();
      v110();
      uint64_t v111 = v127;
      uint64_t v112 = OUTLINED_FUNCTION_12_26();
      uint64_t v113 = v128;
      v114(v112, v131, v128);
      uint64_t v115 = v185;
      unint64_t v116 = (*(unsigned __int8 *)(v111 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80);
      unint64_t v117 = (v126 + v116 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v118 = (void *)swift_allocObject();
      uint64_t v119 = v162;
      v118[2] = v160;
      v118[3] = v119;
      v118[4] = v164;
      v118[5] = a6;
      uint64_t v120 = v159;
      v118[6] = v158;
      v118[7] = v120;
      uint64_t v121 = v163;
      v118[8] = v161;
      v118[9] = v121;
      uint64_t v122 = (char *)v118 + v116;
      uint64_t v123 = *(void (**)(char *, uint64_t **, uint64_t))(v111 + 32);
      uint64_t v124 = (char *)v118 + v117;
      long long v176 = v184;
      v123(v122, v67, v113);
      *(_OWORD *)uint64_t v124 = v176;
      *((void *)v124 + 2) = v115;
      return sub_1B5F33894;
    }
  }
  uint64_t v147 = 0;
  uint64_t v146 = 0;
  uint64_t v167 = *v168;
  uint64_t v165 = v70;
  uint64_t v166 = v67;
  while (1)
  {
    uint64_t v76 = *v74;
    ((void (*)(uint64_t, char *, uint64_t))v167)(v64, (char *)v74 + *(int *)(v75 + 48), v63);
    MEMORY[0x1BA9ACE10](v76, v70);
    uint64_t v77 = v164;
    uint64_t v179 = v164;
    uint64_t v180 = a6;
    uint64_t v74 = v65;
    uint64_t v78 = v161;
    uint64_t v79 = v163;
    uint64_t v181 = v161;
    uint64_t v182 = v163;
    uint64_t v80 = type metadata accessor for BlueprintLayout();
    uint64_t v75 = v64;
    uint64_t v81 = v156;
    BlueprintLayout.subscript.getter((uint64_t)v74, v80);
    OUTLINED_FUNCTION_19();
    uint64_t v82 = v176;
    uint64_t v83 = v81;
    uint64_t v84 = v159;
    uint64_t v85 = v158;
    v86(v176, v83, a6);
    BOOL v87 = sub_1B5F333FC(v82, v160, v162, v77, a6, v85, v84, v78, v79);
    OUTLINED_FUNCTION_19();
    uint64_t v88 = OUTLINED_FUNCTION_12_26();
    v89(v88, v82, a6);
    uint64_t v70 = &qword_1EB642EA0;
    sub_1B5E00AB8(0, (unint64_t *)&qword_1EB642EA0);
    if (swift_dynamicCast()) {
      break;
    }
    uint64_t v178 = 0;
    memset(v177, 0, sizeof(v177));
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_5_1();
    v96();
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_5_1();
    v97();
    OUTLINED_FUNCTION_19();
    uint64_t v63 = v152;
    OUTLINED_FUNCTION_5_1();
    v98();
    sub_1B5F33B80((uint64_t)v177, (unint64_t *)&qword_1E9DAA538, (unint64_t *)&qword_1EB642EA0);
    uint64_t v65 = v74;
    uint64_t v64 = v75;
    OUTLINED_FUNCTION_8_24();
LABEL_27:
    uint64_t v107 = v172;
    sub_1B61B3500();
    uint64_t v67 = v166;
    ((void (*)(uint64_t **, uint64_t, uint64_t))v166)(v74, v107, v173);
    if (__swift_getEnumTagSinglePayload((uint64_t)v74, 1, v75) == 1) {
      goto LABEL_28;
    }
  }
  uint64_t v90 = v75;
  uint64_t v91 = v152;
  sub_1B5E30E70(v177, (uint64_t)&v179);
  uint64_t v92 = v182;
  uint64_t v93 = v183;
  __swift_project_boxed_opaque_existential_1(&v179, v182);
  unint64_t result = (uint64_t (*)())(*(void *(**)(long long *__return_ptr, uint64_t, uint64_t))(v93 + 8))(v177, v92, v93);
  uint64_t v63 = *(void *)&v177[0];
  if (!BYTE8(v177[0]))
  {
    if (*(void *)&v177[0] >= 0 && v87)
    {
      if (__OFADD__(v147, 1)) {
        goto LABEL_35;
      }
      uint64_t v75 = v144 + *(void *)&v177[0];
      if (__OFADD__(v144, *(void *)&v177[0])) {
        goto LABEL_36;
      }
      ++v147;
      swift_getWitnessTable();
      uint64_t v64 = v90;
      sub_1B617193C();
      uint64_t v99 = OUTLINED_FUNCTION_7_32();
      goto LABEL_25;
    }
    goto LABEL_23;
  }
  if (BYTE8(v177[0]) != 1)
  {
    if (*(void *)&v177[0] == 0 && v87)
    {
      if (__OFADD__(v147, 1)) {
        goto LABEL_37;
      }
      uint64_t v101 = (char *)v76 + v144;
      if (__OFADD__(v144, v76)) {
        goto LABEL_38;
      }
      uint64_t v75 = v146;
      uint64_t v63 = (uint64_t)&v101[v146];
      if (__OFADD__(v101, v146)) {
        goto LABEL_39;
      }
      uint64_t v70 = v76;
      ++v147;
      swift_getWitnessTable();
      uint64_t v64 = v90;
      OUTLINED_FUNCTION_7_32();
      unint64_t result = (uint64_t (*)())sub_1B617193C();
      if (__OFADD__(v76, v75)) {
        goto LABEL_40;
      }
      sub_1B6171984(v90, (uint64_t)v76 + v75);
      a6 = v145;
      OUTLINED_FUNCTION_5_1();
      v102();
      uint64_t v65 = v74;
      OUTLINED_FUNCTION_5_1();
      v103();
      OUTLINED_FUNCTION_13_19();
      goto LABEL_26;
    }
LABEL_23:
    BOOL v95 = __OFSUB__(v146--, 1);
    if (v95) {
      goto LABEL_34;
    }
LABEL_24:
    uint64_t v63 = v91;
    uint64_t v75 = swift_getWitnessTable();
    uint64_t v64 = v90;
    OUTLINED_FUNCTION_11_20();
    sub_1B617193C();
    uint64_t v99 = OUTLINED_FUNCTION_11_20();
LABEL_25:
    sub_1B6171984(v99, v100);
    a6 = v145;
    OUTLINED_FUNCTION_5_1();
    v104();
    uint64_t v65 = v74;
    OUTLINED_FUNCTION_5_1();
    v105();
    OUTLINED_FUNCTION_13_19();
LABEL_26:
    OUTLINED_FUNCTION_5_1();
    v106();
    OUTLINED_FUNCTION_8_24();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v179);
    goto LABEL_27;
  }
  if (!__OFADD__(v147, *(void *)&v177[0]))
  {
    BOOL v95 = __OFADD__(v146, *(void *)&v177[0]);
    v146 += *(void *)&v177[0];
    if (v95) {
      goto LABEL_33;
    }
    v147 += *(void *)&v177[0];
    goto LABEL_24;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

BOOL sub_1B5F333FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13);
  sub_1B5E00AB8(0, qword_1EB646A38);
  if (swift_dynamicCast())
  {
    sub_1B5E30E70(v20, (uint64_t)v22);
    uint64_t v14 = v23;
    uint64_t v15 = v24;
    __swift_project_boxed_opaque_existential_1(v22, v23);
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
    BOOL v18 = v17 > 0.0 && v16 > 0.0;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }
  else
  {
    uint64_t v21 = 0;
    memset(v20, 0, sizeof(v20));
    sub_1B5F33B80((uint64_t)v20, &qword_1E9DAA540, qword_1EB646A38);
    return (*(double (**)(uint64_t, uint64_t))(a9 + 8))(a5, a9) > 0.0;
  }
  return v18;
}

uint64_t sub_1B5F3359C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B5F33628()
{
  uint64_t v1 = *(void *)(type metadata accessor for Blueprint() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v2 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + v2 + 16);
  }
  type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1B61B0670();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_5_1();
  v3();
  type metadata accessor for BlueprintItem();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1B61B0A30();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_5_1();
  v4();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B5F33894()
{
  return sub_1B5F3359C();
}

uint64_t BlueprintLayoutVisualRankBuilder.deinit()
{
  return v0;
}

uint64_t BlueprintLayoutVisualRankBuilder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t (*sub_1B5F33998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10))()
{
  return sub_1B5F33894;
}

uint64_t (*BlueprintLayoutVisualRankBuilder.process<A, B, C, D>(blueprint:layoutBlueprint:layoutOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11))()
{
  return sub_1B5F33894;
}

uint64_t (*sub_1B5F33A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11))()
{
  return sub_1B5F33894;
}

uint64_t (*BlueprintLayoutVisualRankBuilder.process<A, B, C, D>(blueprint:layoutBlueprint:layoutCollection:layoutOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12))()
{
  return sub_1B5F33894;
}

uint64_t (*sub_1B5F33AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12))()
{
  return sub_1B5F33894;
}

uint64_t dispatch thunk of BlueprintLayoutVisualRankBuilderType.build<A, B, C, D>(blueprint:layoutBlueprint:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return (*(uint64_t (**)(void))(a12 + 8))();
}

uint64_t type metadata accessor for BlueprintLayoutVisualRankBuilder()
{
  return self;
}

uint64_t method lookup function for BlueprintLayoutVisualRankBuilder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BlueprintLayoutVisualRankBuilder);
}

uint64_t dispatch thunk of BlueprintLayoutVisualRankBuilder.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_1B5F33B80(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_1B5E36DD0(0, a2, a3);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_5_1();
  v4();
  return a1;
}

uint64_t CardSplitViewPanable.cardSplitViewShouldBePreserved.getter()
{
  return 0;
}

uint64_t dispatch thunk of CardSplitViewPanable.cardSplitViewShouldBePreserved.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CardSplitViewPanable.cardSplitViewPresentation(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

void sub_1B5F33C00(unint64_t a1, unint64_t a2, uint64_t (*a3)(id, char *))
{
  Class v4 = v3;
  unint64_t v6 = a1;
  unint64_t v49 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_48;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    objc_super v8 = *(void **)(a2 + 16);
    if ((uint64_t)v8 >= v7) {
      uint64_t v9 = v7;
    }
    else {
      uint64_t v9 = *(void *)(a2 + 16);
    }
    uint64_t v51 = MEMORY[0x1E4FBC860];
    sub_1B5E4ED40(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0)
    {
      __break(1u);
LABEL_50:

LABEL_51:
      __break(1u);
      return;
    }
    uint64_t v10 = v51;
    uint64_t v39 = (void *)a2;
    unint64_t v44 = v6;
    uint64_t v11 = v6 & 0xFFFFFFFFFFFFFF8;
    if (!v9) {
      break;
    }
    unint64_t v46 = v6 & 0xC000000000000001;
    uint64_t v42 = (void *)(a2 + 32);
    sub_1B61B1F70();
    sub_1B61B1F70();
    a2 = 0;
    uint64_t v41 = v8;
    uint64_t v47 = v6 & 0xFFFFFFFFFFFFFF8;
    while (v9 != a2)
    {
      if (v49)
      {
        sub_1B61B1F70();
        uint64_t v12 = sub_1B61B3530();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v12 = *(void *)(v11 + 16);
      }
      if (a2 == v12) {
        goto LABEL_51;
      }
      if (v46)
      {
        id v13 = (id)MEMORY[0x1BA9B04B0](a2, v6);
      }
      else
      {
        if (a2 >= *(void *)(v11 + 16)) {
          goto LABEL_44;
        }
        id v13 = *(id *)(v6 + 8 * a2 + 32);
      }
      Class v4 = v13;
      if (v8 == (void *)a2) {
        goto LABEL_50;
      }
      v50[0] = *((unsigned char *)v42 + a2);
      if (!v13) {
        goto LABEL_51;
      }
      uint64_t v14 = (void *)v9;
      uint64_t v15 = a3(v13, v50);
      uint64_t v17 = v16;
      uint64_t v19 = v18;
      uint64_t v21 = v20;

      uint64_t v51 = v10;
      unint64_t v23 = *(void *)(v10 + 16);
      unint64_t v22 = *(void *)(v10 + 24);
      Class v4 = (void *)(v23 + 1);
      if (v23 >= v22 >> 1)
      {
        sub_1B5E4ED40(v22 > 1, v23 + 1, 1);
        uint64_t v10 = v51;
      }
      ++a2;
      *(void *)(v10 + 16) = v4;
      uint64_t v24 = (void *)(v10 + 32 * v23);
      v24[4] = v15;
      v24[5] = v17;
      v24[6] = v19;
      v24[7] = v21;
      uint64_t v9 = (uint64_t)v14;
      BOOL v25 = v14 == (void *)a2;
      unint64_t v6 = v44;
      objc_super v8 = v41;
      uint64_t v11 = v47;
      if (v25)
      {
        a2 = (unint64_t)v39;
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    sub_1B61B1F70();
    uint64_t v7 = sub_1B61B3530();
    swift_bridgeObjectRelease();
  }
  unint64_t v46 = v6 & 0xC000000000000001;
  sub_1B61B1F70();
  sub_1B61B1F70();
LABEL_26:
  unint64_t v43 = v6 + 32;
  uint64_t v40 = (void *)(a2 + 32);
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v49)
    {
      sub_1B61B1F70();
      uint64_t v26 = sub_1B61B3530();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v26 = *(void *)(v11 + 16);
    }
    if (v9 == v26)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    if (v46)
    {
      uint64_t v27 = (void *)MEMORY[0x1BA9B04B0](v9, v6);
    }
    else
    {
      if ((unint64_t)v9 >= *(void *)(v11 + 16)) {
        goto LABEL_45;
      }
      uint64_t v27 = *(id *)(v43 + 8 * v9);
    }
    a2 = (unint64_t)v27;
    if (v9 == 0x7FFFFFFFFFFFFFFFLL) {
      goto LABEL_46;
    }
    if (v8 == (void *)v9) {
      break;
    }
    if (v9 >= (unint64_t)v8) {
      goto LABEL_47;
    }
    v50[0] = *((unsigned char *)v40 + v9);
    uint64_t v28 = v9;
    uint64_t v29 = a3(v27, v50);
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    uint64_t v35 = v34;

    uint64_t v51 = v10;
    unint64_t v37 = *(void *)(v10 + 16);
    unint64_t v36 = *(void *)(v10 + 24);
    Class v4 = (void *)(v37 + 1);
    if (v37 >= v36 >> 1)
    {
      sub_1B5E4ED40(v36 > 1, v37 + 1, 1);
      uint64_t v10 = v51;
    }
    *(void *)(v10 + 16) = v4;
    uint64_t v38 = (void *)(v10 + 32 * v37);
    v38[4] = v29;
    v38[5] = v31;
    v38[6] = v33;
    v38[7] = v35;
    uint64_t v9 = v28 + 1;
    a2 = (unint64_t)v39;
    unint64_t v6 = v44;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

id sub_1B5F33FFC@<X0>(unsigned char *a1@<X8>)
{
  id result = objc_msgSend(v1, sel_isCollapsed);
  *a1 = result ^ 1;
  return result;
}

uint64_t sub_1B5F34034()
{
  return sub_1B61B3910();
}

void CardSplitViewController.__allocating_init(cardContainerController:commandContainer:)(void *a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  CardSplitViewController.init(cardContainerController:commandContainer:)(a1, a2);
}

void CardSplitViewController.init(cardContainerController:commandContainer:)(void *a1, uint64_t a2)
{
  objc_super v3 = v2;
  *(void *)&v2[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_preservedItems] = MEMORY[0x1E4FBC860];
  uint64_t v6 = OBJC_IVAR____TtC5TeaUI23CardSplitViewController_eventManager;
  sub_1B5F341A4();
  uint64_t v7 = (void *)swift_allocObject();
  objc_super v8 = v3;
  *(void *)&v3[v6] = sub_1B61B0280();
  *(void *)&v8[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_primaryCardContainerController] = a1;
  *(void *)&v8[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_commands] = a2;
  v8[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_splitViewFocus] = 0;
  id v9 = a1;
  OUTLINED_FUNCTION_21_0();
  swift_retain();

  v11.receiver = v8;
  v11.super_class = (Class)type metadata accessor for CardSplitViewController();
  id v10 = objc_msgSendSuper2(&v11, sel_initWithNibName_bundle_, 0, 0);
  objc_msgSend(v10, sel_setDelegate_, v10);

  swift_release();
  OUTLINED_FUNCTION_7_8();
}

void sub_1B5F341A4()
{
  if (!qword_1EB63E9D8)
  {
    sub_1B5F34200();
    unint64_t v0 = sub_1B61B0290();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB63E9D8);
    }
  }
}

unint64_t sub_1B5F34200()
{
  unint64_t result = qword_1EB63EFE0;
  if (!qword_1EB63EFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB63EFE0);
  }
  return result;
}

uint64_t type metadata accessor for CardSplitViewController()
{
  return self;
}

id CardSplitViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void CardSplitViewController.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_preservedItems] = MEMORY[0x1E4FBC860];
  uint64_t v1 = OBJC_IVAR____TtC5TeaUI23CardSplitViewController_eventManager;
  sub_1B5F341A4();
  swift_allocObject();
  *(void *)&v0[v1] = sub_1B61B0280();

  sub_1B61B34D0();
  __break(1u);
}

void sub_1B5F34378()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for CardSplitViewController();
  objc_msgSendSuper2(&v4, sel_loadView);
  id v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    unint64_t v2 = v1;
    id v3 = objc_msgSend(self, sel_separatorColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B5F344B4(char a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for CardSplitViewController();
  objc_msgSendSuper2(&v4, sel_viewWillAppear_, a1 & 1);
  return sub_1B5F35618();
}

id sub_1B5F34550(char a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for CardSplitViewController();
  objc_msgSendSuper2(&v4, sel_viewDidAppear_, a1 & 1);
  return objc_msgSend(v1, sel_toggleResponderPane);
}

uint64_t sub_1B5F3466C()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for CardSplitViewController();
  id v1 = objc_msgSendSuper2(&v4, sel_viewControllers);
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
  uint64_t v2 = sub_1B61B24E0();

  return v2;
}

void sub_1B5F34764()
{
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
  id v1 = (void *)sub_1B61B24D0();
  swift_bridgeObjectRelease();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardSplitViewController();
  objc_msgSendSuper2(&v2, sel_setViewControllers_, v1);

  sub_1B5F347E8();
}

void sub_1B5F347E8()
{
  id v1 = objc_msgSend(v0, sel_viewControllers);
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
  unint64_t v2 = sub_1B61B24E0();

  if (v2 >> 62)
  {
    sub_1B61B1F70();
    uint64_t v3 = sub_1B61B3530();
    swift_bridgeObjectRelease();
    if (!v3) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      goto LABEL_8;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      MEMORY[0x1BA9B04B0](i, v2);
      swift_unknownObjectRelease();
    }
  }
LABEL_8:
  swift_bridgeObjectRelease();
}

uint64_t sub_1B5F348E0(void *a1)
{
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for CardSplitViewController();
  objc_msgSendSuper2(&v8, sel_traitCollectionDidChange_, a1);
  id v3 = objc_msgSend(v1, sel_childViewControllers);
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
  unint64_t v4 = sub_1B61B24E0();

  id v5 = a1;
  id v6 = v1;
  sub_1B5F34998(v4, (uint64_t)v6, a1, v6);
  return swift_bridgeObjectRelease();
}

void sub_1B5F34998(unint64_t a1, uint64_t a2, void *a3, void *a4)
{
  unint64_t v7 = a1;
  if (!(a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v9 = a3;
    id v10 = a4;
    id v11 = v9;
    id v12 = v10;
    sub_1B61B1F70();
    if (v8) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();

LABEL_17:
    return;
  }
  id v30 = a3;
  id v31 = a4;
  id v32 = v30;
  id v33 = v31;
  sub_1B61B1F70();
  uint64_t v8 = sub_1B61B3530();
  if (!v8) {
    goto LABEL_16;
  }
LABEL_3:
  if (v8 >= 1)
  {
    uint64_t v13 = 0;
    unint64_t v36 = v7 & 0xC000000000000001;
    uint64_t v35 = MEMORY[0x1E4FBC838] + 8;
    long long v34 = xmmword_1B61C28A0;
    uint64_t v37 = v8;
    unint64_t v38 = v7;
    do
    {
      if (v36) {
        id v14 = (id)MEMORY[0x1BA9B04B0](v13, v7);
      }
      else {
        id v14 = *(id *)(v7 + 8 * v13 + 32);
      }
      uint64_t v15 = v14;
      id v41 = v14;
      sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
      sub_1B5E00AB8(0, &qword_1EB63EFF0);
      id v16 = v15;
      if (swift_dynamicCast())
      {
        sub_1B5E30E70(v39, (uint64_t)v42);
        uint64_t v18 = v43;
        uint64_t v17 = v44;
        __swift_project_boxed_opaque_existential_1(v42, v43);
        id v19 = objc_msgSend(a4, sel_traitCollection);
        (*(void (**)(void *, id, uint64_t, uint64_t))(v17 + 8))(a3, v19, v18, v17);

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
      }
      else
      {
        uint64_t v40 = 0;
        memset(v39, 0, sizeof(v39));
        sub_1B5F39878((uint64_t)v39, (uint64_t)&qword_1EB63EFF8, (uint64_t)&qword_1EB63EFF0, (uint64_t)&protocol descriptor for CardSplitViewAutoObserver, (uint64_t (*)(void))sub_1B5E36DD0);
      }
      id v20 = objc_msgSend(v16, sel_presentedViewController, v34);
      if (v20)
      {
        uint64_t v21 = v20;
        sub_1B5ED9A98(0, (unint64_t *)&qword_1EB64B370, v35, MEMORY[0x1E4FBBE00]);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v34;
        *(void *)(inited + 32) = v21;
        v42[0] = inited;
        sub_1B61B2510();
        uint64_t v23 = v42[0];
        id v24 = a3;
        id v25 = a4;
        id v26 = v21;
        sub_1B5F34998(v23, a2, a3, v25);
        swift_bridgeObjectRelease();
      }
      ++v13;
      id v27 = objc_msgSend(v16, sel_childViewControllers);
      uint64_t v28 = sub_1B61B24E0();

      id v29 = a3;
      sub_1B5F34998(v28, a2, a3, a4);

      swift_bridgeObjectRelease();
      unint64_t v7 = v38;
    }
    while (v37 != v13);

    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  __break(1u);
}

uint64_t sub_1B5F34D18(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62)
  {
    sub_1B61B1F70();
    uint64_t result = sub_1B61B3530();
    uint64_t v5 = result;
    if (result)
    {
LABEL_3:
      if (v5 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v7 = 0;
        unint64_t v8 = a1 & 0xC000000000000001;
        uint64_t v26 = MEMORY[0x1E4FBC838] + 8;
        long long v25 = xmmword_1B61C28A0;
        do
        {
          if (v8) {
            id v9 = (id)MEMORY[0x1BA9B04B0](v7, a1);
          }
          else {
            id v9 = *(id *)(a1 + 8 * v7 + 32);
          }
          id v10 = v9;
          id v30 = v9;
          sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
          sub_1B5E00AB8(0, &qword_1EB63EFF0);
          id v11 = v10;
          if (swift_dynamicCast())
          {
            sub_1B5E30E70(v28, (uint64_t)v31);
            uint64_t v12 = v5;
            unint64_t v13 = v8;
            uint64_t v14 = v32;
            uint64_t v15 = v33;
            __swift_project_boxed_opaque_existential_1(v31, v32);
            id v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
            uint64_t v17 = v15;
            unint64_t v8 = v13;
            uint64_t v5 = v12;
            v16(a3, v14, v17);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
          }
          else
          {
            uint64_t v29 = 0;
            memset(v28, 0, sizeof(v28));
            sub_1B5F39878((uint64_t)v28, (uint64_t)&qword_1EB63EFF8, (uint64_t)&qword_1EB63EFF0, (uint64_t)&protocol descriptor for CardSplitViewAutoObserver, (uint64_t (*)(void))sub_1B5E36DD0);
          }
          id v18 = objc_msgSend(v11, sel_presentedViewController, v25);
          if (v18)
          {
            id v19 = v18;
            sub_1B5ED9A98(0, (unint64_t *)&qword_1EB64B370, v26, MEMORY[0x1E4FBBE00]);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = v25;
            *(void *)(inited + 32) = v19;
            v31[0] = inited;
            sub_1B61B2510();
            uint64_t v21 = v31[0];
            id v22 = v19;
            sub_1B5F34D18(v21, a2, a3);
            swift_bridgeObjectRelease();
          }
          ++v7;
          id v23 = objc_msgSend(v11, sel_childViewControllers);
          uint64_t v24 = sub_1B61B24E0();

          sub_1B5F34D18(v24, a2, a3);
          swift_bridgeObjectRelease();
        }
        while (v5 != v7);
        return swift_bridgeObjectRelease();
      }
      return result;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = sub_1B61B1F70();
    if (v5) {
      goto LABEL_3;
    }
  }
  return swift_bridgeObjectRelease();
}

void sub_1B5F35038(unint64_t a1, uint64_t a2)
{
}

void sub_1B5F35054(unint64_t a1, uint64_t a2)
{
}

void sub_1B5F35070(unint64_t a1, uint64_t a2, char a3, void (*a4)(uint64_t, uint64_t))
{
  if (a1 >> 62)
  {
    OUTLINED_FUNCTION_14_1();
    uint64_t v7 = sub_1B61B3530();
    if (v7)
    {
LABEL_3:
      if (v7 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v8 = 0;
        uint64_t v23 = MEMORY[0x1E4FBC838] + 8;
        do
        {
          if ((a1 & 0xC000000000000001) != 0) {
            id v9 = (id)MEMORY[0x1BA9B04B0](v8, a1);
          }
          else {
            id v9 = *(id *)(a1 + 8 * v8 + 32);
          }
          id v10 = v9;
          id v26 = v9;
          sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
          sub_1B5E00AB8(0, &qword_1EB63EFF0);
          id v11 = v10;
          if (swift_dynamicCast())
          {
            sub_1B5E30E70(v24, (uint64_t)v27);
            uint64_t v13 = v28;
            uint64_t v12 = v29;
            __swift_project_boxed_opaque_existential_1(v27, v28);
            LOBYTE(v24[0]) = a3;
            (*(void (**)(long long *, uint64_t, uint64_t))(v12 + 24))(v24, v13, v12);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
          }
          else
          {
            uint64_t v25 = 0;
            memset(v24, 0, sizeof(v24));
            sub_1B5F39878((uint64_t)v24, (uint64_t)&qword_1EB63EFF8, (uint64_t)&qword_1EB63EFF0, (uint64_t)&protocol descriptor for CardSplitViewAutoObserver, (uint64_t (*)(void))sub_1B5E36DD0);
          }
          id v14 = objc_msgSend(v11, sel_presentedViewController);
          if (v14)
          {
            uint64_t v15 = v14;
            sub_1B5ED9A98(0, (unint64_t *)&qword_1EB64B370, v23, MEMORY[0x1E4FBBE00]);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_1B61C28A0;
            *(void *)(inited + 32) = v15;
            v27[0] = inited;
            sub_1B61B2510();
            uint64_t v17 = v27[0];
            id v18 = v15;
            a4(v17, a2);
            swift_bridgeObjectRelease();
          }
          ++v8;
          id v19 = objc_msgSend(v11, sel_childViewControllers);
          uint64_t v20 = sub_1B61B24E0();

          a4(v20, a2);
          swift_bridgeObjectRelease();
        }
        while (v7 != v8);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_4_41();
      }
      return;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    sub_1B61B1F70();
    if (v7) {
      goto LABEL_3;
    }
  }
  OUTLINED_FUNCTION_4_41();
  swift_bridgeObjectRelease();
}

id sub_1B5F35410()
{
  id v0 = OUTLINED_FUNCTION_15_0();
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
  unint64_t v1 = sub_1B61B24E0();

  if (v1 >> 62)
  {
    sub_1B61B1F70();
    uint64_t v2 = sub_1B61B3530();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  id v3 = OUTLINED_FUNCTION_15_0();
  unint64_t v4 = sub_1B61B24E0();

  if (v2 >= 2)
  {
    sub_1B5E7FBF8(1, (v4 & 0xC000000000000001) == 0, v4);
    if ((v4 & 0xC000000000000001) == 0)
    {
      uint64_t v5 = *(void **)(v4 + 40);
LABEL_10:
      id v6 = v5;
LABEL_11:
      id v3 = v6;
      goto LABEL_12;
    }
    uint64_t v8 = 1;
    goto LABEL_18;
  }
  if (v4 >> 62)
  {
    OUTLINED_FUNCTION_14_1();
    sub_1B61B3530();
    OUTLINED_FUNCTION_21_0();
    swift_bridgeObjectRelease();
    if (!v3) {
      goto LABEL_12;
    }
    goto LABEL_8;
  }
  id v3 = *(id *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
LABEL_8:
    sub_1B5E7FBF8(0, (v4 & 0xC000000000000001) == 0, v4);
    if ((v4 & 0xC000000000000001) == 0)
    {
      uint64_t v5 = *(void **)(v4 + 32);
      goto LABEL_10;
    }
    uint64_t v8 = 0;
LABEL_18:
    id v6 = (id)MEMORY[0x1BA9B04B0](v8, v4);
    goto LABEL_11;
  }
LABEL_12:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1B5F35584()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardSplitViewController();
  objc_msgSendSuper2(&v2, sel_viewDidLayoutSubviews);
  return sub_1B61B0230();
}

uint64_t sub_1B5F35618()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5TeaUI23CardSplitViewController_commands);
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = qword_1EB64CF50;
  swift_unknownObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1EB64B1A8;
  uint64_t v6 = OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_6_35();
  uint64_t v7 = OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_6_35();
  uint64_t v8 = OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_6_35();
  uint64_t v17 = ObjectType;
  uint64_t v9 = MEMORY[0x1E4FBC848] + 8;
  (*(void (**)(void *__return_ptr, uint64_t, void (*)(uint64_t, uint64_t), uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, void (*)(unsigned char *@<X8>), uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v2 + 64))(v18, v5, sub_1B5F398D8, v6, sub_1B5F398E0, v7, sub_1B5F398E8, v8, MEMORY[0x1E4FBC848] + 8, &type metadata for SidebarCommandState, &protocol witness table for SidebarCommandState, v17, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  __swift_project_boxed_opaque_existential_1(v18, v19);
  OUTLINED_FUNCTION_21_0();
  sub_1B61B00C0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  uint64_t v10 = *(void *)(v1 + 24);
  uint64_t v11 = swift_getObjectType();
  uint64_t v12 = qword_1EB648D80;
  swift_unknownObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_1EB647858;
  uint64_t v14 = OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_6_35();
  uint64_t v15 = OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_6_35();
  (*(void (**)(void *__return_ptr, uint64_t, void (*)(uint64_t, uint64_t), uint64_t, void *(*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v18, v13, sub_1B5F398F0, v14, sub_1B5F398F8, v15, v9, v11, v10);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  __swift_project_boxed_opaque_existential_1(v18, v19);
  OUTLINED_FUNCTION_21_0();
  sub_1B61B00C0();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
}

void sub_1B5F358D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  swift_beginAccess();
  uint64_t v4 = (void *)MEMORY[0x1BA9B1EC0](v3);
  if (v4)
  {
    uint64_t v5 = v4;
    objc_msgSend(v4, sel_togglePrimaryViewVisibilityAnimated_, 1);
  }
}

uint64_t sub_1B5F35938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  swift_beginAccess();
  uint64_t v4 = (void *)MEMORY[0x1BA9B1EC0](v3);
  if (!v4) {
    return 0;
  }
  uint64_t v5 = v4;
  id v6 = objc_msgSend(v4, sel_presentedViewController);
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = (uint64_t)objc_msgSend(v6, sel_isBeingDismissed);

    uint64_t v5 = v7;
  }
  else
  {
    uint64_t v8 = 1;
  }

  return v8;
}

void sub_1B5F359D8(uint64_t a1@<X1>, unsigned char *a2@<X8>)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = (void *)MEMORY[0x1BA9B1EC0](v3);
  if (!v4)
  {
    LOBYTE(v7) = 0;
    goto LABEL_5;
  }
  uint64_t v5 = v4;
  unint64_t v6 = (unint64_t)objc_msgSend(v4, sel_displayMode);
  if (v6 < 4)
  {
    unsigned int v7 = 0x100u >> (8 * v6);

LABEL_5:
    *a2 = v7;
    return;
  }
  sub_1B61B34D0();
  __break(1u);
}

void sub_1B5F35AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  swift_beginAccess();
  uint64_t v4 = (void *)MEMORY[0x1BA9B1EC0](v3);
  if (v4)
  {
    uint64_t v5 = v4;
    char v9 = objc_msgSend(v4, sel_isCollapsed) ^ 1;
    unint64_t v6 = (void *)sub_1B5F35B50(&v9);
    if (v6)
    {
      unsigned int v7 = v6;
      id v8 = objc_msgSend(v6, sel_popViewControllerAnimated_, 1);

      uint64_t v5 = v8;
    }
  }
}

uint64_t sub_1B5F35B50(char *a1)
{
  char v2 = *a1;
  id v3 = objc_msgSend(v1, sel_viewControllers);
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
  unint64_t v4 = sub_1B61B24E0();

  unint64_t v5 = v4 >> 62;
  if ((v2 & 1) == 0)
  {
    if (v5)
    {
      sub_1B61B1F70();
      uint64_t v12 = sub_1B61B3530();
      swift_bridgeObjectRelease();
      if (v12) {
        goto LABEL_9;
      }
    }
    else if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_9:
      sub_1B5E7FBF8(0, (v4 & 0xC000000000000001) == 0, v4);
      if ((v4 & 0xC000000000000001) == 0)
      {
        id v8 = *(void **)(v4 + 32);
        goto LABEL_11;
      }
      uint64_t v13 = 0;
LABEL_21:
      id v9 = (id)MEMORY[0x1BA9B04B0](v13, v4);
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v5)
  {
    sub_1B61B1F70();
    uint64_t v6 = sub_1B61B3530();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v6 < 2) {
    return 0;
  }
  id v7 = objc_msgSend(v1, sel_viewControllers);
  unint64_t v4 = sub_1B61B24E0();

  sub_1B5E7FBF8(1, (v4 & 0xC000000000000001) == 0, v4);
  if ((v4 & 0xC000000000000001) != 0)
  {
    uint64_t v13 = 1;
    goto LABEL_21;
  }
  id v8 = *(void **)(v4 + 40);
LABEL_11:
  id v9 = v8;
LABEL_12:
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (result) {
    return result;
  }

  return 0;
}

void *sub_1B5F35D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  swift_beginAccess();
  uint64_t result = (void *)MEMORY[0x1BA9B1EC0](v3);
  if (!result) {
    return result;
  }
  unint64_t v5 = result;
  char v14 = objc_msgSend(result, sel_isCollapsed) ^ 1;
  uint64_t v6 = (void *)sub_1B5F35B50(&v14);
  if (!v6)
  {

    return 0;
  }
  id v7 = v6;
  id v8 = objc_msgSend(v6, sel_presentedViewController);
  if (v8)
  {
    id v9 = v8;
    unsigned __int8 v10 = objc_msgSend(v8, sel_isBeingDismissed);

    if ((v10 & 1) == 0)
    {

      return 0;
    }
  }
  id v11 = objc_msgSend(v7, sel_viewControllers);
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
  unint64_t v12 = sub_1B61B24E0();

  if (v12 >> 62)
  {
    sub_1B61B1F70();
    uint64_t v13 = sub_1B61B3530();

    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
  }
  return (void *)(v13 > 1);
}

id CardSplitViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_1B61B20C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void CardSplitViewController.init(nibName:bundle:)()
{
}

id CardSplitViewController.__allocating_init(style:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return objc_msgSend(v3, sel_initWithStyle_, a1);
}

void CardSplitViewController.init(style:)()
{
}

id CardSplitViewController.__deallocating_deinit()
{
  return sub_1B5F35FE0((SEL *)&selRef_dealloc);
}

id sub_1B5F35FE0(SEL *a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for CardSplitViewController();
  return objc_msgSendSuper2(&v4, *a1);
}

uint64_t sub_1B5F3608C()
{
  swift_getObjectType();
  uint64_t v0 = qword_1EB648D80;
  swift_unknownObjectRetain();
  if (v0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_27_2();
  v1();
  swift_unknownObjectRelease();
  swift_getObjectType();
  uint64_t v2 = qword_1EB64CF50;
  swift_unknownObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_27_2();
  v3();
  return swift_unknownObjectRelease();
}

uint64_t sub_1B5F36298(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1B61B08B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B5F37BD4(a1, (uint64_t)&v21);
  if (v22)
  {
    sub_1B5E30E70(&v21, (uint64_t)v23);
    LOBYTE(v21) = objc_msgSend(v1, sel_isCollapsed) ^ 1;
    id v8 = (void *)sub_1B5F35B50((char *)&v21);
    uint64_t v9 = v24;
    uint64_t v10 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    char v20 = objc_msgSend(v1, sel_isCollapsed) ^ 1;
    (*(void (**)(long long *__return_ptr, char *, uint64_t, uint64_t))(v10 + 16))(&v21, &v20, v9, v10);
    LOBYTE(v21) = objc_msgSend(v1, sel_isCollapsed) ^ 1;
    id v11 = (void *)sub_1B5F35B50((char *)&v21);

    if (v11
      || (uint64_t v12 = v24,
          uint64_t v13 = v25,
          __swift_project_boxed_opaque_existential_1(v23, v24),
          char v20 = objc_msgSend(v2, sel_isCollapsed) ^ 1,
          (*(void (**)(long long *__return_ptr, char *, uint64_t, uint64_t))(v13 + 16))(&v21, &v20, v12, v13),
          (v21 & 0xC0) != 0x40)
      || (v21 & 1) == 0
      || (self, !swift_dynamicCastObjCClass()))
    {
      sub_1B5F39704(0, &qword_1EB647D40, MEMORY[0x1E4FBBE00]);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1B61BE6A0;
      sub_1B61B08A0();
      sub_1B61B0890();
      *(void *)&long long v21 = v14;
      sub_1B5F39764();
      sub_1B5F39704(0, &qword_1EB647A98, MEMORY[0x1E4FBB320]);
      sub_1B5F397B4();
      sub_1B61B3100();
      uint64_t v15 = swift_allocObject();
      swift_unknownObjectUnownedInit();
      sub_1B5E176E4((uint64_t)v23, (uint64_t)&v21);
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = a1;
      sub_1B5E30E70(&v21, v16 + 24);
      *(void *)(v16 + 64) = v15;
      id v17 = a1;
      swift_retain();
      sub_1B61B0250();
      swift_release();

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      return 1;
    }

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  }
  else
  {
    sub_1B5F39878((uint64_t)&v21, (uint64_t)&unk_1EB63FA30, (uint64_t)&qword_1EB63EDF8, (uint64_t)&protocol descriptor for CardSplitViewPanable, (uint64_t (*)(void))sub_1B5E36DD0);
  }
  return 0;
}

uint64_t CardSplitViewController.splitViewController(_:showDetail:sender:)(uint64_t a1, void *a2)
{
  return sub_1B5F36298(a2);
}

uint64_t sub_1B5F366A8(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t (*a6)(id, void *))
{
  if (a5)
  {
    id v10 = a3;
    id v11 = a4;
    id v12 = a1;
    swift_unknownObjectRetain();
    sub_1B61B3030();
    id v13 = (id)swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
    id v14 = a3;
    id v15 = a4;
    id v13 = a1;
  }
  char v16 = a6(v13, a4);

  sub_1B5F39878((uint64_t)v18, (uint64_t)&qword_1EB64CAC0, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1B5ED9A98);
  return v16 & 1;
}

Swift::Void __swiftcall CardSplitViewController.splitViewController(_:willChangeTo:)(UISplitViewController *_, UISplitViewControllerDisplayMode willChangeTo)
{
  id v4 = objc_msgSend(v2, sel_childViewControllers);
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
  unint64_t v5 = sub_1B61B24E0();

  sub_1B5F34D18(v5, (uint64_t)v2, willChangeTo);
  swift_bridgeObjectRelease();
}

Swift::Bool __swiftcall CardSplitViewController.splitViewController(_:collapseSecondary:onto:)(UISplitViewController *_, UIViewController *collapseSecondary, UIViewController *onto)
{
  self;
  id v40 = (id)swift_dynamicCastObjCClass();
  if (v40)
  {
    self;
    uint64_t v5 = swift_dynamicCastObjCClass();
    if (v5)
    {
      uint64_t v6 = (void *)v5;
      id v7 = (uint64_t *)(v41 + OBJC_IVAR____TtC5TeaUI23CardSplitViewController_preservedItems);
      swift_beginAccess();
      uint64_t v8 = *v7;
      uint64_t v9 = *(void *)(*v7 + 16);
      unint64_t v38 = collapseSecondary;
      uint64_t v39 = onto;
      if (v9)
      {
        unint64_t v36 = v7;
        uint64_t v37 = v6;
        id v10 = onto;
        id v11 = collapseSecondary;
        sub_1B61B1F70();
        id v12 = (uint64_t *)(v8 + 56);
        do
        {
          id v13 = (void *)*(v12 - 3);
          uint64_t v14 = *(v12 - 2);
          uint64_t v15 = *(v12 - 1);
          uint64_t v16 = *v12;
          uint64_t ObjectType = swift_getObjectType();
          id v18 = v13;
          sub_1B5E4DC4C(v15);
          id v19 = objc_msgSend(v18, sel_view);
          if (!v19)
          {
            __break(1u);
            JUMPOUT(0x1B5F36D40);
          }
          char v20 = v19;
          v12 += 4;
          objc_msgSend(v19, sel_setHidden_, 0);

          v45[0] = v18;
          LOBYTE(v44) = 0;
          (*(void (**)(long long *__return_ptr, id *, uint64_t, uint64_t))(v14 + 16))(v42, &v44, ObjectType, v14);
          switch(LOBYTE(v42[0]) >> 6)
          {
            case 1:
            case 2:
            case 3:

              sub_1B5E3799C(v15);
              break;
            default:
              LOBYTE(v45[0]) = v42[0];
              long long v21 = (void *)swift_allocObject();
              v21[2] = v18;
              v21[3] = v14;
              void v21[4] = v15;
              v21[5] = v16;
              id v22 = v18;
              sub_1B5E4DC4C(v15);
              CardContainerController.pushCard(_:to:animated:completion:)();

              sub_1B5E3799C(v15);
              swift_release();
              break;
          }
          --v9;
        }
        while (v9);
        swift_bridgeObjectRelease();
        id v7 = v36;
        uint64_t v6 = v37;
      }
      else
      {
        uint64_t v23 = onto;
        uint64_t v24 = collapseSecondary;
      }
      *id v7 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRelease();
      id v25 = objc_msgSend(v6, sel_childViewControllers);
      sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
      unint64_t v26 = sub_1B61B24E0();

      if (v26 >> 62) {
        goto LABEL_28;
      }
      uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      while (v27)
      {
        uint64_t v28 = 4;
        while (1)
        {
          id v29 = (v26 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x1BA9B04B0](v28 - 4, v26)
              : *(id *)(v26 + 8 * v28);
          id v30 = v29;
          uint64_t v31 = v28 - 3;
          if (__OFADD__(v28 - 4, 1)) {
            break;
          }
          id v44 = v29;
          sub_1B5E00AB8(0, &qword_1EB63EDF8);
          id v32 = v30;
          if (!swift_dynamicCast())
          {
            uint64_t v43 = 0;
            memset(v42, 0, sizeof(v42));
            swift_bridgeObjectRelease();
            sub_1B5F39878((uint64_t)v42, (uint64_t)&unk_1EB63FA30, (uint64_t)&qword_1EB63EDF8, (uint64_t)&protocol descriptor for CardSplitViewPanable, (uint64_t (*)(void))sub_1B5E36DD0);

            goto LABEL_26;
          }
          sub_1B5E30E70(v42, (uint64_t)v45);
          uint64_t v33 = v46;
          uint64_t v34 = v47;
          __swift_project_boxed_opaque_existential_1(v45, v46);
          LOBYTE(v44) = 0;
          (*(void (**)(long long *__return_ptr, id *, uint64_t, uint64_t))(v34 + 16))(v42, &v44, v33, v34);
          if (LOBYTE(v42[0]) > 0x3Fu) {
            objc_msgSend(v40, sel_showViewController_sender_, v32, 0);
          }
          else {
            CardContainerController.pushCard(_:to:animated:completion:)();
          }

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
          ++v28;
          if (v31 == v27) {
            goto LABEL_24;
          }
        }
        __break(1u);
LABEL_28:
        sub_1B61B1F70();
        uint64_t v27 = sub_1B61B3530();
        swift_bridgeObjectRelease();
      }
LABEL_24:

      swift_bridgeObjectRelease();
    }
  }
LABEL_26:
  OUTLINED_FUNCTION_4_41();
  return result;
}

void __swiftcall CardSplitViewController.splitViewController(_:separateSecondaryFrom:)(UIViewController_optional *__return_ptr retstr, UISplitViewController *_, UIViewController *separateSecondaryFrom)
{
  self;
  id v4 = (void *)swift_dynamicCastObjCClass();
  if (v4)
  {
    uint64_t v5 = separateSecondaryFrom;
    id v6 = objc_msgSend(v4, sel_viewControllers);
    sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
    unint64_t v7 = sub_1B61B24E0();

    if (v7 >> 62)
    {
      OUTLINED_FUNCTION_13_20();
      uint64_t v55 = sub_1B61B3530();
      swift_bridgeObjectRelease();
      if (v55)
      {
LABEL_4:
        sub_1B5E7FBF8(0, (v7 & 0xC000000000000001) == 0, v7);
        if ((v7 & 0xC000000000000001) != 0) {
          id v8 = (id)MEMORY[0x1BA9B04B0](0, v7);
        }
        else {
          id v8 = *(id *)(v7 + 32);
        }
        id v60 = v8;
        swift_bridgeObjectRelease();
        uint64_t v9 = *(void **)(v59 + OBJC_IVAR____TtC5TeaUI23CardSplitViewController_primaryCardContainerController);
        id v10 = sub_1B5E9C178();
        if (!v10)
        {

          return;
        }
        id v11 = v10;
        uint64_t v56 = v5;
        sub_1B5E9BFA4();
        unint64_t v13 = v12;
        sub_1B5E9C3F8();
        unint64_t v15 = v14;
        MEMORY[0x1F4188790](v14);
        sub_1B5F33C00(v13, v15, sub_1B5F39468);
        uint64_t v17 = v16;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v18 = *(void *)(v17 + 16);
        uint64_t v57 = v4;
        uint64_t v58 = v11;
        if (v18)
        {
          sub_1B61B1F70();
          id v19 = (uint64_t *)(v17 + 56);
          char v20 = (void *)MEMORY[0x1E4FBC860];
          uint64_t v21 = v59;
          do
          {
            id v22 = (void *)*(v19 - 3);
            if (v22)
            {
              uint64_t v23 = *(v19 - 2);
              uint64_t v24 = *(v19 - 1);
              uint64_t v25 = *v19;
              id v26 = v22;
              sub_1B5E4DC4C(v24);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1B5E1B0D0();
                char v20 = v29;
              }
              unint64_t v27 = v20[2];
              if (v27 >= v20[3] >> 1)
              {
                sub_1B5E1B0D0();
                char v20 = v30;
              }
              long long v20[2] = v27 + 1;
              uint64_t v28 = &v20[4 * v27];
              v28[4] = v26;
              v28[5] = v23;
              v28[6] = v24;
              v28[7] = v25;
              uint64_t v21 = v59;
            }
            v19 += 4;
            --v18;
          }
          while (v18);
          swift_bridgeObjectRelease();
        }
        else
        {
          char v20 = (void *)MEMORY[0x1E4FBC860];
          uint64_t v21 = v59;
        }
        swift_bridgeObjectRelease();
        objc_msgSend(v9, sel_popCards);
        uint64_t v31 = v20[2];
        if (v31)
        {
          id v32 = v20 + 7;
          do
          {
            uint64_t v33 = *(v32 - 2);
            uint64_t v34 = *(v32 - 1);
            uint64_t v35 = *v32;
            id v36 = (id)*(v32 - 3);
            sub_1B5E4DC4C(v34);
            sub_1B5F37544(v36, v33, v34, v35, 1);

            sub_1B5E3799C(v34);
            v32 += 4;
            --v31;
          }
          while (v31);
        }
        swift_bridgeObjectRelease();
        id v37 = objc_msgSend(v58, sel_view);
        if (!v37)
        {
LABEL_41:
          __break(1u);
          return;
        }
        unint64_t v38 = v37;
        objc_msgSend(v37, sel_setHidden_, 0);

        uint64_t v39 = *(void *)(v21 + OBJC_IVAR____TtC5TeaUI23CardSplitViewController_commands);
        uint64_t v40 = *(void *)(v39 + 16);
        uint64_t v41 = *(void *)(v39 + 24);
        objc_allocWithZone((Class)type metadata accessor for CardNavigationController());
        id v42 = v58;
        swift_unknownObjectRetain();
        id v43 = CardNavigationController.init(rootViewController:commandCenter:)(v42, v40, v41);
        id v44 = objc_msgSend(v57, sel_childViewControllers);
        unint64_t v45 = sub_1B61B24E0();

        if (v45 >> 62)
        {
          OUTLINED_FUNCTION_13_20();
          uint64_t v46 = sub_1B61B3530();
          swift_bridgeObjectRelease();
          if (v46) {
            goto LABEL_25;
          }
        }
        else
        {
          uint64_t v46 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v46)
          {
LABEL_25:
            if (v46 >= 1)
            {
              for (uint64_t i = 0; i != v46; ++i)
              {
                if ((v45 & 0xC000000000000001) != 0)
                {
                  uint64_t v48 = OUTLINED_FUNCTION_8_1();
                  id v49 = (id)MEMORY[0x1BA9B04B0](v48);
                }
                else
                {
                  id v49 = *(id *)(v45 + 8 * i + 32);
                }
                id v50 = v49;
                uint64_t v51 = v60;
                if (v49 != v60)
                {
                  objc_msgSend(v43, sel_pushViewController_animated_, v49, 0);
                  uint64_t v51 = v50;
                }
              }
              goto LABEL_33;
            }
            __break(1u);
            goto LABEL_41;
          }
        }
LABEL_33:
        swift_bridgeObjectRelease();
        sub_1B5ED9A98(0, (unint64_t *)&qword_1EB64B370, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
        uint64_t v52 = swift_allocObject();
        *(_OWORD *)(v52 + 16) = xmmword_1B61C28A0;
        *(void *)(v52 + 32) = v60;
        uint64_t v61 = v52;
        sub_1B61B2510();
        id v53 = v60;
        OUTLINED_FUNCTION_21_0();
        uint64_t v54 = (void *)sub_1B61B24D0();
        swift_bridgeObjectRelease();
        objc_msgSend(v57, sel_setViewControllers_, v54);

        return;
      }
    }
    else if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B5F37330(void *a1, char *a2)
{
  char v3 = *a2;
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = a1;
  *(unsigned char *)(v5 + 32) = v3;
  swift_getObjectType();
  uint64_t v6 = dynamic_cast_existential_1_conditional((uint64_t)a1);
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v7;
    uint64_t ObjectType = swift_getObjectType();
    id v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    id v12 = a1;
    if (v11(ObjectType, v9)) {
      return v8;
    }
  }
  else
  {
    id v13 = a1;
  }

  swift_release();
  return 0;
}

void sub_1B5F37464(uint64_t a1, uint64_t a2)
{
  id Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  id v4 = *(id *)&Strong[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_primaryCardContainerController];

  sub_1B5E9BFA4();
  unint64_t v6 = v5;

  sub_1B60CAE54(a2, v6);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
  {
    uint64_t v8 = (char *)swift_unknownObjectUnownedLoadStrong();
    id v9 = *(id *)&v8[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_primaryCardContainerController];

    CardContainerController.setCard(at:to:animated:completion:)();
  }
}

id sub_1B5F37544(id a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = v5;
  if (a5)
  {
    objc_msgSend(a1, sel_willMoveToParentViewController_, 0);
    id result = objc_msgSend(a1, sel_view);
    if (!result)
    {
      __break(1u);
      goto LABEL_16;
    }
    id v13 = result;
    objc_msgSend(result, sel_removeFromSuperview);

    objc_msgSend(a1, sel_removeFromParentViewController);
  }
  unint64_t v14 = &v6[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_preservedItems];
  id result = (id)swift_beginAccess();
  uint64_t v15 = *(void *)(*(void *)v14 + 16);
  if (v15)
  {
    uint64_t v16 = (id *)(*(void *)v14 + 32);
    while (*v16 != a1)
    {
      v16 += 4;
      if (!--v15) {
        goto LABEL_8;
      }
    }
  }
  else
  {
LABEL_8:
    swift_beginAccess();
    id v17 = a1;
    sub_1B5E4DC4C(a3);
    sub_1B5E19F28();
    uint64_t v18 = *(void *)(*(void *)v14 + 16);
    sub_1B5E1A3FC();
    uint64_t v19 = *(void *)v14;
    *(void *)(v19 + 16) = v18 + 1;
    char v20 = (void *)(v19 + 32 * v18);
    v20[4] = v17;
    v20[5] = a2;
    v20[6] = a3;
    v20[7] = a4;
    id result = (id)swift_endAccess();
  }
  if (a5)
  {
    objc_msgSend(a1, sel_willMoveToParentViewController_, v6);
    objc_msgSend(v6, sel_addChildViewController_, a1);
    id result = objc_msgSend(a1, sel_view);
    if (result)
    {
      id v21 = result;
      objc_msgSend(result, sel_setHidden_, 1);

      id result = objc_msgSend(v6, sel_view);
      if (result)
      {
        id v22 = result;
        id result = objc_msgSend(a1, sel_view);
        if (result)
        {
          id v23 = result;
          objc_msgSend(v22, sel_insertSubview_atIndex_, result, 0);

          return objc_msgSend(a1, sel_didMoveToParentViewController_, v6);
        }
LABEL_18:
        __break(1u);
        return result;
      }
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  return result;
}

id CardSplitViewController.show(_:sender:transitionIdentifier:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  char v7 = *(uint64_t (**)(uint64_t))a3;
  uint64_t v8 = *(void *)(a3 + 8);
  int v9 = *(unsigned __int8 *)(a3 + 16);
  if (*(unsigned char *)(a3 + 16))
  {
    if (v9 == 1)
    {
      uint64_t v14 = sub_1B5E80024(*(void *)a3, *(void *)(a3 + 8), 1);
      uint64_t v11 = v7(v14);
      id v12 = v15;
    }
    else
    {
      if (v9 != 2) {
        return objc_msgSend(v4, sel_showViewController_sender_, a1, a2);
      }
      sub_1B5E80024(*(void *)a3, *(void *)(a3 + 8), 2);
      uint64_t v10 = sub_1B5E80024((uint64_t)v7, v8, 2);
      ((void (*)(uint64_t *__return_ptr, uint64_t))v7)(&v26, v10);
      uint64_t v11 = v26;
      id v12 = (void *)v27;
      swift_bridgeObjectRelease();
      sub_1B5F39470((uint64_t)v7, v8, 2);
    }
  }
  else
  {
    sub_1B5E80024(*(void *)a3, *(void *)(a3 + 8), 0);
    sub_1B5E80024((uint64_t)v7, v8, 0);
    uint64_t v11 = (uint64_t)v7;
    id v12 = (void *)v8;
  }
  v16._countAndFlagsBits = v11;
  v16._object = v12;
  UIViewController.findSourceView(identifier:)(v13, v16);
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  if (v18)
  {
    uint64_t v19 = self;
    uint64_t v20 = OUTLINED_FUNCTION_43_0();
    swift_unknownObjectWeakInit();
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v20;
    *(void *)(v21 + 24) = v7;
    *(void *)(v21 + 32) = v8;
    *(unsigned char *)(v21 + 40) = v9;
    *(void *)(v21 + 48) = v18;
    id v30 = sub_1B5F39508;
    uint64_t v31 = v21;
    uint64_t v26 = MEMORY[0x1E4F143A8];
    uint64_t v27 = 1107296256;
    uint64_t v28 = sub_1B5F37B6C;
    id v29 = &block_descriptor_26;
    id v22 = _Block_copy(&v26);
    sub_1B5F3951C((uint64_t)v7, v8, v9);
    id v23 = v18;
    swift_release();
    id v24 = objc_msgSend(v19, sel_zoomWithSourceViewProvider_, v22);
    _Block_release(v22);
    objc_msgSend(a1, sel__setPreferredTransition_, v24);
  }
  sub_1B5F39470((uint64_t)v7, v8, v9);
  return objc_msgSend(v4, sel_showViewController_sender_, a1, a2);
}

void *sub_1B5F37A54(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), void *a4, char a5, void *a6)
{
  uint64_t v10 = a2 + 16;
  swift_beginAccess();
  uint64_t v11 = MEMORY[0x1BA9B1EC0](v10);
  if (!v11) {
    goto LABEL_9;
  }
  id v12 = (void *)v11;
  if (a5)
  {
    uint64_t v13 = swift_retain();
    if (a5 == 1)
    {
      uint64_t v14 = a3(v13);
      Swift::String v16 = v15;
      uint64_t v17 = (uint64_t)a3;
      uint64_t v18 = (uint64_t)a4;
      char v19 = 1;
    }
    else
    {
      ((void (*)(void *__return_ptr, uint64_t))a3)(v26, v13);
      uint64_t v14 = v26[0];
      Swift::String v16 = (void *)v26[1];
      swift_bridgeObjectRelease();
      uint64_t v17 = (uint64_t)a3;
      uint64_t v18 = (uint64_t)a4;
      char v19 = 2;
    }
    sub_1B5E7FD50(v17, v18, v19);
    a3 = (uint64_t (*)(uint64_t))v14;
    a4 = v16;
  }
  else
  {
    sub_1B61B1F70();
  }
  v21._countAndFlagsBits = (uint64_t)a3;
  v21._object = a4;
  UIViewController.findSourceView(identifier:)(v20, v21);
  uint64_t v23 = v22;

  swift_bridgeObjectRelease();
  if (!v23)
  {
LABEL_9:
    id v24 = a6;
    return a6;
  }
  return (void *)v23;
}

id sub_1B5F37B6C(uint64_t a1, void *a2)
{
  char v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  unint64_t v5 = (void *)v3();
  swift_release();

  return v5;
}

double sub_1B5F37BD4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (a1)
  {
    sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
    sub_1B5E00AB8(0, &qword_1EB63EDF8);
    id v4 = a1;
    if (swift_dynamicCast())
    {
      if (*((void *)&v14 + 1))
      {
        sub_1B5E30E70(&v13, a2);
        return result;
      }
    }
    else
    {
      uint64_t v15 = 0;
      long long v13 = 0u;
      long long v14 = 0u;
    }
    sub_1B5F39878((uint64_t)&v13, (uint64_t)&unk_1EB63FA30, (uint64_t)&qword_1EB63EDF8, (uint64_t)&protocol descriptor for CardSplitViewPanable, (uint64_t (*)(void))sub_1B5E36DD0);
    self;
    uint64_t v6 = swift_dynamicCastObjCClass();
    if (v6)
    {
      char v7 = (void *)v6;
      id v8 = v4;
      id v9 = objc_msgSend(v7, sel_childViewControllers);
      unint64_t v10 = sub_1B61B24E0();

      if (v10 >> 62)
      {
        sub_1B61B1F70();
        uint64_t v11 = (void *)sub_1B61B3530();
        swift_bridgeObjectRelease();
        if (v11) {
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t v11 = *(void **)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v11)
        {
LABEL_10:
          sub_1B5E7FBF8(0, (v10 & 0xC000000000000001) == 0, v10);
          if ((v10 & 0xC000000000000001) != 0) {
            id v12 = (id)MEMORY[0x1BA9B04B0](0, v10);
          }
          else {
            id v12 = *(id *)(v10 + 32);
          }
          uint64_t v11 = v12;
        }
      }
      swift_bridgeObjectRelease();
      sub_1B5F37BD4(v11);

      return result;
    }
  }
  else
  {
    uint64_t v15 = 0;
    long long v13 = 0u;
    long long v14 = 0u;
    sub_1B5F39878((uint64_t)&v13, (uint64_t)&unk_1EB63FA30, (uint64_t)&qword_1EB63EDF8, (uint64_t)&protocol descriptor for CardSplitViewPanable, (uint64_t (*)(void))sub_1B5E36DD0);
  }
  *(void *)(a2 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

void sub_1B5F37E08(void *a1, void *a2)
{
  id v4 = objc_msgSend(a1, sel_view);
  if (!v4)
  {
    __break(1u);
    JUMPOUT(0x1B5F38690);
  }
  unint64_t v5 = v4;
  objc_msgSend(v4, sel_setHidden_, 0);

  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v6);
  id Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  unsigned __int8 v9 = objc_msgSend(Strong, sel_isCollapsed);

  char v74 = v9 ^ 1;
  (*(void (**)(uint64_t *__return_ptr, char *, uint64_t, uint64_t))(v7 + 16))(&v73, &v74, v6, v7);
  char v10 = v73;
  int v11 = v73 >> 6;
  if ((v11 - 2) >= 2)
  {
    if (!v11)
    {
      uint64_t v20 = (void *)swift_unknownObjectUnownedLoadStrong();
      Swift::String v21 = (char *)swift_unknownObjectUnownedLoadStrong();
      id v22 = *(id *)&v21[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_primaryCardContainerController];

      id v23 = sub_1B5E9C178();
      LOBYTE(v22) = sub_1B5F386B0(v23, a1);

      id v24 = (char *)swift_unknownObjectUnownedLoadStrong();
      id v25 = *(id *)&v24[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_primaryCardContainerController];

      if (v22)
      {
        sub_1B5E9C294((char *)&v73);

        switch((char)v73)
        {
          case 2:
          case 3:
          case 7:
            uint64_t v26 = (char *)swift_unknownObjectUnownedLoadStrong();
            id v27 = *(id *)&v26[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_primaryCardContainerController];

            uint64_t v28 = (char *)swift_unknownObjectUnownedLoadStrong();
            id v29 = *(id *)&v28[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_primaryCardContainerController];

            sub_1B5E9BFA4();
            unint64_t v31 = v30;

            if (v31 >> 62)
            {
              sub_1B61B1F70();
              uint64_t v32 = sub_1B61B3530();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            swift_bridgeObjectRelease();
            if (__OFSUB__(v32, 1))
            {
              __break(1u);
              goto LABEL_60;
            }
            LOBYTE(v73) = v10;
            CardContainerController.setCard(at:to:animated:completion:)();

            break;
          default:
            return;
        }
      }
      else
      {
        LOBYTE(v73) = v10;
        CardContainerController.pushCard(_:to:animated:completion:)();
      }
      return;
    }
    id v37 = (void *)swift_unknownObjectUnownedLoadStrong();
    unint64_t v38 = (void *)swift_unknownObjectUnownedLoadStrong();
    unsigned __int8 v39 = objc_msgSend(v38, sel_isCollapsed);

    LOBYTE(v73) = v39 ^ 1;
    id v72 = (id)sub_1B5F35B50((char *)&v73);

    if (!v72) {
      return;
    }
    if ((v10 & 1) == 0)
    {
      uint64_t v40 = (void *)swift_unknownObjectUnownedLoadStrong();
      id v41 = objc_msgSend(v72, sel_visibleViewController);
      char v42 = sub_1B5F386B0(v41, a1);

      if ((v42 & 1) == 0) {
        objc_msgSend(v72, sel_showViewController_sender_, a1, 0);
      }
      goto LABEL_20;
    }
    id v43 = objc_msgSend(v72, sel_viewControllers);
    sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
    unint64_t v44 = sub_1B61B24E0();

    if (v44 >> 62)
    {
      sub_1B61B1F70();
      uint64_t v46 = sub_1B61B3530();
      swift_bridgeObjectRelease();
      if (v46) {
        goto LABEL_32;
      }
    }
    else if (*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_32:
      sub_1B5E7FBF8(0, (v44 & 0xC000000000000001) == 0, v44);
      if ((v44 & 0xC000000000000001) != 0) {
        id v45 = (id)MEMORY[0x1BA9B04B0](0, v44);
      }
      else {
        id v45 = *(id *)(v44 + 32);
      }
      id v71 = v45;
      swift_bridgeObjectRelease();
LABEL_37:
      self;
      uint64_t v47 = (void *)swift_dynamicCastObjCClass();
      if (v47)
      {
        id v48 = objc_msgSend(v47, sel_topViewController);
        if (!v48) {
          goto LABEL_46;
        }
      }
      else
      {
        id v48 = a1;
      }
      static Accessibility.Notifications.blockNotification(_:forInterval:)(*MEMORY[0x1E4FB24B0], 1.0);
      id v49 = (void *)swift_unknownObjectUnownedLoadStrong();
      id v27 = v48;
      char v50 = sub_1B5F386B0(v71, v48);

      if ((v50 & 1) == 0)
      {
        uint64_t v54 = (void *)swift_unknownObjectUnownedLoadStrong();
        unsigned __int8 v55 = objc_msgSend(v54, sel_isCollapsed);

        LOBYTE(v73) = v55 ^ 1;
        if (!sub_1B5F389E0((char *)&v73)) {
          objc_msgSend(v72, sel_dismissViewControllerAnimated_completion_, 0, 0);
        }
        sub_1B5ED9A98(0, (unint64_t *)&qword_1EB64B370, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
        uint64_t v56 = swift_allocObject();
        *(_OWORD *)(v56 + 16) = xmmword_1B61C28A0;
        *(void *)(v56 + 32) = v27;
        uint64_t v73 = v56;
        sub_1B61B2510();
        id v70 = v27;
        uint64_t v57 = (void *)sub_1B61B24D0();
        swift_bridgeObjectRelease();
        objc_msgSend(v72, sel_setViewControllers_, v57);

        if (v71)
        {
          id v58 = v71;
          uint64_t v59 = sub_1B5E7511C(v58, 0);
          if (v59)
          {
            uint64_t v63 = (void *)v59;
            uint64_t v64 = v60;
            uint64_t v65 = v61;
            uint64_t v66 = v62;
            uint64_t v67 = (void *)swift_unknownObjectUnownedLoadStrong();
            id v68 = v70;
            char v69 = sub_1B61B2E10();

            sub_1B5F37544(v63, v64, v65, v66, (v69 & 1) == 0);
            sub_1B5E3799C(v65);
            goto LABEL_20;
          }
        }
        else
        {
        }
        id v36 = v70;
        goto LABEL_21;
      }
      id v51 = objc_msgSend(v72, sel_viewControllers);
      unint64_t v52 = sub_1B61B24E0();

      if (v52 >> 62)
      {
LABEL_60:
        sub_1B61B1F70();
        uint64_t v53 = sub_1B61B3530();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v53 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v53 < 2)
      {

        goto LABEL_53;
      }

LABEL_46:
LABEL_53:
      id v36 = v71;
      goto LABEL_21;
    }
    swift_bridgeObjectRelease();
    id v71 = 0;
    goto LABEL_37;
  }
  id v12 = objc_msgSend(a1, sel_presentationController);
  if (v12)
  {
    long long v13 = v12;
    objc_msgSend(v12, sel_ts_containerIgnoresDirectTouchEvents_, 1);
  }
  id v14 = objc_msgSend(self, sel_defaultCenter);
  if (qword_1EB649980 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1B61AF6F0();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EB649968);
  Swift::String v16 = (void *)sub_1B61AF6A0();
  objc_msgSend(v14, sel_postNotification_, v16);

  uint64_t v17 = (void *)swift_unknownObjectUnownedLoadStrong();
  unsigned int v18 = objc_msgSend(v17, sel_isCollapsed);

  char v19 = (void *)swift_unknownObjectUnownedLoadStrong();
  LOBYTE(v73) = (v10 & 1) != 0 && !v18;
  uint64_t v33 = (void *)sub_1B5F35B50((char *)&v73);

  if (v33)
  {
    id v72 = v33;
    id v34 = UIViewController.topPresentedViewController.getter();

    id v35 = v34;
    objc_msgSend(v35, sel_presentViewController_animated_completion_, a1, 1, 0);

LABEL_20:
    id v36 = v72;
LABEL_21:
  }
}

uint64_t sub_1B5F386B0(void *a1, void *a2)
{
  if (!a1
    || (v25[0] = a1,
        sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0),
        sub_1B5E00AB8(0, (unint64_t *)&qword_1EB642600),
        id v4 = a1,
        (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v24 = 0;
    long long v22 = 0u;
    long long v23 = 0u;
    goto LABEL_23;
  }
  if (!*((void *)&v23 + 1))
  {
LABEL_23:
    sub_1B5F39878((uint64_t)&v22, (uint64_t)&qword_1EB648FE0, (uint64_t)&qword_1EB642600, MEMORY[0x1E4FAA978], (uint64_t (*)(void))sub_1B5E36DD0);
LABEL_24:
    char v17 = 0;
    return v17 & 1;
  }
  sub_1B5E30E70(&v22, (uint64_t)v25);
  if (!a2 || (id v5 = a2, (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v21 = 0;
    long long v19 = 0u;
    long long v20 = 0u;
    goto LABEL_27;
  }
  if (!*((void *)&v20 + 1))
  {
LABEL_27:
    sub_1B5F39878((uint64_t)&v19, (uint64_t)&qword_1EB648FE0, (uint64_t)&qword_1EB642600, MEMORY[0x1E4FAA978], (uint64_t (*)(void))sub_1B5E36DD0);
LABEL_28:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    goto LABEL_24;
  }
  sub_1B5E30E70(&v19, (uint64_t)&v22);
  __swift_project_boxed_opaque_existential_1(v25, v26);
  if (sub_1B61B02A0() == 0x296C6C756E28 && v6 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    sub_1B5E176E4((uint64_t)&v22, (uint64_t)&v19);
    goto LABEL_30;
  }
  char v8 = sub_1B61B3760();
  swift_bridgeObjectRelease();
  sub_1B5E176E4((uint64_t)&v22, (uint64_t)&v19);
  if (v8)
  {
LABEL_30:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
    goto LABEL_31;
  }
  __swift_project_boxed_opaque_existential_1(&v19, *((uint64_t *)&v20 + 1));
  if (sub_1B61B02A0() == 0x296C6C756E28 && v9 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  char v11 = sub_1B61B3760();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  if (v11)
  {
LABEL_31:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
    goto LABEL_28;
  }
  __swift_project_boxed_opaque_existential_1(v25, v26);
  uint64_t v12 = sub_1B61B02A0();
  uint64_t v14 = v13;
  __swift_project_boxed_opaque_existential_1(&v22, *((uint64_t *)&v23 + 1));
  if (v12 == sub_1B61B02A0() && v14 == v15) {
    char v17 = 1;
  }
  else {
    char v17 = sub_1B61B3760();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return v17 & 1;
}

BOOL sub_1B5F389E0(char *a1)
{
  char v1 = *a1;
  id v8 = UIViewController.topPresentedViewController.getter();
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
  sub_1B5E00AB8(0, &qword_1EB63EDF8);
  if (swift_dynamicCast())
  {
    sub_1B5E30E70(v6, (uint64_t)v9);
    uint64_t v2 = v10;
    uint64_t v3 = v11;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    LOBYTE(v8) = v1;
    (*(void (**)(long long *__return_ptr, id *, uint64_t, uint64_t))(v3 + 16))(v6, &v8, v2, v3);
    BOOL v4 = LOBYTE(v6[0]) > 0xBFu;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_1B5F39878((uint64_t)v6, (uint64_t)&unk_1EB63FA30, (uint64_t)&qword_1EB63EDF8, (uint64_t)&protocol descriptor for CardSplitViewPanable, (uint64_t (*)(void))sub_1B5E36DD0);
    return 0;
  }
  return v4;
}

void CardSplitViewController.currentSplitViewFocus.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI23CardSplitViewController_splitViewFocus);
}

Swift::Void __swiftcall CardSplitViewController.toggleSplitViewFocus(to:)(TeaUI::CardSplitViewFocus to)
{
  char v2 = *(unsigned char *)to;
  uint64_t v3 = (uint64_t)OUTLINED_FUNCTION_15_0();
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
  unint64_t v4 = OUTLINED_FUNCTION_8_25();

  if (v4 >> 62)
  {
    OUTLINED_FUNCTION_4_8();
    sub_1B61B3530();
    OUTLINED_FUNCTION_53();
  }
  else
  {
    uint64_t v3 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v3 < 2)
  {
    OUTLINED_FUNCTION_7_8();
    return;
  }
  if (v2)
  {
    id v5 = OUTLINED_FUNCTION_15_0();
    uint64_t v6 = sub_1B61B24E0();

    OUTLINED_FUNCTION_10_28();
    if (v5) {
      MEMORY[0x1BA9B04B0](1, v6);
    }
    else {
      id v7 = *(id *)(v6 + 40);
    }
    OUTLINED_FUNCTION_53();
    id v16 = sub_1B6073300(v5);

    if (!objc_msgSend(v16, sel_canBecomeFirstResponder)) {
      goto LABEL_17;
    }
    if ((objc_msgSend(v16, sel_isFirstResponder) & 1) == 0) {
      objc_msgSend(v16, sel_becomeFirstResponder);
    }
    v1[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_splitViewFocus] = 1;
    id v8 = objc_msgSend(v1, sel_childViewControllers);
    sub_1B61B24E0();

    unint64_t v9 = OUTLINED_FUNCTION_8_1();
    sub_1B5F35054(v9, v10);
    goto LABEL_16;
  }
  id v17 = sub_1B6073300(*(void **)&v1[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_primaryCardContainerController]);
  if (objc_msgSend(v17, sel_canBecomeFirstResponder))
  {
    if ((objc_msgSend(v17, sel_isFirstResponder) & 1) == 0) {
      objc_msgSend(v17, sel_becomeFirstResponder);
    }
    v1[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_splitViewFocus] = 0;
    id v11 = objc_msgSend(v1, sel_childViewControllers);
    sub_1B61B24E0();

    unint64_t v12 = OUTLINED_FUNCTION_8_1();
    sub_1B5F35038(v12, v13);
LABEL_16:
    swift_bridgeObjectRelease();
  }
LABEL_17:
  OUTLINED_FUNCTION_7_8();
}

void sub_1B5F38D54(unsigned char *a1@<X8>)
{
}

void sub_1B5F38D78(TeaUI::CardSplitViewFocus a1)
{
}

uint64_t CardSplitViewController.keyCommands.getter()
{
  if (objc_msgSend(v0, sel_isCollapsed)) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647B78);
  id v2 = sub_1B5E46240(9, 0xE100000000000000, 0, (uint64_t)sel_toggleResponderPane);
  id v3 = sub_1B5E46240(9, 0xE100000000000000, 0x20000, (uint64_t)sel_toggleResponderPane);
  id v4 = sub_1B5E46240(83, 0xE100000000000000, 1572864, (uint64_t)sel_toggleSideBarVisibility);
  sub_1B5ED9A98(0, (unint64_t *)&qword_1EB64B370, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B61C79C0;
  *(void *)(v5 + 32) = v2;
  *(void *)(v5 + 40) = v3;
  *(void *)(v5 + 48) = v4;
  uint64_t v6 = v5;
  sub_1B61B2510();
  return v6;
}

void sub_1B5F38F38()
{
  if ((objc_msgSend(v0, sel_isCollapsed) & 1) == 0)
  {
    uint64_t v1 = (uint64_t)OUTLINED_FUNCTION_15_0();
    sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
    unint64_t v2 = OUTLINED_FUNCTION_8_25();

    if (v2 >> 62)
    {
      OUTLINED_FUNCTION_4_8();
      sub_1B61B3530();
      OUTLINED_FUNCTION_53();
    }
    else
    {
      uint64_t v1 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v1 >= 2)
    {
      id v3 = sub_1B6073300(*(void **)&v0[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_primaryCardContainerController]);
      id v4 = OUTLINED_FUNCTION_15_0();
      uint64_t v5 = sub_1B61B24E0();

      sub_1B5E7FBF8(1, (v5 & 0xC000000000000001) == 0, v5);
      if ((v5 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1BA9B04B0](1, v5);
      }
      else {
        id v6 = *(id *)(v5 + 40);
      }
      id v7 = v6;
      swift_bridgeObjectRelease();
      id v8 = sub_1B6073300(v7);

      if ((objc_msgSend(v8, sel_isFirstResponder) & 1) != 0
        || (objc_msgSend(v8, sel_canBecomeFirstResponder) & 1) == 0)
      {
        uint64_t v10 = (void *)swift_dynamicCastObjCProtocolConditional();
        if (v10) {
          objc_msgSend(v10, sel_startTraversingWithDirection_, 0);
        }
        else {
          objc_msgSend(v3, sel_becomeFirstResponder);
        }
        v0[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_splitViewFocus] = 0;
        id v11 = objc_msgSend(v0, sel_childViewControllers);
        sub_1B61B24E0();

        unint64_t v12 = OUTLINED_FUNCTION_8_1();
        sub_1B5F35038(v12, v13);
      }
      else
      {
        unint64_t v9 = (void *)swift_dynamicCastObjCProtocolConditional();
        if (v9) {
          objc_msgSend(v9, sel_startTraversingWithDirection_, 0, &unk_1F0FB2108);
        }
        else {
          objc_msgSend(v8, sel_becomeFirstResponder, &unk_1F0FB2108);
        }
        v0[OBJC_IVAR____TtC5TeaUI23CardSplitViewController_splitViewFocus] = 1;
        id v14 = objc_msgSend(v0, sel_childViewControllers);
        sub_1B61B24E0();

        unint64_t v15 = OUTLINED_FUNCTION_8_1();
        sub_1B5F35054(v15, v16);
      }
      swift_bridgeObjectRelease();
    }
  }
  OUTLINED_FUNCTION_7_8();
}

void sub_1B5F391F8()
{
  objc_msgSend(v0, sel_togglePrimaryViewVisibilityAnimated_, 1);
  uint64_t v1 = (uint64_t)OUTLINED_FUNCTION_15_0();
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
  unint64_t v2 = OUTLINED_FUNCTION_8_25();

  if (v2 >> 62)
  {
    OUTLINED_FUNCTION_4_8();
    sub_1B61B3530();
    OUTLINED_FUNCTION_53();
  }
  else
  {
    uint64_t v1 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v1 < 2)
  {
    OUTLINED_FUNCTION_7_8();
  }
  else
  {
    id v3 = OUTLINED_FUNCTION_15_0();
    uint64_t v4 = sub_1B61B24E0();

    OUTLINED_FUNCTION_10_28();
    if (v3) {
      MEMORY[0x1BA9B04B0](1, v4);
    }
    else {
      id v5 = *(id *)(v4 + 40);
    }
    OUTLINED_FUNCTION_53();
    id v11 = sub_1B6073300(v3);

    if (objc_msgSend(v11, sel_canBecomeFirstResponder)
      && (objc_msgSend(v11, sel_isFirstResponder) & 1) == 0)
    {
      objc_msgSend(v11, sel_becomeFirstResponder);
      *((unsigned char *)v0 + OBJC_IVAR____TtC5TeaUI23CardSplitViewController_splitViewFocus) = 1;
      id v6 = objc_msgSend(v0, sel_childViewControllers);
      sub_1B61B24E0();

      unint64_t v7 = OUTLINED_FUNCTION_8_1();
      sub_1B5F35054(v7, v8);
      swift_bridgeObjectRelease();
    }
    OUTLINED_FUNCTION_7_8();
  }
}

uint64_t sub_1B5F393F0()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1B5F39438()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 32);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_1B5F39468(void *a1, char *a2)
{
  return sub_1B5F37330(a1, a2);
}

uint64_t sub_1B5F39470(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_1B5E7FD50(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1B5F39484()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B5F394BC()
{
  swift_release();
  sub_1B5E7FD50(*(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));

  return swift_deallocObject();
}

void *sub_1B5F39508(uint64_t a1)
{
  return sub_1B5F37A54(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void **)(v1 + 32), *(unsigned char *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_1B5F3951C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_1B5E80024(a1, a2, a3);
  }
  return a1;
}

uint64_t method lookup function for CardSplitViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CardSplitViewController);
}

uint64_t dispatch thunk of CardSplitViewController.__allocating_init(cardContainerController:commandContainer:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

unsigned char *storeEnumTagSinglePayload for CardSplitViewController.Event(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B5F395F8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardSplitViewController.Event()
{
  return &type metadata for CardSplitViewController.Event;
}

unint64_t sub_1B5F39634()
{
  unint64_t result = qword_1EB63EFE8;
  if (!qword_1EB63EFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB63EFE8);
  }
  return result;
}

uint64_t sub_1B5F39680()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B5F396B8()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1B5F396F8()
{
  sub_1B5F37464(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1B5F39704(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1B61B08B0();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1B5F39764()
{
  unint64_t result = qword_1EB642638;
  if (!qword_1EB642638)
  {
    sub_1B61B08B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB642638);
  }
  return result;
}

unint64_t sub_1B5F397B4()
{
  unint64_t result = qword_1EB647AA0;
  if (!qword_1EB647AA0)
  {
    sub_1B5F39704(255, &qword_1EB647A98, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB647AA0);
  }
  return result;
}

uint64_t sub_1B5F39820()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocObject();
}

void sub_1B5F39868()
{
  sub_1B5F37E08(*(void **)(v0 + 16), (void *)(v0 + 24));
}

uint64_t sub_1B5F39878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_1B5F398D8(uint64_t a1, uint64_t a2)
{
  sub_1B5F358D8(a1, a2, v2);
}

uint64_t sub_1B5F398E0(uint64_t a1, uint64_t a2)
{
  return sub_1B5F35938(a1, a2, v2);
}

void sub_1B5F398E8(unsigned char *a1@<X8>)
{
  sub_1B5F359D8(v1, a1);
}

void sub_1B5F398F0(uint64_t a1, uint64_t a2)
{
  sub_1B5F35AAC(a1, a2, v2);
}

void *sub_1B5F398F8(uint64_t a1, uint64_t a2)
{
  return sub_1B5F35D14(a1, a2, v2);
}

BOOL static HighlightStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t HighlightStyle.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t HighlightStyle.hashValue.getter()
{
  return sub_1B61B3940();
}

unint64_t sub_1B5F399A0()
{
  unint64_t result = qword_1E9DAA570;
  if (!qword_1E9DAA570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA570);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HighlightStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F39AB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HighlightStyle()
{
  return &type metadata for HighlightStyle;
}

uint64_t dispatch thunk of Highlightable.highlightStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ViewHighlightable.isHighlightable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ViewHighlightable.isHighlighted.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ViewHighlightable.isHighlighted.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ViewHighlightable.isHighlighted.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

id sub_1B5F39B54(uint64_t a1)
{
  return sub_1B5F39BA0(a1, (SEL *)&selRef_ts_presentationTransitionDidEndNotification, &qword_1EB647BF8);
}

id static NSNotificationName.presentationTransitionDidEnd.getter()
{
  return sub_1B5F39C30(&qword_1EB648D20, (void **)&qword_1EB647BF8);
}

id sub_1B5F39B8C(uint64_t a1)
{
  return sub_1B5F39BA0(a1, (SEL *)&selRef_ts_dismissalTransitionDidEndNotification, &qword_1EB647BF0);
}

id sub_1B5F39BA0(uint64_t a1, SEL *a2, uint64_t *a3)
{
  id result = [self *a2];
  uint64_t v5 = (uint64_t)result;
  if (!result)
  {
    sub_1B61B20F0();
    uint64_t v5 = sub_1B61B20C0();
    id result = (id)swift_bridgeObjectRelease();
  }
  *a3 = v5;
  return result;
}

id static NSNotificationName.dismissalTransitionDidEnd.getter()
{
  return sub_1B5F39C30(&qword_1EB648E48, (void **)&qword_1EB647BF0);
}

id sub_1B5F39C30(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  int v3 = *a2;
  return v3;
}

uint64_t BlueprintTraversalCollectionBuilder.__allocating_init(collectionProvider:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t BlueprintTraversalCollectionBuilder.init(collectionProvider:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t (*BlueprintTraversalCollectionBuilder.build<A, B, C, D>(blueprint:layoutBlueprint:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10))()
{
  uint64_t v123 = a2;
  uint64_t v142 = a9;
  uint64_t v135 = *v10;
  uint64_t v136 = a1;
  uint64_t v17 = type metadata accessor for BlueprintSection();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v121 = sub_1B61B3520();
  OUTLINED_FUNCTION_0_13();
  uint64_t v112 = v18;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v19);
  uint64_t v120 = (char *)v109 - v20;
  uint64_t v143 = a5;
  uint64_t v145 = a5;
  uint64_t v146 = a6;
  uint64_t v147 = a9;
  uint64_t v148 = a10;
  uint64_t v139 = a10;
  uint64_t v119 = type metadata accessor for BlueprintLayoutSection();
  OUTLINED_FUNCTION_0_13();
  uint64_t v110 = v21;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v22);
  uint64_t v128 = (char *)v109 - v23;
  OUTLINED_FUNCTION_0_13();
  uint64_t v127 = v24;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v25);
  id v27 = (char *)v109 - v26;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_1B61B2F80();
  OUTLINED_FUNCTION_0_13();
  uint64_t v133 = v28;
  uint64_t v30 = MEMORY[0x1F4188790](v29);
  uint64_t v132 = (char *)v109 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  id v34 = (uint64_t *)((char *)v109 - v33);
  uint64_t v130 = a3;
  uint64_t v131 = a4;
  uint64_t v145 = a3;
  uint64_t v146 = a4;
  uint64_t v141 = a7;
  uint64_t v147 = a7;
  uint64_t v148 = a8;
  uint64_t v35 = v32;
  uint64_t v129 = a8;
  id v36 = v27;
  uint64_t v37 = type metadata accessor for Blueprint();
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v134 = (uint64_t *)sub_1B61B3520();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v39);
  uint64_t v40 = sub_1B61B3510();
  OUTLINED_FUNCTION_0_13();
  v109[1] = v41;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v42);
  unint64_t v44 = (char *)v109 - v43;
  uint64_t v118 = v135[10];
  uint64_t v117 = type metadata accessor for BlueprintTraversalCollectionItem();
  uint64_t v144 = sub_1B61B2590();
  uint64_t v45 = v37;
  uint64_t v46 = v142;
  MEMORY[0x1BA9AF500](v45, v38);
  uint64_t v47 = (uint64_t)v128;
  sub_1B61B34F0();
  uint64_t v125 = v40;
  uint64_t v124 = v44;
  sub_1B61B3500();
  uint64_t v48 = TupleTypeMetadata2;
  id v49 = *(void (**)(uint64_t *, char *, uint64_t))(v133 + 32);
  v133 += 32;
  v49(v34, v132, v35);
  if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v48) != 1)
  {
    uint64_t v113 = *(void (**)(char *, char *, uint64_t))(v127 + 32);
    v112 += 8;
    v127 += 32;
    uint64_t v111 = v127 - 24;
    v110 += 8;
    uint64_t v140 = a6;
    uint64_t v116 = v17;
    uint64_t v138 = v36;
    uint64_t v115 = v35;
    uint64_t v137 = v34;
    uint64_t v114 = v49;
    do
    {
      uint64_t v136 = *v34;
      uint64_t v50 = v136;
      v113(v36, (char *)v34 + *(int *)(v48 + 48), v17);
      uint64_t v145 = v143;
      uint64_t v146 = a6;
      uint64_t v147 = v46;
      uint64_t v148 = v139;
      uint64_t v51 = v139;
      uint64_t v52 = type metadata accessor for BlueprintLayout();
      BlueprintLayout.subscript.getter(v50, v52);
      uint64_t v53 = MEMORY[0x1BA9AF500](v17, WitnessTable);
      uint64_t v135 = v109;
      uint64_t v54 = MEMORY[0x1F4188790](v53);
      uint64_t v134 = v109;
      uint64_t v55 = v118;
      uint64_t v56 = v130;
      uint64_t v57 = v131;
      v109[-10] = v118;
      v109[-9] = v56;
      uint64_t v58 = v143;
      v109[-8] = v57;
      v109[-7] = v58;
      uint64_t v60 = v141;
      uint64_t v59 = v142;
      v109[-6] = a6;
      v109[-5] = v60;
      uint64_t v61 = v129;
      v109[-4] = v129;
      v109[-3] = v59;
      v109[-2] = v51;
      v109[-1] = v47;
      MEMORY[0x1F4188790](v54);
      v109[-12] = v55;
      v109[-11] = v56;
      uint64_t v62 = v143;
      v109[-10] = v57;
      v109[-9] = v62;
      v109[-8] = a6;
      v109[-7] = v63;
      uint64_t v64 = v142;
      v109[-6] = v61;
      v109[-5] = v64;
      v109[-4] = v51;
      v109[-3] = (uint64_t)sub_1B5F3B1F0;
      v109[-2] = v65;
      swift_getTupleTypeMetadata3();
      swift_getWitnessTable();
      uint64_t v66 = sub_1B61B2350();
      OUTLINED_FUNCTION_5_1();
      uint64_t v68 = v67();
      OUTLINED_FUNCTION_3_50(v68, v69, v70, v71, v72, v73, v74, v75, v109[0]);
      uint64_t v145 = v66;
      MEMORY[0x1F4188790](v76);
      v109[-10] = v55;
      v109[-9] = v56;
      uint64_t v77 = v143;
      v109[-8] = v57;
      v109[-7] = v77;
      uint64_t v78 = v139;
      uint64_t v79 = v141;
      v109[-6] = v140;
      v109[-5] = v79;
      uint64_t v80 = v142;
      v109[-4] = v61;
      v109[-3] = v80;
      v109[-2] = v78;
      uint64_t v81 = sub_1B61B2650();
      swift_getWitnessTable();
      uint64_t v82 = sub_1B61B23D0();
      uint64_t v83 = swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_3_50(v83, v84, v85, v86, v87, v88, v89, v90, v109[0]);
      uint64_t v145 = v82;
      MEMORY[0x1F4188790](v91);
      v109[-10] = v55;
      v109[-9] = v56;
      uint64_t v17 = v116;
      v109[-8] = v57;
      uint64_t v92 = v115;
      uint64_t v46 = v142;
      uint64_t v93 = v140;
      v109[-7] = v143;
      v109[-6] = v93;
      v109[-5] = v141;
      v109[-4] = v61;
      v109[-3] = v46;
      v109[-2] = v78;
      v109[-1] = v136;
      uint64_t v94 = swift_getWitnessTable();
      a6 = v140;
      uint64_t v95 = v81;
      uint64_t v47 = (uint64_t)v128;
      sub_1B5E37E58((void (*)(char *, uint64_t))sub_1B5F3B284, (uint64_t)&v109[-12], v95, v117, MEMORY[0x1E4FBC248], v94, MEMORY[0x1E4FBC278], v96);
      swift_bridgeObjectRelease();
      uint64_t v97 = v114;
      sub_1B61B25C0();
      swift_bridgeObjectRelease();
      id v36 = v138;
      OUTLINED_FUNCTION_5_1();
      v98();
      OUTLINED_FUNCTION_5_1();
      v99();
      uint64_t v100 = v132;
      sub_1B61B3500();
      uint64_t v48 = TupleTypeMetadata2;
      uint64_t v101 = v100;
      id v34 = v137;
      v97(v137, v101, v92);
    }
    while (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v48) != 1);
  }
  OUTLINED_FUNCTION_5_1();
  v102();
  uint64_t v103 = v144;
  uint64_t v104 = (void *)swift_allocObject();
  uint64_t v105 = v131;
  v104[2] = v130;
  v104[3] = v105;
  v104[4] = v143;
  v104[5] = a6;
  uint64_t v106 = v129;
  v104[6] = v141;
  v104[7] = v106;
  uint64_t v107 = v139;
  v104[8] = v46;
  v104[9] = v107;
  v104[10] = v109[2];
  v104[11] = v103;
  swift_retain();
  return sub_1B5F3B1B8;
}

uint64_t sub_1B5F3A614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t *a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  v24[0] = a5;
  v24[1] = a3;
  uint64_t v16 = type metadata accessor for BlueprintLayoutItem();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)v24 - v17;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v20 = (char *)a7 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v21 = (char *)a7 + *(int *)(TupleTypeMetadata3 + 64);
  *a7 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v20, a2, a4);
  long long v24[2] = v24[0];
  v24[3] = a6;
  v24[4] = a10;
  v24[5] = a11;
  uint64_t v22 = type metadata accessor for BlueprintLayoutSection();
  BlueprintLayoutSection.subscript.getter(a1, v22);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(a6 - 8) + 32))(v21, v18, a6);
  return __swift_storeEnumTagSinglePayload((uint64_t)a7, 0, 1, TupleTypeMetadata3);
}

uint64_t sub_1B5F3A79C(char *a1, uint64_t (*a2)(uint64_t, char *))
{
  uint64_t v4 = *(void *)a1;
  type metadata accessor for BlueprintItem();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t sub_1B5F3A82C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v58 = a2;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v11 = MEMORY[0x1F4188790](TupleTypeMetadata3);
  uint64_t v13 = (void *)((char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = *(int *)(v14 + 48);
  uint64_t v17 = (char *)v44 + v16 - v15;
  uint64_t v18 = *(int *)(v14 + 64);
  uint64_t v19 = (char *)v44 + v18 - v15;
  uint64_t v20 = (char *)a1 + v18;
  uint64_t v47 = a1;
  *(void *)((char *)v44 - v15) = *a1;
  uint64_t v21 = *(void *)(a5 - 8);
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  v46(v17, (char *)a1 + v16, a5);
  uint64_t v22 = *(void *)(a7 - 8);
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  v44[1] = v22 + 16;
  v45(v19, v20, a7);
  sub_1B5F3B344();
  if (swift_dynamicCast())
  {
    sub_1B5E30E70(&v52, (uint64_t)v55);
    v44[0] = *(void *)(v21 + 8);
    ((void (*)(char *, uint64_t))v44[0])(v17, a5);
    uint64_t v23 = *(int *)(TupleTypeMetadata3 + 48);
    uint64_t v24 = (char *)v13 + v23;
    uint64_t v25 = *(int *)(TupleTypeMetadata3 + 64);
    uint64_t v26 = (char *)v13 + v25;
    id v27 = (char *)v58 + v23;
    uint64_t v28 = (char *)v58 + v25;
    *uint64_t v13 = *v58;
    v46((char *)v13 + v23, v27, a5);
    v45(v26, v28, a7);
    if (swift_dynamicCast())
    {
      sub_1B5E30E70(v50, (uint64_t)&v52);
      ((void (*)(char *, uint64_t))v44[0])(v24, a5);
      uint64_t v29 = *v47;
      uint64_t v30 = v56;
      uint64_t v31 = v57;
      __swift_project_boxed_opaque_existential_1(v55, v56);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v31 + 8))(v50, v30, v31);
      uint64_t v32 = *(void *)&v50[0];
      int v33 = BYTE8(v50[0]);
      uint64_t v34 = *v58;
      uint64_t v35 = *((void *)&v53 + 1);
      uint64_t v36 = v54;
      __swift_project_boxed_opaque_existential_1(&v52, *((uint64_t *)&v53 + 1));
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v36 + 8))(&v48, v35, v36);
      uint64_t v37 = v48;
      int v38 = v49;
      sub_1B5F3B450();
      if (v33)
      {
        if (v33 != 2 || v32)
        {
          if (v38)
          {
            if (v38 == 2 && !v37) {
              goto LABEL_40;
            }
            if (v33 != 1)
            {
              BOOL v39 = v33 == 2 && v32 == 1;
              if (!v39 && v38 != 1 && (v38 != 2 || v37 != 1))
              {
                uint64_t result = sub_1B61B3750();
                __break(1u);
                return result;
              }
            }
          }
          uint64_t v37 = 0;
LABEL_40:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
          return v37;
        }
        if (v38)
        {
          if (v38 == 2)
          {
            if (v37) {
              BOOL v42 = 1;
            }
            else {
              BOOL v42 = v29 < v34;
            }
            goto LABEL_37;
          }
LABEL_34:
          uint64_t v37 = 1;
          goto LABEL_40;
        }
        BOOL v42 = v29 < v37;
      }
      else
      {
        if (v38)
        {
          if (v38 == 2)
          {
            if (v37) {
              BOOL v42 = 1;
            }
            else {
              BOOL v42 = v32 < v34;
            }
            goto LABEL_37;
          }
          goto LABEL_34;
        }
        BOOL v42 = v32 < v37;
      }
LABEL_37:
      uint64_t v37 = v42;
      goto LABEL_40;
    }
    uint64_t v41 = v58;
    uint64_t v51 = 0;
    memset(v50, 0, sizeof(v50));
    sub_1B5F3B39C((uint64_t)v50);
    ((void (*)(char *, uint64_t))v44[0])(v24, a5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  }
  else
  {
    uint64_t v41 = v58;
    uint64_t v54 = 0;
    long long v52 = 0u;
    long long v53 = 0u;
    sub_1B5F3B39C((uint64_t)&v52);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v17, a5);
  }
  return *v47 < *v41;
}

uint64_t sub_1B5F3ACA0@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v30 = a3;
  uint64_t v32 = a2;
  uint64_t v33 = a6;
  uint64_t v9 = sub_1B61AFCB0();
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v31 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v13 = MEMORY[0x1F4188790](TupleTypeMetadata3 - 8);
  uint64_t v14 = *(void *)(a4 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(int *)(v15 + 56);
  uint64_t v20 = &v19[v18];
  uint64_t v21 = *(int *)(v15 + 72);
  uint64_t v22 = &v19[v21];
  uint64_t v23 = &a1[v21];
  *(void *)uint64_t v19 = *(void *)a1;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(&v19[v18], &a1[v18], a4);
  uint64_t v24 = a5;
  uint64_t v25 = *(void *)(a5 - 8);
  uint64_t v26 = v23;
  uint64_t v27 = v24;
  (*(void (**)(char *, char *))(v25 + 16))(v22, v26);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v20, a4);
  swift_dynamicCast();
  uint64_t v28 = (uint64_t)v31;
  MEMORY[0x1BA9ACE10](*(void *)a1, v32);
  sub_1B60B3770(v28, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v22, v27);
}

uint64_t sub_1B5F3AF50(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1B60B3820(a2, &v5);
  uint64_t v3 = v5;
  swift_beginAccess();
  *(void *)(v2 + 16) = v3;
  sub_1B61B1F70();
  return swift_bridgeObjectRelease();
}

uint64_t BlueprintTraversalCollectionBuilder.deinit()
{
  swift_release();
  return v0;
}

uint64_t BlueprintTraversalCollectionBuilder.__deallocating_deinit()
{
  BlueprintTraversalCollectionBuilder.deinit();
  return swift_deallocClassInstance();
}

uint64_t (*BlueprintTraversalCollectionBuilder.process<A, B, C, D>(blueprint:layoutBlueprint:layoutCollection:layoutOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12))()
{
  return sub_1B5F3B1B8;
}

uint64_t (*sub_1B5F3B080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12))()
{
  return sub_1B5F3B1B8;
}

uint64_t (*BlueprintTraversalCollectionBuilder.process<A, B, C, D>(blueprint:layoutBlueprint:layoutOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11))()
{
  return sub_1B5F3B1B8;
}

uint64_t (*sub_1B5F3B128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11))()
{
  return sub_1B5F3B1B8;
}

uint64_t sub_1B5F3B178()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B5F3B1B8()
{
  return sub_1B5F3AF50(*(void *)(v0 + 80), *(void *)(v0 + 88));
}

uint64_t sub_1B5F3B1F0()
{
  __n128 v1 = OUTLINED_FUNCTION_1_63();
  return sub_1B5F3A614(v2, v3, *(void *)(v0 + 88), v4, v5, v6, v7, v1.n128_i64[0], v1.n128_i64[1], v8, v9);
}

uint64_t sub_1B5F3B220()
{
  OUTLINED_FUNCTION_1_63();
  return sub_1B5F3A79C(v1, *(uint64_t (**)(uint64_t, char *))(v0 + 88));
}

uint64_t sub_1B5F3B250()
{
  OUTLINED_FUNCTION_5_32();
  return sub_1B5F3A82C(v0, v1, v2, v3, v4, v5, v6) & 1;
}

uint64_t sub_1B5F3B284()
{
  OUTLINED_FUNCTION_5_32();
  return sub_1B5F3ACA0(v1, *(void *)(v0 + 88), v2, v3, v4, v5);
}

uint64_t sub_1B5F3B2B8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for BlueprintTraversalCollectionBuilder()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for BlueprintTraversalCollectionBuilder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BlueprintTraversalCollectionBuilder);
}

uint64_t dispatch thunk of BlueprintTraversalCollectionBuilder.__allocating_init(collectionProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

unint64_t sub_1B5F3B344()
{
  unint64_t result = qword_1EB642EA0;
  if (!qword_1EB642EA0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB642EA0);
  }
  return result;
}

uint64_t sub_1B5F3B39C(uint64_t a1)
{
  sub_1B5F3B3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B5F3B3F8()
{
  if (!qword_1E9DAA538)
  {
    sub_1B5F3B344();
    unint64_t v0 = sub_1B61B2F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAA538);
    }
  }
}

void sub_1B5F3B450()
{
  if (!qword_1EB641F48)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB641F48);
    }
  }
}

BOOL static ScrollDirection.Horizontal.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ScrollDirection.Horizontal.hash(into:)()
{
  return sub_1B61B3910();
}

void ScrollDirection.horizontal.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

void ScrollDirection.vertical.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

TeaUI::ScrollDirection __swiftcall ScrollDirection.init(horizontal:vertical:)(TeaUI::ScrollDirection::Horizontal horizontal, TeaUI::ScrollDirection::Vertical vertical)
{
  char v3 = *(unsigned char *)vertical;
  unsigned char *v2 = *(unsigned char *)horizontal;
  v2[1] = v3;
  result.horizontal = horizontal;
  return result;
}

TeaUI::ScrollDirection __swiftcall ScrollDirection.init(fromContentOffset:toContentOffset:)(CGPoint fromContentOffset, CGPoint toContentOffset)
{
  char v3 = 2 * (toContentOffset.x >= fromContentOffset.x);
  if (fromContentOffset.x < toContentOffset.x) {
    char v3 = 1;
  }
  char v4 = 2 * (toContentOffset.y >= fromContentOffset.y);
  if (fromContentOffset.y < toContentOffset.y) {
    char v4 = 1;
  }
  char *v2 = v3;
  v2[1] = v4;
  return result;
}

unint64_t sub_1B5F3B560()
{
  unint64_t result = qword_1E9DAA578;
  if (!qword_1E9DAA578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA578);
  }
  return result;
}

unint64_t sub_1B5F3B5B0()
{
  unint64_t result = qword_1E9DAA580;
  if (!qword_1E9DAA580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA580);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ScrollDirection(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 65282 <= 0xFFFEFFFF) {
      int v2 = 2;
    }
    else {
      int v2 = 4;
    }
    if (a2 + 65282 < 0xFF0000) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((unsigned char *)a1 + 2)) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 16)) - 65283;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ScrollDirection(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65282 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 254;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F3B754);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for ScrollDirection()
{
}

void type metadata accessor for ScrollDirection.Vertical()
{
}

unsigned char *_s5TeaUI15ScrollDirectionV10HorizontalOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F3B864);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for ScrollDirection.Horizontal()
{
}

BOOL static CoverView.Animation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CoverView.Animation.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t CoverView.Animation.hashValue.getter()
{
  return sub_1B61B3940();
}

void __swiftcall CoverView.makeView()(UIView_optional *__return_ptr retstr)
{
  sub_1B5F3BD10(v1, (char *)&__dst);
  switch(v67)
  {
    case 1:
      long long v53 = __dst;
      uint64_t v8 = sub_1B5E30E70(&v62, (uint64_t)v58);
      OUTLINED_FUNCTION_2_56(v8, v9, v10, v11, v12, v13, v14, v53);
      id v15 = objc_allocWithZone((Class)type metadata accessor for ErrorView());
      objc_msgSend(ErrorView.init(model:styler:)(v55, v56), sel_setAutoresizingMask_, 18);
      goto LABEL_9;
    case 2:
      long long v54 = __dst;
      uint64_t v16 = (unsigned char *)v62;
      char v17 = v65;
      uint64_t v18 = sub_1B5E30E70(&v63, (uint64_t)v58);
      OUTLINED_FUNCTION_2_56(v18, v19, v20, v21, v22, v23, v24, v54);
      id v25 = objc_allocWithZone((Class)type metadata accessor for ErrorView());
      objc_msgSend(ErrorView.init(model:styler:)(v55, v56), sel_setAutoresizingMask_, 18);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
      OUTLINED_FUNCTION_1_64();
      *uint64_t v16 = v17;
      return;
    case 3:
      sub_1B5E30E70(&__dst, (uint64_t)v58);
      __swift_project_boxed_opaque_existential_1(v58, v59);
      uint64_t v26 = OUTLINED_FUNCTION_0_64();
      uint64_t v28 = v27(v26);
      uint64_t v29 = v59;
      uint64_t v30 = v60;
      __swift_project_boxed_opaque_existential_1(v58, v59);
      uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
      __swift_project_boxed_opaque_existential_1(v58, v59);
      uint64_t v32 = OUTLINED_FUNCTION_1_36();
      uint64_t v34 = v33(v32);
      objc_allocWithZone((Class)type metadata accessor for ActivityIndicatorLoadingView());
      uint64_t v35 = v28;
      uint64_t v36 = (void *)v31;
      uint64_t v37 = (void *)v34;
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      goto LABEL_7;
    case 4:
      uint64_t v40 = *((void *)&v63 + 1);
      uint64_t v41 = v64;
      sub_1B5E30E70(&__dst, (uint64_t)v58);
      __swift_project_boxed_opaque_existential_1(v58, v59);
      uint64_t v42 = OUTLINED_FUNCTION_1_36();
      uint64_t v44 = v43(v42);
      __swift_project_boxed_opaque_existential_1(v58, v59);
      uint64_t v45 = OUTLINED_FUNCTION_4_11();
      uint64_t v47 = v46(v45);
      uint64_t v48 = v59;
      uint64_t v49 = v60;
      __swift_project_boxed_opaque_existential_1(v58, v59);
      uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 24))(v48, v49);
      objc_allocWithZone((Class)type metadata accessor for ActivityIndicatorLoadingView());
      uint64_t v35 = v44;
      uint64_t v36 = (void *)v47;
      uint64_t v37 = (void *)v50;
      uint64_t v38 = v40;
      uint64_t v39 = v41;
LABEL_7:
      objc_msgSend(ActivityIndicatorLoadingView.init(style:color:backgroundColor:activityText:)(v35, v36, v37, v38, v39), sel_setAutoresizingMask_, 18);
      ActivityIndicatorLoadingView.startAnimating()();
      goto LABEL_9;
    case 5:
    case 7:
      return;
    case 6:
      sub_1B5E30E70(&__dst, (uint64_t)v58);
      __swift_project_boxed_opaque_existential_1(v58, v59);
      uint64_t v51 = OUTLINED_FUNCTION_0_64();
      v52(v51);
LABEL_9:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
      break;
    default:
      long long v2 = __dst;
      long long v3 = v62;
      unsigned int v4 = (void *)v63;
      char v5 = v66;
      sub_1B5E30E70((long long *)((char *)&v63 + 8), (uint64_t)v58);
      v56[0] = v2;
      v56[1] = v3;
      uint64_t v57 = v4;
      sub_1B5E176E4((uint64_t)v58, (uint64_t)v55);
      id v6 = objc_allocWithZone((Class)type metadata accessor for EmptyStateView());
      id v7 = v4;
      sub_1B61B1F70();
      sub_1B61B1F70();
      objc_msgSend(EmptyStateView.init(model:styler:)((uint64_t *)v56, v55), sel_setAutoresizingMask_, 18);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
      OUTLINED_FUNCTION_1_64();
      **((unsigned char **)&v2 + 1) = v5;
      break;
  }
}

char *sub_1B5F3BD10(unsigned __int8 *__src, char *__dst)
{
  return __dst;
}

Swift::Void __swiftcall CoverView.layout(with:)(TeaUI::CoverViewOptions with)
{
  uint64_t v2 = *(void *)with.traitCollection.super.isa;
  uint64_t v3 = *((void *)with.traitCollection.super.isa + 1);
  uint64_t v4 = *((void *)with.traitCollection.super.isa + 2);
  sub_1B5F3BD10(v1, (char *)&__dst);
  switch(v19[41])
  {
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      p_dst = (long long *)&v17;
      goto LABEL_9;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      p_dst = (long long *)&v18;
      goto LABEL_9;
    case 3:
      goto LABEL_6;
    case 4:
      swift_bridgeObjectRelease();
LABEL_6:
      p_dst = &__dst;
      goto LABEL_9;
    case 5:
      sub_1B5E68550((uint64_t)&__dst);
      return;
    case 6:
      sub_1B5E30E70(&__dst, (uint64_t)v13);
      uint64_t v7 = v14;
      uint64_t v8 = v15;
      __swift_project_boxed_opaque_existential_1(v13, v14);
      __swift_project_boxed_opaque_existential_1(v13, v14);
      uint64_t v9 = OUTLINED_FUNCTION_4_11();
      uint64_t v11 = (void *)v10(v9);
      v12[0] = v2;
      v12[1] = v3;
      v12[2] = v4;
      (*(void (**)(void *, void *, uint64_t, uint64_t))(v8 + 16))(v11, v12, v7, v8);

      p_dst = (long long *)v13;
      goto LABEL_9;
    case 7:
      return;
    default:
      char v5 = v18;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      p_dst = (long long *)v19;
LABEL_9:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)p_dst);
      return;
  }
}

unint64_t sub_1B5F3BEE8()
{
  unint64_t result = qword_1E9DAA588;
  if (!qword_1E9DAA588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA588);
  }
  return result;
}

void destroy for CoverView(uint64_t a1)
{
  uint64_t v1 = a1;
  unsigned int v2 = *(unsigned __int8 *)(a1 + 81);
  if (v2 >= 7) {
    unsigned int v2 = *(_DWORD *)a1 + 7;
  }
  switch(v2)
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      a1 = v1 + 40;
      goto LABEL_7;
    case 1u:
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v1 + 16);
      goto LABEL_11;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = v1 + 32;
      goto LABEL_7;
    case 3u:
    case 6u:
LABEL_7:
      __swift_destroy_boxed_opaque_existential_1(a1);
      break;
    case 4u:
      __swift_destroy_boxed_opaque_existential_1(a1);
LABEL_11:
      swift_bridgeObjectRelease();
      break;
    case 5u:
      uint64_t v3 = *(void **)a1;

      break;
    default:
      return;
  }
}

char *initializeWithCopy for CoverView(char *__dst, unsigned __int8 *__src)
{
  unsigned int v4 = __src[81];
  if (v4 >= 7) {
    unsigned int v4 = *(_DWORD *)__src + 7;
  }
  switch(v4)
  {
    case 0u:
      uint64_t v5 = *((void *)__src + 1);
      *(void *)long long __dst = *(void *)__src;
      *((void *)__dst + 1) = v5;
      uint64_t v6 = *((void *)__src + 3);
      *((void *)__dst + 2) = *((void *)__src + 2);
      *((void *)__dst + 3) = v6;
      uint64_t v7 = (void *)*((void *)__src + 4);
      *((void *)__dst + 4) = v7;
      long long v8 = *((_OWORD *)__src + 4);
      *((_OWORD *)__dst + 4) = v8;
      uint64_t v9 = v8;
      uint64_t v10 = **(void (***)(char *, unsigned __int8 *, uint64_t))(v8 - 8);
      sub_1B61B1F70();
      sub_1B61B1F70();
      id v11 = v7;
      v10(__dst + 40, __src + 40, v9);
      *((_WORD *)__dst + 40) = __src[80];
      return __dst;
    case 1u:
      uint64_t v12 = *((void *)__src + 1);
      *(void *)long long __dst = *(void *)__src;
      *((void *)__dst + 1) = v12;
      long long v13 = *(_OWORD *)(__src + 40);
      *(_OWORD *)(__dst + 40) = v13;
      uint64_t v14 = v13;
      uint64_t v15 = **(void (***)(char *, unsigned __int8 *, uint64_t))(v13 - 8);
      sub_1B61B1F70();
      v15(__dst + 16, __src + 16, v14);
      uint64_t v16 = *((void *)__src + 8);
      *((void *)__dst + 7) = *((void *)__src + 7);
      *((void *)__dst + 8) = v16;
      char v17 = 1;
      goto LABEL_10;
    case 2u:
      uint64_t v18 = *((void *)__src + 1);
      *(void *)long long __dst = *(void *)__src;
      *((void *)__dst + 1) = v18;
      uint64_t v19 = *((void *)__src + 3);
      *((void *)__dst + 2) = *((void *)__src + 2);
      *((void *)__dst + 3) = v19;
      long long v20 = *(_OWORD *)(__src + 56);
      *(_OWORD *)(__dst + 56) = v20;
      uint64_t v21 = v20;
      uint64_t v22 = **(void (***)(char *, unsigned __int8 *, uint64_t))(v20 - 8);
      sub_1B61B1F70();
      sub_1B61B1F70();
      v22(__dst + 32, __src + 32, v21);
      __dst[72] = __src[72];
      char v23 = 2;
      goto LABEL_13;
    case 3u:
      long long v24 = *(_OWORD *)(__src + 24);
      *(_OWORD *)(__dst + 24) = v24;
      (**(void (***)(char *, unsigned __int8 *))(v24 - 8))(__dst, __src);
      char v23 = 3;
      goto LABEL_13;
    case 4u:
      long long v25 = *(_OWORD *)(__src + 24);
      *(_OWORD *)(__dst + 24) = v25;
      (**(void (***)(char *, unsigned __int8 *))(v25 - 8))(__dst, __src);
      uint64_t v26 = *((void *)__src + 6);
      *((void *)__dst + 5) = *((void *)__src + 5);
      *((void *)__dst + 6) = v26;
      char v17 = 4;
LABEL_10:
      __dst[81] = v17;
      sub_1B61B1F70();
      return __dst;
    case 5u:
      uint64_t v27 = *(void **)__src;
      *(void *)long long __dst = *(void *)__src;
      __dst[81] = 5;
      id v28 = v27;
      return __dst;
    case 6u:
      long long v29 = *(_OWORD *)(__src + 24);
      *(_OWORD *)(__dst + 24) = v29;
      (**(void (***)(char *, unsigned __int8 *))(v29 - 8))(__dst, __src);
      char v23 = 6;
LABEL_13:
      __dst[81] = v23;
      break;
    default:
      memcpy(__dst, __src, 0x52uLL);
      break;
  }
  return __dst;
}

id *assignWithCopy for CoverView(id *__dst, id *__src)
{
  unsigned int v2 = __dst;
  if (__dst != __src)
  {
    unsigned int v4 = *((unsigned __int8 *)__dst + 81);
    if (v4 >= 7) {
      unsigned int v4 = *(_DWORD *)__dst + 7;
    }
    switch(v4)
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        long long __dst = v2 + 5;
        goto LABEL_8;
      case 1u:
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v2 + 2));
        goto LABEL_10;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        long long __dst = v2 + 4;
        goto LABEL_8;
      case 3u:
      case 6u:
LABEL_8:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
        break;
      case 4u:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
LABEL_10:
        swift_bridgeObjectRelease();
        break;
      case 5u:

        break;
      default:
        break;
    }
    unsigned int v5 = *((unsigned __int8 *)__src + 81);
    if (v5 >= 7) {
      unsigned int v5 = *(_DWORD *)__src + 7;
    }
    switch(v5)
    {
      case 0u:
        id *v2 = *__src;
        v2[1] = __src[1];
        v2[2] = __src[2];
        v2[3] = __src[3];
        id v6 = __src[4];
        v2[4] = v6;
        id v7 = __src[8];
        v2[8] = v7;
        v2[9] = __src[9];
        long long v8 = (void (*)(id *, id *, id))**((void **)v7 - 1);
        sub_1B61B1F70();
        sub_1B61B1F70();
        id v9 = v6;
        v8(v2 + 5, __src + 5, v7);
        *((_WORD *)v2 + 40) = *((unsigned __int8 *)__src + 80);
        return v2;
      case 1u:
        id *v2 = *__src;
        v2[1] = __src[1];
        id v10 = __src[5];
        v2[5] = v10;
        void v2[6] = __src[6];
        id v11 = (void (*)(id *, id *, id))**((void **)v10 - 1);
        sub_1B61B1F70();
        v11(v2 + 2, __src + 2, v10);
        v2[7] = __src[7];
        v2[8] = __src[8];
        char v12 = 1;
        goto LABEL_21;
      case 2u:
        id *v2 = *__src;
        v2[1] = __src[1];
        v2[2] = __src[2];
        v2[3] = __src[3];
        id v13 = __src[7];
        v2[7] = v13;
        v2[8] = __src[8];
        uint64_t v14 = (void (*)(id *, id *, id))**((void **)v13 - 1);
        sub_1B61B1F70();
        sub_1B61B1F70();
        v14(v2 + 4, __src + 4, v13);
        *((unsigned char *)v2 + 72) = *((unsigned char *)__src + 72);
        char v15 = 2;
        goto LABEL_24;
      case 3u:
        id v16 = __src[3];
        v2[3] = v16;
        v2[4] = __src[4];
        (**((void (***)(id *, id *))v16 - 1))(v2, __src);
        char v15 = 3;
        goto LABEL_24;
      case 4u:
        id v17 = __src[3];
        v2[3] = v17;
        v2[4] = __src[4];
        (**((void (***)(id *, id *))v17 - 1))(v2, __src);
        v2[5] = __src[5];
        void v2[6] = __src[6];
        char v12 = 4;
LABEL_21:
        *((unsigned char *)v2 + 81) = v12;
        sub_1B61B1F70();
        return v2;
      case 5u:
        id v18 = *__src;
        id *v2 = *__src;
        *((unsigned char *)v2 + 81) = 5;
        id v19 = v18;
        return v2;
      case 6u:
        id v20 = __src[3];
        v2[3] = v20;
        v2[4] = __src[4];
        (**((void (***)(id *, id *))v20 - 1))(v2, __src);
        char v15 = 6;
LABEL_24:
        *((unsigned char *)v2 + 81) = v15;
        break;
      default:
        memcpy(v2, __src, 0x52uLL);
        break;
    }
  }
  return v2;
}

id *assignWithTake for CoverView(id *__dst, id *__src)
{
  unsigned int v2 = __dst;
  if (__dst != __src)
  {
    unsigned int v4 = *((unsigned __int8 *)__dst + 81);
    if (v4 >= 7) {
      unsigned int v4 = *(_DWORD *)__dst + 7;
    }
    switch(v4)
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        long long __dst = v2 + 5;
        goto LABEL_8;
      case 1u:
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v2 + 2));
        goto LABEL_10;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        long long __dst = v2 + 4;
        goto LABEL_8;
      case 3u:
      case 6u:
LABEL_8:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
        break;
      case 4u:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
LABEL_10:
        swift_bridgeObjectRelease();
        break;
      case 5u:

        break;
      default:
        break;
    }
    unsigned int v5 = *((unsigned __int8 *)__src + 81);
    if (v5 >= 7) {
      unsigned int v5 = *(_DWORD *)__src + 7;
    }
    switch(v5)
    {
      case 0u:
        memcpy(v2, __src, 0x51uLL);
        *((unsigned char *)v2 + 81) = 0;
        return v2;
      case 1u:
        memcpy(v2, __src, 0x48uLL);
        char v6 = 1;
        goto LABEL_23;
      case 2u:
        memcpy(v2, __src, 0x49uLL);
        char v6 = 2;
        goto LABEL_23;
      case 3u:
        long long v7 = *((_OWORD *)__src + 1);
        *(_OWORD *)unsigned int v2 = *(_OWORD *)__src;
        *((_OWORD *)v2 + 1) = v7;
        v2[4] = __src[4];
        char v6 = 3;
        goto LABEL_23;
      case 4u:
        long long v8 = *((_OWORD *)__src + 1);
        *(_OWORD *)unsigned int v2 = *(_OWORD *)__src;
        *((_OWORD *)v2 + 1) = v8;
        *((_OWORD *)v2 + 2) = *((_OWORD *)__src + 2);
        void v2[6] = __src[6];
        char v6 = 4;
        goto LABEL_23;
      case 5u:
        id *v2 = *__src;
        char v6 = 5;
        goto LABEL_23;
      case 6u:
        long long v9 = *((_OWORD *)__src + 1);
        *(_OWORD *)unsigned int v2 = *(_OWORD *)__src;
        *((_OWORD *)v2 + 1) = v9;
        v2[4] = __src[4];
        char v6 = 6;
LABEL_23:
        *((unsigned char *)v2 + 81) = v6;
        break;
      default:
        memcpy(v2, __src, 0x52uLL);
        break;
    }
  }
  return v2;
}

uint64_t getEnumTagSinglePayload for CoverView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9 && *(unsigned char *)(a1 + 82)) {
    return (*(_DWORD *)a1 + 249);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 81);
  if (v3 >= 8) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CoverView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(_WORD *)(result + 80) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_DWORD *)unint64_t result = a2 - 249;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 82) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 82) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 81) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B5F3CA70(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 81);
  if (result >= 7) {
    return (*(_DWORD *)a1 + 7);
  }
  return result;
}

uint64_t sub_1B5F3CA8C(uint64_t result, unsigned int a2)
{
  if (a2 > 6)
  {
    unsigned int v2 = a2 - 7;
    *(unsigned char *)(result + 80) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    LOBYTE(a2) = 7;
    *(_DWORD *)uint64_t result = v2;
  }
  *(unsigned char *)(result + 81) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CoverView()
{
  return &type metadata for CoverView;
}

unsigned char *storeEnumTagSinglePayload for CoverView.Animation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F3CB98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoverView.Animation()
{
  return &type metadata for CoverView.Animation;
}

id sub_1B5F3CBD0(void *a1, uint64_t a2, char a3)
{
  void v11[3] = swift_getObjectType();
  v11[0] = v3;
  if (a3)
  {
    objc_allocWithZone(MEMORY[0x1E4FB1968]);
    id v9 = v3;
    id v8 = sub_1B5F22E4C(v11, (uint64_t)sel_handleLongPressWithRecognizer_);
    objc_msgSend(v8, sel_setDelegate_, v9, v11[0]);
  }
  else
  {
    objc_allocWithZone(MEMORY[0x1E4FB1D38]);
    id v7 = v3;
    id v8 = sub_1B5EEAF0C(v11, (uint64_t)sel_handleAction);
    objc_msgSend(v8, sel_setNumberOfTapsRequired_, a2, v11[0]);
  }
  objc_msgSend(a1, sel_addGestureRecognizer_, v8);
  return v8;
}

id TappableLabel.onTap.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC5TeaUI13TappableLabel_onTap);
}

id static TappableLabel.tappableLabel()()
{
  id v1 = objc_msgSend(objc_allocWithZone(v0), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v1, sel_setUserInteractionEnabled_, 1);

  return v1;
}

id TappableLabel.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_38();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_35_0();
  return objc_msgSend(v2, v3, v4);
}

id TappableLabel.init(frame:)()
{
  OUTLINED_FUNCTION_38();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = OBJC_IVAR____TtC5TeaUI13TappableLabel_onTap;
  sub_1B5E76EB0();
  id v4 = objc_allocWithZone(v3);
  uint64_t v5 = v0;
  *(void *)&v0[v2] = objc_msgSend(v4, sel_init);

  double v6 = OUTLINED_FUNCTION_35_0();
  return objc_msgSendSuper2(v7, v8, v6, v5, ObjectType);
}

id TappableLabel.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id TappableLabel.init(coder:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = OBJC_IVAR____TtC5TeaUI13TappableLabel_onTap;
  sub_1B5E76EB0();
  id v6 = objc_allocWithZone(v5);
  id v7 = v1;
  *(void *)&v1[v4] = objc_msgSend(v6, sel_init);

  v10.receiver = v7;
  v10.super_class = ObjectType;
  id v8 = objc_msgSendSuper2(&v10, sel_initWithCoder_, a1);

  return v8;
}

void sub_1B5F3CF70()
{
}

id TappableLabel.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall TappableLabel.prepareForReuse()()
{
  id v0 = sub_1B5E76DD8();
}

void sub_1B5F3D004()
{
}

uint64_t TappableLabel.isAccessibilityElement.getter()
{
  return 1;
}

uint64_t (*TappableLabel.isAccessibilityElement.modify(unsigned char *a1))(void, void, void, void, double)
{
  *a1 = 1;
  return nullsub_1;
}

uint64_t TappableLabel.accessibilityTraits.getter()
{
  return *MEMORY[0x1E4FB2568];
}

uint64_t (*TappableLabel.accessibilityTraits.modify(void *a1))(void, void, void, void, double)
{
  *a1 = *MEMORY[0x1E4FB2568];
  return nullsub_1;
}

uint64_t TappableLabel.accessibilityLabel.getter()
{
  return sub_1B5F3D1FC(v0);
}

uint64_t TappableLabel.accessibilityLabel.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*TappableLabel.accessibilityLabel.modify(uint64_t *a1))()
{
  *a1 = sub_1B5F3D1FC(v1);
  a1[1] = v3;
  return destroy for TabBarSplitViewPresentation.BarItem;
}

uint64_t sub_1B5F3D1FC(void *a1)
{
  id v1 = objc_msgSend(a1, sel_text);
  if (!v1) {
    return 0;
  }
  objc_super v2 = v1;
  uint64_t v3 = sub_1B61B20F0();

  return v3;
}

uint64_t type metadata accessor for TappableLabel()
{
  return self;
}

id SettingsNavigationController.__allocating_init(rootViewController:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithRootViewController_, a1);

  return v3;
}

char *SettingsViewController.__allocating_init(layout:actionHandler:)(uint64_t a1, uint64_t a2)
{
  id v4 = objc_allocWithZone(v2);
  __swift_mutable_project_boxed_opaque_existential_1(a2, *(void *)(a2 + 24));
  OUTLINED_FUNCTION_0_13();
  MEMORY[0x1F4188790](v5);
  id v7 = OUTLINED_FUNCTION_11_21(v6, v11);
  v8(v7);
  id v9 = OUTLINED_FUNCTION_27_11();
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v9;
}

id SettingsNavigationController.__allocating_init(navigationBarClass:toolbarClass:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  if (a1)
  {
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t ObjCClassFromMetadata = 0;
  if (a2) {
LABEL_3:
  }
    uint64_t v3 = swift_getObjCClassFromMetadata();
LABEL_4:
  id v5 = objc_allocWithZone(v2);
  return objc_msgSend(v5, sel_initWithNavigationBarClass_toolbarClass_, ObjCClassFromMetadata, v3);
}

id SettingsNavigationController.init(navigationBarClass:toolbarClass:)(uint64_t ObjCClassFromMetadata, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (ObjCClassFromMetadata) {
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  }
  if (a2) {
    uint64_t v6 = swift_getObjCClassFromMetadata();
  }
  else {
    uint64_t v6 = 0;
  }
  v8.receiver = v2;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_initWithNavigationBarClass_toolbarClass_, ObjCClassFromMetadata, v6);
}

id SettingsNavigationController.init(rootViewController:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithRootViewController_, a1);

  return v3;
}

id SettingsNavigationController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (a2)
  {
    id v7 = (void *)sub_1B61B20C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = ObjectType;
  id v8 = objc_msgSendSuper2(&v10, sel_initWithNibName_bundle_, v7, a3);

  return v8;
}

id SettingsNavigationController.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

char *SettingsViewController.init(layout:actionHandler:)(uint64_t a1, uint64_t a2)
{
  __swift_mutable_project_boxed_opaque_existential_1(a2, *(void *)(a2 + 24));
  OUTLINED_FUNCTION_0_13();
  MEMORY[0x1F4188790](v3);
  objc_super v5 = OUTLINED_FUNCTION_11_21(v4, v9);
  v6(v5);
  id v7 = OUTLINED_FUNCTION_27_11();
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v7;
}

id SettingsViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void SettingsViewController.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC5TeaUI22SettingsViewController_tableView;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D00]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  objc_super v2 = (void (**)(uint64_t, void *))&v0[OBJC_IVAR____TtC5TeaUI22SettingsViewController_akeyboardWillChangeFrame];
  void *v2 = sub_1B5F3E130;
  v2[1] = 0;

  sub_1B61B34D0();
  __break(1u);
}

Swift::Void __swiftcall SettingsViewController.viewDidLoad()()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v33.receiver = v0;
  v33.super_class = ObjectType;
  objc_msgSendSuper2(&v33, sel_viewDidLoad);
  id v3 = objc_msgSend(v0, sel_navigationItem);
  uint64_t v4 = sub_1B5F421C8(objc_msgSend(v1, sel_navigationItem));
  if (!v5)
  {
    uint64_t v4 = 0x73676E6974746553;
    uint64_t v5 = 0xE800000000000000;
  }
  sub_1B5F42244(v4, v5, v3, (SEL *)&selRef_setTitle_);

  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC5TeaUI22SettingsViewController_tableView];
  type metadata accessor for TextFieldTableViewCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v8 = (void *)OUTLINED_FUNCTION_8_2();
  objc_msgSend(v6, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v8);

  type metadata accessor for SwitchTableViewCell();
  swift_getObjCClassFromMetadata();
  uint64_t v9 = OUTLINED_FUNCTION_36_9();
  OUTLINED_FUNCTION_3_51(v9);

  type metadata accessor for StepperTableViewCell();
  swift_getObjCClassFromMetadata();
  uint64_t v10 = OUTLINED_FUNCTION_26_11();
  OUTLINED_FUNCTION_3_51(v10);

  type metadata accessor for SliderTableViewCell();
  swift_getObjCClassFromMetadata();
  uint64_t v11 = OUTLINED_FUNCTION_34_9();
  OUTLINED_FUNCTION_3_51(v11);

  sub_1B5DFF760(0, &qword_1EB63F430);
  swift_getObjCClassFromMetadata();
  uint64_t v12 = sub_1B61B20C0();
  OUTLINED_FUNCTION_3_51(v12);

  uint64_t v13 = OUTLINED_FUNCTION_33_9();
  OUTLINED_FUNCTION_3_51(v13);

  uint64_t v14 = OUTLINED_FUNCTION_32_11();
  OUTLINED_FUNCTION_3_51(v14);

  type metadata accessor for OptionTableViewCell();
  char v15 = (void *)swift_getObjCClassFromMetadata();
  id v16 = (void *)OUTLINED_FUNCTION_23_14();
  objc_msgSend(v6, sel_registerClass_forCellReuseIdentifier_, v15, v16);

  uint64_t v17 = OUTLINED_FUNCTION_42_8();
  OUTLINED_FUNCTION_3_51(v17);

  id v18 = objc_msgSend(v1, sel_view);
  if (v18)
  {
    id v19 = v18;
    objc_msgSend(v18, sel_addSubview_, v6);

    id v20 = objc_msgSend(v1, sel_navigationController);
    if (v20
      && ((uint64_t v21 = v20, v22 = objc_msgSend(v20, sel_modalPresentationStyle), v21, v22 != (id)7)
        ? (BOOL v23 = v22 == (id)2)
        : (BOOL v23 = 1),
          v23))
    {
      id v24 = objc_msgSend(v1, sel_navigationItem);
      sub_1B5DFF760(0, (unint64_t *)&qword_1EB647CA0);
      id v25 = sub_1B5E7A924();
      uint64_t v32 = ObjectType;
      v31[0] = v1;
      objc_allocWithZone(MEMORY[0x1E4FB14A8]);
      uint64_t v26 = v1;
      id v27 = sub_1B5F41F1C(v25, 0, v31, (uint64_t)sel_doDone);
    }
    else
    {
      id v24 = objc_msgSend(v1, sel_navigationItem);
      uint64_t v32 = ObjectType;
      v31[0] = v1;
      objc_allocWithZone(MEMORY[0x1E4FB14A8]);
      id v28 = v1;
      id v27 = sub_1B5F42024(1701736260, 0xE400000000000000, 2, v31, (uint64_t)sel_doDone);
    }
    long long v29 = v27;
    objc_msgSend(v24, sel_setRightBarButtonItem_, v27, v31[0]);

    id v30 = objc_msgSend(self, sel_defaultCenter);
    objc_msgSend(v30, sel_addObserver_selector_name_object_, v1, sel_keyboardWillChangeFrameWithNotification_, *MEMORY[0x1E4FB2C48], 0);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall SettingsViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, sel_viewWillAppear_, a1);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5TeaUI22SettingsViewController_tableView], sel_reloadData);
}

Swift::Void __swiftcall SettingsViewController.viewWillDisappear(_:)(Swift::Bool a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, sel_viewWillDisappear_, a1);
  objc_msgSend(v1, sel_becomeFirstResponder);
  objc_msgSend(v1, sel_resignFirstResponder);
}

Swift::Void __swiftcall SettingsViewController.viewDidLayoutSubviews()()
{
  v4.receiver = v0;
  v4.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v4, sel_viewDidLayoutSubviews);
  id v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    objc_super v2 = v1;
    objc_msgSend(v1, sel_bounds);

    OUTLINED_FUNCTION_12_12(v3, sel_setFrame_);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B5F3DF00()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler + 24];
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler + 32];
  __swift_project_boxed_opaque_existential_1(&v0[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler], v1);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v0;
  (*(void (**)(char *, id (*)(), uint64_t, uint64_t, uint64_t))(v2 + 24))(v0, sub_1B5F42C4C, v3, v1, v2);
  return swift_release();
}

uint64_t sub_1B5F3E004(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v1
                                                    + OBJC_IVAR____TtC5TeaUI22SettingsViewController_akeyboardWillChangeFrame))(a1, *(void *)(v1 + OBJC_IVAR____TtC5TeaUI22SettingsViewController_tableView));
}

void sub_1B5F3E130(uint64_t a1, void *a2)
{
  if (sub_1B61AF6E0())
  {
    id v19 = (void *)sub_1B61B20F0();
    sub_1B61B3220();
    sub_1B5E13BD8();
    swift_bridgeObjectRelease();
    sub_1B5E49E30((uint64_t)v20);
    if (v22)
    {
      sub_1B5DFF760(0, qword_1EB6402C0);
      uint64_t v3 = swift_dynamicCast();
      if (v3)
      {
        objc_msgSend(a2, sel_contentInset);
        objc_msgSend(v19, sel_CGRectValue);
        double Height = CGRectGetHeight(v24);
        id v5 = objc_msgSend(a2, sel_safeAreaInsets);
        OUTLINED_FUNCTION_39_7(v7, v8, Height - v6, (uint64_t)v5, sel_setContentInset_);
        objc_msgSend(a2, sel_verticalScrollIndicatorInsets);
        objc_msgSend(v19, sel_CGRectValue);
        double v9 = CGRectGetHeight(v25);
        id v10 = objc_msgSend(a2, sel_safeAreaInsets);
        OUTLINED_FUNCTION_39_7(v12, v13, v9 - v11, (uint64_t)v10, sel_setVerticalScrollIndicatorInsets_);

        return;
      }
    }
    else
    {
      uint64_t v3 = sub_1B5F42C64((uint64_t)v21, (uint64_t)&qword_1EB64CAC0, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (void (*)(void))sub_1B5ED9A98);
    }
    id v18 = OUTLINED_FUNCTION_12_12(v3, sel_setContentInset_);
    OUTLINED_FUNCTION_12_12((uint64_t)v18, sel_setVerticalScrollIndicatorInsets_);
  }
  else
  {
    double v14 = *MEMORY[0x1E4FB2848];
    double v15 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    double v16 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    double v17 = *(double *)(MEMORY[0x1E4FB2848] + 24);
    OUTLINED_FUNCTION_12_12(0, sel_setContentInset_);
    objc_msgSend(a2, sel_setVerticalScrollIndicatorInsets_, v14, v15, v16, v17);
  }
}

void SettingsViewController.init(nibName:bundle:)()
{
}

unint64_t SettingsViewController.tableView(_:shouldHighlightRowAt:)()
{
  uint64_t v2 = sub_1B61AFF00();
  OUTLINED_FUNCTION_0_13();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_2_2();
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC5TeaUI22SettingsViewController_layout);
  unint64_t result = sub_1B61AFC90();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (result >= *(void *)(v6 + 16))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_33();
  v8();
  uint64_t v9 = sub_1B61AFEE0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
  unint64_t result = sub_1B61AFC80();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (result < *(void *)(v9 + 16))
  {
    sub_1B5E176E4(v9 + 40 * result + 32, (uint64_t)v11);
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    char v10 = sub_1B61AFFB0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    return v10 & 1;
  }
LABEL_9:
  __break(1u);
  return result;
}

unint64_t SettingsViewController.tableView(_:didSelectRowAt:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = sub_1B61AFE80();
  OUTLINED_FUNCTION_0_13();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_80();
  char v10 = (uint64_t *)(v9 - v8);
  uint64_t v11 = sub_1B61AFF00();
  OUTLINED_FUNCTION_0_13();
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_80();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = *(void *)&v1[OBJC_IVAR____TtC5TeaUI22SettingsViewController_layout];
  unint64_t result = sub_1B61AFC90();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  if (result >= *(void *)(v18 + 16))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  OUTLINED_FUNCTION_33();
  v20();
  uint64_t v21 = sub_1B61AFEE0();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v11);
  unint64_t result = sub_1B61AFC80();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result < *(void *)(v21 + 16))
  {
    sub_1B5E176E4(v21 + 40 * result + 32, (uint64_t)v106);
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(v106, v107);
    OUTLINED_FUNCTION_30_8();
    sub_1B61AFFA0();
    OUTLINED_FUNCTION_41_13();
    int v23 = v22();
    if (v23 == *MEMORY[0x1E4FAB350])
    {
      uint64_t v24 = OUTLINED_FUNCTION_4_42();
      v25(v24);
      uint64_t v26 = *v10;
      id v27 = (void (*)(uint64_t))v10[3];
      swift_release();
      v27(1);
      uint64_t v28 = *(void *)&v1[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler + 24];
      uint64_t v29 = *(void *)&v1[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler + 32];
      __swift_project_boxed_opaque_existential_1(&v1[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler], v28);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v26, v28, v29);
      swift_bridgeObjectRelease();
      id v30 = a1;
      objc_msgSend(a1, sel_reloadData);
      swift_release();
      goto LABEL_14;
    }
    int v31 = v23;
    if (v23 == *MEMORY[0x1E4FAB330])
    {
      uint64_t v32 = OUTLINED_FUNCTION_4_42();
      v33(v32);
      sub_1B5E176E4((uint64_t)&v2[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler], (uint64_t)v105);
      id v34 = objc_allocWithZone(ObjectType);
      OUTLINED_FUNCTION_37_11();
      OUTLINED_FUNCTION_0_13();
      MEMORY[0x1F4188790](v35);
      uint64_t v37 = OUTLINED_FUNCTION_12_27(v36, v101);
      v38(v37);
      uint64_t v39 = OUTLINED_FUNCTION_31_11();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v105);
      uint64_t v40 = OUTLINED_FUNCTION_22_17();
      sub_1B5F42244(v40, v41, v39, (SEL *)&selRef_setTitle_);
      id v42 = objc_msgSend(v2, sel_navigationController);
    }
    else
    {
      if (v23 != *MEMORY[0x1E4FAB358])
      {
        if (v23 == *MEMORY[0x1E4FAB338])
        {
          uint64_t v55 = OUTLINED_FUNCTION_4_42();
          v56(v55);
          sub_1B5F42694();
          uint64_t v58 = *(uint64_t *)((char *)v10 + *(int *)(v57 + 48));
          (*(void (**)(void))((char *)v10 + *(int *)(v57 + 64)))();
          uint64_t v59 = &v2[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler];
          uint64_t v60 = *(void *)&v2[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler + 24];
          uint64_t v61 = *(void *)&v2[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler + 32];
          __swift_project_boxed_opaque_existential_1(&v2[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler], v60);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v58, v60, v61);
          swift_bridgeObjectRelease();
          id v30 = a1;
          objc_msgSend(a1, sel_reloadData);
          uint64_t v62 = *((void *)v59 + 3);
          uint64_t v63 = *((void *)v59 + 4);
          __swift_project_boxed_opaque_existential_1(v59, v62);
          (*(void (**)(char *, uint64_t (*)(void, void, void, void, double), void, uint64_t, uint64_t))(v63 + 24))(v2, nullsub_1, 0, v62, v63);
          swift_release();
        }
        else
        {
          if (v23 != *MEMORY[0x1E4FAB328])
          {
            if (v23 == *MEMORY[0x1E4FAB320])
            {
              uint64_t v85 = OUTLINED_FUNCTION_4_42();
              v86(v85);
              uint64_t v88 = *v10;
              uint64_t v87 = v10[1];
              uint64_t v89 = v10[2];
              uint64_t v90 = v10[3];
              uint64_t v91 = swift_allocObject();
              swift_unknownObjectWeakInit();
              uint64_t v92 = (void *)OUTLINED_FUNCTION_18_6();
              v92[2] = v89;
              v92[3] = v90;
              v92[4] = v91;
              v92[5] = v87;
              uint64_t v93 = *(void *)&v2[OBJC_IVAR____TtC5TeaUI22SettingsViewController_akeyboardWillChangeFrame];
              uint64_t v94 = *(void *)&v2[OBJC_IVAR____TtC5TeaUI22SettingsViewController_akeyboardWillChangeFrame + 8];
              objc_allocWithZone((Class)type metadata accessor for StringArrayViewController());
              swift_retain();
              swift_retain();
              swift_retain();
              uint64_t v95 = sub_1B6040ED4(v88, v93, v94, (uint64_t)sub_1B5F424B8, (uint64_t)v92);
              __swift_project_boxed_opaque_existential_1(v106, v107);
              OUTLINED_FUNCTION_30_8();
              uint64_t v96 = sub_1B61AFF90();
              sub_1B5F42244(v96, v97, v95, (SEL *)&selRef_setTitle_);
              id v98 = objc_msgSend(v2, sel_navigationController);
              if (v98)
              {
                uint64_t v99 = v98;
                objc_msgSend(v98, sel_pushViewController_animated_, v95, 1);
              }
              swift_release();
              swift_release();
              id v30 = a1;
            }
            else
            {
              int v100 = *MEMORY[0x1E4FAB318];
              (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v10, v4);
              id v30 = a1;
              if (v31 != v100) {
                return __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
              }
            }
LABEL_14:
            long long v54 = (void *)sub_1B61AFC00();
            objc_msgSend(v30, sel_deselectRowAtIndexPath_animated_, v54, 1);

            return __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
          }
          uint64_t v64 = OUTLINED_FUNCTION_4_42();
          v65(v64);
          sub_1B5F424C4();
          char v67 = (uint64_t *)((char *)v10 + v66[12]);
          uint64_t v102 = v67[1];
          uint64_t v103 = *v67;
          uint64_t v68 = (uint64_t *)((char *)v10 + v66[16]);
          uint64_t v69 = *v68;
          uint64_t v70 = v68[1];
          uint64_t v71 = (uint64_t *)((char *)v10 + v66[20]);
          uint64_t v73 = *v71;
          uint64_t v72 = v71[1];
          uint64_t v74 = *(uint64_t *)((char *)v10 + v66[24]);
          uint64_t v75 = (uint64_t *)((char *)v10 + v66[28]);
          uint64_t v77 = *v75;
          uint64_t v76 = v75[1];
          sub_1B5DFF760(0, &qword_1E9DAA5D0);
          id v78 = sub_1B5F3EF90(v69, v70, v73, v72, 1);
          sub_1B5DFF760(0, &qword_1E9DAA5D8);
          uint64_t v79 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v80 = (void *)swift_allocObject();
          v80[2] = v79;
          v80[3] = v77;
          v80[4] = v76;
          v80[5] = v74;
          v80[6] = a1;
          swift_retain();
          id v81 = a1;
          id v82 = sub_1B5F3F214(v103, v102, 2, (uint64_t)sub_1B5F42684, (uint64_t)v80);
          objc_msgSend(v78, sel_addAction_, v82);

          id v83 = sub_1B5F3F214(0x6C65636E6143, 0xE600000000000000, 1, 0, 0);
          id v30 = a1;
          objc_msgSend(v78, sel_addAction_, v83);

          objc_msgSend(v2, sel_presentViewController_animated_completion_, v78, 1, 0);
          swift_release();
        }
        sub_1B61AFE70();
        OUTLINED_FUNCTION_19_1();
        OUTLINED_FUNCTION_5_1();
        v84();
        goto LABEL_14;
      }
      uint64_t v43 = OUTLINED_FUNCTION_4_42();
      v44(v43);
      swift_release();
      sub_1B5E176E4((uint64_t)&v2[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler], (uint64_t)v105);
      id v45 = objc_allocWithZone(ObjectType);
      OUTLINED_FUNCTION_37_11();
      OUTLINED_FUNCTION_0_13();
      MEMORY[0x1F4188790](v46);
      uint64_t v48 = OUTLINED_FUNCTION_12_27(v47, v101);
      v49(v48);
      uint64_t v39 = OUTLINED_FUNCTION_31_11();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v105);
      uint64_t v50 = OUTLINED_FUNCTION_22_17();
      sub_1B5F42244(v50, v51, v39, (SEL *)&selRef_setTitle_);
      id v42 = objc_msgSend(v2, sel_navigationController);
    }
    id v52 = v42;
    if (v52)
    {
      long long v53 = v52;
      objc_msgSend(v52, sel_pushViewController_animated_, v39, 1);
    }
    id v30 = a1;
    goto LABEL_14;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1B5F3EF90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
    uint64_t v7 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v8 = 0;
    goto LABEL_6;
  }
  uint64_t v7 = (void *)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v8 = (void *)sub_1B61B20C0();
  swift_bridgeObjectRelease();
LABEL_6:
  id v9 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_alertControllerWithTitle_message_preferredStyle_, v7, v8, a5);

  return v9;
}

void sub_1B5F3F048(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v9 = a2 + 16;
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x1BA9B1EC0](v9);
  if (v10)
  {
    uint64_t v11 = (char *)v10;
    a3();
    uint64_t v12 = &v11[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler];
    uint64_t v13 = *(void *)&v11[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler + 24];
    uint64_t v14 = *(void *)&v11[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler + 32];
    __swift_project_boxed_opaque_existential_1(&v11[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler], v13);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a5, v13, v14);
    uint64_t v15 = *((void *)v12 + 3);
    uint64_t v16 = *((void *)v12 + 4);
    __swift_project_boxed_opaque_existential_1(v12, v15);
    sub_1B5ED9A98(0, (unint64_t *)&qword_1EB64B370, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1B61C28A0;
    sub_1B61AFDE0();
    *(void *)(v17 + 32) = sub_1B61AFE30();
    sub_1B61B2510();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v15, v16);
    swift_bridgeObjectRelease();
    objc_msgSend(a6, sel_reloadData);
    uint64_t v18 = *((void *)v12 + 3);
    uint64_t v19 = *((void *)v12 + 4);
    __swift_project_boxed_opaque_existential_1(v12, v18);
    (*(void (**)(char *, uint64_t (*)(void, void, void, void, double), void, uint64_t, uint64_t))(v19 + 24))(v11, nullsub_1, 0, v18, v19);
  }
}

id sub_1B5F3F214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
    uint64_t v8 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v9 = 0;
    goto LABEL_6;
  }
  uint64_t v8 = (void *)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  v12[4] = a4;
  v12[5] = a5;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  v12[2] = sub_1B5EE7210;
  void v12[3] = &block_descriptor_27;
  uint64_t v9 = _Block_copy(v12);
  swift_release();
LABEL_6:
  id v10 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_actionWithTitle_style_handler_, v8, a3, v9);
  _Block_release(v9);

  return v10;
}

void sub_1B5F3F31C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a4 + 16;
  a2();
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1BA9B1EC0](v6);
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    uint64_t v9 = (void *)(v7 + OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler);
    uint64_t v10 = v9[3];
    uint64_t v11 = v9[4];
    __swift_project_boxed_opaque_existential_1(v9, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a5, v10, v11);
  }
}

Swift::Int __swiftcall SettingsViewController.numberOfSections(in:)(UITableView *in)
{
  return *(void *)(*(void *)(v1 + OBJC_IVAR____TtC5TeaUI22SettingsViewController_layout) + 16);
}

Swift::Int __swiftcall SettingsViewController.tableView(_:numberOfRowsInSection:)(UITableView *_, Swift::Int numberOfRowsInSection)
{
  uint64_t v4 = sub_1B61AFF00();
  OUTLINED_FUNCTION_0_13();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_80();
  uint64_t v11 = v10 - v9;
  if (numberOfRowsInSection < 0)
  {
    __break(1u);
  }
  else if (*(void *)(*(void *)(v2 + OBJC_IVAR____TtC5TeaUI22SettingsViewController_layout) + 16) > (unint64_t)numberOfRowsInSection)
  {
    OUTLINED_FUNCTION_33();
    v12();
    uint64_t v13 = sub_1B61AFEE0();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v4);
    Swift::Int v14 = *(void *)(v13 + 16);
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t SettingsViewController.tableView(_:cellForRowAt:)(void *a1, uint64_t a2)
{
  void (*v203)(uint64_t *__return_ptr);
  void *v204;
  void *v205;
  id v206;
  void *v207;
  uint64_t v208;
  uint64_t v209;
  id v210;
  void *v211;
  id v212;
  void (*v213)(void);
  uint64_t (*v214)(void);
  int v215;
  int v216;
  int v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  void *v221;
  void *v222;
  id v223;
  uint64_t v224;
  void (*v225)(uint64_t);
  id v226;
  uint64_t v227;
  void (*v228)(uint64_t);
  uint64_t v229;
  uint64_t v230;
  void *v231;
  void *v232;
  id v233;
  uint64_t v234;
  uint64_t v235;
  id v236;
  uint64_t v237;
  void *v238;
  id v239;
  void *v240;
  void *v241;
  uint64_t v242;
  uint64_t v243;
  void (*v244)(uint64_t);
  id v245;
  void *v246;
  char v247;
  uint64_t v248;
  id v249;
  void (*v250)(void);
  void *v251;
  uint64_t v252;
  void (*v253)(uint64_t);
  char v254;
  void *v255;
  void *v256;
  id v257;
  uint64_t v258;
  uint64_t v259;
  char **v260;
  id v261;
  id v262;
  id v263;
  void *v264;
  id v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  void *v275;
  uint64_t v276;
  id v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  void v284[3];
  uint64_t v285;

  v277 = a1;
  sub_1B5F42750();
  uint64_t v272 = v4;
  OUTLINED_FUNCTION_0_13();
  uint64_t v271 = v5;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v270 = (char *)&v266 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  v273 = (char *)&v266 - v9;
  uint64_t v274 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_13();
  uint64_t v11 = v10;
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v14);
  uint64_t v15 = (char *)&v266 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B61AFE80();
  OUTLINED_FUNCTION_0_13();
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (unsigned __int8 *)&v266 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v268 = sub_1B61AFE70();
  OUTLINED_FUNCTION_0_13();
  v267 = v19;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_4();
  uint64_t v269 = v21;
  uint64_t v279 = sub_1B61AFF00();
  OUTLINED_FUNCTION_0_13();
  uint64_t v23 = v22;
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_4();
  uint64_t v278 = v25;
  uint64_t v275 = v2;
  uint64_t v26 = *(void *)&v2[OBJC_IVAR____TtC5TeaUI22SettingsViewController_layout];
  uint64_t v280 = a2;
  unint64_t v27 = sub_1B61AFC90();
  if ((v27 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_132;
  }
  if (v27 >= *(void *)(v26 + 16))
  {
LABEL_132:
    __break(1u);
    goto LABEL_133;
  }
  uint64_t v276 = v23;
  OUTLINED_FUNCTION_33();
  v28();
  uint64_t v23 = sub_1B61AFEE0();
  unint64_t v27 = sub_1B61AFC80();
  if ((v27 & 0x8000000000000000) != 0)
  {
LABEL_133:
    __break(1u);
    goto LABEL_134;
  }
  if (v27 >= *(void *)(v23 + 16))
  {
LABEL_134:
    __break(1u);
    goto LABEL_135;
  }
  sub_1B5E176E4(v23 + 40 * v27 + 32, (uint64_t)v284);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v284, v285);
  sub_1B61AFFA0();
  OUTLINED_FUNCTION_41_13();
  LODWORD(v27) = v29();
  if (v27 == *MEMORY[0x1E4FAB348])
  {
    uint64_t v30 = OUTLINED_FUNCTION_1_65();
    v31(v30);
    uint64_t v32 = *v18;
    uint64_t v271 = *((void *)v18 + 1);
    uint64_t v270 = (char *)*((void *)v18 + 2);
    uint64_t v272 = *((void *)v18 + 3);
    objc_super v33 = (void *)OUTLINED_FUNCTION_36_9();
    id v34 = (void *)sub_1B61AFC00();
    id v35 = objc_msgSend(v277, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v33, v34);

    type metadata accessor for SwitchTableViewCell();
    uint64_t v36 = (char *)OUTLINED_FUNCTION_10_29();
    objc_msgSend(v36, sel_setSelectionStyle_, 0);
    uint64_t v37 = *(void **)&v36[OBJC_IVAR____TtC5TeaUI19SwitchTableViewCell_switchControl];
    objc_msgSend(v37, sel_setOn_, v32);
    __swift_project_boxed_opaque_existential_1(v284, v285);
    id v38 = v37;
    objc_msgSend(v38, sel_setEnabled_, sub_1B61AFFB0() & 1);

    id v39 = objc_msgSend(v36, sel_textLabel);
    if (v39)
    {
      uint64_t v40 = v39;
      __swift_project_boxed_opaque_existential_1(v284, v285);
      uint64_t v41 = sub_1B61AFF90();
      sub_1B5F42244(v41, v42, v40, (SEL *)&selRef_setText_);
    }
    v273 = v36;
    id v43 = objc_msgSend(v36, sel_textLabel);
    uint64_t v23 = v276;
    if (v43)
    {
      uint64_t v44 = v43;
      __swift_project_boxed_opaque_existential_1(v284, v285);
      OUTLINED_FUNCTION_30_8();
      if (sub_1B61AFFB0())
      {
        id v45 = objc_msgSend(self, sel_labelColor);
      }
      else
      {
        if (qword_1E9DA7FA8 != -1) {
          swift_once();
        }
        id v45 = (id)qword_1E9DAC208;
      }
      uint64_t v77 = v45;
      objc_msgSend(v44, sel_setTextColor_, v45);
    }
    uint64_t v78 = v274;
    OUTLINED_FUNCTION_33();
    v79();
    unint64_t v80 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    unint64_t v81 = (v13 + v80 + 7) & 0xFFFFFFFFFFFFFFF8;
    id v82 = (char *)swift_allocObject();
    uint64_t v83 = v272;
    *((void *)v82 + 2) = v270;
    *((void *)v82 + 3) = v83;
    id v84 = v277;
    *((void *)v82 + 4) = v277;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v82[v80], v15, v78);
    uint64_t v85 = v275;
    *(void *)&v82[v81] = v275;
    *(void *)&v82[(v81 + 15) & 0xFFFFFFFFFFFFFFF8] = v271;
    swift_retain();
    id v86 = v84;
    id v87 = v85;
    id v57 = v273;
    sub_1B60AECB4((uint64_t)sub_1B5F42B38, (uint64_t)v82);
LABEL_31:
    swift_release();
LABEL_32:
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v278, v279);
LABEL_33:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v284);
    return (uint64_t)v57;
  }
  if (v27 == *MEMORY[0x1E4FAB350])
  {
    uint64_t v46 = OUTLINED_FUNCTION_1_65();
    v47(v46);
    uint64_t v48 = (uint64_t (*)(void))*((void *)v18 + 1);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v49 = (void *)OUTLINED_FUNCTION_33_9();
    uint64_t v50 = (void *)sub_1B61AFC00();
    id v51 = objc_msgSend(v277, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v49, v50);

    objc_msgSend(v51, sel_setSelectionStyle_, 0);
    id v52 = objc_msgSend(v51, sel_textLabel);
    uint64_t v53 = v276;
    if (v52)
    {
      uint64_t v54 = OUTLINED_FUNCTION_20_14();
      sub_1B5F42244(v54, v55, v49, (SEL *)&selRef_setText_);
    }
    OUTLINED_FUNCTION_15_19();
    objc_msgSend(v51, sel_setUserInteractionEnabled_, OUTLINED_FUNCTION_29_13() & 1);

    if (v48()) {
      uint64_t v56 = 3;
    }
    else {
      uint64_t v56 = 0;
    }
    objc_msgSend(v51, sel_setAccessoryType_, v56);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v278, v279);
    id v57 = v51;
    goto LABEL_33;
  }
  uint64_t v23 = v276;
  if (v27 == *MEMORY[0x1E4FAB370])
  {
    uint64_t v58 = OUTLINED_FUNCTION_1_65();
    v59(v58);
    uint64_t v60 = *(void *)v18;
    uint64_t v61 = *((void *)v18 + 1);
    uint64_t v62 = *((void *)v18 + 2);
    uint64_t v63 = *((void *)v18 + 3);
    uint64_t v64 = *((void *)v18 + 4);
    char v65 = (void *)OUTLINED_FUNCTION_8_2();
    char v66 = (void *)sub_1B61AFC00();
    id v67 = objc_msgSend(v277, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v65, v66);

    type metadata accessor for TextFieldTableViewCell();
    id v57 = (id)OUTLINED_FUNCTION_10_29();
    objc_msgSend(v57, sel_setSelectionStyle_, 0);
    id v68 = objc_msgSend(v57, sel_ts_editableTextField);
    if (v68)
    {
      uint64_t v69 = v68;
      sub_1B5F42244(v60, v61, v68, (SEL *)&selRef_setText_);

      id v70 = objc_msgSend(v57, sel_ts_editableTextField);
      if (v70)
      {
        uint64_t v71 = v70;
        objc_msgSend(v70, sel_setEnabled_, OUTLINED_FUNCTION_2_57() & 1);

        if (objc_msgSend(v57, sel_textLabel))
        {
          uint64_t v72 = OUTLINED_FUNCTION_5_33();
          sub_1B5F42244(v72, v73, v71, (SEL *)&selRef_setText_);
        }
        id v74 = objc_msgSend(v57, sel_textLabel);
        if (v74)
        {
          uint64_t v75 = v74;
          if (OUTLINED_FUNCTION_2_57())
          {
            id v76 = objc_msgSend(self, sel_labelColor);
          }
          else
          {
            if (qword_1E9DA7FA8 != -1) {
              swift_once();
            }
            id v76 = (id)qword_1E9DAC208;
          }
          uint64_t v131 = v76;
          OUTLINED_FUNCTION_17_2((uint64_t)v76, sel_setTextColor_);
        }
        uint64_t v132 = (void *)OUTLINED_FUNCTION_18_6();
        v132[2] = v63;
        v132[3] = v64;
        uint64_t v133 = v275;
        v132[4] = v275;
        v132[5] = v62;
        id v134 = v133;
        swift_retain();
        sub_1B5F9A8B8((uint64_t)sub_1B5F42868, (uint64_t)v132);
        goto LABEL_31;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_146;
  }
  if (v27 == *MEMORY[0x1E4FAB310])
  {
    uint64_t v89 = OUTLINED_FUNCTION_1_65();
    v90(v89);
    uint64_t v91 = *(void *)v18;
    uint64_t v92 = *((void *)v18 + 1);
    uint64_t v94 = *((void *)v18 + 2);
    uint64_t v93 = *((void *)v18 + 3);
    uint64_t v95 = *((void *)v18 + 4);
    uint64_t v96 = (void *)OUTLINED_FUNCTION_8_2();
    uint64_t v97 = (void *)sub_1B61AFC00();
    id v98 = objc_msgSend(v277, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v96, v97);

    type metadata accessor for TextFieldTableViewCell();
    uint64_t v99 = (void *)OUTLINED_FUNCTION_10_29();
    objc_msgSend(v99, sel_setSelectionStyle_, 0);
    id v100 = objc_msgSend(v99, sel_ts_editableTextField);
    if (v100)
    {
      uint64_t v101 = v100;
      uint64_t v280 = v93;
      sub_1B5F42244(v91, v92, v100, (SEL *)&selRef_setText_);

      id v102 = objc_msgSend(v99, sel_ts_editableTextField);
      if (v102)
      {
        uint64_t v103 = v102;
        objc_msgSend(v102, sel_setEnabled_, OUTLINED_FUNCTION_2_57() & 1);

        id v57 = v99;
        if (objc_msgSend(v99, sel_textLabel))
        {
          uint64_t v104 = OUTLINED_FUNCTION_5_33();
          sub_1B5F42244(v104, v105, v103, (SEL *)&selRef_setText_);
        }
        id v106 = objc_msgSend(v99, sel_textLabel);
        uint64_t v107 = v276;
        if (v106)
        {
          uint64_t v108 = v106;
          if (OUTLINED_FUNCTION_2_57())
          {
            id v109 = objc_msgSend(self, sel_labelColor);
          }
          else
          {
            if (qword_1E9DA7FA8 != -1) {
              swift_once();
            }
            id v109 = (id)qword_1E9DAC208;
          }
          uint64_t v164 = v109;
          OUTLINED_FUNCTION_17_2((uint64_t)v109, sel_setTextColor_);
        }
        id v165 = objc_msgSend(v99, sel_ts_editableTextField);
        if (v165)
        {
          uint64_t v166 = v165;
          objc_msgSend(v165, sel_setSecureTextEntry_, 1);

          uint64_t v167 = (void *)OUTLINED_FUNCTION_18_6();
          v167[2] = v280;
          v167[3] = v95;
          uint64_t v168 = v275;
          v167[4] = v275;
          v167[5] = v94;
          id v169 = v168;
          swift_retain();
          sub_1B5F9A8B8((uint64_t)sub_1B5F42CB8, (uint64_t)v167);
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v278, v279);
          goto LABEL_33;
        }
        goto LABEL_148;
      }
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
      goto LABEL_149;
    }
LABEL_146:
    __break(1u);
    goto LABEL_147;
  }
  if (v27 == *MEMORY[0x1E4FAB360])
  {
    uint64_t v110 = OUTLINED_FUNCTION_1_65();
    v111(v110);
    float v112 = *(float *)v18;
    float v113 = *((float *)v18 + 1);
    float v115 = *((float *)v18 + 2);
    float v114 = *((float *)v18 + 3);
    uint64_t v274 = *((void *)v18 + 2);
    uint64_t v116 = (char *)*((void *)v18 + 3);
    uint64_t v117 = *((void *)v18 + 4);
    v273 = v116;
    uint64_t v118 = (void *)OUTLINED_FUNCTION_26_11();
    uint64_t v119 = (void *)sub_1B61AFC00();
    id v120 = objc_msgSend(v277, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v118, v119);

    type metadata accessor for StepperTableViewCell();
    uint64_t v121 = (char *)OUTLINED_FUNCTION_10_29();
    objc_msgSend(v121, sel_setSelectionStyle_, 0);
    uint64_t v122 = *(void **)&v121[OBJC_IVAR____TtC5TeaUI20StepperTableViewCell_stepper];
    objc_msgSend(v122, sel_setStepValue_, v113);
    objc_msgSend(v122, sel_setMinimumValue_, v115);
    objc_msgSend(v122, sel_setMaximumValue_, v114);
    objc_msgSend(v122, sel_setValue_, v112);
    id v123 = OUTLINED_FUNCTION_6_36();
    objc_msgSend(v123, sel_setEnabled_, OUTLINED_FUNCTION_16_15() & 1);

    id v124 = OUTLINED_FUNCTION_6_36();
    uint64_t v125 = OUTLINED_FUNCTION_16_15();
    uint64_t v126 = 0;
    if ((v125 & 1) == 0)
    {
      if (qword_1E9DA7FA8 != -1) {
        swift_once();
      }
      uint64_t v125 = (uint64_t)(id)qword_1E9DAC208;
      uint64_t v126 = (void *)v125;
    }
    OUTLINED_FUNCTION_40_0(v125, sel_setTintColor_);

    uint64_t v127 = *(void **)&v121[OBJC_IVAR____TtC5TeaUI20StepperTableViewCell_valueLabel];
    uint64_t v281 = 0;
    uint64_t v282 = 0xE000000000000000;
    id v128 = v127;
    sub_1B61B2780();
    sub_1B5F42244(v281, v282, v128, (SEL *)&selRef_setText_);

    id v129 = OUTLINED_FUNCTION_6_36();
    if (OUTLINED_FUNCTION_16_15())
    {
      id v130 = objc_msgSend(self, sel_labelColor);
    }
    else
    {
      if (qword_1E9DA7FA8 != -1) {
        swift_once();
      }
      id v130 = (id)qword_1E9DAC208;
    }
    uint64_t v170 = v130;
    OUTLINED_FUNCTION_40_0((uint64_t)v130, sel_setTextColor_);

    uint64_t v171 = *(void **)&v121[OBJC_IVAR____TtC5TeaUI20StepperTableViewCell_label];
    __swift_project_boxed_opaque_existential_1(v284, v285);
    id v172 = v171;
    uint64_t v173 = sub_1B61AFF90();
    sub_1B5F42244(v173, v174, v172, (SEL *)&selRef_setText_);

    id v175 = OUTLINED_FUNCTION_6_36();
    if (OUTLINED_FUNCTION_16_15())
    {
      id v176 = objc_msgSend(self, sel_labelColor);
    }
    else
    {
      if (qword_1E9DA7FA8 != -1) {
        swift_once();
      }
      id v176 = (id)qword_1E9DAC208;
    }
    uint64_t v188 = v176;
    OUTLINED_FUNCTION_40_0((uint64_t)v176, sel_setTextColor_);

    int v189 = (void *)OUTLINED_FUNCTION_18_6();
    v189[2] = v273;
    v189[3] = v117;
    uint64_t v191 = v274;
    unint64_t v190 = v275;
    v189[4] = v275;
    v189[5] = v191;
    id v192 = v190;
    swift_retain();
    sub_1B614CBC8((uint64_t)sub_1B5F42A3C, (uint64_t)v189);
    id v57 = v121;
    goto LABEL_31;
  }
  if (v27 == *MEMORY[0x1E4FAB340])
  {
    uint64_t v135 = OUTLINED_FUNCTION_1_65();
    v136(v135);
    int v137 = *(_DWORD *)v18;
    sub_1B5F42888();
    uint64_t v139 = &v18[v138[12]];
    int v140 = *(_DWORD *)&v18[v138[16]];
    int v141 = *(_DWORD *)&v18[v138[20]];
    uint64_t v274 = *(void *)&v18[v138[24]];
    uint64_t v142 = &v18[v138[28]];
    uint64_t v144 = *(void *)v142;
    uint64_t v143 = *((void *)v142 + 1);
    (*(void (**)(char *, unsigned __int8 *, uint64_t))(v271 + 32))(v273, v139, v272);
    uint64_t v145 = (void *)OUTLINED_FUNCTION_34_9();
    uint64_t v146 = (void *)sub_1B61AFC00();
    id v147 = OUTLINED_FUNCTION_24_12((uint64_t)v146, sel_dequeueReusableCellWithIdentifier_forIndexPath_);

    type metadata accessor for SliderTableViewCell();
    uint64_t v148 = (char *)OUTLINED_FUNCTION_10_29();
    objc_msgSend(v148, sel_setSelectionStyle_, 0);
    uint64_t v149 = *(void **)&v148[OBJC_IVAR____TtC5TeaUI19SliderTableViewCell_slider];
    LODWORD(v150) = v140;
    objc_msgSend(v149, sel_setMinimumValue_, v150);
    LODWORD(v151) = v141;
    objc_msgSend(v149, sel_setMaximumValue_, v151);
    LODWORD(v152) = v137;
    objc_msgSend(v149, sel_setValue_, v152);
    __swift_project_boxed_opaque_existential_1(v284, v285);
    id v153 = v149;
    objc_msgSend(v153, sel_setEnabled_, OUTLINED_FUNCTION_16_15() & 1);

    uint64_t v154 = OBJC_IVAR____TtC5TeaUI19SliderTableViewCell_label;
    uint64_t v155 = *(void **)&v148[OBJC_IVAR____TtC5TeaUI19SliderTableViewCell_label];
    __swift_project_boxed_opaque_existential_1(v284, v285);
    id v156 = v155;
    uint64_t v157 = sub_1B61AFF90();
    sub_1B5F42244(v157, v158, v156, (SEL *)&selRef_setText_);

    uint64_t v159 = v148;
    uint64_t v160 = *(void **)&v148[v154];
    OUTLINED_FUNCTION_15_19();
    if (OUTLINED_FUNCTION_29_13())
    {
      id v161 = objc_msgSend(self, sel_labelColor);
      uint64_t v162 = v161;
      uint64_t v163 = (uint64_t *)v270;
    }
    else
    {
      uint64_t v163 = (uint64_t *)v270;
      if (qword_1E9DA7FA8 != -1) {
        swift_once();
      }
      id v161 = (id)qword_1E9DAC208;
      uint64_t v162 = v161;
    }
    OUTLINED_FUNCTION_17_2((uint64_t)v161, sel_setTextColor_);

    uint64_t v193 = OBJC_IVAR____TtC5TeaUI19SliderTableViewCell_valueLabel;
    uint64_t v194 = *(void **)&v159[OBJC_IVAR____TtC5TeaUI19SliderTableViewCell_valueLabel];
    uint64_t v281 = 0;
    uint64_t v282 = 0xE000000000000000;
    id v195 = v194;
    sub_1B61B2780();
    sub_1B5F42244(v281, v282, v195, (SEL *)&selRef_setText_);

    v196 = *(void **)&v159[v193];
    OUTLINED_FUNCTION_15_19();
    if (OUTLINED_FUNCTION_29_13())
    {
      id v197 = objc_msgSend(self, sel_labelColor);
      unint64_t v198 = v197;
      uint64_t v199 = v272;
      uint64_t v200 = v271;
    }
    else
    {
      uint64_t v199 = v272;
      uint64_t v200 = v271;
      if (qword_1E9DA7FA8 != -1) {
        swift_once();
      }
      id v197 = (id)qword_1E9DAC208;
      unint64_t v198 = v197;
    }
    OUTLINED_FUNCTION_17_2((uint64_t)v197, sel_setTextColor_);

    OUTLINED_FUNCTION_33();
    v213();
    OUTLINED_FUNCTION_41_13();
    uint64_t v215 = v214();
    uint64_t v216 = v215;
    uint64_t v217 = *MEMORY[0x1E4FAB3B0];
    if (v215 == *MEMORY[0x1E4FAB3B0])
    {
      (*(void (**)(uint64_t *, uint64_t))(v200 + 96))(v163, v199);
      uint64_t v218 = *v163;
    }
    else
    {
      if (v215 != *MEMORY[0x1E4FAB3A8])
      {
LABEL_149:
        sub_1B61B3750();
        __break(1u);
        goto LABEL_150;
      }
      uint64_t v218 = 0;
    }
    uint64_t v219 = v274;
    uint64_t v220 = &v159[OBJC_IVAR____TtC5TeaUI19SliderTableViewCell_precision];
    *(void *)uint64_t v220 = v218;
    v220[8] = v216 != v217;
    uint64_t v221 = (void *)OUTLINED_FUNCTION_18_6();
    v221[2] = v144;
    v221[3] = v143;
    id v57 = v159;
    v222 = v275;
    v221[4] = v275;
    v221[5] = v219;
    uint64_t v223 = v222;
    swift_retain();
    sub_1B6122F50((uint64_t)sub_1B5F42CB4, (uint64_t)v221);
    swift_release();
    (*(void (**)(char *, uint64_t))(v200 + 8))(v273, v199);
    goto LABEL_32;
  }
  if (v27 == *MEMORY[0x1E4FAB330])
  {
    uint64_t v177 = OUTLINED_FUNCTION_1_65();
    v178(v177);
LABEL_70:
    swift_bridgeObjectRelease();
    uint64_t v179 = (void *)sub_1B61B20C0();
    uint64_t v180 = (void *)sub_1B61AFC00();
    id v57 = objc_msgSend(v277, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v179, v180);

    objc_msgSend(v57, sel_setAccessoryType_, 1);
    id v181 = objc_msgSend(v57, sel_textLabel);
    if (v181)
    {
      uint64_t v182 = v181;
      __swift_project_boxed_opaque_existential_1(v284, v285);
      uint64_t v183 = sub_1B61AFF90();
      sub_1B5F42244(v183, v184, v182, (SEL *)&selRef_setText_);
    }
    id v185 = objc_msgSend(v57, sel_textLabel);
    if (!v185) {
      goto LABEL_32;
    }
    id v186 = v185;
    __swift_project_boxed_opaque_existential_1(v284, v285);
    if (OUTLINED_FUNCTION_16_15())
    {
      id v187 = objc_msgSend(self, sel_labelColor);
    }
    else
    {
      if (qword_1E9DA7FA8 != -1) {
        swift_once();
      }
      id v187 = (id)qword_1E9DAC208;
    }
    uint64_t v226 = v187;
LABEL_110:
    OUTLINED_FUNCTION_40_0((uint64_t)v187, sel_setTextColor_);

    goto LABEL_32;
  }
  if (v27 == *MEMORY[0x1E4FAB358])
  {
    uint64_t v201 = OUTLINED_FUNCTION_1_65();
    v202(v201);
    uint64_t v203 = (void (*)(uint64_t *__return_ptr))*((void *)v18 + 1);
    swift_bridgeObjectRelease();
    uint64_t v204 = (void *)OUTLINED_FUNCTION_23_14();
    uint64_t v205 = (void *)sub_1B61AFC00();
    uint64_t v206 = OUTLINED_FUNCTION_24_12((uint64_t)v205, sel_dequeueReusableCellWithIdentifier_forIndexPath_);

    type metadata accessor for OptionTableViewCell();
    uint64_t v207 = (void *)OUTLINED_FUNCTION_10_29();
    objc_msgSend(v207, sel_setAccessoryType_, 1);
    if (objc_msgSend(v207, sel_textLabel))
    {
      uint64_t v208 = OUTLINED_FUNCTION_5_33();
      sub_1B5F42244(v208, v209, v204, (SEL *)&selRef_setText_);
    }
    id v57 = v207;
    uint64_t v210 = objc_msgSend(v207, sel_textLabel);
    if (v210)
    {
      uint64_t v211 = v210;
      if (OUTLINED_FUNCTION_2_57())
      {
        uint64_t v212 = objc_msgSend(self, sel_labelColor);
      }
      else
      {
        if (qword_1E9DA7FA8 != -1) {
          swift_once();
        }
        uint64_t v212 = (id)qword_1E9DAC208;
      }
      v238 = v212;
      OUTLINED_FUNCTION_17_2((uint64_t)v212, sel_setTextColor_);
    }
    __n128 v239 = objc_msgSend(v207, sel_detailTextLabel);
    if (v239)
    {
      uint64_t v240 = v239;
      v203(&v281);
      if (v283)
      {
        __swift_project_boxed_opaque_existential_1(&v281, v283);
        sub_1B61AFF90();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v281);
        v241 = (void *)sub_1B61B20C0();
        uint64_t v242 = swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v242 = sub_1B5F42C64((uint64_t)&v281, (uint64_t)&unk_1E9DAA5F8, (uint64_t)sub_1B5F42808, MEMORY[0x1E4FBB718], (void (*)(void))sub_1B5F427A4);
        v241 = 0;
      }
      OUTLINED_FUNCTION_17_2(v242, sel_setText_);
    }
    v245 = objc_msgSend(v207, sel_detailTextLabel);
    if (v245)
    {
      v246 = v245;
      uint64_t v247 = OUTLINED_FUNCTION_2_57();
      uint64_t v248 = v276;
      if (v247)
      {
        uint64_t v249 = objc_msgSend(self, sel_labelColor);
      }
      else
      {
        if (qword_1E9DA7FA8 != -1) {
          swift_once();
        }
        uint64_t v249 = (id)qword_1E9DAC208;
      }
      uint64_t v251 = v249;
      OUTLINED_FUNCTION_17_2((uint64_t)v249, sel_setTextColor_);

      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v248 + 8))(v278, v279);
    }
    else
    {
      OUTLINED_FUNCTION_5_1();
      v250();
      swift_release();
    }
    goto LABEL_33;
  }
  if (v27 == *MEMORY[0x1E4FAB338])
  {
    uint64_t v224 = OUTLINED_FUNCTION_1_65();
    v225(v224);
    sub_1B5F42694();
    swift_bridgeObjectRelease();
LABEL_106:
    swift_release();
    uint64_t v229 = v267;
    unint64_t v230 = v268;
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v267 + 32))(v269, v18, v268);
    unint64_t v231 = (void *)OUTLINED_FUNCTION_32_11();
    uint64_t v232 = (void *)sub_1B61AFC00();
    v233 = OUTLINED_FUNCTION_24_12((uint64_t)v232, sel_dequeueReusableCellWithIdentifier_forIndexPath_);

    if (objc_msgSend(v233, sel_textLabel))
    {
      uint64_t v234 = OUTLINED_FUNCTION_5_33();
      sub_1B5F42244(v234, v235, v231, (SEL *)&selRef_setText_);
    }
    id v57 = OUTLINED_FUNCTION_6_36();
    objc_msgSend(v57, sel_setUserInteractionEnabled_, OUTLINED_FUNCTION_16_15() & 1);

    objc_msgSend(v57, sel_setAccessoryType_, 0);
    uint64_t v236 = objc_msgSend(v57, sel_textLabel);
    if (!v236)
    {
      (*(void (**)(uint64_t, uint64_t))(v229 + 8))(v269, v230);
      goto LABEL_32;
    }
    id v186 = v236;
    uint64_t v237 = v269;
    uint64_t v226 = sub_1B5F416D4(v269);
    id v187 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v229 + 8))(v237, v230);
    goto LABEL_110;
  }
  if (v27 == *MEMORY[0x1E4FAB328])
  {
    uint64_t v227 = OUTLINED_FUNCTION_1_65();
    v228(v227);
    sub_1B5F424C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_106;
  }
  if (v27 == *MEMORY[0x1E4FAB320])
  {
    uint64_t v243 = OUTLINED_FUNCTION_1_65();
    v244(v243);
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_70;
  }
LABEL_135:
  if (v27 == *MEMORY[0x1E4FAB318])
  {
    v252 = OUTLINED_FUNCTION_1_65();
    v253(v252);
    sub_1B5E30E70((long long *)v18, (uint64_t)&v281);
    uint64_t v254 = sub_1B61B0070();
    uint64_t v255 = (void *)OUTLINED_FUNCTION_42_8();
    uint64_t v256 = (void *)sub_1B61AFC00();
    uint64_t v257 = objc_msgSend(v277, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v255, v256);

    if (objc_msgSend(v257, sel_textLabel))
    {
      uint64_t v258 = OUTLINED_FUNCTION_20_14();
      sub_1B5F42244(v258, v259, v255, (SEL *)&selRef_setText_);
    }
    if (v254)
    {
      objc_msgSend(v257, sel_setAccessoryType_, 3);
      objc_msgSend(v257, sel_setAccessoryView_, 0);
      uint64_t v260 = &selRef_greenColor;
    }
    else
    {
      objc_msgSend(v257, sel_setAccessoryType_, 0);
      sub_1B5DFF760(0, (unint64_t *)&qword_1EB647CA0);
      uint64_t v262 = sub_1B5E7A924();
      uint64_t v263 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithImage_, v262);

      objc_msgSend(v257, sel_setAccessoryView_, v263);
      uint64_t v260 = &selRef_redColor;
    }
    uint64_t v264 = self;
    id v57 = v257;
    uint64_t v265 = [v264 *v260];
    objc_msgSend(v57, sel_setTintColor_, v265);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v281);
    goto LABEL_32;
  }
  if (v27 == *MEMORY[0x1E4FAB368])
  {
    uint64_t v261 = objc_allocWithZone(MEMORY[0x1E4FB1D08]);
    id v57 = sub_1B5F42148(0, 0x6C6172656E6567, 0xE700000000000000);
    goto LABEL_32;
  }
LABEL_150:
  uint64_t result = sub_1B61B34D0();
  __break(1u);
  return result;
}

uint64_t sub_1B5F413FC(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v25 = a4;
  uint64_t v26 = a7;
  v24[1] = a5;
  uint64_t v10 = sub_1B61AFBD0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1B61AFE20();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if (v18 != *MEMORY[0x1E4FAB2F0])
  {
    if (v18 == *MEMORY[0x1E4FAB2E8])
    {
      sub_1B61AFC90();
      sub_1B61AFB80();
      uint64_t v19 = (void *)sub_1B61AFB30();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      objc_msgSend(v25, sel_reloadSections_withRowAnimation_, v19, 0);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
  }
  uint64_t v20 = (void *)(a6 + OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler);
  uint64_t v21 = *(void *)(a6 + OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler + 24);
  uint64_t v22 = v20[4];
  __swift_project_boxed_opaque_existential_1(v20, v21);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v26, v21, v22);
}

uint64_t sub_1B5F41644(void (*a1)(void))
{
  a1();
  uint64_t v1 = OUTLINED_FUNCTION_14_22(OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler);
  return v2(v1);
}

uint64_t sub_1B5F4168C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  uint64_t v3 = OUTLINED_FUNCTION_14_22(OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler);
  return v4(v3);
}

id sub_1B5F416D4(uint64_t a1)
{
  uint64_t v2 = sub_1B61AFE70();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E4FAB308])
  {
    id v7 = objc_msgSend(self, sel_systemBlueColor);
  }
  else
  {
    int v8 = v6;
    int v9 = *MEMORY[0x1E4FAB300];
    uint64_t v10 = self;
    if (v8 != v9)
    {
      id v11 = objc_msgSend(v10, sel_systemBlueColor);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return v11;
    }
    id v7 = objc_msgSend(v10, sel_redColor);
  }
  return v7;
}

unint64_t SettingsViewController.tableView(_:heightForRowAt:)()
{
  uint64_t v1 = sub_1B61AFE80();
  OUTLINED_FUNCTION_0_13();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_80();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_1B61AFF00();
  OUTLINED_FUNCTION_0_13();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v21[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v0 + OBJC_IVAR____TtC5TeaUI22SettingsViewController_layout);
  unint64_t result = sub_1B61AFC90();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (result >= *(void *)(v14 + 16))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_33();
  v16();
  uint64_t v17 = sub_1B61AFEE0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
  unint64_t result = sub_1B61AFC80();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (result >= *(void *)(v17 + 16))
  {
LABEL_12:
    __break(1u);
    return result;
  }
  sub_1B5E176E4(v17 + 40 * result + 32, (uint64_t)v21);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v21, v21[3]);
  sub_1B61AFFA0();
  OUTLINED_FUNCTION_41_13();
  if (v18() == *MEMORY[0x1E4FAB340])
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 96))(v7, v1);
    sub_1B5F42888();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1B5F42750();
    OUTLINED_FUNCTION_19_1();
    OUTLINED_FUNCTION_5_1();
    v19();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v1);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

Swift::String_optional __swiftcall SettingsViewController.tableView(_:titleForHeaderInSection:)(UITableView *_, Swift::Int titleForHeaderInSection)
{
  sub_1B5F41D68((uint64_t)_, titleForHeaderInSection, MEMORY[0x1E4FAB3D8]);
  result.value._object = v3;
  result.value._countAndFlagsBits = v2;
  return result;
}

Swift::String_optional __swiftcall SettingsViewController.tableView(_:titleForFooterInSection:)(UITableView *_, Swift::Int titleForFooterInSection)
{
  sub_1B5F41D68((uint64_t)_, titleForFooterInSection, MEMORY[0x1E4FAB3E0]);
  result.value._object = v3;
  result.value._countAndFlagsBits = v2;
  return result;
}

void sub_1B5F41D68(uint64_t a1, unint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v7 = sub_1B61AFF00();
  OUTLINED_FUNCTION_0_13();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_2_2();
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(*(void *)(v3 + OBJC_IVAR____TtC5TeaUI22SettingsViewController_layout) + 16) > a2)
  {
    OUTLINED_FUNCTION_33();
    uint64_t v12 = v11();
    a3(v12);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v4, v7);
    return;
  }
  __break(1u);
}

id sub_1B5F41E84(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(void))
{
  id v7 = a3;
  id v8 = a1;
  a5();
  uint64_t v10 = v9;

  if (v10)
  {
    uint64_t v11 = (void *)sub_1B61B20C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
  }
  return v11;
}

id sub_1B5F41F1C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6 = v4;
  if (a3[3])
  {
    __swift_project_boxed_opaque_existential_1(a3, a3[3]);
    OUTLINED_FUNCTION_0_13();
    MEMORY[0x1F4188790](v11);
    uint64_t v13 = OUTLINED_FUNCTION_9_25(v12, v19);
    v14(v13);
    sub_1B61B3740();
    uint64_t v15 = OUTLINED_FUNCTION_21_14();
    v16(v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
  }
  else
  {
    uint64_t v5 = 0;
  }
  id v17 = objc_msgSend(v6, sel_initWithImage_style_target_action_, a1, a2, v5, a4);
  swift_unknownObjectRelease();

  return v17;
}

id sub_1B5F42024(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  id v7 = v5;
  if (a2)
  {
    uint64_t v11 = (void *)sub_1B61B20C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
  }
  if (a4[3])
  {
    __swift_project_boxed_opaque_existential_1(a4, a4[3]);
    OUTLINED_FUNCTION_0_13();
    MEMORY[0x1F4188790](v12);
    uint64_t v14 = OUTLINED_FUNCTION_9_25(v13, v20);
    v15(v14);
    sub_1B61B3740();
    uint64_t v16 = OUTLINED_FUNCTION_21_14();
    v17(v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a4);
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v18 = objc_msgSend(v7, sel_initWithTitle_style_target_action_, v11, a3, v6, a5);

  swift_unknownObjectRelease();
  return v18;
}

id sub_1B5F42148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v5 = (void *)sub_1B61B20C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = 0;
  }
  id v6 = objc_msgSend(v3, sel_initWithStyle_reuseIdentifier_, a1, v5);

  return v6;
}

void sub_1B5F421BC(uint64_t a1, uint64_t a2, void *a3)
{
}

uint64_t sub_1B5F421C8(void *a1)
{
  id v2 = objc_msgSend(a1, sel_title);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1B61B20F0();

  return v3;
}

void sub_1B5F42238(uint64_t a1, uint64_t a2, void *a3)
{
}

void sub_1B5F42244(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  id v6 = (id)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, *a4, v6);
}

char *sub_1B5F422B0(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v21[3] = a4;
  void v21[4] = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_0, a2, a4);
  uint64_t v12 = OBJC_IVAR____TtC5TeaUI22SettingsViewController_tableView;
  id v13 = objc_allocWithZone(MEMORY[0x1E4FB1D00]);
  uint64_t v14 = a3;
  *(void *)&a3[v12] = objc_msgSend(v13, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  uint64_t v15 = (void (**)(uint64_t, void *))&v14[OBJC_IVAR____TtC5TeaUI22SettingsViewController_akeyboardWillChangeFrame];
  *uint64_t v15 = sub_1B5F3E130;
  v15[1] = 0;
  *(void *)&v14[OBJC_IVAR____TtC5TeaUI22SettingsViewController_layout] = a1;
  sub_1B5E176E4((uint64_t)v21, (uint64_t)&v14[OBJC_IVAR____TtC5TeaUI22SettingsViewController_actionHandler]);

  v20.receiver = v14;
  v20.super_class = ObjectType;
  uint64_t v16 = (char *)objc_msgSendSuper2(&v20, sel_initWithNibName_bundle_, 0, 0);
  id v17 = *(void **)&v16[OBJC_IVAR____TtC5TeaUI22SettingsViewController_tableView];
  id v18 = v16;
  objc_msgSend(v17, sel_setDelegate_, v18);
  objc_msgSend(v17, sel_setDataSource_, v18);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v18;
}

uint64_t sub_1B5F42438()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B5F42470()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1B5F424B8(uint64_t a1)
{
  sub_1B5F3F31C(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

void sub_1B5F424C4()
{
  if (!qword_1E9DAA5B8)
  {
    MEMORY[0x1F4188790](0);
    sub_1B61AFE70();
    sub_1B5F427A4(255, (unint64_t *)&unk_1E9DAA5C0, MEMORY[0x1E4FAB2D8], MEMORY[0x1E4FBB320]);
    sub_1B5E1E058();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1E9DAA5B8);
    }
  }
}

uint64_t sub_1B5F42634()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1B5F42684(uint64_t a1)
{
  sub_1B5F3F048(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48));
}

void sub_1B5F42694()
{
  if (!qword_1E9DAA5E0)
  {
    sub_1B61AFE70();
    sub_1B5F427A4(255, (unint64_t *)&unk_1E9DAA5C0, MEMORY[0x1E4FAB2D8], MEMORY[0x1E4FBB320]);
    sub_1B5E1E058();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1E9DAA5E0);
    }
  }
}

void sub_1B5F42750()
{
  if (!qword_1E9DAA5F0)
  {
    unint64_t v0 = sub_1B61AFEB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAA5F0);
    }
  }
}

void sub_1B5F427A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1B5F42808()
{
  unint64_t result = qword_1E9DAA600;
  if (!qword_1E9DAA600)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9DAA600);
  }
  return result;
}

uint64_t sub_1B5F42868(uint64_t a1, uint64_t a2)
{
  return sub_1B5F4168C(a1, a2, *(void (**)(void))(v2 + 16));
}

void sub_1B5F42888()
{
  if (!qword_1E9DAA608)
  {
    MEMORY[0x1F4188790](0);
    sub_1B5F42750();
    sub_1B5F427A4(255, (unint64_t *)&unk_1E9DAA5C0, MEMORY[0x1E4FAB2D8], MEMORY[0x1E4FBB320]);
    sub_1B5E1E058();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1E9DAA608);
    }
  }
}

uint64_t objectdestroy_9Tm()
{
  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B5F42A3C()
{
  return sub_1B5F41644(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1B5F42A5C()
{
  uint64_t v1 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_13();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = (*(void *)(v5 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B5F42B38(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1B61AFCB0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (void (*)(uint64_t))v1[2];
  uint64_t v7 = v1[3];
  unint64_t v8 = (void *)v1[4];
  uint64_t v9 = *(void *)((char *)v1 + v5);
  uint64_t v10 = *(void *)((char *)v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
  return sub_1B5F413FC(a1, v6, v7, v8, (uint64_t)v1 + v4, v9, v10);
}

uint64_t method lookup function for SettingsViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SettingsViewController);
}

uint64_t dispatch thunk of SettingsViewController.__allocating_init(layout:actionHandler:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1B5F42C14()
{
  return swift_deallocObject();
}

id sub_1B5F42C4C()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_dismissViewControllerAnimated_completion_, 1, 0);
}

uint64_t sub_1B5F42C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  a5(0);
  OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_5_1();
  v6();
  return a1;
}

uint64_t static PresentationHandlerError.== infix(_:_:)()
{
  return 1;
}

uint64_t PresentationHandlerError.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t PresentationHandlerError.hashValue.getter()
{
  return sub_1B61B3940();
}

uint64_t sub_1B5F42D34()
{
  return PresentationHandlerError.hashValue.getter();
}

uint64_t sub_1B5F42D4C()
{
  return PresentationHandlerError.hash(into:)();
}

void __swiftcall PresentationOperation.init(handlerUID:operationUID:requiredAppLaunchCount:maxPrecedingSameSessionPresentations:maxPresentationAttempts:endsPresentationSession:ignoreAfterSuccessfulPresentation:maxRetries:)(TeaUI::PresentationOperation *__return_ptr retstr, Swift::String handlerUID, Swift::String operationUID, Swift::Int requiredAppLaunchCount, Swift::Int_optional maxPrecedingSameSessionPresentations, Swift::Int_optional maxPresentationAttempts, Swift::Bool endsPresentationSession, Swift::Bool ignoreAfterSuccessfulPresentation, Swift::Int_optional maxRetries)
{
  retstr->handlerUID = handlerUID;
  retstr->operationUID = operationUID;
  retstr->requiredAppLaunchCount = requiredAppLaunchCount;
  retstr->maxPrecedingSameSessionPresentations.value = maxPrecedingSameSessionPresentations.value;
  retstr->maxPrecedingSameSessionPresentations.is_nil = maxPrecedingSameSessionPresentations.is_nil;
  retstr->maxPresentationAttempts.value = maxPresentationAttempts.value;
  retstr->maxPresentationAttempts.is_nil = maxPresentationAttempts.is_nil;
  retstr->endsPresentationSession = endsPresentationSession;
  retstr->suppressOnLaunchConditions.rawValue = 0;
  OUTLINED_FUNCTION_4_43((uint64_t)retstr);
}

void __swiftcall PresentationOperation.init(handlerUID:operationUID:requiredAppLaunchCount:maxPrecedingSameSessionPresentations:maxPresentationAttempts:endsPresentationSession:suppressOnLaunchConditions:ignoreAfterSuccessfulPresentation:maxRetries:)(TeaUI::PresentationOperation *__return_ptr retstr, Swift::String handlerUID, Swift::String operationUID, Swift::Int requiredAppLaunchCount, Swift::Int_optional maxPrecedingSameSessionPresentations, Swift::Int_optional maxPresentationAttempts, Swift::Bool endsPresentationSession, TeaUI::PresentationOperation::LaunchConditions suppressOnLaunchConditions, Swift::Bool ignoreAfterSuccessfulPresentation, Swift::Int_optional maxRetries)
{
  Swift::UInt v10 = *(void *)suppressOnLaunchConditions.rawValue;
  retstr->handlerUID = handlerUID;
  retstr->operationUID = operationUID;
  retstr->requiredAppLaunchCount = requiredAppLaunchCount;
  retstr->maxPrecedingSameSessionPresentations.value = maxPrecedingSameSessionPresentations.value;
  retstr->maxPrecedingSameSessionPresentations.is_nil = maxPrecedingSameSessionPresentations.is_nil;
  retstr->maxPresentationAttempts.value = maxPresentationAttempts.value;
  retstr->maxPresentationAttempts.is_nil = maxPresentationAttempts.is_nil;
  retstr->endsPresentationSession = endsPresentationSession;
  retstr->suppressOnLaunchConditions.rawValue = v10;
  OUTLINED_FUNCTION_4_43((uint64_t)retstr);
}

uint64_t PresentationOperation.LaunchConditions.rawValue.getter()
{
  return *(void *)v0;
}

TeaUI::PresentationOperation::LaunchConditions __swiftcall PresentationOperation.LaunchConditions.init(rawValue:)(TeaUI::PresentationOperation::LaunchConditions rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static PresentationOperation.LaunchConditions.none.getter(void *a1@<X8>)
{
  *a1 = 0;
}

void static PresentationOperation.LaunchConditions.didOnboardThroughBootstrapper.getter(void *a1@<X8>)
{
}

void static PresentationOperation.LaunchConditions.launchedByNotificationInteraction.getter(void *a1@<X8>)
{
}

void static PresentationOperation.LaunchConditions.launchedByWidgetInteraction.getter(void *a1@<X8>)
{
}

void static PresentationOperation.LaunchConditions.indirectLaunch.getter(void *a1@<X8>)
{
}

void *sub_1B5F42E28()
{
  sub_1B5F4B324();
  unint64_t result = (void *)sub_1B61B1F50();
  off_1EB64A940 = result;
  return result;
}

void PresentationOperation.LaunchConditions.description.getter()
{
  uint64_t v1 = *v0;
  if (qword_1EB64A950 != -1) {
LABEL_43:
  }
    swift_once();
  uint64_t v2 = &unk_1EB64A000;
  sub_1B5E5EBBC((uint64_t)off_1EB64A940, v35);
  uint64_t v3 = v35[0];
  uint64_t v4 = v35[1];
  int64_t v5 = v35[3];
  unint64_t v6 = v35[4];
  int64_t v7 = (unint64_t)(v35[2] + 64) >> 6;
  sub_1B61B1F70();
  uint64_t v8 = MEMORY[0x1E4FBC860];
  while (v6)
  {
    unint64_t v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v10 = v9 | (v5 << 6);
LABEL_23:
    uint64_t v15 = *(void *)(*(void *)(v3 + 48) + 8 * v10);
    if ((v15 & ~v1) == 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1B5E4EB00(0, *(void *)(v8 + 16) + 1, 1);
      }
      unint64_t v17 = *(void *)(v8 + 16);
      unint64_t v16 = *(void *)(v8 + 24);
      unint64_t v18 = v17 + 1;
      if (v17 >= v16 >> 1)
      {
        sub_1B5E4EB00(v16 > 1, v17 + 1, 1);
        unint64_t v18 = v17 + 1;
        uint64_t v2 = (void *)&unk_1EB64A000;
      }
      *(void *)(v8 + 16) = v18;
      *(void *)(v8 + 8 * v17 + 32) = v15;
    }
  }
  int64_t v11 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_43;
  }
  if (v11 >= v7) {
    goto LABEL_29;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v11);
  int64_t v13 = v5 + 1;
  if (v12) {
    goto LABEL_22;
  }
  int64_t v13 = v5 + 2;
  if (v5 + 2 >= v7) {
    goto LABEL_29;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12) {
    goto LABEL_22;
  }
  int64_t v13 = v5 + 3;
  if (v5 + 3 >= v7) {
    goto LABEL_29;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12) {
    goto LABEL_22;
  }
  int64_t v13 = v5 + 4;
  if (v5 + 4 >= v7) {
    goto LABEL_29;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12) {
    goto LABEL_22;
  }
  int64_t v13 = v5 + 5;
  if (v5 + 5 >= v7) {
    goto LABEL_29;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12) {
    goto LABEL_22;
  }
  int64_t v13 = v5 + 6;
  if (v5 + 6 >= v7) {
    goto LABEL_29;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
LABEL_22:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v5 = v13;
    goto LABEL_23;
  }
  int64_t v14 = v5 + 7;
  while (v14 < v7)
  {
    unint64_t v12 = *(void *)(v4 + 8 * v14++);
    if (v12)
    {
      int64_t v13 = v14 - 1;
      goto LABEL_22;
    }
  }
LABEL_29:
  swift_release();
  uint64_t v19 = *(void *)(v8 + 16);
  if (v19)
  {
    uint64_t v20 = v2[296];
    swift_retain();
    uint64_t v21 = 0;
    uint64_t v22 = MEMORY[0x1E4FBC860];
    do
    {
      if (*(void *)(v20 + 16))
      {
        unint64_t v23 = sub_1B5E46C2C();
        if (v24)
        {
          id v25 = (uint64_t *)(*(void *)(v20 + 56) + 16 * v23);
          uint64_t v27 = *v25;
          uint64_t v26 = v25[1];
          sub_1B61B1F70();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B5E1A620();
            uint64_t v22 = v30;
          }
          unint64_t v28 = *(void *)(v22 + 16);
          if (v28 >= *(void *)(v22 + 24) >> 1)
          {
            sub_1B5E1A620();
            uint64_t v22 = v31;
          }
          *(void *)(v22 + 16) = v28 + 1;
          uint64_t v29 = v22 + 16 * v28;
          *(void *)(v29 + 32) = v27;
          *(void *)(v29 + 40) = v26;
        }
      }
      ++v21;
    }
    while (v19 != v21);
    swift_release_n();
  }
  else
  {
    swift_release();
  }
  uint64_t v32 = MEMORY[0x1E4FBB1A0];
  sub_1B5F4B224(0, (unint64_t *)&qword_1EB647D68, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1B61BE690;
  *(void *)(v33 + 32) = sub_1B61B36E0();
  *(void *)(v33 + 40) = v34;
  sub_1B5E50B80();
  sub_1B5F4B224(0, (unint64_t *)&qword_1EB647AE8, v32, MEMORY[0x1E4FBB320]);
  sub_1B5E1A168();
  sub_1B61B2070();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_13_0();
}

TeaUI::PresentationOperation::LaunchConditions sub_1B5F43244(Swift::UInt *a1)
{
  return PresentationOperation.LaunchConditions.init(rawValue:)(*a1);
}

TeaUI::PresentationOperation::LaunchConditions sub_1B5F43250@<X0>(Swift::UInt *a1@<X0>, uint64_t a2@<X8>)
{
  result.rawValue = PresentationOperation.LaunchConditions.init(rawValue:)(*a1).rawValue;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1B5F4327C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PresentationOperation.LaunchConditions.rawValue.getter();
  *a1 = result;
  return result;
}

TeaUI::LaunchPresentationConfiguration __swiftcall LaunchPresentationConfiguration.init(version:presentationOperations:minimumTimeIntervalSinceLastBackground:)(Swift::Int version, Swift::OpaquePointer presentationOperations, Swift::Double minimumTimeIntervalSinceLastBackground)
{
  *(void *)uint64_t v3 = version;
  *(Swift::OpaquePointer *)(v3 + 8) = presentationOperations;
  *(void *)(v3 + 16) = 0x4014000000000000;
  *(Swift::Double *)(v3 + 24) = minimumTimeIntervalSinceLastBackground;
  result.presentationRequirementTimeout = minimumTimeIntervalSinceLastBackground;
  result.presentationOperations = presentationOperations;
  result.version = version;
  return result;
}

TeaUI::LaunchPresentationConfiguration __swiftcall LaunchPresentationConfiguration.init(version:presentationOperations:presentationRequirementTimeout:minimumTimeIntervalSinceLastBackground:)(Swift::Int version, Swift::OpaquePointer presentationOperations, Swift::Double presentationRequirementTimeout, Swift::Double minimumTimeIntervalSinceLastBackground)
{
  *(void *)uint64_t v4 = version;
  *(Swift::OpaquePointer *)(v4 + 8) = presentationOperations;
  *(Swift::Double *)(v4 + 16) = presentationRequirementTimeout;
  *(Swift::Double *)(v4 + 24) = minimumTimeIntervalSinceLastBackground;
  result.minimumTimeIntervalSinceLastBackground = minimumTimeIntervalSinceLastBackground;
  result.presentationRequirementTimeout = presentationRequirementTimeout;
  result.presentationOperations = presentationOperations;
  result.version = version;
  return result;
}

BOOL static PresentationProcessingStatus.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t PresentationProcessingStatus.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t PresentationProcessingStatus.hashValue.getter()
{
  return sub_1B61B3940();
}

BOOL sub_1B5F43344(char *a1, char *a2)
{
  return static PresentationProcessingStatus.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1B5F43350()
{
  return PresentationProcessingStatus.hashValue.getter();
}

uint64_t sub_1B5F43358()
{
  return PresentationProcessingStatus.hash(into:)();
}

uint64_t PresentationOperationManager.presentationProcessingStatus.getter()
{
  return swift_retain();
}

uint64_t PresentationOperationManager.appLaunchCount.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 48);
}

uint64_t PresentationOperationManager.disablePresentationProcessing.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t PresentationOperationManager.disablePresentationProcessing.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 56) = a1;
  return result;
}

uint64_t (*PresentationOperationManager.disablePresentationProcessing.modify())()
{
  return j__swift_endAccess;
}

uint64_t PresentationOperationManager.__allocating_init(bootstrapper:launchPresentationConfigurationProvider:launchConditionProvider:dataStore:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  PresentationOperationManager.init(bootstrapper:launchPresentationConfigurationProvider:launchConditionProvider:dataStore:)(a1, a2, a3, a4);
  return v8;
}

uint64_t PresentationOperationManager.init(bootstrapper:launchPresentationConfigurationProvider:launchConditionProvider:dataStore:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B5F4B224(0, &qword_1EB64A428, (uint64_t)&type metadata for PresentationProcessingStatus, MEMORY[0x1E4FAAA48]);
  swift_allocObject();
  uint64_t v9 = sub_1B61B0420();
  OUTLINED_FUNCTION_9_26(v9, MEMORY[0x1E4FBC868]);
  OUTLINED_FUNCTION_8_26(v10);
  swift_allocObject();
  *(void *)(v4 + 224) = KeyboardObserver.init()();
  *(unsigned char *)(v4 + 232) = 1;
  *(void *)(v4 + 24) = a1;
  sub_1B5E176E4(a2, v4 + 96);
  sub_1B5F498B4(a3, v4 + 176);
  sub_1B5E176E4(a4, v4 + 136);
  *(unsigned char *)(v4 + 56) = 0;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  id v12 = a1;
  swift_retain();
  swift_retain();
  KeyboardObserver.onWillShow(animationBlock:)((uint64_t)sub_1B5F4997C, v11);
  swift_release();
  swift_release();
  swift_release_n();
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  KeyboardObserver.onDidHide(animationBlock:)((uint64_t)sub_1B5F49984, v13);

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a4);
  sub_1B5F4AC20(a3, &qword_1EB64AD58, (uint64_t)&unk_1EB64AD50, (uint64_t)&protocol descriptor for LaunchConditionProviderType);
  __swift_destroy_boxed_opaque_existential_1(a2);
  swift_release();
  return v4;
}

uint64_t sub_1B5F436E4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(unsigned char *)(result + 232) = 0;
    return swift_release();
  }
  return result;
}

uint64_t sub_1B5F43734()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(unsigned char *)(result + 232) = 1;
    sub_1B61B0430();
    if (v7 == 1)
    {
      id v1 = objc_msgSend(self, sel_sharedApplication);
      id v2 = objc_msgSend(v1, sel_applicationState);

      if (v2 != (id)2)
      {
        if (qword_1EB64A470 != -1) {
          swift_once();
        }
        uint64_t v3 = sub_1B61B1020();
        __swift_project_value_buffer(v3, (uint64_t)qword_1EB654B90);
        uint64_t v4 = sub_1B61B1000();
        os_log_type_t v5 = sub_1B61B2BA0();
        if (os_log_type_enabled(v4, v5))
        {
          unint64_t v6 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v6 = 0;
          _os_log_impl(&dword_1B5DE7000, v4, v5, "Processing was suspended while app is in the foreground during keyboard dismissal. Resuming processing...", v6, 2u);
          MEMORY[0x1BA9B1D70](v6, -1, -1);
        }

        sub_1B5F438B0(0);
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1B5F438B0(char a1)
{
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 56) == 1)
  {
    if (qword_1EB64A470 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1B61B1020();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB654B90);
    uint64_t v4 = sub_1B61B1000();
    os_log_type_t v5 = sub_1B61B2BA0();
    if (os_log_type_enabled(v4, v5))
    {
      unint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v6 = 0;
      _os_log_impl(&dword_1B5DE7000, v4, v5, "Skipping all presentations as processing is disabled...", v6, 2u);
      MEMORY[0x1BA9B1D70](v6, -1, -1);
    }

    sub_1B5F49B20();
    return sub_1B61B0460();
  }
  else
  {
    sub_1B61B0430();
    sub_1B5F49B20();
    sub_1B61B0460();
    sub_1B61B0E80();
    uint64_t v8 = swift_allocObject();
    *(unsigned char *)(v8 + 16) = a1 & 1;
    *(void *)(v8 + 24) = v1;
    swift_retain();
    uint64_t v9 = (void *)sub_1B61B0C80();
    sub_1B5F4AB38(0, &qword_1EB64B200);
    sub_1B61B0D00();
    swift_release();
    swift_release();

    uint64_t v10 = swift_allocObject();
    *(unsigned char *)(v10 + 16) = v15 == 1;
    *(void *)(v10 + 24) = v1;
    swift_retain();
    uint64_t v11 = (void *)sub_1B61B0C80();
    sub_1B5F4A338();
    sub_1B61B0D00();
    swift_release();
    swift_release();

    swift_retain();
    id v12 = (void *)sub_1B61B0C80();
    sub_1B5F4A400();
    sub_1B61B0D00();
    swift_release();
    swift_release();

    sub_1B5DFF760(0, (unint64_t *)&qword_1EB64CA90);
    uint64_t v13 = (void *)sub_1B61B2C50();
    swift_retain();
    sub_1B61B0D10();
    swift_release();

    swift_release();
    int64_t v14 = (void *)sub_1B61B2C50();
    swift_retain();
    sub_1B61B0D50();
    swift_release();
    swift_release();

    return swift_release();
  }
}

uint64_t PresentationOperationManager.__allocating_init(bootstrapper:launchPresentationConfigurationProvider:dataStore:)(uint64_t a1, long long *a2, long long *a3)
{
  uint64_t v6 = swift_allocObject();
  PresentationOperationManager.init(bootstrapper:launchPresentationConfigurationProvider:dataStore:)(a1, a2, a3);
  return v6;
}

uint64_t PresentationOperationManager.init(bootstrapper:launchPresentationConfigurationProvider:dataStore:)(uint64_t a1, long long *a2, long long *a3)
{
  sub_1B5F4B224(0, &qword_1EB64A428, (uint64_t)&type metadata for PresentationProcessingStatus, MEMORY[0x1E4FAAA48]);
  swift_allocObject();
  uint64_t v7 = sub_1B61B0420();
  OUTLINED_FUNCTION_9_26(v7, MEMORY[0x1E4FBC868]);
  OUTLINED_FUNCTION_8_26(v8);
  swift_allocObject();
  *(void *)(v3 + 224) = KeyboardObserver.init()();
  *(unsigned char *)(v3 + 232) = 1;
  *(void *)(v3 + 24) = a1;
  sub_1B5E30E70(a2, v3 + 96);
  *(_OWORD *)(v3 + 176) = 0u;
  *(_OWORD *)(v3 + 192) = 0u;
  *(void *)(v3 + 208) = 0;
  sub_1B5E30E70(a3, v3 + 136);
  *(unsigned char *)(v3 + 56) = 0;
  return v3;
}

uint64_t PresentationOperationManager.addLaunchPresentationHandler(_:)(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  sub_1B5E176E4((uint64_t)a1, (uint64_t)v5);
  swift_beginAccess();
  sub_1B5E1EA7C();
  return swift_endAccess();
}

uint64_t PresentationOperationManager.deinit()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  sub_1B5F4AC20(v0 + 176, &qword_1EB64AD58, (uint64_t)&unk_1EB64AD50, (uint64_t)&protocol descriptor for LaunchConditionProviderType);
  swift_release();
  return v0;
}

uint64_t PresentationOperationManager.__deallocating_deinit()
{
  PresentationOperationManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t (*sub_1B5F43F38())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1B5F43F8C(void *a1)
{
  uint64_t v13 = (uint64_t)a1;
  id v2 = a1;
  sub_1B5E00AB8(0, (unint64_t *)&qword_1EB647DB0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    if (qword_1EB64A470 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1B61B1020();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB654B90);
    id v4 = a1;
    id v5 = a1;
    uint64_t v6 = sub_1B61B1000();
    os_log_type_t v7 = sub_1B61B2BA0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v13 = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      swift_getErrorValue();
      uint64_t v10 = sub_1B61B3870();
      sub_1B5EA6A1C(v10, v11, &v13);
      sub_1B61B2FB0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B5DE7000, v6, v7, "Failed during app launch configuration retrieval with the following error: %s. | Presentation operations will NOT be processed.", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BA9B1D70](v9, -1, -1);
      MEMORY[0x1BA9B1D70](v8, -1, -1);
    }
    else
    {
    }
  }
  return sub_1B5F441A0();
}

uint64_t sub_1B5F441A0()
{
  return sub_1B61B0460();
}

uint64_t sub_1B5F441E4(void *a1)
{
  uint64_t v1 = a1[15];
  uint64_t v2 = a1[16];
  __swift_project_boxed_opaque_existential_1(a1 + 12, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_1B5F44244(uint64_t a1, char a2)
{
  if (a2)
  {
    sub_1B5F4B224(0, (unint64_t *)&qword_1EB64A458, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAB088]);
    swift_allocObject();
    sub_1B61B0DA0();
  }
  else
  {
    sub_1B5F44370(*(double *)(a1 + 24));
  }
  sub_1B5F4B224(0, &qword_1EB64A450, (uint64_t)&type metadata for LaunchPresentationConfiguration, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  sub_1B61B1F70();
  sub_1B61B0DA0();
  uint64_t v2 = sub_1B61B0E40();
  swift_release();
  swift_release();
  return v2;
}

uint64_t sub_1B5F44370(double a1)
{
  sub_1B5F10254();
  sub_1B61B0E80();
  uint64_t v2 = (void *)sub_1B61B0C80();
  sub_1B61B0DD0();
  swift_release();

  *(double *)(swift_allocObject() + 16) = a1;
  uint64_t v3 = (void *)sub_1B61B0C80();
  uint64_t v4 = sub_1B61B0D00();
  swift_release();
  swift_release();

  return v4;
}

uint64_t sub_1B5F44468(unsigned char *a1, char a2, void *a3)
{
  if (*a1)
  {
    a3[8] = 0;
    swift_beginAccess();
    sub_1B5F4B1C0(0, &qword_1EB64B1C0, MEMORY[0x1E4FBAE90]);
    sub_1B61B1F70();
    sub_1B61B1FA0();
    swift_endAccess();
    id v5 = a3 + 17;
    uint64_t v6 = a3[20];
    uint64_t v7 = a3[21];
    __swift_project_boxed_opaque_existential_1(a3 + 17, v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    uint64_t v8 = a3[20];
    uint64_t v9 = a3[21];
    __swift_project_boxed_opaque_existential_1(a3 + 17, v8);
    (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
    uint64_t v10 = a3[20];
    uint64_t v11 = a3[21];
    __swift_project_boxed_opaque_existential_1(a3 + 17, v10);
    (*(void (**)(uint64_t, uint64_t))(v11 + 40))(v10, v11);
    uint64_t v13 = a3[20];
    uint64_t v12 = a3[21];
    __swift_project_boxed_opaque_existential_1(a3 + 17, v13);
    (*(void (**)(uint64_t, uint64_t))(v12 + 56))(v13, v12);
    uint64_t v15 = a3[20];
    uint64_t v14 = a3[21];
    __swift_project_boxed_opaque_existential_1(v5, v15);
    (*(void (**)(uint64_t, uint64_t))(v14 + 72))(v15, v14);
    sub_1B5F4B224(0, &qword_1EB64A450, (uint64_t)&type metadata for LaunchPresentationConfiguration, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    sub_1B61B0DA0();
    uint64_t v3 = sub_1B61B0E20();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    if (a2)
    {
      if (qword_1EB64A470 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_1B61B1020();
      __swift_project_value_buffer(v16, (uint64_t)qword_1EB654B90);
      unint64_t v17 = sub_1B61B1000();
      os_log_type_t v18 = sub_1B61B2BA0();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v19 = 0;
        _os_log_impl(&dword_1B5DE7000, v17, v18, ". . .Resuming presentation processing from suspension.", v19, 2u);
        MEMORY[0x1BA9B1D70](v19, -1, -1);
      }

      uint64_t v20 = sub_1B61B0E80();
      sub_1B5DFF760(0, (unint64_t *)&qword_1EB64CA90);
      uint64_t v21 = (void *)sub_1B61B2C50();
      swift_retain();
      uint64_t v3 = v20;
      sub_1B61B0D50();
      swift_release();
      swift_release();

      swift_release();
    }
    sub_1B5F4B154();
    swift_allocError();
    swift_willThrow();
  }
  return v3;
}

uint64_t sub_1B5F44864()
{
  swift_allocObject();
  swift_weakInit();
  sub_1B5F4B224(0, (unint64_t *)&qword_1EB64A460, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  uint64_t v0 = sub_1B61B0E00();
  swift_release();
  return v0;
}

uint64_t sub_1B5F44924(uint64_t (*a1)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1B5F44998();
    uint64_t Strong = swift_release();
  }
  return a1(Strong);
}

void sub_1B5F44998()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(self, sel_sharedApplication);
  id v3 = objc_msgSend(v2, sel_applicationState);

  if (qword_1EB64A470 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1B61B1020();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB654B90);
  id v5 = sub_1B61B1000();
  os_log_type_t v6 = sub_1B61B2BA0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134217984;
    __dst[0] = v3;
    sub_1B61B2FB0();
    _os_log_impl(&dword_1B5DE7000, v5, v6, "App State During Processing:  %ld", v7, 0xCu);
    MEMORY[0x1BA9B1D70](v7, -1, -1);
  }

  if (v3 == (id)2)
  {
    uint64_t v8 = sub_1B61B1000();
    os_log_type_t v9 = sub_1B61B2BA0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      uint64_t v11 = "Attempted to process the presentation queue while app is in the background.  Suspending further processing. . .";
LABEL_16:
      _os_log_impl(&dword_1B5DE7000, v8, v9, v11, v10, 2u);
      MEMORY[0x1BA9B1D70](v10, -1, -1);
      goto LABEL_17;
    }
    goto LABEL_17;
  }
  if (*(unsigned char *)(v1 + 232) != 1)
  {
    uint64_t v8 = sub_1B61B1000();
    os_log_type_t v9 = sub_1B61B2BA0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      uint64_t v11 = "Attempted to process the presentation queue while keyboard is onscreen.  Suspending further processing. . .";
      goto LABEL_16;
    }
LABEL_17:

    LOBYTE(__dst[0]) = 1;
    sub_1B5F49B20();
    sub_1B61B0460();
    return;
  }
  sub_1B61B0430();
  if (LOBYTE(__dst[0]))
  {
    LOBYTE(__dst[0]) = 0;
    sub_1B5F49B20();
    sub_1B61B0460();
  }
  swift_beginAccess();
  uint64_t v12 = *(void *)(v1 + 40);
  if (*(void *)(v12 + 16))
  {
    memcpy(__dst, (const void *)(v12 + 32), 0x61uLL);
    uint64_t v14 = __dst[2];
    unint64_t v13 = __dst[3];
    sub_1B5F4A488((uint64_t)__dst);
    sub_1B5F4A488((uint64_t)__dst);
    uint64_t v15 = sub_1B61B1000();
    os_log_type_t v16 = sub_1B61B2BA0();
    uint64_t v51 = v1 + 40;
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = v14;
      os_log_type_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      v52[0] = v19;
      *(_DWORD *)os_log_type_t v18 = 136315138;
      sub_1B61B1F70();
      uint64_t v55 = sub_1B5EA6A1C(v17, v13, v52);
      sub_1B61B2FB0();
      swift_bridgeObjectRelease();
      sub_1B5F4A4C0((uint64_t)__dst);
      _os_log_impl(&dword_1B5DE7000, v15, v16, "Beginning processing for presentation operation (%s) . . .", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BA9B1D70](v19, -1, -1);
      uint64_t v20 = v18;
      uint64_t v14 = v17;
      MEMORY[0x1BA9B1D70](v20, -1, -1);
    }
    else
    {
      sub_1B5F4A4C0((uint64_t)__dst);
    }

    sub_1B5F4A4F8((uint64_t)&__dst[7], (uint64_t)v58);
    sub_1B5F4A4F8((uint64_t)&__dst[5], (uint64_t)v59);
    sub_1B5F4A4F8((uint64_t)v59, (uint64_t)&v60);
    if ((v61 & 1) == 0)
    {
      uint64_t v24 = v60;
      if (v60 < *(void *)(v1 + 64))
      {
        sub_1B5F4A488((uint64_t)__dst);
        swift_retain();
        id v25 = sub_1B61B1000();
        os_log_type_t v26 = sub_1B61B2BA0();
        uint64_t v50 = v14;
        if (os_log_type_enabled(v25, v26))
        {
          uint64_t v27 = swift_slowAlloc();
          uint64_t v28 = swift_slowAlloc();
          v52[0] = v28;
          *(_DWORD *)uint64_t v27 = 136315650;
          sub_1B61B1F70();
          uint64_t v55 = sub_1B5EA6A1C(v14, v13, v52);
          sub_1B61B2FB0();
          swift_bridgeObjectRelease();
          sub_1B5F4A4C0((uint64_t)__dst);
          *(_WORD *)(v27 + 12) = 2048;
          uint64_t v55 = v24;
          sub_1B61B2FB0();
          *(_WORD *)(v27 + 22) = 2048;
          uint64_t v55 = *(void *)(v1 + 64);
          sub_1B61B2FB0();
          swift_release();
          _os_log_impl(&dword_1B5DE7000, v25, v26, "Presentation operation (%s) has a maxPrecedingSameSessionPresentations value of %ld, but our presentationCount is %ld. | This operation will NOT be presented.", (uint8_t *)v27, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1BA9B1D70](v28, -1, -1);
          MEMORY[0x1BA9B1D70](v27, -1, -1);
        }
        else
        {
          sub_1B5F4A4C0((uint64_t)__dst);

          swift_release();
        }
        swift_beginAccess();
        if (*(void *)(*(void *)v51 + 16))
        {
          sub_1B61B1F70();
          sub_1B61B1F70();
          sub_1B607C194(0);
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_beginAccess();
          uint64_t v40 = *(void *)(v1 + 72);
          sub_1B61B1F70();
          uint64_t v41 = sub_1B5E13AE8(v14, v13, v40);
          char v43 = v42;
          swift_endAccess();
          swift_bridgeObjectRelease();
          if (v43) {
            uint64_t v41 = 0;
          }
          sub_1B5F4A4F8((uint64_t)v58, (uint64_t)&v55);
          if ((v56 & 1) == 0 && v41 < v55)
          {
            swift_beginAccess();
            sub_1B61B1F70();
            sub_1B5E43A98(v41 + 1, v50, v13);
            swift_endAccess();
            swift_bridgeObjectRelease();
            sub_1B5F4A4C0((uint64_t)__dst);
            sub_1B61B0E80();
            sub_1B5DFF760(0, (unint64_t *)&qword_1EB64CA90);
            uint64_t v44 = (void *)sub_1B61B2C50();
            sub_1B61B0D30();
            swift_release();
            swift_release();

            return;
          }
          uint64_t v45 = sub_1B5F4A4C0((uint64_t)__dst);
          goto LABEL_48;
        }
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
    }
    sub_1B5F4A4F8((uint64_t)v58, (uint64_t)&v62);
    if ((v63 & 1) == 0)
    {
      uint64_t v29 = v62;
      swift_beginAccess();
      uint64_t v30 = *(void *)(v1 + 72);
      sub_1B61B1F70();
      uint64_t v31 = sub_1B5E13AE8(v14, v13, v30);
      LOBYTE(v30) = v32;
      swift_endAccess();
      swift_bridgeObjectRelease();
      if (v30)
      {
        if (v29 <= 0)
        {
          uint64_t v31 = 0;
          goto LABEL_43;
        }
      }
      else if (v31 >= v29)
      {
LABEL_43:
        sub_1B5F4A488((uint64_t)__dst);
        uint64_t v46 = sub_1B61B1000();
        os_log_type_t v47 = sub_1B61B2BA0();
        if (os_log_type_enabled(v46, v47))
        {
          uint64_t v48 = swift_slowAlloc();
          uint64_t v49 = swift_slowAlloc();
          v52[0] = v49;
          *(_DWORD *)uint64_t v48 = 136315650;
          sub_1B61B1F70();
          uint64_t v55 = sub_1B5EA6A1C(v14, v13, v52);
          sub_1B61B2FB0();
          swift_bridgeObjectRelease();
          sub_1B5F4A4C0((uint64_t)__dst);
          sub_1B5F4A4C0((uint64_t)__dst);
          *(_WORD *)(v48 + 12) = 2048;
          uint64_t v55 = v29;
          sub_1B61B2FB0();
          *(_WORD *)(v48 + 22) = 2048;
          uint64_t v55 = v31;
          sub_1B61B2FB0();
          _os_log_impl(&dword_1B5DE7000, v46, v47, "Presentation operation (%s) has a maxPresentationAttempts value of %ld, but its attemptedPresentationCount is %ld. | This operation will NOT be presented.", (uint8_t *)v48, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1BA9B1D70](v49, -1, -1);
          MEMORY[0x1BA9B1D70](v48, -1, -1);
        }
        else
        {
          sub_1B5F4A4C0((uint64_t)__dst);
          sub_1B5F4A4C0((uint64_t)__dst);
        }

        swift_beginAccess();
        if (*(void *)(*(void *)v51 + 16))
        {
          sub_1B61B1F70();
          sub_1B61B1F70();
          sub_1B607C194(0);
          swift_endAccess();
          swift_bridgeObjectRelease();
          uint64_t v45 = swift_bridgeObjectRelease();
LABEL_48:
          sub_1B5F44998(v45);
          return;
        }
        goto LABEL_51;
      }
    }
    swift_beginAccess();
    sub_1B61B1F70();
    sub_1B5E13C2C();
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v33 = v53;
    if (!v53)
    {
LABEL_52:
      __break(1u);
      return;
    }
    uint64_t v34 = v54;
    __swift_project_boxed_opaque_existential_1(v52, v53);
    id v35 = (void (*)(uint64_t (*)(void *, char), uint64_t))(*(uint64_t (**)(uint64_t, uint64_t))(v34 + 24))(v33, v34);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
    uint64_t v36 = *(void *)(v1 + 64);
    BOOL v37 = __OFADD__(v36, 1);
    uint64_t v38 = v36 + 1;
    if (!v37)
    {
      *(void *)(v1 + 64) = v38;
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v1;
      memcpy((void *)(v39 + 24), __dst, 0x61uLL);
      swift_retain();
      v35(sub_1B5F4A584, v39);
      swift_release();
      swift_release();
      return;
    }
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v21 = sub_1B61B1000();
  os_log_type_t v22 = sub_1B61B2BA0();
  if (os_log_type_enabled(v21, v22))
  {
    unint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v23 = 0;
    _os_log_impl(&dword_1B5DE7000, v21, v22, "All pending presentation operations have completed!", v23, 2u);
    MEMORY[0x1BA9B1D70](v23, -1, -1);
  }

  sub_1B5F441A0();
}

uint64_t sub_1B5F454F4(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v8 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v9 = a1[6];
  swift_beginAccess();
  a2[6] = v4;
  swift_beginAccess();
  a2[9] = v5;
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  a2[10] = v6;
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  a2[11] = v8;
  sub_1B61B1F70();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v11 = a2[6];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12)
  {
    __break(1u);
  }
  else
  {
    if (v7 <= v3) {
      uint64_t v14 = v3;
    }
    else {
      uint64_t v14 = v7;
    }
    a2[6] = v13;
    swift_beginAccess();
    a2[5] = v9;
    sub_1B61B1F70();
    swift_bridgeObjectRelease();
    uint64_t v15 = a2[20];
    uint64_t v16 = a2[21];
    __swift_project_boxed_opaque_existential_1(a2 + 17, v15);
    (*(void (**)(void, uint64_t, uint64_t))(v16 + 32))(a2[6], v15, v16);
    uint64_t v17 = a2[20];
    uint64_t v18 = a2[21];
    __swift_project_boxed_opaque_existential_1(a2 + 17, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v14, v17, v18);
    sub_1B5F45708();
    uint64_t v19 = sub_1B61B0E30();
    swift_release();
    swift_release();
    swift_release();
    return v19;
  }
  return result;
}

uint64_t sub_1B5F45708()
{
  char isUniquelyReferenced_nonNull_native = v0;
  uint64_t v106 = MEMORY[0x1E4FBC860];
  if (qword_1EB64A470 != -1) {
LABEL_76:
  }
    swift_once();
  uint64_t v2 = sub_1B61B1020();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB654B90);
  swift_retain_n();
  uint64_t v3 = sub_1B61B1000();
  os_log_type_t v4 = sub_1B61B2BA0();
  uint64_t v5 = &unk_1B61C3000;
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    __dst[0] = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_beginAccess();
    uint64_t v8 = sub_1B61B1F70();
    uint64_t v9 = MEMORY[0x1BA9AF6A0](v8, &type metadata for PresentationOperation);
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    v105[0] = sub_1B5EA6A1C(v9, v11, __dst);
    uint64_t v5 = (void *)&unk_1B61C3000;
    sub_1B61B2FB0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B5DE7000, v3, v4, "Beginning filtering of eligible presentation operations. | Potential presentation operations: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9B1D70](v7, -1, -1);
    MEMORY[0x1BA9B1D70](v6, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v89 = (uint64_t)(isUniquelyReferenced_nonNull_native + 22);
  sub_1B5F498B4((uint64_t)(isUniquelyReferenced_nonNull_native + 22), (uint64_t)__dst);
  uint64_t v12 = __dst[3];
  uint64_t v91 = __dst[3];
  if (__dst[3])
  {
    uint64_t v13 = __dst[4];
    __swift_project_boxed_opaque_existential_1(__dst, __dst[3]);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v13 + 8))(v105, v12, v13);
    uint64_t v92 = v105[0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)__dst);
  }
  else
  {
    sub_1B5F4AC20((uint64_t)__dst, &qword_1EB64AD58, (uint64_t)&unk_1EB64AD50, (uint64_t)&protocol descriptor for LaunchConditionProviderType);
    uint64_t v92 = 0;
  }
  uint64_t v90 = swift_allocObject();
  *(void *)(v90 + 16) = MEMORY[0x1E4FBC870];
  uint64_t v14 = swift_beginAccess();
  uint64_t v15 = isUniquelyReferenced_nonNull_native[5];
  uint64_t v16 = *(void *)(v15 + 16);
  if (!v16)
  {
LABEL_73:
    MEMORY[0x1F4188790](v14);
    sub_1B5F4B224(0, &qword_1EB64B1F8, v84 + 8, MEMORY[0x1E4FBB320]);
    sub_1B61B0E80();
    uint64_t v85 = (void *)sub_1B61B01B0();
    swift_retain();
    sub_1B61B0D20();
    swift_release();

    swift_release();
    id v86 = (void *)sub_1B61B0C80();
    uint64_t v87 = sub_1B61B0D50();
    swift_release();
    swift_release();

    swift_bridgeObjectRelease();
    return v87;
  }
  uint64_t v97 = isUniquelyReferenced_nonNull_native + 10;
  id v98 = isUniquelyReferenced_nonNull_native + 4;
  uint64_t v94 = isUniquelyReferenced_nonNull_native;
  sub_1B61B1F70();
  uint64_t v96 = isUniquelyReferenced_nonNull_native + 11;
  swift_beginAccess();
  uint64_t v95 = isUniquelyReferenced_nonNull_native + 6;
  swift_beginAccess();
  uint64_t v17 = 32;
  int v93 = v5[473];
  uint64_t v99 = v15;
  while (1)
  {
    memcpy(__dst, (const void *)(v15 + v17), 0x61uLL);
    uint64_t v19 = __dst[2];
    uint64_t v18 = __dst[3];
    if (__dst[10])
    {
      uint64_t v20 = *v96;
      sub_1B5F4A488((uint64_t)__dst);
      sub_1B61B1F70();
      sub_1B61B1F70();
      sub_1B5E75B84(v19, v18, v20);
      char v22 = v21;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v22)
      {
        sub_1B5F4A488((uint64_t)__dst);
        unint64_t v23 = sub_1B61B1000();
        os_log_type_t v24 = sub_1B61B2BA0();
        if (os_log_type_enabled(v23, v24))
        {
          uint64_t v25 = swift_slowAlloc();
          uint64_t v26 = swift_slowAlloc();
          v105[0] = v26;
          *(_DWORD *)uint64_t v25 = v93;
          sub_1B61B1F70();
          *(void *)(v25 + 4) = sub_1B5EA6A1C(v19, v18, v105);
          swift_bridgeObjectRelease();
          sub_1B5F4A4C0((uint64_t)__dst);
          sub_1B5F4A4C0((uint64_t)__dst);
          swift_arrayDestroy();
          MEMORY[0x1BA9B1D70](v26, -1, -1);
          MEMORY[0x1BA9B1D70](v25, -1, -1);
        }
        else
        {
          sub_1B5F4A4C0((uint64_t)__dst);
          sub_1B5F4A4C0((uint64_t)__dst);
        }

        goto LABEL_61;
      }
    }
    else
    {
      sub_1B5F4A488((uint64_t)__dst);
    }
    uint64_t v100 = v16;
    sub_1B5F4A4F8((uint64_t)&__dst[11], (uint64_t)v108);
    sub_1B5F4A4F8((uint64_t)v108, (uint64_t)&v109);
    if (v110) {
      goto LABEL_38;
    }
    uint64_t v27 = v109;
    uint64_t v28 = v97;
    swift_beginAccess();
    if (*(void *)(*v97 + 16))
    {
      sub_1B61B1F70();
      sub_1B5E46C8C();
      if (v29)
      {
        swift_endAccess();
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    swift_beginAccess();
    sub_1B61B1F70();
    char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v101 = *v97;
    uint64_t v30 = v101;
    *uint64_t v97 = 0x8000000000000000;
    unint64_t v31 = sub_1B5E46C8C();
    if (__OFADD__(*(void *)(v30 + 16), (v32 & 1) == 0))
    {
      __break(1u);
LABEL_75:
      __break(1u);
      goto LABEL_76;
    }
    unint64_t v33 = v31;
    char v34 = v32;
    sub_1B5F4B1C0(0, (unint64_t *)&qword_1EB64B2E0, MEMORY[0x1E4FBBCB8]);
    uint64_t v28 = v97;
    if (sub_1B61B3480()) {
      break;
    }
LABEL_26:
    char isUniquelyReferenced_nonNull_native = (void *)v101;
    if (v34)
    {
      *(void *)(*(void *)(v101 + 56) + 8 * v33) = -1;
    }
    else
    {
      *(void *)(v101 + 8 * (v33 >> 6) + 64) |= 1 << v33;
      BOOL v37 = (uint64_t *)(isUniquelyReferenced_nonNull_native[6] + 16 * v33);
      *BOOL v37 = v19;
      v37[1] = v18;
      *(void *)(isUniquelyReferenced_nonNull_native[7] + 8 * v33) = -1;
      uint64_t v38 = isUniquelyReferenced_nonNull_native[2];
      BOOL v39 = __OFADD__(v38, 1);
      uint64_t v40 = v38 + 1;
      if (v39) {
        goto LABEL_75;
      }
      isUniquelyReferenced_nonNull_native[2] = v40;
      sub_1B61B1F70();
    }
    *uint64_t v97 = isUniquelyReferenced_nonNull_native;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
LABEL_31:
    swift_beginAccess();
    uint64_t v41 = *v28;
    if (!*(void *)(*v28 + 16)) {
      goto LABEL_37;
    }
    sub_1B61B1F70();
    unint64_t v42 = sub_1B5E46C8C();
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_37:
      swift_endAccess();
      goto LABEL_38;
    }
    uint64_t v44 = *(void *)(*(void *)(v41 + 56) + 8 * v42);
    swift_endAccess();
    swift_bridgeObjectRelease();
    if (v44 >= v27)
    {
      sub_1B5F4A488((uint64_t)__dst);
      uint64_t v45 = sub_1B61B1000();
      os_log_type_t v46 = sub_1B61B2BA0();
      if (!os_log_type_enabled(v45, v46)) {
        goto LABEL_50;
      }
      uint64_t v47 = swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      v105[0] = v48;
      *(_DWORD *)uint64_t v47 = 136315650;
      sub_1B61B1F70();
      *(void *)(v47 + 4) = sub_1B5EA6A1C(v19, v18, v105);
      swift_bridgeObjectRelease();
      sub_1B5F4A4C0((uint64_t)__dst);
      sub_1B5F4A4C0((uint64_t)__dst);
      *(_WORD *)(v47 + 12) = 2048;
      *(void *)(v47 + 14) = v44;
      *(_WORD *)(v47 + 22) = 2048;
      *(void *)(v47 + 24) = v27;
      _os_log_impl(&dword_1B5DE7000, v45, v46, "Presentation operation (%s) has a retry count of %ld and a maximum retry value of %ld. | This operation will NOT be presented.", (uint8_t *)v47, 0x20u);
      goto LABEL_49;
    }
LABEL_38:
    uint64_t v49 = __dst[0];
    unint64_t v50 = __dst[1];
    swift_beginAccess();
    uint64_t v51 = *v98;
    if (*(void *)(*v98 + 16))
    {
      sub_1B61B1F70();
      unint64_t v52 = sub_1B5E46C8C();
      if (v53)
      {
        sub_1B5E176E4(*(void *)(v51 + 56) + 40 * v52, (uint64_t)&v101);
      }
      else
      {
        uint64_t v103 = 0;
        long long v101 = 0u;
        long long v102 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v102 + 1))
      {
        uint64_t v54 = __dst[4];
        sub_1B5E30E70(&v101, (uint64_t)v105);
        uint64_t v55 = swift_endAccess();
        if (*v95 >= v54)
        {
          uint64_t v62 = __dst[9];
          if (__dst[9]
            && (sub_1B5F498B4(v89, (uint64_t)&v101),
                uint64_t v63 = *((void *)&v102 + 1),
                uint64_t v55 = sub_1B5F4AC20((uint64_t)&v101, &qword_1EB64AD58, (uint64_t)&unk_1EB64AD50, (uint64_t)&protocol descriptor for LaunchConditionProviderType), !v63))
          {
            sub_1B5F4A488((uint64_t)__dst);
            uint64_t v78 = sub_1B61B1000();
            os_log_type_t v79 = sub_1B61B2BA0();
            if (os_log_type_enabled(v78, v79))
            {
              uint64_t v80 = swift_slowAlloc();
              uint64_t v81 = swift_slowAlloc();
              *(void *)&long long v101 = v81;
              *(_DWORD *)uint64_t v80 = 136315394;
              sub_1B61B1F70();
              *(void *)(v80 + 4) = sub_1B5EA6A1C(v19, v18, (uint64_t *)&v101);
              swift_bridgeObjectRelease();
              *(_WORD *)(v80 + 12) = 2080;
              uint64_t v104 = v62;
              PresentationOperation.LaunchConditions.description.getter();
              *(void *)(v80 + 14) = sub_1B5EA6A1C(v82, v83, (uint64_t *)&v101);
              swift_bridgeObjectRelease();
              sub_1B5F4A4C0((uint64_t)__dst);
              sub_1B5F4A4C0((uint64_t)__dst);
              _os_log_impl(&dword_1B5DE7000, v78, v79, "Presentation operation (%s) is configured to be suppressed by launch conditions: %s, but there is no LaunchConditionProvider to ensure conditions are compliant. | This operation will NOT be presented.", (uint8_t *)v80, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x1BA9B1D70](v81, -1, -1);
              MEMORY[0x1BA9B1D70](v80, -1, -1);
            }
            else
            {
              sub_1B5F4A4C0((uint64_t)__dst);
              sub_1B5F4A4C0((uint64_t)__dst);
            }

            uint64_t v15 = v99;
            uint64_t v16 = v100;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v105);
          }
          else
          {
            uint64_t v16 = v100;
            if (v91 && (v62 & v92) != 0)
            {
              sub_1B5F4A488((uint64_t)__dst);
              uint64_t v64 = sub_1B61B1000();
              os_log_type_t v65 = sub_1B61B2BA0();
              if (os_log_type_enabled(v64, v65))
              {
                uint64_t v66 = swift_slowAlloc();
                uint64_t v67 = swift_slowAlloc();
                *(void *)&long long v101 = v67;
                *(_DWORD *)uint64_t v66 = 136315650;
                sub_1B61B1F70();
                uint64_t v104 = sub_1B5EA6A1C(v19, v18, (uint64_t *)&v101);
                sub_1B61B2FB0();
                swift_bridgeObjectRelease();
                *(_WORD *)(v66 + 12) = 2080;
                uint64_t v104 = v62;
                PresentationOperation.LaunchConditions.description.getter();
                uint64_t v104 = sub_1B5EA6A1C(v68, v69, (uint64_t *)&v101);
                sub_1B61B2FB0();
                swift_bridgeObjectRelease();
                sub_1B5F4A4C0((uint64_t)__dst);
                sub_1B5F4A4C0((uint64_t)__dst);
                *(_WORD *)(v66 + 22) = 2080;
                uint64_t v104 = v92;
                PresentationOperation.LaunchConditions.description.getter();
                uint64_t v104 = sub_1B5EA6A1C(v70, v71, (uint64_t *)&v101);
                sub_1B61B2FB0();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_1B5DE7000, v64, v65, "Presentation operation (%s) is configured to be suppressed by launch conditions: %s, and our current launch conditions are %s. | This operation will NOT be presented.", (uint8_t *)v66, 0x20u);
                swift_arrayDestroy();
                uint64_t v72 = v67;
                uint64_t v16 = v100;
                MEMORY[0x1BA9B1D70](v72, -1, -1);
                MEMORY[0x1BA9B1D70](v66, -1, -1);
              }
              else
              {
                sub_1B5F4A4C0((uint64_t)__dst);
                sub_1B5F4A4C0((uint64_t)__dst);
              }
            }
            else
            {
              MEMORY[0x1F4188790](v55);
              sub_1B61B0E80();
              uint64_t v73 = swift_allocObject();
              memcpy((void *)(v73 + 16), __dst, 0x61uLL);
              sub_1B5F4A488((uint64_t)__dst);
              id v74 = (void *)sub_1B61B0C80();
              sub_1B61B0DD0();
              swift_release();
              swift_release();

              uint64_t v75 = (void *)sub_1B61B01B0();
              uint64_t v76 = swift_allocObject();
              *(void *)(v76 + 16) = v90;
              memcpy((void *)(v76 + 24), __dst, 0x61uLL);
              swift_retain();
              sub_1B61B0D30();
              swift_release();

              swift_release();
              uint64_t v77 = swift_retain();
              MEMORY[0x1BA9AF660](v77);
              if (*(void *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_1B61B2580();
              }
              sub_1B61B25D0();
              sub_1B61B2510();
              swift_release();
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v105);
            uint64_t v15 = v99;
          }
          goto LABEL_61;
        }
        swift_retain_n();
        sub_1B5F4A488((uint64_t)__dst);
        char v56 = sub_1B61B1000();
        os_log_type_t v57 = sub_1B61B2BA0();
        if (os_log_type_enabled(v56, v57))
        {
          uint64_t v58 = swift_slowAlloc();
          uint64_t v59 = swift_slowAlloc();
          *(void *)&long long v101 = v59;
          *(_DWORD *)uint64_t v58 = 136315650;
          sub_1B61B1F70();
          *(void *)(v58 + 4) = sub_1B5EA6A1C(v19, v18, (uint64_t *)&v101);
          swift_bridgeObjectRelease();
          *(_WORD *)(v58 + 12) = 2048;
          sub_1B5F4A4C0((uint64_t)__dst);
          *(void *)(v58 + 14) = v54;
          sub_1B5F4A4C0((uint64_t)__dst);
          *(_WORD *)(v58 + 22) = 2048;
          uint64_t v60 = v94[6];
          swift_release();
          *(void *)(v58 + 24) = v60;
          swift_release();
          _os_log_impl(&dword_1B5DE7000, v56, v57, "Presentation operation (%s) has a requiredAppLaunchCount value of %ld, but our appLaunchCount is %ld. | This operation will NOT be presented.", (uint8_t *)v58, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1BA9B1D70](v59, -1, -1);
          MEMORY[0x1BA9B1D70](v58, -1, -1);
        }
        else
        {
          swift_release();
          sub_1B5F4A4C0((uint64_t)__dst);
          sub_1B5F4A4C0((uint64_t)__dst);

          swift_release();
        }
        uint64_t v15 = v99;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v105);
        goto LABEL_60;
      }
    }
    else
    {
      uint64_t v103 = 0;
      long long v101 = 0u;
      long long v102 = 0u;
    }
    sub_1B5F4AC20((uint64_t)&v101, &qword_1EB6418C0, (uint64_t)&unk_1EB64A9B0, (uint64_t)&protocol descriptor for PresentationHandlerType);
    swift_endAccess();
    sub_1B5F4A488((uint64_t)__dst);
    uint64_t v45 = sub_1B61B1000();
    os_log_type_t v61 = sub_1B61B2BA0();
    if (!os_log_type_enabled(v45, v61))
    {
LABEL_50:
      sub_1B5F4A4C0((uint64_t)__dst);
      sub_1B5F4A4C0((uint64_t)__dst);
      goto LABEL_51;
    }
    uint64_t v47 = swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    v105[0] = v48;
    *(_DWORD *)uint64_t v47 = 136315394;
    sub_1B61B1F70();
    *(void *)(v47 + 4) = sub_1B5EA6A1C(v49, v50, v105);
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2080;
    sub_1B61B1F70();
    *(void *)(v47 + 14) = sub_1B5EA6A1C(v19, v18, v105);
    swift_bridgeObjectRelease();
    sub_1B5F4A4C0((uint64_t)__dst);
    sub_1B5F4A4C0((uint64_t)__dst);
    _os_log_impl(&dword_1B5DE7000, v45, v61, "Presentation handler UID (%s) does not have a presentation handler with a matching UID registered. | The operation (%s will NOT be presented.", (uint8_t *)v47, 0x16u);
LABEL_49:
    swift_arrayDestroy();
    MEMORY[0x1BA9B1D70](v48, -1, -1);
    MEMORY[0x1BA9B1D70](v47, -1, -1);
LABEL_51:

    uint64_t v15 = v99;
LABEL_60:
    uint64_t v16 = v100;
LABEL_61:
    v17 += 104;
    if (!--v16)
    {
      uint64_t v14 = swift_bridgeObjectRelease();
      goto LABEL_73;
    }
  }
  unint64_t v35 = sub_1B5E46C8C();
  if ((v34 & 1) == (v36 & 1))
  {
    unint64_t v33 = v35;
    goto LABEL_26;
  }
  uint64_t result = sub_1B61B3840();
  __break(1u);
  return result;
}

uint64_t sub_1B5F46918(double a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = sub_1B61B1E20();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v19 - v11;
  sub_1B5F4B224(0, (unint64_t *)&qword_1EB64A458, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAB088]);
  sub_1B61B1E10();
  MEMORY[0x1BA9AEFF0](v10, a1);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v10, v6);
  uint64_t v14 = a4[3];
  uint64_t v15 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v14);
  (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
  uint64_t v16 = (void *)sub_1B61B0C80();
  uint64_t v17 = sub_1B61B0DE0();
  swift_release();

  v13(v12, v6);
  return v17;
}

uint64_t sub_1B5F46AE8(void *a1, uint64_t a2)
{
  if (qword_1EB64A470 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1B61B1020();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB654B90);
  id v5 = a1;
  id v6 = a1;
  sub_1B5F4A488(a2);
  uint64_t v7 = sub_1B61B1000();
  os_log_type_t v8 = sub_1B61B2BA0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v11 = *(void *)(a2 + 16);
    unint64_t v12 = *(void *)(a2 + 24);
    sub_1B61B1F70();
    sub_1B5EA6A1C(v11, v12, &v16);
    sub_1B61B2FB0();
    swift_bridgeObjectRelease();
    sub_1B5F4A4C0(a2);
    *(_WORD *)(v9 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v13 = sub_1B61B3870();
    sub_1B5EA6A1C(v13, v14, &v16);
    sub_1B61B2FB0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1B5DE7000, v7, v8, "Presentation handler for operation (%s) encountered the following error: %s. | Its operation will NOT be presented.", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BA9B1D70](v10, -1, -1);
    MEMORY[0x1BA9B1D70](v9, -1, -1);
  }
  else
  {
    sub_1B5F4A4C0(a2);
  }
  LOBYTE(v16) = 0;
  sub_1B5F4B224(0, (unint64_t *)&qword_1EB64A458, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1B61B0DA0();
}

void sub_1B5F46D6C(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5 = *a1;
  if (v5 == 1)
  {
    uint64_t v6 = *(void *)(a4 + 16);
    uint64_t v7 = *(void *)(a4 + 24);
    swift_beginAccess();
    sub_1B61B1F70();
    sub_1B5F4AD6C(v6, v7);
    swift_endAccess();
  }
  else
  {
    uint64_t v9 = *(void *)(a4 + 16);
    uint64_t v10 = *(void *)(a4 + 24);
    swift_beginAccess();
    uint64_t v11 = *(void *)(a2 + 80);
    sub_1B61B1F70();
    uint64_t v12 = sub_1B5E13AE8(v9, v10, v11);
    char v14 = v13;
    swift_bridgeObjectRelease();
    if (v14)
    {
      swift_endAccess();
      goto LABEL_8;
    }
    swift_endAccess();
    BOOL v15 = __OFADD__(v12, 1);
    uint64_t v16 = v12 + 1;
    if (v15)
    {
      __break(1u);
      return;
    }
    swift_beginAccess();
    sub_1B61B1F70();
    sub_1B5E43A98(v16, v9, v10);
    swift_endAccess();
  }
  swift_bridgeObjectRelease();
LABEL_8:
  if (qword_1EB64A470 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1B61B1020();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EB654B90);
  sub_1B5F4A488(a4);
  uint64_t v18 = sub_1B61B1000();
  os_log_type_t v19 = sub_1B61B2BA0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    v24[0] = v21;
    *(_DWORD *)uint64_t v20 = 136315394;
    uint64_t v22 = *(void *)(a4 + 16);
    unint64_t v23 = *(void *)(a4 + 24);
    sub_1B61B1F70();
    uint64_t v25 = sub_1B5EA6A1C(v22, v23, v24);
    sub_1B61B2FB0();
    swift_bridgeObjectRelease();
    sub_1B5F4A4C0(a4);
    *(_WORD *)(v20 + 12) = 1024;
    LODWORD(v25) = v5;
    sub_1B61B2FB0();
    _os_log_impl(&dword_1B5DE7000, v18, v19, "(%s) Presentation Required: %{BOOL}d", (uint8_t *)v20, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1BA9B1D70](v21, -1, -1);
    MEMORY[0x1BA9B1D70](v20, -1, -1);
  }
  else
  {
    sub_1B5F4A4C0(a4);
  }
}

uint64_t sub_1B5F47034()
{
  sub_1B5F4B224(0, (unint64_t *)&qword_1EB64A460, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
  sub_1B61B1F70();
  uint64_t v0 = (void *)sub_1B61B0C80();
  sub_1B5F4B0D4();
  sub_1B5F4AA70(&qword_1EB64B1F0, 255, (void (*)(uint64_t))sub_1B5F4B0D4);
  uint64_t v1 = sub_1B61B0CF0();
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t sub_1B5F47128(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)(a3 + 16);
  int v5 = a2 + 5;
  swift_beginAccess();
  uint64_t v6 = sub_1B5F4A594(v5, v4);
  if (*(void *)(a2[5] + 16) < v6)
  {
    __break(1u);
  }
  else
  {
    sub_1B607C194(v6);
    swift_endAccess();
    if (qword_1EB64A470 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v7 = sub_1B61B1020();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EB654B90);
  swift_retain_n();
  os_log_type_t v8 = sub_1B61B1000();
  os_log_type_t v9 = sub_1B61B2BA0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    v22[0] = swift_slowAlloc();
    uint64_t v11 = v22[0];
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v12 = sub_1B61B1F70();
    uint64_t v13 = MEMORY[0x1BA9AF6A0](v12, &type metadata for PresentationOperation);
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
    v22[4] = sub_1B5EA6A1C(v13, v15, v22);
    sub_1B61B2FB0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B5DE7000, v8, v9, "Completed required presentation filtering. Operations requiring presentation: %s.", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9B1D70](v11, -1, -1);
    MEMORY[0x1BA9B1D70](v10, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v16 = a2[20];
  uint64_t v17 = a2[21];
  __swift_project_boxed_opaque_existential_1(a2 + 17, v16);
  swift_beginAccess();
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 64);
  uint64_t v19 = sub_1B61B1F70();
  uint64_t v20 = v18(v19, v16, v17);
  swift_bridgeObjectRelease();
  return v20;
}

void sub_1B5F473BC(void *a1)
{
  if (qword_1EB64A470 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1B61B1020();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB654B90);
  id v3 = a1;
  id v4 = a1;
  oslog = sub_1B61B1000();
  os_log_type_t v5 = sub_1B61B2BA0();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v11 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_getErrorValue();
    uint64_t v8 = sub_1B61B3870();
    sub_1B5EA6A1C(v8, v9, &v11);
    sub_1B61B2FB0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1B5DE7000, oslog, v5, "Encountered error during required operation filtering: %s. | Operations will NOT be presented.", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9B1D70](v7, -1, -1);
    MEMORY[0x1BA9B1D70](v6, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_1B5F475B0(void *a1)
{
  uint64_t v1 = a1[20];
  uint64_t v2 = a1[21];
  __swift_project_boxed_opaque_existential_1(a1 + 17, v1);
  swift_beginAccess();
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  uint64_t v4 = sub_1B61B1F70();
  uint64_t v5 = v3(v4, v1, v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B5F4765C(void *a1, char a2, uint64_t a3, const void *a4)
{
  uint64_t v7 = sub_1B61B1D90();
  uint64_t v19 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1B61B1DF0();
  uint64_t v10 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB64CA90);
  uint64_t v13 = (void *)sub_1B61B2C50();
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  memcpy((void *)(v15 + 24), a4, 0x61uLL);
  *(void *)(v15 + 128) = a1;
  LOBYTE(v14) = a2 & 1;
  *(unsigned char *)(v15 + 136) = a2 & 1;
  aBlock[4] = sub_1B5F4AA50;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B5E3729C;
  aBlock[3] = &block_descriptor_28;
  uint64_t v16 = _Block_copy(aBlock);
  sub_1B5F4A488((uint64_t)a4);
  sub_1B5F4AA64(a1, v14);
  swift_release();
  sub_1B61B1DB0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1B5F4AA70((unint64_t *)&qword_1EB647A40, 255, MEMORY[0x1E4FBCB00]);
  sub_1B5F4AAB8(0, (unint64_t *)&qword_1EB647AD8, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1B5E5C5CC();
  sub_1B61B3100();
  MEMORY[0x1BA9AFE10](0, v12, v9, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v18);
}

uint64_t sub_1B5F479AC(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1B5F47A28(*(void *)(a2 + 16), *(void *)(a2 + 24), a3, a4 & 1);
    return swift_release();
  }
  return result;
}

void sub_1B5F47A28(uint64_t a1, unint64_t a2, id a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = &unk_1B61C7000;
  if (a4)
  {
    id v10 = a3;
    if (qword_1EB64A470 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1B61B1020();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EB654B90);
    sub_1B5F4AA64(a3, 1);
    sub_1B61B1F70();
    sub_1B5F4AA64(a3, 1);
    sub_1B61B1F70();
    uint64_t v12 = sub_1B61B1000();
    os_log_type_t v13 = sub_1B61B2B80();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v51 = v5;
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = (void *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      v57[0] = v50;
      *(_DWORD *)uint64_t v14 = 136315394;
      sub_1B61B1F70();
      sub_1B5EA6A1C(a1, a2, v57);
      sub_1B61B2FB0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v14 + 12) = 2112;
      id v16 = a3;
      v56[0] = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v8 = (void *)&unk_1B61C7000;
      sub_1B61B2FB0();
      *uint64_t v15 = v56[0];
      sub_1B5F4AA44(a3, 1);
      sub_1B5F4AA44(a3, 1);
      _os_log_impl(&dword_1B5DE7000, v12, v13, "Presentation operation (%s) encountered the following error during presentation: %@.\nIts presentation count will not be incremented.", (uint8_t *)v14, 0x16u);
      sub_1B5F4AB8C(0, &qword_1EB647CD0, (uint64_t)&qword_1EB647CC0, 0x1E4FBA8A8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B5DFF760);
      swift_arrayDestroy();
      MEMORY[0x1BA9B1D70](v15, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1BA9B1D70](v50, -1, -1);
      uint64_t v17 = v14;
      uint64_t v5 = v51;
      MEMORY[0x1BA9B1D70](v17, -1, -1);

      sub_1B5F4AA44(a3, 1);
    }
    else
    {
      sub_1B5F4AA44(a3, 1);
      swift_bridgeObjectRelease_n();
      sub_1B5F4AA44(a3, 1);
      sub_1B5F4AA44(a3, 1);
    }
  }
  swift_beginAccess();
  uint64_t v18 = *(void *)(v5 + 40);
  if (*(void *)(v18 + 16))
  {
    uint64_t v19 = v8;
    uint64_t v20 = *(void **)(v18 + 40);
    uint64_t v21 = *(void **)(v18 + 48);
    uint64_t v22 = *(NSObject **)(v18 + 56);
    char v52 = *(unsigned char *)(v18 + 97);
    BOOL v23 = v21 == (void *)a1 && v22 == a2;
    uint64_t v49 = a1;
    if (!v23 && (sub_1B61B3760() & 1) == 0)
    {
      uint64_t v43 = qword_1EB64A470;
      sub_1B61B1F70();
      sub_1B61B1F70();
      if (v43 == -1) {
        goto LABEL_37;
      }
      goto LABEL_45;
    }
    if (a4)
    {
      sub_1B61B1F70();
      sub_1B61B1F70();
    }
    else
    {
      uint64_t v21 = &unk_1EB64A000;
      swift_beginAccess();
      uint64_t v24 = *(void *)(v5 + 72);
      sub_1B61B1F70();
      uint64_t v19 = v20;
      sub_1B61B1F70();
      sub_1B61B1F70();
      uint64_t v25 = sub_1B5E13AE8(a1, a2, v24);
      char v27 = v26;
      swift_endAccess();
      swift_bridgeObjectRelease();
      if (v27) {
        uint64_t v28 = 0;
      }
      else {
        uint64_t v28 = v25;
      }
      uint64_t v29 = v28 + 1;
      if (__OFADD__(v28, 1))
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        swift_once();
LABEL_37:
        uint64_t v44 = sub_1B61B1020();
        __swift_project_value_buffer(v44, (uint64_t)qword_1EB654B90);
        swift_bridgeObjectRetain_n();
        sub_1B61B1F70();
        sub_1B61B1F70();
        uint64_t v45 = sub_1B61B1000();
        os_log_type_t v46 = sub_1B61B2B80();
        if (os_log_type_enabled(v45, v46))
        {
          uint64_t v47 = swift_slowAlloc();
          uint64_t v54 = swift_slowAlloc();
          v56[0] = v54;
          *(_DWORD *)uint64_t v47 = v19[464];
          sub_1B61B1F70();
          uint64_t v55 = sub_1B5EA6A1C(v49, a2, v56);
          sub_1B61B2FB0();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v47 + 12) = 2080;
          sub_1B61B1F70();
          uint64_t v55 = sub_1B5EA6A1C((uint64_t)v21, (unint64_t)v22, v56);
          sub_1B61B2FB0();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1B5DE7000, v45, v46, "Presentation operation (%s) has completed execution but doesn't match the UID that's currently pending completion (%s)! | This queue is in a bad state so no further items will be processed.", (uint8_t *)v47, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1BA9B1D70](v54, -1, -1);
          MEMORY[0x1BA9B1D70](v47, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        goto LABEL_41;
      }
      swift_beginAccess();
      sub_1B61B1F70();
      sub_1B5E43A98(v29, a1, a2);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      sub_1B61B1F70();
      sub_1B5EB9694(&v55, a1, a2);
      swift_endAccess();
      swift_bridgeObjectRelease();
    }
    if (qword_1EB64A470 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_1B61B1020();
    __swift_project_value_buffer(v35, (uint64_t)qword_1EB654B90);
    swift_bridgeObjectRetain_n();
    uint64_t v22 = sub_1B61B1000();
    os_log_type_t v36 = sub_1B61B2BA0();
    if (os_log_type_enabled(v22, v36))
    {
      BOOL v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      v56[0] = v38;
      *(_DWORD *)BOOL v37 = 136315138;
      sub_1B61B1F70();
      uint64_t v55 = sub_1B5EA6A1C(a1, a2, v56);
      sub_1B61B2FB0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1B5DE7000, v22, v36, "Presentation operation (%s) has reported that its presentation is now complete! | Please review the associated presentation handler log channel for details about the presentation process.", v37, 0xCu);
      uint64_t v21 = (void *)MEMORY[0x1E4FBC840];
      swift_arrayDestroy();
      MEMORY[0x1BA9B1D70](v38, -1, -1);
      MEMORY[0x1BA9B1D70](v37, -1, -1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      uint64_t v21 = (void *)MEMORY[0x1E4FBC840];
    }
    uint64_t v19 = (void *)(v5 + 40);
    if (v52)
    {
      swift_bridgeObjectRetain_n();
      BOOL v39 = sub_1B61B1000();
      os_log_type_t v40 = sub_1B61B2BA0();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        v56[0] = v42;
        *(_DWORD *)uint64_t v41 = 136315138;
        sub_1B61B1F70();
        uint64_t v55 = sub_1B5EA6A1C(a1, a2, v56);
        sub_1B61B2FB0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1B5DE7000, v39, v40, "Presentation operation (%s) is flagged to terminate the current presentation session.  Presentation queue will be emptied. . .", v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BA9B1D70](v42, -1, -1);
        MEMORY[0x1BA9B1D70](v41, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
LABEL_41:
      *(void *)(v5 + 40) = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRelease();
      sub_1B5F4AB38(0, &qword_1EB641A40);
      goto LABEL_42;
    }
    swift_beginAccess();
    if (*(void *)(*(void *)(v5 + 40) + 16))
    {
      sub_1B61B1F70();
      sub_1B61B1F70();
      sub_1B607C194(0);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B5F4AB38(0, &qword_1EB641A40);
      goto LABEL_42;
    }
    goto LABEL_44;
  }
  if (qword_1EB64A470 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_1B61B1020();
  __swift_project_value_buffer(v30, (uint64_t)qword_1EB654B90);
  swift_bridgeObjectRetain_n();
  unint64_t v31 = sub_1B61B1000();
  os_log_type_t v32 = sub_1B61B2B80();
  if (os_log_type_enabled(v31, v32))
  {
    unint64_t v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    v56[0] = v34;
    *(_DWORD *)unint64_t v33 = 136315138;
    sub_1B61B1F70();
    uint64_t v55 = sub_1B5EA6A1C(a1, a2, v56);
    sub_1B61B2FB0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1B5DE7000, v31, v32, "Presentation operation (%s) just completed execution but the pending operation queue is already empty!", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9B1D70](v34, -1, -1);
    MEMORY[0x1BA9B1D70](v33, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1B5F4AB38(0, &qword_1EB641A40);
LABEL_42:
  sub_1B61B0E80();
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB64CA90);
  uint64_t v48 = (void *)sub_1B61B2C50();
  sub_1B61B0D30();
  swift_release();
  swift_release();
}

uint64_t sub_1B5F486B0(void *a1)
{
  uint64_t v1 = a1[20];
  uint64_t v2 = a1[21];
  __swift_project_boxed_opaque_existential_1(a1 + 17, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v2);
}

uint64_t sub_1B5F48710(void *a1)
{
  sub_1B5F10254();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB64A470 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1B61B1020();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB654B90);
  id v7 = a1;
  id v8 = a1;
  unint64_t v9 = sub_1B61B1000();
  os_log_type_t v10 = sub_1B61B2BA0();
  if (os_log_type_enabled(v9, v10))
  {
    v17[0] = v1;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v18 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    swift_getErrorValue();
    uint64_t v13 = sub_1B61B3870();
    v17[1] = sub_1B5EA6A1C(v13, v14, &v18);
    sub_1B61B2FB0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1B5DE7000, v9, v10, "Failed to retrieve app background date and / or required background time interval because of the following error: %s. | Assuming background date in distant past and proceeding with app launch processing. . .", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9B1D70](v12, -1, -1);
    MEMORY[0x1BA9B1D70](v11, -1, -1);
  }
  else
  {
  }
  sub_1B61AF9C0();
  uint64_t v15 = sub_1B61AFA70();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v15);
  sub_1B5F4AAB8(0, &qword_1E9DAA688, (uint64_t (*)(uint64_t))sub_1B5F10254, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1B61B0DA0();
}

uint64_t sub_1B5F489A4(uint64_t a1, double a2)
{
  sub_1B5F10254();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1B61AFA70();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v18 - v12;
  sub_1B61AFA60();
  sub_1B5F101F0(a1, (uint64_t)v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {
    sub_1B61AF9C0();
    sub_1B5F4B2C0((uint64_t)v6);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
  }
  sub_1B61AF9D0();
  double v15 = v14;
  id v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v11, v7);
  v16(v13, v7);
  BOOL v19 = sub_1B5F48BC4(v15, a2);
  sub_1B5F4B224(0, (unint64_t *)&qword_1EB64A458, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1B61B0DA0();
}

BOOL sub_1B5F48BC4(double a1, double a2)
{
  if (a2 >= a1)
  {
    if (qword_1EB64A470 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1B61B1020();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EB654B90);
    uint64_t v5 = sub_1B61B1000();
    os_log_type_t v6 = sub_1B61B2BA0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 134218240;
      sub_1B61B2FB0();
      *(_WORD *)(v7 + 12) = 2048;
      sub_1B61B2FB0();
      uint64_t v8 = "Time interval since last background date: %f | Minimum time interval since last background: %f | An insuffici"
           "ent amount of time has passed to treat this scene activation as an application launch.";
      goto LABEL_10;
    }
  }
  else
  {
    if (qword_1EB64A470 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1B61B1020();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EB654B90);
    uint64_t v5 = sub_1B61B1000();
    os_log_type_t v6 = sub_1B61B2BA0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 134218240;
      sub_1B61B2FB0();
      *(_WORD *)(v7 + 12) = 2048;
      sub_1B61B2FB0();
      uint64_t v8 = "Time interval since last background date: %f | Minimum time interval since last background: %f | Enough time "
           "has passed to treat this scene activation as an application launch.";
LABEL_10:
      _os_log_impl(&dword_1B5DE7000, v5, v6, v8, (uint8_t *)v7, 0x16u);
      MEMORY[0x1BA9B1D70](v7, -1, -1);
    }
  }

  return a2 < a1;
}

void sub_1B5F48DDC()
{
  swift_retain();
  id v1 = (id)sub_1B61B01B0();
  Bootstrapper.afterBootstrap(on:run:)((uint64_t)v1, (uint64_t)sub_1B5F4B31C, v0);
  swift_release();
}

void sub_1B5F48E50(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 217) == 1)
  {
    id v2 = objc_msgSend(self, sel_sharedApplication);
    id v3 = objc_msgSend(v2, sel_applicationState);

    if (v3 == (id)2)
    {
      if (qword_1EB64A470 != -1) {
        swift_once();
      }
      uint64_t v4 = sub_1B61B1020();
      __swift_project_value_buffer(v4, (uint64_t)qword_1EB654B90);
      oslog = sub_1B61B1000();
      os_log_type_t v5 = sub_1B61B2BA0();
      if (os_log_type_enabled(oslog, v5))
      {
        os_log_type_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v6 = 0;
        _os_log_impl(&dword_1B5DE7000, oslog, v5, "Presentation Operation Manager ignoring launch since application is in background.", v6, 2u);
        MEMORY[0x1BA9B1D70](v6, -1, -1);
      }
    }
    else
    {
      if (qword_1EB64A470 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_1B61B1020();
      __swift_project_value_buffer(v7, (uint64_t)qword_1EB654B90);
      uint64_t v8 = sub_1B61B1000();
      os_log_type_t v9 = sub_1B61B2BA0();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v10 = 0;
        _os_log_impl(&dword_1B5DE7000, v8, v9, "Beginning initial presentation processing . . .", v10, 2u);
        MEMORY[0x1BA9B1D70](v10, -1, -1);
      }

      sub_1B5F438B0(1);
      *(unsigned char *)(a1 + 217) = 0;
    }
  }
}

Swift::Void __swiftcall PresentationOperationManager.applicationDidFinishLaunching(withOptions:)(Swift::OpaquePointer_optional withOptions)
{
  if (qword_1EB64A470 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1B61B1020();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB654B90);
  id v2 = (void *)sub_1B61B1000();
  os_log_type_t v3 = sub_1B61B2BA0();
  if (OUTLINED_FUNCTION_7_33(v3))
  {
    *(_WORD *)OUTLINED_FUNCTION_6_37() = 0;
    OUTLINED_FUNCTION_2_58(&dword_1B5DE7000, v4, v5, "Presentation Operation Manager detected application launch.");
    OUTLINED_FUNCTION_7_2();
  }

  sub_1B5F48DDC();
}

uint64_t sub_1B5F49120()
{
  return MEMORY[0x1F415E7C8](*v0);
}

uint64_t sub_1B5F4914C()
{
  return MEMORY[0x1F415E7C8](*v0);
}

void PresentationOperationManager.sceneDidBecomeActive(with:sourceApplication:sceneID:)()
{
  uint64_t v1 = v0;
  if (qword_1EB64A470 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1B61B1020();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB654B90);
  os_log_type_t v3 = sub_1B61B1000();
  os_log_type_t v4 = sub_1B61B2BA0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)OUTLINED_FUNCTION_6_37();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1B5DE7000, v3, v4, "Presentation Operation Manager detected scene becoming active.", v5, 2u);
    OUTLINED_FUNCTION_7_2();
  }

  if (*(unsigned char *)(v1 + 217))
  {
    os_log_type_t v6 = (void *)sub_1B61B1000();
    os_log_type_t v7 = sub_1B61B2BA0();
    if (OUTLINED_FUNCTION_7_33(v7))
    {
      *(_WORD *)OUTLINED_FUNCTION_6_37() = 0;
      OUTLINED_FUNCTION_2_58(&dword_1B5DE7000, v8, v9, "Presentation Operation Manager treating scene activation as app launch.");
      OUTLINED_FUNCTION_7_2();
    }

    OUTLINED_FUNCTION_13_0();
    sub_1B5F48DDC();
    return;
  }
  if (*(unsigned char *)(v1 + 216) == 1)
  {
    sub_1B61B0430();
    if (v26)
    {
      sub_1B5F438B0(0);
LABEL_27:
      *(unsigned char *)(v1 + 216) = 0;
      OUTLINED_FUNCTION_13_0();
      return;
    }
    swift_beginAccess();
    double v15 = *(void **)(v1 + 40);
    if (v15[2])
    {
      uint64_t v16 = v15[6];
      unint64_t v17 = v15[7];
      sub_1B61B1F70();
      sub_1B61B1F70();
      uint64_t v18 = sub_1B61B1000();
      os_log_type_t v19 = sub_1B61B2BA0();
      if (!os_log_type_enabled(v18, v19))
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315138;
      sub_1B61B1F70();
      sub_1B5EA6A1C(v16, v17, &v25);
      sub_1B61B2FB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1B5DE7000, v18, v19, "Scene became active while operation (%s) is in progress. A new processing session will not be initiated.", v20, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_7_2();
    }
    else
    {
      uint64_t v18 = sub_1B61B1000();
      os_log_type_t v21 = sub_1B61B2BA0();
      if (!OUTLINED_FUNCTION_7_33(v21))
      {
LABEL_25:

        goto LABEL_27;
      }
      *(_WORD *)OUTLINED_FUNCTION_6_37() = 0;
      OUTLINED_FUNCTION_2_58(&dword_1B5DE7000, v22, v23, "Scene became active while an operation with a currently unknown UID is in progress. A new processing session will not be initiated.");
    }
    OUTLINED_FUNCTION_7_2();
    goto LABEL_25;
  }
  oslog = sub_1B61B1000();
  os_log_type_t v11 = sub_1B61B2BA0();
  if (os_log_type_enabled(oslog, v11))
  {
    uint64_t v12 = (uint8_t *)OUTLINED_FUNCTION_6_37();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_1B5DE7000, oslog, v11, "We have yet to enter the background so this scene activation cannot be treated as an app launch.", v12, 2u);
    OUTLINED_FUNCTION_7_2();
  }
  OUTLINED_FUNCTION_13_0();
}

Swift::Void __swiftcall PresentationOperationManager.sceneDidEnterBackground()()
{
  uint64_t v1 = sub_1B61AFA70();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  os_log_type_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + 160);
  uint64_t v6 = *(void *)(v0 + 168);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 136), v5);
  sub_1B61AFA60();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 96))(v4, v5, v6);
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  *(unsigned char *)(v0 + 216) = 1;
}

uint64_t sub_1B5F49624()
{
  return sub_1B61B06E0();
}

uint64_t sub_1B5F49654()
{
  return sub_1B61B06E0();
}

uint64_t sub_1B5F49680()
{
  return sub_1B61B0710();
}

uint64_t sub_1B5F496AC()
{
  return sub_1B61B06E0();
}

uint64_t sub_1B5F496DC()
{
  return sub_1B61B0710();
}

uint64_t sub_1B5F49708()
{
  return sub_1B61B0760();
}

uint64_t sub_1B5F49734()
{
  return sub_1B61B06E0();
}

uint64_t sub_1B5F49760(void *a1)
{
  uint64_t v2 = a1 + 17;
  uint64_t v3 = a1[20];
  uint64_t v4 = a1[21];
  __swift_project_boxed_opaque_existential_1(a1 + 17, v3);
  swift_beginAccess();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  uint64_t v6 = sub_1B61B1F70();
  v5(v6, v3, v4);
  swift_bridgeObjectRelease();
  uint64_t v7 = a1[20];
  uint64_t v8 = a1[21];
  __swift_project_boxed_opaque_existential_1(v2, v7);
  swift_beginAccess();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 80);
  uint64_t v10 = sub_1B61B1F70();
  v9(v10, v7, v8);
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1B61B0E40();
  swift_release();
  swift_release();
  return v11;
}

uint64_t sub_1B5F49888()
{
  return sub_1B5F44998();
}

uint64_t sub_1B5F498B4(uint64_t a1, uint64_t a2)
{
  sub_1B5F4AB8C(0, &qword_1EB64AD58, (uint64_t)&unk_1EB64AD50, (uint64_t)&protocol descriptor for LaunchConditionProviderType, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B5E00AB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B5F49944()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B5F4997C()
{
  return sub_1B5F436E4();
}

uint64_t sub_1B5F49984()
{
  return sub_1B5F43734();
}

unint64_t sub_1B5F49990()
{
  unint64_t result = qword_1E9DAA670;
  if (!qword_1E9DAA670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA670);
  }
  return result;
}

unint64_t sub_1B5F499E0()
{
  unint64_t result = qword_1E9DAA678;
  if (!qword_1E9DAA678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA678);
  }
  return result;
}

unint64_t sub_1B5F49A30()
{
  unint64_t result = qword_1E9DAA680;
  if (!qword_1E9DAA680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA680);
  }
  return result;
}

unint64_t sub_1B5F49A80()
{
  unint64_t result = qword_1EB64A960;
  if (!qword_1EB64A960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB64A960);
  }
  return result;
}

unint64_t sub_1B5F49AD0()
{
  unint64_t result = qword_1EB640DA0;
  if (!qword_1EB640DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB640DA0);
  }
  return result;
}

unint64_t sub_1B5F49B20()
{
  unint64_t result = qword_1EB64AEC8;
  if (!qword_1EB64AEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB64AEC8);
  }
  return result;
}

uint64_t sub_1B5F49B6C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = sub_1B5F4AA70(&qword_1EB64AD98, a2, (void (*)(uint64_t))type metadata accessor for PresentationOperationManager);
  uint64_t result = sub_1B5F4AA70(&qword_1EB64AD90, v3, (void (*)(uint64_t))type metadata accessor for PresentationOperationManager);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for PresentationOperationManager()
{
  return self;
}

uint64_t dispatch thunk of PresentationHandlerType.uid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PresentationHandlerType.requiresPresentation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PresentationHandlerType.presentationAction()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

void type metadata accessor for PresentationHandlerError()
{
}

uint64_t initializeWithCopy for PresentationOperation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  sub_1B61B1F70();
  sub_1B61B1F70();
  return a1;
}

uint64_t assignWithCopy for PresentationOperation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v6 = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 88) = v6;
  return a1;
}

uint64_t assignWithTake for PresentationOperation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for PresentationOperation(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 97))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PresentationOperation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 97) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for PresentationOperation()
{
}

void type metadata accessor for PresentationOperation.LaunchConditions()
{
}

uint64_t initializeWithCopy for LaunchPresentationConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_1B61B1F70();
  return a1;
}

void *assignWithCopy for LaunchPresentationConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for LaunchPresentationConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

void type metadata accessor for LaunchPresentationConfiguration()
{
}

uint64_t dispatch thunk of LaunchPresentationConfigurationProviderType.configuration()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PresentationOperationManagerDataStoreType.retrieveLastKnownConfigVersion()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PresentationOperationManagerDataStoreType.storeLastKnownConfigVersion(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of PresentationOperationManagerDataStoreType.retrieveAppLaunchCount()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PresentationOperationManagerDataStoreType.storeAppLaunchCount(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of PresentationOperationManagerDataStoreType.retrievePresentationAttempts()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of PresentationOperationManagerDataStoreType.storePresentationAttempts(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of PresentationOperationManagerDataStoreType.retrieveRetryCounts()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of PresentationOperationManagerDataStoreType.storeRetryCounts(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of PresentationOperationManagerDataStoreType.retrieveSuccessfulPresentations()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of PresentationOperationManagerDataStoreType.storeSuccessfulPresentations(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of PresentationOperationManagerDataStoreType.retrieveAppBackgroundDate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of PresentationOperationManagerDataStoreType.storeAppBackgroundDate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of LaunchConditionProviderType.launchConditions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

unsigned char *storeEnumTagSinglePayload for PresentationProcessingStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F4A1B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for PresentationProcessingStatus()
{
}

uint64_t dispatch thunk of PresentationOperationManagerType.presentationProcessingStatus.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PresentationOperationManagerType.addLaunchPresentationHandler(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of PresentationOperationManagerType.appLaunchCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of PresentationOperationManagerType.disablePresentationProcessing.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of PresentationOperationManagerType.disablePresentationProcessing.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of PresentationOperationManagerType.disablePresentationProcessing.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t method lookup function for PresentationOperationManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PresentationOperationManager);
}

uint64_t dispatch thunk of PresentationOperationManager.__allocating_init(bootstrapper:launchPresentationConfigurationProvider:launchConditionProvider:dataStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of PresentationOperationManager.__allocating_init(bootstrapper:launchPresentationConfigurationProvider:dataStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t sub_1B5F4A2A4()
{
  return sub_1B5F441E4(v0);
}

uint64_t sub_1B5F4A2C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5F4A2F8(uint64_t a1)
{
  return sub_1B5F44244(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_1B5F4A318(unsigned char *a1)
{
  return sub_1B5F44468(a1, *(unsigned char *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1B5F4A338()
{
  if (!qword_1EB64BAA8)
  {
    sub_1B5F4B1C0(255, &qword_1EB64B1D0, MEMORY[0x1E4FBAEA0]);
    sub_1B5E40A0C();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EB64BAA8);
    }
  }
}

uint64_t sub_1B5F4A3E4(uint64_t *a1)
{
  return sub_1B5F454F4(a1, v1);
}

void sub_1B5F4A400()
{
  if (!qword_1EB64B378)
  {
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EB64B378);
    }
  }
}

void sub_1B5F4A460()
{
}

uint64_t sub_1B5F4A488(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B5F4A4C0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B5F4A4F8(uint64_t a1, uint64_t a2)
{
  sub_1B5F4B224(0, &qword_1EB64B208, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B5F4A584(void *a1, char a2)
{
  return sub_1B5F4765C(a1, a2 & 1, *(void *)(v2 + 16), (const void *)(v2 + 24));
}

uint64_t sub_1B5F4A594(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 16);
  if (!v3) {
    return 0;
  }
  sub_1B61B1F70();
  swift_beginAccess();
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  while (1)
  {
    uint64_t v7 = v2;
    uint64_t v8 = *(void *)(v2 + v5 + 48);
    uint64_t v9 = *(void *)(v2 + v5 + 56);
    uint64_t v10 = a2;
    uint64_t v11 = *a2;
    sub_1B61B1F70();
    swift_bridgeObjectRetain_n();
    sub_1B61B1F70();
    sub_1B5E75B84(v8, v9, v11);
    LOBYTE(v8) = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      break;
    }
    ++v6;
    v5 += 104;
    a2 = v10;
    uint64_t v2 = v7;
    if (v3 == v6)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v7 + 16);
    }
  }
  uint64_t v13 = v7;
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v15 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v15 == *(void *)(v13 + 16)) {
      return v6;
    }
    uint64_t v16 = v5 + 232;
    unint64_t v17 = v10;
    uint64_t result = swift_beginAccess();
    while (v15 < *(void *)(v13 + 16))
    {
      uint64_t v58 = v13;
      uint64_t v18 = v13 + v16;
      uint64_t v19 = *(void *)(v13 + v16 - 80);
      uint64_t v20 = *(void *)(v13 + v16 - 72);
      uint64_t v21 = *v17;
      sub_1B61B1F70();
      swift_bridgeObjectRetain_n();
      sub_1B61B1F70();
      sub_1B5E75B84(v19, v20, v21);
      LOBYTE(v19) = v22;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t result = swift_bridgeObjectRelease();
      if (v19)
      {
        if (v15 == v6)
        {
          unint64_t v17 = v10;
        }
        else
        {
          if ((v6 & 0x8000000000000000) != 0) {
            goto LABEL_28;
          }
          unint64_t v23 = *(void *)(v13 + 16);
          if (v6 >= v23) {
            goto LABEL_29;
          }
          if (v15 >= v23) {
            goto LABEL_30;
          }
          uint64_t v24 = v13 + 32 + 104 * v6;
          uint64_t v45 = *(void *)v24;
          uint64_t v25 = *(void *)(v24 + 24);
          uint64_t v43 = *(void *)(v24 + 16);
          long long v46 = *(_OWORD *)(v24 + 32);
          char v42 = *(unsigned char *)(v24 + 48);
          uint64_t v41 = *(void *)(v24 + 56);
          char v39 = *(unsigned char *)(v24 + 65);
          char v40 = *(unsigned char *)(v24 + 64);
          uint64_t v38 = *(void *)(v24 + 72);
          char v37 = *(unsigned char *)(v24 + 80);
          uint64_t v36 = *(void *)(v24 + 88);
          char v35 = *(unsigned char *)(v24 + 96);
          uint64_t v26 = *(void *)(v18 - 88);
          uint64_t v27 = *(void *)(v18 - 72);
          uint64_t v56 = *(void *)(v18 - 80);
          uint64_t v57 = *(void *)(v18 - 96);
          uint64_t v55 = *(void *)(v18 - 64);
          uint64_t v54 = *(void *)(v18 - 56);
          char v53 = *(unsigned char *)(v18 - 48);
          uint64_t v52 = *(void *)(v18 - 40);
          char v50 = *(unsigned char *)(v18 - 31);
          char v51 = *(unsigned char *)(v18 - 32);
          uint64_t v49 = *(void *)(v18 - 24);
          char v28 = *(unsigned char *)(v18 - 16);
          uint64_t v29 = *(void *)(v18 - 8);
          char v47 = *(unsigned char *)(v13 + v16);
          char v48 = v28;
          uint64_t v44 = *(void *)(v24 + 8);
          sub_1B61B1F70();
          sub_1B61B1F70();
          sub_1B61B1F70();
          sub_1B61B1F70();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B60E46E4();
            uint64_t v58 = v33;
          }
          uint64_t v30 = v58 + 104 * v6;
          uint64_t v13 = v58;
          *(void *)(v30 + 32) = v57;
          *(void *)(v30 + 40) = v26;
          *(void *)(v30 + 48) = v56;
          *(void *)(v30 + 56) = v27;
          *(void *)(v30 + 64) = v55;
          *(void *)(v30 + 72) = v54;
          *(unsigned char *)(v30 + 80) = v53;
          *(void *)(v30 + 88) = v52;
          *(unsigned char *)(v30 + 96) = v51;
          *(unsigned char *)(v30 + 97) = v50;
          *(void *)(v30 + 104) = v49;
          *(unsigned char *)(v30 + 112) = v48;
          *(void *)(v30 + 120) = v29;
          *(unsigned char *)(v30 + 128) = v47;
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v15 >= *(void *)(v58 + 16)) {
            goto LABEL_31;
          }
          unint64_t v31 = (unsigned char *)(v58 + v16);
          *((void *)v31 - 12) = v45;
          *((void *)v31 - 11) = v44;
          *((void *)v31 - 10) = v43;
          *((void *)v31 - 9) = v25;
          *((_OWORD *)v31 - 4) = v46;
          *(v31 - 48) = v42;
          *((void *)v31 - 5) = v41;
          *(v31 - 32) = v40;
          *(v31 - 31) = v39;
          *((void *)v31 - 3) = v38;
          *(v31 - 16) = v37;
          *((void *)v31 - 1) = v36;
          *unint64_t v31 = v35;
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          *a1 = v58;
          unint64_t v17 = v10;
        }
        if (__OFADD__(v6++, 1)) {
          goto LABEL_27;
        }
      }
      else
      {
        unint64_t v17 = v10;
      }
      ++v15;
      v16 += 104;
      if (v15 == *(void *)(v13 + 16)) {
        return v6;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B5F4A9D4()
{
  return sub_1B5F475B0(v0);
}

uint64_t sub_1B5F4A9F0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B5F4AA44(*(id *)(v0 + 128), *(unsigned char *)(v0 + 136));
  return swift_deallocObject();
}

void sub_1B5F4AA44(id a1, char a2)
{
  if (a2) {
}
  }

uint64_t sub_1B5F4AA50()
{
  return sub_1B5F479AC(*(void *)(v0 + 16), v0 + 24, *(void **)(v0 + 128), *(unsigned char *)(v0 + 136));
}

id sub_1B5F4AA64(id result, char a2)
{
  if (a2) {
    return result;
  }
  return result;
}

uint64_t sub_1B5F4AA70(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B5F4AAB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1B5F4AB1C()
{
  return sub_1B5F49760(v0);
}

void sub_1B5F4AB38(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1B5F4AB8C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1B61B2F80();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1B5F4ABE8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B5F4AC20(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  sub_1B5F4AB8C(0, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B5E00AB8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1B5F4AC90()
{
  return sub_1B5F47034();
}

uint64_t sub_1B5F4ACAC(uint64_t a1, void *a2)
{
  return sub_1B5F47128(a1, a2, v2);
}

uint64_t sub_1B5F4ACC8()
{
  return sub_1B5F46918(*(double *)(v0 + 32), *(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 48));
}

uint64_t sub_1B5F4ACEC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B5F4AD2C(void *a1)
{
  return sub_1B5F46AE8(a1, v1 + 16);
}

void sub_1B5F4AD4C(unsigned __int8 *a1, uint64_t a2)
{
  sub_1B5F46D6C(a1, a2, *(void *)(v2 + 16), v2 + 24);
}

uint64_t sub_1B5F4AD6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v2;
  void *v2 = 0x8000000000000000;
  uint64_t v7 = sub_1B5F4ADF0(a1, a2, isUniquelyReferenced_nonNull_native);
  void *v3 = v9;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1B5F4ADF0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  sub_1B61B3900();
  sub_1B61B21C0();
  uint64_t v9 = sub_1B61B3940();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  uint64_t v12 = v8 + 56;
  if ((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v13 = *(void *)(v8 + 48);
    uint64_t v14 = (void *)(v13 + 16 * v11);
    BOOL v15 = *v14 == a1 && v14[1] == a2;
    if (v15 || (sub_1B61B3760() & 1) != 0)
    {
LABEL_7:
      uint64_t v16 = 0;
      int v17 = 1;
      goto LABEL_18;
    }
    uint64_t v18 = ~v10;
    unint64_t v11 = (v11 + 1) & ~v10;
    if ((*(void *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
    {
      uint64_t v16 = 1;
      while (1)
      {
        uint64_t v19 = (void *)(v13 + 16 * v11);
        BOOL v20 = *v19 == a1 && v19[1] == a2;
        if (v20 || (sub_1B61B3760() & 1) != 0) {
          goto LABEL_7;
        }
        unint64_t v11 = (v11 + 1) & v18;
        if (((*(void *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        {
          int v17 = 0;
          goto LABEL_18;
        }
      }
    }
  }
  int v17 = 0;
  uint64_t v16 = 1;
LABEL_18:
  uint64_t v21 = *(void *)(v8 + 16);
  uint64_t v22 = v21 + v16;
  if (__OFADD__(v21, v16))
  {
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v23 = *(void *)(v8 + 24);
  if (v23 >= v22 && (a3 & 1) != 0)
  {
    if (!v17) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  if (a3)
  {
    sub_1B5EBA628();
  }
  else
  {
    if (v23 >= v22)
    {
      sub_1B5EBC5A4();
      if (!v17)
      {
LABEL_46:
        uint64_t v36 = *v4;
        *(void *)(*v4 + 8 * (v11 >> 6) + 56) |= 1 << v11;
        char v37 = (uint64_t *)(*(void *)(v36 + 48) + 16 * v11);
        *char v37 = a1;
        v37[1] = a2;
        uint64_t v38 = *(void *)(v36 + 16);
        BOOL v39 = __OFADD__(v38, 1);
        uint64_t v40 = v38 + 1;
        if (!v39)
        {
          uint64_t result = 0;
          *(void *)(v36 + 16) = v40;
          return result;
        }
        goto LABEL_49;
      }
LABEL_36:
      unint64_t v31 = (uint64_t *)(*(void *)(*v4 + 48) + 16 * v11);
      uint64_t result = *v31;
      *unint64_t v31 = a1;
      v31[1] = a2;
      return result;
    }
    sub_1B5EBD154();
  }
  uint64_t v24 = *v4;
  sub_1B61B3900();
  sub_1B61B21C0();
  uint64_t v25 = sub_1B61B3940();
  uint64_t v26 = -1 << *(unsigned char *)(v24 + 32);
  unint64_t v11 = v25 & ~v26;
  uint64_t v27 = v24 + 56;
  if (((*(void *)(v24 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    goto LABEL_45;
  }
  uint64_t v28 = *(void *)(v24 + 48);
  uint64_t v29 = (void *)(v28 + 16 * v11);
  BOOL v30 = *v29 == a1 && v29[1] == a2;
  if (!v30 && (sub_1B61B3760() & 1) == 0)
  {
    uint64_t v33 = ~v26;
    while (1)
    {
      unint64_t v11 = (v11 + 1) & v33;
      if (((*(void *)(v27 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        break;
      }
      uint64_t v34 = (void *)(v28 + 16 * v11);
      BOOL v35 = *v34 == a1 && v34[1] == a2;
      if (v35 || (sub_1B61B3760() & 1) != 0) {
        goto LABEL_35;
      }
    }
LABEL_45:
    if ((v17 & 1) == 0) {
      goto LABEL_46;
    }
    goto LABEL_50;
  }
LABEL_35:
  if (v17) {
    goto LABEL_36;
  }
LABEL_50:
  uint64_t result = sub_1B61B3830();
  __break(1u);
  return result;
}

void sub_1B5F4B0D4()
{
  if (!qword_1EB64B1E8)
  {
    sub_1B5F4B224(255, (unint64_t *)&qword_1EB64A460, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAB088]);
    unint64_t v0 = sub_1B61B2650();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB64B1E8);
    }
  }
}

unint64_t sub_1B5F4B154()
{
  unint64_t result = qword_1EB640F28;
  if (!qword_1EB640F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB640F28);
  }
  return result;
}

uint64_t sub_1B5F4B1A0()
{
  return sub_1B5F44864();
}

void sub_1B5F4B1C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void, void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB1B0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1B5F4B224(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B5F4B270(uint64_t (*a1)(uint64_t))
{
  return sub_1B5F44924(a1);
}

uint64_t sub_1B5F4B278()
{
  return sub_1B5F486B0(v0);
}

uint64_t sub_1B5F4B294()
{
  return swift_deallocObject();
}

uint64_t sub_1B5F4B2A4(uint64_t a1)
{
  return sub_1B5F489A4(a1, *(double *)(v1 + 16));
}

uint64_t sub_1B5F4B2C0(uint64_t a1)
{
  sub_1B5F10254();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B5F4B31C()
{
  sub_1B5F48E50(v0);
}

unint64_t sub_1B5F4B324()
{
  unint64_t result = qword_1EB64A958;
  if (!qword_1EB64A958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB64A958);
  }
  return result;
}

unsigned char *_s5TeaUI24PresentationHandlerErrorOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B5F4B40CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for PresentationOperationManager.PresentationOperationManagerError()
{
}

unint64_t sub_1B5F4B444()
{
  unint64_t result = qword_1E9DAA690;
  if (!qword_1E9DAA690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA690);
  }
  return result;
}

uint64_t sub_1B5F4B498()
{
  return sub_1B5F49888();
}

uint64_t sub_1B5F4B4B0(uint64_t a1, void (*a2)(uint64_t, uint64_t, unsigned char *))
{
  sub_1B5E5EBBC(a1, v19);
  uint64_t v3 = v19[0];
  uint64_t v20 = v19[1];
  int64_t v4 = v19[3];
  unint64_t v5 = v19[4];
  int64_t v6 = (unint64_t)(v19[2] + 64) >> 6;
  uint64_t result = sub_1B61B1F70();
  if (!v5) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v8 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v9 = v8 | (v4 << 6);
  while (1)
  {
    uint64_t v14 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    sub_1B5E17688(*(void *)(v3 + 56) + 32 * v9, (uint64_t)v18);
    v17[0] = v15;
    v17[1] = v16;
    sub_1B61B1F70();
    a2(v15, v16, v18);
    uint64_t result = sub_1B5F4E9CC((uint64_t)v17);
    if (v5) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v10 >= v6) {
      return swift_release();
    }
    unint64_t v11 = *(void *)(v20 + 8 * v10);
    int64_t v12 = v4 + 1;
    if (!v11)
    {
      int64_t v12 = v4 + 2;
      if (v4 + 2 >= v6) {
        return swift_release();
      }
      unint64_t v11 = *(void *)(v20 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v4 + 3;
        if (v4 + 3 >= v6) {
          return swift_release();
        }
        unint64_t v11 = *(void *)(v20 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v4 + 4;
          if (v4 + 4 >= v6) {
            return swift_release();
          }
          unint64_t v11 = *(void *)(v20 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v4 + 5;
            if (v4 + 5 >= v6) {
              return swift_release();
            }
            unint64_t v11 = *(void *)(v20 + 8 * v12);
            if (!v11)
            {
              int64_t v13 = v4 + 6;
              while (v13 < v6)
              {
                unint64_t v11 = *(void *)(v20 + 8 * v13++);
                if (v11)
                {
                  int64_t v12 = v13 - 1;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    int64_t v4 = v12;
  }
  __break(1u);
  return result;
}

UIImage __swiftcall UIImage.with(size:)(CGSize size)
{
  OUTLINED_FUNCTION_3_52();
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_, v3, v2);
  unint64_t v5 = (double *)swift_allocObject();
  *((void *)v5 + 2) = v1;
  v5[3] = v3;
  v5[4] = v2;
  uint64_t v6 = OUTLINED_FUNCTION_1_4();
  *(void *)(v6 + 16) = sub_1B5F4BDB8;
  *(void *)(v6 + 24) = v5;
  void v11[4] = sub_1B5E5F2AC;
  v11[5] = v6;
  v11[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_4_44();
  void v11[2] = sub_1B5F4BA78;
  void v11[3] = &block_descriptor_29;
  uint64_t v7 = _Block_copy(v11);
  id v8 = v1;
  swift_retain();
  swift_release();
  id v9 = objc_msgSend(v4, sel_imageWithActions_, v7, v11[0]);

  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result.super.Class isa = (Class)swift_release();
  if ((v4 & 1) == 0) {
    return (UIImage)v9;
  }
  __break(1u);
  return result;
}

UIImage __swiftcall UIImage.with(tintColor:size:)(UIColor tintColor, CGSize_optional size)
{
  if (v3)
  {
    objc_msgSend(v4, sel_size, size.value.width, size.value.height);
    double v6 = v8;
    double v7 = v9;
  }
  else
  {
    double v6 = *(double *)&size.is_nil;
    double v7 = v2;
  }
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_, v6, v7);
  unint64_t v11 = (UIColor *)swift_allocObject();
  v11[2].super.Class isa = tintColor.super.isa;
  v11[3].super.Class isa = (Class)v4;
  v11[4].super.Class isa = 0;
  v11[5].super.Class isa = 0;
  *(double *)&v11[6].super.Class isa = v6;
  *(double *)&v11[7].super.Class isa = v7;
  uint64_t v12 = OUTLINED_FUNCTION_1_4();
  *(void *)(v12 + 16) = sub_1B5F4BE18;
  *(void *)(v12 + 24) = v11;
  v19[4] = sub_1B5F4EDBC;
  void v19[5] = v12;
  v19[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_4_44();
  v19[2] = sub_1B5F4BA78;
  unsigned char v19[3] = &block_descriptor_13_1;
  int64_t v13 = _Block_copy(v19);
  uint64_t v14 = tintColor.super.isa;
  id v15 = v4;
  swift_retain();
  swift_release();
  id v16 = objc_msgSend(v10, sel_imageWithActions_, v13, v19[0]);

  _Block_release(v13);
  char v17 = OUTLINED_FUNCTION_7_34();
  swift_release();
  result.super.Class isa = (Class)swift_release();
  if ((v17 & 1) == 0) {
    return (UIImage)v16;
  }
  __break(1u);
  return result;
}

id sub_1B5F4B9A8(void *a1, id a2, void *a3, double a4, double a5, double a6, double a7)
{
  objc_msgSend(a2, sel_setFill);
  objc_msgSend(a3, sel_drawInRect_, a4, a5, a6, a7);
  return objc_msgSend(a1, sel_fillRect_blendMode_, 22, a4, a5, a6, a7);
}

uint64_t sub_1B5F4BA50(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_1B5F4BA78(uint64_t a1, void *a2)
{
  double v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

uint64_t UIImage.blend(with:blendMode:)(void *a1, int a2)
{
  id v3 = v2;
  id v6 = objc_msgSend(v3, sel_imageRendererFormat);
  objc_msgSend(v3, sel_scale);
  objc_msgSend(v6, sel_setScale_);
  objc_msgSend(v6, sel_setOpaque_, 0);
  objc_msgSend(v3, sel_size);
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_format_, v6, v7, v8);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v3;
  *(void *)(v10 + 24) = a1;
  *(_DWORD *)(v10 + 32) = a2;
  uint64_t v11 = OUTLINED_FUNCTION_1_4();
  *(void *)(v11 + 16) = sub_1B5F4BE6C;
  *(void *)(v11 + 24) = v10;
  v17[4] = sub_1B5F4EDBC;
  v17[5] = v11;
  v17[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_4_44();
  void v17[2] = sub_1B5F4BA78;
  v17[3] = &block_descriptor_23_2;
  uint64_t v12 = _Block_copy(v17);
  id v13 = v3;
  id v14 = a1;
  swift_retain();
  swift_release();
  id v15 = objc_msgSend(v9, sel_imageWithActions_, v12, v17[0]);

  _Block_release(v12);
  LOBYTE(v6) = OUTLINED_FUNCTION_7_34();
  swift_release();
  uint64_t result = swift_release();
  if ((v6 & 1) == 0) {
    return (uint64_t)v15;
  }
  __break(1u);
  return result;
}

id sub_1B5F4BCCC(void *a1, id a2, void *a3, uint64_t a4)
{
  objc_msgSend(a2, sel_size);
  double v9 = v8;
  double v11 = v10;
  objc_msgSend(a3, sel_setFill);
  objc_msgSend(a2, sel_drawInRect_, 0.0, 0.0, v9, v11);
  return objc_msgSend(a1, sel_fillRect_blendMode_, a4, 0.0, 0.0, v9, v11);
}

uint64_t sub_1B5F4BD80()
{
  return swift_deallocObject();
}

id sub_1B5F4BDB8()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_drawInRect_, 0.0, 0.0, *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_1B5F4BDD8()
{
  return swift_deallocObject();
}

id sub_1B5F4BE18(void *a1)
{
  return sub_1B5F4B9A8(a1, *(id *)(v1 + 16), *(void **)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56));
}

uint64_t sub_1B5F4BE2C()
{
  return swift_deallocObject();
}

id sub_1B5F4BE6C(void *a1)
{
  return sub_1B5F4BCCC(a1, *(id *)(v1 + 16), *(void **)(v1 + 24), *(unsigned int *)(v1 + 32));
}

uint64_t UIImage.croppedImage(of:with:scale:byRoundingCorners:cornerRadius:border:)(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  if (a1)
  {
    id v10 = objc_msgSend(self, sel_bezierPathWithRoundedRect_byRoundingCorners_cornerRadii_, a1, 0.0, 0.0, a2, a3, a9, a9);
    id v11 = v10;
    double v12 = OUTLINED_FUNCTION_1_66();
    uint64_t v18 = UIImage.croppedImage(of:with:scale:clipPath:border:)(v10, v12, v13, v14, v15, v16, v17, a8);
  }
  else
  {
    double v19 = OUTLINED_FUNCTION_1_66();
    return UIImage.croppedImage(of:with:scale:clipPath:border:)(v20, v19, v21, v22, v23, v24, v25, a8);
  }
  return v18;
}

uint64_t UIImage.croppedImage(of:with:scale:clipPath:border:)(void *a1, double a2, double a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, double a8)
{
  OUTLINED_FUNCTION_3_52();
  uint64_t v18 = *v17;
  double v19 = (void *)v17[1];
  char v20 = *((unsigned char *)v17 + 16);
  double v23 = v21 / v22;
  objc_msgSend(v8, sel_size);
  CGRect.cropRectAroundFocalFrame(targetSize:targetAspectRation:)(v24, v25, v23, a4, a5, a6, a7);
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  id v34 = objc_msgSend(v8, sel_imageRendererFormat);
  objc_msgSend(v34, sel_setScale_, a8);
  objc_msgSend(v34, sel_setOpaque_, 0);
  id v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_format_, v34, v10, v9);
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = a1;
  *(double *)(v36 + 24) = v10;
  *(double *)(v36 + 32) = v9;
  *(void *)(v36 + 40) = v27;
  *(void *)(v36 + 48) = v29;
  *(void *)(v36 + 56) = v31;
  *(void *)(v36 + 64) = v33;
  *(void *)(v36 + 72) = v8;
  *(void *)(v36 + 80) = v18;
  *(void *)(v36 + 88) = v19;
  *(unsigned char *)(v36 + 96) = v20;
  uint64_t v37 = OUTLINED_FUNCTION_1_4();
  *(void *)(v37 + 16) = sub_1B5F4E6F4;
  *(void *)(v37 + 24) = v36;
  v45[4] = sub_1B5F4EDBC;
  v45[5] = v37;
  v45[0] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_4_44();
  v45[2] = sub_1B5F4BA78;
  void v45[3] = &block_descriptor_33;
  uint64_t v38 = _Block_copy(v45);
  id v39 = v19;
  swift_retain();
  id v40 = a1;
  id v41 = v8;
  swift_release();
  id v42 = objc_msgSend(v35, sel_imageWithActions_, v38, v45[0]);

  _Block_release(v38);
  char v43 = OUTLINED_FUNCTION_7_34();
  swift_release();
  uint64_t result = swift_release();
  if ((v43 & 1) == 0) {
    return (uint64_t)v42;
  }
  __break(1u);
  return result;
}

void sub_1B5F4C1F8(void *a1, id a2, void *a3, uint64_t a4, void *a5, char a6, double a7, double a8, double a9, double a10, double a11)
{
  objc_msgSend(a2, sel_addClip);
  double v22 = a7 / a11;
  CGFloat v23 = -(a7 / a11 * a9);
  objc_msgSend(a3, sel_size);
  CGFloat v25 = v22 * v24;
  objc_msgSend(a3, sel_size);
  v30.size.CGFloat height = v22 * v26;
  v30.origin.CGFloat x = v23;
  v30.origin.CGFloat y = -(v22 * a10);
  v30.size.CGFloat width = v25;
  CGRect v31 = CGRectIntegral(v30);
  objc_msgSend(a3, sel_drawInRect_, v31.origin.x, v31.origin.y, v31.size.width, v31.size.height);
  if (a5)
  {
    v28[0] = a4;
    v28[1] = a5;
    char v29 = a6;
    id v27 = a5;
    sub_1B5F4C308((uint64_t)v28, a1, a2, a7, a8);
  }
}

void sub_1B5F4C308(uint64_t a1, void *a2, void *a3, double a4, double a5)
{
  double v9 = *(double *)a1;
  uint64_t v10 = *(char *)(a1 + 16);
  color = (CGColor *)*(id *)(a1 + 8);
  double Alpha = CGColorGetAlpha(color);
  double v12 = (CGContext *)objc_msgSend(a2, sel_CGContext);
  CGContextSetFillColorWithColor(v12, color);

  double v13 = (CGContext *)objc_msgSend(a2, sel_CGContext);
  CGContextSetStrokeColorWithColor(v13, color);

  if (a3)
  {
    id v14 = a3;
    objc_msgSend(v14, sel_setLineWidth_, v9 + v9);
    objc_msgSend(v14, sel_strokeWithBlendMode_alpha_, dword_1B61C85D4[v10], Alpha);
  }
  else
  {
    CGFloat v15 = (CGContext *)objc_msgSend(a2, sel_CGContext);
    CGContextSetAlpha(v15, Alpha);

    CGFloat v16 = (CGContext *)objc_msgSend(a2, sel_CGContext);
    CGContextSetBlendMode(v16, dword_1B61C85D4[v10]);

    id v14 = objc_msgSend(a2, sel_CGContext);
    v19.origin.CGFloat x = v9 * 0.5;
    v19.origin.CGFloat y = v9 * 0.5;
    v19.size.CGFloat width = a4 - v9;
    v19.size.CGFloat height = a5 - v9;
    CGRect v20 = CGRectIntegral(v19);
    CGContextStrokeRectWithWidth((CGContextRef)v14, v20, v9);
  }
}

uint64_t UIImage.croppedImage(of:with:scale:byRoundingCorners:cornerRadius:)(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  return UIImage.croppedImage(of:with:scale:byRoundingCorners:cornerRadius:border:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t UIImage.roundedCornerImage(of:scale:cornerRadius:)(double a1, double a2, double a3)
{
  v4[0] = 0;
  v4[1] = 0;
  char v5 = 0;
  return UIImage.roundedCornerImage(of:scale:cornerRadius:continuousCurve:border:fillColor:maintainTargetSize:imageScaleFactor:)(0, a1, a2, a3, (uint64_t)v4, 0);
}

uint64_t UIImage.roundedCornerImage(of:scale:cornerRadius:continuousCurve:border:fillColor:maintainTargetSize:imageScaleFactor:)(char a1, double a2, double a3, double a4, uint64_t a5, void *a6)
{
  OUTLINED_FUNCTION_3_52();
  uint64_t v13 = *v12;
  id v14 = (void *)v12[1];
  char v15 = *((unsigned char *)v12 + 16);
  double v16 = 0.0;
  double v18 = v17;
  double v19 = 0.0;
  double v21 = v20;
  if ((v22 & 1) == 0)
  {
    double v23 = v11;
    double v19 = (v7 - v7 * v11) * 0.5;
    double v16 = (v8 - v8 * v11) * 0.5;
    OUTLINED_FUNCTION_9_27();
    double v25 = v24;
    OUTLINED_FUNCTION_9_27();
    double v27 = v26;
    OUTLINED_FUNCTION_9_27();
    if (v27 < v25) {
      double v28 = v29;
    }
    double v30 = v8 / v28;
    objc_msgSend(v6, sel_size);
    double v18 = v30 * v31 * v23;
    OUTLINED_FUNCTION_9_27();
    double v21 = v30 * v32 * v23;
  }
  self;
  double v35 = OUTLINED_FUNCTION_8_27();
  if (a1) {
    id v36 = objc_msgSend(v33, v34, -1, v35);
  }
  else {
    id v36 = objc_msgSend(v33, v34, v35);
  }
  id v37 = v36;
  sub_1B5DFF760(0, &qword_1EB64B688);
  id v38 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_preferredFormat);
  objc_msgSend(v38, sel_setOpaque_, 0);
  objc_msgSend(v38, sel_setScale_, a4);
  id v39 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_format_, v38, v8, v7);
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v6;
  *(void *)(v40 + 24) = a6;
  *(void *)(v40 + 32) = v37;
  *(double *)(v40 + 40) = v16;
  *(double *)(v40 + 48) = v19;
  *(double *)(v40 + 56) = v18;
  *(double *)(v40 + 64) = v21;
  *(void *)(v40 + 72) = v13;
  *(void *)(v40 + 80) = v14;
  *(unsigned char *)(v40 + 88) = v15;
  *(double *)(v40 + 96) = v8;
  *(double *)(v40 + 104) = v7;
  uint64_t v41 = OUTLINED_FUNCTION_1_4();
  *(void *)(v41 + 16) = sub_1B5F4E768;
  *(void *)(v41 + 24) = v40;
  aBlock[4] = sub_1B5F4EDBC;
  aBlock[5] = v41;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B5F4BA78;
  aBlock[3] = &block_descriptor_43;
  id v42 = _Block_copy(aBlock);
  id v43 = v14;
  swift_retain();
  id v44 = v6;
  id v45 = a6;
  id v46 = v37;
  swift_release();
  id v47 = objc_msgSend(v39, sel_imageWithActions_, v42);

  _Block_release(v42);
  LOBYTE(v46) = OUTLINED_FUNCTION_7_34();
  swift_release();
  uint64_t result = swift_release();
  if ((v46 & 1) == 0) {
    return (uint64_t)v47;
  }
  __break(1u);
  return result;
}

uint64_t UIImage.roundedCornerImage(of:scale:cornerRadius:continuousCurve:border:fillColor:maintainTargetSize:)(char a1, long long *a2, void *a3, double a4, double a5, double a6)
{
  char v6 = *((unsigned char *)a2 + 16);
  long long v8 = *a2;
  char v9 = v6;
  return UIImage.roundedCornerImage(of:scale:cornerRadius:continuousCurve:border:fillColor:maintainTargetSize:imageScaleFactor:)(a1, a4, a5, a6, (uint64_t)&v8, a3);
}

void sub_1B5F4C870(void *a1, void *a2, void *a3, id a4, uint64_t a5, void *a6, char a7, CGFloat a8, CGFloat a9, CGFloat a10, CGFloat a11, double a12, double a13)
{
  if (a3)
  {
    id v25 = a3;
    if (sub_1B5F4C9D8(a2))
    {
      double v26 = (CGContext *)objc_msgSend(a1, sel_CGContext);
      double v27 = (CGColor *)objc_msgSend(v25, sel_CGColor);
      CGContextSetFillColorWithColor(v26, v27);

      objc_msgSend(a4, sel_fill);
    }
  }
  objc_msgSend(a4, sel_addClip);
  v31.origin.CGFloat x = a8;
  v31.origin.CGFloat y = a9;
  v31.size.CGFloat width = a10;
  v31.size.CGFloat height = a11;
  CGRect v32 = CGRectIntegral(v31);
  objc_msgSend(a2, sel_drawInRect_, v32.origin.x, v32.origin.y, v32.size.width, v32.size.height);
  if (a6)
  {
    v29[0] = a5;
    v29[1] = a6;
    char v30 = a7;
    id v28 = a6;
    sub_1B5F4C308((uint64_t)v29, a1, a4, a12, a13);
  }
}

unint64_t sub_1B5F4C9D8(void *a1)
{
  unint64_t result = (unint64_t)objc_msgSend(a1, sel_CGImage);
  if (result)
  {
    double v2 = (void *)result;
    CGImageAlphaInfo AlphaInfo = CGImageGetAlphaInfo((CGImageRef)result);

    if (AlphaInfo > kCGImageAlphaNoneSkipFirst) {
      return 1;
    }
    else {
      return (0x1Eu >> AlphaInfo) & 1;
    }
  }
  return result;
}

void *UIImage.scaledImage(with:targetScale:)(double a1, double a2, double a3)
{
  return UIImage.scaledImage(with:targetScale:clipPath:)(0, a1, a2, a3);
}

void *UIImage.scaledImage(with:targetScale:clipPath:)(void *a1, double a2, double a3, double a4)
{
  objc_msgSend(v4, sel_size);
  double v10 = v9;
  double v12 = v11;
  objc_msgSend(v4, sel_scale);
  double v14 = v13;
  id v15 = objc_msgSend(v4, sel_imageOrientation);
  if (v10 < a2 && v12 < a3)
  {
    id v27 = v4;
  }
  else
  {
    uint64_t v17 = (uint64_t)v15;
    double v18 = (CGImage *)objc_msgSend(v4, sel_CGImage);
    if (v18)
    {
      double v19 = v18;
      double v20 = a2 / v10;
      if (a3 / v12 < a2 / v10) {
        double v20 = a3 / v12;
      }
      double v21 = a4 / v14 * v20;
      double v22 = v10 * v14 * v21;
      double v23 = v12 * v14 * v21;
      double v24 = v21 * (double)(uint64_t)CGImageGetWidth(v18);
      double v25 = v21 * (double)(uint64_t)CGImageGetHeight(v19);
      uint64_t v29 = 0;
      double v26 = (void *)MEMORY[0x1BA9B1200]();
      sub_1B5F4CBB4(v4, a1, v19, (uint64_t)&v29, v17, v24, v25, v22, v23, a4);

      return (void *)v29;
    }
    else
    {
      return 0;
    }
  }
  return v4;
}

uint64_t sub_1B5F4CBB4(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9, double a10)
{
  id v19 = objc_msgSend(a1, sel_imageRendererFormat);
  objc_msgSend(v19, sel_setScale_, 1.0);
  objc_msgSend(v19, sel_setOpaque_, 0);
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_format_, v19, a6, a7);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a2;
  *(double *)(v21 + 24) = a7;
  *(void *)(v21 + 32) = a3;
  *(double *)(v21 + 40) = a8;
  *(double *)(v21 + 48) = a9;
  *(void *)(v21 + 56) = a4;
  *(double *)(v21 + 64) = a10;
  *(void *)(v21 + 72) = a5;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1B5F4ED70;
  *(void *)(v22 + 24) = v21;
  v28[4] = sub_1B5F4EDBC;
  v28[5] = v22;
  v28[0] = MEMORY[0x1E4F143A8];
  v28[1] = 1107296256;
  void v28[2] = sub_1B5F4BA78;
  v28[3] = &block_descriptor_87;
  double v23 = _Block_copy(v28);
  id v24 = a2;
  id v25 = a3;
  swift_retain();
  swift_release();
  id v26 = objc_msgSend(v20, sel_imageWithActions_, v23);

  _Block_release(v23);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v19) {
    __break(1u);
  }
  return result;
}

void sub_1B5F4CDF0(void *a1, id a2, double a3, double a4, double a5, double a6, uint64_t a7, void **a8, uint64_t a9)
{
  objc_msgSend(a2, sel_addClip);
  c = (CGContext *)objc_msgSend(a1, sel_CGContext);
  CGContextSetInterpolationQuality(c, kCGInterpolationHigh);
  CGContextScaleCTM(c, 1.0, -1.0);
  CGContextTranslateCTM(c, 0.0, -a3);
  sub_1B61B2B20();
  CGImageRef Image = CGBitmapContextCreateImage(c);
  if (Image)
  {
    CGImageRef v15 = Image;
    id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1818]), sel_initWithCGImage_scale_orientation_, Image, a9, a6);

    uint64_t v17 = *a8;
    *a8 = v16;
  }
  else
  {
    uint64_t v17 = c;
  }
}

id UIImage.applying(descriptor:)()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E050]), sel_initWithImage_, v15);
  if (v0)
  {
    uint64_t v1 = v0;
    sub_1B6142740();
    double v2 = (void *)sub_1B61B20C0();
    swift_bridgeObjectRelease();
    sub_1B6142994();
    id v3 = (void *)sub_1B61B1F00();
    swift_bridgeObjectRelease();
    id v4 = objc_msgSend(v1, sel_imageByApplyingFilter_withInputParameters_, v2, v3);

    id v5 = objc_allocWithZone(MEMORY[0x1E4F1E018]);
    id v6 = sub_1B5F4E620(0);
    objc_msgSend(v4, sel_extent);
    id v7 = objc_msgSend(v6, sel_createCGImage_fromRect_, v4);
    if (v7)
    {
      long long v8 = v7;
      objc_msgSend(v15, sel_scale);
      double v10 = v9;
      id v11 = objc_msgSend(v15, sel_imageOrientation);
      id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1818]), sel_initWithCGImage_scale_orientation_, v8, v11, v10);

      return v12;
    }
    else
    {
      id v14 = v15;

      return v14;
    }
  }
  else
  {
    return v15;
  }
}

id UIImage.applyingOverlay(gradient:blendMode:)(void *__src, int a2)
{
  memcpy(__dst, __src, sizeof(__dst));
  objc_msgSend(v6, sel_size);
  id result = sub_1B5F4D1AC(__dst, v6, a2, v3, v4);
  if (!result)
  {
    return v6;
  }
  return result;
}

id sub_1B5F4D1AC(void *__src, void *a2, int a3, double a4, double a5)
{
  memcpy(__dst, __src, sizeof(__dst));
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_, a4, a5);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = 0;
  *(void *)(v11 + 16) = a2;
  *(double *)(v11 + 40) = a4;
  *(double *)(v11 + 48) = a5;
  memcpy((void *)(v11 + 56), __src, 0x90uLL);
  *(_DWORD *)(v11 + 200) = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1B5F4EADC;
  *(void *)(v12 + 24) = v11;
  v17[4] = sub_1B5F4EDBC;
  v17[5] = v12;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  void v17[2] = sub_1B5F4BA78;
  v17[3] = &block_descriptor_77;
  double v13 = _Block_copy(v17);
  id v14 = a2;
  sub_1B5F4EAF8((uint64_t)__dst);
  swift_retain();
  swift_release();
  id v15 = objc_msgSend(v10, sel_imageWithActions_, v13);

  _Block_release(v13);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  id result = (id)swift_release();
  if ((v10 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

id UIImage.applyingAlphaMask(gradient:)(void *__src)
{
  memcpy(__dst, __src, sizeof(__dst));
  objc_msgSend(v7, sel_size);
  id v3 = sub_1B5F4D1AC(__dst, 0, 2, v1, v2);
  if (v3)
  {
    double v4 = v3;
    unint64_t v5 = (unint64_t)UIImage.blendWithAlphaMask(image:with:)((UIImage)v7, (UIImage)v3);

    if (v5) {
      return (id)v5;
    }
  }
  return v7;
}

UIImage_optional __swiftcall UIImage.blendWithAlphaMask(image:with:)(UIImage image, UIImage with)
{
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E050]), sel_initWithImage_, v2);
  if (!v5) {
    goto LABEL_10;
  }
  id v7 = v5;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E050]), sel_initWithImage_, with.super.isa);
  if (!v8)
  {

LABEL_10:
    v31.super.Class isa = 0;
    goto LABEL_11;
  }
  double v9 = v8;
  sub_1B5DFF760(0, &qword_1E9DAA698);
  id v10 = v7;
  id v11 = v9;
  Class isa = (objc_class *)sub_1B5F4E5BC();
  if (!isa)
  {
    __break(1u);
    goto LABEL_13;
  }
  double v13 = isa;
  sub_1B5F4EBD4(0, (unint64_t *)&qword_1EB6499D0, (uint64_t (*)(uint64_t))sub_1B5F0FE7C, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B61BE6A0;
  *(void *)(inited + 32) = sub_1B61B20F0();
  *(void *)(inited + 40) = v15;
  uint64_t v16 = sub_1B5DFF760(0, &qword_1EB641CC8);
  *(void *)(inited + 72) = v16;
  *(void *)(inited + 48) = v10;
  *(void *)(inited + 80) = sub_1B61B20F0();
  *(void *)(inited + 88) = v17;
  *(void *)(inited + 120) = v16;
  *(void *)(inited + 96) = v11;
  id v18 = v10;
  id v19 = v11;
  uint64_t v20 = sub_1B61B1F50();
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  sub_1B5F4B4B0(v21, (void (*)(uint64_t, uint64_t, unsigned char *))sub_1B5F4E78C);

  swift_bridgeObjectRelease();
  id v22 = [(objc_class *)v13 outputImage];
  if (!v22)
  {

    goto LABEL_10;
  }
  double v23 = v22;
  id v24 = objc_allocWithZone(MEMORY[0x1E4F1E018]);
  id v25 = sub_1B5F4E620(0);
  objc_msgSend(v23, sel_extent);
  id v26 = objc_msgSend(v25, sel_createCGImage_fromRect_, v23);
  if (!v26)
  {

    goto LABEL_10;
  }
  id v27 = v26;
  id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1818]), sel_initWithCGImage_, v26);
  [(objc_class *)image.super.isa size];
  v31.super.Class isa = UIImage.with(size:)((CGSize)__PAIR128__(v30, v29)).super.isa;

LABEL_11:
  Class isa = v31.super.isa;
LABEL_13:
  result.value.super.Class isa = isa;
  result.is_nil = v6;
  return result;
}

id UIImage.applyingOverlay(gradient:blendMode:)(long long *a1, int a2)
{
  id v3 = v2;
  long long v14 = a1[1];
  long long v15 = *a1;
  uint64_t v5 = *((void *)a1 + 4);
  uint64_t v6 = *((void *)a1 + 5);
  char v7 = *((unsigned char *)a1 + 48);
  uint64_t v8 = *((void *)a1 + 7);
  uint64_t v9 = *((void *)a1 + 8);
  char v10 = *((unsigned char *)a1 + 72);
  objc_msgSend(v3, sel_size);
  __src[0] = v15;
  __src[1] = v14;
  uint64_t v18 = v5;
  uint64_t v19 = v6;
  char v20 = v7;
  uint64_t v21 = v8;
  uint64_t v22 = v9;
  char v23 = v10;
  id result = sub_1B5F4D810(__src, v16, a2, v11, v12);
  if (!result)
  {
    return v16;
  }
  return result;
}

id sub_1B5F4D810(void *__src, void *a2, int a3, double a4, double a5)
{
  memcpy(__dst, __src, 0x49uLL);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_, a4, a5);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(double *)(v11 + 24) = a4;
  *(double *)(v11 + 32) = a5;
  memcpy((void *)(v11 + 40), __src, 0x49uLL);
  *(_DWORD *)(v11 + 116) = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1B5F4E980;
  *(void *)(v12 + 24) = v11;
  v17[4] = sub_1B5F4EDBC;
  v17[5] = v12;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  void v17[2] = sub_1B5F4BA78;
  v17[3] = &block_descriptor_67;
  double v13 = _Block_copy(v17);
  id v14 = a2;
  sub_1B5F4E998((uint64_t)__dst);
  swift_retain();
  swift_release();
  id v15 = objc_msgSend(v10, sel_imageWithActions_, v13);

  _Block_release(v13);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  id result = (id)swift_release();
  if ((v10 & 1) == 0) {
    return v15;
  }
  __break(1u);
  return result;
}

id UIImage.applyingAlphaMask(gradient:)(long long *a1)
{
  uint64_t v2 = v1;
  long long v15 = a1[1];
  long long v16 = *a1;
  uint64_t v3 = *((void *)a1 + 4);
  uint64_t v4 = *((void *)a1 + 5);
  char v5 = *((unsigned char *)a1 + 48);
  uint64_t v6 = *((void *)a1 + 7);
  uint64_t v7 = *((void *)a1 + 8);
  char v8 = *((unsigned char *)a1 + 72);
  objc_msgSend(v2, sel_size);
  __src[0] = v16;
  __src[1] = v15;
  uint64_t v19 = v3;
  uint64_t v20 = v4;
  char v21 = v5;
  uint64_t v22 = v6;
  uint64_t v23 = v7;
  char v24 = v8;
  id v11 = sub_1B5F4D810(__src, 0, 2, v9, v10);
  if (v11)
  {
    uint64_t v12 = v11;
    unint64_t v13 = (unint64_t)UIImage.blendWithAlphaMask(image:with:)((UIImage)image, (UIImage)v11);

    if (v13) {
      return (id)v13;
    }
  }
  return image;
}

void sub_1B5F4DAD0(void *a1, void *a2, uint64_t a3, CGBlendMode a4, CGFloat a5, double a6)
{
  if (!a2) {
    return;
  }
  id v29 = a2;
  objc_msgSend(v29, sel_drawInRect_blendMode_alpha_, 0, 0.0, 0.0, a5, a6, 1.0);
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  memcpy(__dst, (const void *)a3, sizeof(__dst));
  GradientDescriptor.cgColors.getter();
  type metadata accessor for CGColor(0);
  CFArrayRef v12 = (const __CFArray *)sub_1B61B24D0();
  swift_bridgeObjectRelease();
  memcpy(__dst, (const void *)a3, sizeof(__dst));
  uint64_t v13 = GradientDescriptor.cgLocations.getter();
  if (v13) {
    id v14 = (const CGFloat *)(v13 + 32);
  }
  else {
    id v14 = 0;
  }
  long long v15 = CGGradientCreateWithColors(DeviceRGB, v12, v14);

  swift_bridgeObjectRelease();
  if (v15)
  {
    double v16 = *(double *)(a3 + 16);
    double v17 = *(double *)(a3 + 24);
    double v19 = *(double *)(a3 + 32);
    uint64_t v18 = *(void *)(a3 + 40);
    if (*(unsigned char *)(a3 + 48) == 1)
    {
      uint64_t v20 = *(void *)&v19 | *(void *)&v17;
      if (!(v20 | *(void *)&v16 | v18))
      {
        double v23 = 0.5;
        double v22 = a5 * 0.5;
        goto LABEL_14;
      }
      uint64_t v21 = v20 | v18;
      if (*(void *)&v16 == 1 && !v21)
      {
        double v22 = a5 * 0.5;
        double v23 = 0.0;
LABEL_14:
        double v25 = a6 * v23;
        double v24 = 1.0;
LABEL_15:
        a5 = v22;
        goto LABEL_16;
      }
      if (*(void *)&v16 == 2 && !v21)
      {
        double v22 = a5 * 0.5;
        double v24 = 0.0;
        double v25 = a6;
        goto LABEL_15;
      }
      if (*(void *)&v16 != 3 || v21)
      {
        if (*(void *)&v16 != 4 || v21)
        {
          if (*(void *)&v16 != 5 || v21)
          {
            if (*(void *)&v16 != 6 || v21)
            {
              if (*(void *)&v16 != 7 || v21)
              {
                double v24 = 0.0;
                double v22 = a5;
                a5 = a5 * 0.0;
              }
              else
              {
                double v24 = 0.0;
                double v22 = a5 * 0.0;
              }
              double v25 = a6;
              goto LABEL_16;
            }
            double v25 = a6 * 0.0;
            double v22 = a5;
            a5 = a5 * 0.0;
          }
          else
          {
            double v22 = a5 * 0.0;
            double v25 = a6 * 0.0;
          }
          double v24 = 1.0;
        }
        else
        {
          double v24 = 0.5;
          double v25 = a6 * 0.5;
          double v22 = a5;
          a5 = a5 * 0.0;
        }
      }
      else
      {
        double v22 = a5 * 0.0;
        double v24 = 0.5;
        double v25 = a6 * 0.5;
      }
    }
    else
    {
      double v22 = v16 * a5;
      double v24 = *(double *)(a3 + 40);
      double v25 = v17 * a6;
      a5 = v19 * a5;
    }
LABEL_16:
    CGFloat v26 = v24 * a6;
    id v27 = (CGContext *)objc_msgSend(a1, sel_CGContext);
    CGContextSetBlendMode(v27, a4);

    id v28 = (CGContext *)objc_msgSend(a1, sel_CGContext);
    v32.CGFloat x = v22;
    v32.CGFloat y = v25;
    v33.CGFloat x = a5;
    v33.CGFloat y = v26;
    CGContextDrawLinearGradient(v28, v15, v32, v33, 0);
  }
}

void sub_1B5F4DDBC(void *a1, void *a2, uint64_t a3, CGBlendMode a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  if (a2)
  {
    id v15 = a2;
    objc_msgSend(v15, sel_drawInRect_blendMode_alpha_, 0, a5, a6, a7, a8, 1.0);
    DeviceRGB = CGColorSpaceCreateDeviceRGB();
    memcpy(v38, (const void *)a3, sizeof(v38));
    CFArrayRef v17 = (const __CFArray *)sub_1B614DE90();
    sub_1B5F4EB40(a3 + 136, (uint64_t)v44);
    sub_1B5F4EB40((uint64_t)v44, (uint64_t)&v45);
    if (v45) {
      uint64_t v18 = (const CGFloat *)(v45 + 32);
    }
    else {
      uint64_t v18 = 0;
    }
    double v19 = CGGradientCreateWithColors(DeviceRGB, v17, v18);

    if (v19)
    {
      uint64_t v20 = (CGContext *)objc_msgSend(a1, sel_CGContext);
      CGContextSetBlendMode(v20, a4);

      uint64_t v21 = (CGContext *)objc_msgSend(a1, sel_CGContext);
      CGPoint v22 = *(CGPoint *)(a3 + 32);
      v38[0] = *(CGPoint *)(a3 + 16);
      v38[1] = v22;
      v38[2] = *(CGPoint *)(a3 + 48);
      LOBYTE(v38[3].x) = *(unsigned char *)(a3 + 64);
      sub_1B5F4EC84((uint64_t)&v38[1], (uint64_t)v43);
      sub_1B5F4EC84((uint64_t)v43, (uint64_t)v46);
      double v23 = v46[0];
      if (v47 == 1)
      {
        double v24 = v46[1];
        double v25 = v46[3];
        double v26 = vabdd_f64(v46[0], v46[2]);
        v50.origin.CGFloat x = a5;
        v50.origin.CGFloat y = a6;
        v50.size.CGFloat width = a7;
        v50.size.CGFloat height = a8;
        double v27 = v26 * CGRectGetWidth(v50);
        double v28 = vabdd_f64(v24, v25);
        v51.origin.CGFloat x = a5;
        v51.origin.CGFloat y = a6;
        v51.size.CGFloat width = a7;
        v51.size.CGFloat height = a8;
        CGFloat Height = CGRectGetHeight(v51);
        double v23 = sqrt(v27 * v27 + v28 * Height * (v28 * Height));
      }
      long long v30 = *(_OWORD *)(a3 + 88);
      CGPoint v39 = *(CGPoint *)(a3 + 72);
      v40[0] = v30;
      v40[1] = *(_OWORD *)(a3 + 104);
      char v41 = *(unsigned char *)(a3 + 120);
      sub_1B5F4EC84((uint64_t)v40, (uint64_t)v42);
      sub_1B5F4EC84((uint64_t)v42, (uint64_t)v48);
      double v31 = v48[0];
      if (v49 == 1)
      {
        double v32 = v48[1];
        double v33 = v48[3];
        double v34 = vabdd_f64(v48[0], v48[2]);
        v52.origin.CGFloat x = a5;
        v52.origin.CGFloat y = a6;
        v52.size.CGFloat width = a7;
        v52.size.CGFloat height = a8;
        double v35 = v34 * CGRectGetWidth(v52);
        double v36 = vabdd_f64(v32, v33);
        v53.origin.CGFloat x = a5;
        v53.origin.CGFloat y = a6;
        v53.size.CGFloat width = a7;
        v53.size.CGFloat height = a8;
        CGFloat v37 = CGRectGetHeight(v53);
        double v31 = sqrt(v35 * v35 + v36 * v37 * (v36 * v37));
      }
      CGContextDrawRadialGradient(v21, v19, v38[0], v23, v39, v31, 0);
    }
  }
}

uint64_t UIImage.Scaling.description.getter()
{
  return 0x6946746365707361;
}

BOOL static UIImage.Scaling.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t UIImage.Scaling.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t UIImage.Scaling.hashValue.getter()
{
  return sub_1B61B3940();
}

uint64_t sub_1B5F4E138()
{
  return 0x6946746365707361;
}

UIImage *UIImage.scaled(to:scaling:)()
{
  OUTLINED_FUNCTION_3_52();
  int v3 = *v2;
  objc_msgSend(v4, sel_size);
  double v15 = OUTLINED_FUNCTION_5_34(v5);
  if (!v3) {
    BOOL v14 = v15 <= v16;
  }
  if (v14) {
    double v17 = v16;
  }
  else {
    double v17 = v15;
  }
  int v18 = OUTLINED_FUNCTION_6_38(v6, v7, v8, v9, v10, v11, v12, v13, v52, v56);
  double v20 = (v1 - v17 * v19) * 0.5;
  int v28 = OUTLINED_FUNCTION_6_38(v18, v21, v22, v23, v24, v25, v26, v27, v53, v57);
  double v30 = (v0 - v17 * v29) * 0.5;
  int v38 = OUTLINED_FUNCTION_6_38(v28, v31, v32, v33, v34, v35, v36, v37, v54, v58);
  double v40 = v17 * v39;
  OUTLINED_FUNCTION_6_38(v38, v41, v42, v43, v44, v45, v46, v47, v55, v59);
  double v49 = v17 * v48;
  v62.CGFloat width = v1;
  v62.CGFloat height = v0;
  UIGraphicsBeginImageContextWithOptions(v62, 0, 0.0);
  objc_msgSend(v60, sel_drawInRect_, v20, v30, v40, v49);
  CGRect v50 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();
  if (v50) {
    return v50;
  }
  return (UIImage *)v60;
}

void UIImage.scaleImage(to:scaling:)()
{
  OUTLINED_FUNCTION_3_52();
  int v3 = *v2;
  id v26 = v4;
  id v5 = objc_msgSend(v4, sel_CGImage);
  if (v5)
  {
    int v6 = v5;
    objc_msgSend(v26, sel_size);
    double v9 = OUTLINED_FUNCTION_5_34(v7);
    if (!v3) {
      BOOL v8 = v9 <= v10;
    }
    if (v8) {
      double v11 = v10;
    }
    else {
      double v11 = v9;
    }
    objc_msgSend(v26, sel_size);
    double v13 = v11 * v12;
    objc_msgSend(v26, sel_size);
    double v15 = round((v0 - v11 * v14) * 0.5);
    double v16 = round(v11 * v14);
    id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_, v1, v0);
    uint64_t v18 = swift_allocObject();
    *(double *)(v18 + 16) = v1;
    *(double *)(v18 + 24) = v0;
    *(void *)(v18 + 32) = v6;
    *(double *)(v18 + 40) = round((v1 - v13) * 0.5);
    *(double *)(v18 + 48) = v15;
    *(double *)(v18 + 56) = round(v13);
    *(double *)(v18 + 64) = v16;
    uint64_t v19 = OUTLINED_FUNCTION_1_4();
    *(void *)(v19 + 16) = sub_1B5F4E7CC;
    *(void *)(v19 + 24) = v18;
    aBlock[4] = sub_1B5F4EDBC;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1B5F4BA78;
    aBlock[3] = &block_descriptor_53;
    double v20 = _Block_copy(aBlock);
    id v21 = v6;
    swift_retain();
    swift_release();
    id v22 = objc_msgSend(v17, sel_imageWithActions_, v20);

    _Block_release(v20);
    LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (v17) {
      __break(1u);
    }
    else {
      OUTLINED_FUNCTION_10_30();
    }
  }
  else
  {
    OUTLINED_FUNCTION_10_30();
    id v25 = v23;
  }
}

void sub_1B5F4E4F4(void *a1, double a2, double a3)
{
  c = (CGContext *)objc_msgSend(a1, sel_CGContext);
  CGContextSetInterpolationQuality(c, kCGInterpolationHigh);
  CGContextScaleCTM(c, 1.0, -1.0);
  CGContextTranslateCTM(c, 0.0, -a3);
  sub_1B61B2B20();
}

id sub_1B5F4E5BC()
{
  double v0 = (void *)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_filterWithName_, v0);

  return v1;
}

id sub_1B5F4E620(uint64_t a1)
{
  if (a1)
  {
    type metadata accessor for CIContextOption(0);
    sub_1B5F4ECE0();
    uint64_t v2 = (void *)sub_1B61B1F00();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = 0;
  }
  id v3 = objc_msgSend(v1, sel_initWithOptions_, v2);

  return v3;
}

uint64_t sub_1B5F4E6AC()
{
  return swift_deallocObject();
}

void sub_1B5F4E6F4(void *a1)
{
  sub_1B5F4C1F8(a1, *(id *)(v1 + 16), *(void **)(v1 + 72), *(void *)(v1 + 80), *(void **)(v1 + 88), *(unsigned char *)(v1 + 96), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56));
}

uint64_t sub_1B5F4E718()
{
  return swift_deallocObject();
}

void sub_1B5F4E768(void *a1)
{
  sub_1B5F4C870(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(id *)(v1 + 32), *(void *)(v1 + 72), *(void **)(v1 + 80), *(unsigned char *)(v1 + 88), *(CGFloat *)(v1 + 40), *(CGFloat *)(v1 + 48), *(CGFloat *)(v1 + 56), *(CGFloat *)(v1 + 64), *(double *)(v1 + 96), *(double *)(v1 + 104));
}

void sub_1B5F4E78C(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1B6142D34(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_1B5F4E794()
{
  return swift_deallocObject();
}

void sub_1B5F4E7CC(void *a1)
{
  sub_1B5F4E4F4(a1, *(double *)(v1 + 16), *(double *)(v1 + 24));
}

unint64_t sub_1B5F4E7E8()
{
  unint64_t result = qword_1E9DAA6A0;
  if (!qword_1E9DAA6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA6A0);
  }
  return result;
}

unsigned char *_s7ScalingOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F4E900);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UIImage.Scaling()
{
  return &type metadata for UIImage.Scaling;
}

uint64_t sub_1B5F4E938()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1B5F4E980(void *a1)
{
  sub_1B5F4DAD0(a1, *(void **)(v1 + 16), v1 + 40, *(CGBlendMode *)(v1 + 116), *(CGFloat *)(v1 + 24), *(double *)(v1 + 32));
}

uint64_t sub_1B5F4E998(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B5F4E9CC(uint64_t a1)
{
  sub_1B5F4EA28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B5F4EA28()
{
  if (!qword_1EB647A80)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB647A80);
    }
  }
}

uint64_t sub_1B5F4EA8C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1B5F4EADC(void *a1)
{
  sub_1B5F4DDBC(a1, *(void **)(v1 + 16), v1 + 56, *(CGBlendMode *)(v1 + 200), *(CGFloat *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40), *(CGFloat *)(v1 + 48));
}

uint64_t sub_1B5F4EAF8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B5F4EB40(uint64_t a1, uint64_t a2)
{
  sub_1B5F4EBD4(0, &qword_1EB641C70, (uint64_t (*)(uint64_t))sub_1B5F4EC38, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B5F4EBD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B5F4EC38()
{
  if (!qword_1EB641C68)
  {
    unint64_t v0 = sub_1B61B2650();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB641C68);
    }
  }
}

uint64_t sub_1B5F4EC84(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1B5F4ECE0()
{
  unint64_t result = qword_1E9DA8508;
  if (!qword_1E9DA8508)
  {
    type metadata accessor for CIContextOption(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DA8508);
  }
  return result;
}

uint64_t sub_1B5F4ED30()
{
  return swift_deallocObject();
}

void sub_1B5F4ED70(void *a1)
{
  sub_1B5F4CDF0(a1, *(id *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 64), *(void *)(v1 + 32), *(void ***)(v1 + 56), *(void *)(v1 + 72));
}

uint64_t sub_1B5F4EDC0()
{
  return OUTLINED_FUNCTION_0_7();
}

uint64_t sub_1B5F4EDD4()
{
  return sub_1B5ECB4E4();
}

uint64_t sub_1B5F4EDE8()
{
  return sub_1B5F34034();
}

uint64_t sub_1B5F4EDFC()
{
  return sub_1B61B3940();
}

BOOL sub_1B5F4EE48(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B5E1F44C(*a1, *a2);
}

uint64_t sub_1B5F4EE64()
{
  return sub_1B5E1F564();
}

uint64_t sub_1B5F4EE7C()
{
  return sub_1B5E1F45C();
}

uint64_t sub_1B5F4EE94()
{
  return sub_1B61B3940();
}

uint64_t sub_1B5F4EEE4()
{
  return sub_1B5F4EF60();
}

uint64_t sub_1B5F4EF10()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_0_1();
  return MEMORY[0x1BA9B1EC0](v0);
}

uint64_t sub_1B5F4EF60()
{
  return swift_unknownObjectRelease();
}

void (*sub_1B5F4EFD4(void *a1))(void **a1, char a2)
{
  int v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t v4 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x80);
  v3[5] = v4;
  uint64_t v5 = (char *)v1 + v4;
  OUTLINED_FUNCTION_33_0();
  v3[3] = MEMORY[0x1BA9B1EC0](v5);
  return sub_1B5E55914;
}

id sub_1B5F4F070()
{
  return objc_msgSend(*(id *)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90)), sel_pageGutter);
}

id sub_1B5F4F0A4()
{
  return objc_msgSend(*(id *)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90)), sel_setPageGutter_);
}

id (*sub_1B5F4F0D8(void *a1))()
{
  a1[1] = v1;
  sub_1B5F4F070();
  *a1 = v3;
  return sub_1B5F4F120;
}

id sub_1B5F4F120()
{
  return sub_1B5F4F0A4();
}

id sub_1B5F4F148()
{
  return objc_msgSend(*(id *)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90)), sel_pagingEnabled);
}

id sub_1B5F4F190(char a1)
{
  return objc_msgSend(*(id *)((char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x90)), sel_setPagingEnabled_, a1 & 1);
}

id (*sub_1B5F4F1CC(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = sub_1B5F4F148() & 1;
  return sub_1B5F4F218;
}

id sub_1B5F4F218(uint64_t a1)
{
  return sub_1B5F4F190(*(unsigned char *)(a1 + 8));
}

uint64_t sub_1B5F4F240(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_1B61B2F80();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - v3, a1);
  return sub_1B5F4F3E8();
}

uint64_t sub_1B5F4F330()
{
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_37_12();
  OUTLINED_FUNCTION_19_2();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_36_10();
  OUTLINED_FUNCTION_6_0();
  uint64_t v0 = OUTLINED_FUNCTION_59_4();
  return v1(v0);
}

uint64_t sub_1B5F4F3E8()
{
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_19_2();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_36_10();
  OUTLINED_FUNCTION_6_0();
  uint64_t v0 = OUTLINED_FUNCTION_50_7();
  v1(v0);
  return swift_endAccess();
}

uint64_t (*sub_1B5F4F4B4())()
{
  return j__swift_endAccess;
}

void sub_1B5F4F520(uint64_t a1@<X8>)
{
}

void sub_1B5F4F52C(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (a1)
  {
    id v4 = a1;
    sub_1B5F52BD4(v4, a2);
  }
  else
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    __swift_storeEnumTagSinglePayload(a2, 1, 1, AssociatedTypeWitness);
  }
}

id sub_1B5F4F5FC()
{
  return sub_1B5F4F6A4((SEL *)&selRef_visibleViewController);
}

void sub_1B5F4F608(uint64_t a1@<X8>)
{
}

void sub_1B5F4F614(SEL *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)((char *)v2
                                                             + *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x90)), *a1));
  sub_1B5F4F52C(v4, a2);
}

id sub_1B5F4F698()
{
  return sub_1B5F4F6A4((SEL *)&selRef_secondaryVisibleViewController);
}

id sub_1B5F4F6A4(SEL *a1)
{
  id v2 = [*(id *)((char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x90)) *a1];
  return v2;
}

uint64_t sub_1B5F4F700()
{
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_37_12();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_47_8();
  OUTLINED_FUNCTION_58_5();
  OUTLINED_FUNCTION_34_10();
  OUTLINED_FUNCTION_36_10();
  OUTLINED_FUNCTION_6_0();
  uint64_t v0 = OUTLINED_FUNCTION_59_4();
  return v1(v0);
}

uint64_t sub_1B5F4F7D0()
{
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_47_8();
  OUTLINED_FUNCTION_58_5();
  OUTLINED_FUNCTION_34_10();
  OUTLINED_FUNCTION_36_10();
  OUTLINED_FUNCTION_6_0();
  uint64_t v0 = OUTLINED_FUNCTION_50_7();
  v1(v0);
  return swift_endAccess();
}

uint64_t sub_1B5F4F8B4()
{
  return sub_1B61B1F70();
}

uint64_t sub_1B5F4F904()
{
  return *((unsigned __int8 *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8));
}

uint64_t sub_1B5F4F930(uint64_t result)
{
  *((unsigned char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0xC8)) = result;
  return result;
}

uint64_t sub_1B5F4F95C()
{
  uint64_t v1 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0);
  if (*(void *)((char *)v0 + v1))
  {
    uint64_t v2 = *(void *)((char *)v0 + v1);
  }
  else
  {
    uint64_t v2 = sub_1B5F4F9E0(v0);
    *(void *)((char *)v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1B5F4F9E0(void *a1)
{
  return PageSheetPresentationObserver.init(viewController:)(a1);
}

id PageViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void PageViewController.init(coder:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  swift_unknownObjectWeakInit();
  uint64_t v3 = (uint64_t)v0 + *(void *)((*v2 & *v0) + 0x88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_storeEnumTagSinglePayload(v3, 1, 1, AssociatedTypeWitness);
  OUTLINED_FUNCTION_1_67();
  uint64_t v6 = *(void *)(v5 + 144);
  id v7 = objc_allocWithZone((Class)TUPageViewController);
  *(void *)&v1[v6] = sub_1B5F56668(0, 0, 0);
  OUTLINED_FUNCTION_1_67();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for PageBlueprint();
  OUTLINED_FUNCTION_51_7(v8);
  OUTLINED_FUNCTION_1_67();
  uint64_t v10 = *(void *)(v9 + 176);
  type metadata accessor for PageViewController.Event();
  swift_getWitnessTable();
  sub_1B61B0290();
  *(void *)&v1[v10] = sub_1B61B0270();
  OUTLINED_FUNCTION_1_67();
  uint64_t v12 = *(void *)(v11 + 192);
  type metadata accessor for PageViewController.NavigationAction();
  *(void *)&v1[v12] = sub_1B61B1EF0();
  OUTLINED_FUNCTION_1_67();
  v1[*(void *)(v13 + 200)] = 0;
  OUTLINED_FUNCTION_1_67();
  *(void *)&v1[*(void *)(v14 + 208)] = 0;

  sub_1B61B34D0();
  __break(1u);
}

void sub_1B5F4FD48(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  PageViewController.init(coder:)();
}

void *PageViewController.__allocating_init(blueprintProvider:prewarmer:sessionManager:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return PageViewController.init(blueprintProvider:prewarmer:sessionManager:)(a1, a2, a3);
}

void *PageViewController.init(blueprintProvider:prewarmer:sessionManager:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t v5 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v6 = *MEMORY[0x1E4FBC8C8] & *(void *)v3;
  swift_unknownObjectWeakInit();
  uint64_t v7 = (uint64_t)&v3[*(void *)((*v5 & *(void *)v3) + 0x88)];
  OUTLINED_FUNCTION_60_4();
  uint64_t v9 = *(void *)(v6 + 80);
  uint64_t v10 = *(void *)(v8 + 104);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_storeEnumTagSinglePayload(v7, 1, 1, AssociatedTypeWitness);
  OUTLINED_FUNCTION_58();
  uint64_t v13 = *(void *)(v12 + 144);
  id v14 = objc_allocWithZone((Class)TUPageViewController);
  double v15 = v4;
  *(void *)&v4[v13] = sub_1B5F56668(0, 0, 0);
  OUTLINED_FUNCTION_58();
  uint64_t v16 = v10;
  swift_getAssociatedConformanceWitness();
  uint64_t v17 = OUTLINED_FUNCTION_35_11();
  OUTLINED_FUNCTION_51_7(v17);
  OUTLINED_FUNCTION_58();
  uint64_t v41 = *(void *)(v18 + 176);
  OUTLINED_FUNCTION_60_4();
  OUTLINED_FUNCTION_60_4();
  uint64_t v20 = *(void *)(v19 + 96);
  OUTLINED_FUNCTION_60_4();
  uint64_t v22 = *(void *)(v21 + 112);
  uint64_t v23 = *(void *)(v6 + 120);
  uint64_t v46 = v9;
  uint64_t v47 = v24;
  uint64_t v25 = v24;
  uint64_t v48 = v20;
  uint64_t v49 = v16;
  uint64_t v50 = v22;
  uint64_t v51 = v23;
  uint64_t v42 = v22;
  type metadata accessor for PageViewController.Event();
  swift_getWitnessTable();
  sub_1B61B0290();
  *(void *)&v15[v41] = sub_1B61B0270();
  id v26 = (void *)MEMORY[0x1E4FBC8C8];
  OUTLINED_FUNCTION_58();
  uint64_t v28 = *(void *)(v27 + 192);
  uint64_t v46 = v9;
  uint64_t v47 = v25;
  uint64_t v48 = v20;
  uint64_t v49 = v16;
  uint64_t v50 = v22;
  uint64_t v51 = v23;
  type metadata accessor for PageViewController.NavigationAction();
  *(void *)&v15[v28] = sub_1B61B1EF0();
  OUTLINED_FUNCTION_8_28();
  v15[*(void *)(v29 + 200)] = 0;
  OUTLINED_FUNCTION_8_28();
  *(void *)&v15[*(void *)(v30 + 208)] = 0;
  OUTLINED_FUNCTION_8_28();
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_33();
  v31();
  OUTLINED_FUNCTION_8_28();
  OUTLINED_FUNCTION_2_3();
  uint64_t v33 = v32;
  OUTLINED_FUNCTION_33();
  v34();
  OUTLINED_FUNCTION_8_28();
  sub_1B5E176E4(a3, (uint64_t)&v15[*(void *)(v35 + 184)]);

  uint64_t v46 = v9;
  uint64_t v47 = v25;
  uint64_t v48 = v20;
  uint64_t v49 = v16;
  uint64_t v50 = v42;
  uint64_t v51 = v23;
  v45.receiver = v15;
  v45.super_class = (Class)type metadata accessor for PageViewController();
  int v36 = objc_msgSendSuper2(&v45, sel_initWithNibName_bundle_, 0, 0);
  int v37 = *(void **)((char *)v36 + *(void *)((*v26 & *v36) + 0x90));
  int v38 = v36;
  objc_msgSend(v37, sel_setDataSource_, v38);
  objc_msgSend(v37, sel_setDelegate_, v38);

  __swift_destroy_boxed_opaque_existential_1(a3);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(a2, v20);
  OUTLINED_FUNCTION_40();
  v39();
  return v38;
}

id sub_1B5F501D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *MEMORY[0x1E4FBC8C8] & *(void *)v0;
  OUTLINED_FUNCTION_23_15();
  uint64_t v4 = *(void *)(v3 + 104);
  uint64_t v5 = *(void *)(v2 + 80);
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_55_7();
  uint64_t v6 = type metadata accessor for PageBlueprint();
  OUTLINED_FUNCTION_0_13();
  uint64_t v8 = v7;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v40 - v10;
  OUTLINED_FUNCTION_23_15();
  OUTLINED_FUNCTION_23_15();
  OUTLINED_FUNCTION_23_15();
  uint64_t v13 = *(void *)(v12 + 112);
  uint64_t v14 = *(void *)(v2 + 120);
  uint64_t v43 = v15;
  v44[0] = v5;
  v44[1] = v15;
  void v44[2] = v16;
  uint64_t v41 = v13;
  uint64_t v42 = v16;
  uint64_t v45 = v4;
  uint64_t v46 = v13;
  uint64_t v40 = v14;
  uint64_t v47 = v14;
  uint64_t v17 = (objc_class *)type metadata accessor for PageViewController();
  v48.receiver = v1;
  v48.super_class = v17;
  objc_msgSendSuper2(&v48, sel_viewDidLoad);
  OUTLINED_FUNCTION_25_1();
  uint64_t v19 = *(void **)&v1[*(void *)(v18 + 144)];
  id result = objc_msgSend(v19, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v21 = result;
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v22 = result;
  objc_msgSend(result, sel_bounds);
  double v24 = v23;
  double v26 = v25;
  double v28 = v27;
  double v30 = v29;

  objc_msgSend(v21, sel_setFrame_, v24, v26, v28, v30);
  objc_msgSend(v1, sel_addChildViewController_, v19);
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  int v31 = result;
  id result = objc_msgSend(v19, sel_view);
  if (result)
  {
    uint64_t v32 = result;
    objc_msgSend(v31, sel_addSubview_, result);

    objc_msgSend(v19, sel_didMoveToParentViewController_, v1);
    OUTLINED_FUNCTION_25_1();
    uint64_t v33 = *(void (**)(uint64_t))(v4 + 24);
    uint64_t v34 = OUTLINED_FUNCTION_43_7();
    v33(v34);
    sub_1B61B0430();
    swift_release();
    sub_1B5F505C0((uint64_t)v11);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
    uint64_t v35 = OUTLINED_FUNCTION_43_7();
    v33(v35);
    uint64_t v36 = swift_allocObject();
    swift_unknownObjectWeakInit();
    int v37 = (void *)swift_allocObject();
    uint64_t v38 = v43;
    v37[2] = v5;
    v37[3] = v38;
    v37[4] = v42;
    v37[5] = v4;
    uint64_t v39 = v40;
    v37[6] = v41;
    v37[7] = v39;
    v37[8] = v36;
    OUTLINED_FUNCTION_0_9();
    sub_1B61B0440();
    swift_release();
    swift_release();
    __swift_project_boxed_opaque_existential_1(v44, v45);
    sub_1B61B00C0();
    return (id)__swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1B5F505C0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v118 = a1;
  uint64_t v98 = *MEMORY[0x1E4FBC8C8] & *v1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v104 = (void (*)(char *, uint64_t))swift_getAssociatedTypeWitness();
  uint64_t v102 = *((void *)v104 - 1);
  MEMORY[0x1F4188790](v104);
  uint64_t v6 = (char *)&v89 - v5;
  uint64_t v103 = AssociatedConformanceWitness;
  uint64_t v7 = type metadata accessor for PageBlueprint();
  uint64_t v114 = sub_1B61B2F80();
  uint64_t v111 = *(void *)(v114 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v114);
  char v110 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v99 = (char *)&v89 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v106 = (char *)&v89 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v92 = (char *)&v89 - v15;
  uint64_t v117 = v7;
  uint64_t v109 = *(void *)(v7 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v105 = (char *)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v97 = (char *)&v89 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v91 = (char *)&v89 - v20;
  uint64_t v21 = sub_1B61B2F80();
  uint64_t v116 = *(void *)(v21 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v21);
  float v112 = (char *)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v107 = (char *)&v89 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v100 = (uint64_t)&v89 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  long long v101 = (char *)&v89 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)&v89 - v31;
  uint64_t v33 = MEMORY[0x1F4188790](v30);
  uint64_t v35 = (char *)&v89 - v34;
  uint64_t v36 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v37 = MEMORY[0x1F4188790](v33);
  uint64_t v95 = (char *)&v89 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  int v93 = (char *)&v89 - v40;
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  uint64_t v94 = (char *)&v89 - v42;
  uint64_t v43 = MEMORY[0x1F4188790](v41);
  uint64_t v45 = (char *)&v89 - v44;
  MEMORY[0x1F4188790](v43);
  uint64_t v47 = (char *)&v89 - v46;
  id v48 = sub_1B5F4F5FC();
  uint64_t v108 = v36;
  uint64_t v113 = v21;
  if (!v48)
  {
    id v56 = 0;
    uint64_t v96 = 0;
    goto LABEL_10;
  }
  uint64_t v49 = v48;
  swift_getObjectType();
  uint64_t v50 = dynamic_cast_existential_1_conditional((uint64_t)v49);
  if (!v50)
  {

    id v56 = 0;
    uint64_t v96 = 0;
    uint64_t v21 = v113;
    goto LABEL_10;
  }
  uint64_t v52 = v50;
  uint64_t v90 = v6;
  uint64_t v53 = v51;
  swift_getObjectType();
  float v115 = (void *)v52;
  uint64_t v119 = v52;
  id v54 = v49;
  uint64_t v96 = v53;
  sub_1B61B02A0();
  uint64_t v55 = v117;
  PageBlueprint.page(for:)();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, AssociatedTypeWitness) == 1)
  {

    uint64_t v21 = v113;
    (*(void (**)(char *, uint64_t))(v116 + 8))(v35, v113);
    id v56 = v115;
    uint64_t v36 = v108;
LABEL_9:
    uint64_t v6 = v90;
LABEL_10:
    sub_1B5F4F330();
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v32, 1, AssociatedTypeWitness);
    float v115 = v56;
    if (EnumTagSinglePayload == 1)
    {
      uint64_t v104 = *(void (**)(char *, uint64_t))(v116 + 8);
      v104(v32, v21);
      uint64_t v59 = v117;
      uint64_t v60 = v109;
      uint64_t v61 = v111;
    }
    else
    {
      CGSize v62 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
      v62(v45, v32, AssociatedTypeWitness);
      (*(void (**)(uint64_t))(v103 + 40))(AssociatedTypeWitness);
      uint64_t v63 = PageBlueprint.pagesMatching(marker:)((uint64_t)v6, v117);
      (*(void (**)(char *, void *))(v102 + 8))(v6, v104);
      uint64_t v119 = v63;
      sub_1B61B2650();
      uint64_t v64 = v36;
      swift_getWitnessTable();
      uint64_t v65 = (uint64_t)v101;
      sub_1B61B2A00();
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload(v65, 1, AssociatedTypeWitness) != 1)
      {
        uint64_t v71 = (uint64_t)v94;
        v62(v94, (char *)v65, AssociatedTypeWitness);
        PageViewController.show(page:animated:)(v71);
        uint64_t v72 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
        v72(v71, AssociatedTypeWitness);
        v72((uint64_t)v45, AssociatedTypeWitness);
        uint64_t v59 = v117;
        uint64_t v60 = v109;
        uint64_t v73 = (uint64_t)v110;
        uint64_t v61 = v111;
        id v56 = v115;
        goto LABEL_33;
      }
      (*(void (**)(char *, uint64_t))(v36 + 8))(v45, AssociatedTypeWitness);
      uint64_t v21 = v113;
      uint64_t v104 = *(void (**)(char *, uint64_t))(v116 + 8);
      v104((char *)v65, v113);
      uint64_t v59 = v117;
      uint64_t v60 = v109;
      uint64_t v61 = v111;
      id v56 = v115;
    }
    uint64_t v66 = (uint64_t)v112;
    uint64_t v67 = (uint64_t)v106;
    if (!v56) {
      goto LABEL_27;
    }
    sub_1B5F4F700();
    if (__swift_getEnumTagSinglePayload(v67, 1, v59))
    {
      uint64_t v68 = v56;
      unint64_t v69 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
      id v70 = v68;
      v69(v67, v114);
      __swift_storeEnumTagSinglePayload((uint64_t)v107, 1, 1, AssociatedTypeWitness);
    }
    else
    {
      id v74 = v97;
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v97, v67, v59);
      uint64_t v75 = v56;
      unint64_t v69 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
      id v76 = v75;
      v69(v67, v114);
      swift_getObjectType();
      uint64_t v119 = (uint64_t)v76;
      sub_1B61B02A0();
      uint64_t v77 = (uint64_t)v107;
      PageBlueprint.page(after:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v74, v59);
      if (__swift_getEnumTagSinglePayload(v77, 1, AssociatedTypeWitness) != 1)
      {
        uint64_t v79 = v100;
        (*(void (**)(uint64_t, char *, uint64_t))(v108 + 32))(v100, v107, AssociatedTypeWitness);
        __swift_storeEnumTagSinglePayload(v79, 0, 1, AssociatedTypeWitness);
        id v56 = v115;
        uint64_t v66 = (uint64_t)v112;
        uint64_t v21 = v113;
LABEL_25:
        if (__swift_getEnumTagSinglePayload(v79, 1, AssociatedTypeWitness) != 1)
        {
          uint64_t v85 = v108;
          uint64_t v86 = (uint64_t)v93;
          (*(void (**)(char *, uint64_t, uint64_t))(v108 + 32))(v93, v79, AssociatedTypeWitness);
          PageViewController.show(page:animated:)(v86);

          goto LABEL_31;
        }

        v104((char *)v79, v21);
LABEL_27:
        swift_getWitnessTable();
        sub_1B61B2A00();
        if (__swift_getEnumTagSinglePayload(v66, 1, AssociatedTypeWitness) == 1)
        {
          v104((char *)v66, v21);
          goto LABEL_32;
        }
        uint64_t v84 = v66;
        uint64_t v85 = v108;
        uint64_t v86 = (uint64_t)v95;
        (*(void (**)(char *, uint64_t, uint64_t))(v108 + 32))(v95, v84, AssociatedTypeWitness);
        PageViewController.show(page:animated:)(v86);
LABEL_31:
        (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v86, AssociatedTypeWitness);
        goto LABEL_32;
      }
    }
    uint64_t v78 = (uint64_t)v99;
    sub_1B5F4F700();
    if (__swift_getEnumTagSinglePayload(v78, 1, v59))
    {
      v69(v78, v114);
      uint64_t v79 = v100;
      __swift_storeEnumTagSinglePayload(v100, 1, 1, AssociatedTypeWitness);
      id v56 = v115;
    }
    else
    {
      uint64_t v80 = v97;
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v97, v78, v59);
      v69(v78, v114);
      id v56 = v115;
      swift_getObjectType();
      uint64_t v119 = (uint64_t)v56;
      sub_1B61B02A0();
      uint64_t v81 = v100;
      PageBlueprint.page(before:)();
      uint64_t v79 = v81;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v80, v59);
    }
    uint64_t v66 = (uint64_t)v112;
    uint64_t v21 = v113;
    v104(v107, v113);
    goto LABEL_25;
  }
  uint64_t v36 = v108;
  (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v47, v35, AssociatedTypeWitness);
  uint64_t v57 = (uint64_t)v92;
  sub_1B5F4F700();
  if (__swift_getEnumTagSinglePayload(v57, 1, v55) == 1)
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v47, AssociatedTypeWitness);

    (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v57, v114);
    id v56 = v115;
    uint64_t v21 = v113;
    goto LABEL_9;
  }
  uint64_t v82 = v109;
  uint64_t v83 = (uint64_t)v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v109 + 32))(v91, v57, v55);
  id v56 = v115;
  objc_msgSend(*(id *)((char *)v2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x90)), sel_setVisibleViewController_, v115);
  sub_1B5F5596C(v83, v118, (uint64_t)v47);

  (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v83, v55);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v47, AssociatedTypeWitness);
  uint64_t v59 = v55;
  uint64_t v60 = v82;
  uint64_t v61 = v111;
LABEL_32:
  uint64_t v73 = (uint64_t)v110;
LABEL_33:
  sub_1B5F4F700();
  if (__swift_getEnumTagSinglePayload(v73, 1, v59) == 1)
  {

    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v73, v114);
  }
  else
  {
    uint64_t v87 = v105;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v105, v73, v59);
    if (sub_1B5F4EF10())
    {
      (*(void (**)(uint64_t, char *, void))(*(void *)(v98 + 112) + 80))(v118, v87, *(void *)(v98 + 88));
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v60 + 8))(v87, v59);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v60 + 8))(v87, v59);
    }
  }
  return sub_1B5F5580C((uint64_t)v2, v118);
}

void sub_1B5F51450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v31 = a4;
  uint64_t v32 = a5;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v14 = type metadata accessor for PageBlueprint();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v28 - v16;
  swift_beginAccess();
  uint64_t v18 = (void *)MEMORY[0x1BA9B1EC0](a2 + 16);
  if (v18)
  {
    uint64_t v19 = v18;
    id v30 = *(id *)((char *)v18 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v18) + 0x90));
    uint64_t v20 = swift_allocObject();
    uint64_t v29 = a8;
    uint64_t v21 = v20;
    swift_unknownObjectWeakInit();
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
    unint64_t v22 = (*(unsigned __int8 *)(v15 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v23 = (char *)swift_allocObject();
    uint64_t v24 = v31;
    *((void *)v23 + 2) = a3;
    *((void *)v23 + 3) = v24;
    *((void *)v23 + 4) = v32;
    *((void *)v23 + 5) = a6;
    uint64_t v25 = v29;
    *((void *)v23 + 6) = a7;
    *((void *)v23 + 7) = v25;
    *((void *)v23 + 8) = v21;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v23[v22], v17, v14);
    aBlock[4] = sub_1B5F573DC;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1B5E3729C;
    aBlock[3] = &block_descriptor_30;
    uint64_t v26 = _Block_copy(aBlock);
    id v27 = v30;
    swift_release();
    objc_msgSend(v27, sel_performWhenIdle_, v26);
    _Block_release(v26);

    sub_1B61B0230();
  }
}

void sub_1B5F51734(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1BA9B1EC0](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    sub_1B5F505C0(a2);
  }
}

void sub_1B5F51790(void *a1)
{
  id v1 = a1;
  sub_1B5F501D8();
}

uint64_t sub_1B5F517D8(char a1)
{
  uint64_t v3 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v4 = (_OWORD *)(*MEMORY[0x1E4FBC8C8] & *v1);
  long long v5 = v4[6];
  v16[0] = v4[5];
  v16[1] = v5;
  v16[2] = v4[7];
  v17.receiver = v1;
  v17.super_class = (Class)type metadata accessor for PageViewController();
  objc_msgSendSuper2(&v17, sel_viewDidAppear_, a1 & 1);
  *((unsigned char *)v1 + *(void *)((*v3 & *v1) + 0xC8)) = 1;
  sub_1B5F519B4();
  id v6 = sub_1B5F4F5FC();
  if (!v6
    || (*(void *)&v16[0] = v6,
        sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0),
        sub_1B5E00AB8(0, &qword_1EB642AF8),
        (swift_dynamicCast() & 1) == 0))
  {
    OUTLINED_FUNCTION_6_1();
    return sub_1B5F33B80((uint64_t)&v14, qword_1EB642B00, &qword_1EB642AF8);
  }
  if (!v15) {
    return sub_1B5F33B80((uint64_t)&v14, qword_1EB642B00, &qword_1EB642AF8);
  }
  sub_1B5E30E70(&v14, (uint64_t)v16);
  OUTLINED_FUNCTION_56_5();
  uint64_t v8 = (void *)((char *)v1 + *(void *)(v7 + 184));
  uint64_t v9 = v8[3];
  uint64_t v10 = v8[4];
  __swift_project_boxed_opaque_existential_1(v8, v9);
  if (((*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v10 + 40))(v16, v9, v10) & 1) == 0)
  {
    uint64_t v11 = v8[3];
    uint64_t v12 = v8[4];
    __swift_project_boxed_opaque_existential_1(v8, v11);
    LOBYTE(v14) = 0;
    PageSessionManagerType.startSession(for:trigger:)((uint64_t)v16, (char *)&v14, v11, v12);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
}

uint64_t sub_1B5F519B4()
{
  uint64_t v1 = *MEMORY[0x1E4FBC8C8] & *v0;
  sub_1B5F4F95C();
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v1 + 80);
  *(void *)(v3 + 32) = *(void *)(v1 + 96);
  *(_OWORD *)(v3 + 40) = *(_OWORD *)(v1 + 104);
  *(void *)(v3 + 56) = *(void *)(v1 + 120);
  *(void *)(v3 + 64) = v2;
  swift_retain();
  swift_retain();
  sub_1B5E64078((uint64_t)sub_1B5F57288, v3);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1B5F51AF4(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_1B5F517D8(a3);
}

uint64_t sub_1B5F51B48(char a1)
{
  uint64_t v2 = v1;
  id v4 = (void *)MEMORY[0x1E4FBC8C8];
  long long v5 = (_OWORD *)(*MEMORY[0x1E4FBC8C8] & *v2);
  long long v6 = v5[6];
  v16[0] = v5[5];
  v16[1] = v6;
  v16[2] = v5[7];
  v17.receiver = v2;
  v17.super_class = (Class)type metadata accessor for PageViewController();
  objc_msgSendSuper2(&v17, sel_viewDidDisappear_, a1 & 1);
  unsigned __int8 v7 = objc_msgSend(v2, sel_ts_isVideoPlayerPresentedFullScreen);
  if ((v7 & 1) == 0) {
    *((unsigned char *)v2 + *(void *)((*v4 & *v2) + 0xC8)) = 0;
  }
  if (!sub_1B5F4F5FC()
    || (sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0),
        sub_1B5E00AB8(0, &qword_1EB642AF8),
        (swift_dynamicCast() & 1) == 0))
  {
    OUTLINED_FUNCTION_0_3();
    goto LABEL_9;
  }
  if (!v15)
  {
LABEL_9:
    sub_1B5F33B80((uint64_t)&v14, qword_1EB642B00, &qword_1EB642AF8);
    return sub_1B5F51D5C();
  }
  sub_1B5E30E70(&v14, (uint64_t)v16);
  OUTLINED_FUNCTION_25_1();
  uint64_t v9 = (void *)((char *)v2 + *(void *)(v8 + 184));
  uint64_t v10 = v9[3];
  uint64_t v11 = v9[4];
  __swift_project_boxed_opaque_existential_1(v9, v10);
  if (v7 & 1 | (((*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v11 + 40))(v16, v10, v11) & 1) == 0)) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  OUTLINED_FUNCTION_54_7();
  v13();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return sub_1B5F51D5C();
}

uint64_t sub_1B5F51D5C()
{
  sub_1B5F4F95C();
  PageSheetPresentationObserver.endObserving()();
  return swift_release();
}

void sub_1B5F51D98(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_1B5F51B48(a3);
}

id sub_1B5F51DEC(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_1B5F51E6C();

  if (v2)
  {
    sub_1B5DFF760(0, (unint64_t *)&qword_1EB647B78);
    uint64_t v3 = (void *)sub_1B61B24D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  return v3;
}

uint64_t sub_1B5F51E6C()
{
  uint64_t v8 = MEMORY[0x1E4FBC860];
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647B78);
  uint64_t v0 = sub_1B61B20F0();
  id v2 = sub_1B5E769AC(v0, v1, 0, (uint64_t)sel_previousPage);
  MEMORY[0x1BA9AF660]();
  OUTLINED_FUNCTION_57_6();
  if (v3) {
    OUTLINED_FUNCTION_42_9();
  }
  sub_1B61B25D0();
  sub_1B61B2510();
  uint64_t v4 = sub_1B61B20F0();
  id v6 = sub_1B5E769AC(v4, v5, 0, (uint64_t)sel_nextPage);
  MEMORY[0x1BA9AF660]();
  OUTLINED_FUNCTION_57_6();
  if (v3) {
    OUTLINED_FUNCTION_42_9();
  }
  sub_1B61B25D0();
  sub_1B61B2510();

  return v8;
}

Swift::Void __swiftcall PageViewController.previous()()
{
}

void sub_1B5F51F98(void *a1)
{
  id v1 = a1;
  sub_1B5F51F84();
}

Swift::Void __swiftcall PageViewController.next()()
{
}

id sub_1B5F51FF4(uint64_t a1, SEL *a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = (void *)MEMORY[0x1E4FBC8C8];
  OUTLINED_FUNCTION_14_2();
  unsigned __int8 v7 = v6;
  OUTLINED_FUNCTION_33_0();
  long long v9 = v7[5];
  long long v10 = v7[6];
  long long v11 = v7[7];
  type metadata accessor for PageViewController.NavigationAction();
  sub_1B61B2650();
  sub_1B61B2600();
  swift_endAccess();
  return objc_msgSend(*(id *)((char *)v4 + *(void *)((*v5 & *v4) + 0x90)), *a2, v9, v10, v11);
}

void sub_1B5F520D8(void *a1)
{
  id v1 = a1;
  sub_1B5F51FE0();
}

void sub_1B5F52120()
{
  OUTLINED_FUNCTION_83();
  id v1 = v0;
  uint64_t v3 = v2;
  uint64_t v86 = v4;
  id v6 = v5;
  uint64_t v96 = *MEMORY[0x1E4FBC8C8] & *v1;
  uint64_t v7 = *(void *)(v96 + 104);
  uint64_t v8 = *(void **)(v96 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1B61B2F80();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_0_13();
  uint64_t v85 = v10;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_82();
  id v87 = v12;
  uint64_t v95 = v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for PageBlueprint();
  OUTLINED_FUNCTION_0_13();
  uint64_t v89 = v14;
  uint64_t v90 = v13;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_82();
  uint64_t v88 = v16;
  OUTLINED_FUNCTION_0_13();
  uint64_t v93 = v17;
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v84 = (char *)v77 - v22;
  OUTLINED_FUNCTION_26();
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)v77 - v25;
  MEMORY[0x1F4188790](v24);
  uint64_t v91 = (char *)v77 - v27;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v28);
  id v30 = (char *)v77 - v29;
  OUTLINED_FUNCTION_0_13();
  uint64_t v94 = v31;
  MEMORY[0x1F4188790](v32);
  OUTLINED_FUNCTION_12();
  uint64_t v82 = v33;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v34);
  uint64_t v97 = (char *)v77 - v35;
  id v36 = objc_msgSend(v6, sel_visibleViewController);
  if (v36)
  {
    uint64_t v37 = v36;
    sub_1B5F52BD4(v36, (uint64_t)v30);
    OUTLINED_FUNCTION_28_11((uint64_t)v30, 1, AssociatedTypeWitness);
    if (v64)
    {

LABEL_28:
      OUTLINED_FUNCTION_5_1();
      v73();
      goto LABEL_33;
    }
    uint64_t v80 = v3;
    uint64_t v78 = v21;
    uint64_t v81 = v7;
    uint64_t v38 = v94[4];
    uint64_t v77[2] = v94 + 4;
    v77[1] = v38;
    OUTLINED_FUNCTION_107();
    v39();
    uint64_t v40 = sub_1B5F4EF10();
    uint64_t v41 = (void *)v96;
    uint64_t v79 = v26;
    uint64_t v42 = v86;
    if (v40)
    {
      uint64_t v26 = (char *)MEMORY[0x1E4FBC8C8];
      OUTLINED_FUNCTION_82_1();
      OUTLINED_FUNCTION_24_13();
      v43();
      uint64_t v44 = v88;
      sub_1B61B0430();
      swift_release();
      (*(void (**)(uint64_t, char *, void *, void *, uint64_t, void))(v41[14] + 32))(v44, v97, v37, v42, v80, v41[11]);
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v44, v90);
    }
    OUTLINED_FUNCTION_82_1();
    (*(void (**)(char *, void))(v41[15] + 24))(v97, v41[12]);
    if (v42)
    {
      long long v101 = v42;
      sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
      sub_1B5E00AB8(0, &qword_1EB642AF8);
      id v45 = v42;
      swift_dynamicCast();
      OUTLINED_FUNCTION_52_9();
      if (v46)
      {
        if (v100)
        {
          sub_1B5E30E70(&v99, (uint64_t)&v101);
          OUTLINED_FUNCTION_82_1();
          __swift_project_boxed_opaque_existential_1((void *)((char *)v1 + *(void *)(v47 + 184)), *(void *)((char *)v1 + *(void *)(v47 + 184) + 24));
          OUTLINED_FUNCTION_54_7();
          v48();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v101);
          goto LABEL_14;
        }
      }
      else
      {
        OUTLINED_FUNCTION_41_14();
      }
    }
    else
    {
      OUTLINED_FUNCTION_41_14();
      OUTLINED_FUNCTION_52_9();
    }
    sub_1B5F33B80((uint64_t)&v99, qword_1EB642B00, &qword_1EB642AF8);
LABEL_14:
    uint64_t v98 = v37;
    sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
    sub_1B5E00AB8(0, &qword_1EB642AF8);
    id v87 = v37;
    uint64_t v49 = (uint64_t)v26;
    if (swift_dynamicCast())
    {
      sub_1B5E30E70(&v99, (uint64_t)&v101);
      OUTLINED_FUNCTION_82_1();
      uint64_t v51 = (void *)((char *)v1 + *(void *)(v50 + 184));
      uint64_t v52 = v51[3];
      uint64_t v53 = v51[4];
      __swift_project_boxed_opaque_existential_1(v51, v52);
      sub_1B5F52E34(v1, (uint64_t)v42, (char *)&v99);
      PageSessionManagerType.startSession(for:trigger:)((uint64_t)&v101, (char *)&v99, v52, v53);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v101);
    }
    else
    {
      OUTLINED_FUNCTION_41_14();
      sub_1B5F33B80((uint64_t)&v99, qword_1EB642B00, &qword_1EB642AF8);
    }
    uint64_t v54 = v93;
    sub_1B5F4F330();
    uint64_t v55 = v94[2];
    uint64_t v56 = (uint64_t)v79;
    uint64_t v86 = v94 + 2;
    uint64_t v80 = v55;
    OUTLINED_FUNCTION_33();
    v57();
    __swift_storeEnumTagSinglePayload(v56, 0, 1, AssociatedTypeWitness);
    uint64_t v58 = v49 + *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v59 = *(void (**)(void))(v54 + 16);
    OUTLINED_FUNCTION_38_8();
    v59();
    OUTLINED_FUNCTION_38_8();
    v59();
    OUTLINED_FUNCTION_28_11(v49, 1, AssociatedTypeWitness);
    if (v64)
    {
      uint64_t v60 = *(void (**)(void))(v54 + 8);
      OUTLINED_FUNCTION_5_35();
      v60();
      OUTLINED_FUNCTION_5_35();
      v60();
      OUTLINED_FUNCTION_28_11(v58, 1, AssociatedTypeWitness);
      uint64_t v61 = v49;
      if (v64)
      {
        OUTLINED_FUNCTION_5_35();
        v60();
        CGSize v62 = (void (*)(void))v94[1];
LABEL_30:
        uint64_t v7 = v81;
        ((void (*)(char *, uint64_t))v62)(v97, AssociatedTypeWitness);
LABEL_32:

        goto LABEL_33;
      }
    }
    else
    {
      uint64_t v63 = v84;
      OUTLINED_FUNCTION_38_8();
      v59();
      OUTLINED_FUNCTION_28_11(v58, 1, AssociatedTypeWitness);
      uint64_t v61 = v49;
      if (!v64)
      {
        OUTLINED_FUNCTION_107();
        v74();
        char v75 = sub_1B61B20B0();
        CGSize v62 = (void (*)(void))v94[1];
        OUTLINED_FUNCTION_66();
        v62();
        id v76 = *(void (**)(void))(v93 + 8);
        OUTLINED_FUNCTION_5_35();
        v76();
        OUTLINED_FUNCTION_5_35();
        v76();
        OUTLINED_FUNCTION_66();
        v62();
        OUTLINED_FUNCTION_5_35();
        v76();
        if (v75) {
          goto LABEL_30;
        }
        goto LABEL_26;
      }
      uint64_t v65 = *(void (**)(void))(v93 + 8);
      OUTLINED_FUNCTION_5_35();
      v65();
      OUTLINED_FUNCTION_5_35();
      v65();
      ((void (*)(char *, uint64_t))v94[1])(v63, AssociatedTypeWitness);
    }
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v61, TupleTypeMetadata2);
LABEL_26:
    uint64_t v66 = (uint64_t)v78;
    OUTLINED_FUNCTION_33();
    v67();
    __swift_storeEnumTagSinglePayload(v66, 0, 1, AssociatedTypeWitness);
    sub_1B5F4F3E8();
    uint64_t v68 = sub_1B5F4EF10();
    uint64_t v7 = v81;
    if (!v68)
    {
      ((void (*)(char *, uint64_t))v94[1])(v97, AssociatedTypeWitness);
      goto LABEL_32;
    }
    OUTLINED_FUNCTION_82_1();
    OUTLINED_FUNCTION_24_13();
    v69();
    sub_1B61B0430();
    swift_release();
    uint64_t v70 = OUTLINED_FUNCTION_28_12();
    v71(v70);

    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_5_1();
    v72();
    goto LABEL_28;
  }
LABEL_33:
  OUTLINED_FUNCTION_82_1();
  OUTLINED_FUNCTION_33_0();
  long long v101 = v95;
  long long v102 = *(_OWORD *)(v96 + 88);
  uint64_t v103 = v7;
  long long v104 = *(_OWORD *)(v96 + 112);
  type metadata accessor for PageViewController.NavigationAction();
  sub_1B61B2650();
  sub_1B61B2640();
  swift_endAccess();
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5F52BD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x68);
  uint64_t v6 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x50);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for PageBlueprint();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v18 - v10;
  swift_getObjectType();
  uint64_t v12 = dynamic_cast_existential_1_conditional((uint64_t)a1);
  if (v12)
  {
    uint64_t v14 = v12;
    v18[1] = v13;
    _OWORD v18[2] = a2;
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v5 + 24);
    id v16 = a1;
    v15(v6, v5);
    sub_1B61B0430();
    swift_release();
    swift_getObjectType();
    void v18[3] = v14;
    sub_1B61B02A0();
    PageBlueprint.page(for:)();

    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, AssociatedTypeWitness);
  }
}

uint64_t sub_1B5F52E34@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4FBC8C8] & *a1;
  sub_1B5F4F8B4();
  long long v9 = *(_OWORD *)(v5 + 80);
  type metadata accessor for PageViewController.NavigationAction();
  sub_1B61B2650();
  swift_getWitnessTable();
  sub_1B61B2050();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v9 & 1) != 0 || v9 == 2) {
    char v8 = a2 != 0;
  }
  else {
    char v8 = 3;
  }
  *a3 = v8;
  return result;
}

void sub_1B5F52F3C(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  sub_1B5F52120();
}

void sub_1B5F52FC8()
{
}

id sub_1B5F52FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *MEMORY[0x1E4FBC8C8] & *v2;
  uint64_t v6 = sub_1B61AF570();
  uint64_t v29 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  long long v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v28 - v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v15 = (char *)v28 - v14;
  id v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 512))(a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, AssociatedTypeWitness);
  sub_1B5E00AB8(0, (unint64_t *)&unk_1EB64B8B0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v34 = 0;
    long long v32 = 0u;
    long long v33 = 0u;
    sub_1B5F33B80((uint64_t)&v32, &qword_1EB64B8C0, (unint64_t *)&unk_1EB64B8B0);
    return v16;
  }
  sub_1B5E30E70(&v32, (uint64_t)v35);
  uint64_t v17 = v36;
  uint64_t v18 = v37;
  __swift_project_boxed_opaque_existential_1(v35, v36);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v18 + 8))(&v30, v17, v18);
  if (!v31)
  {
    sub_1B5F33B80((uint64_t)&v30, &qword_1EB64A320, &qword_1EB64A0A0);
    goto LABEL_7;
  }
  sub_1B5E30E70(&v30, (uint64_t)&v32);
  sub_1B61AF520();
  id result = objc_msgSend(v16, sel_view);
  if (result)
  {
    uint64_t v20 = result;
    uint64_t v21 = *((void *)&v33 + 1);
    v28[1] = v34;
    uint64_t v22 = __swift_project_boxed_opaque_existential_1(&v32, *((uint64_t *)&v33 + 1));
    uint64_t v23 = sub_1B61B0F80();
    MEMORY[0x1F4188790](v23);
    (*(void (**)(char *, void *, uint64_t))(v25 + 16))((char *)v28 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v21);
    uint64_t v26 = v29;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v9, v11, v6);
    uint64_t v27 = (void *)sub_1B61B0F70();
    sub_1B61B2DC0();

    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    return v16;
  }
  __break(1u);
  return result;
}

id sub_1B5F53438(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  sub_1B5F52FC8();
  uint64_t v10 = v9;

  return v10;
}

void sub_1B5F534A8()
{
}

void sub_1B5F534C0()
{
  OUTLINED_FUNCTION_83();
  uint64_t v44 = v1;
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x50);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v40 = v5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for PageBlueprint();
  OUTLINED_FUNCTION_0_13();
  uint64_t v42 = v8;
  uint64_t v43 = v7;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_13();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_12();
  uint64_t v41 = v14;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v35 - v16;
  OUTLINED_FUNCTION_0_13();
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_12();
  uint64_t v38 = v21;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v35 - v23;
  sub_1B5F52BD4(v4, (uint64_t)v17);
  OUTLINED_FUNCTION_28_11((uint64_t)v17, 1, AssociatedTypeWitness);
  if (v31)
  {
    OUTLINED_FUNCTION_46();
    v25();
  }
  else
  {
    uint64_t v36 = v12;
    uint64_t v37 = v10;
    uint64_t v26 = v19;
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v35(v24, v17, AssociatedTypeWitness);
    OUTLINED_FUNCTION_25_1();
    OUTLINED_FUNCTION_24_13();
    v27();
    sub_1B61B0430();
    swift_release();
    uint64_t v28 = sub_1B61B02A0();
    uint64_t v29 = v41;
    v44(v28);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_5_1();
    v30();
    OUTLINED_FUNCTION_28_11(v29, 1, AssociatedTypeWitness);
    if (v31)
    {
      OUTLINED_FUNCTION_46();
      v32();
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v29, v37);
    }
    else
    {
      uint64_t v33 = v38;
      v35((char *)v38, (char *)v29, AssociatedTypeWitness);
      sub_1B5F52FE0(v33, 0);
      uint64_t v34 = *(void (**)(void))(v26 + 8);
      OUTLINED_FUNCTION_46();
      v34();
      ((void (*)(char *, uint64_t))v34)(v24, AssociatedTypeWitness);
    }
  }
  OUTLINED_FUNCTION_73();
}

id sub_1B5F53858(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  sub_1B5F534A8();
  uint64_t v10 = v9;

  return v10;
}

void sub_1B5F538C8()
{
  OUTLINED_FUNCTION_83();
  int v38 = v0;
  uint64_t v39 = v1;
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_2();
  uint64_t v37 = v4;
  uint64_t v6 = *(void *)(v5 + 104);
  uint64_t v7 = *(void *)(v5 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v34[1] = v7;
  v34[2] = v6;
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_35_11();
  OUTLINED_FUNCTION_0_13();
  uint64_t v35 = v10;
  uint64_t v36 = v9;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_82();
  v34[0] = v12;
  sub_1B61AF570();
  OUTLINED_FUNCTION_0_13();
  uint64_t v40 = v14;
  uint64_t v41 = v13;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_80();
  uint64_t v15 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_13();
  uint64_t v17 = v16;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v34 - v19;
  OUTLINED_FUNCTION_0_13();
  uint64_t v22 = v21;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)v34 - v24;
  sub_1B5F52BD4(v3, (uint64_t)v20);
  OUTLINED_FUNCTION_10_8((uint64_t)v20);
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v15);
LABEL_8:
    OUTLINED_FUNCTION_73();
    return;
  }
  OUTLINED_FUNCTION_107();
  v27();
  id v28 = objc_msgSend(v3, sel_view);
  if (v28)
  {
    uint64_t v29 = v28;
    long long v30 = v3;
    sub_1B61AF550();
    sub_1B61B2DB0();

    OUTLINED_FUNCTION_5_1();
    v31();
    if (sub_1B5F4EF10())
    {
      OUTLINED_FUNCTION_24_13();
      v32();
      uint64_t v33 = v34[0];
      sub_1B61B0430();
      swift_release();
      (*(void (**)(uint64_t, char *, void, void *, uint64_t, void))(*(void *)(v37 + 112) + 56))(v33, v25, v38 & 1, v30, v39, *(void *)(v37 + 88));
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v36);
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v25, AssociatedTypeWitness);
    goto LABEL_8;
  }
  __break(1u);
}

void sub_1B5F53C2C(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = a1;
  sub_1B5F538C8();
}

void sub_1B5F53CC4()
{
  OUTLINED_FUNCTION_83();
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_14_2();
  uint64_t v35 = v2;
  uint64_t v4 = *(void *)(v3 + 104);
  uint64_t v5 = *(void *)(v3 + 80);
  OUTLINED_FUNCTION_48_7();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v34 = v4;
  uint64_t v32 = v5;
  swift_getAssociatedConformanceWitness();
  uint64_t v33 = OUTLINED_FUNCTION_35_11();
  OUTLINED_FUNCTION_0_13();
  uint64_t v31 = v7;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_82();
  uint64_t v30 = v9;
  sub_1B61AF570();
  OUTLINED_FUNCTION_0_13();
  uint64_t v36 = v11;
  uint64_t v37 = v10;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_80();
  uint64_t v12 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_13();
  uint64_t v14 = v13;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v30 - v16;
  OUTLINED_FUNCTION_0_13();
  uint64_t v19 = v18;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v30 - v21;
  sub_1B5F52BD4(v1, (uint64_t)v17);
  OUTLINED_FUNCTION_10_8((uint64_t)v17);
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v12);
LABEL_8:
    OUTLINED_FUNCTION_73();
    return;
  }
  OUTLINED_FUNCTION_107();
  v24();
  id v25 = objc_msgSend(v1, sel_view);
  if (v25)
  {
    char v26 = v25;
    sub_1B61AF520();
    sub_1B61B2DB0();

    OUTLINED_FUNCTION_5_1();
    v27();
    if (sub_1B5F4EF10())
    {
      OUTLINED_FUNCTION_82_1();
      OUTLINED_FUNCTION_24_13();
      v28();
      uint64_t v29 = v30;
      sub_1B61B0430();
      swift_release();
      (*(void (**)(uint64_t, char *, void))(*(void *)(v35 + 112) + 64))(v29, v22, *(void *)(v35 + 88));
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v33);
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, AssociatedTypeWitness);
    goto LABEL_8;
  }
  __break(1u);
}

void sub_1B5F54030(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  sub_1B5F53CC4();
}

uint64_t sub_1B5F540A4(double a1, uint64_t a2, void (**a3)(void), char *a4)
{
  uint64_t v85 = a4;
  uint64_t v94 = a3;
  OUTLINED_FUNCTION_14_2();
  uint64_t v90 = v6;
  uint64_t v8 = *(void *)(v7 + 104);
  uint64_t v9 = *(void *)(v7 + 80);
  OUTLINED_FUNCTION_48_7();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_1B61B2F80();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_0_13();
  uint64_t v82 = v12;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_82();
  uint64_t v84 = v14;
  uint64_t v88 = v9;
  uint64_t v89 = v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for PageBlueprint();
  OUTLINED_FUNCTION_0_13();
  uint64_t v91 = v16;
  uint64_t v92 = v15;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_82();
  uint64_t v87 = v18;
  OUTLINED_FUNCTION_0_13();
  uint64_t v20 = v19;
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_12();
  uint64_t v83 = v22;
  OUTLINED_FUNCTION_26();
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  char v26 = (char *)v74 - v25;
  uint64_t v27 = MEMORY[0x1F4188790](v24);
  uint64_t v29 = (char *)v74 - v28;
  uint64_t v30 = MEMORY[0x1F4188790](v27);
  uint64_t v32 = (char *)v74 - v31;
  MEMORY[0x1F4188790](v30);
  uint64_t v34 = (char *)v74 - v33;
  OUTLINED_FUNCTION_0_13();
  uint64_t v93 = v35;
  uint64_t v37 = MEMORY[0x1F4188790](v36);
  uint64_t v39 = (char *)v74 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v37);
  uint64_t v41 = (char *)v74 - v40;
  sub_1B5F52BD4(v94, (uint64_t)v34);
  OUTLINED_FUNCTION_28_11((uint64_t)v34, 1, AssociatedTypeWitness);
  if (v61)
  {
    OUTLINED_FUNCTION_40();
    return v42();
  }
  id v76 = v39;
  uint64_t v77 = v26;
  uint64_t v79 = v29;
  uint64_t v80 = v32;
  uint64_t v94 = v20;
  uint64_t v78 = v11;
  uint64_t v44 = v93;
  uint64_t v45 = AssociatedTypeWitness;
  char v75 = *(void (**)(char *, char *, uint64_t))(v93 + 32);
  v75(v41, v34, AssociatedTypeWitness);
  uint64_t v46 = sub_1B5F4EF10();
  uint64_t v47 = v91;
  uint64_t v48 = v92;
  if (v46)
  {
    OUTLINED_FUNCTION_82_1();
    OUTLINED_FUNCTION_24_13();
    v49();
    uint64_t v50 = v87;
    sub_1B61B0430();
    swift_release();
    (*(void (**)(uint64_t, char *, char *, void, double))(*(void *)(v90 + 112) + 48))(v50, v41, v85, *(void *)(v90 + 88), a1);
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v50, v48);
  }
  if (a1 <= 0.5) {
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v41, AssociatedTypeWitness);
  }
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  uint64_t v52 = (uint64_t)v80;
  uint64_t v85 = v41;
  v74[1] = v44 + 16;
  v74[0] = v51;
  v51(v80, v41, v45);
  __swift_storeEnumTagSinglePayload(v52, 0, 1, v45);
  v74[2] = v4;
  sub_1B5F4F330();
  uint64_t v53 = v84;
  uint64_t v54 = v84 + *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v55 = v94;
  uint64_t v56 = v94[2];
  uint64_t v57 = v78;
  OUTLINED_FUNCTION_44_8();
  v56();
  OUTLINED_FUNCTION_44_8();
  v56();
  OUTLINED_FUNCTION_10_8(v53);
  if (v61)
  {
    uint64_t v58 = v55[1];
    OUTLINED_FUNCTION_46();
    v58();
    OUTLINED_FUNCTION_46();
    v58();
    OUTLINED_FUNCTION_10_8(v54);
    uint64_t v59 = v45;
    if (v61)
    {
      OUTLINED_FUNCTION_46();
      v58();
      return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v85, v45);
    }
    goto LABEL_16;
  }
  uint64_t v60 = v77;
  OUTLINED_FUNCTION_44_8();
  v56();
  OUTLINED_FUNCTION_10_8(v54);
  uint64_t v59 = v45;
  if (v61)
  {
    CGSize v62 = v94[1];
    ((void (*)(char *, uint64_t))v62)(v79, v57);
    ((void (*)(char *, uint64_t))v62)(v80, v57);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v60, v45);
LABEL_16:
    OUTLINED_FUNCTION_5_1();
    v63();
    goto LABEL_17;
  }
  v75(v76, (char *)v54, v45);
  char v71 = sub_1B61B20B0();
  uint64_t v72 = *(void (**)(void))(v93 + 8);
  OUTLINED_FUNCTION_66();
  v72();
  uint64_t v73 = v94[1];
  OUTLINED_FUNCTION_40();
  v73();
  OUTLINED_FUNCTION_40();
  v73();
  OUTLINED_FUNCTION_66();
  v72();
  OUTLINED_FUNCTION_40();
  v73();
  if (v71) {
    return ((uint64_t (*)(char *, uint64_t))v72)(v85, v45);
  }
LABEL_17:
  uint64_t v64 = v83;
  OUTLINED_FUNCTION_33();
  v65();
  __swift_storeEnumTagSinglePayload(v64, 0, 1, v59);
  sub_1B5F4F3E8();
  if (sub_1B5F4EF10())
  {
    OUTLINED_FUNCTION_24_13();
    v66();
    uint64_t v67 = v87;
    sub_1B61B0430();
    swift_release();
    uint64_t v68 = OUTLINED_FUNCTION_28_12();
    v69(v68);
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v67, v92);
  }
  OUTLINED_FUNCTION_5_1();
  return v70();
}

void sub_1B5F54818(void *a1, double a2, uint64_t a3, void *a4, void *a5, char *a6)
{
  id v10 = a4;
  uint64_t v11 = a5;
  id v12 = a1;
  sub_1B5F540A4(a2, (uint64_t)v12, v11, a6);
}

uint64_t sub_1B5F548AC()
{
  OUTLINED_FUNCTION_48_7();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32);
  uint64_t v2 = swift_checkMetadataState();
  return v1(v2, AssociatedConformanceWitness);
}

id PageViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_1B61B20C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void PageViewController.init(nibName:bundle:)()
{
}

void sub_1B5F54A2C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3) {
    sub_1B61B20F0();
  }
  id v5 = a4;
  PageViewController.init(nibName:bundle:)();
}

id PageViewController.__deallocating_deinit()
{
  long long v2 = *(_OWORD *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50);
  long long v3 = *(_OWORD *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60);
  long long v4 = *(_OWORD *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70);
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for PageViewController();
  return objc_msgSendSuper2(&v5, sel_dealloc, v2, v3, v4);
}

uint64_t sub_1B5F54AD4(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_23_15();
  OUTLINED_FUNCTION_49();
  sub_1B61B2F80();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_5_1();
  v2();
  OUTLINED_FUNCTION_1_67();

  OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_5_1();
  v4();
  OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_55_7();
  OUTLINED_FUNCTION_34_10();
  OUTLINED_FUNCTION_36_10();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_5_1();
  v5();
  OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_23_15();
  (*(void (**)(void))(*(void *)(*(void *)(v6 + 96) - 8) + 8))();
  OUTLINED_FUNCTION_1_67();
  swift_release();
  OUTLINED_FUNCTION_1_67();
  __swift_destroy_boxed_opaque_existential_1(a1 + *(void *)(v7 + 184));
  OUTLINED_FUNCTION_1_67();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_67();
  return swift_release();
}

void PageViewController.show(page:animated:)(uint64_t a1)
{
  long long v2 = *(void **)((char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x90));
  id v3 = sub_1B5F52FE0(a1, 1);
  objc_msgSend(v2, sel_setVisibleViewController_, v3);
}

Swift::Bool __swiftcall PageViewController.showPage(for:animated:)(Swift::String a1, Swift::Bool animated)
{
  OUTLINED_FUNCTION_83();
  id v3 = v2;
  char v48 = v4;
  uint64_t v51 = v5;
  uint64_t v52 = v6;
  uint64_t v47 = (void *)(*MEMORY[0x1E4FBC8C8] & *v2);
  uint64_t v7 = v47[13];
  uint64_t v8 = v47[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1B61B2F80();
  OUTLINED_FUNCTION_0_13();
  uint64_t v42 = v11;
  uint64_t v43 = v10;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_82();
  uint64_t v46 = v13;
  OUTLINED_FUNCTION_0_13();
  uint64_t v45 = v14;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_82();
  uint64_t v44 = v16;
  sub_1B61B08B0();
  OUTLINED_FUNCTION_0_13();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_80();
  swift_getAssociatedConformanceWitness();
  uint64_t v49 = AssociatedTypeWitness;
  type metadata accessor for PageBlueprint();
  OUTLINED_FUNCTION_0_13();
  uint64_t v19 = v18;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_23_15();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v7 + 24);
  uint64_t v50 = v8;
  v21(v8, v7);
  sub_1B61B0430();
  swift_release();
  swift_getWitnessTable();
  char v22 = sub_1B61B2A30();
  uint64_t v23 = *(void (**)(uint64_t))(v19 + 8);
  uint64_t v24 = OUTLINED_FUNCTION_53_10();
  v23(v24);
  if (v22)
  {
    OUTLINED_FUNCTION_25_1();
    sub_1B61B08A0();
    uint64_t v25 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v50;
    *(void *)(v26 + 24) = v47[11];
    *(void *)(v26 + 32) = v47[12];
    *(void *)(v26 + 40) = v7;
    *(void *)(v26 + 48) = v47[14];
    *(void *)(v26 + 56) = v47[15];
    *(void *)(v26 + 64) = v25;
    *(void *)(v26 + 72) = v51;
    *(void *)(v26 + 80) = v52;
    *(unsigned char *)(v26 + 88) = v48 & 1;
    swift_retain();
    sub_1B61B1F70();
    sub_1B61B0250();
    swift_release();
    OUTLINED_FUNCTION_5_1();
    v29(v27, v28);
    swift_release();
  }
  else
  {
    v21(v50, v7);
    sub_1B61B0430();
    swift_release();
    PageBlueprint.page(for:)();
    uint64_t v30 = OUTLINED_FUNCTION_53_10();
    v23(v30);
    OUTLINED_FUNCTION_28_11(v46, 1, v49);
    if (v31)
    {
      OUTLINED_FUNCTION_5_1();
      v34(v32, v33);
    }
    else
    {
      OUTLINED_FUNCTION_107();
      v37(v35, v36);
      OUTLINED_FUNCTION_25_1();
      uint64_t v39 = *(void **)((char *)v3 + *(void *)(v38 + 144));
      id v40 = sub_1B5F52FE0(v44, 1);
      objc_msgSend(v39, sel_setVisibleViewController_, v40, v42, v43);

      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v49);
    }
  }
  OUTLINED_FUNCTION_73();
  return result;
}

void sub_1B5F55250(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v7 = a1 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1BA9B1EC0](v7);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    v10._countAndFlagsBits = a2;
    v10._object = a3;
    PageViewController.showPage(for:animated:)(v10, a4 & 1);
  }
}

uint64_t PageViewController.identifier.getter()
{
  if (!sub_1B5F4F5FC()
    || (sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0),
        sub_1B5E00AB8(0, (unint64_t *)&qword_1EB642600),
        (OUTLINED_FUNCTION_40_10() & 1) == 0))
  {
    OUTLINED_FUNCTION_0_3();
    goto LABEL_6;
  }
  if (!v3)
  {
LABEL_6:
    sub_1B5F33B80((uint64_t)&v2, (unint64_t *)&qword_1EB648FE0, (unint64_t *)&qword_1EB642600);
    return 0;
  }
  sub_1B5E30E70(&v2, (uint64_t)v4);
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  uint64_t v0 = sub_1B61B02A0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v0;
}

uint64_t sub_1B5F553B8()
{
  return PageViewController.identifier.getter();
}

Swift::Void __swiftcall PageViewController.sceneWillEnterForeground()()
{
  if (*((unsigned char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8)) == 1)
  {
    if (sub_1B5F4F5FC()
      && (sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0),
          sub_1B5E00AB8(0, &qword_1EB642AF8),
          (OUTLINED_FUNCTION_40_10() & 1) != 0))
    {
      if (v6)
      {
        sub_1B5E30E70(&v5, (uint64_t)v7);
        OUTLINED_FUNCTION_56_5();
        long long v2 = (void *)((char *)v0 + *(void *)(v1 + 184));
        uint64_t v3 = v2[3];
        uint64_t v4 = v2[4];
        __swift_project_boxed_opaque_existential_1(v2, v3);
        LOBYTE(v5) = 2;
        (*(void (**)(unsigned char *, long long *, uint64_t, uint64_t, double))(v4 + 8))(v7, &v5, v3, v4, 1.0);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
        return;
      }
    }
    else
    {
      OUTLINED_FUNCTION_0_3();
    }
    sub_1B5F33B80((uint64_t)&v5, qword_1EB642B00, &qword_1EB642AF8);
  }
}

Swift::Void __swiftcall PageViewController.sceneWillResignActive()()
{
  id v1 = sub_1B5F4F5FC();
  if (v1
    && (*(void *)uint64_t v16 = v1,
        sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0),
        sub_1B5E00AB8(0, &qword_1EB642AF8),
        (OUTLINED_FUNCTION_7_1() & 1) != 0))
  {
    if (v14)
    {
      sub_1B5E30E70(&v12, (uint64_t)v16);
      long long v2 = OUTLINED_FUNCTION_20_15(*(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8));
      Swift::String v10 = OUTLINED_FUNCTION_26_12((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v12, *((uint64_t *)&v12 + 1), v13, v14, v15, v16[0]);
      v11(v10);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      return;
    }
  }
  else
  {
    OUTLINED_FUNCTION_6_1();
  }
  sub_1B5F33B80((uint64_t)&v12, qword_1EB642B00, &qword_1EB642AF8);
}

Swift::Void __swiftcall PageViewController.sceneDidBecomeActive()()
{
  id v1 = sub_1B5F4F5FC();
  if (v1
    && (*(void *)uint64_t v16 = v1,
        sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0),
        sub_1B5E00AB8(0, &qword_1EB642AF8),
        (OUTLINED_FUNCTION_7_1() & 1) != 0))
  {
    if (v14)
    {
      sub_1B5E30E70(&v12, (uint64_t)v16);
      long long v2 = OUTLINED_FUNCTION_20_15(*(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8));
      Swift::String v10 = OUTLINED_FUNCTION_26_12((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v12, *((uint64_t *)&v12 + 1), v13, v14, v15, v16[0]);
      v11(v10);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      return;
    }
  }
  else
  {
    OUTLINED_FUNCTION_6_1();
  }
  sub_1B5F33B80((uint64_t)&v12, qword_1EB642B00, &qword_1EB642AF8);
}

Swift::Void __swiftcall PageViewController.sceneDidEnterBackground()()
{
  id v1 = sub_1B5F4F5FC();
  if (v1
    && (*(void *)uint64_t v16 = v1,
        sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0),
        sub_1B5E00AB8(0, &qword_1EB642AF8),
        (OUTLINED_FUNCTION_7_1() & 1) != 0))
  {
    if (v14)
    {
      sub_1B5E30E70(&v12, (uint64_t)v16);
      long long v2 = OUTLINED_FUNCTION_20_15(*(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8));
      Swift::String v10 = OUTLINED_FUNCTION_26_12((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v12, *((uint64_t *)&v12 + 1), v13, v14, v15, v16[0]);
      v11(v10);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      return;
    }
  }
  else
  {
    OUTLINED_FUNCTION_6_1();
  }
  sub_1B5F33B80((uint64_t)&v12, qword_1EB642B00, &qword_1EB642AF8);
}

uint64_t sub_1B5F5580C(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = type metadata accessor for PageBlueprint();
  uint64_t v4 = sub_1B61B2F80();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v8 - v5;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))((char *)&v8 - v5, a2, v3);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v3);
  return sub_1B5F4F7D0();
}

uint64_t sub_1B5F5596C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v86 = a3;
  uint64_t v89 = a1;
  uint64_t v90 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v81 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v78 = (char *)&v68 - v4;
  uint64_t v5 = sub_1B61B2F80();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v79 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v80 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v82 = (char *)&v68 - v9;
  uint64_t v87 = *(void *)(v5 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v77 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v83 = (char *)&v68 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v84 = (char *)&v68 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v68 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v21 = (char *)&v68 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v68 - v22;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v25 = type metadata accessor for PageBlueprint();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)&v68 - v27;
  uint64_t result = static PageBlueprint.== infix(_:_:)();
  if ((result & 1) == 0)
  {
    uint64_t v75 = AssociatedConformanceWitness;
    id v76 = v21;
    uint64_t v73 = v18;
    id v74 = v23;
    swift_getWitnessTable();
    uint64_t v30 = v25;
    char v31 = sub_1B61B2A30();
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v28, v90, v25);
    if (v31)
    {
      char v32 = sub_1B61B2A30();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v30);
      uint64_t v33 = v5;
      uint64_t v34 = AssociatedTypeWitness;
      uint64_t v35 = v75;
      if ((v32 & 1) == 0) {
        return (uint64_t)objc_msgSend(*(id *)((char *)v85 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v85) + 0x90)), sel_reindexViewControllers);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
      uint64_t v33 = v5;
      uint64_t v34 = AssociatedTypeWitness;
      uint64_t v35 = v75;
    }
    uint64_t v69 = *(void *)(v35 + 8);
    uint64_t v36 = *(void *)(v69 + 16);
    sub_1B61B02A0();
    uint64_t v37 = v74;
    PageBlueprint.page(before:)();
    swift_bridgeObjectRelease();
    uint64_t v71 = v36;
    sub_1B61B02A0();
    uint64_t v38 = v76;
    uint64_t v75 = v30;
    PageBlueprint.page(before:)();
    swift_bridgeObjectRelease();
    uint64_t v39 = v87;
    uint64_t v40 = (uint64_t)v82;
    uint64_t v41 = (uint64_t)&v82[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
    v42(v82, v37, v33);
    v42((char *)v41, v38, v33);
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v40, 1, v34);
    uint64_t v70 = (void (*)(uint64_t, char *, uint64_t))v42;
    if (EnumTagSinglePayload == 1)
    {
      uint64_t v44 = *(void (**)(char *, uint64_t))(v39 + 8);
      v44(v38, v33);
      v44(v37, v33);
      int v45 = __swift_getEnumTagSinglePayload(v41, 1, v34);
      uint64_t v46 = v84;
      uint64_t v72 = v44;
      if (v45 == 1)
      {
        v44((char *)v40, v33);
        uint64_t v47 = (uint64_t)v80;
        goto LABEL_15;
      }
      uint64_t v50 = v79;
      uint64_t v47 = (uint64_t)v80;
    }
    else
    {
      char v48 = v73;
      v42(v73, (char *)v40, v33);
      if (__swift_getEnumTagSinglePayload(v41, 1, v34) != 1)
      {
        uint64_t v51 = v81;
        uint64_t v52 = v78;
        (*(void (**)(char *, uint64_t, uint64_t))(v81 + 32))(v78, v41, v34);
        char v53 = sub_1B61B20B0();
        uint64_t v54 = *(void (**)(char *, uint64_t))(v51 + 8);
        v54(v52, v34);
        uint64_t v55 = v37;
        uint64_t v56 = *(void (**)(char *, uint64_t))(v87 + 8);
        v56(v76, v33);
        v56(v55, v33);
        v54(v73, v34);
        uint64_t v72 = v56;
        v56((char *)v40, v33);
        uint64_t v47 = (uint64_t)v80;
        uint64_t v46 = v84;
        if (v53) {
          goto LABEL_15;
        }
        goto LABEL_14;
      }
      uint64_t v49 = *(void (**)(char *, uint64_t))(v39 + 8);
      v49(v76, v33);
      uint64_t v72 = v49;
      v49(v37, v33);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v48, v34);
      uint64_t v50 = v79;
      uint64_t v47 = (uint64_t)v80;
      uint64_t v46 = v84;
    }
    (*(void (**)(char *, uint64_t))(v50 + 8))(v82, TupleTypeMetadata2);
LABEL_14:
    objc_msgSend(*(id *)((char *)v85 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v85) + 0x90)), sel_reindexPreviousViewControllers);
LABEL_15:
    sub_1B61B02A0();
    PageBlueprint.page(after:)();
    swift_bridgeObjectRelease();
    sub_1B61B02A0();
    uint64_t v57 = v83;
    PageBlueprint.page(after:)();
    swift_bridgeObjectRelease();
    uint64_t v58 = v47 + *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v59 = v70;
    v70(v47, v46, v33);
    v59(v58, v57, v33);
    if (__swift_getEnumTagSinglePayload(v47, 1, v34) == 1)
    {
      uint64_t v60 = v72;
      v72(v57, v33);
      v60(v46, v33);
      if (__swift_getEnumTagSinglePayload(v58, 1, v34) == 1) {
        return ((uint64_t (*)(uint64_t, uint64_t))v60)(v47, v33);
      }
    }
    else
    {
      char v61 = v77;
      v59((uint64_t)v77, (char *)v47, v33);
      if (__swift_getEnumTagSinglePayload(v58, 1, v34) != 1)
      {
        uint64_t v63 = v81;
        uint64_t v64 = v78;
        (*(void (**)(char *, uint64_t, uint64_t))(v81 + 32))(v78, v58, v34);
        char v65 = sub_1B61B20B0();
        uint64_t v66 = *(void (**)(char *, uint64_t))(v63 + 8);
        v66(v64, v34);
        uint64_t v67 = v72;
        v72(v83, v33);
        v67(v84, v33);
        v66(v61, v34);
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v67)(v47, v33);
        if (v65) {
          return result;
        }
        return (uint64_t)objc_msgSend(*(id *)((char *)v85 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v85) + 0x90)), sel_reindexNextViewControllers);
      }
      CGSize v62 = v72;
      v72(v83, v33);
      v62(v84, v33);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v61, v34);
    }
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v47, TupleTypeMetadata2);
    return (uint64_t)objc_msgSend(*(id *)((char *)v85 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v85) + 0x90)), sel_reindexNextViewControllers);
  }
  return result;
}

void sub_1B5F563E0(char *a1, uint64_t a2)
{
  char v2 = *a1;
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1BA9B1EC0](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    if (v2)
    {
      if (sub_1B5F4F5FC())
      {
        sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
        sub_1B5E00AB8(0, &qword_1EB642AF8);
        if (swift_dynamicCast())
        {
          if (*((void *)&v15 + 1))
          {
            sub_1B5E30E70(&v14, (uint64_t)v17);
            uint64_t v6 = (void *)((char *)v5 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v5) + 0xB8));
            uint64_t v7 = v6[3];
            uint64_t v8 = v6[4];
            __swift_project_boxed_opaque_existential_1(v6, v7);
            if ((*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v8 + 40))(v17, v7, v8))
            {
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);

              return;
            }
            uint64_t v12 = v6[3];
            uint64_t v13 = v6[4];
            __swift_project_boxed_opaque_existential_1(v6, v12);
            LOBYTE(v14) = 0;
            PageSessionManagerType.startSession(for:trigger:)((uint64_t)v17, (char *)&v14, v12, v13);
            goto LABEL_16;
          }
          goto LABEL_13;
        }
      }
    }
    else if (sub_1B5F4F5FC())
    {
      sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
      sub_1B5E00AB8(0, &qword_1EB642AF8);
      if (swift_dynamicCast())
      {
        if (*((void *)&v15 + 1))
        {
          sub_1B5E30E70(&v14, (uint64_t)v17);
          uint64_t v9 = (void *)((char *)v5 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v5) + 0xB8));
          uint64_t v10 = v9[3];
          uint64_t v11 = v9[4];
          __swift_project_boxed_opaque_existential_1(v9, v10);
          (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 32))(v17, v10, v11);
LABEL_16:

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
          return;
        }
        goto LABEL_13;
      }
    }
    uint64_t v16 = 0;
    long long v14 = 0u;
    long long v15 = 0u;
LABEL_13:

    sub_1B5F33B80((uint64_t)&v14, qword_1EB642B00, &qword_1EB642AF8);
  }
}

id sub_1B5F56668(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    uint64_t v5 = (void *)sub_1B61B20C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = 0;
  }
  id v6 = objc_msgSend(v3, sel_initWithNibName_bundle_, v5, a3);

  return v6;
}

uint64_t type metadata accessor for PageViewController.Event()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for PageViewController.NavigationAction()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for PageViewController()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1B5F56720()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B5F56758()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1B5F56790(uint64_t a1)
{
  sub_1B5F51450(a1, v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_1B5F567A4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1B5F567E4()
{
  sub_1B5F55250(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void **)(v0 + 80), *(unsigned char *)(v0 + 88));
}

uint64_t sub_1B5F56820@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5F4EF10();
  *a1 = result;
  return result;
}

id sub_1B5F56858@<X0>(void *a1@<X8>)
{
  id result = sub_1B5F4F070();
  *a1 = v3;
  return result;
}

id sub_1B5F56884()
{
  return sub_1B5F4F0A4();
}

id sub_1B5F568B4@<X0>(unsigned char *a1@<X8>)
{
  id result = sub_1B5F4F148();
  *a1 = result & 1;
  return result;
}

id sub_1B5F568E4(char *a1)
{
  return sub_1B5F4F190(*a1);
}

uint64_t sub_1B5F56914()
{
  return sub_1B5F4F330();
}

uint64_t sub_1B5F56944()
{
  swift_getAssociatedTypeWitness();
  uint64_t v0 = sub_1B61B2F80();
  if (v1 <= 0x3F)
  {
    uint64_t v0 = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_getAssociatedConformanceWitness();
      type metadata accessor for PageBlueprint();
      uint64_t v0 = sub_1B61B2F80();
      if (v3 <= 0x3F)
      {
        uint64_t v0 = swift_checkMetadataState();
        if (v4 <= 0x3F) {
          return swift_initClassMetadata2();
        }
      }
    }
  }
  return v0;
}

uint64_t method lookup function for PageViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PageViewController);
}

uint64_t dispatch thunk of PageViewController.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of PageViewController.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of PageViewController.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of PageViewController.pageGutter.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of PageViewController.pageGutter.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of PageViewController.pageGutter.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of PageViewController.pagingEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of PageViewController.pagingEnabled.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of PageViewController.pagingEnabled.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of PageViewController.primaryVisiblePage.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of PageViewController.primaryVisiblePage.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of PageViewController.primaryVisiblePage.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of PageViewController.currentVisiblePage.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of PageViewController.currentViewController.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of PageViewController.secondaryVisiblePage.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of PageViewController.secondaryVisibleViewController.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of PageViewController.__allocating_init(blueprintProvider:prewarmer:sessionManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 440))();
}

uint64_t dispatch thunk of PageViewController.pageViewController(_:didChangeVisibleViewControllerFrom:direction:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of PageViewController.pageViewController(_:viewControllerBefore:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of PageViewController.pageViewController(_:viewControllerAfter:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1E0))();
}

uint64_t dispatch thunk of PageViewController.pageViewController(_:willShow:previousViewController:fromScroll:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of PageViewController.pageViewController(_:didHide:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of PageViewController.pageViewController(_:viewController:changedVisibilityFactor:scroll:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F8))();
}

uint64_t sub_1B5F57090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 48);
}

unsigned char *sub_1B5F57098(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F57164);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1B5F5718C(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *id result = a2;
        return result;
      case 2:
        *(_WORD *)id result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)id result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *id result = 0;
      break;
    case 2:
      *(_WORD *)id result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B5F57228);
    case 4:
      *(_DWORD *)id result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B5F57250()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B5F5726C()
{
  return swift_getWitnessTable();
}

void sub_1B5F57288(char *a1)
{
  sub_1B5F563E0(a1, *(void *)(v1 + 64));
}

uint64_t sub_1B5F5729C()
{
  OUTLINED_FUNCTION_48_7();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for PageBlueprint();
  swift_release();
  sub_1B61B0670();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_5_1();
  v0();
  return swift_deallocObject();
}

void sub_1B5F573DC()
{
  OUTLINED_FUNCTION_83();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for PageBlueprint();
  OUTLINED_FUNCTION_73();
  sub_1B5F51734(v0, v1);
}

BOOL static CloseButton.Style.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CloseButton.Style.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t CloseButton.Style.hashValue.getter()
{
  return sub_1B61B3940();
}

__n128 sub_1B5F57564()
{
  __asm { FMOV            V0.2D, #28.0 }
  xmmword_1EB6401F0 = (__int128)result;
  return result;
}

uint64_t sub_1B5F57578()
{
  sub_1B5E44E58();
  uint64_t result = sub_1B61B2DF0();
  qword_1EB640A80 = result;
  return result;
}

uint64_t sub_1B5F575C0()
{
  sub_1B5E44E58();
  uint64_t result = sub_1B61B2DF0();
  qword_1EB640A68 = result;
  return result;
}

id sub_1B5F57608(uint64_t a1)
{
  return sub_1B5F57628(a1, 0, &qword_1EB640A50);
}

id sub_1B5F57618(uint64_t a1)
{
  return sub_1B5F57628(a1, 2, &qword_1EB640A38);
}

id sub_1B5F57628(uint64_t a1, uint64_t a2, void *a3)
{
  id result = objc_msgSend(self, sel_effectWithStyle_, a2);
  *a3 = result;
  return result;
}

Swift::Void __swiftcall CloseButton.transition(to:duration:)(TeaUI::CloseButton::Style to, Swift::Double duration)
{
  char v4 = *(unsigned char *)to;
  uint64_t v5 = self;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v2;
  *(unsigned char *)(v6 + 24) = v4;
  v9[4] = sub_1B5F5820C;
  v9[5] = v6;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  void v9[2] = sub_1B5E3729C;
  void v9[3] = &block_descriptor_31;
  uint64_t v7 = _Block_copy(v9);
  id v8 = v2;
  swift_release();
  objc_msgSend(v5, sel_animateWithDuration_delay_options_animations_completion_, 4, v7, 0, duration, 0.0);
  _Block_release(v7);
}

void sub_1B5F5777C(uint64_t a1, char a2)
{
  char v2 = a2 & 1;
  sub_1B5F577B4(&v2);
}

void sub_1B5F577B4(unsigned char *a1)
{
  unsigned __int8 v2 = *(unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI11CloseButton_style);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI11CloseButton_style) = *a1;
  unsigned __int8 v3 = v2;
  sub_1B5F577F0(&v3);
}

void sub_1B5F577F0(unsigned __int8 *a1)
{
  if (*a1 != *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5TeaUI11CloseButton_style)) {
    sub_1B5F5782C();
  }
}

void sub_1B5F5782C()
{
  id v1 = sub_1B5F578D4();
  uint64_t v2 = OBJC_IVAR____TtC5TeaUI11CloseButton_style;
  char v6 = v0[OBJC_IVAR____TtC5TeaUI11CloseButton_style];
  id v3 = sub_1B5F57A38(&v6);
  objc_msgSend(v1, sel_setEffect_, v3);

  char v5 = v0[v2];
  id v4 = sub_1B5F57E04(&v5);
  objc_msgSend(v0, sel_setTintColor_, v4);
}

id sub_1B5F578D4()
{
  uint64_t v1 = OBJC_IVAR____TtC5TeaUI11CloseButton____lazy_storage___backing;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI11CloseButton____lazy_storage___backing);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5TeaUI11CloseButton____lazy_storage___backing);
  }
  else
  {
    char v10 = *(unsigned char *)(v0 + OBJC_IVAR____TtC5TeaUI11CloseButton_style);
    id v4 = sub_1B5F57A38(&v10);
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F00]), sel_initWithEffect_, v4);

    objc_msgSend(v5, sel_setClipsToBounds_, 1);
    id v6 = objc_msgSend(v5, sel_layer);
    if (qword_1EB640208 != -1) {
      swift_once();
    }
    objc_msgSend(v6, sel_setCornerRadius_, *(double *)&xmmword_1EB6401F0 * 0.5);

    objc_msgSend(v5, sel_setUserInteractionEnabled_, 0);
    objc_msgSend(v5, sel_setFrame_, 0.0, 0.0, xmmword_1EB6401F0);
    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1B5F57A38(unsigned char *a1)
{
  if (*a1)
  {
    if (qword_1EB640A48 != -1) {
      swift_once();
    }
    uint64_t v1 = &qword_1EB640A38;
  }
  else
  {
    if (qword_1EB640A60 != -1) {
      swift_once();
    }
    uint64_t v1 = &qword_1EB640A50;
  }
  uint64_t v2 = (void *)*v1;
  return v2;
}

id CloseButton.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id CloseButton.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v0[OBJC_IVAR____TtC5TeaUI11CloseButton_style] = 1;
  *(void *)&v0[OBJC_IVAR____TtC5TeaUI11CloseButton____lazy_storage___backing] = 0;
  if (qword_1EB640208 != -1) {
    swift_once();
  }
  v21.receiver = v0;
  v21.super_class = ObjectType;
  id v2 = objc_msgSendSuper2(&v21, sel_initWithFrame_, 0.0, 0.0, xmmword_1EB6401F0);
  OUTLINED_FUNCTION_1_1(v2, sel_setContentEdgeInsets_);
  OUTLINED_FUNCTION_1_1(v2, sel_setTitleEdgeInsets_);
  OUTLINED_FUNCTION_1_1(v2, sel_setImageEdgeInsets_);
  objc_msgSend(v2, sel_setContentHorizontalAlignment_, 3);
  objc_msgSend(v2, sel_setContentVerticalAlignment_, 3);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v4 = self;
  id v5 = v2;
  id v6 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v7 = sub_1B61AF7D0();
  uint64_t v9 = v8;

  sub_1B60E6DD4(v7, v9, v5);
  char v20 = *((unsigned char *)v5 + OBJC_IVAR____TtC5TeaUI11CloseButton_style);
  id v10 = v5;
  id v11 = sub_1B5F57E04(&v20);
  objc_msgSend(v10, sel_setTintColor_, v11, 0x80000001B61E48B0);

  uint64_t v12 = qword_1EB640B48;
  id v13 = v10;
  if (v12 != -1) {
    swift_once();
  }
  id v14 = objc_msgSend((id)qword_1EB654AC8, sel_imageWithRenderingMode_, 2);
  objc_msgSend(v13, sel_setImage_forState_, v14, 0);

  id v15 = objc_msgSend(v13, sel_imageView);
  if (v15)
  {
    uint64_t v16 = v15;
    id v17 = v13;
    id v18 = sub_1B5F578D4();
    objc_msgSend(v17, sel_insertSubview_belowSubview_, v18, v16);
  }
  return v13;
}

id sub_1B5F57E04(unsigned char *a1)
{
  if (*a1)
  {
    if (qword_1EB640A78 != -1) {
      swift_once();
    }
    id v1 = &qword_1EB640A68;
  }
  else
  {
    if (qword_1EB640A90 != -1) {
      swift_once();
    }
    id v1 = &qword_1EB640A80;
  }
  id v2 = (void *)*v1;
  return v2;
}

void sub_1B5F57ECC()
{
  v0[OBJC_IVAR____TtC5TeaUI11CloseButton_style] = 1;
  *(void *)&v0[OBJC_IVAR____TtC5TeaUI11CloseButton____lazy_storage___backing] = 0;

  sub_1B61B34D0();
  __break(1u);
}

double CloseButton.intrinsicContentSize.getter()
{
  if (qword_1EB640208 != -1) {
    swift_once();
  }
  return *(double *)&xmmword_1EB6401F0;
}

CGSize __swiftcall CloseButton.sizeThatFits(_:)(CGSize a1)
{
  if (qword_1EB640208 != -1) {
    swift_once();
  }
  double v2 = *((double *)&xmmword_1EB6401F0 + 1);
  double v1 = *(double *)&xmmword_1EB6401F0;
  result.CGFloat height = v2;
  result.CGFloat width = v1;
  return result;
}

id CloseButton.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void CloseButton.init(frame:)()
{
}

id CloseButton.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Bool __swiftcall CloseButton.accessibilityActivate()()
{
  objc_msgSend(v0, sel_sendActionsForControlEvents_, 64);
  return 1;
}

uint64_t sub_1B5F581D4()
{
  return swift_deallocObject();
}

void sub_1B5F5820C()
{
  sub_1B5F5777C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

unint64_t sub_1B5F5821C()
{
  unint64_t result = qword_1E9DAA780;
  if (!qword_1E9DAA780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA780);
  }
  return result;
}

uint64_t type metadata accessor for CloseButton()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for CloseButton.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F58358);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CloseButton.Style()
{
  return &type metadata for CloseButton.Style;
}

uint64_t static GradientView.layerClass.getter()
{
  return sub_1B5DFF760(0, &qword_1EB647BA8);
}

uint64_t GradientView.gradientLayer.getter()
{
  id v1 = objc_msgSend(v0, sel_layer);
  self;
  return swift_dynamicCastObjCClassUnconditional();
}

uint64_t GradientView.gradientDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_5_30();
  uint64_t v2 = OUTLINED_FUNCTION_4_45();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(unsigned char *)(a1 + 72) = v11;
  return sub_1B5F584B0(v2);
}

uint64_t sub_1B5F584B0(uint64_t result)
{
  if (result)
  {
    sub_1B61B1F70();
    return sub_1B61B1F70();
  }
  return result;
}

uint64_t sub_1B5F584F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC5TeaUI12GradientView_gradientDescriptor;
  swift_beginAccess();
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  uint64_t v9 = *(void *)(v3 + 40);
  uint64_t v10 = *(void *)(v3 + 48);
  uint64_t v11 = *(void *)(v3 + 56);
  uint64_t v12 = *(void *)(v3 + 64);
  char v13 = *(unsigned char *)(v3 + 72);
  *(void *)a2 = *(void *)v3;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v8;
  *(void *)(a2 + 40) = v9;
  *(void *)(a2 + 48) = v10;
  *(void *)(a2 + 56) = v11;
  *(void *)(a2 + 64) = v12;
  *(unsigned char *)(a2 + 72) = v13;
  return sub_1B5F584B0(v4);
}

uint64_t sub_1B5F5857C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  char v9 = *(unsigned char *)(a1 + 72);
  *(void *)&long long v11 = *(void *)a1;
  *((void *)&v11 + 1) = v1;
  uint64_t v12 = v2;
  uint64_t v13 = v3;
  uint64_t v14 = v4;
  uint64_t v15 = v5;
  uint64_t v16 = v6;
  uint64_t v17 = v7;
  uint64_t v18 = v8;
  char v19 = v9;
  sub_1B5F584B0(v11);
  return GradientView.gradientDescriptor.setter(&v11);
}

uint64_t GradientView.gradientDescriptor.setter(long long *a1)
{
  uint64_t v2 = *((void *)a1 + 2);
  long long v27 = *(long long *)((char *)a1 + 24);
  long long v28 = *a1;
  uint64_t v3 = *((void *)a1 + 5);
  long long v26 = a1[3];
  uint64_t v4 = *((void *)a1 + 8);
  char v5 = *((unsigned char *)a1 + 72);
  uint64_t v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC5TeaUI12GradientView_gradientDescriptor);
  swift_beginAccess();
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  uint64_t v9 = v6[2];
  uint64_t v10 = v6[3];
  uint64_t v11 = v6[4];
  uint64_t v12 = v6[5];
  uint64_t v13 = v6[8];
  char v14 = *((unsigned char *)v6 + 72);
  *(_OWORD *)uint64_t v6 = v28;
  long long v6[2] = v2;
  *(_OWORD *)(v6 + 3) = v27;
  v6[5] = v3;
  *((_OWORD *)v6 + 3) = v26;
  v6[8] = v4;
  *((unsigned char *)v6 + 72) = v5;
  char v25 = v14;
  uint64_t v15 = v8;
  uint64_t v16 = v7;
  OUTLINED_FUNCTION_1_68();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  sub_1B5F584B0(v21);
  OUTLINED_FUNCTION_1_68();
  sub_1B5F58758(v22);
  v29[0] = v15;
  v29[1] = v16;
  void v29[2] = v9;
  v29[3] = v10;
  unsigned char v29[4] = v11;
  v29[5] = v12;
  v29[6] = v18;
  v29[7] = v20;
  v29[8] = v13;
  char v30 = v25;
  sub_1B5F58798((uint64_t)v29);
  OUTLINED_FUNCTION_1_68();
  return sub_1B5F58758(v23);
}

uint64_t sub_1B5F58758(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1B5F58798(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v39 = *(void *)(a1 + 8);
  uint64_t v40 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  char v9 = *(unsigned char *)(a1 + 72);
  uint64_t v10 = v1 + OBJC_IVAR____TtC5TeaUI12GradientView_gradientDescriptor;
  id result = (id)swift_beginAccess();
  uint64_t v12 = v2;
  uint64_t v14 = *(void *)v10;
  uint64_t v13 = *(void *)(v10 + 8);
  uint64_t v15 = *(void *)(v10 + 16);
  uint64_t v16 = *(void *)(v10 + 24);
  uint64_t v18 = *(void *)(v10 + 32);
  uint64_t v17 = *(void *)(v10 + 40);
  uint64_t v20 = *(void *)(v10 + 48);
  uint64_t v19 = *(void *)(v10 + 56);
  uint64_t v21 = *(void *)(v10 + 64);
  char v22 = *(unsigned char *)(v10 + 72);
  uint64_t v38 = v8;
  char v37 = v9;
  if (v12)
  {
    uint64_t v46 = v12;
    uint64_t v47 = v39;
    uint64_t v48 = v40;
    uint64_t v49 = v3;
    uint64_t v50 = v5;
    uint64_t v51 = v4;
    uint64_t v52 = v6;
    uint64_t v53 = v7;
    uint64_t v54 = v8;
    char v55 = v9;
    if (v14)
    {
      v41[0] = v14;
      v41[1] = v13;
      v41[2] = v15;
      unsigned char v41[3] = v16;
      v41[4] = v18;
      v41[5] = v17;
      char v42 = v20 & 1;
      uint64_t v43 = v19;
      uint64_t v44 = v21;
      char v45 = v22 & 1;
      uint64_t v23 = v12;
      sub_1B5F584B0(v12);
      sub_1B61B1F70();
      sub_1B61B1F70();
      BOOL v24 = static GradientDescriptor.== infix(_:_:)((uint64_t)&v46, (uint64_t)v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id result = (id)sub_1B5F58758(v23);
      if (v24) {
        return result;
      }
      return sub_1B5F58A24();
    }
    uint64_t v35 = v20;
    uint64_t v36 = v12;
    uint64_t v26 = v39;
    uint64_t v25 = v40;
    uint64_t v30 = v15;
    uint64_t v31 = v21;
    uint64_t v27 = v3;
    uint64_t v32 = v16;
    uint64_t v33 = v18;
    uint64_t v28 = v19;
    uint64_t v34 = v17;
    char v29 = v22;
    sub_1B5F584B0(v12);
    char v22 = v29;
    uint64_t v15 = v30;
    uint64_t v21 = v31;
    uint64_t v16 = v32;
    uint64_t v18 = v33;
    uint64_t v17 = v34;
    uint64_t v20 = v35;
    uint64_t v19 = v28;
    uint64_t v12 = v36;
LABEL_8:
    uint64_t v46 = v12;
    uint64_t v47 = v26;
    uint64_t v48 = v25;
    uint64_t v49 = v27;
    uint64_t v50 = v5;
    uint64_t v51 = v4;
    uint64_t v52 = v6;
    uint64_t v53 = v7;
    uint64_t v54 = v38;
    char v55 = v37;
    uint64_t v56 = v14;
    uint64_t v57 = v13;
    uint64_t v58 = v15;
    uint64_t v59 = v16;
    uint64_t v60 = v18;
    uint64_t v61 = v17;
    uint64_t v62 = v20;
    uint64_t v63 = v19;
    uint64_t v64 = v21;
    char v65 = v22;
    sub_1B5F584B0(v14);
    sub_1B5F5A008(&v46);
    return sub_1B5F58A24();
  }
  uint64_t v26 = v39;
  uint64_t v25 = v40;
  uint64_t v27 = v3;
  if (v14) {
    goto LABEL_8;
  }
  return result;
}

id sub_1B5F58A24()
{
  sub_1B5F59B58((uint64_t)&v45);
  uint64_t v2 = v45;
  uint64_t v1 = v46;
  double v3 = v48;
  double v44 = v47;
  double v5 = v49;
  double v4 = v50;
  uint64_t v6 = v52;
  char v40 = v51;
  uint64_t v7 = v53;
  char v8 = v54;
  id v9 = objc_msgSend(v0, sel_layer);
  self;
  uint64_t v39 = v9;
  uint64_t v10 = (void *)OUTLINED_FUNCTION_0_65();
  double v38 = v3;
  uint64_t v42 = v7;
  uint64_t v43 = v1;
  if (v2)
  {
    char v37 = v10;
    sub_1B61B1F70();
    sub_1B61B1F70();
    id v11 = objc_msgSend(v0, sel_traitCollection);
    unint64_t v12 = sub_1B61B1F70();
    unint64_t v13 = sub_1B61A4874(v12, v11);

    swift_bridgeObjectRelease();
    LOBYTE(v35) = v8;
    uint64_t v34 = v7;
    sub_1B5F58758(v2);
    sub_1B5F96F20(v13);
    swift_bridgeObjectRelease();
    uint64_t v14 = (void *)sub_1B61B24D0();
    swift_bridgeObjectRelease();
    uint64_t v10 = v37;
  }
  else
  {
    uint64_t v14 = 0;
  }
  double v15 = v4;
  char v16 = v40;
  objc_msgSend(v10, sel_setColors_, v14, v34, v35);

  id v17 = objc_msgSend(v0, sel_layer);
  self;
  uint64_t v18 = (void *)OUTLINED_FUNCTION_0_65();
  uint64_t v19 = v18;
  uint64_t v20 = v0;
  if (v2)
  {
    id v41 = v0;
    uint64_t v45 = v2;
    uint64_t v46 = v43;
    double v47 = v44;
    double v48 = v38;
    double v49 = v5;
    double v50 = v15;
    LOBYTE(v51) = v16 & 1;
    uint64_t v52 = v6;
    uint64_t v53 = v42;
    char v54 = v8 & 1;
    if (GradientDescriptor.nsLocations.getter())
    {
      sub_1B5DFF760(0, &qword_1EB63E458);
      uint64_t v21 = (void *)sub_1B61B24D0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v21 = 0;
    }
    objc_msgSend(v19, sel_setLocations_, v21);

    LOBYTE(v36) = v8;
    sub_1B5F58758(v2);
    uint64_t v20 = v41;
    id v22 = objc_msgSend(v41, sel_layer, v42, v36);
    self;
    uint64_t v23 = (void *)OUTLINED_FUNCTION_0_65();
    if (v16)
    {
      double v25 = 0.5;
      if (*(void *)&v5 | *(void *)&v38 | *(void *)&v44 | *(void *)&v15)
      {
        uint64_t v26 = *(void *)&v5 | *(void *)&v38 | *(void *)&v15;
        if (*(void *)&v44 != 1 || v26)
        {
          if (*(void *)&v44 != 2 || v26)
          {
            if (*(void *)&v44 != 3 || (double v24 = 0.0, v26))
            {
              double v24 = 1.0;
              if (*(void *)&v44 != 4 || v26)
              {
                double v25 = 0.0;
                if (*(void *)&v44 != 5 || v26)
                {
                  if (*(void *)&v44 != 6 || v26)
                  {
                    BOOL v27 = !v26 && *(void *)&v44 == 7;
                    double v25 = 1.0;
                    double v24 = 0.0;
                    if (!v27) {
                      double v24 = 1.0;
                    }
                  }
                }
                else
                {
                  double v24 = 0.0;
                }
              }
            }
          }
          else
          {
            double v24 = 0.5;
            double v25 = 1.0;
          }
        }
        else
        {
          double v24 = 0.5;
          double v25 = 0.0;
        }
      }
      else
      {
        double v24 = 0.5;
      }
    }
    else
    {
      double v24 = v44;
      double v25 = v38;
    }
    objc_msgSend(v23, sel_setStartPoint_, v24, v25);

    id v17 = objc_msgSend(v41, sel_layer);
    self;
    uint64_t v28 = (void *)OUTLINED_FUNCTION_0_65();
    if (v16)
    {
      double v30 = 1.0;
      double v29 = 0.5;
      if (*(void *)&v5 | *(void *)&v38 | *(void *)&v44 | *(void *)&v15)
      {
        uint64_t v31 = *(void *)&v5 | *(void *)&v38 | *(void *)&v15;
        if (*(void *)&v44 != 1 || v31)
        {
          if (*(void *)&v44 != 2 || (double v30 = 0.0, v31))
          {
            double v30 = 0.5;
            if (*(void *)&v44 != 3 || (double v29 = 1.0, v31))
            {
              double v29 = 0.0;
              if (*(void *)&v44 != 4 || v31)
              {
                double v30 = 1.0;
                if (*(void *)&v44 != 5 || v31)
                {
                  if (*(void *)&v44 != 6 || v31)
                  {
                    if (v31) {
                      BOOL v32 = 0;
                    }
                    else {
                      BOOL v32 = *(void *)&v44 == 7;
                    }
                    double v30 = 0.0;
                    double v29 = 1.0;
                    if (!v32) {
                      double v29 = 0.0;
                    }
                  }
                }
                else
                {
                  double v29 = 1.0;
                }
              }
            }
          }
        }
      }
    }
    else
    {
      double v29 = v5;
      double v30 = v15;
    }
    objc_msgSend(v28, sel_setEndPoint_, v29, v30);
  }
  else
  {
    objc_msgSend(v18, sel_setLocations_, 0);
  }

  return objc_msgSend(v20, sel_setNeedsDisplay);
}

void (*GradientView.gradientDescriptor.modify(void *a1))(void **a1)
{
  double v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[13] = v1;
  OUTLINED_FUNCTION_5_30();
  uint64_t v4 = OUTLINED_FUNCTION_4_45();
  void *v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  v3[3] = v7;
  v3[4] = v8;
  v3[5] = v9;
  v3[6] = v10;
  v3[7] = v11;
  v3[8] = v12;
  *((unsigned char *)v3 + 72) = v13;
  sub_1B5F584B0(v4);
  return sub_1B5F58FBC;
}

void sub_1B5F58FBC(void **a1)
{
  uint64_t v1 = *a1;
  OUTLINED_FUNCTION_6_39();
  if (v2)
  {
    OUTLINED_FUNCTION_3_53();
    sub_1B5F584B0(v3);
    GradientView.gradientDescriptor.setter(v5);
    uint64_t v4 = OUTLINED_FUNCTION_6_39();
    sub_1B5F58758(v4);
  }
  else
  {
    OUTLINED_FUNCTION_3_53();
    GradientView.gradientDescriptor.setter(v5);
  }
  free(v1);
}

uint64_t GradientView.dynamicGradientDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5TeaUI12GradientView_dynamicGradientDescriptor;
  OUTLINED_FUNCTION_5_30();
  sub_1B5F590C0(v3, (uint64_t)v5);
  sub_1B5F590C0((uint64_t)v5, a1);
  return sub_1B5F593B8((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B5F591A0);
}

uint64_t sub_1B5F590C0(uint64_t a1, uint64_t a2)
{
  sub_1B5F59994(0, &qword_1EB64A348, (uint64_t (*)(uint64_t))sub_1B5F59154, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B5F59154()
{
  if (!qword_1EB64A340)
  {
    unint64_t v0 = type metadata accessor for DynamicValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB64A340);
    }
  }
}

uint64_t sub_1B5F591A0(uint64_t result)
{
  if (result)
  {
    sub_1B61B1F70();
    sub_1B61B1F70();
    sub_1B61B1F70();
    return sub_1B61B1F70();
  }
  return result;
}

uint64_t sub_1B5F59200@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC5TeaUI12GradientView_dynamicGradientDescriptor;
  swift_beginAccess();
  sub_1B5F590C0(v3, (uint64_t)v5);
  sub_1B5F590C0((uint64_t)v5, a2);
  return sub_1B5F593B8((uint64_t)v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B5F591A0);
}

uint64_t sub_1B5F59280(uint64_t a1)
{
  sub_1B5F590C0(a1, (uint64_t)v3);
  sub_1B5F590C0((uint64_t)v3, (uint64_t)v2);
  sub_1B5F593B8((uint64_t)v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B5F591A0);
  return GradientView.dynamicGradientDescriptor.setter((uint64_t)v2);
}

uint64_t GradientView.dynamicGradientDescriptor.setter(uint64_t a1)
{
  sub_1B5F590C0(a1, (uint64_t)v5);
  uint64_t v2 = v1 + OBJC_IVAR____TtC5TeaUI12GradientView_dynamicGradientDescriptor;
  swift_beginAccess();
  sub_1B5F590C0(v2, (uint64_t)v6);
  sub_1B5F590C0(v2, (uint64_t)v7);
  sub_1B5F590C0((uint64_t)v5, v2);
  sub_1B5F593B8((uint64_t)v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B5F591A0);
  sub_1B5F593B8((uint64_t)v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B5F5942C);
  sub_1B5F590C0((uint64_t)v6, (uint64_t)v4);
  sub_1B5F59488((uint64_t)v4);
  return sub_1B5F593B8((uint64_t)v6, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B5F5942C);
}

uint64_t sub_1B5F593B8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 152);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    v4);
  return a1;
}

uint64_t sub_1B5F5942C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1B5F59488(uint64_t a1)
{
  sub_1B5F590C0(a1, (uint64_t)v11);
  uint64_t v2 = v1 + OBJC_IVAR____TtC5TeaUI12GradientView_dynamicGradientDescriptor;
  swift_beginAccess();
  sub_1B5F590C0(v2, (uint64_t)v12);
  sub_1B5F590C0((uint64_t)v11, (uint64_t)v13);
  if (sub_1B5E82AE8(v13) != 1)
  {
    sub_1B5F590C0((uint64_t)v12, (uint64_t)v7);
    if (sub_1B5E82AE8(v7) != 1)
    {
      sub_1B5F590C0((uint64_t)v12, (uint64_t)__src);
      memcpy(__dst, __src, 0x99uLL);
      sub_1B5F590C0((uint64_t)v11, (uint64_t)v6);
      memcpy(v10, v6, 0x99uLL);
      sub_1B5F593B8((uint64_t)v11, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B5F591A0);
      sub_1B5F593B8((uint64_t)v12, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B5F591A0);
      BOOL v4 = sub_1B5F59F88(v10, __dst);
      sub_1B5F593B8((uint64_t)v12, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B5F5942C);
      id result = (id)sub_1B5F593B8((uint64_t)v11, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B5F5942C);
      if (v4) {
        return result;
      }
      return sub_1B5F58A24();
    }
LABEL_5:
    sub_1B5F590C0((uint64_t)v11, (uint64_t)__dst);
    sub_1B5F590C0((uint64_t)v12, (uint64_t)&v9);
    sub_1B5F593B8((uint64_t)v11, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B5F591A0);
    sub_1B5F593B8((uint64_t)v12, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B5F591A0);
    sub_1B5F59E70(__dst);
    return sub_1B5F58A24();
  }
  sub_1B5F590C0((uint64_t)v12, (uint64_t)__dst);
  id result = (id)sub_1B5E82AE8(__dst);
  if (result != 1) {
    goto LABEL_5;
  }
  return result;
}

void (*GradientView.dynamicGradientDescriptor.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x340uLL);
  *a1 = v3;
  v3[103] = v1;
  uint64_t v4 = v1 + OBJC_IVAR____TtC5TeaUI12GradientView_dynamicGradientDescriptor;
  OUTLINED_FUNCTION_5_30();
  sub_1B5F590C0(v4, (uint64_t)v3);
  sub_1B5F590C0((uint64_t)v3, (uint64_t)(v3 + 20));
  sub_1B5F593B8((uint64_t)v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B5F591A0);
  return sub_1B5F596E0;
}

void sub_1B5F596E0(void **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (uint64_t)*a1 + 160;
  uint64_t v4 = (uint64_t)*a1 + 320;
  uint64_t v5 = (uint64_t)*a1 + 480;
  if (a2)
  {
    sub_1B5F590C0((uint64_t)*a1 + 160, v5);
    sub_1B5F590C0(v5, (uint64_t)v2 + 640);
    sub_1B5F593B8(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B5F591A0);
    GradientView.dynamicGradientDescriptor.setter((uint64_t)v2 + 640);
    sub_1B5F590C0(v3, v4);
    sub_1B5F593B8(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B5F5942C);
  }
  else
  {
    sub_1B5F590C0((uint64_t)*a1 + 160, v5);
    sub_1B5F590C0(v5, v4);
    GradientView.dynamicGradientDescriptor.setter(v4);
  }
  free(v2);
}

id GradientView.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_38();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_35_0();
  return objc_msgSend(v2, v3, v4);
}

id GradientView.init(frame:)()
{
  OUTLINED_FUNCTION_38();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = (_OWORD *)(v0 + OBJC_IVAR____TtC5TeaUI12GradientView_gradientDescriptor);
  _OWORD *v2 = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  v2[3] = 0u;
  *(_OWORD *)((char *)v2 + 57) = 0u;
  uint64_t v3 = v0 + OBJC_IVAR____TtC5TeaUI12GradientView_dynamicGradientDescriptor;
  sub_1B5F5998C(v13);
  sub_1B5F590C0((uint64_t)v13, v3);
  double v4 = OUTLINED_FUNCTION_35_0();
  id v7 = objc_msgSendSuper2(v5, v6, v4, v0, ObjectType);
  sub_1B5F59994(0, &qword_1EB64A408, (uint64_t (*)(uint64_t))sub_1B5EC3808, MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B61BE690;
  uint64_t v9 = sub_1B61B1110();
  uint64_t v10 = MEMORY[0x1E4FB0F40];
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v10;
  *(void *)(swift_allocObject() + 16) = ObjectType;
  id v11 = v7;
  sub_1B61B2DD0();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  return v11;
}

void sub_1B5F5998C(void *a1)
{
}

void sub_1B5F59994(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1B5F599F8()
{
  return swift_deallocObject();
}

id sub_1B5F59A08()
{
  return sub_1B5F58A24();
}

id GradientView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void GradientView.init(coder:)()
{
  id v1 = &v0[OBJC_IVAR____TtC5TeaUI12GradientView_gradientDescriptor];
  *(_OWORD *)id v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_OWORD *)v1 + 2) = 0u;
  *((_OWORD *)v1 + 3) = 0u;
  *(_OWORD *)(v1 + 57) = 0u;
  uint64_t v2 = (uint64_t)&v0[OBJC_IVAR____TtC5TeaUI12GradientView_dynamicGradientDescriptor];
  sub_1B5F5998C(v3);
  sub_1B5F590C0((uint64_t)v3, v2);

  sub_1B61B34D0();
  __break(1u);
}

uint64_t sub_1B5F59B58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t)&v1[OBJC_IVAR____TtC5TeaUI12GradientView_dynamicGradientDescriptor];
  swift_beginAccess();
  sub_1B5F590C0(v3, (uint64_t)v30);
  sub_1B5F590C0((uint64_t)v30, (uint64_t)v31);
  if (sub_1B5E82AE8(v31) == 1)
  {
    double v4 = &v1[OBJC_IVAR____TtC5TeaUI12GradientView_gradientDescriptor];
    swift_beginAccess();
    uint64_t v5 = *(void *)v4;
    uint64_t v6 = *((void *)v4 + 1);
    uint64_t v7 = *((void *)v4 + 2);
    uint64_t v8 = *((void *)v4 + 3);
    uint64_t v9 = *((void *)v4 + 4);
    uint64_t v10 = *((void *)v4 + 5);
    uint64_t v11 = *((void *)v4 + 6);
    uint64_t v12 = *((void *)v4 + 7);
    uint64_t v13 = *((void *)v4 + 8);
    char v14 = v4[72];
    *(void *)a1 = *(void *)v4;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = v11;
    *(void *)(a1 + 56) = v12;
    *(void *)(a1 + 64) = v13;
    *(unsigned char *)(a1 + 72) = v14;
    return sub_1B5F584B0(v5);
  }
  else
  {
    sub_1B5F590C0((uint64_t)v30, (uint64_t)v29);
    sub_1B5F59E20((uint64_t)v29);
    id v16 = objc_msgSend(v1, sel_traitCollection);
    id v17 = objc_msgSend(v16, sel_userInterfaceStyle);

    if (v17 == (id)2)
    {
      uint64_t v18 = v35[1];
      uint64_t v19 = v35[2];
      uint64_t v20 = v35[4];
      uint64_t v28 = v35[3];
      uint64_t v21 = v35[5];
      uint64_t v22 = v35[6];
      unsigned int v23 = v36;
      double v24 = &v39;
      uint64_t v26 = v37;
      uint64_t v25 = v38;
    }
    else
    {
      uint64_t v18 = v31[0];
      uint64_t v19 = v31[1];
      uint64_t v20 = v31[3];
      uint64_t v28 = v31[2];
      uint64_t v21 = v31[4];
      uint64_t v22 = v31[5];
      unsigned int v23 = v32;
      double v24 = v35;
      uint64_t v26 = v33;
      uint64_t v25 = v34;
    }
    char v27 = *(unsigned char *)v24;
    sub_1B61B1F70();
    sub_1B61B1F70();
    uint64_t result = sub_1B5F593B8((uint64_t)v30, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1B5F5942C);
    *(void *)a1 = v18;
    *(void *)(a1 + 8) = v19;
    *(void *)(a1 + 16) = v28;
    *(void *)(a1 + 24) = v20;
    *(void *)(a1 + 32) = v21;
    *(void *)(a1 + 40) = v22;
    *(void *)(a1 + 48) = v23;
    *(void *)(a1 + 56) = v26;
    *(void *)(a1 + 64) = v25;
    *(unsigned char *)(a1 + 72) = v27;
  }
  return result;
}

id GradientView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for GradientView()
{
  return self;
}

uint64_t sub_1B5F59E20(uint64_t a1)
{
  return a1;
}

uint64_t *sub_1B5F59E70(uint64_t *a1)
{
  uint64_t v3 = a1[20];
  sub_1B5F5942C(*a1);
  sub_1B5F5942C(v3);
  return a1;
}

BOOL sub_1B5F59F88(void *__src, const void *a2)
{
  memcpy(__dst, __src, 0x99uLL);
  memcpy(v5, a2, 0x99uLL);
  return static GradientDescriptor.== infix(_:_:)((uint64_t)__dst, (uint64_t)v5)
      && static GradientDescriptor.== infix(_:_:)((uint64_t)&__dst[80], (uint64_t)&v5[80]);
}

uint64_t *sub_1B5F5A008(uint64_t *a1)
{
  uint64_t v3 = a1[10];
  sub_1B5F58758(*a1);
  sub_1B5F58758(v3);
  return a1;
}

uint64_t Menu.groups.getter()
{
  return sub_1B61B1F70();
}

TeaUI::Menu __swiftcall Menu.init(remove:_:)(Swift::OpaquePointer remove, Swift::OpaquePointer _)
{
  v2->_rawValue = remove._rawValue;
  v2[1]._rawValue = _._rawValue;
  result.groups = _;
  result.groupsToRemove = remove;
  return result;
}

uint64_t destroy for GradientDescriptor()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s5TeaUI30BlueprintInfiniteScrollManagerC16InflightRequestsVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_1B61B1F70();
  sub_1B61B1F70();
  return a1;
}

void *assignWithCopy for BlueprintInfiniteScrollManager.InflightRequests(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for BlueprintInfiniteScrollManager.InflightRequests(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Menu()
{
  return &type metadata for Menu;
}

uint64_t Navigator.navigate(to:)()
{
  OUTLINED_FUNCTION_9_28();
  OUTLINED_FUNCTION_1_69();
  uint64_t v1 = v0();
  return OUTLINED_FUNCTION_5_36(v1, v2, v3, v4, v5, v6, v7, v8, v10);
}

uint64_t Navigator.navigate(to:metadata:)()
{
  OUTLINED_FUNCTION_1_69();
  return v0();
}

uint64_t Navigator.navigate(to:context:)()
{
  OUTLINED_FUNCTION_4_46();
  OUTLINED_FUNCTION_1_69();
  uint64_t v1 = v0();
  return OUTLINED_FUNCTION_5_36(v1, v2, v3, v4, v5, v6, v7, v8, v10);
}

uint64_t Navigator.navigate(to:metadata:context:)()
{
  OUTLINED_FUNCTION_1_69();
  return v0();
}

uint64_t Navigator.navigate(to:setup:)()
{
  OUTLINED_FUNCTION_3_54();
  OUTLINED_FUNCTION_11_22();
  uint64_t v1 = v0();
  return OUTLINED_FUNCTION_5_36(v1, v2, v3, v4, v5, v6, v7, v8, v10);
}

uint64_t Navigator.navigate(to:metadata:setup:)()
{
  OUTLINED_FUNCTION_8_29();
  OUTLINED_FUNCTION_11_22();
  return v0();
}

uint64_t Navigator.navigateWithoutAnimation(to:)()
{
  OUTLINED_FUNCTION_7_36();
  uint64_t v8 = OUTLINED_FUNCTION_10_31(v0, v1, v2, v3, v4, v5, v6, v7);
  return OUTLINED_FUNCTION_5_36(v8, v9, v10, v11, v12, v13, v14, v15, v17);
}

uint64_t Navigator.navigateWithoutAnimation(to:metadata:context:setup:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v48 = a8;
  uint64_t v49 = a3;
  uint64_t v51 = a5;
  uint64_t v52 = a6;
  uint64_t v50 = a4;
  uint64_t v46 = a1;
  uint64_t v47 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v44 = AssociatedTypeWitness;
  OUTLINED_FUNCTION_0_13();
  uint64_t v13 = v12;
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v41 - v17;
  uint64_t v45 = (char *)&v41 - v17;
  uint64_t v42 = a7;
  OUTLINED_FUNCTION_0_13();
  uint64_t v20 = v19;
  uint64_t v22 = *(void *)(v21 + 64);
  MEMORY[0x1F4188790](v23);
  uint64_t v43 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v56 = 0;
  id v53 = self;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))((char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), v9, a7);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v18, v46, AssociatedTypeWitness);
  sub_1B5E5F644(v47, (uint64_t)v55);
  unint64_t v24 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  unint64_t v25 = (v22 + v24 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v26 = (v15 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v26 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = swift_allocObject();
  uint64_t v30 = v48;
  *(void *)(v29 + 16) = v42;
  *(void *)(v29 + 24) = v30;
  (*(void (**)(unint64_t, char *))(v20 + 32))(v29 + v24, v43);
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v29 + v25, v45, v44);
  sub_1B5E5F708((uint64_t)v55, v29 + v26);
  uint64_t v31 = (uint64_t *)(v29 + v27);
  uint64_t v33 = v49;
  uint64_t v32 = v50;
  *uint64_t v31 = v49;
  v31[1] = v32;
  uint64_t v34 = (uint64_t *)(v29 + v28);
  uint64_t v36 = v51;
  uint64_t v35 = v52;
  *uint64_t v34 = v51;
  v34[1] = v35;
  *(void *)(v29 + ((v28 + 23) & 0xFFFFFFFFFFFFFFF8)) = &v56;
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = sub_1B5F5AA3C;
  *(void *)(v37 + 24) = v29;
  aBlock[4] = sub_1B5E4EC58;
  aBlock[5] = v37;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B5E7365C;
  aBlock[3] = &block_descriptor_32;
  uint64_t v38 = _Block_copy(aBlock);
  swift_retain();
  sub_1B5E4DC4C(v33);
  sub_1B5E4DC4C(v36);
  swift_release();
  objc_msgSend(v53, sel_performWithoutAnimation_, v38);
  _Block_release(v38);
  LOBYTE(v38) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v38)
  {
    __break(1u);
  }
  else
  {
    if (v56)
    {
      id v40 = v56;
      swift_willThrow();
    }
    return swift_release();
  }
  return result;
}

uint64_t Navigator.navigateWithoutAnimation(to:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return OUTLINED_FUNCTION_10_31(a1, a2, 0, 0, a5, a6, a3, a4);
}

uint64_t Navigator.navigateWithoutAnimation(to:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  memset(v15, 0, sizeof(v15));
  uint64_t v6 = OUTLINED_FUNCTION_10_31(a1, (uint64_t)v15, a2, a3, a5, a6, a4, a5);
  return OUTLINED_FUNCTION_5_36(v6, v7, v8, v9, v10, v11, v12, v13, *(uint64_t *)&v15[0]);
}

uint64_t Navigator.navigateWithoutAnimation(to:metadata:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return OUTLINED_FUNCTION_10_31(a1, a2, a3, a4, a5, a6, a5, a6);
}

uint64_t Navigator.navigateWithoutAnimation(to:setup:)()
{
  OUTLINED_FUNCTION_7_36();
  uint64_t v8 = Navigator.navigateWithoutAnimation(to:metadata:context:setup:)(v0, v1, v2, v3, v4, v5, v6, v7);
  return OUTLINED_FUNCTION_5_36(v8, v9, v10, v11, v12, v13, v14, v15, v17);
}

uint64_t Navigator.navigateWithoutAnimation(to:metadata:setup:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return Navigator.navigateWithoutAnimation(to:metadata:context:setup:)(a1, a2, 0, 0, a3, a4, a5, a6);
}

uint64_t sub_1B5F5A824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a10 + 24))(a2, a3, a4, a5, a6, a7, a9);
}

uint64_t sub_1B5F5A8C0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  OUTLINED_FUNCTION_0_13();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_13();
  uint64_t v9 = v8;
  unint64_t v10 = (v4 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v12 = (*(void *)(v11 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v12 + 39) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v0 + v10, AssociatedTypeWitness);
  if (*(void *)(v0 + v12 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + v12);
  }
  if (*(void *)(v0 + v13)) {
    swift_release();
  }
  if (*(void *)(v0 + ((v13 + 23) & 0xFFFFFFFFFFFFFFF8))) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1B5F5AA3C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  OUTLINED_FUNCTION_0_13();
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v8 = (v4 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 39) & 0xFFFFFFFFFFFFFFF8;
  return sub_1B5F5A824(v0 + v4, v0 + v8, v0 + v9, *(void *)(v0 + v10), *(void *)(v0 + v10 + 8), *(void *)(v0 + ((v10 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v0 + ((((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), v1, v2);
}

uint64_t sub_1B5F5AB54()
{
  return swift_deallocObject();
}

uint64_t Navigator.preview(for:)()
{
  OUTLINED_FUNCTION_9_28();
  OUTLINED_FUNCTION_2_59();
  uint64_t v2 = v1();
  OUTLINED_FUNCTION_6_40(v2, v3, v4, v5, v6, v7, v8, v9, v11);
  return v0;
}

uint64_t Navigator.preview(for:metadata:)()
{
  OUTLINED_FUNCTION_2_59();
  return v0();
}

uint64_t Navigator.preview(for:context:)()
{
  OUTLINED_FUNCTION_4_46();
  OUTLINED_FUNCTION_2_59();
  uint64_t v2 = v1();
  OUTLINED_FUNCTION_6_40(v2, v3, v4, v5, v6, v7, v8, v9, v11);
  return v0;
}

uint64_t Navigator.preview(for:metadata:context:)()
{
  OUTLINED_FUNCTION_2_59();
  return v0();
}

uint64_t Navigator.preview(for:setup:)()
{
  OUTLINED_FUNCTION_3_54();
  OUTLINED_FUNCTION_12_28();
  uint64_t v2 = v1();
  OUTLINED_FUNCTION_6_40(v2, v3, v4, v5, v6, v7, v8, v9, v11);
  return v0;
}

uint64_t Navigator.preview(for:metadata:setup:)()
{
  OUTLINED_FUNCTION_8_29();
  OUTLINED_FUNCTION_12_28();
  return v0();
}

uint64_t dispatch thunk of Navigator.navigate(to:metadata:context:setup:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 24))();
}

uint64_t dispatch thunk of Navigator.navigate(to:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of Navigator.preview(for:metadata:context:setup:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 40))();
}

uint64_t sub_1B5F5AD34()
{
  OUTLINED_FUNCTION_0_66();
  swift_getObjectType();
  return OUTLINED_FUNCTION_0_7();
}

uint64_t dispatch thunk of CommandHandlerType.handle(commandCenter:command:with:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t dispatch thunk of CommandHandlerType.canHandle(commandCenter:command:with:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 24))();
}

uint64_t sub_1B5F5ADD4()
{
  OUTLINED_FUNCTION_0_66();
  swift_getObjectType();
  return OUTLINED_FUNCTION_0_7();
}

uint64_t sub_1B5F5AE34()
{
  return OUTLINED_FUNCTION_0_7() & 1;
}

uint64_t sub_1B5F5AE64()
{
  OUTLINED_FUNCTION_0_66();
  memcpy(__dst, v0, sizeof(__dst));
  return OUTLINED_FUNCTION_0_7() & 1;
}

uint64_t dispatch thunk of StackNavigatingRouter.navigateStack(toward:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of StackNavigatingRouter.preview(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1B5F5AEF8@<X0>(uint64_t *a1@<X8>)
{
  sub_1B5F5B308();
  uint64_t v2 = MEMORY[0x1BA9B1EC0](v4);
  uint64_t result = sub_1B5E437C4((uint64_t)v4);
  *a1 = v2;
  return result;
}

void TraitEnvironmentBackgroundSelectionStyle.traitEnvironment.getter()
{
}

uint64_t TraitEnvironmentBackgroundSelectionStyle.traitEnvironment.setter()
{
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*TraitEnvironmentBackgroundSelectionStyle.traitEnvironment.modify(void *a1))()
{
  a1[1] = v1;
  *a1 = MEMORY[0x1BA9B1EC0](v1);
  return sub_1B5F5AFD4;
}

uint64_t sub_1B5F5AFD4()
{
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t TraitEnvironmentBackgroundSelectionStyle.init(traitEnvironment:)()
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t TraitEnvironmentBackgroundSelectionStyle.setup(cell:selectedBackgroundView:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(a2 + 16);
  id v7 = a3;
  return v6(a3, ObjectType, a2);
}

Swift::Void __swiftcall TraitEnvironmentBackgroundSelectionStyle.select(_:isHighlighted:hasBeenTraversed:view:selectedBackgroundView:)(Swift::Bool _, Swift::Bool isHighlighted, Swift::Bool hasBeenTraversed, UIView *view, UIView *selectedBackgroundView)
{
  if (isHighlighted) {
    goto LABEL_2;
  }
  if (!_) {
    goto LABEL_13;
  }
  id v7 = (void *)MEMORY[0x1BA9B1EC0]();
  if (!v7) {
    goto LABEL_13;
  }
  id v8 = objc_msgSend(v7, sel_traitCollection);
  swift_unknownObjectRelease();
  id v9 = objc_msgSend(v8, sel_horizontalSizeClass);
  id v10 = objc_msgSend(v8, sel_verticalSizeClass);

  BOOL v11 = v9 == (id)1 || v10 == (id)1;
  if (!v11 && (v9 != (id)2 ? (BOOL v12 = v10 == (id)2) : (BOOL v12 = 1), v12)) {
LABEL_2:
  }
    uint64_t v6 = 0;
  else {
LABEL_13:
  }
    uint64_t v6 = 1;
  -[UIView setHidden:](selectedBackgroundView, sel_setHidden_, v6, view);
}

Swift::Bool __swiftcall TraitEnvironmentBackgroundSelectionStyle.shouldRenderSelection(isSelected:isHighlighted:)(Swift::Bool isSelected, Swift::Bool isHighlighted)
{
  if (!isHighlighted && isSelected)
  {
    uint64_t v2 = (void *)MEMORY[0x1BA9B1EC0]();
    if (!v2) {
      return 0;
    }
    id v3 = objc_msgSend(v2, sel_traitCollection);
    swift_unknownObjectRelease();
    id v4 = objc_msgSend(v3, sel_horizontalSizeClass);
    id v5 = objc_msgSend(v3, sel_verticalSizeClass);

    if (v4 == (id)1 || v5 == (id)1) {
      return 0;
    }
    else {
      return v4 == (id)2 || v5 == (id)2;
    }
  }
  return isHighlighted;
}

Swift::Void __swiftcall TraitEnvironmentBackgroundSelectionStyle.didSetHighlighted(_:view:selectedBackgroundView:)(Swift::Bool _, UIView *view, UIView *selectedBackgroundView)
{
  BOOL v4 = !_ && [(UIView *)selectedBackgroundView isHidden];
  [(UIView *)selectedBackgroundView setHidden:v4];
}

uint64_t sub_1B5F5B294(uint64_t a1, uint64_t a2, void *a3)
{
  return TraitEnvironmentBackgroundSelectionStyle.setup(cell:selectedBackgroundView:)(a1, a2, a3);
}

void sub_1B5F5B2AC(Swift::Bool a1, Swift::Bool a2, uint64_t a3, UIView *a4, UIView *a5)
{
}

void sub_1B5F5B2B4(Swift::Bool a1, UIView *a2, UIView *a3)
{
}

uint64_t sub_1B5F5B2D4()
{
  return swift_unknownObjectWeakAssign();
}

ValueMetadata *type metadata accessor for TraitEnvironmentBackgroundSelectionStyle()
{
  return &type metadata for TraitEnvironmentBackgroundSelectionStyle;
}

uint64_t sub_1B5F5B308()
{
  return swift_unknownObjectWeakCopyInit();
}

void GradientSectionDecorationItem.Size.Value.init(floatLiteral:)(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)a1 = a2;
  *(unsigned char *)(a1 + 8) = 0;
}

uint64_t static GradientSectionDecorationItem.Size.Value.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(double *)a1 == *(double *)a2;
  }
  return result;
}

void sub_1B5F5B354(double *a1@<X0>, uint64_t a2@<X8>)
{
}

void GradientSectionDecorationItem.Size.init(width:height:)(uint64_t a1@<X8>)
{
}

uint64_t static GradientSectionDecorationItem.Size.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  char v3 = *(unsigned char *)(a2 + 24);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)a1 != *(double *)a2) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 24))
  {
    if ((*(unsigned char *)(a2 + 24) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(a1 + 16) != *(double *)(a2 + 16)) {
      char v3 = 1;
    }
    if (v3) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1B5F5B3D4()
{
  uint64_t result = type metadata accessor for GradientSectionDecorationView();
  qword_1EB645CE8 = result;
  return result;
}

uint64_t static GradientSectionDecorationItem.viewClass.getter()
{
  if (qword_1EB648E30 != -1) {
    swift_once();
  }
  return qword_1EB645CE8;
}

uint64_t GradientSectionDecorationItem.gradientDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  char v3 = *(unsigned char *)(v1 + 48);
  char v4 = *(unsigned char *)(v1 + 72);
  *(void *)a1 = *(void *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(void *)(a1 + 40) = v2;
  *(unsigned char *)(a1 + 48) = v3;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(v1 + 56);
  *(unsigned char *)(a1 + 72) = v4;
  sub_1B61B1F70();
  return sub_1B61B1F70();
}

uint64_t GradientSectionDecorationItem.darkGradientDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 88);
  uint64_t v4 = *(void *)(v1 + 96);
  uint64_t v5 = *(void *)(v1 + 104);
  uint64_t v6 = *(void *)(v1 + 112);
  uint64_t v7 = *(void *)(v1 + 120);
  uint64_t v8 = *(void *)(v1 + 128);
  uint64_t v9 = *(void *)(v1 + 136);
  uint64_t v10 = *(void *)(v1 + 144);
  char v11 = *(unsigned char *)(v1 + 152);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(unsigned char *)(a1 + 72) = v11;
  return sub_1B5F584B0(v2);
}

void GradientSectionDecorationItem.gradientSize.getter(uint64_t a1@<X8>)
{
}

void GradientSectionDecorationItem.overscrollPinPosition.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 185);
}

void GradientSectionDecorationItem.ordering.getter(uint64_t a1@<X8>)
{
}

void GradientSectionDecorationItem.pinTrait.getter(uint64_t a1@<X8>)
{
}

void GradientSectionDecorationItem.init(gradientDescriptor:ordering:pinTrait:)(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v6 = *a2;
  uint64_t v7 = *a3;
  char v8 = *((unsigned char *)a3 + 8);
  char v5 = *(unsigned char *)(a1 + 48);
  char v10 = *(unsigned char *)(a1 + 72);
  char v9 = *((unsigned char *)a2 + 8);
  *(void *)a4 = *(void *)a1;
  *(_OWORD *)(a4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a4 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)(a4 + 40) = v4;
  *(unsigned char *)(a4 + 48) = v5;
  *(_OWORD *)(a4 + 56) = *(_OWORD *)(a1 + 56);
  *(unsigned char *)(a4 + 72) = v10;
  *(_OWORD *)(a4 + 137) = 0u;
  *(_OWORD *)(a4 + 112) = 0u;
  *(_OWORD *)(a4 + 128) = 0u;
  *(_OWORD *)(a4 + 80) = 0u;
  *(_OWORD *)(a4 + 96) = 0u;
  *(void *)(a4 + 160) = 0;
  *(unsigned char *)(a4 + 168) = 1;
  *(void *)(a4 + 176) = 0;
  *(unsigned char *)(a4 + 184) = 1;
  *(unsigned char *)(a4 + 185) = 3;
  *(void *)(a4 + 192) = v6;
  *(unsigned char *)(a4 + 200) = v9;
  *(void *)(a4 + 208) = v7;
  *(unsigned char *)(a4 + 216) = v8;
  OUTLINED_FUNCTION_2_60();
}

void GradientSectionDecorationItem.init(gradientDescriptor:gradientSize:ordering:pinTrait:)()
{
  OUTLINED_FUNCTION_4_47();
  uint64_t v1 = *v0;
  char v2 = *((unsigned char *)v0 + 8);
  uint64_t v4 = *v3;
  LOBYTE(v3) = *((unsigned char *)v3 + 8);
  *(void *)uint64_t v5 = v6;
  *(_OWORD *)(v5 + 8) = *(_OWORD *)(v7 + 8);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(v7 + 24);
  *(void *)(v5 + 40) = v8;
  *(unsigned char *)(v5 + 48) = v9;
  *(_OWORD *)(v5 + 56) = *(_OWORD *)(v7 + 56);
  *(unsigned char *)(v5 + 72) = v10;
  *(_OWORD *)(v5 + 137) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(void *)(v5 + 160) = v11;
  *(unsigned char *)(v5 + 168) = v12;
  *(void *)(v5 + 176) = v13;
  *(unsigned char *)(v5 + 184) = v14;
  *(unsigned char *)(v5 + 185) = 3;
  *(void *)(v5 + 192) = v1;
  *(unsigned char *)(v5 + 200) = v2;
  *(void *)(v5 + 208) = v4;
  *(unsigned char *)(v5 + 216) = (_BYTE)v3;
  OUTLINED_FUNCTION_2_60();
}

void GradientSectionDecorationItem.init(gradientDescriptor:darkGradientDescriptor:gradientSize:overscrollPinPosition:ordering:pinTrait:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a2 + 64);
  char v10 = *(unsigned char *)(a2 + 72);
  uint64_t v11 = *a3;
  uint64_t v12 = a3[2];
  char v13 = *a4;
  uint64_t v14 = *a5;
  uint64_t v15 = *a6;
  char v16 = *((unsigned char *)a6 + 8);
  char v8 = *(unsigned char *)(a1 + 48);
  char v22 = *(unsigned char *)(a1 + 72);
  char v21 = *((unsigned char *)a3 + 8);
  char v20 = *((unsigned char *)a3 + 24);
  char v19 = *((unsigned char *)a5 + 8);
  *(void *)a7 = *(void *)a1;
  *(_OWORD *)(a7 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a7 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)(a7 + 40) = v7;
  *(unsigned char *)(a7 + 48) = v8;
  *(_OWORD *)(a7 + 56) = *(_OWORD *)(a1 + 56);
  *(unsigned char *)(a7 + 72) = v22;
  long long v17 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a7 + 80) = *(_OWORD *)a2;
  *(_OWORD *)(a7 + 96) = v17;
  long long v18 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a7 + 112) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a7 + 128) = v18;
  *(void *)(a7 + 144) = v9;
  *(unsigned char *)(a7 + 152) = v10;
  *(void *)(a7 + 160) = v11;
  *(unsigned char *)(a7 + 168) = v21;
  *(void *)(a7 + 176) = v12;
  *(unsigned char *)(a7 + 184) = v20;
  *(unsigned char *)(a7 + 185) = v13;
  *(void *)(a7 + 192) = v14;
  *(unsigned char *)(a7 + 200) = v19;
  *(void *)(a7 + 208) = v15;
  *(unsigned char *)(a7 + 216) = v16;
  OUTLINED_FUNCTION_2_60();
}

void GradientSectionDecorationItem.init(gradientDescriptor:gradientSize:overscrollPinPosition:ordering:pinTrait:)()
{
  OUTLINED_FUNCTION_4_47();
  char v1 = *v0;
  uint64_t v3 = *v2;
  LOBYTE(v0) = *((unsigned char *)v2 + 8);
  uint64_t v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 8);
  *(void *)uint64_t v6 = v7;
  *(_OWORD *)(v6 + 8) = *(_OWORD *)(v8 + 8);
  *(_OWORD *)(v6 + 24) = *(_OWORD *)(v8 + 24);
  *(void *)(v6 + 40) = v9;
  *(unsigned char *)(v6 + 48) = v10;
  *(_OWORD *)(v6 + 56) = *(_OWORD *)(v8 + 56);
  *(unsigned char *)(v6 + 72) = v11;
  *(_OWORD *)(v6 + 137) = 0u;
  *(_OWORD *)(v6 + 112) = 0u;
  *(_OWORD *)(v6 + 128) = 0u;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_OWORD *)(v6 + 96) = 0u;
  *(void *)(v6 + 160) = v12;
  *(unsigned char *)(v6 + 168) = v13;
  *(void *)(v6 + 176) = v14;
  *(unsigned char *)(v6 + 184) = v15;
  *(unsigned char *)(v6 + 185) = v1;
  *(void *)(v6 + 192) = v3;
  *(unsigned char *)(v6 + 200) = (_BYTE)v0;
  *(void *)(v6 + 208) = v5;
  *(unsigned char *)(v6 + 216) = (_BYTE)v4;
  OUTLINED_FUNCTION_2_60();
}

BOOL static GradientSectionDecorationItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 40);
  char v3 = *(unsigned char *)(a1 + 48);
  char v4 = *(unsigned char *)(a1 + 72);
  uint64_t v48 = *(void *)(a1 + 96);
  uint64_t v45 = *(void *)(a1 + 88);
  uint64_t v46 = *(void *)(a1 + 104);
  uint64_t v51 = *(void *)(a1 + 120);
  uint64_t v52 = *(void *)(a1 + 112);
  uint64_t v53 = *(void *)(a1 + 128);
  uint64_t v54 = *(void *)(a1 + 80);
  uint64_t v47 = *(void *)(a1 + 136);
  uint64_t v49 = *(void *)(a1 + 144);
  char v50 = *(unsigned char *)(a1 + 152);
  double v5 = *(double *)(a1 + 160);
  char v41 = *(unsigned char *)(a1 + 168);
  double v6 = *(double *)(a1 + 176);
  int v39 = *(unsigned __int8 *)(a1 + 185);
  char v40 = *(unsigned char *)(a1 + 184);
  uint64_t v7 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  char v10 = *(unsigned char *)(a2 + 72);
  uint64_t v44 = *(void *)(a2 + 80);
  uint64_t v11 = *(void *)(a2 + 88);
  uint64_t v12 = *(void *)(a2 + 96);
  uint64_t v55 = *(void *)a1;
  uint64_t v58 = v2;
  uint64_t v13 = *(void *)(a2 + 112);
  uint64_t v42 = v11;
  uint64_t v43 = *(void *)(a2 + 104);
  LOBYTE(v59) = v3;
  long long v73 = *(_OWORD *)(a2 + 8);
  long long v74 = *(_OWORD *)(a2 + 24);
  long long v77 = *(_OWORD *)(a2 + 56);
  uint64_t v15 = *(void *)(a2 + 120);
  uint64_t v14 = *(void *)(a2 + 128);
  long long v16 = *(_OWORD *)(a1 + 8);
  long long v17 = *(_OWORD *)(a1 + 24);
  long long v18 = *(_OWORD *)(a1 + 56);
  char v61 = v4;
  uint64_t v20 = *(void *)(a2 + 136);
  uint64_t v19 = *(void *)(a2 + 144);
  uint64_t v72 = v7;
  uint64_t v75 = v8;
  char v21 = *(unsigned char *)(a2 + 152);
  long long v56 = v16;
  long long v57 = v17;
  double v22 = *(double *)(a2 + 160);
  char v76 = v9;
  int v23 = *(unsigned __int8 *)(a2 + 168);
  double v24 = *(double *)(a2 + 176);
  char v78 = v10;
  int v25 = *(unsigned __int8 *)(a2 + 184);
  int v26 = *(unsigned __int8 *)(a2 + 185);
  long long v60 = v18;
  if (!static GradientDescriptor.== infix(_:_:)((uint64_t)&v55, (uint64_t)&v72)) {
    return 0;
  }
  uint64_t v27 = v54;
  if (!v54)
  {
    uint64_t v29 = v14;
    uint64_t v30 = v20;
    uint64_t v31 = v13;
    uint64_t v32 = v15;
    uint64_t v33 = v19;
    char v34 = v21;
    if (!v44) {
      goto LABEL_7;
    }
LABEL_11:
    uint64_t v55 = v27;
    *(void *)&long long v56 = v45;
    *((void *)&v56 + 1) = v48;
    *(void *)&long long v57 = v46;
    *((void *)&v57 + 1) = v52;
    uint64_t v58 = v51;
    uint64_t v59 = v53;
    *(void *)&long long v60 = v47;
    *((void *)&v60 + 1) = v49;
    char v61 = v50;
    uint64_t v62 = v44;
    uint64_t v63 = v42;
    uint64_t v64 = v12;
    uint64_t v65 = v43;
    uint64_t v66 = v31;
    uint64_t v67 = v32;
    uint64_t v68 = v29;
    uint64_t v69 = v30;
    uint64_t v70 = v33;
    char v71 = v34;
    sub_1B5F584B0(v44);
    sub_1B5F5A008(&v55);
    return 0;
  }
  uint64_t v55 = v54;
  *(void *)&long long v56 = v45;
  *((void *)&v56 + 1) = v48;
  *(void *)&long long v57 = v46;
  *((void *)&v57 + 1) = v52;
  uint64_t v58 = v51;
  uint64_t v59 = v53;
  *(void *)&long long v60 = v47;
  *((void *)&v60 + 1) = v49;
  char v61 = v50;
  if (!v44)
  {
    sub_1B61B1F70();
    sub_1B61B1F70();
    char v34 = v21;
    uint64_t v33 = v19;
    uint64_t v31 = v13;
    uint64_t v32 = v15;
    uint64_t v29 = v14;
    uint64_t v30 = v20;
    uint64_t v27 = v54;
    goto LABEL_11;
  }
  uint64_t v72 = v44;
  *(void *)&long long v73 = v42;
  *((void *)&v73 + 1) = v12;
  *(void *)&long long v74 = v43;
  *((void *)&v74 + 1) = v13;
  uint64_t v75 = v15;
  char v76 = v14 & 1;
  *(void *)&long long v77 = v20;
  *((void *)&v77 + 1) = v19;
  char v78 = v21 & 1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  BOOL v28 = static GradientDescriptor.== infix(_:_:)((uint64_t)&v55, (uint64_t)&v72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B5F58758(v54);
  if (!v28) {
    return 0;
  }
LABEL_7:
  if (v41)
  {
    if (!v23) {
      return 0;
    }
  }
  else
  {
    char v36 = v23;
    if (v5 != v22) {
      char v36 = 1;
    }
    if (v36) {
      return 0;
    }
  }
  if (v40)
  {
    if (v25) {
      goto LABEL_22;
    }
    return 0;
  }
  char v37 = v25;
  if (v6 != v24) {
    char v37 = 1;
  }
  if (v37) {
    return 0;
  }
LABEL_22:
  if (v39 == 3) {
    return v26 == 3;
  }
  else {
    return v26 != 3 && v39 == v26;
  }
}

Swift::Void __swiftcall GradientSectionDecorationView.willMove(toSuperview:)(UIView_optional *toSuperview)
{
  v3.receiver = v1;
  v3.super_class = (Class)swift_getObjectType();
  [(UIView_optional *)&v3 willMoveToSuperview:toSuperview];
}

Swift::Void __swiftcall GradientSectionDecorationView.didMoveToSuperview()()
{
}

id GradientSectionDecorationView.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_38();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_35_0();
  return objc_msgSend(v2, v3, v4);
}

char *GradientSectionDecorationView.init(frame:)()
{
  OUTLINED_FUNCTION_38();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_gradientView;
  id v3 = objc_allocWithZone((Class)type metadata accessor for GradientView());
  double v4 = v0;
  *(void *)&v0[v2] = objc_msgSend(v3, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  double v5 = &v4[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_gradientSize];
  *(void *)double v5 = 0;
  v5[8] = 1;
  *((void *)v5 + 2) = 0;
  v5[24] = 1;
  v4[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_overscrollPinPosition] = 3;
  double v6 = &v4[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_offset];
  *(void *)double v6 = 0;
  *((void *)v6 + 1) = 0;

  double v7 = OUTLINED_FUNCTION_35_0();
  char v10 = (char *)objc_msgSendSuper2(v8, v9, v7, v4, ObjectType);
  uint64_t v11 = OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_gradientView;
  uint64_t v12 = *(void *)&v10[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_gradientView];
  uint64_t v13 = v10;
  objc_msgSend(v13, sel_addSubview_, v12);
  id v14 = *(id *)&v10[v11];
  v17.origin.CGFloat x = OUTLINED_FUNCTION_35_0();
  double Width = CGRectGetWidth(v17);
  v18.origin.CGFloat x = OUTLINED_FUNCTION_35_0();
  objc_msgSend(v14, sel_setFrame_, 0.0, 0.0, Width, CGRectGetHeight(v18));

  return v13;
}

id GradientSectionDecorationView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void GradientSectionDecorationView.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_gradientView;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GradientView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = &v0[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_gradientSize];
  *(void *)uint64_t v2 = 0;
  v2[8] = 1;
  *((void *)v2 + 2) = 0;
  v2[24] = 1;
  v0[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_overscrollPinPosition] = 3;
  id v3 = &v0[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_offset];
  void *v3 = 0;
  v3[1] = 0;

  sub_1B61B34D0();
  __break(1u);
}

Swift::Void __swiftcall GradientSectionDecorationView.layoutSubviews()()
{
  v20[0].receiver = v0;
  v20[0].super_class = (Class)swift_getObjectType();
  [(objc_super *)v20 layoutSubviews];
  uint64_t v1 = OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_gradientView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_gradientView], sel_transform);
  v20[1] = v21;
  long long v20[2] = v22;
  v20[3] = v23;
  objc_super v21 = (objc_super)0x3FF0000000000000uLL;
  v22.receiver = 0;
  v22.super_class = (Class)0x3FF0000000000000;
  objc_super v23 = (objc_super)0;
  if (sub_1B61B2BD0())
  {
    uint64_t v2 = (double *)&v0[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_offset];
    double v3 = *(double *)&v0[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_offset];
    double v4 = *(double *)&v0[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_offset + 8];
    double v5 = (double *)&v0[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_gradientSize];
    double Width = *(double *)&v0[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_gradientSize];
    int v7 = v0[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_gradientSize + 8];
    id v8 = *(id *)&v0[v1];
    objc_msgSend(v0, sel_bounds);
    if (v7 == 1) {
      double Width = CGRectGetWidth(*(CGRect *)&v9);
    }
    double v13 = *v2;
    double Height = v5[2];
    int v15 = *((unsigned __int8 *)v5 + 24);
    objc_msgSend(v0, sel_bounds);
    if (v15 == 1) {
      double Height = CGRectGetHeight(*(CGRect *)&v16);
    }
    objc_msgSend(v8, sel_setFrame_, v3, v4, Width - v13, Height - v2[1]);
  }
}

Swift::Void __swiftcall GradientSectionDecorationView.apply(_:)(UICollectionViewLayoutAttributes *a1)
{
  uint64_t v2 = v1;
  v43.receiver = v2;
  v43.super_class = (Class)swift_getObjectType();
  [(UICollectionViewLayoutAttributes *)&v43 applyLayoutAttributes:a1];
  type metadata accessor for BlueprintLayoutCollectionLayoutAttributes();
  uint64_t v4 = swift_dynamicCastClass();
  if (v4)
  {
    uint64_t v5 = v4 + OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_model;
    swift_beginAccess();
    sub_1B5E5881C(v5, (uint64_t)v41);
    if (v42)
    {
      sub_1B5F5C5A8();
      double v6 = a1;
      if (swift_dynamicCast())
      {
        memcpy(__dst, __src, 0xD9uLL);
        uint64_t v10 = __dst[10];
        if (__dst[10])
        {
          uint64_t v20 = *(void **)&v2[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_gradientView];
          v21[184] = __dst[6];
          v21[176] = __dst[9];
          v21[168] = __dst[16] & 1;
          v21[160] = __dst[19] & 1;
          long long v23 = *(_OWORD *)&__dst[1];
          long long v24 = *(_OWORD *)&__dst[3];
          uint64_t v22 = __dst[0];
          uint64_t v25 = __dst[5];
          LOBYTE(v26) = __dst[6];
          long long v27 = *(_OWORD *)&__dst[7];
          char v28 = __dst[9];
          uint64_t v29 = __dst[10];
          uint64_t v30 = __dst[11];
          uint64_t v31 = __dst[12];
          uint64_t v32 = __dst[13];
          uint64_t v33 = __dst[14];
          uint64_t v34 = __dst[15];
          char v35 = __dst[16] & 1;
          uint64_t v36 = __dst[17];
          uint64_t v37 = __dst[18];
          char v38 = __dst[19] & 1;
          nullsub_1(&v22, v7, v8, v9, *(double *)&__dst[7]);
          sub_1B5F590C0((uint64_t)&v22, (uint64_t)v21);
          sub_1B5F584B0(v10);
          sub_1B61B1F70();
          id v11 = v20;
          sub_1B61B1F70();
          GradientView.dynamicGradientDescriptor.setter((uint64_t)v21);
        }
        else
        {
          uint64_t v12 = *(void **)&v2[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_gradientView];
          long long v23 = *(_OWORD *)&__dst[1];
          long long v24 = *(_OWORD *)&__dst[3];
          uint64_t v22 = __dst[0];
          uint64_t v25 = __dst[5];
          uint64_t v26 = LOBYTE(__dst[6]);
          long long v27 = *(_OWORD *)&__dst[7];
          char v28 = __dst[9];
          sub_1B61B1F70();
          id v13 = v12;
          sub_1B61B1F70();
          GradientView.gradientDescriptor.setter((long long *)&v22);
        }
        char v14 = __dst[21];
        uint64_t v15 = __dst[22];
        char v16 = __dst[23];
        CGRect v17 = &v2[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_gradientSize];
        *(void *)CGRect v17 = __dst[20];
        v17[8] = v14;
        *((void *)v17 + 2) = v15;
        v17[24] = v16;
        v2[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_overscrollPinPosition] = BYTE1(__dst[23]);
        sub_1B5F5C600((uint64_t)__dst);
        int32x2_t v18 = vdup_n_s32(LOBYTE(__dst[9]));
        v19.i64[0] = v18.u32[0];
        v19.i64[1] = v18.u32[1];
        *(int8x16_t *)&v2[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_offset] = vandq_s8(*(int8x16_t *)&__dst[7], (int8x16_t)vcgezq_s64(vshlq_n_s64(v19, 0x3FuLL)));
      }
      else
      {
      }
    }
    else
    {
      sub_1B5E588AC((uint64_t)v41);
    }
  }
}

id GradientSectionDecorationView.__deallocating_deinit()
{
  return sub_1B5E5A574((SEL *)&selRef_dealloc);
}

BOOL GradientSectionDecorationView.shouldMonitorScroll.getter()
{
  return *(unsigned char *)(v0 + OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_overscrollPinPosition) != 3;
}

uint64_t GradientSectionDecorationView.shouldMonitorMotion.getter()
{
  return 0;
}

void GradientSectionDecorationView.blueprintViewportMonitor(_:viewportScrollDataDidChange:)(uint64_t a1, uint64_t a2)
{
  if (v2[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_overscrollPinPosition] != 3)
  {
    id v4 = *(id *)&v2[OBJC_IVAR____TtC5TeaUI29GradientSectionDecorationView_gradientView];
    sub_1B6152724(v4, v2, a2);
  }
}

unint64_t sub_1B5F5C5A8()
{
  unint64_t result = qword_1EB646FC0;
  if (!qword_1EB646FC0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB646FC0);
  }
  return result;
}

uint64_t sub_1B5F5C600(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B5F58758(v3);
  return a1;
}

uint64_t sub_1B5F5C6A4()
{
  return MEMORY[0x1E4FBB450];
}

uint64_t destroy for GradientSectionDecorationItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 80);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for GradientSectionDecorationItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v7 = (const void *)(a2 + 80);
  uint64_t v6 = *(void *)(a2 + 80);
  sub_1B61B1F70();
  sub_1B61B1F70();
  if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = v6;
    *(void *)(a1 + 88) = v8;
    long long v9 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v9;
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
    sub_1B61B1F70();
    sub_1B61B1F70();
  }
  else
  {
    memcpy((void *)(a1 + 80), v7, 0x49uLL);
  }
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
  *(unsigned char *)(a1 + 185) = *(unsigned char *)(a2 + 185);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  return a1;
}

uint64_t assignWithCopy for GradientSectionDecorationItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a1 + 80);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  long long v7 = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 80);
  if (!v6)
  {
    if (v8)
    {
      *(void *)(a1 + 80) = v8;
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      long long v12 = *(_OWORD *)(a2 + 96);
      long long v13 = *(_OWORD *)(a2 + 112);
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *(_OWORD *)(a1 + 96) = v12;
      *(_OWORD *)(a1 + 112) = v13;
      long long v14 = *(_OWORD *)(a2 + 136);
      *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
      *(_OWORD *)(a1 + 136) = v14;
      sub_1B61B1F70();
      sub_1B61B1F70();
      goto LABEL_8;
    }
LABEL_7:
    memcpy((void *)(a1 + 80), (const void *)(a2 + 80), 0x49uLL);
    goto LABEL_8;
  }
  if (!v8)
  {
    sub_1B5F5C994(a1 + 80);
    goto LABEL_7;
  }
  *(void *)(a1 + 80) = v8;
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  long long v9 = *(_OWORD *)(a2 + 96);
  long long v10 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v10;
  long long v11 = *(_OWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = v11;
LABEL_8:
  uint64_t v15 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 160) = v15;
  uint64_t v16 = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = v16;
  *(unsigned char *)(a1 + 185) = *(unsigned char *)(a2 + 185);
  uint64_t v17 = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = v17;
  uint64_t v18 = *(void *)(a2 + 208);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(void *)(a1 + 208) = v18;
  return a1;
}

uint64_t sub_1B5F5C994(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for GradientSectionDecorationItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 80);
  uint64_t v5 = *(void *)(a1 + 80);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  if (!v5) {
    goto LABEL_5;
  }
  if (!v4)
  {
    sub_1B5F5C994(a1 + 80);
LABEL_5:
    memcpy((void *)(a1 + 80), (const void *)(a2 + 80), 0x49uLL);
    goto LABEL_6;
  }
  *(void *)(a1 + 80) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
LABEL_6:
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(_WORD *)(a1 + 184) = *(_WORD *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  return a1;
}

uint64_t getEnumTagSinglePayload for GradientSectionDecorationItem(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 217))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GradientSectionDecorationItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 216) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 217) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 217) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for GradientSectionDecorationItem()
{
}

void type metadata accessor for GradientSectionDecorationItem.Size()
{
}

void type metadata accessor for GradientSectionDecorationItem.Size.Value()
{
}

uint64_t type metadata accessor for GradientSectionDecorationView()
{
  return self;
}

double sub_1B5F5CC04()
{
  OUTLINED_FUNCTION_0_1();
  return *(double *)v0;
}

uint64_t sub_1B5F5CC38(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC5TeaUI12ProgressView_overrideHeight);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

uint64_t (*sub_1B5F5CC8C())()
{
  return j__swift_endAccess;
}

double sub_1B5F5CCE8(double a1, double a2)
{
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for ProgressView();
  objc_msgSendSuper2(&v8, sel_sizeThatFits_, a1, a2);
  double v6 = v5;
  OUTLINED_FUNCTION_0_1();
  return v6;
}

uint64_t type metadata accessor for ProgressView()
{
  return self;
}

id ProgressView.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_38();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_35_0();
  return objc_msgSend(v2, v3, v4);
}

id ProgressView.init(frame:)()
{
  OUTLINED_FUNCTION_38();
  *(void *)(v0 + OBJC_IVAR____TtC5TeaUI12ProgressView_overrideHeight) = 0x4008000000000000;
  uint64_t v5 = type metadata accessor for ProgressView();
  double v1 = OUTLINED_FUNCTION_35_0();
  return objc_msgSendSuper2(v2, v3, v1, v0, v5);
}

id ProgressView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id ProgressView.init(coder:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC5TeaUI12ProgressView_overrideHeight] = 0x4008000000000000;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ProgressView();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id ProgressView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProgressView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1B5F5CF98(double *a1@<X8>)
{
  *a1 = sub_1B5F5CC04();
}

uint64_t sub_1B5F5CFC4(double *a1)
{
  return sub_1B5F5CC38(*a1);
}

uint64_t method lookup function for ProgressView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ProgressView);
}

uint64_t dispatch thunk of ProgressView.overrideHeight.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of ProgressView.overrideHeight.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ProgressView.overrideHeight.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of RadarAttachmentResolverType.resolveAttachments(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1B5F5D0B4(uint64_t a1, void *a2)
{
  uint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    sub_1B61B1F70();
    uint64_t v7 = 0;
    while (1)
    {
      uint64_t v11 = *(void *)(a1 + 8 * v7 + 32);
      swift_retain();
      sub_1B5F5D2DC(&v11, a2, &v10);
      if (v2) {
        break;
      }
      uint64_t v8 = swift_release();
      if (v10)
      {
        MEMORY[0x1BA9AF660](v8);
        if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1B61B2580();
        }
        sub_1B61B25D0();
        sub_1B61B2510();
      }
      if (v5 == ++v7)
      {
        swift_bridgeObjectRelease();
        uint64_t v4 = v12;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v4 = v12;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_11:
    swift_release();
  }
  return v4;
}

uint64_t sub_1B5F5D200(uint64_t a1)
{
  swift_retain();
  sub_1B5F5D0B4(a1, v1);
  id v3 = (void *)sub_1B61B0C80();
  sub_1B61B0F10();

  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)sub_1B61B0C80();
  sub_1B5F60944(0, (unint64_t *)&qword_1EB647AE8, MEMORY[0x1E4FBB320]);
  uint64_t v5 = sub_1B61B0D10();
  swift_release();

  return v5;
}

void sub_1B5F5D2DC(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v103 = a3;
  uint64_t v5 = sub_1B61B2150();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1B61AF960();
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v98 - v14;
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v98 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v22 = (char *)&v98 - v21;
  uint64_t v23 = *a1;
  switch((unint64_t)*a1 >> 61)
  {
    case 1uLL:
      uint64_t v101 = v19;
      uint64_t v102 = v20;
      uint64_t v25 = v23 & 0x1FFFFFFFFFFFFFFFLL;
      long long v27 = *(void **)(v25 + 56);
      unint64_t v26 = *(void *)(v25 + 64);
      sub_1B5E176E4(v25 + 16, (uint64_t)&v107);
      __swift_project_boxed_opaque_existential_1(&v107, v109);
      sub_1B61B1F70();
      id v28 = v104;
      uint64_t v29 = sub_1B5F5E344();
      id v100 = v27;
      if (v28)
      {
        if (qword_1E9DA7EB8 != -1) {
          swift_once();
        }
        id v33 = (id)qword_1E9DC79F8;
        sub_1B61B2B80();
        sub_1B5E4CCFC();
        uint64_t v34 = swift_allocObject();
        *(_OWORD *)(v34 + 16) = xmmword_1B61BE6A0;
        uint64_t v35 = MEMORY[0x1E4FBB1A0];
        *(void *)(v34 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v36 = sub_1B5E2E40C();
        *(void *)(v34 + 64) = v36;
        *(void *)(v34 + 32) = v100;
        *(void *)(v34 + 40) = v26;
        uint64_t v105 = 0;
        unint64_t v106 = 0xE000000000000000;
        id v110 = v28;
        sub_1B5E00AB8(0, (unint64_t *)&qword_1EB647DB0);
        sub_1B61B3440();
        uint64_t v37 = v105;
        unint64_t v38 = v106;
        *(void *)(v34 + 96) = v35;
        *(void *)(v34 + 104) = v36;
        *(void *)(v34 + 72) = v37;
        *(void *)(v34 + 80) = v38;
        sub_1B61B0F90();

        swift_bridgeObjectRelease();
        *uint64_t v103 = 0;
      }
      else
      {
        uint64_t v31 = v29;
        unint64_t v32 = v30;
        uint64_t v105 = (uint64_t)v27;
        unint64_t v106 = v26;
        sub_1B61B1F70();
        _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
        sub_1B61AF8E0();
        swift_bridgeObjectRelease();
        sub_1B5F5E58C();
        swift_bridgeObjectRelease();
        uint64_t v105 = sub_1B61AF920();
        unint64_t v106 = v96;
        sub_1B5F60944(0, &qword_1E9DAA828, MEMORY[0x1E4FAB088]);
        swift_allocObject();
        uint64_t v97 = sub_1B61B0DA0();
        sub_1B5E2E534(v31, v32);
        (*(void (**)(char *, uint64_t))(v102 + 8))(v22, v101);
        *uint64_t v103 = v97;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
      return;
    case 2uLL:
      id v100 = a2;
      uint64_t v101 = v19;
      uint64_t v102 = v20;
      int v39 = (void *)(v23 & 0x1FFFFFFFFFFFFFFFLL);
      uint64_t v40 = v39[3];
      unint64_t v41 = v39[4];
      uint64_t v107 = v39[2];
      sub_1B61B1F70();
      RadarText.description.getter();
      sub_1B61B2140();
      uint64_t v42 = (void *)sub_1B61B2100();
      unint64_t v44 = v43;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if (v44 >> 60 == 15)
      {
        if (qword_1E9DA7EB8 != -1) {
          swift_once();
        }
        id v45 = (id)qword_1E9DC79F8;
        sub_1B61B2B80();
        sub_1B5E4CCFC();
        uint64_t v46 = swift_allocObject();
        *(_OWORD *)(v46 + 16) = xmmword_1B61BE690;
        *(void *)(v46 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v46 + 64) = sub_1B5E2E40C();
        *(void *)(v46 + 32) = v40;
        *(void *)(v46 + 40) = v41;
        sub_1B61B0F90();

        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      uint64_t v99 = v40;
      uint64_t v107 = v40;
      unint64_t v108 = v41;
      sub_1B61B1F70();
      _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
      sub_1B61AF8E0();
      swift_bridgeObjectRelease();
      id v77 = v104;
      sub_1B5F5E58C();
      unint64_t v78 = v41;
      if (v77)
      {
        id v104 = v42;
        if (qword_1E9DA7EB8 != -1) {
          swift_once();
        }
        id v79 = (id)qword_1E9DC79F8;
        sub_1B61B2B80();
        sub_1B5E4CCFC();
        uint64_t v80 = swift_allocObject();
        *(_OWORD *)(v80 + 16) = xmmword_1B61BE6A0;
        uint64_t v81 = MEMORY[0x1E4FBB1A0];
        *(void *)(v80 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v82 = sub_1B5E2E40C();
        *(void *)(v80 + 64) = v82;
        *(void *)(v80 + 32) = v99;
        *(void *)(v80 + 40) = v78;
        uint64_t v107 = 0;
        unint64_t v108 = 0xE000000000000000;
        uint64_t v105 = (uint64_t)v77;
        sub_1B5E00AB8(0, (unint64_t *)&qword_1EB647DB0);
        sub_1B61B3440();
        uint64_t v83 = v107;
        unint64_t v84 = v108;
        *(void *)(v80 + 96) = v81;
        *(void *)(v80 + 104) = v82;
        *(void *)(v80 + 72) = v83;
        *(void *)(v80 + 80) = v84;
        sub_1B61B0F90();
        sub_1B5E2E5C4((uint64_t)v104, v44);

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v102 + 8))(v18, v101);
        goto LABEL_32;
      }
      swift_bridgeObjectRelease();
      uint64_t v107 = sub_1B61AF920();
      unint64_t v108 = v90;
      sub_1B5F60944(0, &qword_1E9DAA828, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      uint64_t v91 = sub_1B61B0DA0();
      sub_1B5E2E5C4((uint64_t)v42, v44);
      (*(void (**)(char *, uint64_t))(v102 + 8))(v18, v101);
      *uint64_t v103 = v91;
      return;
    case 3uLL:
      uint64_t v101 = v19;
      uint64_t v102 = v20;
      uint64_t v47 = v23 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v49 = *(void *)(v47 + 32);
      unint64_t v48 = *(void *)(v47 + 40);
      sub_1B61B1F70();
      sub_1B61B2140();
      uint64_t v50 = sub_1B61B2100();
      unint64_t v52 = v51;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if (v52 >> 60 == 15)
      {
        if (qword_1E9DA7EB8 != -1) {
          swift_once();
        }
        id v53 = (id)qword_1E9DC79F8;
        sub_1B61B2B80();
        sub_1B5E4CCFC();
        uint64_t v54 = swift_allocObject();
        *(_OWORD *)(v54 + 16) = xmmword_1B61BE690;
        *(void *)(v54 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v54 + 64) = sub_1B5E2E40C();
        *(void *)(v54 + 32) = v49;
        *(void *)(v54 + 40) = v48;
        sub_1B61B0F90();

        swift_bridgeObjectRelease();
        goto LABEL_39;
      }
      uint64_t v107 = v49;
      unint64_t v108 = v48;
      sub_1B61B1F70();
      _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
      sub_1B61AF8E0();
      swift_bridgeObjectRelease();
      id v85 = v104;
      sub_1B5F5E58C();
      id v104 = v85;
      if (v85)
      {
        if (qword_1E9DA7EB8 != -1) {
          swift_once();
        }
        id v86 = (id)qword_1E9DC79F8;
        sub_1B61B2B80();
        sub_1B5E4CCFC();
        uint64_t v87 = swift_allocObject();
        *(_OWORD *)(v87 + 16) = xmmword_1B61BE690;
        *(void *)(v87 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v87 + 64) = sub_1B5E2E40C();
        *(void *)(v87 + 32) = v49;
        *(void *)(v87 + 40) = v48;
        sub_1B61B0F90();
        sub_1B5E2E5C4(v50, v52);

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v102 + 8))(v15, v101);
        goto LABEL_32;
      }
      swift_bridgeObjectRelease();
      uint64_t v107 = sub_1B61AF920();
      unint64_t v108 = v92;
      sub_1B5F60944(0, &qword_1E9DAA828, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      uint64_t v93 = sub_1B61B0DA0();
      sub_1B5E2E5C4(v50, v52);
      (*(void (**)(char *, uint64_t))(v102 + 8))(v15, v101);
      *uint64_t v103 = v93;
      return;
    case 4uLL:
      uint64_t v101 = v19;
      uint64_t v102 = v20;
      uint64_t v55 = *(void **)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      sub_1B5DFF760(0, (unint64_t *)&qword_1EB64CA90);
      id v56 = v55;
      long long v57 = (void *)sub_1B61B2C50();
      *(void *)(swift_allocObject() + 16) = v55;
      sub_1B5DFF760(0, (unint64_t *)&qword_1EB647CA0);
      id v58 = v56;
      sub_1B61B2C00();

      swift_release();
      uint64_t v59 = (UIImage *)v107;
      if (!v107)
      {
        if (qword_1E9DA7EB8 != -1) {
          swift_once();
        }
        id v88 = (id)qword_1E9DC79F8;
        sub_1B61B2B80();
        sub_1B61B0F90();

        goto LABEL_39;
      }
      sub_1B61AF8E0();
      long long v60 = UIImageJPEGRepresentation(v59, 1.0);
      if (!v60)
      {
        if (qword_1E9DA7EB8 != -1) {
          swift_once();
        }
        id v89 = (id)qword_1E9DC79F8;
        sub_1B61B2B80();
        sub_1B61B0F90();

        (*(void (**)(char *, uint64_t))(v102 + 8))(v12, v101);
LABEL_39:
        *uint64_t v103 = 0;
        return;
      }
      char v61 = v60;
      id v100 = v58;
      uint64_t v62 = sub_1B61AF9A0();
      unint64_t v64 = v63;

      id v65 = v104;
      sub_1B5F5E58C();
      if (v65)
      {
        if (qword_1E9DA7EB8 != -1) {
          swift_once();
        }
        id v66 = (id)qword_1E9DC79F8;
        LODWORD(v104) = sub_1B61B2B80();
        sub_1B5E4CCFC();
        uint64_t v67 = swift_allocObject();
        *(_OWORD *)(v67 + 16) = xmmword_1B61BE690;
        uint64_t v107 = 0;
        unint64_t v108 = 0xE000000000000000;
        uint64_t v105 = (uint64_t)v65;
        sub_1B5E00AB8(0, (unint64_t *)&qword_1EB647DB0);
        sub_1B61B3440();
        uint64_t v68 = v107;
        unint64_t v69 = v108;
        *(void *)(v67 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v67 + 64) = sub_1B5E2E40C();
        *(void *)(v67 + 32) = v68;
        *(void *)(v67 + 40) = v69;
        sub_1B61B0F90();
        sub_1B5E2E534(v62, v64);

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v102 + 8))(v12, v101);
LABEL_32:
        *uint64_t v103 = 0;
      }
      else
      {
        uint64_t v107 = sub_1B61AF920();
        unint64_t v108 = v94;
        sub_1B5F60944(0, &qword_1E9DAA828, MEMORY[0x1E4FAB088]);
        swift_allocObject();
        uint64_t v95 = sub_1B61B0DA0();
        sub_1B5E2E534(v62, v64);

        (*(void (**)(char *, uint64_t))(v102 + 8))(v12, v101);
        *uint64_t v103 = v95;
      }
      return;
    case 5uLL:
      uint64_t v70 = v23 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v71 = *(void *)(v70 + 24);
      uint64_t v72 = *(void *)(v70 + 32);
      MEMORY[0x1F4188790](v19);
      *(&v98 - 2) = (uint64_t)a2;
      *(&v98 - 1) = v73;
      sub_1B5F60944(0, (unint64_t *)&qword_1EB647AE8, MEMORY[0x1E4FBB320]);
      sub_1B61B1F70();
      sub_1B61B0E80();
      long long v74 = (void *)swift_allocObject();
      v74[2] = a2;
      void v74[3] = v71;
      v74[4] = v72;
      swift_retain();
      uint64_t v75 = (void *)sub_1B61B0C80();
      uint64_t v76 = sub_1B61B0D00();
      swift_release();
      swift_release();

      *uint64_t v103 = v76;
      return;
    default:
      unint64_t v24 = *(void *)(v23 + 24);
      uint64_t v107 = *(void *)(v23 + 16);
      unint64_t v108 = v24;
      sub_1B5F60944(0, &qword_1E9DAA828, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      sub_1B61B1F70();
      *uint64_t v103 = sub_1B61B0DA0();
      return;
  }
}

uint64_t sub_1B5F5E344()
{
  uint64_t v0 = sub_1B61AF620();
  MEMORY[0x1F4188790](v0);
  sub_1B61AF660();
  swift_allocObject();
  sub_1B61AF650();
  double v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F26CD0];
  sub_1B5F60994(0, &qword_1E9DAA830, MEMORY[0x1E4F26CD0], MEMORY[0x1E4FBBE00]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1B61C0140;
  sub_1B61AF600();
  sub_1B61AF5F0();
  sub_1B61AF610();
  sub_1B5F60C28(&qword_1E9DAA838, MEMORY[0x1E4F26CD0]);
  sub_1B5F60994(0, &qword_1E9DAA840, v1, MEMORY[0x1E4FBB320]);
  sub_1B5F609F8();
  sub_1B61B3100();
  sub_1B61AF630();
  uint64_t v2 = sub_1B61AF640();
  swift_release();
  return v2;
}

uint64_t sub_1B5F5E58C()
{
  v11[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v0 = sub_1B61AF960();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B61AF8F0();
  id v4 = objc_msgSend(self, sel_defaultManager);
  uint64_t v5 = (void *)sub_1B61AF8D0();
  v11[0] = 0;
  unsigned int v6 = objc_msgSend(v4, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v5, 1, 0, v11);

  if (v6)
  {
    id v7 = v11[0];
    sub_1B61AF9B0();
  }
  else
  {
    id v8 = v11[0];
    sub_1B61AF840();

    swift_willThrow();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1B5F5E758(uint64_t *a1, char *a2, void *a3, unint64_t a4)
{
  unint64_t v108 = a4;
  v126[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v103 = sub_1B61AF8A0();
  uint64_t v102 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103);
  uint64_t v101 = (char *)v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B61AF960();
  uint64_t v104 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v104 + 64);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v98 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)v98 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)v98 - v17;
  uint64_t v19 = *a1;
  uint64_t v105 = a3;
  uint64_t v20 = v116;
  sub_1B5F5F568(a3, v108, (uint64_t)v98 - v17);
  if (v20)
  {
    uint64_t v21 = v20;
LABEL_20:
    if (qword_1E9DA7EB8 != -1) {
      swift_once();
    }
    id v80 = (id)qword_1E9DC79F8;
    sub_1B61B2B80();
    sub_1B5E4CCFC();
    uint64_t v81 = swift_allocObject();
    *(_OWORD *)(v81 + 16) = xmmword_1B61BE6A0;
    uint64_t v82 = MEMORY[0x1E4FBB1A0];
    *(void *)(v81 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v83 = sub_1B5E2E40C();
    *(void *)(v81 + 64) = v83;
    unint64_t v84 = v108;
    *(void *)(v81 + 32) = v105;
    *(void *)(v81 + 40) = v84;
    id aBlock = 0;
    unint64_t v119 = 0xE000000000000000;
    v126[0] = v21;
    sub_1B5E00AB8(0, (unint64_t *)&qword_1EB647DB0);
    sub_1B61B1F70();
    sub_1B61B3440();
    id v85 = aBlock;
    unint64_t v86 = v119;
    *(void *)(v81 + 96) = v82;
    *(void *)(v81 + 104) = v83;
    *(void *)(v81 + 72) = v85;
    *(void *)(v81 + 80) = v86;
    sub_1B61B0F90();

    swift_bridgeObjectRelease();
    sub_1B5F60944(0, &qword_1E9DAA828, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1B61B0D80();
  }
  float v115 = a2;
  uint64_t v116 = (char *)v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = v9;
  uint64_t v109 = v18;
  id v110 = v13;
  uint64_t v117 = v8;
  uint64_t v22 = *(void *)(v19 + 16);
  uint64_t v23 = v16;
  v98[2] = 0;
  id v100 = v16;
  if (v22)
  {
    unint64_t v24 = self;
    unint64_t v106 = &v115[OBJC_IVAR____TtC5TeaUI23RadarAttachmentResolver_temporaryDirectory];
    uint64_t v25 = (void (**)(char *, uint64_t))(v104 + 8);
    sub_1B61B1F70();
    v98[1] = v19;
    unint64_t v26 = (void **)(v19 + 40);
    uint64_t v107 = v25;
    while (1)
    {
      float v112 = v26;
      uint64_t v113 = v22;
      long long v27 = (char *)*v26;
      uint64_t v114 = *(v26 - 1);
      float v115 = v27;
      v126[0] = v114;
      v126[1] = v27;
      sub_1B61B1F70();
      uint64_t v124 = sub_1B61AF920();
      uint64_t v125 = v28;
      sub_1B5F60A78();
      sub_1B61B2900();
      swift_bridgeObjectRelease();
      MEMORY[0x1BA9AF340](aBlock, v119, v120, v121);
      swift_bridgeObjectRelease();
      sub_1B61AF8E0();
      swift_bridgeObjectRelease();
      id v29 = objc_msgSend(v24, sel_defaultManager);
      unint64_t v30 = v110;
      sub_1B61AF8F0();
      uint64_t v31 = (void *)sub_1B61AF8D0();
      unint64_t v32 = *v25;
      (*v25)(v30, v117);
      id aBlock = 0;
      LODWORD(v30) = objc_msgSend(v29, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v31, 1, 0, &aBlock);

      id v33 = aBlock;
      if (!v30)
      {
        uint64_t v75 = v33;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v21 = (void *)sub_1B61AF840();

        swift_willThrow();
        uint64_t v76 = v116;
        uint64_t v77 = v117;
        uint64_t v78 = v117;
        goto LABEL_19;
      }
      uint64_t v111 = v32;
      id v34 = objc_msgSend(v24, (SEL)&selRef_initWithCustomTitleView_ + 3);
      uint64_t v35 = (void *)sub_1B61B20C0();
      swift_bridgeObjectRelease();
      unint64_t v36 = v116;
      sub_1B61AF920();
      uint64_t v37 = (void *)sub_1B61B20C0();
      swift_bridgeObjectRelease();
      id aBlock = 0;
      unsigned int v38 = objc_msgSend(v34, sel_copyItemAtPath_toPath_error_, v35, v37, &aBlock);

      if (!v38) {
        break;
      }
      unint64_t v26 = v112 + 2;
      id v39 = aBlock;
      uint64_t v25 = v107;
      v111(v36, v117);
      uint64_t v22 = v113 - 1;
      if (v113 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v23 = v100;
        goto LABEL_9;
      }
    }
    id v79 = aBlock;
    swift_bridgeObjectRelease();
    uint64_t v21 = (void *)sub_1B61AF840();

    swift_willThrow();
    uint64_t v76 = v36;
    uint64_t v77 = v117;
    uint64_t v78 = v117;
    unint64_t v32 = v111;
LABEL_19:
    v32(v76, v78);
    v32(v109, v77);
    goto LABEL_20;
  }
LABEL_9:
  v126[0] = 0;
  uint64_t v40 = v110;
  sub_1B61AF8F0();
  id aBlock = v105;
  unint64_t v119 = v108;
  sub_1B61B1F70();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  uint64_t v41 = v102;
  uint64_t v42 = v101;
  uint64_t v43 = v103;
  (*(void (**)(char *, void, uint64_t))(v102 + 104))(v101, *MEMORY[0x1E4F276B8], v103);
  sub_1B5E72DE0();
  sub_1B61AF940();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v43);
  swift_bridgeObjectRelease();
  uint64_t v44 = v104;
  id v45 = *(char **)(v104 + 8);
  uint64_t v46 = v117;
  float v115 = (char *)(v104 + 8);
  uint64_t v116 = v45;
  ((void (*)(char *, uint64_t))v45)(v40, v117);
  id v47 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28CA0]), sel_init);
  uint64_t v48 = sub_1B61AF8D0();
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v40, v23, v46);
  unint64_t v49 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  unint64_t v50 = (v99 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v51 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v44 + 32))(v51 + v49, v40, v46);
  *(void *)(v51 + v50) = v126;
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = sub_1B5F60B54;
  *(void *)(v52 + 24) = v51;
  uint64_t v122 = sub_1B5F60C00;
  uint64_t v123 = v52;
  id aBlock = (id)MEMORY[0x1E4F143A8];
  unint64_t v119 = 1107296256;
  id v120 = sub_1B5F60454;
  uint64_t v121 = &block_descriptor_33;
  id v53 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id aBlock = 0;
  objc_msgSend(v47, sel_coordinateReadingItemAtURL_options_error_byAccessor_, v48, 8, &aBlock, v53);
  _Block_release(v53);

  id v54 = aBlock;
  LOBYTE(v48) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v48)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v54)
  {
    uint64_t v55 = qword_1E9DA7EB8;
    id v54 = v54;
    if (v55 == -1)
    {
LABEL_12:
      id v56 = (id)qword_1E9DC79F8;
      sub_1B61B2B80();
      sub_1B5E4CCFC();
      uint64_t v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = xmmword_1B61BE690;
      id v58 = objc_msgSend(v54, sel_description);
      uint64_t v59 = sub_1B61B20F0();
      uint64_t v61 = v60;

      *(void *)(v57 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v57 + 64) = sub_1B5E2E40C();
      *(void *)(v57 + 32) = v59;
      *(void *)(v57 + 40) = v61;
      sub_1B61B0F90();

      swift_bridgeObjectRelease();
      sub_1B5F60944(0, &qword_1E9DAA828, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      uint64_t v62 = sub_1B61B0D80();
      unint64_t v64 = (void (*)(char *, uint64_t))v116;
      uint64_t v63 = v117;
      ((void (*)(char *, uint64_t))v116)(v100, v117);
      v64(v109, v63);

      swift_release();
      return v62;
    }
LABEL_29:
    swift_once();
    goto LABEL_12;
  }
  if (v126[0])
  {
    uint64_t v65 = qword_1E9DA7EB8;
    id v66 = v126[0];
    if (v65 != -1) {
      swift_once();
    }
    id v67 = (id)qword_1E9DC79F8;
    sub_1B61B2B80();
    sub_1B5E4CCFC();
    uint64_t v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = xmmword_1B61BE690;
    id v69 = objc_msgSend(v66, sel_description);
    uint64_t v70 = sub_1B61B20F0();
    uint64_t v72 = v71;

    *(void *)(v68 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v68 + 64) = sub_1B5E2E40C();
    *(void *)(v68 + 32) = v70;
    *(void *)(v68 + 40) = v72;
    sub_1B61B0F90();

    swift_bridgeObjectRelease();
    sub_1B5F60944(0, &qword_1E9DAA828, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v62 = sub_1B61B0D80();
    long long v74 = (void (*)(char *, uint64_t))v116;
    uint64_t v73 = v117;
    ((void (*)(char *, uint64_t))v116)(v100, v117);
    v74(v109, v73);
  }
  else
  {
    if (qword_1E9DA7EB8 != -1) {
      swift_once();
    }
    uint64_t v87 = (void *)qword_1E9DC79F8;
    sub_1B5E4CCFC();
    uint64_t v88 = swift_allocObject();
    *(_OWORD *)(v88 + 16) = xmmword_1B61BE690;
    sub_1B5F60C28(&qword_1E9DA86C8, MEMORY[0x1E4F276F0]);
    id v89 = v87;
    unint64_t v90 = v100;
    uint64_t v91 = v117;
    uint64_t v92 = sub_1B61B36E0();
    uint64_t v94 = v93;
    *(void *)(v88 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v88 + 64) = sub_1B5E2E40C();
    *(void *)(v88 + 32) = v92;
    *(void *)(v88 + 40) = v94;
    sub_1B61B2BA0();
    sub_1B61B0F90();

    swift_bridgeObjectRelease();
    id aBlock = (id)sub_1B61AF920();
    unint64_t v119 = v95;
    sub_1B5F60944(0, &qword_1E9DAA828, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v62 = sub_1B61B0DA0();
    unint64_t v96 = (void (*)(char *, uint64_t))v116;
    ((void (*)(char *, uint64_t))v116)(v90, v91);
    v96(v109, v91);
  }

  swift_release();
  return v62;
}

void sub_1B5F5F568(void *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v83 = a3;
  uint64_t v93 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1B61AF7F0();
  uint64_t v84 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B61AF8A0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1B61AF960();
  uint64_t v86 = *(void *)(v12 - 8);
  uint64_t v87 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v91 = a1;
  unint64_t v92 = a2;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F276A8], v8);
  sub_1B5E72DE0();
  sub_1B61AF940();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1B5F60994(0, &qword_1E9DAA858, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  long long v88 = xmmword_1B61BE690;
  *(_OWORD *)(inited + 16) = xmmword_1B61BE690;
  uint64_t v16 = (void *)*MEMORY[0x1E4F1C628];
  *(void *)(inited + 32) = *MEMORY[0x1E4F1C628];
  id v17 = v16;
  sub_1B5EA75B8(inited);
  uint64_t v18 = v85;
  sub_1B61AF8C0();
  unint64_t v19 = 0x1E9DA7000uLL;
  uint64_t v20 = (id *)&unk_1E9DC7000;
  if (!v18)
  {
    swift_bridgeObjectRelease();
    int v32 = sub_1B61AF7E0();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v7, v5);
    if (v32 != 2)
    {
      uint64_t v33 = MEMORY[0x1E4FBB1A0];
      if (qword_1E9DA7EB8 != -1) {
        swift_once();
      }
      id v34 = (void *)qword_1E9DC79F8;
      sub_1B5E4CCFC();
      id v85 = v35;
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = v88;
      sub_1B5F60C28(&qword_1E9DA86C8, MEMORY[0x1E4F276F0]);
      id v37 = v34;
      uint64_t v38 = sub_1B61B36E0();
      uint64_t v40 = v39;
      *(void *)(v36 + 56) = v33;
      uint64_t v41 = v14;
      unint64_t v42 = sub_1B5E2E40C();
      *(void *)(v36 + 64) = v42;
      *(void *)(v36 + 32) = v38;
      *(void *)(v36 + 40) = v40;
      sub_1B61B2BA0();
      sub_1B61B0F90();

      swift_bridgeObjectRelease();
      uint64_t v43 = self;
      id v44 = objc_msgSend(v43, sel_defaultManager);
      id v45 = (void *)sub_1B61AF8D0();
      id v91 = 0;
      LODWORD(v40) = objc_msgSend(v44, sel_removeItemAtURL_error_, v45, &v91);

      id v46 = v91;
      if (v40)
      {
        id v47 = (void *)qword_1E9DC79F8;
        uint64_t v48 = swift_allocObject();
        *(_OWORD *)(v48 + 16) = v88;
        id v49 = v46;
        id v50 = v47;
        uint64_t v51 = sub_1B61B36E0();
        *(void *)(v48 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v48 + 64) = v42;
        *(void *)(v48 + 32) = v51;
        *(void *)(v48 + 40) = v52;
        sub_1B61B2BA0();
        sub_1B61B0F90();

        swift_bridgeObjectRelease();
        id v53 = objc_msgSend(v43, sel_defaultManager);
        id v54 = (void *)sub_1B61AF8D0();
        id v91 = 0;
        unsigned int v55 = objc_msgSend(v53, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v54, 1, 0, &v91);

        uint64_t v14 = v41;
        if (v55)
        {
          id v56 = v91;
          goto LABEL_17;
        }
        id v81 = v91;
        uint64_t v21 = (void *)sub_1B61AF840();

        swift_willThrow();
      }
      else
      {
        id v79 = v91;
        uint64_t v21 = (void *)sub_1B61AF840();

        swift_willThrow();
        uint64_t v14 = v41;
      }
      uint64_t v20 = (id *)&unk_1E9DC7000;
      unint64_t v19 = 0x1E9DA7000;
      goto LABEL_3;
    }
LABEL_17:
    uint64_t v57 = MEMORY[0x1E4FBB1A0];
    if (qword_1E9DA7EB8 != -1) {
      swift_once();
    }
    id v58 = (void *)qword_1E9DC79F8;
    sub_1B5E4CCFC();
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = v88;
    sub_1B5F60C28(&qword_1E9DA86C8, MEMORY[0x1E4F276F0]);
    id v60 = v58;
    uint64_t v61 = v87;
    uint64_t v62 = sub_1B61B36E0();
    uint64_t v64 = v63;
    *(void *)(v59 + 56) = v57;
    *(void *)(v59 + 64) = sub_1B5E2E40C();
    *(void *)(v59 + 32) = v62;
    *(void *)(v59 + 40) = v64;
    sub_1B61B2BA0();
    sub_1B61B0F90();

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v86 + 32))(v83, v14, v61);
    return;
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = v18;
LABEL_3:
  id v91 = v21;
  id v22 = v21;
  sub_1B5E00AB8(0, (unint64_t *)&qword_1EB647DB0);
  sub_1B5DFF760(0, &qword_1E9DAA860);
  if (!swift_dynamicCast())
  {
    uint64_t v31 = MEMORY[0x1E4FBB1A0];
LABEL_28:

    if (*(void *)(v19 + 3768) != -1) {
      swift_once();
    }
    id v75 = v20[319];
    sub_1B61B2B80();
    sub_1B5E4CCFC();
    uint64_t v76 = swift_allocObject();
    *(_OWORD *)(v76 + 16) = v88;
    id v91 = 0;
    unint64_t v92 = 0xE000000000000000;
    id v90 = v21;
    sub_1B61B3440();
    id v77 = v91;
    unint64_t v78 = v92;
    *(void *)(v76 + 56) = v31;
    *(void *)(v76 + 64) = sub_1B5E2E40C();
    *(void *)(v76 + 32) = v77;
    *(void *)(v76 + 40) = v78;
    sub_1B61B0F90();

    swift_bridgeObjectRelease();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v14, v87);
    return;
  }
  id v23 = v90;
  id v24 = objc_msgSend(v90, sel_domain);
  uint64_t v25 = sub_1B61B20F0();
  uint64_t v27 = v26;

  if (v25 == sub_1B61B20F0() && v27 == v28)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v30 = sub_1B61B3760();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v30 & 1) == 0) {
      goto LABEL_27;
    }
  }
  if (objc_msgSend(v23, sel_code) != (id)260)
  {
LABEL_27:

    uint64_t v31 = MEMORY[0x1E4FBB1A0];
    uint64_t v20 = (id *)&unk_1E9DC7000;
    unint64_t v19 = 0x1E9DA7000uLL;
    goto LABEL_28;
  }

  if (qword_1E9DA7EB8 != -1) {
    swift_once();
  }
  uint64_t v65 = (void *)qword_1E9DC79F8;
  sub_1B5E4CCFC();
  uint64_t v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = v88;
  sub_1B5F60C28(&qword_1E9DA86C8, MEMORY[0x1E4F276F0]);
  id v67 = v65;
  uint64_t v68 = v87;
  uint64_t v69 = sub_1B61B36E0();
  uint64_t v71 = v70;
  *(void *)(v66 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v66 + 64) = sub_1B5E2E40C();
  *(void *)(v66 + 32) = v69;
  *(void *)(v66 + 40) = v71;
  sub_1B61B2BA0();
  sub_1B61B0F90();

  swift_bridgeObjectRelease();
  id v72 = objc_msgSend(self, sel_defaultManager);
  uint64_t v73 = (void *)sub_1B61AF8D0();
  id v89 = 0;
  LODWORD(v71) = objc_msgSend(v72, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v73, 1, 0, &v89);

  if (v71)
  {
    id v74 = v89;

    (*(void (**)(uint64_t, char *, uint64_t))(v86 + 32))(v83, v14, v68);
  }
  else
  {
    id v80 = v89;
    sub_1B61AF840();

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v14, v68);
  }
}

void sub_1B5F60098(uint64_t a1, uint64_t a2, void **a3)
{
  v35[1] = *(id *)MEMORY[0x1E4F143B8];
  if (qword_1E9DA7EB8 != -1) {
    swift_once();
  }
  id v3 = (void *)qword_1E9DC79F8;
  sub_1B5E4CCFC();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1B61BE690;
  sub_1B61AF960();
  sub_1B5F60C28(&qword_1E9DA86C8, MEMORY[0x1E4F276F0]);
  id v5 = v3;
  uint64_t v6 = sub_1B61B36E0();
  uint64_t v8 = v7;
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v10 = sub_1B5E2E40C();
  *(void *)(v4 + 64) = v10;
  *(void *)(v4 + 32) = v6;
  *(void *)(v4 + 40) = v8;
  sub_1B61B2BA0();
  sub_1B61B0F90();

  swift_bridgeObjectRelease();
  uint64_t v11 = self;
  id v12 = objc_msgSend(v11, sel_defaultManager);
  uint64_t v13 = (void *)sub_1B61AF8D0();
  v35[0] = 0;
  LODWORD(v4) = objc_msgSend(v12, sel_removeItemAtURL_error_, v13, v35);

  if (v4)
  {
    id v14 = v35[0];
  }
  else
  {
    id v15 = v35[0];
    uint64_t v16 = (void *)sub_1B61AF840();

    swift_willThrow();
  }
  id v17 = (void *)qword_1E9DC79F8;
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1B61BE6A0;
  id v19 = v17;
  uint64_t v20 = sub_1B61B36E0();
  *(void *)(v18 + 56) = v9;
  *(void *)(v18 + 64) = v10;
  *(void *)(v18 + 32) = v20;
  *(void *)(v18 + 40) = v21;
  uint64_t v22 = sub_1B61B36E0();
  *(void *)(v18 + 96) = v9;
  *(void *)(v18 + 104) = v10;
  *(void *)(v18 + 72) = v22;
  *(void *)(v18 + 80) = v23;
  sub_1B61B2BA0();
  sub_1B61B0F90();

  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(v11, sel_defaultManager);
  uint64_t v25 = (void *)sub_1B61AF8D0();
  uint64_t v26 = (void *)sub_1B61AF8D0();
  v35[0] = 0;
  unsigned int v27 = objc_msgSend(v24, sel_moveItemAtURL_toURL_error_, v25, v26, v35);

  id v28 = v35[0];
  if (v27)
  {
    id v29 = v28;
  }
  else
  {
    id v30 = v35[0];
    uint64_t v31 = (void *)sub_1B61AF840();

    swift_willThrow();
    uint64_t v32 = sub_1B61AF830();

    uint64_t v33 = *a3;
    *a3 = (void *)v32;
  }
}

uint64_t sub_1B5F60454(uint64_t a1)
{
  uint64_t v2 = sub_1B61AF960();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_1B61AF910();
  v6(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1B5F6053C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B5F60538(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_1B5F60574()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5TeaUI23RadarAttachmentResolver_temporaryDirectory;
  sub_1B61AF960();
  OUTLINED_FUNCTION_19_1();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  return swift_deallocClassInstance();
}

uint64_t sub_1B5F60608()
{
  return type metadata accessor for RadarAttachmentResolver();
}

uint64_t type metadata accessor for RadarAttachmentResolver()
{
  uint64_t result = qword_1EB644B28;
  if (!qword_1EB644B28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B5F60658()
{
  uint64_t result = sub_1B61AF960();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B5F606E8(uint64_t a1)
{
  return sub_1B5F5D200(a1);
}

uint64_t sub_1B5F6070C()
{
  return sub_1B5F5D200(*(void *)(v0 + 24));
}

uint64_t sub_1B5F6073C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B5F6077C(uint64_t *a1)
{
  return sub_1B5F5E758(a1, *(char **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

void sub_1B5F6079C(void *a1@<X0>, UIImage **a2@<X8>)
{
  if (a1)
  {
    id v4 = a1;
  }
  else
  {
    id v5 = objc_msgSend(self, sel_sharedApplication);
    id v4 = objc_msgSend(v5, sel_key_window);

    if (!v4)
    {
      id v17 = 0;
      goto LABEL_8;
    }
  }
  id v6 = a1;
  objc_msgSend(v4, sel_bounds);
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  id v11 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v11, sel_scale);
  CGFloat v13 = v12;

  v18.CGFloat width = v8;
  v18.CGFloat height = v10;
  UIGraphicsBeginImageContextWithOptions(v18, 0, v13);
  id v14 = UIGraphicsGetCurrentContext();
  if (v14)
  {
    id v15 = v14;
    id v16 = objc_msgSend(v4, sel_layer);
    objc_msgSend(v16, sel_renderInContext_, v15);

    id v17 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
  }
  else
  {
    id v17 = 0;
  }

LABEL_8:
  *a2 = v17;
}

uint64_t sub_1B5F60904()
{
  return swift_deallocObject();
}

void sub_1B5F6093C(UIImage **a1@<X8>)
{
  sub_1B5F6079C(*(void **)(v1 + 16), a1);
}

void sub_1B5F60944(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1B5F60994(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1B5F609F8()
{
  unint64_t result = qword_1E9DAA848;
  if (!qword_1E9DAA848)
  {
    sub_1B5F60994(255, &qword_1E9DAA840, MEMORY[0x1E4F26CD0], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA848);
  }
  return result;
}

unint64_t sub_1B5F60A78()
{
  unint64_t result = qword_1E9DAA850;
  if (!qword_1E9DAA850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA850);
  }
  return result;
}

uint64_t sub_1B5F60AC4()
{
  sub_1B61AF960();
  OUTLINED_FUNCTION_19_1();
  (*(void (**)(unint64_t))(v1 + 8))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
  return swift_deallocObject();
}

void sub_1B5F60B54(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1B61AF960() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void ***)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1B5F60098(a1, v1 + v4, v5);
}

uint64_t sub_1B5F60BF0()
{
  return swift_deallocObject();
}

uint64_t sub_1B5F60C00()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1B5F60C28(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for JSArrayValueView()
{
  swift_release();
  return swift_release();
}

void *_s5TeaUI16JSArrayValueViewVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for JSArrayValueView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for JSArrayValueView(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for JSArrayValueView()
{
  return &type metadata for JSArrayValueView;
}

uint64_t sub_1B5F60D98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B5F60DB4()
{
  return sub_1B61B1CD0();
}

uint64_t sub_1B5F60E6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1B5F614C8();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  CGFloat v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  sub_1B5F617B8(0, &qword_1E9DAA8B8, type metadata accessor for JSONSchemaValueArray, MEMORY[0x1E4F3ECC8]);
  sub_1B61B1B70();
  unint64_t v11 = sub_1B5E39F28();
  swift_release();
  uint64_t v12 = sub_1B5F61A10(v11);
  swift_bridgeObjectRelease();
  uint64_t v20 = v12;
  swift_getKeyPath();
  sub_1B5F61D94(0, &qword_1E9DAA878, &qword_1E9DAA880, (void (*)(uint64_t))type metadata accessor for JSONSchemaValue, MEMORY[0x1E4FBB320]);
  sub_1B5F6158C();
  sub_1B61B1CB0();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1B5F61C68;
  *(void *)(v14 + 24) = v13;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(a3, v10, v7);
  sub_1B5F61460();
  id v16 = (uint64_t (**)(uint64_t))(a3 + *(int *)(v15 + 36));
  *id v16 = sub_1B5F61CA8;
  v16[1] = (uint64_t (*)(uint64_t))v14;
  id v17 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  swift_retain();
  swift_retain();
  return v17(v10, v7);
}

uint64_t sub_1B5F610FC(uint64_t a1, uint64_t a2)
{
  return sub_1B61B19F0();
}

uint64_t sub_1B5F61168@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1B5F610FC(*a1, a1[1]);
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5 & 1;
  *(void *)(a2 + 24) = v6;
  return result;
}

uint64_t sub_1B5F611A4()
{
  return swift_release();
}

uint64_t sub_1B5F61214()
{
  return swift_release();
}

uint64_t sub_1B5F61450()
{
  return sub_1B5F60DB4();
}

uint64_t sub_1B5F61458@<X0>(uint64_t a1@<X8>)
{
  return sub_1B5F60E6C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_1B5F61460()
{
  if (!qword_1E9DAA868)
  {
    sub_1B5F614C8();
    sub_1B5F61614();
    unint64_t v0 = sub_1B61B15F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAA868);
    }
  }
}

void sub_1B5F614C8()
{
  if (!qword_1E9DAA870)
  {
    sub_1B5F61D94(255, &qword_1E9DAA878, &qword_1E9DAA880, (void (*)(uint64_t))type metadata accessor for JSONSchemaValue, MEMORY[0x1E4FBB320]);
    sub_1B5F6158C();
    unint64_t v0 = sub_1B61B1CC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAA870);
    }
  }
}

unint64_t sub_1B5F6158C()
{
  unint64_t result = qword_1E9DAA888;
  if (!qword_1E9DAA888)
  {
    sub_1B5F61D94(255, &qword_1E9DAA878, &qword_1E9DAA880, (void (*)(uint64_t))type metadata accessor for JSONSchemaValue, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA888);
  }
  return result;
}

void sub_1B5F61614()
{
  if (!qword_1E9DAA890)
  {
    sub_1B61B1620();
    sub_1B5F61CD8(&qword_1E9DAA898, MEMORY[0x1E4F3CD28]);
    unint64_t v0 = sub_1B61B18B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAA890);
    }
  }
}

unint64_t sub_1B5F616A8()
{
  unint64_t result = qword_1E9DAA8A0;
  if (!qword_1E9DAA8A0)
  {
    sub_1B5F61460();
    sub_1B5F61750();
    sub_1B5F61CD8(&qword_1E9DAA8B0, (void (*)(uint64_t))sub_1B5F61614);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA8A0);
  }
  return result;
}

unint64_t sub_1B5F61750()
{
  unint64_t result = qword_1E9DAA8A8;
  if (!qword_1E9DAA8A8)
  {
    sub_1B5F614C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA8A8);
  }
  return result;
}

void sub_1B5F617B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B5F6181C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    char v5 = (void *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v24 = *(void *)(a1 + 16);
    uint64_t v6 = (uint64_t *)(sub_1B61B1F70() + 56);
    while (1)
    {
      uint64_t v7 = *(v6 - 3);
      uint64_t v8 = *(v6 - 2);
      uint64_t v9 = *(v6 - 1);
      uint64_t v10 = *v6;
      if (v3)
      {
        sub_1B61B1F70();
        sub_1B61B1F70();
      }
      else
      {
        OUTLINED_FUNCTION_0_67();
        if (v12) {
          goto LABEL_28;
        }
        int64_t v13 = v11 & 0xFFFFFFFFFFFFFFFELL;
        uint64_t v14 = v13 <= 1 ? 1 : v13;
        sub_1B5F61D94(0, &qword_1E9DAA8D8, (unint64_t *)&qword_1E9DA9310, (void (*)(uint64_t))sub_1B5E1DDFC, MEMORY[0x1E4FBBE00]);
        uint64_t v15 = (void *)swift_allocObject();
        uint64_t v16 = (uint64_t)(_swift_stdlib_malloc_size(v15) - 32) / 40;
        _OWORD v15[2] = v14;
        v15[3] = 2 * v16;
        id v17 = v15 + 4;
        uint64_t v18 = v2[3] >> 1;
        char v5 = &v15[5 * v18 + 4];
        uint64_t v3 = (v16 & 0x7FFFFFFFFFFFFFFFLL) - v18;
        if (v2[2])
        {
          if (v15 != v2 || v17 >= &v2[5 * v18 + 4]) {
            memmove(v17, v2 + 4, 40 * v18);
          }
          sub_1B61B1F70();
          sub_1B61B1F70();
          v2[2] = 0;
        }
        else
        {
          sub_1B61B1F70();
          sub_1B61B1F70();
        }
        swift_release();
        uint64_t v2 = v15;
        uint64_t v1 = v24;
      }
      BOOL v20 = __OFSUB__(v3--, 1);
      if (v20) {
        break;
      }
      v6 += 4;
      void *v5 = v4;
      v5[1] = v7;
      v5[2] = v8;
      v5[3] = v9;
      v5[4] = v10;
      v5 += 5;
      if (v1 == ++v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v3 = 0;
LABEL_23:
  unint64_t v21 = v2[3];
  if (v21 >= 2)
  {
    unint64_t v22 = v21 >> 1;
    BOOL v20 = __OFSUB__(v22, v3);
    uint64_t v23 = v22 - v3;
    if (v20)
    {
LABEL_29:
      __break(1u);
      return;
    }
    v2[2] = v23;
  }
}

uint64_t sub_1B5F61A10(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_33;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = sub_1B61B1F70();
LABEL_3:
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  if (v2)
  {
    if (v2 >= 1)
    {
      uint64_t v5 = 0;
      uint64_t v6 = 0;
      uint64_t v7 = (void *)(MEMORY[0x1E4FBC860] + 32);
      unint64_t v8 = v1 & 0xC000000000000001;
      unint64_t v24 = v1 & 0xC000000000000001;
      while (1)
      {
        if (v8)
        {
          uint64_t v9 = MEMORY[0x1BA9B04B0](v6, v1);
          if (v5) {
            goto LABEL_23;
          }
        }
        else
        {
          uint64_t v9 = *(void *)(v1 + 8 * v6 + 32);
          swift_retain();
          if (v5) {
            goto LABEL_23;
          }
        }
        unint64_t v10 = v4[3];
        if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_32;
        }
        unint64_t v11 = v1;
        int64_t v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
        if (v12 <= 1) {
          uint64_t v13 = 1;
        }
        else {
          uint64_t v13 = v12;
        }
        sub_1B5F61D94(0, &qword_1E9DAA8D0, &qword_1E9DAA880, (void (*)(uint64_t))type metadata accessor for JSONSchemaValue, MEMORY[0x1E4FBBE00]);
        uint64_t v14 = (void *)swift_allocObject();
        uint64_t v15 = (uint64_t)(_swift_stdlib_malloc_size(v14) - 32) / 16;
        v14[2] = v13;
        v14[3] = 2 * v15;
        unint64_t v16 = (unint64_t)(v14 + 4);
        unint64_t v17 = v4[3];
        unint64_t v18 = v17 >> 1;
        if (v4[2])
        {
          if (v14 != v4 || v16 >= (unint64_t)&v4[2 * v18 + 4]) {
            memmove(v14 + 4, v4 + 4, 16 * v18);
          }
          void v4[2] = 0;
        }
        uint64_t v7 = (void *)(v16 + 16 * v18);
        uint64_t v5 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - (v17 >> 1);
        swift_release();
        uint64_t v4 = v14;
        unint64_t v1 = v11;
        unint64_t v8 = v24;
LABEL_23:
        BOOL v20 = __OFSUB__(v5--, 1);
        if (v20)
        {
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          sub_1B61B1F70();
          uint64_t result = sub_1B61B3530();
          uint64_t v2 = result;
          goto LABEL_3;
        }
        *uint64_t v7 = v6;
        v7[1] = v9;
        v7 += 2;
        if (v2 == ++v6) {
          goto LABEL_27;
        }
      }
    }
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v5 = 0;
LABEL_27:
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v21 = v4[3];
  if (v21 < 2) {
    return (uint64_t)v4;
  }
  unint64_t v22 = v21 >> 1;
  BOOL v20 = __OFSUB__(v22, v5);
  unint64_t v23 = v22 - v5;
  if (!v20)
  {
    void v4[2] = v23;
    return (uint64_t)v4;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1B5F61C28()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5F61C68()
{
  return sub_1B5F611A4();
}

uint64_t sub_1B5F61C70()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5F61CA8(uint64_t a1)
{
  return sub_1B612A488(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1B5F61CB0()
{
  return sub_1B5F61214();
}

uint64_t sub_1B5F61CD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B5F61D20(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B5F617B8(255, &qword_1E9DA8E58, type metadata accessor for JSONSchemaValue, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B5F61D94(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1B5F6236C(255, a3, a4);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1B5F61DFC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = (void *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v6 = (uint64_t *)(sub_1B61B1F70() + 40);
    while (1)
    {
      uint64_t v7 = *(v6 - 1);
      uint64_t v8 = *v6;
      if (v3)
      {
        sub_1B61B1F70();
      }
      else
      {
        OUTLINED_FUNCTION_0_67();
        if (v10) {
          goto LABEL_28;
        }
        int64_t v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
        uint64_t v12 = v11 <= 1 ? 1 : v11;
        sub_1B5F617B8(0, &qword_1E9DAA8F0, (uint64_t (*)(uint64_t))sub_1B5F62454, MEMORY[0x1E4FBBE00]);
        uint64_t v13 = (void *)swift_allocObject();
        uint64_t v14 = (uint64_t)(_swift_stdlib_malloc_size(v13) - 32) / 24;
        v13[2] = v12;
        void v13[3] = 2 * v14;
        uint64_t v15 = v13 + 4;
        uint64_t v16 = v2[3] >> 1;
        uint64_t v5 = &v13[3 * v16 + 4];
        uint64_t v3 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        if (v2[2])
        {
          if (v13 != v2 || v15 >= &v2[3 * v16 + 4]) {
            memmove(v15, v2 + 4, 24 * v16);
          }
          sub_1B61B1F70();
          v2[2] = 0;
        }
        else
        {
          sub_1B61B1F70();
        }
        swift_release();
        uint64_t v2 = v13;
      }
      BOOL v18 = __OFSUB__(v3--, 1);
      if (v18) {
        break;
      }
      v6 += 2;
      void *v5 = v4;
      v5[1] = v7;
      v5[2] = v8;
      v5 += 3;
      if (v1 == ++v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v3 = 0;
LABEL_23:
  unint64_t v19 = v2[3];
  if (v19 >= 2)
  {
    unint64_t v20 = v19 >> 1;
    BOOL v18 = __OFSUB__(v20, v3);
    uint64_t v21 = v20 - v3;
    if (v18)
    {
LABEL_29:
      __break(1u);
      return;
    }
    v2[2] = v21;
  }
}

void sub_1B5F61FBC(uint64_t a1)
{
  sub_1B5F6236C(0, &qword_1E9DAA8E0, MEMORY[0x1E4FAAFC8]);
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v2);
  id v54 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (void *)((char *)v43 - v6);
  MEMORY[0x1F4188790](v8);
  id v46 = (char *)v43 - v9;
  uint64_t v55 = v10;
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(a1 + 16);
  sub_1B61B1F70();
  uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v53 = v12;
  v43[1] = a1;
  if (v12)
  {
    uint64_t v47 = (v11 + 32) & ~v11;
    uint64_t v14 = MEMORY[0x1E4FBC860] + v47;
    uint64_t v15 = 0;
    uint64_t v12 = 0;
    uint64_t v52 = sub_1B61B0AC0();
    uint64_t v16 = *(void *)(v52 - 8);
    unint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    uint64_t v50 = v16 + 16;
    uint64_t v51 = v17;
    uint64_t v18 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v48 = *(void *)(v16 + 72);
    id v49 = (void (**)(char *, char *, uint64_t))(v16 + 32);
    id v44 = v7;
    uint64_t v45 = v11 | 7;
    unint64_t v19 = v13;
    uint64_t v20 = (uint64_t)v46;
    while (1)
    {
      uint64_t v21 = &v54[*(int *)(v3 + 48)];
      uint64_t v22 = v52;
      v51(v21, v18, v52);
      unint64_t v23 = (char *)v7 + *(int *)(v3 + 48);
      *uint64_t v7 = v15;
      (*v49)(v23, v21, v22);
      sub_1B5F623D4((uint64_t)v7, v20);
      if (v12)
      {
        uint64_t v13 = v19;
      }
      else
      {
        OUTLINED_FUNCTION_0_67();
        if (v25) {
          goto LABEL_32;
        }
        uint64_t v26 = v3;
        int64_t v27 = v24 & 0xFFFFFFFFFFFFFFFELL;
        if (v27 <= 1) {
          uint64_t v28 = 1;
        }
        else {
          uint64_t v28 = v27;
        }
        sub_1B5F61D94(0, &qword_1E9DAA8E8, &qword_1E9DAA8E0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBBE00]);
        uint64_t v29 = *(void *)(v55 + 72);
        uint64_t v30 = v47;
        uint64_t v13 = (void *)swift_allocObject();
        size_t v31 = _swift_stdlib_malloc_size(v13);
        if (!v29) {
          goto LABEL_33;
        }
        int64_t v32 = v31 - v30;
        if (v31 - v30 == 0x8000000000000000 && v29 == -1) {
          goto LABEL_34;
        }
        uint64_t v34 = v32 / v29;
        v13[2] = v28;
        void v13[3] = 2 * (v32 / v29);
        uint64_t v35 = (char *)v13 + v30;
        unint64_t v36 = v19[3];
        uint64_t v37 = (v36 >> 1) * v29;
        if (v19[2])
        {
          if (v13 < v19 || v35 >= (char *)v19 + v47 + v37)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v13 != v19)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v19[2] = 0;
        }
        uint64_t v14 = (uint64_t)&v35[v37];
        uint64_t v12 = (v34 & 0x7FFFFFFFFFFFFFFFLL) - (v36 >> 1);
        swift_release();
        uint64_t v3 = v26;
        uint64_t v7 = v44;
        uint64_t v20 = (uint64_t)v46;
      }
      BOOL v39 = __OFSUB__(v12--, 1);
      if (v39) {
        break;
      }
      ++v15;
      sub_1B5F623D4(v20, v14);
      v14 += *(void *)(v55 + 72);
      v18 += v48;
      unint64_t v19 = v13;
      if (v53 == v15) {
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  unint64_t v40 = v13[3];
  if (v40 >= 2)
  {
    unint64_t v41 = v40 >> 1;
    BOOL v39 = __OFSUB__(v41, v12);
    unint64_t v42 = v41 - v12;
    if (v39)
    {
LABEL_35:
      __break(1u);
      return;
    }
    v13[2] = v42;
  }
}

void sub_1B5F6236C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1B5F623D4(uint64_t a1, uint64_t a2)
{
  sub_1B5F6236C(0, &qword_1E9DAA8E0, MEMORY[0x1E4FAAFC8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B5F62454()
{
  if (!qword_1E9DAA8F8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DAA8F8);
    }
  }
}

unint64_t sub_1B5F624B8()
{
  unint64_t result = qword_1E9DAA900;
  if (!qword_1E9DAA900)
  {
    sub_1B5F6253C();
    sub_1B5F616A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAA900);
  }
  return result;
}

void sub_1B5F6253C()
{
  if (!qword_1E9DAA908)
  {
    sub_1B5F61460();
    unint64_t v0 = sub_1B61B1CF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAA908);
    }
  }
}

id CompositionalListReusableView.view.getter()
{
  return *(id *)(v0 + qword_1EB64B5A0);
}

void sub_1B5F625B4(id *a1)
{
}

id sub_1B5F625E0()
{
  uint64_t v1 = (void **)(v0 + qword_1EB64B5A8);
  swift_beginAccess();
  uint64_t v2 = *v1;
  return v2;
}

void sub_1B5F62638(void *a1)
{
  uint64_t v3 = (void **)(v1 + qword_1EB64B5A8);
  swift_beginAccess();
  uint64_t v4 = *v3;
  void *v3 = a1;
}

double sub_1B5F6268C()
{
  return *(double *)(v0 + qword_1EB64B598);
}

void sub_1B5F6269C(double a1)
{
  *(double *)(v1 + qword_1EB64B598) = a1;
}

uint64_t sub_1B5F626AC()
{
  uint64_t v1 = *(void *)(v0 + qword_1EB640440);
  sub_1B5E4DC4C(v1);
  return v1;
}

uint64_t sub_1B5F626EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + qword_1EB640440);
  uint64_t v4 = *(void *)(v2 + qword_1EB640440);
  void *v3 = a1;
  v3[1] = a2;
  return sub_1B5E3799C(v4);
}

id CompositionalListReusableView.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_38();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_35_0();
  return objc_msgSend(v2, v3, v4);
}

char *CompositionalListReusableView.init(frame:)()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = qword_1EB64B5A8;
  id v2 = objc_allocWithZone(MEMORY[0x1E4FBA8A8]);
  uint64_t v3 = v0;
  *(void *)&v0[v1] = objc_msgSend(v2, sel_init);
  *(void *)&v3[qword_1EB64B598] = 0;
  double v4 = &v3[qword_1EB640440];
  *(void *)double v4 = 0;
  *((void *)v4 + 1) = 0;
  *(void *)&v3[qword_1EB64B5A0] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  uint64_t v16 = type metadata accessor for CompositionalListReusableView();
  double v5 = OUTLINED_FUNCTION_35_0();
  uint64_t v8 = (char *)objc_msgSendSuper2(v6, v7, v5, v3, v16);
  uint64_t v9 = *(void **)&v8[qword_1EB64B5A0];
  uint64_t v10 = v8;
  objc_msgSend(v10, sel_addSubview_, v9);
  id v11 = v9;
  objc_msgSend(v10, sel_bounds);
  objc_msgSend(v11, sel_setFrame_);

  uint64_t v12 = self;
  uint64_t v13 = v10;
  id v14 = objc_msgSend(v12, sel_clearColor);
  objc_msgSend(v13, sel_setBackgroundColor_, v14);

  return v13;
}

uint64_t type metadata accessor for CompositionalListReusableView()
{
  return __swift_instantiateGenericMetadata();
}

char *sub_1B5F62940()
{
  return CompositionalListReusableView.init(frame:)();
}

id CompositionalListReusableView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void CompositionalListReusableView.init(coder:)()
{
  uint64_t v1 = qword_1EB64B5A8;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FBA8A8]), sel_init);
  *(void *)&v0[qword_1EB64B598] = 0;
  id v2 = &v0[qword_1EB640440];
  *(void *)id v2 = 0;
  *((void *)v2 + 1) = 0;

  sub_1B61B34D0();
  __break(1u);
}

void sub_1B5F62A4C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  CompositionalListReusableView.init(coder:)();
}

id sub_1B5F62A68()
{
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_4_48();
  objc_msgSendSuper2(&v3, sel_layoutSubviews);
  uint64_t v1 = *(void **)&v0[qword_1EB64B5A0];
  objc_msgSend(v0, sel_bounds);
  return objc_msgSend(v1, sel_setFrame_);
}

void sub_1B5F62B00(void *a1)
{
  id v1 = a1;
  sub_1B5F62A68();
}

void sub_1B5F62B48(void *a1)
{
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_4_48();
  objc_msgSendSuper2(&v8, sel_applyLayoutAttributes_, a1);
  type metadata accessor for BlueprintLayoutCollectionLayoutAttributes();
  uint64_t v3 = swift_dynamicCastClass();
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1B5F626AC();
    if (v5)
    {
      uint64_t v6 = (void (*)(uint64_t, uint64_t))v5;
      id v7 = a1;
      v6(v1, v4);
      sub_1B5E3799C((uint64_t)v6);
    }
  }
}

void sub_1B5F62C24(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1B5F62B48(v4);
}

uint64_t sub_1B5F62C8C()
{
  OUTLINED_FUNCTION_11_0();
  uint64_t v2 = *(void *)(v1 + 80);
  OUTLINED_FUNCTION_11_0();
  uint64_t v4 = *(void *)(v3 + 88);
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for CompositionalListReusableView();
  objc_msgSendSuper2(&v6, sel_prepareForReuse);
  sub_1B5F62638(objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FBA8A8]), sel_init));
  sub_1B5F626EC(0, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v2, v4);
}

void sub_1B5F62D68(void *a1)
{
  id v1 = a1;
  sub_1B5F62C8C();
}

id sub_1B5F62DB0(uint64_t a1)
{
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_4_48();
  id v2 = objc_msgSendSuper2(&v4, sel_preferredLayoutAttributesFittingAttributes_, a1);
  objc_msgSend(v2, sel_frame);
  objc_msgSend(v2, sel_setFrame_);
  return v2;
}

id sub_1B5F62E7C(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  id v6 = sub_1B5F62DB0((uint64_t)v4);

  return v6;
}

id CompositionalListReusableView.__deallocating_deinit()
{
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_4_48();
  return objc_msgSendSuper2(&v1, sel_dealloc);
}

uint64_t sub_1B5F62F40(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + qword_1EB640440);
  return sub_1B5E3799C(v2);
}

void sub_1B5F62FA0(double a1)
{
}

uint64_t CompositionalListReusableView.keyCommandBlocks.getter()
{
  uint64_t v12 = MEMORY[0x1E4FBC860];
  id v8 = *(id *)(v0 + qword_1EB64B5A0);
  sub_1B5F630C4();
  id v1 = v8;
  if (swift_dynamicCast())
  {
    sub_1B5E30E70(v6, (uint64_t)v9);
    uint64_t v2 = v10;
    uint64_t v3 = v11;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    unint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
    sub_1B5E50C80(v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_1B5E50ABC((uint64_t)v6);
  }
  return v12;
}

unint64_t sub_1B5F630C4()
{
  unint64_t result = qword_1EB645AC8;
  if (!qword_1EB645AC8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB645AC8);
  }
  return result;
}

uint64_t sub_1B5F6311C()
{
  return CompositionalListReusableView.keyCommandBlocks.getter();
}

uint64_t CompositionalListReusableView.registerForChanges(block:)(uint64_t a1, uint64_t a2)
{
  swift_retain();
  return sub_1B5F626EC(a1, a2);
}

uint64_t sub_1B5F6318C(uint64_t a1, uint64_t a2)
{
  return CompositionalListReusableView.registerForChanges(block:)(a1, a2);
}

uint64_t CompositionalListReusableView<>.shouldMonitorScroll.getter()
{
  OUTLINED_FUNCTION_18_0();
  return v0() & 1;
}

uint64_t CompositionalListReusableView<>.shouldMonitorMotion.getter()
{
  OUTLINED_FUNCTION_18_0();
  return v0() & 1;
}

uint64_t CompositionalListReusableView<>.blueprintViewportMonitor(_:viewportScrollDataDidChange:)()
{
  OUTLINED_FUNCTION_18_0();
  return v0();
}

uint64_t CompositionalListReusableView<>.blueprintViewportMonitor(_:viewportMotionDataDidChange:)()
{
  OUTLINED_FUNCTION_18_0();
  return v0();
}

uint64_t CompositionalListReusableView<>.blueprintViewportMonitor(_:viewportMotionEnabled:)()
{
  OUTLINED_FUNCTION_18_0();
  return v0();
}

uint64_t sub_1B5F633AC()
{
  return CompositionalListReusableView<>.shouldMonitorMotion.getter();
}

uint64_t sub_1B5F633B4()
{
  return CompositionalListReusableView<>.shouldMonitorScroll.getter();
}

uint64_t sub_1B5F633BC()
{
  return CompositionalListReusableView<>.blueprintViewportMonitor(_:viewportScrollDataDidChange:)();
}

uint64_t sub_1B5F633C4()
{
  return CompositionalListReusableView<>.blueprintViewportMonitor(_:viewportMotionDataDidChange:)();
}

uint64_t sub_1B5F633CC()
{
  return CompositionalListReusableView<>.blueprintViewportMonitor(_:viewportMotionEnabled:)();
}

id sub_1B5F633D4@<X0>(void *a1@<X8>)
{
  id result = sub_1B5F625E0();
  *a1 = result;
  return result;
}

uint64_t sub_1B5F63404()
{
  return 16;
}

__n128 sub_1B5F63410(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1B5F6341C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for CompositionalListReusableView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CompositionalListReusableView);
}

uint64_t dispatch thunk of CompositionalListReusableView.token.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t sub_1B5F634D0()
{
  uint64_t result = type metadata accessor for BlueprintModifierResult();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1B5F63578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    id v10 = *(id *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (uint64_t)v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = type metadata accessor for BlueprintModifierResult();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v240 = v6;
        uint64_t v8 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v8;
        uint64_t v9 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v9)
        {
          *(void *)(a1 + 40) = v9;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(a1 + 16, a2 + 16, v9);
        }
        else
        {
          long long v35 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v35;
        }
        unint64_t v36 = (int *)type metadata accessor for Blueprint();
        uint64_t v37 = v36[14];
        uint64_t v38 = a1 + v37;
        uint64_t v220 = a2 + v37;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v39 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v38, v220, v39);
        uint64_t v40 = v36[15];
        uint64_t v41 = a1 + v40;
        uint64_t v221 = a2 + v40;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v42 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v41, v221, v42);
        *(void *)(a1 + v36[16]) = *(void *)(a2 + v36[16]);
        uint64_t v43 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        uint64_t v44 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v45 = a1 + v44;
        uint64_t v46 = a2 + v44;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v47 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload(v46, 1, v47)) {
              goto LABEL_54;
            }
            goto LABEL_120;
          case 1u:
            uint64_t v180 = sub_1B61AFCB0();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v180 - 8) + 16))(v45, v46, v180);
            sub_1B5EBF460();
            *(_OWORD *)(v45 + *(int *)(v181 + 48)) = *(_OWORD *)(v46 + *(int *)(v181 + 48));
            goto LABEL_78;
          case 2u:
          case 3u:
            uint64_t v182 = *(void *)(v46 + 8);
            *(void *)uint64_t v45 = *(void *)v46;
            *(void *)(v45 + 8) = v182;
            *(_OWORD *)(v45 + 16) = *(_OWORD *)(v46 + 16);
            sub_1B61B1F70();
            goto LABEL_78;
          case 4u:
            uint64_t v183 = *(void *)(v46 + 8);
            *(void *)uint64_t v45 = *(void *)v46;
            *(void *)(v45 + 8) = v183;
            sub_1B61B1F70();
LABEL_78:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)v45, (const void *)v46, *(void *)(*(void *)(v43 - 8) + 64));
            break;
        }
        uint64_t v6 = v240;
        goto LABEL_126;
      case 1u:
        uint64_t v241 = v6;
        uint64_t v11 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v11;
        uint64_t v12 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v12)
        {
          *(void *)(a1 + 40) = v12;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8))(a1 + 16, a2 + 16, v12);
        }
        else
        {
          long long v48 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v48;
        }
        id v49 = (int *)type metadata accessor for Blueprint();
        uint64_t v50 = v49[14];
        uint64_t v222 = a1 + v50;
        uint64_t v51 = a2 + v50;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v52 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(v222, v51, v52);
        uint64_t v53 = v49[15];
        uint64_t v54 = a1 + v53;
        uint64_t v223 = a2 + v53;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v55 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 16))(v54, v223, v55);
        *(void *)(a1 + v49[16]) = *(void *)(a2 + v49[16]);
        uint64_t v56 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        uint64_t v58 = *(int *)(TupleTypeMetadata3 + 48);
        uint64_t v59 = (void *)(a1 + v58);
        id v60 = (void *)(a2 + v58);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v61 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v61))
            {
              sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy(v59, v60, *(void *)(*(void *)(v62 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
              __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v61);
            }
            goto LABEL_117;
          case 1u:
            uint64_t v184 = sub_1B61AFCB0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v184 - 8) + 16))(v59, v60, v184);
            sub_1B5EBF460();
            *(_OWORD *)((char *)v59 + *(int *)(v185 + 48)) = *(_OWORD *)((char *)v60 + *(int *)(v185 + 48));
            goto LABEL_117;
          case 2u:
          case 3u:
            uint64_t v186 = v60[1];
            *uint64_t v59 = *v60;
            v59[1] = v186;
            *((_OWORD *)v59 + 1) = *((_OWORD *)v60 + 1);
            sub_1B61B1F70();
            goto LABEL_117;
          case 4u:
            uint64_t v187 = v60[1];
            *uint64_t v59 = *v60;
            v59[1] = v187;
            sub_1B61B1F70();
LABEL_117:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v59, v60, *(void *)(*(void *)(v56 - 8) + 64));
            break;
        }
        uint64_t v6 = v241;
        uint64_t v208 = *(int *)(TupleTypeMetadata3 + 64);
        uint64_t v209 = a1 + v208;
        uint64_t v210 = a2 + v208;
        *(_OWORD *)uint64_t v209 = *(_OWORD *)v210;
        uint64_t v211 = (_OWORD *)(v209 + 16);
        uint64_t v212 = (_OWORD *)(v210 + 16);
        uint64_t v213 = *(void *)(v210 + 40);
        if (v213) {
          goto LABEL_124;
        }
        long long v214 = *(_OWORD *)(v210 + 32);
        *uint64_t v211 = *v212;
        *(_OWORD *)(v209 + 32) = v214;
        goto LABEL_126;
      case 2u:
        uint64_t v240 = v6;
        uint64_t v13 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v13;
        uint64_t v14 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v14)
        {
          *(void *)(a1 + 40) = v14;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v14 - 8))(a1 + 16, a2 + 16, v14);
        }
        else
        {
          long long v63 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v63;
        }
        uint64_t v64 = (int *)type metadata accessor for Blueprint();
        uint64_t v65 = v64[14];
        uint64_t v224 = a1 + v65;
        uint64_t v66 = a2 + v65;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v67 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 16))(v224, v66, v67);
        uint64_t v68 = v64[15];
        uint64_t v69 = a1 + v68;
        uint64_t v225 = a2 + v68;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v70 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 16))(v69, v225, v70);
        *(void *)(a1 + v64[16]) = *(void *)(a2 + v64[16]);
        uint64_t v71 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        uint64_t v72 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v45 = a1 + v72;
        uint64_t v46 = a2 + v72;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v47 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload(v46, 1, v47)) {
              goto LABEL_54;
            }
            goto LABEL_120;
          case 1u:
            uint64_t v188 = sub_1B61AFCB0();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v188 - 8) + 16))(v45, v46, v188);
            sub_1B5EBF460();
            *(_OWORD *)(v45 + *(int *)(v189 + 48)) = *(_OWORD *)(v46 + *(int *)(v189 + 48));
            goto LABEL_88;
          case 2u:
          case 3u:
            uint64_t v190 = *(void *)(v46 + 8);
            *(void *)uint64_t v45 = *(void *)v46;
            *(void *)(v45 + 8) = v190;
            *(_OWORD *)(v45 + 16) = *(_OWORD *)(v46 + 16);
            sub_1B61B1F70();
            goto LABEL_88;
          case 4u:
            uint64_t v191 = *(void *)(v46 + 8);
            *(void *)uint64_t v45 = *(void *)v46;
            *(void *)(v45 + 8) = v191;
            sub_1B61B1F70();
LABEL_88:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)v45, (const void *)v46, *(void *)(*(void *)(v71 - 8) + 64));
            break;
        }
        uint64_t v6 = v240;
        goto LABEL_126;
      case 3u:
        uint64_t v240 = v6;
        uint64_t v15 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v15;
        uint64_t v16 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v16)
        {
          *(void *)(a1 + 40) = v16;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8))(a1 + 16, a2 + 16, v16);
        }
        else
        {
          long long v73 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v73;
        }
        id v74 = (int *)type metadata accessor for Blueprint();
        uint64_t v75 = v74[14];
        uint64_t v226 = a1 + v75;
        uint64_t v76 = a2 + v75;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v77 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 16))(v226, v76, v77);
        uint64_t v78 = v74[15];
        uint64_t v79 = a1 + v78;
        uint64_t v227 = a2 + v78;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v80 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 16))(v79, v227, v80);
        *(void *)(a1 + v74[16]) = *(void *)(a2 + v74[16]);
        sub_1B5F666C8();
        uint64_t v81 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        uint64_t v82 = swift_getTupleTypeMetadata3();
        uint64_t v83 = *(int *)(v82 + 48);
        long long v84 = *(_OWORD *)(a2 + v83 + 24);
        *(_OWORD *)(a1 + v83 + 24) = v84;
        (**(void (***)(void))(v84 - 8))();
        uint64_t v85 = *(int *)(v82 + 64);
        uint64_t v45 = a1 + v85;
        uint64_t v46 = a2 + v85;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v47 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload(v46, 1, v47)) {
              goto LABEL_54;
            }
            goto LABEL_120;
          case 1u:
            uint64_t v192 = sub_1B61AFCB0();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v192 - 8) + 16))(v45, v46, v192);
            sub_1B5EBF460();
            *(_OWORD *)(v45 + *(int *)(v193 + 48)) = *(_OWORD *)(v46 + *(int *)(v193 + 48));
            goto LABEL_94;
          case 2u:
          case 3u:
            uint64_t v194 = *(void *)(v46 + 8);
            *(void *)uint64_t v45 = *(void *)v46;
            *(void *)(v45 + 8) = v194;
            *(_OWORD *)(v45 + 16) = *(_OWORD *)(v46 + 16);
            sub_1B61B1F70();
            goto LABEL_94;
          case 4u:
            uint64_t v195 = *(void *)(v46 + 8);
            *(void *)uint64_t v45 = *(void *)v46;
            *(void *)(v45 + 8) = v195;
            sub_1B61B1F70();
LABEL_94:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)v45, (const void *)v46, *(void *)(*(void *)(v81 - 8) + 64));
            break;
        }
        uint64_t v6 = v240;
        goto LABEL_126;
      case 4u:
        uint64_t v242 = v6;
        uint64_t v17 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v17;
        uint64_t v18 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v18)
        {
          *(void *)(a1 + 40) = v18;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v18 - 8))(a1 + 16, a2 + 16, v18);
        }
        else
        {
          long long v86 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v86;
        }
        uint64_t v87 = (int *)type metadata accessor for Blueprint();
        uint64_t v88 = v87[14];
        uint64_t v228 = a1 + v88;
        uint64_t v89 = a2 + v88;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v90 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 16))(v228, v89, v90);
        uint64_t v91 = v87[15];
        uint64_t v92 = a1 + v91;
        uint64_t v229 = a2 + v91;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v93 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 16))(v92, v229, v93);
        *(void *)(a1 + v87[16]) = *(void *)(a2 + v87[16]);
        uint64_t v94 = swift_retain();
        MEMORY[0x1F4188790](v94);
        sub_1B5F666C8();
        type metadata accessor for BlueprintBookmark();
        unint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
        uint64_t v96 = TupleTypeMetadata[12];
        long long v97 = *(_OWORD *)(a2 + v96 + 24);
        *(_OWORD *)(a1 + v96 + 24) = v97;
        (**(void (***)(void))(v97 - 8))();
        uint64_t v98 = TupleTypeMetadata[16];
        uint64_t v99 = (void *)(a1 + v98);
        id v100 = (void *)(a2 + v98);
        uint64_t v101 = type metadata accessor for BlueprintBookmark();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v102 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload((uint64_t)v100, 1, v102))
            {
              sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy(v99, v100, *(void *)(*(void *)(v103 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v102 - 8) + 16))(v99, v100, v102);
              __swift_storeEnumTagSinglePayload((uint64_t)v99, 0, 1, v102);
            }
            goto LABEL_122;
          case 1u:
            uint64_t v196 = sub_1B61AFCB0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v196 - 8) + 16))(v99, v100, v196);
            sub_1B5EBF460();
            *(_OWORD *)((char *)v99 + *(int *)(v197 + 48)) = *(_OWORD *)((char *)v100 + *(int *)(v197 + 48));
            goto LABEL_122;
          case 2u:
          case 3u:
            uint64_t v198 = v100[1];
            *uint64_t v99 = *v100;
            v99[1] = v198;
            *((_OWORD *)v99 + 1) = *((_OWORD *)v100 + 1);
            sub_1B61B1F70();
            goto LABEL_122;
          case 4u:
            uint64_t v199 = v100[1];
            *uint64_t v99 = *v100;
            v99[1] = v199;
            sub_1B61B1F70();
LABEL_122:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v99, v100, *(void *)(*(void *)(v101 - 8) + 64));
            break;
        }
        uint64_t v6 = v242;
        uint64_t v215 = TupleTypeMetadata[20];
        uint64_t v209 = a1 + v215;
        uint64_t v216 = a2 + v215;
        *(_OWORD *)uint64_t v209 = *(_OWORD *)v216;
        uint64_t v211 = (_OWORD *)(v209 + 16);
        uint64_t v212 = (_OWORD *)(v216 + 16);
        uint64_t v213 = *(void *)(v216 + 40);
        if (v213)
        {
LABEL_124:
          *(void *)(v209 + 40) = v213;
          (**(void (***)(_OWORD *, _OWORD *))(v213 - 8))(v211, v212);
        }
        else
        {
          long long v217 = *(_OWORD *)(v216 + 32);
          *uint64_t v211 = *v212;
          *(_OWORD *)(v209 + 32) = v217;
        }
        goto LABEL_126;
      case 5u:
        uint64_t v240 = v6;
        uint64_t v19 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v19;
        uint64_t v20 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v20)
        {
          *(void *)(a1 + 40) = v20;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v20 - 8))(a1 + 16, a2 + 16, v20);
        }
        else
        {
          long long v104 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v104;
        }
        uint64_t v105 = (int *)type metadata accessor for Blueprint();
        uint64_t v106 = v105[14];
        uint64_t v230 = a1 + v106;
        uint64_t v107 = a2 + v106;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v108 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 16))(v230, v107, v108);
        uint64_t v109 = v105[15];
        uint64_t v110 = a1 + v109;
        uint64_t v231 = a2 + v109;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v111 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 16))(v110, v231, v111);
        *(void *)(a1 + v105[16]) = *(void *)(a2 + v105[16]);
        sub_1B5F666C8();
        uint64_t v112 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        uint64_t v113 = swift_getTupleTypeMetadata3();
        uint64_t v114 = *(int *)(v113 + 48);
        long long v115 = *(_OWORD *)(a2 + v114 + 24);
        *(_OWORD *)(a1 + v114 + 24) = v115;
        (**(void (***)(void))(v115 - 8))();
        uint64_t v116 = *(int *)(v113 + 64);
        uint64_t v45 = a1 + v116;
        uint64_t v46 = a2 + v116;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v47 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload(v46, 1, v47))
            {
LABEL_54:
              sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy((void *)v45, (const void *)v46, *(void *)(*(void *)(v117 - 8) + 64));
            }
            else
            {
LABEL_120:
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
              __swift_storeEnumTagSinglePayload(v45, 0, 1, v47);
            }
            goto LABEL_131;
          case 1u:
            uint64_t v200 = sub_1B61AFCB0();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v200 - 8) + 16))(v45, v46, v200);
            sub_1B5EBF460();
            *(_OWORD *)(v45 + *(int *)(v201 + 48)) = *(_OWORD *)(v46 + *(int *)(v201 + 48));
            goto LABEL_104;
          case 2u:
          case 3u:
            uint64_t v202 = *(void *)(v46 + 8);
            *(void *)uint64_t v45 = *(void *)v46;
            *(void *)(v45 + 8) = v202;
            *(_OWORD *)(v45 + 16) = *(_OWORD *)(v46 + 16);
            sub_1B61B1F70();
            goto LABEL_104;
          case 4u:
            uint64_t v203 = *(void *)(v46 + 8);
            *(void *)uint64_t v45 = *(void *)v46;
            *(void *)(v45 + 8) = v203;
            sub_1B61B1F70();
LABEL_104:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)v45, (const void *)v46, *(void *)(*(void *)(v112 - 8) + 64));
            break;
        }
        uint64_t v6 = v240;
        goto LABEL_126;
      case 6u:
        uint64_t v243 = v6;
        uint64_t v21 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v21;
        uint64_t v22 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v22)
        {
          *(void *)(a1 + 40) = v22;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v22 - 8))(a1 + 16, a2 + 16, v22);
        }
        else
        {
          long long v118 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v118;
        }
        unint64_t v119 = (int *)type metadata accessor for Blueprint();
        uint64_t v120 = v119[14];
        uint64_t v232 = a1 + v120;
        uint64_t v121 = a2 + v120;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v122 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 16))(v232, v121, v122);
        uint64_t v123 = v119[15];
        uint64_t v124 = a1 + v123;
        uint64_t v233 = a2 + v123;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v125 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 16))(v124, v233, v125);
        *(void *)(a1 + v119[16]) = *(void *)(a2 + v119[16]);
        sub_1B5F666C8();
        type metadata accessor for BlueprintViewActionResponse();
        swift_retain();
        uint64_t v126 = swift_getTupleTypeMetadata3();
        uint64_t v127 = *(int *)(v126 + 48);
        long long v128 = *(_OWORD *)(a2 + v127 + 24);
        *(_OWORD *)(a1 + v127 + 24) = v128;
        (**(void (***)(void))(v128 - 8))();
        *(void *)(a1 + *(int *)(v126 + 64)) = *(void *)(a2 + *(int *)(v126 + 64));
        swift_retain();
        goto LABEL_67;
      case 7u:
        uint64_t v244 = v6;
        uint64_t v23 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v23;
        uint64_t v24 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v24)
        {
          *(void *)(a1 + 40) = v24;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v24 - 8))(a1 + 16, a2 + 16, v24);
        }
        else
        {
          long long v129 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v129;
        }
        id v130 = (int *)type metadata accessor for Blueprint();
        uint64_t v131 = v130[14];
        uint64_t v234 = a1 + v131;
        uint64_t v132 = a2 + v131;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v133 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v133 - 8) + 16))(v234, v132, v133);
        uint64_t v134 = v130[15];
        uint64_t v135 = a1 + v134;
        uint64_t v235 = a2 + v134;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v136 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v136 - 8) + 16))(v135, v235, v136);
        *(void *)(a1 + v130[16]) = *(void *)(a2 + v130[16]);
        uint64_t v137 = swift_retain();
        MEMORY[0x1F4188790](v137);
        sub_1B5F666C8();
        type metadata accessor for BlueprintViewActionResponse();
        uint64_t v138 = (int *)swift_getTupleTypeMetadata();
        uint64_t v139 = v138[12];
        long long v140 = *(_OWORD *)(a2 + v139 + 24);
        *(_OWORD *)(a1 + v139 + 24) = v140;
        (**(void (***)(void))(v140 - 8))();
        *(void *)(a1 + v138[16]) = *(void *)(a2 + v138[16]);
        uint64_t v141 = v138[20];
        uint64_t v142 = a1 + v141;
        uint64_t v143 = a2 + v141;
        *(_OWORD *)uint64_t v142 = *(_OWORD *)v143;
        uint64_t v144 = (_OWORD *)(v143 + 16);
        uint64_t v145 = *(void *)(v143 + 40);
        swift_retain();
        if (v145)
        {
          *(void *)(v142 + 40) = v145;
          (**(void (***)(uint64_t, _OWORD *, uint64_t))(v145 - 8))(v142 + 16, v144, v145);
        }
        else
        {
          long long v175 = v144[1];
          *(_OWORD *)(v142 + 16) = *v144;
          *(_OWORD *)(v142 + 32) = v175;
        }
        uint64_t v6 = v244;
        goto LABEL_126;
      case 8u:
        uint64_t v243 = v6;
        uint64_t v25 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v25;
        uint64_t v26 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v26) {
          goto LABEL_30;
        }
        long long v146 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v146;
        goto LABEL_66;
      case 9u:
        uint64_t v27 = type metadata accessor for BlueprintBookmark();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v28 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload(a2, 1, v28))
            {
              sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v29 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
              __swift_storeEnumTagSinglePayload(a1, 0, 1, v28);
            }
            goto LABEL_113;
          case 1u:
            uint64_t v176 = sub_1B61AFCB0();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v176 - 8) + 16))(a1, a2, v176);
            sub_1B5EBF460();
            *(_OWORD *)(a1 + *(int *)(v177 + 48)) = *(_OWORD *)(a2 + *(int *)(v177 + 48));
            goto LABEL_113;
          case 2u:
          case 3u:
            uint64_t v178 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v178;
            *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
            sub_1B61B1F70();
            goto LABEL_113;
          case 4u:
            uint64_t v179 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v179;
            sub_1B61B1F70();
LABEL_113:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v27 - 8) + 64));
            break;
        }
        goto LABEL_126;
      case 0xAu:
        id v30 = *(id *)a2;
        id v31 = *(id *)a2;
        *(void *)a1 = v30;
        goto LABEL_126;
      case 0xBu:
        uint64_t v240 = v6;
        uint64_t v32 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v32;
        uint64_t v33 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v33)
        {
          *(void *)(a1 + 40) = v33;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v33 - 8))(a1 + 16, a2 + 16, v33);
        }
        else
        {
          long long v147 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v147;
        }
        uint64_t v148 = (int *)type metadata accessor for Blueprint();
        uint64_t v149 = v148[14];
        uint64_t v236 = a1 + v149;
        uint64_t v150 = a2 + v149;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v151 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v151 - 8) + 16))(v236, v150, v151);
        uint64_t v152 = v148[15];
        uint64_t v153 = a1 + v152;
        uint64_t v237 = a2 + v152;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v154 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v154 - 8) + 16))(v153, v237, v154);
        *(void *)(a1 + v148[16]) = *(void *)(a2 + v148[16]);
        uint64_t v155 = swift_retain();
        MEMORY[0x1F4188790](v155);
        sub_1B5F666C8();
        sub_1B5F66720(255, &qword_1E9DAA910, (void (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse);
        type metadata accessor for BlueprintBookmark();
        id v156 = (int *)swift_getTupleTypeMetadata();
        uint64_t v157 = v156[12];
        long long v158 = *(_OWORD *)(a2 + v157 + 24);
        *(_OWORD *)(a1 + v157 + 24) = v158;
        (**(void (***)(void))(v158 - 8))();
        *(void *)(a1 + v156[16]) = *(void *)(a2 + v156[16]);
        *(unsigned char *)(a1 + v156[20]) = *(unsigned char *)(a2 + v156[20]);
        uint64_t v159 = v156[24];
        uint64_t v160 = (void *)(a1 + v159);
        id v161 = (void *)(a2 + v159);
        uint64_t v162 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v163 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload((uint64_t)v161, 1, v163))
            {
              sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy(v160, v161, *(void *)(*(void *)(v164 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v163 - 8) + 16))(v160, v161, v163);
              __swift_storeEnumTagSinglePayload((uint64_t)v160, 0, 1, v163);
            }
LABEL_131:
            swift_storeEnumTagMultiPayload();
            uint64_t v6 = v240;
            goto LABEL_126;
          case 1u:
            uint64_t v204 = sub_1B61AFCB0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v204 - 8) + 16))(v160, v161, v204);
            sub_1B5EBF460();
            *(_OWORD *)((char *)v160 + *(int *)(v205 + 48)) = *(_OWORD *)((char *)v161 + *(int *)(v205 + 48));
            goto LABEL_110;
          case 2u:
          case 3u:
            uint64_t v206 = v161[1];
            *uint64_t v160 = *v161;
            v160[1] = v206;
            *((_OWORD *)v160 + 1) = *((_OWORD *)v161 + 1);
            sub_1B61B1F70();
            goto LABEL_110;
          case 4u:
            uint64_t v207 = v161[1];
            *uint64_t v160 = *v161;
            v160[1] = v207;
            sub_1B61B1F70();
LABEL_110:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v160, v161, *(void *)(*(void *)(v162 - 8) + 64));
            break;
        }
        uint64_t v6 = v240;
LABEL_126:
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        uint64_t v243 = v6;
        uint64_t v34 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v34;
        uint64_t v26 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v26)
        {
LABEL_30:
          *(void *)(a1 + 40) = v26;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v26 - 8))(a1 + 16, a2 + 16, v26);
        }
        else
        {
          long long v165 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v165;
        }
LABEL_66:
        uint64_t v166 = (int *)type metadata accessor for Blueprint();
        uint64_t v167 = v166[14];
        uint64_t v238 = a1 + v167;
        uint64_t v168 = a2 + v167;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v169 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v169 - 8) + 16))(v238, v168, v169);
        uint64_t v170 = v166[15];
        uint64_t v171 = a1 + v170;
        uint64_t v239 = a2 + v170;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v172 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v172 - 8) + 16))(v171, v239, v172);
        *(void *)(a1 + v166[16]) = *(void *)(a2 + v166[16]);
        sub_1B5F666C8();
        swift_retain();
        uint64_t v173 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        long long v174 = *(_OWORD *)(a2 + v173 + 24);
        *(_OWORD *)(a1 + v173 + 24) = v174;
        (**(void (***)(void))(v174 - 8))();
LABEL_67:
        swift_storeEnumTagMultiPayload();
        uint64_t v6 = v243;
        break;
      default:
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v7 - 8) + 64));
        break;
    }
    uint64_t v218 = *(int *)(v6 + 56);
    *(void *)(a1 + *(int *)(v6 + 52)) = *(void *)(a2 + *(int *)(v6 + 52));
    *(void *)(a1 + v218) = *(void *)(a2 + v218);
    sub_1B61B1F70();
    sub_1B61B1F70();
  }
  return a1;
}

unint64_t sub_1B5F666C8()
{
  unint64_t result = qword_1EB6433E8[0];
  if (!qword_1EB6433E8[0])
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, qword_1EB6433E8);
  }
  return result;
}

void sub_1B5F66720(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B61B2F80();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1B5F66774(uint64_t a1)
{
  type metadata accessor for BlueprintModifierResult();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      }
      uint64_t v8 = type metadata accessor for Blueprint();
      uint64_t v9 = a1 + *(int *)(v8 + 56);
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v10 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
      uint64_t v11 = a1 + *(int *)(v8 + 60);
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v12 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
      swift_release();
      type metadata accessor for BlueprintBookmark();
      uint64_t v13 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_38;
        case 1u:
          goto LABEL_40;
        case 2u:
        case 3u:
        case 4u:
          goto LABEL_37;
        default:
          goto LABEL_49;
      }
      goto LABEL_49;
    case 1u:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      }
      uint64_t v14 = type metadata accessor for Blueprint();
      uint64_t v15 = a1 + *(int *)(v14 + 56);
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v16 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
      uint64_t v17 = a1 + *(int *)(v14 + 60);
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v18 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
      swift_release();
      type metadata accessor for BlueprintBookmark();
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v20 = a1 + *(int *)(TupleTypeMetadata3 + 48);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v68 = sub_1B61AFCB0();
          if (!__swift_getEnumTagSinglePayload(v20, 1, v68)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v68 - 8) + 8))(v20, v68);
          }
          break;
        case 1u:
          uint64_t v69 = sub_1B61AFCB0();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v69 - 8) + 8))(v20, v69);
          break;
        case 2u:
        case 3u:
        case 4u:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
      uint64_t v58 = *(int *)(TupleTypeMetadata3 + 64);
      goto LABEL_46;
    case 2u:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      }
      uint64_t v21 = type metadata accessor for Blueprint();
      uint64_t v22 = a1 + *(int *)(v21 + 56);
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v23 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
      uint64_t v24 = a1 + *(int *)(v21 + 60);
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v25 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
      swift_release();
      type metadata accessor for BlueprintBookmark();
      uint64_t v13 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_38;
        case 1u:
          goto LABEL_40;
        case 2u:
        case 3u:
        case 4u:
          goto LABEL_37;
        default:
          goto LABEL_49;
      }
      goto LABEL_49;
    case 3u:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      }
      uint64_t v26 = type metadata accessor for Blueprint();
      uint64_t v27 = a1 + *(int *)(v26 + 56);
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v28 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
      uint64_t v29 = a1 + *(int *)(v26 + 60);
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v30 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
      swift_release();
      sub_1B5F666C8();
      type metadata accessor for BlueprintBookmark();
      uint64_t v31 = swift_getTupleTypeMetadata3();
      __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v31 + 48));
      uint64_t v13 = a1 + *(int *)(v31 + 64);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_38;
        case 1u:
          goto LABEL_40;
        case 2u:
        case 3u:
        case 4u:
          goto LABEL_37;
        default:
          goto LABEL_49;
      }
      goto LABEL_49;
    case 4u:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      }
      uint64_t v32 = type metadata accessor for Blueprint();
      uint64_t v33 = a1 + *(int *)(v32 + 56);
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v34 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
      uint64_t v35 = a1 + *(int *)(v32 + 60);
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v36 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
      uint64_t v37 = swift_release();
      MEMORY[0x1F4188790](v37);
      sub_1B5F666C8();
      type metadata accessor for BlueprintBookmark();
      unint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      __swift_destroy_boxed_opaque_existential_1(a1 + TupleTypeMetadata[12]);
      uint64_t v39 = a1 + TupleTypeMetadata[16];
      type metadata accessor for BlueprintBookmark();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v72 = sub_1B61AFCB0();
          if (!__swift_getEnumTagSinglePayload(v39, 1, v72)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v72 - 8) + 8))(v39, v72);
          }
          break;
        case 1u:
          uint64_t v73 = sub_1B61AFCB0();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v73 - 8) + 8))(v39, v73);
          break;
        case 2u:
        case 3u:
        case 4u:
          swift_bridgeObjectRelease();
          break;
        default:
          goto LABEL_31;
      }
      goto LABEL_31;
    case 5u:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      }
      uint64_t v40 = type metadata accessor for Blueprint();
      uint64_t v41 = a1 + *(int *)(v40 + 56);
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v42 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
      uint64_t v43 = a1 + *(int *)(v40 + 60);
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v44 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v43, v44);
      swift_release();
      sub_1B5F666C8();
      type metadata accessor for BlueprintBookmark();
      uint64_t v45 = swift_getTupleTypeMetadata3();
      __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v45 + 48));
      uint64_t v13 = a1 + *(int *)(v45 + 64);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_38;
        case 1u:
          goto LABEL_40;
        case 2u:
        case 3u:
        case 4u:
          goto LABEL_37;
        default:
          goto LABEL_49;
      }
      goto LABEL_49;
    case 6u:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      }
      uint64_t v46 = type metadata accessor for Blueprint();
      uint64_t v47 = a1 + *(int *)(v46 + 56);
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v48 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v47, v48);
      uint64_t v49 = a1 + *(int *)(v46 + 60);
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v50 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v49, v50);
      swift_release();
      sub_1B5F666C8();
      type metadata accessor for BlueprintViewActionResponse();
      uint64_t v51 = swift_getTupleTypeMetadata3();
      __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v51 + 48));
      swift_release();
      goto LABEL_49;
    case 7u:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      }
      uint64_t v52 = type metadata accessor for Blueprint();
      uint64_t v53 = a1 + *(int *)(v52 + 56);
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v54 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v53, v54);
      uint64_t v55 = a1 + *(int *)(v52 + 60);
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v56 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v56 - 8) + 8))(v55, v56);
      uint64_t v57 = swift_release();
      MEMORY[0x1F4188790](v57);
      sub_1B5F666C8();
      type metadata accessor for BlueprintViewActionResponse();
      unint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      __swift_destroy_boxed_opaque_existential_1(a1 + TupleTypeMetadata[12]);
      swift_release();
LABEL_31:
      uint64_t v58 = TupleTypeMetadata[20];
LABEL_46:
      uint64_t v70 = a1 + v58;
      if (!*(void *)(v70 + 40)) {
        goto LABEL_49;
      }
      uint64_t v7 = v70 + 16;
LABEL_48:
      __swift_destroy_boxed_opaque_existential_1(v7);
LABEL_49:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 8u:
    case 0xCu:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      }
      uint64_t v2 = type metadata accessor for Blueprint();
      uint64_t v3 = a1 + *(int *)(v2 + 56);
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v4 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
      uint64_t v5 = a1 + *(int *)(v2 + 60);
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v6 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      swift_release();
      sub_1B5F666C8();
      uint64_t v7 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      goto LABEL_48;
    case 9u:
      type metadata accessor for BlueprintBookmark();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v74 = sub_1B61AFCB0();
          if (!__swift_getEnumTagSinglePayload(a1, 1, v74)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v74 - 8) + 8))(a1, v74);
          }
          break;
        case 1u:
          uint64_t v75 = sub_1B61AFCB0();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v75 - 8) + 8))(a1, v75);
          break;
        case 2u:
        case 3u:
        case 4u:
          goto LABEL_37;
        default:
          goto LABEL_49;
      }
      goto LABEL_49;
    case 0xAu:

      goto LABEL_49;
    case 0xBu:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      }
      uint64_t v59 = type metadata accessor for Blueprint();
      uint64_t v60 = a1 + *(int *)(v59 + 56);
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v61 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v60, v61);
      uint64_t v62 = a1 + *(int *)(v59 + 60);
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v63 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8))(v62, v63);
      uint64_t v64 = swift_release();
      MEMORY[0x1F4188790](v64);
      sub_1B5F666C8();
      sub_1B5F66720(255, &qword_1E9DAA910, (void (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse);
      type metadata accessor for BlueprintBookmark();
      uint64_t v65 = swift_getTupleTypeMetadata();
      __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v65 + 48));
      swift_release();
      uint64_t v13 = a1 + *(int *)(v65 + 96);
      type metadata accessor for BlueprintBookmark();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
LABEL_38:
          uint64_t v66 = sub_1B61AFCB0();
          if (!__swift_getEnumTagSinglePayload(v13, 1, v66)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v66 - 8) + 8))(v13, v66);
          }
          break;
        case 1u:
LABEL_40:
          uint64_t v67 = sub_1B61AFCB0();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v67 - 8) + 8))(v13, v67);
          break;
        case 2u:
        case 3u:
        case 4u:
LABEL_37:
          swift_bridgeObjectRelease();
          break;
        default:
          goto LABEL_49;
      }
      goto LABEL_49;
    default:
      goto LABEL_49;
  }
}

uint64_t sub_1B5F681FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for BlueprintModifierResult();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v246 = a3;
      uint64_t v7 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v7;
      uint64_t v8 = *(void *)(a2 + 40);
      sub_1B61B1F70();
      if (v8)
      {
        *(void *)(a1 + 40) = v8;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 16, a2 + 16, v8);
      }
      else
      {
        long long v33 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v33;
      }
      uint64_t v34 = type metadata accessor for Blueprint();
      uint64_t v35 = *(int *)(v34 + 56);
      uint64_t v225 = v34;
      uint64_t v231 = a1 + v35;
      uint64_t v36 = a2;
      uint64_t v37 = a2 + v35;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v38 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v231, v37, v38);
      uint64_t v39 = *(int *)(v225 + 60);
      uint64_t v232 = a1 + v39;
      uint64_t v40 = v36 + v39;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      a2 = v36;
      swift_getWitnessTable();
      uint64_t v41 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v232, v40, v41);
      *(void *)(a1 + *(int *)(v225 + 64)) = *(void *)(v36 + *(int *)(v225 + 64));
      uint64_t v42 = type metadata accessor for BlueprintBookmark();
      swift_retain();
      uint64_t v43 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v44 = a1 + v43;
      uint64_t v45 = v36 + v43;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v46 = sub_1B61AFCB0();
          if (__swift_getEnumTagSinglePayload(v45, 1, v46)) {
            goto LABEL_52;
          }
          goto LABEL_127;
        case 1u:
          uint64_t v185 = sub_1B61AFCB0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v185 - 8) + 16))(v44, v45, v185);
          sub_1B5EBF460();
          *(_OWORD *)(v44 + *(int *)(v186 + 48)) = *(_OWORD *)(v45 + *(int *)(v186 + 48));
          goto LABEL_76;
        case 2u:
        case 3u:
          uint64_t v187 = *(void *)(v45 + 8);
          *(void *)uint64_t v44 = *(void *)v45;
          *(void *)(v44 + 8) = v187;
          *(_OWORD *)(v44 + 16) = *(_OWORD *)(v45 + 16);
          sub_1B61B1F70();
          goto LABEL_76;
        case 4u:
          uint64_t v188 = *(void *)(v45 + 8);
          *(void *)uint64_t v44 = *(void *)v45;
          *(void *)(v44 + 8) = v188;
          sub_1B61B1F70();
LABEL_76:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy((void *)v44, (const void *)v45, *(void *)(*(void *)(v42 - 8) + 64));
          break;
      }
      a3 = v246;
      goto LABEL_125;
    case 1u:
      uint64_t v247 = a3;
      uint64_t v9 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v9;
      uint64_t v10 = *(void *)(a2 + 40);
      sub_1B61B1F70();
      if (v10)
      {
        *(void *)(a1 + 40) = v10;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8))(a1 + 16, a2 + 16, v10);
      }
      else
      {
        long long v47 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v47;
      }
      uint64_t v48 = (int *)type metadata accessor for Blueprint();
      uint64_t v49 = v48[14];
      uint64_t v50 = a1 + v49;
      uint64_t v233 = a2 + v49;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v51 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v50, v233, v51);
      uint64_t v52 = v48[15];
      uint64_t v234 = a1 + v52;
      uint64_t v53 = a2 + v52;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v54 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v234, v53, v54);
      *(void *)(a1 + v48[16]) = *(void *)(a2 + v48[16]);
      uint64_t v55 = type metadata accessor for BlueprintBookmark();
      swift_retain();
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v57 = *(int *)(TupleTypeMetadata3 + 48);
      uint64_t v58 = (void *)(a1 + v57);
      uint64_t v59 = (void *)(a2 + v57);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v60 = sub_1B61AFCB0();
          if (__swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60))
          {
            sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
            memcpy(v58, v59, *(void *)(*(void *)(v61 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
            __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v60);
          }
          goto LABEL_115;
        case 1u:
          uint64_t v189 = sub_1B61AFCB0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v189 - 8) + 16))(v58, v59, v189);
          sub_1B5EBF460();
          *(_OWORD *)((char *)v58 + *(int *)(v190 + 48)) = *(_OWORD *)((char *)v59 + *(int *)(v190 + 48));
          goto LABEL_115;
        case 2u:
        case 3u:
          uint64_t v191 = v59[1];
          *uint64_t v58 = *v59;
          v58[1] = v191;
          *((_OWORD *)v58 + 1) = *((_OWORD *)v59 + 1);
          sub_1B61B1F70();
          goto LABEL_115;
        case 4u:
          uint64_t v192 = v59[1];
          *uint64_t v58 = *v59;
          v58[1] = v192;
          sub_1B61B1F70();
LABEL_115:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v58, v59, *(void *)(*(void *)(v55 - 8) + 64));
          break;
      }
      a3 = v247;
      uint64_t v213 = *(int *)(TupleTypeMetadata3 + 64);
      uint64_t v214 = a1 + v213;
      uint64_t v215 = a2 + v213;
      *(_OWORD *)uint64_t v214 = *(_OWORD *)v215;
      uint64_t v216 = (_OWORD *)(v214 + 16);
      long long v217 = (_OWORD *)(v215 + 16);
      uint64_t v218 = *(void *)(v215 + 40);
      if (v218) {
        goto LABEL_123;
      }
      long long v219 = *(_OWORD *)(v215 + 32);
      *uint64_t v216 = *v217;
      *(_OWORD *)(v214 + 32) = v219;
      goto LABEL_125;
    case 2u:
      uint64_t v246 = a3;
      uint64_t v11 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v11;
      uint64_t v12 = *(void *)(a2 + 40);
      sub_1B61B1F70();
      if (v12)
      {
        *(void *)(a1 + 40) = v12;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8))(a1 + 16, a2 + 16, v12);
      }
      else
      {
        long long v62 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v62;
      }
      uint64_t v63 = (int *)type metadata accessor for Blueprint();
      uint64_t v64 = v63[14];
      uint64_t v65 = a1 + v64;
      uint64_t v235 = a2 + v64;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v66 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16))(v65, v235, v66);
      uint64_t v67 = v63[15];
      uint64_t v236 = a1 + v67;
      uint64_t v68 = a2 + v67;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v69 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 16))(v236, v68, v69);
      *(void *)(a1 + v63[16]) = *(void *)(a2 + v63[16]);
      uint64_t v70 = type metadata accessor for BlueprintBookmark();
      swift_retain();
      uint64_t v71 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v44 = a1 + v71;
      uint64_t v45 = a2 + v71;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v46 = sub_1B61AFCB0();
          if (__swift_getEnumTagSinglePayload(v45, 1, v46)) {
            goto LABEL_52;
          }
          goto LABEL_127;
        case 1u:
          uint64_t v193 = sub_1B61AFCB0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v193 - 8) + 16))(v44, v45, v193);
          sub_1B5EBF460();
          *(_OWORD *)(v44 + *(int *)(v194 + 48)) = *(_OWORD *)(v45 + *(int *)(v194 + 48));
          goto LABEL_86;
        case 2u:
        case 3u:
          uint64_t v195 = *(void *)(v45 + 8);
          *(void *)uint64_t v44 = *(void *)v45;
          *(void *)(v44 + 8) = v195;
          *(_OWORD *)(v44 + 16) = *(_OWORD *)(v45 + 16);
          sub_1B61B1F70();
          goto LABEL_86;
        case 4u:
          uint64_t v196 = *(void *)(v45 + 8);
          *(void *)uint64_t v44 = *(void *)v45;
          *(void *)(v44 + 8) = v196;
          sub_1B61B1F70();
LABEL_86:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy((void *)v44, (const void *)v45, *(void *)(*(void *)(v70 - 8) + 64));
          break;
      }
      a3 = v246;
      goto LABEL_125;
    case 3u:
      uint64_t v246 = a3;
      uint64_t v13 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v13;
      uint64_t v14 = *(void *)(a2 + 40);
      sub_1B61B1F70();
      if (v14)
      {
        *(void *)(a1 + 40) = v14;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v14 - 8))(a1 + 16, a2 + 16, v14);
      }
      else
      {
        long long v72 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v72;
      }
      uint64_t v226 = (int *)type metadata accessor for Blueprint();
      uint64_t v73 = v226[14];
      uint64_t v74 = a1 + v73;
      uint64_t v75 = a2;
      uint64_t v76 = a2 + v73;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v77 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 16))(v74, v76, v77);
      uint64_t v78 = v226[15];
      uint64_t v237 = a1 + v78;
      uint64_t v79 = v75 + v78;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v80 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 16))(v237, v79, v80);
      *(void *)(a1 + v226[16]) = *(void *)(v75 + v226[16]);
      sub_1B5F666C8();
      uint64_t v81 = type metadata accessor for BlueprintBookmark();
      swift_retain();
      a2 = v75;
      uint64_t v82 = swift_getTupleTypeMetadata3();
      uint64_t v83 = *(int *)(v82 + 48);
      long long v84 = *(_OWORD *)(v75 + v83 + 24);
      *(_OWORD *)(a1 + v83 + 24) = v84;
      (**(void (***)(void))(v84 - 8))();
      uint64_t v85 = *(int *)(v82 + 64);
      uint64_t v44 = a1 + v85;
      uint64_t v45 = v75 + v85;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v46 = sub_1B61AFCB0();
          if (__swift_getEnumTagSinglePayload(v45, 1, v46)) {
            goto LABEL_52;
          }
          goto LABEL_127;
        case 1u:
          uint64_t v197 = sub_1B61AFCB0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v197 - 8) + 16))(v44, v45, v197);
          sub_1B5EBF460();
          *(_OWORD *)(v44 + *(int *)(v198 + 48)) = *(_OWORD *)(v45 + *(int *)(v198 + 48));
          goto LABEL_92;
        case 2u:
        case 3u:
          uint64_t v199 = *(void *)(v45 + 8);
          *(void *)uint64_t v44 = *(void *)v45;
          *(void *)(v44 + 8) = v199;
          *(_OWORD *)(v44 + 16) = *(_OWORD *)(v45 + 16);
          sub_1B61B1F70();
          goto LABEL_92;
        case 4u:
          uint64_t v200 = *(void *)(v45 + 8);
          *(void *)uint64_t v44 = *(void *)v45;
          *(void *)(v44 + 8) = v200;
          sub_1B61B1F70();
LABEL_92:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy((void *)v44, (const void *)v45, *(void *)(*(void *)(v81 - 8) + 64));
          break;
      }
      a3 = v246;
      goto LABEL_125;
    case 4u:
      uint64_t v248 = a3;
      uint64_t v15 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v15;
      uint64_t v16 = *(void *)(a2 + 40);
      sub_1B61B1F70();
      if (v16)
      {
        *(void *)(a1 + 40) = v16;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8))(a1 + 16, a2 + 16, v16);
      }
      else
      {
        long long v86 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v86;
      }
      uint64_t v87 = (int *)type metadata accessor for Blueprint();
      uint64_t v88 = v87[14];
      uint64_t v89 = a1 + v88;
      uint64_t v238 = a2 + v88;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v90 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 16))(v89, v238, v90);
      uint64_t v91 = v87[15];
      uint64_t v239 = a1 + v91;
      uint64_t v92 = a2 + v91;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v93 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 16))(v239, v92, v93);
      *(void *)(a1 + v87[16]) = *(void *)(a2 + v87[16]);
      uint64_t v94 = swift_retain();
      MEMORY[0x1F4188790](v94);
      sub_1B5F666C8();
      type metadata accessor for BlueprintBookmark();
      unint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v96 = TupleTypeMetadata[12];
      long long v97 = *(_OWORD *)(a2 + v96 + 24);
      *(_OWORD *)(a1 + v96 + 24) = v97;
      (**(void (***)(void))(v97 - 8))();
      uint64_t v98 = TupleTypeMetadata[16];
      uint64_t v99 = (void *)(a1 + v98);
      id v100 = (void *)(a2 + v98);
      uint64_t v101 = type metadata accessor for BlueprintBookmark();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v102 = sub_1B61AFCB0();
          if (__swift_getEnumTagSinglePayload((uint64_t)v100, 1, v102))
          {
            sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
            memcpy(v99, v100, *(void *)(*(void *)(v103 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v102 - 8) + 16))(v99, v100, v102);
            __swift_storeEnumTagSinglePayload((uint64_t)v99, 0, 1, v102);
          }
          goto LABEL_121;
        case 1u:
          uint64_t v201 = sub_1B61AFCB0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v201 - 8) + 16))(v99, v100, v201);
          sub_1B5EBF460();
          *(_OWORD *)((char *)v99 + *(int *)(v202 + 48)) = *(_OWORD *)((char *)v100 + *(int *)(v202 + 48));
          goto LABEL_121;
        case 2u:
        case 3u:
          uint64_t v203 = v100[1];
          *uint64_t v99 = *v100;
          v99[1] = v203;
          *((_OWORD *)v99 + 1) = *((_OWORD *)v100 + 1);
          sub_1B61B1F70();
          goto LABEL_121;
        case 4u:
          uint64_t v204 = v100[1];
          *uint64_t v99 = *v100;
          v99[1] = v204;
          sub_1B61B1F70();
LABEL_121:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v99, v100, *(void *)(*(void *)(v101 - 8) + 64));
          break;
      }
      a3 = v248;
      uint64_t v220 = TupleTypeMetadata[20];
      uint64_t v214 = a1 + v220;
      uint64_t v221 = a2 + v220;
      *(_OWORD *)uint64_t v214 = *(_OWORD *)v221;
      uint64_t v216 = (_OWORD *)(v214 + 16);
      long long v217 = (_OWORD *)(v221 + 16);
      uint64_t v218 = *(void *)(v221 + 40);
      if (v218)
      {
LABEL_123:
        *(void *)(v214 + 40) = v218;
        (**(void (***)(_OWORD *, _OWORD *))(v218 - 8))(v216, v217);
      }
      else
      {
        long long v222 = *(_OWORD *)(v221 + 32);
        *uint64_t v216 = *v217;
        *(_OWORD *)(v214 + 32) = v222;
      }
      goto LABEL_125;
    case 5u:
      uint64_t v246 = a3;
      uint64_t v17 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v17;
      uint64_t v18 = *(void *)(a2 + 40);
      sub_1B61B1F70();
      if (v18)
      {
        *(void *)(a1 + 40) = v18;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v18 - 8))(a1 + 16, a2 + 16, v18);
      }
      else
      {
        long long v104 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v104;
      }
      uint64_t v227 = (int *)type metadata accessor for Blueprint();
      uint64_t v105 = v227[14];
      uint64_t v106 = a1 + v105;
      uint64_t v107 = a2;
      uint64_t v108 = a2 + v105;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v109 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 16))(v106, v108, v109);
      uint64_t v110 = v227[15];
      uint64_t v240 = a1 + v110;
      uint64_t v111 = v107 + v110;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v112 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 16))(v240, v111, v112);
      *(void *)(a1 + v227[16]) = *(void *)(v107 + v227[16]);
      sub_1B5F666C8();
      uint64_t v113 = type metadata accessor for BlueprintBookmark();
      swift_retain();
      a2 = v107;
      uint64_t v114 = swift_getTupleTypeMetadata3();
      uint64_t v115 = *(int *)(v114 + 48);
      long long v116 = *(_OWORD *)(v107 + v115 + 24);
      *(_OWORD *)(a1 + v115 + 24) = v116;
      (**(void (***)(void))(v116 - 8))();
      uint64_t v117 = *(int *)(v114 + 64);
      uint64_t v44 = a1 + v117;
      uint64_t v45 = v107 + v117;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v46 = sub_1B61AFCB0();
          if (__swift_getEnumTagSinglePayload(v45, 1, v46))
          {
LABEL_52:
            sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
            memcpy((void *)v44, (const void *)v45, *(void *)(*(void *)(v118 - 8) + 64));
          }
          else
          {
LABEL_127:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
            __swift_storeEnumTagSinglePayload(v44, 0, 1, v46);
          }
          swift_storeEnumTagMultiPayload();
          a3 = v246;
          goto LABEL_125;
        case 1u:
          uint64_t v205 = sub_1B61AFCB0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v205 - 8) + 16))(v44, v45, v205);
          sub_1B5EBF460();
          *(_OWORD *)(v44 + *(int *)(v206 + 48)) = *(_OWORD *)(v45 + *(int *)(v206 + 48));
          goto LABEL_102;
        case 2u:
        case 3u:
          uint64_t v207 = *(void *)(v45 + 8);
          *(void *)uint64_t v44 = *(void *)v45;
          *(void *)(v44 + 8) = v207;
          *(_OWORD *)(v44 + 16) = *(_OWORD *)(v45 + 16);
          sub_1B61B1F70();
          goto LABEL_102;
        case 4u:
          uint64_t v208 = *(void *)(v45 + 8);
          *(void *)uint64_t v44 = *(void *)v45;
          *(void *)(v44 + 8) = v208;
          sub_1B61B1F70();
LABEL_102:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy((void *)v44, (const void *)v45, *(void *)(*(void *)(v113 - 8) + 64));
          break;
      }
      a3 = v246;
      goto LABEL_125;
    case 6u:
      uint64_t v249 = a3;
      uint64_t v19 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v19;
      uint64_t v20 = *(void *)(a2 + 40);
      sub_1B61B1F70();
      if (v20)
      {
        *(void *)(a1 + 40) = v20;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v20 - 8))(a1 + 16, a2 + 16, v20);
      }
      else
      {
        long long v119 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v119;
      }
      uint64_t v228 = (int *)type metadata accessor for Blueprint();
      uint64_t v120 = v228[14];
      uint64_t v121 = a1 + v120;
      uint64_t v122 = a2;
      uint64_t v123 = a2 + v120;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v124 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v124 - 8) + 16))(v121, v123, v124);
      uint64_t v125 = v228[15];
      uint64_t v241 = a1 + v125;
      uint64_t v126 = v122 + v125;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v127 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 16))(v241, v126, v127);
      *(void *)(a1 + v228[16]) = *(void *)(v122 + v228[16]);
      sub_1B5F666C8();
      type metadata accessor for BlueprintViewActionResponse();
      swift_retain();
      a2 = v122;
      uint64_t v128 = swift_getTupleTypeMetadata3();
      uint64_t v129 = *(int *)(v128 + 48);
      long long v130 = *(_OWORD *)(v122 + v129 + 24);
      *(_OWORD *)(a1 + v129 + 24) = v130;
      (**(void (***)(void))(v130 - 8))();
      *(void *)(a1 + *(int *)(v128 + 64)) = *(void *)(v122 + *(int *)(v128 + 64));
      swift_retain();
      goto LABEL_65;
    case 7u:
      uint64_t v250 = a3;
      uint64_t v21 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v21;
      uint64_t v22 = *(void *)(a2 + 40);
      sub_1B61B1F70();
      if (v22)
      {
        *(void *)(a1 + 40) = v22;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v22 - 8))(a1 + 16, a2 + 16, v22);
      }
      else
      {
        long long v131 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v131;
      }
      uint64_t v132 = (int *)type metadata accessor for Blueprint();
      uint64_t v133 = v132[14];
      uint64_t v134 = a1 + v133;
      uint64_t v242 = a2 + v133;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v135 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v135 - 8) + 16))(v134, v242, v135);
      uint64_t v136 = v132[15];
      uint64_t v243 = a1 + v136;
      uint64_t v137 = a2 + v136;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v138 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v138 - 8) + 16))(v243, v137, v138);
      *(void *)(a1 + v132[16]) = *(void *)(a2 + v132[16]);
      uint64_t v139 = swift_retain();
      MEMORY[0x1F4188790](v139);
      sub_1B5F666C8();
      type metadata accessor for BlueprintViewActionResponse();
      long long v140 = (int *)swift_getTupleTypeMetadata();
      uint64_t v141 = v140[12];
      long long v142 = *(_OWORD *)(a2 + v141 + 24);
      *(_OWORD *)(a1 + v141 + 24) = v142;
      (**(void (***)(void))(v142 - 8))();
      *(void *)(a1 + v140[16]) = *(void *)(a2 + v140[16]);
      uint64_t v143 = v140[20];
      uint64_t v144 = a1 + v143;
      uint64_t v145 = a2 + v143;
      *(_OWORD *)uint64_t v144 = *(_OWORD *)v145;
      long long v146 = (_OWORD *)(v145 + 16);
      uint64_t v147 = *(void *)(v145 + 40);
      swift_retain();
      if (v147)
      {
        *(void *)(v144 + 40) = v147;
        (**(void (***)(uint64_t, _OWORD *, uint64_t))(v147 - 8))(v144 + 16, v146, v147);
      }
      else
      {
        long long v180 = v146[1];
        *(_OWORD *)(v144 + 16) = *v146;
        *(_OWORD *)(v144 + 32) = v180;
      }
      a3 = v250;
      goto LABEL_125;
    case 8u:
      uint64_t v249 = a3;
      uint64_t v23 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v23;
      uint64_t v24 = *(void *)(a2 + 40);
      sub_1B61B1F70();
      if (v24) {
        goto LABEL_28;
      }
      long long v148 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(a1 + 32) = v148;
      goto LABEL_64;
    case 9u:
      uint64_t v25 = type metadata accessor for BlueprintBookmark();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v26 = sub_1B61AFCB0();
          if (__swift_getEnumTagSinglePayload(a2, 1, v26))
          {
            sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v27 - 8) + 64));
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
            __swift_storeEnumTagSinglePayload(a1, 0, 1, v26);
          }
          goto LABEL_111;
        case 1u:
          uint64_t v181 = sub_1B61AFCB0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v181 - 8) + 16))(a1, a2, v181);
          sub_1B5EBF460();
          *(_OWORD *)(a1 + *(int *)(v182 + 48)) = *(_OWORD *)(a2 + *(int *)(v182 + 48));
          goto LABEL_111;
        case 2u:
        case 3u:
          uint64_t v183 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v183;
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          sub_1B61B1F70();
          goto LABEL_111;
        case 4u:
          uint64_t v184 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v184;
          sub_1B61B1F70();
LABEL_111:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v25 - 8) + 64));
          break;
      }
      goto LABEL_125;
    case 0xAu:
      uint64_t v28 = *(void *)a2;
      id v29 = *(id *)a2;
      *(void *)a1 = v28;
      goto LABEL_125;
    case 0xBu:
      uint64_t v251 = a3;
      uint64_t v30 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v30;
      uint64_t v31 = *(void *)(a2 + 40);
      sub_1B61B1F70();
      if (v31)
      {
        *(void *)(a1 + 40) = v31;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v31 - 8))(a1 + 16, a2 + 16, v31);
      }
      else
      {
        long long v149 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v149;
      }
      uint64_t v229 = (int *)type metadata accessor for Blueprint();
      uint64_t v150 = v229[14];
      uint64_t v151 = a1 + v150;
      uint64_t v152 = a2;
      uint64_t v153 = a2 + v150;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v154 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v154 - 8) + 16))(v151, v153, v154);
      uint64_t v155 = v229[15];
      uint64_t v244 = a1 + v155;
      uint64_t v156 = v152 + v155;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v157 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v157 - 8) + 16))(v244, v156, v157);
      *(void *)(a1 + v229[16]) = *(void *)(v152 + v229[16]);
      uint64_t v158 = swift_retain();
      MEMORY[0x1F4188790](v158);
      sub_1B5F666C8();
      sub_1B5F66720(255, &qword_1E9DAA910, (void (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse);
      type metadata accessor for BlueprintBookmark();
      uint64_t v159 = (int *)swift_getTupleTypeMetadata();
      uint64_t v160 = v159[12];
      long long v161 = *(_OWORD *)(v152 + v160 + 24);
      *(_OWORD *)(a1 + v160 + 24) = v161;
      (**(void (***)(void))(v161 - 8))();
      *(void *)(a1 + v159[16]) = *(void *)(v152 + v159[16]);
      *(unsigned char *)(a1 + v159[20]) = *(unsigned char *)(v152 + v159[20]);
      uint64_t v162 = v159[24];
      uint64_t v163 = (void *)(a1 + v162);
      uint64_t v164 = v152;
      long long v165 = (void *)(v152 + v162);
      uint64_t v166 = type metadata accessor for BlueprintBookmark();
      swift_retain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v167 = sub_1B61AFCB0();
          if (__swift_getEnumTagSinglePayload((uint64_t)v165, 1, v167))
          {
            sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
            memcpy(v163, v165, *(void *)(*(void *)(v168 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v167 - 8) + 16))(v163, v165, v167);
            __swift_storeEnumTagSinglePayload((uint64_t)v163, 0, 1, v167);
          }
          a2 = v164;
          swift_storeEnumTagMultiPayload();
          a3 = v251;
          goto LABEL_125;
        case 1u:
          uint64_t v209 = sub_1B61AFCB0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v209 - 8) + 16))(v163, v165, v209);
          sub_1B5EBF460();
          *(_OWORD *)((char *)v163 + *(int *)(v210 + 48)) = *(_OWORD *)((char *)v165 + *(int *)(v210 + 48));
          goto LABEL_108;
        case 2u:
        case 3u:
          uint64_t v211 = v165[1];
          *uint64_t v163 = *v165;
          v163[1] = v211;
          *((_OWORD *)v163 + 1) = *((_OWORD *)v165 + 1);
          sub_1B61B1F70();
          goto LABEL_108;
        case 4u:
          uint64_t v212 = v165[1];
          *uint64_t v163 = *v165;
          v163[1] = v212;
          sub_1B61B1F70();
LABEL_108:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v163, v165, *(void *)(*(void *)(v166 - 8) + 64));
          break;
      }
      a2 = v164;
      a3 = v251;
LABEL_125:
      swift_storeEnumTagMultiPayload();
      break;
    case 0xCu:
      uint64_t v249 = a3;
      uint64_t v32 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v32;
      uint64_t v24 = *(void *)(a2 + 40);
      sub_1B61B1F70();
      if (v24)
      {
LABEL_28:
        *(void *)(a1 + 40) = v24;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v24 - 8))(a1 + 16, a2 + 16, v24);
      }
      else
      {
        long long v169 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v169;
      }
LABEL_64:
      uint64_t v230 = (int *)type metadata accessor for Blueprint();
      uint64_t v170 = v230[14];
      uint64_t v171 = a1 + v170;
      uint64_t v172 = a2;
      uint64_t v173 = a2 + v170;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v174 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v174 - 8) + 16))(v171, v173, v174);
      uint64_t v175 = v230[15];
      uint64_t v245 = a1 + v175;
      uint64_t v176 = v172 + v175;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v177 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v177 - 8) + 16))(v245, v176, v177);
      *(void *)(a1 + v230[16]) = *(void *)(v172 + v230[16]);
      sub_1B5F666C8();
      swift_retain();
      a2 = v172;
      uint64_t v178 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      long long v179 = *(_OWORD *)(v172 + v178 + 24);
      *(_OWORD *)(a1 + v178 + 24) = v179;
      (**(void (***)(void))(v179 - 8))();
LABEL_65:
      swift_storeEnumTagMultiPayload();
      a3 = v249;
      break;
    default:
      memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v6 - 8) + 64));
      break;
  }
  uint64_t v223 = *(int *)(a3 + 56);
  *(void *)(a1 + *(int *)(a3 + 52)) = *(void *)(a2 + *(int *)(a3 + 52));
  *(void *)(a1 + v223) = *(void *)(a2 + v223);
  sub_1B61B1F70();
  sub_1B61B1F70();
  return a1;
}

uint64_t sub_1B5F6B340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = type metadata accessor for BlueprintModifierResult();
    uint64_t v7 = *(void *)(v6 - 8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v218 = a3;
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v8 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v8)
        {
          *(void *)(a1 + 40) = v8;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 16, a2 + 16, v8);
        }
        else
        {
          long long v23 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v23;
        }
        uint64_t v24 = (int *)type metadata accessor for Blueprint();
        uint64_t v25 = v24[14];
        uint64_t v26 = a1 + v25;
        uint64_t v198 = a2 + v25;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v27 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v26, v198, v27);
        uint64_t v28 = v24[15];
        uint64_t v29 = a1 + v28;
        uint64_t v199 = a2 + v28;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v30 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v29, v199, v30);
        *(void *)(a1 + v24[16]) = *(void *)(a2 + v24[16]);
        uint64_t v31 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        uint64_t v32 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v33 = a1 + v32;
        uint64_t v34 = a2 + v32;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v35 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload(v34, 1, v35)) {
              goto LABEL_53;
            }
            goto LABEL_126;
          case 1u:
            uint64_t v173 = sub_1B61AFCB0();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v173 - 8) + 16))(v33, v34, v173);
            sub_1B5EBF460();
            *(_OWORD *)(v33 + *(int *)(v174 + 48)) = *(_OWORD *)(v34 + *(int *)(v174 + 48));
            goto LABEL_76;
          case 2u:
          case 3u:
            *(void *)uint64_t v33 = *(void *)v34;
            *(void *)(v33 + 8) = *(void *)(v34 + 8);
            *(_OWORD *)(v33 + 16) = *(_OWORD *)(v34 + 16);
            sub_1B61B1F70();
            goto LABEL_76;
          case 4u:
            *(void *)uint64_t v33 = *(void *)v34;
            *(void *)(v33 + 8) = *(void *)(v34 + 8);
            sub_1B61B1F70();
LABEL_76:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)v33, (const void *)v34, *(void *)(*(void *)(v31 - 8) + 64));
            break;
        }
        goto LABEL_121;
      case 1u:
        uint64_t v219 = a3;
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v9 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v9)
        {
          *(void *)(a1 + 40) = v9;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(a1 + 16, a2 + 16, v9);
        }
        else
        {
          long long v36 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v36;
        }
        uint64_t v37 = (int *)type metadata accessor for Blueprint();
        uint64_t v38 = v37[14];
        uint64_t v200 = a1 + v38;
        uint64_t v39 = a2 + v38;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v40 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v200, v39, v40);
        uint64_t v41 = v37[15];
        uint64_t v42 = a1 + v41;
        uint64_t v201 = a2 + v41;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v43 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v42, v201, v43);
        *(void *)(a1 + v37[16]) = *(void *)(a2 + v37[16]);
        uint64_t v44 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        uint64_t v46 = *(int *)(TupleTypeMetadata3 + 48);
        long long v47 = (void *)(a1 + v46);
        uint64_t v48 = (void *)(a2 + v46);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v49 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1, v49))
            {
              sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
              __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v49);
            }
            swift_storeEnumTagMultiPayload();
            a3 = v219;
            goto LABEL_84;
          case 1u:
            uint64_t v175 = sub_1B61AFCB0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v175 - 8) + 16))(v47, v48, v175);
            sub_1B5EBF460();
            *(_OWORD *)((char *)v47 + *(int *)(v176 + 48)) = *(_OWORD *)((char *)v48 + *(int *)(v176 + 48));
            goto LABEL_82;
          case 2u:
          case 3u:
            *long long v47 = *v48;
            v47[1] = v48[1];
            *((_OWORD *)v47 + 1) = *((_OWORD *)v48 + 1);
            sub_1B61B1F70();
            goto LABEL_82;
          case 4u:
            *long long v47 = *v48;
            v47[1] = v48[1];
            sub_1B61B1F70();
LABEL_82:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v47, v48, *(void *)(*(void *)(v44 - 8) + 64));
            break;
        }
        a3 = v219;
LABEL_84:
        uint64_t v177 = *(int *)(TupleTypeMetadata3 + 64);
        uint64_t v178 = a1 + v177;
        uint64_t v179 = a2 + v177;
        *(_OWORD *)uint64_t v178 = *(_OWORD *)v179;
        long long v180 = (_OWORD *)(v178 + 16);
        uint64_t v181 = (_OWORD *)(v179 + 16);
        uint64_t v182 = *(void *)(v179 + 40);
        if (v182) {
          goto LABEL_85;
        }
        long long v183 = *(_OWORD *)(v179 + 32);
        *long long v180 = *v181;
        *(_OWORD *)(v178 + 32) = v183;
        goto LABEL_121;
      case 2u:
        uint64_t v218 = a3;
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v10 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v10)
        {
          *(void *)(a1 + 40) = v10;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8))(a1 + 16, a2 + 16, v10);
        }
        else
        {
          long long v51 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v51;
        }
        uint64_t v52 = (int *)type metadata accessor for Blueprint();
        uint64_t v53 = v52[14];
        uint64_t v202 = a1 + v53;
        uint64_t v54 = a2 + v53;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v55 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 16))(v202, v54, v55);
        uint64_t v56 = v52[15];
        uint64_t v57 = a1 + v56;
        uint64_t v203 = a2 + v56;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v58 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v57, v203, v58);
        *(void *)(a1 + v52[16]) = *(void *)(a2 + v52[16]);
        uint64_t v59 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        uint64_t v60 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v33 = a1 + v60;
        uint64_t v34 = a2 + v60;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v35 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload(v34, 1, v35)) {
              goto LABEL_53;
            }
            goto LABEL_126;
          case 1u:
            uint64_t v184 = sub_1B61AFCB0();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v184 - 8) + 16))(v33, v34, v184);
            sub_1B5EBF460();
            *(_OWORD *)(v33 + *(int *)(v185 + 48)) = *(_OWORD *)(v34 + *(int *)(v185 + 48));
            goto LABEL_91;
          case 2u:
          case 3u:
            *(void *)uint64_t v33 = *(void *)v34;
            *(void *)(v33 + 8) = *(void *)(v34 + 8);
            *(_OWORD *)(v33 + 16) = *(_OWORD *)(v34 + 16);
            sub_1B61B1F70();
            goto LABEL_91;
          case 4u:
            *(void *)uint64_t v33 = *(void *)v34;
            *(void *)(v33 + 8) = *(void *)(v34 + 8);
            sub_1B61B1F70();
LABEL_91:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)v33, (const void *)v34, *(void *)(*(void *)(v59 - 8) + 64));
            break;
        }
        goto LABEL_121;
      case 3u:
        uint64_t v218 = a3;
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v11 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v11)
        {
          *(void *)(a1 + 40) = v11;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8))(a1 + 16, a2 + 16, v11);
        }
        else
        {
          long long v61 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v61;
        }
        long long v62 = (int *)type metadata accessor for Blueprint();
        uint64_t v63 = v62[14];
        uint64_t v204 = a1 + v63;
        uint64_t v64 = a2 + v63;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v65 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 16))(v204, v64, v65);
        uint64_t v66 = v62[15];
        uint64_t v67 = a1 + v66;
        uint64_t v205 = a2 + v66;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v68 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 16))(v67, v205, v68);
        *(void *)(a1 + v62[16]) = *(void *)(a2 + v62[16]);
        sub_1B5F666C8();
        uint64_t v69 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        uint64_t v70 = swift_getTupleTypeMetadata3();
        uint64_t v71 = *(int *)(v70 + 48);
        uint64_t v72 = a1 + v71;
        uint64_t v73 = *(void *)(a2 + v71 + 24);
        *(void *)(v72 + 24) = v73;
        *(void *)(v72 + 32) = *(void *)(a2 + v71 + 32);
        (**(void (***)(void))(v73 - 8))();
        uint64_t v74 = *(int *)(v70 + 64);
        uint64_t v33 = a1 + v74;
        uint64_t v34 = a2 + v74;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v35 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload(v34, 1, v35)) {
              goto LABEL_53;
            }
            goto LABEL_126;
          case 1u:
            uint64_t v186 = sub_1B61AFCB0();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v186 - 8) + 16))(v33, v34, v186);
            sub_1B5EBF460();
            *(_OWORD *)(v33 + *(int *)(v187 + 48)) = *(_OWORD *)(v34 + *(int *)(v187 + 48));
            goto LABEL_97;
          case 2u:
          case 3u:
            *(void *)uint64_t v33 = *(void *)v34;
            *(void *)(v33 + 8) = *(void *)(v34 + 8);
            *(_OWORD *)(v33 + 16) = *(_OWORD *)(v34 + 16);
            sub_1B61B1F70();
            goto LABEL_97;
          case 4u:
            *(void *)uint64_t v33 = *(void *)v34;
            *(void *)(v33 + 8) = *(void *)(v34 + 8);
            sub_1B61B1F70();
LABEL_97:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)v33, (const void *)v34, *(void *)(*(void *)(v69 - 8) + 64));
            break;
        }
        goto LABEL_121;
      case 4u:
        uint64_t v220 = a3;
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v12 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v12)
        {
          *(void *)(a1 + 40) = v12;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8))(a1 + 16, a2 + 16, v12);
        }
        else
        {
          long long v75 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v75;
        }
        uint64_t v76 = (int *)type metadata accessor for Blueprint();
        uint64_t v77 = v76[14];
        uint64_t v206 = a1 + v77;
        uint64_t v78 = a2 + v77;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v79 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 16))(v206, v78, v79);
        uint64_t v80 = v76[15];
        uint64_t v81 = a1 + v80;
        uint64_t v207 = a2 + v80;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v82 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 16))(v81, v207, v82);
        *(void *)(a1 + v76[16]) = *(void *)(a2 + v76[16]);
        uint64_t v83 = swift_retain();
        MEMORY[0x1F4188790](v83);
        sub_1B5F666C8();
        type metadata accessor for BlueprintBookmark();
        unint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
        uint64_t v85 = TupleTypeMetadata[12];
        uint64_t v86 = a1 + v85;
        uint64_t v87 = *(void *)(a2 + v85 + 24);
        *(void *)(v86 + 24) = v87;
        *(void *)(v86 + 32) = *(void *)(a2 + v85 + 32);
        (**(void (***)(void))(v87 - 8))();
        uint64_t v88 = TupleTypeMetadata[16];
        uint64_t v89 = (void *)(a1 + v88);
        uint64_t v90 = (void *)(a2 + v88);
        uint64_t v91 = type metadata accessor for BlueprintBookmark();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v92 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload((uint64_t)v90, 1, v92))
            {
              sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy(v89, v90, *(void *)(*(void *)(v93 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v92 - 8) + 16))(v89, v90, v92);
              __swift_storeEnumTagSinglePayload((uint64_t)v89, 0, 1, v92);
            }
            swift_storeEnumTagMultiPayload();
            a3 = v220;
            goto LABEL_105;
          case 1u:
            uint64_t v188 = sub_1B61AFCB0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v188 - 8) + 16))(v89, v90, v188);
            sub_1B5EBF460();
            *(_OWORD *)((char *)v89 + *(int *)(v189 + 48)) = *(_OWORD *)((char *)v90 + *(int *)(v189 + 48));
            goto LABEL_103;
          case 2u:
          case 3u:
            void *v89 = *v90;
            v89[1] = v90[1];
            *((_OWORD *)v89 + 1) = *((_OWORD *)v90 + 1);
            sub_1B61B1F70();
            goto LABEL_103;
          case 4u:
            void *v89 = *v90;
            v89[1] = v90[1];
            sub_1B61B1F70();
LABEL_103:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
            break;
        }
        a3 = v220;
LABEL_105:
        uint64_t v190 = TupleTypeMetadata[20];
        uint64_t v178 = a1 + v190;
        uint64_t v191 = a2 + v190;
        *(_OWORD *)uint64_t v178 = *(_OWORD *)v191;
        long long v180 = (_OWORD *)(v178 + 16);
        uint64_t v181 = (_OWORD *)(v191 + 16);
        uint64_t v182 = *(void *)(v191 + 40);
        if (v182)
        {
LABEL_85:
          *(void *)(v178 + 40) = v182;
          (**(void (***)(_OWORD *, _OWORD *))(v182 - 8))(v180, v181);
        }
        else
        {
          long long v192 = *(_OWORD *)(v191 + 32);
          *long long v180 = *v181;
          *(_OWORD *)(v178 + 32) = v192;
        }
        goto LABEL_121;
      case 5u:
        uint64_t v218 = a3;
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v13 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v13)
        {
          *(void *)(a1 + 40) = v13;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8))(a1 + 16, a2 + 16, v13);
        }
        else
        {
          long long v94 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v94;
        }
        unint64_t v95 = (int *)type metadata accessor for Blueprint();
        uint64_t v96 = v95[14];
        uint64_t v208 = a1 + v96;
        uint64_t v97 = a2 + v96;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v98 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 16))(v208, v97, v98);
        uint64_t v99 = v95[15];
        uint64_t v100 = a1 + v99;
        uint64_t v209 = a2 + v99;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v101 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 16))(v100, v209, v101);
        *(void *)(a1 + v95[16]) = *(void *)(a2 + v95[16]);
        sub_1B5F666C8();
        uint64_t v102 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        uint64_t v103 = swift_getTupleTypeMetadata3();
        uint64_t v104 = *(int *)(v103 + 48);
        uint64_t v105 = a1 + v104;
        uint64_t v106 = *(void *)(a2 + v104 + 24);
        *(void *)(v105 + 24) = v106;
        *(void *)(v105 + 32) = *(void *)(a2 + v104 + 32);
        (**(void (***)(void))(v106 - 8))();
        uint64_t v107 = *(int *)(v103 + 64);
        uint64_t v33 = a1 + v107;
        uint64_t v34 = a2 + v107;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v35 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload(v34, 1, v35))
            {
LABEL_53:
              sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy((void *)v33, (const void *)v34, *(void *)(*(void *)(v108 - 8) + 64));
            }
            else
            {
LABEL_126:
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
              __swift_storeEnumTagSinglePayload(v33, 0, 1, v35);
            }
            goto LABEL_131;
          case 1u:
            uint64_t v193 = sub_1B61AFCB0();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v193 - 8) + 16))(v33, v34, v193);
            sub_1B5EBF460();
            *(_OWORD *)(v33 + *(int *)(v194 + 48)) = *(_OWORD *)(v34 + *(int *)(v194 + 48));
            goto LABEL_111;
          case 2u:
          case 3u:
            *(void *)uint64_t v33 = *(void *)v34;
            *(void *)(v33 + 8) = *(void *)(v34 + 8);
            *(_OWORD *)(v33 + 16) = *(_OWORD *)(v34 + 16);
            sub_1B61B1F70();
            goto LABEL_111;
          case 4u:
            *(void *)uint64_t v33 = *(void *)v34;
            *(void *)(v33 + 8) = *(void *)(v34 + 8);
            sub_1B61B1F70();
LABEL_111:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)v33, (const void *)v34, *(void *)(*(void *)(v102 - 8) + 64));
            break;
        }
        goto LABEL_121;
      case 6u:
        uint64_t v221 = a3;
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v14 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v14)
        {
          *(void *)(a1 + 40) = v14;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v14 - 8))(a1 + 16, a2 + 16, v14);
        }
        else
        {
          long long v109 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v109;
        }
        uint64_t v110 = (int *)type metadata accessor for Blueprint();
        uint64_t v111 = v110[14];
        uint64_t v210 = a1 + v111;
        uint64_t v112 = a2 + v111;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v113 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 16))(v210, v112, v113);
        uint64_t v114 = v110[15];
        uint64_t v115 = a1 + v114;
        uint64_t v211 = a2 + v114;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v116 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 16))(v115, v211, v116);
        *(void *)(a1 + v110[16]) = *(void *)(a2 + v110[16]);
        sub_1B5F666C8();
        type metadata accessor for BlueprintViewActionResponse();
        swift_retain();
        uint64_t v117 = swift_getTupleTypeMetadata3();
        uint64_t v118 = *(int *)(v117 + 48);
        uint64_t v119 = a1 + v118;
        uint64_t v120 = *(void *)(a2 + v118 + 24);
        *(void *)(v119 + 24) = v120;
        *(void *)(v119 + 32) = *(void *)(a2 + v118 + 32);
        (**(void (***)(void))(v120 - 8))();
        *(void *)(a1 + *(int *)(v117 + 64)) = *(void *)(a2 + *(int *)(v117 + 64));
        swift_retain();
        goto LABEL_66;
      case 7u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v15 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v15)
        {
          *(void *)(a1 + 40) = v15;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8))(a1 + 16, a2 + 16, v15);
        }
        else
        {
          long long v121 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v121;
        }
        uint64_t v122 = (int *)type metadata accessor for Blueprint();
        uint64_t v123 = v122[14];
        uint64_t v212 = a1 + v123;
        uint64_t v124 = a2 + v123;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v125 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 16))(v212, v124, v125);
        uint64_t v126 = v122[15];
        uint64_t v127 = a1 + v126;
        uint64_t v213 = a2 + v126;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v128 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v128 - 8) + 16))(v127, v213, v128);
        *(void *)(a1 + v122[16]) = *(void *)(a2 + v122[16]);
        uint64_t v129 = swift_retain();
        MEMORY[0x1F4188790](v129);
        sub_1B5F666C8();
        type metadata accessor for BlueprintViewActionResponse();
        long long v130 = (int *)swift_getTupleTypeMetadata();
        uint64_t v131 = v130[12];
        uint64_t v132 = a1 + v131;
        uint64_t v133 = *(void *)(a2 + v131 + 24);
        *(void *)(v132 + 24) = v133;
        *(void *)(v132 + 32) = *(void *)(a2 + v131 + 32);
        (**(void (***)(void))(v133 - 8))();
        *(void *)(a1 + v130[16]) = *(void *)(a2 + v130[16]);
        uint64_t v134 = v130[20];
        uint64_t v135 = a1 + v134;
        uint64_t v136 = a2 + v134;
        *(_OWORD *)uint64_t v135 = *(_OWORD *)v136;
        uint64_t v137 = (_OWORD *)(v136 + 16);
        uint64_t v138 = *(void *)(v136 + 40);
        swift_retain();
        if (v138)
        {
          *(void *)(v135 + 40) = v138;
          (**(void (***)(uint64_t, _OWORD *, uint64_t))(v138 - 8))(v135 + 16, v137, v138);
        }
        else
        {
          long long v170 = v137[1];
          *(_OWORD *)(v135 + 16) = *v137;
          *(_OWORD *)(v135 + 32) = v170;
        }
        goto LABEL_121;
      case 8u:
        uint64_t v221 = a3;
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v16 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v16) {
          goto LABEL_29;
        }
        long long v139 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v139;
        goto LABEL_65;
      case 9u:
        uint64_t v17 = type metadata accessor for BlueprintBookmark();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v18 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload(a2, 1, v18))
            {
              sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v19 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
              __swift_storeEnumTagSinglePayload(a1, 0, 1, v18);
            }
            goto LABEL_120;
          case 1u:
            uint64_t v171 = sub_1B61AFCB0();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v171 - 8) + 16))(a1, a2, v171);
            sub_1B5EBF460();
            *(_OWORD *)(a1 + *(int *)(v172 + 48)) = *(_OWORD *)(a2 + *(int *)(v172 + 48));
            goto LABEL_120;
          case 2u:
          case 3u:
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
            sub_1B61B1F70();
            goto LABEL_120;
          case 4u:
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            sub_1B61B1F70();
LABEL_120:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v17 - 8) + 64));
            break;
        }
        goto LABEL_121;
      case 0xAu:
        uint64_t v20 = *(void *)a2;
        id v21 = *(id *)a2;
        *(void *)a1 = v20;
        goto LABEL_121;
      case 0xBu:
        uint64_t v218 = a3;
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v22 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v22)
        {
          *(void *)(a1 + 40) = v22;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v22 - 8))(a1 + 16, a2 + 16, v22);
        }
        else
        {
          long long v140 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v140;
        }
        uint64_t v141 = (int *)type metadata accessor for Blueprint();
        uint64_t v142 = v141[14];
        uint64_t v214 = a1 + v142;
        uint64_t v143 = a2 + v142;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v144 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v144 - 8) + 16))(v214, v143, v144);
        uint64_t v145 = v141[15];
        uint64_t v146 = a1 + v145;
        uint64_t v215 = a2 + v145;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v147 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v147 - 8) + 16))(v146, v215, v147);
        *(void *)(a1 + v141[16]) = *(void *)(a2 + v141[16]);
        uint64_t v148 = swift_retain();
        MEMORY[0x1F4188790](v148);
        sub_1B5F666C8();
        sub_1B5F66720(255, &qword_1E9DAA910, (void (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse);
        type metadata accessor for BlueprintBookmark();
        long long v149 = (int *)swift_getTupleTypeMetadata();
        uint64_t v150 = v149[12];
        uint64_t v151 = a1 + v150;
        uint64_t v152 = *(void *)(a2 + v150 + 24);
        *(void *)(v151 + 24) = v152;
        *(void *)(v151 + 32) = *(void *)(a2 + v150 + 32);
        (**(void (***)(void))(v152 - 8))();
        *(void *)(a1 + v149[16]) = *(void *)(a2 + v149[16]);
        *(unsigned char *)(a1 + v149[20]) = *(unsigned char *)(a2 + v149[20]);
        uint64_t v153 = v149[24];
        uint64_t v154 = (void *)(a1 + v153);
        uint64_t v155 = (void *)(a2 + v153);
        uint64_t v156 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v157 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload((uint64_t)v155, 1, v157))
            {
              sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy(v154, v155, *(void *)(*(void *)(v158 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v157 - 8) + 16))(v154, v155, v157);
              __swift_storeEnumTagSinglePayload((uint64_t)v154, 0, 1, v157);
            }
LABEL_131:
            a3 = v218;
            swift_storeEnumTagMultiPayload();
            break;
          case 1u:
            uint64_t v195 = sub_1B61AFCB0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v195 - 8) + 16))(v154, v155, v195);
            sub_1B5EBF460();
            *(_OWORD *)((char *)v154 + *(int *)(v196 + 48)) = *(_OWORD *)((char *)v155 + *(int *)(v196 + 48));
            goto LABEL_117;
          case 2u:
          case 3u:
            *uint64_t v154 = *v155;
            v154[1] = v155[1];
            *((_OWORD *)v154 + 1) = *((_OWORD *)v155 + 1);
            sub_1B61B1F70();
            goto LABEL_117;
          case 4u:
            *uint64_t v154 = *v155;
            v154[1] = v155[1];
            sub_1B61B1F70();
LABEL_117:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v154, v155, *(void *)(*(void *)(v156 - 8) + 64));
            break;
        }
LABEL_121:
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        uint64_t v221 = a3;
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v16 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v16)
        {
LABEL_29:
          *(void *)(a1 + 40) = v16;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8))(a1 + 16, a2 + 16, v16);
        }
        else
        {
          long long v159 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v159;
        }
LABEL_65:
        uint64_t v160 = (int *)type metadata accessor for Blueprint();
        uint64_t v161 = v160[14];
        uint64_t v216 = a1 + v161;
        uint64_t v162 = a2 + v161;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v163 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v163 - 8) + 16))(v216, v162, v163);
        uint64_t v164 = v160[15];
        uint64_t v165 = a1 + v164;
        uint64_t v217 = a2 + v164;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v166 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v166 - 8) + 16))(v165, v217, v166);
        *(void *)(a1 + v160[16]) = *(void *)(a2 + v160[16]);
        sub_1B5F666C8();
        swift_retain();
        uint64_t v167 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v168 = a1 + v167;
        uint64_t v169 = *(void *)(a2 + v167 + 24);
        *(void *)(v168 + 24) = v169;
        *(void *)(v168 + 32) = *(void *)(a2 + v167 + 32);
        (**(void (***)(void))(v169 - 8))();
LABEL_66:
        swift_storeEnumTagMultiPayload();
        a3 = v221;
        break;
      default:
        memcpy((void *)a1, (const void *)a2, *(void *)(v7 + 64));
        break;
    }
  }
  *(void *)(a1 + *(int *)(a3 + 52)) = *(void *)(a2 + *(int *)(a3 + 52));
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 56)) = *(void *)(a2 + *(int *)(a3 + 56));
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1B5F6E5D4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for BlueprintModifierResult();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      long long v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      a1[2] = a2[2];
      uint64_t v8 = (int *)type metadata accessor for Blueprint();
      uint64_t v9 = v8[14];
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v187 = (char *)a2 + v9;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v11 = sub_1B61B0670();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v10, v187, v11);
      uint64_t v12 = v8[15];
      uint64_t v177 = (char *)a2 + v12;
      uint64_t v188 = (char *)a1 + v12;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v13 = sub_1B61B0A30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v188, v177, v13);
      *(void *)((char *)a1 + v8[16]) = *(void *)((char *)a2 + v8[16]);
      uint64_t v14 = type metadata accessor for BlueprintBookmark();
      uint64_t v15 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1) {
        goto LABEL_48;
      }
      if (EnumCaseMultiPayload) {
        goto LABEL_49;
      }
      uint64_t v19 = sub_1B61AFCB0();
      if (!__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v19)) {
        goto LABEL_58;
      }
      goto LABEL_28;
    case 1u:
      long long v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      a1[2] = a2[2];
      id v21 = (int *)type metadata accessor for Blueprint();
      uint64_t v22 = v21[14];
      uint64_t v189 = (char *)a1 + v22;
      long long v23 = (char *)a2 + v22;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v24 = sub_1B61B0670();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v189, v23, v24);
      uint64_t v25 = v21[15];
      uint64_t v178 = (char *)a2 + v25;
      uint64_t v190 = (char *)a1 + v25;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v26 = sub_1B61B0A30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v190, v178, v26);
      *(void *)((char *)a1 + v21[16]) = *(void *)((char *)a2 + v21[16]);
      uint64_t v27 = type metadata accessor for BlueprintBookmark();
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v29 = *(int *)(TupleTypeMetadata3 + 48);
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      int v32 = swift_getEnumCaseMultiPayload();
      if (v32 == 1)
      {
        uint64_t v157 = sub_1B61AFCB0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 32))(v30, v31, v157);
        sub_1B5EBF460();
        *(_OWORD *)&v30[*(int *)(v158 + 48)] = *(_OWORD *)&v31[*(int *)(v158 + 48)];
      }
      else
      {
        if (v32)
        {
          memcpy(v30, v31, *(void *)(*(void *)(v27 - 8) + 64));
          goto LABEL_57;
        }
        uint64_t v33 = sub_1B61AFCB0();
        if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v33))
        {
          sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
          memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v30, v31, v33);
          __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v33);
        }
      }
      swift_storeEnumTagMultiPayload();
LABEL_57:
      uint64_t v167 = *(int *)(TupleTypeMetadata3 + 64);
      uint64_t v168 = (_OWORD *)((char *)a1 + v167);
      uint64_t v169 = (_OWORD *)((char *)a2 + v167);
      long long v170 = v169[1];
      *uint64_t v168 = *v169;
      v168[1] = v170;
      v168[2] = v169[2];
      goto LABEL_66;
    case 2u:
      long long v35 = a2[1];
      *a1 = *a2;
      a1[1] = v35;
      a1[2] = a2[2];
      long long v36 = (int *)type metadata accessor for Blueprint();
      uint64_t v37 = v36[14];
      uint64_t v191 = (char *)a1 + v37;
      uint64_t v38 = (char *)a2 + v37;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v39 = sub_1B61B0670();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v191, v38, v39);
      uint64_t v40 = v36[15];
      uint64_t v179 = (char *)a2 + v40;
      long long v192 = (char *)a1 + v40;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v41 = sub_1B61B0A30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v192, v179, v41);
      *(void *)((char *)a1 + v36[16]) = *(void *)((char *)a2 + v36[16]);
      uint64_t v14 = type metadata accessor for BlueprintBookmark();
      uint64_t v42 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v16 = (char *)a1 + v42;
      uint64_t v17 = (char *)a2 + v42;
      int v43 = swift_getEnumCaseMultiPayload();
      if (v43 == 1) {
        goto LABEL_48;
      }
      if (v43) {
        goto LABEL_49;
      }
      uint64_t v19 = sub_1B61AFCB0();
      if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v19)) {
        goto LABEL_28;
      }
      goto LABEL_58;
    case 3u:
      long long v118 = a2[1];
      *a1 = *a2;
      a1[1] = v118;
      a1[2] = a2[2];
      uint64_t v119 = (int *)type metadata accessor for Blueprint();
      uint64_t v120 = v119[14];
      uint64_t v203 = (char *)a1 + v120;
      long long v121 = (char *)a2 + v120;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v122 = sub_1B61B0670();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 32))(v203, v121, v122);
      uint64_t v123 = v119[15];
      uint64_t v185 = (char *)a2 + v123;
      uint64_t v204 = (char *)a1 + v123;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v124 = sub_1B61B0A30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 32))(v204, v185, v124);
      *(void *)((char *)a1 + v119[16]) = *(void *)((char *)a2 + v119[16]);
      sub_1B5F666C8();
      uint64_t v14 = type metadata accessor for BlueprintBookmark();
      uint64_t v125 = swift_getTupleTypeMetadata3();
      uint64_t v126 = *(int *)(v125 + 48);
      uint64_t v127 = (char *)a1 + v126;
      uint64_t v128 = (char *)a2 + v126;
      long long v129 = *((_OWORD *)v128 + 1);
      *(_OWORD *)uint64_t v127 = *(_OWORD *)v128;
      *((_OWORD *)v127 + 1) = v129;
      *((void *)v127 + 4) = *((void *)v128 + 4);
      uint64_t v130 = *(int *)(v125 + 64);
      uint64_t v16 = (char *)a1 + v130;
      uint64_t v17 = (char *)a2 + v130;
      int v131 = swift_getEnumCaseMultiPayload();
      if (v131 == 1) {
        goto LABEL_48;
      }
      if (v131) {
        goto LABEL_49;
      }
      uint64_t v19 = sub_1B61AFCB0();
      if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v19)) {
        goto LABEL_28;
      }
      goto LABEL_58;
    case 4u:
      long long v133 = a2[1];
      *a1 = *a2;
      a1[1] = v133;
      a1[2] = a2[2];
      uint64_t v134 = (int *)type metadata accessor for Blueprint();
      uint64_t v135 = v134[14];
      uint64_t v205 = (char *)a1 + v135;
      uint64_t v136 = (char *)a2 + v135;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v137 = sub_1B61B0670();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v205, v136, v137);
      uint64_t v138 = v134[15];
      uint64_t v186 = (char *)a2 + v138;
      uint64_t v206 = (char *)a1 + v138;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v139 = sub_1B61B0A30();
      uint64_t v140 = (*(uint64_t (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 32))(v206, v186, v139);
      *(void *)((char *)a1 + v134[16]) = *(void *)((char *)a2 + v134[16]);
      MEMORY[0x1F4188790](v140);
      sub_1B5F666C8();
      type metadata accessor for BlueprintBookmark();
      unint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v142 = TupleTypeMetadata[12];
      uint64_t v143 = (char *)a1 + v142;
      uint64_t v144 = (char *)a2 + v142;
      long long v145 = *((_OWORD *)v144 + 1);
      *(_OWORD *)uint64_t v143 = *(_OWORD *)v144;
      *((_OWORD *)v143 + 1) = v145;
      *((void *)v143 + 4) = *((void *)v144 + 4);
      uint64_t v146 = TupleTypeMetadata[16];
      uint64_t v147 = (char *)a1 + v146;
      uint64_t v148 = (char *)a2 + v146;
      uint64_t v149 = type metadata accessor for BlueprintBookmark();
      int v150 = swift_getEnumCaseMultiPayload();
      if (v150 == 1)
      {
        uint64_t v163 = sub_1B61AFCB0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 32))(v147, v148, v163);
        sub_1B5EBF460();
        *(_OWORD *)&v147[*(int *)(v164 + 48)] = *(_OWORD *)&v148[*(int *)(v164 + 48)];
      }
      else
      {
        if (v150)
        {
          memcpy(v147, v148, *(void *)(*(void *)(v149 - 8) + 64));
          goto LABEL_63;
        }
        uint64_t v151 = sub_1B61AFCB0();
        if (__swift_getEnumTagSinglePayload((uint64_t)v148, 1, v151))
        {
          sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
          memcpy(v147, v148, *(void *)(*(void *)(v152 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 32))(v147, v148, v151);
          __swift_storeEnumTagSinglePayload((uint64_t)v147, 0, 1, v151);
        }
      }
      swift_storeEnumTagMultiPayload();
LABEL_63:
      uint64_t v171 = TupleTypeMetadata[20];
      uint64_t v172 = (_OWORD *)((char *)a1 + v171);
      uint64_t v173 = (_OWORD *)((char *)a2 + v171);
      long long v174 = v173[1];
      *uint64_t v172 = *v173;
      v172[1] = v174;
      v172[2] = v173[2];
      goto LABEL_66;
    case 5u:
      long long v44 = a2[1];
      *a1 = *a2;
      a1[1] = v44;
      a1[2] = a2[2];
      uint64_t v45 = (int *)type metadata accessor for Blueprint();
      uint64_t v46 = v45[14];
      uint64_t v193 = (char *)a1 + v46;
      long long v47 = (char *)a2 + v46;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v48 = sub_1B61B0670();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v193, v47, v48);
      uint64_t v49 = v45[15];
      long long v180 = (char *)a2 + v49;
      uint64_t v194 = (char *)a1 + v49;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v50 = sub_1B61B0A30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v194, v180, v50);
      *(void *)((char *)a1 + v45[16]) = *(void *)((char *)a2 + v45[16]);
      sub_1B5F666C8();
      uint64_t v14 = type metadata accessor for BlueprintBookmark();
      uint64_t v51 = swift_getTupleTypeMetadata3();
      uint64_t v52 = *(int *)(v51 + 48);
      uint64_t v53 = (char *)a1 + v52;
      uint64_t v54 = (char *)a2 + v52;
      long long v55 = *((_OWORD *)v54 + 1);
      *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
      *((_OWORD *)v53 + 1) = v55;
      *((void *)v53 + 4) = *((void *)v54 + 4);
      uint64_t v56 = *(int *)(v51 + 64);
      uint64_t v16 = (char *)a1 + v56;
      uint64_t v17 = (char *)a2 + v56;
      int v57 = swift_getEnumCaseMultiPayload();
      if (v57 == 1)
      {
LABEL_48:
        uint64_t v161 = sub_1B61AFCB0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 32))(v16, v17, v161);
        sub_1B5EBF460();
        *(_OWORD *)&v16[*(int *)(v162 + 48)] = *(_OWORD *)&v17[*(int *)(v162 + 48)];
        goto LABEL_65;
      }
      if (v57)
      {
LABEL_49:
        memcpy(v16, v17, *(void *)(*(void *)(v14 - 8) + 64));
        goto LABEL_66;
      }
      uint64_t v19 = sub_1B61AFCB0();
      if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v19))
      {
LABEL_28:
        sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
        memcpy(v16, v17, *(void *)(*(void *)(v132 - 8) + 64));
      }
      else
      {
LABEL_58:
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
        __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v19);
      }
      goto LABEL_65;
    case 6u:
      long long v58 = a2[1];
      *a1 = *a2;
      a1[1] = v58;
      a1[2] = a2[2];
      uint64_t v59 = (int *)type metadata accessor for Blueprint();
      uint64_t v60 = v59[14];
      uint64_t v195 = (char *)a1 + v60;
      long long v61 = (char *)a2 + v60;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v62 = sub_1B61B0670();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v195, v61, v62);
      uint64_t v63 = v59[15];
      uint64_t v181 = (char *)a2 + v63;
      uint64_t v196 = (char *)a1 + v63;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v64 = sub_1B61B0A30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v196, v181, v64);
      *(void *)((char *)a1 + v59[16]) = *(void *)((char *)a2 + v59[16]);
      sub_1B5F666C8();
      type metadata accessor for BlueprintViewActionResponse();
      uint64_t v65 = swift_getTupleTypeMetadata3();
      uint64_t v66 = *(int *)(v65 + 48);
      uint64_t v67 = (char *)a1 + v66;
      uint64_t v68 = (char *)a2 + v66;
      long long v69 = *((_OWORD *)v68 + 1);
      *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
      *((_OWORD *)v67 + 1) = v69;
      *((void *)v67 + 4) = *((void *)v68 + 4);
      *(void *)((char *)a1 + *(int *)(v65 + 64)) = *(void *)((char *)a2 + *(int *)(v65 + 64));
      goto LABEL_66;
    case 7u:
      long long v70 = a2[1];
      *a1 = *a2;
      a1[1] = v70;
      a1[2] = a2[2];
      uint64_t v71 = (int *)type metadata accessor for Blueprint();
      uint64_t v72 = v71[14];
      uint64_t v197 = (char *)a1 + v72;
      uint64_t v73 = (char *)a2 + v72;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v74 = sub_1B61B0670();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v197, v73, v74);
      uint64_t v75 = v71[15];
      uint64_t v182 = (char *)a2 + v75;
      uint64_t v198 = (char *)a1 + v75;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v76 = sub_1B61B0A30();
      uint64_t v77 = (*(uint64_t (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32))(v198, v182, v76);
      *(void *)((char *)a1 + v71[16]) = *(void *)((char *)a2 + v71[16]);
      MEMORY[0x1F4188790](v77);
      sub_1B5F666C8();
      type metadata accessor for BlueprintViewActionResponse();
      uint64_t v78 = (int *)swift_getTupleTypeMetadata();
      uint64_t v79 = v78[12];
      uint64_t v80 = (char *)a1 + v79;
      uint64_t v81 = (char *)a2 + v79;
      long long v82 = *((_OWORD *)v81 + 1);
      *(_OWORD *)uint64_t v80 = *(_OWORD *)v81;
      *((_OWORD *)v80 + 1) = v82;
      *((void *)v80 + 4) = *((void *)v81 + 4);
      *(void *)((char *)a1 + v78[16]) = *(void *)((char *)a2 + v78[16]);
      uint64_t v83 = v78[20];
      long long v84 = (_OWORD *)((char *)a1 + v83);
      uint64_t v85 = (_OWORD *)((char *)a2 + v83);
      long long v86 = v85[1];
      _OWORD *v84 = *v85;
      v84[1] = v86;
      v84[2] = v85[2];
      goto LABEL_66;
    case 8u:
    case 0xCu:
      long long v107 = a2[1];
      *a1 = *a2;
      a1[1] = v107;
      a1[2] = a2[2];
      uint64_t v108 = (int *)type metadata accessor for Blueprint();
      uint64_t v109 = v108[14];
      uint64_t v201 = (char *)a1 + v109;
      uint64_t v110 = (char *)a2 + v109;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v111 = sub_1B61B0670();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v201, v110, v111);
      uint64_t v112 = v108[15];
      uint64_t v184 = (char *)a2 + v112;
      uint64_t v202 = (char *)a1 + v112;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v113 = sub_1B61B0A30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 32))(v202, v184, v113);
      *(void *)((char *)a1 + v108[16]) = *(void *)((char *)a2 + v108[16]);
      sub_1B5F666C8();
      uint64_t v114 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v115 = (char *)a1 + v114;
      uint64_t v116 = (char *)a2 + v114;
      long long v117 = *((_OWORD *)v116 + 1);
      *(_OWORD *)uint64_t v115 = *(_OWORD *)v116;
      *((_OWORD *)v115 + 1) = v117;
      *((void *)v115 + 4) = *((void *)v116 + 4);
      goto LABEL_66;
    case 9u:
      uint64_t v153 = type metadata accessor for BlueprintBookmark();
      int v154 = swift_getEnumCaseMultiPayload();
      if (v154 == 1)
      {
        uint64_t v165 = sub_1B61AFCB0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v165 - 8) + 32))(a1, a2, v165);
        sub_1B5EBF460();
        *(_OWORD *)((char *)a1 + *(int *)(v166 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v166 + 48));
        goto LABEL_65;
      }
      if (v154)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v153 - 8) + 64));
        goto LABEL_66;
      }
      uint64_t v155 = sub_1B61AFCB0();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v155))
      {
        sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
        memcpy(a1, a2, *(void *)(*(void *)(v156 - 8) + 64));
      }
      else
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v155 - 8) + 32))(a1, a2, v155);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v155);
      }
      goto LABEL_65;
    case 0xBu:
      long long v87 = a2[1];
      *a1 = *a2;
      a1[1] = v87;
      a1[2] = a2[2];
      uint64_t v88 = (int *)type metadata accessor for Blueprint();
      uint64_t v89 = v88[14];
      uint64_t v199 = (char *)a1 + v89;
      uint64_t v90 = (char *)a2 + v89;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v91 = sub_1B61B0670();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 32))(v199, v90, v91);
      uint64_t v92 = v88[15];
      long long v183 = (char *)a2 + v92;
      uint64_t v200 = (char *)a1 + v92;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v93 = sub_1B61B0A30();
      uint64_t v94 = (*(uint64_t (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v200, v183, v93);
      *(void *)((char *)a1 + v88[16]) = *(void *)((char *)a2 + v88[16]);
      MEMORY[0x1F4188790](v94);
      sub_1B5F666C8();
      sub_1B5F66720(255, &qword_1E9DAA910, (void (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse);
      type metadata accessor for BlueprintBookmark();
      unint64_t v95 = (int *)swift_getTupleTypeMetadata();
      uint64_t v96 = v95[12];
      uint64_t v97 = (char *)a1 + v96;
      uint64_t v98 = (char *)a2 + v96;
      long long v99 = *((_OWORD *)v98 + 1);
      *(_OWORD *)uint64_t v97 = *(_OWORD *)v98;
      *((_OWORD *)v97 + 1) = v99;
      *((void *)v97 + 4) = *((void *)v98 + 4);
      *(void *)((char *)a1 + v95[16]) = *(void *)((char *)a2 + v95[16]);
      *((unsigned char *)a1 + v95[20]) = *((unsigned char *)a2 + v95[20]);
      uint64_t v100 = v95[24];
      uint64_t v101 = (char *)a1 + v100;
      uint64_t v102 = (char *)a2 + v100;
      uint64_t v103 = type metadata accessor for BlueprintBookmark();
      int v104 = swift_getEnumCaseMultiPayload();
      if (v104 == 1)
      {
        uint64_t v159 = sub_1B61AFCB0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 32))(v101, v102, v159);
        sub_1B5EBF460();
        *(_OWORD *)&v101[*(int *)(v160 + 48)] = *(_OWORD *)&v102[*(int *)(v160 + 48)];
      }
      else
      {
        if (v104)
        {
          memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
          goto LABEL_66;
        }
        uint64_t v105 = sub_1B61AFCB0();
        if (__swift_getEnumTagSinglePayload((uint64_t)v102, 1, v105))
        {
          sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
          memcpy(v101, v102, *(void *)(*(void *)(v106 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 32))(v101, v102, v105);
          __swift_storeEnumTagSinglePayload((uint64_t)v101, 0, 1, v105);
        }
      }
LABEL_65:
      swift_storeEnumTagMultiPayload();
LABEL_66:
      swift_storeEnumTagMultiPayload();
LABEL_67:
      uint64_t v175 = *(int *)(a3 + 56);
      *(void *)((char *)a1 + *(int *)(a3 + 52)) = *(void *)((char *)a2 + *(int *)(a3 + 52));
      *(void *)((char *)a1 + v175) = *(void *)((char *)a2 + v175);
      return a1;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_67;
  }
}

_OWORD *sub_1B5F70AE4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = type metadata accessor for BlueprintModifierResult();
    uint64_t v7 = *(void *)(v6 - 8);
    (*(void (**)(_OWORD *, uint64_t))(v7 + 8))(a1, v6);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        long long v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        a1[2] = a2[2];
        uint64_t v9 = (int *)type metadata accessor for Blueprint();
        uint64_t v10 = v9[14];
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v187 = (char *)a2 + v10;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v12 = sub_1B61B0670();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v11, v187, v12);
        uint64_t v13 = v9[15];
        uint64_t v177 = (char *)a2 + v13;
        uint64_t v188 = (char *)a1 + v13;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v14 = sub_1B61B0A30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v188, v177, v14);
        *(void *)((char *)a1 + v9[16]) = *(void *)((char *)a2 + v9[16]);
        uint64_t v15 = type metadata accessor for BlueprintBookmark();
        uint64_t v16 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1) {
          goto LABEL_49;
        }
        if (EnumCaseMultiPayload) {
          goto LABEL_50;
        }
        uint64_t v20 = sub_1B61AFCB0();
        if (!__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v20)) {
          goto LABEL_59;
        }
        goto LABEL_29;
      case 1u:
        long long v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        a1[2] = a2[2];
        uint64_t v22 = (int *)type metadata accessor for Blueprint();
        uint64_t v23 = v22[14];
        uint64_t v189 = (char *)a1 + v23;
        uint64_t v24 = (char *)a2 + v23;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v25 = sub_1B61B0670();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v189, v24, v25);
        uint64_t v26 = v22[15];
        uint64_t v178 = (char *)a2 + v26;
        uint64_t v190 = (char *)a1 + v26;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v27 = sub_1B61B0A30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v190, v178, v27);
        *(void *)((char *)a1 + v22[16]) = *(void *)((char *)a2 + v22[16]);
        uint64_t v28 = type metadata accessor for BlueprintBookmark();
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        uint64_t v30 = *(int *)(TupleTypeMetadata3 + 48);
        uint64_t v31 = (char *)a1 + v30;
        int v32 = (char *)a2 + v30;
        int v33 = swift_getEnumCaseMultiPayload();
        if (v33 == 1)
        {
          uint64_t v158 = sub_1B61AFCB0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 32))(v31, v32, v158);
          sub_1B5EBF460();
          *(_OWORD *)&v31[*(int *)(v159 + 48)] = *(_OWORD *)&v32[*(int *)(v159 + 48)];
          swift_storeEnumTagMultiPayload();
        }
        else if (v33)
        {
          memcpy(v31, v32, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          uint64_t v34 = sub_1B61AFCB0();
          if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v34))
          {
            sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
            memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v31, v32, v34);
            __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v34);
          }
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v168 = *(int *)(TupleTypeMetadata3 + 64);
        uint64_t v169 = (_OWORD *)((char *)a1 + v168);
        long long v170 = (_OWORD *)((char *)a2 + v168);
        long long v171 = v170[1];
        *uint64_t v169 = *v170;
        v169[1] = v171;
        v169[2] = v170[2];
        goto LABEL_67;
      case 2u:
        long long v36 = a2[1];
        *a1 = *a2;
        a1[1] = v36;
        a1[2] = a2[2];
        uint64_t v37 = (int *)type metadata accessor for Blueprint();
        uint64_t v38 = v37[14];
        uint64_t v191 = (char *)a1 + v38;
        uint64_t v39 = (char *)a2 + v38;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v40 = sub_1B61B0670();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v191, v39, v40);
        uint64_t v41 = v37[15];
        uint64_t v179 = (char *)a2 + v41;
        long long v192 = (char *)a1 + v41;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v42 = sub_1B61B0A30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v192, v179, v42);
        *(void *)((char *)a1 + v37[16]) = *(void *)((char *)a2 + v37[16]);
        uint64_t v15 = type metadata accessor for BlueprintBookmark();
        uint64_t v43 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v17 = (char *)a1 + v43;
        uint64_t v18 = (char *)a2 + v43;
        int v44 = swift_getEnumCaseMultiPayload();
        if (v44 == 1) {
          goto LABEL_49;
        }
        if (v44) {
          goto LABEL_50;
        }
        uint64_t v20 = sub_1B61AFCB0();
        if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v20)) {
          goto LABEL_29;
        }
        goto LABEL_59;
      case 3u:
        long long v119 = a2[1];
        *a1 = *a2;
        a1[1] = v119;
        a1[2] = a2[2];
        uint64_t v120 = (int *)type metadata accessor for Blueprint();
        uint64_t v121 = v120[14];
        uint64_t v203 = (char *)a1 + v121;
        uint64_t v122 = (char *)a2 + v121;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v123 = sub_1B61B0670();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 32))(v203, v122, v123);
        uint64_t v124 = v120[15];
        uint64_t v185 = (char *)a2 + v124;
        uint64_t v204 = (char *)a1 + v124;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v125 = sub_1B61B0A30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 32))(v204, v185, v125);
        *(void *)((char *)a1 + v120[16]) = *(void *)((char *)a2 + v120[16]);
        sub_1B5F666C8();
        uint64_t v15 = type metadata accessor for BlueprintBookmark();
        uint64_t v126 = swift_getTupleTypeMetadata3();
        uint64_t v127 = *(int *)(v126 + 48);
        uint64_t v128 = (char *)a1 + v127;
        long long v129 = (char *)a2 + v127;
        long long v130 = *((_OWORD *)v129 + 1);
        *(_OWORD *)uint64_t v128 = *(_OWORD *)v129;
        *((_OWORD *)v128 + 1) = v130;
        *((void *)v128 + 4) = *((void *)v129 + 4);
        uint64_t v131 = *(int *)(v126 + 64);
        uint64_t v17 = (char *)a1 + v131;
        uint64_t v18 = (char *)a2 + v131;
        int v132 = swift_getEnumCaseMultiPayload();
        if (v132 == 1) {
          goto LABEL_49;
        }
        if (v132) {
          goto LABEL_50;
        }
        uint64_t v20 = sub_1B61AFCB0();
        if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v20)) {
          goto LABEL_29;
        }
        goto LABEL_59;
      case 4u:
        long long v134 = a2[1];
        *a1 = *a2;
        a1[1] = v134;
        a1[2] = a2[2];
        uint64_t v135 = (int *)type metadata accessor for Blueprint();
        uint64_t v136 = v135[14];
        uint64_t v205 = (char *)a1 + v136;
        uint64_t v137 = (char *)a2 + v136;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v138 = sub_1B61B0670();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 32))(v205, v137, v138);
        uint64_t v139 = v135[15];
        uint64_t v186 = (char *)a2 + v139;
        uint64_t v206 = (char *)a1 + v139;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v140 = sub_1B61B0A30();
        uint64_t v141 = (*(uint64_t (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v206, v186, v140);
        *(void *)((char *)a1 + v135[16]) = *(void *)((char *)a2 + v135[16]);
        MEMORY[0x1F4188790](v141);
        sub_1B5F666C8();
        type metadata accessor for BlueprintBookmark();
        unint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
        uint64_t v143 = TupleTypeMetadata[12];
        uint64_t v144 = (char *)a1 + v143;
        long long v145 = (char *)a2 + v143;
        long long v146 = *((_OWORD *)v145 + 1);
        *(_OWORD *)uint64_t v144 = *(_OWORD *)v145;
        *((_OWORD *)v144 + 1) = v146;
        *((void *)v144 + 4) = *((void *)v145 + 4);
        uint64_t v147 = TupleTypeMetadata[16];
        uint64_t v148 = (char *)a1 + v147;
        uint64_t v149 = (char *)a2 + v147;
        uint64_t v150 = type metadata accessor for BlueprintBookmark();
        int v151 = swift_getEnumCaseMultiPayload();
        if (v151 == 1)
        {
          uint64_t v164 = sub_1B61AFCB0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 32))(v148, v149, v164);
          sub_1B5EBF460();
          *(_OWORD *)&v148[*(int *)(v165 + 48)] = *(_OWORD *)&v149[*(int *)(v165 + 48)];
          swift_storeEnumTagMultiPayload();
        }
        else if (v151)
        {
          memcpy(v148, v149, *(void *)(*(void *)(v150 - 8) + 64));
        }
        else
        {
          uint64_t v152 = sub_1B61AFCB0();
          if (__swift_getEnumTagSinglePayload((uint64_t)v149, 1, v152))
          {
            sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
            memcpy(v148, v149, *(void *)(*(void *)(v153 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 32))(v148, v149, v152);
            __swift_storeEnumTagSinglePayload((uint64_t)v148, 0, 1, v152);
          }
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v172 = TupleTypeMetadata[20];
        uint64_t v173 = (_OWORD *)((char *)a1 + v172);
        long long v174 = (_OWORD *)((char *)a2 + v172);
        long long v175 = v174[1];
        *uint64_t v173 = *v174;
        v173[1] = v175;
        v173[2] = v174[2];
        goto LABEL_67;
      case 5u:
        long long v45 = a2[1];
        *a1 = *a2;
        a1[1] = v45;
        a1[2] = a2[2];
        uint64_t v46 = (int *)type metadata accessor for Blueprint();
        uint64_t v47 = v46[14];
        uint64_t v193 = (char *)a1 + v47;
        uint64_t v48 = (char *)a2 + v47;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v49 = sub_1B61B0670();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v193, v48, v49);
        uint64_t v50 = v46[15];
        long long v180 = (char *)a2 + v50;
        uint64_t v194 = (char *)a1 + v50;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v51 = sub_1B61B0A30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v194, v180, v51);
        *(void *)((char *)a1 + v46[16]) = *(void *)((char *)a2 + v46[16]);
        sub_1B5F666C8();
        uint64_t v15 = type metadata accessor for BlueprintBookmark();
        uint64_t v52 = swift_getTupleTypeMetadata3();
        uint64_t v53 = *(int *)(v52 + 48);
        uint64_t v54 = (char *)a1 + v53;
        long long v55 = (char *)a2 + v53;
        long long v56 = *((_OWORD *)v55 + 1);
        *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
        *((_OWORD *)v54 + 1) = v56;
        *((void *)v54 + 4) = *((void *)v55 + 4);
        uint64_t v57 = *(int *)(v52 + 64);
        uint64_t v17 = (char *)a1 + v57;
        uint64_t v18 = (char *)a2 + v57;
        int v58 = swift_getEnumCaseMultiPayload();
        if (v58 == 1)
        {
LABEL_49:
          uint64_t v162 = sub_1B61AFCB0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 32))(v17, v18, v162);
          sub_1B5EBF460();
          *(_OWORD *)&v17[*(int *)(v163 + 48)] = *(_OWORD *)&v18[*(int *)(v163 + 48)];
          swift_storeEnumTagMultiPayload();
          goto LABEL_67;
        }
        if (v58)
        {
LABEL_50:
          memcpy(v17, v18, *(void *)(*(void *)(v15 - 8) + 64));
          goto LABEL_67;
        }
        uint64_t v20 = sub_1B61AFCB0();
        if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v20))
        {
LABEL_29:
          sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
          memcpy(v17, v18, *(void *)(*(void *)(v133 - 8) + 64));
        }
        else
        {
LABEL_59:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
          __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v20);
        }
        goto LABEL_66;
      case 6u:
        long long v59 = a2[1];
        *a1 = *a2;
        a1[1] = v59;
        a1[2] = a2[2];
        uint64_t v60 = (int *)type metadata accessor for Blueprint();
        uint64_t v61 = v60[14];
        uint64_t v195 = (char *)a1 + v61;
        uint64_t v62 = (char *)a2 + v61;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v63 = sub_1B61B0670();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v195, v62, v63);
        uint64_t v64 = v60[15];
        uint64_t v181 = (char *)a2 + v64;
        uint64_t v196 = (char *)a1 + v64;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v65 = sub_1B61B0A30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v196, v181, v65);
        *(void *)((char *)a1 + v60[16]) = *(void *)((char *)a2 + v60[16]);
        sub_1B5F666C8();
        type metadata accessor for BlueprintViewActionResponse();
        uint64_t v66 = swift_getTupleTypeMetadata3();
        uint64_t v67 = *(int *)(v66 + 48);
        uint64_t v68 = (char *)a1 + v67;
        long long v69 = (char *)a2 + v67;
        long long v70 = *((_OWORD *)v69 + 1);
        *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
        *((_OWORD *)v68 + 1) = v70;
        *((void *)v68 + 4) = *((void *)v69 + 4);
        *(void *)((char *)a1 + *(int *)(v66 + 64)) = *(void *)((char *)a2 + *(int *)(v66 + 64));
        goto LABEL_67;
      case 7u:
        long long v71 = a2[1];
        *a1 = *a2;
        a1[1] = v71;
        a1[2] = a2[2];
        uint64_t v72 = (int *)type metadata accessor for Blueprint();
        uint64_t v73 = v72[14];
        uint64_t v197 = (char *)a1 + v73;
        uint64_t v74 = (char *)a2 + v73;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v75 = sub_1B61B0670();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v197, v74, v75);
        uint64_t v76 = v72[15];
        uint64_t v182 = (char *)a2 + v76;
        uint64_t v198 = (char *)a1 + v76;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v77 = sub_1B61B0A30();
        uint64_t v78 = (*(uint64_t (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 32))(v198, v182, v77);
        *(void *)((char *)a1 + v72[16]) = *(void *)((char *)a2 + v72[16]);
        MEMORY[0x1F4188790](v78);
        sub_1B5F666C8();
        type metadata accessor for BlueprintViewActionResponse();
        uint64_t v79 = (int *)swift_getTupleTypeMetadata();
        uint64_t v80 = v79[12];
        uint64_t v81 = (char *)a1 + v80;
        long long v82 = (char *)a2 + v80;
        long long v83 = *((_OWORD *)v82 + 1);
        *(_OWORD *)uint64_t v81 = *(_OWORD *)v82;
        *((_OWORD *)v81 + 1) = v83;
        *((void *)v81 + 4) = *((void *)v82 + 4);
        *(void *)((char *)a1 + v79[16]) = *(void *)((char *)a2 + v79[16]);
        uint64_t v84 = v79[20];
        uint64_t v85 = (_OWORD *)((char *)a1 + v84);
        long long v86 = (_OWORD *)((char *)a2 + v84);
        long long v87 = v86[1];
        *uint64_t v85 = *v86;
        v85[1] = v87;
        v85[2] = v86[2];
        goto LABEL_67;
      case 8u:
      case 0xCu:
        long long v108 = a2[1];
        *a1 = *a2;
        a1[1] = v108;
        a1[2] = a2[2];
        uint64_t v109 = (int *)type metadata accessor for Blueprint();
        uint64_t v110 = v109[14];
        uint64_t v201 = (char *)a1 + v110;
        uint64_t v111 = (char *)a2 + v110;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v112 = sub_1B61B0670();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 32))(v201, v111, v112);
        uint64_t v113 = v109[15];
        uint64_t v184 = (char *)a2 + v113;
        uint64_t v202 = (char *)a1 + v113;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v114 = sub_1B61B0A30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32))(v202, v184, v114);
        *(void *)((char *)a1 + v109[16]) = *(void *)((char *)a2 + v109[16]);
        sub_1B5F666C8();
        uint64_t v115 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v116 = (char *)a1 + v115;
        long long v117 = (char *)a2 + v115;
        long long v118 = *((_OWORD *)v117 + 1);
        *(_OWORD *)uint64_t v116 = *(_OWORD *)v117;
        *((_OWORD *)v116 + 1) = v118;
        *((void *)v116 + 4) = *((void *)v117 + 4);
        goto LABEL_67;
      case 9u:
        uint64_t v154 = type metadata accessor for BlueprintBookmark();
        int v155 = swift_getEnumCaseMultiPayload();
        if (v155 == 1)
        {
          uint64_t v166 = sub_1B61AFCB0();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v166 - 8) + 32))(a1, a2, v166);
          sub_1B5EBF460();
          *(_OWORD *)((char *)a1 + *(int *)(v167 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v167 + 48));
          goto LABEL_66;
        }
        if (v155)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v154 - 8) + 64));
          goto LABEL_67;
        }
        uint64_t v156 = sub_1B61AFCB0();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v156))
        {
          sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
          memcpy(a1, a2, *(void *)(*(void *)(v157 - 8) + 64));
        }
        else
        {
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v156 - 8) + 32))(a1, a2, v156);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v156);
        }
        goto LABEL_66;
      case 0xBu:
        long long v88 = a2[1];
        *a1 = *a2;
        a1[1] = v88;
        a1[2] = a2[2];
        uint64_t v89 = (int *)type metadata accessor for Blueprint();
        uint64_t v90 = v89[14];
        uint64_t v199 = (char *)a1 + v90;
        uint64_t v91 = (char *)a2 + v90;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v92 = sub_1B61B0670();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 32))(v199, v91, v92);
        uint64_t v93 = v89[15];
        long long v183 = (char *)a2 + v93;
        uint64_t v200 = (char *)a1 + v93;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v94 = sub_1B61B0A30();
        uint64_t v95 = (*(uint64_t (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v200, v183, v94);
        *(void *)((char *)a1 + v89[16]) = *(void *)((char *)a2 + v89[16]);
        MEMORY[0x1F4188790](v95);
        sub_1B5F666C8();
        sub_1B5F66720(255, &qword_1E9DAA910, (void (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse);
        type metadata accessor for BlueprintBookmark();
        uint64_t v96 = (int *)swift_getTupleTypeMetadata();
        uint64_t v97 = v96[12];
        uint64_t v98 = (char *)a1 + v97;
        long long v99 = (char *)a2 + v97;
        long long v100 = *((_OWORD *)v99 + 1);
        *(_OWORD *)uint64_t v98 = *(_OWORD *)v99;
        *((_OWORD *)v98 + 1) = v100;
        *((void *)v98 + 4) = *((void *)v99 + 4);
        *(void *)((char *)a1 + v96[16]) = *(void *)((char *)a2 + v96[16]);
        *((unsigned char *)a1 + v96[20]) = *((unsigned char *)a2 + v96[20]);
        uint64_t v101 = v96[24];
        uint64_t v102 = (char *)a1 + v101;
        uint64_t v103 = (char *)a2 + v101;
        uint64_t v104 = type metadata accessor for BlueprintBookmark();
        int v105 = swift_getEnumCaseMultiPayload();
        if (v105 == 1)
        {
          uint64_t v160 = sub_1B61AFCB0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 32))(v102, v103, v160);
          sub_1B5EBF460();
          *(_OWORD *)&v102[*(int *)(v161 + 48)] = *(_OWORD *)&v103[*(int *)(v161 + 48)];
          swift_storeEnumTagMultiPayload();
        }
        else if (v105)
        {
          memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
        }
        else
        {
          uint64_t v106 = sub_1B61AFCB0();
          if (__swift_getEnumTagSinglePayload((uint64_t)v103, 1, v106))
          {
            sub_1B5F66720(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
            memcpy(v102, v103, *(void *)(*(void *)(v107 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 32))(v102, v103, v106);
            __swift_storeEnumTagSinglePayload((uint64_t)v102, 0, 1, v106);
          }
LABEL_66:
          swift_storeEnumTagMultiPayload();
        }
LABEL_67:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v7 + 64));
        break;
    }
  }
  *(void *)((char *)a1 + *(int *)(a3 + 52)) = *(void *)((char *)a2 + *(int *)(a3 + 52));
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + *(int *)(a3 + 56)) = *(void *)((char *)a2 + *(int *)(a3 + 56));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B5F7309C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B5F730B0);
}

uint64_t sub_1B5F730B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for BlueprintModifierResult();
  OUTLINED_FUNCTION_2_4();
  if (*(_DWORD *)(v7 + 84) == a2) {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 52));
  if (v9 >= 0xFFFFFFFF) {
    LODWORD(v9) = -1;
  }
  return (v9 + 1);
}

uint64_t sub_1B5F73138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B5F7314C);
}

void sub_1B5F7314C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for BlueprintModifierResult();
  OUTLINED_FUNCTION_2_4();
  if (*(_DWORD *)(v9 + 84) == a3) {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else {
    *(void *)(a1 + *(int *)(a4 + 52)) = (a2 - 1);
  }
}

uint64_t type metadata accessor for BlueprintPipelineProcessingResult()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1B5F731E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for BlueprintModifierResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for BlueprintPipelineProcessingResult();
  *(void *)(a4 + *(int *)(result + 52)) = a2;
  *(void *)(a4 + *(int *)(result + 56)) = a3;
  return result;
}

double TabBarDefaultCompressionAnimation.topOffset.getter()
{
  return 0.0;
}

uint64_t TabBarDefaultCompressionAnimation.shouldCompressAtTop.getter()
{
  return 0;
}

uint64_t TabBarDefaultCompressionAnimation.shouldCloseGapOnScroll.getter()
{
  return 1;
}

void TabBarDefaultCompressionAnimation.__allocating_init(tabBar:)()
{
  id v1 = objc_allocWithZone(v0);
  TabBarDefaultCompressionAnimation.init(tabBar:)();
}

void TabBarDefaultCompressionAnimation.init(tabBar:)()
{
  *(void *)&v0[OBJC_IVAR____TtC5TeaUI33TabBarDefaultCompressionAnimation_topOffset] = 0;
  v0[OBJC_IVAR____TtC5TeaUI33TabBarDefaultCompressionAnimation_shouldCompressAtTop] = 0;
  v0[OBJC_IVAR____TtC5TeaUI33TabBarDefaultCompressionAnimation_shouldCloseGapOnScroll] = 1;

  sub_1B61B34D0();
  __break(1u);
}

id TabBarDefaultCompressionAnimation.__allocating_init(tabBarController:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return TabBarDefaultCompressionAnimation.init(tabBarController:)(a1);
}

id TabBarDefaultCompressionAnimation.init(tabBarController:)(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC5TeaUI33TabBarDefaultCompressionAnimation_topOffset] = 0;
  v1[OBJC_IVAR____TtC5TeaUI33TabBarDefaultCompressionAnimation_shouldCompressAtTop] = 0;
  v1[OBJC_IVAR____TtC5TeaUI33TabBarDefaultCompressionAnimation_shouldCloseGapOnScroll] = 1;
  *(void *)&v1[OBJC_IVAR____TtC5TeaUI33TabBarDefaultCompressionAnimation_tabBarController] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id TabBarDefaultCompressionAnimation.isCompressed.getter()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI33TabBarDefaultCompressionAnimation_tabBarController);
  id v2 = objc_msgSend(v1, sel_tabBar);
  objc_msgSend(v2, sel_frame);
  double v4 = v3;

  id result = objc_msgSend(v1, sel_view);
  if (result)
  {
    uint64_t v6 = result;
    objc_msgSend(result, sel_bounds);

    return (id)(OUTLINED_FUNCTION_0_68() <= v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void TabBarDefaultCompressionAnimation.update(withPercentage:)()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI33TabBarDefaultCompressionAnimation_tabBarController), sel_view);
  if (v1)
  {
    objc_msgSend(v1, sel_frame);
    OUTLINED_FUNCTION_2_61();
    OUTLINED_FUNCTION_0_68();
    id v2 = OUTLINED_FUNCTION_1_71();
    objc_msgSend(v2, sel_frame);
    CGFloat v4 = v3;
    CGFloat v6 = v5;
    CGFloat v8 = v7;
    CGFloat v10 = v9;

    v13.origin.CGFloat x = v4;
    v13.origin.CGFloat y = v6;
    v13.size.CGFloat width = v8;
    v13.size.CGFloat height = v10;
    CGRectGetHeight(v13);
    id v11 = OUTLINED_FUNCTION_1_71();
    objc_msgSend(v11, sel_frame);
    objc_msgSend(v11, sel_setFrame_);
  }
  else
  {
    __break(1u);
  }
}

Swift::Bool __swiftcall TabBarDefaultCompressionAnimation.animationShouldBegin(for:currentlyFullyCompressed:)(UIScrollView *a1, Swift::Bool currentlyFullyCompressed)
{
  return 1;
}

double TabBarDefaultCompressionAnimation.maximumBarHeight(for:)()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI33TabBarDefaultCompressionAnimation_tabBarController), sel_tabBar);
  objc_msgSend(v1, sel_frame);
  OUTLINED_FUNCTION_8();

  double v2 = OUTLINED_FUNCTION_7();
  return CGRectGetHeight(*(CGRect *)&v2);
}

double TabBarDefaultCompressionAnimation.minimumBarHeight(for:)()
{
  return 0.0;
}

Swift::Void __swiftcall TabBarDefaultCompressionAnimation.reload(with:)(UITraitCollection_optional with)
{
  id v2 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5TeaUI33TabBarDefaultCompressionAnimation_tabBarController), sel_view);
  if (v2)
  {
    double v3 = v2;
    objc_msgSend(v2, sel_frame);
    OUTLINED_FUNCTION_8();

    v6.origin.CGFloat x = OUTLINED_FUNCTION_7();
    CGRectGetHeight(v6);
    objc_msgSend(OUTLINED_FUNCTION_1_71(), sel_frame);
    OUTLINED_FUNCTION_2_61();
    OUTLINED_FUNCTION_0_68();
    id v4 = OUTLINED_FUNCTION_1_71();
    objc_msgSend(v4, sel_frame);
    objc_msgSend(v4, sel_setFrame_);
  }
  else
  {
    __break(1u);
  }
}

id TabBarDefaultCompressionAnimation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void TabBarDefaultCompressionAnimation.init()()
{
}

id TabBarDefaultCompressionAnimation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1B5F73988()
{
  return (unint64_t)TabBarDefaultCompressionAnimation.isCompressed.getter() & 1;
}

uint64_t dispatch thunk of TabBarCompressionStateProviding.isCompressed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for TabBarDefaultCompressionAnimation()
{
  return self;
}

uint64_t method lookup function for TabBarDefaultCompressionAnimation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TabBarDefaultCompressionAnimation);
}

uint64_t dispatch thunk of TabBarDefaultCompressionAnimation.__allocating_init(tabBar:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of TabBarDefaultCompressionAnimation.__allocating_init(tabBarController:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

Swift::tuple___C__NSRange_CGSize __swiftcall NSAttributedString.sizeAndRangeForString(constrainedTo:)(CGSize constrainedTo)
{
  double height = constrainedTo.height;
  double width = constrainedTo.width;
  id v4 = CTFramesetterCreateWithAttributedString(v1);
  double v5 = (CFRange *)swift_slowAlloc();
  v18.Swift::Int location = 0;
  v18.Swift::Int length = 0;
  v19.double width = width;
  v19.double height = height;
  CGSize v6 = CTFramesetterSuggestFrameSizeWithConstraints(v4, v18, 0, v19, v5);
  id v7 = -[__CFAttributedString attributedSubstringFromRange:](v1, sel_attributedSubstringFromRange_, v5->location, v5->length, v6.width, v6.height);
  objc_msgSend(v7, sel_boundingRectWithSize_options_context_, 3, 0, width, height);
  double v9 = v8;
  double v11 = v10;
  Swift::Int location = v5->location;
  Swift::Int length = v5->length;

  Swift::Int v14 = location;
  Swift::Int v15 = length;
  double v16 = v9;
  double v17 = v11;
  result._1.double height = v17;
  result._1.double width = v16;
  result._0.Swift::Int length = v15;
  result._0.Swift::Int location = v14;
  return result;
}

id NSAttributedString.font.getter()
{
  if ((uint64_t)objc_msgSend(v0, sel_length) >= 1)
  {
    id v1 = objc_msgSend(v0, sel_attributesAtIndex_effectiveRange_, 0, 0);
    type metadata accessor for Key(0);
    sub_1B5EE81A8();
    sub_1B61B1F10();

    id v2 = (id)*MEMORY[0x1E4FB06F8];
    sub_1B5E13D04();

    swift_bridgeObjectRelease();
    if (v8)
    {
      sub_1B5F73CD0();
      if (swift_dynamicCast()) {
        return (id)v6;
      }
    }
    else
    {
      sub_1B5E15B34((uint64_t)v7);
    }
  }
  id v4 = self;
  objc_msgSend(v4, sel_systemFontSize);
  id v5 = objc_msgSend(v4, sel_systemFontOfSize_);
  return v5;
}

__C::CGRect __swiftcall NSAttributedString.boundingRect(with:)(CGSize with)
{
  objc_msgSend(v1, sel_boundingRectWithSize_options_context_, 35, 0, with.width, with.height);
  result.size.double height = v5;
  result.size.double width = v4;
  result.origin.CGFloat y = v3;
  result.origin.CGFloat x = v2;
  return result;
}

double NSAttributedString.height(maxWidth:)(double a1)
{
  objc_msgSend(v1, sel_boundingRectWithSize_options_context_, 35, 0, a1, 1.79769313e308);
  return ceil(CGRectGetHeight(v3));
}

CGSize __swiftcall NSAttributedString.integralSize()()
{
  objc_msgSend(v0, sel_size);
  double v2 = ceil(v1);
  double v4 = ceil(v3);
  result.double height = v4;
  result.double width = v2;
  return result;
}

unint64_t sub_1B5F73CD0()
{
  unint64_t result = qword_1EB647C68;
  if (!qword_1EB647C68)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB647C68);
  }
  return result;
}

uint64_t sub_1B5F73D10(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  sub_1B5F77498(0, &qword_1EB642538, (void (*)(uint64_t))sub_1B5E1DEB4);
  OUTLINED_FUNCTION_14(v7);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_82();
  uint64_t v50 = v9;
  sub_1B5E1DEB4();
  uint64_t v57 = v10;
  OUTLINED_FUNCTION_0_10();
  uint64_t v49 = v11;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_15_20(v13, v47);
  MEMORY[0x1F4188790](v14);
  uint64_t v48 = (uint64_t)&v47 - v15;
  uint64_t v16 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v18 = v17;
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_25_0();
  sub_1B5F77498(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
  OUTLINED_FUNCTION_14(v20);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v47 - v22;
  uint64_t v24 = *(void *)(a3 + 16);
  uint64_t v47 = a3;
  if (v24)
  {
    uint64_t v54 = v4;
    long long v55 = a1;
    uint64_t v26 = *(void *)(v18 + 16);
    uint64_t v25 = v18 + 16;
    uint64_t v58 = v26;
    OUTLINED_FUNCTION_41_15();
    uint64_t v28 = a3 + v27;
    uint64_t v51 = *(void *)(v25 + 56);
    uint64_t v52 = v25 + 16;
    uint64_t v53 = v25 - 8;
    sub_1B61B1F70();
    uint64_t v59 = MEMORY[0x1E4FBC860];
    uint64_t v29 = v50;
    while (1)
    {
      OUTLINED_FUNCTION_39_8();
      OUTLINED_FUNCTION_33();
      v31(v30);
      __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v16);
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v16) == 1) {
        break;
      }
      uint64_t v32 = v54;
      uint64_t v33 = OUTLINED_FUNCTION_37_13();
      v34(v33);
      v55(v32);
      if (v3)
      {
        OUTLINED_FUNCTION_5_1();
        v45(v44);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v59;
      }
      OUTLINED_FUNCTION_5_1();
      v36(v35);
      if (__swift_getEnumTagSinglePayload(v29, 1, v57) == 1)
      {
        sub_1B5F784E4(v29, &qword_1EB642538, (void (*)(uint64_t))sub_1B5E1DEB4);
      }
      else
      {
        uint64_t v37 = v48;
        sub_1B5F78480(v29, v48, (void (*)(void))sub_1B5E1DEB4);
        sub_1B5F78480(v37, v56, (void (*)(void))sub_1B5E1DEB4);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_30_9();
          sub_1B5E1AF50();
          uint64_t v59 = v42;
        }
        unint64_t v38 = *(void *)(v59 + 16);
        if (v38 >= *(void *)(v59 + 24) >> 1)
        {
          sub_1B5E1AF50();
          uint64_t v59 = v43;
        }
        *(void *)(v59 + 16) = v38 + 1;
        OUTLINED_FUNCTION_41_15();
        sub_1B5F78480(v56, v40 + v39 + *(void *)(v41 + 72) * v38, (void (*)(void))sub_1B5E1DEB4);
        uint64_t v29 = v50;
      }
      v28 += v51;
      if (!--v24) {
        goto LABEL_15;
      }
    }
  }
  else
  {
    sub_1B61B1F70();
    uint64_t v59 = MEMORY[0x1E4FBC860];
LABEL_15:
    __swift_storeEnumTagSinglePayload((uint64_t)v23, 1, 1, v16);
  }
  swift_bridgeObjectRelease();
  return v59;
}

uint64_t sub_1B5F74128(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  void (*v38)(uint64_t *__return_ptr, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  unint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v6 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_25_0();
  sub_1B5F77498(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
  OUTLINED_FUNCTION_14(v10);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v33 - v12;
  uint64_t v14 = *(void *)(a3 + 16);
  v33[1] = a3;
  if (v14)
  {
    uint64_t v15 = v8 + 16;
    OUTLINED_FUNCTION_41_15();
    uint64_t v17 = a3 + v16;
    uint64_t v18 = *(void *)(v15 + 56);
    uint64_t v36 = v15 + 16;
    uint64_t v37 = v19;
    uint64_t v34 = v18;
    uint64_t v35 = v15 - 8;
    sub_1B61B1F70();
    uint64_t v43 = MEMORY[0x1E4FBC860];
    v33[2] = v15;
    while (1)
    {
      uint64_t v20 = OUTLINED_FUNCTION_39_8();
      v37(v20);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v6);
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6) == 1) {
        break;
      }
      uint64_t v21 = OUTLINED_FUNCTION_37_13();
      v22(v21);
      v38(&v41, v4);
      if (v3)
      {
        OUTLINED_FUNCTION_5_1();
        v31();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v43;
      }
      uint64_t v23 = v4;
      OUTLINED_FUNCTION_5_1();
      v24();
      uint64_t v25 = v42;
      if (v42)
      {
        uint64_t v40 = v41;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_30_9();
          sub_1B5E1A620();
          uint64_t v43 = v29;
        }
        unint64_t v26 = *(void *)(v43 + 16);
        if (v26 >= *(void *)(v43 + 24) >> 1)
        {
          sub_1B5E1A620();
          uint64_t v43 = v30;
        }
        uint64_t v27 = v43;
        *(void *)(v43 + 16) = v26 + 1;
        uint64_t v28 = v27 + 16 * v26;
        *(void *)(v28 + 32) = v40;
        *(void *)(v28 + 40) = v25;
      }
      v17 += v34;
      --v14;
      uint64_t v4 = v23;
      if (!v14) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    sub_1B61B1F70();
    uint64_t v43 = MEMORY[0x1E4FBC860];
LABEL_14:
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v6);
  }
  swift_bridgeObjectRelease();
  return v43;
}

uint64_t sub_1B5F743EC(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  void v34[3] = a2;
  sub_1B5F77498(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
  OUTLINED_FUNCTION_14(v6);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v29 - v8;
  uint64_t v10 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_15_20(v12, v29[0]);
  MEMORY[0x1F4188790](v13);
  uint64_t v31 = (char *)v29 - v15;
  uint64_t v16 = *(void *)(a3 + 16);
  if (!v16) {
    return MEMORY[0x1E4FBC860];
  }
  v29[1] = v14;
  uint64_t v32 = (void (**)(char *, char *, uint64_t))(v14 + 32);
  sub_1B61B1F70();
  v29[0] = a3;
  uint64_t v17 = (uint64_t *)(a3 + 40);
  uint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t v30 = a1;
  while (1)
  {
    uint64_t v19 = *v17;
    v34[0] = *(v17 - 1);
    v34[1] = v19;
    sub_1B61B1F70();
    a1(v34);
    if (v3) {
      break;
    }
    swift_bridgeObjectRelease();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
    {
      sub_1B5F784E4((uint64_t)v9, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
    }
    else
    {
      uint64_t v20 = v10;
      uint64_t v21 = v31;
      uint64_t v22 = *v32;
      (*v32)(v31, v9, v20);
      v22(v33, v21, v20);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_30_9();
        sub_1B5E1B208();
        uint64_t v18 = v26;
      }
      unint64_t v23 = *(void *)(v18 + 16);
      if (v23 >= *(void *)(v18 + 24) >> 1)
      {
        sub_1B5E1B208();
        uint64_t v18 = v27;
      }
      *(void *)(v18 + 16) = v23 + 1;
      OUTLINED_FUNCTION_41_15();
      v22((char *)(v18 + v24 + *(void *)(v25 + 72) * v23), v33, v20);
      uint64_t v10 = v20;
      a1 = v30;
    }
    v17 += 2;
    if (!--v16)
    {
      swift_bridgeObjectRelease();
      return v18;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1B5F746B0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)*a1) + 0x90);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1BA9B1EC0](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1B5F74724()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t BlueprintTableViewDataSource.delegate.getter()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_0_1();
  return MEMORY[0x1BA9B1EC0](v0);
}

void BlueprintTableViewDataSource.delegate.setter(void *a1)
{
}

void (*BlueprintTableViewDataSource.delegate.modify(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t v4 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x90);
  v3[5] = v4;
  double v5 = (char *)v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x1BA9B1EC0](v5);
  return sub_1B5E94C74;
}

uint64_t BlueprintTableViewDataSource.sectionCollapsibleStateManager.getter()
{
  return swift_retain();
}

uint64_t BlueprintTableViewDataSource.sectionCollapsibleStateManager.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_12_0();
  *double v1 = a1;
  return swift_release();
}

uint64_t (*BlueprintTableViewDataSource.sectionCollapsibleStateManager.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t BlueprintTableViewDataSource.dragReorderDelegate.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t BlueprintTableViewDataSource.dragReorderDelegate.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_12_0();
  void *v2 = a1;
  v2[1] = a2;
  return swift_unknownObjectRelease();
}

uint64_t (*BlueprintTableViewDataSource.dragReorderDelegate.modify())()
{
  return j__swift_endAccess;
}

double BlueprintTableViewDataSource.diffableReorderDataSource.getter@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

id BlueprintTableViewDataSource.__allocating_init(blueprintProvider:blueprintLayoutProvider:blueprintViewCellProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return BlueprintTableViewDataSource.init(blueprintProvider:blueprintLayoutProvider:blueprintViewCellProvider:)(a1, a2, a3);
}

id BlueprintTableViewDataSource.init(blueprintProvider:blueprintLayoutProvider:blueprintViewCellProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_4_49();
  *(void *)&v4[*(void *)(v8 + 152)] = 0;
  OUTLINED_FUNCTION_4_49();
  uint64_t v10 = &v4[*(void *)(v9 + 160)];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0;
  OUTLINED_FUNCTION_4_49();
  *(void *)&v4[*(void *)(v11 + 192)] = 0;
  OUTLINED_FUNCTION_4_49();
  OUTLINED_FUNCTION_21_15(*(void *)(v12 + 168));
  uint64_t v14 = *(void *)(v13 + 80);
  OUTLINED_FUNCTION_2_3();
  uint64_t v16 = v15;
  OUTLINED_FUNCTION_33();
  v17();
  OUTLINED_FUNCTION_4_49();
  OUTLINED_FUNCTION_21_15(*(void *)(v18 + 176));
  uint64_t v20 = *(void *)(v19 + 88);
  OUTLINED_FUNCTION_2_3();
  uint64_t v22 = v21;
  OUTLINED_FUNCTION_33();
  v23();
  OUTLINED_FUNCTION_4_49();
  OUTLINED_FUNCTION_21_15(*(void *)(v24 + 184));
  uint64_t v26 = *(void *)(v25 + 96);
  OUTLINED_FUNCTION_2_3();
  uint64_t v28 = v27;
  OUTLINED_FUNCTION_33();
  v29();
  v33.receiver = v4;
  v33.super_class = ObjectType;
  id v30 = objc_msgSendSuper2(&v33, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(a3, v26);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(a2, v20);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, v14);
  return v30;
}

Swift::Void __swiftcall BlueprintTableViewDataSource.register(in:)(UITableView *in)
{
  uint64_t v4 = (void *)MEMORY[0x1E4FBC8C8];
  OUTLINED_FUNCTION_9_29();
  uint64_t v6 = v5;
  objc_msgSend(v7, sel_setDataSource_, v1);
  uint64_t v15 = in;
  uint64_t v8 = *(void *)(v2 + 128);
  uint64_t v9 = *(void *)(v2 + 96);
  (*(void (**)(UITableView **, uint64_t, uint64_t))(v8 + 56))(&v15, v9, v8);
  uint64_t v10 = (void *)((char *)v1 + *(void *)((*v4 & *v1) + 0x98));
  OUTLINED_FUNCTION_24();
  uint64_t v11 = *v10;
  if (*v10)
  {
    swift_retain();
    sub_1B5F75074(0, 0, (void (*)(void))sub_1B5F78538, (void (*)(uint64_t, uint64_t))sub_1B6185AEC);
    uint64_t v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = v6[11];
    void v13[3] = v9;
    v13[4] = v6[13];
    v13[5] = v6[15];
    void v13[6] = v8;
    v13[7] = v6[17];
    v13[8] = v12;
    v13[9] = v11;
    v13[10] = in;
    swift_retain();
    swift_retain();
    uint64_t v14 = in;
    BlueprintSectionCollapsibleStateManager.onStateChange(_:)((uint64_t)sub_1B5F75608, (uint64_t)v13);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_1B5F74F70()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1B5F74FA8()
{
  sub_1B5DFF760(0, &qword_1EB63F430);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  sub_1B6185BE8();
  id v2 = (id)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v2);
}

void sub_1B5F75048(uint64_t a1, uint64_t a2)
{
}

void sub_1B5F75074(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(uint64_t, uint64_t))
{
  a3(0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  a4(a1, a2);
  id v9 = (id)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v9);
}

void sub_1B5F75118(uint64_t a1, uint64_t a2)
{
}

void sub_1B5F75144(uint64_t a1, char *a2, uint64_t a3, void *a4)
{
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v30 = sub_1B61AFCB0();
  uint64_t v6 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v12 = swift_getAssociatedConformanceWitness();
  uint64_t v38 = AssociatedTypeWitness;
  uint64_t v39 = v10;
  uint64_t v31 = v12;
  uint64_t v32 = AssociatedConformanceWitness;
  uint64_t v40 = AssociatedConformanceWitness;
  uint64_t v41 = v12;
  uint64_t v13 = type metadata accessor for Blueprint();
  uint64_t v33 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = v35 + 16;
  swift_beginAccess();
  uint64_t v17 = (char *)MEMORY[0x1BA9B1EC0](v16);
  if (v17)
  {
    id v28 = a4;
    uint64_t v35 = v17;
    BlueprintProviderType.blueprint.getter();
    swift_getWitnessTable();
    uint64_t v38 = AssociatedTypeWitness;
    uint64_t v39 = v10;
    uint64_t v40 = v32;
    uint64_t v41 = v31;
    type metadata accessor for BlueprintSection();
    swift_getWitnessTable();
    sub_1B61B2A80();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v13);
    if (v37 != 1)
    {
      uint64_t v18 = v36;
      swift_checkMetadataState();
      swift_getWitnessTable();
      uint64_t v19 = sub_1B61B29F0();
      if (v19 < 0)
      {
        __break(1u);
        return;
      }
      uint64_t v20 = v19;
      if (v19)
      {
        uint64_t v38 = MEMORY[0x1E4FBC860];
        sub_1B5E4ED20();
        uint64_t v21 = 0;
        uint64_t v22 = v38;
        uint64_t v23 = v30;
        do
        {
          MEMORY[0x1BA9ACDF0](v21, v18);
          uint64_t v38 = v22;
          unint64_t v24 = *(void *)(v22 + 16);
          if (v24 >= *(void *)(v22 + 24) >> 1)
          {
            sub_1B5E4ED20();
            uint64_t v23 = v30;
            uint64_t v22 = v38;
          }
          ++v21;
          *(void *)(v22 + 16) = v24 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v22+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v24, v8, v23);
        }
        while (v20 != v21);
      }
      BlueprintSectionCollapsibleStateManager.state(for:)((BOOL *)&v38);
      char v25 = v38;
      uint64_t v26 = (void *)sub_1B61B24D0();
      swift_bridgeObjectRelease();
      if (v25) {
        objc_msgSend(v28, sel_insertRowsAtIndexPaths_withRowAnimation_, v26, 0);
      }
      else {
        objc_msgSend(v28, sel_deleteRowsAtIndexPaths_withRowAnimation_, v26, 0);
      }
    }
  }
}

uint64_t sub_1B5F755C0()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1B5F75608(uint64_t a1)
{
  sub_1B5F75144(a1, *(char **)(v1 + 64), *(void *)(v1 + 72), *(void **)(v1 + 80));
}

uint64_t BlueprintTableViewDataSource.registerKeyCommandTraversal(observable:)(uint64_t a1)
{
  *(void *)((char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0xC0)) = a1;
  swift_release();
  return swift_retain();
}

void BlueprintTableViewDataSource.identifiers(for:)()
{
}

uint64_t sub_1B5F756D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  v16[1] = a1;
  v16[2] = a2;
  uint64_t v17 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for BlueprintItem();
  v16[0] = sub_1B61B2F80();
  uint64_t v6 = *(void *)(v16[0] - 8);
  MEMORY[0x1F4188790](v16[0]);
  uint64_t v8 = (char *)v16 - v7;
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v10 = swift_getAssociatedConformanceWitness();
  uint64_t v18 = v9;
  uint64_t v19 = AssociatedTypeWitness;
  uint64_t v20 = v10;
  uint64_t v21 = AssociatedConformanceWitness;
  type metadata accessor for Blueprint();
  Blueprint.item(indexPath:)();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v5) == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, void))(v6 + 8))(v8, v16[0]);
    uint64_t v12 = 0;
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v12 = BlueprintItem.identifier.getter();
    uint64_t v13 = v14;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v8, v5);
  }
  uint64_t v15 = v17;
  *uint64_t v17 = v12;
  v15[1] = v13;
  return result;
}

uint64_t sub_1B5F758E4()
{
  OUTLINED_FUNCTION_18_18();
  return sub_1B5F756D0(v0, v1, v2);
}

void BlueprintTableViewDataSource.indexPaths(for:)()
{
}

void sub_1B5F75934()
{
  OUTLINED_FUNCTION_83();
  uint64_t v11 = v1;
  uint64_t v12 = v2;
  uint64_t v10 = v3;
  OUTLINED_FUNCTION_9_29();
  uint64_t v5 = v4;
  uint64_t v6 = v0[14];
  uint64_t v7 = v0[10];
  uint64_t v20 = OUTLINED_FUNCTION_32_12();
  uint64_t v21 = OUTLINED_FUNCTION_32_12();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_26_13();
  BlueprintProviderType.blueprint.getter();
  v13[2] = v7;
  long long v14 = *(_OWORD *)(v5 + 88);
  uint64_t v15 = v0[13];
  uint64_t v16 = v6;
  long long v17 = *(_OWORD *)(v5 + 120);
  uint64_t v18 = v0[17];
  uint64_t v19 = v20;
  v12(v11, v13, v10);
  OUTLINED_FUNCTION_75();
  v9();
  OUTLINED_FUNCTION_73();
}

void sub_1B5F75B04()
{
}

void sub_1B5F75C08()
{
}

Swift::Int __swiftcall BlueprintTableViewDataSource.numberOfSections(in:)(UITableView *in)
{
  OUTLINED_FUNCTION_134();
  OUTLINED_FUNCTION_33_10();
  OUTLINED_FUNCTION_33_10();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_134();
  BlueprintProviderType.blueprint.getter();
  swift_getWitnessTable();
  Swift::Int v2 = sub_1B61B29F0();
  OUTLINED_FUNCTION_40();
  v7(v3, v4, v5, v6);
  return v2;
}

Swift::Int sub_1B5F75DC4(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = a1;
  Swift::Int v6 = BlueprintTableViewDataSource.numberOfSections(in:)(v5);

  return v6;
}

Swift::Int __swiftcall BlueprintTableViewDataSource.tableView(_:numberOfRowsInSection:)(UITableView *_, Swift::Int numberOfRowsInSection)
{
  OUTLINED_FUNCTION_83();
  uint64_t v3 = v2;
  uint64_t v25 = v4;
  uint64_t v5 = *MEMORY[0x1E4FBC8C8] & *v2;
  uint64_t v6 = OUTLINED_FUNCTION_35_1();
  uint64_t v7 = OUTLINED_FUNCTION_35_1();
  OUTLINED_FUNCTION_43_1();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_43_1();
  uint64_t v9 = swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintSection();
  OUTLINED_FUNCTION_0_10();
  uint64_t v26 = v11;
  uint64_t v27 = v10;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v12);
  long long v14 = (char *)&v25 - v13;
  uint64_t v29 = v6;
  uint64_t v30 = v7;
  uint64_t v31 = AssociatedConformanceWitness;
  uint64_t v32 = v9;
  uint64_t v15 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  uint64_t v17 = v16;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v25 - v19;
  uint64_t v21 = (void *)((char *)v3 + *(void *)(v5 + 152));
  OUTLINED_FUNCTION_24();
  if (!*v21
    || (swift_retain(),
        BlueprintProviderType.blueprint.getter(),
        OUTLINED_FUNCTION_36_11(),
        (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v15),
        BlueprintSectionCollapsibleStateManager.state(for:)(&v28),
        swift_release(),
        (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27),
        v28))
  {
    BlueprintProviderType.blueprint.getter();
    OUTLINED_FUNCTION_36_11();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v15);
    swift_getWitnessTable();
    sub_1B61B29F0();
    OUTLINED_FUNCTION_5_1();
    v23(v22);
  }
  OUTLINED_FUNCTION_73();
  return result;
}

Swift::Int sub_1B5F76104(void *a1, uint64_t a2, void *a3, Swift::Int a4)
{
  id v6 = a3;
  uint64_t v7 = a1;
  Swift::Int v8 = BlueprintTableViewDataSource.tableView(_:numberOfRowsInSection:)(v7, a4);

  return v8;
}

void BlueprintTableViewDataSource.tableView(_:cellForRowAt:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v27 = v1;
  uint64_t v31 = v2;
  uint64_t v3 = *MEMORY[0x1E4FBC8C8] & *v0;
  OUTLINED_FUNCTION_44_9();
  uint64_t v26 = *(void *)(v4 + 120);
  OUTLINED_FUNCTION_44_9();
  uint64_t v25 = *(void *)(v5 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintLayoutItem();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_82();
  uint64_t v28 = v7;
  OUTLINED_FUNCTION_44_9();
  uint64_t v23 = v3;
  uint64_t v8 = OUTLINED_FUNCTION_31_12();
  uint64_t v9 = OUTLINED_FUNCTION_31_12();
  OUTLINED_FUNCTION_38_9();
  uint64_t v10 = swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_38_9();
  uint64_t v11 = swift_getAssociatedConformanceWitness();
  v33[0] = v8;
  v33[1] = v9;
  v33[2] = v10;
  void v33[3] = v11;
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_48_8();
  uint64_t v24 = type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_0_10();
  uint64_t v14 = v13;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_26_13();
  OUTLINED_FUNCTION_44_9();
  BlueprintProviderType.blueprint.getter();
  Blueprint.subscript.getter();
  OUTLINED_FUNCTION_40();
  v16();
  BlueprintLayoutProviderType.layoutBlueprint.getter(v25, v26);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  v32[0] = v17;
  v32[1] = AssociatedTypeWitness;
  v32[2] = v18;
  void v32[3] = AssociatedConformanceWitness;
  type metadata accessor for BlueprintLayout();
  uint64_t v19 = OUTLINED_FUNCTION_38_9();
  BlueprintLayout.subscript.getter(v19, v20);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_5_1();
  v21();
  v32[0] = v31;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, void *, uint64_t, void))(*(void *)(v23 + 128)
                                                                                            + 64))(v33, v11, v28, v32, v27, *(void *)(v23 + 96));
  OUTLINED_FUNCTION_5_1();
  v22();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v11, v24);
  OUTLINED_FUNCTION_73();
}

id sub_1B5F76560(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1B61AFCB0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B61AFC40();
  id v9 = a3;
  id v10 = a1;
  BlueprintTableViewDataSource.tableView(_:cellForRowAt:)();
  uint64_t v12 = v11;

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v12;
}

void BlueprintTableViewDataSource.tableView(_:canEditRowAt:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v23 = v0;
  OUTLINED_FUNCTION_134();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  uint64_t v24 = v2;
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_12();
  uint64_t v22 = v4;
  MEMORY[0x1F4188790](v5);
  v27[0] = swift_getAssociatedTypeWitness();
  v27[1] = AssociatedTypeWitness;
  v27[2] = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v6);
  type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_134();
  BlueprintProviderType.blueprint.getter();
  Blueprint.subscript.getter();
  uint64_t v8 = OUTLINED_FUNCTION_38_9();
  v9(v8);
  id v10 = *(uint64_t (**)(void))(v24 + 16);
  OUTLINED_FUNCTION_50_8();
  uint64_t v11 = v10();
  OUTLINED_FUNCTION_46_1(v11, (unint64_t *)&qword_1EB63EEE0);
  if (swift_dynamicCast())
  {
    sub_1B5E30E70(v25, (uint64_t)v27);
    uint64_t v12 = AssociatedConformanceWitness;
    uint64_t v13 = v29;
    __swift_project_boxed_opaque_existential_1(v27, AssociatedConformanceWitness);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13))
    {
      OUTLINED_FUNCTION_5_1();
      v15(v14);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      goto LABEL_11;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  else
  {
    uint64_t v26 = 0;
    memset(v25, 0, sizeof(v25));
    sub_1B5F76A54((uint64_t)v25, (unint64_t *)&qword_1E9DA9E70, (unint64_t *)&qword_1EB63EEE0, (uint64_t)&protocol descriptor for BlueprintViewActionable);
  }
  if (objc_msgSend(v23, sel_isEditing, v22))
  {
    OUTLINED_FUNCTION_50_8();
    uint64_t v16 = v10();
    OUTLINED_FUNCTION_46_1(v16, &qword_1E9DAA940);
    if (OUTLINED_FUNCTION_27_12())
    {
      uint64_t v17 = OUTLINED_FUNCTION_7_37();
      v18(v17);
      OUTLINED_FUNCTION_16_2();
      v19();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    }
    else
    {
      OUTLINED_FUNCTION_45_8();
      OUTLINED_FUNCTION_16_2();
      v21();
      sub_1B5F76A54((uint64_t)v25, (unint64_t *)&unk_1E9DA9E60, &qword_1E9DAA940, (uint64_t)&protocol descriptor for Movable);
    }
  }
  else
  {
    OUTLINED_FUNCTION_5_1();
    v20();
  }
LABEL_11:
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5F76A54(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_1B5F76ABC(0, a2, a3, a4, MEMORY[0x1E4FBB718]);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_5_1();
  v5();
  return a1;
}

void sub_1B5F76ABC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1B5E001A8(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1B5F76B28(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1B5F779AC(a1, a2, a3, a4, (uint64_t (*)(id, char *))BlueprintTableViewDataSource.tableView(_:canEditRowAt:));
}

void BlueprintTableViewDataSource.tableView(_:commit:forRowAt:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v1 = v0;
  uint64_t v93 = v2;
  uint64_t v4 = v3;
  uint64_t v80 = *MEMORY[0x1E4FBC8C8] & *v1;
  uint64_t v5 = type metadata accessor for BlueprintViewAction.Action(0);
  uint64_t v6 = OUTLINED_FUNCTION_14(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_4();
  uint64_t v82 = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  uint64_t v87 = v9;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_82();
  uint64_t v88 = v11;
  sub_1B5F77498(0, &qword_1EB63ED80, (void (*)(uint64_t))type metadata accessor for BlueprintViewAction);
  OUTLINED_FUNCTION_14(v12);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_82();
  uint64_t v85 = v14;
  uint64_t v84 = type metadata accessor for BlueprintViewAction(0);
  OUTLINED_FUNCTION_3_0();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_4();
  uint64_t v83 = v16;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v89 = type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_0_10();
  uint64_t v86 = v18;
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_12();
  uint64_t v81 = v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v91 = (char *)&v74 - v22;
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t v24 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v94 = v23;
  *((void *)&v94 + 1) = AssociatedTypeWitness;
  *(void *)&long long v95 = v24;
  *((void *)&v95 + 1) = AssociatedConformanceWitness;
  uint64_t v25 = type metadata accessor for BlueprintSection();
  OUTLINED_FUNCTION_0_10();
  uint64_t v90 = v26;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v27);
  OUTLINED_FUNCTION_82();
  uint64_t v92 = v28;
  *(void *)&long long v94 = v23;
  *((void *)&v94 + 1) = AssociatedTypeWitness;
  *(void *)&long long v95 = v24;
  *((void *)&v95 + 1) = AssociatedConformanceWitness;
  uint64_t v29 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  uint64_t v31 = v30;
  MEMORY[0x1F4188790](v32);
  OUTLINED_FUNCTION_12();
  uint64_t v79 = v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v36 = (char *)&v74 - v35;
  if (v4 == 2 && sub_1B61AFCA0() == 2)
  {
    uint64_t v77 = v25;
    char v37 = (char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0xA8);
    OUTLINED_FUNCTION_39_8();
    BlueprintProviderType.blueprint.getter();
    swift_getWitnessTable();
    uint64_t v38 = sub_1B61B29F0();
    uint64_t v78 = v29;
    if (sub_1B61AFC90() >= v38)
    {
      (*(void (**)(char *, uint64_t))(v31 + 8))(v36, v78);
      goto LABEL_14;
    }
    uint64_t v74 = v37;
    uint64_t v75 = v31;
    uint64_t v39 = sub_1B61AFC90();
    uint64_t v40 = v78;
    Blueprint.subscript.getter(v39, v78);
    uint64_t v76 = v36;
    uint64_t v41 = v77;
    swift_getWitnessTable();
    uint64_t v42 = sub_1B61B29F0();
    if (sub_1B61AFC80() >= v42)
    {
      OUTLINED_FUNCTION_5_1();
      v62();
      uint64_t v63 = OUTLINED_FUNCTION_23_16();
      uint64_t v65 = v40;
    }
    else
    {
      uint64_t v43 = sub_1B61AFC80();
      uint64_t v44 = v91;
      BlueprintSection.subscript.getter(v43, v41);
      uint64_t v45 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v87 + 16))(v88, v44, AssociatedTypeWitness);
      OUTLINED_FUNCTION_46_1(v45, (unint64_t *)&qword_1EB63EEE0);
      if (swift_dynamicCast())
      {
        uint64_t v46 = *((void *)&v95 + 1);
        uint64_t v47 = v96;
        __swift_project_boxed_opaque_existential_1(&v94, *((uint64_t *)&v95 + 1));
        uint64_t v48 = v85;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 40))(2, v46, v47);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v94);
        if (__swift_getEnumTagSinglePayload(v48, 1, v84) != 1)
        {
          uint64_t v49 = v83;
          sub_1B5F78480(v48, v83, (void (*)(void))type metadata accessor for BlueprintViewAction);
          type metadata accessor for BlueprintViewActionRequest();
          uint64_t v50 = v81;
          OUTLINED_FUNCTION_33();
          v51();
          uint64_t v52 = v82;
          BlueprintViewAction.action.getter(v82);
          LOBYTE(v94) = 1;
          uint64_t v53 = BlueprintViewActionRequest.__allocating_init(item:action:source:sourceView:completion:)(v50, v52, (char *)&v94, 0, (uint64_t)nullsub_1, 0);
          uint64_t v54 = (char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x90);
          OUTLINED_FUNCTION_24();
          uint64_t v55 = MEMORY[0x1BA9B1EC0](v54);
          uint64_t v56 = (void (**)(void))(v75 + 8);
          if (v55)
          {
            uint64_t v57 = (void *)v55;
            uint64_t v58 = v79;
            OUTLINED_FUNCTION_39_8();
            BlueprintProviderType.blueprint.getter();
            (*(void (**)(uint64_t, uint64_t, void))(*(void *)(v80 + 136) + 72))(v58, v53, *(void *)(v80 + 104));
            swift_release();

            uint64_t v59 = *v56;
            OUTLINED_FUNCTION_75();
            v59();
            sub_1B5F78288(v49);
            OUTLINED_FUNCTION_40();
            v60();
            OUTLINED_FUNCTION_5_1();
            v61();
            OUTLINED_FUNCTION_75();
            v59();
          }
          else
          {
            swift_release();
            sub_1B5F78288(v49);
            OUTLINED_FUNCTION_40();
            v71();
            OUTLINED_FUNCTION_5_1();
            v72();
            OUTLINED_FUNCTION_75();
            v73();
          }
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v96 = 0;
        long long v94 = 0u;
        long long v95 = 0u;
        sub_1B5F76A54((uint64_t)&v94, (unint64_t *)&qword_1E9DA9E70, (unint64_t *)&qword_1EB63EEE0, (uint64_t)&protocol descriptor for BlueprintViewActionable);
        uint64_t v48 = v85;
        __swift_storeEnumTagSinglePayload(v85, 1, 1, v84);
      }
      sub_1B5F784E4(v48, &qword_1EB63ED80, (void (*)(uint64_t))type metadata accessor for BlueprintViewAction);
      sub_1B61B2B80();
      sub_1B5F76ABC(0, (unint64_t *)&qword_1EB64D4A0, (unint64_t *)&qword_1EB64D4B0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v66 = swift_allocObject();
      *(_OWORD *)(v66 + 16) = xmmword_1B61BE690;
      *(void *)&long long v94 = 0;
      *((void *)&v94 + 1) = 0xE000000000000000;
      swift_getWitnessTable();
      sub_1B61B3720();
      long long v67 = v94;
      *(void *)(v66 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v66 + 64) = sub_1B5E2E40C();
      *(_OWORD *)(v66 + 32) = v67;
      sub_1B5DFF760(0, (unint64_t *)&qword_1EB64D490);
      uint64_t v68 = (void *)sub_1B61B2F40();
      sub_1B61B0F90();
      swift_bridgeObjectRelease();

      OUTLINED_FUNCTION_5_1();
      v69();
      OUTLINED_FUNCTION_5_1();
      v70();
      uint64_t v63 = OUTLINED_FUNCTION_23_16();
      uint64_t v65 = v78;
    }
    v64(v63, v65);
  }
LABEL_14:
  OUTLINED_FUNCTION_73();
}

void sub_1B5F77498(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B61B2F80();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1B5F774EC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1B61AFCB0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B61AFC40();
  id v9 = a3;
  id v10 = a1;
  BlueprintTableViewDataSource.tableView(_:commit:forRowAt:)();

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void BlueprintTableViewDataSource.tableView(_:canMoveRowAt:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v26 = v1;
  uint64_t v27 = v0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  uint64_t v23 = v3;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_82();
  uint64_t v24 = v5;
  uint64_t v6 = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_37_13();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_37_13();
  v29[0] = v6;
  v29[1] = AssociatedTypeWitness;
  uint64_t v29[2] = AssociatedConformanceWitness;
  v29[3] = swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  uint64_t v10 = v9;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v22 - v12;
  uint64_t v25 = type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_0_10();
  uint64_t v15 = v14;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_26_13();
  BlueprintProviderType.blueprint.getter();
  Blueprint.subscript.getter();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
  if (sub_1B5F778E0(v27))
  {
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v24, AssociatedConformanceWitness, AssociatedTypeWitness);
    OUTLINED_FUNCTION_46_1(v17, &qword_1E9DAA940);
    if (OUTLINED_FUNCTION_27_12())
    {
      uint64_t v18 = OUTLINED_FUNCTION_7_37();
      v19(v18);
      OUTLINED_FUNCTION_16_2();
      v20();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    }
    else
    {
      OUTLINED_FUNCTION_45_8();
      OUTLINED_FUNCTION_16_2();
      v21();
      sub_1B5F76A54((uint64_t)&v28, (unint64_t *)&unk_1E9DA9E60, &qword_1E9DAA940, (uint64_t)&protocol descriptor for Movable);
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(AssociatedConformanceWitness, v25);
  }
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5F778E0(void *a1)
{
  id v2 = objc_msgSend(a1, sel_window);
  if (v2
    && (uint64_t v3 = v2, v4 = objc_msgSend(v2, sel_traitCollection), v3, v4)
    && ((id v5 = objc_msgSend(v4, sel_verticalSizeClass),
         id v6 = objc_msgSend(v4, sel_horizontalSizeClass),
         v4,
         v5 == (id)2)
      ? (BOOL v7 = v6 == (id)2)
      : (BOOL v7 = 0),
        v7))
  {
    return 1;
  }
  else
  {
    return (uint64_t)objc_msgSend(a1, sel_isEditing);
  }
}

uint64_t sub_1B5F77994(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1B5F779AC(a1, a2, a3, a4, (uint64_t (*)(id, char *))BlueprintTableViewDataSource.tableView(_:canMoveRowAt:));
}

uint64_t sub_1B5F779AC(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(id, char *))
{
  sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B61AFC40();
  id v11 = a3;
  id v12 = a1;
  LOBYTE(a5) = a5(v11, v10);

  OUTLINED_FUNCTION_40();
  v13();
  return a5 & 1;
}

void BlueprintTableViewDataSource.tableView(_:moveRowAt:to:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v20 = v2;
  uint64_t v22 = v3;
  uint64_t v19 = *MEMORY[0x1E4FBC8C8] & *v0;
  uint64_t v4 = OUTLINED_FUNCTION_2_32();
  uint64_t v5 = OUTLINED_FUNCTION_2_32();
  OUTLINED_FUNCTION_43_1();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_43_1();
  uint64_t v23 = v4;
  uint64_t v24 = v5;
  uint64_t v25 = AssociatedConformanceWitness;
  uint64_t v26 = swift_getAssociatedConformanceWitness();
  uint64_t v7 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_48_8();
  uint64_t v21 = type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_0_10();
  uint64_t v12 = v11;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v19 - v14;
  OUTLINED_FUNCTION_42_10();
  Blueprint.subscript.getter();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v22(v1, v7);
  uint64_t v16 = (char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90);
  OUTLINED_FUNCTION_24();
  uint64_t v17 = MEMORY[0x1BA9B1EC0](v16);
  if (v17)
  {
    uint64_t v18 = (void *)v17;
    OUTLINED_FUNCTION_42_10();
    (*(void (**)(uint64_t, char *, uint64_t, void))(*(void *)(v19 + 136) + 168))(v1, v15, v20, *(void *)(v19 + 104));

    v22(v1, v7);
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v21);
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5F77D24(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1B61AFCB0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v16 - v10;
  sub_1B61AFC40();
  sub_1B61AFC40();
  id v12 = a3;
  id v13 = a1;
  BlueprintTableViewDataSource.tableView(_:moveRowAt:to:)();

  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  return ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
}

id BlueprintTableViewDataSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void BlueprintTableViewDataSource.init()()
{
}

void sub_1B5F77ED0()
{
}

id BlueprintTableViewDataSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B5F77F18()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_0_0();
  swift_release();
  OUTLINED_FUNCTION_0_0();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_28_1(*(void *)(v0 + 168));
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(void))(v1 + 8))();
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_28_1(*(void *)(v2 + 176));
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(void))(v3 + 8))();
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_28_1(*(void *)(v4 + 184));
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(void))(v5 + 8))();
  OUTLINED_FUNCTION_0_0();
  return swift_release();
}

void (*sub_1B5F78098(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = BlueprintTableViewDataSource.dragReorderDelegate.modify();
  return sub_1B5E969A4;
}

double sub_1B5F780F0@<D0>(_OWORD *a1@<X8>)
{
  return BlueprintTableViewDataSource.diffableReorderDataSource.getter(a1);
}

Swift::Void __swiftcall BlueprintTableViewDataSource.traitCollectionDidChange(_:traitCollection:)(UITraitCollection_optional _, UITraitCollection traitCollection)
{
  uint64_t v3 = *(void *)&_.is_nil;
  Class isa = _.value.super.isa;
  uint64_t v5 = *(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v2) + 0x60);
  MEMORY[0x1F4188790](_.value.super.isa);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v11 - v8, &v2[*(void *)(v6 + 184)], v5);
  sub_1B5E001A8(0, &qword_1EB645CE0);
  if (swift_dynamicCast())
  {
    uint64_t v9 = v11[1];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(Class, uint64_t, uint64_t, uint64_t))(v9 + 8))(isa, v3, ObjectType, v9);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1B5F78288(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BlueprintViewAction(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B5F782EC()
{
  return 64;
}

__n128 sub_1B5F782F8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  long long v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1B5F7830C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for BlueprintTableViewDataSource()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for BlueprintTableViewDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BlueprintTableViewDataSource);
}

uint64_t dispatch thunk of BlueprintTableViewDataSource.__allocating_init(blueprintProvider:blueprintLayoutProvider:blueprintViewCellProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t sub_1B5F78480(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1B5F784E4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1B5F77498(0, a2, a3);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_5_1();
  v4();
  return a1;
}

void sub_1B5F78538()
{
  if (!qword_1E9DAA948[0])
  {
    type metadata accessor for HiddenView();
    unint64_t v0 = type metadata accessor for TableViewCell();
    if (!v1) {
      atomic_store(v0, qword_1E9DAA948);
    }
  }
}

uint64_t FetchDeduper.__allocating_init()()
{
  OUTLINED_FUNCTION_3_6();
  uint64_t v0 = swift_allocObject();
  FetchDeduper.init()();
  return v0;
}

uint64_t FetchDeduper.dequeue(key:queueBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = v4;
  uint64_t v12 = sub_1B61B1D90();
  OUTLINED_FUNCTION_0_13();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v23 = OUTLINED_FUNCTION_2_62();
  OUTLINED_FUNCTION_0_13();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_4_7();
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = v7;
  unsigned char v19[3] = a1;
  v19[4] = a2;
  void v19[5] = a3;
  void v19[6] = a4;
  aBlock[4] = sub_1B5F79A08;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B5E3729C;
  aBlock[3] = &block_descriptor_34;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  sub_1B61B1F70();
  swift_retain();
  sub_1B61B1DB0();
  uint64_t v21 = (void (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1B5F79B9C((unint64_t *)&qword_1EB647A40, MEMORY[0x1E4FBCB00]);
  sub_1B5F79BE4(0, (unint64_t *)&qword_1EB647AD8, v21);
  sub_1B5F79A18((unint64_t *)&qword_1EB647AE0, (unint64_t *)&qword_1EB647AD8, v21);
  sub_1B61B3100();
  MEMORY[0x1BA9AFE10](0, v6, v5, v20);
  _Block_release(v20);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v5, v12);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v6, v23);
  return swift_release();
}

uint64_t FetchDeduper.queue(key:completion:resultBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = v5;
  uint64_t v34 = a4;
  uint64_t v35 = a5;
  uint64_t v33 = a1;
  uint64_t v11 = *v5;
  uint64_t v37 = sub_1B61B1D90();
  OUTLINED_FUNCTION_0_13();
  uint64_t v40 = v12;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_2_62();
  OUTLINED_FUNCTION_0_13();
  uint64_t v38 = v15;
  uint64_t v39 = v14;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_4_7();
  uint64_t v16 = *(void *)(v11 + 80);
  OUTLINED_FUNCTION_0_13();
  uint64_t v18 = v17;
  uint64_t v20 = *(void *)(v19 + 64);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v32 - v22;
  uint64_t v36 = v8[3];
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v32 - v22, a3, v16);
  unint64_t v24 = (*(unsigned __int8 *)(v18 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v25 = (char *)swift_allocObject();
  *((void *)v25 + 2) = v16;
  *((void *)v25 + 3) = v8;
  *((void *)v25 + 4) = v33;
  *((void *)v25 + 5) = a2;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v25[v24], v23, v16);
  uint64_t v26 = &v25[(v20 + v24 + 7) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v27 = v35;
  *(void *)uint64_t v26 = v34;
  *((void *)v26 + 1) = v27;
  aBlock[4] = sub_1B5F79B2C;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B5E3729C;
  aBlock[3] = &block_descriptor_6_1;
  uint64_t v28 = _Block_copy(aBlock);
  swift_retain();
  sub_1B61B1F70();
  swift_retain();
  sub_1B61B1DB0();
  uint64_t v41 = MEMORY[0x1E4FBC860];
  uint64_t v29 = (void (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1B5F79B9C((unint64_t *)&qword_1EB647A40, MEMORY[0x1E4FBCB00]);
  sub_1B5F79BE4(0, (unint64_t *)&qword_1EB647AD8, v29);
  sub_1B5F79A18((unint64_t *)&qword_1EB647AE0, (unint64_t *)&qword_1EB647AD8, v29);
  uint64_t v30 = v37;
  sub_1B61B3100();
  MEMORY[0x1BA9AFE10](0, v7, v6, v28);
  _Block_release(v28);
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v6, v30);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v7, v39);
  return swift_release();
}

BOOL static FetchDeduper.Result.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FetchDeduper.Result.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t FetchDeduper.Result.hashValue.getter()
{
  return sub_1B61B3940();
}

uint64_t sub_1B5F78C10()
{
  return sub_1B61B3940();
}

void *FetchDeduper.init()()
{
  uint64_t v14 = sub_1B61B2C40();
  OUTLINED_FUNCTION_0_13();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1B61B2C20();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_4_7();
  uint64_t v7 = sub_1B61B1DF0();
  MEMORY[0x1F4188790](v7 - 8);
  sub_1B61B2650();
  v0[2] = sub_1B61B1EE0();
  v13[1] = sub_1B5E75560();
  sub_1B61B1DE0();
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v8 = (void (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1B5F79B9C(&qword_1EB647BD8, MEMORY[0x1E4FBCC10]);
  sub_1B5F79BE4(0, (unint64_t *)&qword_1EB647B00, v8);
  sub_1B5F79A18(&qword_1EB647B08, (unint64_t *)&qword_1EB647B00, v8);
  sub_1B61B3100();
  uint64_t v9 = *MEMORY[0x1E4FBCC58];
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  uint64_t v11 = v14;
  v10(v5, v9, v14);
  OUTLINED_FUNCTION_12_16();
  v0[3] = sub_1B61B2C80();
  sub_1B61B1DE0();
  sub_1B61B2C10();
  v10(v5, v9, v11);
  OUTLINED_FUNCTION_12_16();
  v0[4] = sub_1B61B2C80();
  return v0;
}

uint64_t sub_1B5F78EF4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v45 = a6;
  uint64_t v46 = a5;
  uint64_t v44 = a4;
  uint64_t v9 = *a1;
  uint64_t v48 = sub_1B61B1D90();
  uint64_t v51 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v47 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1B61B1DF0();
  uint64_t v49 = *(void *)(v11 - 8);
  uint64_t v50 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v9 + 80);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v18 = (char *)&v44 - v17;
  swift_beginAccess();
  uint64_t v19 = a1[2];
  uint64_t v53 = a2;
  uint64_t v54 = a3;
  uint64_t v20 = sub_1B61B2650();
  sub_1B61B1F70();
  MEMORY[0x1BA9AF190](v52, &v53, v19, MEMORY[0x1E4FBB1A0], v20, MEMORY[0x1E4FBB1B0]);
  swift_bridgeObjectRelease();
  uint64_t v21 = v52[0];
  swift_endAccess();
  swift_bridgeObjectRelease();
  if (v21)
  {
    uint64_t v22 = v14;
    uint64_t v23 = v44;
    swift_beginAccess();
    v52[0] = a2;
    v52[1] = a3;
    sub_1B61B1F70();
    sub_1B61B1FD0();
    unint64_t v24 = (void (*)(uint64_t *, void))sub_1B61B1FE0();
    if (*v25)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v23, v15);
      sub_1B61B2600();
      v24(&aBlock, 0);
      swift_endAccess();
      swift_bridgeObjectRelease();
    }
    else
    {
      v24(&aBlock, 0);
      swift_bridgeObjectRelease();
      swift_endAccess();
    }
    uint64_t v35 = v22;
    uint64_t v36 = v45;
    uint64_t v37 = (void *)swift_allocObject();
    uint64_t v38 = v46;
    v37[2] = v15;
    v37[3] = v38;
    v37[4] = v36;
    uint64_t v59 = sub_1B5F79E90;
    uint64_t v60 = v37;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v56 = 1107296256;
    uint64_t v57 = sub_1B5E3729C;
    uint64_t v58 = &block_descriptor_22;
    uint64_t v39 = _Block_copy(&aBlock);
    swift_retain();
    sub_1B61B1DB0();
    uint64_t v53 = MEMORY[0x1E4FBC860];
    uint64_t v40 = (void (*)(uint64_t))MEMORY[0x1E4FBCB00];
    sub_1B5F79B9C((unint64_t *)&qword_1EB647A40, MEMORY[0x1E4FBCB00]);
    sub_1B5F79BE4(0, (unint64_t *)&qword_1EB647AD8, v40);
    sub_1B5F79A18((unint64_t *)&qword_1EB647AE0, (unint64_t *)&qword_1EB647AD8, v40);
    uint64_t v42 = v47;
    uint64_t v41 = v48;
    sub_1B61B3100();
    MEMORY[0x1BA9AFE10](0, v35, v42, v39);
    _Block_release(v39);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v42, v41);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v35, v50);
  }
  else
  {
    sub_1B60FA0A0(v15, v15);
    swift_allocObject();
    sub_1B61B1F70();
    uint64_t v26 = sub_1B61B2560();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v27, v44, v15);
    v52[0] = sub_1B5EDC250(v26);
    uint64_t v53 = a2;
    uint64_t v54 = a3;
    swift_beginAccess();
    sub_1B61B1FD0();
    sub_1B61B2000();
    swift_endAccess();
    uint64_t v28 = (void *)swift_allocObject();
    uint64_t v30 = v45;
    uint64_t v29 = v46;
    void v28[2] = v15;
    v28[3] = v29;
    v28[4] = v30;
    uint64_t v59 = sub_1B5F79E88;
    uint64_t v60 = v28;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v56 = 1107296256;
    uint64_t v57 = sub_1B5E3729C;
    uint64_t v58 = &block_descriptor_16;
    uint64_t v31 = _Block_copy(&aBlock);
    swift_retain();
    sub_1B61B1DB0();
    uint64_t v53 = MEMORY[0x1E4FBC860];
    uint64_t v32 = (void (*)(uint64_t))MEMORY[0x1E4FBCB00];
    sub_1B5F79B9C((unint64_t *)&qword_1EB647A40, MEMORY[0x1E4FBCB00]);
    sub_1B5F79BE4(0, (unint64_t *)&qword_1EB647AD8, v32);
    sub_1B5F79A18((unint64_t *)&qword_1EB647AE0, (unint64_t *)&qword_1EB647AD8, v32);
    uint64_t v34 = v47;
    uint64_t v33 = v48;
    sub_1B61B3100();
    MEMORY[0x1BA9AFE10](0, v14, v34, v31);
    _Block_release(v31);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v33);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v14, v50);
  }
  return swift_release();
}

uint64_t sub_1B5F79600(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v8 = *a1;
  uint64_t v9 = sub_1B61B1D90();
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1B61B1DF0();
  uint64_t v29 = *(void *)(v12 - 8);
  uint64_t v30 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v15 = a1[2];
  uint64_t v34 = a2;
  uint64_t v35 = a3;
  uint64_t v16 = *(void *)(v8 + 80);
  uint64_t v17 = sub_1B61B2650();
  sub_1B61B1F70();
  MEMORY[0x1BA9AF190](&v36, &v34, v15, MEMORY[0x1E4FBB1A0], v17, MEMORY[0x1E4FBB1B0]);
  swift_bridgeObjectRelease();
  uint64_t v18 = v36;
  swift_endAccess();
  if (!v18) {
    uint64_t v18 = sub_1B61B2590();
  }
  uint64_t v34 = a2;
  uint64_t v35 = a3;
  swift_beginAccess();
  sub_1B61B1FD0();
  sub_1B61B1F30();
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v19 = (void *)swift_allocObject();
  uint64_t v20 = v27;
  uint64_t v21 = v28;
  v19[2] = v16;
  unsigned char v19[3] = v20;
  v19[4] = v21;
  void v19[5] = v18;
  aBlock[4] = sub_1B5F79F10;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B5E3729C;
  aBlock[3] = &block_descriptor_28;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  sub_1B61B1DB0();
  uint64_t v34 = MEMORY[0x1E4FBC860];
  uint64_t v23 = (void (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1B5F79B9C((unint64_t *)&qword_1EB647A40, MEMORY[0x1E4FBCB00]);
  sub_1B5F79BE4(0, (unint64_t *)&qword_1EB647AD8, v23);
  sub_1B5F79A18((unint64_t *)&qword_1EB647AE0, (unint64_t *)&qword_1EB647AD8, v23);
  uint64_t v24 = v32;
  sub_1B61B3100();
  MEMORY[0x1BA9AFE10](0, v14, v11, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v24);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v30);
  return swift_release();
}

uint64_t sub_1B5F799C0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5F79A08()
{
  return sub_1B5F79600(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1B5F79A18(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B5F79BE4(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B5F79A68()
{
  uint64_t v1 = *(void *)(v0 + 16);
  OUTLINED_FUNCTION_0_13();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5F79B2C()
{
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80);
  unint64_t v2 = (*(void *)(*(void *)(*(void *)(v0 + 16) - 8) + 64) + v1 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1B5F78EF4(*(uint64_t **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), v0 + v1, *(void *)(v0 + v2), *(void *)(v0 + v2 + 8));
}

uint64_t sub_1B5F79B9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B5F79BE4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B61B2650();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t FetchDeduper.deinit()
{
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t FetchDeduper.__deallocating_deinit()
{
  FetchDeduper.deinit();
  OUTLINED_FUNCTION_3_6();
  return swift_deallocClassInstance();
}

uint64_t sub_1B5F79C94()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B5F79CB0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FetchDeduper()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for FetchDeduper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FetchDeduper);
}

uint64_t dispatch thunk of FetchDeduper.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

unsigned char *sub_1B5F79D4C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F79E18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for FetchDeduper.Result()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B5F79E58()
{
  swift_release();
  OUTLINED_FUNCTION_3_6();
  return swift_deallocObject();
}

uint64_t sub_1B5F79E88()
{
  return sub_1B5F79E98(1);
}

uint64_t sub_1B5F79E90()
{
  return sub_1B5F79E98(0);
}

uint64_t sub_1B5F79E98(char a1)
{
  unint64_t v2 = *(uint64_t (**)(char *))(v1 + 24);
  char v4 = a1;
  return v2(&v4);
}

uint64_t sub_1B5F79ED0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B5F79F10()
{
  return (*(uint64_t (**)(void))(v0 + 24))(*(void *)(v0 + 40));
}

uint64_t sub_1B5F79F5C(uint64_t a1, void *a2, unsigned __int8 a3)
{
  uint64_t v6 = sub_1B61AFCB0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B5F7F414(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v34 - v11;
  uint64_t v42 = MEMORY[0x1E4FBC860];
  uint64_t v13 = *(void *)(a1 + 16);
  v34[1] = a1;
  if (v13)
  {
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v16 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v39 = *(void *)(v15 + 56);
    uint64_t v40 = v14;
    uint64_t v41 = v15;
    uint64_t v37 = (void (**)(char *, uint64_t))(v15 - 8);
    uint64_t v38 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    sub_1B61B1F70();
    uint64_t v36 = a3;
    while (1)
    {
      v40(v12, v16, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6) == 1) {
        break;
      }
      (*v38)(v9, v12, v6);
      uint64_t v17 = a2;
      id v18 = objc_msgSend(a2, sel_collectionViewLayout);
      uint64_t v19 = (void *)sub_1B61AFC00();
      id v20 = objc_msgSend(v18, sel_layoutAttributesForItemAtIndexPath_, v19);

      if (v20)
      {
        objc_msgSend(v20, sel_frame);
        CGRect v44 = CGRectIntegral(v43);
        double x = v44.origin.x;
        double y = v44.origin.y;
        CGFloat width = v44.size.width;
        CGFloat height = v44.size.height;
        objc_msgSend(v17, sel_bounds);
        CGRect v46 = CGRectIntegral(v45);
        CGFloat v25 = v46.origin.x;
        CGFloat v26 = v46.origin.y;
        CGFloat v27 = v46.size.width;
        CGFloat v28 = v46.size.height;
        a2 = v17;
        switch(v36)
        {
          case 1:
            v51.origin.double x = x;
            v51.origin.double y = y;
            v51.size.CGFloat width = width;
            v51.size.CGFloat height = height;
            if (!CGRectContainsRect(v46, v51)) {
              goto LABEL_18;
            }
            goto LABEL_19;
          case 2:
            if (v46.origin.x <= x && v46.origin.y <= y) {
              goto LABEL_19;
            }
            goto LABEL_18;
          case 3:
            double MaxX = CGRectGetMaxX(v46);
            v47.origin.double x = x;
            v47.origin.double y = y;
            v47.size.CGFloat width = width;
            v47.size.CGFloat height = height;
            if (CGRectGetMaxX(v47) > MaxX) {
              goto LABEL_18;
            }
            v48.origin.double x = v25;
            v48.origin.double y = v26;
            v48.size.CGFloat width = v27;
            v48.size.CGFloat height = v28;
            double MaxY = CGRectGetMaxY(v48);
            v49.origin.double x = x;
            v49.origin.double y = y;
            v49.size.CGFloat width = width;
            v49.size.CGFloat height = height;
            if (CGRectGetMaxY(v49) > MaxY) {
              goto LABEL_18;
            }
            goto LABEL_19;
          default:
            v50.origin.double x = x;
            v50.origin.double y = y;
            v50.size.CGFloat width = width;
            v50.size.CGFloat height = height;
            if (!CGRectIntersectsRect(v46, v50))
            {
LABEL_18:

              (*v37)(v9, v6);
              goto LABEL_23;
            }
LABEL_19:
            uint64_t v31 = ((uint64_t (*)(char *, uint64_t))*v37)(v9, v6);
            MEMORY[0x1BA9AF660](v31);
            if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1B61B2580();
            }
            sub_1B61B25D0();
            sub_1B61B2510();
            break;
        }
      }
      else
      {
        (*v37)(v9, v6);
      }
      a2 = v17;
LABEL_23:
      v16 += v39;
      if (!--v13) {
        goto LABEL_26;
      }
    }
  }
  else
  {
    sub_1B61B1F70();
LABEL_26:
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, v6);
  }
  swift_bridgeObjectRelease();
  uint64_t v32 = v42;

  return v32;
}

id UICollectionView.blueprintViewDataSource.getter()
{
  id result = objc_msgSend(v0, sel_dataSource);
  if (result)
  {
    uint64_t v2 = (uint64_t)result;
    swift_getObjectType();
    id result = (id)dynamic_cast_existential_1_conditional(v2);
    if (!result)
    {
      swift_unknownObjectRelease();
      return 0;
    }
  }
  return result;
}

void UICollectionView.reload(apply:animated:completion:)(void (*a1)(void), uint64_t a2, char a3, void (*a4)(uint64_t))
{
  if (objc_msgSend(v4, sel_dataSource))
  {
    id v8 = v4;
    uint64_t v9 = (void (*)(void))sub_1B5F7E728(v8);
    uint64_t v11 = v10;
    uint64_t updated = TSAccessibilityBlockPostingOfUpdateElementVisualsNotifications();
    ((void (*)(uint64_t))a1)(updated);
    id v13 = v8;
    sub_1B5E4DC4C((uint64_t)v9);
    sub_1B6063028(a3 & 1, (uint64_t)v13, v13, v9, v11);
    uint64_t v14 = OUTLINED_FUNCTION_4_50();
    a4(v14);
    sub_1B61B0150();
    sub_1B5E3799C((uint64_t)v9);
    OUTLINED_FUNCTION_73();
    swift_unknownObjectRelease();
  }
  else
  {
    a1();
    uint64_t v16 = OUTLINED_FUNCTION_4_50();
    a4(v16);
    OUTLINED_FUNCTION_73();
  }
}

void sub_1B5F7A590(void *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v42 = a3;
  uint64_t v5 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_80();
  uint64_t v11 = v10 - v9;
  sub_1B61AFBD0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v45 = v13;
  uint64_t v46 = v12;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  CGRect v43 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  CGRect v44 = (char *)v39 - v16;
  id v17 = objc_msgSend(a1, sel_collectionViewLayout);
  objc_msgSend(v17, sel_invalidateLayout);

  objc_msgSend(a1, sel_reloadData);
  id v18 = objc_msgSend(a1, sel_indexPathsForVisibleItems);
  uint64_t v49 = v5;
  uint64_t v19 = sub_1B61B24E0();

  uint64_t v20 = *(void *)(v19 + 16);
  if (v20)
  {
    uint64_t v40 = a1;
    uint64_t v41 = a2;
    CGRect v51 = (void *)MEMORY[0x1E4FBC860];
    sub_1B5E4EB40(0, v20, 0);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    uint64_t v21 = v7 + 16;
    uint64_t v23 = *(unsigned __int8 *)(v21 + 64);
    v39[1] = v19;
    uint64_t v24 = v19 + ((v23 + 32) & ~v23);
    uint64_t v47 = *(void *)(v21 + 56);
    CGRect v48 = v22;
    CGFloat v25 = (void (**)(uint64_t, uint64_t))(v21 - 8);
    do
    {
      uint64_t v26 = v49;
      v48(v11, v24, v49);
      uint64_t v27 = sub_1B61AFC90();
      (*v25)(v11, v26);
      CGFloat v28 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B5E4EB40(0, v28[2] + 1, 1);
        CGFloat v28 = v51;
      }
      unint64_t v30 = v28[2];
      unint64_t v29 = v28[3];
      if (v30 >= v29 >> 1)
      {
        sub_1B5E4EB40(v29 > 1, v30 + 1, 1);
        CGFloat v28 = v51;
      }
      void v28[2] = v30 + 1;
      v28[v30 + 4] = v27;
      v24 += v47;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    a1 = v40;
    a2 = v41;
  }
  else
  {
    swift_bridgeObjectRelease();
    CGFloat v28 = (void *)MEMORY[0x1E4FBC860];
  }
  sub_1B5F7F528(&qword_1EB6424D8, MEMORY[0x1E4F27D00]);
  uint64_t v31 = v43;
  uint64_t v32 = v46;
  sub_1B61B30F0();
  uint64_t v33 = v28[2];
  if (v33)
  {
    uint64_t v34 = v28 + 4;
    do
    {
      uint64_t v35 = *v34++;
      uint64_t v50 = v35;
      sub_1B61B30D0();
      --v33;
    }
    while (v33);
  }
  swift_bridgeObjectRelease();
  uint64_t v37 = v44;
  uint64_t v36 = v45;
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v44, v31, v32);
  if ((sub_1B61AFB90() & 1) == 0)
  {
    uint64_t v38 = (void *)sub_1B61AFB30();
    objc_msgSend(a1, sel_reloadSections_, v38);
  }
  if (a2) {
    a2();
  }
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v32);
  OUTLINED_FUNCTION_73();
}

uint64_t UICollectionView.update(with:apply:response:animated:beforeCompletion:completion:)(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void (*a8)(void), uint64_t a9)
{
  uint64_t v10 = v9;
  id v18 = objc_msgSend(v10, sel_dataSource);
  if (!v18)
  {
    a2();
    uint64_t v23 = OUTLINED_FUNCTION_4_50();
    return ((uint64_t (*)(uint64_t))a8)(v23);
  }
  id v19 = v18;
  uint64_t v26 = a8;
  if (!UICollectionView.transition.getter()) {
    goto LABEL_9;
  }
  if (!BlueprintCollectionViewLayoutTransition.isTransitioning.getter())
  {
    swift_release();
LABEL_9:
    uint64_t v24 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1B5E176E4(a1, (uint64_t)v28);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v24;
    *(void *)(v25 + 24) = a2;
    *(void *)(v25 + 32) = a3;
    *(void *)(v25 + 40) = v26;
    *(void *)(v25 + 48) = a9;
    *(void *)(v25 + 56) = a4;
    *(unsigned char *)(v25 + 64) = a5 & 1;
    sub_1B5E30E70(v28, v25 + 72);
    *(void *)(v25 + 112) = a6;
    *(void *)(v25 + 120) = a7;
    *(void *)(v25 + 128) = v19;
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B5F7C4D4(sub_1B5F7E900, v25);
    swift_release();
    swift_release();
    return swift_unknownObjectRelease();
  }
  sub_1B5F7E944();
  uint64_t v20 = (void *)swift_allocError();
  *(void *)uint64_t v21 = 0xD00000000000002ELL;
  *(void *)(v21 + 8) = 0x80000001B61E53B0;
  *(unsigned char *)(v21 + 16) = 1;
  a8();

  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t UICollectionView.transition.getter()
{
  id v1 = objc_msgSend(v0, sel_collectionViewLayout);
  swift_getObjectType();
  uint64_t v3 = dynamic_cast_existential_1_conditional((uint64_t)v1);
  if (v3)
  {
    uint64_t v4 = v2;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
  }

  return v3;
}

void sub_1B5F7AC2C(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17 = a1 + 16;
  swift_beginAccess();
  uint64_t v18 = MEMORY[0x1BA9B1EC0](v17);
  if (v18)
  {
    id v19 = (void *)v18;
    uint64_t v20 = UICollectionView.transition.getter();
    if (v20)
    {
      if (BlueprintCollectionViewLayoutTransition.isTransitioning.getter())
      {
        sub_1B5F7E944();
        uint64_t v21 = (void *)swift_allocError();
        *(void *)uint64_t v22 = 0xD00000000000003ELL;
        *(void *)(v22 + 8) = 0x80000001B61E53E0;
        *(unsigned char *)(v22 + 16) = 1;
        a4();

        swift_release();
        return;
      }
      uint64_t v20 = swift_release();
    }
    uint64_t v25 = a5;
    int v26 = a7;
    if (a6)
    {
      char v27 = 0;
      BlueprintViewActionResponse.complete(apply:)((TeaUI::BlueprintViewActionResponse::Apply)&v27);
    }
    MEMORY[0x1F4188790](v20);
    v23[2] = v19;
    void v23[3] = a2;
    v23[4] = a3;
    v23[5] = a8;
    v23[6] = a9;
    v23[7] = a10;
    v23[8] = a6;
    v23[9] = a4;
    v23[10] = v25;
    char v24 = v26 & 1;
    sub_1B6188D0C(v26 & 1, sub_1B5F7F1D8, (uint64_t)v23);
    if (a6)
    {
      char v27 = 1;
      BlueprintViewActionResponse.complete(apply:)((TeaUI::BlueprintViewActionResponse::Apply)&v27);
    }
  }
  else
  {
    a2();
    ((void (*)(void))a4)(0);
  }
}

uint64_t sub_1B5F7AE04(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  sub_1B5E176E4(a4, (uint64_t)v32);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  *(void *)(v16 + 32) = a3;
  sub_1B5E30E70(v32, v16 + 40);
  *(void *)(v16 + 80) = a5;
  *(void *)(v16 + 88) = a6;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1B5F7F268;
  *(void *)(v17 + 24) = v16;
  unint64_t v30 = sub_1B5EC7DF0;
  uint64_t v31 = v17;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v27 = 1107296256;
  CGFloat v28 = sub_1B5E7365C;
  unint64_t v29 = &block_descriptor_29;
  uint64_t v18 = _Block_copy(&aBlock);
  id v19 = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1B5E176E4(a4, (uint64_t)v32);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v20;
  *(void *)(v21 + 24) = a7;
  *(void *)(v21 + 32) = a8;
  *(void *)(v21 + 40) = a9;
  sub_1B5E30E70(v32, v21 + 48);
  *(unsigned char *)(v21 + 88) = a10;
  unint64_t v30 = sub_1B5F7F2D0;
  uint64_t v31 = v21;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v27 = 1107296256;
  CGFloat v28 = sub_1B5E73DCC;
  unint64_t v29 = &block_descriptor_36;
  uint64_t v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v19, sel_performBatchUpdates_completion_, v18, v22);
  _Block_release(v22);
  _Block_release(v18);
  swift_release();
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v16) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B5F7B0B8(void *a1, void (*a2)(uint64_t), uint64_t a3, void *a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v79 = a6;
  uint64_t v80 = a5;
  uint64_t v77 = a1;
  sub_1B5E1E258();
  uint64_t v78 = v8;
  uint64_t v76 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B5F7F414(0, qword_1EB647460, (void (*)(uint64_t))sub_1B5E1E258);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v75 - v12;
  uint64_t v14 = sub_1B61AFBD0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(v16);
  uint64_t v19 = a4[3];
  uint64_t v20 = a4[4];
  uint64_t v21 = __swift_project_boxed_opaque_existential_1(a4, v19);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v20 + 32);
  v75[1] = v21;
  uint64_t v82 = v22;
  v22(v19, v20);
  char v23 = sub_1B61AFB90();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v15 + 8);
  char v24 = (void (*)(uint64_t, uint64_t))(v15 + 8);
  uint64_t v83 = v14;
  uint64_t v26 = v14;
  uint64_t v27 = v77;
  uint64_t v81 = v25;
  v25(v18, v26);
  if ((v23 & 1) == 0)
  {
    v82(v19, v20);
    CGFloat v28 = (void *)sub_1B61AFB30();
    v81(v18, v83);
    objc_msgSend(v27, sel_reloadSections_, v28);
  }
  uint64_t v29 = a4[3];
  uint64_t v30 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v29);
  uint64_t v31 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v30 + 72))(v29, v30) + 16);
  swift_bridgeObjectRelease();
  if (v31)
  {
    uint64_t v32 = a4[3];
    uint64_t v33 = a4[4];
    __swift_project_boxed_opaque_existential_1(a4, v32);
    (*(void (**)(uint64_t, uint64_t))(v33 + 72))(v32, v33);
    sub_1B61AFCB0();
    uint64_t v34 = (void *)sub_1B61B24D0();
    swift_bridgeObjectRelease();
    objc_msgSend(v27, sel_reloadItemsAtIndexPaths_, v34);
  }
  uint64_t v35 = a4[3];
  uint64_t v36 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v35);
  (*(void (**)(uint64_t, uint64_t))(v36 + 16))(v35, v36);
  char v37 = sub_1B61AFB90();
  uint64_t v38 = v81;
  v81(v18, v83);
  uint64_t v82 = v24;
  uint64_t v39 = v78;
  if ((v37 & 1) == 0)
  {
    uint64_t v40 = a4[3];
    uint64_t v41 = a4[4];
    __swift_project_boxed_opaque_existential_1(a4, v40);
    (*(void (**)(uint64_t, uint64_t))(v41 + 16))(v40, v41);
    uint64_t v42 = (void *)sub_1B61AFB30();
    v38(v18, v83);
    objc_msgSend(v27, sel_deleteSections_, v42);
  }
  uint64_t v43 = a4[3];
  uint64_t v44 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v43);
  (*(void (**)(uint64_t, uint64_t))(v44 + 24))(v43, v44);
  char v45 = sub_1B61AFB90();
  v38(v18, v83);
  if ((v45 & 1) == 0)
  {
    uint64_t v46 = a4[3];
    uint64_t v47 = a4[4];
    __swift_project_boxed_opaque_existential_1(a4, v46);
    (*(void (**)(uint64_t, uint64_t))(v47 + 24))(v46, v47);
    CGRect v48 = (void *)sub_1B61AFB30();
    v38(v18, v83);
    objc_msgSend(v27, sel_insertSections_, v48);
  }
  uint64_t v49 = a4[3];
  uint64_t v50 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v49);
  uint64_t v51 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v50 + 56))(v49, v50) + 16);
  swift_bridgeObjectRelease();
  if (v51)
  {
    uint64_t v52 = a4[3];
    uint64_t v53 = a4[4];
    __swift_project_boxed_opaque_existential_1(a4, v52);
    (*(void (**)(uint64_t, uint64_t))(v53 + 56))(v52, v53);
    sub_1B61AFCB0();
    uint64_t v54 = (void *)sub_1B61B24D0();
    swift_bridgeObjectRelease();
    objc_msgSend(v27, sel_deleteItemsAtIndexPaths_, v54);
  }
  uint64_t v55 = a4[3];
  uint64_t v56 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v55);
  uint64_t v57 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v56 + 64))(v55, v56) + 16);
  swift_bridgeObjectRelease();
  if (v57)
  {
    uint64_t v58 = a4[3];
    uint64_t v59 = a4[4];
    __swift_project_boxed_opaque_existential_1(a4, v58);
    (*(void (**)(uint64_t, uint64_t))(v59 + 64))(v58, v59);
    sub_1B61AFCB0();
    uint64_t v60 = (void *)sub_1B61B24D0();
    swift_bridgeObjectRelease();
    objc_msgSend(v27, sel_insertItemsAtIndexPaths_, v60);
  }
  uint64_t v61 = a4[3];
  uint64_t v62 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v61);
  uint64_t v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 48))(v61, v62);
  uint64_t v64 = *(void *)(v63 + 16);
  if (v64)
  {
    uint64_t v65 = (void *)(v63 + 40);
    do
    {
      objc_msgSend(v27, sel_moveSection_toSection_, *(v65 - 1), *v65);
      v65 += 2;
      --v64;
    }
    while (v64);
  }
  swift_bridgeObjectRelease();
  uint64_t v66 = a4[3];
  uint64_t v67 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v66);
  uint64_t v83 = (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 80))(v66, v67);
  uint64_t v68 = *(void *)(v83 + 16);
  if (v68)
  {
    uint64_t v69 = v83 + ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
    uint64_t v70 = *(void *)(v76 + 72);
    while (1)
    {
      sub_1B5F7F468(v69, (uint64_t)v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v39);
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v39) == 1) {
        break;
      }
      sub_1B5F7EC00((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))sub_1B5E1E258);
      long long v71 = (void *)sub_1B61AFC00();
      uint64_t v72 = (void *)sub_1B61AFC00();
      objc_msgSend(v27, sel_moveItemAtIndexPath_toIndexPath_, v71, v72);

      sub_1B5F7F4CC((uint64_t)v10);
      v69 += v70;
      if (!--v68) {
        goto LABEL_20;
      }
    }
  }
  else
  {
LABEL_20:
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v39);
  }
  uint64_t v73 = swift_bridgeObjectRelease();
  return v80(v73);
}

void sub_1B5F7B84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, int a7)
{
  uint64_t v13 = sub_1B61AFBD0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = &v43[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t v17 = MEMORY[0x1BA9B1EC0](a2 + 16);
  if (v17)
  {
    uint64_t v18 = (void *)v17;
    int v44 = a7;
    uint64_t v45 = a4;
    uint64_t v20 = a6[3];
    uint64_t v19 = a6[4];
    __swift_project_boxed_opaque_existential_1(a6, v20);
    (*(void (**)(uint64_t, uint64_t))(v19 + 40))(v20, v19);
    char v21 = sub_1B61AFB90();
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
    if (v21)
    {
      uint64_t v22 = 0;
    }
    else
    {
      uint64_t v26 = self;
      sub_1B5E176E4((uint64_t)a6, (uint64_t)v46);
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = v18;
      sub_1B5E30E70(v46, v27 + 24);
      uint64_t v28 = swift_allocObject();
      uint64_t v22 = sub_1B5F7F320;
      *(void *)(v28 + 16) = sub_1B5F7F320;
      *(void *)(v28 + 24) = v27;
      uint64_t v51 = sub_1B5EC7DF0;
      uint64_t v52 = v28;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v48 = 1107296256;
      uint64_t v49 = sub_1B5E7365C;
      uint64_t v50 = &block_descriptor_52_0;
      uint64_t v29 = _Block_copy(&aBlock);
      id v30 = v18;
      swift_retain();
      swift_release();
      objc_msgSend((id)v26, sel_performWithoutAnimation_, v29);
      _Block_release(v29);
      LOBYTE(v26) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (v26)
      {
        __break(1u);
        return;
      }
    }
    uint64_t v31 = a6[3];
    uint64_t v32 = a6[4];
    __swift_project_boxed_opaque_existential_1(a6, v31);
    uint64_t v33 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v32 + 88))(v31, v32) + 16);
    swift_bridgeObjectRelease();
    if (v33)
    {
      id v34 = objc_msgSend(v18, sel_dataSource);
      if (v34)
      {
        uint64_t v35 = MEMORY[0x1F4188790](v34);
        *(void *)&v43[-48] = v18;
        *(void *)&v43[-40] = a6;
        uint64_t v36 = v45;
        *(void *)&v43[-32] = a3;
        *(void *)&v43[-24] = v36;
        *(void *)&v43[-16] = a5;
        *(void *)&v43[-8] = v35;
        sub_1B6188D0C(v44 & 1, sub_1B5F7F330, (uint64_t)&v43[-64]);
        swift_unknownObjectRelease();

        sub_1B5E3799C((uint64_t)v22);
        return;
      }
      uint64_t v37 = (uint64_t)v22;
      if (a3)
      {
        LOBYTE(aBlock) = 2;
        BlueprintViewActionResponse.complete(apply:)((TeaUI::BlueprintViewActionResponse::Apply)&aBlock);
      }
      id v38 = objc_msgSend(self, sel_sharedApplication);
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = v45;
      *(void *)(v41 + 24) = a5;
      uint64_t v51 = sub_1B5F7F5A8;
      uint64_t v52 = v41;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v48 = 1107296256;
      uint64_t v49 = sub_1B5E3729C;
      uint64_t v50 = &block_descriptor_58_0;
      uint64_t v42 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v38, sel_ts_installCACommitCompletionBlock_, v42);
      _Block_release(v42);
    }
    else
    {
      uint64_t v37 = (uint64_t)v22;
      if (a3)
      {
        LOBYTE(aBlock) = 2;
        BlueprintViewActionResponse.complete(apply:)((TeaUI::BlueprintViewActionResponse::Apply)&aBlock);
      }
      id v38 = objc_msgSend(self, sel_sharedApplication);
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v45;
      *(void *)(v39 + 24) = a5;
      uint64_t v51 = sub_1B5F7F5A8;
      uint64_t v52 = v39;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v48 = 1107296256;
      uint64_t v49 = sub_1B5E3729C;
      uint64_t v50 = &block_descriptor_64_1;
      uint64_t v40 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v38, sel_ts_installCACommitCompletionBlock_, v40);

      _Block_release(v40);
    }

    sub_1B5E3799C(v37);
  }
  else
  {
    if (a3)
    {
      LOBYTE(aBlock) = 2;
      BlueprintViewActionResponse.complete(apply:)((TeaUI::BlueprintViewActionResponse::Apply)&aBlock);
    }
    id v23 = objc_msgSend(self, sel_sharedApplication);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = a4;
    *(void *)(v24 + 24) = a5;
    uint64_t v51 = sub_1B5F7F5A8;
    uint64_t v52 = v24;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v48 = 1107296256;
    uint64_t v49 = sub_1B5E3729C;
    uint64_t v50 = &block_descriptor_42;
    uint64_t v25 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v23, sel_ts_installCACommitCompletionBlock_, v25);
    _Block_release(v25);
  }
}

void sub_1B5F7BEBC(void *a1, void *a2)
{
  uint64_t v4 = sub_1B61AFBD0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v21 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v21 - v12;
  if (objc_msgSend(a1, sel_dataSource))
  {
    uint64_t v14 = a2[3];
    uint64_t v15 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v14);
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v15 + 40);
    id v22 = a1;
    v16(v14, v15);
    uint64_t v17 = a2[3];
    uint64_t v18 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v17);
    (*(void (**)(uint64_t, uint64_t))(v18 + 32))(v17, v18);
    sub_1B5E143EC((uint64_t)v13);
    uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
    v19(v8, v4);
    v19(v11, v4);
    uint64_t v20 = (void *)sub_1B61AFB30();
    v19(v13, v4);
    objc_msgSend(v22, sel_reloadSections_, v20);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1B5F7C0C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1B5E176E4(a2, (uint64_t)v24);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  sub_1B5E30E70(v24, v10 + 24);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1B5F7F384;
  *(void *)(v11 + 24) = v10;
  id v22 = sub_1B5EC7DF0;
  id v23 = (void *)v11;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v19 = 1107296256;
  uint64_t v20 = sub_1B5E7365C;
  uint64_t v21 = &block_descriptor_74;
  uint64_t v12 = _Block_copy(&aBlock);
  id v13 = a1;
  swift_retain();
  swift_release();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a3;
  v14[3] = a4;
  v14[4] = a5;
  v14[5] = a6;
  id v22 = sub_1B5F7F3DC;
  id v23 = v14;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v19 = 1107296256;
  uint64_t v20 = sub_1B5E73DCC;
  uint64_t v21 = &block_descriptor_80;
  uint64_t v15 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v13, sel_performBatchUpdates_completion_, v12, v15);
  _Block_release(v15);
  _Block_release(v12);
  swift_release();
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v10) {
    __break(1u);
  }
  return result;
}

void sub_1B5F7C308(void *a1, void *a2)
{
  uint64_t v3 = a2[3];
  uint64_t v4 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 88))(v3, v4);
  sub_1B61AFCB0();
  id v5 = (id)sub_1B61B24D0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_reloadItemsAtIndexPaths_, v5);
}

void sub_1B5F7C3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    LOBYTE(v9[0]) = 2;
    BlueprintViewActionResponse.complete(apply:)((TeaUI::BlueprintViewActionResponse::Apply)v9);
  }
  id v6 = objc_msgSend(self, sel_sharedApplication);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a3;
  *(void *)(v7 + 24) = a4;
  v9[4] = sub_1B5F7F3E8;
  v9[5] = v7;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  void v9[2] = sub_1B5E3729C;
  void v9[3] = &block_descriptor_86;
  uint64_t v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_ts_installCACommitCompletionBlock_, v8);
  _Block_release(v8);
}

void sub_1B5F7C4D4(void (*a1)(void), uint64_t a2)
{
  uint64_t v3 = v2;
  swift_getObjectType();
  if (dynamic_cast_existential_1_conditional((uint64_t)v3))
  {
    id v6 = v3;
    SwipeActionCollectionView.deferUpdates(block:)(a1, a2);
  }
  else
  {
    a1();
  }
}

Swift::OpaquePointer_optional __swiftcall UICollectionView.indexPathsForItems(in:)(__C::CGRect in)
{
  double height = in.size.height;
  double width = in.size.width;
  double y = in.origin.y;
  double x = in.origin.x;
  uint64_t v32 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_80();
  uint64_t v11 = v10 - v9;
  id v12 = objc_msgSend(v1, sel_collectionViewLayout);
  id v13 = objc_msgSend(v12, sel_layoutAttributesForElementsInRect_, x, y, width, height);

  if (!v13) {
    goto LABEL_32;
  }
  sub_1B5F7E990();
  unint64_t v15 = sub_1B61B24E0();

  uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v33 = MEMORY[0x1E4FBC860];
  if (v15 >> 62)
  {
    sub_1B61B1F70();
    uint64_t v18 = sub_1B61B3530();
    uint64_t v16 = (void *)swift_bridgeObjectRelease();
    if (v18)
    {
LABEL_4:
      if (v18 < 1)
      {
        __break(1u);
        goto LABEL_34;
      }
      uint64_t v19 = 0;
      uint64_t v20 = &selRef_axSafelyAddObjectsFromArray_;
      do
      {
        if ((v15 & 0xC000000000000001) != 0) {
          id v21 = (id)MEMORY[0x1BA9B04B0](v19, v15);
        }
        else {
          id v21 = *(id *)(v15 + 8 * v19 + 32);
        }
        id v22 = v21;
        if (objc_msgSend(v21, sel_representedElementCategory, v32)
          || ([v22 v20[85]], v24 <= 0.0)
          || v23 <= 0.0)
        {
        }
        else
        {
          sub_1B61B3370();
          sub_1B61B33B0();
          sub_1B61B33C0();
          sub_1B61B3380();
          uint64_t v20 = &selRef_axSafelyAddObjectsFromArray_;
        }
        ++v19;
      }
      while (v18 != v19);
      swift_bridgeObjectRelease();
      uint64_t v25 = v33;
      uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
      if (v33 < 0) {
        goto LABEL_30;
      }
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v18 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v18) {
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v25 = MEMORY[0x1E4FBC860];
  if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
    goto LABEL_30;
  }
LABEL_19:
  if ((v25 & 0x4000000000000000) != 0)
  {
LABEL_30:
    sub_1B61B1F70();
    uint64_t v26 = sub_1B61B3530();
    swift_release();
    if (!v26) {
      goto LABEL_31;
    }
    goto LABEL_21;
  }
  uint64_t v26 = *(void *)(v25 + 16);
  if (v26)
  {
LABEL_21:
    sub_1B5E4ED20();
    if ((v26 & 0x8000000000000000) == 0)
    {
      uint64_t v27 = 0;
      id v13 = v17;
      do
      {
        if ((v25 & 0xC000000000000001) != 0) {
          id v28 = (id)MEMORY[0x1BA9B04B0](v27, v25);
        }
        else {
          id v28 = *(id *)(v25 + 8 * v27 + 32);
        }
        uint64_t v29 = v28;
        id v30 = objc_msgSend(v28, sel_indexPath, v32);
        sub_1B61AFC40();

        unint64_t v31 = v17[2];
        if (v31 >= v17[3] >> 1) {
          sub_1B5E4ED20();
        }
        ++v27;
        void v17[2] = v31 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))((unint64_t)v17+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v31, v11, v32);
      }
      while (v26 != v27);
      swift_release();
      goto LABEL_32;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
LABEL_31:
  swift_release();
  id v13 = (id)MEMORY[0x1E4FBC860];
LABEL_32:
  uint64_t v16 = v13;
LABEL_35:
  result.value._rawValue = v16;
  result.is_nil = v14;
  return result;
}

id UICollectionView.cell(at:)()
{
  id v1 = v0;
  uint64_t v2 = (void *)sub_1B61AFC00();
  id v3 = objc_msgSend(v1, sel_cellForItemAtIndexPath_, v2);

  return v3;
}

void UICollectionView.indexPaths(visibility:)(unsigned __int8 *a1)
{
  uint64_t v28 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_80();
  uint64_t v8 = v7 - v6;
  unsigned __int8 v9 = *a1;
  objc_msgSend(v1, sel_bounds);
  unint64_t v10 = (unint64_t)UICollectionView.indexPathsForItems(in:)(v30);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  id v13 = v1;
  uint64_t v14 = sub_1B5F79F5C(v12, v13, v9);
  swift_bridgeObjectRelease();
  if (v14 < 0 || (v14 & 0x4000000000000000) != 0)
  {
    id v26 = v13;
    unint64_t v27 = sub_1B61B1F70();
    uint64_t v15 = (uint64_t)sub_1B5E48B48(v27);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = v14 & 0xFFFFFFFFFFFFFF8;
    id v16 = v13;
    sub_1B61B1F70();
  }
  uint64_t v29 = v15;
  id v17 = v13;
  sub_1B5F7D9D4(&v29, v17);

  swift_bridgeObjectRelease();
  uint64_t v18 = v29;
  if ((v29 & 0x8000000000000000) == 0 && (v29 & 0x4000000000000000) == 0)
  {
    uint64_t v19 = *(void *)(v29 + 16);
    if (v19) {
      goto LABEL_10;
    }
LABEL_21:
    swift_release();
    OUTLINED_FUNCTION_73();
    return;
  }
  sub_1B61B1F70();
  uint64_t v19 = sub_1B61B3530();
  swift_release();
  if (!v19) {
    goto LABEL_21;
  }
LABEL_10:
  uint64_t v29 = v11;
  sub_1B5E4ED20();
  if ((v19 & 0x8000000000000000) == 0)
  {
    uint64_t v20 = 0;
    uint64_t v21 = v29;
    do
    {
      if ((v18 & 0xC000000000000001) != 0) {
        id v22 = (id)MEMORY[0x1BA9B04B0](v20, v18);
      }
      else {
        id v22 = *(id *)(v18 + 8 * v20 + 32);
      }
      double v23 = v22;
      id v24 = objc_msgSend(v22, sel_indexPath);
      sub_1B61AFC40();

      uint64_t v29 = v21;
      unint64_t v25 = *(void *)(v21 + 16);
      if (v25 >= *(void *)(v21 + 24) >> 1)
      {
        sub_1B5E4ED20();
        uint64_t v21 = v29;
      }
      ++v20;
      *(void *)(v21 + 16) = v25 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v21+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v25, v8, v28);
    }
    while (v19 != v20);
    goto LABEL_21;
  }
  __break(1u);
  swift_release();
  __break(1u);
}

void UICollectionView.frame(at:)(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_collectionViewLayout);
  uint64_t v4 = (void *)sub_1B61AFC00();
  id v5 = objc_msgSend(v3, sel_layoutAttributesForItemAtIndexPath_, v4);

  if (v5)
  {
    objc_msgSend(v5, sel_frame);
    uint64_t v7 = v6;
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
    uint64_t v11 = 0;
    uint64_t v13 = 0;
  }
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v11;
  *(void *)(a1 + 24) = v13;
  *(unsigned char *)(a1 + 32) = v5 == 0;
}

void __swiftcall UICollectionView.sectionFrame(at:)(__C::CGRect_optional *__return_ptr retstr, Swift::Int at)
{
  id v5 = objc_msgSend(v2, sel_collectionViewLayout);
  sub_1B5F7E9D0();
  uint64_t v6 = swift_dynamicCastClass();
  if (v6)
  {
    sub_1B5F7D8AC(v16);
    uint64_t v7 = v17;
    CGSize v8 = (CGSize)0;
    CGPoint v15 = (CGPoint)0;
    if (*(void *)(v17 + 16))
    {
      unint64_t v9 = sub_1B5E46F88(at);
      CGSize v8 = (CGSize)0;
      if (v10)
      {
        uint64_t v11 = (CGPoint *)(*(void *)(v7 + 56) + 32 * v9);
        CGPoint v15 = *v11;
        CGSize v8 = (CGSize)v11[1];
      }
    }
    CGSize v14 = v8;

    sub_1B5EED720((uint64_t)v16);
    CGSize v13 = v14;
    CGPoint v12 = v15;
  }
  else
  {

    CGPoint v12 = (CGPoint)0;
    CGSize v13 = (CGSize)0;
  }
  retstr->value.origin = v12;
  retstr->value.size = v13;
  retstr->is_nil = v6 == 0;
}

Swift::Int __swiftcall UICollectionView.numberOfSections()()
{
  return (Swift::Int)objc_msgSend(v0, sel_numberOfSections);
}

Swift::Int __swiftcall UICollectionView.numberOfVisualItems(in:)(Swift::Int in)
{
  return (Swift::Int)objc_msgSend(v1, sel_numberOfItemsInSection_, in);
}

void UICollectionView.selectItem(at:animated:)(uint64_t a1, char a2)
{
  id v3 = v2;
  sub_1B5F7F414(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
  MEMORY[0x1F4188790](v6 - 8);
  CGSize v8 = (char *)&v11 - v7;
  sub_1B5EF6774(a1, (uint64_t)&v11 - v7);
  uint64_t v9 = sub_1B61AFCB0();
  char v10 = 0;
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) != 1)
  {
    char v10 = (void *)sub_1B61AFC00();
    (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  objc_msgSend(v3, sel_selectItemAtIndexPath_animated_scrollPosition_, v10, a2 & 1, 0);
}

void UICollectionView.scroll(to:animated:)(uint64_t a1, char a2)
{
  id v3 = v2;
  if (sub_1B5F7D044(a1))
  {
    id v5 = objc_msgSend(v2, sel_collectionViewLayout);
    sub_1B5F7E9D0();
    if (swift_dynamicCastClass())
    {
      sub_1B61B0430();
      memcpy(__dst, __src, sizeof(__dst));
      sub_1B5EED720((uint64_t)__dst);
      char v6 = __dst[16];
      uint64_t v7 = (void *)sub_1B61AFC00();
      if (v6) {
        uint64_t v8 = 2;
      }
      else {
        uint64_t v8 = 16;
      }
      objc_msgSend(v3, sel_scrollToItemAtIndexPath_atScrollPosition_animated_, v7, v8, a2 & 1);
    }
    else
    {

      id v9 = (id)sub_1B61AFC00();
      objc_msgSend(v2, sel_scrollToItemAtIndexPath_atScrollPosition_animated_, v9, 2, a2 & 1);
    }
  }
}

uint64_t sub_1B5F7D044(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1B61AFCB0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v10 = (char *)&v21 - v9;
  uint64_t v11 = sub_1B61AFC90();
  CGPoint v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, a1, v4);
  if (v11 < 0)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  else
  {
    uint64_t v13 = sub_1B61AFC90();
    id v14 = objc_msgSend(v2, sel_numberOfSections);
    CGPoint v15 = v10;
    id v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v15, v4);
    if (v13 < (uint64_t)v14)
    {
      uint64_t v17 = sub_1B61AFC80();
      v12(v8, a1, v4);
      if (v17 < 0)
      {
        v16(v8, v4);
      }
      else
      {
        uint64_t v18 = sub_1B61AFC80();
        id v19 = objc_msgSend(v2, sel_numberOfItemsInSection_, sub_1B61AFC90());
        v16(v8, v4);
        if (v18 < (uint64_t)v19) {
          return 1;
        }
      }
    }
  }
  return 0;
}

void UICollectionView.snap(to:direction:animated:)(uint64_t a1, unsigned __int8 *a2, char a3)
{
  int v5 = *a2;
  if (sub_1B5F7D044(a1))
  {
    uint64_t v6 = sub_1B61AFC00();
    id v8 = (id)v6;
    if (v5) {
      uint64_t v7 = 1;
    }
    else {
      uint64_t v7 = 8;
    }
    objc_msgSend(v3, sel_scrollToItemAtIndexPath_atScrollPosition_animated_, v6, v7, a3 & 1);
  }
}

Swift::Void __swiftcall UICollectionView.setEditing(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  if (animated)
  {
    objc_msgSend(v2, sel_setEditing_, _);
  }
  else
  {
    uint64_t v4 = self;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v2;
    *(unsigned char *)(v5 + 24) = _;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_1B5F7EA68;
    *(void *)(v6 + 24) = v5;
    v10[4] = sub_1B5E4EC58;
    v10[5] = v6;
    v10[0] = MEMORY[0x1E4F143A8];
    v10[1] = 1107296256;
    v10[2] = sub_1B5E7365C;
    v10[3] = &block_descriptor_35;
    uint64_t v7 = _Block_copy(v10);
    id v8 = v2;
    swift_retain();
    swift_release();
    objc_msgSend(v4, sel_performWithoutAnimation_, v7);
    _Block_release(v7);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
}

uint64_t sub_1B5F7D498(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void (*a8)(void), uint64_t a9)
{
  return UICollectionView.update(with:apply:response:animated:beforeCompletion:completion:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1B5F7D4AC()
{
  id v1 = objc_msgSend(v0, sel_indexPathsForVisibleItems);
  sub_1B61AFCB0();
  uint64_t v2 = sub_1B61B24E0();

  return v2;
}

uint64_t sub_1B5F7D508()
{
  return sub_1B5F7E6C8(v0);
}

uint64_t sub_1B5F7D518@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_indexPathForItemAtPoint_);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1B61AFC40();

    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  uint64_t v6 = sub_1B61AFCB0();
  return __swift_storeEnumTagSinglePayload(a1, v5, 1, v6);
}

uint64_t sub_1B5F7D5A0@<X0>(uint64_t a1@<X8>)
{
  UICollectionView.frame(at:)((uint64_t)v3);
  return sub_1B5E6D114((uint64_t)v3, a1);
}

uint64_t sub_1B5F7D5DC@<X0>(Swift::Int a1@<X0>, uint64_t a2@<X8>)
{
  UICollectionView.sectionFrame(at:)(&v4, a1);
  return sub_1B5E6D114((uint64_t)&v4, a2);
}

id sub_1B5F7D624()
{
  return objc_msgSend(v0, sel_isEditing);
}

id sub_1B5F7D650()
{
  return objc_msgSend(v0, sel_allowsMultipleSelection);
}

id sub_1B5F7D678(char a1)
{
  return objc_msgSend(v1, sel_setAllowsMultipleSelection_, a1 & 1);
}

id (*sub_1B5F7D68C(uint64_t a1))(void **a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_allowsMultipleSelection);
  return sub_1B5F7D6E0;
}

id sub_1B5F7D6E0(void **a1)
{
  return OUTLINED_FUNCTION_9_0(sel_setAllowsMultipleSelection_, *a1);
}

id sub_1B5F7D6F8()
{
  return objc_msgSend(v0, sel_allowsSelection);
}

id sub_1B5F7D720(char a1)
{
  return objc_msgSend(v1, sel_setAllowsSelection_, a1 & 1);
}

id (*sub_1B5F7D734(uint64_t a1))(void **a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_allowsSelection);
  return sub_1B5F7D788;
}

id sub_1B5F7D788(void **a1)
{
  return OUTLINED_FUNCTION_9_0(sel_setAllowsSelection_, *a1);
}

void sub_1B5F7D7A4(uint64_t a1, char a2)
{
  id v4 = (id)sub_1B61AFC00();
  objc_msgSend(v2, sel_deselectItemAtIndexPath_animated_, v4, a2 & 1);
}

uint64_t sub_1B5F7D81C@<X0>(uint64_t a1@<X8>)
{
  sub_1B5F7EC00((uint64_t)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x90), (uint64_t)v4, (uint64_t (*)(void))sub_1B5F7EC68);
  sub_1B5F7EC00((uint64_t)v4, a1, (uint64_t (*)(void))sub_1B5F7EC68);
  return sub_1B5F7ECCC((uint64_t)v4);
}

uint64_t sub_1B5F7D8AC@<X0>(void *a1@<X8>)
{
  sub_1B5F7D81C((uint64_t)v3);
  sub_1B5F7EC00((uint64_t)v3, (uint64_t)v4, (uint64_t (*)(void))sub_1B5F7EC68);
  sub_1B5F7EC00((uint64_t)v4, (uint64_t)v5, (uint64_t (*)(void))sub_1B5F7EC68);
  if (sub_1B5F7ECB4((uint64_t)v5) == 1) {
    return sub_1B5F7D954(a1);
  }
  else {
    return sub_1B5F7EC00((uint64_t)v4, (uint64_t)a1, (uint64_t (*)(void))sub_1B5F7EC68);
  }
}

uint64_t sub_1B5F7D954@<X0>(void *a1@<X8>)
{
  id v3 = (char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x98);
  memcpy(__dst, v3, sizeof(__dst));
  memcpy(a1, v3, 0x498uLL);
  return sub_1B5F096F4((uint64_t)__dst);
}

void sub_1B5F7D9D4(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  id v4 = a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1B612ABF0(v3);
  }
  uint64_t v6 = *(void *)(v3 + 16);
  v8[0] = v3 + 32;
  v8[1] = v6;
  id v7 = v4;
  sub_1B5F7DA74(v8, v7);
  sub_1B61B3380();
}

void sub_1B5F7DA74(uint64_t *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = a1[1];
  id v6 = a2;
  uint64_t v7 = sub_1B61B36D0();
  if (v7 >= v5)
  {
    if (v5 < 0) {
      goto LABEL_137;
    }
    if (v5) {
      sub_1B5F7E2FC(0, v5, 1, a1, v6);
    }
    else {

    }
    goto LABEL_114;
  }
  uint64_t v8 = v7;
  uint64_t v131 = v6;
  uint64_t v9 = sub_1B61AE6A0(v5 / 2);
  long long v130 = v10;
  uint64_t v136 = v9;
  uint64_t v129 = v5;
  uint64_t v126 = a1;
  if (v5 <= 0)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v65 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_97:
    if (v65 >= 2)
    {
      uint64_t v118 = *v126;
      uint64_t v134 = *v126;
      while (1)
      {
        unint64_t v119 = v65 - 2;
        if (v65 < 2) {
          break;
        }
        if (!v118) {
          goto LABEL_146;
        }
        uint64_t v120 = v13[2 * v119 + 4];
        uint64_t v121 = v13[2 * v65 + 3];
        sub_1B5F7E430((void **)(v118 + 8 * v120), (id *)(v118 + 8 * v13[2 * v65 + 2]), v118 + 8 * v121, v130, v131);
        if (v3)
        {
          uint64_t v117 = v129;
          goto LABEL_94;
        }
        if (v121 < v120) {
          goto LABEL_132;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B612A478();
          uint64_t v13 = v124;
        }
        if (v119 >= v13[2]) {
          goto LABEL_133;
        }
        uint64_t v122 = &v13[2 * v119 + 4];
        void *v122 = v120;
        v122[1] = v121;
        unint64_t v123 = v13[2];
        if (v65 > v123) {
          goto LABEL_134;
        }
        memmove(&v13[2 * v65 + 2], &v13[2 * v65 + 4], 16 * (v123 - v65));
        void v13[2] = v123 - 1;
        unint64_t v65 = v123 - 1;
        uint64_t v118 = v134;
        if (v123 <= 2) {
          goto LABEL_111;
        }
      }
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
LABEL_111:
    swift_bridgeObjectRelease();
    if (v129 < -1) {
      goto LABEL_142;
    }
    *(void *)((v136 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_1B61B2510();
    id v6 = v131;
LABEL_113:

    swift_bridgeObjectRelease();
LABEL_114:

    return;
  }
  uint64_t v127 = v8;
  uint64_t v11 = 0;
  uint64_t v12 = *a1;
  uint64_t v125 = *a1 - 8;
  uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v14 = v5;
  uint64_t v135 = *a1;
  while (1)
  {
    uint64_t v15 = v11;
    uint64_t v16 = v11 + 1;
    if (v11 + 1 < v14)
    {
      uint64_t v17 = *(void **)(v12 + 8 * v11);
      id v18 = *(id *)(v12 + 8 * v16);
      id v19 = v17;
      objc_msgSend(v18, sel_frame);
      double v22 = sqrt((0.0 - v20) * (0.0 - v20) + (0.0 - v21) * (0.0 - v21));
      objc_msgSend(v19, sel_frame);
      double v24 = v23;
      double v26 = v25;

      uint64_t v14 = v129;
      double v27 = sqrt((0.0 - v24) * (0.0 - v24) + (0.0 - v26) * (0.0 - v26));
      uint64_t v16 = v15 + 2;
      if (v15 + 2 < v129)
      {
        uint64_t v28 = v15;
        while (1)
        {
          uint64_t v29 = v135 + 8 * v28;
          __C::CGRect v30 = *(void **)(v29 + 8);
          id v31 = *(id *)(v29 + 16);
          id v32 = v30;
          objc_msgSend(v31, sel_frame);
          double v35 = sqrt((0.0 - v33) * (0.0 - v33) + (0.0 - v34) * (0.0 - v34));
          objc_msgSend(v32, sel_frame);
          double v37 = v36;
          double v39 = v38;

          if (v22 <= v27 == v35 > sqrt((0.0 - v37) * (0.0 - v37) + (0.0 - v39) * (0.0 - v39))) {
            break;
          }
          uint64_t v40 = v28 + 3;
          ++v28;
          uint64_t v14 = v129;
          if (v40 >= v129)
          {
            uint64_t v16 = v129;
            goto LABEL_11;
          }
        }
        uint64_t v16 = v28 + 2;
        uint64_t v14 = v129;
      }
LABEL_11:
      if (v22 > v27)
      {
        uint64_t v12 = v135;
      }
      else
      {
        uint64_t v12 = v135;
        if (v16 < v15) {
          goto LABEL_139;
        }
        if (v15 < v16)
        {
          uint64_t v41 = (uint64_t *)(v125 + 8 * v16);
          uint64_t v42 = v16;
          uint64_t v43 = v15;
          int v44 = (uint64_t *)(v135 + 8 * v15);
          do
          {
            if (v43 != --v42)
            {
              if (!v135) {
                goto LABEL_145;
              }
              uint64_t v45 = *v44;
              *int v44 = *v41;
              *uint64_t v41 = v45;
            }
            ++v43;
            --v41;
            ++v44;
          }
          while (v43 < v42);
        }
      }
    }
    if (v16 < v14)
    {
      if (__OFSUB__(v16, v15)) {
        goto LABEL_136;
      }
      if (v16 - v15 < v127) {
        break;
      }
    }
LABEL_39:
    if (v16 < v15) {
      goto LABEL_135;
    }
    uint64_t v128 = v16;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1B612A374();
      uint64_t v13 = v115;
    }
    unint64_t v64 = v13[2];
    unint64_t v65 = v64 + 1;
    uint64_t v12 = v135;
    if (v64 >= v13[3] >> 1)
    {
      sub_1B612A374();
      uint64_t v12 = v135;
      uint64_t v13 = v116;
    }
    void v13[2] = v65;
    uint64_t v66 = &v13[2 * v64 + 4];
    uint64_t *v66 = v15;
    v66[1] = v16;
    if (v64)
    {
      uint64_t v67 = v13 + 4;
      while (1)
      {
        unint64_t v68 = v65 - 1;
        if (v65 >= 4)
        {
          uint64_t v73 = &v67[2 * v65];
          uint64_t v74 = *(v73 - 8);
          uint64_t v75 = *(v73 - 7);
          BOOL v79 = __OFSUB__(v75, v74);
          uint64_t v76 = v75 - v74;
          if (v79) {
            goto LABEL_120;
          }
          uint64_t v78 = *(v73 - 6);
          uint64_t v77 = *(v73 - 5);
          BOOL v79 = __OFSUB__(v77, v78);
          uint64_t v71 = v77 - v78;
          char v72 = v79;
          if (v79) {
            goto LABEL_121;
          }
          unint64_t v80 = v65 - 2;
          uint64_t v81 = &v67[2 * v65 - 4];
          uint64_t v83 = *v81;
          uint64_t v82 = v81[1];
          BOOL v79 = __OFSUB__(v82, v83);
          uint64_t v84 = v82 - v83;
          if (v79) {
            goto LABEL_122;
          }
          BOOL v79 = __OFADD__(v71, v84);
          uint64_t v85 = v71 + v84;
          if (v79) {
            goto LABEL_124;
          }
          if (v85 >= v76)
          {
            uint64_t v103 = &v67[2 * v68];
            uint64_t v105 = *v103;
            uint64_t v104 = v103[1];
            BOOL v79 = __OFSUB__(v104, v105);
            uint64_t v106 = v104 - v105;
            if (v79) {
              goto LABEL_130;
            }
            BOOL v96 = v71 < v106;
            goto LABEL_77;
          }
        }
        else
        {
          if (v65 != 3)
          {
            uint64_t v97 = v13[4];
            uint64_t v98 = v13[5];
            BOOL v79 = __OFSUB__(v98, v97);
            uint64_t v90 = v98 - v97;
            char v91 = v79;
            goto LABEL_71;
          }
          uint64_t v70 = v13[4];
          uint64_t v69 = v13[5];
          BOOL v79 = __OFSUB__(v69, v70);
          uint64_t v71 = v69 - v70;
          char v72 = v79;
        }
        if (v72) {
          goto LABEL_123;
        }
        unint64_t v80 = v65 - 2;
        uint64_t v86 = &v67[2 * v65 - 4];
        uint64_t v88 = *v86;
        uint64_t v87 = v86[1];
        BOOL v89 = __OFSUB__(v87, v88);
        uint64_t v90 = v87 - v88;
        char v91 = v89;
        if (v89) {
          goto LABEL_125;
        }
        uint64_t v92 = &v67[2 * v68];
        uint64_t v94 = *v92;
        uint64_t v93 = v92[1];
        BOOL v79 = __OFSUB__(v93, v94);
        uint64_t v95 = v93 - v94;
        if (v79) {
          goto LABEL_127;
        }
        if (__OFADD__(v90, v95)) {
          goto LABEL_129;
        }
        if (v90 + v95 >= v71)
        {
          BOOL v96 = v71 < v95;
LABEL_77:
          if (v96) {
            unint64_t v68 = v80;
          }
          goto LABEL_79;
        }
LABEL_71:
        if (v91) {
          goto LABEL_126;
        }
        long long v99 = &v67[2 * v68];
        uint64_t v101 = *v99;
        uint64_t v100 = v99[1];
        BOOL v79 = __OFSUB__(v100, v101);
        uint64_t v102 = v100 - v101;
        if (v79) {
          goto LABEL_128;
        }
        if (v102 < v90) {
          goto LABEL_88;
        }
LABEL_79:
        unint64_t v107 = v68 - 1;
        if (v68 - 1 >= v65)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
          goto LABEL_131;
        }
        if (!v12) {
          goto LABEL_144;
        }
        long long v108 = &v67[2 * v107];
        uint64_t v109 = *v108;
        unint64_t v110 = v68;
        uint64_t v111 = &v67[2 * v68];
        uint64_t v112 = v111[1];
        sub_1B5F7E430((void **)(v12 + 8 * *v108), (id *)(v12 + 8 * *v111), v12 + 8 * v112, v130, v131);
        if (v3)
        {
          uint64_t v117 = v129;
LABEL_94:
          swift_bridgeObjectRelease();
          id v6 = v131;
          if (v117 >= -1)
          {
            *(void *)((v136 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
            sub_1B61B2510();
            goto LABEL_113;
          }
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        if (v112 < v109) {
          goto LABEL_117;
        }
        if (v110 > v13[2]) {
          goto LABEL_118;
        }
        unint64_t v113 = v110;
        *long long v108 = v109;
        uint64_t v67 = v13 + 4;
        v13[2 * v107 + 5] = v112;
        unint64_t v114 = v13[2];
        if (v110 >= v114) {
          goto LABEL_119;
        }
        unint64_t v65 = v114 - 1;
        memmove(v111, v111 + 2, 16 * (v114 - 1 - v113));
        void v13[2] = v114 - 1;
        uint64_t v12 = v135;
        if (v114 <= 2) {
          goto LABEL_88;
        }
      }
    }
    unint64_t v65 = 1;
LABEL_88:
    uint64_t v11 = v128;
    uint64_t v14 = v129;
    if (v128 >= v129) {
      goto LABEL_97;
    }
  }
  if (__OFADD__(v15, v127)) {
    goto LABEL_140;
  }
  if (v15 + v127 >= v14) {
    uint64_t v46 = v14;
  }
  else {
    uint64_t v46 = v15 + v127;
  }
  if (v46 >= v15)
  {
    if (v16 != v46)
    {
      uint64_t v47 = v15;
      uint64_t v132 = v3;
      uint64_t v133 = v13;
      uint64_t v48 = v125 + 8 * v16;
      do
      {
        uint64_t v49 = v16;
        uint64_t v50 = *(void **)(v12 + 8 * v16);
        uint64_t v51 = v47;
        uint64_t v52 = v48;
        while (1)
        {
          uint64_t v53 = *(void **)v52;
          id v54 = v50;
          id v55 = v53;
          objc_msgSend(v54, sel_frame);
          double v58 = sqrt((0.0 - v56) * (0.0 - v56) + (0.0 - v57) * (0.0 - v57));
          objc_msgSend(v55, sel_frame);
          double v60 = v59;
          double v62 = v61;

          if (v58 > sqrt((0.0 - v60) * (0.0 - v60) + (0.0 - v62) * (0.0 - v62))) {
            break;
          }
          uint64_t v12 = v135;
          if (!v135) {
            goto LABEL_143;
          }
          uint64_t v63 = *(void **)v52;
          uint64_t v50 = *(void **)(v52 + 8);
          *(void *)uint64_t v52 = v50;
          *(void *)(v52 + 8) = v63;
          v52 -= 8;
          if (v49 == ++v51) {
            goto LABEL_37;
          }
        }
        uint64_t v12 = v135;
LABEL_37:
        uint64_t v16 = v49 + 1;
        v48 += 8;
      }
      while (v49 + 1 != v46);
      uint64_t v16 = v46;
      uint64_t v3 = v132;
      uint64_t v13 = v133;
      uint64_t v15 = v47;
    }
    goto LABEL_39;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:

  __break(1u);
LABEL_144:

  __break(1u);
LABEL_145:

  __break(1u);
LABEL_146:

  __break(1u);
}

void sub_1B5F7E2FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  double v23 = a5;
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 8 * a3 - 8;
    while (2)
    {
      uint64_t v9 = *(void **)(v7 + 8 * v5);
      uint64_t v10 = a1;
      uint64_t v11 = v8;
      do
      {
        uint64_t v12 = *(void **)v11;
        id v13 = v9;
        id v14 = v12;
        objc_msgSend(v13, sel_frame, v23);
        double v17 = sqrt((0.0 - v15) * (0.0 - v15) + (0.0 - v16) * (0.0 - v16));
        objc_msgSend(v14, sel_frame);
        double v19 = v18;
        double v21 = v20;

        if (v17 > sqrt((0.0 - v19) * (0.0 - v19) + (0.0 - v21) * (0.0 - v21))) {
          break;
        }
        if (!v7)
        {
          __break(1u);
          return;
        }
        double v22 = *(void **)v11;
        uint64_t v9 = *(void **)(v11 + 8);
        *(void *)uint64_t v11 = v9;
        *(void *)(v11 + 8) = v22;
        v11 -= 8;
        ++v10;
      }
      while (v5 != v10);
      ++v5;
      v8 += 8;
      if (v5 != a2) {
        continue;
      }
      break;
    }
  }
}

uint64_t sub_1B5F7E430(void **a1, id *a2, unint64_t a3, void **a4, void *a5)
{
  uint64_t v5 = a4;
  uint64_t v7 = a2;
  uint64_t v8 = a1;
  uint64_t v9 = (char *)a2 - (char *)a1;
  uint64_t v10 = a2 - a1;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = (uint64_t)(a3 - (void)a2) / 8;
  if (v10 >= v12)
  {
    sub_1B5E1D5A0(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
    id v13 = &v5[v12];
    if (v8 < v7 && v11 >= 8)
    {
      uint64_t v29 = (id *)(a3 - 8);
      uint64_t v47 = v5;
      do
      {
        uint64_t v48 = v29 + 1;
        unint64_t v30 = (unint64_t)v13;
        id v31 = *--v13;
        id v32 = v7 - 1;
        double v33 = *(v7 - 1);
        id v34 = v31;
        id v35 = v33;
        objc_msgSend(v34, sel_frame);
        double v38 = sqrt((0.0 - v36) * (0.0 - v36) + (0.0 - v37) * (0.0 - v37));
        objc_msgSend(v35, sel_frame);
        double v40 = v39;
        double v42 = v41;

        if (v38 <= sqrt((0.0 - v40) * (0.0 - v40) + (0.0 - v42) * (0.0 - v42)))
        {
          BOOL v43 = v48 != v7 || v29 >= v7;
          --v7;
          id v13 = (void **)v30;
        }
        else
        {
          BOOL v43 = v48 != (id *)v30 || (unint64_t)v29 >= v30;
          id v32 = v13;
        }
        uint64_t v5 = v47;
        if (v43) {
          *uint64_t v29 = *v32;
        }
        --v29;
      }
      while (v7 > v8 && v13 > v47);
    }
  }
  else
  {
    sub_1B5E1D5A0(a1, a2 - a1, a4);
    id v13 = &v5[v10];
    if ((unint64_t)v7 < a3 && v9 >= 8)
    {
      while (1)
      {
        double v15 = *v5;
        id v16 = *v7;
        id v17 = v15;
        objc_msgSend(v16, sel_frame);
        double v20 = sqrt((0.0 - v18) * (0.0 - v18) + (0.0 - v19) * (0.0 - v19));
        objc_msgSend(v17, sel_frame);
        double v22 = v21;
        double v24 = v23;

        if (v20 > sqrt((0.0 - v22) * (0.0 - v22) + (0.0 - v24) * (0.0 - v24))) {
          break;
        }
        double v25 = v7;
        BOOL v26 = v8 == v7++;
        if (!v26) {
          goto LABEL_11;
        }
LABEL_12:
        ++v8;
        if (v5 >= v13 || (unint64_t)v7 >= a3) {
          goto LABEL_17;
        }
      }
      double v25 = v5;
      BOOL v26 = v8 == v5++;
      if (v26) {
        goto LABEL_12;
      }
LABEL_11:
      char *v8 = *v25;
      goto LABEL_12;
    }
LABEL_17:
    uint64_t v7 = v8;
  }
  sub_1B5E1D5A0(v5, v13 - v5, v7);

  return 1;
}

uint64_t sub_1B5F7E6C8(void *a1)
{
  id v1 = objc_msgSend(a1, sel_indexPathsForSelectedItems);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_1B61AFCB0();
  uint64_t v3 = sub_1B61B24E0();

  return v3;
}

uint64_t (*sub_1B5F7E728(void *a1))()
{
  if (UICollectionView.blueprintViewDataSource.getter())
  {
    uint64_t v3 = v2;
    uint64_t v4 = sub_1B5F7E6C8(a1);
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 72))(v5, ObjectType, v3);
      swift_bridgeObjectRelease();
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 24) = &protocol witness table for UICollectionView;
      swift_unknownObjectWeakInit();

      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 24) = v3;
      swift_unknownObjectWeakInit();
      swift_unknownObjectRelease();
      uint64_t v10 = (void *)swift_allocObject();
      v10[2] = v8;
      v10[3] = v9;
      v10[4] = v7;
      return sub_1B5F7F5A4;
    }
    swift_unknownObjectRelease();
  }

  return 0;
}

uint64_t sub_1B5F7E860()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B5F7E898()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1B5F7E900()
{
  sub_1B5F7AC2C(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void (**)(void))(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned __int8 *)(v0 + 64), v0 + 72, *(void *)(v0 + 112), *(void *)(v0 + 120));
}

unint64_t sub_1B5F7E944()
{
  unint64_t result = qword_1EB648FF0;
  if (!qword_1EB648FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB648FF0);
  }
  return result;
}

unint64_t sub_1B5F7E990()
{
  unint64_t result = qword_1EB647C40;
  if (!qword_1EB647C40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB647C40);
  }
  return result;
}

void sub_1B5F7E9D0()
{
  if (!qword_1EB63FCF0[0])
  {
    type metadata accessor for BlueprintLayoutCollectionProvider();
    unint64_t v0 = type metadata accessor for BlueprintCollectionViewLayout();
    if (!v1) {
      atomic_store(v0, qword_1EB63FCF0);
    }
  }
}

uint64_t sub_1B5F7EA30()
{
  return swift_deallocObject();
}

id sub_1B5F7EA68()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_setEditing_, *(unsigned __int8 *)(v0 + 24));
}

void (*sub_1B5F7EA80(void *a1))()
{
  if (UITableView.blueprintViewDataSource.getter())
  {
    uint64_t v3 = v2;
    uint64_t v4 = sub_1B618B4A4(a1);
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 72))(v5, ObjectType, v3);
      swift_bridgeObjectRelease();
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 24) = &protocol witness table for UITableView;
      swift_unknownObjectWeakInit();

      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 24) = v3;
      swift_unknownObjectWeakInit();
      swift_unknownObjectRelease();
      uint64_t v10 = (void *)swift_allocObject();
      v10[2] = v8;
      v10[3] = v9;
      v10[4] = v7;
      return sub_1B5F7EBF4;
    }
    swift_unknownObjectRelease();
  }

  return 0;
}

uint64_t sub_1B5F7EBB8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1B5F7EBF4()
{
  sub_1B6095778(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B5F7EC00(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1B5F7EC68()
{
  if (!qword_1EB64A388)
  {
    unint64_t v0 = sub_1B61B2F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB64A388);
    }
  }
}

uint64_t sub_1B5F7ECB4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_1B5F7ECCC(uint64_t a1)
{
  long long v8 = *(_OWORD *)(a1 + 304);
  long long v9 = *(_OWORD *)(a1 + 320);
  long long v6 = *(_OWORD *)(a1 + 272);
  long long v7 = *(_OWORD *)(a1 + 288);
  long long v4 = *(_OWORD *)(a1 + 240);
  long long v5 = *(_OWORD *)(a1 + 256);
  long long v3 = *(_OWORD *)(a1 + 224);
  sub_1B5F7EFD8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void **)(a1 + 168),
    *(void **)(a1 + 176),
    *(void *)(a1 + 184),
    *(void **)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    SBYTE8(v8),
    v9,
    *((uint64_t *)&v9 + 1),
    *(_OWORD *)(a1 + 336));
  return a1;
}

uint64_t sub_1B5F7EFD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,void *a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,char a43)
{
  if (a4)
  {
    unint64_t v61 = STACK[0x460];
    uint64_t v60 = STACK[0x458];
    uint64_t v59 = STACK[0x450];
    unint64_t v58 = STACK[0x448];
    uint64_t v57 = STACK[0x440];
    uint64_t v56 = STACK[0x438];
    unint64_t v55 = STACK[0x430];
    uint64_t v54 = STACK[0x428];
    uint64_t v53 = STACK[0x420];
    uint64_t v52 = (void *)STACK[0x3D0];
    uint64_t v51 = (void *)STACK[0x3C0];
    uint64_t v50 = (void *)STACK[0x3B8];
    sub_1B61B1F70();
    sub_1B61B1F70();
    id v43 = a22;
    id v44 = a23;
    id v45 = a25;
    sub_1B5E62DEC(a35, a36, a37);
    sub_1B5E62DEC(a38, a39, a40);
    sub_1B5E62DEC(a41, a42, a43);
    id v46 = v50;
    id v47 = v51;
    id v48 = v52;
    sub_1B5E62DEC(v53, v54, v55);
    sub_1B5E62DEC(v56, v57, v58);
    sub_1B5E62DEC(v59, v60, v61);
    sub_1B61B1F70();
    sub_1B61B1F70();
    sub_1B61B1F70();
    sub_1B61B1F70();
    sub_1B61B1F70();
    sub_1B61B1F70();
    sub_1B61B1F70();
    sub_1B61B1F70();
    sub_1B61B1F70();
    return sub_1B61B1F70();
  }
  return result;
}

uint64_t sub_1B5F7F1D8()
{
  return sub_1B5F7AE04(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88));
}

uint64_t sub_1B5F7F218()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5F7F268()
{
  return sub_1B5F7B0B8(*(void **)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32), (void *)(v0 + 40), *(uint64_t (**)(uint64_t))(v0 + 80), *(void *)(v0 + 88));
}

uint64_t sub_1B5F7F280()
{
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  return swift_deallocObject();
}

void sub_1B5F7F2D0(uint64_t a1)
{
  sub_1B5F7B84C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), (void *)(v1 + 48), *(unsigned __int8 *)(v1 + 88));
}

uint64_t sub_1B5F7F2E4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1B5F7F320()
{
  sub_1B5F7BEBC(*(void **)(v0 + 16), (void *)(v0 + 24));
}

uint64_t sub_1B5F7F330()
{
  return sub_1B5F7C0C8(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t objectdestroy_44Tm()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

void sub_1B5F7F384()
{
  sub_1B5F7C308(*(void **)(v0 + 16), (void *)(v0 + 24));
}

uint64_t sub_1B5F7F394()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1B5F7F3DC(uint64_t a1)
{
  sub_1B5F7C3B4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1B5F7F3E8()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

void sub_1B5F7F414(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B61B2F80();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1B5F7F468(uint64_t a1, uint64_t a2)
{
  sub_1B5E1E258();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B5F7F4CC(uint64_t a1)
{
  sub_1B5E1E258();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B5F7F528(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t KeyboardObserver.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  KeyboardObserver.init()();
  return v0;
}

uint64_t KeyboardObserver.onWillShow(animationBlock:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_1_7(v3);
  return swift_retain();
}

uint64_t KeyboardObserver.onWillHide(animationBlock:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 64);
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  OUTLINED_FUNCTION_1_7(v3);
  return swift_retain();
}

uint64_t KeyboardObserver.onDidHide(animationBlock:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 96);
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  OUTLINED_FUNCTION_1_7(v3);
  return swift_retain();
}

_OWORD *KeyboardObserver.init()()
{
  v0[5] = 0u;
  v0[6] = 0u;
  v0[3] = 0u;
  v0[4] = 0u;
  v0[1] = 0u;
  v0[2] = 0u;
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v2, sel_addObserver_selector_name_object_, v0, sel_keyboardWillShowWithNotification_, *MEMORY[0x1E4FB2C58], 0);

  id v3 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v3, sel_addObserver_selector_name_object_, v0, sel_keyboardWillHideWithNotification_, *MEMORY[0x1E4FB2C50], 0);

  return v0;
}

uint64_t KeyboardObserver.onShow(animationBlock:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 32);
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  OUTLINED_FUNCTION_1_7(v3);
  return swift_retain();
}

uint64_t KeyboardObserver.onDidShow(animationBlock:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  OUTLINED_FUNCTION_1_7(v3);
  return swift_retain();
}

uint64_t KeyboardObserver.onHide(animationBlock:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 80);
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  OUTLINED_FUNCTION_1_7(v3);
  return swift_retain();
}

uint64_t *KeyboardObserver.deinit()
{
  sub_1B5E3799C(v0[2]);
  sub_1B5E3799C(v0[4]);
  sub_1B5E3799C(v0[6]);
  sub_1B5E3799C(v0[8]);
  sub_1B5E3799C(v0[10]);
  sub_1B5E3799C(v0[12]);
  return v0;
}

uint64_t KeyboardObserver.__deallocating_deinit()
{
  KeyboardObserver.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for KeyboardObserver()
{
  return self;
}

uint64_t method lookup function for KeyboardObserver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for KeyboardObserver);
}

uint64_t dispatch thunk of KeyboardObserver.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1B5F7F904()
{
  OUTLINED_FUNCTION_0_69();
  uint64_t v0 = OUTLINED_FUNCTION_2_63();
  return sub_1B5E3799C(v0);
}

void sub_1B5F7F960(void *a1, void (*a2)(double), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (!sub_1B5F7FEAC(a1)) {
    return;
  }
  id v42 = (id)sub_1B61B20F0();
  uint64_t v43 = v12;
  sub_1B61B3220();
  sub_1B5E13BD8();
  sub_1B5E49E30((uint64_t)&aBlock);
  if (v45)
  {
    sub_1B5DFF760(0, qword_1EB6402C0);
    if (swift_dynamicCast())
    {
      id v13 = v42;
      objc_msgSend(v42, sel_CGRectValue);
      CGFloat v15 = v14;
      CGFloat v17 = v16;
      CGFloat v19 = v18;
      CGFloat v21 = v20;

      char v22 = 0;
      goto LABEL_7;
    }
  }
  else
  {
    sub_1B5E15B34((uint64_t)v44);
  }
  char v22 = 1;
  CGFloat v15 = 0.0;
  CGFloat v17 = 0.0;
  CGFloat v19 = 0.0;
  CGFloat v21 = 0.0;
LABEL_7:
  id v42 = (id)sub_1B61B20F0();
  uint64_t v43 = v23;
  sub_1B61B3220();
  sub_1B5E13BD8();
  sub_1B5E49E30((uint64_t)&aBlock);
  if (v45)
  {
    sub_1B5DFF760(0, &qword_1EB63E458);
    if (swift_dynamicCast())
    {
      id v24 = v42;
      objc_msgSend(v42, sel_doubleValue);
      double v26 = v25;

      goto LABEL_12;
    }
  }
  else
  {
    sub_1B5E15B34((uint64_t)v44);
  }
  double v26 = 0.0;
LABEL_12:
  id v42 = (id)sub_1B61B20F0();
  uint64_t v43 = v27;
  sub_1B61B3220();
  sub_1B5E13BD8();
  swift_bridgeObjectRelease();
  sub_1B5E49E30((uint64_t)&aBlock);
  if (!v45)
  {
    sub_1B5E15B34((uint64_t)v44);
    goto LABEL_16;
  }
  sub_1B5DFF760(0, &qword_1EB63E458);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    id v35 = 0;
    id v28 = 0;
    goto LABEL_17;
  }
  id v28 = v42;
  id v35 = objc_msgSend(v42, sel_unsignedIntegerValue);
LABEL_17:
  double Height = 0.0;
  if ((v22 & 1) == 0)
  {
    v46.origin.double x = v15;
    v46.origin.double y = v17;
    v46.size.double width = v19;
    v46.size.double height = v21;
    double Height = CGRectGetHeight(v46);
  }
  if (a2) {
    a2(Height);
  }
  unint64_t v30 = self;
  id v31 = (double *)swift_allocObject();
  *((void *)v31 + 2) = a4;
  *((void *)v31 + 3) = a5;
  v31[4] = Height;
  double v40 = sub_1B5F7FF1C;
  double v41 = v31;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v37 = 1107296256;
  double v38 = sub_1B5E3729C;
  double v39 = &block_descriptor_36;
  id v32 = _Block_copy(&aBlock);
  sub_1B5E4DC4C(a4);
  swift_release();
  double v33 = (double *)swift_allocObject();
  *((void *)v33 + 2) = a6;
  *((void *)v33 + 3) = a7;
  v33[4] = Height;
  double v40 = sub_1B5F7FF1C;
  double v41 = v33;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v37 = 1107296256;
  double v38 = sub_1B5E73DCC;
  double v39 = &block_descriptor_8;
  id v34 = _Block_copy(&aBlock);
  sub_1B5E4DC4C(a6);
  swift_release();
  objc_msgSend(v30, sel_animateWithDuration_delay_options_animations_completion_, v35, v32, v34, v26, 0.0);
  _Block_release(v34);
  _Block_release(v32);
}

uint64_t sub_1B5F7FDD8()
{
  OUTLINED_FUNCTION_0_69();
  uint64_t v0 = OUTLINED_FUNCTION_2_63();
  return sub_1B5E3799C(v0);
}

uint64_t sub_1B5F7FE4C(uint64_t a1, uint64_t a2, void *a3, void (*a4)(id))
{
  id v5 = a3;
  swift_retain();
  a4(v5);

  return swift_release();
}

uint64_t sub_1B5F7FEAC(void *a1)
{
  id v1 = objc_msgSend(a1, sel_userInfo);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1B61B1F10();

  return v3;
}

uint64_t sub_1B5F7FF1C()
{
  id v1 = *(uint64_t (**)(double))(v0 + 16);
  if (v1) {
    return v1(*(double *)(v0 + 32));
  }
  return result;
}

uint64_t sub_1B5F7FF5C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B5F7FFF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 32) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    uint64_t v11 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v12 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v11 = *v12;
    v11[1] = v12[1];
    uint64_t v13 = ((unint64_t)v11 + v6 + 16) & ~v6;
    uint64_t v14 = ((unint64_t)v12 + v6 + 16) & ~v6;
    CGFloat v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    sub_1B61B1F70();
    sub_1B61B1F70();
    v15(v13, v14, v4);
  }
  return a1;
}

uint64_t sub_1B5F80134(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

void *sub_1B5F801B8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v5 = *v6;
  v5[1] = v6[1];
  uint64_t v7 = *(void *)(a3 + 16);
  long long v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v10 = ((unint64_t)v5 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)v6 + v9 + 16) & ~v9;
  sub_1B61B1F70();
  sub_1B61B1F70();
  v8(v10, v11, v7);
  return a1;
}

void *sub_1B5F80278(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  unint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *v7;
  v6[1] = v7[1];
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(((unint64_t)v6 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)v7 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

_OWORD *sub_1B5F80348(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_1B5F803D0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 40))(((unint64_t)v7 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)v8 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_1B5F80480(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v9 = a2 - v8;
  if (a2 <= v8) {
    goto LABEL_23;
  }
  uint64_t v10 = ((v7 + 32) & ~v7) + *(void *)(*(void *)(v4 - 8) + 64);
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      if ((v6 & 0x80000000) != 0) {
        return __swift_getEnumTagSinglePayload(((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v7 + 16) & ~v7, v6, v4);
      }
      unint64_t v16 = *((void *)a1 + 1);
      if (v16 >= 0xFFFFFFFF) {
        LODWORD(v16) = -1;
      }
      return (v16 + 1);
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v10 | v15) + 1;
}

void sub_1B5F80618(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = ((v10 + 32) & ~v10) + *(void *)(*(void *)(v6 - 8) + 64);
  char v12 = 8 * v11;
  BOOL v13 = a3 >= v9;
  unsigned int v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      unsigned int v18 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v18))
      {
        int v15 = 4;
      }
      else if (v18 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v18 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  else
  {
    int v15 = 0;
  }
  if (v9 < a2)
  {
    unsigned int v16 = ~v9 + a2;
    if (v11 < 4)
    {
      int v17 = (v16 >> v12) + 1;
      if (v11)
      {
        int v19 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v11] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v17;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v11] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1B5F8086CLL);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v8 & 0x80000000) != 0)
        {
          unint64_t v20 = (((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v10 + 16) & ~v10;
          __swift_storeEnumTagSinglePayload(v20, a2, v8, v6);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = (a2 - 1);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for AutomationIdentifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B5F808AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = 0x6974616D6F747561;
  a4[1] = 0xEA00000000006E6FLL;
  a4[2] = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  a4[3] = v7;
  uint64_t v8 = (char *)a4 + *(int *)(type metadata accessor for AutomationIdentifier() + 40);
  unsigned int v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);
  return v9(v8, a1, a2);
}

uint64_t sub_1B5F80970(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1B61B3760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1701869940 && a2 == 0xE400000000000000;
    if (v6 || (sub_1B61B3760() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 1635017060 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1B61B3760();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1B5F80AB4()
{
  return 3;
}

uint64_t sub_1B5F80ABC(char a1)
{
  if (!a1) {
    return 0x696669746E656469;
  }
  if (a1 == 1) {
    return 1701869940;
  }
  return 1635017060;
}

uint64_t sub_1B5F80B08(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  v13[0] = *(void *)(a2 + 24);
  v13[1] = v4;
  type metadata accessor for AutomationIdentifier.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_1B61B36B0();
  OUTLINED_FUNCTION_0_13();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v13 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B61B39E0();
  char v16 = 0;
  uint64_t v11 = v13[3];
  sub_1B61B3690();
  if (!v11)
  {
    char v15 = 1;
    sub_1B61B3690();
    char v14 = 2;
    sub_1B61B36A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v5);
}

uint64_t sub_1B5F80CB8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v31 = a4;
  OUTLINED_FUNCTION_0_13();
  uint64_t v30 = v7;
  MEMORY[0x1F4188790](v8);
  double v33 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AutomationIdentifier.CodingKeys();
  swift_getWitnessTable();
  uint64_t v36 = sub_1B61B3670();
  OUTLINED_FUNCTION_0_13();
  uint64_t v32 = v10;
  MEMORY[0x1F4188790](v11);
  BOOL v13 = (char *)&v28 - v12;
  uint64_t v34 = a3;
  uint64_t v14 = type metadata accessor for AutomationIdentifier();
  OUTLINED_FUNCTION_0_13();
  uint64_t v29 = v15;
  MEMORY[0x1F4188790](v16);
  unsigned int v18 = (uint64_t *)((char *)&v28 - v17);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  id v35 = v13;
  uint64_t v19 = v37;
  sub_1B61B39C0();
  if (v19) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v37 = v14;
  unint64_t v20 = v33;
  char v40 = 0;
  *unsigned int v18 = sub_1B61B3640();
  v18[1] = v21;
  char v39 = 1;
  _OWORD v18[2] = sub_1B61B3640();
  void v18[3] = v22;
  char v38 = 2;
  sub_1B61B3650();
  uint64_t v23 = OUTLINED_FUNCTION_1_72();
  v24(v23);
  uint64_t v25 = v37;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))((char *)v18 + *(int *)(v37 + 40), v20, a2);
  uint64_t v26 = v29;
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v29 + 16))(v31, v18, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v26 + 8))(v18, v25);
}

BOOL sub_1B5F80FE0(char *a1, char *a2)
{
  return sub_1B5E26B6C(*a1, *a2);
}

uint64_t sub_1B5F80FF4()
{
  return _s5TeaUI16RestorationStateO9hashValueSivg_0();
}

uint64_t sub_1B5F81000()
{
  return sub_1B5E26B7C();
}

uint64_t sub_1B5F8100C()
{
  return sub_1B61B3940();
}

uint64_t sub_1B5F81054()
{
  return sub_1B5F80ABC(*v0);
}

uint64_t sub_1B5F81060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B5F80970(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B5F81090()
{
  return sub_1B5E1F5AC();
}

uint64_t sub_1B5F810B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5F80AB4();
  *a1 = result;
  return result;
}

uint64_t sub_1B5F810E4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B5F81138(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1B5F8118C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B5F80CB8(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1B5F811AC(void *a1, uint64_t a2)
{
  return sub_1B5F80B08(a1, a2);
}

uint64_t type metadata accessor for AutomationIdentifier.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_1B5F811DC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F812A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1B5F812D0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B5F812EC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B5F81308()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B5F81324(uint64_t a1, uint64_t a2)
{
  uint64_t v21[5] = a2;
  sub_1B5F817D0();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B5F821D8();
  uint64_t v9 = v8 - 8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v20(v7, a1, v4);
  sub_1B5F8226C(&qword_1E9DAAAE8, (void (*)(uint64_t))sub_1B5F817D0);
  sub_1B61B2300();
  uint64_t v12 = &v11[*(int *)(v9 + 44)];
  sub_1B5F8226C(&qword_1E9DAAAE0, (void (*)(uint64_t))sub_1B5F817D0);
  uint64_t v13 = *(void *)v12;
  sub_1B61B2970();
  if (v13 != v21[0])
  {
    uint64_t v14 = (void (**)(char *, uint64_t))(v5 + 8);
    do
    {
      uint64_t v15 = (void (*)(void *, void))sub_1B61B2AB0();
      swift_retain();
      v15(v21, 0);
      v20(v7, (uint64_t)v11, v4);
      sub_1B61B2980();
      (*v14)(v7, v4);
      sub_1B61AFDD0();
      uint64_t v16 = sub_1B61AFDC0();
      sub_1B5E5143C(v16);
      swift_release();
      uint64_t v17 = *(void *)v12;
      sub_1B61B2970();
    }
    while (v17 != v21[0]);
  }
  return sub_1B5F822B4((uint64_t)v11);
}

uint64_t SettingActionHandler.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = sub_1B61AFDE0();
  BOOL v2 = (void (*)(uint64_t))MEMORY[0x1E4FAB2D8];
  uint64_t v3 = sub_1B5F8226C(&qword_1E9DA8EE0, MEMORY[0x1E4FAB2D8]);
  uint64_t v4 = sub_1B5F8226C(&qword_1E9DA8EE8, v2);
  MEMORY[0x1BA9AD750](MEMORY[0x1E4FBC860], v1, v3, v4);
  return v0;
}

uint64_t SettingActionHandler.init()()
{
  uint64_t v1 = sub_1B61AFDE0();
  BOOL v2 = (void (*)(uint64_t))MEMORY[0x1E4FAB2D8];
  uint64_t v3 = sub_1B5F8226C(&qword_1E9DA8EE0, MEMORY[0x1E4FAB2D8]);
  uint64_t v4 = sub_1B5F8226C(&qword_1E9DA8EE8, v2);
  MEMORY[0x1BA9AD750](MEMORY[0x1E4FBC860], v1, v3, v4);
  return v0;
}

uint64_t SettingActionHandler.push(action:)()
{
  return swift_endAccess();
}

void sub_1B5F817D0()
{
  if (!qword_1E9DAAAB8)
  {
    sub_1B61AFDE0();
    uint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4FAB2D8];
    sub_1B5F8226C(&qword_1E9DA8EE0, MEMORY[0x1E4FAB2D8]);
    sub_1B5F8226C(&qword_1E9DA8EE8, v0);
    unint64_t v1 = sub_1B61B0670();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1E9DAAAB8);
    }
  }
}

Swift::Void __swiftcall SettingActionHandler.push(actions:)(Swift::OpaquePointer actions)
{
  unint64_t v2 = v1;
  sub_1B5F817D0();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_0_10();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_80();
  uint64_t v11 = v10 - v9;
  uint64_t v17 = MEMORY[0x1E4FBC860];
  if ((unint64_t)actions._rawValue >> 62) {
    goto LABEL_18;
  }
  uint64_t v12 = *(void *)(((unint64_t)actions._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  sub_1B61B1F70();
LABEL_3:
  uint64_t v16 = v2 + OBJC_IVAR____TtC5TeaUI20SettingActionHandler_actions;
  swift_beginAccess();
  if (v12)
  {
    unint64_t v13 = 0;
    uint64_t v14 = (void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    uint64_t v15 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    do
    {
      if (((unint64_t)actions._rawValue & 0xC000000000000001) != 0)
      {
        MEMORY[0x1BA9B04B0](v13, actions._rawValue);
      }
      else
      {
        if (v13 >= *(void *)(((unint64_t)actions._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_17:
          __break(1u);
LABEL_18:
          swift_retain();
          sub_1B61B1F70();
          uint64_t v12 = sub_1B61B3530();
          goto LABEL_3;
        }
        swift_retain();
      }
      unint64_t v2 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_17;
      }
      (*v14)(v11, v16, v5);
      sub_1B61AFDA0();
      uint64_t v7 = sub_1B61B0640();
      swift_bridgeObjectRelease();
      (*v15)(v11, v5);
      if (v7)
      {
        swift_release();
      }
      else
      {
        uint64_t v7 = (uint64_t)&v17;
        sub_1B61B3370();
        sub_1B61B33B0();
        sub_1B61B33C0();
        sub_1B61B3380();
      }
      ++v13;
    }
    while (v2 != v12);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1B61B05E0();
  swift_endAccess();
  swift_release();
}

uint64_t SettingActionHandler.perform(on:completion:)(void *a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v4 = sub_1B61AFDB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_80();
  uint64_t v10 = v9 - v8;
  sub_1B5F817D0();
  uint64_t v12 = v11;
  OUTLINED_FUNCTION_0_10();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_80();
  uint64_t v18 = v17 - v16;
  uint64_t v37 = MEMORY[0x1E4FBC860];
  uint64_t v19 = v3 + OBJC_IVAR____TtC5TeaUI20SettingActionHandler_actions;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v18, v19, v12);
  sub_1B5F81324(v18, (uint64_t)&v37);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v18, v12);
  uint64_t v20 = v37;
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v10, *MEMORY[0x1E4FAB2C0], v4);
  uint64_t v21 = *(void *)(v20 + 16);
  if (v21)
  {
    uint64_t v22 = v20 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v23 = *(void *)(v6 + 72);
    sub_1B5F8226C(&qword_1E9DAAAC0, MEMORY[0x1E4FAB2C8]);
    sub_1B61B1F70();
    while ((sub_1B61B20B0() & 1) == 0)
    {
      v22 += v23;
      if (!--v21) {
        goto LABEL_7;
      }
    }
    uint64_t v27 = OUTLINED_FUNCTION_1_73();
    v28(v27);
    swift_bridgeObjectRelease();
    sub_1B5DFF760(0, &qword_1E9DAA5D0);
    id v29 = sub_1B5F3EF90(0xD000000000000013, 0x80000001B61E54A0, 0xD00000000000004ELL, 0x80000001B61E54C0, 1);
    sub_1B5DFF760(0, &qword_1E9DAA5D8);
    id v30 = sub_1B5F3F214(0x707041206C6C694BLL, 0xE800000000000000, 2, (uint64_t)sub_1B5F81EEC, 0);
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = a2;
    *(void *)(v31 + 24) = a3;
    swift_retain();
    id v32 = sub_1B5F3F214(0x726574614CLL, 0xE500000000000000, 2, (uint64_t)sub_1B5E4631C, v31);
    objc_msgSend(v29, sel_addAction_, v30);
    objc_msgSend(v29, sel_addAction_, v32);
    objc_msgSend(a1, sel_presentViewController_animated_completion_, v29, 1, 0);
  }
  else
  {
    sub_1B61B1F70();
LABEL_7:
    uint64_t v24 = OUTLINED_FUNCTION_1_73();
    v25(v24);
    uint64_t v26 = swift_bridgeObjectRelease();
    a2(v26);
  }
  swift_beginAccess();
  sub_1B61B0650();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

void sub_1B5F81EEC()
{
}

uint64_t sub_1B5F81F00()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t SettingActionHandler.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5TeaUI20SettingActionHandler_actions;
  sub_1B5F817D0();
  OUTLINED_FUNCTION_19_1();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  return v0;
}

uint64_t SettingActionHandler.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5TeaUI20SettingActionHandler_actions;
  sub_1B5F817D0();
  OUTLINED_FUNCTION_19_1();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  return swift_deallocClassInstance();
}

uint64_t sub_1B5F82024()
{
  return SettingActionHandler.push(action:)();
}

void sub_1B5F82048(Swift::OpaquePointer a1)
{
}

uint64_t sub_1B5F8206C(void *a1, void (*a2)(uint64_t), uint64_t a3)
{
  return SettingActionHandler.perform(on:completion:)(a1, a2, a3);
}

uint64_t dispatch thunk of SettingActionHandlerType.push(action:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SettingActionHandlerType.push(actions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of SettingActionHandlerType.perform(on:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t sub_1B5F820CC()
{
  return type metadata accessor for SettingActionHandler();
}

uint64_t type metadata accessor for SettingActionHandler()
{
  uint64_t result = qword_1E9DAAAC8;
  if (!qword_1E9DAAAC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1B5F8211C()
{
  sub_1B5F817D0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for SettingActionHandler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SettingActionHandler);
}

uint64_t dispatch thunk of SettingActionHandler.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

void sub_1B5F821D8()
{
  if (!qword_1E9DAAAD8)
  {
    sub_1B5F817D0();
    sub_1B5F8226C(&qword_1E9DAAAE0, (void (*)(uint64_t))sub_1B5F817D0);
    unint64_t v0 = sub_1B61B3450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAAAD8);
    }
  }
}

uint64_t sub_1B5F8226C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B5F822B4(uint64_t a1)
{
  sub_1B5F821D8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AppURLContext.options.getter()
{
  return sub_1B61B1F70();
}

uint64_t AppURLContext.options2.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppURLContext() + 20);
  sub_1B61B0910();
  OUTLINED_FUNCTION_6_0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  return v6(a1, v3, v4);
}

uint64_t AppURLContext.route.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AppURLContext();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t AppURLContext.routeOptions.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AppURLContext();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t AppURLContext.init(options:options2:route:routeOptions:)@<X0>(uint64_t a1@<X0>, char *a2@<X2>, char *a3@<X3>, void *a4@<X8>)
{
  char v6 = *a2;
  char v7 = *a3;
  *a4 = a1;
  type metadata accessor for AppURLContext();
  OUTLINED_FUNCTION_3_55();
  OUTLINED_FUNCTION_6_0();
  uint64_t v8 = OUTLINED_FUNCTION_2_64();
  uint64_t result = v9(v8);
  *((unsigned char *)a4 + *(int *)(v4 + 24)) = v6;
  *((unsigned char *)a4 + *(int *)(v4 + 28)) = v7;
  return result;
}

uint64_t AppURLContext.init(options:options2:route:)@<X0>(uint64_t a1@<X0>, char *a2@<X2>, void *a3@<X8>)
{
  char v5 = *a2;
  *a3 = a1;
  type metadata accessor for AppURLContext();
  OUTLINED_FUNCTION_3_55();
  OUTLINED_FUNCTION_6_0();
  uint64_t v6 = OUTLINED_FUNCTION_2_64();
  uint64_t result = v7(v6);
  *((unsigned char *)a3 + *(int *)(v3 + 24)) = v5;
  *((unsigned char *)a3 + *(int *)(v3 + 28)) = 1;
  return result;
}

TeaUI::URLHandlerRouteOptions __swiftcall URLHandlerRouteOptions.init(prefersAnimations:)(TeaUI::URLHandlerRouteOptions prefersAnimations)
{
  v1->prefersAnimations = prefersAnimations.prefersAnimations;
  return prefersAnimations;
}

TeaUI::URLHandlerRoute_optional __swiftcall URLHandlerRoute.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1B61B35E0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t URLHandlerRoute.rawValue.getter()
{
  uint64_t v1 = 0x6974634172657375;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E6F43656E656373;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x4C52556E65706FLL;
  }
}

uint64_t sub_1B5F825B8(unsigned __int8 *a1, char *a2)
{
  return sub_1B5E18BD4(*a1, *a2);
}

uint64_t sub_1B5F825C4()
{
  return sub_1B6158160();
}

uint64_t sub_1B5F825CC()
{
  return sub_1B5E62144();
}

uint64_t sub_1B5F825D4()
{
  return sub_1B6158770();
}

TeaUI::URLHandlerRoute_optional sub_1B5F825DC(Swift::String *a1)
{
  return URLHandlerRoute.init(rawValue:)(*a1);
}

uint64_t sub_1B5F825E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = URLHandlerRoute.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t URLHandlerRouteOptions.prefersAnimations.getter()
{
  return *v0;
}

uint64_t URLHandlerRouteOptions.description.getter()
{
  sub_1B61B3290();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_5_37();
  uint64_t v2 = v0;
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  return v2;
}

uint64_t URLHandlerManager<A>.handle(url:options:route:)(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5 = type metadata accessor for AppURLContext();
  uint64_t v6 = v5 - 8;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v9 = *a3;
  swift_bridgeObjectRetain_n();
  URLHandlerOpenOptions.init(options:)();
  void *v8 = a2;
  *((unsigned char *)v8 + *(int *)(v6 + 32)) = v9;
  *((unsigned char *)v8 + *(int *)(v6 + 36)) = 1;
  LOBYTE(a3) = sub_1B61B0780();
  sub_1B5F827A4((uint64_t)v8);
  return a3 & 1;
}

uint64_t sub_1B5F827A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppURLContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t URLHandlerManager<A>.handle(url:options:route:routeOptions:)(uint64_t a1, void *a2, unsigned __int8 *a3, char *a4)
{
  uint64_t v8 = type metadata accessor for AppURLContext();
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_4_7();
  int v10 = *a3;
  char v11 = *a4;
  sub_1B5E4CCFC();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = (void *)v12;
  *(_OWORD *)(v12 + 16) = xmmword_1B61C0140;
  if (v10)
  {
    if (v10 == 1)
    {
      unint64_t v14 = 0xEC00000079746976;
      uint64_t v15 = 0x6974634172657375;
    }
    else
    {
      unint64_t v14 = 0xEC0000007463656ELL;
      uint64_t v15 = 0x6E6F43656E656373;
    }
  }
  else
  {
    unint64_t v14 = 0xE700000000000000;
    uint64_t v15 = 0x4C52556E65706FLL;
  }
  uint64_t v16 = MEMORY[0x1E4FBB1A0];
  *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v17 = sub_1B5E2E40C();
  v13[8] = v17;
  void v13[4] = v15;
  v13[5] = v14;
  uint64_t v18 = sub_1B61AF8B0();
  v13[12] = v16;
  v13[13] = v17;
  v13[9] = v18;
  v13[10] = v19;
  sub_1B61B3290();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_5_37();
  uint64_t v27 = v21;
  uint64_t v28 = v20;
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  v13[17] = v16;
  v13[18] = v17;
  v13[14] = v27;
  v13[15] = v28;
  sub_1B5E4CDAC();
  uint64_t v22 = (void *)sub_1B61B2F40();
  sub_1B61B2BA0();
  sub_1B61B0F90();
  swift_bridgeObjectRelease();

  if (a2)
  {
    id v23 = a2;
    uint64_t v24 = sub_1B6184A3C();
    sub_1B6184BE8();
  }
  else
  {
    type metadata accessor for OpenURLOptionsKey(0);
    sub_1B5F82AA0();
    uint64_t v24 = OUTLINED_FUNCTION_4_51();
    OUTLINED_FUNCTION_4_51();
    URLHandlerOpenOptions.init(options:)();
  }
  *uint64_t v4 = v24;
  *((unsigned char *)v4 + *(int *)(v8 + 24)) = v10;
  *((unsigned char *)v4 + *(int *)(v8 + 28)) = v11;
  char v25 = sub_1B61B0780();
  sub_1B5F827A4((uint64_t)v4);
  return v25 & 1;
}

unint64_t sub_1B5F82AA0()
{
  unint64_t result = qword_1EB64B638;
  if (!qword_1EB64B638)
  {
    type metadata accessor for OpenURLOptionsKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB64B638);
  }
  return result;
}

uint64_t URLHandlerManager<A>.handle(url:options:route:)(uint64_t a1, void *a2, unsigned __int8 *a3)
{
  unsigned __int8 v5 = *a3;
  char v4 = 1;
  return URLHandlerManager<A>.handle(url:options:route:routeOptions:)(a1, a2, &v5, &v4) & 1;
}

uint64_t URLHandlerManager<A>.handle(url:options:)()
{
  uint64_t v1 = type metadata accessor for AppURLContext();
  uint64_t v2 = v1 - 8;
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_4_7();
  uint64_t v3 = sub_1B6184A3C();
  sub_1B6184BE8();
  uint64_t *v0 = v3;
  *((unsigned char *)v0 + *(int *)(v2 + 32)) = 3;
  *((unsigned char *)v0 + *(int *)(v2 + 36)) = 1;
  char v4 = sub_1B61B0780();
  sub_1B5F827A4((uint64_t)v0);
  return v4 & 1;
}

unint64_t sub_1B5F82BF4()
{
  unint64_t result = qword_1E9DAAAF0;
  if (!qword_1E9DAAAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAAAF0);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for AppURLContext(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1B61B0910();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    sub_1B61B1F70();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *((unsigned char *)v7 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)v7 + v13) = *((unsigned char *)a2 + v13);
  }
  return v7;
}

uint64_t destroy for AppURLContext(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1B61B0910();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for AppURLContext(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B61B0910();
  int v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  sub_1B61B1F70();
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  return a1;
}

void *assignWithCopy for AppURLContext(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B61B0910();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

void *initializeWithTake for AppURLContext(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B61B0910();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  return a1;
}

void *assignWithTake for AppURLContext(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1B61B0910();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppURLContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B5F8308C);
}

uint64_t sub_1B5F8308C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1B61B0910();
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 20);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AppURLContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B5F83128);
}

void *sub_1B5F83128(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1B61B0910();
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 20);
    return (void *)__swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for URLHandlerRoute(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F83274);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for URLHandlerRoute()
{
  return &type metadata for URLHandlerRoute;
}

unsigned char *storeEnumTagSinglePayload for URLHandlerRouteOptions(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F83378);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for URLHandlerRouteOptions()
{
  return &type metadata for URLHandlerRouteOptions;
}

uint64_t sub_1B5F833B0()
{
  return sub_1B5F833D4();
}

uint64_t sub_1B5F833BC()
{
  return sub_1B5F833D4();
}

uint64_t sub_1B5F833C8()
{
  return sub_1B5F833D4();
}

uint64_t sub_1B5F833D4()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = v0;
  }
  else
  {
    id v4 = v0;
    while (1)
    {
      id v5 = objc_msgSend(v4, sel_parentViewController);

      if (!v5) {
        break;
      }
      self;
      uint64_t v6 = swift_dynamicCastObjCClass();
      id v4 = v5;
      if (v6) {
        return v6;
      }
    }
    return 0;
  }
  return v2;
}

uint64_t sub_1B5F83480@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1BA9B1EC0](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1B5F834D0()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t SceneProvider.windowScene.getter()
{
  OUTLINED_FUNCTION_0_70();
  return MEMORY[0x1BA9B1EC0](v0);
}

uint64_t SceneProvider.keyWindow.getter()
{
  OUTLINED_FUNCTION_0_70();
  uint64_t v1 = (void *)MEMORY[0x1BA9B1EC0](v0);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_windows);

  sub_1B5F8364C();
  unint64_t v4 = sub_1B61B24E0();

  if (v4 >> 62)
  {
    sub_1B61B1F70();
    uint64_t v5 = sub_1B61B3530();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_4:
      sub_1B5E7FBF8(0, (v4 & 0xC000000000000001) == 0, v4);
      if ((v4 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1BA9B04B0](0, v4);
      }
      else {
        id v6 = *(id *)(v4 + 32);
      }
      uint64_t v5 = (uint64_t)v6;
    }
  }
  swift_bridgeObjectRelease();
  return v5;
}

unint64_t sub_1B5F8364C()
{
  unint64_t result = qword_1EB64CAA8;
  if (!qword_1EB64CAA8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB64CAA8);
  }
  return result;
}

void *SceneProvider.traits.getter()
{
  unint64_t result = (void *)SceneProvider.keyWindow.getter();
  if (result)
  {
    uint64_t v1 = result;
    id v2 = objc_msgSend(result, sel_rootViewController);

    if (v2)
    {
      id v3 = (void *)sub_1B5F833D4();
      if (v3)
      {
        unint64_t v4 = v3;
        id v5 = objc_msgSend(v3, sel_displayMode);

        if (v5 == (id)1) {
          return &unk_1F0EFC2F0;
        }
        else {
          return 0;
        }
      }
      id v6 = (void *)sub_1B5F833D4();
      if (v6)
      {
        uint64_t v7 = v6;
        id v8 = objc_msgSend(v6, sel__uip_sidebar);
        unsigned int v9 = objc_msgSend(v8, sel__isVisible);

        if (v9) {
          return 0;
        }
        else {
          return &unk_1F0EFC318;
        }
      }
    }
    return 0;
  }
  return result;
}

uint64_t SceneProvider.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  return v0;
}

uint64_t SceneProvider.init()()
{
  swift_unknownObjectWeakInit();
  return v0;
}

Swift::Void __swiftcall SceneProvider.register(_:)(UIWindowScene *a1)
{
}

uint64_t SceneProvider.deinit()
{
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t SceneProvider.__deallocating_deinit()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1B5F83888()
{
  return SceneProvider.windowScene.getter();
}

uint64_t sub_1B5F838AC()
{
  return SceneProvider.keyWindow.getter();
}

void *sub_1B5F838D0()
{
  return SceneProvider.traits.getter();
}

void sub_1B5F838F4(UIWindowScene *a1)
{
}

uint64_t dispatch thunk of SceneProviderType.windowScene.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SceneProviderType.keyWindow.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SceneProviderType.traits.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SceneProviderType.register(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t type metadata accessor for SceneProvider()
{
  return self;
}

uint64_t method lookup function for SceneProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SceneProvider);
}

uint64_t dispatch thunk of SceneProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

double BlueprintLayoutCollectionSection.unionFrame.getter()
{
  return *(double *)v0;
}

__n128 BlueprintLayoutCollectionSection.headerUnionFrame.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 64);
  __n128 result = *(__n128 *)(v1 + 32);
  long long v4 = *(_OWORD *)(v1 + 48);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t BlueprintLayoutCollectionSection.pinnedHeaderFrames.getter()
{
  return sub_1B61B1F70();
}

uint64_t destroy for BlueprintLayoutCollectionSection()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BlueprintLayoutCollectionSection(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v6;
  *(_OWORD *)(a1 + 128) = v7;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  sub_1B61B1F70();
  sub_1B61B1F70();
  return a1;
}

uint64_t assignWithCopy for BlueprintLayoutCollectionSection(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  long long v4 = *(_OWORD *)(a2 + 32);
  long long v5 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  long long v6 = *(_OWORD *)(a2 + 112);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v6;
  *(_OWORD *)(a1 + 128) = v7;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BlueprintLayoutCollectionSection(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BlueprintLayoutCollectionSection(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 160))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 72);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BlueprintLayoutCollectionSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 160) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 72) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 160) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BlueprintLayoutCollectionSection()
{
  return &type metadata for BlueprintLayoutCollectionSection;
}

uint64_t sub_1B5F83C84(unint64_t a1, uint64_t a2, double a3)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_1B61B1F70();
  for (; v6; uint64_t v6 = sub_1B61B3530())
  {
    for (uint64_t i = 4; ; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        id v8 = (void *)MEMORY[0x1BA9B04B0](i - 4, a1);
      }
      else
      {
        id v8 = *(void **)(a1 + 8 * i);
        swift_unknownObjectRetain();
      }
      uint64_t v9 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      if (objc_msgSend(v8, sel_respondsToSelector_, sel_continueAnimationWithTimingParameters_durationFactor_))objc_msgSend(v8, sel_continueAnimationWithTimingParameters_durationFactor_, a2, a3); {
      swift_unknownObjectRelease();
      }
      if (v9 == v6)
      {
        swift_unknownObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_13:
    sub_1B61B1F70();
  }
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_1B5F83DD0(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

id ImplicitAnimationGroup.__allocating_init(animators:)(uint64_t a1)
{
  long long v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC5TeaUI22ImplicitAnimationGroup_animators] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id ImplicitAnimationGroup.init(animators:)(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC5TeaUI22ImplicitAnimationGroup_animators] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id ImplicitAnimationGroup.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ImplicitAnimationGroup.init()()
{
}

id ImplicitAnimationGroup.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id ImplicitAnimationGroup.state.getter()
{
  OUTLINED_FUNCTION_7_38();
  if (!v2)
  {
    OUTLINED_FUNCTION_5_38();
    if (v1) {
      goto LABEL_3;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    return 0;
  }
  OUTLINED_FUNCTION_14_1();
  if (!sub_1B61B3530()) {
    goto LABEL_7;
  }
LABEL_3:
  OUTLINED_FUNCTION_57();
  long long v4 = (void *)MEMORY[0x1BA9B04B0](0, v0);
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v4, sel_state);
  swift_unknownObjectRelease();
  return v5;
}

id ImplicitAnimationGroup.isRunning.getter()
{
  OUTLINED_FUNCTION_7_38();
  if (v1) {
    goto LABEL_12;
  }
  uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v2; uint64_t v2 = sub_1B61B3530())
  {
    uint64_t v3 = 4;
    while (1)
    {
      if ((v0 & 0xC000000000000001) != 0)
      {
        long long v4 = (void *)MEMORY[0x1BA9B04B0](v3 - 4, v0);
      }
      else
      {
        long long v4 = *(void **)(v0 + 8 * v3);
        swift_unknownObjectRetain();
      }
      uint64_t v5 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v6 = objc_msgSend(v4, sel_isRunning);
      swift_unknownObjectRelease();
      if ((v6 & 1) == 0)
      {
        ++v3;
        if (v5 != v2) {
          continue;
        }
      }
      goto LABEL_14;
    }
    __break(1u);
LABEL_12:
    OUTLINED_FUNCTION_6_41();
  }
  id v6 = 0;
LABEL_14:
  swift_bridgeObjectRelease_n();
  return v6;
}

id ImplicitAnimationGroup.isReversed.getter()
{
  OUTLINED_FUNCTION_7_38();
  if (v2)
  {
    OUTLINED_FUNCTION_14_1();
    uint64_t v1 = sub_1B61B3530();
    if (v1) {
      goto LABEL_3;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    return 0;
  }
  OUTLINED_FUNCTION_5_38();
  if (!v1) {
    goto LABEL_7;
  }
LABEL_3:
  OUTLINED_FUNCTION_57();
  if (v1)
  {
    uint64_t v3 = (void *)MEMORY[0x1BA9B04B0](0, v0);
  }
  else
  {
    uint64_t v3 = *(void **)(v0 + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v3, sel_isReversed);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t ImplicitAnimationGroup.isReversed.setter(char a1)
{
  return sub_1B5F847A8(a1, (SEL *)&selRef_setReversed_);
}

uint64_t (*ImplicitAnimationGroup.isReversed.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = ImplicitAnimationGroup.isReversed.getter() & 1;
  return sub_1B5F84308;
}

uint64_t sub_1B5F84308(uint64_t a1)
{
  return ImplicitAnimationGroup.isReversed.setter(*(unsigned char *)(a1 + 8));
}

uint64_t ImplicitAnimationGroup.fractionComplete.getter()
{
  OUTLINED_FUNCTION_7_38();
  if (!v2)
  {
    OUTLINED_FUNCTION_5_38();
    if (v1) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_14_1();
  if (!sub_1B61B3530()) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  OUTLINED_FUNCTION_57();
  id v4 = (void *)MEMORY[0x1BA9B04B0](0, v0);
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_fractionComplete);
  return swift_unknownObjectRelease();
}

uint64_t ImplicitAnimationGroup.fractionComplete.setter(double a1)
{
  return sub_1B5F84550((SEL *)&selRef_setFractionComplete_, a1);
}

uint64_t (*ImplicitAnimationGroup.fractionComplete.modify(void *a1))(double *a1)
{
  a1[1] = v1;
  ImplicitAnimationGroup.fractionComplete.getter();
  *a1 = v3;
  return sub_1B5F844C8;
}

uint64_t sub_1B5F844C8(double *a1)
{
  return ImplicitAnimationGroup.fractionComplete.setter(*a1);
}

Swift::Void __swiftcall ImplicitAnimationGroup.startAnimation()()
{
}

Swift::Void __swiftcall ImplicitAnimationGroup.startAnimation(afterDelay:)(Swift::Double afterDelay)
{
}

uint64_t sub_1B5F84550(SEL *a1, double a2)
{
  OUTLINED_FUNCTION_9_30();
  if (!v6)
  {
    uint64_t result = OUTLINED_FUNCTION_4_52();
    if (v3) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  OUTLINED_FUNCTION_1_74();
  uint64_t result = sub_1B61B3530();
  uint64_t v3 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        uint64_t v9 = (void *)MEMORY[0x1BA9B04B0](i, v2);
      }
      else
      {
        uint64_t v9 = *(void **)(v2 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      objc_msgSend(v9, *a1, a2);
      swift_unknownObjectRelease();
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall ImplicitAnimationGroup.pauseAnimation()()
{
}

uint64_t sub_1B5F8468C(SEL *a1)
{
  OUTLINED_FUNCTION_9_30();
  if (!v4)
  {
    uint64_t result = OUTLINED_FUNCTION_4_52();
    if (v2) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  OUTLINED_FUNCTION_1_74();
  uint64_t result = sub_1B61B3530();
  uint64_t v2 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        long long v7 = (void *)MEMORY[0x1BA9B04B0](i, v1);
      }
      else
      {
        long long v7 = *(void **)(v1 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      [v7 *a1];
      swift_unknownObjectRelease();
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall ImplicitAnimationGroup.stopAnimation(_:)(Swift::Bool a1)
{
}

uint64_t sub_1B5F847A8(char a1, SEL *a2)
{
  OUTLINED_FUNCTION_9_30();
  if (!v6)
  {
    uint64_t result = OUTLINED_FUNCTION_4_52();
    if (v3) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  OUTLINED_FUNCTION_1_74();
  uint64_t result = sub_1B61B3530();
  uint64_t v3 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = a1 & 1;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        uint64_t v10 = (void *)MEMORY[0x1BA9B04B0](v8, v2);
      }
      else
      {
        uint64_t v10 = *(void **)(v2 + 8 * v8 + 32);
        swift_unknownObjectRetain();
      }
      ++v8;
      objc_msgSend(v10, *a2, v9);
      swift_unknownObjectRelease();
    }
    while (v3 != v8);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t ImplicitAnimationGroup.finishAnimation(at:)(uint64_t a1)
{
  OUTLINED_FUNCTION_7_38();
  if (!v3)
  {
    uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v4) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  OUTLINED_FUNCTION_6_41();
  uint64_t result = sub_1B61B3530();
  uint64_t v4 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        long long v7 = (void *)MEMORY[0x1BA9B04B0](i, v1);
      }
      else
      {
        long long v7 = *(void **)(v1 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      objc_msgSend(v7, sel_finishAnimationAtPosition_, a1);
      swift_unknownObjectRelease();
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t ImplicitAnimationGroup.addCompletion(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1B61B1D90();
  OUTLINED_FUNCTION_0_10();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_4();
  uint64_t v32 = v9;
  uint64_t v10 = sub_1B61B1DF0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v31 = v11;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_4();
  uint64_t v30 = v13;
  dispatch_group_t v35 = dispatch_group_create();
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = 0;
  OUTLINED_FUNCTION_9_30();
  if (v14)
  {
    sub_1B61B1F70();
    uint64_t result = sub_1B61B3530();
    uint64_t v15 = result;
  }
  else
  {
    uint64_t v15 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = sub_1B61B1F70();
  }
  uint64_t v33 = v10;
  if (!v15)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    sub_1B5E75560();
    id v23 = (void *)sub_1B61B2C50();
    uint64_t v24 = (void *)swift_allocObject();
    long long v24[2] = a1;
    uint64_t v24[3] = a2;
    v24[4] = v36;
    double v41 = sub_1B5F851A4;
    id v42 = v24;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v38 = 1107296256;
    char v39 = sub_1B5E3729C;
    char v40 = &block_descriptor_37;
    char v25 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    sub_1B61B1DB0();
    sub_1B5E397C8((unint64_t *)&qword_1EB647A40, MEMORY[0x1E4FBCB00]);
    sub_1B5E39770();
    sub_1B5E397C8((unint64_t *)&qword_1EB647AE0, (void (*)(uint64_t))sub_1B5E39770);
    sub_1B61B3100();
    sub_1B61B2BF0();
    _Block_release(v25);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v32, v5);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v33);
    swift_release();
    return swift_release();
  }
  if (v15 >= 1)
  {
    uint64_t v26 = a1;
    uint64_t v27 = a2;
    uint64_t v28 = v7;
    uint64_t v29 = v5;
    uint64_t v17 = 0;
    unint64_t v18 = v2 & 0xC000000000000001;
    uint64_t v34 = v2;
    do
    {
      if (v18)
      {
        uint64_t v19 = (void *)MEMORY[0x1BA9B04B0](v17, v2);
      }
      else
      {
        uint64_t v19 = *(void **)(v2 + 8 * v17 + 32);
        swift_unknownObjectRetain();
      }
      if (objc_msgSend(v19, sel_respondsToSelector_, sel_addCompletion_, v26, v27, v28, v29))
      {
        swift_unknownObjectRetain();
        dispatch_group_enter(v35);
        uint64_t v20 = swift_allocObject();
        *(void *)(v20 + 16) = v36;
        *(void *)(v20 + 24) = v35;
        double v41 = sub_1B5F851F0;
        id v42 = (void *)v20;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v38 = 1107296256;
        char v39 = sub_1B5F83DD0;
        char v40 = &block_descriptor_9_1;
        uint64_t v21 = _Block_copy(&aBlock);
        swift_retain();
        uint64_t v22 = v35;
        swift_retain();
        objc_msgSend(v19, sel_addCompletion_, v21);
        _Block_release(v21);
        swift_unknownObjectRelease_n();
        uint64_t v2 = v34;
        swift_release();
        swift_release();
      }
      else
      {
        swift_unknownObjectRelease();
      }
      ++v17;
    }
    while (v15 != v17);
    swift_bridgeObjectRelease();
    uint64_t v7 = v28;
    uint64_t v5 = v29;
    a1 = v26;
    a2 = v27;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

void sub_1B5F84ECC(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v6 = (uint64_t *)(a2 + 16);
  swift_beginAccess();
  uint64_t v7 = *(void *)(a2 + 16);
  if (v7 != 1)
  {
    if (a1)
    {
      if (a1 != 2)
      {
        if (a1 == 1) {
          goto LABEL_11;
        }
        goto LABEL_10;
      }
      if (v7)
      {
LABEL_10:
        a1 = 0;
        goto LABEL_11;
      }
    }
    else if (v7 != 2)
    {
      goto LABEL_10;
    }
    a1 = 2;
    goto LABEL_11;
  }
  a1 = 1;
LABEL_11:
  swift_beginAccess();
  *uint64_t v6 = a1;
  dispatch_group_leave(a3);
}

uint64_t sub_1B5F84F80(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  return a1(*(void *)(a3 + 16));
}

uint64_t ImplicitAnimationGroup.continueAnimation(withTimingParameters:durationFactor:)(uint64_t a1, double a2)
{
  swift_unknownObjectRetain();
  unint64_t v4 = sub_1B61B1F70();
  sub_1B5F83C84(v4, a1, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B5F85154()
{
  return swift_deallocObject();
}

uint64_t sub_1B5F85164()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5F851A4()
{
  return sub_1B5F84F80(*(uint64_t (**)(void))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1B5F851B0()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1B5F851F0(uint64_t a1)
{
  sub_1B5F84ECC(a1, *(void *)(v1 + 16), *(NSObject **)(v1 + 24));
}

id sub_1B5F851F8@<X0>(unsigned char *a1@<X8>)
{
  id result = ImplicitAnimationGroup.isReversed.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1B5F85228(char *a1)
{
  return ImplicitAnimationGroup.isReversed.setter(*a1);
}

uint64_t sub_1B5F85250@<X0>(void *a1@<X8>)
{
  uint64_t result = ImplicitAnimationGroup.fractionComplete.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1B5F8527C(double *a1)
{
  return ImplicitAnimationGroup.fractionComplete.setter(*a1);
}

uint64_t type metadata accessor for ImplicitAnimationGroup()
{
  return self;
}

uint64_t method lookup function for ImplicitAnimationGroup(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ImplicitAnimationGroup);
}

uint64_t dispatch thunk of ImplicitAnimationGroup.__allocating_init(animators:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1B5F852F4()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1B5F8532C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t dispatch thunk of PluginViewControllerProviding.pluginViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id TouchInsetsButton.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_38();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_35_0();
  return objc_msgSend(v2, v3, v4);
}

void sub_1B5F853A8(uint64_t a1@<X8>)
{
  *(double *)a1 = sub_1B5F85404();
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
}

uint64_t sub_1B5F853D8()
{
  return sub_1B5F8543C();
}

double sub_1B5F85404()
{
  OUTLINED_FUNCTION_0_1();
  return *(double *)v0;
}

uint64_t sub_1B5F8543C()
{
  OUTLINED_FUNCTION_38();
  uint64_t v5 = (void *)(v0 + OBJC_IVAR____TtC5TeaUI17TouchInsetsButton_touchInsets);
  uint64_t result = swift_beginAccess();
  void *v5 = v4;
  v5[1] = v3;
  v5[2] = v2;
  v5[3] = v1;
  return result;
}

uint64_t (*sub_1B5F8549C())()
{
  return j__swift_endAccess;
}

BOOL sub_1B5F854F8(CGFloat a1, CGFloat a2)
{
  objc_msgSend(v3, sel_bounds);
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;
  OUTLINED_FUNCTION_0_1();
  v16.origin.double x = UIEdgeInsetsInsetRect(v7, v9, v11, v13, *v2, v2[1]);
  v15.double x = a1;
  v15.double y = a2;
  return CGRectContainsPoint(v16, v15);
}

void sub_1B5F855F4()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for TouchInsetsButton();
  objc_msgSendSuper2(&v3, sel_layoutSubviews);
  id v1 = objc_msgSend(v0, sel_titleLabel);
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v2, sel_frame);
    CGRect v5 = CGRectIntegral(v4);
    objc_msgSend(v2, sel_setFrame_, v5.origin.x, v5.origin.y, v5.size.width, v5.size.height);
  }
}

uint64_t type metadata accessor for TouchInsetsButton()
{
  return self;
}

id TouchInsetsButton.init(frame:)()
{
  OUTLINED_FUNCTION_38();
  id v1 = (_OWORD *)(v0 + OBJC_IVAR____TtC5TeaUI17TouchInsetsButton_touchInsets);
  __asm { FMOV            V0.2D, #-20.0 }
  *id v1 = _Q0;
  v1[1] = _Q0;
  uint64_t v11 = type metadata accessor for TouchInsetsButton();
  double v7 = OUTLINED_FUNCTION_35_0();
  return objc_msgSendSuper2(v8, v9, v7, v0, v11);
}

id TouchInsetsButton.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id TouchInsetsButton.init(coder:)(void *a1)
{
  id v3 = &v1[OBJC_IVAR____TtC5TeaUI17TouchInsetsButton_touchInsets];
  __asm { FMOV            V0.2D, #-20.0 }
  *(_OWORD *)id v3 = _Q0;
  *((_OWORD *)v3 + 1) = _Q0;
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for TouchInsetsButton();
  id v9 = objc_msgSendSuper2(&v11, sel_initWithCoder_, a1);

  return v9;
}

id TouchInsetsButton.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TouchInsetsButton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for TouchInsetsButton(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TouchInsetsButton);
}

uint64_t dispatch thunk of TouchInsetsButton.touchInsets.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of TouchInsetsButton.touchInsets.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of TouchInsetsButton.touchInsets.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t sub_1B5F8592C()
{
  return sub_1B61B0C90();
}

void sub_1B5F85974(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_1B5F859E8(v1);
}

uint64_t sub_1B5F859A4()
{
  swift_retain();
  sub_1B61B0CB0();
  swift_release();
  return v1;
}

void sub_1B5F859E8(void *a1)
{
  id v1 = a1;
  swift_retain();
  sub_1B61B0CC0();
  swift_release();
}

void (*sub_1B5F85A38(void *a1))(void *a1)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = *(void *)(v1 + 16);
  swift_retain();
  v3[5] = sub_1B61B0CA0();
  return sub_1B5F85AA4;
}

void sub_1B5F85AA4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_release();
  free(v1);
}

uint64_t UserActivityManager.__allocating_init(serializer:)()
{
  uint64_t v0 = swift_allocObject();
  UserActivityManager.init(serializer:)();
  return v0;
}

void *UserActivityManager.init(serializer:)()
{
  uint64_t v13 = sub_1B61B2C40();
  OUTLINED_FUNCTION_0_13();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_4_7();
  sub_1B61B2C20();
  OUTLINED_FUNCTION_3_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_80();
  uint64_t v6 = sub_1B61B1DF0();
  MEMORY[0x1F4188790](v6 - 8);
  OUTLINED_FUNCTION_80();
  uint64_t v7 = sub_1B5F8592C();
  uint64_t v8 = MEMORY[0x1E4FBC868];
  v0[2] = v7;
  v0[3] = v8;
  uint64_t v12 = *(void *)(*v0 + 128);
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB64CA90);
  sub_1B61B1DE0();
  sub_1B5F870BC(&qword_1EB647BD8, MEMORY[0x1E4FBCC10]);
  id v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1B5F8A4B4(0, (unint64_t *)&qword_1EB647B00, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1B5F85E08(&qword_1EB647B08, (unint64_t *)&qword_1EB647B00, v9);
  sub_1B61B3100();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, *MEMORY[0x1E4FBCC58], v13);
  *(void *)((char *)v0 + v12) = sub_1B61B2C80();
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(void))(v10 + 32))();
  return v0;
}

uint64_t sub_1B5F85E08(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B5F8A4B4(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B5F85E6C(uint64_t a1)
{
  return sub_1B5F87E4C(a1, (uint64_t)&unk_1F0F0AE70, (uint64_t)sub_1B5F870A4, (uint64_t)&block_descriptor_38);
}

uint64_t sub_1B5F85E94()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1B5F85ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B5F8A4B4(0, (unint64_t *)&qword_1EB64A140, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v108 = (uint64_t)v99 - v10;
  uint64_t v118 = sub_1B61B1D90();
  uint64_t v117 = *(void *)(v118 - 8);
  MEMORY[0x1F4188790](v118);
  uint64_t v115 = (char *)v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_1B61B1DF0();
  uint64_t v114 = *(void *)(v116 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v116);
  unint64_t v113 = (char *)v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a3 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = MEMORY[0x1F4188790](v12);
  uint64_t v121 = (char *)v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  unint64_t v107 = (char *)v99 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v111 = (char *)v99 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  id v23 = (char *)v99 - v22;
  MEMORY[0x1F4188790](v21);
  char v25 = (char *)v99 - v24;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    unint64_t v110 = v23;
    uint64_t v124 = a4;
    uint64_t v125 = a5;
    if (qword_1EB64B738 != -1) {
      swift_once();
    }
    uint64_t v109 = v15;
    uint64_t v26 = sub_1B61B1020();
    uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1EB654BC8);
    uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    uint64_t v122 = v14 + 16;
    unint64_t v123 = v28;
    v28(v25, a2, a3);
    uint64_t v112 = v27;
    uint64_t v29 = sub_1B61B1000();
    os_log_type_t v30 = sub_1B61B2BA0();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v119 = v14;
    if (v31)
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v120 = a2;
      uint64_t v34 = v33;
      uint64_t aBlock = v33;
      *(_DWORD *)uint64_t v32 = 136446210;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(a3, AssociatedConformanceWitness);
      *(void *)&long long v128 = sub_1B5EA6A1C(v36, v37, &aBlock);
      sub_1B61B2FB0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v25, a3);
      _os_log_impl(&dword_1B5DE7000, v29, v30, "User activity will become current, identifier=%{public}s", v32, 0xCu);
      swift_arrayDestroy();
      uint64_t v38 = v34;
      a2 = v120;
      MEMORY[0x1BA9B1D70](v38, -1, -1);
      MEMORY[0x1BA9B1D70](v32, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v25, a3);
    }

    char v39 = (void *)sub_1B5F89350(a2, 0);
    char v40 = v123;
    double v41 = v39;
    id v42 = v39;
    sub_1B5F859E8(v41);
    uint64_t v44 = v124;
    uint64_t v43 = v125;
    uint64_t v45 = swift_getAssociatedConformanceWitness();
    CGRect v46 = *(uint64_t (**)(uint64_t))(v45 + 32);
    uint64_t v100 = v45;
    v99[1] = v45 + 32;
    v99[0] = v46;
    uint64_t v47 = v46(a3);
    uint64_t v48 = a3;
    uint64_t v50 = v49;
    uint64_t v120 = a2;
    swift_beginAccess();
    id v51 = v42;
    sub_1B5E43B34((uint64_t)v51, v47, v50);
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_1B5DFF760(0, (unint64_t *)&qword_1EB64CA90);
    uint64_t v121 = (char *)sub_1B61B2C50();
    uint64_t v52 = v110;
    v40(v110, v120, v48);
    uint64_t v53 = v119;
    uint64_t v54 = *(unsigned __int8 *)(v119 + 80);
    uint64_t v103 = ~v54;
    uint64_t v55 = (v54 + 48) & ~v54;
    uint64_t v101 = v54;
    uint64_t v102 = v54 | 7;
    uint64_t v56 = (char *)swift_allocObject();
    *((void *)v56 + 2) = v48;
    *((void *)v56 + 3) = v44;
    *((void *)v56 + 4) = v43;
    *((void *)v56 + 5) = v51;
    uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
    uint64_t v105 = v53 + 32;
    uint64_t v104 = v57;
    v57(&v56[v55], v52, v48);
    uint64_t v134 = sub_1B5F8A400;
    uint64_t v135 = v56;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v131 = 1107296256;
    uint64_t v132 = sub_1B5E3729C;
    uint64_t v133 = &block_descriptor_36_0;
    unint64_t v58 = _Block_copy(&aBlock);
    id v106 = v51;
    swift_release();
    uint64_t v59 = v113;
    sub_1B61B1DB0();
    uint64_t aBlock = MEMORY[0x1E4FBC860];
    sub_1B5F870BC((unint64_t *)&qword_1EB647A40, MEMORY[0x1E4FBCB00]);
    uint64_t v60 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
    sub_1B5F8A4B4(0, (unint64_t *)&qword_1EB647AD8, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    uint64_t v61 = v120;
    sub_1B5F85E08((unint64_t *)&qword_1EB647AE0, (unint64_t *)&qword_1EB647AD8, v60);
    double v62 = v115;
    uint64_t v63 = v118;
    sub_1B61B3100();
    id v64 = v121;
    MEMORY[0x1BA9AFE10](0, v59, v62, v58);
    _Block_release(v58);

    uint64_t v66 = v124;
    uint64_t v65 = v125;
    (*(void (**)(char *, uint64_t))(v117 + 8))(v62, v63);
    (*(void (**)(char *, uint64_t))(v114 + 8))(v59, v116);
    uint64_t v67 = (char *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 80))(v61, v66, v65);
    if (v67)
    {
      uint64_t v121 = v67;
      unint64_t v68 = v111;
      v123(v111, v61, v48);
      uint64_t v69 = sub_1B61B1000();
      os_log_type_t v70 = sub_1B61B2BA0();
      uint64_t v71 = v48;
      if (os_log_type_enabled(v69, v70))
      {
        char v72 = (uint8_t *)swift_slowAlloc();
        uint64_t v73 = swift_slowAlloc();
        uint64_t aBlock = v73;
        *(_DWORD *)char v72 = 136446210;
        uint64_t v74 = ((uint64_t (*)(uint64_t, uint64_t))v99[0])(v48, v100);
        *(void *)&long long v128 = sub_1B5EA6A1C(v74, v75, &aBlock);
        sub_1B61B2FB0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v119 + 8))(v68, v48);
        _os_log_impl(&dword_1B5DE7000, v69, v70, "User activity will donate interaction for %{public}s", v72, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BA9B1D70](v73, -1, -1);
        uint64_t v76 = v72;
        uint64_t v66 = v124;
        uint64_t v65 = v125;
        MEMORY[0x1BA9B1D70](v76, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v119 + 8))(v68, v48);
      }

      uint64_t v86 = v101;
      uint64_t v87 = v110;
      v123(v110, v120, v48);
      uint64_t v88 = (v86 + 40) & v103;
      BOOL v89 = (char *)swift_allocObject();
      *((void *)v89 + 2) = v71;
      *((void *)v89 + 3) = v66;
      *((void *)v89 + 4) = v65;
      v104(&v89[v88], v87, v71);
      uint64_t v134 = sub_1B5F8A76C;
      uint64_t v135 = v89;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v131 = 1107296256;
      uint64_t v132 = sub_1B5F87728;
      uint64_t v133 = &block_descriptor_46;
      uint64_t v90 = _Block_copy(&aBlock);
      swift_release();
      id v91 = v121;
      objc_msgSend(v121, sel_donateInteractionWithCompletion_, v90);
      swift_release();

      _Block_release(v90);
    }
    else
    {
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))(v65 + 88))(&v128, v61, v66, v65);
      if (v129)
      {
        sub_1B5E30E70(&v128, (uint64_t)&aBlock);
        uint64_t v77 = v107;
        uint64_t v78 = v48;
        v123(v107, v61, v48);
        BOOL v79 = sub_1B61B1000();
        os_log_type_t v80 = sub_1B61B2BA0();
        if (os_log_type_enabled(v79, v80))
        {
          uint64_t v81 = v77;
          uint64_t v82 = (uint8_t *)swift_slowAlloc();
          uint64_t v83 = swift_slowAlloc();
          *(void *)&long long v128 = v83;
          *(_DWORD *)uint64_t v82 = 136446210;
          uint64_t v84 = ((uint64_t (*)(uint64_t, uint64_t))v99[0])(v48, v100);
          uint64_t v127 = sub_1B5EA6A1C(v84, v85, (uint64_t *)&v128);
          uint64_t v78 = v48;
          sub_1B61B2FB0();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v119 + 8))(v81, v48);
          _os_log_impl(&dword_1B5DE7000, v79, v80, "User activity will donate app intent for %{public}s", v82, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1BA9B1D70](v83, -1, -1);
          uint64_t v61 = v120;
          MEMORY[0x1BA9B1D70](v82, -1, -1);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v119 + 8))(v77, v48);
        }

        uint64_t v92 = v101;
        uint64_t v93 = sub_1B61B2710();
        uint64_t v94 = v108;
        __swift_storeEnumTagSinglePayload(v108, 1, 1, v93);
        sub_1B5E176E4((uint64_t)&aBlock, (uint64_t)&v128);
        uint64_t v95 = v110;
        v123(v110, v61, v78);
        uint64_t v96 = (v92 + 96) & v103;
        uint64_t v97 = (char *)swift_allocObject();
        *((void *)v97 + 2) = 0;
        *((void *)v97 + 3) = 0;
        uint64_t v98 = v124;
        *((void *)v97 + 4) = v78;
        *((void *)v97 + 5) = v98;
        *((void *)v97 + 6) = v125;
        sub_1B5E30E70(&v128, (uint64_t)(v97 + 56));
        v104(&v97[v96], v95, v78);
        sub_1B5EE1FE8(v94, (uint64_t)&unk_1E9DAAC20, (uint64_t)v97);

        swift_release();
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
      }
      else
      {
        swift_release();

        sub_1B5F8A44C((uint64_t)&v128, &qword_1EB64A328, (uint64_t (*)(uint64_t))sub_1B5F8A518);
      }
    }
  }
}

uint64_t sub_1B5F870A4()
{
  return sub_1B5F8A418();
}

uint64_t sub_1B5F870BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B5F87104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v18[1] = a4;
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t v7 = (void *)MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v7, sel_becomeCurrent);
  if (qword_1EB64B738 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1B61B1020();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EB654BC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, a3);
  uint64_t v11 = sub_1B61B1000();
  os_log_type_t v12 = sub_1B61B2BA0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v19 = v14;
    *(_DWORD *)uint64_t v13 = 136446210;
    v18[0] = v13 + 4;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(a3, AssociatedConformanceWitness);
    _OWORD v18[2] = sub_1B5EA6A1C(v16, v17, &v19);
    sub_1B61B2FB0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a3);
    _os_log_impl(&dword_1B5DE7000, v11, v12, "User activity did become current, identifier=%{public}s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9B1D70](v14, -1, -1);
    MEMORY[0x1BA9B1D70](v13, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a3);
  }
}

void sub_1B5F873A0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v7)
  {
    id v10 = a1;
    if (qword_1EB64B738 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1B61B1020();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EB654BC8);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, a3);
    id v12 = a1;
    id v13 = a1;
    uint64_t v14 = sub_1B61B1000();
    os_log_type_t v15 = sub_1B61B2B80();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v24 = (void *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v27 = v25;
      *(_DWORD *)uint64_t v16 = 136446466;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(a3, AssociatedConformanceWitness);
      uint64_t v26 = sub_1B5EA6A1C(v18, v19, &v27);
      sub_1B61B2FB0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a3);
      *(_WORD *)(v16 + 12) = 2114;
      id v20 = a1;
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v26 = v21;
      sub_1B61B2FB0();
      uint64_t v22 = v24;
      *uint64_t v24 = v21;

      _os_log_impl(&dword_1B5DE7000, v14, v15, "User activity failed to donate interaction for %{public}s, error=%{public}@", (uint8_t *)v16, 0x16u);
      sub_1B5F8A378(0, &qword_1EB647CD0, (unint64_t *)&qword_1EB647CC0, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
      swift_arrayDestroy();
      MEMORY[0x1BA9B1D70](v22, -1, -1);
      uint64_t v23 = v25;
      swift_arrayDestroy();
      MEMORY[0x1BA9B1D70](v23, -1, -1);
      MEMORY[0x1BA9B1D70](v16, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a3);
    }
  }
}

void sub_1B5F87728(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_1B5F87794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[7] = a7;
  v8[8] = a8;
  v8[5] = a5;
  v8[6] = a6;
  v8[4] = a4;
  v8[9] = *(void *)(a6 - 8);
  v8[10] = swift_task_alloc();
  uint64_t v9 = sub_1B61AF590();
  v8[11] = v9;
  v8[12] = *(void *)(v9 - 8);
  v8[13] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1B5F878AC, 0, 0);
}

uint64_t sub_1B5F878AC()
{
  OUTLINED_FUNCTION_14_23();
  uint64_t v1 = (void *)v0[4];
  uint64_t v3 = v1[3];
  uint64_t v2 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  id v4 = (void *)swift_task_alloc();
  v0[14] = v4;
  *id v4 = v0;
  v4[1] = sub_1B5F87968;
  uint64_t v5 = v0[13];
  return MEMORY[0x1F40D3CA0](v5, v3, v2);
}

uint64_t sub_1B5F87968()
{
  OUTLINED_FUNCTION_7_21();
  OUTLINED_FUNCTION_1_5();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_19();
  void *v5 = v4;
  v3[15] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v6 = sub_1B5F87AC8;
  }
  else
  {
    (*(void (**)(void, void))(v3[12] + 8))(v3[13], v3[11]);
    uint64_t v6 = sub_1B5F87A64;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1B5F87A64()
{
  OUTLINED_FUNCTION_7_21();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_19();
  return v0();
}

uint64_t sub_1B5F87AC8()
{
  uint64_t v29 = v0;
  if (qword_1EB64B738 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[15];
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v5 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v6 = sub_1B61B1020();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB654BC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  id v7 = v1;
  id v8 = v1;
  uint64_t v9 = sub_1B61B1000();
  os_log_type_t v10 = sub_1B61B2B80();
  BOOL v11 = os_log_type_enabled(v9, v10);
  id v12 = (void *)v0[15];
  uint64_t v13 = v0[9];
  uint64_t v14 = v0[10];
  if (v11)
  {
    log = v9;
    uint64_t v15 = v0[6];
    uint64_t v16 = swift_slowAlloc();
    uint64_t v25 = (void *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = v27;
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v15, AssociatedConformanceWitness);
    v0[2] = sub_1B5EA6A1C(v18, v19, &v28);
    sub_1B61B2FB0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
    *(_WORD *)(v16 + 12) = 2114;
    id v20 = v12;
    uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v21;
    sub_1B61B2FB0();
    *uint64_t v25 = v21;

    _os_log_impl(&dword_1B5DE7000, log, v10, "User activity failed to donate app intent for %{public}s, error=%{public}@", (uint8_t *)v16, 0x16u);
    sub_1B5F8A378(0, &qword_1EB647CD0, (unint64_t *)&qword_1EB647CC0, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
    MEMORY[0x1BA9B1D70](v25, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1BA9B1D70](v27, -1, -1);
    MEMORY[0x1BA9B1D70](v16, -1, -1);
  }
  else
  {
    uint64_t v22 = v0[6];

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v22);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_19();
  return v23();
}

uint64_t sub_1B5F87E24(uint64_t a1)
{
  return sub_1B5F87E4C(a1, (uint64_t)&unk_1F0F0AEC0, (uint64_t)sub_1B5F8892C, (uint64_t)&block_descriptor_10_0);
}

uint64_t sub_1B5F87E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = (void *)*v4;
  sub_1B61B1D90();
  OUTLINED_FUNCTION_0_13();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_80();
  uint64_t v12 = v11 - v10;
  sub_1B61B1DF0();
  OUTLINED_FUNCTION_0_13();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_4_7();
  uint64_t v14 = v8[10];
  OUTLINED_FUNCTION_0_13();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_11_23();
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v6, a1, v14);
  unint64_t v19 = (*(unsigned __int8 *)(v16 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  id v20 = (char *)swift_allocObject();
  *((void *)v20 + 2) = v14;
  *((void *)v20 + 3) = v8[11];
  *((void *)v20 + 4) = v8[12];
  *((void *)v20 + 5) = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(&v20[v19], v6, v14);
  aBlock[4] = a3;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B5E3729C;
  aBlock[3] = a4;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  sub_1B61B1DB0();
  sub_1B5F870BC((unint64_t *)&qword_1EB647A40, MEMORY[0x1E4FBCB00]);
  uint64_t v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1B5F8A4B4(0, (unint64_t *)&qword_1EB647AD8, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1B5F85E08((unint64_t *)&qword_1EB647AE0, (unint64_t *)&qword_1EB647AD8, v22);
  sub_1B61B3100();
  MEMORY[0x1BA9AFE10](0, v5, v12, v21);
  _Block_release(v21);
  OUTLINED_FUNCTION_5_1();
  v23();
  OUTLINED_FUNCTION_5_1();
  v24();
  swift_release();
  return swift_release();
}

uint64_t sub_1B5F881D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v58 = a4;
  uint64_t v59 = a5;
  uint64_t v61 = a2;
  uint64_t v6 = sub_1B61B1D90();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1B61B1DF0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a3 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v12);
  uint64_t v56 = v17;
  uint64_t v57 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  unint64_t v19 = (char *)&v47 - v18;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  uint64_t v60 = result;
  if (result)
  {
    uint64_t v50 = v14;
    uint64_t v52 = v9;
    uint64_t v55 = v6;
    if (qword_1EB64B738 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1B61B1020();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EB654BC8);
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v49 = v15 + 16;
    uint64_t v48 = v22;
    v22(v19, v61, a3);
    uint64_t v23 = sub_1B61B1000();
    os_log_type_t v24 = sub_1B61B2BA0();
    BOOL v25 = os_log_type_enabled(v23, v24);
    uint64_t v53 = v10;
    uint64_t v54 = v7;
    uint64_t v51 = v11;
    if (v25)
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      aBlock[0] = v27;
      *(_DWORD *)uint64_t v26 = 136446210;
      uint64_t v47 = v26 + 4;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(a3, AssociatedConformanceWitness);
      uint64_t v62 = sub_1B5EA6A1C(v29, v30, aBlock);
      sub_1B61B2FB0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v19, a3);
      _os_log_impl(&dword_1B5DE7000, v23, v24, "User activity will resign current, identifier=%{public}s)", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BA9B1D70](v27, -1, -1);
      MEMORY[0x1BA9B1D70](v26, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v19, a3);

      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    }
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(a3, AssociatedConformanceWitness);
    swift_beginAccess();
    BOOL v31 = (void *)sub_1B5E42F84();
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v32 = (void *)sub_1B5F859A4();
    uint64_t v33 = v32;
    if (v31)
    {
      if (!v32) {
        goto LABEL_14;
      }
      sub_1B5DFF760(0, &qword_1EB64CA70);
      id v34 = v31;
      char v35 = sub_1B61B2E10();

      if ((v35 & 1) == 0) {
        goto LABEL_14;
      }
    }
    else if (v32)
    {

LABEL_14:
      sub_1B5DFF760(0, (unint64_t *)&qword_1EB64CA90);
      uint64_t v36 = (void *)sub_1B61B2C50();
      unint64_t v37 = v57;
      v48(v57, v61, a3);
      unint64_t v38 = (*(unsigned __int8 *)(v15 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      char v39 = (char *)swift_allocObject();
      uint64_t v40 = v58;
      *((void *)v39 + 2) = a3;
      *((void *)v39 + 3) = v40;
      *((void *)v39 + 4) = v59;
      *((void *)v39 + 5) = v31;
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v39[v38], v37, a3);
      aBlock[4] = (uint64_t)sub_1B5F8A3E4;
      aBlock[5] = (uint64_t)v39;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1B5E3729C;
      aBlock[3] = (uint64_t)&block_descriptor_30_0;
      double v41 = _Block_copy(aBlock);
      id v42 = v31;
      swift_release();
      uint64_t v43 = v50;
      sub_1B61B1DB0();
      aBlock[0] = MEMORY[0x1E4FBC860];
      sub_1B5F870BC((unint64_t *)&qword_1EB647A40, MEMORY[0x1E4FBCB00]);
      uint64_t v44 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
      sub_1B5F8A4B4(0, (unint64_t *)&qword_1EB647AD8, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
      sub_1B5F85E08((unint64_t *)&qword_1EB647AE0, (unint64_t *)&qword_1EB647AD8, v44);
      uint64_t v45 = v52;
      uint64_t v46 = v55;
      sub_1B61B3100();
      MEMORY[0x1BA9AFE10](0, v43, v45, v41);
      _Block_release(v41);

      swift_release();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v45, v46);
      return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v43, v53);
    }
    sub_1B5F859E8(0);
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_1B5F8892C()
{
  return sub_1B5F8A418();
}

void sub_1B5F88944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v18[1] = a4;
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t v7 = (void *)MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v7, sel_resignCurrent);
  if (qword_1EB64B738 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1B61B1020();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EB654BC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, a3);
  uint64_t v11 = sub_1B61B1000();
  os_log_type_t v12 = sub_1B61B2BA0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v19 = v14;
    *(_DWORD *)uint64_t v13 = 136446210;
    v18[0] = v13 + 4;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(a3, AssociatedConformanceWitness);
    _OWORD v18[2] = sub_1B5EA6A1C(v16, v17, &v19);
    sub_1B61B2FB0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a3);
    _os_log_impl(&dword_1B5DE7000, v11, v12, "User activity did resign current, identifier=%{public}s)", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BA9B1D70](v14, -1, -1);
    MEMORY[0x1BA9B1D70](v13, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a3);
  }
}

uint64_t sub_1B5F88BE0()
{
  sub_1B5F8A4B4(0, (unint64_t *)&qword_1EB64A140, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)v11 - v1;
  uint64_t v3 = sub_1B61B2710();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(void *)(v4 + 24) = 0;
  if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v3) == 1)
  {
    sub_1B5F8A44C((uint64_t)v2, (unint64_t *)&qword_1EB64A140, MEMORY[0x1E4FBCFE8]);
    uint64_t v5 = 0;
    uint64_t v6 = 0;
  }
  else
  {
    sub_1B61B2700();
    OUTLINED_FUNCTION_3_0();
    OUTLINED_FUNCTION_5_1();
    v7();
    if (*(void *)(v4 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v5 = sub_1B61B26A0();
      uint64_t v6 = v8;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = 0;
    }
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = &unk_1E9DAAB80;
  *(void *)(v9 + 24) = v4;
  if (v6 | v5)
  {
    v11[0] = 0;
    v11[1] = 0;
    void v11[2] = v5;
    void v11[3] = v6;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1B5F88E08()
{
  return MEMORY[0x1F4188298](sub_1B5F88E24, 0, 0);
}

uint64_t sub_1B5F88E24()
{
  OUTLINED_FUNCTION_14_23();
  uint64_t v1 = self;
  v0[2] = v0;
  v0[3] = sub_1B5F88F20;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1B5F890D8;
  v0[13] = &block_descriptor_24;
  v0[14] = v2;
  objc_msgSend(v1, sel_deleteAllSavedUserActivitiesWithCompletionHandler_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1B5F88F20()
{
  OUTLINED_FUNCTION_7_21();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_5_19();
  void *v2 = v1;
  return MEMORY[0x1F4188298](sub_1B5F88FF4, 0, 0);
}

uint64_t sub_1B5F88FF4()
{
  OUTLINED_FUNCTION_8_19();
  return v0();
}

uint64_t sub_1B5F8900C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B5F89044()
{
  OUTLINED_FUNCTION_14_23();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_11_3(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B5EE2ABC;
  OUTLINED_FUNCTION_16_16();
  return sub_1B5F88E08();
}

uint64_t sub_1B5F890D8(uint64_t a1)
{
  return j__swift_continuation_resume(*(void *)(a1 + 32));
}

uint64_t sub_1B5F890E4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = *(void *)(*v2 + 80);
  OUTLINED_FUNCTION_0_13();
  uint64_t v8 = v7;
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_11_23();
  (*(void (**)(uint64_t))(v8 + 16))(v3);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v13 = (v10 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = v6;
  *((void *)v14 + 3) = *(void *)(v5 + 88);
  *((void *)v14 + 4) = *(void *)(v5 + 96);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(&v14[v12], v3, v6);
  *(void *)&v14[v13] = a2;
  sub_1B5DFF760(0, &qword_1EB64CA70);
  type metadata accessor for UserActivityManager();
  sub_1B61B1F70();
  uint64_t v15 = sub_1B61B0E60();
  swift_release();
  return v15;
}

uint64_t sub_1B5F892BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1B5F89350(a2, a3);
  if (!v3)
  {
    sub_1B5F8A378(0, &qword_1E9DAAC10, &qword_1EB64CA70, 0x1E4F22488, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1B61B0DA0();
  }
  return result;
}

uint64_t sub_1B5F89350(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t)v2;
  uint64_t v78 = a1;
  uint64_t v79 = a2;
  uint64_t v6 = (void *)*v2;
  sub_1B5F8A4B4(0, (unint64_t *)&qword_1EB64CF60, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v7);
  unint64_t v75 = (char *)v69 - v8;
  uint64_t v9 = v6[12];
  uint64_t v10 = v6[10];
  uint64_t v76 = v6[11];
  uint64_t v77 = v9;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_13();
  uint64_t v73 = v13;
  uint64_t v74 = v12;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v14);
  char v72 = (char *)v69 - v15;
  OUTLINED_FUNCTION_0_13();
  uint64_t v17 = v16;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_11_23();
  uint64_t v19 = sub_1B61B1E30();
  OUTLINED_FUNCTION_0_13();
  uint64_t v21 = v20;
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_4_7();
  uint64_t v23 = *(void **)(v5 + v6[16]);
  void *v3 = v23;
  (*(void (**)(void *, void, uint64_t))(v21 + 104))(v3, *MEMORY[0x1E4FBCBF0], v19);
  id v24 = v23;
  LOBYTE(v23) = sub_1B61B1E60();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v21 + 8))(v3, v19);
  if (v23)
  {
    uint64_t v26 = v78;
    uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v10, AssociatedConformanceWitness);
    uint64_t v29 = v28;
    uint64_t v30 = sub_1B5EDC2B4();
    BOOL v31 = sub_1B5E13D74(v27, v29, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v32 = v26;
    uint64_t v33 = v26;
    id v34 = v31;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v4, v33, v10);
    uint64_t v70 = AssociatedConformanceWitness;
    uint64_t v71 = v10;
    if (!v31)
    {
      v69[1] = sub_1B5DFF760(0, &qword_1EB64CA70);
      (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(v10, AssociatedConformanceWitness);
      swift_getAssociatedConformanceWitness();
      sub_1B61B2460();
      OUTLINED_FUNCTION_5_1();
      v35();
      id v34 = sub_1B5F89A68();
    }
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v4, v10);
    uint64_t v36 = v32;
    uint64_t v37 = v80;
    uint64_t v38 = sub_1B5F89ADC(v79, v5, v32);
    if (v37)
    {
    }
    else
    {
      uint64_t v39 = v38;
      sub_1B5F0B8AC(v38);
      uint64_t v40 = (void *)sub_1B61B1F00();
      swift_bridgeObjectRelease();
      objc_msgSend(v34, sel_setUserInfo_, v40);

      sub_1B5E5CA3C(v39);
      double v41 = (void *)sub_1B61B2790();
      swift_bridgeObjectRelease();
      objc_msgSend(v34, sel_setRequiredUserInfoKeys_, v41);

      uint64_t v43 = v76;
      uint64_t v42 = v77;
      uint64_t v44 = OUTLINED_FUNCTION_2_65();
      v45(v44);
      uint64_t v46 = (void *)sub_1B61B20C0();
      swift_bridgeObjectRelease();
      objc_msgSend(v34, sel_setTitle_, v46);

      uint64_t v47 = OUTLINED_FUNCTION_2_65();
      uint64_t v49 = v48(v47);
      sub_1B5E5C7E8(v49);
      uint64_t v50 = (void *)sub_1B61B2790();
      swift_bridgeObjectRelease();
      objc_msgSend(v34, sel_setKeywords_, v50);

      uint64_t v51 = (uint64_t)v75;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 40))(v36, v43, v42);
      uint64_t v52 = sub_1B61AF960();
      uint64_t v53 = 0;
      if (__swift_getEnumTagSinglePayload(v51, 1, v52) != 1)
      {
        uint64_t v53 = (void *)sub_1B61AF8D0();
        OUTLINED_FUNCTION_3_0();
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v51, v52);
      }
      objc_msgSend(v34, sel_setWebpageURL_, v53);

      uint64_t v55 = OUTLINED_FUNCTION_2_65();
      uint64_t v57 = (void *)v56(v55);
      objc_msgSend(v34, sel_setContentAttributeSet_, v57);

      uint64_t v58 = OUTLINED_FUNCTION_2_65();
      v59(v58);
      uint64_t v60 = v70;
      if (v61)
      {
        uint64_t v62 = (void *)sub_1B61B20C0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v62 = 0;
      }
      objc_msgSend(v34, sel_setPersistentIdentifier_, v62);

      uint64_t v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 40))(v71, v60);
      sub_1B5E75B00(0, v63);
      objc_msgSend(v34, sel_setEligibleForSearch_, v64 & 1);
      sub_1B5E75B00(1u, v63);
      objc_msgSend(v34, sel_setEligibleForHandoff_, v65 & 1);
      sub_1B5E75B00(2u, v63);
      objc_msgSend(v34, sel_setEligibleForPublicIndexing_, v66 & 1);
      sub_1B5E75B00(3u, v63);
      char v68 = v67;
      swift_bridgeObjectRelease();
      objc_msgSend(v34, sel_setEligibleForPrediction_, v68 & 1);
      objc_msgSend(v34, sel_setNeedsSave_, 1);
    }
    return (uint64_t)v34;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1B5F89A68()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v1 = (void *)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithActivityType_, v1);

  return v2;
}

uint64_t sub_1B5F89ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)a2 + 96);
  if (a1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(v3 + 64))(a3, a1, *(void *)(*(void *)a2 + 88));
  }
  else {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(v3 + 56))(a3, *(void *)(*(void *)a2 + 88), v3);
  }
}

uint64_t UserActivityManager.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(void))(v1 + 8))();

  return v0;
}

uint64_t UserActivityManager.__deallocating_deinit()
{
  UserActivityManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B5F89C88()
{
  return sub_1B5F859A4();
}

void sub_1B5F89CAC(void *a1)
{
}

void (*sub_1B5F89CD0(void *a1))(void *a1)
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1B5F85A38(v2);
  return sub_1B5E969A4;
}

uint64_t sub_1B5F89D2C()
{
  OUTLINED_FUNCTION_14_23();
  uint64_t v1 = v0;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_11_3(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1B5F89DFC;
  return v7(v1);
}

uint64_t sub_1B5F89DFC()
{
  OUTLINED_FUNCTION_7_21();
  OUTLINED_FUNCTION_1_5();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_5_19();
  void *v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_19();
  return v3();
}

uint64_t sub_1B5F89EC0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5F89EF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B5F859A4();
  *a1 = result;
  return result;
}

uint64_t sub_1B5F89F28()
{
  return 24;
}

__n128 sub_1B5F89F34(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_1B5F89F48()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for UserActivityManager()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for UserActivityManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UserActivityManager);
}

uint64_t dispatch thunk of UserActivityManager.stateRestorationActivity.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of UserActivityManager.stateRestorationActivity.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of UserActivityManager.stateRestorationActivity.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of UserActivityManager.__allocating_init(serializer:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of UserActivityManager.registerCurrentActivity(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of UserActivityManager.deregisterActivity(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of UserActivityManager.clearAllSavedUserActivities()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t sub_1B5F8A124(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return sub_1B61B1F70();
  }
  return result;
}

uint64_t destroy for BlueprintPipelineError(uint64_t a1)
{
  return sub_1B5F8A14C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1B5F8A14C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s5TeaUI22BlueprintPipelineErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1B5F8A124(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for BlueprintPipelineError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1B5F8A124(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1B5F8A14C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for BlueprintPipelineError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1B5F8A14C(v4, v5, v6);
  return a1;
}

uint64_t type metadata accessor for UserActivityManager.DeserializationError()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B5F8A268()
{
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_5_1();
  v0();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B5F8A2FC(uint64_t a1)
{
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80);
  return sub_1B5F892BC(a1, v1 + v2, *(void *)(v1+ ((*(void *)(*(void *)(*(void *)(v1 + 16) - 8) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_1B5F8A378(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1B5DFF760(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1B5F8A3E4()
{
  return sub_1B5F8A418();
}

uint64_t sub_1B5F8A400()
{
  return sub_1B5F8A418();
}

uint64_t sub_1B5F8A418()
{
  OUTLINED_FUNCTION_2_3();
  return v0();
}

uint64_t sub_1B5F8A44C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1B5F8A4B4(0, a2, a3, MEMORY[0x1E4FBB718]);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_5_1();
  v4();
  return a1;
}

void sub_1B5F8A4B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1B5F8A518()
{
  unint64_t result = qword_1EB649C60;
  if (!qword_1EB649C60)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB649C60);
  }
  return result;
}

uint64_t sub_1B5F8A570()
{
  OUTLINED_FUNCTION_0_13();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  uint64_t v1 = OUTLINED_FUNCTION_2_1();
  v2(v1);
  OUTLINED_FUNCTION_84();
  return swift_deallocObject();
}

uint64_t sub_1B5F8A600(uint64_t a1)
{
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  OUTLINED_FUNCTION_2_3();
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)(v1 + 7);
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v6 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v11 = swift_task_alloc();
  uint64_t v12 = (void *)OUTLINED_FUNCTION_11_3(v11);
  *uint64_t v12 = v13;
  v12[1] = sub_1B5EE45CC;
  return sub_1B5F87794(a1, v7, v8, v9, v10, v3, v4, v5);
}

uint64_t sub_1B5F8A6EC()
{
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_5_1();
  v0();
  return swift_deallocObject();
}

void sub_1B5F8A76C()
{
  OUTLINED_FUNCTION_2_3();
  sub_1B5F873A0(v2, v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)), v3);
}

void sub_1B5F8A798()
{
  if (!qword_1EB642650)
  {
    sub_1B5F8A378(255, &qword_1EB647BA0, &qword_1EB64CA70, 0x1E4F22488, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1B61B0CD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB642650);
    }
  }
}

uint64_t PillViewImageRequestFactory.createImageRequest(assetHandles:screenScale:size:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, uint64_t a4@<D1>, uint64_t a5@<D2>)
{
  sub_1B5F8A90C(a1, (uint64_t)&v11, a3);
  if (v12)
  {
    sub_1B5E30E70(&v11, (uint64_t)v13);
    sub_1B5E176E4((uint64_t)v13, (uint64_t)&v11);
    uint64_t v8 = type metadata accessor for ProcessedImageRequest();
    swift_allocObject();
    uint64_t v9 = ProcessedImageRequest.init(assetHandle:size:imageRenderingMode:userInterfaceStyle:)(&v11, a4, a5, 0, 2);
    *(void *)(a2 + 24) = v8;
    *(void *)(a2 + 32) = &protocol witness table for ProcessedImageRequest;
    *(void *)a2 = v9;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    uint64_t result = sub_1B5F8A940((uint64_t)&v11);
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1B5F8A90C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  if (a3 < 0.0 || a3 > 1.0)
  {
    if (a3 < 1.0 || a3 > 2.0) {
      a1 += 80;
    }
    else {
      a1 += 40;
    }
  }
  return sub_1B5E176E4(a1, a2);
}

uint64_t sub_1B5F8A940(uint64_t a1)
{
  sub_1B5F8A99C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B5F8A99C()
{
  if (!qword_1E9DAAC28)
  {
    sub_1B5EDC104();
    unint64_t v0 = sub_1B61B2F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAAC28);
    }
  }
}

double PillViewImageRequestFactory.createImageRequest(iconURL:size:)@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t PillViewImageRequestFactory.deinit()
{
  return v0;
}

uint64_t PillViewImageRequestFactory.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1B5F8AA1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, uint64_t a4@<D1>, uint64_t a5@<D2>)
{
  return PillViewImageRequestFactory.createImageRequest(assetHandles:screenScale:size:)(a1, a2, a3, a4, a5);
}

double sub_1B5F8AA34@<D0>(uint64_t a1@<X8>)
{
  return PillViewImageRequestFactory.createImageRequest(iconURL:size:)(a1);
}

uint64_t dispatch thunk of PillViewImageRequestFactoryType.createImageRequest(assetHandles:screenScale:size:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of PillViewImageRequestFactoryType.createImageRequest(iconURL:size:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for PillViewImageRequestFactory()
{
  return self;
}

uint64_t method lookup function for PillViewImageRequestFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PillViewImageRequestFactory);
}

uint64_t Debounce.__allocating_init(delay:block:)(uint64_t a1, uint64_t a2, double a3)
{
  OUTLINED_FUNCTION_15();
  uint64_t result = swift_allocObject();
  *(void *)(result + 32) = a2;
  *(void *)(result + 40) = 0;
  *(double *)(result + 16) = a3;
  *(void *)(result + 24) = a1;
  return result;
}

void Debounce.run(finished:)(uint64_t a1, uint64_t a2)
{
  double v5 = *v2;
  uint64_t v6 = (void *)*((void *)v2 + 5);
  if (v6) {
    objc_msgSend(v6, sel_invalidate);
  }
  uint64_t v7 = self;
  double v8 = v2[2];
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = *(void *)(*(void *)&v5 + 80);
  v10[3] = v9;
  v10[4] = a1;
  v10[5] = a2;
  v14[4] = sub_1B5F8AEC0;
  v14[5] = v10;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  v14[2] = sub_1B5EE7210;
  v14[3] = &block_descriptor_39;
  long long v11 = _Block_copy(v14);
  swift_retain();
  swift_release();
  id v12 = objc_msgSend(v7, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v11, v8);
  _Block_release(v11);
  uint64_t v13 = (void *)*((void *)v2 + 5);
  *((void *)v2 + 5) = v12;
}

uint64_t sub_1B5F8AC88()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t Debounce.deinit()
{
  uint64_t v1 = *(void **)(v0 + 40);
  if (v1) {
    objc_msgSend(v1, sel_invalidate);
  }
  swift_release();

  return v0;
}

uint64_t Debounce.__deallocating_deinit()
{
  Debounce.deinit();
  OUTLINED_FUNCTION_15();
  return swift_deallocClassInstance();
}

uint64_t sub_1B5F8AD28(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_1B61B2F80();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v17 - v9;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v12 = *(void (**)(uint64_t))(Strong + 24);
    swift_retain();
    uint64_t v13 = swift_release();
    v12(v13);
    swift_release();
    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v14 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v10, v14, 1, a5);
  uint64_t v15 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return a3(v15);
}

uint64_t sub_1B5F8AE88()
{
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_15();
  return swift_deallocObject();
}

uint64_t sub_1B5F8AEC0(uint64_t a1)
{
  return sub_1B5F8AD28(a1, *(void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16));
}

Swift::Void __swiftcall Debounce.invalidate()()
{
  uint64_t v1 = *(void **)(v0 + 40);
  if (v1) {
    objc_msgSend(v1, sel_invalidate);
  }
}

void sub_1B5F8AEE4(uint64_t a1, uint64_t a2)
{
}

void sub_1B5F8AF08()
{
}

uint64_t method lookup function for Debounce(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Debounce);
}

uint64_t dispatch thunk of Debounce.__allocating_init(delay:block:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t BlueprintCompositionalLayoutOptions.sectionHeaderLayoutOptions.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  *a1 = *(void *)v1;
  a1[1] = v3;
  return OUTLINED_FUNCTION_0_71(v2, v3, *(unsigned char *)(v1 + 16), (uint64_t)a1);
}

uint64_t BlueprintCompositionalLayoutOptions.supplementaryHeaderLayoutOptions.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  *a1 = v2;
  a1[1] = v3;
  return OUTLINED_FUNCTION_0_71(v2, v3, *(unsigned char *)(v1 + 40), (uint64_t)a1);
}

uint64_t BlueprintCompositionalLayoutOptions.supplementaryFooterLayoutOptions.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 56);
  *a1 = v2;
  a1[1] = v3;
  return OUTLINED_FUNCTION_0_71(v2, v3, *(unsigned char *)(v1 + 64), (uint64_t)a1);
}

double BlueprintCompositionalLayoutOptions.sectionContentInsets.getter()
{
  return *(double *)(v0 + 72);
}

double BlueprintCompositionalLayoutOptions.interGroupSpacing.getter()
{
  return *(double *)(v0 + 104);
}

uint64_t BlueprintCompositionalLayoutOptions.interSectionSpacing.getter()
{
  return *(void *)(v0 + 112);
}

uint64_t BlueprintCompositionalLayoutOptions.supplementariesFollowContentInsets.getter()
{
  return *(unsigned __int8 *)(v0 + 121);
}

void BlueprintCompositionalLayoutOptions.init(sectionContentInsets:interGroupSpacing:supplementaryHeaderLayoutOptions:supplementaryFooterLayoutOptions:interSectionSpacing:supplementariesFollowContentInsets:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>, double a11@<D4>)
{
  char v11 = *(unsigned char *)(a1 + 16);
  char v12 = *(unsigned char *)(a2 + 16);
  *(void *)a6 = 0;
  *(void *)(a6 + 8) = 0;
  *(unsigned char *)(a6 + 16) = 2;
  *(_OWORD *)(a6 + 24) = *(_OWORD *)a1;
  *(unsigned char *)(a6 + 40) = v11;
  *(_OWORD *)(a6 + 48) = *(_OWORD *)a2;
  *(unsigned char *)(a6 + 64) = v12;
  *(double *)(a6 + 72) = a7;
  *(double *)(a6 + 80) = a8;
  *(double *)(a6 + 88) = a9;
  *(double *)(a6 + 96) = a10;
  *(double *)(a6 + 104) = a11;
  *(void *)(a6 + 112) = a3;
  *(unsigned char *)(a6 + 120) = a4 & 1;
  *(unsigned char *)(a6 + 121) = a5;
  OUTLINED_FUNCTION_2_66();
}

uint64_t BlueprintCompositionalLayoutOptions.init(sectionContentInsets:interGroupSpacing:interSectionSpacing:supplementariesFollowContentInsets:sectionHeaderLayoutOptions:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>, double a10@<D4>)
{
  uint64_t result = *(void *)a4;
  uint64_t v20 = *(void *)(a4 + 8);
  int v21 = *(unsigned __int8 *)(a4 + 16);
  if (*(unsigned char *)(a4 + 16))
  {
    if (v21 == 1) {
      uint64_t v22 = *(void *)a4;
    }
    else {
      uint64_t v22 = 0;
    }
    if (v21 == 1) {
      uint64_t v23 = *(void *)(a4 + 8);
    }
    else {
      uint64_t v23 = 0;
    }
  }
  else
  {
    uint64_t result = sub_1B61B1F70();
    uint64_t v23 = 0;
    uint64_t v22 = result;
  }
  *(void *)a5 = result;
  *(void *)(a5 + 8) = v20;
  *(unsigned char *)(a5 + 16) = v21;
  *(void *)(a5 + 24) = v22;
  *(void *)(a5 + 32) = v23;
  *(unsigned char *)(a5 + 40) = v21;
  *(void *)(a5 + 48) = 0;
  *(void *)(a5 + 56) = 0;
  *(unsigned char *)(a5 + 64) = 2;
  *(double *)(a5 + 72) = a6;
  *(double *)(a5 + 80) = a7;
  *(double *)(a5 + 88) = a8;
  *(double *)(a5 + 96) = a9;
  *(double *)(a5 + 104) = a10;
  *(void *)(a5 + 112) = a1;
  *(unsigned char *)(a5 + 120) = a2 & 1;
  *(unsigned char *)(a5 + 121) = a3 & 1;
  return result;
}

void sub_1B5F8B0DC()
{
  long long v0 = *(_OWORD *)(MEMORY[0x1E4FB12A8] + 16);
  unk_1EB6495C0 = *MEMORY[0x1E4FB12A8];
  qword_1EB649578 = 0;
  unk_1EB649580 = 0;
  byte_1EB649588 = 2;
  qword_1EB649590 = 0;
  unk_1EB649598 = 0;
  byte_1EB6495A0 = 2;
  qword_1EB6495A8 = 0;
  unk_1EB6495B0 = 0;
  byte_1EB6495B8 = 2;
  unk_1EB6495D0 = v0;
  qword_1EB6495E0 = 0;
  unk_1EB6495E8 = 0;
  word_1EB6495F0 = 1;
  OUTLINED_FUNCTION_2_66();
}

uint64_t static BlueprintCompositionalLayoutOptions.zero.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EB6495F8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_1_75(v3);
  OUTLINED_FUNCTION_1_75(a1);
  return sub_1B5F8B1A0((uint64_t)v3);
}

uint64_t sub_1B5F8B1A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  char v6 = *(unsigned char *)(a1 + 40);
  char v7 = *(unsigned char *)(a1 + 64);
  sub_1B5E62DEC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  sub_1B5E62DEC(v2, v3, v6);
  sub_1B5E62DEC(v4, v5, v7);
  return a1;
}

void sub_1B5F8B21C()
{
  qword_1EB641798 = 0;
  unk_1EB6417A0 = 0;
  byte_1EB6417A8 = 2;
  qword_1EB6417B0 = 0;
  unk_1EB6417B8 = 0;
  byte_1EB6417C0 = 2;
  qword_1EB6417C8 = 0;
  unk_1EB6417D0 = 0;
  byte_1EB6417D8 = 2;
  *(_OWORD *)&algn_1EB6417D9[7] = xmmword_1B61C9710;
  *(_OWORD *)&algn_1EB6417D9[23] = xmmword_1B61C9710;
  qword_1EB641800 = 0;
  unk_1EB641808 = 0;
  word_1EB641810 = 1;
  OUTLINED_FUNCTION_2_66();
}

uint64_t static BlueprintCompositionalLayoutOptions.regular.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EB641820 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_1_75(v3);
  OUTLINED_FUNCTION_1_75(a1);
  return sub_1B5F8B1A0((uint64_t)v3);
}

void sub_1B5F8B2DC()
{
  qword_1EB63FF58 = 0;
  unk_1EB63FF60 = 0;
  byte_1EB63FF68 = 2;
  qword_1EB63FF70 = 0;
  unk_1EB63FF78 = 0;
  byte_1EB63FF80 = 2;
  qword_1EB63FF88 = 0;
  unk_1EB63FF90 = 0;
  byte_1EB63FF98 = 2;
  unk_1EB63FFA0 = 0u;
  unk_1EB63FFB0 = 0u;
  unk_1EB63FFC0 = 0u;
  word_1EB63FFD0 = 1;
  OUTLINED_FUNCTION_2_66();
}

uint64_t static BlueprintCompositionalLayoutOptions.compact.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EB63FFD8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_1_75(v3);
  OUTLINED_FUNCTION_1_75(a1);
  return sub_1B5F8B1A0((uint64_t)v3);
}

uint64_t initializeBufferWithCopyOfBuffer for BlueprintCompositionalLayoutSectionSupplementaryViewOptions(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B5F8B430(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1B5F8B8FC);
}

uint64_t *assignWithCopy for BlueprintCompositionalLayoutSectionSupplementaryViewOptions(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B5F8B4AC(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1B5F8B8FC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B5F8B900);
}

uint64_t *assignWithTake for BlueprintCompositionalLayoutSectionSupplementaryViewOptions(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B5F8B530(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B5F8B900);
}

void type metadata accessor for BlueprintCompositionalLayoutSectionSupplementaryViewOptions()
{
}

uint64_t initializeBufferWithCopyOfBuffer for BlueprintCompositionalLayoutSectionHeaderOptions(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B5F8B430(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1B5E62DEC);
}

uint64_t destroy for BlueprintCompositionalLayoutSectionHeaderOptions(uint64_t a1)
{
  return sub_1B5E5F620(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1B5F8B430(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  return a1;
}

uint64_t *assignWithCopy for BlueprintCompositionalLayoutSectionHeaderOptions(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B5F8B4AC(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1B5E62DEC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B5E5F620);
}

uint64_t *sub_1B5F8B4AC(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  uint64_t v12 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for BlueprintCompositionalLayoutSectionHeaderOptions(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B5F8B530(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B5E5F620);
}

uint64_t *sub_1B5F8B530(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v8 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

void type metadata accessor for BlueprintCompositionalLayoutSectionHeaderOptions()
{
}

uint64_t destroy for BlueprintCompositionalLayoutOptions(uint64_t a1)
{
  sub_1B5E5F620(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  sub_1B5E5F620(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  char v4 = *(unsigned char *)(a1 + 64);
  return sub_1B5E5F620(v2, v3, v4);
}

uint64_t initializeWithCopy for BlueprintCompositionalLayoutOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1B5E62DEC(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  char v9 = *(unsigned char *)(a2 + 40);
  sub_1B5E62DEC(v7, v8, v9);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  char v12 = *(unsigned char *)(a2 + 64);
  sub_1B5E62DEC(v10, v11, v12);
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v13 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v13;
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  return a1;
}

uint64_t assignWithCopy for BlueprintCompositionalLayoutOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1B5E62DEC(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  char v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_1B5E5F620(v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(a2 + 32);
  char v12 = *(unsigned char *)(a2 + 40);
  sub_1B5E62DEC(v10, v11, v12);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v11;
  char v15 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v12;
  sub_1B5E5F620(v13, v14, v15);
  uint64_t v16 = *(void *)(a2 + 48);
  uint64_t v17 = *(void *)(a2 + 56);
  char v18 = *(unsigned char *)(a2 + 64);
  sub_1B5E62DEC(v16, v17, v18);
  uint64_t v19 = *(void *)(a1 + 48);
  uint64_t v20 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v16;
  *(void *)(a1 + 56) = v17;
  char v21 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = v18;
  sub_1B5E5F620(v19, v20, v21);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v22 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v22;
  *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
  return a1;
}

uint64_t assignWithTake for BlueprintCompositionalLayoutOptions(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_1B5E5F620(v5, v6, v7);
  char v8 = *(unsigned char *)(a2 + 40);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  char v11 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_1B5E5F620(v9, v10, v11);
  char v12 = *(unsigned char *)(a2 + 64);
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  char v15 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = v12;
  sub_1B5E5F620(v13, v14, v15);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
  return a1;
}

uint64_t getEnumTagSinglePayload for BlueprintCompositionalLayoutOptions(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 122))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 121);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BlueprintCompositionalLayoutOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 120) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 122) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 122) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 121) = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for BlueprintCompositionalLayoutOptions()
{
}

uint64_t dispatch thunk of Prewarmable.prewarm()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Prewarmable.cancelPrewarm()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1B5F8B938@<X0>(char *a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  char v5 = *a1;
  OUTLINED_FUNCTION_4_53();
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_1_16();
  OUTLINED_FUNCTION_49_0();
  v6();
  OUTLINED_FUNCTION_4_53();
  uint64_t active = type metadata accessor for BlueprintActiveImpressionSection();
  OUTLINED_FUNCTION_4_53();
  type metadata accessor for BlueprintSection();
  OUTLINED_FUNCTION_1_16();
  OUTLINED_FUNCTION_49_0();
  v8();
  sub_1B61AFA70();
  OUTLINED_FUNCTION_1_16();
  OUTLINED_FUNCTION_49_0();
  uint64_t result = v9();
  *(unsigned char *)(a4 + *(int *)(active + 60)) = v5;
  char v11 = (void *)(a4 + *(int *)(active + 64));
  *char v11 = a2;
  v11[1] = a3;
  return result;
}

uint64_t sub_1B5F8BA68@<X0>(char *a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  char v14 = *a1;
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_1_16();
  OUTLINED_FUNCTION_49_0();
  v15();
  uint64_t active = (int *)type metadata accessor for BlueprintActiveImpression();
  type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_1_16();
  OUTLINED_FUNCTION_49_0();
  v17();
  sub_1B61AFA70();
  OUTLINED_FUNCTION_1_16();
  OUTLINED_FUNCTION_49_0();
  uint64_t result = v18();
  *(unsigned char *)(a4 + active[15]) = v14;
  uint64_t v20 = (void *)(a4 + active[16]);
  *uint64_t v20 = a2;
  v20[1] = a3;
  char v21 = (double *)(a4 + active[17]);
  *char v21 = a5;
  v21[1] = a6;
  v21[2] = a7;
  v21[3] = a8;
  return result;
}

uint64_t BlueprintActiveImpression.item.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 52);
  uint64_t v5 = type metadata accessor for BlueprintItem();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t BlueprintActiveImpression.startTrigger.getter@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(v2 + *(int *)(result + 60));
  return result;
}

double BlueprintActiveImpression.frame.getter(uint64_t a1)
{
  return *(double *)(v1 + *(int *)(a1 + 68));
}

uint64_t _s5TeaUI25BlueprintActiveImpressionV9blueprintAA0C0Vyxq_Gvg_0()
{
  OUTLINED_FUNCTION_7_7();
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_1_16();
  uint64_t v0 = OUTLINED_FUNCTION_3_48();
  return v1(v0);
}

uint64_t BlueprintActiveImpressionSection.section.getter()
{
  OUTLINED_FUNCTION_7_7();
  type metadata accessor for BlueprintSection();
  OUTLINED_FUNCTION_1_16();
  uint64_t v0 = OUTLINED_FUNCTION_3_48();
  return v1(v0);
}

uint64_t _s5TeaUI25BlueprintActiveImpressionV9startDate10Foundation0G0Vvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 56);
  uint64_t v5 = sub_1B61AFA70();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t _s5TeaUI25BlueprintActiveImpressionV17sessionIdentifierSSvg_0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 64));
  sub_1B61B1F70();
  return v2;
}

uint64_t sub_1B5F8BDD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 56);
}

uint64_t sub_1B5F8BDE0()
{
  uint64_t result = type metadata accessor for Blueprint();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1B61AFA70();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1B5F8BF28(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    char v8 = a2 + 2;
    uint64_t v9 = a2[5];
    sub_1B61B1F70();
    if (v9)
    {
      *(void *)(a1 + 40) = v9;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(a1 + 16, (uint64_t)(a2 + 2), v9);
    }
    else
    {
      long long v11 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 16) = *v8;
      *(_OWORD *)(a1 + 32) = v11;
    }
    uint64_t v12 = *(void *)(a3 + 24);
    uint64_t v13 = (int *)type metadata accessor for Blueprint();
    uint64_t v14 = v13[14];
    uint64_t v37 = a1 + v14;
    uint64_t v35 = (uint64_t)a2 + v14;
    type metadata accessor for BlueprintSection();
    swift_getWitnessTable();
    swift_getWitnessTable();
    uint64_t v15 = sub_1B61B0670();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v37, v35, v15);
    uint64_t v16 = v13[15];
    uint64_t v36 = (uint64_t)a2 + v16;
    uint64_t v38 = a1 + v16;
    type metadata accessor for BlueprintItem();
    swift_getWitnessTable();
    swift_getWitnessTable();
    swift_getWitnessTable();
    uint64_t v17 = sub_1B61B0A30();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v38, v36, v17);
    *(void *)(a1 + v13[16]) = *(uint64_t *)((char *)a2 + v13[16]);
    uint64_t v18 = *(int *)(a3 + 52);
    uint64_t v19 = a1 + v18;
    uint64_t v20 = (uint64_t)a2 + v18;
    char v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    v21(v19, v20, v12);
    uint64_t v22 = *(int *)(a3 + 56);
    uint64_t v23 = a1 + v22;
    uint64_t v24 = (uint64_t)a2 + v22;
    uint64_t v25 = sub_1B61AFA70();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    uint64_t v26 = *(int *)(a3 + 64);
    *(unsigned char *)(a1 + *(int *)(a3 + 60)) = *((unsigned char *)a2 + *(int *)(a3 + 60));
    uint64_t v27 = (void *)(a1 + v26);
    uint64_t v28 = (uint64_t *)((char *)a2 + v26);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    uint64_t v30 = *(int *)(a3 + 68);
    BOOL v31 = (_OWORD *)(a1 + v30);
    uint64_t v32 = (_OWORD *)((char *)a2 + v30);
    long long v33 = v32[1];
    *BOOL v31 = *v32;
    v31[1] = v33;
    sub_1B61B1F70();
  }
  return a1;
}

uint64_t sub_1B5F8C298(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = type metadata accessor for Blueprint();
  uint64_t v6 = a1 + *(int *)(v5 + 56);
  type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v7 = sub_1B61B0670();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v12 = a1 + *(int *)(v5 + 60);
  type metadata accessor for BlueprintItem();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v8 = sub_1B61B0A30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v12, v8);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1 + *(int *)(a2 + 52), v4);
  uint64_t v9 = a1 + *(int *)(a2 + 56);
  uint64_t v10 = sub_1B61AFA70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B5F8C518(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a2 + 2;
  uint64_t v8 = a2[5];
  sub_1B61B1F70();
  if (v8)
  {
    *(void *)(a1 + 40) = v8;
    (**(void (***)(uint64_t, _OWORD *, uint64_t))(v8 - 8))(a1 + 16, v7, v8);
  }
  else
  {
    long long v9 = v7[1];
    *(_OWORD *)(a1 + 16) = *v7;
    *(_OWORD *)(a1 + 32) = v9;
  }
  uint64_t v10 = *(void *)(a3 + 24);
  long long v11 = (int *)type metadata accessor for Blueprint();
  uint64_t v12 = v11[14];
  uint64_t v35 = a1 + v12;
  long long v33 = (char *)a2 + v12;
  type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v13 = sub_1B61B0670();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v35, v33, v13);
  uint64_t v14 = v11[15];
  id v34 = (char *)a2 + v14;
  uint64_t v36 = a1 + v14;
  type metadata accessor for BlueprintItem();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v15 = sub_1B61B0A30();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v36, v34, v15);
  *(void *)(a1 + v11[16]) = *(void *)((char *)a2 + v11[16]);
  uint64_t v16 = *(int *)(a3 + 52);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  v19(v17, v18, v10);
  uint64_t v20 = *(int *)(a3 + 56);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_1B61AFA70();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  uint64_t v24 = *(int *)(a3 + 64);
  *(unsigned char *)(a1 + *(int *)(a3 + 60)) = *((unsigned char *)a2 + *(int *)(a3 + 60));
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = *(int *)(a3 + 68);
  uint64_t v29 = (_OWORD *)(a1 + v28);
  uint64_t v30 = (_OWORD *)((char *)a2 + v28);
  long long v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  sub_1B61B1F70();
  return a1;
}

uint64_t sub_1B5F8C838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
    if (v6)
    {
      *(void *)(a1 + 40) = v6;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 16, a2 + 16);
      goto LABEL_8;
    }
LABEL_7:
    long long v7 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v7;
    goto LABEL_8;
  }
  if (!v6)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
LABEL_8:
  uint64_t v8 = *(void *)(a3 + 24);
  long long v9 = (int *)type metadata accessor for Blueprint();
  uint64_t v10 = v9[14];
  uint64_t v27 = a1 + v10;
  uint64_t v25 = a2 + v10;
  type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v11 = sub_1B61B0670();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v27, v25, v11);
  uint64_t v12 = v9[15];
  uint64_t v26 = a2 + v12;
  uint64_t v28 = a1 + v12;
  type metadata accessor for BlueprintItem();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v13 = sub_1B61B0A30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v28, v26, v13);
  *(void *)(a1 + v9[16]) = *(void *)(a2 + v9[16]);
  swift_retain();
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 24))(a1 + *(int *)(a3 + 52), a2 + *(int *)(a3 + 52), v8);
  uint64_t v14 = *(int *)(a3 + 56);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_1B61AFA70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  *(unsigned char *)(a1 + *(int *)(a3 + 60)) = *(unsigned char *)(a2 + *(int *)(a3 + 60));
  uint64_t v18 = *(int *)(a3 + 64);
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  uint64_t v21 = *(int *)(a3 + 68);
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  v22[2] = v23[2];
  void v22[3] = v23[3];
  return a1;
}

char *sub_1B5F8CBC0(char *a1, char *a2, uint64_t a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = (int *)type metadata accessor for Blueprint();
  uint64_t v9 = v8[14];
  uint64_t v25 = &a1[v9];
  uint64_t v23 = &a2[v9];
  type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v10 = sub_1B61B0670();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v25, v23, v10);
  uint64_t v11 = v8[15];
  uint64_t v24 = &a2[v11];
  uint64_t v26 = &a1[v11];
  type metadata accessor for BlueprintItem();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v12 = sub_1B61B0A30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v26, v24, v12);
  *(void *)&a1[v8[16]] = *(void *)&a2[v8[16]];
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(&a1[*(int *)(a3 + 52)], &a2[*(int *)(a3 + 52)], v7);
  uint64_t v13 = *(int *)(a3 + 56);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_1B61AFA70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t v17 = *(int *)(a3 + 64);
  a1[*(int *)(a3 + 60)] = a2[*(int *)(a3 + 60)];
  *(_OWORD *)&a1[v17] = *(_OWORD *)&a2[v17];
  uint64_t v18 = *(int *)(a3 + 68);
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  long long v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  return a1;
}

uint64_t sub_1B5F8CE78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = (int *)type metadata accessor for Blueprint();
  uint64_t v10 = v9[14];
  uint64_t v30 = a1 + v10;
  uint64_t v28 = a2 + v10;
  type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v11 = sub_1B61B0670();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v30, v28, v11);
  uint64_t v12 = v9[15];
  uint64_t v29 = a2 + v12;
  uint64_t v31 = a1 + v12;
  type metadata accessor for BlueprintItem();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v13 = sub_1B61B0A30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v31, v29, v13);
  *(void *)(a1 + v9[16]) = *(void *)(a2 + v9[16]);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 40))(a1 + *(int *)(a3 + 52), a2 + *(int *)(a3 + 52), v8);
  uint64_t v14 = *(int *)(a3 + 56);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_1B61AFA70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  uint64_t v18 = *(int *)(a3 + 64);
  *(unsigned char *)(a1 + *(int *)(a3 + 60)) = *(unsigned char *)(a2 + *(int *)(a3 + 60));
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(int *)(a3 + 68);
  uint64_t v24 = (_OWORD *)(a1 + v23);
  uint64_t v25 = (_OWORD *)(a2 + v23);
  long long v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  return a1;
}

uint64_t sub_1B5F8D164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B5F8D178);
}

uint64_t sub_1B5F8D178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_2_4();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    type metadata accessor for BlueprintItem();
    OUTLINED_FUNCTION_2_4();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = *(int *)(a3 + 52);
    }
    else
    {
      sub_1B61AFA70();
      OUTLINED_FUNCTION_2_4();
      if (*(_DWORD *)(v14 + 84) != a2) {
        return OUTLINED_FUNCTION_2_67();
      }
      uint64_t v8 = v13;
      uint64_t v12 = *(int *)(a3 + 56);
    }
    uint64_t v9 = a1 + v12;
  }
  return __swift_getEnumTagSinglePayload(v9, a2, v8);
}

uint64_t sub_1B5F8D258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B5F8D26C);
}

void sub_1B5F8D26C()
{
  OUTLINED_FUNCTION_5_39();
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_2_4();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1;
  }
  else
  {
    type metadata accessor for BlueprintItem();
    OUTLINED_FUNCTION_2_4();
    if (*(_DWORD *)(v9 + 84) == v3)
    {
      uint64_t v6 = v8;
      uint64_t v10 = *(int *)(v2 + 52);
    }
    else
    {
      sub_1B61AFA70();
      OUTLINED_FUNCTION_2_4();
      if (*(_DWORD *)(v12 + 84) != v3)
      {
        OUTLINED_FUNCTION_10_32();
        return;
      }
      uint64_t v6 = v11;
      uint64_t v10 = *(int *)(v2 + 56);
    }
    uint64_t v7 = v1 + v10;
  }
  __swift_storeEnumTagSinglePayload(v7, v0, v0, v6);
}

uint64_t type metadata accessor for BlueprintActiveImpression()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1B5F8D368()
{
  uint64_t result = type metadata accessor for Blueprint();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for BlueprintSection();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1B61AFA70();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1B5F8D4B0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2 + 2;
    uint64_t v9 = a2[5];
    sub_1B61B1F70();
    if (v9)
    {
      *(void *)(a1 + 40) = v9;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(a1 + 16, (uint64_t)(a2 + 2), v9);
    }
    else
    {
      long long v11 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 16) = *v8;
      *(_OWORD *)(a1 + 32) = v11;
    }
    uint64_t v40 = *(void *)(a3 + 16);
    uint64_t v12 = type metadata accessor for Blueprint();
    uint64_t v13 = *(int *)(v12 + 56);
    uint64_t v14 = v12;
    uint64_t v36 = (uint64_t)a2 + v13;
    uint64_t v38 = a1 + v13;
    uint64_t v15 = type metadata accessor for BlueprintSection();
    swift_getWitnessTable();
    swift_getWitnessTable();
    uint64_t v16 = sub_1B61B0670();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v38, v36, v16);
    uint64_t v17 = *(int *)(v14 + 60);
    uint64_t v37 = (uint64_t)a2 + v17;
    uint64_t v39 = a1 + v17;
    type metadata accessor for BlueprintItem();
    swift_getWitnessTable();
    swift_getWitnessTable();
    swift_getWitnessTable();
    uint64_t v18 = sub_1B61B0A30();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v39, v37, v18);
    *(void *)(a1 + *(int *)(v14 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v14 + 64));
    uint64_t v19 = *(int *)(a3 + 52);
    uint64_t v20 = a1 + v19;
    uint64_t v21 = (uint64_t)a2 + v19;
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16);
    swift_retain();
    v22(v20, v21, v40);
    uint64_t v23 = *(int *)(v15 + 52);
    uint64_t v24 = v20 + v23;
    uint64_t v25 = v21 + v23;
    uint64_t v26 = sub_1B61B0670();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    uint64_t v27 = *(int *)(a3 + 56);
    uint64_t v28 = a1 + v27;
    uint64_t v29 = (uint64_t)a2 + v27;
    uint64_t v30 = sub_1B61AFA70();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    uint64_t v31 = *(int *)(a3 + 64);
    *(unsigned char *)(a1 + *(int *)(a3 + 60)) = *((unsigned char *)a2 + *(int *)(a3 + 60));
    uint64_t v32 = (void *)(a1 + v31);
    long long v33 = (uint64_t *)((char *)a2 + v31);
    uint64_t v34 = v33[1];
    *uint64_t v32 = *v33;
    v32[1] = v34;
    sub_1B61B1F70();
  }
  return a1;
}

uint64_t sub_1B5F8D86C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v16 = type metadata accessor for Blueprint();
  uint64_t v5 = a1 + *(int *)(v16 + 56);
  uint64_t v6 = type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v7 = sub_1B61B0670();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
  uint64_t v15 = a1 + *(int *)(v16 + 60);
  type metadata accessor for BlueprintItem();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v8 = sub_1B61B0A30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v15, v8);
  swift_release();
  uint64_t v9 = a1 + *(int *)(a2 + 52);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v9, v4);
  uint64_t v10 = v9 + *(int *)(v6 + 52);
  uint64_t v11 = sub_1B61B0670();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = a1 + *(int *)(a2 + 56);
  uint64_t v13 = sub_1B61AFA70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B5F8DB48(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a2 + 2;
  uint64_t v8 = a2[5];
  sub_1B61B1F70();
  if (v8)
  {
    *(void *)(a1 + 40) = v8;
    (**(void (***)(uint64_t, _OWORD *, uint64_t))(v8 - 8))(a1 + 16, v7, v8);
  }
  else
  {
    long long v9 = v7[1];
    *(_OWORD *)(a1 + 16) = *v7;
    *(_OWORD *)(a1 + 32) = v9;
  }
  uint64_t v39 = *(void *)(a3 + 16);
  uint64_t v10 = type metadata accessor for Blueprint();
  uint64_t v11 = *(int *)(v10 + 56);
  uint64_t v12 = v10;
  uint64_t v36 = a1 + v11;
  uint64_t v38 = v10;
  uint64_t v34 = (char *)a2 + v11;
  uint64_t v13 = type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v14 = sub_1B61B0670();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v36, v34, v14);
  uint64_t v15 = *(int *)(v12 + 60);
  uint64_t v35 = (char *)a2 + v15;
  uint64_t v37 = a1 + v15;
  type metadata accessor for BlueprintItem();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v16 = sub_1B61B0A30();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v37, v35, v16);
  *(void *)(a1 + *(int *)(v38 + 64)) = *(void *)((char *)a2 + *(int *)(v38 + 64));
  uint64_t v17 = *(int *)(a3 + 52);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v39 - 8) + 16);
  swift_retain();
  v20(v18, v19, v39);
  uint64_t v21 = *(int *)(v13 + 52);
  uint64_t v22 = v18 + v21;
  uint64_t v23 = &v19[v21];
  uint64_t v24 = sub_1B61B0670();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  uint64_t v25 = *(int *)(a3 + 56);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = sub_1B61AFA70();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  uint64_t v29 = *(int *)(a3 + 64);
  *(unsigned char *)(a1 + *(int *)(a3 + 60)) = *((unsigned char *)a2 + *(int *)(a3 + 60));
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)((char *)a2 + v29);
  uint64_t v32 = v31[1];
  *uint64_t v30 = *v31;
  v30[1] = v32;
  sub_1B61B1F70();
  return a1;
}

uint64_t sub_1B5F8DEC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
    if (v6)
    {
      *(void *)(a1 + 40) = v6;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 16, a2 + 16);
      goto LABEL_8;
    }
LABEL_7:
    long long v7 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v7;
    goto LABEL_8;
  }
  if (!v6)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
LABEL_8:
  uint64_t v35 = *(void *)(a3 + 16);
  uint64_t v8 = type metadata accessor for Blueprint();
  uint64_t v9 = *(int *)(v8 + 56);
  uint64_t v10 = v8;
  uint64_t v11 = a1 + v9;
  uint64_t v32 = a2 + v9;
  uint64_t v34 = v8;
  uint64_t v12 = type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v13 = sub_1B61B0670();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v32, v13);
  uint64_t v14 = *(int *)(v10 + 60);
  uint64_t v31 = a2 + v14;
  uint64_t v33 = a1 + v14;
  type metadata accessor for BlueprintItem();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v15 = sub_1B61B0A30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v33, v31, v15);
  *(void *)(a1 + *(int *)(v34 + 64)) = *(void *)(a2 + *(int *)(v34 + 64));
  swift_retain();
  swift_release();
  uint64_t v16 = *(int *)(a3 + 52);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 24))(a1 + v16, a2 + v16);
  uint64_t v19 = *(int *)(v12 + 52);
  uint64_t v20 = v17 + v19;
  uint64_t v21 = v18 + v19;
  uint64_t v22 = sub_1B61B0670();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = *(int *)(a3 + 56);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_1B61AFA70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  *(unsigned char *)(a1 + *(int *)(a3 + 60)) = *(unsigned char *)(a2 + *(int *)(a3 + 60));
  uint64_t v27 = *(int *)(a3 + 64);
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  *uint64_t v28 = *v29;
  v28[1] = v29[1];
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1B5F8E288(char *a1, char *a2, uint64_t a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  uint64_t v32 = *(void *)(a3 + 16);
  uint64_t v7 = type metadata accessor for Blueprint();
  uint64_t v8 = *(int *)(v7 + 56);
  uint64_t v9 = v7;
  uint64_t v29 = &a1[v8];
  uint64_t v31 = v7;
  uint64_t v27 = &a2[v8];
  uint64_t v10 = type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v11 = sub_1B61B0670();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v29, v27, v11);
  uint64_t v12 = *(int *)(v9 + 60);
  uint64_t v28 = &a2[v12];
  uint64_t v30 = &a1[v12];
  type metadata accessor for BlueprintItem();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v13 = sub_1B61B0A30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v30, v28, v13);
  *(void *)&a1[*(int *)(v31 + 64)] = *(void *)&a2[*(int *)(v31 + 64)];
  uint64_t v14 = *(int *)(a3 + 52);
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  (*(void (**)(char *, char *))(*(void *)(v32 - 8) + 32))(&a1[v14], &a2[v14]);
  uint64_t v17 = *(int *)(v10 + 52);
  uint64_t v18 = &v15[v17];
  uint64_t v19 = &v16[v17];
  uint64_t v20 = sub_1B61B0670();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  uint64_t v21 = *(int *)(a3 + 56);
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_1B61AFA70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  uint64_t v25 = *(int *)(a3 + 64);
  a1[*(int *)(a3 + 60)] = a2[*(int *)(a3 + 60)];
  *(_OWORD *)&a1[v25] = *(_OWORD *)&a2[v25];
  return a1;
}

uint64_t sub_1B5F8E590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v37 = *(void *)(a3 + 16);
  uint64_t v8 = type metadata accessor for Blueprint();
  uint64_t v9 = *(int *)(v8 + 56);
  uint64_t v10 = v8;
  uint64_t v34 = a1 + v9;
  uint64_t v36 = v8;
  uint64_t v32 = a2 + v9;
  uint64_t v11 = type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v12 = sub_1B61B0670();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v34, v32, v12);
  uint64_t v13 = *(int *)(v10 + 60);
  uint64_t v33 = a2 + v13;
  uint64_t v35 = a1 + v13;
  type metadata accessor for BlueprintItem();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v14 = sub_1B61B0A30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v35, v33, v14);
  *(void *)(a1 + *(int *)(v36 + 64)) = *(void *)(a2 + *(int *)(v36 + 64));
  swift_release();
  uint64_t v15 = *(int *)(a3 + 52);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 40))(a1 + v15, a2 + v15);
  uint64_t v18 = *(int *)(v11 + 52);
  uint64_t v19 = v16 + v18;
  uint64_t v20 = v17 + v18;
  uint64_t v21 = sub_1B61B0670();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  uint64_t v22 = *(int *)(a3 + 56);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_1B61AFA70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 40))(v23, v24, v25);
  uint64_t v26 = *(int *)(a3 + 64);
  *(unsigned char *)(a1 + *(int *)(a3 + 60)) = *(unsigned char *)(a2 + *(int *)(a3 + 60));
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B5F8E8D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B5F8E8E4);
}

uint64_t sub_1B5F8E8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_9_1();
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_2_4();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
  OUTLINED_FUNCTION_9_1();
  type metadata accessor for BlueprintSection();
  OUTLINED_FUNCTION_2_4();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = *(int *)(a3 + 52);
LABEL_7:
    uint64_t v9 = a1 + v12;
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
  sub_1B61AFA70();
  OUTLINED_FUNCTION_2_4();
  if (*(_DWORD *)(v14 + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v12 = *(int *)(a3 + 56);
    goto LABEL_7;
  }
  return OUTLINED_FUNCTION_2_67();
}

uint64_t sub_1B5F8E9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B5F8E9C4);
}

void sub_1B5F8E9C4()
{
  OUTLINED_FUNCTION_5_39();
  OUTLINED_FUNCTION_6();
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_2_4();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1;
LABEL_8:
    __swift_storeEnumTagSinglePayload(v7, v0, v0, v6);
    return;
  }
  OUTLINED_FUNCTION_6();
  type metadata accessor for BlueprintSection();
  OUTLINED_FUNCTION_2_4();
  if (*(_DWORD *)(v9 + 84) == v3)
  {
    uint64_t v6 = v8;
    uint64_t v10 = *(int *)(v2 + 52);
LABEL_7:
    uint64_t v7 = v1 + v10;
    goto LABEL_8;
  }
  sub_1B61AFA70();
  OUTLINED_FUNCTION_2_4();
  if (*(_DWORD *)(v12 + 84) == v3)
  {
    uint64_t v6 = v11;
    uint64_t v10 = *(int *)(v2 + 56);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_10_32();
}

uint64_t type metadata accessor for BlueprintActiveImpressionSection()
{
  return swift_getGenericMetadata();
}

BOOL sub_1B5F8EAA8()
{
  if (!MEMORY[0x1BA9B1EC0](v0 + 32)) {
    return 0;
  }
  uint64_t v1 = (void *)MEMORY[0x1BA9B1EC0](v0 + 40);
  if (!v1) {
    goto LABEL_20;
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_viewIfLoaded);
  if (!v3)
  {
    swift_unknownObjectRelease();
LABEL_27:

    return 0;
  }
  uint64_t v4 = v3;
  swift_getObjectType();
  sub_1B61B2D80();
  sub_1B5E6D114((uint64_t)v34, (uint64_t)&v35);
  if ((v36 & 1) == 0)
  {
    CGFloat x = v35.origin.x;
    CGFloat y = v35.origin.y;
    CGFloat width = v35.size.width;
    CGFloat height = v35.size.height;
    v38.origin.CGFloat x = 0.0;
    v38.origin.CGFloat y = 0.0;
    v38.size.CGFloat width = 0.0;
    v38.size.CGFloat height = 0.0;
    if (CGRectEqualToRect(v35, v38))
    {
      if (qword_1EB64B770 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_1B61B1020();
      __swift_project_value_buffer(v9, (uint64_t)qword_1EB64B750);
      OUTLINED_FUNCTION_20_16();
      uint64_t v10 = (void *)sub_1B61B1000();
      os_log_type_t v11 = sub_1B61B2B80();
      if (OUTLINED_FUNCTION_17_20(v11))
      {
        OUTLINED_FUNCTION_1_76();
        uint64_t v33 = OUTLINED_FUNCTION_33_5();
        unint64_t v12 = OUTLINED_FUNCTION_5_40(4.8149e-34);
        sub_1B5EA6A1C(v12, v13, &v33);
        OUTLINED_FUNCTION_3_56();
        OUTLINED_FUNCTION_19_17();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_24_14(&dword_1B5DE7000, v14, v15, "Bounds check invalidating placement=%s, reason='frame is zero'");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_7_2();
        OUTLINED_FUNCTION_7_2();
        swift_unknownObjectRelease();

LABEL_26:
        goto LABEL_27;
      }

      OUTLINED_FUNCTION_19_17();
LABEL_20:
      swift_unknownObjectRelease();
      return 0;
    }
    self;
    uint64_t v16 = swift_dynamicCastObjCClass();
    if (v16)
    {
      uint64_t v17 = (void *)v16;
      swift_unknownObjectRetain();
      id v18 = objc_msgSend(v17, sel_tabBarController);

      if (!v18)
      {
        if (qword_1EB64B770 != -1) {
          swift_once();
        }
        uint64_t v27 = sub_1B61B1020();
        __swift_project_value_buffer(v27, (uint64_t)qword_1EB64B750);
        OUTLINED_FUNCTION_20_16();
        uint64_t v20 = (void *)sub_1B61B1000();
        os_log_type_t v28 = sub_1B61B2B80();
        if (OUTLINED_FUNCTION_17_20(v28))
        {
          OUTLINED_FUNCTION_1_76();
          uint64_t v33 = OUTLINED_FUNCTION_33_5();
          unint64_t v29 = OUTLINED_FUNCTION_5_40(4.8149e-34);
          sub_1B5EA6A1C(v29, v30, &v33);
          OUTLINED_FUNCTION_3_56();
          OUTLINED_FUNCTION_19_17();
          swift_bridgeObjectRelease();
          uint64_t v26 = "Bounds check invalidating placement=%s, reason='tab is removed from view hierarchy'";
          goto LABEL_25;
        }
LABEL_30:

        OUTLINED_FUNCTION_19_17();
        swift_unknownObjectRelease_n();
        return 0;
      }
      if (objc_msgSend(v17, sel_isHidden))
      {
        if (qword_1EB64B770 != -1) {
          swift_once();
        }
        uint64_t v19 = sub_1B61B1020();
        __swift_project_value_buffer(v19, (uint64_t)qword_1EB64B750);
        OUTLINED_FUNCTION_20_16();
        uint64_t v20 = (void *)sub_1B61B1000();
        os_log_type_t v21 = sub_1B61B2B80();
        if (OUTLINED_FUNCTION_17_20(v21))
        {
          OUTLINED_FUNCTION_1_76();
          uint64_t v33 = OUTLINED_FUNCTION_33_5();
          unint64_t v22 = OUTLINED_FUNCTION_5_40(4.8149e-34);
          sub_1B5EA6A1C(v22, v23, &v33);
          OUTLINED_FUNCTION_3_56();
          OUTLINED_FUNCTION_19_17();
          swift_bridgeObjectRelease();
          uint64_t v26 = "Bounds check invalidating placement=%s, reason='tab is hidden'";
LABEL_25:
          OUTLINED_FUNCTION_24_14(&dword_1B5DE7000, v24, v25, v26);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_7_2();
          OUTLINED_FUNCTION_7_2();

          swift_unknownObjectRelease_n();
          goto LABEL_26;
        }
        goto LABEL_30;
      }
      swift_unknownObjectRelease();
    }
    objc_msgSend(v4, sel_bounds);
    v39.origin.CGFloat x = x;
    v39.origin.CGFloat y = y;
    v39.size.CGFloat width = width;
    v39.size.CGFloat height = height;
    BOOL v31 = CGRectContainsRect(v37, v39);
    swift_unknownObjectRelease();

    return v31;
  }
  swift_unknownObjectRelease();

  return 0;
}

uint64_t TipPlacement.sourceIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1B61B1F70();
  return v1;
}

BOOL sub_1B5F8EF50()
{
  uint64_t v1 = MEMORY[0x1BA9B1EC0](v0 + 40);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = (void *)v1;
  uint64_t v3 = MEMORY[0x1BA9B1EC0](v0 + 32);
  swift_unknownObjectRelease();
  BOOL v4 = v3 != 0;
  if (v3)
  {
    id v5 = objc_msgSend(v2, sel_viewIfLoaded);
    id v6 = objc_msgSend(v5, sel_window);

    uint64_t v2 = v6;
    if (!v6) {
      return 0;
    }
  }

  return v4;
}

unint64_t TipPlacement.description.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:sourceViewController:)()
{
  OUTLINED_FUNCTION_2_68();
  OUTLINED_FUNCTION_12_29();
  TipPlacement.init(sourceIdentifier:source:sourceItem:sourceViewController:)();
  return v0;
}

void TipPlacement.init(sourceIdentifier:source:sourceItem:sourceViewController:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_10_33();
  OUTLINED_FUNCTION_16_17();
  OUTLINED_FUNCTION_15_21();
  *(unsigned char *)(v0 + 64) = 1;
  OUTLINED_FUNCTION_9_31();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();

  *(void *)(v0 + 72) = 0;
  *(void *)(v0 + 80) = 0;
  *(unsigned char *)(v0 + 88) = 1;
  OUTLINED_FUNCTION_73();
}

uint64_t TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:sourceViewController:traits:)()
{
  OUTLINED_FUNCTION_2_68();
  OUTLINED_FUNCTION_5_24();
  TipPlacement.init(sourceIdentifier:source:sourceItem:sourceViewController:traits:)();
  return v0;
}

void TipPlacement.init(sourceIdentifier:source:sourceItem:sourceViewController:traits:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_10_33();
  uint64_t v4 = *v3;
  OUTLINED_FUNCTION_16_17();
  OUTLINED_FUNCTION_15_21();
  *(unsigned char *)(v0 + 64) = 1;
  OUTLINED_FUNCTION_9_31();
  swift_unknownObjectRelease();
  swift_unknownObjectWeakAssign();

  *(void *)(v0 + 72) = v4;
  *(void *)(v0 + 80) = 0;
  *(unsigned char *)(v0 + 88) = 1;
  OUTLINED_FUNCTION_73();
}

uint64_t TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:sourceViewController:traits:permittedArrowDirections:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, void *a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v14 = OUTLINED_FUNCTION_2_68();
  TipPlacement.init(sourceIdentifier:source:sourceItem:sourceViewController:traits:permittedArrowDirections:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

uint64_t TipPlacement.init(sourceIdentifier:source:sourceItem:sourceViewController:traits:permittedArrowDirections:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, void *a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v11 = *a3;
  uint64_t v12 = a3[1];
  uint64_t v13 = *a6;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v7 + 64) = 1;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  *(void *)(v7 + 48) = v11;
  *(void *)(v7 + 56) = v12;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  swift_unknownObjectWeakAssign();

  *(void *)(v7 + 72) = v13;
  *(void *)(v7 + 80) = a7;
  *(unsigned char *)(v7 + 88) = 0;
  return v7;
}

uint64_t TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_2_68();
  TipPlacement.init(sourceIdentifier:source:sourceItem:)();
  return v0;
}

void TipPlacement.init(sourceIdentifier:source:sourceItem:)()
{
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_25_13();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v0 + 64) = 1;
  OUTLINED_FUNCTION_23_17();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  *(void *)(v0 + 72) = 0;
  *(void *)(v0 + 80) = 0;
  *(unsigned char *)(v0 + 88) = 1;
  OUTLINED_FUNCTION_73();
}

uint64_t TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:traits:)()
{
  OUTLINED_FUNCTION_2_68();
  OUTLINED_FUNCTION_12_29();
  TipPlacement.init(sourceIdentifier:source:sourceItem:traits:)();
  return v0;
}

void TipPlacement.init(sourceIdentifier:source:sourceItem:traits:)()
{
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_25_13();
  uint64_t v2 = *v1;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v0 + 64) = 1;
  OUTLINED_FUNCTION_23_17();
  swift_unknownObjectRelease();
  swift_unknownObjectWeakAssign();
  *(void *)(v0 + 72) = v2;
  *(void *)(v0 + 80) = 0;
  *(unsigned char *)(v0 + 88) = 1;
  OUTLINED_FUNCTION_73();
}

uint64_t TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:traits:permittedArrowDirections:)()
{
  OUTLINED_FUNCTION_2_68();
  OUTLINED_FUNCTION_5_24();
  TipPlacement.init(sourceIdentifier:source:sourceItem:traits:permittedArrowDirections:)();
  return v0;
}

void TipPlacement.init(sourceIdentifier:source:sourceItem:traits:permittedArrowDirections:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_10_33();
  uint64_t v4 = *v3;
  OUTLINED_FUNCTION_16_17();
  OUTLINED_FUNCTION_15_21();
  *(unsigned char *)(v0 + 64) = 1;
  OUTLINED_FUNCTION_9_31();
  swift_unknownObjectRelease();
  swift_unknownObjectWeakAssign();
  *(void *)(v0 + 72) = v4;
  *(void *)(v0 + 80) = v2;
  *(unsigned char *)(v0 + 88) = 0;
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5F8F614(char a1)
{
  if (a1 & 1) != 0 && (*(unsigned char *)(v1 + 72))
  {
    if (qword_1EB64B770 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1B61B1020();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB64B750);
    OUTLINED_FUNCTION_21_16();
    uint64_t v4 = sub_1B61B1000();
    os_log_type_t v5 = sub_1B61B2B80();
    if (os_log_type_enabled(v4, v5))
    {
      OUTLINED_FUNCTION_1_76();
      OUTLINED_FUNCTION_33_5();
      OUTLINED_FUNCTION_0_72(4.8751e-34);
      _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
      OUTLINED_FUNCTION_18_19();
      uint64_t v6 = swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_22_19(v6, v7, v8);
      OUTLINED_FUNCTION_13_21();
      OUTLINED_FUNCTION_14_5();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_26_14(&dword_1B5DE7000, v9, v10, "Invalid placement for tip source=%{public}s: keyboard is present");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_7_2();
    }
    else
    {

      OUTLINED_FUNCTION_14_5();
    }
  }
  else if (sub_1B5F8EF50())
  {
    return *(unsigned __int8 *)(v1 + 64);
  }
  return 0;
}

uint64_t sub_1B5F8F780(char a1, char a2)
{
  if ((a2 & 0xFE) == 2)
  {
LABEL_14:
    char v19 = sub_1B5F8F614(a1 & 1);
    return v19 & 1;
  }
  if ((*(unsigned char *)(v2 + 72) & 8) != 0)
  {
    if (qword_1EB64B770 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1B61B1020();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EB64B750);
    OUTLINED_FUNCTION_21_16();
    uint64_t v13 = sub_1B61B1000();
    os_log_type_t v14 = sub_1B61B2BA0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)OUTLINED_FUNCTION_1_76();
      OUTLINED_FUNCTION_33_5();
      *(_DWORD *)uint64_t v15 = 136446210;
      sub_1B61B1F70();
      _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
      OUTLINED_FUNCTION_18_19();
      uint64_t v16 = swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_22_19(v16, v17, v18);
      sub_1B61B2FB0();
      OUTLINED_FUNCTION_14_5();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B5DE7000, v13, v14, "Tip being placed for source %{public}s is flagged to allow display during active presentation processing.", v15, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_7_2();
    }
    else
    {

      OUTLINED_FUNCTION_14_5();
    }
    goto LABEL_14;
  }
  if (qword_1EB64B770 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1B61B1020();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB64B750);
  OUTLINED_FUNCTION_21_16();
  os_log_type_t v5 = sub_1B61B1000();
  os_log_type_t v6 = sub_1B61B2B80();
  if (os_log_type_enabled(v5, v6))
  {
    OUTLINED_FUNCTION_1_76();
    OUTLINED_FUNCTION_33_5();
    OUTLINED_FUNCTION_0_72(4.8751e-34);
    _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
    OUTLINED_FUNCTION_18_19();
    uint64_t v7 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_22_19(v7, v8, v9);
    OUTLINED_FUNCTION_13_21();
    OUTLINED_FUNCTION_14_5();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_26_14(&dword_1B5DE7000, v10, v11, "Invalid placement for tip source=%{public}s: presentation operation processing is not complete");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_7_2();
  }
  else
  {

    OUTLINED_FUNCTION_14_5();
  }
  char v19 = 0;
  return v19 & 1;
}

uint64_t TipPlacement.deinit()
{
  swift_bridgeObjectRelease();
  sub_1B5E437C4(v0 + 32);
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TipPlacement.__deallocating_deinit()
{
  TipPlacement.deinit();
  return swift_deallocClassInstance();
}

unint64_t sub_1B5F8FAB8()
{
  return TipPlacement.description.getter();
}

uint64_t type metadata accessor for TipPlacement()
{
  return self;
}

uint64_t method lookup function for TipPlacement(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TipPlacement);
}

uint64_t dispatch thunk of TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:sourceViewController:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:sourceViewController:traits:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:sourceViewController:traits:permittedArrowDirections:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:traits:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of TipPlacement.__allocating_init(sourceIdentifier:source:sourceItem:traits:permittedArrowDirections:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1B5F8FB90()
{
  uint64_t result = TUDeviceIsSlow();
  byte_1EB648F48 = result;
  return result;
}

uint64_t static UIDevice.isSlow.getter()
{
  if (qword_1EB648D40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return byte_1EB648F48;
}

uint64_t static UIDevice.isSlow.setter(char a1)
{
  if (qword_1EB648D40 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  byte_1EB648F48 = a1 & 1;
  return result;
}

uint64_t (*static UIDevice.isSlow.modify())()
{
  if (qword_1EB648D40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

id SectionFooterViewRenderer.render(for:with:in:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  uint64_t v10 = a1[5];
  uint64_t v11 = (void *)a1[8];
  uint64_t v28 = a1[7];
  uint64_t v29 = a1[9];
  uint64_t v30 = a1[6];
  uint64_t v12 = a1[10];
  uint64_t v13 = a1[11];
  uint64_t v32 = a1[13];
  uint64_t v33 = (void *)a1[12];
  uint64_t v35 = a1[14];
  double v14 = *(double *)(a2 + 32);
  double v15 = *(double *)(a2 + 40);
  double v16 = *(double *)(a2 + 48);
  double v17 = *(double *)(a2 + 56);
  uint64_t v31 = *(void *)(a2 + 96);
  id v34 = *(id *)(a3 + OBJC_IVAR____TtC5TeaUI17SectionFooterView_button);
  objc_msgSend(v34, sel_setFrame_, *(double *)(a2 + 64), *(double *)(a2 + 72), *(double *)(a2 + 80), *(double *)(a2 + 88));
  unint64_t v18 = *(void **)(a3 + OBJC_IVAR____TtC5TeaUI17SectionFooterView_separator);
  objc_msgSend(v18, sel_setFrame_, v14, v15, v16, v17);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40));
  v37[0] = v30;
  v37[1] = v28;
  v37[2] = (uint64_t)v11;
  v37[3] = v29;
  v37[4] = v12;
  v37[5] = v13;
  v36[0] = v5;
  v36[1] = v6;
  _OWORD v36[2] = v7;
  v36[3] = v8;
  v36[4] = v9;
  v36[5] = v10;
  sub_1B61B1F70();
  id v19 = v11;
  uint64_t v20 = OUTLINED_FUNCTION_0_73();
  sub_1B5F8FED4(v20, v21, v22);
  id v23 = sub_1B5EE794C(v37, (uint64_t)v36, v33, v32, v31);
  uint64_t v24 = OUTLINED_FUNCTION_0_73();
  sub_1B5EE82A0(v24, v25, v26);

  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_setAttributedTitle_forState_, v23, 0);

  return objc_msgSend(v18, sel_setBackgroundColor_, v35);
}

void sub_1B5F8FED4(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    sub_1B61B1F70();
    id v3 = a3;
  }
}

uint64_t SectionFooterViewRenderer.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t SectionFooterViewRenderer.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

id sub_1B5F8FF70(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return SectionFooterViewRenderer.render(for:with:in:)(a1, a2, a3);
}

uint64_t dispatch thunk of SectionFooterViewRendererType.render(for:with:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for SectionFooterViewRenderer()
{
  return self;
}

uint64_t method lookup function for SectionFooterViewRenderer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SectionFooterViewRenderer);
}

uint64_t == infix(_:_:)(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  unint64_t v6 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  if (!*(unsigned char *)(a1 + 16))
  {
    if (*(unsigned char *)(a2 + 16)) {
      goto LABEL_17;
    }
    sub_1B5F9024C(*(id *)a2, *(void *)(a2 + 8), 0);
    sub_1B5F9024C((id)v3, v2, 0);
    sub_1B5F902AC((void *)v3, v2, 0);
    uint64_t v13 = (void *)v6;
    uint64_t v14 = v5;
    char v15 = 0;
LABEL_26:
    sub_1B5F902AC(v13, v14, v15);
    return 1;
  }
  if (v4 != 1)
  {
    if (v3 | v2)
    {
      if (v7 != 2 || v6 != 1 || v5 != 0) {
        goto LABEL_17;
      }
    }
    else if (v7 != 2 || (v5 | v6) != 0)
    {
      goto LABEL_17;
    }
    sub_1B5F9024C(*(id *)a2, *(void *)(a2 + 8), v7);
    sub_1B5F902AC((void *)v3, v2, 2);
    uint64_t v13 = (void *)v6;
    uint64_t v14 = v5;
    char v15 = v7;
    goto LABEL_26;
  }
  if (v7 != 1)
  {
LABEL_17:
    sub_1B5F9024C(*(id *)a2, *(void *)(a2 + 8), v7);
    sub_1B5F9024C((id)v3, v2, v4);
    sub_1B5F902AC((void *)v3, v2, v4);
    unint64_t v18 = (void *)v6;
    uint64_t v19 = v5;
    char v20 = v7;
    goto LABEL_18;
  }
  if (!v3)
  {
    uint64_t v21 = 1;
    sub_1B5F9024C(*(id *)a2, *(void *)(a2 + 8), 1);
    sub_1B5F9024C(0, v2, 1);
    id v23 = (id)v6;
    sub_1B5F902AC(0, v2, 1);
    sub_1B5F902AC((void *)v6, v5, 1);
    if (!v6) {
      return v21;
    }

    return 0;
  }
  if (v6)
  {
    sub_1B5F90308();
    id v8 = (id)v3;
    sub_1B5F9024C((id)v6, v5, 1);
    sub_1B5F9024C((id)v3, v2, 1);
    id v9 = (id)v6;
    id v10 = v8;
    char v11 = sub_1B61B2E10();
    sub_1B5F902AC((void *)v3, v2, 1);
    sub_1B5F902AC((void *)v6, v5, 1);

    return v11 & 1;
  }
  sub_1B5F9024C(0, *(void *)(a2 + 8), 1);
  sub_1B5F9024C((id)v3, v2, 1);
  sub_1B5F902AC((void *)v3, v2, 1);
  unint64_t v18 = 0;
  uint64_t v19 = v5;
  char v20 = 1;
LABEL_18:
  sub_1B5F902AC(v18, v19, v20);
  return 0;
}

id sub_1B5F9024C(id result, uint64_t a2, char a3)
{
  if (a3 == 1)
  {
    id v4 = result;
    sub_1B61B1F70();
    return v4;
  }
  else if (!a3)
  {
    return (id)sub_1B61B1F70();
  }
  return result;
}

void *sub_1B5F902AC(void *result, uint64_t a2, char a3)
{
  if (a3)
  {
    if (a3 != 1) {
      return result;
    }
  }
  return (void *)swift_bridgeObjectRelease();
}

unint64_t sub_1B5F90308()
{
  unint64_t result = qword_1EB6499A8;
  if (!qword_1EB6499A8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB6499A8);
  }
  return result;
}

void NavigatorPresentationContext.init(_:)(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1[2];
  if ((a1[1] & 1) == 0)
  {
    uint64_t v5 = *a1;
    if (*a1 != 0x100000)
    {
      if (v5 != 1179648)
      {

        if (v5 == 1703936)
        {
          char v4 = 2;
          uint64_t v3 = 1;
          goto LABEL_10;
        }
        goto LABEL_3;
      }

      uint64_t v3 = 0;
    }
    char v4 = 1;
    goto LABEL_10;
  }

LABEL_3:
  uint64_t v3 = 0;
  char v4 = 2;
LABEL_10:
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = v4;
}

void *destroy for NavigatorPresentationContext(uint64_t a1)
{
  return sub_1B5F902AC(*(void **)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s5TeaUI28NavigatorPresentationContextOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1B5F9024C(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for NavigatorPresentationContext(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1B5F9024C(*(id *)a2, v4, v5);
  unint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1B5F902AC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for NavigatorPresentationContext(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1B5F902AC(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for NavigatorPresentationContext()
{
  return &type metadata for NavigatorPresentationContext;
}

id ImageView.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_38();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_35_0();
  return objc_msgSend(v2, v3, v4);
}

void sub_1B5F90520(id *a1)
{
  id v1 = (objc_class *)*a1;
  id v2 = *a1;
  v3.value.super.Class isa = v1;
  sub_1B5F90590(v3);
}

id sub_1B5F90550()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI9ImageView_imageView), sel_image);
  return v1;
}

void sub_1B5F90590(UIImage_optional a1)
{
  Class isa = a1.value.super.isa;
  UIImageView.setImageIfNeeded(_:)(a1);
  sub_1B5F90788(0, 0);
  if (isa)
  {
    objc_msgSend(v1, sel_setBackgroundColor_, 0);
  }
  else
  {
    uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC5TeaUI9ImageView__backgroundColor];
    objc_msgSend(v1, sel_setBackgroundColor_, v2);
  }
}

void (*sub_1B5F90644(void *a1))(UIImage_optional a1)
{
  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5TeaUI9ImageView_imageView), sel_image);
  return sub_1B5F906A8;
}

void sub_1B5F906A8(UIImage_optional a1)
{
  uint64_t v1 = *(void **)a1.value.super.isa;
  if (a1.is_nil)
  {
    id v2 = v1;
    v4.value.super.Class isa = (Class)v1;
    sub_1B5F90590(v4);
  }
  else
  {
    a1.value.super.Class isa = *(Class *)a1.value.super.isa;
    sub_1B5F90590(a1);
  }
}

BOOL sub_1B5F90710()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI9ImageView_imageView), sel_image);

  return !v1 && *(void *)(v0 + OBJC_IVAR____TtC5TeaUI9ImageView_loadingIdentifier + 8) == 0;
}

id sub_1B5F90778()
{
  return *(id *)(v0 + OBJC_IVAR____TtC5TeaUI9ImageView_imageView);
}

uint64_t sub_1B5F90788(uint64_t a1, uint64_t a2)
{
  UIImage_optional v3 = (void *)(v2 + OBJC_IVAR____TtC5TeaUI9ImageView_loadingIdentifier);
  void *v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

void sub_1B5F907A4(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI9ImageView__backgroundColor);
  *(void *)(v1 + OBJC_IVAR____TtC5TeaUI9ImageView__backgroundColor) = a1;
}

id sub_1B5F907FC()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for ImageView();
  id v1 = objc_msgSendSuper2(&v3, sel_backgroundColor);
  return v1;
}

uint64_t type metadata accessor for ImageView()
{
  return self;
}

void sub_1B5F908C4(void *a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for ImageView();
  objc_msgSendSuper2(&v3, sel_setBackgroundColor_, a1);
  sub_1B5F907A4((uint64_t)objc_msgSend(v1, sel_backgroundColor));
}

char *ImageView.init(frame:)()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OBJC_IVAR____TtC5TeaUI9ImageView_imageView;
  id v2 = objc_allocWithZone(MEMORY[0x1E4FB1838]);
  objc_super v3 = v0;
  *(void *)&v0[v1] = objc_msgSend(v2, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  UIImage_optional v4 = &v3[OBJC_IVAR____TtC5TeaUI9ImageView_loadingIdentifier];
  *(void *)UIImage_optional v4 = 0;
  *((void *)v4 + 1) = 0;
  *(void *)&v3[OBJC_IVAR____TtC5TeaUI9ImageView__backgroundColor] = 0;

  uint64_t v18 = type metadata accessor for ImageView();
  double v5 = OUTLINED_FUNCTION_35_0();
  char v8 = (char *)objc_msgSendSuper2(v6, v7, v5, v3, v18);
  id v9 = *(void **)&v8[OBJC_IVAR____TtC5TeaUI9ImageView_imageView];
  id v10 = v8;
  objc_msgSend(v10, sel_addSubview_, v9);
  id v11 = objc_msgSend(v10, sel_layer);
  type metadata accessor for ImageViewLayer();
  uint64_t v12 = swift_dynamicCastClass();
  if (v12)
  {
    uint64_t v13 = v12;
    id v14 = v9;
    id v15 = objc_msgSend(v14, sel_layer);

    double v16 = *(void **)(v13 + OBJC_IVAR____TtC5TeaUIP33_01AB305DE961FE9633E4B4930A1B15A714ImageViewLayer_coordinateWithLayer);
    *(void *)(v13 + OBJC_IVAR____TtC5TeaUIP33_01AB305DE961FE9633E4B4930A1B15A714ImageViewLayer_coordinateWithLayer) = v15;

    id v11 = v16;
  }
  else
  {
  }
  return v10;
}

uint64_t type metadata accessor for ImageViewLayer()
{
  return self;
}

id ImageView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ImageView.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC5TeaUI9ImageView_imageView;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  id v2 = &v0[OBJC_IVAR____TtC5TeaUI9ImageView_loadingIdentifier];
  *(void *)id v2 = 0;
  *((void *)v2 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC5TeaUI9ImageView__backgroundColor] = 0;

  sub_1B61B34D0();
  __break(1u);
}

id ImageView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ImageView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall ImageView.layoutSubviews()()
{
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for ImageView();
  objc_msgSendSuper2(&v8, sel_layoutSubviews);
  uint64_t v1 = self;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_1B5F90E80;
  *(void *)(v3 + 24) = v2;
  v7[4] = sub_1B5E4EC58;
  v7[5] = v3;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 1107296256;
  v7[2] = sub_1B5E7365C;
  v7[3] = &block_descriptor_40;
  UIImage_optional v4 = _Block_copy(v7);
  id v5 = v0;
  swift_retain();
  swift_release();
  objc_msgSend(v1, sel_performWithoutAnimation_, v4);
  _Block_release(v4);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
}

id sub_1B5F90DF8(char *a1)
{
  uint64_t v1 = *(void **)&a1[OBJC_IVAR____TtC5TeaUI9ImageView_imageView];
  objc_msgSend(a1, sel_bounds);
  return objc_msgSend(v1, sel_setFrame_);
}

uint64_t sub_1B5F90E48()
{
  return swift_deallocObject();
}

id sub_1B5F90E80()
{
  return sub_1B5F90DF8(*(char **)(v0 + 16));
}

uint64_t sub_1B5F90E88()
{
  return swift_deallocObject();
}

uint64_t static ImageView.layerClass.getter()
{
  return type metadata accessor for ImageViewLayer();
}

id ImageView.clipsToBounds.getter()
{
  return sub_1B5F91314();
}

id ImageView.clipsToBounds.setter(char a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for ImageView();
  objc_msgSendSuper2(&v4, sel_setClipsToBounds_, a1 & 1);
  return sub_1B5F90FEC();
}

id sub_1B5F90FEC()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI9ImageView_imageView];
  id v2 = objc_msgSend(v0, sel_clipsToBounds);
  id result = objc_msgSend(v1, sel_clipsToBounds);
  if (v2 != result)
  {
    return objc_msgSend(v1, sel_setClipsToBounds_, v2);
  }
  return result;
}

id ImageView.contentMode.getter()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ImageView();
  return objc_msgSendSuper2(&v2, sel_contentMode);
}

id ImageView.contentMode.setter(uint64_t a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for ImageView();
  objc_msgSendSuper2(&v4, sel_setContentMode_, a1);
  return sub_1B5F91178();
}

id sub_1B5F91178()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI9ImageView_imageView];
  id v2 = objc_msgSend(v0, sel_contentMode);
  return objc_msgSend(v1, sel_setContentMode_, v2);
}

id ImageView.accessibilityIgnoresInvertColors.getter()
{
  return sub_1B5F91314();
}

id ImageView.accessibilityIgnoresInvertColors.setter(char a1)
{
  return sub_1B5F91278(a1, (SEL *)&selRef_setAccessibilityIgnoresInvertColors_, (SEL *)&selRef_accessibilityIgnoresInvertColors);
}

id sub_1B5F91278(char a1, SEL *a2, SEL *a3)
{
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for ImageView();
  objc_msgSendSuper2(&v8, *a2, a1 & 1);
  return sub_1B5F913B0(a3, a2);
}

id ImageView.accessibilityElementsHidden.getter()
{
  return sub_1B5F91314();
}

id sub_1B5F91314()
{
  type metadata accessor for ImageView();
  OUTLINED_FUNCTION_0_74();
  return objc_msgSendSuper2(v0, v1);
}

id ImageView.accessibilityElementsHidden.setter(char a1)
{
  return sub_1B5F91278(a1, (SEL *)&selRef_setAccessibilityElementsHidden_, (SEL *)&selRef_accessibilityElementsHidden);
}

id sub_1B5F913B0(SEL *a1, const char **a2)
{
  objc_super v4 = *(void **)&v2[OBJC_IVAR____TtC5TeaUI9ImageView_imageView];
  id v5 = [v2 *a1];
  char v6 = *a2;
  return objc_msgSend(v4, v6, v5);
}

uint64_t ImageView.loadImage(from:with:completion:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v8);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  sub_1B5F90788(v10, v11);
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1B5E176E4((uint64_t)a2, (uint64_t)v18);
  id v15 = (void *)swift_allocObject();
  _OWORD v15[2] = v14;
  sub_1B5E30E70(v18, (uint64_t)(v15 + 3));
  v15[8] = a3;
  v15[9] = a4;
  double v16 = *(void (**)(void *, uint64_t (*)(void *, uint64_t), void *, uint64_t, uint64_t))(v13 + 8);
  swift_retain();
  swift_retain();
  v16(a2, sub_1B5F91904, v15, v12, v13);
  swift_release();
  return swift_release();
}

uint64_t sub_1B5F91564()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B5F9159C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = sub_1B61B1D90();
  uint64_t v24 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1B61B1DF0();
  uint64_t v14 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  double v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B5E75560();
  uint64_t v22 = sub_1B61B2C50();
  sub_1B5E176E4(a4, (uint64_t)v26);
  double v17 = (void *)swift_allocObject();
  void v17[2] = a3;
  sub_1B5E30E70(v26, (uint64_t)(v17 + 3));
  v17[8] = a5;
  v17[9] = a6;
  v17[10] = a1;
  aBlock[4] = sub_1B5F92F28;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B5E3729C;
  aBlock[3] = &block_descriptor_43_0;
  uint64_t v18 = _Block_copy(aBlock);
  id v19 = a1;
  swift_retain();
  swift_retain();
  swift_release();
  sub_1B61B1DB0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1B5E397C8((unint64_t *)&qword_1EB647A40, MEMORY[0x1E4FBCB00]);
  sub_1B5E39770();
  sub_1B5E397C8((unint64_t *)&qword_1EB647AE0, (void (*)(uint64_t))sub_1B5E39770);
  sub_1B61B3100();
  char v20 = (void *)v22;
  MEMORY[0x1BA9AFE10](0, v16, v13, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v23);
}

uint64_t sub_1B5F918BC()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5F91904(void *a1, uint64_t a2)
{
  return sub_1B5F9159C(a1, a2, v2[2], (uint64_t)(v2 + 3), v2[8], v2[9]);
}

void sub_1B5F91914(uint64_t a1, void *a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v8 = a1 + 16;
  swift_beginAccess();
  uint64_t v9 = MEMORY[0x1BA9B1EC0](v8);
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    char v20 = a3;
    uint64_t v12 = *(void *)(v9 + OBJC_IVAR____TtC5TeaUI9ImageView_loadingIdentifier);
    uint64_t v11 = *(void *)(v9 + OBJC_IVAR____TtC5TeaUI9ImageView_loadingIdentifier + 8);
    uint64_t v13 = a2[3];
    uint64_t v14 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v13);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 16);
    sub_1B61B1F70();
    uint64_t v16 = v15(v13, v14);
    if (!v11)
    {

      swift_bridgeObjectRelease();
      return;
    }
    if (v12 == v16 && v11 == v17)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v19 = sub_1B61B3760();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0) {
        goto LABEL_12;
      }
    }
    v20(a5);
LABEL_12:
  }
}

uint64_t ImageView.setImage(from:with:)(void *a1, void *a2)
{
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  sub_1B5F90788(v6, v7);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1B5E176E4((uint64_t)a2, (uint64_t)v14);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  sub_1B5E30E70(v14, v11 + 24);
  uint64_t v12 = *(void (**)(void *, uint64_t (*)(void *, uint64_t), uint64_t, uint64_t, uint64_t))(v9 + 8);
  swift_retain();
  v12(a2, sub_1B5F91EE0, v11, v8, v9);
  swift_release();
  return swift_release();
}

uint64_t sub_1B5F91B98(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1B61B1D90();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1B61B1DF0();
  uint64_t v11 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B5E75560();
  uint64_t v14 = (void *)sub_1B61B2C50();
  sub_1B5E176E4(a4, (uint64_t)v21);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a3;
  sub_1B5E30E70(v21, v15 + 24);
  *(void *)(v15 + 64) = a1;
  aBlock[4] = sub_1B5F92EC8;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B5E3729C;
  aBlock[3] = &block_descriptor_37;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = a1;
  swift_retain();
  swift_release();
  sub_1B61B1DB0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1B5E397C8((unint64_t *)&qword_1EB647A40, MEMORY[0x1E4FBCB00]);
  sub_1B5E39770();
  sub_1B5E397C8((unint64_t *)&qword_1EB647AE0, (void (*)(uint64_t))sub_1B5E39770);
  sub_1B61B3100();
  MEMORY[0x1BA9AFE10](0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v19);
}

uint64_t sub_1B5F91EA0()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1B5F91EE0(void *a1, uint64_t a2)
{
  return sub_1B5F91B98(a1, a2, *(void *)(v2 + 16), v2 + 24);
}

void sub_1B5F91EEC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = a1 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1BA9B1EC0](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    uint64_t v9 = *(void *)(v6 + OBJC_IVAR____TtC5TeaUI9ImageView_loadingIdentifier);
    uint64_t v8 = *(void *)(v6 + OBJC_IVAR____TtC5TeaUI9ImageView_loadingIdentifier + 8);
    uint64_t v10 = a2[3];
    uint64_t v11 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v10);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 16);
    sub_1B61B1F70();
    uint64_t v13 = v12(v10, v11);
    if (!v8)
    {

      swift_bridgeObjectRelease();
      return;
    }
    if (v9 == v13 && v8 == v14)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v16 = sub_1B61B3760();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0) {
        goto LABEL_12;
      }
    }
    id v17 = a3;
    v18.value.super.Class isa = (Class)a3;
    sub_1B5F90590(v18);
LABEL_12:
  }
}

void ImageView.crossFadeImage(_:animated:completion:)(void *a1, char a2, void (*a3)(uint64_t), uint64_t a4)
{
  if (!a1)
  {
    if (!a3) {
      return;
    }
    uint64_t v16 = 0;
    goto LABEL_8;
  }
  if (a2)
  {
    uint64_t v8 = self;
    uint64_t v9 = *(void *)&v4[OBJC_IVAR____TtC5TeaUI9ImageView_imageView];
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v4;
    *(void *)(v10 + 24) = a1;
    uint64_t v22 = sub_1B5F92CB8;
    uint64_t v23 = v10;
    uint64_t v18 = MEMORY[0x1E4F143A8];
    uint64_t v19 = 1107296256;
    char v20 = sub_1B5E3729C;
    uint64_t v21 = &block_descriptor_19_0;
    uint64_t v11 = _Block_copy(&v18);
    id v12 = a1;
    uint64_t v13 = v4;
    swift_release();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a3;
    *(void *)(v14 + 24) = a4;
    uint64_t v22 = sub_1B5F92D00;
    uint64_t v23 = v14;
    uint64_t v18 = MEMORY[0x1E4F143A8];
    uint64_t v19 = 1107296256;
    char v20 = sub_1B5E73DCC;
    uint64_t v21 = &block_descriptor_25_0;
    uint64_t v15 = _Block_copy(&v18);
    sub_1B5E4DC4C((uint64_t)a3);
    swift_release();
    objc_msgSend(v8, sel_transitionWithView_duration_options_animations_completion_, v9, 5308418, v11, v15, 0.25);

    _Block_release(v15);
    _Block_release(v11);
    return;
  }
  id v17 = a1;
  v24.value.super.Class isa = (Class)a1;
  sub_1B5F90590(v24);
  if (a3)
  {
    uint64_t v16 = 1;
LABEL_8:
    a3(v16);
  }
}

void sub_1B5F92228(uint64_t a1, void *a2)
{
  id v3 = a2;
  v4.value.super.Class isa = (Class)a2;
  sub_1B5F90590(v4);
}

id sub_1B5F92258(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC5TeaUIP33_01AB305DE961FE9633E4B4930A1B15A714ImageViewLayer_coordinateWithLayer] = 0;
  v6.receiver = v1;
  v6.super_class = ObjectType;
  id v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

id sub_1B5F922E0(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC5TeaUIP33_01AB305DE961FE9633E4B4930A1B15A714ImageViewLayer_coordinateWithLayer] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v4 = sub_1B61B3740();
  v7.receiver = v1;
  v7.super_class = ObjectType;
  id v5 = objc_msgSendSuper2(&v7, sel_initWithLayer_, v4);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v5;
}

id sub_1B5F923C4()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC5TeaUIP33_01AB305DE961FE9633E4B4930A1B15A714ImageViewLayer_coordinateWithLayer] = 0;
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_init);
}

void sub_1B5F924C8(double a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, sel_setCornerRadius_, a1);
  sub_1B5F92514();
}

void sub_1B5F92514()
{
  SEL v1 = *(void **)&v0[OBJC_IVAR____TtC5TeaUIP33_01AB305DE961FE9633E4B4930A1B15A714ImageViewLayer_coordinateWithLayer];
  if (v1)
  {
    v3.receiver = v0;
    v3.super_class = (Class)swift_getObjectType();
    id v2 = v1;
    objc_msgSendSuper2(&v3, sel_cornerRadius);
    objc_msgSend(v2, sel_setCornerRadius_, v3.receiver, v3.super_class);
  }
}

id sub_1B5F925C0()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_maskedCorners);
}

void sub_1B5F9264C(uint64_t a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, sel_setMaskedCorners_, a1);
  sub_1B5F92698();
}

void sub_1B5F92698()
{
  SEL v1 = *(void **)&v0[OBJC_IVAR____TtC5TeaUIP33_01AB305DE961FE9633E4B4930A1B15A714ImageViewLayer_coordinateWithLayer];
  if (v1)
  {
    v4.receiver = v0;
    v4.super_class = (Class)swift_getObjectType();
    id v2 = v1;
    id v3 = objc_msgSendSuper2(&v4, sel_maskedCorners);
    objc_msgSend(v2, sel_setMaskedCorners_, v3, v4.receiver, v4.super_class);
  }
}

id sub_1B5F92808()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_shadowOffset);
}

id sub_1B5F928A0(double a1, double a2)
{
  v6.receiver = v2;
  v6.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v6, sel_setShadowOffset_, a1, a2);
}

id sub_1B5F9292C()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_shadowOpacity);
}

id sub_1B5F929BC(float a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  *(float *)&double v3 = a1;
  return objc_msgSendSuper2(&v5, sel_setShadowOpacity_, v3);
}

id sub_1B5F92A50()
{
  swift_getObjectType();
  OUTLINED_FUNCTION_0_74();
  id v2 = objc_msgSendSuper2(v0, v1);
  return v2;
}

void sub_1B5F92B00(void *a1)
{
  swift_getObjectType();
  OUTLINED_FUNCTION_0_74();
  objc_msgSendSuper2(v2, v3, a1);
}

id sub_1B5F92B90()
{
  swift_getObjectType();
  OUTLINED_FUNCTION_0_74();
  return objc_msgSendSuper2(v0, v1);
}

id sub_1B5F92C20(double a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v4, sel_setShadowRadius_, a1);
}

uint64_t sub_1B5F92C78()
{
  return swift_deallocObject();
}

void sub_1B5F92CB8()
{
  sub_1B5F92228(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1B5F92CC0()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1B5F92D00(uint64_t result)
{
  id v2 = *(uint64_t (**)(uint64_t))(v1 + 16);
  if (v2) {
    return v2(result & 1);
  }
  return result;
}

id sub_1B5F92D34@<X0>(void *a1@<X8>)
{
  id result = sub_1B5F90550();
  *a1 = result;
  return result;
}

uint64_t method lookup function for ImageView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ImageView);
}

uint64_t dispatch thunk of ImageView.image.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ImageView.image.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ImageView.image.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ImageView.isMissingImage.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ImageView.backingView.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t sub_1B5F92E80()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return swift_deallocObject();
}

void sub_1B5F92EC8()
{
  sub_1B5F91EEC(*(void *)(v0 + 16), (void *)(v0 + 24), *(void **)(v0 + 64));
}

uint64_t sub_1B5F92ED8()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();

  return swift_deallocObject();
}

void sub_1B5F92F28()
{
  sub_1B5F91914(*(void *)(v0 + 16), (void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80));
}

uint64_t static MenuItemKey.key(input:modifierFlags:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  a4[2] = a3;
  return sub_1B61B1F70();
}

TeaUI::MenuItemKey __swiftcall MenuItemKey.init(input:modifierFlags:)(Swift::String input, __C::UIKeyModifierFlags modifierFlags)
{
  *(Swift::String *)uint64_t v2 = input;
  *(__C::UIKeyModifierFlags *)(v2 + 16) = modifierFlags;
  result.input = input;
  result.modifierFlags = modifierFlags;
  return result;
}

void *sub_1B5F92F74(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_1B61B1F70();
  return a1;
}

void *assignWithCopy for MenuItemKey(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *assignWithTake for MenuItemKey(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for MenuItemKey(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MenuItemKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)TeaUI::MenuItemKey result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MenuItemKey()
{
  return &type metadata for MenuItemKey;
}

TeaUI::SwipeActionMenu __swiftcall SwipeActionMenu.init(_:)(Swift::OpaquePointer a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = *((void *)a1._rawValue + 2);
  if (v4)
  {
    uint64_t v18 = v1;
    sub_1B61B1F70();
    objc_super v5 = (uint64_t *)((char *)a1._rawValue + 64);
    uint64_t v6 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v7 = *(v5 - 3);
      if (v7)
      {
        uint64_t v8 = v5[3];
        uint64_t v22 = *(v5 - 4);
        uint64_t v23 = v5[4];
        uint64_t v9 = v5[6];
        uint64_t v10 = v5[8];
        uint64_t v24 = v5[7];
        uint64_t v25 = v5[5];
        uint64_t v11 = v5[1];
        uint64_t v12 = *(v5 - 1);
        uint64_t v20 = *v5;
        uint64_t v21 = v5[2];
        uint64_t v19 = *(v5 - 2);
        sub_1B61B1F70();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v26 = v10;
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B5E1B508();
          uint64_t v6 = v15;
        }
        unint64_t v13 = *(void *)(v6 + 16);
        if (v13 >= *(void *)(v6 + 24) >> 1)
        {
          sub_1B5E1B508();
          uint64_t v6 = v16;
        }
        *(void *)(v6 + 16) = v13 + 1;
        uint64_t v14 = v6 + 104 * v13;
        *(void *)(v14 + 32) = v22;
        *(void *)(v14 + 40) = v7;
        *(void *)(v14 + 48) = v19;
        *(void *)(v14 + 56) = v12;
        *(void *)(v14 + 64) = v20;
        *(void *)(v14 + 72) = v11;
        *(void *)(v14 + 80) = v21;
        *(void *)(v14 + 88) = v8;
        *(unsigned char *)(v14 + 96) = v23 & 1;
        *(unsigned char *)(v14 + 97) = BYTE1(v23) & 1;
        *(void *)(v14 + 104) = v25;
        *(void *)(v14 + 112) = v9;
        *(void *)(v14 + 120) = v24;
        *(void *)(v14 + 128) = v26;
      }
      v5 += 13;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    uint64_t v3 = v18;
  }
  else
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  result.actions._rawValue = (void *)swift_bridgeObjectRelease();
  void *v3 = v6;
  return result;
}

ValueMetadata *type metadata accessor for SwipeActionMenu()
{
  return &type metadata for SwipeActionMenu;
}

uint64_t CardViewInteractiveState.description.getter()
{
  uint64_t result = 0x657263736C6C7566;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6465646E61707865;
      break;
    case 2:
      uint64_t result = 0x657370616C6C6F63;
      break;
    case 3:
      uint64_t result = 0x676E696767617264;
      break;
    case 4:
      uint64_t result = 1701736302;
      break;
    default:
      return result;
  }
  return result;
}

BOOL static CardViewInteractiveState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CardViewInteractiveState.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t CardViewInteractiveState.hashValue.getter()
{
  return sub_1B61B3940();
}

unint64_t sub_1B5F933E4()
{
  unint64_t result = qword_1E9DAAC50;
  if (!qword_1E9DAAC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAAC50);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CardViewInteractiveState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F93500);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardViewInteractiveState()
{
  return &type metadata for CardViewInteractiveState;
}

__C::UIContentSizeCategory_optional __swiftcall UIContentSizeCategory.larger()()
{
  sub_1B61B20F0();
  BOOL v3 = v1 == OUTLINED_FUNCTION_2_69() && v0 == v2;
  unsigned int v4 = (void **)MEMORY[0x1E4FB27E8];
  if (v3) {
    goto LABEL_62;
  }
  OUTLINED_FUNCTION_0_75();
  OUTLINED_FUNCTION_4_54();
  swift_bridgeObjectRelease();
  if (v1) {
    goto LABEL_63;
  }
  sub_1B61B20F0();
  BOOL v6 = v1 == OUTLINED_FUNCTION_2_69() && v0 == v5;
  unsigned int v4 = (void **)MEMORY[0x1E4FB27D8];
  if (v6) {
    goto LABEL_62;
  }
  OUTLINED_FUNCTION_0_75();
  OUTLINED_FUNCTION_4_54();
  swift_bridgeObjectRelease();
  if (v1) {
    goto LABEL_63;
  }
  sub_1B61B20F0();
  BOOL v8 = v1 == OUTLINED_FUNCTION_2_69() && v0 == v7;
  unsigned int v4 = (void **)MEMORY[0x1E4FB27D0];
  if (v8) {
    goto LABEL_62;
  }
  OUTLINED_FUNCTION_0_75();
  OUTLINED_FUNCTION_4_54();
  swift_bridgeObjectRelease();
  if (v1)
  {
LABEL_63:
    uint64_t v31 = *v4;
LABEL_64:
    id v32 = v31;
    goto LABEL_65;
  }
  sub_1B61B20F0();
  BOOL v10 = v1 == OUTLINED_FUNCTION_2_69() && v0 == v9;
  unsigned int v4 = (void **)MEMORY[0x1E4FB27C0];
  if (v10)
  {
LABEL_62:
    OUTLINED_FUNCTION_6_42();
    goto LABEL_63;
  }
  OUTLINED_FUNCTION_0_75();
  OUTLINED_FUNCTION_4_54();
  swift_bridgeObjectRelease();
  if (v1) {
    goto LABEL_63;
  }
  sub_1B61B20F0();
  if (v1 == OUTLINED_FUNCTION_2_69() && v0 == v11)
  {
    OUTLINED_FUNCTION_6_42();
    goto LABEL_67;
  }
  OUTLINED_FUNCTION_0_75();
  OUTLINED_FUNCTION_4_54();
  swift_bridgeObjectRelease();
  if (v1)
  {
LABEL_67:
    id v34 = (void **)MEMORY[0x1E4FB27B8];
LABEL_68:
    uint64_t v31 = *v34;
    goto LABEL_64;
  }
  sub_1B61B20F0();
  if (v1 == OUTLINED_FUNCTION_2_69() && v0 == v13)
  {
    OUTLINED_FUNCTION_6_42();
    goto LABEL_70;
  }
  OUTLINED_FUNCTION_0_75();
  OUTLINED_FUNCTION_4_54();
  swift_bridgeObjectRelease();
  if (v1)
  {
LABEL_70:
    id v34 = (void **)MEMORY[0x1E4FB27B0];
    goto LABEL_68;
  }
  sub_1B61B20F0();
  if (v1 == OUTLINED_FUNCTION_2_69() && v0 == v15)
  {
    OUTLINED_FUNCTION_6_42();
    goto LABEL_72;
  }
  OUTLINED_FUNCTION_0_75();
  OUTLINED_FUNCTION_4_54();
  swift_bridgeObjectRelease();
  if (v1)
  {
LABEL_72:
    id v34 = (void **)MEMORY[0x1E4FB2798];
    goto LABEL_68;
  }
  sub_1B61B20F0();
  if (v1 == OUTLINED_FUNCTION_2_69() && v0 == v17)
  {
    OUTLINED_FUNCTION_6_42();
    goto LABEL_74;
  }
  OUTLINED_FUNCTION_0_75();
  OUTLINED_FUNCTION_4_54();
  swift_bridgeObjectRelease();
  if (v1)
  {
LABEL_74:
    id v34 = (void **)MEMORY[0x1E4FB2790];
    goto LABEL_68;
  }
  sub_1B61B20F0();
  if (v1 == OUTLINED_FUNCTION_2_69() && v0 == v19)
  {
    OUTLINED_FUNCTION_6_42();
    goto LABEL_76;
  }
  OUTLINED_FUNCTION_0_75();
  OUTLINED_FUNCTION_4_54();
  swift_bridgeObjectRelease();
  if (v1)
  {
LABEL_76:
    id v34 = (void **)MEMORY[0x1E4FB2788];
    goto LABEL_68;
  }
  sub_1B61B20F0();
  if (v1 == OUTLINED_FUNCTION_2_69() && v0 == v21)
  {
    OUTLINED_FUNCTION_6_42();
    goto LABEL_78;
  }
  OUTLINED_FUNCTION_0_75();
  OUTLINED_FUNCTION_4_54();
  swift_bridgeObjectRelease();
  if (v1)
  {
LABEL_78:
    id v34 = (void **)MEMORY[0x1E4FB2780];
    goto LABEL_68;
  }
  sub_1B61B20F0();
  if (v1 == OUTLINED_FUNCTION_2_69() && v0 == v23)
  {
    OUTLINED_FUNCTION_6_42();
    goto LABEL_80;
  }
  OUTLINED_FUNCTION_0_75();
  OUTLINED_FUNCTION_4_54();
  swift_bridgeObjectRelease();
  if (v1)
  {
LABEL_80:
    id v34 = (void **)MEMORY[0x1E4FB2778];
    goto LABEL_68;
  }
  uint64_t v25 = sub_1B61B20F0();
  uint64_t v27 = v26;
  if (v25 != sub_1B61B20F0() || v27 != v28) {
    sub_1B61B3760();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v31 = 0;
LABEL_65:
  uint64_t v33 = v31;
  result.value._rawValue = v33;
  result.is_nil = v30;
  return result;
}

__C::UIContentSizeCategory_optional __swiftcall UIContentSizeCategory.smaller()()
{
  uint64_t v1 = (void *)*MEMORY[0x1E4FB27C8];
  uint64_t v2 = sub_1B61B20F0();
  uint64_t v4 = v3;
  if (v2 == sub_1B61B20F0() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_63;
  }
  uint64_t v7 = v5;
  char v8 = sub_1B61B3760();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    BOOL v10 = (void *)*MEMORY[0x1E4FB27E8];
    sub_1B61B20F0();
    if (v0 != OUTLINED_FUNCTION_3_57() || v7 != v11)
    {
      OUTLINED_FUNCTION_1_77();
      OUTLINED_FUNCTION_5_41();
      swift_bridgeObjectRelease();
      if (v0) {
        goto LABEL_65;
      }
      uint64_t v1 = (void *)*MEMORY[0x1E4FB27D8];
      sub_1B61B20F0();
      if (v0 == OUTLINED_FUNCTION_3_57() && v7 == v13) {
        goto LABEL_67;
      }
      OUTLINED_FUNCTION_1_77();
      OUTLINED_FUNCTION_5_41();
      swift_bridgeObjectRelease();
      if (v0) {
        goto LABEL_68;
      }
      BOOL v10 = (void *)*MEMORY[0x1E4FB27D0];
      sub_1B61B20F0();
      if (v0 != OUTLINED_FUNCTION_3_57() || v7 != v15)
      {
        OUTLINED_FUNCTION_1_77();
        OUTLINED_FUNCTION_5_41();
        swift_bridgeObjectRelease();
        if (v0) {
          goto LABEL_65;
        }
        uint64_t v1 = (void *)*MEMORY[0x1E4FB27C0];
        sub_1B61B20F0();
        if (v0 == OUTLINED_FUNCTION_3_57() && v7 == v17) {
          goto LABEL_67;
        }
        OUTLINED_FUNCTION_1_77();
        OUTLINED_FUNCTION_5_41();
        swift_bridgeObjectRelease();
        if (v0) {
          goto LABEL_68;
        }
        BOOL v10 = (void *)*MEMORY[0x1E4FB27B8];
        sub_1B61B20F0();
        if (v0 != OUTLINED_FUNCTION_3_57() || v7 != v19)
        {
          OUTLINED_FUNCTION_1_77();
          OUTLINED_FUNCTION_5_41();
          swift_bridgeObjectRelease();
          if (v0) {
            goto LABEL_65;
          }
          uint64_t v1 = (void *)*MEMORY[0x1E4FB27B0];
          sub_1B61B20F0();
          if (v0 == OUTLINED_FUNCTION_3_57() && v7 == v21) {
            goto LABEL_67;
          }
          OUTLINED_FUNCTION_1_77();
          OUTLINED_FUNCTION_5_41();
          swift_bridgeObjectRelease();
          if (v0) {
            goto LABEL_68;
          }
          BOOL v10 = (void *)*MEMORY[0x1E4FB2798];
          sub_1B61B20F0();
          if (v0 != OUTLINED_FUNCTION_3_57() || v7 != v23)
          {
            OUTLINED_FUNCTION_1_77();
            OUTLINED_FUNCTION_5_41();
            swift_bridgeObjectRelease();
            if (v0) {
              goto LABEL_65;
            }
            uint64_t v1 = (void *)*MEMORY[0x1E4FB2790];
            sub_1B61B20F0();
            if (v0 == OUTLINED_FUNCTION_3_57() && v7 == v25) {
              goto LABEL_67;
            }
            OUTLINED_FUNCTION_1_77();
            OUTLINED_FUNCTION_5_41();
            swift_bridgeObjectRelease();
            if (v0) {
              goto LABEL_68;
            }
            BOOL v10 = (void *)*MEMORY[0x1E4FB2788];
            sub_1B61B20F0();
            if (v0 != OUTLINED_FUNCTION_3_57() || v7 != v27)
            {
              OUTLINED_FUNCTION_1_77();
              OUTLINED_FUNCTION_5_41();
              swift_bridgeObjectRelease();
              if ((v0 & 1) == 0)
              {
                uint64_t v1 = (void *)*MEMORY[0x1E4FB2780];
                sub_1B61B20F0();
                if (v0 != OUTLINED_FUNCTION_3_57() || v7 != v29)
                {
                  OUTLINED_FUNCTION_1_77();
                  OUTLINED_FUNCTION_5_41();
                  swift_bridgeObjectRelease();
                  if ((v0 & 1) == 0)
                  {
                    uint64_t v31 = sub_1B61B20F0();
                    uint64_t v33 = v32;
                    if (v31 != sub_1B61B20F0() || v33 != v34)
                    {
                      char v36 = sub_1B61B3760();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if (v36) {
                        goto LABEL_65;
                      }
                      goto LABEL_63;
                    }
                    goto LABEL_64;
                  }
LABEL_68:
                  id v39 = v10;
                  uint64_t v1 = v10;
                  goto LABEL_66;
                }
LABEL_67:
                swift_bridgeObjectRelease_n();
                goto LABEL_68;
              }
LABEL_65:
              id v37 = v1;
              goto LABEL_66;
            }
          }
        }
      }
    }
LABEL_64:
    swift_bridgeObjectRelease_n();
    goto LABEL_65;
  }
LABEL_63:
  uint64_t v1 = 0;
LABEL_66:
  CGRect v38 = v1;
  result.value._rawValue = v38;
  result.is_nil = v9;
  return result;
}

BOOL static LazyViewController.Trigger.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t LazyViewController.Trigger.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t LazyViewController.Trigger.hashValue.getter()
{
  return sub_1B61B3940();
}

uint64_t LazyViewController.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5TeaUI18LazyViewController_identifier);
  sub_1B61B1F70();
  return v1;
}

uint64_t LazyViewController.loadedViewController.getter()
{
  swift_retain();
  sub_1B61B07F0();
  swift_release();
  return v1;
}

void sub_1B5F93D14(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  LazyViewController.loadedViewController.setter(v1);
}

void LazyViewController.loadedViewController.setter(void *a1)
{
  id v1 = a1;
  swift_retain();
  sub_1B61B0800();
  swift_release();
}

void (*LazyViewController.loadedViewController.modify(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = *(void *)(v1 + OBJC_IVAR____TtC5TeaUI18LazyViewController__loadedViewController);
  swift_retain();
  v3[5] = sub_1B61B07E0();
  return sub_1B5F85AA4;
}

uint64_t LazyViewController.$loadedViewController.getter()
{
  swift_retain();
  uint64_t v0 = sub_1B61B0810();
  swift_release();
  return v0;
}

id LazyViewController.__allocating_init(identifier:trigger:_:)(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5)
{
  id v11 = objc_allocWithZone(v5);
  return LazyViewController.init(identifier:trigger:_:)(a1, a2, a3, a4, a5);
}

id LazyViewController.init(identifier:trigger:_:)(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5)
{
  BOOL v6 = v5;
  uint64_t v34 = a4;
  uint64_t v35 = a5;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = sub_1B61B08B0();
  uint64_t v32 = *(void *)(v11 - 8);
  uint64_t v33 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v31 = *a3;
  uint64_t v14 = OBJC_IVAR____TtC5TeaUI18LazyViewController__loadedViewController;
  uint64_t v37 = 0;
  sub_1B5F942B4(0, (unint64_t *)&qword_1EB648DA0, (uint64_t (*)(uint64_t))sub_1B5F94280, MEMORY[0x1E4FAAC80]);
  OUTLINED_FUNCTION_51();
  uint64_t v15 = v6;
  *(void *)&v6[v14] = sub_1B61B07D0();
  uint64_t v16 = OBJC_IVAR____TtC5TeaUI18LazyViewController_eventManager;
  sub_1B5F94318();
  OUTLINED_FUNCTION_51();
  *(void *)&v15[v16] = sub_1B61B0280();
  uint64_t v17 = &v15[OBJC_IVAR____TtC5TeaUI18LazyViewController_identifier];
  *(void *)uint64_t v17 = a1;
  *((void *)v17 + 1) = a2;

  v36.receiver = v15;
  v36.super_class = ObjectType;
  id v18 = objc_msgSendSuper2(&v36, sel_initWithNibName_bundle_, 0, 0);
  sub_1B5F94374();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B61C0140;
  *(unsigned char *)(inited + 32) = v31;
  *(_WORD *)(inited + 33) = 770;
  id v20 = v18;
  sub_1B5EA77AC(inited);
  uint64_t v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAD18];
  sub_1B5F942B4(0, &qword_1EB647D40, MEMORY[0x1E4FAAD18], MEMORY[0x1E4FBBE00]);
  uint64_t v22 = v32;
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1B61BE6A0;
  sub_1B61B0880();
  sub_1B61B08A0();
  uint64_t v37 = v23;
  sub_1B5F955F4((unint64_t *)&qword_1EB642638, 255, MEMORY[0x1E4FAAD18]);
  sub_1B5F942B4(0, &qword_1EB647A98, v21, MEMORY[0x1E4FBB320]);
  sub_1B5F397B4();
  uint64_t v24 = v33;
  sub_1B61B3100();
  uint64_t v25 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v26 = (void *)swift_allocObject();
  uint64_t v27 = v34;
  uint64_t v28 = v35;
  long long v26[2] = v25;
  void v26[3] = v27;
  v26[4] = v28;
  swift_retain();
  swift_retain();
  sub_1B61B0240();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v24);
  swift_release();
  return v20;
}

void sub_1B5F94280(uint64_t a1)
{
}

void sub_1B5F942B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B5F94318()
{
  if (!qword_1EB63DD50)
  {
    sub_1B5EA9ED8();
    unint64_t v0 = sub_1B61B0290();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB63DD50);
    }
  }
}

void sub_1B5F94374()
{
  if (!qword_1EB63E478)
  {
    unint64_t v0 = sub_1B61B36F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB63E478);
    }
  }
}

id sub_1B5F943C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  id result = (id)MEMORY[0x1BA9B1EC0](v3);
  if (result)
  {
    uint64_t v5 = result;
    BOOL v6 = (void *)a2();
    id v7 = v6;
    LazyViewController.loadedViewController.setter(v6);
    objc_msgSend(v5, sel_addChildViewController_, v7);
    id result = objc_msgSend(v5, sel_view);
    if (result)
    {
      unint64_t v8 = result;
      id result = objc_msgSend(v7, sel_view);
      if (result)
      {
        uint64_t v9 = result;
        objc_msgSend(v8, sel_addSubview_, result);

        objc_msgSend(v7, sel_didMoveToParentViewController_, v5);
        id result = objc_msgSend(v7, sel_view);
        if (result)
        {
          BOOL v10 = result;
          id result = objc_msgSend(v5, sel_view);
          if (result)
          {
            uint64_t v11 = result;
            objc_msgSend(result, sel_bounds);
            double v13 = v12;
            double v15 = v14;
            double v17 = v16;
            double v19 = v18;

            objc_msgSend(v10, sel_setFrame_, v13, v15, v17, v19);
            objc_msgSend(v5, sel__updateTabBarLayout);
            sub_1B602A8B4((uint64_t)&v22);
            if (v23)
            {
              sub_1B5E30E70(&v22, (uint64_t)v24);
              uint64_t v20 = v25;
              uint64_t v21 = v26;
              __swift_project_boxed_opaque_existential_1(v24, v25);
              (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);

              return (id)__swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
            }
            else
            {

              return (id)sub_1B5E36D74((uint64_t)&v22, (unint64_t *)&qword_1EB6418F0, (unint64_t *)&unk_1EB6418E0);
            }
          }
LABEL_13:
          __break(1u);
          return result;
        }
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_12;
  }
  return result;
}

void sub_1B5F945FC()
{
  uint64_t v1 = OBJC_IVAR____TtC5TeaUI18LazyViewController__loadedViewController;
  sub_1B5F942B4(0, (unint64_t *)&qword_1EB648DA0, (uint64_t (*)(uint64_t))sub_1B5F94280, MEMORY[0x1E4FAAC80]);
  OUTLINED_FUNCTION_51();
  *(void *)&v0[v1] = sub_1B61B07D0();
  uint64_t v2 = OBJC_IVAR____TtC5TeaUI18LazyViewController_eventManager;
  sub_1B5F94318();
  OUTLINED_FUNCTION_51();
  *(void *)&v0[v2] = sub_1B61B0280();

  sub_1B61B34D0();
  __break(1u);
}

Swift::Void __swiftcall LazyViewController.viewDidLoad()()
{
  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  sub_1B61B0230();
}

Swift::Void __swiftcall LazyViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, sel_viewWillAppear_, a1);
  sub_1B61B0230();
}

Swift::Void __swiftcall LazyViewController.viewWillLayoutSubviews()()
{
  v14.receiver = v0;
  v14.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v14, sel_viewWillLayoutSubviews);
  objc_super v1 = (void *)LazyViewController.loadedViewController.getter();
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = objc_msgSend(v1, sel_view);

    if (v3)
    {
      id v4 = objc_msgSend(v0, sel_view);
      if (v4)
      {
        uint64_t v5 = v4;
        objc_msgSend(v4, sel_bounds);
        double v7 = v6;
        double v9 = v8;
        double v11 = v10;
        double v13 = v12;

        objc_msgSend(v3, sel_setFrame_, v7, v9, v11, v13);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

Swift::Void __swiftcall LazyViewController.setEditing(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  v10.receiver = v2;
  v10.super_class = (Class)swift_getObjectType();
  BOOL v5 = _;
  BOOL v6 = animated;
  objc_msgSendSuper2(&v10, sel_setEditing_animated_, v5, v6);
  LazyViewController.loadViewController()(v7);
  double v9 = v8;
  objc_msgSend(v8, sel_setEditing_animated_, v5, v6);
}

void __swiftcall LazyViewController.loadViewController()(UIViewController *__return_ptr retstr)
{
  if (!LazyViewController.loadedViewController.getter()) {
    __break(1u);
  }
}

id LazyViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  if (a2)
  {
    BOOL v6 = (void *)sub_1B61B20C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    BOOL v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void LazyViewController.init(nibName:bundle:)()
{
}

id LazyViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t LazyViewController.tabBarNavigationBarVisiblity.getter@<X0>(unsigned char *a1@<X8>)
{
  if (LazyViewController.loadedViewController.getter()
    && (sub_1B5E36C10(), sub_1B5E00AB8(0, &qword_1EB63DD70), (swift_dynamicCast() & 1) != 0))
  {
    if (*((void *)&v6 + 1))
    {
      sub_1B5E30E70(&v5, (uint64_t)v8);
      uint64_t v2 = v9;
      uint64_t v3 = v10;
      __swift_project_boxed_opaque_existential_1(v8, v9);
      (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    }
  }
  else
  {
    uint64_t v7 = 0;
    long long v5 = 0u;
    long long v6 = 0u;
  }
  uint64_t result = sub_1B5E36D74((uint64_t)&v5, (unint64_t *)&qword_1EB63DD78, &qword_1EB63DD70);
  *a1 = 1;
  return result;
}

uint64_t LazyViewController.shouldSelectOnCollapse.getter()
{
  if (!LazyViewController.loadedViewController.getter()
    || (OUTLINED_FUNCTION_4_55(), sub_1B5E00AB8(0, &qword_1EB63DD70), (OUTLINED_FUNCTION_7_1() & 1) == 0))
  {
    OUTLINED_FUNCTION_6_1();
    goto LABEL_6;
  }
  if (!v5)
  {
LABEL_6:
    sub_1B5E36D74((uint64_t)&v4, (unint64_t *)&qword_1EB63DD78, &qword_1EB63DD70);
    char v2 = 0;
    return v2 & 1;
  }
  sub_1B5E30E70(&v4, (uint64_t)v6);
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  uint64_t v0 = OUTLINED_FUNCTION_1_0();
  char v2 = v1(v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  return v2 & 1;
}

uint64_t LazyViewController.description.getter()
{
  return 0;
}

uint64_t sub_1B5F94F9C@<X0>(unsigned char *a1@<X8>)
{
  return LazyViewController.tabBarNavigationBarVisiblity.getter(a1);
}

uint64_t sub_1B5F94FC0()
{
  return LazyViewController.shouldSelectOnCollapse.getter() & 1;
}

uint64_t sub_1B5F94FE8()
{
  return LazyViewController.identifier.getter();
}

uint64_t LazyViewController.tabBarSplitViewPresentation(for:)(char a1)
{
  LOBYTE(v9[0]) = 2;
  sub_1B61B0230();
  if (LazyViewController.loadedViewController.getter()
    && (sub_1B5E36C10(), sub_1B5E00AB8(0, &qword_1EB63E0A0), (swift_dynamicCast() & 1) != 0))
  {
    if (*((void *)&v7 + 1))
    {
      uint64_t v2 = a1 & 1;
      sub_1B5E30E70(&v6, (uint64_t)v9);
      uint64_t v3 = v10;
      uint64_t v4 = v11;
      __swift_project_boxed_opaque_existential_1(v9, v10);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(v2, v3, v4);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    }
  }
  else
  {
    uint64_t v8 = 0;
    long long v6 = 0u;
    long long v7 = 0u;
  }
  sub_1B5E36D74((uint64_t)&v6, &qword_1E9DA9438, &qword_1EB63E0A0);
  uint64_t result = sub_1B61B34D0();
  __break(1u);
  return result;
}

uint64_t sub_1B5F95184(char a1)
{
  return LazyViewController.tabBarSplitViewPresentation(for:)(a1 & 1);
}

id LazyViewController.responder.getter()
{
  id result = (id)LazyViewController.loadedViewController.getter();
  if (!result)
  {
    return v1;
  }
  return result;
}

Swift::Void __swiftcall LazyViewController.textBeginEditing()()
{
  if (LazyViewController.loadedViewController.getter()
    && (OUTLINED_FUNCTION_4_55(), sub_1B5E00AB8(0, &qword_1E9DA9440), (OUTLINED_FUNCTION_7_1() & 1) != 0))
  {
    if (v3)
    {
      sub_1B5E30E70(&v2, (uint64_t)v4);
      __swift_project_boxed_opaque_existential_1(v4, v4[3]);
      uint64_t v0 = OUTLINED_FUNCTION_1_0();
      v1(v0);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
      return;
    }
  }
  else
  {
    OUTLINED_FUNCTION_6_1();
  }
  sub_1B5E36D74((uint64_t)&v2, (unint64_t *)&unk_1E9DAC940, &qword_1E9DA9440);
}

Swift::Void __swiftcall LazyViewController.textEndEditing()()
{
  if (LazyViewController.loadedViewController.getter()
    && (OUTLINED_FUNCTION_4_55(), sub_1B5E00AB8(0, &qword_1E9DA9440), (OUTLINED_FUNCTION_7_1() & 1) != 0))
  {
    if (v3)
    {
      sub_1B5E30E70(&v2, (uint64_t)v4);
      __swift_project_boxed_opaque_existential_1(v4, v4[3]);
      uint64_t v0 = OUTLINED_FUNCTION_1_0();
      v1(v0);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
      return;
    }
  }
  else
  {
    OUTLINED_FUNCTION_6_1();
  }
  sub_1B5E36D74((uint64_t)&v2, (unint64_t *)&unk_1E9DAC940, &qword_1E9DA9440);
}

void sub_1B5F95380()
{
}

void sub_1B5F953A4()
{
}

uint64_t LazyViewController.backdropGroupName.getter()
{
  if (!LazyViewController.loadedViewController.getter()
    || (OUTLINED_FUNCTION_4_55(),
        sub_1B5E00AB8(0, (unint64_t *)&unk_1EB64AC20),
        (OUTLINED_FUNCTION_7_1() & 1) == 0))
  {
    OUTLINED_FUNCTION_6_1();
    goto LABEL_6;
  }
  if (!v5)
  {
LABEL_6:
    sub_1B5E36D74((uint64_t)&v4, &qword_1EB64AC30, (unint64_t *)&unk_1EB64AC20);
    return 0;
  }
  sub_1B5E30E70(&v4, (uint64_t)v6);
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  uint64_t v0 = OUTLINED_FUNCTION_1_0();
  uint64_t v2 = v1(v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  return v2;
}

uint64_t sub_1B5F954A4()
{
  return LazyViewController.backdropGroupName.getter();
}

uint64_t sub_1B5F954C8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B5F95500()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

id sub_1B5F95540()
{
  return sub_1B5F943C0(*(void *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24));
}

unint64_t sub_1B5F95550()
{
  unint64_t result = qword_1EB63DEF0;
  if (!qword_1EB63DEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB63DEF0);
  }
  return result;
}

uint64_t sub_1B5F9559C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1B5F955F4((unint64_t *)&unk_1EB63DEF8, a2, (void (*)(uint64_t))type metadata accessor for LazyViewController);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B5F955F4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for LazyViewController()
{
  return self;
}

uint64_t sub_1B5F95660@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LazyViewController.loadedViewController.getter();
  *a1 = result;
  return result;
}

uint64_t method lookup function for LazyViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LazyViewController);
}

uint64_t dispatch thunk of LazyViewController.__allocating_init(identifier:trigger:_:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

unsigned char *storeEnumTagSinglePayload for LazyViewController.Trigger(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F95788);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LazyViewController.Trigger()
{
  return &type metadata for LazyViewController.Trigger;
}

void UITableView.register<A>(cell:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void UITableView.register<A>(headerFooterView:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1B5F957E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  sub_1B5F95888();
  id v8 = (id)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, *a5, ObjCClassFromMetadata, v8);
}

uint64_t sub_1B5F95888()
{
  return 0;
}

uint64_t UITableView.dequeue<A>(headerFooterView:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B5F95888();
  unsigned int v6 = (void *)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v4, sel_dequeueReusableHeaderFooterViewWithIdentifier_, v6);

  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = a4;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x1F4186510](v8, v9, v10, v11, v12);
}

uint64_t UITableView.dequeue<A>(cell:at:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v6 = v5;
  sub_1B5F95888();
  id v8 = (void *)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)sub_1B61AFC00();
  id v10 = objc_msgSend(v6, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v8, v9);

  return MEMORY[0x1F4186510](v10, a5, 0, 0, 0);
}

uint64_t sub_1B5F95A78()
{
  uint64_t result = type metadata accessor for ColorSectionDecorationView();
  qword_1EB6457D8 = result;
  return result;
}

uint64_t static ColorSectionDecorationItem.viewClass.getter()
{
  if (qword_1EB648E08 != -1) {
    swift_once();
  }
  return qword_1EB6457D8;
}

void ColorSectionDecorationItem.ordering.getter(uint64_t a1@<X8>)
{
}

id ColorSectionDecorationItem.color.getter()
{
  return *(id *)(v0 + 16);
}

void ColorSectionDecorationItem.pinTrait.getter(uint64_t a1@<X8>)
{
}

uint64_t ColorSectionDecorationItem.init(color:ordering:pinTrait:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  char v4 = *(unsigned char *)(a2 + 8);
  uint64_t v5 = *a3;
  char v6 = *((unsigned char *)a3 + 8);
  *(void *)a4 = *(void *)a2;
  *(unsigned char *)(a4 + 8) = v4;
  *(void *)(a4 + 16) = result;
  *(void *)(a4 + 24) = v5;
  *(unsigned char *)(a4 + 32) = v6;
  return result;
}

uint64_t static ColorSectionDecorationItem.== infix(_:_:)()
{
  return sub_1B61B2E10() & 1;
}

Swift::Void __swiftcall ColorSectionDecorationView.willMove(toSuperview:)(UIView_optional *toSuperview)
{
  v3.receiver = v1;
  v3.super_class = (Class)swift_getObjectType();
  [(UIView_optional *)&v3 willMoveToSuperview:toSuperview];
}

Swift::Void __swiftcall ColorSectionDecorationView.didMoveToSuperview()()
{
}

Swift::Void __swiftcall ColorSectionDecorationView.apply(_:)(UICollectionViewLayoutAttributes *a1)
{
  uint64_t v2 = v1;
  v16.receiver = v2;
  v16.super_class = (Class)swift_getObjectType();
  [(UICollectionViewLayoutAttributes *)&v16 applyLayoutAttributes:a1];
  type metadata accessor for BlueprintLayoutCollectionLayoutAttributes();
  uint64_t v4 = swift_dynamicCastClass();
  if (v4)
  {
    uint64_t v5 = v4 + OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_model;
    swift_beginAccess();
    sub_1B5E5881C(v5, (uint64_t)v14);
    if (v15)
    {
      sub_1B5F5C5A8();
      char v6 = a1;
      if (swift_dynamicCast())
      {
        id v7 = v13;
        id v8 = objc_msgSend(v2, sel_backgroundColor);
        if (!v8) {
          goto LABEL_11;
        }
        uint64_t v9 = v8;
        sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C90);
        id v10 = v7;
        id v11 = v9;
        LOBYTE(v9) = sub_1B61B2E10();

        if (v9)
        {
        }
        else
        {
LABEL_11:
          objc_msgSend(v2, sel_setBackgroundColor_, v7);
        }
        return;
      }
    }
    else
    {
      sub_1B5E588AC((uint64_t)v14);
    }
  }
  id v12 = objc_msgSend(v2, sel_backgroundColor);
  if (v12)
  {

    objc_msgSend(v2, sel_setBackgroundColor_, 0);
  }
}

id ColorSectionDecorationView.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_38();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_35_0();
  return objc_msgSend(v2, v3, v4);
}

id ColorSectionDecorationView.init(frame:)()
{
  OUTLINED_FUNCTION_38();
  uint64_t ObjectType = swift_getObjectType();
  double v1 = OUTLINED_FUNCTION_35_0();
  return objc_msgSendSuper2(v2, v3, v1, v0, ObjectType);
}

id ColorSectionDecorationView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id ColorSectionDecorationView.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id ColorSectionDecorationView.__deallocating_deinit()
{
  return sub_1B5E5A574((SEL *)&selRef_dealloc);
}

uint64_t initializeWithCopy for ColorSectionDecorationItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v3 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for ColorSectionDecorationItem(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  id v5 = (void *)a2[2];
  char v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v5;
  id v7 = v5;

  uint64_t v8 = a2[3];
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 24) = v8;
  return a1;
}

uint64_t assignWithTake for ColorSectionDecorationItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ColorSectionDecorationItem(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ColorSectionDecorationItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorSectionDecorationItem()
{
  return &type metadata for ColorSectionDecorationItem;
}

uint64_t type metadata accessor for ColorSectionDecorationView()
{
  return self;
}

id SelectedBackgroundView.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_38();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_35_0();
  return objc_msgSend(v2, v3, v4);
}

__C::CGRect __swiftcall SelectedBackgroundView.makeFrame(in:)(__C::CGRect in)
{
  OUTLINED_FUNCTION_38();
  unint64_t v2 = &v1[OBJC_IVAR____TtC5TeaUI22SelectedBackgroundView_styling];
  OUTLINED_FUNCTION_1_35();
  if (*v2 == 1
    || (id v3 = objc_msgSend(v1, sel_traitCollection),
        unint64_t v4 = (unint64_t)objc_msgSend(v3, sel_horizontalSizeClass),
        v3,
        (v4 | 2) == 2))
  {
    OUTLINED_FUNCTION_1_35();
    double v5 = OUTLINED_FUNCTION_35_0();
    UIEdgeInsetsInsetRect(v5, v6, v7, v8, v9, v10);
  }
  double v11 = OUTLINED_FUNCTION_35_0();
  result.size.CGFloat height = v14;
  result.size.CGFloat width = v13;
  result.origin.CGFloat y = v12;
  result.origin.CGFloat x = v11;
  return result;
}

BOOL static SelectedBackgroundView.Styling.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SelectedBackgroundView.Styling.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t SelectedBackgroundView.Styling.hashValue.getter()
{
  return sub_1B61B3940();
}

double SelectedBackgroundView.insets.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5TeaUI22SelectedBackgroundView_insets;
  OUTLINED_FUNCTION_1_35();
  return *(double *)v1;
}

uint64_t SelectedBackgroundView.insets.setter()
{
  OUTLINED_FUNCTION_38();
  uint64_t result = OUTLINED_FUNCTION_1();
  void *v0 = v4;
  v0[1] = v3;
  v0[2] = v2;
  v0[3] = v1;
  return result;
}

uint64_t (*SelectedBackgroundView.insets.modify())()
{
  return j__swift_endAccess;
}

double SelectedBackgroundView.cornerRadius.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5TeaUI22SelectedBackgroundView_cornerRadius;
  OUTLINED_FUNCTION_1_35();
  return *(double *)v1;
}

double sub_1B5F964EC@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (double *)(*a1 + OBJC_IVAR____TtC5TeaUI22SelectedBackgroundView_cornerRadius);
  swift_beginAccess();
  double result = *v3;
  *a2 = *(void *)v3;
  return result;
}

void SelectedBackgroundView.cornerRadius.setter(double a1)
{
  OUTLINED_FUNCTION_1();
  *uint64_t v1 = a1;
  sub_1B5F96584();
}

void sub_1B5F96584()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC5TeaUI22SelectedBackgroundView_styling];
  swift_beginAccess();
  if (*v1 == 1
    || ((id v2 = objc_msgSend(v0, sel_traitCollection),
         id v3 = objc_msgSend(v2, sel_horizontalSizeClass),
         v2,
         v3)
      ? (BOOL v4 = v3 == (id)2)
      : (BOOL v4 = 1),
        v4))
  {
    id v5 = objc_msgSend(v0, sel_layer);
    double v6 = (double *)&v0[OBJC_IVAR____TtC5TeaUI22SelectedBackgroundView_cornerRadius];
    swift_beginAccess();
    objc_msgSend(v5, sel_setCornerRadius_, *v6);
LABEL_8:

    return;
  }
  if (v3 == (id)1)
  {
    id v5 = objc_msgSend(v0, sel_layer);
    objc_msgSend(v5, sel_setCornerRadius_, 0.0);
    goto LABEL_8;
  }
}

void (*SelectedBackgroundView.cornerRadius.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_3_2();
  return sub_1B5F96704;
}

void sub_1B5F96704(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1B5F96584();
  }
}

uint64_t SelectedBackgroundView.styling.getter@<X0>(unsigned char *a1@<X8>)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI22SelectedBackgroundView_styling);
  uint64_t result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t SelectedBackgroundView.styling.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = OUTLINED_FUNCTION_1();
  *uint64_t v1 = v2;
  return result;
}

uint64_t (*SelectedBackgroundView.styling.modify())()
{
  return j_j__swift_endAccess;
}

id SelectedBackgroundView.init(frame:)()
{
  OUTLINED_FUNCTION_38();
  uint64_t ObjectType = swift_getObjectType();
  char v2 = (_OWORD *)(v0 + OBJC_IVAR____TtC5TeaUI22SelectedBackgroundView_insets);
  long long v3 = *(_OWORD *)(MEMORY[0x1E4FB2848] + 16);
  _OWORD *v2 = *MEMORY[0x1E4FB2848];
  v2[1] = v3;
  *(void *)(v0 + OBJC_IVAR____TtC5TeaUI22SelectedBackgroundView_cornerRadius) = 0x4024000000000000;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC5TeaUI22SelectedBackgroundView_styling) = 0;
  uint64_t v11 = ObjectType;
  double v4 = OUTLINED_FUNCTION_35_0();
  id v7 = objc_msgSendSuper2(v5, v6, v4, v0, v11);
  uint64_t v8 = qword_1EB648D30;
  id v9 = v7;
  if (v8 != -1) {
    swift_once();
  }
  objc_msgSend(v9, sel_setBackgroundColor_, qword_1EB647C88);

  return v9;
}

Swift::Void __swiftcall SelectedBackgroundView.layoutSubviews()()
{
  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, sel_layoutSubviews);
  sub_1B5F96584();
}

id SelectedBackgroundView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void SelectedBackgroundView.init(coder:)()
{
  objc_super v1 = &v0[OBJC_IVAR____TtC5TeaUI22SelectedBackgroundView_insets];
  long long v2 = *(_OWORD *)(MEMORY[0x1E4FB2848] + 16);
  *objc_super v1 = *MEMORY[0x1E4FB2848];
  v1[1] = v2;
  *(void *)&v0[OBJC_IVAR____TtC5TeaUI22SelectedBackgroundView_cornerRadius] = 0x4024000000000000;
  v0[OBJC_IVAR____TtC5TeaUI22SelectedBackgroundView_styling] = 0;

  sub_1B61B34D0();
  __break(1u);
}

Swift::Void __swiftcall SelectedBackgroundView.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  Class isa = a1.value.super.isa;
  v3.receiver = v1;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, sel_traitCollectionDidChange_, isa);
  sub_1B5F96584();
}

id SelectedBackgroundView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1B5F96B8C()
{
  unint64_t result = qword_1E9DAAC88;
  if (!qword_1E9DAAC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAAC88);
  }
  return result;
}

void sub_1B5F96BDC(double *a1)
{
}

uint64_t type metadata accessor for SelectedBackgroundView()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for SelectedBackgroundView.Styling(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F96CF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SelectedBackgroundView.Styling()
{
  return &type metadata for SelectedBackgroundView.Styling;
}

void sub_1B5F96D2C(unint64_t a1)
{
  if (a1 >> 62)
  {
    OUTLINED_FUNCTION_14_1();
    uint64_t v2 = sub_1B61B3530();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1B5E4ECE0();
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v3 = 0;
      uint64_t v4 = v17;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v5 = MEMORY[0x1BA9B04B0](v3, a1);
        }
        else
        {
          uint64_t v5 = *(void *)(a1 + 8 * v3 + 32);
          swift_retain();
        }
        uint64_t v6 = type metadata accessor for BlueprintInfiniteScrollRequest();
        uint64_t v15 = v6;
        unint64_t v7 = sub_1B5F982C8();
        unint64_t v16 = v7;
        uint64_t v17 = v4;
        v14[0] = v5;
        unint64_t v8 = *(void *)(v4 + 16);
        if (v8 >= *(void *)(v4 + 24) >> 1)
        {
          sub_1B5E4ECE0();
          uint64_t v6 = v15;
          uint64_t v9 = v16;
        }
        else
        {
          uint64_t v9 = v7;
        }
        ++v3;
        uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v6);
        MEMORY[0x1F4188790](v10);
        double v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v13 + 16))(v12);
        sub_1B5F98230(v8, (uint64_t)v12, &v17, v6, v9);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
        uint64_t v4 = v17;
      }
      while (v2 != v3);
    }
  }
}

void sub_1B5F96F20(unint64_t a1)
{
  if (a1 >> 62)
  {
    OUTLINED_FUNCTION_14_1();
    uint64_t v2 = sub_1B61B3530();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    sub_1B5E4ED80();
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          MEMORY[0x1BA9B04B0](i, a1);
        }
        else {
          id v4 = *(id *)(a1 + 8 * i + 32);
        }
        type metadata accessor for CGColor(0);
        swift_dynamicCast();
        uint64_t v5 = v8;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B5E4ED80();
          uint64_t v5 = v8;
        }
        unint64_t v6 = *(void *)(v5 + 16);
        if (v6 >= *(void *)(v5 + 24) >> 1)
        {
          sub_1B5E4ED80();
          uint64_t v5 = v8;
        }
        *(void *)(v5 + 16) = v6 + 1;
        sub_1B5E30E88(&v7, (_OWORD *)(v5 + 32 * v6 + 32));
      }
    }
  }
}

void sub_1B5F97094(unint64_t a1)
{
  if (a1 >> 62)
  {
    sub_1B61B1F70();
    uint64_t v2 = sub_1B61B3530();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    sub_1B5E4ED80();
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          MEMORY[0x1BA9B04B0](i, a1);
        }
        else {
          swift_unknownObjectRetain();
        }
        sub_1B5F97398();
        swift_dynamicCast();
        uint64_t v4 = v7;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B5E4ED80();
          uint64_t v4 = v7;
        }
        unint64_t v5 = *(void *)(v4 + 16);
        if (v5 >= *(void *)(v4 + 24) >> 1)
        {
          sub_1B5E4ED80();
          uint64_t v4 = v7;
        }
        *(void *)(v4 + 16) = v5 + 1;
        sub_1B5E30E88(&v6, (_OWORD *)(v4 + 32 * v5 + 32));
      }
    }
  }
}

id SharingActivityProviderType.activityItemsConfiguration.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1B5DFF760(0, &qword_1E9DAAC90);
  id v4 = objc_msgSend(v1, sel_activityItemSources);
  sub_1B5F97398();
  sub_1B61B24E0();

  id v5 = sub_1B5F973F0();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = v2;
  v10[4] = sub_1B5F97504;
  v10[5] = v6;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  v10[2] = sub_1B5F9750C;
  v10[3] = &block_descriptor_41;
  uint64_t v7 = _Block_copy(v10);
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v5, sel_setApplicationActivitiesProvider_, v7);
  _Block_release(v7);
  id v8 = objc_msgSend(v2, sel_excludedActivityTypes);
  objc_msgSend(v5, sel_ts_setExcludedActivityTypes_, v8);

  return v5;
}

unint64_t sub_1B5F97398()
{
  unint64_t result = qword_1E9DAAC98;
  if (!qword_1E9DAAC98)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9DAAC98);
  }
  return result;
}

id sub_1B5F973F0()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1B5F97398();
  objc_super v1 = (void *)sub_1B61B24D0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initTSWithActivityItemSources_, v1);

  return v2;
}

uint64_t sub_1B5F97468(void *a1)
{
  id v1 = objc_msgSend(a1, sel_activities);
  sub_1B5DFF760(0, &qword_1E9DAAD28);
  uint64_t v2 = sub_1B61B24E0();

  return v2;
}

uint64_t sub_1B5F974CC()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B5F97504()
{
  return sub_1B5F97468(*(void **)(v0 + 24));
}

id sub_1B5F9750C(uint64_t a1)
{
  id v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  swift_release();
  sub_1B5DFF760(0, &qword_1E9DAAD28);
  uint64_t v3 = (void *)sub_1B61B24D0();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t SharingActivityProvider.activityItemSources.getter()
{
  return sub_1B5E8CD60();
}

uint64_t SharingActivityProvider.activityItemSources.setter(uint64_t a1)
{
  return sub_1B5F978EC(a1, &OBJC_IVAR___TSSharingActivityProvider_activityItemSources);
}

uint64_t (*SharingActivityProvider.activityItemSources.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t SharingActivityProvider.activities.getter()
{
  return sub_1B5E8CD60();
}

uint64_t SharingActivityProvider.activities.setter(uint64_t a1)
{
  return sub_1B5F978EC(a1, &OBJC_IVAR___TSSharingActivityProvider_activities);
}

uint64_t (*SharingActivityProvider.activities.modify())()
{
  return j_j__swift_endAccess;
}

id sub_1B5F977BC(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(void))
{
  a3();
  a4(0);
  id v5 = (void *)sub_1B61B24D0();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t SharingActivityProvider.excludedActivityTypes.getter()
{
  return sub_1B5E8CD60();
}

void sub_1B5F9785C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(uint64_t))
{
  a4(0);
  uint64_t v7 = sub_1B61B24E0();
  id v8 = a1;
  a5(v7);
}

uint64_t SharingActivityProvider.excludedActivityTypes.setter(uint64_t a1)
{
  return sub_1B5F978EC(a1, &OBJC_IVAR___TSSharingActivityProvider_excludedActivityTypes);
}

uint64_t sub_1B5F978EC(uint64_t a1, uint64_t *a2)
{
  OUTLINED_FUNCTION_3_58(*a2);
  swift_beginAccess();
  void *v2 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*SharingActivityProvider.excludedActivityTypes.modify())()
{
  return j__swift_endAccess;
}

uint64_t SharingActivityProvider.linkPresentationSource.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_3_58(OBJC_IVAR___TSSharingActivityProvider_linkPresentationSource);
  swift_beginAccess();
  return sub_1B5E5F644(v1, a1);
}

uint64_t SharingActivityProvider.linkPresentationSource.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_3_58(OBJC_IVAR___TSSharingActivityProvider_linkPresentationSource);
  swift_beginAccess();
  sub_1B5F0FFFC(a1, v1);
  return swift_endAccess();
}

uint64_t (*SharingActivityProvider.linkPresentationSource.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t SharingActivityProvider.activityItems.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___TSSharingActivityProvider_linkPresentationSource;
  OUTLINED_FUNCTION_1_35();
  sub_1B5E5F644(v1, (uint64_t)&v10);
  if (v11)
  {
    sub_1B5E30E88(&v10, v12);
    OUTLINED_FUNCTION_1_35();
    unint64_t v2 = sub_1B61B1F70();
    sub_1B5F97094(v2);
    uint64_t v4 = v3;
    swift_bridgeObjectRelease();
    sub_1B5F97DA4(0, (unint64_t *)&qword_1EB647D90, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B61BE690;
    sub_1B5E17688((uint64_t)v12, inited + 32);
    sub_1B5E515AC();
    uint64_t v6 = v4;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    sub_1B5E15B34((uint64_t)&v10);
    OUTLINED_FUNCTION_1_35();
    unint64_t v7 = sub_1B61B1F70();
    sub_1B5F97094(v7);
    uint64_t v6 = v8;
    swift_bridgeObjectRelease();
  }
  return v6;
}

void sub_1B5F97DA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBC840] + 8);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

id SharingActivityProvider.__allocating_init(activityItems:activitySources:excludedActivityTypes:linkPresentationSource:)()
{
  id v0 = objc_allocWithZone((Class)OUTLINED_FUNCTION_2_8());
  return SharingActivityProvider.init(activityItems:activitySources:excludedActivityTypes:linkPresentationSource:)();
}

id SharingActivityProvider.init(activityItems:activitySources:excludedActivityTypes:linkPresentationSource:)()
{
  OUTLINED_FUNCTION_2_8();
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = &v1[OBJC_IVAR___TSSharingActivityProvider_linkPresentationSource];
  *(_OWORD *)uint64_t v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *(void *)&v1[OBJC_IVAR___TSSharingActivityProvider_activities] = v4;
  *(void *)&v1[OBJC_IVAR___TSSharingActivityProvider_activityItemSources] = v3;
  *(void *)&v1[OBJC_IVAR___TSSharingActivityProvider_excludedActivityTypes] = v2;
  swift_beginAccess();
  unint64_t v7 = v1;
  sub_1B5F97F1C(v0, (uint64_t)v6);
  swift_endAccess();

  v10.receiver = v7;
  v10.super_class = ObjectType;
  id v8 = objc_msgSendSuper2(&v10, sel_init);
  sub_1B5E15B34(v0);
  return v8;
}

uint64_t sub_1B5F97F1C(uint64_t a1, uint64_t a2)
{
  sub_1B5F97DA4(0, (unint64_t *)&qword_1EB64CAC0, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

id static SharingActivityProvider.empty.getter()
{
  id v1 = objc_allocWithZone(v0);
  return SharingActivityProvider.init(activityItems:activitySources:excludedActivityTypes:linkPresentationSource:)();
}

id SharingActivityProvider.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SharingActivityProvider.init()()
{
}

id SharingActivityProvider.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SharingActivityProvider()
{
  return self;
}

uint64_t method lookup function for SharingActivityProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharingActivityProvider);
}

uint64_t dispatch thunk of SharingActivityProvider.__allocating_init(activityItems:activitySources:excludedActivityTypes:linkPresentationSource:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1B5F98230(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_0, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_1B5E30E70(&v12, v10 + 40 * a1 + 32);
}

unint64_t sub_1B5F982C8()
{
  unint64_t result = qword_1EB645FC0;
  if (!qword_1EB645FC0)
  {
    type metadata accessor for BlueprintInfiniteScrollRequest();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB645FC0);
  }
  return result;
}

uint64_t static MotionDisabledTransform.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t *)a1;
  int v3 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v4 = *(uint64_t *)a2;
  int v5 = *(unsigned __int8 *)(a2 + 8);
  if (!*(unsigned char *)(a1 + 8))
  {
    if (*(unsigned char *)(a2 + 8))
    {
LABEL_16:
      sub_1B5E8C330(v4, v5);
      sub_1B5E8C348(v2, v3);
      sub_1B5E8C348(v4, v5);
LABEL_17:
      char v6 = 0;
      return v6 & 1;
    }
    sub_1B5E8C348(*(void *)a1, 0);
    sub_1B5E8C348(v4, 0);
    if (*(double *)&v2 != *(double *)&v4) {
      goto LABEL_17;
    }
LABEL_14:
    char v6 = 1;
    return v6 & 1;
  }
  if (v3 != 1)
  {
    if (v5 != 2 || v4 != 0) {
      goto LABEL_16;
    }
    sub_1B5E8C348(*(void *)a1, 2);
    sub_1B5E8C348(0, 2);
    goto LABEL_14;
  }
  if (v5 != 1)
  {
    swift_retain();
    goto LABEL_16;
  }
  double v9 = *(double *)a2;
  uint64_t v10 = v2;
  sub_1B5E8C330(v4, 1);
  sub_1B5E8C330(v2, 1);
  sub_1B5E8C330(v4, 1);
  sub_1B5E8C330(v2, 1);
  char v6 = static MotionTransform.Transform.== infix(_:_:)(&v10, (unint64_t *)&v9);
  sub_1B5E8C348(v2, 1);
  sub_1B5E8C348(v4, 1);
  sub_1B5E8C348(v4, 1);
  sub_1B5E8C348(v2, 1);
  return v6 & 1;
}

uint64_t initializeBufferWithCopyOfBuffer for MotionDisabledTransform(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1B5E8C330(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for MotionDisabledTransform(uint64_t a1)
{
  return sub_1B5E8C348(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t assignWithCopy for MotionDisabledTransform(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1B5E8C330(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1B5E8C348(v5, v6);
  return a1;
}

uint64_t assignWithTake for MotionDisabledTransform(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1B5E8C348(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for MotionDisabledTransform()
{
  return &type metadata for MotionDisabledTransform;
}

uint64_t ComplexImageProcessorRequest.Mask.identifier.getter()
{
  sub_1B5F986C4(v0, __dst);
  sub_1B5F986C4(__dst, v10);
  sub_1B5F98750(0, (unint64_t *)&qword_1EB647D68, MEMORY[0x1E4FBBE00]);
  id v1 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_0_76(v1, (__n128)xmmword_1B61BE6A0);
  sub_1B5F986D8((uint64_t)v10, (uint64_t)v11);
  int v2 = sub_1B5F98734((uint64_t)v11);
  char v3 = (unint64_t *)sub_1B5F98740((uint64_t)v11);
  if (v2 == 1)
  {
    unint64_t v4 = *v3;
    uint64_t v5 = sub_1B61B1F70();
  }
  else
  {
    OUTLINED_FUNCTION_2_70();
    GradientDescriptor.identifier.getter();
    unint64_t v4 = v6;
    uint64_t v5 = v7;
  }
  v1[3].n128_u64[0] = v4;
  v1[3].n128_u64[1] = v5;
  sub_1B5F98750(0, (unint64_t *)&qword_1EB647AE8, MEMORY[0x1E4FBB320]);
  sub_1B5E1A168();
  OUTLINED_FUNCTION_4_56();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_60();
}

void *sub_1B5F986C4(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x90uLL);
}

uint64_t sub_1B5F986D8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B5F98734(uint64_t a1)
{
  return *(void *)(a1 + 120) >> 63;
}

uint64_t sub_1B5F98740(uint64_t result)
{
  *(void *)(result + 120) &= ~0x8000000000000000;
  return result;
}

void sub_1B5F98750(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t ComplexImageProcessorRequest.Blend.identifier.getter()
{
  sub_1B5F9953C(v0, __dst);
  sub_1B5F9953C(__dst, v20);
  if (sub_1B5F99484((uint64_t)v20) == 1)
  {
    id v1 = *(void **)sub_1B5F99490((uint64_t)v20);
    sub_1B5F98750(0, (unint64_t *)&qword_1EB647D68, MEMORY[0x1E4FBBE00]);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1B61C0140;
    *(void *)(v2 + 32) = 0x726F6C6F63;
    *(void *)(v2 + 40) = 0xE500000000000000;
    sub_1B5F9953C(__dst, v18);
    id v3 = *(id *)sub_1B5F99490((uint64_t)v18);
    id v4 = objc_msgSend(v1, sel_description);
    uint64_t v5 = sub_1B61B20F0();
    uint64_t v7 = v6;

    *(void *)(v2 + 48) = v5;
    *(void *)(v2 + 56) = v7;
    type metadata accessor for CGBlendMode(0);
    *(void *)(v2 + 64) = sub_1B61B2160();
    *(void *)(v2 + 72) = v8;
    sub_1B5F98750(0, (unint64_t *)&qword_1EB647AE8, MEMORY[0x1E4FBB320]);
    sub_1B5E1A168();
    OUTLINED_FUNCTION_4_56();
    OUTLINED_FUNCTION_6_43();
    sub_1B5F996A0((uint64_t)__dst);
  }
  else
  {
    uint64_t v9 = sub_1B5F99490((uint64_t)v20);
    sub_1B5F98750(0, (unint64_t *)&qword_1EB647D68, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (__n128 *)swift_allocObject();
    OUTLINED_FUNCTION_0_76(v10, (__n128)xmmword_1B61C0140);
    sub_1B5F986D8(v9, (uint64_t)v18);
    LODWORD(v9) = sub_1B5F98734((uint64_t)v18);
    uint64_t v11 = (unint64_t *)sub_1B5F98740((uint64_t)v18);
    if (v9 == 1)
    {
      unint64_t v12 = *v11;
      uint64_t v13 = sub_1B61B1F70();
    }
    else
    {
      OUTLINED_FUNCTION_2_70();
      GradientDescriptor.identifier.getter();
      unint64_t v12 = v14;
      uint64_t v13 = v15;
    }
    v10[3].n128_u64[0] = v12;
    v10[3].n128_u64[1] = v13;
    type metadata accessor for CGBlendMode(0);
    v10[4].n128_u64[0] = sub_1B61B2160();
    v10[4].n128_u64[1] = v16;
    sub_1B5F98750(0, (unint64_t *)&qword_1EB647AE8, MEMORY[0x1E4FBB320]);
    sub_1B5E1A168();
    OUTLINED_FUNCTION_4_56();
    OUTLINED_FUNCTION_6_43();
  }
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_60();
}

uint64_t ComplexImageProcessorRequest.Instruction.identifier.getter()
{
  sub_1B5F9953C(v0, __src);
  sub_1B5F9953C(__src, v39);
  switch(sub_1B5F99550((uint64_t)v39))
  {
    case 1u:
      uint64_t v6 = (void *)sub_1B5F99690((uint64_t)v39);
      sub_1B5F9953C(v6, &v36);
      ComplexImageProcessorRequest.Blend.identifier.getter();
      goto LABEL_6;
    case 2u:
      uint64_t v7 = sub_1B5F99690((uint64_t)v39);
      char v8 = *(unsigned char *)(v7 + 16);
      long long v36 = *(_OWORD *)v7;
      char v37 = v8;
      CoreImageFilterDescriptor.identifier.getter();
LABEL_6:
      OUTLINED_FUNCTION_6_43();
      break;
    case 3u:
      sub_1B5F99690((uint64_t)v39);
      *(void *)&long long v36 = 0x3A657A69736572;
      *((void *)&v36 + 1) = 0xE700000000000000;
      _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
      swift_bridgeObjectRelease();
      _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
      sub_1B61B2730();
      _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
      swift_bridgeObjectRelease();
      _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
      sub_1B61B2730();
      _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
      swift_bridgeObjectRelease();
      break;
    case 4u:
      uint64_t v9 = sub_1B5F99690((uint64_t)v39);
      long long v24 = *(_OWORD *)(v9 + 16);
      uint64_t v10 = *(void *)(v9 + 32);
      uint64_t v11 = *(void *)(v9 + 40);
      uint64_t v12 = *(void *)(v9 + 56);
      uint64_t v13 = *(void *)(v9 + 72);
      uint64_t v14 = *(void *)(v9 + 80);
      char v15 = *(unsigned char *)(v9 + 88);
      *(void *)&long long v33 = 0;
      *((void *)&v33 + 1) = 0xE000000000000000;
      sub_1B5F9953C(__src, &v36);
      id v16 = *(id *)(sub_1B5F99690((uint64_t)&v36) + 80);
      sub_1B61B3290();
      __dst[0] = v33;
      _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
      type metadata accessor for CGSize(0);
      OUTLINED_FUNCTION_3_59();
      OUTLINED_FUNCTION_1_78();
      *((void *)&v33 + 1) = *((void *)&v24 + 1);
      uint64_t v34 = v10;
      uint64_t v35 = v11;
      type metadata accessor for CGRect(0);
      OUTLINED_FUNCTION_3_59();
      OUTLINED_FUNCTION_1_78();
      sub_1B61B2730();
      _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_1_78();
      *(void *)&long long v33 = v12;
      type metadata accessor for UIRectCorner(0);
      OUTLINED_FUNCTION_3_59();
      OUTLINED_FUNCTION_1_78();
      sub_1B61B2730();
      _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_1_78();
      if (v14)
      {
        *(void *)&long long v33 = v13;
        *((void *)&v33 + 1) = v14;
        LOBYTE(v34) = v15;
        ImageBorder.cacheIdentifier.getter();
      }
      _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
      swift_bridgeObjectRelease();
      _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
      sub_1B5F996A0((uint64_t)__src);
      break;
    default:
      uint64_t v2 = (void *)sub_1B5F99690((uint64_t)v39);
      sub_1B5F986C4(v2, __dst);
      sub_1B5F98750(0, (unint64_t *)&qword_1EB647D68, MEMORY[0x1E4FBBE00]);
      id v3 = (__n128 *)swift_allocObject();
      OUTLINED_FUNCTION_0_76(v3, (__n128)xmmword_1B61BE6A0);
      sub_1B5F986D8((uint64_t)__dst, (uint64_t)&v33);
      if (sub_1B5F98734((uint64_t)&v33) == 1)
      {
        id v4 = (uint64_t **)sub_1B5F98740((uint64_t)&v33);
        uint64_t v5 = *v4;
        unint64_t v1 = (unint64_t)v4[1];
        sub_1B5F996A0((uint64_t)__src);
        sub_1B61B1F70();
      }
      else
      {
        sub_1B5F98740((uint64_t)&v33);
        OUTLINED_FUNCTION_2_70();
        uint64_t v25 = v17;
        long long v26 = *(_OWORD *)(v18 + 8);
        long long v27 = *(_OWORD *)(v18 + 24);
        uint64_t v28 = v19;
        char v29 = v20;
        long long v30 = *(_OWORD *)(v18 + 56);
        char v31 = v21;
        sub_1B5F9953C(__src, &v36);
        long long v22 = (uint64_t *)sub_1B5F99690((uint64_t)&v36);
        sub_1B5F998B4(v22);
        uint64_t v5 = &v25;
        GradientDescriptor.identifier.getter();
        OUTLINED_FUNCTION_6_43();
      }
      v3[3].n128_u64[0] = (unint64_t)v5;
      v3[3].n128_u64[1] = v1;
      *(void *)&long long v36 = v3;
      sub_1B5F98750(0, (unint64_t *)&qword_1EB647AE8, MEMORY[0x1E4FBB320]);
      sub_1B5E1A168();
      OUTLINED_FUNCTION_4_56();
      swift_bridgeObjectRelease();
      sub_1B5F996A0((uint64_t)__src);
      break;
  }
  return OUTLINED_FUNCTION_60();
}

uint64_t ComplexImageProcessorRequest.assetHandles.getter()
{
  return sub_1B61B1F70();
}

uint64_t ComplexImageProcessorRequest.cacheIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_1B61B1F70();
  return v1;
}

uint64_t ComplexImageProcessorRequest.__allocating_init(assetHandle:instructions:size:imageRenderingMode:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  char v11 = a5 & 1;
  uint64_t v12 = swift_allocObject();
  ComplexImageProcessorRequest.init(assetHandle:instructions:size:imageRenderingMode:)(a1, a2, a3, a4, v11, a6);
  return v12;
}

uint64_t ComplexImageProcessorRequest.init(assetHandle:instructions:size:imageRenderingMode:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  char v12 = a5 & 1;
  sub_1B5EDC044();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B61BE690;
  *(void *)(inited + 32) = 0x6567616D69;
  *(void *)(inited + 40) = 0xE500000000000000;
  sub_1B5E176E4((uint64_t)a1, inited + 48);
  sub_1B5EDC104();
  *(void *)(v6 + 16) = sub_1B61B1F50();
  sub_1B5E176E4((uint64_t)a1, v6 + 40);
  *(void *)(v6 + 80) = a2;
  uint64_t v14 = sub_1B61B1F70();
  uint64_t v15 = sub_1B5F990EC(v14, a3, a4, v12, a1, a6);
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(void *)(v6 + 24) = v15;
  *(void *)(v6 + 32) = v17;
  *(void *)(v6 + 88) = a3;
  *(void *)(v6 + 96) = a4;
  *(unsigned char *)(v6 + 104) = v12;
  *(void *)(v6 + 112) = a6;
  return v6;
}

uint64_t sub_1B5F990EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5, uint64_t a6)
{
  uint64_t v6 = a6;
  uint64_t v9 = a3;
  uint64_t v10 = a2;
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    uint64_t v28 = MEMORY[0x1E4FBC860];
    sub_1B5E4EAE0();
    uint64_t v12 = v28;
    uint64_t v14 = (char *)(a1 + 32);
    do
    {
      sub_1B5F9953C(v14, __dst);
      sub_1B5F9953C(__dst, v26);
      uint64_t v15 = ComplexImageProcessorRequest.Instruction.identifier.getter();
      uint64_t v17 = v16;
      uint64_t v28 = v12;
      unint64_t v18 = *(void *)(v12 + 16);
      if (v18 >= *(void *)(v12 + 24) >> 1)
      {
        sub_1B5E4EAE0();
        uint64_t v12 = v28;
      }
      *(void *)(v12 + 16) = v18 + 1;
      uint64_t v19 = v12 + 16 * v18;
      *(void *)(v19 + 32) = v15;
      *(void *)(v19 + 40) = v17;
      v14 += 152;
      --v11;
    }
    while (v11);
    uint64_t v9 = a3;
    uint64_t v6 = a6;
    uint64_t v10 = a2;
  }
  __dst[0] = 0;
  __dst[1] = 0xE000000000000000;
  uint64_t v20 = a5[3];
  uint64_t v21 = a5[4];
  __swift_project_boxed_opaque_existential_1(a5, v20);
  (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v20, v21);
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  if ((a4 & 1) == 0)
  {
    _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
    v26[0] = v10;
    v26[1] = v9;
    type metadata accessor for CGSize(0);
    sub_1B61B3440();
  }
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  v26[0] = v6;
  type metadata accessor for RenderingMode(0);
  sub_1B61B3440();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  v26[0] = v12;
  sub_1B5F98750(0, (unint64_t *)&qword_1EB647AE8, MEMORY[0x1E4FBB320]);
  sub_1B5E1A168();
  sub_1B61B2070();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  return __dst[0];
}

uint64_t ComplexImageProcessorRequest.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ComplexImageProcessorRequest.__deallocating_deinit()
{
  ComplexImageProcessorRequest.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B5F9943C()
{
  return ComplexImageProcessorRequest.assetHandles.getter();
}

uint64_t sub_1B5F99460()
{
  return ComplexImageProcessorRequest.cacheIdentifier.getter();
}

uint64_t sub_1B5F99484(uint64_t a1)
{
  return (*(void *)(a1 + 120) >> 62) & 1;
}

uint64_t sub_1B5F99490(uint64_t result)
{
  *(void *)(result + 120) &= ~0x4000000000000000uLL;
  return result;
}

void sub_1B5F994A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if ((a16 & 0x4000000000000000) != 0) {

  }
  else {
    sub_1B5F994D8((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
  }
}

uint64_t sub_1B5F994D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (a16 < 0) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1B5F9953C(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x94uLL);
}

uint64_t sub_1B5F99550(uint64_t a1)
{
  return (*(void *)(a1 + 120) >> 59) & 7;
}

void sub_1B5F9955C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  switch((a16 >> 59) & 7)
  {
    case 0uLL:
      sub_1B5F994D8((uint64_t)a1, (uint64_t)a2, a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)a11, a12, a13, a14, a15, a16);
      break;
    case 1uLL:
      unint64_t v17 = a16 & 0xC7FFFFFFFFFFFFFFLL;
      sub_1B5F994A0(a1, (uint64_t)a2, a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)a11, a12, a13, a14, a15, v17);
      break;
    case 2uLL:
      sub_1B5F99648(a1, a2, a3);
      break;
    case 4uLL:

      break;
    default:
      return;
  }
}

void sub_1B5F99648(void *a1, void *a2, unsigned __int8 a3)
{
  if (a3 <= 1u)
  {
  }
}

uint64_t sub_1B5F99690(uint64_t result)
{
  *(void *)(result + 120) &= 0xC7FFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_1B5F996A0(uint64_t a1)
{
  OUTLINED_FUNCTION_5_42();
  OUTLINED_FUNCTION_8_30();
  v2();
  return a1;
}

id sub_1B5F996F8(id result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  switch((a16 >> 59) & 7)
  {
    case 0uLL:
      unint64_t result = (id)sub_1B5F997E4((uint64_t)result, (uint64_t)a2, a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)a11, a12, a13, a14, a15, a16);
      break;
    case 1uLL:
      unint64_t v17 = a16 & 0xC7FFFFFFFFFFFFFFLL;
      unint64_t result = sub_1B5F99834(result, (uint64_t)a2, a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)a11, a12, a13, a14, a15, v17);
      break;
    case 2uLL:
      unint64_t result = sub_1B5F9986C(result, a2, a3);
      break;
    case 4uLL:
      unint64_t result = a11;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B5F997E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (a16 < 0) {
    sub_1B61B1F70();
  }
  sub_1B61B1F70();
  return sub_1B61B1F70();
}

id sub_1B5F99834(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if ((a16 & 0x4000000000000000) != 0) {
    return a1;
  }
  else {
    return (id)sub_1B5F997E4((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
  }
}

id sub_1B5F9986C(id result, void *a2, unsigned __int8 a3)
{
  if (a3 <= 1u)
  {
    id v4 = result;
    return a2;
  }
  return result;
}

uint64_t *sub_1B5F998B4(uint64_t *a1)
{
  return a1;
}

uint64_t type metadata accessor for ComplexImageProcessorRequest()
{
  return self;
}

uint64_t method lookup function for ComplexImageProcessorRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ComplexImageProcessorRequest);
}

uint64_t dispatch thunk of ComplexImageProcessorRequest.__allocating_init(assetHandle:instructions:size:imageRenderingMode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v5 + 128))(a1, a2, a3, a4, a5 & 1);
}

uint64_t destroy for Gradient(uint64_t *a1)
{
  return sub_1B5F994D8(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15]);
}

uint64_t *initializeWithCopy for Gradient(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v13 = a2[9];
  uint64_t v14 = a2[10];
  uint64_t v15 = a2[11];
  uint64_t v16 = a2[12];
  uint64_t v17 = a2[13];
  uint64_t v18 = a2[14];
  uint64_t v19 = a2[15];
  uint64_t v20 = a2[16];
  uint64_t v21 = a2[17];
  sub_1B5F997E4(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18, v19);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  a1[15] = v19;
  a1[16] = v20;
  a1[17] = v21;
  return a1;
}

uint64_t assignWithCopy for Gradient(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v25 = a2[9];
  uint64_t v26 = a2[10];
  uint64_t v27 = a2[11];
  uint64_t v28 = a2[12];
  uint64_t v29 = a2[13];
  uint64_t v30 = a2[14];
  uint64_t v31 = a2[15];
  uint64_t v32 = a2[16];
  uint64_t v33 = a2[17];
  sub_1B5F997E4(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v25, v26, v27, v28, v29, v30, v31);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v25;
  *(void *)(a1 + 80) = v26;
  *(void *)(a1 + 88) = v27;
  *(void *)(a1 + 96) = v28;
  *(void *)(a1 + 104) = v29;
  *(void *)(a1 + 112) = v30;
  *(void *)(a1 + 120) = v31;
  *(void *)(a1 + 128) = v32;
  *(void *)(a1 + 136) = v33;
  sub_1B5F994D8(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1));
  return a1;
}

void *__swift_memcpy144_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x90uLL);
}

uint64_t assignWithTake for Gradient(uint64_t a1, _OWORD *a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 56);
  long long v11 = *(_OWORD *)(a1 + 64);
  long long v12 = *(_OWORD *)(a1 + 80);
  long long v13 = *(_OWORD *)(a1 + 96);
  long long v14 = *(_OWORD *)(a1 + 112);
  long long v15 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v15;
  long long v16 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v16;
  long long v17 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v17;
  long long v18 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v18;
  *(_OWORD *)(a1 + 128) = a2[8];
  sub_1B5F994D8(v3, v5, v4, v6, v7, v8, v9, v10, v11, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1));
  return a1;
}

uint64_t getEnumTagSinglePayload for Gradient(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 144))
    {
      int v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *(void *)(a1 + 120) >> 1;
      if (v2 > 0x80000000) {
        int v3 = ~v2;
      }
      else {
        int v3 = -1;
      }
    }
  }
  else
  {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for Gradient(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 136) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 96) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(void *)(a1 + 112) = 0;
      *(void *)(a1 + 120) = 2 * -a2;
      *(void *)(a1 + 128) = 0;
      *(void *)(a1 + 136) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ComplexImageProcessorRequest.Mask()
{
}

uint64_t destroy for ComplexImageProcessorRequest.Blend()
{
  return sub_1B5F99E28();
}

uint64_t initializeWithCopy for ComplexImageProcessorRequest.Blend(uint64_t a1, uint64_t *a2)
{
  return sub_1B5F99E98(a1, a2);
}

uint64_t assignWithCopy for ComplexImageProcessorRequest.Blend(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B5F99FF0(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))sub_1B5F99834, (void (*)(void))sub_1B5F994A0);
}

void *__swift_memcpy148_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x94uLL);
}

uint64_t assignWithTake for ComplexImageProcessorRequest.Blend(uint64_t a1)
{
  return sub_1B5F9A174(a1);
}

uint64_t sub_1B5F99DEC(uint64_t result, char a2)
{
  *(void *)(result + 120) = *(void *)(result + 120) & 0x8000000000000001 | ((unint64_t)(a2 & 1) << 62);
  return result;
}

void type metadata accessor for ComplexImageProcessorRequest.Blend()
{
}

uint64_t destroy for ComplexImageProcessorRequest.Instruction()
{
  return sub_1B5F99E28();
}

uint64_t sub_1B5F99E28()
{
  OUTLINED_FUNCTION_8_30();
  return v0(v1);
}

uint64_t initializeWithCopy for ComplexImageProcessorRequest.Instruction(uint64_t a1, uint64_t *a2)
{
  return sub_1B5F99E98(a1, a2);
}

uint64_t sub_1B5F99E98(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v15 = a2[9];
  uint64_t v16 = a2[10];
  uint64_t v17 = a2[11];
  uint64_t v18 = a2[12];
  uint64_t v19 = a2[13];
  uint64_t v20 = a2[14];
  uint64_t v21 = a2[15];
  uint64_t v22 = a2[16];
  uint64_t v23 = a2[17];
  int v24 = *((_DWORD *)a2 + 36);
  uint64_t v12 = OUTLINED_FUNCTION_60();
  v13(v12);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v15;
  *(void *)(a1 + 80) = v16;
  *(void *)(a1 + 88) = v17;
  *(void *)(a1 + 96) = v18;
  *(void *)(a1 + 104) = v19;
  *(void *)(a1 + 112) = v20;
  *(void *)(a1 + 120) = v21;
  *(void *)(a1 + 128) = v22;
  *(void *)(a1 + 136) = v23;
  *(_DWORD *)(a1 + 144) = v24;
  return a1;
}

uint64_t assignWithCopy for ComplexImageProcessorRequest.Instruction(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B5F99FF0(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))sub_1B5F996F8, (void (*)(void))sub_1B5F9955C);
}

uint64_t sub_1B5F99FF0(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int), void (*a5)(void))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v11 = a2[5];
  uint64_t v12 = a2[6];
  uint64_t v13 = a2[7];
  uint64_t v14 = a2[8];
  uint64_t v16 = a2[9];
  uint64_t v17 = a2[10];
  uint64_t v18 = a2[11];
  uint64_t v19 = a2[12];
  uint64_t v20 = a2[13];
  uint64_t v21 = a2[14];
  uint64_t v22 = a2[15];
  uint64_t v23 = a2[16];
  uint64_t v24 = a2[17];
  int v25 = *((_DWORD *)a2 + 36);
  a4(*a2, v7, v8, v9, v10, v11, v12, v13, v14, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v13;
  *(void *)(a1 + 64) = v14;
  *(void *)(a1 + 72) = v16;
  *(void *)(a1 + 80) = v17;
  *(void *)(a1 + 88) = v18;
  *(void *)(a1 + 96) = v19;
  *(void *)(a1 + 104) = v20;
  *(void *)(a1 + 112) = v21;
  *(void *)(a1 + 120) = v22;
  *(void *)(a1 + 128) = v23;
  *(void *)(a1 + 136) = v24;
  *(_DWORD *)(a1 + 144) = v25;
  OUTLINED_FUNCTION_8_30();
  a5();
  return a1;
}

uint64_t assignWithTake for ComplexImageProcessorRequest.Instruction(uint64_t a1)
{
  return sub_1B5F9A174(a1);
}

uint64_t sub_1B5F9A174(uint64_t a1)
{
  OUTLINED_FUNCTION_5_42();
  long long v3 = v2[1];
  *(_OWORD *)a1 = *v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = v2[3];
  *(_OWORD *)(a1 + 32) = v2[2];
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = v2[5];
  *(_OWORD *)(a1 + 64) = v2[4];
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = v2[7];
  *(_OWORD *)(a1 + 96) = v2[6];
  *(_OWORD *)(a1 + 112) = v6;
  *(_OWORD *)(a1 + 128) = v2[8];
  *(_DWORD *)(a1 + 144) = v7;
  OUTLINED_FUNCTION_8_30();
  v8();
  return a1;
}

uint64_t _s5TeaUI28ComplexImageProcessorRequestC5BlendOwet_0(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 148))
    {
      int v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *(void *)(a1 + 120) >> 1;
      if (v2 > 0x80000000) {
        int v3 = ~v2;
      }
      else {
        int v3 = -1;
      }
    }
  }
  else
  {
    int v3 = -1;
  }
  return (v3 + 1);
}

double sub_1B5F9A248(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 136) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_DWORD *)(a1 + 144) = 0;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 148) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 96) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(void *)(a1 + 112) = 0;
      *(void *)(a1 + 120) = 2 * -a2;
      *(void *)(a1 + 128) = 0;
      *(void *)(a1 + 136) = 0;
      *(_DWORD *)(a1 + 144) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 148) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1B5F9A2D0(uint64_t result, char a2)
{
  *(void *)(result + 120) = *(void *)(result + 120) & 0xC000000000000001 | ((unint64_t)(a2 & 7) << 59);
  return result;
}

void type metadata accessor for ComplexImageProcessorRequest.Instruction()
{
}

BOOL static BlueprintResponderBehavior.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t BlueprintResponderBehavior.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t BlueprintResponderBehavior.hashValue.getter()
{
  return sub_1B61B3940();
}

unint64_t sub_1B5F9A390()
{
  unint64_t result = qword_1E9DAAD30;
  if (!qword_1E9DAAD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAAD30);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BlueprintResponderBehavior(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F9A4A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BlueprintResponderBehavior()
{
  return &type metadata for BlueprintResponderBehavior;
}

BOOL static CardViewScrollViewCoordinatorState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CardViewScrollViewCoordinatorState.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t CardViewScrollViewCoordinatorState.hashValue.getter()
{
  return sub_1B61B3940();
}

unint64_t sub_1B5F9A57C()
{
  unint64_t result = qword_1E9DAAD38;
  if (!qword_1E9DAAD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAAD38);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CardViewScrollViewCoordinatorState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F9A694);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardViewScrollViewCoordinatorState()
{
  return &type metadata for CardViewScrollViewCoordinatorState;
}

BOOL static ToolbarItemVisibility.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ToolbarItemVisibility.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t ToolbarItemVisibility.hashValue.getter()
{
  return sub_1B61B3940();
}

unint64_t sub_1B5F9A768()
{
  unint64_t result = qword_1E9DAAD40;
  if (!qword_1E9DAAD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAAD40);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ToolbarItemVisibility(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5F9A880);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ToolbarItemVisibility()
{
  return &type metadata for ToolbarItemVisibility;
}

uint64_t sub_1B5F9A8B8(uint64_t a1, uint64_t a2)
{
  int v3 = (void *)(v2 + OBJC_IVAR____TtC5TeaUI22TextFieldTableViewCell_onChange);
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC5TeaUI22TextFieldTableViewCell_onChange);
  void *v3 = a1;
  v3[1] = a2;
  return sub_1B5E3799C(v4);
}

char *sub_1B5F9A8D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = &v3[OBJC_IVAR____TtC5TeaUI22TextFieldTableViewCell_onChange];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  uint64_t v6 = OBJC_IVAR____TtC5TeaUI22TextFieldTableViewCell_textField;
  id v7 = objc_allocWithZone(MEMORY[0x1E4FB1D70]);
  uint64_t v8 = v3;
  *(void *)&v3[v6] = objc_msgSend(v7, sel_init);

  if (a3)
  {
    uint64_t v9 = (void *)sub_1B61B20C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = 0;
  }
  v18.receiver = v8;
  v18.super_class = (Class)type metadata accessor for TextFieldTableViewCell();
  id v10 = objc_msgSendSuper2(&v18, sel_initWithStyle_reuseIdentifier_, 1000, v9);

  uint64_t v11 = (char *)v10;
  unint64_t result = (char *)objc_msgSend(v11, sel_ts_editableTextField);
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v13 = result;
  objc_msgSend(result, sel_setDelegate_, v11);

  unint64_t result = (char *)OUTLINED_FUNCTION_0_77();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v14 = result;
  objc_msgSend(result, sel_setTextAlignment_, 2);

  unint64_t result = (char *)OUTLINED_FUNCTION_0_77();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v15 = result;
  objc_msgSend(result, sel_setClearButtonMode_, 1);

  unint64_t result = (char *)OUTLINED_FUNCTION_0_77();
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v16 = result;
  objc_msgSend(result, sel_setAutocorrectionType_, 1);

  unint64_t result = (char *)OUTLINED_FUNCTION_0_77();
  if (result)
  {
    uint64_t v17 = result;
    objc_msgSend(result, sel_setAutocapitalizationType_, 0);

    objc_msgSend(v11, sel_setAccessoryView_, *(void *)&v11[OBJC_IVAR____TtC5TeaUI22TextFieldTableViewCell_textField]);
    return v11;
  }
LABEL_14:
  __break(1u);
  return result;
}

void sub_1B5F9AB00()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC5TeaUI22TextFieldTableViewCell_onChange];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  uint64_t v2 = OBJC_IVAR____TtC5TeaUI22TextFieldTableViewCell_textField;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D70]), sel_init);

  sub_1B61B34D0();
  __break(1u);
}

uint64_t sub_1B5F9ABB4(void *a1)
{
  uint64_t result = sub_1B5F3D1FC(a1);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v1 + OBJC_IVAR____TtC5TeaUI22TextFieldTableViewCell_onChange);
    if (v5)
    {
      uint64_t v6 = result;
      swift_retain();
      v5(v6, v4);
      sub_1B5E3799C((uint64_t)v5);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1B5F9ACB0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextFieldTableViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TextFieldTableViewCell()
{
  return self;
}

uint64_t dispatch thunk of BlueprintLayoutCollectionSectionFrameProviding.frameForSection(index:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of TabBarControllerDelegate.tabBarController(_:willSelect:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of TabBarControllerDelegate.tabBarController(_:didSelect:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

id sub_1B5F9AD94()
{
  id result = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                                 + OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_mainViewController), sel_view));
  if (!result) {
    __break(1u);
  }
  return result;
}

id sub_1B5F9ADD0(void *a1, void *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_onboardingViewController] = a1;
  *(void *)&v2[OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_mainViewController] = a2;
  v10.receiver = v2;
  v10.super_class = ObjectType;
  id v6 = a1;
  id v7 = a2;
  id v8 = objc_msgSendSuper2(&v10, sel_initWithNibName_bundle_, 0, 0);

  return v8;
}

void sub_1B5F9AE64()
{
  *(void *)&v0[OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_onboardingViewController] = 0;

  sub_1B61B34D0();
  __break(1u);
}

void sub_1B5F9AEEC()
{
}

uint64_t type metadata accessor for BootstrapperViewController()
{
  return self;
}

void sub_1B5F9AFB4()
{
  v20.receiver = v0;
  v20.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v20, sel_viewDidLoad);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_mainViewController];
  objc_msgSend(v0, sel_addChildViewController_, v1);
  id v2 = OUTLINED_FUNCTION_64();
  if (!v2)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v3 = v2;
  id v4 = OUTLINED_FUNCTION_4_57();
  if (!v4)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v5 = v4;
  objc_msgSend(v3, sel_addSubview_, v4);

  objc_msgSend(v1, sel_didMoveToParentViewController_, v0);
  id v6 = OUTLINED_FUNCTION_4_57();
  if (!v6)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v7 = v6;
  id v8 = OUTLINED_FUNCTION_64();
  if (!v8)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v9 = v8;
  objc_msgSend(v8, sel_bounds);
  OUTLINED_FUNCTION_8();

  OUTLINED_FUNCTION_1_1(v7, sel_setFrame_);
  self;
  objc_super v10 = (void *)swift_dynamicCastObjCClass();
  if (v10) {
    objc_msgSend(v10, sel_ts_columnSeparatorsExtendToTitlebar_, 0);
  }
  uint64_t v11 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_onboardingViewController];
  if (v11)
  {
    id v12 = v11;
    objc_msgSend(v0, sel_addChildViewController_, v12);
    id v13 = OUTLINED_FUNCTION_64();
    if (v13)
    {
      uint64_t v14 = v13;
      id v15 = OUTLINED_FUNCTION_4_57();
      if (v15)
      {
        uint64_t v16 = v15;
        objc_msgSend(v14, sel_addSubview_, v15);

        objc_msgSend(v12, sel_didMoveToParentViewController_, v0);
        id v17 = OUTLINED_FUNCTION_4_57();
        if (v17)
        {
          objc_super v18 = v17;
          id v19 = OUTLINED_FUNCTION_64();
          if (v19)
          {
            objc_msgSend(v19, sel_bounds);
            OUTLINED_FUNCTION_20_6();
            OUTLINED_FUNCTION_1_1(v18, sel_setFrame_);

            return;
          }
LABEL_21:
          __break(1u);
          return;
        }
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
}

void sub_1B5F9B244()
{
  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, sel_viewWillLayoutSubviews);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_onboardingViewController];
  if (!v1) {
    goto LABEL_5;
  }
  id v2 = objc_msgSend(v1, sel_view);
  if (!v2)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v3 = v2;
  id v4 = objc_msgSend(v0, sel_view);
  if (v4)
  {
    uint64_t v5 = v4;
    objc_msgSend(v4, sel_bounds);
    OUTLINED_FUNCTION_8();

    OUTLINED_FUNCTION_1_1(v3, sel_setFrame_);
LABEL_5:
    id v6 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_mainViewController], sel_view);
    if (v6)
    {
      id v7 = v6;
      id v8 = objc_msgSend(v0, sel_view);
      if (v8)
      {
        objc_msgSend(v8, sel_bounds);
        OUTLINED_FUNCTION_20_6();
        OUTLINED_FUNCTION_1_1(v7, sel_setFrame_);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
}

void *sub_1B5F9B3FC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_onboardingViewController);
  id v2 = v1;
  if (!v1)
  {
    id v2 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_mainViewController);
    id v3 = v2;
  }
  id v4 = v1;
  return v2;
}

uint64_t sub_1B5F9B4A8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_onboardingViewController);
  sub_1B5E88D04();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B61C28A0;
  if (v1)
  {
    *(void *)(v2 + 32) = v1;
    uint64_t v8 = v2;
    sub_1B61B2510();
    uint64_t v3 = v8;
  }
  else
  {
    id v4 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_mainViewController);
    *(void *)(v2 + 32) = v4;
    uint64_t v9 = v2;
    sub_1B61B2510();
    uint64_t v3 = v9;
    id v5 = v4;
    uint64_t v1 = 0;
  }
  id v6 = v1;
  return v3;
}

unint64_t sub_1B5F9B56C()
{
  unint64_t result = qword_1E9DAADE8;
  if (!qword_1E9DAADE8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9DAADE8);
  }
  return result;
}

void sub_1B5F9B5C4()
{
  id v2 = OUTLINED_FUNCTION_64();
  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v3 = v2;
  id v1 = objc_msgSend(v2, sel_snapshotViewAfterScreenUpdates_, 1);

  if (!v1) {
    goto LABEL_6;
  }
  id v4 = OUTLINED_FUNCTION_64();
  if (!v4)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v5 = v4;
  id v6 = objc_msgSend(v4, sel_window);

  if (v6)
  {
    objc_msgSend(v6, sel_addSubview_, v1);
  }
LABEL_6:
  uint64_t v7 = OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_onboardingViewController;
  uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI26BootstrapperViewController_onboardingViewController];
  if (!v8) {
    goto LABEL_11;
  }
  objc_msgSend(v8, sel_willMoveToParentViewController_, 0);
  uint64_t v9 = *(void **)&v0[v7];
  if (!v9) {
    goto LABEL_11;
  }
  id v10 = objc_msgSend(v9, sel_view);
  if (!v10)
  {
LABEL_17:

    __break(1u);
    return;
  }
  uint64_t v11 = v10;
  objc_msgSend(v10, sel_removeFromSuperview);

  id v12 = *(void **)&v0[v7];
  if (!v12)
  {
LABEL_11:
    id v13 = 0;
    goto LABEL_12;
  }
  objc_msgSend(v12, sel_removeFromParentViewController);
  id v13 = *(void **)&v0[v7];
LABEL_12:
  *(void *)&v0[v7] = 0;

  self;
  uint64_t v14 = (void *)swift_dynamicCastObjCClass();
  if (v14) {
    objc_msgSend(v14, sel_ts_columnSeparatorsExtendToTitlebar_, 1);
  }
  objc_msgSend(v0, sel_setNeedsStatusBarAppearanceUpdate);
}

uint64_t dispatch thunk of Previewable.canPreview.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t getEnumTagSinglePayload for GradientDescriptor.Direction(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for GradientDescriptor.Direction(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 32) = 0;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 33) = v3;
  return result;
}

uint64_t sub_1B5F9B7C4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1B5F9B7E0(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    char v2 = 1;
  }
  else
  {
    char v2 = 0;
  }
  *(unsigned char *)(result + 32) = v2;
  return result;
}

ValueMetadata *type metadata accessor for PreviewClipping()
{
  return &type metadata for PreviewClipping;
}

uint64_t CommandCenterWithTracker.__allocating_init(commandCenter:tracker:)(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  sub_1B5E30E70(a3, v6 + 32);
  return v6;
}

uint64_t CommandCenterWithTracker.init(commandCenter:tracker:)(uint64_t a1, uint64_t a2, long long *a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  sub_1B5E30E70(a3, v3 + 32);
  return v3;
}

uint64_t CommandCenterWithTracker.execute<A>(command:context:location:sourceView:sourceRect:)(uint64_t *a1, uint64_t a2, unsigned char *a3, void *a4)
{
  uint64_t v7 = *a1;
  HIBYTE(v36) = *a3;
  sub_1B5E176E4(v4 + 32, (uint64_t)v32);
  type metadata accessor for CommandExecutionSource();
  uint64_t v8 = swift_allocObject();
  uint64_t v10 = v33;
  uint64_t v9 = v34;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v32, v33);
  OUTLINED_FUNCTION_0_13();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_80();
  (*(void (**)(uint64_t))(v14 + 16))(v13 - v12);
  id v15 = a4;
  OUTLINED_FUNCTION_9_32();
  sub_1B61137DC(v16, v17, v18, v19, v20, v21, v22, v8, v10, v9, v28, a2, v31, v32[0], v32[1], v32[2], v33, v34, v35,
    v36,
    v37,
    v38);
  uint64_t v24 = v23;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  uint64_t v25 = *(void *)(v4 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *, uint64_t, uint64_t, void, uint64_t, uint64_t))(v25 + 8))(a1, v30, v24, *(void *)(v7 + 88), ObjectType, v25);
  return swift_release();
}

void CommandCenterWithTracker.canExecute<A>(command:context:location:)()
{
  OUTLINED_FUNCTION_8_16();
  HIBYTE(v20) = *v1;
  sub_1B5E176E4(v0 + 32, (uint64_t)v17);
  long long v21 = 0u;
  long long v22 = 0u;
  LOBYTE(v23) = 1;
  type metadata accessor for CommandExecutionSource();
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v18;
  uint64_t v4 = v19;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v18);
  OUTLINED_FUNCTION_0_13();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_80();
  (*(void (**)(uint64_t))(v8 + 16))(v7 - v6);
  OUTLINED_FUNCTION_9_32();
  sub_1B61137DC(v9, v10, v11, v12, v13, v14, v15, v2, v3, v4, v17[0], v17[1], v17[2], v18, v19, v20, v21, *((uint64_t *)&v21 + 1), v22,
    *((uint64_t *)&v22 + 1),
    v23,
    v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  swift_getObjectType();
  OUTLINED_FUNCTION_16_18();
  v16();
  swift_release();
  OUTLINED_FUNCTION_3_33();
}

uint64_t CommandCenterWithTracker.canExecute<A>(command:context:location:closure:)(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t a5)
{
  HIBYTE(v34) = *a3;
  sub_1B5E176E4(v5 + 32, (uint64_t)v31);
  long long v35 = 0u;
  long long v36 = 0u;
  char v37 = 1;
  type metadata accessor for CommandExecutionSource();
  uint64_t v9 = swift_allocObject();
  uint64_t v11 = v32;
  uint64_t v10 = v33;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
  OUTLINED_FUNCTION_0_13();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_80();
  (*(void (**)(uint64_t))(v15 + 16))(v14 - v13);
  OUTLINED_FUNCTION_9_32();
  sub_1B61137DC(v16, v17, v18, v19, v20, v21, v22, v9, v11, v10, v28, a5, v31[0], v31[1], v31[2], v32, v33, v34, v35,
    *((uint64_t *)&v35 + 1),
    v36,
    *((uint64_t *)&v36 + 1));
  uint64_t v24 = v23;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  swift_getObjectType();
  OUTLINED_FUNCTION_6_44();
  v26(a1, a2, v24, a4, v30, *(void *)(v25 + 88));
  return swift_release();
}

uint64_t CommandCenterWithTracker.execute<A>(command:context:source:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *a1;
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, void, uint64_t, uint64_t))(v8 + 8))(a1, a2, a3, *(void *)(v7 + 88), ObjectType, v8);
}

void CommandCenterWithTracker.canExecute<A>(command:context:source:)()
{
  OUTLINED_FUNCTION_8_16();
  swift_getObjectType();
  OUTLINED_FUNCTION_16_18();
  v0();
  OUTLINED_FUNCTION_3_33();
}

uint64_t CommandCenterWithTracker.canExecute<A>(command:context:source:closure:)()
{
  OUTLINED_FUNCTION_4_58();
  OUTLINED_FUNCTION_2_71();
  uint64_t v0 = OUTLINED_FUNCTION_3_60();
  return v1(v0);
}

void CommandCenterWithTracker.add<A>(_:for:with:tracker:closure:)()
{
  OUTLINED_FUNCTION_10_3();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  swift_getObjectType();
  OUTLINED_FUNCTION_2_71();
  v13(v11, v9, v7, v5, v3, v1, *(void *)(v12 + 88));
  OUTLINED_FUNCTION_4_6();
}

void CommandCenterWithTracker.state<A, B>(for:context:)()
{
  OUTLINED_FUNCTION_8_16();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = (void *)*v3;
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *, uint64_t, void, void, void, uint64_t, uint64_t))(v6 + 80))(v4, v2, v5[17], v5[18], v5[19], ObjectType, v6);
  OUTLINED_FUNCTION_3_33();
}

void CommandCenterWithTracker.state<A, B>(for:context:closure:)()
{
  OUTLINED_FUNCTION_10_3();
  OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_2_71();
  OUTLINED_FUNCTION_2_71();
  OUTLINED_FUNCTION_2_71();
  uint64_t v0 = OUTLINED_FUNCTION_1_79();
  v1(v0);
  OUTLINED_FUNCTION_4_6();
}

uint64_t CommandCenterWithTracker.remove(_:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 24))(a1, ObjectType, v3);
}

uint64_t CommandCenterWithTracker.remove<A>(_:for:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t *, void, uint64_t, uint64_t))(v6 + 32))(a1, a2, *(void *)(v5 + 88), ObjectType, v6);
}

void CommandCenterWithTracker.register<A, B>(handler:for:)()
{
  OUTLINED_FUNCTION_8_16();
  OUTLINED_FUNCTION_7_39();
  OUTLINED_FUNCTION_6_44();
  v5(v3, v2, *(void *)(v4 + 88), v1, v0);
  OUTLINED_FUNCTION_3_33();
}

void CommandCenterWithTracker.register<A, B, C>(handler:for:)()
{
  OUTLINED_FUNCTION_8_16();
  OUTLINED_FUNCTION_7_39();
  OUTLINED_FUNCTION_6_44();
  OUTLINED_FUNCTION_6_44();
  v2(v1, v0);
  OUTLINED_FUNCTION_3_33();
}

uint64_t CommandCenterWithTracker.registerHandler<A>(for:handle:canHandle:)()
{
  OUTLINED_FUNCTION_4_58();
  OUTLINED_FUNCTION_2_71();
  uint64_t v0 = OUTLINED_FUNCTION_3_60();
  return v1(v0);
}

uint64_t CommandCenterWithTracker.registerHandler<A, B>(for:handle:canHandle:determineState:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (void *)*a1;
  uint64_t v15 = *(void *)(v7 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, uint64_t, uint64_t))(v15 + 64))(a1, a2, a3, a4, a5, a6, a7, v14[17], v14[18], v14[19], ObjectType, v15);
}

uint64_t CommandCenterWithTracker.context<A>(for:)(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(v4 + 72))(a1, *(void *)(v3 + 88), ObjectType, v4);
}

void CommandCenterWithTracker.addExecuteObserver<A>(for:closure:)()
{
  OUTLINED_FUNCTION_8_16();
  OUTLINED_FUNCTION_8_31();
  OUTLINED_FUNCTION_6_44();
  uint64_t v0 = OUTLINED_FUNCTION_13_22();
  v1(v0);
  OUTLINED_FUNCTION_3_33();
}

void CommandCenterWithTracker.addExecuteObserver<A, B>(for:closure:)()
{
  OUTLINED_FUNCTION_8_16();
  OUTLINED_FUNCTION_8_31();
  OUTLINED_FUNCTION_6_44();
  OUTLINED_FUNCTION_6_44();
  OUTLINED_FUNCTION_6_44();
  uint64_t v0 = OUTLINED_FUNCTION_13_22();
  v1(v0);
  OUTLINED_FUNCTION_3_33();
}

void CommandCenterWithTracker.addStateObserver<A, B>(for:context:closure:)()
{
  OUTLINED_FUNCTION_10_3();
  OUTLINED_FUNCTION_5_43();
  OUTLINED_FUNCTION_2_71();
  OUTLINED_FUNCTION_2_71();
  OUTLINED_FUNCTION_2_71();
  uint64_t v0 = OUTLINED_FUNCTION_1_79();
  v1(v0);
  OUTLINED_FUNCTION_4_6();
}

Swift::Void __swiftcall CommandCenterWithTracker.invalidateCommands()()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v1 + 136))(ObjectType, v1);
}

uint64_t CommandCenterWithTracker.invalidate<A>(command:)(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(v4 + 144))(a1, *(void *)(v3 + 88), ObjectType, v4);
}

Swift::Void __swiftcall CommandCenterWithTracker.cleanup()()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v1 + 152))(ObjectType, v1);
}

uint64_t CommandCenterWithTracker.deinit()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return v0;
}

uint64_t CommandCenterWithTracker.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t sub_1B5F9C6B8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return CommandCenterWithTracker.execute<A>(command:context:source:)(a1, a2, a3);
}

void sub_1B5F9C6DC()
{
}

void sub_1B5F9C6E8()
{
}

void sub_1B5F9C704()
{
}

void sub_1B5F9C70C()
{
}

uint64_t type metadata accessor for CommandCenterWithTracker()
{
  return self;
}

uint64_t method lookup function for CommandCenterWithTracker(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CommandCenterWithTracker);
}

uint64_t dispatch thunk of CommandCenterWithTracker.__allocating_init(commandCenter:tracker:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t Then.__allocating_init(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}