uint64_t Then.init(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t Then.run(finished:)(uint64_t (*a1)(uint64_t))
{
  uint64_t v3 = *((void *)*v1 + 10);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790]();
  v7 = (char *)&v10 - v6;
  v1[2](v5);
  uint64_t v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return a1(v8);
}

uint64_t Then.deinit()
{
  swift_release();
  return v0;
}

uint64_t Then.__deallocating_deinit()
{
  Then.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B5F9C90C(uint64_t (*a1)(uint64_t))
{
  return Then.run(finished:)(a1);
}

uint64_t sub_1B5F9C930()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Then()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for Then(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Then);
}

uint64_t dispatch thunk of Then.__allocating_init(block:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1B5F9C9BC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)*a1) + 0xA8);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1BA9B1EC0](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1B5F9CA30()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t BlueprintCollectionViewDelegate.delegate.getter()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_0_1();
  return MEMORY[0x1BA9B1EC0](v0);
}

void BlueprintCollectionViewDelegate.delegate.setter(void *a1)
{
}

uint64_t (*BlueprintCollectionViewDelegate.delegate.modify())()
{
  v2 = malloc(0x30uLL);
  OUTLINED_FUNCTION_59_2((uint64_t)v2);
  OUTLINED_FUNCTION_14_0();
  *(void *)(v4 + 40) = *(void *)(v3 + 168);
  OUTLINED_FUNCTION_11_4();
  *(void *)(v1 + 24) = MEMORY[0x1BA9B1EC0](v0);
  return sub_1B5EF1A70;
}

id BlueprintCollectionViewDelegate.multiDelegate.getter()
{
  OUTLINED_FUNCTION_14_0();
  return *(id *)(v0 + *(void *)(v1 + 176));
}

uint64_t sub_1B5F9CC00@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  *a1 = result;
  return result;
}

uint64_t sub_1B5F9CC74()
{
  return swift_weakAssign();
}

uint64_t BlueprintCollectionViewDelegate.keyCommandManager.getter()
{
  return swift_weakLoadStrong();
}

uint64_t BlueprintCollectionViewDelegate.keyCommandManager.setter()
{
  return swift_release();
}

void (*BlueprintCollectionViewDelegate.keyCommandManager.modify())(uint64_t a1)
{
  uint64_t v1 = malloc(0x30uLL);
  OUTLINED_FUNCTION_59_2((uint64_t)v1);
  OUTLINED_FUNCTION_14_0();
  *(void *)(v3 + 40) = *(void *)(v2 + 184);
  OUTLINED_FUNCTION_11_4();
  *(void *)(v0 + 24) = swift_weakLoadStrong();
  return sub_1B5EF1CE0;
}

uint64_t sub_1B5F9CE18@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)*a1) + 0xC0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1BA9B1EC0](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1B5F9CE90(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)*a2) + 0xC0);
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t BlueprintCollectionViewDelegate.selectionProvider.getter()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_0_1();
  return MEMORY[0x1BA9B1EC0](v0);
}

uint64_t BlueprintCollectionViewDelegate.selectionProvider.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_12_0();
  *(void *)(v2 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*BlueprintCollectionViewDelegate.selectionProvider.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  OUTLINED_FUNCTION_14_0();
  *(void *)(v5 + 48) = *(void *)(v4 + 192);
  OUTLINED_FUNCTION_11_4();
  uint64_t v6 = MEMORY[0x1BA9B1EC0](v1);
  uint64_t v7 = *(void *)(v1 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1B5E638CC;
}

uint64_t sub_1B5F9D064@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)*a1) + 0xC8);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1BA9B1EC0](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1B5F9D0D8()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t BlueprintCollectionViewDelegate.parentViewController.getter()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_0_1();
  return MEMORY[0x1BA9B1EC0](v0);
}

void BlueprintCollectionViewDelegate.parentViewController.setter(void *a1)
{
}

uint64_t (*BlueprintCollectionViewDelegate.parentViewController.modify())()
{
  uint64_t v2 = malloc(0x30uLL);
  OUTLINED_FUNCTION_59_2((uint64_t)v2);
  OUTLINED_FUNCTION_14_0();
  *(void *)(v4 + 40) = *(void *)(v3 + 200);
  OUTLINED_FUNCTION_11_4();
  *(void *)(v1 + 24) = MEMORY[0x1BA9B1EC0](v0);
  return sub_1B5EF1A70;
}

uint64_t BlueprintCollectionViewDelegate.pluginManager.getter()
{
  return swift_retain();
}

uint64_t BlueprintCollectionViewDelegate.pluginManager.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_12_0();
  *uint64_t v1 = a1;
  return swift_release();
}

uint64_t (*BlueprintCollectionViewDelegate.pluginManager.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t BlueprintCollectionViewDelegate.infiniteScrollManager.getter()
{
  return swift_retain();
}

uint64_t sub_1B5F9D3D0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)*a1) + 0xD8));
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

uint64_t sub_1B5F9D444()
{
  uint64_t v0 = swift_retain();
  return BlueprintCollectionViewDelegate.infiniteScrollManager.setter(v0);
}

uint64_t BlueprintCollectionViewDelegate.infiniteScrollManager.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v4 = (void *)(v1 + *(void *)(v3 + 216));
  OUTLINED_FUNCTION_21();
  *uint64_t v4 = a1;
  swift_release();
  return sub_1B5F9D4E0();
}

uint64_t sub_1B5F9D4E0()
{
  uint64_t v1 = (char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8);
  uint64_t result = swift_beginAccess();
  if (*(void *)v1)
  {
    *(void *)(*(void *)v1 + 24) = &protocol witness table for BlueprintCollectionViewDelegate<A, B, C>;
    return swift_unknownObjectWeakAssign();
  }
  return result;
}

uint64_t (*BlueprintCollectionViewDelegate.infiniteScrollManager.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_3_2();
  return sub_1B5F9D5C4;
}

uint64_t sub_1B5F9D5C4(uint64_t a1, char a2)
{
  return sub_1B5F9D878(a1, a2, (uint64_t (*)(uint64_t))sub_1B5F9D4E0);
}

void *BlueprintCollectionViewDelegate.viewportMonitor.getter()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  id v2 = v1;
  return v1;
}

id sub_1B5F9D630@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)*a1) + 0xE0));
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;
  return v4;
}

void sub_1B5F9D6B0(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  BlueprintCollectionViewDelegate.viewportMonitor.setter(v1);
}

void BlueprintCollectionViewDelegate.viewportMonitor.setter(void *a1)
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v4 = (void **)(v1 + *(void *)(v3 + 224));
  OUTLINED_FUNCTION_21();
  uint64_t v5 = *v4;
  *uint64_t v4 = a1;
  id v6 = a1;

  sub_1B5F9D75C();
}

void sub_1B5F9D75C()
{
  uint64_t v1 = (id *)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0));
  swift_beginAccess();
  if (*v1)
  {
    id v2 = *v1;
    sub_1B602AAEC((uint64_t)v2);
  }
}

uint64_t (*BlueprintCollectionViewDelegate.viewportMonitor.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_3_2();
  return sub_1B5F9D860;
}

uint64_t sub_1B5F9D860(uint64_t a1, char a2)
{
  return sub_1B5F9D878(a1, a2, (uint64_t (*)(uint64_t))sub_1B5F9D75C);
}

uint64_t sub_1B5F9D878(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

uint64_t BlueprintCollectionViewDelegate.dragReorderDelegate.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t BlueprintCollectionViewDelegate.dragReorderDelegate.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_12_0();
  void *v2 = a1;
  v2[1] = a2;
  return swift_unknownObjectRelease();
}

uint64_t (*BlueprintCollectionViewDelegate.dragReorderDelegate.modify())()
{
  return j__swift_endAccess;
}

double BlueprintCollectionViewDelegate.scrollTriggerDelta.getter()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_0_1();
  return *(double *)v0;
}

uint64_t BlueprintCollectionViewDelegate.scrollTriggerDelta.setter(double a1)
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v4 = (double *)(v1 + *(void *)(v3 + 240));
  uint64_t result = OUTLINED_FUNCTION_21();
  *uint64_t v4 = a1;
  return result;
}

uint64_t (*BlueprintCollectionViewDelegate.scrollTriggerDelta.modify())()
{
  return j_j__swift_endAccess;
}

id BlueprintCollectionViewDelegate.__allocating_init(blueprintProvider:blueprintLayoutProvider:blueprintImpressionManager:commandCenter:tracker:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v11 = objc_allocWithZone(v6);
  uint64_t v12 = OUTLINED_FUNCTION_91();
  return BlueprintCollectionViewDelegate.init(blueprintProvider:blueprintLayoutProvider:blueprintImpressionManager:commandCenter:tracker:)(v12, v13, a3, a4, a5, a6);
}

id BlueprintCollectionViewDelegate.init(blueprintProvider:blueprintLayoutProvider:blueprintImpressionManager:commandCenter:tracker:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  ObjectType = (objc_class *)swift_getObjectType();
  v9 = (void *)MEMORY[0x1E4FBC8C8];
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_3_61();
  swift_weakInit();
  OUTLINED_FUNCTION_3_61();
  *(void *)((char *)v6 + *(void *)(v10 + 192) + 8) = 0;
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_3_61();
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_3_61();
  *(void *)((char *)v6 + *(void *)(v11 + 208)) = 0;
  OUTLINED_FUNCTION_3_61();
  *(void *)((char *)v6 + *(void *)(v12 + 216)) = 0;
  OUTLINED_FUNCTION_3_61();
  *(void *)((char *)v6 + *(void *)(v13 + 224)) = 0;
  OUTLINED_FUNCTION_3_61();
  v15 = (void *)((char *)v6 + *(void *)(v14 + 232));
  void *v15 = 0;
  v15[1] = 0;
  OUTLINED_FUNCTION_3_61();
  v17 = (char *)v6 + *(void *)(v16 + 248);
  *(void *)v17 = 0;
  *((void *)v17 + 1) = 0;
  v17[16] = 1;
  v18 = (char *)v6 + *(void *)((*v9 & *v6) + 0x100);
  *(void *)v18 = 0;
  *((void *)v18 + 1) = 0;
  v18[16] = 1;
  OUTLINED_FUNCTION_3_61();
  uint64_t v20 = *(void *)(v19 + 264);
  type metadata accessor for ViewControllerTransitionManager();
  uint64_t v21 = OUTLINED_FUNCTION_43_0();
  *(void *)(v21 + 16) = MEMORY[0x1E4FBC868];
  *(void *)((char *)v6 + v20) = v21;
  OUTLINED_FUNCTION_3_61();
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_3_61();
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_33();
  v22();
  OUTLINED_FUNCTION_3_61();
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_33();
  v23();
  OUTLINED_FUNCTION_3_61();
  *(void *)((char *)v6 + *(void *)(v24 + 152)) = a3;
  OUTLINED_FUNCTION_3_61();
  v26 = (void *)((char *)v6 + *(void *)(v25 + 160));
  void *v26 = a4;
  v26[1] = a5;
  OUTLINED_FUNCTION_3_61();
  sub_1B5F004F8(a6, (uint64_t)v6 + *(void *)(v27 + 272));
  OUTLINED_FUNCTION_3_61();
  v29 = (char *)v6 + *(void *)(v28 + 280);
  *(_OWORD *)v29 = 0u;
  *((_OWORD *)v29 + 1) = 0u;
  *((void *)v29 + 4) = 0;
  OUTLINED_FUNCTION_3_61();
  v31 = (char *)v6 + *(void *)(v30 + 288);
  *(_OWORD *)v31 = v32;
  *((_OWORD *)v31 + 1) = v32;
  *((void *)v31 + 4) = 0;
  sub_1B61AFE10();
  v33 = v6;
  swift_retain();
  swift_unknownObjectRetain();
  sub_1B61AFE00();
  if (qword_1EB648D98 != -1) {
    swift_once();
  }
  sub_1B61AFDF0();
  swift_release();
  OUTLINED_FUNCTION_18_20();
  *(void *)((char *)v33 + *(void *)(v34 + 240)) = v35;
  objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MultiCollectionViewDelegate()), sel_init);
  OUTLINED_FUNCTION_18_20();
  *(void *)((char *)v33 + *(void *)(v36 + 176)) = v37;

  v45.receiver = v33;
  v45.super_class = ObjectType;
  id v38 = objc_msgSendSuper2(&v45, sel_init);
  MultiCollectionViewDelegate.addDelegate<A>(_:)((uint64_t)v38);
  swift_release();
  swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_1(a6);
  OUTLINED_FUNCTION_40();
  v39();
  OUTLINED_FUNCTION_75();
  v40();
  return v38;
}

void BlueprintCollectionViewDelegate.__allocating_init(blueprintProvider:blueprintLayoutProvider:blueprintImpressionManager:commandCenter:tracker:keyboardInputMonitor:prefetcher:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  objc_allocWithZone(v0);
  uint64_t v13 = OUTLINED_FUNCTION_135_0();
  BlueprintCollectionViewDelegate.init(blueprintProvider:blueprintLayoutProvider:blueprintImpressionManager:commandCenter:tracker:keyboardInputMonitor:prefetcher:)(v13, v14, v12, v10, v8, v6, v4, v2);
  OUTLINED_FUNCTION_73();
}

id BlueprintCollectionViewDelegate.init(blueprintProvider:blueprintLayoutProvider:blueprintImpressionManager:commandCenter:tracker:keyboardInputMonitor:prefetcher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v13 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v14 = *MEMORY[0x1E4FBC8C8] & *v9;
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_4_59();
  swift_weakInit();
  OUTLINED_FUNCTION_4_59();
  *(void *)((char *)v9 + *(void *)(v15 + 192) + 8) = 0;
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_4_59();
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_4_59();
  *(void *)((char *)v9 + *(void *)(v16 + 208)) = 0;
  OUTLINED_FUNCTION_4_59();
  *(void *)((char *)v9 + *(void *)(v17 + 216)) = 0;
  OUTLINED_FUNCTION_4_59();
  *(void *)((char *)v9 + *(void *)(v18 + 224)) = 0;
  OUTLINED_FUNCTION_4_59();
  uint64_t v20 = (void *)((char *)v9 + *(void *)(v19 + 232));
  *uint64_t v20 = 0;
  v20[1] = 0;
  OUTLINED_FUNCTION_4_59();
  v22 = (char *)v9 + *(void *)(v21 + 248);
  *(void *)v22 = 0;
  *((void *)v22 + 1) = 0;
  v22[16] = 1;
  v23 = (char *)v9 + *(void *)((*v13 & *v9) + 0x100);
  *(void *)v23 = 0;
  *((void *)v23 + 1) = 0;
  v23[16] = 1;
  OUTLINED_FUNCTION_4_59();
  uint64_t v25 = *(void *)(v24 + 264);
  type metadata accessor for ViewControllerTransitionManager();
  uint64_t v26 = OUTLINED_FUNCTION_43_0();
  *(void *)(v26 + 16) = MEMORY[0x1E4FBC868];
  *(void *)((char *)v9 + v25) = v26;
  OUTLINED_FUNCTION_4_59();
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_4_59();
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_33();
  v27();
  OUTLINED_FUNCTION_4_59();
  uint64_t v28 = *(void *)(v14 + 88);
  OUTLINED_FUNCTION_2_3();
  uint64_t v30 = v29;
  OUTLINED_FUNCTION_33();
  v31();
  OUTLINED_FUNCTION_4_59();
  *(void *)((char *)v9 + *(void *)(v32 + 152)) = a3;
  OUTLINED_FUNCTION_4_59();
  uint64_t v34 = (void *)((char *)v9 + *(void *)(v33 + 160));
  *uint64_t v34 = a4;
  v34[1] = a5;
  OUTLINED_FUNCTION_4_59();
  sub_1B5F004F8(a6, (uint64_t)v9 + *(void *)(v35 + 272));
  OUTLINED_FUNCTION_4_59();
  sub_1B5F004F8(a7, (uint64_t)v9 + *(void *)(v36 + 280));
  OUTLINED_FUNCTION_4_59();
  sub_1B5FABE0C(a8, (uint64_t)v9 + *(void *)(v37 + 288), (unint64_t *)&unk_1EB642320, &qword_1EB642318, (uint64_t)&protocol descriptor for BlueprintPrefetcherType);
  sub_1B61AFE10();
  id v38 = v9;
  swift_retain();
  swift_unknownObjectRetain();
  sub_1B61AFE00();
  if (qword_1EB648D98 != -1) {
    swift_once();
  }
  sub_1B61AFDF0();
  swift_release();
  OUTLINED_FUNCTION_124_0();
  *(void *)((char *)v38 + *(void *)(v39 + 240)) = v40;
  objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MultiCollectionViewDelegate()), sel_init);
  OUTLINED_FUNCTION_124_0();
  *(void *)((char *)v38 + *(void *)(v41 + 176)) = v42;

  v51.receiver = v38;
  v51.super_class = ObjectType;
  id v43 = objc_msgSendSuper2(&v51, sel_init);
  MultiCollectionViewDelegate.addDelegate<A>(_:)((uint64_t)v43);
  swift_release();
  swift_unknownObjectRelease();

  sub_1B5FAC0CC(a8, (unint64_t *)&unk_1EB642320, &qword_1EB642318, (uint64_t)&protocol descriptor for BlueprintPrefetcherType);
  __swift_destroy_boxed_opaque_existential_1(a7);
  __swift_destroy_boxed_opaque_existential_1(a6);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(a2, v28);
  OUTLINED_FUNCTION_36();
  v44();
  return v43;
}

Swift::Void __swiftcall BlueprintCollectionViewDelegate.register(in:)(UICollectionView *in)
{
  OUTLINED_FUNCTION_14_2();
  uint64_t v4 = v3;
  swift_unknownObjectWeakAssign();
  OUTLINED_FUNCTION_14_0();
  [(UICollectionView *)in setDelegate:*(void *)&v1[*(void *)(v5 + 176)]];
  type metadata accessor for SwipeActionCollectionView();
  if (swift_dynamicCastClass())
  {
    uint64_t v6 = in;
    uint64_t v7 = v1;
    sub_1B605C514((uint64_t)v1, (uint64_t)&off_1F0F0C430);
    swift_unknownObjectRetain();
    sub_1B605C520((uint64_t)v1, (uint64_t)&off_1F0F0C418);
  }
  OUTLINED_FUNCTION_25_1();
  uint64_t v8 = *(void *)(v4 + 104);
  uint64_t v9 = *(void *)(v4 + 80);
  uint64_t v10 = OUTLINED_FUNCTION_75_1();
  v11(v10);
  uint64_t v12 = OUTLINED_FUNCTION_43_0();
  swift_unknownObjectWeakInit();
  uint64_t v13 = OUTLINED_FUNCTION_43_0();
  swift_unknownObjectUnownedInit();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v9;
  *(void *)(v14 + 24) = *(void *)(v4 + 88);
  *(void *)(v14 + 32) = *(void *)(v4 + 96);
  *(void *)(v14 + 40) = v8;
  *(_OWORD *)(v14 + 48) = *(_OWORD *)(v4 + 112);
  *(void *)(v14 + 64) = *(void *)(v4 + 128);
  *(void *)(v14 + 72) = v12;
  *(void *)(v14 + 80) = v13;
  uint64_t v15 = OUTLINED_FUNCTION_144();
  uint64_t v16 = OUTLINED_FUNCTION_144();
  OUTLINED_FUNCTION_65_1();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_65_1();
  v18[0] = v15;
  v18[1] = v16;
  v18[2] = AssociatedConformanceWitness;
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_9();
  sub_1B61B0440();
  swift_release();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v18, v19);
  OUTLINED_FUNCTION_88_1();
  sub_1B61B00C0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
}

void sub_1B5F9E758(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1BA9B1EC0](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    uint64_t v5 = (char *)v4 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v4) + 0x100);
    *(void *)uint64_t v5 = 0;
    *((void *)v5 + 1) = 0;
    v5[16] = 1;
    Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    sub_1B5F9E7F8(Strong, 0);
  }
}

void sub_1B5F9E7F8(void *a1, int a2)
{
  uint64_t v3 = v2;
  int v44 = a2;
  objc_super v45 = a1;
  uint64_t v4 = *MEMORY[0x1E4FBC8C8] & *v2;
  uint64_t v5 = v4;
  v46[0] = swift_getAssociatedTypeWitness();
  v46[1] = swift_getAssociatedTypeWitness();
  v46[2] = swift_getAssociatedConformanceWitness();
  v46[3] = swift_getAssociatedConformanceWitness();
  uint64_t v6 = type metadata accessor for Blueprint();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v42 - v8;
  uint64_t v10 = (char *)v3 + *(void *)(v4 + 168);
  swift_beginAccess();
  uint64_t v11 = MEMORY[0x1BA9B1EC0](v10);
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    self;
    uint64_t v13 = v45;
    uint64_t v14 = (void *)swift_dynamicCastObjCClass();
    uint64_t v43 = v7;
    if (v14)
    {
      id v15 = objc_msgSend(v14, sel_collectionViewLayout);
      objc_msgSend(v15, sel_collectionViewContentSize);
    }
    else
    {
      objc_msgSend(v13, sel_contentSize);
    }
    uint64_t v21 = (void *)MEMORY[0x1E4FBC8C8];
    BlueprintProviderType.blueprint.getter();
    v22 = (void *)((char *)v3 + *(void *)((*v21 & *v3) + 0xD8));
    swift_beginAccess();
    if (!*v22) {
      goto LABEL_15;
    }
    swift_retain();
    objc_msgSend(v13, sel_contentOffset);
    double v24 = v23;
    double v26 = v25;
    objc_msgSend(v13, sel_bounds);
    double v28 = v27;
    double v30 = v29;
    double v32 = v31;
    double v34 = v33;
    id v35 = objc_msgSend(v13, sel_window);

    char v36 = v35 ? objc_msgSend(v13, sel_ts_isScrolling) ^ 1 : 0;
    uint64_t v37 = sub_1B60B6488(v36, v44, v24, v26, v28, v30, v32, v34);
    swift_release();
    if (v37)
    {
      objc_super v45 = (void *)v6;
      uint64_t v38 = *(void *)(v37 + 16);
      if (v38)
      {
        uint64_t v39 = *(void *)(v5 + 120);
        uint64_t v40 = *(void (**)(char *, void *, void, uint64_t))(v39 + 160);
        uint64_t v41 = v37 + 32;
        do
        {
          sub_1B5F004F8(v41, (uint64_t)v46);
          v40(v9, v46, *(void *)(v5 + 96), v39);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
          v41 += 40;
          --v38;
        }
        while (v38);
      }
      swift_bridgeObjectRelease();

      (*(void (**)(char *, void *))(v43 + 8))(v9, v45);
    }
    else
    {
LABEL_15:

      (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v6);
    }
  }
  else
  {
    sub_1B61B2B80();
    sub_1B5FAB800(0, (unint64_t *)&qword_1EB64D4A0, (unint64_t *)&qword_1EB64D4B0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1B61BE690;
    uint64_t v17 = sub_1B61B3A30();
    uint64_t v19 = v18;
    *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v16 + 64) = sub_1B5E2E40C();
    *(void *)(v16 + 32) = v17;
    *(void *)(v16 + 40) = v19;
    sub_1B5DFF760(0, (unint64_t *)&qword_1EB64D490);
    uint64_t v20 = (void *)sub_1B61B2F40();
    sub_1B61B0F90();
    swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall BlueprintCollectionViewDelegate.viewWillAppear()()
{
  OUTLINED_FUNCTION_25_3();
  uint64_t v11 = v2;
  uint64_t v12 = v3;
  OUTLINED_FUNCTION_13_23();
  OUTLINED_FUNCTION_0_1();
  uint64_t v4 = (void *)MEMORY[0x1BA9B1EC0]();
  if (!v4) {
    goto LABEL_14;
  }
  uint64_t v5 = v4;
  uint64_t v6 = (uint64_t)objc_msgSend(v4, sel_childViewControllers);
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
  unint64_t v7 = OUTLINED_FUNCTION_119_1();

  if (!(v7 >> 62))
  {
    OUTLINED_FUNCTION_104();
    if (v6) {
      goto LABEL_4;
    }
LABEL_13:

    swift_bridgeObjectRelease();
LABEL_14:
    OUTLINED_FUNCTION_26_2();
    return;
  }
  OUTLINED_FUNCTION_4_8();
  sub_1B61B3530();
  OUTLINED_FUNCTION_53();
  if (!v6) {
    goto LABEL_13;
  }
LABEL_4:
  OUTLINED_FUNCTION_13_23();
  if (v6 >= 1)
  {
    OUTLINED_FUNCTION_50_9();
    do
    {
      if (v1) {
        OUTLINED_FUNCTION_102();
      }
      else {
        uint64_t v8 = (UIViewController *)OUTLINED_FUNCTION_103();
      }
      OUTLINED_FUNCTION_118_1(v8);
      if (v10 == 3)
      {
        char v10 = 0;
        ViewControllerTransitionManager.beginTransition(viewController:transition:animated:)(v0, (TeaUI::ViewControllerTransitionManager::Transition)&v10, 0);
      }

      OUTLINED_FUNCTION_96();
    }
    while (!v9);
    goto LABEL_13;
  }
  __break(1u);
}

Swift::Void __swiftcall BlueprintCollectionViewDelegate.viewDidAppear()()
{
  OUTLINED_FUNCTION_25_3();
  OUTLINED_FUNCTION_13_23();
  OUTLINED_FUNCTION_0_1();
  uint64_t v2 = (void *)MEMORY[0x1BA9B1EC0]();
  if (!v2)
  {
    OUTLINED_FUNCTION_13_23();
    OUTLINED_FUNCTION_141();
    OUTLINED_FUNCTION_40_11();
    v8();
    goto LABEL_15;
  }
  uint64_t v3 = v2;
  uint64_t v4 = (uint64_t)objc_msgSend(v2, sel_childViewControllers);
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
  unint64_t v5 = OUTLINED_FUNCTION_119_1();

  if (!(v5 >> 62))
  {
    OUTLINED_FUNCTION_104();
    if (v4) {
      goto LABEL_4;
    }
LABEL_13:

    swift_bridgeObjectRelease();
LABEL_15:
    OUTLINED_FUNCTION_26_2();
    return;
  }
  OUTLINED_FUNCTION_4_8();
  sub_1B61B3530();
  OUTLINED_FUNCTION_53();
  if (!v4) {
    goto LABEL_13;
  }
LABEL_4:
  OUTLINED_FUNCTION_13_23();
  if (v4 >= 1)
  {
    OUTLINED_FUNCTION_50_9();
    do
    {
      if (v1) {
        OUTLINED_FUNCTION_102();
      }
      else {
        uint64_t v6 = (UIViewController *)OUTLINED_FUNCTION_103();
      }
      OUTLINED_FUNCTION_118_1(v6);
      if (!v9) {
        ViewControllerTransitionManager.endTransition(viewController:)(v0);
      }

      OUTLINED_FUNCTION_96();
    }
    while (!v7);
    goto LABEL_13;
  }
  __break(1u);
}

Swift::Void __swiftcall BlueprintCollectionViewDelegate.viewWillDisappear()()
{
  OUTLINED_FUNCTION_25_3();
  uint64_t v11 = v2;
  uint64_t v12 = v3;
  OUTLINED_FUNCTION_13_23();
  OUTLINED_FUNCTION_0_1();
  uint64_t v4 = (void *)MEMORY[0x1BA9B1EC0]();
  if (!v4) {
    goto LABEL_14;
  }
  unint64_t v5 = v4;
  uint64_t v6 = (uint64_t)objc_msgSend(v4, sel_childViewControllers);
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
  unint64_t v7 = OUTLINED_FUNCTION_119_1();

  if (!(v7 >> 62))
  {
    OUTLINED_FUNCTION_104();
    if (v6) {
      goto LABEL_4;
    }
LABEL_13:

    swift_bridgeObjectRelease();
LABEL_14:
    OUTLINED_FUNCTION_26_2();
    return;
  }
  OUTLINED_FUNCTION_4_8();
  sub_1B61B3530();
  OUTLINED_FUNCTION_53();
  if (!v6) {
    goto LABEL_13;
  }
LABEL_4:
  OUTLINED_FUNCTION_13_23();
  if (v6 >= 1)
  {
    OUTLINED_FUNCTION_50_9();
    do
    {
      if (v1) {
        OUTLINED_FUNCTION_102();
      }
      else {
        uint64_t v8 = (UIViewController *)OUTLINED_FUNCTION_103();
      }
      OUTLINED_FUNCTION_118_1(v8);
      if (v10 == 1)
      {
        char v10 = 1;
        ViewControllerTransitionManager.beginTransition(viewController:transition:animated:)(v0, (TeaUI::ViewControllerTransitionManager::Transition)&v10, 0);
      }

      OUTLINED_FUNCTION_96();
    }
    while (!v9);
    goto LABEL_13;
  }
  __break(1u);
}

Swift::Void __swiftcall BlueprintCollectionViewDelegate.viewDidDisappear()()
{
  OUTLINED_FUNCTION_25_3();
  OUTLINED_FUNCTION_13_23();
  OUTLINED_FUNCTION_0_1();
  uint64_t v2 = (void *)MEMORY[0x1BA9B1EC0]();
  if (!v2)
  {
    OUTLINED_FUNCTION_13_23();
    OUTLINED_FUNCTION_141();
    OUTLINED_FUNCTION_40_11();
    v8();
    goto LABEL_15;
  }
  uint64_t v3 = v2;
  uint64_t v4 = (uint64_t)objc_msgSend(v2, sel_childViewControllers);
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
  unint64_t v5 = OUTLINED_FUNCTION_119_1();

  if (!(v5 >> 62))
  {
    OUTLINED_FUNCTION_104();
    if (v4) {
      goto LABEL_4;
    }
LABEL_13:

    swift_bridgeObjectRelease();
LABEL_15:
    OUTLINED_FUNCTION_26_2();
    return;
  }
  OUTLINED_FUNCTION_4_8();
  sub_1B61B3530();
  OUTLINED_FUNCTION_53();
  if (!v4) {
    goto LABEL_13;
  }
LABEL_4:
  OUTLINED_FUNCTION_13_23();
  if (v4 >= 1)
  {
    OUTLINED_FUNCTION_50_9();
    do
    {
      if (v1) {
        OUTLINED_FUNCTION_102();
      }
      else {
        uint64_t v6 = (UIViewController *)OUTLINED_FUNCTION_103();
      }
      OUTLINED_FUNCTION_118_1(v6);
      if (v9 == 2) {
        ViewControllerTransitionManager.endTransition(viewController:)(v0);
      }

      OUTLINED_FUNCTION_96();
    }
    while (!v7);
    goto LABEL_13;
  }
  __break(1u);
}

void BlueprintCollectionViewDelegate.collectionView(_:canFocusItemAt:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v13 = v1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  uint64_t v15 = v3;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_137(v5, v13);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v7 = type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_14(v7);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_65_3();
  v17[0] = swift_getAssociatedTypeWitness();
  v17[1] = AssociatedTypeWitness;
  v17[2] = swift_getAssociatedConformanceWitness();
  v17[3] = AssociatedConformanceWitness;
  OUTLINED_FUNCTION_90_2();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_138_0();
  BlueprintProviderType.blueprint.getter();
  Blueprint.subscript.getter();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_36();
  v10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v14, v0, AssociatedTypeWitness);
  sub_1B5E00AB8(0, &qword_1E9DAAE58);
  if (swift_dynamicCast())
  {
    OUTLINED_FUNCTION_32_13();
    uint64_t v11 = OUTLINED_FUNCTION_1_0();
    v12(v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  else
  {
    OUTLINED_FUNCTION_59_5();
    sub_1B5FAC0CC((uint64_t)&v16, &qword_1E9DAAE60, &qword_1E9DAAE58, (uint64_t)&protocol descriptor for Focusable);
    BlueprintCollectionViewDelegate.collectionView(_:shouldSelectItemAt:)();
  }
  OUTLINED_FUNCTION_73();
}

void BlueprintCollectionViewDelegate.collectionView(_:shouldSelectItemAt:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v2 = v1;
  v44[0] = v3;
  v44[1] = (id)(*MEMORY[0x1E4FBC8C8] & *v0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  uint64_t v48 = v5;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_82();
  uint64_t v49 = v7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_0_10();
  uint64_t v45 = v9;
  uint64_t v46 = v10;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v11);
  v47 = (char *)v44 - v12;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v57 = v13;
  *((void *)&v57 + 1) = AssociatedTypeWitness;
  uint64_t v50 = AssociatedTypeWitness;
  *(void *)&long long v58 = v14;
  *((void *)&v58 + 1) = AssociatedConformanceWitness;
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  uint64_t v16 = v15;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_125_0();
  uint64_t v51 = v2;
  OUTLINED_FUNCTION_135_0();
  Blueprint.contains(indexPath:)();
  char v19 = v18;
  uint64_t v20 = *(void (**)(void))(v16 + 8);
  OUTLINED_FUNCTION_62_1();
  v20();
  if (v19)
  {
    OUTLINED_FUNCTION_125_0();
    uint64_t v21 = v47;
    uint64_t v22 = v51;
    Blueprint.subscript.getter();
    OUTLINED_FUNCTION_62_1();
    v20();
    OUTLINED_FUNCTION_1_51();
    OUTLINED_FUNCTION_48_0();
    v23();
    sub_1B5E00AB8(0, &qword_1EB6427F8);
    if (swift_dynamicCast())
    {
      sub_1B5E30E70(&v57, (uint64_t)v60);
      uint64_t v24 = OUTLINED_FUNCTION_1_51();
      BlueprintLayoutProviderType.layoutBlueprint.getter(v24, v25);
      uint64_t v26 = v22;
      uint64_t v27 = OUTLINED_FUNCTION_112_2();
      uint64_t v28 = OUTLINED_FUNCTION_112_2();
      OUTLINED_FUNCTION_17();
      uint64_t v29 = swift_getAssociatedConformanceWitness();
      OUTLINED_FUNCTION_17();
      uint64_t v30 = swift_getAssociatedConformanceWitness();
      *(void *)&long long v53 = v27;
      *((void *)&v53 + 1) = v28;
      *(void *)&long long v54 = v29;
      *((void *)&v54 + 1) = v30;
      uint64_t v31 = type metadata accessor for BlueprintLayout();
      sub_1B611A6BC(v26, v31);
      OUTLINED_FUNCTION_3_0();
      OUTLINED_FUNCTION_5_1();
      v32();
      __swift_project_boxed_opaque_existential_1(v60, v60[3]);
      uint64_t v33 = OUTLINED_FUNCTION_122_0();
      v34(v33);
      if (v56)
      {
        if (v56 != 1)
        {
          uint64_t v37 = (void *)sub_1B61AFC00();
          id v38 = objc_msgSend(v44[0], sel_cellForItemAtIndexPath_, v37);

          if (v38
            && (id v52 = v38,
                sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C00),
                sub_1B5E00AB8(0, qword_1EB642E80),
                (swift_dynamicCast() & 1) != 0))
          {
            uint64_t v40 = v45;
            uint64_t v39 = v46;
            if (*((void *)&v54 + 1))
            {
              sub_1B5E30E70(&v53, (uint64_t)&v57);
              __swift_project_boxed_opaque_existential_1(&v57, *((uint64_t *)&v58 + 1));
              uint64_t v41 = OUTLINED_FUNCTION_72_3();
              v42(v41);
              OUTLINED_FUNCTION_68();
              v43();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v57);
              goto LABEL_14;
            }
          }
          else
          {
            uint64_t v55 = 0;
            long long v53 = 0u;
            long long v54 = 0u;
            uint64_t v40 = v45;
            uint64_t v39 = v46;
          }
          sub_1B5FAC0CC((uint64_t)&v53, &qword_1EB642E98, qword_1EB642E80, (uint64_t)&protocol descriptor for ViewSelectable);
          (*(void (**)(char *, uint64_t))(v39 + 8))(v21, v40);
          goto LABEL_14;
        }
        (*(void (**)(char *, uint64_t))(v46 + 8))(v21, v45);
      }
      else
      {
        OUTLINED_FUNCTION_5_1();
        v36();
      }
LABEL_14:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
      goto LABEL_15;
    }
    uint64_t v59 = 0;
    long long v57 = 0u;
    long long v58 = 0u;
    OUTLINED_FUNCTION_5_1();
    v35();
    sub_1B5FAC0CC((uint64_t)&v57, (unint64_t *)&unk_1E9DA9EA0, &qword_1EB6427F8, (uint64_t)&protocol descriptor for Selectable);
  }
LABEL_15:
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5F9FAAC()
{
  return sub_1B5FA63E8();
}

uint64_t sub_1B5F9FAC4()
{
  return sub_1B5FA63E8();
}

void BlueprintCollectionViewDelegate.collectionView(_:didSelectItemAt:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v122 = v1;
  v121 = v2;
  OUTLINED_FUNCTION_37_14();
  uint64_t v114 = v3;
  sub_1B5EF667C();
  uint64_t v110 = v4;
  OUTLINED_FUNCTION_3_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_79(v6);
  uint64_t v8 = OUTLINED_FUNCTION_14(v7);
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_116();
  uint64_t v116 = OUTLINED_FUNCTION_80_1(v12);
  OUTLINED_FUNCTION_0_10();
  uint64_t v118 = v13;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_116();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_82();
  uint64_t v126 = swift_getAssociatedTypeWitness();
  uint64_t v127 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v129 = swift_getAssociatedConformanceWitness();
  uint64_t v18 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  uint64_t v20 = v19;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_63_6();
  type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_29_2();
  BlueprintProviderType.blueprint.getter();
  Blueprint.subscript.getter();
  uint64_t v111 = AssociatedConformanceWitness;
  uint64_t v113 = v18;
  v112 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  OUTLINED_FUNCTION_46();
  v23();
  sub_1B5FAB800(0, (unint64_t *)&qword_1EB64D4A0, (unint64_t *)&qword_1EB64D4B0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1B61C0140;
  uint64_t v25 = sub_1B61B3A30();
  uint64_t v27 = v26;
  uint64_t v28 = MEMORY[0x1E4FBB1A0];
  *(void *)(v24 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v29 = sub_1B5E2E40C();
  *(void *)(v24 + 64) = v29;
  *(void *)(v24 + 32) = v25;
  *(void *)(v24 + 40) = v27;
  uint64_t v119 = v0;
  uint64_t v30 = BlueprintItem.identifier.getter();
  *(void *)(v24 + 96) = v28;
  *(void *)(v24 + 104) = v29;
  *(void *)(v24 + 72) = v30;
  *(void *)(v24 + 80) = v31;
  uint64_t v32 = sub_1B61AFBE0();
  *(void *)(v24 + 136) = v28;
  *(void *)(v24 + 144) = v29;
  *(void *)(v24 + 112) = v32;
  *(void *)(v24 + 120) = v33;
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB64D490);
  double v34 = (void *)sub_1B61B2F40();
  sub_1B61B2BA0();
  sub_1B61B0F90();
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_78_2();
  OUTLINED_FUNCTION_134_0();
  sub_1B5FABE0C(v36 + *(void *)(v35 + 280), (uint64_t)&v126, qword_1EB642330, &qword_1EB644FD8, (uint64_t)&protocol descriptor for KeyboardInputMonitorType);
  uint64_t v37 = v129;
  if (v129)
  {
    uint64_t v38 = v130;
    __swift_project_boxed_opaque_existential_1(&v126, v129);
    uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
    char v41 = v40 & 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v126);
  }
  else
  {
    sub_1B5FAC0CC((uint64_t)&v126, qword_1EB642330, &qword_1EB644FD8, (uint64_t)&protocol descriptor for KeyboardInputMonitorType);
    uint64_t v39 = 0;
    char v41 = 1;
  }
  uint64_t v42 = v121;
  id v43 = objc_msgSend(v121, sel_window);
  uint64_t v44 = v120;
  if (v43)
  {
    uint64_t v45 = v43;
    id v46 = objc_msgSend(v43, sel_windowScene);
  }
  else
  {
    id v46 = 0;
  }
  OUTLINED_FUNCTION_78_2();
  OUTLINED_FUNCTION_134_0();
  uint64_t v49 = v48 + *(void *)(v47 + 168);
  OUTLINED_FUNCTION_24();
  uint64_t v50 = MEMORY[0x1BA9B1EC0](v49);
  if (v50)
  {
    uint64_t v51 = (void *)v50;
    BlueprintProviderType.blueprint.getter();
    uint64_t v126 = v39;
    LOBYTE(v127) = v41;
    uint64_t AssociatedConformanceWitness = (uint64_t)v46;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t *, void))(*(void *)(v114 + 120) + 56))(v111, v119, v122, &v126, *(void *)(v114 + 96));

    v112(v111, v113);
  }
  OUTLINED_FUNCTION_48_0();
  v52();
  sub_1B5E00AB8(0, &qword_1EB649180);
  if (swift_dynamicCast())
  {
    OUTLINED_FUNCTION_57_7(&v123);
    id v53 = objc_msgSend(v121, sel_traitCollection);
    OUTLINED_FUNCTION_88_1();
    uint64_t v55 = v54();

    uint64_t v56 = sub_1B61AFC80();
    long long v57 = (void *)sub_1B61B20C0();
    long long v58 = (void *)sub_1B61AFC00();
    uint64_t v59 = (char *)objc_msgSend(v121, sel_supplementaryViewForElementKind_atIndexPath_, v57, v58);

    uint64_t v60 = v117;
    if (v59)
    {
      sub_1B5FAB8B8();
      uint64_t v61 = swift_dynamicCastClass();
      if (v61)
      {
        v62 = *(char **)(v61 + qword_1EB644490);
        v63 = &v62[OBJC_IVAR____TtC5TeaUI13SeparatorView_hidesOnSelection];
        OUTLINED_FUNCTION_24();
        if (*v63 == 1)
        {
          v64 = &v62[OBJC_IVAR____TtC5TeaUI13SeparatorView_isSelected];
          OUTLINED_FUNCTION_21();
          char *v64 = 1;
          v65 = v62;
          sub_1B6044AA4();

          uint64_t v59 = v65;
        }
        uint64_t v60 = v117;
      }
    }
    if (v56 >= v55)
    {
      v66 = (void *)sub_1B61B20C0();
      uint64_t v67 = sub_1B61AFC80();
      BOOL v68 = __OFSUB__(v67, v55);
      uint64_t v69 = v67 - v55;
      if (v68)
      {
        __break(1u);
        return;
      }
      uint64_t v70 = sub_1B61AFC90();
      MEMORY[0x1BA9ACE10](v69, v70);
      v71 = (void *)sub_1B61AFC00();
      OUTLINED_FUNCTION_59();
      v72();
      v73 = (char *)objc_msgSend(v121, sel_supplementaryViewForElementKind_atIndexPath_, v66, v71);

      if (v73)
      {
        sub_1B5FAB8B8();
        uint64_t v74 = swift_dynamicCastClass();
        if (v74)
        {
          v75 = *(char **)(v74 + qword_1EB644490);
          v76 = &v75[OBJC_IVAR____TtC5TeaUI13SeparatorView_hidesOnSelection];
          OUTLINED_FUNCTION_24();
          if (*v76 == 1)
          {
            v77 = &v75[OBJC_IVAR____TtC5TeaUI13SeparatorView_isSelected];
            OUTLINED_FUNCTION_21();
            char *v77 = 1;
            v78 = v75;
            sub_1B6044AA4();

            v73 = v78;
          }
        }
      }
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v126);
    uint64_t v42 = v121;
    uint64_t v44 = v120;
  }
  else
  {
    uint64_t v125 = 0;
    long long v123 = 0u;
    long long v124 = 0u;
    sub_1B5FAC0CC((uint64_t)&v123, &qword_1EB649608, &qword_1EB649180, (uint64_t)&protocol descriptor for SeparatorViewIndexOffsetProviderType);
    uint64_t v60 = v117;
  }
  unsigned __int8 v79 = objc_msgSend(v42, sel_allowsMultipleSelection);
  v80 = *(void (**)(void))(v118 + 16);
  OUTLINED_FUNCTION_117_1();
  OUTLINED_FUNCTION_19_12();
  v80();
  if ((v79 & 1) == 0)
  {
    OUTLINED_FUNCTION_19_12();
    v80();
    __swift_storeEnumTagSinglePayload(v44, 0, 1, v116);
    OUTLINED_FUNCTION_78_2();
    OUTLINED_FUNCTION_134_0();
    uint64_t v84 = v83 + *(void *)(v82 + 192);
    OUTLINED_FUNCTION_24();
    if (MEMORY[0x1BA9B1EC0](v84))
    {
      uint64_t v85 = *(void *)(v84 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(ObjectType, v85);
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v87 = OUTLINED_FUNCTION_85_1();
      __swift_storeEnumTagSinglePayload(v87, v88, v89, v116);
    }
    uint64_t v90 = v115 + *(int *)(v110 + 48);
    sub_1B5EF6774(v120, v115);
    sub_1B5EF6774(v60, v90);
    OUTLINED_FUNCTION_28_11(v115, 1, v116);
    if (v92)
    {
      sub_1B5FABC24(v60, (void (*)(void))sub_1B5E81E54);
      sub_1B5FABC24(v120, (void (*)(void))sub_1B5E81E54);
      OUTLINED_FUNCTION_117_1();
      OUTLINED_FUNCTION_5_1();
      v91();
      OUTLINED_FUNCTION_28_11(v90, 1, v116);
      if (v92)
      {
        sub_1B5FABC24(v115, (void (*)(void))sub_1B5E81E54);
        goto LABEL_42;
      }
    }
    else
    {
      sub_1B5EF6774(v115, v109);
      OUTLINED_FUNCTION_28_11(v90, 1, v116);
      if (!v92)
      {
        OUTLINED_FUNCTION_107();
        v95();
        sub_1B5FAB868();
        char v96 = sub_1B61B20B0();
        v97 = *(void (**)(void))(v118 + 8);
        OUTLINED_FUNCTION_46();
        v97();
        sub_1B5FABC24(v117, (void (*)(void))sub_1B5E81E54);
        sub_1B5FABC24(v120, (void (*)(void))sub_1B5E81E54);
        OUTLINED_FUNCTION_46();
        v97();
        OUTLINED_FUNCTION_46();
        v97();
        sub_1B5FABC24(v115, (void (*)(void))sub_1B5E81E54);
        if (v96) {
          goto LABEL_42;
        }
LABEL_39:
        if (MEMORY[0x1BA9B1EC0](v84))
        {
          swift_getObjectType();
          OUTLINED_FUNCTION_19_12();
          v80();
          __swift_storeEnumTagSinglePayload(v108, 0, 1, v116);
          OUTLINED_FUNCTION_126_0();
          v94();
          swift_unknownObjectRelease();
        }
        goto LABEL_42;
      }
      sub_1B5FABC24(v117, (void (*)(void))sub_1B5E81E54);
      sub_1B5FABC24(v120, (void (*)(void))sub_1B5E81E54);
      v93 = *(void (**)(void))(v118 + 8);
      OUTLINED_FUNCTION_75();
      v93();
      OUTLINED_FUNCTION_117_1();
      OUTLINED_FUNCTION_75();
      v93();
    }
    sub_1B5FABC24(v115, (void (*)(void))sub_1B5EF667C);
    goto LABEL_39;
  }
  OUTLINED_FUNCTION_117_1();
  OUTLINED_FUNCTION_22_2();
  v81();
LABEL_42:
  v98 = (void *)sub_1B61AFC00();
  v99 = v121;
  id v100 = objc_msgSend(v121, sel_cellForItemAtIndexPath_, v98);

  if (v100)
  {
    sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C00);
    sub_1B5E00AB8(0, qword_1EB649D70);
    id v101 = v100;
    if (swift_dynamicCast())
    {
      sub_1B5E30E70(&v123, (uint64_t)&v126);
      __swift_project_boxed_opaque_existential_1(&v126, v129);
      uint64_t v102 = OUTLINED_FUNCTION_69_3();
      v104 = (uint64_t (*)(void))v103(v102);
      char v105 = v104();
      swift_release();
      v99 = v121;
      if (v105)
      {
        v106 = (void *)sub_1B61AFC00();
        objc_msgSend(v121, sel_deselectItemAtIndexPath_animated_, v106, 1);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v126);
    }
    else
    {
      uint64_t v125 = 0;
      long long v123 = 0u;
      long long v124 = 0u;

      sub_1B5FAC0CC((uint64_t)&v123, &qword_1EB64A378, qword_1EB649D70, (uint64_t)&protocol descriptor for CellSelectionActionable);
      v99 = v121;
    }
  }
  _s5TeaUI31BlueprintCollectionViewDelegateC010collectionE0_18didHighlightItemAtySo012UICollectionE0C_10Foundation9IndexPathVtF_0(v99, v122);

  OUTLINED_FUNCTION_5_1();
  v107();
  OUTLINED_FUNCTION_73();
}

uint64_t _s5TeaUI31BlueprintCollectionViewDelegateC010collectionE0_18didHighlightItemAtySo012UICollectionE0C_10Foundation9IndexPathVtF_0(void *a1, uint64_t a2)
{
  uint64_t v37 = a2;
  id v35 = a1;
  uint64_t v3 = *MEMORY[0x1E4FBC8C8] & *v2;
  uint64_t v4 = sub_1B61AF570();
  MEMORY[0x1F4188790](v4 - 8);
  v34[1] = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v9 = swift_getAssociatedConformanceWitness();
  v43[0] = AssociatedTypeWitness;
  v43[1] = v7;
  v43[2] = AssociatedConformanceWitness;
  uint64_t v44 = v9;
  uint64_t v10 = type metadata accessor for Blueprint();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v34 - v12;
  uint64_t v14 = type metadata accessor for BlueprintItem();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)v34 - v19;
  BlueprintProviderType.blueprint.getter();
  Blueprint.subscript.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v21 = v15;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
  sub_1B5E00AB8(0, (unint64_t *)&unk_1EB64B8B0);
  if (swift_dynamicCast())
  {
    sub_1B5E30E70(&v40, (uint64_t)v43);
    uint64_t v22 = v44;
    uint64_t v23 = v45;
    __swift_project_boxed_opaque_existential_1(v43, v44);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v23 + 8))(&v38, v22, v23);
    if (v39)
    {
      sub_1B5E30E70(&v38, (uint64_t)&v40);
      uint64_t v24 = (void *)sub_1B61AFC00();
      id v25 = objc_msgSend(v35, sel_cellForItemAtIndexPath_, v24);

      if (v25)
      {
        uint64_t v26 = *((void *)&v41 + 1);
        uint64_t v27 = __swift_project_boxed_opaque_existential_1(&v40, *((uint64_t *)&v41 + 1));
        uint64_t v28 = sub_1B61B0F80();
        uint64_t v37 = v14;
        MEMORY[0x1F4188790](v28);
        (*(void (**)(char *, void *, uint64_t))(v30 + 16))((char *)v34 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0), v27, v26);
        sub_1B5FF1908();
        uint64_t v31 = (void *)sub_1B61B0F70();
        id v32 = objc_msgSend(v25, sel_contentView);
        sub_1B61B2DC0();

        (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v37);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
      sub_1B5FAC0CC((uint64_t)&v38, &qword_1EB64A320, &qword_1EB64A0A0, MEMORY[0x1E4F181F8]);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  }
  else
  {
    uint64_t v42 = 0;
    long long v40 = 0u;
    long long v41 = 0u;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    return sub_1B5FAC0CC((uint64_t)&v40, &qword_1EB64B8C0, (unint64_t *)&unk_1EB64B8B0, (uint64_t)&protocol descriptor for AppEntityAnnotationProviding);
  }
}

uint64_t sub_1B5FA0FE4()
{
  return sub_1B5FA64D4();
}

void BlueprintCollectionViewDelegate.collectionView(_:didDeselectItemAt:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v84 = v1;
  uint64_t v83 = v2;
  OUTLINED_FUNCTION_37_14();
  uint64_t v77 = v3;
  sub_1B5EF667C();
  uint64_t v72 = v4;
  OUTLINED_FUNCTION_3_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_79(v6);
  uint64_t v8 = OUTLINED_FUNCTION_14(v7);
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_109();
  uint64_t v79 = v11;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_116();
  OUTLINED_FUNCTION_80_1(v13);
  OUTLINED_FUNCTION_0_10();
  uint64_t v81 = v15;
  uint64_t v82 = v14;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_116();
  uint64_t v17 = OUTLINED_FUNCTION_116_2();
  OUTLINED_FUNCTION_116_2();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v19 = OUTLINED_FUNCTION_90_2();
  OUTLINED_FUNCTION_0_10();
  uint64_t v21 = v20;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_63_6();
  type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_65_3();
  uint64_t v80 = v0;
  BlueprintProviderType.blueprint.getter();
  Blueprint.subscript.getter();
  uint64_t v24 = *(void (**)(void))(v21 + 8);
  uint64_t v76 = v19;
  OUTLINED_FUNCTION_68();
  v24();
  id v25 = v24;
  sub_1B5FAB800(0, (unint64_t *)&qword_1EB64D4A0, (unint64_t *)&qword_1EB64D4B0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1B61C0140;
  uint64_t v27 = sub_1B61B3A30();
  uint64_t v29 = v28;
  uint64_t v30 = MEMORY[0x1E4FBB1A0];
  *(void *)(v26 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v31 = sub_1B5E2E40C();
  *(void *)(v26 + 64) = v31;
  *(void *)(v26 + 32) = v27;
  *(void *)(v26 + 40) = v29;
  uint64_t v32 = BlueprintItem.identifier.getter();
  *(void *)(v26 + 96) = v30;
  *(void *)(v26 + 104) = v31;
  *(void *)(v26 + 72) = v32;
  *(void *)(v26 + 80) = v33;
  uint64_t v34 = sub_1B61AFBE0();
  *(void *)(v26 + 136) = v30;
  *(void *)(v26 + 144) = v31;
  *(void *)(v26 + 112) = v34;
  *(void *)(v26 + 120) = v35;
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB64D490);
  uint64_t v36 = (void *)sub_1B61B2F40();
  sub_1B61B2BA0();
  sub_1B61B0F90();
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_123_0();
  uint64_t v38 = v80 + *(void *)(v37 + 168);
  OUTLINED_FUNCTION_24();
  uint64_t v39 = MEMORY[0x1BA9B1EC0](v38);
  if (v39)
  {
    long long v40 = (void *)v39;
    BlueprintProviderType.blueprint.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)(v77 + 120) + 64))(v17, AssociatedConformanceWitness, v84, *(void *)(v77 + 96));

    ((void (*)(uint64_t, uint64_t))v25)(v17, v76);
  }
  unsigned __int8 v41 = objc_msgSend(v83, sel_allowsMultipleSelection);
  uint64_t v42 = *(void (**)(void))(v81 + 16);
  OUTLINED_FUNCTION_19_12();
  v42();
  if (v41)
  {
    OUTLINED_FUNCTION_33_11();
    v43();
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_19_12();
  v42();
  uint64_t v44 = OUTLINED_FUNCTION_91_2();
  __swift_storeEnumTagSinglePayload(v44, v45, v46, v82);
  OUTLINED_FUNCTION_123_0();
  uint64_t v48 = v80 + *(void *)(v47 + 192);
  OUTLINED_FUNCTION_24();
  if (MEMORY[0x1BA9B1EC0](v48))
  {
    uint64_t v49 = *(void *)(v48 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v51 = v79;
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(ObjectType, v49);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v51 = v79;
    uint64_t v52 = OUTLINED_FUNCTION_85_1();
    __swift_storeEnumTagSinglePayload(v52, v53, v54, v82);
  }
  uint64_t v55 = v74 + *(int *)(v72 + 48);
  sub_1B5EF6774(v75, v74);
  uint64_t v56 = OUTLINED_FUNCTION_129_0();
  sub_1B5EF6774(v56, v57);
  OUTLINED_FUNCTION_28_11(v74, 1, v82);
  if (!v61)
  {
    uint64_t v59 = OUTLINED_FUNCTION_17();
    sub_1B5EF6774(v59, v60);
    OUTLINED_FUNCTION_28_11(v55, 1, v82);
    if (!v61)
    {
      OUTLINED_FUNCTION_129_0();
      OUTLINED_FUNCTION_107();
      v66();
      sub_1B5FAB868();
      char v78 = sub_1B61B20B0();
      uint64_t v67 = *(void (**)(void))(v81 + 8);
      OUTLINED_FUNCTION_33_11();
      v67();
      sub_1B5FABC24(v79, (void (*)(void))sub_1B5E81E54);
      sub_1B5FABC24(v75, (void (*)(void))sub_1B5E81E54);
      OUTLINED_FUNCTION_33_11();
      v67();
      OUTLINED_FUNCTION_33_11();
      v67();
      uint64_t v68 = OUTLINED_FUNCTION_17();
      sub_1B5FABC24(v68, v69);
      if ((v78 & 1) == 0) {
        goto LABEL_17;
      }
      goto LABEL_19;
    }
    sub_1B5FABC24(v79, (void (*)(void))sub_1B5E81E54);
    uint64_t v62 = OUTLINED_FUNCTION_8_1();
    sub_1B5FABC24(v62, v63);
    v64 = *(void (**)(void))(v81 + 8);
    OUTLINED_FUNCTION_33_11();
    v64();
    ((void (*)(uint64_t, uint64_t))v64)(v73, v82);
LABEL_16:
    sub_1B5FABC24(v74, (void (*)(void))sub_1B5EF667C);
    goto LABEL_17;
  }
  sub_1B5FABC24(v51, (void (*)(void))sub_1B5E81E54);
  sub_1B5FABC24(v75, (void (*)(void))sub_1B5E81E54);
  OUTLINED_FUNCTION_33_11();
  v58();
  OUTLINED_FUNCTION_28_11(v55, 1, v82);
  if (!v61) {
    goto LABEL_16;
  }
  sub_1B5FABC24(v74, (void (*)(void))sub_1B5E81E54);
LABEL_19:
  if (MEMORY[0x1BA9B1EC0](v48))
  {
    swift_getObjectType();
    __swift_storeEnumTagSinglePayload(v71, 1, 1, v82);
    OUTLINED_FUNCTION_126_0();
    v70();
    swift_unknownObjectRelease();
  }
LABEL_17:
  _s5TeaUI31BlueprintCollectionViewDelegateC010collectionE0_18didHighlightItemAtySo012UICollectionE0C_10Foundation9IndexPathVtF_0(v83, v84);
  OUTLINED_FUNCTION_5_1();
  v65();
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5FA1808()
{
  return sub_1B5FA64D4();
}

Swift::Void __swiftcall BlueprintCollectionViewDelegate.collectionView(_:didUpdateFocusIn:with:)(UICollectionView *_, UICollectionViewFocusUpdateContext didUpdateFocusIn, UIFocusAnimationCoordinator with)
{
  OUTLINED_FUNCTION_83();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v44 = v7;
  sub_1B5E81E54();
  uint64_t v9 = OUTLINED_FUNCTION_14(v8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v43 - v13;
  uint64_t v15 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_12();
  uint64_t v43 = v19;
  OUTLINED_FUNCTION_26();
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v43 - v22;
  MEMORY[0x1F4188790](v21);
  id v25 = (char *)&v43 - v24;
  id v26 = objc_msgSend(v6, sel_previouslyFocusedIndexPath);
  if (v26)
  {
    uint64_t v27 = v26;
    sub_1B61AFC40();

    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v28(v14, v23, v15);
    uint64_t v29 = OUTLINED_FUNCTION_91_2();
    __swift_storeEnumTagSinglePayload(v29, v30, v31, v15);
    OUTLINED_FUNCTION_28_11((uint64_t)v14, 1, v15);
    if (!v32)
    {
      v28(v25, v14, v15);
      _s5TeaUI31BlueprintCollectionViewDelegateC010collectionE0_18didHighlightItemAtySo012UICollectionE0C_10Foundation9IndexPathVtF_0(v44, (uint64_t)v25);
      OUTLINED_FUNCTION_59();
      v33();
      goto LABEL_6;
    }
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, v15);
  }
  sub_1B5FABC24((uint64_t)v14, (void (*)(void))sub_1B5E81E54);
LABEL_6:
  id v34 = objc_msgSend(v6, sel_nextFocusedIndexPath);
  if (!v34)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, v15);
    goto LABEL_10;
  }
  uint64_t v35 = v34;
  sub_1B61AFC40();

  uint64_t v36 = *(void (**)(void))(v17 + 32);
  ((void (*)(char *, char *, uint64_t))v36)(v12, v23, v15);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v15);
  OUTLINED_FUNCTION_28_11((uint64_t)v12, 1, v15);
  if (v32)
  {
LABEL_10:
    sub_1B5FABC24((uint64_t)v12, (void (*)(void))sub_1B5E81E54);
    goto LABEL_11;
  }
  uint64_t v37 = v43;
  OUTLINED_FUNCTION_127_0();
  v36();
  _s5TeaUI31BlueprintCollectionViewDelegateC010collectionE0_18didHighlightItemAtySo012UICollectionE0C_10Foundation9IndexPathVtF_0(v44, v37);
  OUTLINED_FUNCTION_22_2();
  v38();
LABEL_11:
  OUTLINED_FUNCTION_25_1();
  uint64_t v40 = v4 + *(void *)(v39 + 192);
  OUTLINED_FUNCTION_24();
  if (!MEMORY[0x1BA9B1EC0](v40)
    || (uint64_t v41 = *(void *)(v40 + 8),
        uint64_t ObjectType = swift_getObjectType(),
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v41 + 32))(&v45, ObjectType, v41),
        swift_unknownObjectRelease(),
        (v45 & 1) == 0))
  {
    OUTLINED_FUNCTION_25_1();
    OUTLINED_FUNCTION_24();
    if (swift_weakLoadStrong())
    {
      KeyCommandManager.invalidate(clearState:)(1);
      swift_release();
    }
  }
  OUTLINED_FUNCTION_73();
}

void sub_1B5FA1BC4(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = a1;
  BlueprintCollectionViewDelegate.collectionView(_:didUpdateFocusIn:with:)(v8, (UICollectionViewFocusUpdateContext)v9, (UIFocusAnimationCoordinator)v11);
}

void BlueprintCollectionViewDelegate.collectionView(_:contextMenuConfigurationForItemAt:point:)(void *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_107_0();
  id v9 = (void *)OUTLINED_FUNCTION_107_0();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_63_6();
  type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_14_13();
  if (objc_msgSend(a1, sel_allowsSelection)
    && (objc_msgSend(a1, sel_isEditing) & 1) == 0
    && (objc_msgSend(a1, sel_allowsMultipleSelection) & 1) == 0)
  {
    type metadata accessor for SwipeActionCollectionView();
    if (swift_dynamicCastClass())
    {
      id v42 = a1;
      if (sub_1B605C580())
      {

        return;
      }
      sub_1B60FB528();
      sub_1B60FB184(1, 0, 0);
    }
    id v12 = objc_msgSend(a1, sel_hitTest_withEvent_, 0, a3, a4);
    if (!v12 || (uint64_t v13 = v12, v43 = sub_1B5FD123C(), v13, (v43 & 1) == 0))
    {
      uint64_t v14 = (void *)sub_1B61AFC00();
      id v44 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v14);

      BlueprintProviderType.blueprint.getter();
      Blueprint.subscript.getter();
      OUTLINED_FUNCTION_46();
      v15();
      uint64_t v16 = OUTLINED_FUNCTION_1_51();
      uint64_t v18 = sub_1B5FA22A4(v16, v17, a2, a1);
      uint64_t v19 = sub_1B5FA29BC(v9, a2, v5, a1);
      unint64_t v20 = sub_1B5FA3240(v5, v44, v18, v19);
      uint64_t v21 = OUTLINED_FUNCTION_1_51();
      unint64_t v23 = (unint64_t)sub_1B5FA33D0(v21, v22, a2);
      if (v20 >> 62)
      {
        sub_1B61B1F70();
        uint64_t v24 = sub_1B61B3530();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v24 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (!(v24 | v23))
      {
        if (!v18
          || (swift_retain(), id v25 = (void *)ContextMenu.activityItemConfiguration.getter(), swift_release(), !v25))
        {
          OUTLINED_FUNCTION_5_1();
          v41();
          swift_bridgeObjectRelease();

          swift_release();
          swift_release();
          return;
        }
      }
      id v26 = (char *)v5 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v5) + 0xC8);
      OUTLINED_FUNCTION_24();
      uint64_t v27 = (void *)MEMORY[0x1BA9B1EC0](v26);
      if (!v27)
      {
LABEL_23:
        sub_1B5DFF760(0, (unint64_t *)&unk_1EB641E50);
        BlueprintItem.identifier.getter();
        uint64_t v35 = sub_1B61B20C0();
        swift_bridgeObjectRelease();
        uint64_t v36 = swift_allocObject();
        *(void *)(v36 + 16) = v23;
        *(void *)(v36 + 24) = v44;
        uint64_t v37 = OUTLINED_FUNCTION_43_0();
        *(void *)(v37 + 16) = v20;
        id v38 = (id)v23;
        id v39 = v44;
        sub_1B5E56B04(v35, (uint64_t)sub_1B5FAB958, v36, (uint64_t)sub_1B5EFF610, v37);

        swift_release();
        swift_release();
        OUTLINED_FUNCTION_5_1();
        v40();
        return;
      }
      uint64_t v28 = v27;
      id v29 = objc_msgSend(v27, sel_view);

      if (v29)
      {
        id v30 = objc_msgSend(v29, sel_window);

        if (v30)
        {
          id v31 = objc_msgSend(v30, sel_rootViewController);

          if (v31)
          {
            id v32 = objc_msgSend(v31, sel_presentedViewController);

            if (v32)
            {
              self;
              uint64_t v33 = swift_dynamicCastObjCClass();

              if (v33)
              {
                swift_bridgeObjectRelease();

                swift_release();
                swift_release();
                OUTLINED_FUNCTION_5_1();
                v34();
                return;
              }
            }
          }
        }
        goto LABEL_23;
      }
      __break(1u);
    }
  }
}

uint64_t sub_1B5FA22A4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v77 = a4;
  uint64_t v80 = a3;
  uint64_t v83 = a1;
  uint64_t v5 = (void *)(*MEMORY[0x1E4FBC8C8] & *a2);
  uint64_t v6 = v5[13];
  uint64_t v7 = v5[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v70 = v7;
  uint64_t v71 = v6;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v10 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v89 = AssociatedTypeWitness;
  *((void *)&v89 + 1) = v9;
  *(void *)&long long v90 = AssociatedConformanceWitness;
  *((void *)&v90 + 1) = v10;
  uint64_t v11 = type metadata accessor for Blueprint();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v76 = (char *)&v62 - v12;
  uint64_t v13 = sub_1B61AFCB0();
  uint64_t v72 = *(void *)(v13 - 8);
  uint64_t v73 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v75 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v5[14];
  uint64_t v79 = a2;
  uint64_t v16 = v5[11];
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  uint64_t v78 = AssociatedTypeWitness;
  *(void *)&long long v89 = AssociatedTypeWitness;
  *((void *)&v89 + 1) = v9;
  uint64_t v81 = v18;
  uint64_t v82 = v17;
  *(void *)&long long v90 = v17;
  *((void *)&v90 + 1) = v18;
  uint64_t v21 = v20;
  uint64_t v91 = AssociatedConformanceWitness;
  uint64_t v92 = v10;
  uint64_t v22 = v10;
  uint64_t v23 = v19;
  uint64_t v93 = v19;
  uint64_t v94 = v20;
  uint64_t v24 = type metadata accessor for ContextMenuContext();
  uint64_t v74 = *(void *)(v24 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v62 - v26;
  MEMORY[0x1F4188790](v25);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))((char *)&v62 - v28, v83, v9);
  sub_1B5E00AB8(0, (unint64_t *)&qword_1EB643F90);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v91 = 0;
    long long v89 = 0u;
    long long v90 = 0u;
    sub_1B5FAC0CC((uint64_t)&v89, (unint64_t *)&unk_1E9DA9050, (unint64_t *)&qword_1EB643F90, (uint64_t)&protocol descriptor for ContextMenuProviding);
    return 0;
  }
  uint64_t v68 = v9;
  uint64_t v69 = v16;
  v65 = v27;
  uint64_t v66 = v24;
  uint64_t v83 = v15;
  id v30 = (objc_class *)v21;
  uint64_t v67 = v22;
  sub_1B5E30E70(&v89, (uint64_t)v95);
  uint64_t v31 = v96;
  uint64_t v32 = v97;
  __swift_project_boxed_opaque_existential_1(v95, v96);
  char v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
  uint64_t v34 = v81;
  uint64_t v35 = v82;
  if (v33)
  {
    BlueprintLayoutProviderType.layoutBlueprint.getter(v69, v83);
    *(void *)&long long v85 = v35;
    *((void *)&v85 + 1) = v34;
    uint64_t v86 = v23;
    uint64_t v87 = v30;
    uint64_t v36 = type metadata accessor for BlueprintLayout();
    char v37 = sub_1B611A6BC(v80, v36);
    (*(void (**)(long long *, uint64_t))(*(void *)(v36 - 8) + 8))(&v89, v36);
    if ((v37 & 1) == 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v95);
      return 0;
    }
  }
  uint64_t v38 = v96;
  uint64_t v39 = v97;
  __swift_project_boxed_opaque_existential_1(v95, v96);
  uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8))(v38, v39);
  if (v40)
  {
    uint64_t v41 = v40;
  }
  else
  {
    uint64_t v62 = v97;
    uint64_t v63 = v96;
    v64 = __swift_project_boxed_opaque_existential_1(v95, v96);
    uint64_t v42 = v23;
    char v43 = v75;
    (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v75, v80, v73);
    id v44 = v76;
    BlueprintProviderType.blueprint.getter();
    BlueprintLayoutProviderType.layoutBlueprint.getter(v69, v83);
    uint64_t v45 = (objc_class *)type metadata accessor for RendererEnvironment();
    id v46 = objc_allocWithZone(v45);
    id v47 = v77;
    id v48 = v77;
    id v49 = RendererEnvironment.init(scrollView:testing:)(v47, 0);
    uint64_t v87 = v45;
    uint64_t v88 = &protocol witness table for RendererEnvironment;
    *(void *)&long long v85 = v49;
    uint64_t v50 = v30;
    char v61 = v30;
    uint64_t v51 = v67;
    uint64_t v52 = AssociatedConformanceWitness;
    uint64_t v53 = (uint64_t)v65;
    uint64_t v54 = (uint64_t)v43;
    uint64_t v55 = (uint64_t)v44;
    uint64_t v56 = v78;
    uint64_t v57 = v68;
    uint64_t v58 = v81;
    uint64_t v59 = v82;
    sub_1B5F19B14(v54, v55, &v89, &v85, (uint64_t)v65);
    uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, objc_class *, uint64_t, uint64_t, objc_class *))(v62 + 24))(v53, v56, v57, v59, v58, v52, v51, v42, v50, v63, v62, v61);
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v53, v66);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v95);
  return v41;
}

uint64_t sub_1B5FA29BC(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v62 = a4;
  uint64_t v59 = a2;
  v64 = a1;
  uint64_t v5 = (void *)(*MEMORY[0x1E4FBC8C8] & *a3);
  uint64_t v6 = v5[13];
  uint64_t v7 = v5[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v60 = v6;
  uint64_t v56 = v7;
  uint64_t v10 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v70 = AssociatedTypeWitness;
  *((void *)&v70 + 1) = v9;
  *(void *)&long long v71 = AssociatedConformanceWitness;
  *((void *)&v71 + 1) = v10;
  uint64_t v11 = type metadata accessor for Blueprint();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v58 = (char *)&v48 - v12;
  uint64_t v13 = sub_1B61AFCB0();
  uint64_t v50 = *(void *)(v13 - 8);
  uint64_t v51 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v65 = (uint64_t)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v5[14];
  uint64_t v55 = a3;
  uint64_t v16 = v5[11];
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  uint64_t v52 = v15;
  uint64_t v20 = v16;
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  uint64_t v63 = AssociatedTypeWitness;
  *(void *)&long long v70 = AssociatedTypeWitness;
  *((void *)&v70 + 1) = v9;
  uint64_t v57 = v17;
  *(void *)&long long v71 = v17;
  uint64_t v22 = v18;
  uint64_t v23 = v9;
  *((void *)&v71 + 1) = v22;
  uint64_t v72 = AssociatedConformanceWitness;
  uint64_t v61 = v10;
  uint64_t v73 = v10;
  uint64_t v74 = v19;
  uint64_t v53 = v21;
  uint64_t v54 = v19;
  uint64_t v75 = v21;
  uint64_t v24 = (void *)type metadata accessor for ContextMenuContext();
  uint64_t v25 = *(v24 - 1);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)&v48 - v27;
  uint64_t v29 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v31 = (char *)&v48 - v30;
  sub_1B61B0220();
  uint64_t v32 = 0;
  if (sub_1B61B0200())
  {
    (*(void (**)(char *, void *, uint64_t))(v29 + 16))(v31, v64, v23);
    sub_1B5E00AB8(0, (unint64_t *)&qword_1EB643F90);
    if (swift_dynamicCast())
    {
      sub_1B5E30E70(&v70, (uint64_t)v76);
      uint64_t v48 = v78;
      uint64_t v49 = v77;
      v64 = __swift_project_boxed_opaque_existential_1(v76, v77);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v65, v59, v51);
      uint64_t v59 = v25;
      char v33 = v58;
      BlueprintProviderType.blueprint.getter();
      BlueprintLayoutProviderType.layoutBlueprint.getter(v20, v52);
      uint64_t v34 = (objc_class *)type metadata accessor for RendererEnvironment();
      id v35 = objc_allocWithZone(v34);
      id v36 = v62;
      id v37 = v62;
      id v38 = RendererEnvironment.init(scrollView:testing:)(v36, 0);
      uint64_t v68 = v34;
      uint64_t v69 = &protocol witness table for RendererEnvironment;
      *(void *)&long long v67 = v38;
      uint64_t v39 = v53;
      uint64_t v47 = v53;
      id v62 = v24;
      uint64_t v40 = v54;
      uint64_t v41 = v61;
      uint64_t v42 = AssociatedConformanceWitness;
      uint64_t v43 = (uint64_t)v33;
      uint64_t v44 = v63;
      uint64_t v45 = v57;
      sub_1B5F19B14(v65, v43, &v70, &v67, (uint64_t)v28);
      uint64_t v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 32))(v28, v44, v23, v45, v22, v42, v41, v40, v39, v49, v48, v47);
      (*(void (**)(char *, id))(v59 + 8))(v28, v62);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
    }
    else
    {
      uint64_t v72 = 0;
      long long v70 = 0u;
      long long v71 = 0u;
      sub_1B5FAC0CC((uint64_t)&v70, (unint64_t *)&unk_1E9DA9050, (unint64_t *)&qword_1EB643F90, (uint64_t)&protocol descriptor for ContextMenuProviding);
      return 0;
    }
  }
  return v32;
}

uint64_t sub_1B5FA2FCC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v4 = *MEMORY[0x1E4FBC8C8] & *a2;
  if (!a1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v7 = *MEMORY[0x1E4FBC8C8] & *a2;
  HIBYTE(v26) = 2;
  sub_1B5F004F8((uint64_t)a2 + *(void *)(v4 + 272), (uint64_t)v23);
  long long v27 = 0u;
  long long v28 = 0u;
  LOBYTE(v29) = 1;
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = *(void *)(v7 + 80);
  *(_OWORD *)(v9 + 24) = *(_OWORD *)(v7 + 88);
  *(void *)(v9 + 40) = *(void *)(v7 + 104);
  *(_OWORD *)(v9 + 48) = *(_OWORD *)(v7 + 112);
  *(void *)(v9 + 64) = *(void *)(v7 + 128);
  *(void *)(v9 + 72) = v8;
  type metadata accessor for CommandExecutionSource();
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = v24;
  uint64_t v12 = v25;
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v16 + 16))(v15);
  swift_retain();
  id v17 = a3;
  sub_1B61137DC((uint64_t)&v26 + 7, (uint64_t)v15, (uint64_t)a3, (uint64_t)&v27, 0, (uint64_t)sub_1B5FABF70, v9, v10, v11, v12, v23[0], v23[1], v23[2], v24, v25, v26, v27, *((uint64_t *)&v27 + 1), v28,
    *((uint64_t *)&v28 + 1),
    v29,
    v30);
  uint64_t v19 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  uint64_t v20 = (void *)((char *)a2 + *(void *)((*v3 & *a2) + 0xA0));
  uint64_t v21 = ContextMenu.build(commandCenter:source:)(*v20, v20[1], v19);
  swift_release();
  swift_release();
  return v21;
}

uint64_t sub_1B5FA3240(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1EB64BB40 != -1) {
    swift_once();
  }
  type metadata accessor for BlueprintCollectionViewDelegate();
  swift_getWitnessTable();
  sub_1B61AFD60();
  if (!v13) {
    return sub_1B5FA2FCC(a3, a1, a2);
  }
  if (v13 == 1)
  {
    uint64_t v8 = sub_1B5FA2FCC(a4, a1, a2);
    unint64_t v9 = sub_1B5FA2FCC(a3, a1, a2);
    uint64_t v12 = v8;
  }
  else
  {
    uint64_t v11 = sub_1B5FA2FCC(a3, a1, a2);
    unint64_t v9 = sub_1B5FA2FCC(a4, a1, a2);
    uint64_t v12 = v11;
  }
  sub_1B5E51028(v9);
  return v12;
}

id sub_1B5FA33D0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t AssociatedConformanceWitness = a3;
  uint64_t v40 = (uint64_t *)(*MEMORY[0x1E4FBC8C8] & *a2);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = swift_getAssociatedTypeWitness();
  *(void *)&long long v46 = AssociatedTypeWitness;
  *((void *)&v46 + 1) = v6;
  *(void *)&long long v47 = swift_getAssociatedConformanceWitness();
  *((void *)&v47 + 1) = swift_getAssociatedConformanceWitness();
  uint64_t v7 = a1;
  uint64_t v8 = type metadata accessor for Blueprint();
  uint64_t v38 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v37 = (char *)&v34 - v9;
  uint64_t v10 = sub_1B61AFCB0();
  uint64_t v41 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  char v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v34 - v14;
  id v17 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v39 = v7;
  v17(v15, v7, v6);
  sub_1B5E00AB8(0, (unint64_t *)&qword_1EB643F90);
  if (swift_dynamicCast())
  {
    uint64_t v35 = v8;
    sub_1B5E30E70(&v46, (uint64_t)v49);
    uint64_t v18 = v50;
    uint64_t v19 = v51;
    __swift_project_boxed_opaque_existential_1(v49, v50);
    char v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v13, AssociatedConformanceWitness, v10);
    if (v20)
    {
      BlueprintLayoutProviderType.layoutBlueprint.getter(v40[11], v40[14]);
      uint64_t v21 = swift_getAssociatedTypeWitness();
      uint64_t v22 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v23 = swift_getAssociatedConformanceWitness();
      uint64_t v42 = v21;
      uint64_t v43 = v22;
      uint64_t v44 = AssociatedConformanceWitness;
      uint64_t v45 = v23;
      uint64_t v24 = type metadata accessor for BlueprintLayout();
      LOBYTE(v21) = sub_1B611A6BC((uint64_t)v13, v24);
      (*(void (**)(long long *, uint64_t))(*(void *)(v24 - 8) + 8))(&v46, v24);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v10);
      if ((v21 & 1) == 0)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
        return 0;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v10);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
    uint64_t v25 = (void *)MEMORY[0x1E4FBC8C8];
    uint64_t v8 = v35;
  }
  else
  {
    uint64_t v48 = 0;
    long long v46 = 0u;
    long long v47 = 0u;
    sub_1B5FAC0CC((uint64_t)&v46, (unint64_t *)&unk_1E9DA9050, (unint64_t *)&qword_1EB643F90, (uint64_t)&protocol descriptor for ContextMenuProviding);
    uint64_t v25 = (void *)MEMORY[0x1E4FBC8C8];
  }
  uint64_t v26 = (char *)a2 + *(void *)((*v25 & *a2) + 0xA8);
  swift_beginAccess();
  id result = (id)MEMORY[0x1BA9B1EC0](v26);
  if (!result) {
    return result;
  }
  long long v28 = result;
  uint64_t v29 = v37;
  BlueprintProviderType.blueprint.getter();
  uint64_t v30 = (UIViewController *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v40[15] + 80))(v29, v39, v40[12]);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v29, v8);
  if (!v30) {
    return 0;
  }
  self;
  id result = (id)swift_dynamicCastObjCClass();
  if (!result)
  {
    setPreviewing(viewController:previewing:)(v30, 1);
    uint64_t v31 = (char *)a2 + *(void *)((*v25 & *a2) + 0xC8);
    swift_beginAccess();
    uint64_t v32 = (void *)MEMORY[0x1BA9B1EC0](v31);
    id v33 = objc_allocWithZone((Class)type metadata accessor for PreviewViewController());
    return PreviewViewController.init(previewedViewController:triggeringViewController:)(v30, v32);
  }
  return result;
}

void *sub_1B5FA3A4C(void *a1, void *a2)
{
  if (!a1)
  {
    if (a2
      && (sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C00),
          sub_1B5E00AB8(0, (unint64_t *)&unk_1E9DAB180),
          id v4 = a2,
          (swift_dynamicCast() & 1) != 0))
    {
      if (*((void *)&v10 + 1))
      {
        sub_1B5E30E70(&v9, (uint64_t)v12);
        uint64_t v5 = v13;
        uint64_t v6 = v14;
        __swift_project_boxed_opaque_existential_1(v12, v13);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(1, v5, v6);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v11 = 0;
      long long v9 = 0u;
      long long v10 = 0u;
    }
    sub_1B5FAC0CC((uint64_t)&v9, (unint64_t *)&unk_1E9DA9E50, (unint64_t *)&unk_1E9DAB180, (uint64_t)&protocol descriptor for ContextMenuPreviewable);
  }
LABEL_8:
  id v7 = a1;
  return a1;
}

id sub_1B5FA3B6C(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  uint64_t v9 = sub_1B61AFCB0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B61AFC40();
  id v13 = a5;
  id v14 = a1;
  BlueprintCollectionViewDelegate.collectionView(_:contextMenuConfigurationForItemAt:point:)(v13, (uint64_t)v12, a2, a3);
  uint64_t v16 = v15;

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v16;
}

id BlueprintCollectionViewDelegate.collectionView(_:willPerformPreviewActionForMenuWith:animator:)(void *a1, void *a2, void *a3)
{
  id result = objc_msgSend(a1, sel_allowsSelection);
  if (result)
  {
    uint64_t v7 = OUTLINED_FUNCTION_43_0();
    id v8 = objc_msgSend(a3, sel_previewViewController);
    if (v8)
    {
      *(void *)(v7 + 16) = v8;
      objc_msgSend(a3, sel_setPreferredCommitStyle_, 1);
      uint64_t v9 = (void *)swift_allocObject();
      v9[2] = v7;
      v9[3] = v3;
      v9[4] = a2;
      v15[4] = sub_1B5FABA08;
      v15[5] = v9;
      v15[0] = MEMORY[0x1E4F143A8];
      v15[1] = 1107296256;
      v15[2] = sub_1B5E3729C;
      v15[3] = &block_descriptor_42;
      uint64_t v10 = _Block_copy(v15);
      swift_retain();
      id v11 = v3;
      id v12 = a2;
      swift_release();
      objc_msgSend(a3, sel_addCompletion_, v10);
      _Block_release(v10);
      return (id)swift_release();
    }
    else
    {
      swift_deallocUninitializedObject();
      id v13 = (void *)OUTLINED_FUNCTION_8_1();
      return (id)sub_1B5FA3E24(v13, v14);
    }
  }
  return result;
}

uint64_t sub_1B5FA3E24(void *a1, void *a2)
{
  uint64_t v44 = *MEMORY[0x1E4FBC8C8] & *a2;
  uint64_t v4 = v44;
  sub_1B5E81E54();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v50 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1B61AFCB0();
  uint64_t v46 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v45 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v4 + 104);
  uint64_t v10 = *(void *)(v4 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = swift_getAssociatedConformanceWitness();
  uint64_t v53 = AssociatedTypeWitness;
  uint64_t v54 = v12;
  uint64_t v55 = AssociatedConformanceWitness;
  uint64_t v56 = v14;
  uint64_t v15 = type metadata accessor for Blueprint();
  uint64_t v51 = *(void **)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  id v17 = (char *)&v38 - v16;
  uint64_t v18 = type metadata accessor for BlueprintItem();
  uint64_t v19 = sub_1B61B2F80();
  uint64_t v47 = *(void *)(v19 - 8);
  uint64_t v48 = v19;
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v38 - v21;
  uint64_t v23 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v49 = (char *)&v38 - v24;
  id v52 = objc_msgSend(a1, sel_identifier);
  sub_1B5EFF660();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v42 = v7;
    uint64_t v43 = v23;
    uint64_t v41 = (char *)a2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a2) + 0x88);
    BlueprintProviderType.blueprint.getter();
    Blueprint.item(for:)();
    swift_bridgeObjectRelease();
    uint64_t v26 = (void (*)(char *, uint64_t))v51[1];
    v26(v17, v15);
    if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v18) == 1)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v22, v48);
    }
    else
    {
      uint64_t v51 = a2;
      uint64_t v27 = v43;
      long long v28 = v49;
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v49, v22, v18);
      uint64_t v47 = v10;
      uint64_t v48 = v9;
      uint64_t v29 = v28;
      BlueprintProviderType.blueprint.getter();
      uint64_t v30 = (uint64_t)v50;
      Blueprint.indexPath(forItem:)();
      uint64_t v39 = v15;
      uint64_t v40 = v26;
      v26(v17, v15);
      uint64_t v31 = v42;
      if (__swift_getEnumTagSinglePayload(v30, 1, v42) == 1)
      {
        (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v18);
        return sub_1B5FABC24(v30, (void (*)(void))sub_1B5E81E54);
      }
      else
      {
        uint64_t v38 = v18;
        uint64_t v32 = v30;
        id v33 = v45;
        uint64_t v34 = v46;
        (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v45, v32, v31);
        uint64_t v35 = (char *)v51 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v51) + 0xA8);
        swift_beginAccess();
        uint64_t v36 = MEMORY[0x1BA9B1EC0](v35);
        if (v36)
        {
          id v37 = (void *)v36;
          BlueprintProviderType.blueprint.getter();
          (*(void (**)(char *, char *, char *, void))(*(void *)(v44 + 120) + 88))(v17, v29, v33, *(void *)(v44 + 96));

          v40(v17, v39);
        }
        (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v31);
        return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v29, v38);
      }
    }
  }
  return result;
}

void sub_1B5FA4490(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = (id *)(a1 + 16);
  swift_beginAccess();
  uint64_t v7 = *(void **)(a1 + 16);
  type metadata accessor for PreviewViewController();
  if (swift_dynamicCastClass())
  {
    id v8 = v7;
    id v9 = sub_1B5E56EEC();
    swift_beginAccess();
    id v10 = *v6;
    *uint64_t v6 = v9;

    swift_beginAccess();
    id v11 = (UIViewController *)*v6;
    setPreviewing(viewController:previewing:)(v11, 0);
  }
  id v12 = sub_1B5FA4684(a2, (SEL *)&selRef_splitViewController);
  id v13 = sub_1B5FA4684(a2, (SEL *)&selRef_tabBarController);
  uint64_t v14 = v13;
  if (v12)
  {
    swift_beginAccess();
    objc_msgSend(v12, sel_showViewController_sender_, *v6, a2);
  }
  else if (v13)
  {
    swift_beginAccess();
    objc_msgSend(v14, sel_showViewController_sender_, *v6, a2);
  }
  else
  {
    uint64_t v15 = (char *)a2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a2) + 0xC8);
    swift_beginAccess();
    uint64_t v16 = MEMORY[0x1BA9B1EC0](v15);
    if (v16)
    {
      id v17 = (void *)v16;
      swift_beginAccess();
      objc_msgSend(v17, sel_showViewController_sender_, *v6, a2);
    }
  }
  sub_1B5FA3E24(a3, a2);
}

id sub_1B5FA4684(void *a1, SEL *a2)
{
  uint64_t v3 = (char *)a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a1) + 0xC8);
  OUTLINED_FUNCTION_24();
  uint64_t v4 = (void *)MEMORY[0x1BA9B1EC0](v3);
  if (!v4 || (uint64_t v5 = v4, v6 = [v4 *a2], v5, !v6))
  {
    uint64_t v7 = (void *)MEMORY[0x1BA9B1EC0](v3);
    if (v7)
    {
      id v8 = v7;
      id v9 = objc_msgSend(v7, sel_presentingViewController);

      id v6 = [v9 *a2];
    }
    else
    {
      return 0;
    }
  }
  return v6;
}

void sub_1B5FA4768(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8 = a3;
  id v9 = a4;
  swift_unknownObjectRetain();
  id v10 = a1;
  BlueprintCollectionViewDelegate.collectionView(_:willPerformPreviewActionForMenuWith:animator:)(v8, v9, a5);

  swift_unknownObjectRelease();
}

UITargetedPreview_optional __swiftcall BlueprintCollectionViewDelegate.collectionView(_:previewForHighlightingContextMenuWithConfiguration:)(UICollectionView *_, UIContextMenuConfiguration previewForHighlightingContextMenuWithConfiguration)
{
  OUTLINED_FUNCTION_83();
  id v93 = v4;
  id v95 = v5;
  id v6 = (void *)(*MEMORY[0x1E4FBC8C8] & *v2);
  uint64_t v7 = v6[14];
  uint64_t v8 = v6[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  uint64_t v83 = v10;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_82();
  uint64_t v84 = v12;
  uint64_t v81 = v8;
  uint64_t v82 = v7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v85 = AssociatedTypeWitness;
  uint64_t v79 = AssociatedConformanceWitness;
  uint64_t v14 = type metadata accessor for BlueprintLayoutItem();
  OUTLINED_FUNCTION_14(v14);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_82();
  uint64_t v80 = v16;
  sub_1B5E81E54();
  uint64_t v18 = OUTLINED_FUNCTION_14(v17);
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_4();
  uint64_t v89 = v19;
  uint64_t v90 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v87 = v20;
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_4();
  uint64_t v86 = v22;
  uint64_t v94 = v2;
  uint64_t v23 = v6[10];
  uint64_t v24 = OUTLINED_FUNCTION_110_2();
  uint64_t v25 = OUTLINED_FUNCTION_110_2();
  uint64_t v26 = swift_getAssociatedConformanceWitness();
  uint64_t v27 = swift_getAssociatedConformanceWitness();
  v96[0] = v24;
  v96[1] = v25;
  v96[2] = v26;
  v96[3] = v27;
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  uint64_t v91 = v29;
  uint64_t v92 = v28;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)v76 - v31;
  uint64_t v33 = type metadata accessor for BlueprintItem();
  uint64_t v34 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_10();
  uint64_t v88 = v35;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v36);
  OUTLINED_FUNCTION_26_13();
  OUTLINED_FUNCTION_0_13();
  uint64_t v38 = v37;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v39);
  OUTLINED_FUNCTION_14_13();
  if (!objc_msgSend(v95, sel_allowsSelection)) {
    goto LABEL_9;
  }
  v76[5] = v23;
  uint64_t v77 = v3;
  v76[2] = v34;
  void v76[3] = v7;
  v76[4] = v38;
  uint64_t v78 = v33;
  uint64_t v40 = v94;
  *(void *)&long long v97 = objc_msgSend(v93, sel_identifier);
  sub_1B5EFF660();
  if (!swift_dynamicCast()) {
    goto LABEL_9;
  }
  id v93 = (id)v96[0];
  OUTLINED_FUNCTION_18_20();
  uint64_t v42 = (uint64_t)v40 + *(void *)(v41 + 136);
  uint64_t v43 = v32;
  OUTLINED_FUNCTION_84_0();
  v76[1] = v42;
  BlueprintProviderType.blueprint.getter();
  uint64_t v44 = v77;
  uint64_t v45 = v92;
  OUTLINED_FUNCTION_88_1();
  Blueprint.item(for:)();
  swift_bridgeObjectRelease();
  uint64_t v46 = *(void (**)(void))(v91 + 8);
  ((void (*)(char *, uint64_t))v46)(v43, v45);
  OUTLINED_FUNCTION_28_11(v44, 1, v78);
  if (v50)
  {
LABEL_5:
    OUTLINED_FUNCTION_5_1();
    v47();
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_107();
  v48();
  OUTLINED_FUNCTION_84_0();
  BlueprintProviderType.blueprint.getter();
  uint64_t v49 = v89;
  Blueprint.indexPath(forItem:)();
  OUTLINED_FUNCTION_62_1();
  v46();
  OUTLINED_FUNCTION_28_11(v49, 1, v90);
  if (v50)
  {
    OUTLINED_FUNCTION_135_0();
    OUTLINED_FUNCTION_75();
    v51();
    sub_1B5FABC24(v49, (void (*)(void))sub_1B5E81E54);
    goto LABEL_9;
  }
  uint64_t v54 = v86;
  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_107();
  v55();
  uint64_t v56 = (void *)sub_1B61AFC00();
  id v57 = objc_msgSend(v95, sel_cellForItemAtIndexPath_, v56);

  if (!v57)
  {
    uint64_t v71 = OUTLINED_FUNCTION_44_10();
    v72(v71);
    OUTLINED_FUNCTION_109_2();
    goto LABEL_5;
  }
  id v58 = objc_msgSend(v57, sel_window);

  if (v58)
  {
    OUTLINED_FUNCTION_134_0();
    BlueprintLayoutProviderType.layoutBlueprint.getter(v81, v82);
    uint64_t v59 = swift_getAssociatedTypeWitness();
    uint64_t v60 = swift_getAssociatedConformanceWitness();
    uint64_t v61 = v85;
    *(void *)&long long v97 = v59;
    *((void *)&v97 + 1) = v85;
    *(void *)&long long v98 = v60;
    *((void *)&v98 + 1) = v79;
    uint64_t v62 = type metadata accessor for BlueprintLayout();
    uint64_t v63 = v80;
    BlueprintLayout.subscript.getter(v54, v62);
    OUTLINED_FUNCTION_3_0();
    OUTLINED_FUNCTION_5_1();
    v64();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 32))(v84, v63, v61);
    sub_1B5E00AB8(0, (unint64_t *)&qword_1EB641E10);
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v99 = 0;
      long long v97 = 0u;
      long long v98 = 0u;
    }
    sub_1B5DFF760(0, (unint64_t *)&unk_1EB641E40);
    sub_1B5FABE0C((uint64_t)&v97, (uint64_t)v96, (unint64_t *)&qword_1EB641E20, (unint64_t *)&qword_1EB641E10, (uint64_t)&protocol descriptor for DragPreviewable);
    sub_1B61A3718(v57, (uint64_t)v96);
    uint64_t v65 = OUTLINED_FUNCTION_44_10();
    v66(v65);
    OUTLINED_FUNCTION_5_1();
    v67();
    OUTLINED_FUNCTION_88_1();
    sub_1B5FAC0CC(v68, v69, v70, (uint64_t)&protocol descriptor for DragPreviewable);
  }
  else
  {

    uint64_t v73 = OUTLINED_FUNCTION_44_10();
    v74(v73);
    OUTLINED_FUNCTION_109_2();
    OUTLINED_FUNCTION_5_1();
    v75();
  }
LABEL_9:
  OUTLINED_FUNCTION_73();
  result.value.super.isa = v52;
  result.is_nil = v53;
  return result;
}

id sub_1B5FA4F80(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  id v9 = (void *)BlueprintCollectionViewDelegate.collectionView(_:previewForHighlightingContextMenuWithConfiguration:)(v6, (UIContextMenuConfiguration)v7);

  return v9;
}

UITargetedPreview_optional __swiftcall BlueprintCollectionViewDelegate.collectionView(_:previewForDismissingContextMenuWithConfiguration:)(UICollectionView *_, UIContextMenuConfiguration previewForDismissingContextMenuWithConfiguration)
{
  OUTLINED_FUNCTION_83();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  id v113 = v6;
  id v7 = (void *)(*MEMORY[0x1E4FBC8C8] & *v2);
  uint64_t v8 = v7[14];
  uint64_t v9 = v7[11];
  OUTLINED_FUNCTION_127_0();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  uint64_t v108 = v11;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_82();
  uint64_t v109 = v13;
  uint64_t v106 = v9;
  uint64_t v107 = v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v110 = AssociatedTypeWitness;
  uint64_t v104 = AssociatedConformanceWitness;
  uint64_t v15 = type metadata accessor for BlueprintLayoutItem();
  OUTLINED_FUNCTION_14(v15);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_93_2(v17, v102[0]);
  sub_1B5E81E54();
  uint64_t v19 = OUTLINED_FUNCTION_14(v18);
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_12();
  uint64_t v116 = v20;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_116();
  uint64_t v115 = v22;
  uint64_t v124 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v114 = v23;
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_12();
  uint64_t v112 = v25;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v26);
  OUTLINED_FUNCTION_116();
  uint64_t v111 = v27;
  uint64_t v28 = v7[13];
  uint64_t v29 = v7[10];
  uint64_t v30 = OUTLINED_FUNCTION_146();
  uint64_t v31 = OUTLINED_FUNCTION_146();
  OUTLINED_FUNCTION_74_2();
  uint64_t v32 = swift_getAssociatedConformanceWitness();
  uint64_t v128 = v28;
  uint64_t v33 = swift_getAssociatedConformanceWitness();
  v130[0] = v30;
  v130[1] = v31;
  v130[2] = v32;
  uint64_t v131 = v33;
  uint64_t v129 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  uint64_t v127 = v34;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v35);
  OUTLINED_FUNCTION_14_13();
  uint64_t v36 = type metadata accessor for BlueprintItem();
  sub_1B61B2F80();
  OUTLINED_FUNCTION_0_10();
  uint64_t v118 = v38;
  uint64_t v119 = v37;
  MEMORY[0x1F4188790](v37);
  OUTLINED_FUNCTION_12();
  uint64_t v126 = v39;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v40);
  uint64_t v42 = (char *)v102 - v41;
  OUTLINED_FUNCTION_0_13();
  uint64_t v44 = v43;
  MEMORY[0x1F4188790](v45);
  OUTLINED_FUNCTION_12();
  uint64_t v117 = v46;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v47);
  uint64_t v49 = (char *)v102 - v48;
  *(void *)&long long v133 = objc_msgSend(v5, sel_identifier);
  unint64_t v125 = sub_1B5EFF660();
  char v50 = swift_dynamicCast();
  uint64_t v120 = v29;
  v121 = v3;
  uint64_t v123 = v44;
  if (v50)
  {
    v102[1] = (uint64_t)v49;
    v103 = v5;
    v102[0] = (uint64_t)v3 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v3) + 0x88);
    BlueprintProviderType.blueprint.getter();
    OUTLINED_FUNCTION_84_0();
    Blueprint.item(for:)();
    swift_bridgeObjectRelease();
    uint64_t v51 = *(void (**)(void))(v127 + 8);
    OUTLINED_FUNCTION_36();
    v51();
    OUTLINED_FUNCTION_28_11((uint64_t)v42, 1, v36);
    if (v57)
    {
      OUTLINED_FUNCTION_59();
      v52();
      Swift::Bool v53 = v103;
    }
    else
    {
      OUTLINED_FUNCTION_107();
      v55();
      uint64_t v122 = v36;
      BlueprintProviderType.blueprint.getter();
      uint64_t v56 = v115;
      Blueprint.indexPath(forItem:)();
      v102[0] = v30;
      OUTLINED_FUNCTION_36();
      v51();
      OUTLINED_FUNCTION_28_11(v56, 1, v124);
      if (v57)
      {
        uint64_t v58 = OUTLINED_FUNCTION_68_2();
        v59(v58);
        sub_1B5FABC24(v56, (void (*)(void))sub_1B5E81E54);
      }
      else
      {
        OUTLINED_FUNCTION_129_0();
        OUTLINED_FUNCTION_107();
        v60();
        uint64_t v61 = (void *)sub_1B61AFC00();
        objc_msgSend(v113, sel_deselectItemAtIndexPath_animated_, v61, 1);

        OUTLINED_FUNCTION_84_0();
        OUTLINED_FUNCTION_59();
        v62();
        uint64_t v63 = OUTLINED_FUNCTION_68_2();
        v64(v63);
      }
      Swift::Bool v53 = v103;
      uint64_t v30 = v102[0];
    }
    uint64_t v54 = v126;
  }
  else
  {
    uint64_t v54 = v126;
    Swift::Bool v53 = v5;
  }
  *(void *)&long long v133 = objc_msgSend(v53, sel_identifier);
  if (swift_dynamicCast())
  {
    uint64_t v65 = (char *)v121 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v121) + 0x88);
    uint64_t v122 = v36;
    uint64_t v126 = (uint64_t)v65;
    BlueprintProviderType.blueprint.getter();
    OUTLINED_FUNCTION_65_1();
    uint64_t v66 = v129;
    Blueprint.item(for:)();
    uint64_t v67 = v122;
    swift_bridgeObjectRelease();
    uint64_t v68 = *(void (**)(void))(v127 + 8);
    OUTLINED_FUNCTION_36();
    v68();
    OUTLINED_FUNCTION_28_11(v54, 1, v67);
    if (v57)
    {
      OUTLINED_FUNCTION_5_1();
      v69();
    }
    else
    {
      uint64_t v70 = v66;
      OUTLINED_FUNCTION_107();
      v71();
      BlueprintProviderType.blueprint.getter();
      uint64_t v72 = v116;
      Blueprint.indexPath(forItem:)();
      ((void (*)(uint64_t, uint64_t))v68)(v30, v70);
      OUTLINED_FUNCTION_28_11(v72, 1, v124);
      if (v73)
      {
        OUTLINED_FUNCTION_5_1();
        v74();
        sub_1B5FABC24(v72, (void (*)(void))sub_1B5E81E54);
      }
      else
      {
        uint64_t v77 = v112;
        OUTLINED_FUNCTION_107();
        v78();
        uint64_t v79 = (void *)sub_1B61AFC00();
        id v80 = objc_msgSend(v113, sel_cellForItemAtIndexPath_, v79);

        if (v80)
        {
          id v136 = v80;
          sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C00);
          sub_1B5E00AB8(0, (unint64_t *)&unk_1E9DAB180);
          id v81 = v80;
          if (swift_dynamicCast())
          {
            sub_1B5E30E70(&v133, (uint64_t)v130);
            uint64_t v82 = v131;
            uint64_t v83 = v132;
            __swift_project_boxed_opaque_existential_1(v130, v131);
            (*(void (**)(void, uint64_t, uint64_t))(v83 + 8))(0, v82, v83);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v130);
          }
          else
          {
            uint64_t v135 = 0;
            long long v133 = 0u;
            long long v134 = 0u;
            sub_1B5FAC0CC((uint64_t)&v133, (unint64_t *)&unk_1E9DA9E50, (unint64_t *)&unk_1E9DAB180, (uint64_t)&protocol descriptor for ContextMenuPreviewable);
          }
          id v86 = objc_msgSend(v81, sel_window);

          if (v86)
          {
            uint64_t v87 = OUTLINED_FUNCTION_75_1();
            BlueprintLayoutProviderType.layoutBlueprint.getter(v87, v88);
            uint64_t v89 = swift_getAssociatedTypeWitness();
            OUTLINED_FUNCTION_65_1();
            uint64_t v90 = swift_getAssociatedConformanceWitness();
            uint64_t v91 = v110;
            *(void *)&long long v133 = v89;
            *((void *)&v133 + 1) = v110;
            *(void *)&long long v134 = v90;
            *((void *)&v134 + 1) = v104;
            uint64_t v92 = type metadata accessor for BlueprintLayout();
            uint64_t v93 = v105;
            BlueprintLayout.subscript.getter(v77, v92);
            OUTLINED_FUNCTION_3_0();
            OUTLINED_FUNCTION_5_1();
            v94();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 32))(v109, v93, v91);
            sub_1B5E00AB8(0, (unint64_t *)&qword_1EB641E10);
            if ((swift_dynamicCast() & 1) == 0)
            {
              uint64_t v135 = 0;
              long long v133 = 0u;
              long long v134 = 0u;
            }
            sub_1B5DFF760(0, (unint64_t *)&unk_1EB641E40);
            sub_1B5FABE0C((uint64_t)&v133, (uint64_t)v130, (unint64_t *)&qword_1EB641E20, (unint64_t *)&qword_1EB641E10, (uint64_t)&protocol descriptor for DragPreviewable);
            sub_1B61A3718(v81, (uint64_t)v130);
            OUTLINED_FUNCTION_40();
            v95();
            OUTLINED_FUNCTION_5_1();
            v96();
            OUTLINED_FUNCTION_127_0();
            sub_1B5FAC0CC(v97, v98, v99, (uint64_t)&protocol descriptor for DragPreviewable);
          }
          else
          {

            OUTLINED_FUNCTION_40();
            v100();
            OUTLINED_FUNCTION_68();
            v101();
          }
        }
        else
        {
          OUTLINED_FUNCTION_40();
          v84();
          OUTLINED_FUNCTION_5_1();
          v85();
        }
      }
    }
  }
  OUTLINED_FUNCTION_73();
  result.value.super.isa = v75;
  result.is_nil = v76;
  return result;
}

id sub_1B5FA5B00(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  uint64_t v9 = (void *)BlueprintCollectionViewDelegate.collectionView(_:previewForDismissingContextMenuWithConfiguration:)(v6, (UIContextMenuConfiguration)v7);

  return v9;
}

void BlueprintCollectionViewDelegate.collectionView(_:willDisplayContextMenu:animator:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_41_16();
  OUTLINED_FUNCTION_36_12();
  OUTLINED_FUNCTION_36_12();
  OUTLINED_FUNCTION_99_1();
  OUTLINED_FUNCTION_101_2();
  OUTLINED_FUNCTION_132();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_23_18();
  uint64_t v5 = v0 + *(void *)(v4 + 168);
  OUTLINED_FUNCTION_24();
  uint64_t v6 = MEMORY[0x1BA9B1EC0](v5);
  if (v6)
  {
    id v7 = (void *)v6;
    OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_42_11();
    uint64_t v8 = OUTLINED_FUNCTION_86_4();
    v9(v8);

    uint64_t v10 = OUTLINED_FUNCTION_131_0();
    v11(v10);
  }
  type metadata accessor for SwipeActionCollectionView();
  if (swift_dynamicCastClass())
  {
    id v12 = v2;
    sub_1B605C660(0);
  }
  OUTLINED_FUNCTION_73();
}

void sub_1B5FA5D20(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
}

void BlueprintCollectionViewDelegate.collectionView(_:willEndContextMenuInteraction:animator:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_41_16();
  OUTLINED_FUNCTION_36_12();
  OUTLINED_FUNCTION_36_12();
  OUTLINED_FUNCTION_99_1();
  OUTLINED_FUNCTION_101_2();
  OUTLINED_FUNCTION_132();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_23_18();
  uint64_t v5 = v0 + *(void *)(v4 + 168);
  OUTLINED_FUNCTION_24();
  uint64_t v6 = MEMORY[0x1BA9B1EC0](v5);
  if (v6)
  {
    id v7 = (void *)v6;
    OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_42_11();
    uint64_t v8 = OUTLINED_FUNCTION_86_4();
    v9(v8);

    uint64_t v10 = OUTLINED_FUNCTION_131_0();
    v11(v10);
  }
  type metadata accessor for SwipeActionCollectionView();
  if (swift_dynamicCastClass())
  {
    id v12 = v2;
    sub_1B605C660(1);
  }
  OUTLINED_FUNCTION_73();
}

void sub_1B5FA5EE4(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
}

void sub_1B5FA5EFC(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id))
{
  id v9 = a3;
  id v10 = a4;
  swift_unknownObjectRetain();
  id v11 = a1;
  a6(v9);

  swift_unknownObjectRelease();
}

void BlueprintCollectionViewDelegate.collectionView(_:shouldHighlightItemAt:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v21 = v0;
  uint64_t v1 = OUTLINED_FUNCTION_107_0();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_82();
  v29[0] = OUTLINED_FUNCTION_107_0();
  v29[1] = v1;
  v29[2] = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_29_2();
  type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_135_0();
  BlueprintProviderType.blueprint.getter();
  Blueprint.subscript.getter();
  OUTLINED_FUNCTION_22_2();
  v5();
  OUTLINED_FUNCTION_48_0();
  v6();
  sub_1B5E00AB8(0, &qword_1EB641F58);
  if (!swift_dynamicCast())
  {
    uint64_t v28 = 0;
    long long v26 = 0u;
    long long v27 = 0u;
    uint64_t v11 = OUTLINED_FUNCTION_30_10();
    v12(v11);
    sub_1B5FAC0CC((uint64_t)&v26, (unint64_t *)&unk_1E9DAAED0, &qword_1EB641F58, (uint64_t)&protocol descriptor for Highlightable);
    goto LABEL_13;
  }
  sub_1B5E30E70(&v26, (uint64_t)v29);
  uint64_t v7 = AssociatedConformanceWitness;
  uint64_t v8 = v31;
  __swift_project_boxed_opaque_existential_1(v29, AssociatedConformanceWitness);
  (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v8 + 8))(&v25, v7, v8);
  if (!v25)
  {
LABEL_12:
    uint64_t v19 = OUTLINED_FUNCTION_30_10();
    v20(v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    goto LABEL_13;
  }
  if (v25 != 1)
  {
    uint64_t v13 = (void *)sub_1B61AFC00();
    id v14 = objc_msgSend(v21, sel_cellForItemAtIndexPath_, v13);

    if (v14
      && (sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C00),
          sub_1B5E00AB8(0, &qword_1EB6436D0),
          (swift_dynamicCast() & 1) != 0))
    {
      if (*((void *)&v23 + 1))
      {
        sub_1B5E30E70(&v22, (uint64_t)&v26);
        __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
        uint64_t v15 = OUTLINED_FUNCTION_69_3();
        v16(v15);
        uint64_t v17 = OUTLINED_FUNCTION_30_10();
        v18(v17);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v24 = 0;
      long long v22 = 0u;
      long long v23 = 0u;
    }
    sub_1B5FAC0CC((uint64_t)&v22, &qword_1EB6436D8, &qword_1EB6436D0, (uint64_t)&protocol descriptor for ViewHighlightable);
    goto LABEL_12;
  }
  uint64_t v9 = OUTLINED_FUNCTION_30_10();
  v10(v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
LABEL_13:
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5FA63D0()
{
  return sub_1B5FA63E8();
}

uint64_t sub_1B5FA63E8()
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_23();
  id v5 = v1;
  id v6 = v2;
  char v7 = v0(v5, v3);

  OUTLINED_FUNCTION_40();
  v8();
  return v7 & 1;
}

uint64_t sub_1B5FA64A4()
{
  return sub_1B5FA64D4();
}

uint64_t sub_1B5FA64BC()
{
  return sub_1B5FA64D4();
}

uint64_t sub_1B5FA64D4()
{
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_23();
  id v5 = v1;
  id v6 = v2;
  v0(v5, v3);

  OUTLINED_FUNCTION_40();
  return v7();
}

void BlueprintCollectionViewDelegate.collectionView(_:willDisplay:forItemAt:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  id v5 = v4;
  char v7 = v6;
  sub_1B5EF667C();
  uint64_t v84 = v8;
  OUTLINED_FUNCTION_3_0();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_79(v10);
  uint64_t v12 = OUTLINED_FUNCTION_14(v11);
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_116();
  uint64_t v16 = OUTLINED_FUNCTION_80_1(v15);
  OUTLINED_FUNCTION_0_10();
  uint64_t v18 = v17;
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  long long v22 = (char *)v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)v76 - v23;
  OUTLINED_FUNCTION_14_0();
  LOBYTE(v90[0]) = 3;
  id v86 = v5;
  BlueprintImpressionManager.startImpression(at:view:triggerSource:)(v3, v5, (char *)v90);
  unsigned __int8 v25 = objc_msgSend(v7, sel_allowsMultipleSelection);
  long long v26 = *(void (**)(void))(v18 + 16);
  OUTLINED_FUNCTION_19_12();
  v26();
  id v81 = v7;
  if (v25)
  {
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_68();
    v27();
LABEL_15:
    uint64_t v49 = v86;
    goto LABEL_16;
  }
  void v76[3] = v26;
  v76[2] = v22;
  uint64_t v77 = v16;
  uint64_t v78 = v24;
  uint64_t v28 = v82;
  uint64_t v79 = v18;
  uint64_t v29 = v83;
  v76[1] = v3;
  uint64_t v30 = (char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0xC0);
  OUTLINED_FUNCTION_24();
  if (MEMORY[0x1BA9B1EC0](v30))
  {
    uint64_t v31 = *((void *)v30 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(ObjectType, v31);
    swift_unknownObjectRelease();
    uint64_t v33 = v29;
    uint64_t v34 = v79;
    uint64_t v35 = v77;
  }
  else
  {
    uint64_t v36 = OUTLINED_FUNCTION_85_1();
    uint64_t v35 = v77;
    __swift_storeEnumTagSinglePayload(v36, v37, v38, v77);
    uint64_t v33 = v29;
    uint64_t v34 = v79;
  }
  uint64_t v39 = v85;
  OUTLINED_FUNCTION_19_12();
  v40();
  uint64_t v41 = v39;
  uint64_t v42 = OUTLINED_FUNCTION_91_2();
  __swift_storeEnumTagSinglePayload(v42, v43, v44, v35);
  uint64_t v45 = v33 + *(int *)(v84 + 48);
  sub_1B5EF6774(v28, v33);
  uint64_t v46 = OUTLINED_FUNCTION_8_1();
  sub_1B5EF6774(v46, v47);
  OUTLINED_FUNCTION_28_11(v33, 1, v35);
  if (!v51)
  {
    uint64_t v50 = v80;
    sub_1B5EF6774(v33, v80);
    OUTLINED_FUNCTION_28_11(v45, 1, v35);
    if (!v51)
    {
      OUTLINED_FUNCTION_107();
      v73();
      sub_1B5FAB868();
      LODWORD(v84) = sub_1B61B20B0();
      uint64_t v74 = *(void (**)(void))(v34 + 8);
      OUTLINED_FUNCTION_36();
      v74();
      sub_1B5FABC24(v41, (void (*)(void))sub_1B5E81E54);
      sub_1B5FABC24(v28, (void (*)(void))sub_1B5E81E54);
      OUTLINED_FUNCTION_36();
      v74();
      OUTLINED_FUNCTION_36();
      v74();
      sub_1B5FABC24(v33, (void (*)(void))sub_1B5E81E54);
      uint64_t v49 = v86;
      if ((v84 & 1) == 0) {
        goto LABEL_16;
      }
      goto LABEL_24;
    }
    sub_1B5FABC24(v41, (void (*)(void))sub_1B5E81E54);
    uint64_t v52 = OUTLINED_FUNCTION_129_0();
    sub_1B5FABC24(v52, v53);
    uint64_t v54 = *(void (**)(void))(v34 + 8);
    OUTLINED_FUNCTION_36();
    v54();
    ((void (*)(uint64_t, uint64_t))v54)(v50, v35);
LABEL_14:
    sub_1B5FABC24(v33, (void (*)(void))sub_1B5EF667C);
    goto LABEL_15;
  }
  sub_1B5FABC24(v41, (void (*)(void))sub_1B5E81E54);
  sub_1B5FABC24(v28, (void (*)(void))sub_1B5E81E54);
  OUTLINED_FUNCTION_36();
  v48();
  OUTLINED_FUNCTION_28_11(v45, 1, v35);
  if (!v51) {
    goto LABEL_14;
  }
  sub_1B5FABC24(v33, (void (*)(void))sub_1B5E81E54);
  uint64_t v49 = v86;
LABEL_24:
  if ((objc_msgSend(v49, sel_isSelected) & 1) == 0)
  {
    objc_msgSend(v49, sel_setSelected_, 1);
    uint64_t v75 = (void *)sub_1B61AFC00();
    objc_msgSend(v81, sel_selectItemAtIndexPath_animated_scrollPosition_, v75, 0, 0);
  }
LABEL_16:
  OUTLINED_FUNCTION_38_10();
  uint64_t v56 = (void *)((char *)v1 + *(void *)(v55 + 208));
  OUTLINED_FUNCTION_24();
  uint64_t v57 = *v56;
  OUTLINED_FUNCTION_38_10();
  uint64_t v59 = (char *)v1 + *(void *)(v58 + 200);
  OUTLINED_FUNCTION_24();
  uint64_t v60 = MEMORY[0x1BA9B1EC0](v59);
  OUTLINED_FUNCTION_38_10();
  uint64_t v62 = *(void *)((char *)v1 + *(void *)(v61 + 264));
  type metadata accessor for BlueprintViewportTransitionManager();
  swift_allocObject();
  uint64_t v63 = sub_1B5E88E00(v57, v60, v62);
  uint64_t v89 = v49;
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C00);
  sub_1B5E00AB8(0, &qword_1EB644798);
  swift_retain();
  swift_retain();
  id v64 = v49;
  if (swift_dynamicCast())
  {
    sub_1B5E30E70(v87, (uint64_t)v90);
    sub_1B5E890C8(v90, v64);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
  }
  else
  {
    uint64_t v88 = 0;
    memset(v87, 0, sizeof(v87));
    sub_1B5FAC0CC((uint64_t)v87, &qword_1EB6447A0, &qword_1EB644798, (uint64_t)&protocol descriptor for ViewControllerBackable);
  }
  OUTLINED_FUNCTION_38_10();
  uint64_t v66 = (void **)((char *)v1 + *(void *)(v65 + 224));
  OUTLINED_FUNCTION_24();
  uint64_t v67 = *v66;
  if (v67)
  {
    swift_getObjectType();
    if (dynamic_cast_existential_1_conditional((uint64_t)v64))
    {
      uint64_t v69 = v68;
      id v70 = v64;
      id v71 = v67;
      BlueprintViewportMonitor.add(observer:scrollView:)();
      uint64_t v72 = swift_getObjectType();
      (*(void (**)(id, void *, uint64_t, uint64_t))(v69 + 48))(v71, v63, v72, v69);
    }
  }
  swift_release();
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5FA6D48(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  return sub_1B5FA7148(a1, a2, a3, a4, a5, (void (*)(id, id, char *))BlueprintCollectionViewDelegate.collectionView(_:willDisplay:forItemAt:));
}

void BlueprintCollectionViewDelegate.collectionView(_:didEndDisplaying:forItemAt:)(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v7 = objc_msgSend(a1, sel_indexPathsForVisibleItems);
  sub_1B61AFCB0();
  uint64_t v8 = sub_1B61B24E0();

  v33[2] = a3;
  LOBYTE(v7) = sub_1B5EF161C((uint64_t (*)(char *))sub_1B5EFF7C4, (uint64_t)v33, v8);
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    OUTLINED_FUNCTION_25_1();
    LOBYTE(v37[0]) = 3;
    BlueprintImpressionManager.endImpression(at:view:triggerSource:)();
  }
  OUTLINED_FUNCTION_25_1();
  uint64_t v10 = (uint64_t *)(v3 + *(void *)(v9 + 208));
  OUTLINED_FUNCTION_24();
  uint64_t v11 = *v10;
  OUTLINED_FUNCTION_25_1();
  uint64_t v13 = v4 + *(void *)(v12 + 200);
  OUTLINED_FUNCTION_24();
  uint64_t v14 = MEMORY[0x1BA9B1EC0](v13);
  OUTLINED_FUNCTION_25_1();
  uint64_t v16 = *(void *)(v4 + *(void *)(v15 + 264));
  type metadata accessor for BlueprintViewportTransitionManager();
  swift_allocObject();
  uint64_t v17 = sub_1B5E88E00(v11, v14, v16);
  uint64_t v36 = a2;
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C00);
  sub_1B5E00AB8(0, &qword_1EB644798);
  swift_retain();
  swift_retain();
  id v18 = a2;
  if (swift_dynamicCast())
  {
    sub_1B5E30E70(v34, (uint64_t)v37);
    __swift_project_boxed_opaque_existential_1(v37, v37[3]);
    uint64_t v19 = OUTLINED_FUNCTION_65_1();
    uint64_t v21 = (void *)v20(v19);
    id v22 = v21;
    if (v21)
    {
      id v23 = objc_msgSend(v21, sel_view);

      if (!v23)
      {
        __break(1u);
        return;
      }
      id v22 = objc_msgSend(v23, sel_superview);
    }
    id v24 = objc_msgSend(v18, sel_contentView);

    if (v22)
    {
      swift_unknownObjectRelease();
      if (v24 == v22) {
        sub_1B5E89388(v37);
      }
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  }
  else
  {
    uint64_t v35 = 0;
    memset(v34, 0, sizeof(v34));
    sub_1B5FAC0CC((uint64_t)v34, &qword_1EB6447A0, &qword_1EB644798, (uint64_t)&protocol descriptor for ViewControllerBackable);
  }
  OUTLINED_FUNCTION_25_1();
  long long v26 = (void **)(v4 + *(void *)(v25 + 224));
  OUTLINED_FUNCTION_24();
  long long v27 = *v26;
  if (*v26)
  {
    swift_getObjectType();
    if (dynamic_cast_existential_1_conditional((uint64_t)v18))
    {
      uint64_t v29 = v28;
      id v30 = v18;
      id v31 = v27;
      BlueprintViewportMonitor.remove(observer:)();
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(id, void *, uint64_t, uint64_t))(v29 + 56))(v31, v17, ObjectType, v29);
    }
  }
  swift_release();
}

uint64_t sub_1B5FA7130(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  return sub_1B5FA7148(a1, a2, a3, a4, a5, (void (*)(id, id, char *))BlueprintCollectionViewDelegate.collectionView(_:didEndDisplaying:forItemAt:));
}

uint64_t sub_1B5FA7148(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id, id, char *))
{
  sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B61AFC40();
  id v13 = a3;
  id v14 = a4;
  id v15 = a1;
  a6(v13, v14, v12);

  OUTLINED_FUNCTION_46();
  return v16();
}

void BlueprintCollectionViewDelegate.collectionView(_:willDisplaySupplementaryView:forElementKind:at:)(uint64_t a1, void *a2)
{
  uint64_t v4 = (void **)((char *)v2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0xE0));
  OUTLINED_FUNCTION_24();
  id v5 = *v4;
  if (v5)
  {
    swift_getObjectType();
    if (dynamic_cast_existential_1_conditional((uint64_t)a2))
    {
      uint64_t v7 = v6;
      id v8 = v5;
      id v9 = a2;
      OUTLINED_FUNCTION_17();
      BlueprintViewportMonitor.add(observer:scrollView:)();
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(id, uint64_t, uint64_t))(v7 + 64))(v8, ObjectType, v7);
    }
  }
}

uint64_t sub_1B5FA7330(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = sub_1B61AFCB0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B61B20F0();
  sub_1B61AFC40();
  id v11 = a3;
  id v12 = a4;
  id v13 = a1;
  BlueprintCollectionViewDelegate.collectionView(_:willDisplaySupplementaryView:forElementKind:at:)((uint64_t)v11, v12);

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void BlueprintCollectionViewDelegate.collectionView(_:didEndDisplayingSupplementaryView:forElementOfKind:at:)(uint64_t a1, void *a2)
{
  uint64_t v4 = (void **)((char *)v2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0xE0));
  OUTLINED_FUNCTION_24();
  id v5 = *v4;
  if (v5)
  {
    swift_getObjectType();
    if (dynamic_cast_existential_1_conditional((uint64_t)a2))
    {
      uint64_t v7 = v6;
      id v8 = v5;
      id v9 = a2;
      OUTLINED_FUNCTION_17();
      BlueprintViewportMonitor.remove(observer:)();
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(id, uint64_t, uint64_t))(v7 + 72))(v8, ObjectType, v7);
    }
  }
}

uint64_t sub_1B5FA7548(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = sub_1B61AFCB0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B61B20F0();
  sub_1B61AFC40();
  id v11 = a3;
  id v12 = a4;
  id v13 = a1;
  BlueprintCollectionViewDelegate.collectionView(_:didEndDisplayingSupplementaryView:forElementOfKind:at:)((uint64_t)v13, v12);

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void BlueprintCollectionViewDelegate.collectionView(_:canEditItemAt:)()
{
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_89_2();
  uint64_t v1 = OUTLINED_FUNCTION_52_10();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_136_0(v3, v12);
  OUTLINED_FUNCTION_100_1();
  uint64_t v4 = OUTLINED_FUNCTION_128_0();
  OUTLINED_FUNCTION_14(v4);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v5);
  v14[0] = OUTLINED_FUNCTION_52_10();
  v14[1] = v1;
  v14[2] = OUTLINED_FUNCTION_98_1();
  uint64_t v15 = v0;
  OUTLINED_FUNCTION_90_2();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_23_18();
  OUTLINED_FUNCTION_42_11();
  OUTLINED_FUNCTION_120_1();
  OUTLINED_FUNCTION_62_1();
  v7();
  uint64_t v8 = OUTLINED_FUNCTION_49_9();
  v9(v8);
  sub_1B5E00AB8(0, (unint64_t *)&qword_1EB63EEE0);
  if (OUTLINED_FUNCTION_27_12())
  {
    OUTLINED_FUNCTION_32_13();
    uint64_t v10 = OUTLINED_FUNCTION_1_0();
    v11(v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    OUTLINED_FUNCTION_59_5();
    sub_1B5FAC0CC((uint64_t)&v13, (unint64_t *)&qword_1E9DA9E70, (unint64_t *)&qword_1EB63EEE0, (uint64_t)&protocol descriptor for BlueprintViewActionable);
  }
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5FA7870(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1B61AFCB0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B61AFC40();
  id v9 = a3;
  id v10 = a1;
  BlueprintCollectionViewDelegate.collectionView(_:canEditItemAt:)();
  LOBYTE(a1) = v11;

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return a1 & 1;
}

uint64_t BlueprintCollectionViewDelegate.collectionView(_:targetIndexPathForMoveOfItemFromOriginalIndexPath:atCurrentIndexPath:toProposedIndexPath:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  OUTLINED_FUNCTION_14_2();
  id v10 = (void *)(v4 + *(void *)(v9 + 232));
  OUTLINED_FUNCTION_24();
  if (*v10)
  {
    uint64_t v11 = v10[1];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8);
    swift_unknownObjectRetain();
    v13(a1, a3, ObjectType, v11);
    return swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_14_0();
    unint64_t v16 = sub_1B5EDFD50(v4 + *(void *)(v15 + 136), a2);
    if (v16 >> 62) {
      uint64_t v17 = sub_1B61B3530();
    }
    else {
      uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    sub_1B61AFCB0();
    OUTLINED_FUNCTION_3_0();
    if (v17) {
      uint64_t v19 = a3;
    }
    else {
      uint64_t v19 = a1;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(a4, v19);
  }
}

id sub_1B5FA7AFC(void *a1, uint64_t a2, void *a3)
{
  id v23 = a1;
  uint64_t v4 = sub_1B61AFCB0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v22 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  id v14 = (char *)&v22 - v13;
  MEMORY[0x1F4188790](v12);
  unint64_t v16 = (char *)&v22 - v15;
  sub_1B61AFC40();
  sub_1B61AFC40();
  sub_1B61AFC40();
  id v17 = a3;
  id v18 = v23;
  BlueprintCollectionViewDelegate.collectionView(_:targetIndexPathForMoveOfItemFromOriginalIndexPath:atCurrentIndexPath:toProposedIndexPath:)((uint64_t)v14, (uint64_t)v11, (uint64_t)v8, (uint64_t)v16);

  uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v8, v4);
  v19(v11, v4);
  v19(v14, v4);
  uint64_t v20 = (void *)sub_1B61AFC00();
  v19(v16, v4);
  return v20;
}

Swift::Void __swiftcall BlueprintCollectionViewDelegate.scrollViewWillBeginDragging(_:)(UIScrollView *a1)
{
  uint64_t v2 = (char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0xC0);
  OUTLINED_FUNCTION_24();
  if (!MEMORY[0x1BA9B1EC0](v2)
    || (uint64_t v3 = *((void *)v2 + 1),
        uint64_t ObjectType = swift_getObjectType(),
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 32))(v5, ObjectType, v3),
        swift_unknownObjectRelease(),
        (v5[0] & 1) == 0))
  {
    OUTLINED_FUNCTION_25_1();
    OUTLINED_FUNCTION_24();
    if (swift_weakLoadStrong())
    {
      KeyCommandManager.invalidate(clearState:)(1);
      swift_release();
    }
  }
}

void sub_1B5FA7DE4(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = a1;
  BlueprintCollectionViewDelegate.scrollViewWillBeginDragging(_:)(v5);
}

Swift::Void __swiftcall BlueprintCollectionViewDelegate.scrollViewDidEndDragging(_:willDecelerate:)(UIScrollView *_, Swift::Bool willDecelerate)
{
  if (!willDecelerate)
  {
    sub_1B5F9E7F8(_, 3);
    OUTLINED_FUNCTION_14_0();
    BlueprintImpressionManager.updateImpressions(triggerSource:)();
    OUTLINED_FUNCTION_25_1();
    OUTLINED_FUNCTION_141();
    OUTLINED_FUNCTION_40_11();
    v2();
  }
}

void sub_1B5FA7EE0(void *a1, uint64_t a2, void *a3, Swift::Bool a4)
{
  uint64_t v6 = a3;
  id v7 = a1;
  BlueprintCollectionViewDelegate.scrollViewDidEndDragging(_:willDecelerate:)(v6, a4);
}

Swift::Void __swiftcall BlueprintCollectionViewDelegate.scrollViewDidScroll(_:)(UIScrollView *a1)
{
  uint64_t v2 = v1;
  id v4 = (void *)MEMORY[0x1E4FBC8C8];
  OUTLINED_FUNCTION_14_2();
  uint64_t v6 = (void *)((char *)v1 + *(void *)(v5 + 216));
  OUTLINED_FUNCTION_24();
  if (*v6)
  {
    swift_retain();
    [(UIScrollView *)a1 contentOffset];
    OUTLINED_FUNCTION_25_1();
    sub_1B60B63A8(*(void *)((char *)v2 + *(void *)(v7 + 256)), *(void *)((char *)v2 + *(void *)(v7 + 256) + 8), *((unsigned char *)v2 + *(void *)(v7 + 256) + 16), v8, v9);
    swift_release();
  }
  [(UIScrollView *)a1 contentOffset];
  OUTLINED_FUNCTION_25_1();
  uint64_t v11 = (char *)v2 + *(void *)(v10 + 256);
  *(void *)uint64_t v11 = v12;
  *((void *)v11 + 1) = v13;
  v11[16] = 0;
  id v14 = [(UIScrollView *)a1 superview];
  if (v14)
  {
    uint64_t v15 = v14;
    OUTLINED_FUNCTION_25_1();
    uint64_t v17 = *(void *)((char *)v2 + *(void *)(v16 + 152));
    id v19 = objc_msgSend(v18, sel_coordinateSpace);
    [(UIScrollView *)a1 bounds];
    OUTLINED_FUNCTION_8();
    sub_1B60785F8();
    double v20 = OUTLINED_FUNCTION_7();
    UIEdgeInsetsInsetRect(v20, v21, v22, v23, v24, v25);
    OUTLINED_FUNCTION_8();
    id v26 = objc_msgSend(v15, sel_coordinateSpace);
    double v27 = OUTLINED_FUNCTION_7();
    objc_msgSend(v28, v29, v26, v27);
    OUTLINED_FUNCTION_8();
    swift_unknownObjectRelease();

    double v30 = OUTLINED_FUNCTION_7();
    sub_1B5F27D14(v31, v32, v30, v33, v34, v35);
    uint64_t v36 = v17 + *(void *)(*(void *)v17 + 184);
    *(void *)uint64_t v36 = v54;
    *(_OWORD *)(v36 + 8) = v55;
    *(_OWORD *)(v36 + 24) = v56;
    swift_unknownObjectRelease();
  }
  [(UIScrollView *)a1 contentOffset];
  double v39 = v37;
  double v40 = v38;
  uint64_t v41 = (double *)((char *)v2 + *(void *)((*v4 & *v2) + 0xF8));
  if ((_BYTE)v41[2]) {
    goto LABEL_18;
  }
  double v43 = *v41;
  double v42 = v41[1];
  double v44 = vabdd_f64(*v41, v37);
  double v45 = vabdd_f64(v42, v38);
  uint64_t v46 = (double *)((char *)v2 + *(void *)((*v4 & *v2) + 0xF0));
  OUTLINED_FUNCTION_24();
  if (*v46 < v44 || *v46 < v45)
  {
    OUTLINED_FUNCTION_25_1();
    sub_1B5FABE0C((uint64_t)v2 + *(void *)(v48 + 288), (uint64_t)&v54, (unint64_t *)&unk_1EB642320, &qword_1EB642318, (uint64_t)&protocol descriptor for BlueprintPrefetcherType);
    uint64_t v49 = v56;
    if ((void)v56)
    {
      uint64_t v50 = *((void *)&v56 + 1);
      __swift_project_boxed_opaque_existential_1(&v54, v56);
      char v51 = 2 * (v39 >= v43);
      if (v43 < v39) {
        char v51 = 1;
      }
      char v52 = 2 * (v40 >= v42);
      if (v42 < v40) {
        char v52 = 1;
      }
      v53[0] = v51;
      v53[1] = v52;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v50 + 8))(v53, v49, v50);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v54);
    }
    else
    {
      sub_1B5FAC0CC((uint64_t)&v54, (unint64_t *)&unk_1EB642320, &qword_1EB642318, (uint64_t)&protocol descriptor for BlueprintPrefetcherType);
    }
LABEL_18:
    *uint64_t v41 = v39;
    v41[1] = v40;
    *((unsigned char *)v41 + 16) = 0;
    sub_1B5F9E7F8(a1, 2);
    OUTLINED_FUNCTION_25_1();
    LOBYTE(v54) = 3;
    BlueprintImpressionManager.updateImpressions(triggerSource:)();
  }
}

void sub_1B5FA833C(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  BlueprintCollectionViewDelegate.scrollViewDidScroll(_:)(v4);
}

Swift::Void __swiftcall BlueprintCollectionViewDelegate.scrollViewDidEndDecelerating(_:)(UIScrollView *a1)
{
  sub_1B5F9E7F8(a1, 3);
  OUTLINED_FUNCTION_14_0();
  BlueprintImpressionManager.updateImpressions(triggerSource:)();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_141();
  OUTLINED_FUNCTION_40_11();
  v1();
}

void sub_1B5FA843C(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  BlueprintCollectionViewDelegate.scrollViewDidEndDecelerating(_:)(v4);
}

id BlueprintCollectionViewDelegate.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void BlueprintCollectionViewDelegate.init()()
{
}

void sub_1B5FA8508()
{
}

id BlueprintCollectionViewDelegate.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B5FA8550(uint64_t a1)
{
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(void))(v2 + 8))();
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(void))(v3 + 8))();
  OUTLINED_FUNCTION_0_0();
  swift_release();
  OUTLINED_FUNCTION_0_0();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_0_0();
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_0_0();

  OUTLINED_FUNCTION_0_0();
  swift_weakDestroy();
  OUTLINED_FUNCTION_0_0();
  sub_1B5E437C4(a1 + *(void *)(v5 + 192));
  OUTLINED_FUNCTION_0_0();
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_0_0();
  swift_release();
  OUTLINED_FUNCTION_0_0();
  swift_release();
  OUTLINED_FUNCTION_0_0();

  OUTLINED_FUNCTION_0_0();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_0_0();
  swift_release();
  OUTLINED_FUNCTION_0_0();
  __swift_destroy_boxed_opaque_existential_1(a1 + *(void *)(v7 + 272));
  OUTLINED_FUNCTION_0_0();
  sub_1B5FAC0CC(a1 + *(void *)(v8 + 280), qword_1EB642330, &qword_1EB644FD8, (uint64_t)&protocol descriptor for KeyboardInputMonitorType);
  OUTLINED_FUNCTION_0_0();
  sub_1B5FAC0CC(a1 + *(void *)(v9 + 288), (unint64_t *)&unk_1EB642320, &qword_1EB642318, (uint64_t)&protocol descriptor for BlueprintPrefetcherType);
  OUTLINED_FUNCTION_0_0();
  return swift_unknownObjectWeakDestroy();
}

uint64_t (*sub_1B5FA87EC(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = BlueprintCollectionViewDelegate.delegate.modify();
  return sub_1B5E966FC;
}

uint64_t (*sub_1B5FA884C(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = BlueprintCollectionViewDelegate.keyCommandManager.modify();
  return sub_1B5E966FC;
}

uint64_t (*sub_1B5FA88AC(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = BlueprintCollectionViewDelegate.selectionProvider.modify(v2);
  return sub_1B5E966FC;
}

uint64_t (*sub_1B5FA890C(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = BlueprintCollectionViewDelegate.viewportMonitor.modify((uint64_t)v2);
  return sub_1B5E966FC;
}

uint64_t (*sub_1B5FA896C(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = BlueprintCollectionViewDelegate.dragReorderDelegate.modify();
  return sub_1B5E966FC;
}

void BlueprintCollectionViewDelegate.blueprintInfiniteScrollManager(_:didCompleteRequestForIdentifier:)()
{
  OUTLINED_FUNCTION_14_2();
  uint64_t v2 = (void *)MEMORY[0x1BA9B1EC0](v0 + *(void *)(v1 + 296));
  if (v2)
  {
    id v7 = v2;
    sub_1B5F9E7F8(v2, 1);
  }
  else
  {
    sub_1B61B2B80();
    sub_1B5FAB800(0, (unint64_t *)&qword_1EB64D4A0, (unint64_t *)&qword_1EB64D4B0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1B61BE690;
    swift_getAssociatedTypeWitness();
    uint64_t v4 = sub_1B61B3A30();
    uint64_t v6 = v5;
    *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v3 + 64) = sub_1B5E2E40C();
    *(void *)(v3 + 32) = v4;
    *(void *)(v3 + 40) = v6;
    sub_1B5DFF760(0, (unint64_t *)&qword_1EB64D490);
    id v7 = (id)sub_1B61B2F40();
    sub_1B61B0F90();
    swift_bridgeObjectRelease();
  }
}

void sub_1B5FA8B4C()
{
}

void sub_1B5FA8B70()
{
}

void sub_1B5FA8B94()
{
}

void sub_1B5FA8BB8()
{
}

uint64_t sub_1B5FA8BDC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

void sub_1B5FA8C04()
{
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_89_2();
  OUTLINED_FUNCTION_115_2();
  OUTLINED_FUNCTION_1_51();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_0_10();
  uint64_t v11 = v1;
  uint64_t v12 = v0;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_82();
  uint64_t v10 = v3;
  OUTLINED_FUNCTION_115_2();
  OUTLINED_FUNCTION_1_51();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_132();
  OUTLINED_FUNCTION_0_10();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_23_18();
  OUTLINED_FUNCTION_108_1();
  Blueprint.contains(indexPath:)();
  char v8 = v7;
  uint64_t v9 = *(void (**)(void))(v5 + 8);
  OUTLINED_FUNCTION_68();
  v9();
  if (v8)
  {
    OUTLINED_FUNCTION_108_1();
    Blueprint.subscript.getter();
    OUTLINED_FUNCTION_68();
    v9();
    BlueprintItem.identifier.getter();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5FA8E10(uint64_t a1, uint64_t a2)
{
  return sub_1B5FA8BDC(a1, a2);
}

uint64_t sub_1B5FA8E2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  id v68 = a4;
  uint64_t v64 = a2;
  uint64_t v72 = a1;
  char v73 = a5;
  uint64_t v6 = (void *)(*MEMORY[0x1E4FBC8C8] & *a3);
  uint64_t v7 = v6[13];
  uint64_t v8 = v6[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v65 = v8;
  uint64_t v66 = v7;
  uint64_t v71 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v77 = AssociatedTypeWitness;
  *((void *)&v77 + 1) = v10;
  *(void *)&long long v78 = AssociatedConformanceWitness;
  *((void *)&v78 + 1) = v71;
  uint64_t v12 = type metadata accessor for Blueprint();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v63 = (char *)&v51 - v13;
  uint64_t v14 = sub_1B61AFCB0();
  uint64_t v56 = *(void *)(v14 - 8);
  uint64_t v57 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v70 = (uint64_t)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v6[14];
  uint64_t v61 = a3;
  uint64_t v17 = v6[11];
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  uint64_t v58 = v17;
  uint64_t v59 = v16;
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  uint64_t v69 = AssociatedTypeWitness;
  *(void *)&long long v77 = AssociatedTypeWitness;
  *((void *)&v77 + 1) = v10;
  *(void *)&long long v78 = v18;
  *((void *)&v78 + 1) = v19;
  uint64_t v62 = v19;
  uint64_t v67 = AssociatedConformanceWitness;
  uint64_t v79 = AssociatedConformanceWitness;
  uint64_t v22 = v71;
  uint64_t v80 = v71;
  uint64_t v81 = v20;
  uint64_t v60 = v20;
  uint64_t v23 = v21;
  uint64_t v82 = v21;
  uint64_t v24 = type metadata accessor for SwipeActionMenuContext();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  id v28 = (char *)&v51 - v27;
  MEMORY[0x1F4188790](v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))((char *)&v51 - v29, v72, v10);
  sub_1B5E00AB8(0, &qword_1EB63DD88);
  uint64_t v31 = v10;
  if (swift_dynamicCast())
  {
    uint64_t v55 = v25;
    uint64_t v72 = v18;
    sub_1B5E30E70(&v77, (uint64_t)v83);
    uint64_t v32 = v84;
    uint64_t v33 = v85;
    __swift_project_boxed_opaque_existential_1(v83, v84);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v33 + 8))(&v77, v32, v33);
    if ((void)v77)
    {
      void *v73 = v77;
    }
    else
    {
      uint64_t v52 = v85;
      uint64_t v53 = v84;
      uint64_t v54 = __swift_project_boxed_opaque_existential_1(v83, v84);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v70, v64, v57);
      uint64_t v64 = v24;
      double v35 = v63;
      BlueprintProviderType.blueprint.getter();
      BlueprintLayoutProviderType.layoutBlueprint.getter(v58, v59);
      uint64_t v36 = (objc_class *)type metadata accessor for RendererEnvironment();
      id v37 = objc_allocWithZone(v36);
      uint64_t v38 = (uint64_t)v28;
      id v39 = v68;
      id v40 = v68;
      id v41 = RendererEnvironment.init(scrollView:testing:)(v39, 0);
      uint64_t v75 = v36;
      Swift::Bool v76 = &protocol witness table for RendererEnvironment;
      *(void *)&long long v74 = v41;
      uint64_t v42 = v23;
      uint64_t v50 = v23;
      uint64_t v43 = v60;
      uint64_t v44 = v67;
      uint64_t v45 = v69;
      uint64_t v46 = (uint64_t)v35;
      uint64_t v47 = v31;
      uint64_t v48 = v72;
      uint64_t v49 = v62;
      sub_1B619E384(v70, v46, &v77, &v74, v38);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 16))(v38, v45, v47, v48, v49, v44, v22, v43, v42, v53, v52, v50);
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v38, v64);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
  }
  else
  {
    uint64_t v79 = 0;
    long long v77 = 0u;
    long long v78 = 0u;
    uint64_t result = sub_1B5FAC0CC((uint64_t)&v77, (unint64_t *)&unk_1E9DAAF60, &qword_1EB63DD88, (uint64_t)&protocol descriptor for SwipeActionable);
    void *v73 = 0;
  }
  return result;
}

uint64_t sub_1B5FA9460@<X0>(void *__src@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *MEMORY[0x1E4FBC8C8] & *a2;
  memcpy(__dst, __src, sizeof(__dst));
  HIBYTE(v40) = 1;
  sub_1B5F004F8((uint64_t)a2 + *(void *)(v7 + 272), (uint64_t)v37);
  uint64_t v8 = (void *)sub_1B61AFC00();
  id v9 = objc_msgSend(a3, sel_cellForItemAtIndexPath_, v8);

  memset(v42, 0, 32);
  v42[32] = 1;
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = *(void *)(v7 + 80);
  *(_OWORD *)(v11 + 24) = *(_OWORD *)(v7 + 88);
  *(void *)(v11 + 40) = *(void *)(v7 + 104);
  *(_OWORD *)(v11 + 48) = *(_OWORD *)(v7 + 112);
  *(void *)(v11 + 64) = *(void *)(v7 + 128);
  *(void *)(v11 + 72) = v10;
  type metadata accessor for CommandExecutionSource();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = v38;
  uint64_t v14 = v39;
  uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v38);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v18 + 16))(v17);
  sub_1B61137DC((uint64_t)&v40 + 7, (uint64_t)v17, (uint64_t)v9, (uint64_t)v42, 0, (uint64_t)sub_1B5FABF70, v11, v12, v13, v14, v32, v33, v34, v35, v36, v37[0], v37[1], v37[2], v38,
    v39,
    v40,
    __dst[0]);
  uint64_t v36 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  uint64_t v20 = (void *)((char *)a2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a2) + 0xA0));
  uint64_t v21 = *v20;
  uint64_t v22 = v20[1];
  uint64_t v35 = ((uint64_t (*)(void, uint64_t))__dst[4])(*v20, v22);
  uint64_t v34 = ((uint64_t (*)(uint64_t, uint64_t))__dst[11])(v21, v22);
  char v23 = ((uint64_t (*)(uint64_t, uint64_t))__dst[6])(v21, v22);
  LOBYTE(v17) = BYTE1(__dst[8]);
  uint64_t v24 = __dst[1];
  uint64_t v33 = __dst[0];
  uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t))__dst[2];
  sub_1B61B1F70();
  uint64_t v26 = v25(v21, v22);
  uint64_t v28 = v27;
  uint64_t v29 = (void *)swift_allocObject();
  memcpy(v29 + 2, __dst, 0x68uLL);
  v29[15] = v21;
  v29[16] = v22;
  v29[17] = v36;
  uint64_t v30 = v34;
  *(void *)a4 = v35;
  *(void *)(a4 + 8) = v30;
  *(unsigned char *)(a4 + 16) = v23 & 1;
  *(unsigned char *)(a4 + 17) = (_BYTE)v17;
  *(void *)(a4 + 24) = v33;
  *(void *)(a4 + 32) = v24;
  *(void *)(a4 + 40) = v26;
  *(void *)(a4 + 48) = v28;
  *(void *)(a4 + 56) = sub_1B5FAC140;
  *(void *)(a4 + 64) = v29;
  sub_1B5FABF88((uint64_t)__dst);
  return swift_unknownObjectRetain();
}

void sub_1B5FA984C()
{
  void (*v0)(long long *__return_ptr, uint64_t *);
  uint64_t v1;
  void (*v2)(long long *__return_ptr, uint64_t *);
  void (*v3)(long long *__return_ptr, uint64_t *);
  void (*v4)(void *__return_ptr, uint64_t, void (*)(long long *__return_ptr, uint64_t *), void (*)(long long *__return_ptr, uint64_t *), void (*)(long long *__return_ptr, uint64_t *));
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(long long *__return_ptr, uint64_t *);
  void (*v14)(long long *__return_ptr, uint64_t *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(long long *__return_ptr, uint64_t *);
  uint64_t v27;
  void (*v28)(void);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  void (*v34)(long long *__return_ptr, uint64_t *);
  void (*v35)(void);
  void (*v36)(long long *__return_ptr, uint64_t *);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(void);
  uint64_t v41;
  void (*v42)(void);
  void (*v43)(void);
  _OWORD *v44;
  void (*v45[3])(long long *__return_ptr, uint64_t *);
  void (*v46)(long long *__return_ptr, uint64_t *);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(void *__return_ptr, uint64_t, void (*)(long long *__return_ptr, uint64_t *), void (*)(long long *__return_ptr, uint64_t *), void (*)(long long *__return_ptr, uint64_t *));
  void (*v53)(long long *__return_ptr, uint64_t *);
  _OWORD *v54;
  void (*v55)(long long *__return_ptr, uint64_t *);
  void v56[2];
  unsigned __int8 v57;
  void v58[3];
  uint64_t AssociatedConformanceWitness;
  uint64_t v60;
  long long v61;
  long long v62;
  uint64_t v63;

  OUTLINED_FUNCTION_83();
  v45[0] = v2;
  uint64_t v52 = v4;
  uint64_t v53 = v3;
  uint64_t v54 = (_OWORD *)v6;
  uint64_t v55 = (void (*)(long long *__return_ptr, uint64_t *))v5;
  uint64_t v7 = (void *)(*MEMORY[0x1E4FBC8C8] & *(void *)v0);
  uint64_t v8 = v7[13];
  uint64_t v50 = v7[10];
  uint64_t v51 = v8;
  v58[0] = OUTLINED_FUNCTION_114_2();
  v58[1] = OUTLINED_FUNCTION_114_2();
  v58[2] = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  uint64_t v47 = v10;
  uint64_t v48 = v9;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_93_2(v12, (uint64_t)v45[0]);
  type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_0_10();
  v45[1] = v14;
  v45[2] = v13;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_82();
  uint64_t v49 = v16;
  uint64_t v17 = v7[14];
  uint64_t v18 = v7[11];
  OUTLINED_FUNCTION_107_2();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  uint64_t v21 = v20;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_29_2();
  char v23 = swift_getAssociatedConformanceWitness();
  uint64_t v24 = type metadata accessor for BlueprintLayoutItem();
  OUTLINED_FUNCTION_14(v24);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_26_13();
  uint64_t v46 = v0;
  BlueprintLayoutProviderType.layoutBlueprint.getter(v18, v17);
  OUTLINED_FUNCTION_107_2();
  uint64_t v26 = v55;
  *(void *)&uint64_t v61 = swift_getAssociatedTypeWitness();
  *((void *)&v61 + 1) = AssociatedTypeWitness;
  *(void *)&uint64_t v62 = swift_getAssociatedConformanceWitness();
  *((void *)&v62 + 1) = v23;
  uint64_t v27 = type metadata accessor for BlueprintLayout();
  BlueprintLayout.subscript.getter((uint64_t)v55, v27);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_5_1();
  v28();
  (*(void (**)(void, uint64_t, uint64_t))(v21 + 32))(v58[0], v1, AssociatedTypeWitness);
  sub_1B5E00AB8(0, (unint64_t *)&qword_1EB63FB38);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v63 = 0;
    uint64_t v61 = 0u;
    uint64_t v62 = 0u;
  }
  sub_1B5FABE0C((uint64_t)&v61, (uint64_t)v58, (unint64_t *)&unk_1E9DAAF50, (unint64_t *)&qword_1EB63FB38, (uint64_t)&protocol descriptor for SwipeActionAppearance);
  uint64_t v29 = AssociatedConformanceWitness;
  if (AssociatedConformanceWitness)
  {
    uint64_t v30 = v60;
    __swift_project_boxed_opaque_existential_1(v58, AssociatedConformanceWitness);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v30 + 24))(v56, v29, v30);
    uint64_t v31 = v56[0];
    uint64_t v32 = v56[1];
    uint64_t v33 = v57;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    if (v33 == 1 && !(v31 | v32)) {
      goto LABEL_13;
    }
  }
  else
  {
    sub_1B5FAC0CC((uint64_t)v58, (unint64_t *)&unk_1E9DAAF50, (unint64_t *)&qword_1EB63FB38, (uint64_t)&protocol descriptor for SwipeActionAppearance);
  }
  uint64_t v34 = v46;
  BlueprintProviderType.blueprint.getter();
  Blueprint.subscript.getter();
  OUTLINED_FUNCTION_5_1();
  v35();
  uint64_t v36 = v53;
  v52(v58, v49, v55, v46, v53);
  id v37 = v58[0];
  if (!v58[0])
  {
    OUTLINED_FUNCTION_5_1();
    v42();
LABEL_13:
    uint64_t v44 = v54;
    v54[1] = 0u;
    id v44[2] = 0u;
    *uint64_t v44 = 0u;
    goto LABEL_14;
  }
  if (!*(void *)(v58[0] + 16))
  {
    OUTLINED_FUNCTION_5_1();
    v43();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v38 = sub_1B5FABE0C((uint64_t)&v61, (uint64_t)v58, (unint64_t *)&unk_1E9DAAF50, (unint64_t *)&qword_1EB63FB38, (uint64_t)&protocol descriptor for SwipeActionAppearance);
  MEMORY[0x1F4188790](v38);
  v45[-4] = v34;
  v45[-3] = v36;
  v45[-2] = v26;
  uint64_t v39 = sub_1B6012B70(v45[0], (uint64_t)&v45[-6], v37);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_5_1();
  v40();
  id v41 = (uint64_t)v54;
  sub_1B5FABEA8((uint64_t)v58, (uint64_t)v54);
  *(void *)(v41 + 40) = v39;
LABEL_14:
  sub_1B5FAC0CC((uint64_t)&v61, (unint64_t *)&unk_1E9DAAF50, (unint64_t *)&qword_1EB63FB38, (uint64_t)&protocol descriptor for SwipeActionAppearance);
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5FA9E00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  id v68 = a4;
  uint64_t v64 = a2;
  uint64_t v72 = a1;
  char v73 = a5;
  uint64_t v6 = (void *)(*MEMORY[0x1E4FBC8C8] & *a3);
  uint64_t v7 = v6[13];
  uint64_t v8 = v6[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v65 = v8;
  uint64_t v66 = v7;
  uint64_t v71 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v77 = AssociatedTypeWitness;
  *((void *)&v77 + 1) = v10;
  *(void *)&long long v78 = AssociatedConformanceWitness;
  *((void *)&v78 + 1) = v71;
  uint64_t v12 = type metadata accessor for Blueprint();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v63 = (char *)&v51 - v13;
  uint64_t v14 = sub_1B61AFCB0();
  uint64_t v56 = *(void *)(v14 - 8);
  uint64_t v57 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v70 = (uint64_t)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v6[14];
  uint64_t v61 = a3;
  uint64_t v17 = v6[11];
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  uint64_t v58 = v17;
  uint64_t v59 = v16;
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  uint64_t v69 = AssociatedTypeWitness;
  *(void *)&long long v77 = AssociatedTypeWitness;
  *((void *)&v77 + 1) = v10;
  *(void *)&long long v78 = v18;
  *((void *)&v78 + 1) = v19;
  uint64_t v62 = v19;
  uint64_t v67 = AssociatedConformanceWitness;
  uint64_t v79 = AssociatedConformanceWitness;
  uint64_t v22 = v71;
  uint64_t v80 = v71;
  uint64_t v81 = v20;
  uint64_t v60 = v20;
  uint64_t v23 = v21;
  uint64_t v82 = v21;
  uint64_t v24 = type metadata accessor for SwipeActionMenuContext();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)&v51 - v27;
  MEMORY[0x1F4188790](v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))((char *)&v51 - v29, v72, v10);
  sub_1B5E00AB8(0, &qword_1EB63DD88);
  uint64_t v31 = v10;
  if (swift_dynamicCast())
  {
    uint64_t v55 = v25;
    uint64_t v72 = v18;
    sub_1B5E30E70(&v77, (uint64_t)v83);
    uint64_t v32 = v84;
    uint64_t v33 = v85;
    __swift_project_boxed_opaque_existential_1(v83, v84);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v33 + 24))(&v77, v32, v33);
    if ((void)v77)
    {
      void *v73 = v77;
    }
    else
    {
      uint64_t v52 = v85;
      uint64_t v53 = v84;
      uint64_t v54 = __swift_project_boxed_opaque_existential_1(v83, v84);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v70, v64, v57);
      uint64_t v64 = v24;
      uint64_t v35 = v63;
      BlueprintProviderType.blueprint.getter();
      BlueprintLayoutProviderType.layoutBlueprint.getter(v58, v59);
      uint64_t v36 = (objc_class *)type metadata accessor for RendererEnvironment();
      id v37 = objc_allocWithZone(v36);
      uint64_t v38 = (uint64_t)v28;
      id v39 = v68;
      id v40 = v68;
      id v41 = RendererEnvironment.init(scrollView:testing:)(v39, 0);
      uint64_t v75 = v36;
      Swift::Bool v76 = &protocol witness table for RendererEnvironment;
      *(void *)&long long v74 = v41;
      uint64_t v42 = v23;
      uint64_t v50 = v23;
      uint64_t v43 = v60;
      uint64_t v44 = v67;
      uint64_t v45 = v69;
      uint64_t v46 = (uint64_t)v35;
      uint64_t v47 = v31;
      uint64_t v48 = v72;
      uint64_t v49 = v62;
      sub_1B619E384(v70, v46, &v77, &v74, v38);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 32))(v38, v45, v47, v48, v49, v44, v22, v43, v42, v53, v52, v50);
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v38, v64);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
  }
  else
  {
    uint64_t v79 = 0;
    long long v77 = 0u;
    long long v78 = 0u;
    uint64_t result = sub_1B5FAC0CC((uint64_t)&v77, (unint64_t *)&unk_1E9DAAF60, &qword_1EB63DD88, (uint64_t)&protocol descriptor for SwipeActionable);
    void *v73 = 0;
  }
  return result;
}

uint64_t sub_1B5FAA434@<X0>(void *__src@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *MEMORY[0x1E4FBC8C8] & *a2;
  memcpy(__dst, __src, sizeof(__dst));
  HIBYTE(v40) = 1;
  sub_1B5F004F8((uint64_t)a2 + *(void *)(v7 + 272), (uint64_t)v37);
  uint64_t v8 = (void *)sub_1B61AFC00();
  id v9 = objc_msgSend(a3, sel_cellForItemAtIndexPath_, v8);

  memset(v42, 0, 32);
  v42[32] = 1;
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = *(void *)(v7 + 80);
  *(_OWORD *)(v11 + 24) = *(_OWORD *)(v7 + 88);
  *(void *)(v11 + 40) = *(void *)(v7 + 104);
  *(_OWORD *)(v11 + 48) = *(_OWORD *)(v7 + 112);
  *(void *)(v11 + 64) = *(void *)(v7 + 128);
  *(void *)(v11 + 72) = v10;
  type metadata accessor for CommandExecutionSource();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = v38;
  uint64_t v14 = v39;
  uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v38);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v18 + 16))(v17);
  sub_1B61137DC((uint64_t)&v40 + 7, (uint64_t)v17, (uint64_t)v9, (uint64_t)v42, 0, (uint64_t)sub_1B5FABF70, v11, v12, v13, v14, v32, v33, v34, v35, v36, v37[0], v37[1], v37[2], v38,
    v39,
    v40,
    __dst[0]);
  uint64_t v36 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  uint64_t v20 = (void *)((char *)a2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a2) + 0xA0));
  uint64_t v21 = *v20;
  uint64_t v22 = v20[1];
  uint64_t v35 = ((uint64_t (*)(void, uint64_t))__dst[4])(*v20, v22);
  uint64_t v34 = ((uint64_t (*)(uint64_t, uint64_t))__dst[11])(v21, v22);
  char v23 = ((uint64_t (*)(uint64_t, uint64_t))__dst[6])(v21, v22);
  LOBYTE(v17) = BYTE1(__dst[8]);
  uint64_t v24 = __dst[1];
  uint64_t v33 = __dst[0];
  uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t))__dst[2];
  sub_1B61B1F70();
  uint64_t v26 = v25(v21, v22);
  uint64_t v28 = v27;
  uint64_t v29 = (void *)swift_allocObject();
  memcpy(v29 + 2, __dst, 0x68uLL);
  v29[15] = v21;
  v29[16] = v22;
  v29[17] = v36;
  uint64_t v30 = v34;
  *(void *)a4 = v35;
  *(void *)(a4 + 8) = v30;
  *(unsigned char *)(a4 + 16) = v23 & 1;
  *(unsigned char *)(a4 + 17) = (_BYTE)v17;
  *(void *)(a4 + 24) = v33;
  *(void *)(a4 + 32) = v24;
  *(void *)(a4 + 40) = v26;
  *(void *)(a4 + 48) = v28;
  *(void *)(a4 + 56) = sub_1B5FABF78;
  *(void *)(a4 + 64) = v29;
  sub_1B5FABF88((uint64_t)__dst);
  return swift_unknownObjectRetain();
}

void sub_1B5FAA820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  OUTLINED_FUNCTION_83();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v39 = v27;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v41 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v43 = swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_132();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v37 - v29;
  OUTLINED_FUNCTION_24();
  uint64_t v31 = (void *)MEMORY[0x1BA9B1EC0](v24 + 16);
  if (v31)
  {
    uint64_t v32 = v31;
    uint64_t v38 = v22;
    uint64_t v33 = (char *)v31 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v31) + 0xA8);
    OUTLINED_FUNCTION_24();
    uint64_t v34 = MEMORY[0x1BA9B1EC0](v33);
    if (v34)
    {
      uint64_t v35 = (void *)v34;
      OUTLINED_FUNCTION_18_20();
      BlueprintProviderType.blueprint.getter();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a21 + 176))(v30, v39, v26, v38, a21);

      OUTLINED_FUNCTION_91();
      OUTLINED_FUNCTION_22_2();
      v36();
    }
    else
    {
    }
  }
  OUTLINED_FUNCTION_73();
}

void sub_1B5FAAA1C()
{
  OUTLINED_FUNCTION_83();
  uint64_t v16 = v2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_29_2();
  OUTLINED_FUNCTION_74_2();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_88_1();
  uint64_t v8 = type metadata accessor for BlueprintLayoutItem();
  OUTLINED_FUNCTION_14(v8);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_65_3();
  uint64_t v10 = OUTLINED_FUNCTION_91();
  BlueprintLayoutProviderType.layoutBlueprint.getter(v10, v11);
  v19[0] = swift_getAssociatedTypeWitness();
  v19[1] = AssociatedTypeWitness;
  v19[2] = swift_getAssociatedConformanceWitness();
  v19[3] = AssociatedConformanceWitness;
  uint64_t v12 = type metadata accessor for BlueprintLayout();
  BlueprintLayout.subscript.getter(v16, v12);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_5_1();
  v13();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v0, v1, AssociatedTypeWitness);
  sub_1B5E00AB8(0, (unint64_t *)&qword_1EB63FB38);
  if (swift_dynamicCast())
  {
    OUTLINED_FUNCTION_57_7(v17);
    uint64_t v14 = OUTLINED_FUNCTION_72_3();
    v15(v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
  else
  {
    uint64_t v18 = 0;
    memset(v17, 0, sizeof(v17));
    sub_1B5FAC0CC((uint64_t)v17, (unint64_t *)&unk_1E9DAAF50, (unint64_t *)&qword_1EB63FB38, (uint64_t)&protocol descriptor for SwipeActionAppearance);
  }
  OUTLINED_FUNCTION_73();
}

void sub_1B5FAACA0()
{
  OUTLINED_FUNCTION_83();
  uint64_t v16 = v1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_137(v6, v14);
  OUTLINED_FUNCTION_74_2();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_14(v8);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_65_3();
  v18[0] = swift_getAssociatedTypeWitness();
  v18[1] = AssociatedTypeWitness;
  v18[2] = swift_getAssociatedConformanceWitness();
  uint64_t v19 = AssociatedConformanceWitness;
  OUTLINED_FUNCTION_90_2();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_138_0();
  OUTLINED_FUNCTION_91();
  BlueprintProviderType.blueprint.getter();
  Blueprint.subscript.getter();
  OUTLINED_FUNCTION_68();
  v11();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v15, v0, AssociatedTypeWitness);
  sub_1B5E00AB8(0, &qword_1EB63DD88);
  if (swift_dynamicCast())
  {
    sub_1B5E30E70(v17, (uint64_t)v18);
    uint64_t v12 = v19;
    uint64_t v13 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  else
  {
    OUTLINED_FUNCTION_59_5();
    sub_1B5FAC0CC((uint64_t)v17, (unint64_t *)&unk_1E9DAAF60, &qword_1EB63DD88, (uint64_t)&protocol descriptor for SwipeActionable);
    *uint64_t v16 = 1;
  }
  OUTLINED_FUNCTION_73();
}

void sub_1B5FAAF58()
{
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_89_2();
  uint64_t v1 = OUTLINED_FUNCTION_52_10();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_136_0(v3, v12);
  OUTLINED_FUNCTION_100_1();
  uint64_t v4 = OUTLINED_FUNCTION_128_0();
  OUTLINED_FUNCTION_14(v4);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v5);
  v14[0] = OUTLINED_FUNCTION_52_10();
  v14[1] = v1;
  v14[2] = OUTLINED_FUNCTION_98_1();
  uint64_t v15 = v0;
  OUTLINED_FUNCTION_90_2();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_23_18();
  OUTLINED_FUNCTION_42_11();
  OUTLINED_FUNCTION_120_1();
  OUTLINED_FUNCTION_62_1();
  v7();
  uint64_t v8 = OUTLINED_FUNCTION_49_9();
  v9(v8);
  sub_1B5E00AB8(0, &qword_1EB63DD88);
  if (OUTLINED_FUNCTION_27_12())
  {
    OUTLINED_FUNCTION_32_13();
    uint64_t v10 = OUTLINED_FUNCTION_1_0();
    v11(v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    OUTLINED_FUNCTION_59_5();
    sub_1B5FAC0CC((uint64_t)&v13, (unint64_t *)&unk_1E9DAAF60, &qword_1EB63DD88, (uint64_t)&protocol descriptor for SwipeActionable);
  }
  OUTLINED_FUNCTION_73();
}

void sub_1B5FAB158()
{
  OUTLINED_FUNCTION_83();
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  uint64_t v4 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70);
  uint64_t v5 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58);
  OUTLINED_FUNCTION_107_2();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  uint64_t v8 = v7;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v22 - v10;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_127_0();
  uint64_t v13 = type metadata accessor for BlueprintLayoutItem();
  OUTLINED_FUNCTION_14(v13);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_26_13();
  BlueprintLayoutProviderType.layoutBlueprint.getter(v5, v4);
  OUTLINED_FUNCTION_107_2();
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v24 = v15;
  *((void *)&v24 + 1) = AssociatedTypeWitness;
  *(void *)&long long v25 = v16;
  *((void *)&v25 + 1) = AssociatedConformanceWitness;
  uint64_t v17 = type metadata accessor for BlueprintLayout();
  BlueprintLayout.subscript.getter(v22, v17);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_5_1();
  v18();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v11, v1, AssociatedTypeWitness);
  sub_1B5E00AB8(0, (unint64_t *)&qword_1EB63FB38);
  if (swift_dynamicCast())
  {
    OUTLINED_FUNCTION_57_7(&v24);
    uint64_t v19 = OUTLINED_FUNCTION_122_0();
    v20(v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
  }
  else
  {
    uint64_t v26 = 0;
    long long v24 = 0u;
    long long v25 = 0u;
    sub_1B5FAC0CC((uint64_t)&v24, (unint64_t *)&unk_1E9DAAF50, (unint64_t *)&qword_1EB63FB38, (uint64_t)&protocol descriptor for SwipeActionAppearance);
    uint64_t v21 = v23;
    void *v23 = 0;
    v21[1] = 0;
  }
  OUTLINED_FUNCTION_73();
}

unint64_t sub_1B5FAB3F0()
{
  uint64_t v15 = MEMORY[0x1E4FBC860];
  sub_1B5FA984C();
  if (v14)
  {
    OUTLINED_FUNCTION_71_4();
    sub_1B5E51654();
    sub_1B5FABDB8((uint64_t)__dst);
  }
  else
  {
    sub_1B5FABC24((uint64_t)v13, (void (*)(void))sub_1B5FABC7C);
  }
  OUTLINED_FUNCTION_17();
  sub_1B5FA984C();
  if (v14)
  {
    OUTLINED_FUNCTION_71_4();
    sub_1B5E51654();
    sub_1B5FABDB8((uint64_t)__dst);
  }
  else
  {
    sub_1B5FABC24((uint64_t)v13, (void (*)(void))sub_1B5FABC7C);
  }
  uint64_t v0 = v15;
  uint64_t v1 = *(void *)(v15 + 16);
  unint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    v13[0] = MEMORY[0x1E4FBC860];
    sub_1B61B1F70();
    sub_1B61B33A0();
    uint64_t v3 = 32;
    do
    {
      memcpy(__dst, (const void *)(v0 + v3), 0x48uLL);
      uint64_t v4 = (void *)__dst[0];
      uint64_t v5 = swift_allocObject();
      memmove((void *)(v5 + 16), (const void *)(v0 + v3), 0x48uLL);
      id v6 = objc_allocWithZone(MEMORY[0x1E4FB13B8]);
      sub_1B5FABD54((uint64_t)__dst);
      sub_1B61B1F70();
      id v7 = v4;
      uint64_t v8 = OUTLINED_FUNCTION_75_1();
      sub_1B60878E0(v8, v9, v4, v10, v5);
      sub_1B61B3370();
      sub_1B61B33B0();
      OUTLINED_FUNCTION_75_1();
      sub_1B61B33C0();
      sub_1B61B3380();
      v3 += 72;
      --v1;
    }
    while (v1);
    unint64_t v2 = v13[0];
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (v2 >> 62)
  {
    sub_1B61B1F70();
    uint64_t v12 = sub_1B61B3530();
    swift_bridgeObjectRelease();
    if (v12) {
      return v2;
    }
    goto LABEL_13;
  }
  if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v2;
}

void sub_1B5FAB694()
{
}

void sub_1B5FAB6D4()
{
}

uint64_t sub_1B5FAB728()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_2();
  return swift_deallocObject();
}

uint64_t sub_1B5FAB758()
{
  swift_unknownObjectUnownedDestroy();
  OUTLINED_FUNCTION_2();
  return swift_deallocObject();
}

uint64_t sub_1B5FAB788()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1B5FAB7C8(uint64_t a1)
{
  sub_1B5F9E758(a1, *(void *)(v1 + 72));
}

void sub_1B5FAB800(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1B5E00AB8(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1B5FAB868()
{
  unint64_t result = qword_1EB6424F0;
  if (!qword_1EB6424F0)
  {
    sub_1B61AFCB0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6424F0);
  }
  return result;
}

void sub_1B5FAB8B8()
{
  if (!qword_1E9DAAE68)
  {
    type metadata accessor for SeparatorView();
    unint64_t v0 = type metadata accessor for CollectionReusableView();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAAE68);
    }
  }
}

uint64_t sub_1B5FAB918()
{
  return swift_deallocObject();
}

void *sub_1B5FAB958()
{
  return sub_1B5FA3A4C(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1B5FAB960()
{
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2();
  return swift_deallocObject();
}

uint64_t sub_1B5FAB990()
{
  OUTLINED_FUNCTION_2();
  return swift_deallocObject();
}

uint64_t sub_1B5FAB9C0()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1B5FABA08()
{
  sub_1B5FA4490(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1B5FABA74()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t type metadata accessor for BlueprintCollectionViewDelegate()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for BlueprintCollectionViewDelegate(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BlueprintCollectionViewDelegate);
}

uint64_t dispatch thunk of BlueprintCollectionViewDelegate.__allocating_init(blueprintProvider:blueprintLayoutProvider:blueprintImpressionManager:commandCenter:tracker:)()
{
  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of BlueprintCollectionViewDelegate.__allocating_init(blueprintProvider:blueprintLayoutProvider:blueprintImpressionManager:commandCenter:tracker:keyboardInputMonitor:prefetcher:)()
{
  return (*(uint64_t (**)(void))(v0 + 312))();
}

uint64_t sub_1B5FABC24(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_5_1();
  v3();
  return a1;
}

void sub_1B5FABC7C()
{
  if (!qword_1E9DAAF40)
  {
    unint64_t v0 = sub_1B61B2F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAAF40);
    }
  }
}

uint64_t sub_1B5FABCC8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5FABD20()
{
  char v1 = *(unsigned char *)(v0 + 32);
  if (v1) {
    (*(void (**)(void))(v0 + 72))();
  }
  return v1 & 1;
}

uint64_t sub_1B5FABD54(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 8);
  id v3 = *(id *)a1;
  id v4 = v2;
  sub_1B61B1F70();
  sub_1B61B1F70();
  swift_retain();
  return a1;
}

uint64_t sub_1B5FABDB8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B5FABE0C(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  sub_1B5FAB800(0, a3, a4, a5, MEMORY[0x1E4FBB718]);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_48_0();
  v6();
  return a2;
}

uint64_t sub_1B5FABE84@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5FAA434(a1, *(void **)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t sub_1B5FABEA8(uint64_t a1, uint64_t a2)
{
  sub_1B5FAB800(0, (unint64_t *)&unk_1E9DAAF50, (unint64_t *)&qword_1EB63FB38, (uint64_t)&protocol descriptor for SwipeActionAppearance, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B5FABF38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5FABF78()
{
  return sub_1B616EEE4((uint64_t)(v0 + 2), v0[15], v0[16], v0[17]);
}

uint64_t sub_1B5FABF88(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B5FAC000@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5FA9460(a1, *(void **)(v2 + 16), *(void **)(v2 + 24), a2);
}

#error "1B5FAC048: call analysis failed (funcsize=13)"

uint64_t objectdestroy_48Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5FAC0CC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_1B5FAB800(0, a2, a3, a4, MEMORY[0x1E4FBB718]);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_5_1();
  v5();
  return a1;
}

uint64_t OUTLINED_FUNCTION_90_2()
{
  return type metadata accessor for Blueprint();
}

uint64_t OUTLINED_FUNCTION_93_2@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 32) = (char *)&a2 - a1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_98_1()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_112_2()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_114_2()
{
  return swift_getAssociatedTypeWitness();
}

TeaUI::ViewControllerTransitionManager::State_optional OUTLINED_FUNCTION_118_1(UIViewController *viewController)
{
  return ViewControllerTransitionManager.state(viewController:)(viewController);
}

uint64_t OUTLINED_FUNCTION_120_1()
{
  return Blueprint.subscript.getter();
}

uint64_t OUTLINED_FUNCTION_125_0()
{
  return BlueprintProviderType.blueprint.getter();
}

uint64_t OUTLINED_FUNCTION_128_0()
{
  return type metadata accessor for BlueprintItem();
}

uint64_t OUTLINED_FUNCTION_129_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_131_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_135_0()
{
  return v0;
}

void OUTLINED_FUNCTION_136_0(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 176) = (char *)&a2 - a1;
}

uint64_t OUTLINED_FUNCTION_141()
{
  return swift_getObjectType();
}

double static CGSize.* infix(_:_:)(double a1, double a2, double a3)
{
  return a1 * a3;
}

BOOL CGSize.isZero.getter(double a1, double a2)
{
  return a2 <= 0.0 || a1 <= 0.0;
}

double static CGSize.greatestFiniteMagnitude.getter()
{
  return 1.79769313e308;
}

double CGSize.with(aspectRatio:)(double a1, double a2, double a3)
{
  if (a2 / a3 > a1) {
    return a1 * a3;
  }
  return a2;
}

double CGSize.adding(height:)(double a1, double a2)
{
  return a2;
}

double CGSize.adding(width:)(double a1, double a2)
{
  return a1 + a2;
}

double CGSize.diagonal.getter(double a1, double a2)
{
  return sqrt(a1 * a1 + a2 * a2);
}

CGSize __swiftcall CGSize.smallerThan(maxSize:)(CGSize maxSize)
{
  double width = maxSize.width;
  double v4 = 0.0;
  if (v1 <= 0.0 || v2 <= 0.0 || width <= 0.0)
  {
    double height = 0.0;
  }
  else
  {
    double height = 0.0;
    if (maxSize.height > 0.0)
    {
      if (width < v1 || maxSize.height < v2)
      {
        if (width / maxSize.height >= v1 / v2)
        {
          double height = maxSize.height;
          double v4 = maxSize.height * v1 / v2;
        }
        else
        {
          double v4 = width;
          double height = width * v2 / v1;
        }
      }
      else
      {
        double v4 = v1;
        double height = v2;
      }
    }
  }
  double v7 = height;
  result.double height = v7;
  result.double width = v4;
  return result;
}

uint64_t dispatch thunk of FloatingTabBarNavigationPresentable.floatingTabBarPresentation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t PickerView.items.getter()
{
  return sub_1B61B1F70();
}

uint64_t sub_1B5FAC454@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = (void *)(*a1 + qword_1E9DAAF70);
  swift_beginAccess();
  *a2 = *v3;
  return sub_1B61B1F70();
}

id sub_1B5FAC4AC()
{
  uint64_t v0 = sub_1B61B1F70();
  return PickerView.items.setter(v0);
}

id PickerView.items.setter(uint64_t a1)
{
  id v3 = &v1[qword_1E9DAAF70];
  swift_beginAccess();
  *(void *)id v3 = a1;
  swift_bridgeObjectRelease();
  return objc_msgSend(v1, sel_reloadAllComponents);
}

id (*PickerView.items.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1B5FAC5A4;
}

id sub_1B5FAC5A4(uint64_t a1, char a2)
{
  id result = (id)swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v5 = *(void **)(a1 + 24);
    return objc_msgSend(v5, sel_reloadAllComponents);
  }
  return result;
}

uint64_t PickerView.selectedItem.getter@<X0>(uint64_t a1@<X8>)
{
  double v2 = v1;
  uint64_t v4 = *MEMORY[0x1E4FBC8C8] & *v1;
  if (((unint64_t)objc_msgSend(v2, sel_selectedRowInComponent_, 0) & 0x8000000000000000) != 0)
  {
    uint64_t v7 = *(void *)(v4 + 80);
    return __swift_storeEnumTagSinglePayload(a1, 1, 1, v7);
  }
  else
  {
    swift_beginAccess();
    uint64_t v5 = *(void *)(v4 + 80);
    sub_1B61B2690();
    swift_endAccess();
    return __swift_storeEnumTagSinglePayload(a1, 0, 1, v5);
  }
}

uint64_t sub_1B5FAC708(uint64_t a1)
{
  uint64_t v2 = sub_1B61B2F80();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v7 - v3;
  (*(void (**)(char *, uint64_t))(v5 + 16))((char *)&v7 - v3, a1);
  return PickerView.selectedItem.setter((uint64_t)v4);
}

uint64_t PickerView.selectedItem.setter(uint64_t a1)
{
  uint64_t v2 = sub_1B61B2F80();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

void (*PickerView.selectedItem.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_1B61B2F80();
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  uint64_t v7 = malloc(v6);
  v3[4] = v7;
  PickerView.selectedItem.getter((uint64_t)v7);
  return sub_1B5FAC94C;
}

void sub_1B5FAC94C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    uint64_t v5 = v2[1];
    uint64_t v6 = v2[2];
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    PickerView.selectedItem.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    PickerView.selectedItem.setter(*(void *)(*(void *)a1 + 32));
  }
  free(v4);
  free(v3);
  free(v2);
}

id PickerView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void PickerView.init(coder:)()
{
  uint64_t v1 = qword_1E9DAAF70;
  *(void *)&v0[v1] = sub_1B61B2590();
  uint64_t v2 = qword_1E9DAAF78;
  OUTLINED_FUNCTION_0_78();
  swift_getFunctionTypeMetadata1();
  *(void *)&v0[v2] = sub_1B61B2590();

  sub_1B61B34D0();
  __break(1u);
}

void sub_1B5FACB1C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  PickerView.init(coder:)();
}

id PickerView.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_38();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_35_0();
  return objc_msgSend(v2, v3, v4);
}

id PickerView.init(frame:)()
{
  OUTLINED_FUNCTION_38();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = qword_1E9DAAF70;
  id v3 = v0;
  *(void *)&v0[v2] = sub_1B61B2590();
  uint64_t v4 = qword_1E9DAAF78;
  OUTLINED_FUNCTION_0_78();
  swift_getFunctionTypeMetadata1();
  *(void *)&v3[v4] = sub_1B61B2590();

  double v5 = OUTLINED_FUNCTION_35_0();
  id v8 = objc_msgSendSuper2(v6, v7, v5, v3, ObjectType);
  objc_msgSend(v8, sel_setDelegate_, v8);
  objc_msgSend(v8, sel_setDataSource_, v8);

  return v8;
}

id sub_1B5FACC98()
{
  return PickerView.init(frame:)();
}

Swift::Int __swiftcall PickerView.numberOfComponents(in:)(UIPickerView *in)
{
  return 1;
}

uint64_t sub_1B5FACCC4()
{
  return 1;
}

Swift::Int __swiftcall PickerView.pickerView(_:numberOfRowsInComponent:)(UIPickerView *_, Swift::Int numberOfRowsInComponent)
{
  uint64_t v3 = *MEMORY[0x1E4FBC8C8] & *v2;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 80);
  uint64_t v5 = sub_1B61B1F70();
  Swift::Int v6 = MEMORY[0x1BA9AF780](v5, v4);
  swift_bridgeObjectRelease();
  return v6;
}

Swift::Int sub_1B5FACD64(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = a1;
  Swift::Int v7 = PickerView.pickerView(_:numberOfRowsInComponent:)(v5, v6);

  return v7;
}

Swift::String_optional __swiftcall PickerView.pickerView(_:titleForRow:forComponent:)(UIPickerView *_, Swift::Int titleForRow, Swift::Int forComponent)
{
  uint64_t v4 = *MEMORY[0x1E4FBC8C8] & *v3;
  uint64_t v5 = *(void *)(v4 + 0x50);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](_);
  id v8 = (char *)&v15 - v7;
  swift_beginAccess();
  sub_1B61B2690();
  swift_endAccess();
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 88) + 8))(v5);
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v9;
  uint64_t v13 = v11;
  result.value._object = v13;
  result.value._countAndFlagsBits = v12;
  return result;
}

id sub_1B5FACF14(void *a1, uint64_t a2, void *a3, Swift::Int a4)
{
  id v6 = a3;
  uint64_t v7 = a1;
  object = PickerView.pickerView(_:titleForRow:forComponent:)(v7, a4, v8).value._object;

  if (object)
  {
    uint64_t v10 = (void *)sub_1B61B20C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
  }
  return v10;
}

Swift::Void __swiftcall PickerView.pickerView(_:didSelectRow:inComponent:)(UIPickerView *_, Swift::Int didSelectRow, Swift::Int inComponent)
{
}

uint64_t sub_1B5FAD0A0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)((*MEMORY[0x1E4FBC8C8] & *a2) + 0x50);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = (void (**)(char *))MEMORY[0x1F4188790](a1);
  id v6 = (char *)&v9 - v5;
  uint64_t v7 = *v4;
  swift_beginAccess();
  sub_1B61B2690();
  swift_endAccess();
  v7(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

void sub_1B5FAD1D8(void *a1, uint64_t a2, void *a3, Swift::Int a4)
{
  id v6 = a3;
  Swift::Int v8 = a1;
  PickerView.pickerView(_:didSelectRow:inComponent:)(v8, a4, v7);
}

id PickerView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B5FAD278()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t PickerView.onSelect(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *MEMORY[0x1E4FBC8C8] & *v2;
  id v6 = (void *)swift_allocObject();
  v6[2] = *(void *)(v5 + 80);
  v6[3] = *(void *)(v5 + 88);
  v6[4] = a1;
  v6[5] = a2;
  swift_beginAccess();
  OUTLINED_FUNCTION_0_78();
  swift_getFunctionTypeMetadata1();
  sub_1B61B2650();
  swift_retain();
  sub_1B61B2600();
  return swift_endAccess();
}

uint64_t sub_1B5FAD3D0(uint64_t a1)
{
  return sub_1B5FAD0A0(a1, *(void **)(v1 + 16));
}

uint64_t sub_1B5FAD3EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5FAD424()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1B5FAD45C@<X0>(uint64_t a1@<X8>)
{
  return PickerView.selectedItem.getter(a1);
}

uint64_t dispatch thunk of PickerViewItemType.pickerItemTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1B5FAD4A0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for PickerView()
{
  return __swift_instantiateGenericMetadata();
}

void *sub_1B5FAD500()
{
  OUTLINED_FUNCTION_33_12();
  uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
  if (v5 >> 62) {
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    while (1)
    {
      OUTLINED_FUNCTION_20_17();
      while (v11)
      {
        MEMORY[0x1BA9B04B0](v4, v2);
LABEL_7:
        unint64_t v7 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_17;
        }
        OUTLINED_FUNCTION_19_18();
        char v8 = v3();
        if (v1)
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          return v0;
        }
        if (v8)
        {
          sub_1B61B3370();
          OUTLINED_FUNCTION_8_32();
          OUTLINED_FUNCTION_9_33();
          uint64_t v0 = &v12;
          sub_1B61B3380();
        }
        else
        {
          swift_release();
        }
        ++v4;
        if (v7 == v6)
        {
          uint64_t v0 = v12;
          goto LABEL_20;
        }
      }
      if (v4 < *(void *)(v10 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v6 = sub_1B61B3530();
      if (!v6) {
        goto LABEL_19;
      }
    }
    swift_retain();
    goto LABEL_7;
  }
LABEL_19:
  uint64_t v0 = (void *)MEMORY[0x1E4FBC860];
LABEL_20:
  swift_bridgeObjectRelease();
  return v0;
}

void sub_1B5FAD654(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  sub_1B5FB0838(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v6);
  char v8 = (char *)&v28 - v7;
  uint64_t v9 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_13();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_12();
  uint64_t v33 = v13;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_116();
  uint64_t v39 = v15;
  uint64_t v40 = MEMORY[0x1E4FBC860];
  uint64_t v34 = *(void *)(a3 + 16);
  if (v34)
  {
    unint64_t v16 = 0;
    uint64_t v35 = v11 + 16;
    uint64_t v38 = (void (**)(void))(v11 + 32);
    uint64_t v29 = a3;
    uint64_t v30 = v11 + 8;
    uint64_t v32 = v11;
    while (v16 < *(void *)(a3 + 16))
    {
      OUTLINED_FUNCTION_48_0();
      v17();
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v9);
      if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1) {
        goto LABEL_15;
      }
      uint64_t v18 = v39;
      uint64_t v19 = *v38;
      OUTLINED_FUNCTION_107();
      v19();
      char v20 = v36(v18);
      if (v4)
      {
        uint64_t v26 = OUTLINED_FUNCTION_22_20();
        v27(v26);
        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
      if (v20)
      {
        OUTLINED_FUNCTION_107();
        v19();
        uint64_t v21 = v40;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v31 = 0;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          OUTLINED_FUNCTION_16_19();
          sub_1B5E4ED20();
          uint64_t v21 = v40;
        }
        unint64_t v23 = *(void *)(v21 + 16);
        if (v23 >= *(void *)(v21 + 24) >> 1)
        {
          sub_1B5E4ED20();
          uint64_t v21 = v40;
        }
        *(void *)(v21 + 16) = v23 + 1;
        OUTLINED_FUNCTION_107();
        v19();
        uint64_t v40 = v21;
        uint64_t v4 = v31;
        a3 = v29;
      }
      else
      {
        uint64_t v24 = OUTLINED_FUNCTION_22_20();
        v25(v24);
      }
      if (v34 == ++v16) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v9);
LABEL_15:
    swift_bridgeObjectRelease();
    sub_1B5E4B3B4((uint64_t)v8);
  }
}

void sub_1B5FAD958(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  uint64_t v17 = *(void *)(a3 + 16);
  if (v17)
  {
    unint64_t v5 = a1;
    unint64_t v6 = 0;
    uint64_t v7 = (uint64_t *)(a3 + 40);
    uint64_t v8 = MEMORY[0x1E4FBC860];
    while (v6 < *(void *)(v4 + 16))
    {
      uint64_t v10 = *(v7 - 1);
      uint64_t v9 = *v7;
      v18[0] = v10;
      v18[1] = v9;
      sub_1B61B1F70();
      char v11 = v5(v18);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if (v11)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v19 = v8;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          OUTLINED_FUNCTION_16_19();
          sub_1B5E4EAE0();
          uint64_t v8 = v19;
        }
        unint64_t v13 = *(void *)(v8 + 16);
        if (v13 >= *(void *)(v8 + 24) >> 1)
        {
          sub_1B5E4EAE0();
          uint64_t v8 = v19;
        }
        *(void *)(v8 + 16) = v13 + 1;
        uint64_t v14 = v8 + 16 * v13;
        *(void *)(v14 + 32) = v10;
        *(void *)(v14 + 40) = v9;
        uint64_t v4 = a3;
        unint64_t v5 = a1;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      ++v6;
      v7 += 2;
      if (v17 == v6) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
  }
}

void *sub_1B5FADACC()
{
  OUTLINED_FUNCTION_33_12();
  uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
  if (v5 >> 62) {
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    while (1)
    {
      OUTLINED_FUNCTION_20_17();
      while (v13)
      {
        id v7 = (id)MEMORY[0x1BA9B04B0](v4, v2);
LABEL_7:
        uint64_t v8 = v7;
        unint64_t v9 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_17;
        }
        OUTLINED_FUNCTION_19_18();
        char v10 = v3();
        if (v1)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v0;
        }
        if (v10)
        {
          sub_1B61B3370();
          OUTLINED_FUNCTION_8_32();
          OUTLINED_FUNCTION_9_33();
          uint64_t v0 = &v14;
          sub_1B61B3380();
        }
        else
        {
        }
        ++v4;
        if (v9 == v6)
        {
          uint64_t v0 = v14;
          goto LABEL_20;
        }
      }
      if (v4 < *(void *)(v12 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v6 = sub_1B61B3530();
      if (!v6) {
        goto LABEL_19;
      }
    }
    id v7 = *(id *)(v2 + 8 * v4 + 32);
    goto LABEL_7;
  }
LABEL_19:
  uint64_t v0 = (void *)MEMORY[0x1E4FBC860];
LABEL_20:
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BlueprintSectionCollapsibleStateManager.state(for:)@<X0>(BOOL *a1@<X8>)
{
  OUTLINED_FUNCTION_35_1();
  OUTLINED_FUNCTION_35_1();
  OUTLINED_FUNCTION_43_1();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_43_1();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintSection();
  uint64_t v2 = BlueprintSection.identifier.getter();
  BlueprintSectionCollapsibleStateManager.state(for:)(v2, v3, a1);
  return swift_bridgeObjectRelease();
}

uint64_t BlueprintSectionCollapsibleStateManager.onStateChange(_:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_10_0();
  uint64_t v6 = (uint64_t *)(v2 + *(void *)(v5 + 120));
  swift_beginAccess();
  uint64_t v7 = *v6;
  *uint64_t v6 = a1;
  v6[1] = a2;
  sub_1B5E3799C(v7);
  swift_retain();
  return swift_retain();
}

BOOL static BlueprintSectionCollapsibleStateManager.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t BlueprintSectionCollapsibleStateManager.State.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t BlueprintSectionCollapsibleStateManager.State.hashValue.getter()
{
  return sub_1B61B3940();
}

uint64_t sub_1B5FADE2C()
{
  return sub_1B61B3940();
}

uint64_t BlueprintSectionCollapsibleStateManager.__allocating_init(blueprintProvider:collapsedSectionsKey:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  BlueprintSectionCollapsibleStateManager.init(blueprintProvider:collapsedSectionsKey:)(a1, a2, a3);
  return v6;
}

void *BlueprintSectionCollapsibleStateManager.init(blueprintProvider:collapsedSectionsKey:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  *(void *)((char *)v3 + *(void *)(*v3 + 112)) = MEMORY[0x1E4FBC870];
  OUTLINED_FUNCTION_10_0();
  uint64_t v8 = (void *)((char *)v3 + *(void *)(v7 + 120));
  *uint64_t v8 = 0;
  v8[1] = 0;
  OUTLINED_FUNCTION_10_0();
  uint64_t v10 = *(void *)(v9 + 80);
  OUTLINED_FUNCTION_0_13();
  uint64_t v12 = v11;
  OUTLINED_FUNCTION_48_0();
  v13();
  v3[2] = a2;
  v3[3] = a3;
  uint64_t v14 = self;
  sub_1B61B1F70();
  id v15 = objc_msgSend(v14, sel_standardUserDefaults);
  unint64_t v16 = (void *)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v15, sel_stringArrayForKey_, v16);

  if (v17)
  {
    uint64_t v18 = sub_1B61B24E0();
  }
  else
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
  }
  uint64_t v19 = sub_1B5E5C7E8(v18);
  (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(a1, v10);
  OUTLINED_FUNCTION_1();
  *a1 = v19;
  swift_bridgeObjectRelease();
  return v3;
}

Swift::Void __swiftcall BlueprintSectionCollapsibleStateManager.reset()()
{
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_1();
  *uint64_t v0 = MEMORY[0x1E4FBC870];
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v2 = (void *)sub_1B61B20C0();
  objc_msgSend(v1, sel_removeObjectForKey_, v2);
}

uint64_t BlueprintSectionCollapsibleStateManager.state(for:)@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v31 = (void *)*v2;
  uint64_t v3 = OUTLINED_FUNCTION_31_14();
  uint64_t v4 = OUTLINED_FUNCTION_31_14();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v6 = swift_getAssociatedConformanceWitness();
  uint64_t v30 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_13();
  uint64_t v8 = v7;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v34 = v3;
  uint64_t v35 = v4;
  uint64_t v36 = AssociatedConformanceWitness;
  uint64_t v37 = v6;
  uint64_t v12 = type metadata accessor for BlueprintSection();
  sub_1B61B2F80();
  OUTLINED_FUNCTION_0_13();
  uint64_t v28 = v14;
  uint64_t v29 = v13;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v15);
  id v17 = (char *)&v26 - v16;
  OUTLINED_FUNCTION_0_13();
  uint64_t v27 = v18;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v26 - v20;
  uint64_t v31 = v2;
  BlueprintProviderType.blueprint.getter();
  type metadata accessor for BlueprintItem();
  BlueprintItem.identifier.getter();
  uint64_t v22 = v30;
  Blueprint.section(forItem:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v22);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v12) == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v17, v29);
    BOOL *v33 = 1;
  }
  else
  {
    uint64_t v24 = v27;
    OUTLINED_FUNCTION_107();
    v25();
    BlueprintSectionCollapsibleStateManager.state(for:)(v33);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v21, v12);
  }
  return result;
}

uint64_t BlueprintSectionCollapsibleStateManager.state(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  OUTLINED_FUNCTION_10_0();
  uint64_t v8 = (uint64_t *)(v3 + *(void *)(v7 + 112));
  swift_beginAccess();
  uint64_t v9 = *v8;
  sub_1B61B1F70();
  sub_1B5E75B84(a1, a2, v9);
  LOBYTE(a2) = v10;
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = (a2 & 1) == 0;
  return result;
}

uint64_t BlueprintSectionCollapsibleStateManager.toggle(section:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = OUTLINED_FUNCTION_144();
  uint64_t v6 = OUTLINED_FUNCTION_144();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v8 = swift_getAssociatedConformanceWitness();
  uint64_t v9 = type metadata accessor for BlueprintSection();
  sub_1B61B2F80();
  OUTLINED_FUNCTION_0_13();
  uint64_t v40 = v11;
  uint64_t v41 = v10;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v12);
  uint64_t v45 = (char *)&v39 - v13;
  v46[2] = v5;
  v46[3] = v6;
  v46[4] = AssociatedConformanceWitness;
  void v46[5] = v8;
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_13();
  uint64_t v43 = v15;
  uint64_t v44 = v14;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v39 - v17;
  OUTLINED_FUNCTION_0_13();
  uint64_t v42 = v19;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v20);
  uint64_t v39 = (char *)&v39 - v21;
  uint64_t v22 = (void *)((char *)v2 + *(void *)(v4 + 112));
  swift_beginAccess();
  uint64_t v23 = *v22;
  sub_1B61B1F70();
  uint64_t v24 = BlueprintSection.identifier.getter();
  sub_1B5E75B84(v24, v25, v23);
  LOBYTE(AssociatedConformanceWitness) = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BlueprintSection.identifier.getter();
  OUTLINED_FUNCTION_13_24();
  if (AssociatedConformanceWitness)
  {
    sub_1B5FAFA24(a1, v23);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B5EB9694(v46, a1, v23);
    swift_endAccess();
  }
  swift_bridgeObjectRelease();
  id v27 = objc_msgSend(self, sel_standardUserDefaults);
  sub_1B61B1F70();
  sub_1B5E48D10();
  swift_bridgeObjectRelease();
  uint64_t v28 = (void *)sub_1B61B24D0();
  swift_release();
  uint64_t v29 = (void *)sub_1B61B20C0();
  objc_msgSend(v27, sel_setObject_forKey_, v28, v29);

  BlueprintProviderType.blueprint.getter();
  BlueprintSection.identifier.getter();
  uint64_t v31 = v44;
  uint64_t v30 = (uint64_t)v45;
  Blueprint.subscript.getter();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v31);
  if (__swift_getEnumTagSinglePayload(v30, 1, v9) == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v30, v41);
  }
  uint64_t v33 = v39;
  OUTLINED_FUNCTION_107();
  v34();
  uint64_t v35 = (void (**)(char *))((char *)v2 + *(void *)(*v2 + 120));
  swift_beginAccess();
  uint64_t v36 = *v35;
  if (*v35)
  {
    swift_endAccess();
    swift_retain();
    v36(v33);
    sub_1B5E3799C((uint64_t)v36);
    OUTLINED_FUNCTION_75();
    return v37();
  }
  else
  {
    OUTLINED_FUNCTION_75();
    v38();
    return swift_endAccess();
  }
}

id BlueprintSectionCollapsibleStateManager.sanitize(diff:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v175 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_13();
  uint64_t v162 = v6;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_116();
  uint64_t v160 = v9;
  uint64_t v10 = *(void *)(v5 + 88);
  v177 = v2;
  uint64_t v11 = *(void *)(v5 + 80);
  uint64_t v12 = OUTLINED_FUNCTION_28_13();
  uint64_t v13 = OUTLINED_FUNCTION_28_13();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v173 = v11;
  uint64_t v174 = v10;
  uint64_t v15 = swift_getAssociatedConformanceWitness();
  uint64_t v172 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_13();
  uint64_t v17 = v16;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v18);
  v170 = (char *)v144 - v19;
  v185[0] = v12;
  v185[1] = v13;
  v185[2] = AssociatedConformanceWitness;
  v185[3] = v15;
  uint64_t v171 = type metadata accessor for BlueprintSection();
  OUTLINED_FUNCTION_0_13();
  uint64_t v179 = v20;
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_12();
  uint64_t v181 = v22;
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_116();
  v180 = v24;
  sub_1B5E1E258();
  uint64_t v26 = v25;
  OUTLINED_FUNCTION_0_13();
  uint64_t v178 = v27;
  MEMORY[0x1F4188790](v28);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v29);
  OUTLINED_FUNCTION_116();
  uint64_t v183 = v30;
  sub_1B5FB0838(0, qword_1EB647460, (void (*)(uint64_t))sub_1B5E1E258);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)v144 - v32;
  uint64_t v34 = sub_1B61AFBD0();
  OUTLINED_FUNCTION_0_13();
  uint64_t v36 = v35;
  MEMORY[0x1F4188790](v37);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_7();
  uint64_t v39 = MEMORY[0x1F4188790](v38);
  uint64_t v41 = (char *)v144 - v40;
  MEMORY[0x1F4188790](v39);
  uint64_t v43 = (char *)v144 - v42;
  id result = objc_msgSend(self, sel_isMainThread);
  if (result)
  {
    uint64_t v182 = v26;
    v149 = a2;
    sub_1B61AFBC0();
    v152 = v43;
    uint64_t v45 = a1[3];
    uint64_t v46 = a1[4];
    uint64_t v47 = __swift_project_boxed_opaque_existential_1(a1, v45);
    uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v46 + 32);
    uint64_t v49 = v34;
    v176 = v47;
    v168 = v48;
    v48(v45, v46);
    char v50 = sub_1B61AFB90();
    uint64_t v153 = v36;
    v150 = *(void (**)(uint64_t))(v36 + 8);
    uint64_t v151 = v36 + 8;
    OUTLINED_FUNCTION_75();
    v51();
    v155 = v41;
    uint64_t v147 = v49;
    if ((v50 & 1) == 0)
    {
      uint64_t v52 = v17;
      uint64_t v53 = v154;
      v168(v45, v46);
      sub_1B61AFB00();
      uint64_t v54 = v53;
      uint64_t v17 = v52;
      uint64_t v55 = v150;
      ((void (*)(char *, uint64_t))v150)(v54, v49);
      uint64_t v56 = v152;
      uint64_t v57 = OUTLINED_FUNCTION_43_1();
      v55(v57);
      (*(void (**)(char *, char *, uint64_t))(v153 + 32))(v56, v155, v49);
    }
    uint64_t v58 = OUTLINED_FUNCTION_3_62();
    uint64_t v60 = *(void *)(v59(v58) + 16);
    swift_bridgeObjectRelease();
    uint64_t v61 = v182;
    if (v60)
    {
      uint64_t v62 = OUTLINED_FUNCTION_3_62();
      uint64_t v64 = v63(v62);
      sub_1B5FAD654((uint64_t (*)(uint64_t))sub_1B5FAFBBC, (uint64_t)v177, v64);
      uint64_t v146 = v65;
    }
    else
    {
      uint64_t v146 = MEMORY[0x1E4FBC860];
    }
    uint64_t v66 = OUTLINED_FUNCTION_5_44();
    uint64_t v68 = *(void *)(v67(v66) + 16);
    swift_bridgeObjectRelease();
    if (v68)
    {
      uint64_t v69 = OUTLINED_FUNCTION_5_44();
      uint64_t v71 = v70(v69);
      sub_1B5FAD654((uint64_t (*)(uint64_t))sub_1B5FAFBBC, (uint64_t)v177, v71);
      uint64_t v145 = v72;
    }
    else
    {
      uint64_t v145 = MEMORY[0x1E4FBC860];
    }
    uint64_t v73 = OUTLINED_FUNCTION_4_60();
    uint64_t v75 = *(void *)(v74(v73) + 16);
    swift_bridgeObjectRelease();
    if (v75)
    {
      uint64_t v76 = OUTLINED_FUNCTION_4_60();
      uint64_t v78 = v77(v76);
      sub_1B5FAD654((uint64_t (*)(uint64_t))sub_1B5FAFBBC, (uint64_t)v177, v78);
      uint64_t v165 = v79;
    }
    else
    {
      uint64_t v165 = MEMORY[0x1E4FBC860];
    }
    uint64_t v80 = OUTLINED_FUNCTION_6_45();
    uint64_t v82 = *(void *)(v81(v80) + 16);
    swift_bridgeObjectRelease();
    if (v82)
    {
      uint64_t v83 = OUTLINED_FUNCTION_6_45();
      uint64_t v85 = v84(v83);
      sub_1B5FAD654((uint64_t (*)(uint64_t))sub_1B5FAFBBC, (uint64_t)v177, v85);
      uint64_t v163 = v86;
    }
    else
    {
      uint64_t v163 = MEMORY[0x1E4FBC860];
    }
    uint64_t v87 = a1[3];
    uint64_t v88 = a1[4];
    v148 = a1;
    __swift_project_boxed_opaque_existential_1(a1, v87);
    uint64_t v89 = (*(uint64_t (**)(uint64_t, uint64_t))(v88 + 80))(v87, v88);
    uint64_t v90 = *(void *)(v89 + 16);
    v144[1] = v89;
    if (v90)
    {
      v168 = (void (*)(uint64_t, uint64_t))((char *)v177 + *(void *)(*v177 + 104));
      unint64_t v156 = (*(unsigned __int8 *)(v178 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v178 + 80);
      uint64_t v91 = v89 + v156;
      v176 = *(void **)(v178 + 72);
      v167 = (void (**)(void))(v17 + 8);
      v166 = (void (**)(void))(v179 + 8);
      uint64_t v158 = v162 + 16;
      uint64_t v157 = v162 + 32;
      uint64_t v164 = MEMORY[0x1E4FBC860];
      v169 = v33;
      uint64_t v92 = v183;
      while (1)
      {
        sub_1B5F7F468(v91, (uint64_t)v33);
        __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v61);
        if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v61) == 1) {
          goto LABEL_43;
        }
        uint64_t v178 = v90;
        uint64_t v179 = v91;
        sub_1B5FAFC24((uint64_t)v33, v92);
        BlueprintProviderType.blueprint.getter();
        uint64_t v93 = sub_1B61AFC90();
        uint64_t v33 = v180;
        uint64_t v94 = v172;
        Blueprint.subscript.getter(v93, v172);
        id v95 = *v167;
        OUTLINED_FUNCTION_75();
        v95();
        BlueprintProviderType.blueprint.getter();
        uint64_t v96 = v92 + *(int *)(v182 + 36);
        uint64_t v97 = sub_1B61AFC90();
        Blueprint.subscript.getter(v97, v94);
        OUTLINED_FUNCTION_75();
        v95();
        uint64_t v98 = (uint64_t)v177;
        BlueprintSectionCollapsibleStateManager.state(for:)((BOOL *)v185);
        uint64_t v99 = (void (**)(void))LOBYTE(v185[0]);
        BlueprintSectionCollapsibleStateManager.state(for:)(&v184);
        if (v99)
        {
          if (v184)
          {
            sub_1B5F7F468(v183, v159);
            swift_isUniquelyReferenced_nonNull_native();
            OUTLINED_FUNCTION_25_14();
            if ((v100 & 1) == 0)
            {
              OUTLINED_FUNCTION_16_19();
              sub_1B5E1B760();
              uint64_t v164 = v120;
            }
            OUTLINED_FUNCTION_23_19();
            if (v102)
            {
              OUTLINED_FUNCTION_12_30(v101);
              sub_1B5E1B760();
              uint64_t v164 = v121;
            }
            uint64_t v103 = v164;
            *(void *)(v164 + 16) = v98;
            sub_1B5FAFC24(v159, v103 + v156 + v96 * (void)v176);
          }
          else
          {
            OUTLINED_FUNCTION_48_0();
            v111();
            swift_isUniquelyReferenced_nonNull_native();
            OUTLINED_FUNCTION_25_14();
            if ((v112 & 1) == 0)
            {
              OUTLINED_FUNCTION_16_19();
              sub_1B5E1B208();
              uint64_t v165 = v124;
            }
            OUTLINED_FUNCTION_23_19();
            if (v102)
            {
              OUTLINED_FUNCTION_12_30(v113);
              sub_1B5E1B208();
              uint64_t v165 = v125;
            }
            *(void *)(v165 + 16) = v98;
            OUTLINED_FUNCTION_15_22();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v116 + 32))(v115 + v114 + *(void *)(v116 + 72) * v96, v161, v175);
          }
        }
        else
        {
          if (!v184)
          {
            uint64_t v99 = v166;
            uint64_t v118 = *v166;
            uint64_t v119 = v171;
            ((void (*)(uint64_t, uint64_t))*v166)(v181, v171);
            ((void (*)(char *, uint64_t))v118)(v180, v119);
            OUTLINED_FUNCTION_25_14();
            goto LABEL_39;
          }
          OUTLINED_FUNCTION_48_0();
          v104();
          uint64_t v105 = v163;
          swift_isUniquelyReferenced_nonNull_native();
          OUTLINED_FUNCTION_25_14();
          if ((v106 & 1) == 0)
          {
            OUTLINED_FUNCTION_16_19();
            sub_1B5E1B208();
            uint64_t v105 = v122;
          }
          unint64_t v108 = *(void *)(v105 + 16);
          unint64_t v107 = *(void *)(v105 + 24);
          if (v108 >= v107 >> 1)
          {
            OUTLINED_FUNCTION_12_30(v107);
            sub_1B5E1B208();
            uint64_t v105 = v123;
          }
          *(void *)(v105 + 16) = v108 + 1;
          OUTLINED_FUNCTION_15_22();
          uint64_t v163 = v105;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v110 + 32))(v105 + v109 + *(void *)(v110 + 72) * v108, v160, v175);
        }
        uint64_t v117 = *v166;
        OUTLINED_FUNCTION_75();
        v117();
        OUTLINED_FUNCTION_75();
        v117();
LABEL_39:
        sub_1B5F7F4CC(v183);
        uint64_t v91 = (uint64_t)v176 + (void)v99;
        uint64_t v90 = v178 - 1;
        uint64_t v61 = v182;
        if (v178 == 1) {
          goto LABEL_42;
        }
      }
    }
    uint64_t v164 = MEMORY[0x1E4FBC860];
LABEL_42:
    __swift_storeEnumTagSinglePayload((uint64_t)v33, 1, 1, v61);
LABEL_43:
    swift_bridgeObjectRelease();
    uint64_t v126 = v148;
    __swift_project_boxed_opaque_existential_1(v148, v148[3]);
    uint64_t v127 = v155;
    uint64_t v128 = OUTLINED_FUNCTION_32_14();
    v129(v128);
    __swift_project_boxed_opaque_existential_1(v126, v126[3]);
    uint64_t v130 = v154;
    uint64_t v131 = OUTLINED_FUNCTION_32_14();
    v132(v131);
    uint64_t v133 = v126[3];
    uint64_t v134 = v126[4];
    __swift_project_boxed_opaque_existential_1(v126, v133);
    uint64_t v135 = (*(uint64_t (**)(uint64_t, uint64_t))(v134 + 48))(v133, v134);
    id v136 = (int *)type metadata accessor for Diff();
    v137 = v149;
    v149[3] = (uint64_t)v136;
    v137[4] = sub_1B5FAFBDC(&qword_1EB647310, (void (*)(uint64_t))type metadata accessor for Diff);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v137);
    sub_1B61AFBC0();
    uint64_t v139 = v153;
    v140 = *(void (**)(uint64_t *, char *, uint64_t))(v153 + 32);
    v141 = v127;
    uint64_t v142 = v147;
    v140(boxed_opaque_existential_0, v141, v147);
    v140((uint64_t *)((char *)boxed_opaque_existential_0 + v136[5]), v130, v142);
    v143 = v152;
    (*(void (**)(char *, char *, uint64_t))(v139 + 16))((char *)boxed_opaque_existential_0 + v136[6], v152, v142);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + v136[8]) = v135;
    OUTLINED_FUNCTION_14_24(v136[9]);
    OUTLINED_FUNCTION_14_24(v136[10]);
    OUTLINED_FUNCTION_14_24(v136[11]);
    OUTLINED_FUNCTION_14_24(v136[12]);
    OUTLINED_FUNCTION_14_24(v136[13]);
    return (id)((uint64_t (*)(char *, uint64_t))v150)(v143, v142);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B5FAF654(uint64_t a1)
{
  uint64_t v10 = a1;
  v11[0] = swift_getAssociatedTypeWitness();
  v11[1] = swift_getAssociatedTypeWitness();
  v11[2] = swift_getAssociatedConformanceWitness();
  v11[3] = swift_getAssociatedConformanceWitness();
  uint64_t v9 = type metadata accessor for BlueprintSection();
  uint64_t v1 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = type metadata accessor for Blueprint();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v9 - v6;
  BlueprintProviderType.blueprint.getter();
  Blueprint.subscript.getter(v10, v4);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  BlueprintSectionCollapsibleStateManager.state(for:)((BOOL *)v11);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v9);
  return LOBYTE(v11[0]);
}

uint64_t sub_1B5FAF8D4()
{
  uint64_t v0 = sub_1B61AFC90();
  return sub_1B5FAF654(v0) & 1;
}

char *BlueprintSectionCollapsibleStateManager.deinit()
{
  uint64_t v1 = *(void *)v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_10_0();
  (*(void (**)(char *))(*(void *)(*(void *)(v1 + 80) - 8) + 8))(&v0[*(void *)(v2 + 104)]);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_10_0();
  sub_1B5E3799C(*(void *)&v0[*(void *)(v3 + 120)]);
  return v0;
}

uint64_t BlueprintSectionCollapsibleStateManager.__deallocating_deinit()
{
  BlueprintSectionCollapsibleStateManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B5FAFA24(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1B61B3900();
  sub_1B61B1F70();
  sub_1B61B21C0();
  uint64_t v6 = sub_1B61B3940();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  OUTLINED_FUNCTION_26_15();
  if ((v9 & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_43_1();
  }
  uint64_t v10 = *(void *)(v5 + 48);
  uint64_t v11 = (void *)(v10 + 16 * v8);
  BOOL v12 = *v11 == a1 && v11[1] == a2;
  if (!v12 && (sub_1B61B3760() & 1) == 0)
  {
    uint64_t v14 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v14;
      OUTLINED_FUNCTION_26_15();
      if ((v15 & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v16 = (void *)(v10 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1B61B3760() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_11_25();
  if (!v13) {
    sub_1B5EBC5A4();
  }
  sub_1B5FB032C(v8);
  uint64_t *v2 = v19;
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_43_1();
}

uint64_t sub_1B5FAFB8C(uint64_t a1)
{
  return sub_1B5FAF654(a1) & 1;
}

uint64_t sub_1B5FAFBBC()
{
  return sub_1B5FAF8D4() & 1;
}

uint64_t sub_1B5FAFBDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B5FAFC24(uint64_t a1, uint64_t a2)
{
  sub_1B5E1E258();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B5FAFC88()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B5FAFCA4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for BlueprintSectionCollapsibleStateManager()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for BlueprintSectionCollapsibleStateManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BlueprintSectionCollapsibleStateManager);
}

uint64_t dispatch thunk of BlueprintSectionCollapsibleStateManager.__allocating_init(blueprintProvider:collapsedSectionsKey:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

unsigned char *sub_1B5FAFDA0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5FAFE6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for BlueprintSectionCollapsibleStateManager.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B5FAFEAC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = sub_1B61B38F0();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(v4 + 48);
  if (*(void *)(v8 + 8 * v7) != a1)
  {
    uint64_t v9 = ~v6;
    do
    {
      unint64_t v7 = (v7 + 1) & v9;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(v8 + 8 * v7) != a1);
  }
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_11_25();
  if (!v11)
  {
    sub_1B5EBCA50();
    uint64_t v10 = v14;
  }
  uint64_t v12 = *(void *)(*(void *)(v10 + 48) + 8 * v7);
  sub_1B5FB04E8(v7);
  uint64_t *v2 = v14;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1B5FAFFAC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
  {
    sub_1B61B3900();
    uint64_t v8 = *(void *)(a1 + 16);
    uint64_t v9 = *(void *)(a1 + 24);
    sub_1B61B1F70();
    sub_1B61B1F70();
    sub_1B61B21C0();
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_1B61B3940();
    uint64_t v11 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v12 = v10 & ~v11;
    OUTLINED_FUNCTION_24_15();
    if (v13)
    {
      uint64_t v14 = *(void *)(v4 + 48);
      uint64_t v15 = *(void *)(v14 + 8 * v12);
      BOOL v16 = *(void *)(v15 + 16) == v8 && *(void *)(v15 + 24) == v9;
      if (v16 || (sub_1B61B3760() & 1) != 0)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        swift_isUniquelyReferenced_nonNull_native();
        OUTLINED_FUNCTION_11_25();
        if (!v18)
        {
          sub_1B5EBD030();
          uint64_t v17 = v24;
        }
        uint64_t v7 = *(void *)(*(void *)(v17 + 48) + 8 * v12);
        sub_1B5FB0664(v12);
        uint64_t *v2 = v24;
        goto LABEL_16;
      }
      uint64_t v19 = ~v11;
      while (1)
      {
        unint64_t v12 = (v12 + 1) & v19;
        OUTLINED_FUNCTION_24_15();
        if ((v20 & 1) == 0) {
          break;
        }
        uint64_t v21 = *(void *)(v14 + 8 * v12);
        BOOL v22 = *(void *)(v21 + 16) == v8 && *(void *)(v21 + 24) == v9;
        if (v22 || (sub_1B61B3760() & 1) != 0) {
          goto LABEL_13;
        }
      }
    }
LABEL_25:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v4 < 0) {
    uint64_t v5 = *v2;
  }
  else {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
  }
  sub_1B61B1F70();
  swift_retain();
  char v6 = sub_1B61B31D0();
  swift_release();
  if ((v6 & 1) == 0) {
    goto LABEL_25;
  }
  uint64_t v7 = sub_1B5FB0174(v5, a1);
LABEL_16:
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1B5FB0174(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1B61B3190();
  uint64_t v6 = swift_unknownObjectRetain();
  sub_1B5EBA434(v6, v5, v7, v8, v9, v10, v11, v12, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v40);
  uint64_t v14 = v13;
  uint64_t v39 = v13;
  sub_1B61B3900();
  uint64_t v15 = *(void *)(a2 + 16);
  uint64_t v16 = *(void *)(a2 + 24);
  swift_retain();
  sub_1B61B1F70();
  sub_1B61B21C0();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_1B61B3940();
  uint64_t v18 = -1 << *(unsigned char *)(v14 + 32);
  unint64_t v19 = v17 & ~v18;
  if ((*(void *)(v14 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
  {
    uint64_t v20 = *(void *)(v14 + 48);
    uint64_t v21 = *(void *)(v20 + 8 * v19);
    BOOL v22 = *(void *)(v21 + 16) == v15 && *(void *)(v21 + 24) == v16;
    if (v22 || (sub_1B61B3760() & 1) != 0)
    {
LABEL_14:
      swift_release();
      uint64_t v26 = *(void *)(*(void *)(v14 + 48) + 8 * v19);
      sub_1B5FB0664(v19);
      BOOL v27 = v15 == *(void *)(v26 + 16) && v16 == *(void *)(v26 + 24);
      if (v27 || (sub_1B61B3760() & 1) != 0)
      {
        *int v3 = v39;
        return v26;
      }
      __break(1u);
    }
    else
    {
      uint64_t v23 = ~v18;
      while (1)
      {
        unint64_t v19 = (v19 + 1) & v23;
        if (((*(void *)(v14 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
          break;
        }
        uint64_t v24 = *(void *)(v20 + 8 * v19);
        BOOL v25 = *(void *)(v24 + 16) == v15 && *(void *)(v24 + 24) == v16;
        if (v25 || (sub_1B61B3760() & 1) != 0) {
          goto LABEL_14;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1B5FB032C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1B61B3110();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1B61B3900();
        sub_1B61B1F70();
        sub_1B61B21C0();
        uint64_t v10 = sub_1B61B3940();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 >= v9 && v2 >= (uint64_t)v11)
          {
LABEL_15:
            uint64_t v14 = *(void *)(v3 + 48);
            uint64_t v15 = (_OWORD *)(v14 + 16 * v2);
            uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
            BOOL v17 = v2 != v6 || v15 >= v16 + 1;
            int64_t v2 = v6;
            if (v17)
            {
              _OWORD *v15 = *v16;
              int64_t v2 = v6;
            }
          }
        }
        else if (v11 >= v9 || v2 >= (uint64_t)v11)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1B5FB04E8(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1B61B3110();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(v3 + 48);
        unint64_t v11 = (void *)(v10 + 8 * v6);
        uint64_t v12 = sub_1B61B38F0() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_15:
            uint64_t v15 = (void *)(v10 + 8 * v2);
            BOOL v16 = v2 != v6 || v15 >= v11 + 1;
            int64_t v2 = v6;
            if (v16)
            {
              void *v15 = *v11;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v17 = *(void *)(v3 + 16);
  BOOL v18 = __OFSUB__(v17, 1);
  uint64_t v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1B5FB0664(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1B61B3110();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1B61B3900();
        swift_retain();
        sub_1B61B1F70();
        sub_1B61B21C0();
        swift_bridgeObjectRelease();
        uint64_t v10 = sub_1B61B3940();
        swift_release();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 >= v9 && v2 >= (uint64_t)v11)
          {
LABEL_15:
            uint64_t v14 = *(void *)(v3 + 48);
            uint64_t v15 = (void *)(v14 + 8 * v2);
            BOOL v16 = (void *)(v14 + 8 * v6);
            BOOL v17 = v2 != v6 || v15 >= v16 + 1;
            int64_t v2 = v6;
            if (v17)
            {
              void *v15 = *v16;
              int64_t v2 = v6;
            }
          }
        }
        else if (v11 >= v9 || v2 >= (uint64_t)v11)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_1B5FB0838(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B61B2F80();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

BOOL CardSplitViewPresentation.isSticky.getter()
{
  return *v0 > 0xBFu;
}

BOOL static CardSplitViewPresentation.Navigation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CardSplitViewPresentation.Navigation.hash(into:)()
{
  return sub_1B61B3910();
}

unint64_t sub_1B5FB08F8()
{
  unint64_t result = qword_1E9DAB0C0;
  if (!qword_1E9DAB0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB0C0);
  }
  return result;
}

unint64_t sub_1B5FB0948()
{
  unint64_t result = qword_1E9DAB0C8;
  if (!qword_1E9DAB0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB0C8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CardSplitViewPresentation(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    unsigned int v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x1D)
  {
    if (a2 + 227 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 227) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    unsigned int v5 = (*a1 | (v4 << 8)) - 228;
    return v5 + 1;
  }
LABEL_17:
  unsigned int v5 = ((*a1 >> 1) & 0x1C | (*a1 >> 6)) ^ 0x1F;
  if (v5 >= 0x1C) {
    unsigned int v5 = -1;
  }
  return v5 + 1;
}

unsigned char *storeEnumTagSinglePayload for CardSplitViewPresentation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 227 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 227) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x1D) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x1C)
  {
    unsigned int v6 = ((a2 - 29) >> 8) + 1;
    *unint64_t result = a2 - 29;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5FB0B04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 8 * (((-a2 >> 2) & 7) - 8 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_1B5FB0B2C(unsigned __int8 *a1)
{
  return *a1 >> 6;
}

unsigned char *sub_1B5FB0B38(unsigned char *result)
{
  *result &= 0x3Fu;
  return result;
}

unsigned char *sub_1B5FB0B48(unsigned char *result, char a2)
{
  *unint64_t result = *result & 7 | (a2 << 6);
  return result;
}

void type metadata accessor for CardSplitViewPresentation()
{
}

void type metadata accessor for CardSplitViewPresentation.Navigation()
{
}

unsigned char *_s5TeaUI25CardSplitViewPresentationO10NavigationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5FB0C44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for CardSplitViewPresentation.Pane()
{
}

void __swiftcall UIViewController.findSourceView(identifier:)(UIView_optional *__return_ptr retstr, Swift::String identifier)
{
  object = identifier._object;
  uint64_t countAndFlagsBits = identifier._countAndFlagsBits;
  sub_1B5E36C10();
  sub_1B5FB0E64();
  id v5 = v2;
  if (swift_dynamicCast())
  {
    sub_1B5E30E70(v20, (uint64_t)v22);
    uint64_t v6 = v23;
    uint64_t v7 = v24;
    __swift_project_boxed_opaque_existential_1(v22, v23);
    uint64_t v8 = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v7 + 8))(countAndFlagsBits, object, v6, v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    if (v8) {
      return;
    }
  }
  else
  {
    uint64_t v21 = 0;
    memset(v20, 0, sizeof(v20));
    sub_1B5FB0EBC((uint64_t)v20);
  }
  id v9 = objc_msgSend(v5, sel_childViewControllers);
  unint64_t v10 = sub_1B61B24E0();

  if (v10 >> 62) {
    goto LABEL_18;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v11)
  {
    uint64_t v12 = 4;
    while (1)
    {
      id v13 = (v10 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x1BA9B04B0](v12 - 4, v10)
          : *(id *)(v10 + 8 * v12);
      uint64_t v15 = v13;
      uint64_t v16 = v12 - 3;
      if (__OFADD__(v12 - 4, 1)) {
        break;
      }
      v17._uint64_t countAndFlagsBits = countAndFlagsBits;
      v17._object = object;
      UIViewController.findSourceView(identifier:)(v14, v17);
      uint64_t v19 = v18;

      if (v19)
      {
        swift_bridgeObjectRelease();
        return;
      }
      ++v12;
      if (v16 == v11) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_18:
    sub_1B61B1F70();
    uint64_t v11 = sub_1B61B3530();
    swift_bridgeObjectRelease();
  }
LABEL_14:
  swift_bridgeObjectRelease();
}

unint64_t sub_1B5FB0E64()
{
  unint64_t result = qword_1EB64B8C8;
  if (!qword_1EB64B8C8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB64B8C8);
  }
  return result;
}

uint64_t sub_1B5FB0EBC(uint64_t a1)
{
  sub_1B5FB0F18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B5FB0F18()
{
  if (!qword_1EB64B8D0)
  {
    sub_1B5FB0E64();
    unint64_t v0 = sub_1B61B2F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB64B8D0);
    }
  }
}

uint64_t dispatch thunk of TransitionSourceViewProviding.sourceView(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

id sub_1B5FB0F84(uint64_t a1, uint64_t a2, void *a3)
{
  unsigned int v4 = (void *)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_systemImageNamed_withConfiguration_, v4, a3);

  return v5;
}

id BackBarButtonItem.__allocating_init(target:action:)(void *a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  sub_1B5EE1300();
  id v6 = objc_msgSend(self, sel_configurationWithWeight_, 6);
  id v7 = sub_1B5FB0F84(0xD000000000000010, 0x80000001B61E6140, v6);
  id v8 = objc_msgSend(v5, sel_initWithImage_style_target_action_, v7, 0, a1, a2);

  id v9 = v8;
  objc_msgSend(v9, sel_setWidth_, 40.0);

  return v9;
}

id BackBarButtonItem.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id BackBarButtonItem.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id BackBarButtonItem.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id BackBarButtonItem.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id BackBarButtonItem.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BackBarButtonItem()
{
  return self;
}

ValueMetadata *type metadata accessor for SchemaViewValue()
{
  return &type metadata for SchemaViewValue;
}

uint64_t sub_1B5FB128C(uint64_t result)
{
  id v1 = *(__objc2_class **)result;
  if (*(__objc2_class **)result != _TtC5TeaUI20JSONSchemaValueArray)
  {
    if (v1 == _TtC5TeaUI19JSONSchemaValueBool)
    {
      return result | 0x2000000000000000;
    }
    else if (v1 == _TtC5TeaUI22JSONSchemaValueInteger)
    {
      return result | 0x4000000000000000;
    }
    else if (v1 == _TtC5TeaUI21JSONSchemaValueNumber)
    {
      return result | 0x6000000000000000;
    }
    else if (v1 == _TtC5TeaUI21JSONSchemaValueString)
    {
      return result | 0x8000000000000000;
    }
    else if (v1 == _TtC5TeaUI21JSONSchemaValueObject)
    {
      return result | 0xA000000000000000;
    }
    else
    {
      unint64_t result = sub_1B61B34D0();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1B5FB13A0(void *a1, unint64_t a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v3 = sub_1B61B39D0();
  switch(a2 >> 61)
  {
    case 1uLL:
      OUTLINED_FUNCTION_0_79(v3, v4, v5, v6, v7, v8, v9, v10, v20, v21[0], v22, v23, v24);
      uint64_t v14 = OUTLINED_FUNCTION_35();
      type metadata accessor for JSONSchemaValueBool(v14);
      uint64_t v12 = (unint64_t *)&unk_1E9DAB0F0;
      id v13 = (void (*)(uint64_t))type metadata accessor for JSONSchemaValueBool;
      break;
    case 2uLL:
      OUTLINED_FUNCTION_0_79(v3, v4, v5, v6, v7, v8, v9, v10, v20, v21[0], v22, v23, v24);
      uint64_t v15 = OUTLINED_FUNCTION_35();
      type metadata accessor for JSONSchemaValueInteger(v15);
      uint64_t v12 = (unint64_t *)&unk_1E9DAB0E8;
      id v13 = (void (*)(uint64_t))type metadata accessor for JSONSchemaValueInteger;
      break;
    case 3uLL:
      OUTLINED_FUNCTION_0_79(v3, v4, v5, v6, v7, v8, v9, v10, v20, v21[0], v22, v23, v24);
      uint64_t v16 = OUTLINED_FUNCTION_35();
      type metadata accessor for JSONSchemaValueNumber(v16);
      uint64_t v12 = (unint64_t *)&unk_1E9DAB0E0;
      id v13 = (void (*)(uint64_t))type metadata accessor for JSONSchemaValueNumber;
      break;
    case 4uLL:
      OUTLINED_FUNCTION_0_79(v3, v4, v5, v6, v7, v8, v9, v10, v20, v21[0], v22, v23, v24);
      uint64_t v17 = OUTLINED_FUNCTION_35();
      type metadata accessor for JSONSchemaValueString(v17);
      uint64_t v12 = (unint64_t *)&unk_1E9DAB0D8;
      id v13 = (void (*)(uint64_t))type metadata accessor for JSONSchemaValueString;
      break;
    case 5uLL:
      OUTLINED_FUNCTION_0_79(v3, v4, v5, v6, v7, v8, v9, v10, v20, v21[0], v22, v23, v24);
      uint64_t v18 = OUTLINED_FUNCTION_35();
      type metadata accessor for JSONSchemaValueObject(v18);
      uint64_t v12 = (unint64_t *)&unk_1E9DAB0D0;
      id v13 = (void (*)(uint64_t))type metadata accessor for JSONSchemaValueObject;
      break;
    default:
      unint64_t v25 = a2;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v24);
      uint64_t v11 = OUTLINED_FUNCTION_35();
      type metadata accessor for JSONSchemaValueArray(v11);
      uint64_t v12 = (unint64_t *)&unk_1E9DAB0F8;
      id v13 = (void (*)(uint64_t))type metadata accessor for JSONSchemaValueArray;
      break;
  }
  sub_1B5FB159C(v12, v13);
  sub_1B61B37C0();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

uint64_t sub_1B5FB1580(void *a1)
{
  return sub_1B5FB13A0(a1, *v1);
}

uint64_t sub_1B5FB159C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PageType<>.pageMarker()()
{
  return sub_1B61B02A0();
}

uint64_t dispatch thunk of PageType.viewController()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PageType.pageMarker()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

id sub_1B5FB1624(uint64_t a1, double a2, double a3)
{
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for PassthroughView();
  id result = objc_msgSendSuper2(&v9, sel_hitTest_withEvent_, a1, a2, a3);
  if (result) {
    BOOL v8 = result == v3;
  }
  else {
    BOOL v8 = 0;
  }
  if (v8)
  {

    return 0;
  }
  return result;
}

uint64_t type metadata accessor for PassthroughView()
{
  return self;
}

id PassthroughView.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_38();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_35_0();
  return objc_msgSend(v2, v3, v4);
}

id PassthroughView.init(frame:)()
{
  OUTLINED_FUNCTION_38();
  uint64_t v5 = type metadata accessor for PassthroughView();
  double v1 = OUTLINED_FUNCTION_35_0();
  return objc_msgSendSuper2(v2, v3, v1, v0, v5);
}

id PassthroughView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id PassthroughView.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PassthroughView();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id PassthroughView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PassthroughView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double PillSize.cornerRadius(for:)(double a1, double a2, double a3, double a4)
{
  double v5 = 14.0;
  if (*(unsigned __int8 *)(v4 + 32) <= 1u) {
    return CGRectGetHeight(*(CGRect *)&a1) * 0.5;
  }
  return v5;
}

double static UIEdgeInsets.pillViewSmall.getter()
{
  if (qword_1E9DA7EE0 != -1) {
    swift_once();
  }
  return *(double *)&xmmword_1E9DAB100;
}

double static UIEdgeInsets.pillViewMedium.getter()
{
  if (qword_1EB641868 != -1) {
    swift_once();
  }
  return *(double *)&xmmword_1EB6419F8;
}

double PillSize.edgeInsets.getter()
{
  return *(double *)v0;
}

double PillSize.minHeight.getter()
{
  return dbl_1B61CA8C0[*(char *)(v0 + 32)];
}

double sub_1B5FB19E4()
{
  double result = 4.0;
  xmmword_1E9DAB100 = xmmword_1B61CA890;
  *(_OWORD *)&qword_1E9DAB110 = xmmword_1B61CA890;
  return result;
}

double sub_1B5FB19FC()
{
  double result = 4.0;
  xmmword_1EB6419F8 = xmmword_1B61CA890;
  *(_OWORD *)&qword_1EB641A08 = xmmword_1B61CA890;
  return result;
}

double sub_1B5FB1A14()
{
  double result = 4.0;
  xmmword_1E9DAB120 = xmmword_1B61CA890;
  *(_OWORD *)&qword_1E9DAB130 = xmmword_1B61CA890;
  return result;
}

double static UIEdgeInsets.pillViewLarge.getter()
{
  if (qword_1E9DA7EF0 != -1) {
    swift_once();
  }
  return *(double *)&xmmword_1E9DAB120;
}

uint64_t getEnumTagSinglePayload for PillSize(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 33))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PillSize(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)double result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B5FB1B08(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1B5FB1B10(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PillSize()
{
  return &type metadata for PillSize;
}

BOOL sub_1B5FB1B28()
{
  sub_1B61AFCB0();
  sub_1B5FB85F4();
  sub_1B61B28D0();
  sub_1B61B2970();
  return v2 == v1;
}

id BlueprintCollectionViewDragDelegate.__allocating_init(blueprintProvider:blueprintLayoutProvider:)()
{
  OUTLINED_FUNCTION_0_52();
  uint64_t v0 = OUTLINED_FUNCTION_45();
  return BlueprintCollectionViewDragDelegate.init(blueprintProvider:blueprintLayoutProvider:)(v0);
}

id BlueprintCollectionViewDragDelegate.init(blueprintProvider:blueprintLayoutProvider:)(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x50);
  OUTLINED_FUNCTION_2_3();
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_33();
  v7();
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_33();
  v8();
  v12.receiver = v1;
  v12.super_class = ObjectType;
  id v9 = objc_msgSendSuper2(&v12, sel_init);
  OUTLINED_FUNCTION_50_10();
  v10();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v4);
  return v9;
}

Swift::Void __swiftcall BlueprintCollectionViewDragDelegate.register(in:)(UICollectionView *in)
{
  [(UICollectionView *)in setDragDelegate:v1];
}

uint64_t BlueprintCollectionViewDragDelegate.collectionView(_:itemsForBeginning:at:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = (void *)sub_1B61AFC00();
  OUTLINED_FUNCTION_58_6((uint64_t)v1, sel_deselectItemAtIndexPath_animated_);

  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_24_8();
  OUTLINED_FUNCTION_24_8();
  return sub_1B5EDFD50(v2, v0);
}

id sub_1B5FB1DDC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1B61AFCB0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  BOOL v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B61AFC40();
  id v9 = a3;
  swift_unknownObjectRetain();
  id v10 = a1;
  BlueprintCollectionViewDragDelegate.collectionView(_:itemsForBeginning:at:)();

  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1B5DFF760(0, (unint64_t *)&qword_1E9DAB2F0);
  uint64_t v11 = (void *)sub_1B61B24D0();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t BlueprintCollectionViewDragDelegate.collectionView(_:itemsForAddingTo:at:point:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = (void *)sub_1B61AFC00();
  OUTLINED_FUNCTION_58_6((uint64_t)v1, sel_deselectItemAtIndexPath_animated_);

  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_24_8();
  OUTLINED_FUNCTION_24_8();
  return sub_1B5EDFD50(v2, v0);
}

id sub_1B5FB1FE4(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_1B5FB38F0(a1, a2, a3, a4, a5, (void (*)(id))BlueprintCollectionViewDragDelegate.collectionView(_:itemsForAddingTo:at:point:));
}

void BlueprintCollectionViewDragDelegate.collectionView(_:dragPreviewParametersForItemAt:)()
{
  OUTLINED_FUNCTION_15_23();
  OUTLINED_FUNCTION_99_2();
  uint64_t v4 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & v3) + 0x58);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_98_2();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_19_19();
  OUTLINED_FUNCTION_89_3();
  uint64_t v7 = OUTLINED_FUNCTION_96_2();
  OUTLINED_FUNCTION_14(v7);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v8);
  id v9 = (void *)OUTLINED_FUNCTION_90_3();
  id v10 = objc_msgSend(v0, sel_cellForItemAtIndexPath_, v9);

  id v29 = v10;
  if (v10)
  {
    OUTLINED_FUNCTION_84_2();
    uint64_t v11 = OUTLINED_FUNCTION_78_3();
    uint64_t v12 = OUTLINED_FUNCTION_88_2();
    uint64_t v13 = OUTLINED_FUNCTION_77_2(v12);
    OUTLINED_FUNCTION_60_5(v13);
    OUTLINED_FUNCTION_3_0();
    OUTLINED_FUNCTION_5_1();
    v14();
    uint64_t v15 = OUTLINED_FUNCTION_26_16();
    v16(v15);
    sub_1B5E00AB8(0, (unint64_t *)&qword_1EB641E10);
    if (OUTLINED_FUNCTION_49_10())
    {
      sub_1B5E30E70(v30, (uint64_t)v31);
      OUTLINED_FUNCTION_42_12(objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1720]), sel_init));
      uint64_t v17 = OUTLINED_FUNCTION_35_12();
      uint64_t v18 = (void *)v4(v17);
      objc_msgSend(v1, sel_setBackgroundColor_, v18);

      OUTLINED_FUNCTION_45_9();
      uint64_t v19 = OUTLINED_FUNCTION_36_13();
      v4(v19);
      OUTLINED_FUNCTION_43_8();
      objc_msgSend(v29, sel_bounds);
      id v24 = 0;
      switch(v11)
      {
        case 1:
          OUTLINED_FUNCTION_13_25(v20, v21, v22, v23, v2, *(double *)&v4);
          BOOL v27 = self;
          id v26 = OUTLINED_FUNCTION_63_0(v27, sel_bezierPathWithRoundedRect_cornerRadius_);
          goto LABEL_9;
        case 2:
          OUTLINED_FUNCTION_13_25(v20, v21, v22, v23, v2, *(double *)&v4);
          uint64_t v28 = self;
          id v26 = OUTLINED_FUNCTION_33_13(v28, sel_bezierPathWithRoundedRect_byRoundingCorners_cornerRadii_);
          goto LABEL_9;
        case 3:
          goto LABEL_10;
        default:
          UIEdgeInsetsInsetRect(v20, v21, v22, v23, v2, *(double *)&v4);
          OUTLINED_FUNCTION_8();
          unint64_t v25 = self;
          id v26 = OUTLINED_FUNCTION_1_1(v25, sel_bezierPathWithRect_);
LABEL_9:
          id v24 = v26;
LABEL_10:
          objc_msgSend(v5, sel_setVisiblePath_, v24);

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
          break;
      }
    }
    else
    {
      OUTLINED_FUNCTION_66_4();
      sub_1B5FB8124((uint64_t)v30, (unint64_t *)&qword_1EB641E20, (unint64_t *)&qword_1EB641E10);
    }
  }
  OUTLINED_FUNCTION_17_21();
}

id sub_1B5FB236C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1B5FB3DA8(a1, a2, a3, a4, (uint64_t (*)(id, uint64_t))BlueprintCollectionViewDragDelegate.collectionView(_:dragPreviewParametersForItemAt:));
}

id BlueprintCollectionViewDragDelegate.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void BlueprintCollectionViewDragDelegate.init()()
{
}

void sub_1B5FB23E8()
{
}

uint64_t sub_1B5FB23FC(uint64_t a1)
{
  OUTLINED_FUNCTION_28_14();
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(void))(v3 + 8))();
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = a1 + *(void *)(v4 + 120);
  uint64_t v6 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v1 + 88) - 8) + 8);
  return v6(v5);
}

uint64_t sub_1B5FB24DC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5TeaUIP33_D34D381894B01FD84F2F257FA2F1BCB915DragSessionData_initialIndexPath;
  uint64_t v2 = sub_1B61AFCB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

void (*BlueprintCollectionViewDragDelegate2.delegate.modify())(id **, char)
{
  uint64_t v2 = malloc(0x30uLL);
  OUTLINED_FUNCTION_59_2((uint64_t)v2);
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_38_11(v4, *(void *)(v3 + 128));
  *(void *)(v1 + 24) = MEMORY[0x1BA9B1EC0](v0);
  return sub_1B5FB2610;
}

id BlueprintCollectionViewDragDelegate2.__allocating_init(blueprintProvider:blueprintLayoutProvider:)()
{
  return BlueprintCollectionViewDragDelegate2.init(blueprintProvider:blueprintLayoutProvider:)();
}

id BlueprintCollectionViewDragDelegate2.init(blueprintProvider:blueprintLayoutProvider:)()
{
  uint64_t v1 = (objc_class *)OUTLINED_FUNCTION_72_4();
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_10_5();
  uint64_t v3 = &v0[*(void *)(v2 + 152)];
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_33();
  v4();
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_33();
  v5();
  v10.receiver = v0;
  v10.super_class = v1;
  id v6 = objc_msgSendSuper2(&v10, sel_init);
  OUTLINED_FUNCTION_50_10();
  v7();
  OUTLINED_FUNCTION_44_11();
  v8();
  return v6;
}

Swift::Void __swiftcall BlueprintCollectionViewDragDelegate2.registerDrop(in:)(UICollectionView *in)
{
  [(UICollectionView *)in setDropDelegate:v1];
}

uint64_t BlueprintCollectionViewDragDelegate2.registerDiffableDropDelegate(_:)(uint64_t a1)
{
  sub_1B5E176E4(a1, (uint64_t)v4);
  uint64_t v2 = (uint64_t)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x98);
  swift_beginAccess();
  sub_1B5FB2858((uint64_t)v4, v2);
  return swift_endAccess();
}

uint64_t sub_1B5FB2858(uint64_t a1, uint64_t a2)
{
  sub_1B5E36DD0(0, &qword_1E9DAB140, &qword_1E9DAB148);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void BlueprintCollectionViewDragDelegate2.targetIndexPathToReorderItem(from:to:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v65 = v1;
  uint64_t v66 = v2;
  uint64_t v60 = v3;
  uint64_t v4 = *MEMORY[0x1E4FBC8C8] & *v0;
  sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v63 = v6;
  uint64_t v64 = v5;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_4();
  uint64_t v59 = v7;
  uint64_t v61 = v4;
  OUTLINED_FUNCTION_65_4();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  uint64_t v62 = v9;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_93_3(v11, v58);
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = swift_getAssociatedConformanceWitness();
  uint64_t v15 = type metadata accessor for BlueprintSection();
  OUTLINED_FUNCTION_0_10();
  uint64_t v17 = v16;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v18);
  double v20 = (char *)&v58 - v19;
  v70[0] = AssociatedTypeWitness;
  v70[1] = v12;
  v70[2] = AssociatedConformanceWitness;
  uint64_t v71 = v14;
  uint64_t v21 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  uint64_t v23 = v22;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_19_19();
  uint64_t v61 = (uint64_t)v0 + *(void *)(v61 + 136);
  BlueprintProviderType.blueprint.getter();
  uint64_t v25 = sub_1B61AFC90();
  Blueprint.subscript.getter(v25, v21);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v12, v21);
  OUTLINED_FUNCTION_48_0();
  v26();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v15);
  sub_1B5E00AB8(0, &qword_1E9DAB150);
  if (swift_dynamicCast())
  {
    uint64_t v28 = v63;
    BOOL v27 = v64;
    sub_1B5E30E70(&v67, (uint64_t)v70);
    uint64_t v29 = v65;
    unint64_t v30 = sub_1B5EDFD50(v61, v65);
    uint64_t v31 = v29;
    if (v30 >> 62) {
      uint64_t v32 = sub_1B61B3530();
    }
    else {
      uint64_t v32 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v33 = v27;
    swift_bridgeObjectRelease();
    if (!v32) {
      goto LABEL_10;
    }
    __swift_project_boxed_opaque_existential_1(v70, v71);
    uint64_t v34 = OUTLINED_FUNCTION_20_18();
    v35(v34);
    long long v36 = v67;
    if (v68 == 1)
    {
      if (v67 != 0)
      {
        if (!((unint64_t)v67 ^ 1 | *((void *)&v67 + 1)))
        {
          (*(void (**)(uint64_t, uint64_t, void))(v28 + 16))(v60, v66, v27);
LABEL_24:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
          goto LABEL_25;
        }
        uint64_t v52 = sub_1B61AFC90();
        uint64_t v53 = v66;
        uint64_t v54 = sub_1B61AFC90();
        uint64_t v38 = *(void (**)(uint64_t, uint64_t, void))(v28 + 16);
        if (v52 == v54)
        {
          uint64_t v39 = v60;
          uint64_t v40 = v53;
          goto LABEL_12;
        }
LABEL_11:
        uint64_t v39 = v60;
        uint64_t v40 = v31;
LABEL_12:
        v38(v39, v40, v33);
        goto LABEL_24;
      }
LABEL_10:
      uint64_t v38 = *(void (**)(uint64_t, uint64_t, void))(v28 + 16);
      goto LABEL_11;
    }
    uint64_t v41 = sub_1B61AFC90();
    uint64_t v42 = v66;
    uint64_t v43 = sub_1B61AFC90();
    uint64_t v64 = *(void (**)(void, void, void))(v28 + 16);
    v64(v59, v42, v33);
    if (v41 == v43)
    {
      uint64_t v44 = sub_1B61AFC80();
      uint64_t v45 = v60;
      if (v44 < (uint64_t)v36)
      {
        uint64_t v46 = OUTLINED_FUNCTION_21_17();
        v47(v46);
LABEL_22:
        uint64_t v50 = v45;
        uint64_t v51 = v66;
        goto LABEL_23;
      }
      uint64_t v55 = v44;
      uint64_t v56 = OUTLINED_FUNCTION_21_17();
      v57(v56);
      if (*((uint64_t *)&v36 + 1) < v55) {
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v48 = OUTLINED_FUNCTION_21_17();
      v49(v48);
      uint64_t v45 = v60;
    }
    uint64_t v50 = v45;
    uint64_t v51 = v31;
LABEL_23:
    v64(v50, v51, v33);
    goto LABEL_24;
  }
  uint64_t v69 = 0;
  long long v67 = 0u;
  long long v68 = 0u;
  sub_1B5FB8124((uint64_t)&v67, &qword_1E9DAB158, &qword_1E9DAB150);
  OUTLINED_FUNCTION_48_0();
  v37();
LABEL_25:
  OUTLINED_FUNCTION_73();
}

void BlueprintCollectionViewDragDelegate2.reorderItem(from:to:)()
{
}

void BlueprintCollectionViewDragDelegate2.collectionView(_:dragSessionWillBegin:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_14_2();
  uint64_t v7 = v6;
  v39[0] = OUTLINED_FUNCTION_81_2();
  v39[1] = OUTLINED_FUNCTION_81_2();
  v39[2] = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  uint64_t v34 = v9;
  uint64_t v35 = v8;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v32 - v11;
  uint64_t v13 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_80();
  uint64_t v19 = v18 - v17;
  if (objc_msgSend(v3, sel_localContext))
  {
    sub_1B61B3030();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v36 = 0u;
    long long v37 = 0u;
  }
  sub_1B5FB7B9C((uint64_t)&v36, (uint64_t)v39, (void (*)(void))sub_1B5E5F6A8);
  if (AssociatedConformanceWitness)
  {
    type metadata accessor for DragSessionData();
    if (swift_dynamicCast())
    {
      uint64_t v33 = v7;
      OUTLINED_FUNCTION_33();
      v20();
      uint64_t v21 = (void *)sub_1B61AFC00();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v19, v13);
      id v22 = objc_msgSend(v5, sel_cellForItemAtIndexPath_, v21);

      if (v22)
      {
        id v42 = v22;
        sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C00);
        sub_1B5E00AB8(0, (unint64_t *)&unk_1E9DAB180);
        id v23 = v22;
        if (swift_dynamicCast())
        {
          sub_1B5E30E70(&v36, (uint64_t)v39);
          uint64_t v24 = AssociatedConformanceWitness;
          uint64_t v25 = v41;
          __swift_project_boxed_opaque_existential_1(v39, AssociatedConformanceWitness);
          (*(void (**)(void, uint64_t, uint64_t))(v25 + 8))(0, v24, v25);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
        }
        else
        {
          uint64_t v38 = 0;
          long long v36 = 0u;
          long long v37 = 0u;
          sub_1B5FB8124((uint64_t)&v36, (unint64_t *)&unk_1E9DA9E50, (unint64_t *)&unk_1E9DAB180);
        }
        id v26 = objc_msgSend(self, sel_defaultCenter);
        objc_msgSend(v26, sel_postNotificationName_object_, @"TUBlueprintDidBeginItemDraggingNotification", 0);

        OUTLINED_FUNCTION_10_5();
        uint64_t v28 = v1 + *(void *)(v27 + 128);
        OUTLINED_FUNCTION_24();
        uint64_t v29 = MEMORY[0x1BA9B1EC0](v28);
        if (v29)
        {
          unint64_t v30 = (void *)v29;
          OUTLINED_FUNCTION_10_5();
          BlueprintProviderType.blueprint.getter();
          (*(void (**)(char *, void))(*(void *)(v33 + 120) + 184))(v12, *(void *)(v33 + 96));

          swift_release();
          OUTLINED_FUNCTION_5_1();
          v31();
        }
        else
        {
          swift_release();
        }
      }
      else
      {
        swift_release();
      }
    }
  }
  else
  {
    sub_1B5FB482C((uint64_t)v39, (void (*)(void))sub_1B5E5F6A8);
  }
  OUTLINED_FUNCTION_73();
}

uint64_t type metadata accessor for DragSessionData()
{
  uint64_t result = qword_1E9DAB280;
  if (!qword_1E9DAB280) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1B5FB32AC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
}

void BlueprintCollectionViewDragDelegate2.collectionView(_:dragSessionDidEnd:)()
{
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_14_2();
  uint64_t v2 = v1;
  uint64_t v3 = OUTLINED_FUNCTION_49();
  uint64_t v4 = OUTLINED_FUNCTION_49();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v15 = swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_19_19();
  id v9 = objc_msgSend(self, sel_defaultCenter, v3, v4, AssociatedConformanceWitness, v15);
  objc_msgSend(v9, sel_postNotificationName_object_, @"TUBlueprintDidEndItemDraggingNotification", 0);

  OUTLINED_FUNCTION_14_0();
  uint64_t v11 = v0 + *(void *)(v10 + 128);
  OUTLINED_FUNCTION_24();
  uint64_t v12 = MEMORY[0x1BA9B1EC0](v11);
  if (v12)
  {
    uint64_t v13 = (void *)v12;
    OUTLINED_FUNCTION_14_0();
    BlueprintProviderType.blueprint.getter();
    (*(void (**)(uint64_t, void))(*(void *)(v2 + 120) + 192))(v3, *(void *)(v2 + 96));

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v5);
  }
  OUTLINED_FUNCTION_73();
}

void sub_1B5FB34D0(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  swift_unknownObjectRetain();
  id v5 = a1;
  BlueprintCollectionViewDragDelegate2.collectionView(_:dragSessionDidEnd:)();

  swift_unknownObjectRelease();
}

void BlueprintCollectionViewDragDelegate2.collectionView(_:itemsForBeginning:at:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_25_0();
  uint64_t v13 = (void *)sub_1B61AFC00();
  objc_msgSend(v8, sel_deselectItemAtIndexPath_animated_, v13, 0);

  OUTLINED_FUNCTION_33();
  v14();
  type metadata accessor for DragSessionData();
  uint64_t v15 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v15 + OBJC_IVAR____TtC5TeaUIP33_D34D381894B01FD84F2F257FA2F1BCB915DragSessionData_initialIndexPath, v1, v9);
  *(void *)(v15 + OBJC_IVAR____TtC5TeaUIP33_D34D381894B01FD84F2F257FA2F1BCB915DragSessionData_sourceView) = v8;
  id v16 = v8;
  objc_msgSend(v6, sel_setLocalContext_, v15);
  swift_release();
  OUTLINED_FUNCTION_25_1();
  sub_1B5EDFD50(v2 + *(void *)(v17 + 136), v4);
  OUTLINED_FUNCTION_73();
}

id sub_1B5FB36CC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1B61AFCB0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B61AFC40();
  id v9 = a3;
  swift_unknownObjectRetain();
  id v10 = a1;
  BlueprintCollectionViewDragDelegate2.collectionView(_:itemsForBeginning:at:)();

  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1B5DFF760(0, (unint64_t *)&qword_1E9DAB2F0);
  uint64_t v11 = (void *)sub_1B61B24D0();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t BlueprintCollectionViewDragDelegate2.collectionView(_:itemsForAddingTo:at:point:)()
{
  OUTLINED_FUNCTION_31();
  uint64_t v1 = (void *)sub_1B61AFC00();
  OUTLINED_FUNCTION_58_6((uint64_t)v1, sel_deselectItemAtIndexPath_animated_);

  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_24_8();
  OUTLINED_FUNCTION_24_8();
  return sub_1B5EDFD50(v2, v0);
}

id sub_1B5FB38D8(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_1B5FB38F0(a1, a2, a3, a4, a5, (void (*)(id))BlueprintCollectionViewDragDelegate2.collectionView(_:itemsForAddingTo:at:point:));
}

id sub_1B5FB38F0(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(id))
{
  uint64_t v10 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_25_0();
  sub_1B61AFC40();
  id v14 = a3;
  swift_unknownObjectRetain();
  id v15 = a1;
  a6(v14);

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v6, v10);
  sub_1B5DFF760(0, (unint64_t *)&qword_1E9DAB2F0);
  id v16 = (void *)sub_1B61B24D0();
  swift_bridgeObjectRelease();
  return v16;
}

void BlueprintCollectionViewDragDelegate2.collectionView(_:dragPreviewParametersForItemAt:)()
{
  OUTLINED_FUNCTION_15_23();
  OUTLINED_FUNCTION_99_2();
  uint64_t v4 = *(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & v3) + 0x58);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_98_2();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_19_19();
  OUTLINED_FUNCTION_89_3();
  uint64_t v7 = OUTLINED_FUNCTION_96_2();
  OUTLINED_FUNCTION_14(v7);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v8);
  id v9 = (void *)OUTLINED_FUNCTION_90_3();
  id v10 = objc_msgSend(v0, sel_cellForItemAtIndexPath_, v9);

  id v29 = v10;
  if (v10)
  {
    OUTLINED_FUNCTION_84_2();
    uint64_t v11 = OUTLINED_FUNCTION_78_3();
    uint64_t v12 = OUTLINED_FUNCTION_88_2();
    uint64_t v13 = OUTLINED_FUNCTION_77_2(v12);
    OUTLINED_FUNCTION_60_5(v13);
    OUTLINED_FUNCTION_3_0();
    OUTLINED_FUNCTION_5_1();
    v14();
    uint64_t v15 = OUTLINED_FUNCTION_26_16();
    v16(v15);
    sub_1B5E00AB8(0, (unint64_t *)&qword_1EB641E10);
    if (OUTLINED_FUNCTION_49_10())
    {
      sub_1B5E30E70(v30, (uint64_t)v31);
      OUTLINED_FUNCTION_42_12(objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1720]), sel_init));
      uint64_t v17 = OUTLINED_FUNCTION_35_12();
      uint64_t v18 = (void *)v4(v17);
      objc_msgSend(v1, sel_setBackgroundColor_, v18);

      OUTLINED_FUNCTION_45_9();
      uint64_t v19 = OUTLINED_FUNCTION_36_13();
      v4(v19);
      OUTLINED_FUNCTION_43_8();
      objc_msgSend(v29, sel_bounds);
      id v24 = 0;
      switch(v11)
      {
        case 1:
          OUTLINED_FUNCTION_13_25(v20, v21, v22, v23, v2, *(double *)&v4);
          uint64_t v27 = self;
          id v26 = OUTLINED_FUNCTION_63_0(v27, sel_bezierPathWithRoundedRect_cornerRadius_);
          goto LABEL_9;
        case 2:
          OUTLINED_FUNCTION_13_25(v20, v21, v22, v23, v2, *(double *)&v4);
          uint64_t v28 = self;
          id v26 = OUTLINED_FUNCTION_33_13(v28, sel_bezierPathWithRoundedRect_byRoundingCorners_cornerRadii_);
          goto LABEL_9;
        case 3:
          goto LABEL_10;
        default:
          UIEdgeInsetsInsetRect(v20, v21, v22, v23, v2, *(double *)&v4);
          OUTLINED_FUNCTION_8();
          uint64_t v25 = self;
          id v26 = OUTLINED_FUNCTION_1_1(v25, sel_bezierPathWithRect_);
LABEL_9:
          id v24 = v26;
LABEL_10:
          objc_msgSend(v5, sel_setVisiblePath_, v24);

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
          break;
      }
    }
    else
    {
      OUTLINED_FUNCTION_66_4();
      sub_1B5FB8124((uint64_t)v30, (unint64_t *)&qword_1EB641E20, (unint64_t *)&qword_1EB641E10);
    }
  }
  OUTLINED_FUNCTION_17_21();
}

id sub_1B5FB3D90(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1B5FB3DA8(a1, a2, a3, a4, (uint64_t (*)(id, uint64_t))BlueprintCollectionViewDragDelegate2.collectionView(_:dragPreviewParametersForItemAt:));
}

id sub_1B5FB3DA8(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(id, uint64_t))
{
  sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_80();
  uint64_t v11 = v10 - v9;
  sub_1B61AFC40();
  id v12 = a3;
  id v13 = a1;
  id v14 = (void *)a5(v12, v11);

  OUTLINED_FUNCTION_44_11();
  v15();
  return v14;
}

void BlueprintCollectionViewDragDelegate2.collectionView(_:dropSessionDidUpdate:withDestinationIndexPath:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v85 = v1;
  uint64_t v3 = v2;
  uint64_t v91 = v4;
  uint64_t v5 = *MEMORY[0x1E4FBC8C8] & *v0;
  uint64_t v6 = *(void *)(v5 + 0x50);
  OUTLINED_FUNCTION_65_4();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  uint64_t v82 = v8;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_30(v10);
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v13 = swift_getAssociatedConformanceWitness();
  uint64_t v96 = AssociatedTypeWitness;
  uint64_t v97 = v11;
  uint64_t v98 = AssociatedConformanceWitness;
  uint64_t v99 = v13;
  uint64_t v81 = type metadata accessor for BlueprintSection();
  OUTLINED_FUNCTION_0_10();
  uint64_t v80 = v14;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_79(v16);
  uint64_t v18 = OUTLINED_FUNCTION_14(v17);
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_30(v19);
  uint64_t v86 = *(void *)(v6 - 8);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v20);
  double v22 = (char *)v72 - v21;
  uint64_t v87 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v90 = v23;
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v26);
  OUTLINED_FUNCTION_116();
  uint64_t v88 = v27;
  uint64_t v96 = AssociatedTypeWitness;
  uint64_t v97 = v11;
  uint64_t v98 = AssociatedConformanceWitness;
  uint64_t v99 = v13;
  uint64_t v28 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  uint64_t v89 = v29;
  MEMORY[0x1F4188790](v30);
  OUTLINED_FUNCTION_81();
  MEMORY[0x1F4188790](v31);
  uint64_t v32 = (char *)v0 + *(void *)(v5 + 128);
  OUTLINED_FUNCTION_24();
  uint64_t v33 = (void *)MEMORY[0x1BA9B1EC0](v32);

  if (!v33) {
    goto LABEL_12;
  }
  id v34 = objc_msgSend(v3, sel_localDragSession);
  if (!v34) {
    goto LABEL_12;
  }
  id v35 = v34;
  if (objc_msgSend(v34, sel_localContext))
  {
    sub_1B61B3030();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v94 = 0u;
    long long v95 = 0u;
  }
  sub_1B5FB7B9C((uint64_t)&v94, (uint64_t)&v96, (void (*)(void))sub_1B5E5F6A8);
  if (!v99)
  {
    swift_unknownObjectRelease();
    sub_1B5FB482C((uint64_t)&v96, (void (*)(void))sub_1B5E5F6A8);
    goto LABEL_12;
  }
  type metadata accessor for DragSessionData();
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_unknownObjectRelease();
    goto LABEL_12;
  }
  uint64_t v36 = v92;
  if (*(char **)(v92 + OBJC_IVAR____TtC5TeaUIP33_D34D381894B01FD84F2F257FA2F1BCB915DragSessionData_sourceView) != v91)
  {
    swift_unknownObjectRelease();
    swift_release();
LABEL_12:
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB15B8]), sel_initWithDropOperation_, 0);
    goto LABEL_13;
  }
  id v78 = v35;
  OUTLINED_FUNCTION_14_0();
  uint64_t v91 = (char *)v0 + *(void *)(v37 + 136);
  BlueprintProviderType.blueprint.getter();
  uint64_t v77 = v36;
  uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 16);
  uint64_t v73 = v36 + OBJC_IVAR____TtC5TeaUIP33_D34D381894B01FD84F2F257FA2F1BCB915DragSessionData_initialIndexPath;
  uint64_t v75 = v90 + 16;
  long long v74 = v38;
  OUTLINED_FUNCTION_33();
  v39();
  Blueprint.contains(indexPath:)();
  LODWORD(v79) = v40;
  uint64_t v41 = v90 + 8;
  OUTLINED_FUNCTION_45();
  uint64_t v76 = v42;
  OUTLINED_FUNCTION_66();
  v43();
  uint64_t v44 = *(void *)(v89 + 8);
  v89 += 8;
  v72[1] = v44;
  OUTLINED_FUNCTION_59();
  v45();
  if ((v79 & 1) == 0) {
    goto LABEL_21;
  }
  uint64_t v46 = v86;
  OUTLINED_FUNCTION_33();
  v47();
  uint64_t v48 = v88;
  uint64_t v49 = v87;
  OUTLINED_FUNCTION_33();
  v50();
  unint64_t v79 = sub_1B5EDFD50((uint64_t)v22, v48);
  OUTLINED_FUNCTION_45();
  OUTLINED_FUNCTION_66();
  v51();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v22, v6);
  uint64_t v52 = v49;
  if (v79 >> 62)
  {
    sub_1B61B1F70();
    uint64_t v53 = sub_1B61B3530();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v53 = *(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v53)
  {
    uint64_t v86 = v41;
    uint64_t v54 = v84;
    sub_1B5EF6774(v85, v84);
    OUTLINED_FUNCTION_28_11(v54, 1, v52);
    if (!v55)
    {
      uint64_t v56 = v83;
      uint64_t v57 = OUTLINED_FUNCTION_45();
      v58(v57);
      if (sub_1B5FB1B28())
      {
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB15B8]), sel_initWithDropOperation_, 0);
      }
      else
      {
        BlueprintProviderType.blueprint.getter();
        uint64_t v59 = sub_1B61AFC90();
        Blueprint.subscript.getter(v59, v28);
        OUTLINED_FUNCTION_59();
        v60();
        OUTLINED_FUNCTION_48_0();
        v61();
        OUTLINED_FUNCTION_27_3();
        OUTLINED_FUNCTION_5_1();
        v62();
        sub_1B5E00AB8(0, &qword_1E9DAB150);
        if (swift_dynamicCast())
        {
          sub_1B5E30E70(&v94, (uint64_t)&v96);
          sub_1B5DFF760(0, &qword_1E9DAB1A0);
          uint64_t v63 = v56;
          uint64_t v64 = v99;
          uint64_t v65 = v100;
          uint64_t v66 = __swift_project_boxed_opaque_existential_1(&v96, v99);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v65 + 8))(&v94, v64, v65);
          long long v92 = v94;
          char v93 = v95;
          uint64_t v67 = v88;
          long long v68 = v74;
          v74(v88, v73, v52);
          uint64_t v69 = OUTLINED_FUNCTION_71_5((uint64_t)&v101);
          v68(v69, v63, v52);
          sub_1B60D9A4C((uint64_t)&v92, v67, (uint64_t)v66);
          OUTLINED_FUNCTION_52_11();
          swift_release();
          OUTLINED_FUNCTION_25_15();
          v70();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v96);
          goto LABEL_13;
        }
        OUTLINED_FUNCTION_46_9();
        sub_1B5FB8124((uint64_t)&v94, &qword_1E9DAB158, &qword_1E9DAB150);
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB15B8]), sel_initWithDropOperation_intent_, 3, 0);
      }
      OUTLINED_FUNCTION_52_11();
      swift_release();
      OUTLINED_FUNCTION_25_15();
      v71();
      goto LABEL_13;
    }
    sub_1B5FB482C(v54, (void (*)(void))sub_1B5E81E54);
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB15B8]), sel_initWithDropOperation_intent_, 3, 0);
  }
  else
  {
LABEL_21:
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB15B8]), sel_initWithDropOperation_, 0);
  }
  OUTLINED_FUNCTION_52_11();
  swift_release();
LABEL_13:
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5FB482C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_5_1();
  v3();
  return a1;
}

id sub_1B5FB4884(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  sub_1B5E81E54();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5)
  {
    sub_1B61AFC40();
    uint64_t v11 = sub_1B61AFCB0();
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v11 = sub_1B61AFCB0();
    uint64_t v12 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v10, v12, 1, v11);
  id v13 = a3;
  swift_unknownObjectRetain();
  id v14 = a1;
  BlueprintCollectionViewDragDelegate2.collectionView(_:dropSessionDidUpdate:withDestinationIndexPath:)();
  uint64_t v16 = v15;

  swift_unknownObjectRelease();
  sub_1B5FB482C((uint64_t)v10, (void (*)(void))sub_1B5E81E54);
  return v16;
}

void BlueprintCollectionViewDragDelegate2.collectionView(_:performDropWith:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_15_23();
  a25 = v27;
  a26 = v32;
  uint64_t v33 = v26;
  id v35 = v34;
  id v142 = v36;
  uint64_t v37 = *MEMORY[0x1E4FBC8C8] & *v26;
  OUTLINED_FUNCTION_64_3();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  uint64_t v139 = v39;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v40);
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_30(v41);
  uint64_t v42 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v44 = swift_getAssociatedConformanceWitness();
  uint64_t v138 = type metadata accessor for BlueprintSection();
  OUTLINED_FUNCTION_0_10();
  uint64_t v137 = v45;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v46);
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_30(v47);
  v152[0] = AssociatedTypeWitness;
  v152[1] = v42;
  v152[2] = AssociatedConformanceWitness;
  uint64_t v153 = v44;
  uint64_t v136 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  uint64_t v135 = v48;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v49);
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_79(v50);
  uint64_t v52 = OUTLINED_FUNCTION_14(v51);
  MEMORY[0x1F4188790](v52);
  OUTLINED_FUNCTION_81();
  uint64_t v55 = v53 - v54;
  MEMORY[0x1F4188790](v56);
  OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v57);
  uint64_t v59 = (char *)&v132 - v58;
  sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v147 = v61;
  uint64_t v148 = v60;
  MEMORY[0x1F4188790](v60);
  OUTLINED_FUNCTION_81();
  uint64_t v64 = v62 - v63;
  MEMORY[0x1F4188790](v65);
  OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v66);
  OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v67);
  OUTLINED_FUNCTION_116();
  OUTLINED_FUNCTION_30(v68);
  uint64_t v69 = (char *)v33 + *(void *)(v37 + 128);
  OUTLINED_FUNCTION_24();
  uint64_t v70 = MEMORY[0x1BA9B1EC0](v69);
  if (!v70) {
    goto LABEL_47;
  }
  uint64_t v145 = v70;
  id v140 = v35;
  id v71 = objc_msgSend(v35, sel_items);
  sub_1B5FB5548();
  unint64_t v72 = sub_1B61B24E0();

  if (!(v72 >> 62))
  {
    if (*(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_46:
    OUTLINED_FUNCTION_59_6();
    swift_bridgeObjectRelease();
    goto LABEL_47;
  }
  sub_1B61B1F70();
  uint64_t v131 = sub_1B61B3530();
  swift_bridgeObjectRelease();
  if (!v131) {
    goto LABEL_46;
  }
LABEL_4:
  sub_1B5E7FBF8(0, (v72 & 0xC000000000000001) == 0, v72);
  if ((v72 & 0xC000000000000001) != 0)
  {
    uint64_t v134 = MEMORY[0x1BA9B04B0](0, v72);
  }
  else
  {
    uint64_t v134 = *(void *)(v72 + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  id v73 = v140;
  id v74 = objc_msgSend(v140, sel_destinationIndexPath);
  if (!v74)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v59, 1, 1, v148);
    goto LABEL_16;
  }
  uint64_t v75 = v74;
  uint64_t v133 = v55;
  uint64_t v132 = v64;
  uint64_t v76 = v144;
  sub_1B61AFC40();

  uint64_t v77 = v148;
  id v78 = *(void (**)(void))(v147 + 32);
  uint64_t v79 = v76;
  uint64_t v80 = v147 + 32;
  ((void (*)(char *, uint64_t, uint64_t))v78)(v59, v79, v148);
  __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v77);
  OUTLINED_FUNCTION_28_11((uint64_t)v59, 1, v77);
  if (v81)
  {
LABEL_16:
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_59_6();
    uint64_t v90 = (uint64_t)v59;
LABEL_22:
    sub_1B5FB482C(v90, (void (*)(void))sub_1B5E81E54);
LABEL_47:
    OUTLINED_FUNCTION_17_21();
    return;
  }
  OUTLINED_FUNCTION_54_8();
  v78();
  id v82 = objc_msgSend(v73, sel_items);
  unint64_t v83 = sub_1B61B24E0();

  uint64_t v84 = v78;
  if (v83 >> 62)
  {
    sub_1B61B1F70();
    uint64_t v85 = sub_1B61B3530();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v85 = *(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v86 = v133;
  if (!v85)
  {
    swift_bridgeObjectRelease();
    uint64_t v91 = OUTLINED_FUNCTION_71_5((uint64_t)&a21);
    __swift_storeEnumTagSinglePayload(v91, 1, 1, v148);
LABEL_21:
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_59_6();
    OUTLINED_FUNCTION_5_1();
    v94();
    uint64_t v90 = v80;
    goto LABEL_22;
  }
  sub_1B5E7FBF8(0, (v83 & 0xC000000000000001) == 0, v83);
  if ((v83 & 0xC000000000000001) != 0)
  {
    uint64_t v87 = (void *)MEMORY[0x1BA9B04B0](0, v83);
  }
  else
  {
    uint64_t v87 = *(void **)(v83 + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  id v88 = objc_msgSend(v87, sel_sourceIndexPath);
  swift_unknownObjectRelease();
  if (v88)
  {
    sub_1B61AFC40();

    uint64_t v89 = 0;
  }
  else
  {
    uint64_t v89 = 1;
  }
  id v92 = v142;
  uint64_t v93 = v148;
  __swift_storeEnumTagSinglePayload(v86, v89, 1, v148);
  uint64_t v80 = v143;
  sub_1B5FB7B9C(v86, v143, (void (*)(void))sub_1B5E81E54);
  OUTLINED_FUNCTION_28_11(v80, 1, v93);
  if (v81) {
    goto LABEL_21;
  }
  ((void (*)(void, uint64_t, uint64_t))v84)(v141, v80, v93);
  uint64_t v133 = swift_allocBox();
  long long v95 = *(void (**)(uint64_t, uint64_t, uint64_t))(v147 + 16);
  uint64_t v143 = v96;
  v95(v96, v146, v93);
  id v97 = objc_msgSend(v92, sel_collectionViewLayout);
  uint64_t v98 = (void *)sub_1B61B20C0();
  uint64_t v99 = (void *)sub_1B61AFC00();
  id v100 = objc_msgSend(v97, sel_layoutAttributesForSupplementaryViewOfKind_atIndexPath_, v98, v99);

  uint64_t v101 = v148;
  id v102 = v140;
  if (!v100)
  {
LABEL_29:
    OUTLINED_FUNCTION_10_5();
    BlueprintProviderType.blueprint.getter();
    uint64_t v114 = sub_1B61AFC90();
    Blueprint.subscript.getter(v114, v136);
    OUTLINED_FUNCTION_27_3();
    OUTLINED_FUNCTION_5_1();
    v115();
    OUTLINED_FUNCTION_48_0();
    v116();
    OUTLINED_FUNCTION_27_3();
    OUTLINED_FUNCTION_5_1();
    v117();
    sub_1B5E00AB8(0, &qword_1E9DAB150);
    if (!swift_dynamicCast())
    {
      uint64_t v151 = 0;
      long long v149 = 0u;
      long long v150 = 0u;
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_59_6();
      uint64_t v124 = *(void (**)(void))(v147 + 8);
      OUTLINED_FUNCTION_66();
      v124();
      OUTLINED_FUNCTION_66();
      v124();
      sub_1B5FB8124((uint64_t)&v149, &qword_1E9DAB158, &qword_1E9DAB150);
LABEL_44:
      swift_release();
      goto LABEL_47;
    }
    sub_1B5E30E70(&v149, (uint64_t)v152);
    uint64_t v118 = v153;
    uint64_t v119 = v154;
    __swift_project_boxed_opaque_existential_1(v152, v153);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v119 + 8))(&v149, v118, v119);
    long long v120 = v149;
    uint64_t v121 = (void *)v134;
    uint64_t v122 = v133;
    if (v150 == 1)
    {
      if (v149 == 0) {
        goto LABEL_43;
      }
      if ((unint64_t)v149 ^ 1 | *((void *)&v149 + 1))
      {
        uint64_t v123 = sub_1B61AFC90();
        if (v123 != sub_1B61AFC90()) {
          goto LABEL_43;
        }
      }
    }
    else
    {
      uint64_t v125 = sub_1B61AFC90();
      if (v125 != sub_1B61AFC90()) {
        goto LABEL_43;
      }
      uint64_t v126 = sub_1B61AFC80();
      if (v126 >= (uint64_t)v120 && *((void *)&v120 + 1) >= v126) {
        goto LABEL_43;
      }
    }
    sub_1B5FB55A0(v33, v141, v122, v145, v102, v121);
LABEL_43:
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_59_6();
    uint64_t v128 = *(void (**)(uint64_t))(v147 + 8);
    uint64_t v129 = OUTLINED_FUNCTION_87_1((uint64_t)&a19);
    v128(v129);
    uint64_t v130 = OUTLINED_FUNCTION_87_1((uint64_t)&a24);
    v128(v130);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v152);
    goto LABEL_44;
  }
  objc_msgSend(v100, sel_frame);
  OUTLINED_FUNCTION_8();

  id v103 = objc_msgSend(v102, sel_session);
  objc_msgSend(v103, sel_locationInView_, v142);
  double v105 = v104;
  swift_unknownObjectRelease();
  v156.origin.x = v28;
  v156.origin.y = v29;
  v156.size.double width = v30;
  v156.size.double height = v31;
  double MidY = CGRectGetMidY(v156);
  uint64_t v107 = OUTLINED_FUNCTION_71_5((uint64_t)&v155);
  v95(v107, v146, v101);
  if (v105 >= MidY)
  {
    (*(void (**)(id, uint64_t))(v147 + 8))(v103, v101);
    goto LABEL_29;
  }
  uint64_t v108 = sub_1B61AFC90();
  OUTLINED_FUNCTION_59();
  v109();
  if (v108 <= 0) {
    goto LABEL_29;
  }
  uint64_t v110 = sub_1B61AFC90();
  uint64_t v111 = v110 - 1;
  if (!__OFSUB__(v110, 1))
  {
    id v112 = objc_msgSend(v142, sel_numberOfItemsInSection_, v111);
    uint64_t v113 = v144;
    MEMORY[0x1BA9ACE10](v112, v111);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v147 + 40))(v143, v113, v101);
    goto LABEL_29;
  }
  __break(1u);
}

unint64_t sub_1B5FB5548()
{
  unint64_t result = qword_1E9DAB1A8;
  if (!qword_1E9DAB1A8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9DAB1A8);
  }
  return result;
}

uint64_t sub_1B5FB55A0(void *a1, void (*a2)(void, void, void), uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  id v79 = a6;
  id v80 = a5;
  uint64_t v78 = a4;
  id v71 = a2;
  uint64_t v75 = (void *)(*MEMORY[0x1E4FBC8C8] & *a1);
  uint64_t v7 = v75;
  uint64_t v74 = type metadata accessor for BlueprintViewAction.Action(0);
  MEMORY[0x1F4188790](v74);
  uint64_t v76 = (char *)v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v75[13];
  uint64_t v10 = v75[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v81 = type metadata accessor for BlueprintItem();
  uint64_t v82 = *(void *)(v81 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v81);
  uint64_t v83 = (uint64_t)v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v86 = (char *)v64 - v15;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v84 = v9;
  uint64_t v73 = v10;
  uint64_t v17 = swift_getAssociatedConformanceWitness();
  v90[0] = v16;
  v90[1] = AssociatedTypeWitness;
  v90[2] = v17;
  uint64_t v91 = AssociatedConformanceWitness;
  uint64_t v68 = AssociatedConformanceWitness;
  uint64_t v85 = type metadata accessor for Blueprint();
  uint64_t v77 = *(void *)(v85 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v85);
  unint64_t v72 = (char *)v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)v64 - v20;
  uint64_t v22 = sub_1B61AFCB0();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = swift_projectBox();
  uint64_t v26 = (uint64_t)a1 + v7[19];
  swift_beginAccess();
  sub_1B5FB8178(v26, (uint64_t)&v88);
  uint64_t v70 = v25;
  if (v89)
  {
    sub_1B5E30E70(&v88, (uint64_t)v90);
    v64[1] = AssociatedTypeWitness;
    uint64_t v28 = v91;
    uint64_t v27 = v92;
    __swift_project_boxed_opaque_existential_1(v90, v91);
    CGFloat v29 = v71;
    uint64_t v30 = v87;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v25, v30, v22);
    (*(void (**)(void (*)(void, void, void), char *, uint64_t, uint64_t))(v27 + 8))(v29, v25, v28, v27);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
    uint64_t v31 = v22;
  }
  else
  {
    sub_1B5FB8124((uint64_t)&v88, &qword_1E9DAB140, &qword_1E9DAB148);
    uint64_t v31 = v22;
    CGFloat v29 = v71;
  }
  uint64_t v32 = v23;
  uint64_t v33 = v73;
  BlueprintProviderType.blueprint.getter();
  id v34 = v86;
  Blueprint.subscript.getter();
  uint64_t v68 = type metadata accessor for BlueprintViewActionRequest();
  (*(void (**)(uint64_t, char *, uint64_t))(v82 + 16))(v83, v34, v81);
  sub_1B5EFFFC4();
  uint64_t v36 = *(int *)(v35 + 48);
  uint64_t v37 = v21;
  uint64_t v65 = v21;
  uint64_t v38 = v29;
  uint64_t v39 = (uint64_t)v76;
  uint64_t v40 = &v76[v36];
  uint64_t v67 = v32;
  uint64_t v41 = *(void (**)(char *, void, uint64_t))(v32 + 16);
  uint64_t v42 = v31;
  uint64_t v66 = v31;
  v41(v76, v38, v31);
  id v71 = (void (*)(void, void, void))v41;
  uint64_t v43 = v87;
  swift_beginAccess();
  v41(v40, v43, v42);
  swift_storeEnumTagMultiPayload();
  LOBYTE(v88) = 4;
  uint64_t v44 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v45 = v77;
  uint64_t v46 = v72;
  uint64_t v47 = v37;
  uint64_t v48 = v85;
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v72, v47, v85);
  unint64_t v49 = (*(unsigned __int8 *)(v45 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  uint64_t v50 = (char *)swift_allocObject();
  *((void *)v50 + 2) = v33;
  uint64_t v51 = v75;
  *((void *)v50 + 3) = v75[11];
  uint64_t v52 = v51[12];
  uint64_t v53 = v84;
  *((void *)v50 + 4) = v52;
  *((void *)v50 + 5) = v53;
  *((void *)v50 + 6) = v51[14];
  uint64_t v54 = v51[15];
  *((void *)v50 + 7) = v54;
  *((void *)v50 + 8) = v44;
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(&v50[v49], v46, v48);
  uint64_t v55 = BlueprintViewActionRequest.__allocating_init(item:action:source:sourceView:completion:)(v83, v39, (char *)&v88, 0, (uint64_t)sub_1B5FB84D8, (uint64_t)v50);
  uint64_t v56 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 208))(v65, v52, v54);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 72))(v56, v55, v52, v54);
  id v57 = objc_msgSend(v79, sel_dragItem);
  uint64_t v58 = v87;
  swift_beginAccess();
  uint64_t v59 = v70;
  uint64_t v60 = v66;
  v71(v70, v58, v66);
  uint64_t v61 = (void *)sub_1B61AFC00();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v59, v60);
  id v62 = objc_msgSend(v80, sel_dropItem_toItemAtIndexPath_, v57, v61);
  swift_release();
  swift_unknownObjectRelease();

  (*(void (**)(char *, uint64_t))(v82 + 8))(v86, v81);
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v56, v48);
}

void sub_1B5FB5E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11 = a2 + 16;
  swift_beginAccess();
  uint64_t v12 = (void *)MEMORY[0x1BA9B1EC0](v11);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = (char *)v12 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v12) + 0x80);
    swift_beginAccess();
    uint64_t v15 = (void *)MEMORY[0x1BA9B1EC0](v14);

    if (v15)
    {
      (*(void (**)(uint64_t, uint64_t))(a9 + 216))(a3, a6);
    }
  }
}

void sub_1B5FB5F0C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
}

void sub_1B5FB5F24(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, uint64_t))
{
  id v8 = a3;
  swift_unknownObjectRetain();
  id v9 = a1;
  a5(v8, a4);

  swift_unknownObjectRelease();
}

void BlueprintCollectionViewDragDelegate2.init()()
{
}

void sub_1B5FB5FDC()
{
}

uint64_t sub_1B5FB5FF0(uint64_t a1)
{
  OUTLINED_FUNCTION_28_14();
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_28_1(*(void *)(v2 + 136));
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(void))(v3 + 8))();
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_28_1(*(void *)(v4 + 144));
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(void))(v5 + 8))();
  OUTLINED_FUNCTION_0_0();
  return sub_1B5FB8124(a1 + *(void *)(v6 + 152), &qword_1E9DAB140, &qword_1E9DAB148);
}

uint64_t sub_1B5FB6104@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)*a1) + 0x80);
  OUTLINED_FUNCTION_24();
  uint64_t result = MEMORY[0x1BA9B1EC0](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1B5FB6170()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t _s5TeaUI36BlueprintCollectionViewDragDelegate2C8delegateq0_Sgvg_0()
{
  uint64_t v1 = (char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80);
  OUTLINED_FUNCTION_24();
  return MEMORY[0x1BA9B1EC0](v1);
}

void _s5TeaUI36BlueprintCollectionViewDragDelegate2C8delegateq0_Sgvs_0(void *a1)
{
}

void (*BlueprintCollectionViewDragDelegate3.delegate.modify())(id **, char)
{
  uint64_t v2 = malloc(0x30uLL);
  OUTLINED_FUNCTION_59_2((uint64_t)v2);
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_38_11(v4, *(void *)(v3 + 128));
  *(void *)(v1 + 24) = MEMORY[0x1BA9B1EC0](v0);
  return sub_1B5FB2610;
}

id BlueprintCollectionViewDragDelegate3.__allocating_init(blueprintProvider:blueprintLayoutProvider:)()
{
  return BlueprintCollectionViewDragDelegate3.init(blueprintProvider:blueprintLayoutProvider:)();
}

id BlueprintCollectionViewDragDelegate3.init(blueprintProvider:blueprintLayoutProvider:)()
{
  uint64_t v1 = (objc_class *)OUTLINED_FUNCTION_72_4();
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_10_5();
  uint64_t v3 = (uint64_t)&v0[*(void *)(v2 + 152)];
  uint64_t v4 = sub_1B61AFCB0();
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v4);
  OUTLINED_FUNCTION_10_5();
  *(void *)&v0[*(void *)(v5 + 160)] = 0;
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_33();
  v6();
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_33();
  v7();
  v12.receiver = v0;
  v12.super_class = v1;
  id v8 = objc_msgSendSuper2(&v12, sel_init);
  OUTLINED_FUNCTION_44_11();
  v9();
  OUTLINED_FUNCTION_50_10();
  v10();
  return v8;
}

Swift::Void __swiftcall BlueprintCollectionViewDragDelegate3.register(in:)(UICollectionView *in)
{
  void v5[3] = swift_getObjectType();
  v5[0] = v1;
  objc_allocWithZone(MEMORY[0x1E4FB1968]);
  id v3 = v1;
  id v4 = sub_1B5F22E4C(v5, (uint64_t)sel_handleLongPressWithGestureRecognizer_);
  [(UICollectionView *)in addGestureRecognizer:v4];
}

void BlueprintCollectionViewDragDelegate3.targetIndexPathToReorderItem(from:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_83();
  a19 = v21;
  a20 = v22;
  uint64_t v99 = v23;
  uint64_t v104 = v24;
  uint64_t v92 = v25;
  uint64_t v26 = (void *)(*MEMORY[0x1E4FBC8C8] & *v20);
  uint64_t v27 = v26[13];
  uint64_t v28 = v26[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  uint64_t v96 = v30;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v31);
  OUTLINED_FUNCTION_92_2(v32, v87);
  uint64_t v33 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v95 = v27;
  uint64_t v94 = v28;
  uint64_t v35 = swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintSection();
  OUTLINED_FUNCTION_0_10();
  uint64_t v102 = v37;
  uint64_t v103 = v36;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v38);
  uint64_t v40 = (char *)&v87 - v39;
  uint64_t v98 = AssociatedTypeWitness;
  v107[0] = AssociatedTypeWitness;
  v107[1] = v33;
  v107[2] = AssociatedConformanceWitness;
  uint64_t v108 = v35;
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  uint64_t v100 = v42;
  uint64_t v101 = v41;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v43);
  sub_1B5E81E54();
  uint64_t v45 = OUTLINED_FUNCTION_14(v44);
  MEMORY[0x1F4188790](v45);
  OUTLINED_FUNCTION_80();
  uint64_t v48 = v47 - v46;
  uint64_t v49 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v51 = v50;
  uint64_t v52 = v50;
  MEMORY[0x1F4188790](v53);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_2_7();
  MEMORY[0x1F4188790](v54);
  OUTLINED_FUNCTION_110_0();
  MEMORY[0x1F4188790](v55);
  id v57 = (char *)&v87 - v56;
  uint64_t v58 = (uint64_t)v20 + v26[19];
  OUTLINED_FUNCTION_24();
  sub_1B5EF6774(v58, v48);
  uint64_t v91 = v51;
  uint64_t v59 = *(void (**)(void))(v51 + 16);
  OUTLINED_FUNCTION_18_4();
  v59();
  OUTLINED_FUNCTION_28_11(v48, 1, v49);
  uint64_t v93 = v57;
  uint64_t v89 = v52;
  long long v88 = v59;
  if (v60)
  {
    OUTLINED_FUNCTION_74_3();
    v61();
    sub_1B5FB482C(v48, (void (*)(void))sub_1B5E81E54);
  }
  else
  {
    OUTLINED_FUNCTION_59();
    v62();
    OUTLINED_FUNCTION_74_3();
    v63();
  }
  uint64_t v64 = v98;
  uint64_t v65 = v99;
  uint64_t v66 = v97;
  uint64_t v67 = v96;
  OUTLINED_FUNCTION_14_0();
  BlueprintProviderType.blueprint.getter();
  uint64_t v68 = sub_1B61AFC90();
  Blueprint.subscript.getter(v68, v101);
  OUTLINED_FUNCTION_5_1();
  v69();
  (*(void (**)(uint64_t, char *, uint64_t))(v67 + 16))(v66, v40, v64);
  OUTLINED_FUNCTION_5_1();
  v70();
  sub_1B5E00AB8(0, &qword_1E9DAB150);
  if (swift_dynamicCast())
  {
    uint64_t v103 = v49;
    sub_1B5E30E70(&v105, (uint64_t)v107);
    __swift_project_boxed_opaque_existential_1(v107, v108);
    uint64_t v71 = OUTLINED_FUNCTION_20_18();
    v72(v71);
    long long v73 = v105;
    if (v106 == 1)
    {
      if (v105 == 0)
      {
        uint64_t v81 = OUTLINED_FUNCTION_32_15();
LABEL_22:
        v90(v81);
        goto LABEL_23;
      }
      if (!((unint64_t)v105 ^ 1 | *((void *)&v105 + 1)))
      {
        OUTLINED_FUNCTION_27_3();
LABEL_18:
        OUTLINED_FUNCTION_5_1();
        v83();
        OUTLINED_FUNCTION_70_4();
        OUTLINED_FUNCTION_18_4();
        v84();
LABEL_23:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v107);
        goto LABEL_24;
      }
      uint64_t v82 = sub_1B61AFC90();
      if (v82 == sub_1B61AFC90()) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v75 = sub_1B61AFC90();
      uint64_t v76 = sub_1B61AFC90();
      OUTLINED_FUNCTION_71_5((uint64_t)&a9);
      uint64_t v77 = v88;
      OUTLINED_FUNCTION_18_4();
      v77();
      if (v75 == v76)
      {
        uint64_t v78 = sub_1B61AFC80();
        if (v78 < (uint64_t)v73)
        {
          uint64_t v85 = *(void (**)(void))(v89 + 8);
          uint64_t v86 = v103;
          OUTLINED_FUNCTION_59();
          v85();
          id v79 = v93;
        }
        else
        {
          uint64_t v85 = *(void (**)(void))(v89 + 8);
          uint64_t v86 = v103;
          ((void (*)(uint64_t, uint64_t))v85)(v65, v103);
          id v79 = v93;
          if (*((uint64_t *)&v73 + 1) >= v78) {
            goto LABEL_21;
          }
        }
        ((void (*)(char *, uint64_t))v85)(v79, v86);
        OUTLINED_FUNCTION_70_4();
        OUTLINED_FUNCTION_18_4();
        v77();
        goto LABEL_23;
      }
      OUTLINED_FUNCTION_27_3();
      OUTLINED_FUNCTION_5_1();
      v80();
    }
LABEL_21:
    uint64_t v81 = OUTLINED_FUNCTION_62_6();
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_46_9();
  sub_1B5FB8124((uint64_t)&v105, &qword_1E9DAB158, &qword_1E9DAB150);
  uint64_t v74 = OUTLINED_FUNCTION_32_15();
  v90(v74);
LABEL_24:
  OUTLINED_FUNCTION_73();
}

void BlueprintCollectionViewDragDelegate3.reorderItem(from:to:)()
{
}

void sub_1B5FB6C70()
{
  OUTLINED_FUNCTION_83();
  uint64_t v47 = v1;
  int v46 = v2;
  uint64_t v45 = v3;
  uint64_t v39 = v4;
  uint64_t v37 = *MEMORY[0x1E4FBC8C8] & *v0;
  uint64_t v43 = type metadata accessor for BlueprintViewAction.Action(0);
  OUTLINED_FUNCTION_3_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_4();
  uint64_t v40 = v6;
  uint64_t v7 = OUTLINED_FUNCTION_79_3();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_64_3();
  type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_0_10();
  uint64_t v48 = v10;
  uint64_t v49 = v9;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_12();
  uint64_t v38 = v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v36 - v13;
  uint64_t v15 = OUTLINED_FUNCTION_79_3();
  uint64_t v16 = swift_getAssociatedConformanceWitness();
  v50[0] = v15;
  v50[1] = v7;
  v50[2] = v16;
  v50[3] = AssociatedConformanceWitness;
  uint64_t v17 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  uint64_t v41 = v18;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_19_19();
  BlueprintProviderType.blueprint.getter();
  uint64_t v20 = v39;
  uint64_t v42 = v17;
  Blueprint.subscript.getter();
  OUTLINED_FUNCTION_64_3();
  type metadata accessor for BlueprintViewActionRequest();
  uint64_t v21 = v38;
  uint64_t v44 = v14;
  OUTLINED_FUNCTION_33();
  v22();
  sub_1B5EFFFC4();
  uint64_t v24 = v40;
  uint64_t v25 = v40 + *(int *)(v23 + 48);
  uint64_t v26 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_3_0();
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16);
  v28(v24, v20, v26);
  v28(v25, v45, v26);
  swift_storeEnumTagMultiPayload();
  LOBYTE(v50[0]) = v46;
  uint64_t v29 = BlueprintViewActionRequest.__allocating_init(item:action:source:sourceView:completion:)(v21, v24, (char *)v50, 0, v47, 0);
  OUTLINED_FUNCTION_10_5();
  uint64_t v31 = (char *)v0 + *(void *)(v30 + 128);
  OUTLINED_FUNCTION_24();
  uint64_t v32 = MEMORY[0x1BA9B1EC0](v31);
  if (v32)
  {
    uint64_t v33 = (void *)v32;
    (*(void (**)(void *, uint64_t, void))(*(void *)(v37 + 120) + 72))(&protocol requirements base descriptor for BlueprintProviderType, v29, *(void *)(v37 + 96));
    swift_release();
  }
  else
  {
    swift_release();
  }
  OUTLINED_FUNCTION_5_1();
  v34();
  OUTLINED_FUNCTION_5_1();
  v35();
  OUTLINED_FUNCTION_73();
}

void sub_1B5FB7028(void *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_93_3(v5, v74);
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v8 = swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintSection();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_92_2(v10, v75);
  v88[0] = AssociatedTypeWitness;
  v88[1] = v6;
  v88[2] = AssociatedConformanceWitness;
  uint64_t v89 = v8;
  uint64_t v80 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_79(v12);
  uint64_t v14 = OUTLINED_FUNCTION_14(v13);
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_81();
  uint64_t v17 = v15 - v16;
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_110_0();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_109();
  uint64_t v83 = v20;
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_116();
  uint64_t v84 = v22;
  uint64_t v23 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v25 = v24;
  MEMORY[0x1F4188790](v26);
  OUTLINED_FUNCTION_81();
  MEMORY[0x1F4188790](v27);
  OUTLINED_FUNCTION_116();
  uint64_t v82 = v28;
  id v29 = objc_msgSend(a1, sel_view);
  if (v29)
  {
    uint64_t v79 = v23;
    uint64_t v30 = v29;
    self;
    uint64_t v31 = swift_dynamicCastObjCClass();
    if (!v31) {
      goto LABEL_21;
    }
    uint64_t v77 = v25;
    uint64_t v32 = (void *)v31;
    objc_msgSend(a1, sel_locationInView_, v31);
    double v34 = v33;
    uint64_t v78 = v32;
    objc_msgSend(v32, sel_bounds);
    double MidX = CGRectGetMidX(v90);
    uint64_t v36 = (char *)objc_msgSend(a1, sel_state);
    if ((unint64_t)(v36 - 3) >= 2)
    {
      if (v36 == (char *)2)
      {
        OUTLINED_FUNCTION_14_0();
        uint64_t v63 = (uint64_t)v1 + *(void *)(v62 + 152);
        OUTLINED_FUNCTION_24();
        sub_1B5EF6774(v63, v8);
        OUTLINED_FUNCTION_28_11(v8, 1, v79);
        if (v40)
        {

          uint64_t v64 = v8;
LABEL_24:
          sub_1B5FB482C(v64, (void (*)(void))sub_1B5E81E54);
          return;
        }
        sub_1B5FB482C(v8, (void (*)(void))sub_1B5E81E54);
        OUTLINED_FUNCTION_14_0();
        objc_msgSend(v32, sel_updateInteractiveMovementTargetPosition_, MidX, v34 - *(double *)((char *)v1 + *(void *)(v65 + 160)));
      }
      else if (v36 == (char *)1)
      {
        id v37 = objc_msgSend(v32, sel_indexPathForItemAtPoint_, MidX, v34);
        if (v37)
        {
          uint64_t v38 = v37;
          uint64_t v76 = v1;
          sub_1B61AFC40();

          uint64_t v39 = *(void (**)(void))(v77 + 32);
          uint64_t v17 = v84;
          OUTLINED_FUNCTION_54_8();
          v39();
          __swift_storeEnumTagSinglePayload(v84, 0, 1, v79);
          OUTLINED_FUNCTION_28_11(v84, 1, v79);
          if (!v40)
          {
            OUTLINED_FUNCTION_54_8();
            v39();
            BlueprintProviderType.blueprint.getter();
            uint64_t v41 = sub_1B61AFC90();
            Blueprint.subscript.getter(v41, v80);
            OUTLINED_FUNCTION_27_3();
            OUTLINED_FUNCTION_5_1();
            v42();
            OUTLINED_FUNCTION_48_0();
            v43();
            OUTLINED_FUNCTION_5_1();
            v44();
            sub_1B5E00AB8(0, &qword_1E9DAB150);
            if ((swift_dynamicCast() & 1) == 0)
            {
              OUTLINED_FUNCTION_46_9();

              OUTLINED_FUNCTION_97_2();
              OUTLINED_FUNCTION_5_1();
              v66();
              sub_1B5FB8124((uint64_t)&v86, &qword_1E9DAB158, &qword_1E9DAB150);
              return;
            }
            sub_1B5E30E70(&v86, (uint64_t)v88);
            __swift_project_boxed_opaque_existential_1(v88, v89);
            uint64_t v45 = OUTLINED_FUNCTION_20_18();
            v46(v45);
            if (v87 == 1 && v86 == 0)
            {
              uint64_t v67 = OUTLINED_FUNCTION_97_2();
              v68(v67, v79);
            }
            else
            {
              id v47 = UICollectionView.cell(at:)();
              if (v47)
              {
                uint64_t v85 = v47;
                id v48 = objc_msgSend(v32, sel_collectionViewLayout);
                swift_getObjectType();
                if (dynamic_cast_existential_1_conditional((uint64_t)v48))
                {
                  uint64_t v50 = v49;
                  uint64_t ObjectType = swift_getObjectType();
                  uint64_t v51 = *(void (**)(void))(v77 + 16);
                  uint64_t v53 = v82;
                  uint64_t v52 = v83;
                  uint64_t v54 = v79;
                  OUTLINED_FUNCTION_33();
                  v51();
                  OUTLINED_FUNCTION_94_3();
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v83, ObjectType, v50);

                  uint64_t v55 = v77;
                }
                else
                {

                  uint64_t v51 = *(void (**)(void))(v77 + 16);
                  uint64_t v55 = v77;
                  uint64_t v54 = v79;
                  uint64_t v53 = v82;
                  uint64_t v52 = v83;
                }
                ((void (*)(uint64_t, uint64_t, uint64_t))v51)(v52, v53, v54);
                OUTLINED_FUNCTION_94_3();
                uint64_t v69 = (void *)MEMORY[0x1E4FBC8C8];
                swift_beginAccess();
                uint64_t v70 = OUTLINED_FUNCTION_45();
                sub_1B5FB80C0(v70, v71);
                swift_endAccess();
                objc_msgSend(v85, sel_center);
                *(double *)((char *)v76 + *(void *)((*v69 & *v76) + 0xA0)) = v34 - v72;
                long long v73 = (void *)sub_1B61AFC00();
                objc_msgSend(v78, sel_beginInteractiveMovementForItemAtIndexPath_, v73);

                (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v54);
                goto LABEL_32;
              }
              (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v82, v79);
            }

LABEL_32:
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v88);
            return;
          }
        }
        else
        {
          uint64_t v17 = v84;
          OUTLINED_FUNCTION_53_11();
        }
        goto LABEL_23;
      }
LABEL_21:

      return;
    }
    OUTLINED_FUNCTION_14_0();
    uint64_t v57 = (uint64_t)v1 + *(void *)(v56 + 152);
    OUTLINED_FUNCTION_24();
    sub_1B5EF6774(v57, v17);
    OUTLINED_FUNCTION_28_11(v17, 1, v79);
    if (v40)
    {
LABEL_23:

      uint64_t v64 = v17;
      goto LABEL_24;
    }
    sub_1B5FB482C(v17, (void (*)(void))sub_1B5E81E54);
    objc_msgSend(v32, sel_endInteractiveMovement);
    id v58 = objc_msgSend(v32, sel_collectionViewLayout);
    swift_getObjectType();
    if (dynamic_cast_existential_1_conditional((uint64_t)v58))
    {
      uint64_t v60 = v59;
      uint64_t v61 = swift_getObjectType();
      OUTLINED_FUNCTION_53_11();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16))(v83, v61, v60);
    }
  }
}

void sub_1B5FB79E4(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1B5FB7028(v4);
}

void BlueprintCollectionViewDragDelegate3.init()()
{
}

void sub_1B5FB7A7C()
{
}

uint64_t sub_1B5FB7A90(uint64_t a1)
{
  OUTLINED_FUNCTION_28_14();
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_28_1(*(void *)(v2 + 136));
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(void))(v3 + 8))();
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_28_1(*(void *)(v4 + 144));
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(void))(v5 + 8))();
  OUTLINED_FUNCTION_0_0();
  return sub_1B5FB482C(a1 + *(void *)(v6 + 152), (void (*)(void))sub_1B5E81E54);
}

uint64_t sub_1B5FB7B9C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1B5FB7C00@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B5FB6104(a1, a2);
}

uint64_t sub_1B5FB7C18()
{
  return sub_1B5FB6170();
}

uint64_t sub_1B5FB7C38@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B5FB6104(a1, a2);
}

uint64_t sub_1B5FB7C50()
{
  return sub_1B5FB6170();
}

uint64_t sub_1B5FB7C70()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for BlueprintCollectionViewDragDelegate()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for BlueprintCollectionViewDragDelegate(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BlueprintCollectionViewDragDelegate);
}

uint64_t dispatch thunk of BlueprintCollectionViewDragDelegate.__allocating_init(blueprintProvider:blueprintLayoutProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1B5FB7D88()
{
  return type metadata accessor for DragSessionData();
}

uint64_t sub_1B5FB7D90()
{
  uint64_t result = sub_1B61AFCB0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B5FB7E2C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for BlueprintCollectionViewDragDelegate2()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for BlueprintCollectionViewDragDelegate2(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BlueprintCollectionViewDragDelegate2);
}

uint64_t dispatch thunk of BlueprintCollectionViewDragDelegate2.__allocating_init(blueprintProvider:blueprintLayoutProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

void sub_1B5FB7F58()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      sub_1B5E81E54();
      if (v2 <= 0x3F) {
        swift_initClassMetadata2();
      }
    }
  }
}

uint64_t type metadata accessor for BlueprintCollectionViewDragDelegate3()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for BlueprintCollectionViewDragDelegate3(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BlueprintCollectionViewDragDelegate3);
}

uint64_t dispatch thunk of BlueprintCollectionViewDragDelegate3.__allocating_init(blueprintProvider:blueprintLayoutProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t sub_1B5FB80C0(uint64_t a1, uint64_t a2)
{
  sub_1B5E81E54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B5FB8124(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_1B5E36DD0(0, a2, a3);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_5_1();
  v4();
  return a1;
}

uint64_t sub_1B5FB8178(uint64_t a1, uint64_t a2)
{
  sub_1B5E36DD0(0, &qword_1E9DAB140, &qword_1E9DAB148);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B5FB81F4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B5FB822C()
{
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_86();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_86();
  swift_getAssociatedConformanceWitness();
  uint64_t v1 = *(void *)(type metadata accessor for Blueprint() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v2 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + v2 + 16);
  }
  type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_65_4();
  sub_1B61B0670();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_5_1();
  v3();
  type metadata accessor for BlueprintItem();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1B61B0A30();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_5_1();
  v4();
  swift_release();
  return swift_deallocObject();
}

void sub_1B5FB84D8(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[7];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[4];
  OUTLINED_FUNCTION_83_2();
  OUTLINED_FUNCTION_83_2();
  OUTLINED_FUNCTION_86();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_86();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = *(void *)(type metadata accessor for Blueprint() - 8);
  sub_1B5FB5E38(a1, v1[8], (uint64_t)v1 + ((*(unsigned __int8 *)(v7 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v3, v4, v9, v5, v8, v6);
}

unint64_t sub_1B5FB85F4()
{
  unint64_t result = qword_1E9DAB2F8[0];
  if (!qword_1E9DAB2F8[0])
  {
    sub_1B61AFCB0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9DAB2F8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_87_1@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t OUTLINED_FUNCTION_90_3()
{
  *(void *)(v0 + 16) = v1;
  return sub_1B61AFC00();
}

void OUTLINED_FUNCTION_93_3(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 224) = (char *)&a2 - a1;
}

uint64_t OUTLINED_FUNCTION_98_2()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t dispatch thunk of ContextMenuPreviewable.setContextMenuPreviewing(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t KeyCommandTraverseProvider.invalidator.getter()
{
  OUTLINED_FUNCTION_24();
  return MEMORY[0x1BA9B1EC0](v0 + 16);
}

uint64_t KeyCommandTraverseProvider.invalidator.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_21();
  *(void *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*KeyCommandTraverseProvider.invalidator.modify(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  OUTLINED_FUNCTION_6_2();
  uint64_t v4 = MEMORY[0x1BA9B1EC0](v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1B5EC0DB0;
}

uint64_t sub_1B5FB87E0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 32;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1BA9B1EC0](v4);
  uint64_t v6 = *(void *)(v3 + 40);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1B5FB883C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 40) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t KeyCommandTraverseProvider.delegate.getter()
{
  OUTLINED_FUNCTION_24();
  return MEMORY[0x1BA9B1EC0](v0 + 32);
}

uint64_t KeyCommandTraverseProvider.delegate.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_21();
  *(void *)(v2 + 40) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*KeyCommandTraverseProvider.delegate.modify(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  OUTLINED_FUNCTION_6_2();
  uint64_t v4 = MEMORY[0x1BA9B1EC0](v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1B5FB89A4;
}

void sub_1B5FB89A4()
{
  OUTLINED_FUNCTION_5_21();
  *(void *)(v2 + 40) = v3;
  swift_unknownObjectWeakAssign();
  if (v1)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v0);
}

uint64_t KeyCommandTraverseProvider.traverseDirections.getter@<X0>(void *a1@<X8>)
{
  uint64_t result = OUTLINED_FUNCTION_24();
  *a1 = *(void *)(v1 + 48);
  return result;
}

uint64_t KeyCommandTraverseProvider.traverseDirections.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = OUTLINED_FUNCTION_21();
  *(void *)(v1 + 48) = v2;
  return result;
}

uint64_t (*KeyCommandTraverseProvider.traverseDirections.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t KeyCommandTraverseProvider.traverseBehavior.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = OUTLINED_FUNCTION_24();
  *a1 = *(unsigned char *)(v1 + 56);
  return result;
}

uint64_t KeyCommandTraverseProvider.traverseBehavior.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = OUTLINED_FUNCTION_21();
  *(unsigned char *)(v1 + 56) = v2;
  return result;
}

uint64_t (*KeyCommandTraverseProvider.traverseBehavior.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t KeyCommandTraverseProvider.startBehavior.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = OUTLINED_FUNCTION_24();
  *a1 = *(unsigned char *)(v1 + 57);
  return result;
}

uint64_t KeyCommandTraverseProvider.startBehavior.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = OUTLINED_FUNCTION_21();
  *(unsigned char *)(v1 + 57) = v2;
  return result;
}

uint64_t (*KeyCommandTraverseProvider.startBehavior.modify())()
{
  return j__swift_endAccess;
}

uint64_t KeyCommandTraverseProvider.scrollToItemWhileTraversing.getter()
{
  OUTLINED_FUNCTION_24();
  return *(unsigned __int8 *)(v0 + 58);
}

uint64_t KeyCommandTraverseProvider.scrollToItemWhileTraversing.setter(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_21();
  *(unsigned char *)(v1 + 58) = a1;
  return result;
}

uint64_t (*KeyCommandTraverseProvider.scrollToItemWhileTraversing.modify())()
{
  return j_j__swift_endAccess;
}

BOOL static KeyCommandTraverseProvider.StartBehavior.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t KeyCommandTraverseProvider.StartBehavior.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t KeyCommandTraverseProvider.StartBehavior.hashValue.getter()
{
  return sub_1B61B3940();
}

uint64_t sub_1B5FB8D80()
{
  return sub_1B61B3940();
}

uint64_t KeyCommandTraverseProvider.__allocating_init(traverseCollectionProvider:viewProvider:commandCenter:tracker:)()
{
  OUTLINED_FUNCTION_41();
  uint64_t v0 = swift_allocObject();
  KeyCommandTraverseProvider.init(traverseCollectionProvider:viewProvider:commandCenter:tracker:)();
  return v0;
}

uint64_t KeyCommandTraverseProvider.init(traverseCollectionProvider:viewProvider:commandCenter:tracker:)()
{
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_0_14();
  uint64_t v7 = v6;
  *(void *)(v1 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v1 + 40) = 0;
  swift_unknownObjectWeakInit();
  if (qword_1EB648E18 != -1) {
    swift_once();
  }
  *(void *)(v1 + 48) = qword_1EB645C28;
  *(_WORD *)(v1 + 56) = 0;
  *(unsigned char *)(v1 + 58) = 1;
  OUTLINED_FUNCTION_10_0();
  *(unsigned char *)(v1 + *(void *)(v8 + 192)) = v9;
  OUTLINED_FUNCTION_10_0();
  *(unsigned char *)(v1 + *(void *)(v10 + 200)) = 0;
  OUTLINED_FUNCTION_10_0();
  uint64_t v12 = v1 + *(void *)(v11 + 208);
  uint64_t v13 = sub_1B61AFCB0();
  __swift_storeEnumTagSinglePayload(v12, 1, 1, v13);
  OUTLINED_FUNCTION_10_0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v7 + 80) - 8) + 32))(v1 + *(void *)(v14 + 160), v5);
  *(void *)(v1 + *(void *)(*(void *)v1 + 168)) = v4;
  OUTLINED_FUNCTION_10_0();
  uint64_t v16 = (void *)(v1 + *(void *)(v15 + 176));
  *uint64_t v16 = v3;
  v16[1] = v2;
  OUTLINED_FUNCTION_10_0();
  sub_1B5FB8FB0(v0, v1 + *(void *)(v17 + 184));
  return v1;
}

uint64_t sub_1B5FB8FB0(uint64_t a1, uint64_t a2)
{
  sub_1B5E36DD0(0, &qword_1EB642CD0, (unint64_t *)&qword_1EB642CC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t KeyCommandTraverseProvider.selectedIndexPath.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_10_0();
  uint64_t v4 = v1 + *(void *)(v3 + 208);
  OUTLINED_FUNCTION_24();
  return sub_1B5EF6774(v4, a1);
}

void sub_1B5FB9080(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1B61AFCB0();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1B5FB90E0(uint64_t a1)
{
  sub_1B5FB9080(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v6 - v3;
  sub_1B5EF6774(a1, (uint64_t)&v6 - v3);
  return KeyCommandTraverseProvider.selectedIndexPath.setter((uint64_t)v4);
}

uint64_t KeyCommandTraverseProvider.selectedIndexPath.setter(uint64_t a1)
{
  sub_1B5FB9080(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4FBB718]);
  uint64_t v4 = OUTLINED_FUNCTION_14(v3);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v10 - v5;
  OUTLINED_FUNCTION_10_0();
  uint64_t v8 = *(void *)(v7 + 192);
  *(unsigned char *)(v1 + v8) = 0;
  sub_1B5EF6774(a1, (uint64_t)v6);
  sub_1B5FB9240((uint64_t)v6);
  uint64_t result = sub_1B5E4B3B4(a1);
  *(unsigned char *)(v1 + v8) = 1;
  return result;
}

uint64_t sub_1B5FB9240(uint64_t a1)
{
  sub_1B5FB94CC();
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 208);
  swift_beginAccess();
  sub_1B5FBE2AC(a1, v3);
  swift_endAccess();
  sub_1B5FB9ACC();
  return sub_1B5E4B3B4(a1);
}

void (*KeyCommandTraverseProvider.selectedIndexPath.modify(void *a1))(uint64_t a1, char a2)
{
  *a1 = v1;
  sub_1B5FB9080(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4FBB718]);
  OUTLINED_FUNCTION_14(v3);
  size_t v5 = *(void *)(v4 + 64);
  a1[1] = malloc(v5);
  uint64_t v6 = malloc(v5);
  a1[2] = v6;
  KeyCommandTraverseProvider.selectedIndexPath.getter((uint64_t)v6);
  return sub_1B5FB9360;
}

void sub_1B5FB9360(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 16);
  if (a2)
  {
    sub_1B5EF6774((uint64_t)v3, (uint64_t)v2);
    KeyCommandTraverseProvider.selectedIndexPath.setter((uint64_t)v2);
    sub_1B5E4B3B4((uint64_t)v3);
  }
  else
  {
    KeyCommandTraverseProvider.selectedIndexPath.setter((uint64_t)v3);
  }
  free(v3);
  free(v2);
}

uint64_t KeyCommandTraverseProvider.selectionBehavior.getter@<X0>(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_10_0();
  uint64_t v4 = (unsigned char *)(v1 + *(void *)(v3 + 200));
  uint64_t result = OUTLINED_FUNCTION_24();
  *a1 = *v4;
  return result;
}

uint64_t KeyCommandTraverseProvider.selectionBehavior.setter(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(v1 + *(void *)(*(void *)v1 + 200));
  uint64_t result = OUTLINED_FUNCTION_21();
  *uint64_t v3 = v2;
  return result;
}

uint64_t (*KeyCommandTraverseProvider.selectionBehavior.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1B5FB94CC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  sub_1B5FB9080(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4FBB718]);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = sub_1B61AFCB0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)v0 + *(void *)(v1 + 208);
  swift_beginAccess();
  sub_1B5EF6774(v13, (uint64_t)v8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1) {
    return sub_1B5E4B3B4((uint64_t)v8);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  if ((*(uint64_t (**)(char *, void))(*(void *)(v2 + 96) + 16))(v12, *(void *)(v2 + 80)))
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v6, v12, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v9);
    sub_1B5FB9750((uint64_t)v6);
    sub_1B5E4B3B4((uint64_t)v6);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1B5FB9750(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)*v1;
  sub_1B5FB9080(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v25 - v6;
  uint64_t v8 = sub_1B61AFCB0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B5EF6774(a1, (uint64_t)v7);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) == 1) {
    return sub_1B5E4B3B4((uint64_t)v7);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  if (*((unsigned char *)v2 + *(void *)(*v2 + 192)) == 1
    && ((*(uint64_t (**)(char *, void))(v4[12] + 16))(v11, v4[10]) & 1) != 0)
  {
    uint64_t v13 = *(void *)((char *)v2 + *(void *)(*v2 + 168));
    uint64_t v14 = v4[13];
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 56);
    uint64_t v16 = v4[11];
    uint64_t v27 = v13;
    uint64_t v28 = v14 + 56;
    uint64_t v26 = v15;
    uint64_t v17 = (void *)v15(v16, v14);
    swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 112);
    uint64_t v20 = swift_checkMetadataState();
    char v21 = v19(v20, AssociatedConformanceWitness);

    if ((v21 & 1) == 0)
    {
      uint64_t v22 = (void *)v26(v16, v14);
      char v23 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 128))(v20, AssociatedConformanceWitness);

      if ((v23 & 1) == 0)
      {
        uint64_t v24 = (void *)v26(v16, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(AssociatedConformanceWitness + 184))(v11, 0, v20, AssociatedConformanceWitness);
      }
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1B5FB9ACC()
{
  sub_1B5FB9080(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = &v8[-v2];
  uint64_t v4 = (uint64_t)v0 + *(void *)(*v0 + 208);
  swift_beginAccess();
  sub_1B5EF6774(v4, (uint64_t)v3);
  sub_1B5FB9BF4((uint64_t)v3, 1);
  sub_1B5E4B3B4((uint64_t)v3);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1BA9B1EC0](v0 + 2);
  if (result)
  {
    uint64_t v6 = v0[3];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B5FB9BF4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void **)v3;
  sub_1B5FB9080(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4FBB718]);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v13 = sub_1B61AFCB0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B5EF6774(a1, (uint64_t)v12);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1) {
    return sub_1B5E4B3B4((uint64_t)v12);
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  if (v3[*(void *)(*(void *)v3 + 192)] == 1
    && ((*(uint64_t (**)(char *, void))(v6[12] + 16))(v16, v6[10]) & 1) != 0)
  {
    uint64_t v18 = v6[13];
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 56);
    uint64_t v20 = v6[11];
    uint64_t v31 = *(void *)&v3[*(void *)(*(void *)v3 + 168)];
    uint64_t v32 = v18 + 56;
    uint64_t v30 = v19;
    uint64_t v35 = v19(v20, v18);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v10, v16, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v13);
    swift_getAssociatedTypeWitness();
    uint64_t v33 = v18;
    uint64_t v29 = v20;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    int v34 = a2;
    uint64_t v22 = AssociatedConformanceWitness;
    char v23 = *(void (**)(char *, void, uint64_t, uint64_t))(AssociatedConformanceWitness + 176);
    uint64_t v24 = swift_checkMetadataState();
    uint64_t v25 = (void *)v35;
    uint64_t v28 = v22;
    v23(v10, 0, v24, v22);

    sub_1B5E4B3B4((uint64_t)v10);
    if (v34)
    {
      swift_beginAccess();
      if (v3[58] == 1)
      {
        uint64_t v26 = (void *)v30(v29, v33);
        (*(void (**)(char *, uint64_t, uint64_t))(v28 + 192))(v16, 1, v24);
      }
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

void KeyCommandTraverseProvider.register(in:)()
{
  void (*v49)(void *__return_ptr, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(void);
  void *v53;
  uint64_t AssociatedTypeWitness;
  uint64_t v55;
  uint64_t AssociatedConformanceWitness;
  uint64_t v57;
  uint64_t (*v58)(uint64_t);
  char v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t);
  void *v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  void *v74;
  uint64_t v75;
  void (*v76)(uint64_t);
  uint64_t v77;
  void (*v78)(uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(void);
  void *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(void);
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(void);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(void);
  uint64_t v99;
  void (*v100)(void);
  uint64_t v101;
  uint64_t v102;
  void (*v103)(void);
  void (*v104)(void);
  void (*v105)(void);
  uint64_t v106;
  void (*v107)(void);
  void (*v108)(void);
  void v109[6];
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t (*v123)(uint64_t, uint64_t);
  void *v124;
  id v125;
  void *v126;
  long long v127;
  long long v128;
  uint64_t v129;
  void v130[3];
  uint64_t v131;
  uint64_t v132;
  void v133[3];
  uint64_t v134;
  uint64_t v135;

  OUTLINED_FUNCTION_83();
  uint64_t v2 = (uint64_t)v0;
  uint64_t v124 = v3;
  uint64_t v4 = (void *)*v0;
  uint64_t v5 = (void *)*v0;
  sub_1B5FB9080(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4FBB718]);
  uint64_t v7 = OUTLINED_FUNCTION_14(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_12();
  uint64_t v119 = v8;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_109();
  long long v120 = v10;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_109();
  uint64_t v121 = v12;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v109 - v14;
  uint64_t v16 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v18 = v17;
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_12();
  uint64_t v117 = v20;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_109();
  uint64_t v118 = v22;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_40_12();
  uint64_t v24 = *(void *)((char *)v0 + v4[21]);
  uint64_t v25 = v4[13];
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 56);
  uint64_t v27 = v4[11];
  uint64_t v122 = v24;
  uint64_t v123 = v26;
  uint64_t v28 = (void *)v26(v27, v25);
  uint64_t v125 = objc_msgSend(v28, sel_window);

  if (!v125) {
    goto LABEL_28;
  }
  if (objc_msgSend(v125, sel_isKeyWindow))
  {
    uint64_t v113 = v25 + 56;
    uint64_t v115 = v1;
    uint64_t v111 = v18;
    sub_1B61B20F0();
    swift_unownedRetainStrong();
    swift_unownedRetain();
    swift_unownedRetain();
    swift_release();
    uint64_t v29 = (void *)OUTLINED_FUNCTION_25_2();
    uint64_t v116 = v16;
    uint64_t v30 = v25;
    uint64_t v31 = v27;
    uint64_t v32 = v5[10];
    v29[2] = v32;
    void v29[3] = v31;
    uint64_t v33 = v5[12];
    v29[4] = v33;
    v29[5] = v30;
    v29[6] = v2;
    sub_1B5E460D4();
    swift_unownedRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B61B20F0();
    OUTLINED_FUNCTION_39_9();
    swift_unownedRetain();
    swift_unownedRetain();
    swift_release();
    int v34 = (void *)OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_49_11(v34);
    OUTLINED_FUNCTION_3_36();
    swift_unownedRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B61B20F0();
    OUTLINED_FUNCTION_39_9();
    swift_unownedRetain();
    swift_unownedRetain();
    swift_release();
    uint64_t v35 = (void *)OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_49_11(v35);
    OUTLINED_FUNCTION_3_36();
    swift_unownedRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B61B20F0();
    OUTLINED_FUNCTION_39_9();
    swift_unownedRetain();
    swift_unownedRetain();
    swift_release();
    uint64_t v36 = (void *)OUTLINED_FUNCTION_25_2();
    uint64_t v114 = v32;
    v36[2] = v32;
    uint64_t v37 = v31;
    uint64_t v38 = v30;
    uint64_t v39 = v116;
    v36[3] = v37;
    v36[4] = v33;
    id v112 = v33;
    v36[5] = v38;
    v36[6] = v2;
    OUTLINED_FUNCTION_3_36();
    swift_unownedRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_29();
    uint64_t v41 = v2 + *(void *)(v40 + 208);
    OUTLINED_FUNCTION_24();
    sub_1B5EF6774(v41, (uint64_t)v15);
    OUTLINED_FUNCTION_28_11((uint64_t)v15, 1, v39);
    if (v42)
    {
      OUTLINED_FUNCTION_36_14();
      sub_1B5E4B3B4((uint64_t)v15);
    }
    else
    {
      uint64_t v45 = *(void *)(v111 + 32);
      uint64_t v46 = v115;
      v109[1] = v111 + 32;
      v109[2] = v45;
      OUTLINED_FUNCTION_107();
      v47();
      OUTLINED_FUNCTION_29();
      uint64_t v49 = *(void (**)(void *__return_ptr, uint64_t))(v112 + 8);
      v109[3] = v2 + *(void *)(v48 + 160);
      v109[4] = v49;
      v49(v130, v114);
      uint64_t v50 = v131;
      uint64_t v51 = v132;
      __swift_project_boxed_opaque_existential_1(v130, v131);
      OUTLINED_FUNCTION_5_45();
      uint64_t v53 = (void *)v52();
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v110 = v37;
      v109[5] = AssociatedTypeWitness;
      uint64_t v55 = v38;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      (*(void (**)(long long *__return_ptr, uint64_t, void *, uint64_t, uint64_t, uint64_t))(v51 + 56))(&v127, v46, v53, AssociatedConformanceWitness, v50, v51);

      if (*((void *)&v128 + 1))
      {
        sub_1B5E30E70(&v127, (uint64_t)v133);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v130);
        OUTLINED_FUNCTION_27_13();
        uint64_t v57 = OUTLINED_FUNCTION_19_9();
        uint64_t v59 = v58(v57);
        uint64_t v60 = v55;
        uint64_t v61 = v110;
        if (v59)
        {
          swift_unownedRetainStrong();
          swift_unownedRetain();
          swift_unownedRetain();
          swift_release();
          uint64_t v62 = (void *)OUTLINED_FUNCTION_25_2();
          OUTLINED_FUNCTION_46_10(v62);
          OUTLINED_FUNCTION_26_17();
          swift_unownedRelease();
          swift_release();
          swift_release();
          OUTLINED_FUNCTION_27_13();
          uint64_t v63 = OUTLINED_FUNCTION_19_9();
          if (v64(v63))
          {
            swift_unownedRetainStrong();
            swift_unownedRetain();
            swift_unownedRetain();
            swift_release();
            uint64_t v65 = (void *)OUTLINED_FUNCTION_25_2();
            OUTLINED_FUNCTION_46_10(v65);
            OUTLINED_FUNCTION_26_17();
            swift_unownedRelease();
            swift_release();
            swift_release();
          }
          OUTLINED_FUNCTION_27_13();
          uint64_t v66 = OUTLINED_FUNCTION_19_9();
          uint64_t v68 = v67(v66);
          uint64_t v69 = *(void *)(v68 + 16);
          if (v69)
          {
            uint64_t v70 = v68 + 32;
            do
            {
              sub_1B5FBC50C(v70, v2);
              v70 += 136;
              --v69;
            }
            while (v69);
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v71 = (id)v123(v61, v60);
        double v72 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 72);
        long long v73 = swift_checkMetadataState();
        uint64_t v74 = (void *)v72(v115, v73, AssociatedConformanceWitness);

        if (v74)
        {
          uint64_t v126 = v74;
          sub_1B5F01954();
          sub_1B5E00AB8(0, (unint64_t *)&qword_1EB645AC8);
          uint64_t v71 = v74;
          if (swift_dynamicCast())
          {
            sub_1B5E30E70(&v127, (uint64_t)v130);
            __swift_project_boxed_opaque_existential_1(v130, v131);
            uint64_t v75 = OUTLINED_FUNCTION_43_1();
            v76(v75);
            sub_1B5E46344();
            swift_bridgeObjectRelease();

            __swift_destroy_boxed_opaque_existential_1((uint64_t)v130);
          }
          else
          {
            uint64_t v129 = 0;
            uint64_t v127 = 0u;
            uint64_t v128 = 0u;

            sub_1B5E36D74((uint64_t)&v127, (unint64_t *)&qword_1EB645AD0, (unint64_t *)&qword_1EB645AC8);
          }
        }
        OUTLINED_FUNCTION_34_11();
        uint64_t v95 = *(void *)(v94 - 256);
        uint64_t v96 = v115;
        uint64_t v97 = v116;
        OUTLINED_FUNCTION_33();
        v98();
        __swift_storeEnumTagSinglePayload(v95, 0, 1, v97);
        sub_1B5FB9BF4(v95, 0);
        OUTLINED_FUNCTION_36_14();
        sub_1B5E4B3B4(v95);
        (*((void (**)(uint64_t, uint64_t))v71 + 1))(v96, v97);
        goto LABEL_27;
      }
      sub_1B5E36D74((uint64_t)&v127, &qword_1E9DA9128, &qword_1EB645248);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v130);
      uint64_t v77 = OUTLINED_FUNCTION_6_46();
      v78(v77);
      uint64_t v79 = v134;
      uint64_t v80 = v135;
      uint64_t v124 = __swift_project_boxed_opaque_existential_1(v133, v134);
      OUTLINED_FUNCTION_5_45();
      uint64_t v82 = (void *)v81();
      uint64_t v83 = v120;
      (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t))(v80 + 40))(v115, 1, v82, AssociatedConformanceWitness, v79, v80);

      OUTLINED_FUNCTION_28_11(v83, 1, v116);
      if (v42)
      {
        sub_1B5E4B3B4(v83);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v133);
        uint64_t v84 = OUTLINED_FUNCTION_6_46();
        v85(v84);
        long long v86 = v134;
        char v87 = v135;
        __swift_project_boxed_opaque_existential_1(v133, v134);
        OUTLINED_FUNCTION_5_45();
        uint64_t v89 = (void *)v88();
        CGRect v90 = v119;
        (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t))(v87 + 48))(v115, 1, v89, AssociatedConformanceWitness, v86, v87);

        uint64_t v91 = v116;
        OUTLINED_FUNCTION_28_11(v90, 1, v116);
        uint64_t v92 = v111;
        if (v42)
        {
          OUTLINED_FUNCTION_37_0();
          v93();
          OUTLINED_FUNCTION_36_14();
          sub_1B5E4B3B4(v90);
LABEL_27:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v133);
          goto LABEL_28;
        }
        OUTLINED_FUNCTION_48_9();
        OUTLINED_FUNCTION_29_14();
        v105();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v133);
        char v106 = v121;
        OUTLINED_FUNCTION_33();
        v107();
        OUTLINED_FUNCTION_17_22(v106, 0, 1, v91);
        OUTLINED_FUNCTION_36_14();
        uint64_t v108 = *(void (**)(void))(v92 + 8);
        OUTLINED_FUNCTION_37_0();
        v108();
        OUTLINED_FUNCTION_37_0();
        v108();
      }
      else
      {
        OUTLINED_FUNCTION_43_1();
        uint64_t v99 = v116;
        OUTLINED_FUNCTION_29_14();
        v100();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v133);
        OUTLINED_FUNCTION_34_11();
        uint64_t v102 = *(void *)(v101 - 256);
        OUTLINED_FUNCTION_50_11();
        OUTLINED_FUNCTION_33();
        v103();
        OUTLINED_FUNCTION_17_22(v102, 0, 1, v99);
        OUTLINED_FUNCTION_36_14();
        uint64_t v104 = *(void (**)(void))(v79 + 8);
        OUTLINED_FUNCTION_43_1();
        OUTLINED_FUNCTION_22_2();
        v104();
        OUTLINED_FUNCTION_22_2();
        v104();
      }
    }
LABEL_28:
    OUTLINED_FUNCTION_73();
    return;
  }
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5FBABF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_unownedRetainStrong() + 32;
  swift_beginAccess();
  if (MEMORY[0x1BA9B1EC0](v10))
  {
    uint64_t v11 = *(void *)(a1 + 40);
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = swift_unownedRetainStrong();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 32))(v13, a2, a3, a4, a5, ObjectType, v11);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  swift_unownedRetainStrong();
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 48);
  swift_release();
  swift_unownedRetainStrong();
  if ((v14 & 2) != 0)
  {
    KeyCommandTraverseProvider.traverse(_:)();
  }
  else
  {
    swift_beginAccess();
    if (MEMORY[0x1BA9B1EC0](v10))
    {
      uint64_t v15 = *(void *)(a1 + 40);
      swift_release();
      uint64_t v16 = swift_getObjectType();
      uint64_t v17 = swift_unownedRetainStrong();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 24))(v17, 0, a2, a3, a4, a5, v16, v15);
      swift_release();
      return swift_unknownObjectRelease();
    }
  }
  return swift_release();
}

uint64_t sub_1B5FBADB4()
{
  swift_unownedRelease();
  return swift_deallocObject();
}

uint64_t sub_1B5FBADEC()
{
  return sub_1B5FBBBB0(sub_1B5FBABF8);
}

void KeyCommandTraverseProvider.traverse(_:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_0_14();
  uint64_t v6 = v5;
  sub_1B5FB9080(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4FBB718]);
  uint64_t v8 = OUTLINED_FUNCTION_14(v7);
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_12();
  uint64_t v154 = v9;
  OUTLINED_FUNCTION_26();
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v138 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)v138 - v15;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_109();
  uint64_t v155 = v17;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_109();
  uint64_t v152 = v19;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_109();
  uint64_t v153 = v21;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_109();
  uint64_t v156 = v23;
  OUTLINED_FUNCTION_26();
  uint64_t v25 = MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)v138 - v26;
  MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)v138 - v28;
  uint64_t v30 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v157 = v31;
  MEMORY[0x1F4188790](v32);
  OUTLINED_FUNCTION_81();
  MEMORY[0x1F4188790](v33);
  OUTLINED_FUNCTION_109();
  uint64_t v35 = v34;
  OUTLINED_FUNCTION_26();
  uint64_t v37 = MEMORY[0x1F4188790](v36);
  MEMORY[0x1F4188790](v37);
  if (v4 == 1)
  {
    uint64_t v153 = v39;
    uint64_t v155 = 1;
    uint64_t v41 = v2 + v6[26];
    OUTLINED_FUNCTION_24();
    sub_1B5EF6774(v41, (uint64_t)v13);
    OUTLINED_FUNCTION_28_11((uint64_t)v13, 1, v30);
    if (v73)
    {
      sub_1B5E4B3B4((uint64_t)v13);
      OUTLINED_FUNCTION_29();
      uint64_t v42 = OUTLINED_FUNCTION_12_31();
      v43(v42);
      uint64_t v44 = OUTLINED_FUNCTION_9_34();
      v45(v44);
      sub_1B5FB9240(v1);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v158);
    }
    else
    {
      uint64_t v55 = *(void *)(v157 + 32);
      uint64_t v56 = v35;
      uint64_t v147 = v157 + 32;
      uint64_t v146 = v55;
      OUTLINED_FUNCTION_107();
      v57();
      uint64_t v58 = OUTLINED_FUNCTION_28_15();
      id v140 = v13;
      uint64_t v149 = v58;
      long long v150 = v59;
      uint64_t v141 = v60;
      uint64_t v139 = v61;
      OUTLINED_FUNCTION_23_20();
      v62();
      uint64_t v63 = v160;
      uint64_t v151 = (char *)__swift_project_boxed_opaque_existential_1(v158, v159);
      OUTLINED_FUNCTION_29();
      uint64_t v65 = v6[13];
      uint64_t v66 = *(uint64_t (**)(void *, uint64_t))(v65 + 56);
      uint64_t v67 = (void *)v6[11];
      uint64_t v145 = *(void (**)(char *, char *, uint64_t))(v2 + *(void *)(v64 + 168));
      uint64_t v144 = v66;
      uint64_t v68 = (void *)v66(v67, v65);
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v148 = v67;
      uint64_t v143 = (uint64_t (*)(uint64_t, uint64_t))AssociatedTypeWitness;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v71 = *(void (**)(uint64_t, void, void *))(v63 + 48);
      uint64_t v72 = v154;
      uint64_t v152 = v56;
      uint64_t v142 = AssociatedConformanceWitness;
      v71(v56, 0, v68);

      OUTLINED_FUNCTION_28_11(v72, 1, v30);
      if (v73)
      {
        sub_1B5E4B3B4(v72);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v158);
        uint64_t v74 = v148;
        uint64_t v75 = (void *)v144(v148, v65);
        uint64_t v76 = sub_1B61AFC90();
        uint64_t v77 = v142;
        uint64_t v78 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v142 + 104);
        uint64_t v79 = swift_checkMetadataState();
        uint64_t v80 = v78(v76, v79, v77);

        uint64_t v154 = v65;
        if (v80 < 1)
        {
          OUTLINED_FUNCTION_23_20();
          v123();
          uint64_t v124 = OUTLINED_FUNCTION_9_34();
          v125(v124);
          sub_1B5FB9240(v65);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v158);
        }
        else
        {
          uint64_t v81 = v156;
          OUTLINED_FUNCTION_33();
          v82();
          OUTLINED_FUNCTION_17_22(v81, 0, 1, v30);
        }
        uint64_t v4 = v155;
        OUTLINED_FUNCTION_24();
        if (MEMORY[0x1BA9B1EC0](v2 + 32))
        {
          swift_getObjectType();
          uint64_t v126 = OUTLINED_FUNCTION_43_9();
          v127(v126, 1, v149, v74, v150, v154);
          swift_unknownObjectRelease();
        }
        uint64_t v128 = OUTLINED_FUNCTION_48_9();
        v129(v128);
        goto LABEL_21;
      }
      OUTLINED_FUNCTION_107();
      v112();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v158);
      uint64_t v113 = v156;
      uint64_t v114 = v157;
      OUTLINED_FUNCTION_50_11();
      OUTLINED_FUNCTION_33();
      v115();
      OUTLINED_FUNCTION_17_22(v113, 0, 1, v30);
      uint64_t v116 = *(void (**)(void))(v114 + 8);
      OUTLINED_FUNCTION_22_2();
      v116();
      OUTLINED_FUNCTION_22_2();
      v116();
    }
  }
  else
  {
    uint64_t v151 = (char *)v40;
    uint64_t v154 = v30;
    if (v4)
    {
      v158[0] = v4;
      sub_1B61B3810();
      __break(1u);
      return;
    }
    uint64_t v46 = (char *)v138 - v38;
    uint64_t v47 = v2 + v6[26];
    OUTLINED_FUNCTION_24();
    uint64_t v48 = OUTLINED_FUNCTION_50_11();
    sub_1B5EF6774(v48, v49);
    uint64_t v50 = v154;
    OUTLINED_FUNCTION_28_11((uint64_t)v29, 1, v154);
    if (v73)
    {
      sub_1B5E4B3B4((uint64_t)v29);
      sub_1B5FBD3E0((uint64_t)v16);
      OUTLINED_FUNCTION_28_11((uint64_t)v16, 1, v50);
      if (v73)
      {
        OUTLINED_FUNCTION_29();
        uint64_t v51 = OUTLINED_FUNCTION_12_31();
        v52(v51);
        __swift_project_boxed_opaque_existential_1(v158, v159);
        uint64_t v117 = v155;
        uint64_t v53 = OUTLINED_FUNCTION_38_12();
        v54(v53);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v158);
        sub_1B5E4B3B4((uint64_t)v16);
      }
      else
      {
        uint64_t v117 = v155;
        (*(void (**)(uint64_t, char *, uint64_t))(v157 + 32))(v155, v16, v50);
        __swift_storeEnumTagSinglePayload(v117, 0, 1, v50);
      }
      sub_1B5FB9240(v117);
      goto LABEL_21;
    }
    uint64_t v155 = 0;
    uint64_t v83 = (void *)(v157 + 32);
    uint64_t v145 = *(void (**)(char *, char *, uint64_t))(v157 + 32);
    v145(v46, v29, v50);
    uint64_t v84 = OUTLINED_FUNCTION_28_15();
    v138[2] = v47;
    id v140 = (char *)v84;
    uint64_t v141 = v85;
    uint64_t v139 = v86;
    v138[1] = v87;
    OUTLINED_FUNCTION_23_20();
    v88();
    uint64_t v149 = v159;
    uint64_t v147 = v160;
    uint64_t v148 = __swift_project_boxed_opaque_existential_1(v158, v159);
    OUTLINED_FUNCTION_29();
    uint64_t v90 = v6[13];
    uint64_t v91 = *(uint64_t (**)(uint64_t, uint64_t))(v90 + 56);
    uint64_t v92 = v6[11];
    uint64_t v144 = *(uint64_t (**)(void *, uint64_t))(v2 + *(void *)(v89 + 168));
    uint64_t v143 = v91;
    uint64_t v93 = (void *)v91(v92, v90);
    uint64_t v94 = swift_getAssociatedTypeWitness();
    uint64_t v146 = v92;
    uint64_t v142 = v94;
    uint64_t v95 = swift_getAssociatedConformanceWitness();
    uint64_t v96 = *(void (**)(char *, void, void *, uint64_t, uint64_t))(v147 + 40);
    long long v150 = v46;
    v96(v46, 0, v93, v95, v149);

    OUTLINED_FUNCTION_28_11((uint64_t)v27, 1, v50);
    if (v97)
    {
      uint64_t v151 = (char *)v83;
      sub_1B5E4B3B4((uint64_t)v27);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v158);
      uint64_t v98 = v146;
      uint64_t v99 = (void *)v143(v146, v90);
      uint64_t v100 = v95;
      uint64_t v101 = v150;
      uint64_t v102 = sub_1B61AFC90();
      uint64_t v103 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v100 + 104);
      uint64_t v104 = swift_checkMetadataState();
      uint64_t v105 = v103(v102, v104, v100);

      uint64_t v106 = v90;
      if (v105 < 1)
      {
        uint64_t v130 = v152;
        sub_1B5FBD3E0(v152);
        uint64_t v110 = v154;
        OUTLINED_FUNCTION_28_11(v130, 1, v154);
        uint64_t v4 = v155;
        uint64_t v109 = v157;
        if (v73)
        {
          OUTLINED_FUNCTION_23_20();
          v131();
          __swift_project_boxed_opaque_existential_1(v158, v159);
          uint64_t v156 = v106;
          uint64_t v132 = v153;
          uint64_t v133 = OUTLINED_FUNCTION_38_12();
          v134(v133);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v158);
          sub_1B5E4B3B4(v130);
          uint64_t v108 = v132;
          uint64_t v106 = v156;
        }
        else
        {
          uint64_t v108 = v153;
          OUTLINED_FUNCTION_107();
          v135();
          OUTLINED_FUNCTION_24_16();
        }
        uint64_t v107 = v146;
      }
      else
      {
        uint64_t v107 = v98;
        uint64_t v108 = v156;
        uint64_t v109 = v157;
        uint64_t v110 = v154;
        OUTLINED_FUNCTION_33();
        v111();
        OUTLINED_FUNCTION_24_16();
        uint64_t v4 = v155;
      }
      sub_1B5FB9240(v108);
      OUTLINED_FUNCTION_24();
      if (MEMORY[0x1BA9B1EC0](v2 + 32))
      {
        swift_getObjectType();
        uint64_t v136 = OUTLINED_FUNCTION_43_9();
        v137(v136, 0, v140, v107, v141, v106);
        swift_unknownObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v109 + 8))(v101, v110);
      goto LABEL_21;
    }
    uint64_t v118 = v151;
    v145(v151, v27, v50);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v158);
    uint64_t v119 = v156;
    uint64_t v120 = v157;
    OUTLINED_FUNCTION_50_11();
    OUTLINED_FUNCTION_33();
    v121();
    OUTLINED_FUNCTION_17_22(v119, 0, 1, v50);
    uint64_t v122 = *(void (**)(char *, uint64_t))(v120 + 8);
    v122(v118, v50);
    v122(v150, v50);
  }
  uint64_t v4 = v155;
LABEL_21:
  OUTLINED_FUNCTION_24();
  if (*(unsigned char *)(v2 + 56) == 1) {
    sub_1B5FBBFB0();
  }
  sub_1B5FBD028(v4);
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5FBB9DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_unownedRetainStrong() + 32;
  swift_beginAccess();
  if (MEMORY[0x1BA9B1EC0](v10))
  {
    uint64_t v11 = *(void *)(a1 + 40);
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = swift_unownedRetainStrong();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 32))(v13, a2, a3, a4, a5, ObjectType, v11);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  swift_unownedRetainStrong();
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 48);
  swift_release();
  swift_unownedRetainStrong();
  if ((v14 & 8) != 0)
  {
    KeyCommandTraverseProvider.traverse(_:)();
  }
  else
  {
    swift_beginAccess();
    if (MEMORY[0x1BA9B1EC0](v10))
    {
      uint64_t v15 = *(void *)(a1 + 40);
      swift_release();
      uint64_t v16 = swift_getObjectType();
      uint64_t v17 = swift_unownedRetainStrong();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 24))(v17, 0, a2, a3, a4, a5, v16, v15);
      swift_release();
      return swift_unknownObjectRelease();
    }
  }
  return swift_release();
}

uint64_t sub_1B5FBBB98()
{
  return sub_1B5FBBBB0(sub_1B5FBB9DC);
}

uint64_t sub_1B5FBBBB0(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1B5FBBBC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_unownedRetainStrong() + 32;
  swift_beginAccess();
  if (MEMORY[0x1BA9B1EC0](v10))
  {
    uint64_t v11 = *(void *)(a1 + 40);
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = swift_unownedRetainStrong();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 32))(v13, a2, a3, a4, a5, ObjectType, v11);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  swift_unownedRetainStrong();
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 48);
  swift_release();
  swift_unownedRetainStrong();
  if (v14)
  {
    KeyCommandTraverseProvider.traverse(_:)();
  }
  else
  {
    swift_beginAccess();
    if (MEMORY[0x1BA9B1EC0](v10))
    {
      uint64_t v15 = *(void *)(a1 + 40);
      swift_release();
      uint64_t v16 = swift_getObjectType();
      uint64_t v17 = swift_unownedRetainStrong();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 24))(v17, 1, a2, a3, a4, a5, v16, v15);
      swift_release();
      return swift_unknownObjectRelease();
    }
  }
  return swift_release();
}

uint64_t sub_1B5FBBD84()
{
  return sub_1B5FBBBB0(sub_1B5FBBBC8);
}

uint64_t sub_1B5FBBD9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_unownedRetainStrong() + 32;
  swift_beginAccess();
  if (MEMORY[0x1BA9B1EC0](v10))
  {
    uint64_t v11 = *(void *)(a1 + 40);
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = swift_unownedRetainStrong();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 32))(v13, a2, a3, a4, a5, ObjectType, v11);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  swift_unownedRetainStrong();
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 48);
  swift_release();
  swift_unownedRetainStrong();
  if ((v14 & 4) != 0)
  {
    KeyCommandTraverseProvider.traverse(_:)();
  }
  else
  {
    swift_beginAccess();
    if (MEMORY[0x1BA9B1EC0](v10))
    {
      uint64_t v15 = *(void *)(a1 + 40);
      swift_release();
      uint64_t v16 = swift_getObjectType();
      uint64_t v17 = swift_unownedRetainStrong();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 24))(v17, 1, a2, a3, a4, a5, v16, v15);
      swift_release();
      return swift_unknownObjectRelease();
    }
  }
  return swift_release();
}

uint64_t sub_1B5FBBF58()
{
  return sub_1B5FBBBB0(sub_1B5FBBD9C);
}

uint64_t sub_1B5FBBF70()
{
  return sub_1B5FBBF88((void (*)(uint64_t))sub_1B5FBBFB0);
}

uint64_t sub_1B5FBBF88(void (*a1)(uint64_t))
{
  return sub_1B5FBC23C(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_1B5FBBFB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)*v0;
  uint64_t v3 = (void *)*v0;
  sub_1B5FB9080(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v17[-v5];
  uint64_t v7 = sub_1B61AFCB0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = (uint64_t)v1 + v2[26];
  swift_beginAccess();
  sub_1B5EF6774(v11, (uint64_t)v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1) {
    return sub_1B5E4B3B4((uint64_t)v6);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v10, v6, v7);
  uint64_t v13 = v3[12];
  uint64_t v14 = v3[10];
  if ((*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v10, v14, v13))
  {
    swift_beginAccess();
    if (MEMORY[0x1BA9B1EC0](v1 + 4))
    {
      uint64_t v15 = v1[5];
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(void *, unsigned char *, uint64_t, void, uint64_t, void, uint64_t, uint64_t))(v15 + 8))(v1, v10, v14, v3[11], v13, v3[13], ObjectType, v15);
      swift_unknownObjectRelease();
    }
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1B5FBC23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  uint64_t v7 = swift_unownedRetainStrong();
  a6(v7);
  return swift_release();
}

uint64_t sub_1B5FBC280()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)*v0;
  uint64_t v3 = (void *)*v0;
  sub_1B5FB9080(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v17[-v5];
  uint64_t v7 = sub_1B61AFCB0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = (uint64_t)v1 + v2[26];
  swift_beginAccess();
  sub_1B5EF6774(v11, (uint64_t)v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1) {
    return sub_1B5E4B3B4((uint64_t)v6);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v10, v6, v7);
  uint64_t v13 = v3[12];
  uint64_t v14 = v3[10];
  if ((*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v10, v14, v13))
  {
    swift_beginAccess();
    if (MEMORY[0x1BA9B1EC0](v1 + 4))
    {
      uint64_t v15 = v1[5];
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(void *, unsigned char *, uint64_t, void, uint64_t, void, uint64_t, uint64_t))(v15 + 16))(v1, v10, v14, v3[11], v13, v3[13], ObjectType, v15);
      swift_unknownObjectRelease();
    }
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1B5FBC50C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = (uint64_t *)(a2 + *(void *)(*(void *)a2 + 176));
  uint64_t v3 = *v2;
  if (*v2)
  {
    uint64_t v4 = result;
    uint64_t v5 = v2[1];
    sub_1B5FBE100(a2 + *(void *)(*(void *)a2 + 184), (uint64_t)__src);
    if (*(void *)&__src[24])
    {
      sub_1B5E30E70((long long *)__src, (uint64_t)v11);
      uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 104);
      uint64_t v7 = swift_unknownObjectRetain();
      if (v6(v7, v5))
      {
        uint64_t v12 = *(void *)(v4 + 40);
        sub_1B61B1F70();
        (*(void (**)(uint64_t, uint64_t))(v4 + 120))(v3, v5);
        sub_1B5FBE17C(v4, (uint64_t)__src);
        sub_1B5E176E4((uint64_t)v11, (uint64_t)v9);
        uint64_t v8 = (void *)swift_allocObject();
        memcpy(v8 + 2, __src, 0x88uLL);
        v8[19] = v3;
        v8[20] = v5;
        sub_1B5E30E70(v9, (uint64_t)(v8 + 21));
        swift_unknownObjectRetain();
        sub_1B5E460D4();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
        return swift_unknownObjectRelease();
      }
    }
    else
    {
      return sub_1B5E36D74((uint64_t)__src, &qword_1EB642CD0, (unint64_t *)&qword_1EB642CC0);
    }
  }
  return result;
}

uint64_t sub_1B5FBC72C()
{
  return sub_1B5FBBF88((void (*)(uint64_t))sub_1B5FBC280);
}

uint64_t sub_1B5FBC744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 88);
  HIBYTE(v20) = 8;
  sub_1B5E176E4(a4, (uint64_t)v17);
  long long v21 = 0u;
  long long v22 = 0u;
  LOBYTE(v23) = 1;
  type metadata accessor for CommandExecutionSource();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = v18;
  uint64_t v9 = v19;
  uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v18);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v12);
  sub_1B61137DC((uint64_t)&v20 + 7, (uint64_t)v12, 0, (uint64_t)&v21, 0, 0, 0, v7, v8, v9, v17[0], v17[1], v17[2], v18, v19, v20, v21, *((uint64_t *)&v21 + 1), v22,
    *((uint64_t *)&v22 + 1),
    v23,
    v24);
  uint64_t v15 = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  v6(a2, a3, v15);
  return swift_release();
}

void KeyCommandTraverseProvider.shouldForceClearState.getter()
{
  OUTLINED_FUNCTION_83();
  uint64_t v2 = *v0;
  sub_1B5FB9080(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4FBB718]);
  uint64_t v4 = OUTLINED_FUNCTION_14(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_81();
  uint64_t v7 = v5 - v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_40_12();
  uint64_t v9 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x1F4188790](v10);
  uint64_t v11 = (uint64_t)v0 + *(void *)(v2 + 208);
  OUTLINED_FUNCTION_24();
  sub_1B5EF6774(v11, v1);
  OUTLINED_FUNCTION_28_11(v1, 1, v9);
  if (v12)
  {
    sub_1B5E4B3B4(v1);
  }
  else
  {
    OUTLINED_FUNCTION_107();
    v13();
    uint64_t v14 = OUTLINED_FUNCTION_43_1();
    if (v15(v14))
    {
      OUTLINED_FUNCTION_23_20();
      v16();
      uint64_t v17 = v26;
      uint64_t v18 = v27;
      __swift_project_boxed_opaque_existential_1(v25, v26);
      sub_1B5FB9080(0, (unint64_t *)&qword_1EB647D20, MEMORY[0x1E4FBBE00]);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1B61BE690;
      OUTLINED_FUNCTION_33();
      v20();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 64))(v19, v17, v18);
      swift_bridgeObjectRelease();
      uint64_t v21 = OUTLINED_FUNCTION_42_13();
      v22(v21);
      OUTLINED_FUNCTION_28_11(v7, 1, v9);
      sub_1B5E4B3B4(v7);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    }
    else
    {
      uint64_t v23 = OUTLINED_FUNCTION_42_13();
      v24(v23);
    }
  }
  OUTLINED_FUNCTION_73();
}

Swift::Void __swiftcall KeyCommandTraverseProvider.clearState()()
{
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_10_34();
  uint64_t v3 = v2;
  sub_1B5FB9080(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4FBB718]);
  uint64_t v5 = OUTLINED_FUNCTION_14(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_81();
  uint64_t v8 = v6 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = &v23[-v10];
  uint64_t v12 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = &v23[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = v0 + *(void *)(v1 + 208);
  OUTLINED_FUNCTION_24();
  sub_1B5EF6774(v18, (uint64_t)v11);
  OUTLINED_FUNCTION_28_11((uint64_t)v11, 1, v12);
  if (v19)
  {
    sub_1B5E4B3B4((uint64_t)v11);
  }
  else
  {
    OUTLINED_FUNCTION_48_9();
    OUTLINED_FUNCTION_107();
    v20();
    if (((*(uint64_t (**)(unsigned char *, void))(*(void *)(v3 + 96) + 16))(v17, *(void *)(v3 + 80)) & 1) == 0)
    {
      __swift_storeEnumTagSinglePayload(v8, 1, 1, v12);
      sub_1B5FB9240(v8);
    }
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v17, v12);
  }
  OUTLINED_FUNCTION_29();
  long long v22 = (unsigned char *)(v0 + *(void *)(v21 + 200));
  OUTLINED_FUNCTION_24();
  if ((*v22 & 1) == 0)
  {
    sub_1B5EF6774(v18, v8);
    sub_1B5FB9750(v8);
    sub_1B5E4B3B4(v8);
    __swift_storeEnumTagSinglePayload(v8, 1, 1, v12);
    sub_1B5FB9240(v8);
  }
  OUTLINED_FUNCTION_73();
}

uint64_t KeyCommandTraverseProvider.startTraversing(direction:)(unint64_t a1)
{
  OUTLINED_FUNCTION_10_34();
  uint64_t v6 = v5;
  sub_1B5FB9080(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4FBB718]);
  uint64_t v8 = OUTLINED_FUNCTION_14(v7);
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_81();
  uint64_t v11 = v9 - v10;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_40_12();
  uint64_t v13 = v1 + *(void *)(v2 + 208);
  OUTLINED_FUNCTION_24();
  sub_1B5EF6774(v13, v3);
  uint64_t v14 = sub_1B61AFCB0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v3, 1, v14);
  sub_1B5E4B3B4(v3);
  if (EnumTagSinglePayload != 1)
  {
    OUTLINED_FUNCTION_29();
    uint64_t v16 = (void *)(*(uint64_t (**)(void, void))(*(void *)(v6 + 104) + 56))(*(void *)(v6 + 88), *(void *)(v6 + 104));
    sub_1B5EF6774(v13, v11);
    swift_getAssociatedTypeWitness();
    OUTLINED_FUNCTION_48_9();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v18 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(AssociatedConformanceWitness + 176);
    uint64_t v19 = swift_checkMetadataState();
    v18(v11, 0, v19, AssociatedConformanceWitness);

    sub_1B5E4B3B4(v11);
    return sub_1B5FBD028(a1);
  }
  OUTLINED_FUNCTION_24();
  type metadata accessor for KeyCommandTraverseProvider.StartBehavior();
  if (a1 <= 1)
  {
    KeyCommandTraverseProvider.traverse(_:)();
    return sub_1B5FBD028(a1);
  }
  swift_getTupleTypeMetadata2();
  uint64_t result = sub_1B61B3750();
  __break(1u);
  return result;
}

uint64_t sub_1B5FBD028(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  sub_1B5FB9080(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_1B61AFCB0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t)v1 + *(void *)(v3 + 208);
  swift_beginAccess();
  sub_1B5EF6774(v12, (uint64_t)v7);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) == 1) {
    return sub_1B5E4B3B4((uint64_t)v7);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  uint64_t v14 = (void *)(*(uint64_t (**)(void, void))(*(void *)(v4 + 104) + 56))(*(void *)(v4 + 88), *(void *)(v4 + 104));
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 72);
  uint64_t v17 = swift_checkMetadataState();
  uint64_t v18 = (void *)v16(v11, v17, AssociatedConformanceWitness);

  if (v18)
  {
    uint64_t v20 = &unk_1F0FB2108;
    uint64_t v19 = (void *)swift_dynamicCastObjCProtocolConditional();
    if (v19) {
      objc_msgSend(v19, sel_startTraversingWithDirection_, a1);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

Swift::Void __swiftcall KeyCommandTraverseProvider.continueTraversing()()
{
  sub_1B5FB9080(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4FBB718]);
  uint64_t v2 = OUTLINED_FUNCTION_14(v1);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v8 - v3;
  OUTLINED_FUNCTION_10_0();
  uint64_t v6 = v0 + *(void *)(v5 + 208);
  OUTLINED_FUNCTION_24();
  sub_1B5EF6774(v6, (uint64_t)v4);
  uint64_t v7 = sub_1B61AFCB0();
  LODWORD(v6) = __swift_getEnumTagSinglePayload((uint64_t)v4, 1, v7);
  sub_1B5E4B3B4((uint64_t)v4);
  if (v6 != 1) {
    sub_1B5FBD028(0);
  }
}

uint64_t sub_1B5FBD3E0@<X0>(uint64_t a1@<X8>)
{
  void (*v40)(void *__return_ptr);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v47;
  void (*v48)(char *, uint64_t, char *);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  char *v62;
  void v63[2];
  uint64_t v64;
  uint64_t v65;
  void (*v66)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void *v73;
  char *v74;
  uint64_t v75;
  long long v76;
  uint64_t v77;
  void v78[3];
  uint64_t v79;
  uint64_t v80;
  void v81[3];
  uint64_t v82;
  uint64_t v83;
  uint64_t vars8;

  uint64_t v2 = v1;
  uint64_t v75 = a1;
  char v73 = (void *)*v1;
  uint64_t v3 = v73;
  sub_1B5FB9080(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v74 = (char *)v63 - v5;
  uint64_t v6 = sub_1B61AFCB0();
  uint64_t v71 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v72 = (char *)v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)((char *)v1 + v3[21]);
  uint64_t v9 = v3[13];
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 56);
  uint64_t v11 = v3[11];
  uint64_t v12 = (void *)v10(v11, v9);
  objc_msgSend(v12, sel_bounds);
  double v14 = v13;
  double v16 = v15;
  double v18 = v17;
  double v20 = v19;

  uint64_t v21 = (void *)v10(v11, v9);
  objc_msgSend(v21, sel_adjustedContentInset);
  double v23 = v22;
  double v25 = v24;

  uint64_t v70 = v8;
  uint64_t v69 = v10;
  uint64_t v26 = (void *)v10(v11, v9);
  double v27 = UIEdgeInsetsInsetRect(v14, v16, v18, v20, v23, v25);
  double v29 = v28;
  double v31 = v30;
  double v33 = v32;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t, double, double, double, double))(AssociatedConformanceWitness + 48);
  uint64_t v36 = swift_checkMetadataState();
  uint64_t v68 = AssociatedConformanceWitness;
  uint64_t v37 = v35(v36, AssociatedConformanceWitness, v27, v29, v31, v33);

  if (v37)
  {
    uint64_t v67 = v9 + 56;
    uint64_t v38 = (void *)((char *)v2 + *(void *)(*v2 + 160));
    uint64_t v39 = v73[12];
    uint64_t v40 = *(void (**)(void *__return_ptr))(v39 + 8);
    uint64_t v41 = v73[10];
    char v73 = v38;
    uint64_t v65 = v41;
    uint64_t v66 = (void (*)(void *__return_ptr, uint64_t, uint64_t))v40;
    v40(v81);
    uint64_t v43 = v82;
    uint64_t v42 = v83;
    __swift_project_boxed_opaque_existential_1(v81, v82);
    uint64_t v44 = (uint64_t)v74;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 64))(v37, v43, v42);
    swift_bridgeObjectRelease();
    uint64_t v45 = (char *)v6;
    if (__swift_getEnumTagSinglePayload(v44, 1, v6) == 1)
    {
      sub_1B5E4B3B4(v44);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
      return __swift_storeEnumTagSinglePayload(v75, 1, 1, v6);
    }
    uint64_t v48 = *(void (**)(char *, uint64_t, char *))(v71 + 32);
    uint64_t v49 = v72;
    uint64_t v74 = v45;
    v63[1] = v71 + 32;
    v63[0] = v48;
    v48(v72, v44, v45);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
    uint64_t v64 = v39;
    v66(v78, v65, v39);
    uint64_t v50 = v79;
    uint64_t v51 = v80;
    __swift_project_boxed_opaque_existential_1(v78, v79);
    uint64_t v52 = (void *)v69(v11, v9);
    uint64_t v53 = v68;
    (*(void (**)(long long *__return_ptr, char *, void *, uint64_t, uint64_t, uint64_t))(v51 + 56))(&v76, v49, v52, v68, v50, v51);

    if (v77)
    {
      sub_1B5E30E70(&v76, (uint64_t)v81);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
      uint64_t v54 = v82;
      uint64_t v55 = v83;
      __swift_project_boxed_opaque_existential_1(v81, v82);
      uint64_t v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 8))(v54, v55);
      uint64_t v57 = v75;
      if (v56)
      {
        uint64_t v58 = (uint64_t)v74;
        ((void (*)(uint64_t, char *, char *))v63[0])(v75, v72, v74);
        __swift_storeEnumTagSinglePayload(v57, 0, 1, v58);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
    }
    else
    {
      sub_1B5E36D74((uint64_t)&v76, &qword_1E9DA9128, &qword_1EB645248);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
    }
    v66(v81, v65, v64);
    uint64_t v59 = v82;
    uint64_t v60 = v83;
    __swift_project_boxed_opaque_existential_1(v81, v82);
    uint64_t v61 = (void *)v69(v11, v9);
    uint64_t v62 = v72;
    (*(void (**)(char *, void, void *, uint64_t, uint64_t, uint64_t))(v60 + 40))(v72, 0, v61, v53, v59, v60);

    (*(void (**)(char *, char *))(v71 + 8))(v62, v74);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
  }
  uint64_t v47 = v75;
  return __swift_storeEnumTagSinglePayload(v47, 1, 1, v6);
}

uint64_t type metadata accessor for KeyCommandTraverseProvider.StartBehavior()
{
  return swift_getGenericMetadata();
}

char *KeyCommandTraverseProvider.deinit()
{
  uint64_t v1 = *(void *)v0;
  sub_1B5E437C4((uint64_t)(v0 + 16));
  sub_1B5E437C4((uint64_t)(v0 + 32));
  OUTLINED_FUNCTION_10_0();
  (*(void (**)(char *))(*(void *)(*(void *)(v1 + 80) - 8) + 8))(&v0[*(void *)(v2 + 160)]);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_10_0();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_10_0();
  sub_1B5E36D74((uint64_t)&v0[*(void *)(v3 + 184)], &qword_1EB642CD0, (unint64_t *)&qword_1EB642CC0);
  OUTLINED_FUNCTION_10_0();
  sub_1B5E4B3B4((uint64_t)&v0[*(void *)(v4 + 208)]);
  return v0;
}

uint64_t KeyCommandTraverseProvider.__deallocating_deinit()
{
  KeyCommandTraverseProvider.deinit();
  OUTLINED_FUNCTION_0_14();
  return swift_deallocClassInstance();
}

uint64_t sub_1B5FBDC64()
{
  return swift_getWitnessTable();
}

uint64_t (*sub_1B5FBDC88(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = KeyCommandTraverseProvider.invalidator.modify(v2);
  return sub_1B5E966FC;
}

uint64_t (*sub_1B5FBDCF0(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = KeyCommandTraverseProvider.selectedIndexPath.modify(v2);
  return sub_1B5E966FC;
}

uint64_t sub_1B5FBDD4C(unint64_t a1)
{
  return KeyCommandTraverseProvider.startTraversing(direction:)(a1);
}

void sub_1B5FBDD70()
{
}

void sub_1B5FBDD94()
{
}

uint64_t sub_1B5FBDDDC@<X0>(uint64_t a1@<X8>)
{
  return KeyCommandTraverseProvider.selectedIndexPath.getter(a1);
}

uint64_t dispatch thunk of KeyCommandTraverseProviderDelegate.keyCommandTraverseProvider<A, B>(_:didSelectAt:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8))();
}

uint64_t dispatch thunk of KeyCommandTraverseProviderDelegate.keyCommandTraverseProvider<A, B>(_:commitDeleteAt:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 16))();
}

uint64_t dispatch thunk of KeyCommandTraverseProviderDelegate.keyCommandTraverseProvider<A, B>(_:didTraversePastEdgeOfContent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 24))();
}

uint64_t dispatch thunk of KeyCommandTraverseProviderDelegate.keyCommandTraverseProviderDidTraverse<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 32))();
}

uint64_t dispatch thunk of KeyCommandTraverserType.startTraversing(direction:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of KeyCommandTraverserType.continueTraversing()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of KeyCommandTraverserType.traverse(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

void sub_1B5FBDE98()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_1B5FB9080(319, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4FBB718]);
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for KeyCommandTraverseProvider()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for KeyCommandTraverseProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for KeyCommandTraverseProvider);
}

uint64_t dispatch thunk of KeyCommandTraverseProvider.__allocating_init(traverseCollectionProvider:viewProvider:commandCenter:tracker:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

unsigned char *sub_1B5FBE00C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5FBE0D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1B5FBE100(uint64_t a1, uint64_t a2)
{
  sub_1B5E36DD0(0, &qword_1EB642CD0, (unint64_t *)&qword_1EB642CC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B5FBE17C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B5FBE1D8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_1B5FBE24C(*(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(unsigned char *)(v0 + 96));
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);
  return swift_deallocObject();
}

uint64_t sub_1B5FBE24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (a6)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B5FBE29C()
{
  return sub_1B5FBC744(v0 + 16, *(void *)(v0 + 152), *(void *)(v0 + 160), v0 + 168);
}

uint64_t sub_1B5FBE2AC(uint64_t a1, uint64_t a2)
{
  sub_1B5FB9080(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t CardViewScrollViewCoordinatorDelegate.cardViewScrollViewCoordinator(_:shouldAllowState:)()
{
  return 1;
}

uint64_t dispatch thunk of CardViewScrollViewCoordinatorDelegate.cardViewScrollViewCoordinator(_:willTransitionTo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of CardViewScrollViewCoordinatorDelegate.cardViewScrollViewCoordinator(_:didTransitionTo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of CardViewScrollViewCoordinatorDelegate.cardViewScrollViewCoordinator(_:shouldAllowState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

TeaUI::ErrorModel __swiftcall ErrorModel.init(title:description:)(Swift::String title, Swift::String description)
{
  Swift::String *v2 = title;
  v2[1] = description;
  result.description.value = description;
  result.title.value = title;
  return result;
}

uint64_t ErrorModel.title.getter()
{
  uint64_t v1 = *v0;
  sub_1B61B1F70();
  return v1;
}

uint64_t ErrorModel.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1B61B1F70();
  return v1;
}

TeaUI::ErrorModel __swiftcall ErrorModel.init(description:)(Swift::String description)
{
  v1->_uint64_t countAndFlagsBits = 0;
  v1->_object = 0;
  v1[1] = description;
  result.title.value = description;
  return result;
}

TeaUI::ErrorModel __swiftcall ErrorModel.init(title:)(Swift::String title)
{
  *uint64_t v1 = title;
  v1[1]._uint64_t countAndFlagsBits = 0;
  v1[1]._object = 0;
  result.title.value = title;
  return result;
}

uint64_t static ErrorModel.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  if (!v3)
  {
    if (v6) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v6) {
    return 0;
  }
  BOOL v9 = *a1 == *a2 && v3 == v6;
  if (v9 || (char v10 = sub_1B61B3760(), result = 0, (v10 & 1) != 0))
  {
LABEL_10:
    if (v5)
    {
      if (v8)
      {
        BOOL v12 = v4 == v7 && v5 == v8;
        if (v12 || (sub_1B61B3760() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ErrorModel(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ErrorModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ErrorModel()
{
  return &type metadata for ErrorModel;
}

uint64_t dispatch thunk of AlertPresenter.onAccept(block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of AlertPresenter.onReject(block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of AlertPresenter.onNeutral(block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of AlertPresenter.present(from:animated:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 56))();
}

uint64_t dispatch thunk of CommandType.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t SceneConnectionOptions.connectionOptions.getter()
{
  sub_1B61B0930();
  sub_1B5DFF760(0, &qword_1EB64CA98);
  if (OUTLINED_FUNCTION_0_80()) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t SharedImageCache.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  SharedImageCache.init()();
  return v0;
}

uint64_t SharedImageCache.init()()
{
  uint64_t v1 = type metadata accessor for MemoryCacheAccessQueue();
  swift_allocObject();
  uint64_t v2 = MemoryCacheAccessQueue.init()();
  type metadata accessor for MemoryImageCache();
  unint64_t v3 = (void *)swift_allocObject();
  v3[6] = v1;
  v3[7] = &protocol witness table for MemoryCacheAccessQueue;
  v3[3] = v2;
  sub_1B5E3981C();
  swift_allocObject();
  swift_retain();
  v3[2] = sub_1B61B0EE0();
  swift_release();
  *(void *)(v0 + 16) = v3;
  return v0;
}

uint64_t SharedImageCache.deinit()
{
  swift_release();
  return v0;
}

uint64_t SharedImageCache.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

UIImage_optional __swiftcall SharedImageCache.fetchImage(_:)(Swift::String a1)
{
  return MemoryImageCache.image(for:)(a1);
}

Swift::Void __swiftcall SharedImageCache.cache(_:forKey:immediately:)(UIImage _, Swift::String forKey, Swift::Bool immediately)
{
}

Swift::Void __swiftcall SharedImageCache.cache(_:forKey:)(UIImage _, Swift::String forKey)
{
}

uint64_t type metadata accessor for SharedImageCache()
{
  return self;
}

uint64_t method lookup function for SharedImageCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharedImageCache);
}

uint64_t dispatch thunk of SharedImageCache.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

BOOL static ErrorPosition.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ErrorPosition.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t ErrorPosition.hashValue.getter()
{
  return sub_1B61B3940();
}

unint64_t sub_1B5FBEA90()
{
  unint64_t result = qword_1E9DAB380;
  if (!qword_1E9DAB380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB380);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ErrorPosition(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5FBEBA8);
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ErrorPosition()
{
  return &type metadata for ErrorPosition;
}

uint64_t sub_1B5FBEBE0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1BA9B1EC0](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1B5FBEC3C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_delegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t CardViewScrollViewCoordinator.delegate.getter()
{
  OUTLINED_FUNCTION_0_1();
  return MEMORY[0x1BA9B1EC0](v0);
}

uint64_t CardViewScrollViewCoordinator.delegate.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_12_0();
  *(void *)(v2 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*CardViewScrollViewCoordinator.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1BA9B1EC0](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1B5E638CC;
}

uint64_t CardViewScrollViewCoordinator.isEnabled.getter()
{
  OUTLINED_FUNCTION_0_1();
  return *v0;
}

uint64_t CardViewScrollViewCoordinator.isEnabled.setter(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_12_0();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*CardViewScrollViewCoordinator.isEnabled.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1B5FBEE84(long long *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1BA9B1EC0](v3);
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    sub_1B5FBFD60(a1, (uint64_t)v9);
    BOOL v6 = v9[48] > 1u;
    uint64_t ObjectType = swift_getObjectType();
    BOOL v8 = v6;
    (*(void (**)(uint64_t, BOOL *, uint64_t, uint64_t))(v5 + 8))(v1, &v8, ObjectType, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B5FBEF40()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1BA9B1EC0](v1);
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    BOOL v4 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollLock + 48) > 1u;
    uint64_t ObjectType = swift_getObjectType();
    BOOL v6 = v4;
    (*(void (**)(uint64_t, BOOL *, uint64_t, uint64_t))(v3 + 16))(v0, &v6, ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B5FBEFF4(long long *a1)
{
  sub_1B5FBEE84(a1);
  sub_1B5FBFD60(a1, v1 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollLock);
  return sub_1B5FBEF40();
}

id CardViewScrollViewCoordinator.__allocating_init(scrollView:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return CardViewScrollViewCoordinator.init(scrollView:)(a1);
}

id CardViewScrollViewCoordinator.init(scrollView:)(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_isEnabled] = 1;
  v1[OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_isTransitioning] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_trackingPollTimer] = 0;
  BOOL v4 = &v1[OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollLock];
  *(_OWORD *)BOOL v4 = 0u;
  *((_OWORD *)v4 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0u;
  *((_OWORD *)v4 + 2) = 0u;
  v4[48] = 2;
  *(void *)&v1[OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollView] = a1;
  v6.receiver = v1;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_init);
}

Swift::Void __swiftcall CardViewScrollViewCoordinator.didMove(toParent:)(UIViewController_optional *toParent)
{
  if (toParent && (toParent = (UIViewController_optional *)UIViewController.cardContainerController.getter()) != 0)
  {

    OUTLINED_FUNCTION_3_63(v8, v9, v10, v11, v12, v13, v14, v15, 0, 0, 0, 0, 0, v16);
    sub_1B5FBF1B8(0);
  }
  else
  {
    OUTLINED_FUNCTION_3_63((uint64_t)toParent, v1, v2, v3, v4, v5, v6, v7, 1uLL, 0, 0, 0, 0, v16);
  }
}

uint64_t sub_1B5FBF1B8(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_isEnabled);
  uint64_t result = swift_beginAccess();
  if (*v3 == 1)
  {
    if (!*(unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollLock + 48))
    {
      if ((a1 & 1) == 0) {
        return result;
      }
      char v5 = 1;
      goto LABEL_8;
    }
    LOBYTE(v13) = 0;
    uint64_t result = sub_1B5FBFB94((char *)&v13);
    if (result & 1) != 0 || (a1)
    {
      char v5 = a1 & 1;
LABEL_8:
      double v6 = sub_1B5FBFAF4(v5);
      uint64_t v8 = v7;
      objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollView), sel_adjustedContentInset);
      *(double *)&long long v13 = v6;
      *((void *)&v13 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v8;
      uint64_t v14 = v9;
      uint64_t v15 = v10;
      uint64_t v16 = v11;
      uint64_t v17 = v12;
      char v18 = 0;
      return sub_1B5FBEFF4(&v13);
    }
  }
  return result;
}

id CardViewScrollViewCoordinator.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void CardViewScrollViewCoordinator.init()()
{
}

id CardViewScrollViewCoordinator.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall CardViewScrollViewCoordinator.scrollViewDidScroll(_:)(UIScrollView *a1)
{
  while (1)
  {
    double v3 = *(double *)(v1 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollLock);
    double v4 = *(double *)(v1 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollLock + 8);
    double v5 = *(double *)(v1 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollLock + 16);
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollLock + 48))
    {
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollLock + 48) != 1) {
        break;
      }
    }
    if (![(UIScrollView *)a1 isDragging]) {
      return;
    }
    [(UIScrollView *)a1 adjustedContentInset];
    if (v6 == v5)
    {
      -[UIScrollView setContentOffset:](a1, sel_setContentOffset_, v3, v4);
      return;
    }
    sub_1B5FBF1B8(1);
  }
  if (!(*(void *)&v5 | *(void *)&v4 | *(void *)&v3 | *(void *)(v1
                                                                      + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollLock
                                                                      + 40) | *(void *)(v1
                                                                                        + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollLock
                                                                                        + 32) | *(void *)(v1 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollLock + 24)))
  {
    if ([(UIScrollView *)a1 isTracking])
    {
      [(UIScrollView *)a1 contentOffset];
      double v8 = v7;
      [(UIScrollView *)a1 adjustedContentInset];
      if (v8 <= -v9)
      {
        sub_1B5FBF1B8(1);
        sub_1B5FBF510();
      }
    }
  }
}

void sub_1B5FBF510()
{
  uint64_t v1 = OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_trackingPollTimer;
  if (!*(void *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_trackingPollTimer))
  {
    objc_super v2 = self;
    uint64_t v3 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v7[4] = sub_1B5FBFD58;
    v7[5] = v3;
    v7[0] = MEMORY[0x1E4F143A8];
    v7[1] = 1107296256;
    v7[2] = sub_1B5EE7210;
    v7[3] = &block_descriptor_43;
    double v4 = _Block_copy(v7);
    swift_release();
    id v5 = objc_msgSend(v2, sel_scheduledTimerWithTimeInterval_repeats_block_, 1, v4, 0.1);
    _Block_release(v4);
    double v6 = *(void **)(v0 + v1);
    *(void *)(v0 + vMemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v5;
  }
}

uint64_t sub_1B5FBF698()
{
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_isEnabled);
  uint64_t result = swift_beginAccess();
  if (*v1 == 1)
  {
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollLock + 48)) {
      BOOL v3 = *(unsigned char *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollLock + 48) == 1;
    }
    else {
      BOOL v3 = 0;
    }
    if (v3)
    {
      LOBYTE(v4[0]) = 1;
      uint64_t result = sub_1B5FBFB94((char *)v4);
      if (result)
      {
        memset(v4, 0, sizeof(v4));
        char v5 = 2;
        return sub_1B5FBEFF4(v4);
      }
    }
  }
  return result;
}

Swift::Void __swiftcall CardViewScrollViewCoordinator.cardViewAnimationDidTransitionTo(interactiveState:)(TeaUI::CardViewInteractiveState interactiveState)
{
  unsigned int v2 = *(unsigned __int8 *)interactiveState;
  BOOL v3 = v2 >= 2;
  unsigned int v4 = v2 - 2;
  if (v3)
  {
    if (v4 >= 2)
    {
      *(unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_isTransitioning) = 0;
    }
    else
    {
      *(unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_isTransitioning) = 1;
      OUTLINED_FUNCTION_0_81();
    }
  }
  else
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_isTransitioning) = 1;
    sub_1B5FBF7E0();
  }
}

void sub_1B5FBF7E0()
{
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_isEnabled);
  swift_beginAccess();
  if (*v1 == 1 && *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollLock + 48) < 2u)
  {
    LOBYTE(v3[0]) = 1;
    if (sub_1B5FBFB94((char *)v3))
    {
      memset(v3, 0, sizeof(v3));
      char v4 = 2;
      sub_1B5FBEFF4(v3);
      id v2 = *(id *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollView);
      objc_msgSend(v2, sel_contentOffset);
      objc_msgSend(v2, sel_setContentOffset_animated_, 0);
    }
  }
}

Swift::Void __swiftcall CardViewScrollViewCoordinator.cardViewAnimationWillTransitionTo(presentationState:)(TeaUI::CardViewPresentationState presentationState)
{
  if (*(unsigned __int8 *)presentationState > 1u) {
    OUTLINED_FUNCTION_0_81();
  }
  else {
    sub_1B5FBF8C4();
  }
}

uint64_t sub_1B5FBF8C4()
{
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_isEnabled);
  uint64_t result = swift_beginAccess();
  if (*v1 == 1)
  {
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollLock + 48)) {
      BOOL v3 = *(unsigned char *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollLock + 48) == 1;
    }
    else {
      BOOL v3 = 0;
    }
    if (!v3)
    {
      double v4 = sub_1B5FBFAF4(0);
      uint64_t v6 = v5;
      objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollView), sel_adjustedContentInset);
      *(double *)&long long v11 = v4;
      *((void *)&v11 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
      uint64_t v12 = v7;
      uint64_t v13 = v8;
      uint64_t v14 = v9;
      uint64_t v15 = v10;
      char v16 = 1;
      return sub_1B5FBEFF4(&v11);
    }
  }
  return result;
}

Swift::Void __swiftcall CardViewScrollViewCoordinator.cardViewAnimationDidTransitionTo(presentationState:)(TeaUI::CardViewPresentationState presentationState)
{
  if (((1 << *(unsigned char *)presentationState) & 0x53) != 0) {
    sub_1B5FBF7E0();
  }
  else {
    OUTLINED_FUNCTION_0_81();
  }
}

uint64_t type metadata accessor for CardViewScrollViewCoordinator()
{
  return self;
}

uint64_t method lookup function for CardViewScrollViewCoordinator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CardViewScrollViewCoordinator);
}

uint64_t dispatch thunk of CardViewScrollViewCoordinator.__allocating_init(scrollView:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CardViewScrollViewCoordinator.ScrollLock(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 49))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CardViewScrollViewCoordinator.ScrollLock(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B5FBFAA4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 48) <= 1u) {
    return *(unsigned __int8 *)(a1 + 48);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1B5FBFABC(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)(result + 40) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CardViewScrollViewCoordinator.ScrollLock()
{
  return &type metadata for CardViewScrollViewCoordinator.ScrollLock;
}

double sub_1B5FBFAF4(char a1)
{
  uint64_t v3 = OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollView;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollView), sel_contentOffset);
  double v5 = v4;
  objc_msgSend(*(id *)(v1 + v3), sel_adjustedContentInset);
  double v7 = -v6;
  objc_msgSend(*(id *)(v1 + v3), sel_contentOffset);
  double v9 = v8;
  if (v5 < v7 || (a1 & 1) != 0) {
    objc_msgSend(*(id *)(v1 + v3), sel_adjustedContentInset);
  }
  return v9;
}

uint64_t sub_1B5FBFB94(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = v1 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_delegate;
  swift_beginAccess();
  if (MEMORY[0x1BA9B1EC0](v3))
  {
    uint64_t v4 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    char v8 = v2;
    char v6 = (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t))(v4 + 24))(v1, &v8, ObjectType, v4);
    swift_unknownObjectRelease();
  }
  else
  {
    char v6 = 1;
  }
  return v6 & 1;
}

uint64_t sub_1B5FBFC40()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1B5FBFC78(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1BA9B1EC0](v2);
  if (v3)
  {
    uint64_t v4 = (unsigned char *)v3;
    uint64_t v5 = OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollView;
    if (!objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_scrollView), sel_isTracking)|| v4[OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_isTransitioning] == 1)
    {
      uint64_t v6 = OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_trackingPollTimer;
      double v7 = *(void **)&v4[OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_trackingPollTimer];
      if (v7)
      {
        objc_msgSend(v7, sel_invalidate);
        char v8 = *(void **)&v4[v6];
      }
      else
      {
        char v8 = 0;
      }
      *(void *)&v4[v6] = 0;
    }
    if ((objc_msgSend(*(id *)&v4[v5], sel_isTracking) & 1) == 0
      && (v4[OBJC_IVAR____TtC5TeaUI29CardViewScrollViewCoordinator_isTransitioning] & 1) == 0)
    {
      sub_1B5FBF7E0();
    }
  }
}

void sub_1B5FBFD58(uint64_t a1)
{
  sub_1B5FBFC78(a1, v1);
}

uint64_t sub_1B5FBFD60(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[2];
  *(unsigned char *)(a2 + 48) = *((unsigned char *)a1 + 48);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

__n128 MotionData.attitude.getter@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 48);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

void MotionData.rotationRate.getter(__n128 *a1@<X8>)
{
  OUTLINED_FUNCTION_2_72(a1, v1[5].n128_f64[0], v1[4]);
}

void MotionData.gravity.getter(__n128 *a1@<X8>)
{
  OUTLINED_FUNCTION_2_72(a1, *(double *)(v1 + 104), *(__n128 *)(v1 + 88));
}

void MotionData.userAcceleration.getter(__n128 *a1@<X8>)
{
  OUTLINED_FUNCTION_2_72(a1, v1[8].n128_f64[0], v1[7]);
}

uint64_t MotionData.deviceOrientation.getter()
{
  return *(void *)(v0 + 136);
}

uint64_t sub_1B5FBFDC0(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1B5FBFEBC(objc_msgSend(a1, sel_attitude), (uint64_t)v22);
  v21[0] = v22[0];
  v21[1] = v22[1];
  v21[2] = v22[2];
  objc_msgSend(a1, sel_rotationRate);
  *(void *)&long long v19 = v6;
  *((void *)&v19 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v7;
  uint64_t v20 = v8;
  objc_msgSend(a1, sel_gravity);
  v18[0] = v9;
  v18[1] = v10;
  void v18[2] = v11;
  objc_msgSend(a1, sel_userAcceleration);
  v17[0] = v12;
  v17[1] = v13;
  long long v17[2] = v14;
  swift_allocObject();
  uint64_t v15 = sub_1B5FC0008((uint64_t)v21, &v19, (uint64_t)v18, (uint64_t)v17, a2, a3);

  return v15;
}

void sub_1B5FBFEBC(void *a1@<X0>, uint64_t a2@<X8>)
{
  objc_msgSend(a1, sel_roll);
  uint64_t v74 = v4;
  objc_msgSend(a1, sel_pitch);
  uint64_t v67 = v5;
  int v6 = objc_msgSend(a1, sel_yaw);
  uint64_t v8 = v7;
  int v16 = OUTLINED_FUNCTION_0_82(v6, v9, v10, v11, v12, v13, v14, v15, v61, v67, v74, v81);
  long double v17 = v82;
  int v25 = OUTLINED_FUNCTION_0_82(v16, v18, v19, v20, v21, v22, v23, v24, v62, v68, v75, SLOBYTE(v82));
  int v33 = OUTLINED_FUNCTION_0_82(v25, v26, v27, v28, v29, v30, v31, v32, v63, v69, v76, v83);
  int v41 = OUTLINED_FUNCTION_0_82(v33, v34, v35, v36, v37, v38, v39, v40, v64, v70, v77, v84);
  int v49 = OUTLINED_FUNCTION_0_82(v41, v42, v43, v44, v45, v46, v47, v48, v65, v71, v78, v85);
  OUTLINED_FUNCTION_0_82(v49, v50, v51, v52, v53, v54, v55, v56, v66, v72, v79, v86);
  double v57 = sqrt(v17 * v17 + v87 * v87);

  if (v57 >= 0.000001)
  {
    double v58 = atan2(v90, v91);
    double v59 = atan2(-v88, v57);
    double v60 = atan2(v87, v17);
  }
  else
  {
    double v58 = -atan2(-v87, v89);
    double v59 = -atan2(-v88, v57);
    double v60 = 0.0;
  }
  *(void *)a2 = v80;
  *(void *)(a2 + 8) = v73;
  *(void *)(a2 + 16) = v8;
  *(double *)(a2 + 24) = v59;
  *(double *)(a2 + 32) = v58;
  *(double *)(a2 + 40) = v60;
}

uint64_t sub_1B5FC0008(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *(void *)(a1 + 16);
  double v7 = *(double *)(a1 + 24);
  uint64_t v9 = *((void *)a2 + 2);
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(a4 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a1;
  *(void *)(v6 + 32) = v8;
  *(double *)(v6 + 40) = v7;
  long long v12 = *(_OWORD *)(a1 + 32);
  long long v13 = *a2;
  *(_OWORD *)(v6 + 48) = v12;
  *(_OWORD *)(v6 + 64) = v13;
  *(void *)(v6 + 80) = v9;
  *(_OWORD *)(v6 + 88) = *(_OWORD *)a3;
  *(void *)(v6 + 104) = v10;
  *(_OWORD *)(v6 + 112) = *(_OWORD *)a4;
  *(void *)(v6 + 128) = v11;
  *(void *)(v6 + 136) = a5;
  *(void *)(v6 + 144) = a6;
  switch(a6)
  {
    case 2:
      double v14 = -57.2957795;
      goto LABEL_4;
    case 3:
      *(double *)(v6 + 152) = 57.2957795 * *(double *)&v12;
      double v16 = -57.2957795;
      goto LABEL_7;
    case 4:
      *(double *)(v6 + 152) = -57.2957795 * *(double *)&v12;
      double v16 = 57.2957795;
LABEL_7:
      double v15 = v7 * v16;
      break;
    default:
      double v14 = 57.2957795;
LABEL_4:
      *(double *)(v6 + 152) = v7 * v14;
      double v15 = v14 * *(double *)&v12;
      break;
  }
  *(double *)(v6 + 160) = v15;
  sub_1B5FC06D4();
  swift_allocObject();
  *(void *)(v6 + 168) = sub_1B61B0960();
  swift_allocObject();
  *(void *)(v6 + 176) = sub_1B61B0960();
  return v6;
}

double Attitude.normalizedPitchDegrees.getter()
{
  return OUTLINED_FUNCTION_1_80(*(double *)(v0 + 32), 57.2957795);
}

double Attitude.normalizedRollDegrees.getter()
{
  return OUTLINED_FUNCTION_1_80(*(double *)(v0 + 24), 57.2957795);
}

uint64_t sub_1B5FC01BC()
{
  uint64_t result = sub_1B5FC01DC();
  qword_1EB63F8F0 = result;
  return result;
}

uint64_t sub_1B5FC01DC()
{
  v5[0] = xmmword_1B61CAE60;
  v5[1] = xmmword_1B61CAE70;
  v5[2] = xmmword_1B61CAE80;
  long long v3 = 0uLL;
  uint64_t v4 = 0;
  memset(v2, 0, sizeof(v2));
  type metadata accessor for MotionData();
  memset(v1, 0, sizeof(v1));
  swift_allocObject();
  return sub_1B5FC0008((uint64_t)v5, &v3, (uint64_t)v2, (uint64_t)v1, 0, 1);
}

uint64_t static MotionData.fixed.getter()
{
  if (qword_1EB63F8F8 != -1) {
    swift_once();
  }
  return swift_retain();
}

double MotionData.xTranslate(to:inverted:)()
{
  sub_1B61B0970();
  return v1;
}

double MotionData.yTranslate(to:inverted:)()
{
  sub_1B61B0970();
  return v1;
}

BOOL static MotionData.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  float64x2_t v4 = *(float64x2_t *)(a1 + 32);
  v14[0] = *(float64x2_t *)(a1 + 16);
  v14[1] = v4;
  v14[2] = *(float64x2_t *)(a1 + 48);
  float64x2_t v5 = *(float64x2_t *)(a2 + 32);
  v13[0] = *(float64x2_t *)(a2 + 16);
  v13[1] = v5;
  v13[2] = *(float64x2_t *)(a2 + 48);
  if (static Attitude.== infix(_:_:)(v14, v13)
    && (*(double *)(a1 + 64) == *(double *)(a2 + 64) ? (BOOL v6 = *(double *)(a1 + 72) == *(double *)(a2 + 72)) : (BOOL v6 = 0),
        v6 ? (BOOL v7 = *(double *)(a1 + 80) == *(double *)(a2 + 80)) : (BOOL v7 = 0),
        v7
     && (*(double *)(a1 + 88) == *(double *)(a2 + 88) ? (BOOL v8 = *(double *)(a1 + 96) == *(double *)(a2 + 96)) : (BOOL v8 = 0),
         v8 ? (BOOL v9 = *(double *)(a1 + 104) == *(double *)(a2 + 104)) : (BOOL v9 = 0),
         v9
      && (*(double *)(a1 + 112) == *(double *)(a2 + 112)
        ? (BOOL v10 = *(double *)(a1 + 120) == *(double *)(a2 + 120))
        : (BOOL v10 = 0),
          v10 ? (BOOL v11 = *(double *)(a1 + 128) == *(double *)(a2 + 128)) : (BOOL v11 = 0),
          v11 && *(void *)(a1 + 136) == *(void *)(a2 + 136)))))
  {
    return *(void *)(a1 + 144) == *(void *)(a2 + 144);
  }
  else
  {
    return 0;
  }
}

BOOL static Attitude.== infix(_:_:)(float64x2_t *a1, float64x2_t *a2)
{
  BOOL result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1]))), 0xFuLL))) & 1) != 0&& a1[2].f64[0] == a2[2].f64[0])
  {
    return a1[2].f64[1] == a2[2].f64[1];
  }
  return result;
}

BOOL _s5TeaUI12RotationRateV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t MotionData.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t MotionData.__deallocating_deinit()
{
  MotionData.deinit();
  return swift_deallocClassInstance();
}

double Attitude.pitch.getter()
{
  return *(double *)(v0 + 8);
}

double Attitude.yaw.getter()
{
  return *(double *)(v0 + 16);
}

double Attitude.normalizedRoll.getter()
{
  return *(double *)(v0 + 24);
}

double Attitude.normalizedPitch.getter()
{
  return *(double *)(v0 + 32);
}

double Attitude.normalizedYaw.getter()
{
  return *(double *)(v0 + 40);
}

double Attitude.rollDegrees.getter()
{
  return OUTLINED_FUNCTION_1_80(*v0, 57.2957795);
}

double Attitude.pitchDegrees.getter()
{
  return OUTLINED_FUNCTION_1_80(*(double *)(v0 + 8), 57.2957795);
}

double Attitude.yawDegrees.getter()
{
  return OUTLINED_FUNCTION_1_80(*(double *)(v0 + 16), 57.2957795);
}

double Attitude.normalizedYawDegrees.getter()
{
  return OUTLINED_FUNCTION_1_80(*(double *)(v0 + 40), 57.2957795);
}

double static Attitude.fixed.getter@<D0>(_OWORD *a1@<X8>)
{
  *a1 = xmmword_1B61CAE60;
  a1[1] = xmmword_1B61CAE70;
  double result = 0.698131701;
  a1[2] = xmmword_1B61CAE80;
  return result;
}

double Acceleration.y.getter()
{
  return *(double *)(v0 + 8);
}

double Acceleration.z.getter()
{
  return *(double *)(v0 + 16);
}

void static Acceleration.fixed.getter(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

uint64_t type metadata accessor for MotionData()
{
  return self;
}

uint64_t method lookup function for MotionData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MotionData);
}

uint64_t getEnumTagSinglePayload for Attitude(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Attitude(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

void type metadata accessor for Attitude()
{
}

void type metadata accessor for RotationRate()
{
}

uint64_t getEnumTagSinglePayload for Acceleration(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Acceleration(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)double result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for Acceleration()
{
}

void sub_1B5FC06D4()
{
  if (!qword_1EB64A440)
  {
    sub_1B5FC0730();
    unint64_t v0 = sub_1B61B0980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB64A440);
    }
  }
}

unint64_t sub_1B5FC0730()
{
  unint64_t result = qword_1EB647A50;
  if (!qword_1EB647A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB647A50);
  }
  return result;
}

uint64_t EmptyStateModel.title.getter()
{
  uint64_t v1 = *v0;
  sub_1B61B1F70();
  return v1;
}

uint64_t EmptyStateModel.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1B61B1F70();
  return v1;
}

void *EmptyStateModel.image.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

uint64_t EmptyStateModel.init(title:description:image:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t EmptyStateModel.init(description:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = result;
  a3[3] = a2;
  a3[4] = 0;
  return result;
}

uint64_t EmptyStateModel.init(title:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  a3[3] = 0;
  a3[4] = 0;
  a3[2] = 0;
  return result;
}

uint64_t static EmptyStateModel.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  BOOL v6 = (void *)a1[4];
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  BOOL v10 = (void *)a2[4];
  if (!v3)
  {
    if (v7) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v7) {
    return 0;
  }
  BOOL v11 = *a1 == *a2 && v3 == v7;
  if (v11 || (v12 = sub_1B61B3760(), uint64_t result = 0, (v12 & 1) != 0))
  {
LABEL_10:
    if (v5)
    {
      if (!v9) {
        return 0;
      }
      if (v4 != v8 || v5 != v9)
      {
        char v15 = sub_1B61B3760();
        uint64_t result = 0;
        if ((v15 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v9)
    {
      return 0;
    }
    if (v6)
    {
      if (v10)
      {
        sub_1B5EE1300();
        id v16 = v10;
        id v17 = v6;
        char v18 = sub_1B61B2E10();

        if (v18) {
          return 1;
        }
      }
    }
    else if (!v10)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

void destroy for EmptyStateModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for EmptyStateModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  sub_1B61B1F70();
  sub_1B61B1F70();
  id v6 = v5;
  return a1;
}

void *assignWithCopy for EmptyStateModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[4];
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  id v6 = v5;

  return a1;
}

uint64_t assignWithTake for EmptyStateModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for EmptyStateModel(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmptyStateModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmptyStateModel()
{
  return &type metadata for EmptyStateModel;
}

uint64_t ActivityEligibilityOption.hash(into:)()
{
  return sub_1B61B3910();
}

BOOL static ActivityEligibilityOption.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ActivityEligibilityOption.hashValue.getter()
{
  return sub_1B61B3940();
}

unint64_t sub_1B5FC0C18()
{
  unint64_t result = qword_1EB64C3F8;
  if (!qword_1EB64C3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB64C3F8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ActivityEligibilityOption(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5FC0D34);
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityEligibilityOption()
{
  return &type metadata for ActivityEligibilityOption;
}

BOOL sub_1B5FC0D6C()
{
  OUTLINED_FUNCTION_0_1();
  return *(void *)(*(void *)v0 + 16) != 0;
}

id sub_1B5FC0DAC(void *a1)
{
  OUTLINED_FUNCTION_0_21();
  id v3 = a1;
  sub_1B5E19EC8();
  sub_1B5E1A398();
  OUTLINED_FUNCTION_2_73();
  return objc_msgSend(v1, sel_addSubview_, v3);
}

void sub_1B5FC0E2C(void *a1)
{
  OUTLINED_FUNCTION_0_21();
  id v3 = a1;
  sub_1B5E19EC8();
  sub_1B5E1A398();
  OUTLINED_FUNCTION_2_73();
  id v4 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v4, sel_addSublayer_, v3);
}

void sub_1B5FC0EC8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_0_21();
  id v8 = a1;
  sub_1B5E19EC8();
  uint64_t v9 = *(void *)(*v4 + 16);
  sub_1B5E1A398();
  uint64_t v10 = *v4;
  *(void *)(v10 + 16) = v9 + 1;
  uint64_t v11 = v10 + 16 * v9;
  *(void *)(v11 + 32) = v8;
  *(void *)(v11 + 40) = a4;
  swift_endAccess();
  id v12 = objc_msgSend(v4, sel_layer);
  objc_msgSend(v12, sel_insertSublayer_atIndex_, v8, a2);
}

uint64_t sub_1B5FC0F84(uint64_t a1)
{
  id v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC5TeaUI19MotionContainerView_motionTransforms);
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (v6)
  {
    sub_1B61B1F70();
    uint64_t v7 = (uint64_t *)(v5 + 40);
    do
    {
      uint64_t v8 = *v7;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 104);
      swift_unknownObjectRetain();
      v10(a1, ObjectType, v8);
      swift_unknownObjectRelease();
      v7 += 2;
      --v6;
    }
    while (v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B5FC1058()
{
  OUTLINED_FUNCTION_0_1();
  return *v0;
}

uint64_t sub_1B5FC108C(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI19MotionContainerView_isMotionEnabled);
  swift_beginAccess();
  *id v3 = a1;
  return sub_1B5FC1408();
}

uint64_t (*sub_1B5FC10E4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1B5FC1144;
}

uint64_t sub_1B5FC1144(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1B5FC1408();
  }
  return result;
}

unint64_t sub_1B5FC1178()
{
  v20.receiver = v0;
  v20.super_class = (Class)type metadata accessor for MotionContainerView();
  objc_msgSendSuper2(&v20, sel_layoutSubviews);
  id v1 = objc_msgSend(v0, sel_subviews);
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C70);
  unint64_t v2 = sub_1B61B24E0();

  if (v2 >> 62)
  {
    sub_1B61B1F70();
    uint64_t v3 = sub_1B61B3530();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v3)
  {
    if (v3 < 1)
    {
      __break(1u);
      goto LABEL_27;
    }
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x1BA9B04B0](i, v2);
      }
      else {
        id v5 = *(id *)(v2 + 8 * i + 32);
      }
      uint64_t v6 = v5;
      objc_msgSend(v5, sel_frame);
      OUTLINED_FUNCTION_3_65();
      if (!OUTLINED_FUNCTION_1_81(v7, v8, v9, v10))
      {
        objc_msgSend(v0, sel_bounds);
        objc_msgSend(v6, sel_setFrame_);
      }
    }
  }
  swift_bridgeObjectRelease();
  unint64_t result = sub_1B5FC1700(objc_msgSend(v0, sel_layer));
  if (!result) {
    return result;
  }
  unint64_t v2 = result;
  if (result >> 62)
  {
LABEL_27:
    unint64_t result = sub_1B61B3530();
    uint64_t v12 = result;
    if (result) {
      goto LABEL_15;
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v12 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v12)
  {
LABEL_15:
    if (v12 < 1)
    {
      __break(1u);
      return result;
    }
    for (uint64_t j = 0; j != v12; ++j)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v14 = (id)MEMORY[0x1BA9B04B0](j, v2);
      }
      else {
        id v14 = *(id *)(v2 + 8 * j + 32);
      }
      char v15 = v14;
      objc_msgSend(v14, sel_frame);
      OUTLINED_FUNCTION_3_65();
      if (!OUTLINED_FUNCTION_1_81(v16, v17, v18, v19))
      {
        objc_msgSend(v0, sel_bounds);
        objc_msgSend(v15, sel_setFrame_);
      }
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B5FC1408()
{
  id v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5TeaUI19MotionContainerView_motionTransforms);
  uint64_t result = swift_beginAccess();
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    id v5 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC5TeaUI19MotionContainerView_isMotionEnabled);
    sub_1B61B1F70();
    swift_beginAccess();
    uint64_t v6 = (uint64_t *)(v3 + 40);
    do
    {
      uint64_t v7 = *v6;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v9 = *v5;
      double v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 64);
      swift_unknownObjectRetain();
      v10(v9, ObjectType, v7);
      swift_unknownObjectRelease();
      v6 += 2;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id MotionContainerView.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_38();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_35_0();
  return objc_msgSend(v2, v3, v4);
}

id MotionContainerView.init(frame:)()
{
  OUTLINED_FUNCTION_38();
  *(void *)(v0 + OBJC_IVAR____TtC5TeaUI19MotionContainerView_motionTransforms) = MEMORY[0x1E4FBC860];
  *(unsigned char *)(v0 + OBJC_IVAR____TtC5TeaUI19MotionContainerView_isMotionEnabled) = 1;
  uint64_t v5 = type metadata accessor for MotionContainerView();
  double v1 = OUTLINED_FUNCTION_35_0();
  return objc_msgSendSuper2(v2, v3, v1, v0, v5);
}

id MotionContainerView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id MotionContainerView.init(coder:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC5TeaUI19MotionContainerView_motionTransforms] = MEMORY[0x1E4FBC860];
  v1[OBJC_IVAR____TtC5TeaUI19MotionContainerView_isMotionEnabled] = 1;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for MotionContainerView();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id MotionContainerView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MotionContainerView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B5FC1700(void *a1)
{
  id v2 = objc_msgSend(a1, sel_sublayers);

  if (!v2) {
    return 0;
  }
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C78);
  uint64_t v3 = sub_1B61B24E0();

  return v3;
}

uint64_t type metadata accessor for MotionContainerView()
{
  return self;
}

uint64_t sub_1B5FC179C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B5FC1058();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1B5FC17CC(char *a1)
{
  return sub_1B5FC108C(*a1);
}

uint64_t method lookup function for MotionContainerView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MotionContainerView);
}

uint64_t dispatch thunk of MotionContainerView.shouldReceiveMotionEvents.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MotionContainerView.addMotionSubview<A>(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MotionContainerView.addMotionSublayer<A>(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MotionContainerView.insertMotionSublayer<A>(_:at:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MotionContainerView.transform(motionData:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MotionContainerView.isMotionEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of MotionContainerView.isMotionEnabled.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of MotionContainerView.isMotionEnabled.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

void *RightArrow.arrowColor.getter()
{
  double v1 = (void **)(v0 + OBJC_IVAR____TtC5TeaUI10RightArrow_arrowColor);
  swift_beginAccess();
  id v2 = *v1;
  id v3 = v2;
  return v2;
}

void RightArrow.arrowColor.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC5TeaUI10RightArrow_arrowColor);
  swift_beginAccess();
  double v4 = *v3;
  *id v3 = a1;
}

uint64_t (*RightArrow.arrowColor.modify())()
{
  return j__swift_endAccess;
}

id RightArrow.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_38();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_35_0();
  return objc_msgSend(v2, v3, v4);
}

id RightArrow.init(frame:)()
{
  OUTLINED_FUNCTION_38();
  uint64_t ObjectType = swift_getObjectType();
  *(void *)(v0 + OBJC_IVAR____TtC5TeaUI10RightArrow_arrowColor) = 0;
  uint64_t v7 = ObjectType;
  double v2 = OUTLINED_FUNCTION_35_0();
  id v5 = objc_msgSendSuper2(v3, v4, v2, v0, v7);
  objc_msgSend(v5, sel_setOpaque_, 0);
  return v5;
}

id RightArrow.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void RightArrow.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC5TeaUI10RightArrow_arrowColor] = 0;

  sub_1B61B34D0();
  __break(1u);
}

Swift::Void __swiftcall RightArrow.draw(_:)(__C::CGRect a1)
{
  OUTLINED_FUNCTION_38();
  uint64_t v2 = sub_1B61B0020();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = UIGraphicsGetCurrentContext();
  if (v6)
  {
    uint64_t v7 = v6;
    v16.origin.x = OUTLINED_FUNCTION_35_0();
    CGContextClearRect(v8, v16);
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
    double v10 = OUTLINED_FUNCTION_3_66();
    v17.origin.x = OUTLINED_FUNCTION_35_0();
    objc_msgSend(v9, sel_moveToPoint_, v10, CGRectGetMinY(v17));
    v18.origin.x = OUTLINED_FUNCTION_35_0();
    CGRectGetMaxX(v18);
    objc_msgSend(v9, sel_addLineToPoint_, v10, OUTLINED_FUNCTION_2_74() * 0.5);
    OUTLINED_FUNCTION_3_66();
    objc_msgSend(v9, sel_addLineToPoint_, v10, OUTLINED_FUNCTION_2_74());
    uint64_t v11 = (const CGPath *)objc_msgSend(v9, sel_CGPath);
    CGContextAddPath(v7, v11);

    uint64_t v12 = (id *)(v1 + OBJC_IVAR____TtC5TeaUI10RightArrow_arrowColor);
    swift_beginAccess();
    if (*v12)
    {
      id v13 = *v12;
      id v14 = (CGColor *)objc_msgSend(v13, sel_CGColor);
      CGContextSetFillColorWithColor(v7, v14);
    }
    CGContextClosePath(v7);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F1DA40], v2);
    sub_1B61B2B30();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

id RightArrow.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for RightArrow()
{
  return self;
}

uint64_t dispatch thunk of NavigationItemStylable.navigationItemStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id static BarView.barView(style:separator:groupName:)(void **a1, unsigned __int8 *a2)
{
  uint64_t v3 = *a1;
  unsigned __int8 v4 = *a2;
  id v5 = objc_msgSend(self, sel_effectWithStyle_, 1);
  id v6 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEffect_, v5);
  double v10 = v3;
  sub_1B5FC2578(v3);
  BarView.style.setter(&v10);
  unsigned __int8 v9 = v4;
  BarView.separator.setter(&v9);
  uint64_t v7 = (void *)sub_1B61B20C0();
  objc_msgSend(v6, sel_ts_setGroupName_, v7);

  return v6;
}

id BarView.style.getter@<X0>(void **a1@<X8>)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC5TeaUI7BarView_style);
  OUTLINED_FUNCTION_24();
  unsigned __int8 v4 = *v3;
  *a1 = *v3;
  return sub_1B5FC2578(v4);
}

id sub_1B5FC20D8@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR____TtC5TeaUI7BarView_style);
  swift_beginAccess();
  unsigned __int8 v4 = *v3;
  *a2 = *v3;
  return sub_1B5FC2578(v4);
}

void sub_1B5FC2130(void **a1)
{
  uint64_t v1 = *a1;
  sub_1B5FC2578(v1);
  BarView.style.setter(&v1);
}

void BarView.style.setter(void **a1)
{
  objc_super v2 = *a1;
  OUTLINED_FUNCTION_1();
  uint64_t v3 = *v1;
  *uint64_t v1 = v2;
  sub_1B5FC2588(v3);
  sub_1B5FC21B8();
}

void sub_1B5FC21B8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI7BarView_tintView);
  objc_super v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC5TeaUI7BarView_style);
  swift_beginAccess();
  uint64_t v4 = *v2;
  uint64_t v3 = sub_1B60AB9CC();
  objc_msgSend(v1, sel_setBackgroundColor_, v3, v4);
}

void (*BarView.style.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1B5FC2294;
}

void sub_1B5FC2294(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1B5FC21B8();
  }
}

uint64_t BarView.separator.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI7BarView_separator);
  uint64_t result = OUTLINED_FUNCTION_24();
  *a1 = *v3;
  return result;
}

uint64_t sub_1B5FC2310@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC5TeaUI7BarView_separator);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

id sub_1B5FC2364(unsigned __int8 *a1)
{
  unsigned __int8 v2 = *a1;
  return BarView.separator.setter(&v2);
}

id BarView.separator.setter(unsigned __int8 *a1)
{
  unsigned __int8 v2 = *a1;
  OUTLINED_FUNCTION_1();
  unsigned __int8 v3 = *v1;
  *uint64_t v1 = v2;
  v5[0] = v3;
  return sub_1B5FC23EC(v5);
}

id sub_1B5FC23EC(unsigned __int8 *a1)
{
  int v2 = *a1;
  unsigned __int8 v3 = &v1[OBJC_IVAR____TtC5TeaUI7BarView_separator];
  id result = (id)swift_beginAccess();
  if (v2 != *v3) {
    return objc_msgSend(v1, sel_setNeedsLayout);
  }
  return result;
}

void (*BarView.separator.modify(void *a1))(uint64_t a1, char a2)
{
  unsigned __int8 v3 = malloc(0x28uLL);
  *a1 = v3;
  long long v3[3] = v1;
  uint64_t v4 = (unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI7BarView_separator);
  OUTLINED_FUNCTION_24();
  *((unsigned char *)v3 + 32) = *v4;
  return sub_1B5FC24D0;
}

void sub_1B5FC24D0(uint64_t a1, char a2)
{
  int v2 = *(void **)a1;
  if (a2)
  {
    char v4 = *(unsigned char *)(*(void *)a1 + 32);
    unsigned __int8 v3 = (unsigned __int8 *)&v4;
  }
  else
  {
    char v5 = *(unsigned char *)(*(void *)a1 + 32);
    unsigned __int8 v3 = (unsigned __int8 *)&v5;
  }
  BarView.separator.setter(v3);
  free(v2);
}

id BarView.__allocating_init(effect:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithEffect_, a1);

  return v3;
}

id sub_1B5FC2578(id result)
{
  if ((unint64_t)result >= 3) {
    return result;
  }
  return result;
}

void sub_1B5FC2588(id a1)
{
  if ((unint64_t)a1 >= 3) {
}
  }

char *BarView.init(effect:)(void *a1)
{
  int v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC5TeaUI7BarView_style] = 2;
  v2[OBJC_IVAR____TtC5TeaUI7BarView_separator] = 0;
  uint64_t v5 = OBJC_IVAR____TtC5TeaUI7BarView_tintView;
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1EB0]);
  uint64_t v7 = v2;
  *(void *)&v2[v5] = objc_msgSend(v6, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v8 = OBJC_IVAR____TtC5TeaUI7BarView_separatorView;
  *(void *)&v7[v8] = OUTLINED_FUNCTION_0_29(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_);

  v27.receiver = v7;
  v27.super_class = ObjectType;
  unsigned __int8 v9 = (char *)objc_msgSendSuper2(&v27, sel_initWithEffect_, a1);
  uint64_t v10 = OBJC_IVAR____TtC5TeaUI7BarView_tintView;
  uint64_t v11 = *(void **)&v9[OBJC_IVAR____TtC5TeaUI7BarView_tintView];
  uint64_t v12 = v9;
  objc_msgSend(v11, sel_setAutoresizingMask_, 18);
  id v13 = &v12[OBJC_IVAR____TtC5TeaUI7BarView_style];
  OUTLINED_FUNCTION_24();
  uint64_t v26 = *(void *)v13;
  id v14 = v11;
  uint64_t v15 = sub_1B60AB9CC();
  objc_msgSend(v14, sel_setBackgroundColor_, v15, v26);

  id v16 = objc_msgSend(v12, sel_contentView);
  objc_msgSend(v16, sel_addSubview_, *(void *)&v9[v10]);

  uint64_t v17 = OBJC_IVAR____TtC5TeaUI7BarView_separatorView;
  CGRect v18 = *(void **)&v12[OBJC_IVAR____TtC5TeaUI7BarView_separatorView];
  double v19 = self;
  id v20 = v18;
  id v21 = objc_msgSend(v19, sel_blackColor);
  id v22 = objc_msgSend(v21, sel_colorWithAlphaComponent_, 0.15);

  objc_msgSend(v20, sel_setBackgroundColor_, v22);
  id v23 = objc_msgSend(v12, sel_contentView);
  id v24 = *(id *)&v12[v17];
  objc_msgSend(v23, sel_addSubview_, v24);

  return v12;
}

void sub_1B5FC281C()
{
  *(void *)&v0[OBJC_IVAR____TtC5TeaUI7BarView_style] = 2;
  v0[OBJC_IVAR____TtC5TeaUI7BarView_separator] = 0;
  uint64_t v1 = OBJC_IVAR____TtC5TeaUI7BarView_tintView;
  *(void *)&v0[v1] = OUTLINED_FUNCTION_0_29(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_);
  uint64_t v2 = OBJC_IVAR____TtC5TeaUI7BarView_separatorView;
  *(void *)&v0[v2] = OUTLINED_FUNCTION_0_29(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_);

  sub_1B61B34D0();
  __break(1u);
}

Swift::Void __swiftcall BarView.layoutSubviews()()
{
  v14.receiver = v0;
  v14.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v14, sel_layoutSubviews);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI7BarView_tintView];
  OUTLINED_FUNCTION_3_7();
  objc_msgSend(v1, sel_setFrame_);
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_mainScreen);
  objc_msgSend(v3, sel_scale);
  double v5 = v4;

  double v6 = 0.5;
  if (v5 > 0.0)
  {
    id v7 = objc_msgSend(v2, sel_mainScreen);
    objc_msgSend(v7, sel_scale);
    double v6 = v8;
  }
  unsigned __int8 v9 = &v0[OBJC_IVAR____TtC5TeaUI7BarView_separator];
  OUTLINED_FUNCTION_24();
  int v10 = *v9;
  if (*v9)
  {
    double v11 = 1.0 / v6;
    uint64_t v12 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI7BarView_separatorView];
    if (v10 == 1)
    {
      OUTLINED_FUNCTION_3_7();
      objc_msgSend(v12, sel_setFrame_, 0.0, 0.0, CGRectGetWidth(v15), v11);
    }
    else
    {
      OUTLINED_FUNCTION_3_7();
      CGFloat v13 = CGRectGetHeight(v16) - v11;
      OUTLINED_FUNCTION_3_7();
      objc_msgSend(v12, sel_setFrame_, 0.0, v13, CGRectGetWidth(v17), v11);
    }
    objc_msgSend(v12, sel_setHidden_, 0);
  }
  else
  {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5TeaUI7BarView_separatorView], sel_setHidden_, 1);
  }
}

id BarView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BarView()
{
  return self;
}

uint64_t sub_1B5FC2BC8(uint64_t result)
{
  if (v1 != result)
  {
    sub_1B5F7E944();
    swift_allocError();
    *(void *)uint64_t v2 = 0xD00000000000001ALL;
    *(void *)(v2 + 8) = 0x80000001B61E6770;
    *(unsigned char *)(v2 + 16) = 1;
    return swift_willThrow();
  }
  return result;
}

uint64_t BlueprintPipeline.delegate.getter()
{
  swift_beginAccess();
  return MEMORY[0x1BA9B1EC0](v0 + 16);
}

uint64_t BlueprintPipeline.delegate.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_17();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*BlueprintPipeline.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  OUTLINED_FUNCTION_17();
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1BA9B1EC0](v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  long long v3[3] = v4;
  v3[4] = v5;
  return sub_1B5E41DD4;
}

uint64_t BlueprintPipeline.blueprintProvider.getter()
{
  OUTLINED_FUNCTION_3_0();
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1B5FC2DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B61B0C90();
}

uint64_t sub_1B5FC2E3C()
{
  swift_retain();
  sub_1B61B0CB0();
  swift_release();
  return v1;
}

uint64_t sub_1B5FC2E94()
{
  return swift_release();
}

#error "1B5FC2F4C: call analysis failed (funcsize=26)"

void BlueprintPipeline.init(blueprintProvider:integrator:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  OUTLINED_FUNCTION_24_17();
  a27 = v29;
  a28 = v30;
  int v31 = v28;
  uint64_t v63 = v32;
  uint64_t v64 = v33;
  uint64_t v35 = v34;
  uint64_t v36 = *v28;
  v28[3] = 0;
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_10_0();
  uint64_t v38 = *(void *)(v37 + 136);
  type metadata accessor for BlueprintPipelineQueues();
  swift_allocObject();
  *(void *)((char *)v28 + v38) = sub_1B6110DC4();
  OUTLINED_FUNCTION_29();
  uint64_t v40 = *(void *)(v39 + 144);
  *(void *)((char *)v31 + v40) = dispatch_group_create();
  OUTLINED_FUNCTION_29();
  uint64_t v42 = *(void *)(v41 + 168);
  uint64_t v43 = *(void *)(v36 + 96);
  uint64_t v44 = *(void *)(v36 + 80);
  uint64_t v45 = OUTLINED_FUNCTION_76_1();
  uint64_t v46 = OUTLINED_FUNCTION_76_1();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v48 = swift_getAssociatedConformanceWitness();
  a13 = v45;
  a14 = v46;
  a15 = AssociatedConformanceWitness;
  a16 = v48;
  type metadata accessor for BlueprintPipelineProcessor();
  *(void *)((char *)v31 + v42) = sub_1B61B1EF0();
  OUTLINED_FUNCTION_29();
  uint64_t v50 = *(void *)(v49 + 184);
  type metadata accessor for BlueprintPipelineToken();
  uint64_t v51 = swift_allocObject();
  *(void *)((char *)v31 + v50) = sub_1B5FC2DC4(v51, v52, v53);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_2_3();
  uint64_t v55 = v54;
  OUTLINED_FUNCTION_33();
  v56();
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_33();
  v57();
  double v58 = (void *)((char *)v31 + *(void *)(*v31 + 152));
  *double v58 = v63;
  v58[1] = v64;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v43 + 56))(&a13, v44, v43);
  OUTLINED_FUNCTION_68();
  v59();
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v35, v44);
  OUTLINED_FUNCTION_29();
  *((unsigned char *)v31 + *(void *)(v60 + 160)) = v61;
  OUTLINED_FUNCTION_29();
  *((unsigned char *)v31 + *(void *)(v62 + 176)) = 0;
  OUTLINED_FUNCTION_21_1();
}

#error "1B5FC3264: call analysis failed (funcsize=28)"

void BlueprintPipeline.init(blueprintProvider:integrator:name:useDiffableDataSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  OUTLINED_FUNCTION_24_17();
  a27 = v29;
  a28 = v30;
  int v31 = v28;
  char v66 = v32;
  uint64_t v64 = v33;
  uint64_t v65 = v34;
  uint64_t v36 = v35;
  uint64_t v37 = *v28;
  v28[3] = 0;
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_10_0();
  uint64_t v39 = *(void *)(v38 + 136);
  type metadata accessor for BlueprintPipelineQueues();
  swift_allocObject();
  *(void *)((char *)v28 + v39) = sub_1B6110DC4();
  OUTLINED_FUNCTION_29();
  uint64_t v41 = *(void *)(v40 + 144);
  *(void *)((char *)v31 + v4MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = dispatch_group_create();
  OUTLINED_FUNCTION_29();
  uint64_t v43 = *(void *)(v42 + 168);
  uint64_t v44 = *(void *)(v37 + 96);
  uint64_t v45 = *(void *)(v37 + 80);
  uint64_t v46 = OUTLINED_FUNCTION_79_4();
  uint64_t v47 = OUTLINED_FUNCTION_79_4();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v49 = swift_getAssociatedConformanceWitness();
  a13 = v46;
  a14 = v47;
  a15 = AssociatedConformanceWitness;
  a16 = v49;
  type metadata accessor for BlueprintPipelineProcessor();
  *(void *)((char *)v31 + v43) = sub_1B61B1EF0();
  OUTLINED_FUNCTION_29();
  uint64_t v51 = *(void *)(v50 + 184);
  type metadata accessor for BlueprintPipelineToken();
  uint64_t v52 = swift_allocObject();
  *(void *)((char *)v31 + v5MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = sub_1B5FC2DC4(v52, v53, v54);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_2_3();
  uint64_t v56 = v55;
  OUTLINED_FUNCTION_33();
  v57();
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_33();
  v58();
  double v59 = (void *)((char *)v31 + *(void *)(*v31 + 152));
  *double v59 = v64;
  v59[1] = v65;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v44 + 56))(&a13, v45, v44);
  OUTLINED_FUNCTION_68();
  v60();
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v36, v45);
  OUTLINED_FUNCTION_29();
  *((unsigned char *)v31 + *(void *)(v61 + 160)) = v62;
  OUTLINED_FUNCTION_29();
  *((unsigned char *)v31 + *(void *)(v63 + 176)) = v66;
  OUTLINED_FUNCTION_21_1();
}

Swift::Void __swiftcall BlueprintPipeline.cancel()()
{
  type metadata accessor for BlueprintPipelineToken();
  swift_allocObject();
  sub_1B5FC2E94();
  OUTLINED_FUNCTION_10_0();
  uint64_t v2 = *(void *)(v0 + *(void *)(v1 + 136));
  id v3 = *(id *)(v2 + 24);
  sub_1B6110CCC(v3);

  uint64_t v4 = *(id *)(v2 + 16);
  sub_1B6110CCC(v4);
}

uint64_t BlueprintPipeline.add(processor:)()
{
  return swift_endAccess();
}

uint64_t BlueprintPipeline.modifyPromise<A>(with:)()
{
  return sub_1B61B0E00();
}

uint64_t sub_1B5FC36EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  CGRect v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = a3;
  v15[5] = a4;
  swift_retain();
  swift_retain();
  BlueprintPipeline.modify<A>(with:completion:)(a6, (uint64_t)sub_1B5FD1140, (uint64_t)v15, a7, a8, v16, v17, v18, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, vars0,
    vars8);
  return swift_release();
}

void BlueprintPipeline.modify<A>(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_83();
  a19 = v21;
  a20 = v22;
  uint64_t v23 = v20;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v204 = v28;
  uint64_t v205 = v29;
  uint64_t v31 = v30;
  OUTLINED_FUNCTION_0_14();
  uint64_t v33 = v32;
  OUTLINED_FUNCTION_0_13();
  uint64_t v211 = v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v208 = v36;
  v209 = (char *)&v187 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v206 = sub_1B61B1E20();
  OUTLINED_FUNCTION_0_13();
  uint64_t v38 = v37;
  MEMORY[0x1F4188790](v39);
  uint64_t v202 = (uint64_t)&v187 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = v25 + 48;
  uint64_t v42 = *(uint64_t (**)(void))(v25 + 48);
  OUTLINED_FUNCTION_39_10();
  uint64_t v43 = v42();
  sub_1B5E75B00(0, v43);
  char v45 = v44;
  swift_bridgeObjectRelease();
  v210 = v33;
  v212 = v23;
  uint64_t v207 = v25;
  uint64_t v203 = v27;
  if ((v45 & 1) != 0
    && objc_msgSend(self, sel_isMainThread)
    && (sub_1B61B1E10(),
        sub_1B61B2BE0(),
        uint64_t v198 = *(void *)(v38 + 8),
        uint64_t v199 = v38 + 8,
        uint64_t v46 = v210,
        OUTLINED_FUNCTION_68(),
        v47(),
        (sub_1B61B1D80() & 1) != 0))
  {
    uint64_t v48 = (uint64_t *)((char *)v23 + *(void *)(*v23 + 152));
    uint64_t v50 = *v48;
    uint64_t v49 = (void (*)(char *, uint64_t, uint64_t))v48[1];
    uint64_t v51 = *(uint64_t *)((char *)v23 + *(void *)(*v23 + 136));
    uint64_t v52 = *(void **)(v51 + 32);
    LOWORD(v213) = 0;
    uint64_t v214 = v50;
    uint64_t v215 = (uint64_t)v49;
    v197 = v49;
    uint64_t v216 = (uint64_t)v52;
    __int16 v217 = 257;
    sub_1B61B1F70();
    id v196 = v52;
    uint64_t v53 = (void *)sub_1B5FC496C(v31, (char *)&v213);
    id v201 = v53;
    dispatch_semaphore_t v193 = dispatch_semaphore_create(0);
    v192 = &v187;
    uint64_t v54 = *(void **)(v51 + 16);
    MEMORY[0x1F4188790](v193);
    v191 = &v187 - 8;
    *(&v187 - 6) = v27;
    *(&v187 - 5) = v25;
    *(&v187 - 4) = (uint64_t)v53;
    *(&v187 - 3) = (uint64_t)v23;
    *(&v187 - 2) = v31;
    uint64_t v195 = v46[12];
    uint64_t v55 = v46[10];
    OUTLINED_FUNCTION_80_2();
    uint64_t v56 = v25;
    OUTLINED_FUNCTION_80_2();
    uint64_t v194 = v55;
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    id v57 = v54;
    OUTLINED_FUNCTION_74_4();
    type metadata accessor for BlueprintModifierResult();
    sub_1B61B0E70();

    double v58 = (void *)OUTLINED_FUNCTION_2_25();
    v58[2] = v27;
    v58[3] = v25;
    v58[4] = v201;
    swift_retain();
    OUTLINED_FUNCTION_74_4();
    type metadata accessor for BlueprintPipelineProcessingResult();
    double v59 = (void *)sub_1B61B0C80();
    OUTLINED_FUNCTION_54_9();
    uint64_t v60 = v210;
    sub_1B61B0D20();
    swift_release();
    swift_release();

    uint64_t v61 = (void *)OUTLINED_FUNCTION_2_25();
    uint64_t v62 = v203;
    v61[2] = v203;
    v61[3] = v25;
    dispatch_semaphore_t v63 = v193;
    v61[4] = v193;
    dispatch_semaphore_t v193 = v63;
    uint64_t v64 = (void *)sub_1B61B0C80();
    OUTLINED_FUNCTION_54_9();
    sub_1B61B0DC0();
    swift_release();
    swift_release();

    uint64_t v65 = (void *)OUTLINED_FUNCTION_2_25();
    v65[2] = v62;
    v65[3] = v25;
    id v66 = v201;
    v65[4] = v201;
    id v67 = v66;
    swift_retain();
    uint64_t v68 = (void *)sub_1B61B0C80();
    OUTLINED_FUNCTION_54_9();
    sub_1B61B0D20();
    swift_release();
    swift_release();

    uint64_t v69 = (void *)OUTLINED_FUNCTION_2_25();
    v69[2] = v62;
    v69[3] = v56;
    v69[4] = v67;
    swift_retain();
    uint64_t v70 = (void *)sub_1B61B0C80();
    sub_1B61B0DC0();
    swift_release();
    swift_release();

    uint64_t v71 = (void *)sub_1B61B01B0();
    uint64_t v72 = (void *)swift_allocObject();
    uint64_t v73 = v62;
    void v72[2] = v62;
    v72[3] = v56;
    uint64_t v74 = v204;
    uint64_t v75 = v205;
    v72[4] = v204;
    v72[5] = v75;
    sub_1B5E4DC4C(v74);
    v192 = (uint64_t *)sub_1B61B0D30();
    swift_release();

    swift_release();
    uint64_t v76 = (void *)sub_1B61B01B0();
    uint64_t v77 = v211;
    uint64_t v78 = v209;
    uint64_t v79 = v73;
    OUTLINED_FUNCTION_33();
    v80();
    unint64_t v81 = (*(unsigned __int8 *)(v77 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
    unint64_t v82 = (v208 + v81 + 7) & 0xFFFFFFFFFFFFFFF8;
    char v83 = (char *)swift_allocObject();
    *((void *)v83 + 2) = v194;
    *((void *)v83 + 3) = v60[11];
    *((void *)v83 + 4) = v79;
    *((void *)v83 + 5) = v195;
    uint64_t v84 = v207;
    *((void *)v83 + 6) = v60[13];
    *((void *)v83 + 7) = v84;
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(&v83[v81], v78, v79);
    char v85 = (uint64_t *)&v83[v82];
    *char v85 = v74;
    v85[1] = v75;
    sub_1B5E4DC4C(v74);
    OUTLINED_FUNCTION_37_15();
    sub_1B61B0D60();
    swift_release();
    swift_release();

    swift_release();
    uint64_t v86 = v202;
    sub_1B61B1E00();
    dispatch_semaphore_t v87 = v193;
    sub_1B61B2CE0();
    swift_release();

    swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t))v198)(v86, v206);
  }
  else
  {
    OUTLINED_FUNCTION_39_10();
    uint64_t v88 = v42();
    sub_1B5E75B00(1u, v88);
    LODWORD(v202) = v89;
    swift_bridgeObjectRelease();
    uint64_t v90 = *v23;
    uint64_t v91 = (uint64_t)v23 + *(void *)(*v23 + 152);
    uint64_t v92 = v27;
    uint64_t v93 = *(void *)(v91 + 8);
    v197 = *(void (**)(char *, uint64_t, uint64_t))v91;
    uint64_t v198 = *(uint64_t *)((char *)v23 + *(void *)(v90 + 136));
    uint64_t v94 = *(void **)(v198 + 32);
    uint64_t v206 = v93;
    sub_1B61B1F70();
    id v95 = v94;
    OUTLINED_FUNCTION_39_10();
    uint64_t v96 = v42();
    sub_1B5E75B00(3u, v96);
    char v98 = v97;
    swift_bridgeObjectRelease();
    uint64_t v99 = v31;
    uint64_t v100 = v92;
    uint64_t v101 = v25;
    OUTLINED_FUNCTION_39_10();
    uint64_t v102 = v42();
    sub_1B5E75B00(4u, v102);
    swift_bridgeObjectRelease();
    char v103 = v98 & 1;
    uint64_t v104 = v211;
    uint64_t v200 = v99;
    id v201 = v95;
    uint64_t v199 = v211 + 16;
    if (v202)
    {
      uint64_t v105 = OUTLINED_FUNCTION_27_14(v103);
      uint64_t v106 = v101;
      uint64_t v202 = sub_1B5FC496C(v105, v107);
      id v190 = *(id *)(v198 + 24);
      uint64_t v198 = *(void *)(v104 + 16);
      uint64_t v108 = v209;
      ((void (*)(char *, uint64_t, uint64_t))v198)(v209, v41, v92);
      OUTLINED_FUNCTION_42_14((uint64_t)&a16);
      v197 = v109;
      uint64_t v110 = (void *)swift_allocObject();
      uint64_t v111 = v210;
      id v112 = (uint64_t *)v210[10];
      v110[2] = v112;
      uint64_t v113 = v112;
      uint64_t v195 = v111[11];
      v110[3] = v195;
      v110[4] = v92;
      uint64_t v114 = (uint64_t *)v111[12];
      v110[5] = v114;
      id v196 = (id)v111[13];
      v110[6] = v196;
      v110[7] = v106;
      uint64_t v115 = OUTLINED_FUNCTION_67_2((uint64_t)v110);
      dispatch_semaphore_t v193 = v116;
      ((void (*)(uint64_t, char *, uint64_t))v116)(v115, v108, v92);
      OUTLINED_FUNCTION_57_8();
      v192 = v114;
      OUTLINED_FUNCTION_57_8();
      v191 = v113;
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      id v117 = v190;
      uint64_t v118 = v202;
      swift_retain();
      OUTLINED_FUNCTION_64_4();
      type metadata accessor for BlueprintModifierResult();
      sub_1B61B0E60();

      swift_release();
      uint64_t v119 = (void *)OUTLINED_FUNCTION_2_25();
      v119[2] = v92;
      uint64_t v120 = v207;
      v119[3] = v207;
      v119[4] = v118;
      swift_retain();
      OUTLINED_FUNCTION_64_4();
      type metadata accessor for BlueprintPipelineProcessingResult();
      uint64_t v121 = (void *)sub_1B61B0C80();
      sub_1B61B0D20();
      swift_release();
      swift_release();

      uint64_t v122 = (void *)OUTLINED_FUNCTION_2_25();
      uint64_t v123 = v203;
      v122[2] = v203;
      v122[3] = v120;
      uint64_t v124 = v202;
      v122[4] = v202;
      uint64_t v125 = v124;
      swift_retain();
      uint64_t v126 = (void *)sub_1B61B0C80();
      sub_1B61B0D20();
      swift_release();
      swift_release();

      uint64_t v127 = (void *)OUTLINED_FUNCTION_2_25();
      v127[2] = v123;
      v127[3] = v120;
      v127[4] = v125;
      swift_retain();
      uint64_t v128 = (void *)sub_1B61B0C80();
      sub_1B61B0DC0();
      swift_release();
      swift_release();

      uint64_t v129 = (void *)sub_1B61B01B0();
      uint64_t v130 = (void *)swift_allocObject();
      uint64_t v131 = v123;
      v130[2] = v123;
      void v130[3] = v120;
      uint64_t v133 = v204;
      uint64_t v132 = v205;
      v130[4] = v204;
      v130[5] = v132;
      sub_1B5E4DC4C(v133);
      OUTLINED_FUNCTION_37_15();
      sub_1B61B0D30();
      swift_release();

      swift_release();
      uint64_t v134 = (void *)sub_1B61B01B0();
      ((void (*)(char *, uint64_t, uint64_t))v198)(v209, v200, v131);
      OUTLINED_FUNCTION_41_17();
      unint64_t v136 = v135 & 0xFFFFFFFFFFFFFFF8;
      uint64_t v137 = (void *)swift_allocObject();
      uint64_t v138 = v195;
      v137[2] = v191;
      v137[3] = v138;
      uint64_t v139 = v192;
      v137[4] = v131;
      v137[5] = v139;
      uint64_t v140 = v207;
      v137[6] = v196;
      v137[7] = v140;
      OUTLINED_FUNCTION_73_3();
      v141();
      uint64_t v142 = (void *)((char *)v137 + v136);
      *uint64_t v142 = v133;
      v142[1] = v132;
      sub_1B5E4DC4C(v133);
    }
    else
    {
      uint64_t v143 = OUTLINED_FUNCTION_27_14(v103);
      uint64_t v144 = v101;
      uint64_t v146 = sub_1B5FC496C(v143, v145);
      uint64_t v147 = v198;
      id v189 = *(id *)(v198 + 16);
      v197 = *(void (**)(char *, uint64_t, uint64_t))(v104 + 16);
      uint64_t v148 = v209;
      v197(v209, v41, v100);
      OUTLINED_FUNCTION_42_14((uint64_t)&a15);
      id v196 = v149;
      long long v150 = (void *)swift_allocObject();
      uint64_t v151 = v210;
      uint64_t v152 = (void *)v210[10];
      v150[2] = v152;
      uint64_t v153 = v152;
      uint64_t v194 = v151[11];
      v150[3] = v194;
      v150[4] = v100;
      uint64_t v154 = (uint64_t *)v151[12];
      v150[5] = v154;
      v191 = v154;
      uint64_t v195 = v151[13];
      v150[6] = v195;
      v150[7] = v144;
      uint64_t v155 = OUTLINED_FUNCTION_67_2((uint64_t)v150);
      v192 = v156;
      ((void (*)(uint64_t, char *))v156)(v155, v148);
      uint64_t v157 = v153;
      uint64_t v158 = OUTLINED_FUNCTION_57_8();
      uint64_t v159 = OUTLINED_FUNCTION_57_8();
      id v190 = v157;
      uint64_t v188 = v158;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v161 = swift_getAssociatedConformanceWitness();
      id v162 = v189;
      swift_retain();
      uint64_t v213 = v158;
      uint64_t v214 = v159;
      uint64_t v215 = AssociatedConformanceWitness;
      uint64_t v216 = v161;
      type metadata accessor for BlueprintModifierResult();
      sub_1B61B0E60();

      swift_release();
      uint64_t v163 = *(void **)(v147 + 24);
      uint64_t v164 = (void *)OUTLINED_FUNCTION_2_25();
      uint64_t v165 = v203;
      uint64_t v166 = v207;
      v164[2] = v203;
      v164[3] = v166;
      uint64_t v202 = v146;
      v164[4] = v146;
      swift_retain();
      id v167 = v163;
      uint64_t v213 = v188;
      uint64_t v214 = v159;
      uint64_t v215 = AssociatedConformanceWitness;
      uint64_t v216 = v161;
      type metadata accessor for BlueprintPipelineProcessingResult();
      sub_1B61B0D20();
      swift_release();

      swift_release();
      v168 = (void *)OUTLINED_FUNCTION_2_25();
      v168[2] = v165;
      v168[3] = v166;
      uint64_t v169 = v166;
      uint64_t v170 = v202;
      v168[4] = v202;
      uint64_t v171 = v170;
      swift_retain();
      uint64_t v172 = (void *)sub_1B61B0C80();
      OUTLINED_FUNCTION_54_9();
      sub_1B61B0D20();
      swift_release();
      swift_release();

      uint64_t v173 = (void *)OUTLINED_FUNCTION_2_25();
      v173[2] = v165;
      v173[3] = v169;
      v173[4] = v171;
      swift_retain();
      uint64_t v174 = (void *)sub_1B61B0C80();
      OUTLINED_FUNCTION_54_9();
      sub_1B61B0DC0();
      swift_release();
      swift_release();

      uint64_t v175 = (void *)sub_1B61B01B0();
      v176 = (void *)swift_allocObject();
      v176[2] = v165;
      v176[3] = v169;
      uint64_t v178 = v204;
      uint64_t v177 = v205;
      v176[4] = v204;
      v176[5] = v177;
      sub_1B5E4DC4C(v178);
      sub_1B61B0D30();
      swift_release();

      swift_release();
      uint64_t v134 = (void *)sub_1B61B01B0();
      v197(v209, v200, v165);
      OUTLINED_FUNCTION_41_17();
      unint64_t v180 = v179 & 0xFFFFFFFFFFFFFFF8;
      uint64_t v181 = (void *)swift_allocObject();
      uint64_t v182 = v194;
      v181[2] = v190;
      v181[3] = v182;
      uint64_t v183 = v191;
      v181[4] = v165;
      v181[5] = v183;
      uint64_t v184 = v207;
      v181[6] = v195;
      v181[7] = v184;
      OUTLINED_FUNCTION_73_3();
      v185();
      v186 = (void *)((char *)v181 + v180);
      uint64_t *v186 = v178;
      v186[1] = v177;
      sub_1B5E4DC4C(v178);
    }
    OUTLINED_FUNCTION_37_15();
    sub_1B61B0D60();

    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
  }
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5FC496C(uint64_t a1, char *a2)
{
  char v3 = *a2;
  char v4 = a2[1];
  uint64_t v5 = *((void *)a2 + 1);
  char v6 = a2[32];
  char v7 = a2[33];
  uint64_t v8 = sub_1B61B36E0();
  v12[0] = v3;
  v12[1] = v4;
  uint64_t v13 = v5;
  long long v14 = *((_OWORD *)a2 + 1);
  char v15 = v6;
  char v16 = v7;
  uint64_t v10 = sub_1B5FC5EF0(v8, v9, (uint64_t)v12);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1B5FC4A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_1B5FC2E3C();
  sub_1B5FC2BC8(v11);
  uint64_t result = swift_release();
  if (!v5)
  {
    uint64_t v13 = *(void *)(a2 + *(void *)(*(void *)a2 + 136));
    long long v14 = *(id *)(v13 + 16);
    sub_1B6110D58(v14);

    char v15 = *(id *)(v13 + 24);
    sub_1B6110D58(v15);

    return sub_1B5FC4AF4(a3, a1, a4, a5);
  }
  return result;
}

uint64_t sub_1B5FC4AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)*v4;
  sub_1B5E6F544(1, 0, 0);
  sub_1B5FC6618();
  uint64_t v9 = (void *)swift_allocObject();
  long long v9[2] = v8[10];
  v9[3] = v8[11];
  v9[4] = a3;
  v9[5] = v8[12];
  v9[6] = v8[13];
  v9[7] = a4;
  v9[8] = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  type metadata accessor for BlueprintModifierResult();
  uint64_t v10 = (void *)sub_1B610BA64();
  uint64_t v11 = sub_1B61B0D00();
  swift_release();
  swift_release();

  return v11;
}

uint64_t sub_1B5FC4CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B5E6F544(3, 0, 0);
  sub_1B5FC6C7C(v4, a1, a2, a3, a4);
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  type metadata accessor for BlueprintPipelineProcessingResult();
  uint64_t v9 = (void *)sub_1B61B0C80();
  uint64_t v10 = sub_1B61B0DB0();
  swift_release();
  swift_release();

  return v10;
}

uint64_t sub_1B5FC4E38(uint64_t (*a1)(uint64_t a1, uint64_t a2), uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B5E6F544(5, 0, 0);
  sub_1B5FC88F0(v4, a1, a3, a4);
  swift_retain();
  uint64_t v8 = (void *)sub_1B61B0C80();
  sub_1B61B0D00();
  swift_release();
  swift_release();

  swift_retain();
  uint64_t v9 = (void *)sub_1B61B0C80();
  uint64_t v10 = sub_1B61B0D50();
  swift_release();
  swift_release();

  return v10;
}

void *sub_1B5FC4F3C(void (*a1)(unsigned __int8 *), uint64_t a2, uint64_t *a3)
{
  char v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  uint64_t v6 = *a3;
  if (a1)
  {
    *(void *)uint64_t v20 = *a3;
    a1(v20);
    char v4 = (void *)*v3;
  }
  if (v6 == 1)
  {
    (*(void (**)(void))(v5[12] + 48))(v5[10]);
    sub_1B61B03F0();
    swift_release();
    char v4 = (void *)*v3;
  }
  uint64_t v7 = v4[20];
  int v8 = *((unsigned __int8 *)v3 + v7);
  uint64_t v9 = v5[12];
  uint64_t v10 = v5[10];
  uint64_t result = (*(void *(**)(unsigned __int8 *__return_ptr, uint64_t, uint64_t))(v9 + 56))(v20, v10, v9);
  int v12 = v20[0];
  *((unsigned char *)v3 + v7) = v20[0];
  if (!v8)
  {
    swift_beginAccess();
    uint64_t result = (void *)MEMORY[0x1BA9B1EC0](v3 + 2);
    if (!result) {
      return result;
    }
    uint64_t v16 = v3[3];
    uint64_t ObjectType = swift_getObjectType();
    char v19 = 0;
    char v18 = v12;
    (*(void (**)(void *, char *, char *, uint64_t, void, uint64_t, void, uint64_t, uint64_t))(v16 + 8))(v3, &v19, &v18, v10, v5[11], v9, v5[13], ObjectType, v16);
    return (void *)swift_unknownObjectRelease();
  }
  if (v8 == 1)
  {
    if (v12 == 2)
    {
      swift_beginAccess();
      uint64_t result = (void *)MEMORY[0x1BA9B1EC0](v3 + 2);
      if (result)
      {
        uint64_t v13 = v3[3];
        uint64_t v14 = swift_getObjectType();
        char v19 = 1;
        char v15 = 2;
LABEL_15:
        char v18 = v15;
        (*(void (**)(void *, char *, char *, uint64_t, void, uint64_t, void, uint64_t, uint64_t))(v13 + 8))(v3, &v19, &v18, v10, v5[11], v9, v5[13], v14, v13);
        return (void *)swift_unknownObjectRelease();
      }
    }
  }
  else if (v12 == 1)
  {
    swift_beginAccess();
    uint64_t result = (void *)MEMORY[0x1BA9B1EC0](v3 + 2);
    if (result)
    {
      uint64_t v13 = v3[3];
      uint64_t v14 = swift_getObjectType();
      char v19 = 2;
      char v15 = 1;
      goto LABEL_15;
    }
  }
  return result;
}

uint64_t sub_1B5FC51B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_1B5FC2E3C();
  sub_1B5FC2BC8(v11);
  uint64_t result = swift_release();
  if (!v5)
  {
    uint64_t v13 = *(id *)(*(void *)(a1 + *(void *)(*(void *)a1 + 136)) + 24);
    sub_1B6110D58(v13);

    return sub_1B5FC4AF4(a3, a2, a4, a5);
  }
  return result;
}

uint64_t sub_1B5FC5278(uint64_t a1)
{
  uint64_t v2 = sub_1B5FC2E3C();
  sub_1B5FC2BC8(v2);
  swift_release();
  char v3 = *(id *)(*(void *)(a1 + *(void *)(*(void *)a1 + 136)) + 24);
  sub_1B6110CCC(v3);

  return sub_1B5E945A0();
}

void sub_1B5FC534C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v13 = a1;
  sub_1B5E001A8(0, (unint64_t *)&qword_1EB647DB0);
  if (!swift_dynamicCast()) {
    goto LABEL_6;
  }
  if (v27 != 1)
  {
    sub_1B5F8A14C(v25, v26, v27);
    goto LABEL_6;
  }
  sub_1B5F8A14C(v25, v26, v27);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a7 + 48))(a6, a7);
  sub_1B5E75B00(2u, v14);
  char v16 = v15;
  swift_bridgeObjectRelease();
  if (v16)
  {
LABEL_6:

    id v21 = a1;
    uint64_t v22 = (void (*)(unsigned __int8 *))OUTLINED_FUNCTION_17();
    sub_1B5FC4F3C(v22, v23, v24);
    uint64_t v20 = a1;
    goto LABEL_7;
  }
  BlueprintPipeline.modify<A>(with:completion:)(a3, a4, a5, a6, a7, v17, v18, v19, v25, v26, v27, (uint64_t)a1, v30, v31, v32, v33, v34, v35, v36,
    v37);
  uint64_t v20 = v29;
LABEL_7:
}

uint64_t sub_1B5FC5494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_1B5FC2E3C();
  sub_1B5FC2BC8(v11);
  uint64_t result = swift_release();
  if (!v5)
  {
    id v13 = *(id *)(*(void *)(a1 + *(void *)(*(void *)a1 + 136)) + 16);
    sub_1B6110D58(v13);

    return sub_1B5FC4AF4(a3, a2, a4, a5);
  }
  return result;
}

uint64_t sub_1B5FC555C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1B5FC2E3C();
  sub_1B5FC2BC8(v7);
  uint64_t result = swift_release();
  if (!v3)
  {
    uint64_t v9 = *(id *)(*(void *)(a2 + *(void *)(*(void *)a2 + 136)) + 24);
    sub_1B6110D58(v9);

    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v11 = swift_getAssociatedTypeWitness();
    return sub_1B5FC4CE8(a1, a3, AssociatedTypeWitness, v11);
  }
  return result;
}

uint64_t sub_1B5FC5688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = sub_1B5FC2E3C();
  sub_1B5FC2BC8(v10);
  uint64_t result = swift_release();
  if (!v6)
  {
    uint64_t v12 = OUTLINED_FUNCTION_60_6();
    uint64_t v13 = OUTLINED_FUNCTION_60_6();
    return a6(a1, a3, v12, v13);
  }
  return result;
}

uint64_t sub_1B5FC5778(uint64_t a1)
{
  uint64_t v2 = sub_1B5FC2E3C();
  sub_1B5FC2BC8(v2);
  swift_release();
  uint64_t v3 = *(void *)(a1 + *(void *)(*(void *)a1 + 136));
  char v4 = *(id *)(v3 + 24);
  sub_1B6110CCC(v4);

  uint64_t v5 = *(id *)(v3 + 16);
  sub_1B6110CCC(v5);

  return sub_1B5E945A0();
}

uint64_t BlueprintPipeline.relayoutPromise()()
{
  return sub_1B61B0E00();
}

uint64_t sub_1B5FC58C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  swift_retain();
  swift_retain();
  BlueprintPipeline.relayout(completion:)();
  return swift_release();
}

void sub_1B5FC5964(void **a1, void (*a2)(char *), uint64_t a3, void (*a4)(void *))
{
  char v4 = *a1;
  if (!*a1)
  {
    char v9 = 0;
    uint64_t v5 = &v9;
    goto LABEL_5;
  }
  if (v4 == (void *)1)
  {
    char v8 = 1;
    uint64_t v5 = &v8;
LABEL_5:
    a2(v5);
    return;
  }
  id v7 = v4;
  a4(v4);
  sub_1B5FD0FE4(v4);
}

uint64_t BlueprintPipeline.relayout(completion:)()
{
  type metadata accessor for BlueprintBookmark();
  OUTLINED_FUNCTION_19_1();
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_17();
  BlueprintPipeline.relayout(bookmark:completion:)();
  return sub_1B5E44488((uint64_t)v2);
}

void BlueprintPipeline.relayout(bookmark:completion:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v35 = v1;
  uint64_t v36 = v2;
  uint64_t v4 = v3;
  uint64_t v34 = (void *)*v0;
  uint64_t v5 = v34;
  uint64_t v6 = type metadata accessor for BlueprintBookmark();
  uint64_t v7 = OUTLINED_FUNCTION_3(v6);
  uint64_t v9 = v8;
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v12 = (void *)((char *)v0 + v34[19]);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  uint64_t v15 = *(void *)((char *)v0 + v34[17]);
  char v16 = *(void **)(v15 + 32);
  LOWORD(v39) = 257;
  uint64_t v40 = v14;
  uint64_t v41 = v13;
  uint64_t v38 = v13;
  uint64_t v42 = (uint64_t)v16;
  __int16 v43 = 256;
  sub_1B61B1F70();
  id v37 = v16;
  uint64_t v17 = sub_1B5FC5EF0(0x74756F79616C6572, 0xE800000000000000, (uint64_t)&v39);
  uint64_t v18 = *(void **)(v15 + 24);
  sub_1B5EB049C(v4, (uint64_t)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v19 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v20 = (void *)swift_allocObject();
  long long v20[2] = v5[10];
  v20[3] = v5[11];
  v20[4] = v5[12];
  v20[5] = v5[13];
  v20[6] = v17;
  sub_1B5FCE11C((uint64_t)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v20 + v19);
  uint64_t v21 = OUTLINED_FUNCTION_78_4();
  uint64_t v22 = OUTLINED_FUNCTION_78_4();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v24 = swift_getAssociatedConformanceWitness();
  id v25 = v18;
  swift_retain();
  uint64_t v39 = v21;
  uint64_t v40 = v22;
  uint64_t v41 = AssociatedConformanceWitness;
  uint64_t v42 = v24;
  type metadata accessor for BlueprintPipelineProcessingResult();
  sub_1B61B0E60();

  swift_release();
  swift_retain();
  uint64_t v26 = (void *)sub_1B61B0C80();
  sub_1B61B0D20();
  swift_release();
  swift_release();

  swift_retain();
  uint64_t v27 = (void *)sub_1B61B0C80();
  sub_1B61B0DC0();
  swift_release();
  swift_release();

  uint64_t v28 = (void *)sub_1B61B01B0();
  uint64_t v29 = swift_allocObject();
  uint64_t v31 = v35;
  uint64_t v30 = v36;
  *(void *)(v29 + 16) = v35;
  *(void *)(v29 + 24) = v30;
  sub_1B5E4DC4C(v31);
  OUTLINED_FUNCTION_86();
  sub_1B61B0D30();
  swift_release();

  swift_release();
  uint64_t v32 = (void *)sub_1B61B01B0();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v31;
  *(void *)(v33 + 24) = v30;
  sub_1B5E4DC4C(v31);
  OUTLINED_FUNCTION_86();
  sub_1B61B0D60();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5FC5EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  char v7 = *(unsigned char *)(a3 + 1);
  uint64_t v9 = *(void *)(a3 + 8);
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v10 = *(void **)(a3 + 24);
  char v11 = *(unsigned char *)(a3 + 32);
  char v22 = *(unsigned char *)(a3 + 33);
  uint64_t v12 = (uint64_t *)(v4 + *(void *)(*(void *)v4 + 152));
  uint64_t v13 = v12[1];
  uint64_t v21 = *v12;
  char v24 = *(unsigned char *)a3;
  char v6 = v24;
  char v25 = v7;
  uint64_t v26 = v9;
  uint64_t v27 = v8;
  id v28 = v10;
  char v29 = v11;
  char v30 = v22;
  type metadata accessor for BlueprintPipelineRecorder();
  swift_allocObject();
  sub_1B61B1F70();
  sub_1B61B1F70();
  sub_1B61B1F70();
  id v14 = v10;
  uint64_t v15 = sub_1B5E6EB68(v21, v13, a1, a2, &v24);
  char v24 = v6;
  char v25 = v7;
  uint64_t v26 = v9;
  uint64_t v27 = v8;
  id v28 = v14;
  char v29 = v11;
  char v30 = v22;
  char v16 = *(void **)(v4 + *(void *)(*(void *)v4 + 144));
  sub_1B61B1F70();
  id v17 = v14;
  uint64_t v18 = v16;
  uint64_t v19 = sub_1B5FC2E3C();
  type metadata accessor for BlueprintPipelineContext();
  swift_allocObject();
  return sub_1B5E944E8(&v24, v15, v18, v19);
}

uint64_t sub_1B5FC606C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v8 = swift_getAssociatedConformanceWitness();
  uint64_t v22 = AssociatedTypeWitness;
  uint64_t v25 = AssociatedTypeWitness;
  uint64_t v26 = v6;
  uint64_t v19 = AssociatedConformanceWitness;
  uint64_t v27 = AssociatedConformanceWitness;
  uint64_t v28 = v8;
  uint64_t v9 = type metadata accessor for BlueprintModifierResult();
  uint64_t v20 = *(void *)(v9 - 8);
  uint64_t v21 = v9;
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v19 - v10;
  uint64_t v24 = a2;
  uint64_t v12 = sub_1B5FC2E3C();
  uint64_t v13 = v29;
  sub_1B5FC2BC8(v12);
  swift_release();
  if (!v13)
  {
    id v14 = *(id *)(*(void *)(a1 + *(void *)(*(void *)a1 + 136)) + 24);
    sub_1B6110D58(v14);

    uint64_t v15 = v22;
    uint64_t v25 = v22;
    uint64_t v26 = v6;
    uint64_t v27 = v19;
    uint64_t v28 = v8;
    type metadata accessor for Blueprint();
    type metadata accessor for BlueprintBookmark();
    uint64_t v16 = (uint64_t)&v11[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    BlueprintProviderType.blueprint.getter();
    sub_1B5EB049C(v23, v16);
    uint64_t v17 = v21;
    swift_storeEnumTagMultiPayload();
    a1 = sub_1B5FC4CE8((uint64_t)v11, v24, v15, v6);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v17);
  }
  return a1;
}

uint64_t sub_1B5FC632C(uint64_t (*a1)(uint64_t a1, uint64_t a2), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B5FC2E3C();
  sub_1B5FC2BC8(v6);
  uint64_t result = swift_release();
  if (!v3)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v9 = swift_getAssociatedTypeWitness();
    return sub_1B5FC4E38(a1, a3, AssociatedTypeWitness, v9);
  }
  return result;
}

void sub_1B5FC642C(void *a1, uint64_t a2, void (*a3)(unsigned __int8 *), uint64_t a4)
{
  uint64_t v8 = a1;
  id v7 = a1;
  sub_1B5FC4F3C(a3, a4, (uint64_t *)&v8);
}

uint64_t BlueprintPipeline.deinit()
{
  sub_1B5E437C4(v0 + 16);
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(void))(v1 + 8))();
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(void))(v2 + 8))();
  swift_release();
  OUTLINED_FUNCTION_10_0();

  OUTLINED_FUNCTION_10_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_10_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_10_0();
  swift_release();
  return v0;
}

uint64_t BlueprintPipeline.__deallocating_deinit()
{
  BlueprintPipeline.deinit();
  OUTLINED_FUNCTION_0_14();
  return swift_deallocClassInstance();
}

uint64_t sub_1B5FC6618()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintModifierResult();
  sub_1B61B0E10();
  swift_allocObject();
  swift_weakInit();
  uint64_t v0 = sub_1B61B0DF0();
  swift_release();
  return v0;
}

void sub_1B5FC67D4(uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v28 = a1;
  uint64_t v29 = a8;
  uint64_t v26 = a4;
  uint64_t v27 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v31 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v33 = swift_getAssociatedConformanceWitness();
  uint64_t v15 = type metadata accessor for Blueprint();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v26 - v17;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v26 = a6;
    uint64_t v27 = (void (*)(void *))v15;
    BlueprintProviderType.blueprint.getter();
    uint64_t v19 = (void *)swift_allocObject();
    uint64_t v20 = a2;
    uint64_t v21 = v19;
    uint64_t v22 = v29;
    v19[2] = a7;
    v19[3] = v22;
    v19[4] = a9;
    v19[5] = a10;
    void v19[6] = a11;
    v19[7] = a12;
    v19[8] = v28;
    v19[9] = v20;
    uint64_t v23 = *(void (**)(char *, uint64_t (*)(), void *, uint64_t, uint64_t))(a12 + 56);
    swift_retain();
    v23(v18, sub_1B5FD1114, v21, a9, a12);
    swift_release();
    swift_release();
    (*(void (**)(char *, void (*)(void *)))(v16 + 8))(v18, v27);
  }
  else
  {
    sub_1B5F7E944();
    uint64_t v24 = (void *)swift_allocError();
    *(void *)uint64_t v25 = 0;
    *(void *)(v25 + 8) = 0;
    *(unsigned char *)(v25 + 16) = 2;
    v27(v24);
  }
}

uint64_t sub_1B5FC6A7C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v10 = swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for BlueprintModifierResult();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&AssociatedTypeWitness - v4;
  uint64_t AssociatedTypeWitness = 0;
  uint64_t v8 = 0xE000000000000000;
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_getWitnessTable();
  sub_1B61B3720();
  sub_1B5E6F544(2, AssociatedTypeWitness, v8);
  swift_bridgeObjectRelease();
  sub_1B61B0E10();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  return sub_1B61B0D90();
}

uint64_t sub_1B5FC6C7C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v55 = a3;
  uint64_t v65 = a2;
  uint64_t v57 = *a1;
  uint64_t v7 = *(void *)(v57 + 96);
  uint64_t v8 = *(void *)(v57 + 80);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v58 = v7;
  uint64_t v56 = v8;
  uint64_t v10 = swift_getAssociatedConformanceWitness();
  uint64_t v64 = type metadata accessor for BlueprintPipelineProcessingResult();
  MEMORY[0x1F4188790](v64);
  uint64_t v53 = (uint64_t)&v46 - v11;
  uint64_t v66 = a4;
  uint64_t v67 = a5;
  uint64_t v68 = AssociatedConformanceWitness;
  uint64_t v69 = v10;
  uint64_t v12 = type metadata accessor for BlueprintModifierResult();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v61 = v12;
  uint64_t v62 = v13;
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v12);
  uint64_t v60 = (char *)&v46 - v15;
  uint64_t v66 = a4;
  uint64_t v67 = a5;
  uint64_t v54 = AssociatedConformanceWitness;
  uint64_t v68 = AssociatedConformanceWitness;
  uint64_t v69 = v10;
  uint64_t v16 = type metadata accessor for Blueprint();
  uint64_t v17 = sub_1B61B2F80();
  uint64_t v59 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v46 - v19;
  uint64_t v63 = v16;
  uint64_t v21 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v23 = (char *)&v46 - v22;
  sub_1B5FC71C4(v65, a4, a5, (uint64_t)v20);
  uint64_t v24 = v59;
  uint64_t v49 = v14;
  uint64_t v52 = a5;
  uint64_t v50 = v10;
  uint64_t v25 = (uint64_t)v60;
  uint64_t v26 = v63;
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v63);
  uint64_t v28 = v61;
  uint64_t v51 = a4;
  if (EnumTagSinglePayload == 1)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v20, v17);
    sub_1B61B0E10();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16))(v25, v65, v28);
    sub_1B5F731E8(v25, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], v53);
    return sub_1B61B0D90();
  }
  else
  {
    uint64_t v48 = v21;
    char v30 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    uint64_t v47 = v23;
    v30(v23, v20, v26);
    uint64_t v59 = sub_1B5FC7C94((uint64_t)v23, v55);
    uint64_t v31 = v62;
    uint64_t v32 = v28;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16))(v25, v65, v28);
    unint64_t v33 = (*(unsigned __int8 *)(v31 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    uint64_t v34 = (char *)swift_allocObject();
    uint64_t v36 = v56;
    uint64_t v35 = v57;
    *((void *)v34 + 2) = v56;
    uint64_t v37 = *(void *)(v35 + 88);
    uint64_t v39 = v51;
    uint64_t v38 = v52;
    *((void *)v34 + 3) = v37;
    *((void *)v34 + 4) = v39;
    uint64_t v40 = v32;
    uint64_t v41 = v58;
    *((void *)v34 + 5) = v38;
    *((void *)v34 + 6) = v41;
    uint64_t v42 = *(void *)(v35 + 104);
    *((void *)v34 + 7) = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(&v34[v33], v25, v40);
    __int16 v43 = (void *)swift_allocObject();
    v43[2] = v36;
    void v43[3] = v37;
    v43[4] = v39;
    v43[5] = v38;
    v43[6] = v41;
    v43[7] = v42;
    v43[8] = sub_1B5FD0C60;
    v43[9] = v34;
    sub_1B5FD0D6C();
    char v44 = (void *)sub_1B5F191E0();
    uint64_t v29 = sub_1B61B0D10();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v63);
  }
  return v29;
}

uint64_t sub_1B5FC71C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v10 = swift_getAssociatedConformanceWitness();
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v50 = AssociatedConformanceWitness;
  uint64_t v51 = (ValueMetadata *)v10;
  uint64_t v11 = type metadata accessor for BlueprintModifierResult();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v47 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v47 - v12, a1, v11);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v48 = a2;
      uint64_t v49 = a3;
      uint64_t v50 = AssociatedConformanceWitness;
      uint64_t v51 = (ValueMetadata *)v10;
      uint64_t v20 = type metadata accessor for Blueprint();
      type metadata accessor for BlueprintBookmark();
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v17 = &v13[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v22 = (uint64_t)&v13[*(int *)(TupleTypeMetadata3 + 64)];
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(a4, v13, v20);
      __swift_storeEnumTagSinglePayload(a4, 0, 1, v20);
      sub_1B5FCF540(v22);
      goto LABEL_5;
    case 3:
      uint64_t v48 = a2;
      uint64_t v49 = a3;
      uint64_t v50 = AssociatedConformanceWitness;
      uint64_t v51 = (ValueMetadata *)v10;
      uint64_t v24 = type metadata accessor for Blueprint();
      sub_1B5E001A8(255, qword_1EB6433E8);
      type metadata accessor for BlueprintBookmark();
      uint64_t v25 = swift_getTupleTypeMetadata3();
      uint64_t v26 = &v13[*(int *)(v25 + 48)];
      uint64_t v27 = (uint64_t)&v13[*(int *)(v25 + 64)];
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(a4, v13, v24);
      __swift_storeEnumTagSinglePayload(a4, 0, 1, v24);
      sub_1B5E44488(v27);
      uint64_t v28 = (uint64_t)v26;
      goto LABEL_18;
    case 4:
      uint64_t v53 = v4;
      MEMORY[0x1F4188790](EnumCaseMultiPayload);
      strcpy((char *)&v47 - 48, "blueprint diff bookmark animation ");
      uint64_t v48 = a2;
      uint64_t v49 = a3;
      uint64_t v50 = AssociatedConformanceWitness;
      uint64_t v51 = (ValueMetadata *)v10;
      uint64_t v48 = type metadata accessor for Blueprint();
      uint64_t v49 = sub_1B5E001A8(255, qword_1EB6433E8);
      uint64_t v50 = type metadata accessor for BlueprintBookmark();
      uint64_t v51 = &type metadata for BlueprintAnimation;
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v19 = &v13[TupleTypeMetadata[12]];
      char v30 = &v13[TupleTypeMetadata[16]];
      uint64_t v31 = (uint64_t)&v13[TupleTypeMetadata[20]];
      uint64_t v48 = a2;
      uint64_t v49 = a3;
      uint64_t v50 = AssociatedConformanceWitness;
      uint64_t v51 = (ValueMetadata *)v10;
      uint64_t v32 = type metadata accessor for Blueprint();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v32 - 8) + 32))(a4, v13, v32);
      __swift_storeEnumTagSinglePayload(a4, 0, 1, v32);
      sub_1B5FCF540(v31);
      uint64_t v33 = (uint64_t)v30;
      goto LABEL_16;
    case 5:
      uint64_t v48 = a2;
      uint64_t v49 = a3;
      uint64_t v50 = AssociatedConformanceWitness;
      uint64_t v51 = (ValueMetadata *)v10;
      uint64_t v34 = type metadata accessor for Blueprint();
      sub_1B5E001A8(255, qword_1EB6433E8);
      type metadata accessor for BlueprintBookmark();
      uint64_t v35 = swift_getTupleTypeMetadata3();
      uint64_t v19 = &v13[*(int *)(v35 + 48)];
      uint64_t v36 = &v13[*(int *)(v35 + 64)];
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 32))(a4, v13, v34);
      __swift_storeEnumTagSinglePayload(a4, 0, 1, v34);
      uint64_t v33 = (uint64_t)v36;
      goto LABEL_16;
    case 6:
      uint64_t v48 = a2;
      uint64_t v49 = a3;
      uint64_t v50 = AssociatedConformanceWitness;
      uint64_t v51 = (ValueMetadata *)v10;
      uint64_t v18 = type metadata accessor for Blueprint();
      sub_1B5E001A8(255, qword_1EB6433E8);
      type metadata accessor for BlueprintViewActionResponse();
      uint64_t v19 = &v13[*(int *)(swift_getTupleTypeMetadata3() + 48)];
      swift_release();
      goto LABEL_10;
    case 7:
      MEMORY[0x1F4188790](EnumCaseMultiPayload);
      strcpy((char *)&v47 - 48, "blueprint diff response animation ");
      uint64_t v48 = a2;
      uint64_t v49 = a3;
      uint64_t v50 = AssociatedConformanceWitness;
      uint64_t v51 = (ValueMetadata *)v10;
      uint64_t v48 = type metadata accessor for Blueprint();
      uint64_t v49 = sub_1B5E001A8(255, qword_1EB6433E8);
      uint64_t v50 = type metadata accessor for BlueprintViewActionResponse();
      uint64_t v51 = &type metadata for BlueprintAnimation;
      uint64_t v37 = swift_getTupleTypeMetadata();
      uint64_t v19 = &v13[*(int *)(v37 + 48)];
      swift_release();
      uint64_t v38 = (uint64_t)&v13[*(int *)(v37 + 80)];
      uint64_t v48 = a2;
      uint64_t v49 = a3;
      uint64_t v50 = AssociatedConformanceWitness;
      uint64_t v51 = (ValueMetadata *)v10;
      uint64_t v39 = type metadata accessor for Blueprint();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v39 - 8) + 32))(a4, v13, v39);
      __swift_storeEnumTagSinglePayload(a4, 0, 1, v39);
      sub_1B5FCF540(v38);
      goto LABEL_17;
    case 8:
    case 12:
      uint64_t v48 = a2;
      uint64_t v49 = a3;
      uint64_t v50 = AssociatedConformanceWitness;
      uint64_t v51 = (ValueMetadata *)v10;
      uint64_t v18 = type metadata accessor for Blueprint();
      sub_1B5E001A8(255, qword_1EB6433E8);
      uint64_t v19 = &v13[*(int *)(swift_getTupleTypeMetadata2() + 48)];
LABEL_10:
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a4, v13, v18);
      __swift_storeEnumTagSinglePayload(a4, 0, 1, v18);
      goto LABEL_17;
    case 9:
      uint64_t v48 = a2;
      uint64_t v49 = a3;
      uint64_t v50 = AssociatedConformanceWitness;
      uint64_t v51 = (ValueMetadata *)v10;
      uint64_t v40 = type metadata accessor for Blueprint();
      __swift_storeEnumTagSinglePayload(a4, 1, 1, v40);
      uint64_t v23 = (uint64_t)v13;
      goto LABEL_13;
    case 10:
      return swift_willThrow();
    case 11:
      MEMORY[0x1F4188790](EnumCaseMultiPayload);
      strcpy((char *)&v47 - 48, "blueprint diff response animated bookmark ");
      uint64_t v48 = a2;
      uint64_t v49 = a3;
      uint64_t v50 = AssociatedConformanceWitness;
      uint64_t v51 = (ValueMetadata *)v10;
      uint64_t v48 = type metadata accessor for Blueprint();
      uint64_t v49 = sub_1B5E001A8(255, qword_1EB6433E8);
      sub_1B5FD1160(255, &qword_1E9DAA910, 255, (uint64_t (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse, MEMORY[0x1E4FBB718]);
      uint64_t v50 = v42;
      uint64_t v51 = (ValueMetadata *)MEMORY[0x1E4FBB390];
      uint64_t v52 = type metadata accessor for BlueprintBookmark();
      uint64_t v43 = swift_getTupleTypeMetadata();
      uint64_t v19 = &v13[*(int *)(v43 + 48)];
      swift_release();
      char v44 = &v13[*(int *)(v43 + 96)];
      uint64_t v48 = a2;
      uint64_t v49 = a3;
      uint64_t v50 = AssociatedConformanceWitness;
      uint64_t v51 = (ValueMetadata *)v10;
      uint64_t v45 = type metadata accessor for Blueprint();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v45 - 8) + 32))(a4, v13, v45);
      __swift_storeEnumTagSinglePayload(a4, 0, 1, v45);
      uint64_t v33 = (uint64_t)v44;
LABEL_16:
      sub_1B5E44488(v33);
LABEL_17:
      uint64_t v28 = (uint64_t)v19;
LABEL_18:
      uint64_t result = __swift_destroy_boxed_opaque_existential_1(v28);
      break;
    case 13:
      uint64_t v48 = a2;
      uint64_t v49 = a3;
      uint64_t v50 = AssociatedConformanceWitness;
      uint64_t v51 = (ValueMetadata *)v10;
      uint64_t v46 = type metadata accessor for Blueprint();
      uint64_t result = __swift_storeEnumTagSinglePayload(a4, 1, 1, v46);
      break;
    default:
      uint64_t v48 = a2;
      uint64_t v49 = a3;
      uint64_t v50 = AssociatedConformanceWitness;
      uint64_t v51 = (ValueMetadata *)v10;
      uint64_t v16 = type metadata accessor for Blueprint();
      type metadata accessor for BlueprintBookmark();
      uint64_t v17 = &v13[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v16 - 8) + 32))(a4, v13, v16);
      __swift_storeEnumTagSinglePayload(a4, 0, 1, v16);
LABEL_5:
      uint64_t v23 = (uint64_t)v17;
LABEL_13:
      uint64_t result = sub_1B5E44488(v23);
      break;
  }
  return result;
}

uint64_t sub_1B5FC7C94(uint64_t a1, uint64_t a2)
{
  uint64_t v84 = a2;
  uint64_t v82 = a1;
  uint64_t v3 = *v2;
  uint64_t v74 = sub_1B61B1E20();
  uint64_t v83 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  char v85 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1B61B1D90();
  uint64_t v73 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  uint64_t v72 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1B61B1DF0();
  uint64_t v71 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v70 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B61B1DA0();
  uint64_t v76 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v75 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)((char *)v2 + *(void *)(v3 + 168));
  swift_beginAccess();
  uint64_t v95 = *v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = (void *)swift_getAssociatedConformanceWitness();
  uint64_t aBlock = AssociatedTypeWitness;
  uint64_t v90 = v12;
  uint64_t v91 = (uint64_t (*)(uint64_t))AssociatedConformanceWitness;
  id v92 = v14;
  uint64_t v15 = type metadata accessor for BlueprintPipelineProcessor();
  sub_1B61B2650();
  swift_getWitnessTable();
  if (sub_1B61B2A30())
  {
    uint64_t aBlock = MEMORY[0x1E4FBC860];
    uint64_t v90 = MEMORY[0x1E4FBC860];
    sub_1B5FD1160(0, &qword_1EB64A0A8, 255, (uint64_t (*)(uint64_t))sub_1B5FD0D6C, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    return sub_1B61B0DA0();
  }
  else
  {
    uint64_t v68 = v8;
    uint64_t v67 = v6;
    uint64_t v69 = v2;
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = MEMORY[0x1E4FBC860];
    uint64_t v81 = v17;
    *(void *)(v17 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v66 = v17 + 16;
    uint64_t v19 = swift_allocObject();
    uint64_t v79 = v19;
    *(void *)(v19 + 16) = v18;
    uint64_t v65 = v19 + 16;
    dispatch_group_t v80 = dispatch_group_create();
    uint64_t v20 = swift_allocObject();
    uint64_t v78 = v20;
    *(unsigned char *)(v20 + 16) = 1;
    uint64_t v88 = (unsigned char *)(v20 + 16);
    uint64_t v21 = *v10;
    sub_1B61B1F70();
    uint64_t v22 = sub_1B61B24F0();
    uint64_t v96 = v22;
    uint64_t v23 = MEMORY[0x1BA9AF7B0](v21, v15);
    uint64_t v25 = v83;
    uint64_t v24 = v84;
    uint64_t v27 = v85;
    uint64_t v26 = v86;
    uint64_t v28 = v75;
    if (v22 != v23)
    {
      swift_beginAccess();
      uint64_t v87 = v21 + 32;
      uint64_t v77 = v15;
      uint64_t v36 = v80;
      do
      {
        char v37 = sub_1B61B25B0();
        sub_1B61B2570();
        if (v37) {
          swift_retain();
        }
        else {
          sub_1B61B3300();
        }
        sub_1B61B1F70();
        MEMORY[0x1BA9AF7C0](&v96, v21, v15);
        swift_bridgeObjectRelease();
        if (*v88)
        {
          dispatch_group_enter(v36);
          char v38 = *(unsigned char *)(v24 + 17);
          uint64_t v39 = *(void *)(v24 + 24);
          uint64_t v40 = *(uint64_t (**)(uint64_t))(v24 + 32);
          uint64_t v41 = *(void **)(v24 + 40);
          char v42 = *(unsigned char *)(v24 + 48);
          char v43 = *(unsigned char *)(v24 + 49);
          LOBYTE(aBlock) = *(unsigned char *)(v24 + 16);
          BYTE1(aBlock) = v38;
          uint64_t v90 = v39;
          uint64_t v91 = v40;
          id v92 = v41;
          LOBYTE(v93) = v42;
          BYTE1(v93) = v43;
          char v44 = (void *)swift_allocObject();
          uint64_t v45 = v81;
          id v44[2] = v78;
          v44[3] = v45;
          v44[4] = v79;
          v44[5] = v36;
          sub_1B61B1F70();
          id v46 = v41;
          uint64_t v48 = v85;
          uint64_t v47 = v86;
          uint64_t v25 = v83;
          swift_retain();
          uint64_t v26 = v47;
          uint64_t v15 = v77;
          swift_retain();
          uint64_t v27 = v48;
          swift_retain();
          uint64_t v49 = v36;
          BlueprintPipelineProcessor.process(blueprint:runOptions:completion:)(v82, (uint64_t)&aBlock);
          swift_release();
          swift_release();

          uint64_t v24 = v84;
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
        }
        uint64_t v50 = v96;
      }
      while (v50 != MEMORY[0x1BA9AF7B0](v21, v15));
    }
    uint64_t v29 = swift_bridgeObjectRelease();
    char v30 = *(unsigned char *)(v24 + 16);
    uint64_t v31 = v68;
    uint64_t v32 = v76;
    if (v30)
    {
      MEMORY[0x1F4188790](v29);
      dispatch_group_t v33 = v80;
      uint64_t v34 = v69;
      *(&v65 - 4) = (uint64_t)v80;
      *(&v65 - 3) = (uint64_t)v34;
      uint64_t v35 = v79;
      *(&v65 - 2) = v81;
      *(&v65 - MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v35;
      sub_1B5FD1160(0, &qword_1EB64A0A8, 255, (uint64_t (*)(uint64_t))sub_1B5FD0D6C, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      uint64_t v16 = sub_1B61B0E00();
      swift_release();
      swift_release();

      swift_release();
    }
    else
    {
      dispatch_semaphore_t v51 = dispatch_semaphore_create(0);
      sub_1B5E75560();
      (*(void (**)(char *, void, uint64_t))(v32 + 104))(v28, *MEMORY[0x1E4FBCB28], v31);
      uint64_t v52 = sub_1B61B2C90();
      uint64_t v53 = v32;
      uint64_t v54 = (void *)v52;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v28, v31);
      uint64_t v55 = swift_allocObject();
      *(void *)(v55 + 16) = v51;
      uint64_t v93 = sub_1B5E764B0;
      uint64_t v94 = v55;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v90 = 1107296256;
      uint64_t v91 = sub_1B5E3729C;
      id v92 = &block_descriptor_44;
      uint64_t v56 = _Block_copy(&aBlock);
      uint64_t v57 = v51;
      uint64_t v58 = v70;
      sub_1B61B1DB0();
      uint64_t v96 = MEMORY[0x1E4FBC860];
      sub_1B5E5C57C();
      sub_1B5FD1160(0, (unint64_t *)&qword_1EB647AD8, 255, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
      sub_1B5E5C5CC();
      uint64_t v59 = v26;
      uint64_t v60 = v72;
      sub_1B61B3100();
      dispatch_group_t v61 = v80;
      sub_1B61B2BF0();
      _Block_release(v56);

      (*(void (**)(char *, uint64_t))(v73 + 8))(v60, v59);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v58, v67);
      swift_release();
      sub_1B61B1E00();
      sub_1B61B2CE0();
      uint64_t v62 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v27, v74);
      MEMORY[0x1F4188790](v62);
      uint64_t v63 = v66;
      *(&v65 - 4) = (uint64_t)v69;
      *(&v65 - 3) = v63;
      *(&v65 - 2) = v65;
      sub_1B5FD1160(0, &qword_1EB64A0A8, 255, (uint64_t (*)(uint64_t))sub_1B5FD0D6C, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      uint64_t v16 = sub_1B61B0E00();
      swift_release();
      swift_release();

      swift_release();
    }
  }
  return v16;
}

uint64_t sub_1B5FC8748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  v15[0] = a4;
  v15[1] = a5;
  v15[2] = swift_getAssociatedConformanceWitness();
  v15[3] = swift_getAssociatedConformanceWitness();
  uint64_t v10 = type metadata accessor for BlueprintModifierResult();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v15 - v11;
  (*(void (**)(char *, uint64_t))(v13 + 16))((char *)v15 - v11, a3);
  sub_1B5F731E8((uint64_t)v12, a1, a2, a6);
  sub_1B61B1F70();
  return sub_1B61B1F70();
}

void sub_1B5FC88C0()
{
}

uint64_t sub_1B5FC88F0(void *a1, uint64_t (*a2)(uint64_t a1, uint64_t a2), uint64_t a3, uint64_t a4)
{
  uint64_t v28 = (void *)*a1;
  uint64_t v7 = v28[12];
  uint64_t v8 = v28[10];
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v34 = swift_getAssociatedConformanceWitness();
  uint64_t v9 = type metadata accessor for BlueprintPipelineUpdate();
  uint64_t v10 = sub_1B61B2F80();
  uint64_t v29 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v26 - v12;
  uint64_t v30 = v9;
  uint64_t v14 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v26 - v15;
  sub_1B5FC8C94(a2, a3, a4, (uint64_t)v13);
  uint64_t v27 = a3;
  uint64_t v17 = v29;
  uint64_t v18 = v30;
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v30) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v13, v10);
    uint64_t v31 = 0;
    sub_1B5FCE40C(0, &qword_1EB642658);
    swift_allocObject();
    return sub_1B61B0DA0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v13, v18);
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = swift_weakInit();
    MEMORY[0x1F4188790](v21);
    uint64_t v22 = v28;
    uint64_t v23 = v28[11];
    *(&v26 - 8) = v8;
    *(&v26 - 7) = v23;
    *(&v26 - 6) = v27;
    *(&v26 - 5) = a4;
    uint64_t v24 = v22[13];
    *(&v26 - 4) = v7;
    *(&v26 - 3) = v24;
    *(&v26 - 2) = v20;
    *(&v26 - MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = (uint64_t)v16;
    sub_1B5FCE40C(0, &qword_1EB642658);
    swift_allocObject();
    uint64_t v19 = sub_1B61B0E00();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v18);
    swift_release();
  }
  return v19;
}

uint64_t sub_1B5FC8C94@<X0>(uint64_t (*a1)(uint64_t a1, uint64_t a2)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v504 = a1;
  uint64_t v489 = a4;
  v490 = *v4;
  v491 = (void (*)(char *, char *, uint64_t))*((void *)v490 + 12);
  uint64_t v7 = *((void *)v490 + 10);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v9 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v498 = a2;
  *((void *)&v498 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = a3;
  *(void *)&unsigned long long v499 = AssociatedConformanceWitness;
  *((void *)&v499 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v9;
  uint64_t v483 = type metadata accessor for BlueprintPipelineUpdate.Action();
  MEMORY[0x1F4188790](v483);
  v487 = (_OWORD *)((char *)v470 - v10);
  v486 = (void (*)(char *, char *, uint64_t))type metadata accessor for BlueprintBookmark();
  uint64_t v11 = MEMORY[0x1F4188790](v486);
  uint64_t v477 = (uint64_t)v470 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v476 = (uint64_t)v470 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  v478 = (char *)v470 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  v480 = (char *)v470 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v472 = (uint64_t)v470 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v488 = (uint64_t)v470 - v22;
  MEMORY[0x1F4188790](v21);
  v479 = (char *)v470 - v23;
  *(void *)&long long v498 = a2;
  *((void *)&v498 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = a3;
  *(void *)&unsigned long long v499 = AssociatedConformanceWitness;
  *((void *)&v499 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v9;
  uint64_t v24 = type metadata accessor for BlueprintModifierResult();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)v470 - v26;
  *(void *)&long long v495 = a2;
  *((void *)&v495 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = a3;
  *(void *)&long long v498 = a2;
  *((void *)&v498 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = a3;
  *(void *)&unsigned long long v494 = AssociatedConformanceWitness;
  *((void *)&v494 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v9;
  *(void *)&unsigned long long v499 = AssociatedConformanceWitness;
  *((void *)&v499 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v9;
  uint64_t v28 = type metadata accessor for Blueprint();
  v492 = *(uint64_t (**)())(v28 - 8);
  uint64_t v493 = v28;
  uint64_t v29 = MEMORY[0x1F4188790](v28);
  v473 = (char *)v470 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  v471 = (char *)v470 - v32;
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v35 = (char *)v470 - v34;
  uint64_t v36 = MEMORY[0x1F4188790](v33);
  v481 = (char *)v470 - v37;
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  v475 = (char *)v470 - v39;
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  v474 = (char *)v470 - v41;
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  char v44 = (char *)v470 - v43;
  uint64_t v45 = MEMORY[0x1F4188790](v42);
  uint64_t v47 = (char *)v470 - v46;
  uint64_t v48 = MEMORY[0x1F4188790](v45);
  v484 = (char *)v470 - v49;
  uint64_t v50 = MEMORY[0x1F4188790](v48);
  v485 = (char *)v470 - v51;
  uint64_t v52 = MEMORY[0x1F4188790](v50);
  uint64_t v54 = (char *)v470 - v53;
  MEMORY[0x1F4188790](v52);
  uint64_t v55 = *((void *)v490 + 15);
  v482 = v4;
  v490 = (char *)v470 - v56;
  v470[1] = v7;
  v470[0] = (char *)v4 + v55;
  BlueprintProviderType.blueprint.getter();
  (*(void (**)(char *, uint64_t (*)(uint64_t, uint64_t), uint64_t))(v25 + 16))(v27, v504, v24);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v80 = v493;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v82 = (uint64_t)&v27[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v83 = (long long *)&v27[*(int *)(TupleTypeMetadata3 + 64)];
      uint64_t v84 = v492;
      v491 = (void (*)(char *, char *, uint64_t))*((void *)v492 + 4);
      v491(v47, v27, v80);
      uint64_t v85 = v472;
      sub_1B5FCE11C(v82, v472);
      long long v86 = v83[1];
      long long v498 = *v83;
      unsigned long long v499 = v86;
      long long v500 = v83[2];
      long long v501 = v495;
      uint64_t v87 = v494;
      unsigned long long v502 = v494;
      uint64_t v88 = type metadata accessor for BlueprintPipelineProcessingResult();
      int v89 = v504;
      uint64_t v90 = (uint64_t)v482;
      v481 = (char *)sub_1B5FCCC58((uint64_t)v47, *(void *)((char *)v504 + *(int *)(v88 + 52)));
      v486 = v91;
      v480 = (char *)sub_1B5FCCEC4(*(void *)((char *)v89 + *(int *)(v88 + 56)));
      v504 = v92;
      if (*(unsigned char *)(v90 + *(void *)(*(void *)v90 + 176)) == 1)
      {
        sub_1B5E001A8(255, qword_1EB6433E8);
        swift_getTupleTypeMetadata2();
        uint64_t v93 = v487;
        uint64_t v94 = v85;
        (*((void (**)(_OWORD *, char *, uint64_t))v84 + 2))(v487, v47, v80);
        uint64_t v95 = v490;
        uint64_t v96 = *((void *)&v494 + 1);
        - infix<A, B>(_:_:)();
        sub_1B5FCF540((uint64_t)&v498);
        swift_storeEnumTagMultiPayload();
        uint64_t v97 = v488;
        sub_1B5FCE11C(v94, v488);
        uint64_t v98 = (uint64_t)v485;
        uint64_t v99 = v491;
        v491(v485, v95, v80);
        uint64_t v100 = (uint64_t)v484;
        v99(v484, v47, v80);
        *((void *)&v469 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v96;
        uint64_t v101 = v494;
        *(void *)&unsigned long long v469 = v494;
        uint64_t v102 = *((void *)&v495 + 1);
        uint64_t v103 = v495;
        long long v468 = v495;
        uint64_t v104 = v489;
        sub_1B60899F4((uint64_t)v93, (uint64_t)v481, (uint64_t)v486, (uint64_t)v480, (uint64_t)v504, v97, v98, v100, v489);
        *(void *)&long long v501 = v103;
        *((void *)&v501 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v102;
        *(void *)&unsigned long long v502 = v101;
        *((void *)&v502 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v96;
      }
      else
      {
        unsigned long long v254 = v499;
        v255 = v487;
        _OWORD *v487 = v498;
        v255[1] = v254;
        v255[2] = v500;
        swift_storeEnumTagMultiPayload();
        uint64_t v256 = v488;
        sub_1B5FCE11C(v85, v488);
        uint64_t v257 = (uint64_t)v485;
        v258 = v491;
        v491(v485, v490, v80);
        uint64_t v259 = (uint64_t)v484;
        v258(v484, v47, v80);
        uint64_t v260 = *((void *)&v494 + 1);
        *(void *)&unsigned long long v469 = v87;
        *((void *)&v469 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)&v494 + 1);
        uint64_t v261 = *((void *)&v495 + 1);
        uint64_t v262 = v495;
        long long v468 = v495;
        uint64_t v104 = v489;
        sub_1B60899F4((uint64_t)v255, (uint64_t)v481, (uint64_t)v486, (uint64_t)v480, (uint64_t)v504, v256, v257, v259, v489);
        *(void *)&long long v501 = v262;
        *((void *)&v501 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v261;
        *(void *)&unsigned long long v502 = v87;
        *((void *)&v502 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v260;
      }
      uint64_t v243 = type metadata accessor for BlueprintPipelineUpdate();
      uint64_t v244 = v104;
      goto LABEL_35;
    case 2:
      uint64_t v105 = v493;
      uint64_t v106 = (uint64_t)&v27[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v107 = v492;
      v491 = (void (*)(char *, char *, uint64_t))*((void *)v492 + 4);
      v491(v44, v27, v105);
      sub_1B5FCE11C(v106, (uint64_t)v480);
      long long v108 = v495;
      long long v498 = v495;
      unsigned long long v499 = v494;
      uint64_t v109 = type metadata accessor for BlueprintPipelineProcessingResult();
      uint64_t v110 = v504;
      uint64_t v111 = (uint64_t)v482;
      v481 = (char *)sub_1B5FCCC58((uint64_t)v44, *(void *)((char *)v504 + *(int *)(v109 + 52)));
      v486 = v112;
      v479 = (char *)sub_1B5FCCEC4(*(void *)((char *)v110 + *(int *)(v109 + 56)));
      v504 = v113;
      if (*(unsigned char *)(v111 + *(void *)(*(void *)v111 + 176)) == 1)
      {
        sub_1B5E001A8(255, qword_1EB6433E8);
        swift_getTupleTypeMetadata2();
        uint64_t v114 = v487;
        (*((void (**)(_OWORD *, char *, uint64_t))v107 + 2))(v487, v44, v105);
        uint64_t v115 = v490;
        uint64_t v116 = *((void *)&v494 + 1);
        - infix<A, B>(_:_:)();
        swift_storeEnumTagMultiPayload();
        uint64_t v117 = v488;
        sub_1B5FCE11C((uint64_t)v480, v488);
        uint64_t v118 = (uint64_t)v485;
        uint64_t v119 = v491;
        v491(v485, v115, v105);
        uint64_t v120 = (uint64_t)v484;
        v119(v484, v44, v105);
        *((void *)&v469 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v116;
        uint64_t v121 = v494;
        *(void *)&unsigned long long v469 = v494;
        uint64_t v122 = *((void *)&v495 + 1);
        uint64_t v123 = v495;
        long long v468 = v495;
        uint64_t v124 = v489;
        sub_1B60899F4((uint64_t)v114, (uint64_t)v481, (uint64_t)v486, (uint64_t)v479, (uint64_t)v504, v117, v118, v120, v489);
        *(void *)&long long v498 = v123;
        *((void *)&v498 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v122;
        *(void *)&unsigned long long v499 = v121;
        *((void *)&v499 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v116;
      }
      else
      {
        swift_storeEnumTagMultiPayload();
        uint64_t v263 = v488;
        sub_1B5FCE11C((uint64_t)v480, v488);
        uint64_t v264 = (uint64_t)v485;
        v265 = v491;
        v491(v485, v490, v105);
        uint64_t v266 = (uint64_t)v484;
        v265(v484, v44, v105);
        uint64_t v267 = *((void *)&v494 + 1);
        uint64_t v268 = v494;
        unsigned long long v469 = v494;
        uint64_t v124 = v489;
        sub_1B60899F4((uint64_t)v487, (uint64_t)v481, (uint64_t)v486, (uint64_t)v479, (uint64_t)v504, v263, v264, v266, v489);
        long long v498 = v108;
        *(void *)&unsigned long long v499 = v268;
        *((void *)&v499 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v267;
      }
      uint64_t v243 = type metadata accessor for BlueprintPipelineUpdate();
      uint64_t v244 = v124;
      goto LABEL_35;
    case 3:
      sub_1B5E001A8(255, qword_1EB6433E8);
      uint64_t v125 = v493;
      uint64_t v126 = swift_getTupleTypeMetadata3();
      uint64_t v127 = (long long *)&v27[*(int *)(v126 + 48)];
      uint64_t v128 = (uint64_t)&v27[*(int *)(v126 + 64)];
      uint64_t v129 = v492;
      uint64_t v35 = v474;
      v486 = (void (*)(char *, char *, uint64_t))*((void *)v492 + 4);
      v486(v474, v27, v125);
      sub_1B5E30E70(v127, (uint64_t)&v498);
      uint64_t v130 = (uint64_t)v478;
      sub_1B5FCE11C(v128, (uint64_t)v478);
      uint64_t v131 = *((void *)&v499 + 1);
      uint64_t v132 = v500;
      __swift_project_boxed_opaque_existential_1(&v498, *((uint64_t *)&v499 + 1));
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v132 + 96))(v131, v132))
      {
        sub_1B5E44488(v130);
        goto LABEL_25;
      }
      uint64_t v269 = *((void *)&v494 + 1);
      long long v501 = v495;
      unsigned long long v502 = v494;
      uint64_t v270 = type metadata accessor for BlueprintPipelineProcessingResult();
      v271 = v504;
      uint64_t v272 = (uint64_t)v482;
      v480 = (char *)sub_1B5FCCC58((uint64_t)v35, *(void *)((char *)v504 + *(int *)(v270 + 52)));
      v481 = v273;
      v274 = sub_1B5FCCEC4(*(void *)((char *)v271 + *(int *)(v270 + 56)));
      BOOL v275 = *(unsigned char *)(v272 + *(void *)(*(void *)v272 + 176)) == 1;
      v504 = v276;
      v479 = (char *)v274;
      if (v275)
      {
        uint64_t v277 = v493;
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        v279 = v487;
        uint64_t v280 = (uint64_t)v487 + *(int *)(TupleTypeMetadata2 + 48);
        (*((void (**)(_OWORD *, char *, uint64_t))v129 + 2))(v487, v35, v277);
        sub_1B5E176E4((uint64_t)&v498, v280);
        swift_storeEnumTagMultiPayload();
        uint64_t v281 = v488;
        sub_1B5FCE11C((uint64_t)v478, v488);
        uint64_t v282 = (uint64_t)v485;
        v283 = v486;
        v486(v485, v490, v277);
        uint64_t v284 = (uint64_t)v484;
        v283(v484, v35, v277);
        *((void *)&v469 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v269;
        uint64_t v285 = v494;
        *(void *)&unsigned long long v469 = v494;
        uint64_t v286 = *((void *)&v495 + 1);
        uint64_t v287 = v495;
        long long v468 = v495;
        uint64_t v288 = v489;
        sub_1B60899F4((uint64_t)v279, (uint64_t)v480, (uint64_t)v481, (uint64_t)v479, (uint64_t)v504, v281, v282, v284, v489);
        *(void *)&long long v501 = v287;
        *((void *)&v501 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v286;
        *(void *)&unsigned long long v502 = v285;
        *((void *)&v502 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v269;
        goto LABEL_71;
      }
      uint64_t v399 = v269;
      v400 = v129;
      uint64_t v401 = (uint64_t)v485;
      BlueprintProviderType.blueprint.getter();
      uint64_t v402 = v493;
      swift_getWitnessTable();
      char v403 = sub_1B61B2A30();
      (*((void (**)(uint64_t, uint64_t))v400 + 1))(v401, v402);
      v404 = v487;
      if ((v403 & 1) == 0)
      {
        sub_1B5E176E4((uint64_t)&v498, (uint64_t)v487);
        *((void *)v404 + 5) = 0;
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v449 = v488;
      sub_1B5FCE11C((uint64_t)v478, v488);
      v450 = v486;
      v486((char *)v401, v490, v402);
      uint64_t v451 = (uint64_t)v484;
      v450(v484, v474, v402);
      uint64_t v358 = v399;
      *((void *)&v469 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v399;
      uint64_t v452 = v494;
      *(void *)&unsigned long long v469 = v494;
      uint64_t v453 = *((void *)&v495 + 1);
      uint64_t v454 = v495;
      long long v468 = v495;
      uint64_t v288 = v489;
      sub_1B60899F4((uint64_t)v404, (uint64_t)v480, (uint64_t)v481, (uint64_t)v479, (uint64_t)v504, v449, v401, v451, v489);
      *(void *)&long long v501 = v454;
      *((void *)&v501 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v453;
      *(void *)&unsigned long long v502 = v452;
      goto LABEL_63;
    case 4:
      MEMORY[0x1F4188790](EnumCaseMultiPayload);
      qmemcpy(&v470[-6], "blueprint diff bookmark", 23);
      BYTE7(v468) = 32;
      strcpy((char *)&v469, "n ");
      *((void *)&v468 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *(void *)"animation ";
      uint64_t v133 = v27;
      uint64_t v134 = v493;
      *(void *)&long long v498 = v493;
      uint64_t v135 = sub_1B5E001A8(255, qword_1EB6433E8);
      *((void *)&v498 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v135;
      *(void *)&unsigned long long v499 = v486;
      *((void *)&v499 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = &type metadata for BlueprintAnimation;
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v137 = (long long *)&v133[TupleTypeMetadata[12]];
      uint64_t v138 = (uint64_t)&v133[TupleTypeMetadata[16]];
      uint64_t v139 = (long long *)&v133[TupleTypeMetadata[20]];
      uint64_t v140 = v492;
      uint64_t v141 = (uint64_t)v475;
      v486 = (void (*)(char *, char *, uint64_t))*((void *)v492 + 4);
      v486(v475, v133, v134);
      sub_1B5E30E70(v137, (uint64_t)&v501);
      uint64_t v142 = v476;
      sub_1B5FCE11C(v138, v476);
      long long v143 = v139[1];
      long long v498 = *v139;
      unsigned long long v499 = v143;
      long long v500 = v139[2];
      uint64_t v144 = *((void *)&v502 + 1);
      uint64_t v145 = v503;
      __swift_project_boxed_opaque_existential_1(&v501, *((uint64_t *)&v502 + 1));
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v145 + 96))(v144, v145))
      {
        sub_1B5FCF540((uint64_t)&v498);
        sub_1B5E44488(v142);
        uint64_t v146 = (void (*)(uint64_t, uint64_t))*((void *)v140 + 1);
        v146(v141, v134);
        uint64_t v147 = v490;
        uint64_t v148 = v134;
        goto LABEL_14;
      }
      uint64_t v289 = v495;
      long long v496 = v495;
      unsigned long long v497 = v494;
      uint64_t v290 = type metadata accessor for BlueprintPipelineProcessingResult();
      v291 = v504;
      uint64_t v292 = (uint64_t)v482;
      v479 = (char *)sub_1B5FCCC58(v141, *(void *)((char *)v504 + *(int *)(v290 + 52)));
      v481 = v293;
      v294 = sub_1B5FCCEC4(*(void *)((char *)v291 + *(int *)(v290 + 56)));
      BOOL v275 = *(unsigned char *)(v292 + *(void *)(*(void *)v292 + 176)) == 1;
      v504 = v295;
      v480 = (char *)v294;
      if (v275)
      {
        uint64_t v296 = sub_1B5FCF540((uint64_t)&v498);
        MEMORY[0x1F4188790](v296);
        qmemcpy(&v470[-6], "blueprint diff response", 23);
        BYTE7(v468) = 32;
        LOWORD(v469) = 32;
        *((void *)&v468 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *(void *)"animated ";
        uint64_t v297 = v142;
        uint64_t v298 = v493;
        *(void *)&long long v496 = v493;
        *((void *)&v496 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v135;
        sub_1B5FD1160(255, &qword_1E9DAA910, 255, (uint64_t (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse, MEMORY[0x1E4FBB718]);
        *(void *)&unsigned long long v497 = v299;
        *((void *)&v497 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = MEMORY[0x1E4FBB390];
        v300 = (int *)swift_getTupleTypeMetadata();
        v301 = v487;
        uint64_t v302 = (uint64_t)v487 + v300[12];
        uint64_t v303 = v300[16];
        uint64_t v304 = v300[20];
        (*((void (**)(_OWORD *, uint64_t, uint64_t))v492 + 2))(v487, v141, v298);
        sub_1B5E176E4((uint64_t)&v501, v302);
        *(void *)((char *)v301 + v303) = 0;
        *((unsigned char *)v301 + v304) = 1;
        swift_storeEnumTagMultiPayload();
        uint64_t v305 = v488;
        sub_1B5FCE11C(v297, v488);
        uint64_t v306 = (uint64_t)v485;
        v307 = (void (*)(char *, uint64_t, uint64_t))v486;
        v486(v485, v490, v298);
        uint64_t v308 = (uint64_t)v484;
        v307(v484, v141, v298);
        uint64_t v309 = *((void *)&v494 + 1);
        uint64_t v310 = v494;
        unsigned long long v469 = v494;
        uint64_t v311 = *((void *)&v495 + 1);
        *(void *)&long long v468 = v289;
        *((void *)&v468 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)&v495 + 1);
        uint64_t v312 = v489;
        sub_1B60899F4((uint64_t)v301, (uint64_t)v479, (uint64_t)v481, (uint64_t)v480, (uint64_t)v504, v305, v306, v308, v489);
        *(void *)&long long v496 = v289;
        *((void *)&v496 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v311;
        *(void *)&unsigned long long v497 = v310;
        *((void *)&v497 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v309;
      }
      else
      {
        uint64_t v405 = (uint64_t)v485;
        BlueprintProviderType.blueprint.getter();
        uint64_t v406 = v493;
        swift_getWitnessTable();
        char v407 = sub_1B61B2A30();
        (*((void (**)(uint64_t, uint64_t))v492 + 1))(v405, v406);
        if (v407)
        {
          unsigned long long v408 = v499;
          v409 = v487;
          _OWORD *v487 = v498;
          v409[1] = v408;
          v409[2] = v500;
        }
        else
        {
          v409 = v487;
          sub_1B5E176E4((uint64_t)&v501, (uint64_t)v487);
          *((void *)v409 + 5) = 0;
          unsigned long long v455 = v499;
          v409[3] = v498;
          v409[4] = v455;
          v409[5] = v500;
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v456 = v488;
        sub_1B5FCE11C(v476, v488);
        v457 = v486;
        v486((char *)v405, v490, v406);
        uint64_t v458 = (uint64_t)v484;
        v457(v484, v475, v406);
        uint64_t v459 = *((void *)&v494 + 1);
        uint64_t v460 = v494;
        unsigned long long v469 = v494;
        uint64_t v461 = *((void *)&v495 + 1);
        uint64_t v462 = v495;
        long long v468 = v495;
        uint64_t v312 = v489;
        sub_1B60899F4((uint64_t)v409, (uint64_t)v479, (uint64_t)v481, (uint64_t)v480, (uint64_t)v504, v456, v405, v458, v489);
        *(void *)&long long v496 = v462;
        *((void *)&v496 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v461;
        *(void *)&unsigned long long v497 = v460;
        *((void *)&v497 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v459;
      }
      uint64_t v159 = type metadata accessor for BlueprintPipelineUpdate();
      uint64_t v160 = v312;
      goto LABEL_67;
    case 5:
      uint64_t v213 = sub_1B5E001A8(255, qword_1EB6433E8);
      uint64_t v214 = v493;
      uint64_t v215 = swift_getTupleTypeMetadata3();
      uint64_t v216 = (long long *)&v27[*(int *)(v215 + 48)];
      uint64_t v217 = (uint64_t)&v27[*(int *)(v215 + 64)];
      v218 = v492;
      v219 = (void (*)(char *, char *, uint64_t))*((void *)v492 + 4);
      v219(v481, v27, v214);
      sub_1B5E30E70(v216, (uint64_t)&v498);
      uint64_t v220 = v477;
      sub_1B5FCE11C(v217, v477);
      uint64_t v221 = *((void *)&v499 + 1);
      uint64_t v222 = v500;
      __swift_project_boxed_opaque_existential_1(&v498, *((uint64_t *)&v499 + 1));
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v222 + 96))(v221, v222))
      {
        sub_1B5E44488(v220);
        v223 = (void (*)(void *, uint64_t))*((void *)v218 + 1);
        v223(v481, v214);
        v224 = v490;
        uint64_t v225 = v214;
        goto LABEL_26;
      }
      v486 = v219;
      uint64_t v337 = *((void *)&v494 + 1);
      long long v501 = v495;
      uint64_t v338 = v494;
      unsigned long long v502 = v494;
      uint64_t v339 = type metadata accessor for BlueprintPipelineProcessingResult();
      v340 = v504;
      uint64_t v341 = (uint64_t)v482;
      v478 = (char *)sub_1B5FCCC58((uint64_t)v481, *(void *)((char *)v504 + *(int *)(v339 + 52)));
      v343 = v342;
      v344 = sub_1B5FCCEC4(*(void *)((char *)v340 + *(int *)(v339 + 56)));
      BOOL v275 = *(unsigned char *)(v341 + *(void *)(*(void *)v341 + 176)) == 1;
      uint64_t v345 = v214;
      v480 = v343;
      v504 = v346;
      v479 = (char *)v344;
      if (v275)
      {
        MEMORY[0x1F4188790](v344);
        qmemcpy(&v470[-6], "blueprint diff response", 23);
        BYTE7(v468) = 32;
        LOWORD(v469) = 32;
        *((void *)&v468 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *(void *)"animated ";
        *(void *)&long long v501 = v214;
        *((void *)&v501 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v213;
        sub_1B5FD1160(255, &qword_1E9DAA910, 255, (uint64_t (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse, MEMORY[0x1E4FBB718]);
        *(void *)&unsigned long long v502 = v347;
        *((void *)&v502 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = MEMORY[0x1E4FBB390];
        v348 = (int *)swift_getTupleTypeMetadata();
        v349 = v487;
        uint64_t v350 = (uint64_t)v487 + v348[12];
        uint64_t v351 = v348[16];
        uint64_t v352 = v348[20];
        v353 = v481;
        (*((void (**)(_OWORD *, char *, uint64_t))v492 + 2))(v487, v481, v214);
        sub_1B5E176E4((uint64_t)&v498, v350);
        *(void *)((char *)v349 + v35MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        *((unsigned char *)v349 + v352) = 0;
        swift_storeEnumTagMultiPayload();
        uint64_t v354 = v488;
        sub_1B5FCE11C(v477, v488);
        uint64_t v355 = (uint64_t)v485;
        v356 = v486;
        v486(v485, v490, v214);
        uint64_t v357 = (uint64_t)v484;
        v356(v484, v353, v214);
        uint64_t v358 = *((void *)&v494 + 1);
        *(void *)&unsigned long long v469 = v338;
        *((void *)&v469 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)&v494 + 1);
        uint64_t v359 = *((void *)&v495 + 1);
        uint64_t v360 = v495;
        long long v468 = v495;
        uint64_t v288 = v489;
        sub_1B60899F4((uint64_t)v349, (uint64_t)v478, (uint64_t)v480, (uint64_t)v479, (uint64_t)v504, v354, v355, v357, v489);
        *(void *)&long long v501 = v360;
        *((void *)&v501 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v359;
        *(void *)&unsigned long long v502 = v338;
LABEL_63:
        *((void *)&v502 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v358;
      }
      else
      {
        v420 = v485;
        BlueprintProviderType.blueprint.getter();
        swift_getWitnessTable();
        char v421 = sub_1B61B2A30();
        (*((void (**)(char *, uint64_t))v492 + 1))(v420, v214);
        if (v421)
        {
          swift_storeEnumTagMultiPayload();
          uint64_t v422 = (uint64_t)v420;
          uint64_t v423 = v488;
          sub_1B5FCE11C(v477, v488);
          v424 = v420;
          v425 = v486;
          v486(v424, v490, v214);
          v426 = v484;
          v425(v484, v481, v345);
          *((void *)&v469 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v337;
          uint64_t v427 = v494;
          *(void *)&unsigned long long v469 = v494;
          uint64_t v428 = *((void *)&v495 + 1);
          uint64_t v429 = v495;
          long long v468 = v495;
          uint64_t v288 = v489;
          uint64_t v430 = v489;
          v431 = v487;
          uint64_t v432 = (uint64_t)v478;
          uint64_t v433 = (uint64_t)v480;
          uint64_t v434 = (uint64_t)v479;
          v435 = v504;
          uint64_t v436 = v423;
          uint64_t v437 = v422;
          uint64_t v438 = (uint64_t)v426;
        }
        else
        {
          v464 = v487;
          sub_1B5E176E4((uint64_t)&v498, (uint64_t)v487);
          *((void *)v464 + 5) = 0;
          swift_storeEnumTagMultiPayload();
          uint64_t v465 = v488;
          sub_1B5FCE11C(v477, v488);
          v466 = v486;
          v486(v420, v490, v345);
          v467 = v484;
          v466(v484, v481, v345);
          *((void *)&v469 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v337;
          uint64_t v427 = v494;
          *(void *)&unsigned long long v469 = v494;
          uint64_t v428 = *((void *)&v495 + 1);
          uint64_t v429 = v495;
          long long v468 = v495;
          uint64_t v288 = v489;
          uint64_t v430 = v489;
          v431 = v464;
          uint64_t v432 = (uint64_t)v478;
          uint64_t v433 = (uint64_t)v480;
          uint64_t v434 = (uint64_t)v479;
          v435 = v504;
          uint64_t v436 = v465;
          uint64_t v437 = (uint64_t)v485;
          uint64_t v438 = (uint64_t)v467;
        }
        sub_1B60899F4((uint64_t)v431, v432, v433, v434, (uint64_t)v435, v436, v437, v438, v430);
        *(void *)&long long v501 = v429;
        *((void *)&v501 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v428;
        *(void *)&unsigned long long v502 = v427;
        *((void *)&v502 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v337;
      }
LABEL_71:
      uint64_t v239 = type metadata accessor for BlueprintPipelineUpdate();
      uint64_t v240 = v288;
      goto LABEL_72;
    case 6:
      v226 = (void (*)(char *, char *, uint64_t))sub_1B5E001A8(255, qword_1EB6433E8);
      type metadata accessor for BlueprintViewActionResponse();
      uint64_t v125 = v493;
      v491 = v226;
      uint64_t v227 = swift_getTupleTypeMetadata3();
      v228 = (long long *)&v27[*(int *)(v227 + 48)];
      uint64_t v229 = *(void *)&v27[*(int *)(v227 + 64)];
      uint64_t v129 = v492;
      v230 = (char *)v492 + 32;
      uint64_t v35 = v471;
      v231 = v27;
      v232 = (void (*)(char *, char *, uint64_t))*((void *)v492 + 4);
      v232(v471, v231, v125);
      sub_1B5E30E70(v228, (uint64_t)&v498);
      uint64_t v233 = *((void *)&v499 + 1);
      uint64_t v234 = v500;
      __swift_project_boxed_opaque_existential_1(&v498, *((uint64_t *)&v499 + 1));
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v234 + 96))(v233, v234))
      {
        swift_release();
LABEL_25:
        v223 = (void (*)(void *, uint64_t))*((void *)v129 + 1);
        v223(v35, v125);
        v224 = v490;
        uint64_t v225 = v125;
LABEL_26:
        v223(v224, v225);
        long long v501 = v495;
        unsigned long long v502 = v494;
        uint64_t v239 = type metadata accessor for BlueprintPipelineUpdate();
        uint64_t v240 = v489;
        uint64_t v241 = 1;
      }
      else
      {
        v478 = v230;
        v361 = v491;
        uint64_t v362 = v229;
        v481 = (char *)v232;
        uint64_t v363 = v495;
        long long v501 = v495;
        uint64_t v364 = v494;
        unsigned long long v502 = v494;
        uint64_t v365 = type metadata accessor for BlueprintPipelineProcessingResult();
        v366 = v504;
        uint64_t v367 = (uint64_t)v482;
        v480 = (char *)sub_1B5FCCC58((uint64_t)v35, *(void *)((char *)v504 + *(int *)(v365 + 52)));
        v479 = v368;
        v369 = sub_1B5FCCEC4(*(void *)((char *)v366 + *(int *)(v365 + 56)));
        BOOL v275 = *(unsigned char *)(v367 + *(void *)(*(void *)v367 + 176)) == 1;
        v504 = v370;
        uint64_t v477 = (uint64_t)v369;
        if (v275)
        {
          MEMORY[0x1F4188790](v369);
          qmemcpy(&v470[-6], "blueprint diff response", 23);
          BYTE7(v468) = 32;
          LOWORD(v469) = 32;
          *((void *)&v468 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *(void *)"animated ";
          uint64_t v371 = v493;
          *(void *)&long long v501 = v493;
          *((void *)&v501 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v361;
          sub_1B5FD1160(255, &qword_1E9DAA910, 255, (uint64_t (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse, MEMORY[0x1E4FBB718]);
          *(void *)&unsigned long long v502 = v372;
          *((void *)&v502 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = MEMORY[0x1E4FBB390];
          v373 = (int *)swift_getTupleTypeMetadata();
          v374 = v487;
          uint64_t v375 = (uint64_t)v487 + v373[12];
          uint64_t v376 = v373[16];
          uint64_t v377 = v373[20];
          (*((void (**)(_OWORD *, char *, uint64_t))v492 + 2))(v487, v35, v371);
          sub_1B5E176E4((uint64_t)&v498, v375);
          *(void *)((char *)v374 + v376) = v362;
          *((unsigned char *)v374 + v377) = 0;
          swift_storeEnumTagMultiPayload();
          v378 = v35;
          uint64_t v379 = v488;
          swift_storeEnumTagMultiPayload();
          uint64_t v380 = (uint64_t)v485;
          v381 = (void (*)(char *, char *, uint64_t))v481;
          ((void (*)(char *, char *, uint64_t))v481)(v485, v490, v371);
          uint64_t v382 = (uint64_t)v484;
          v381(v484, v378, v371);
          uint64_t v383 = *((void *)&v494 + 1);
          uint64_t v384 = v494;
          unsigned long long v469 = v494;
          uint64_t v385 = *((void *)&v495 + 1);
          *(void *)&long long v468 = v363;
          *((void *)&v468 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)&v495 + 1);
          uint64_t v448 = v489;
          sub_1B60899F4((uint64_t)v374, (uint64_t)v480, (uint64_t)v479, v477, (uint64_t)v504, v379, v380, v382, v489);
          *(void *)&long long v501 = v363;
          *((void *)&v501 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v385;
          *(void *)&unsigned long long v502 = v384;
          *((void *)&v502 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v383;
        }
        else
        {
          v439 = v487;
          sub_1B5E176E4((uint64_t)&v498, (uint64_t)v487);
          *((void *)v439 + 5) = v229;
          swift_storeEnumTagMultiPayload();
          uint64_t v440 = v488;
          swift_storeEnumTagMultiPayload();
          uint64_t v441 = (uint64_t)v485;
          uint64_t v442 = v493;
          v443 = (void (*)(char *, char *, uint64_t))v481;
          ((void (*)(char *, char *, uint64_t))v481)(v485, v490, v493);
          v444 = v35;
          uint64_t v445 = (uint64_t)v484;
          v443(v484, v444, v442);
          uint64_t v446 = *((void *)&v494 + 1);
          *(void *)&unsigned long long v469 = v364;
          *((void *)&v469 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)&v494 + 1);
          uint64_t v447 = *((void *)&v495 + 1);
          *(void *)&long long v468 = v363;
          *((void *)&v468 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)&v495 + 1);
          uint64_t v448 = v489;
          sub_1B60899F4((uint64_t)v439, (uint64_t)v480, (uint64_t)v479, v477, (uint64_t)v504, v440, v441, v445, v489);
          *(void *)&long long v501 = v363;
          *((void *)&v501 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v447;
          *(void *)&unsigned long long v502 = v364;
          *((void *)&v502 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v446;
        }
        uint64_t v239 = type metadata accessor for BlueprintPipelineUpdate();
        uint64_t v240 = v448;
LABEL_72:
        uint64_t v241 = 0;
      }
      __swift_storeEnumTagSinglePayload(v240, v241, 1, v239);
      v463 = &v498;
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v463);
    case 7:
      MEMORY[0x1F4188790](EnumCaseMultiPayload);
      qmemcpy(&v470[-6], "blueprint diff response", 23);
      BYTE7(v468) = 32;
      strcpy((char *)&v469, "n ");
      *((void *)&v468 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *(void *)"animation ";
      uint64_t v149 = v493;
      *(void *)&long long v498 = v493;
      v481 = (char *)sub_1B5E001A8(255, qword_1EB6433E8);
      *((void *)&v498 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v481;
      *(void *)&unsigned long long v499 = type metadata accessor for BlueprintViewActionResponse();
      *((void *)&v499 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = &type metadata for BlueprintAnimation;
      long long v150 = (int *)swift_getTupleTypeMetadata();
      uint64_t v151 = *(void *)&v27[v150[16]];
      uint64_t v152 = (long long *)&v27[v150[12]];
      uint64_t v153 = (long long *)&v27[v150[20]];
      uint64_t v154 = v492;
      uint64_t v155 = (uint64_t)v473;
      v491 = (void (*)(char *, char *, uint64_t))*((void *)v492 + 4);
      v491(v473, v27, v149);
      sub_1B5E30E70(v152, (uint64_t)&v501);
      long long v156 = v153[1];
      long long v498 = *v153;
      unsigned long long v499 = v156;
      long long v500 = v153[2];
      uint64_t v157 = *((void *)&v502 + 1);
      uint64_t v158 = v503;
      __swift_project_boxed_opaque_existential_1(&v501, *((uint64_t *)&v502 + 1));
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v158 + 96))(v157, v158))
      {
        swift_release();
        sub_1B5FCF540((uint64_t)&v498);
        uint64_t v146 = (void (*)(uint64_t, uint64_t))*((void *)v154 + 1);
        v146(v155, v149);
        uint64_t v147 = v490;
        uint64_t v148 = v149;
LABEL_14:
        v146((uint64_t)v147, v148);
        long long v496 = v495;
        unsigned long long v497 = v494;
        uint64_t v159 = type metadata accessor for BlueprintPipelineUpdate();
        uint64_t v160 = v489;
        uint64_t v161 = 1;
      }
      else
      {
        uint64_t v477 = v151;
        uint64_t v313 = v495;
        long long v496 = v495;
        uint64_t v314 = v494;
        unsigned long long v497 = v494;
        uint64_t v315 = type metadata accessor for BlueprintPipelineProcessingResult();
        v316 = v504;
        uint64_t v317 = (uint64_t)v482;
        v479 = (char *)sub_1B5FCCC58(v155, *(void *)((char *)v504 + *(int *)(v315 + 52)));
        v480 = v318;
        v478 = (char *)sub_1B5FCCEC4(*(void *)((char *)v316 + *(int *)(v315 + 56)));
        v504 = v319;
        if (*(unsigned char *)(v317 + *(void *)(*(void *)v317 + 176)) == 1)
        {
          uint64_t v320 = sub_1B5FCF540((uint64_t)&v498);
          MEMORY[0x1F4188790](v320);
          qmemcpy(&v470[-6], "blueprint diff response", 23);
          BYTE7(v468) = 32;
          LOWORD(v469) = 32;
          *((void *)&v468 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *(void *)"animated ";
          uint64_t v321 = v493;
          *(void *)&long long v496 = v493;
          *((void *)&v496 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v481;
          sub_1B5FD1160(255, &qword_1E9DAA910, 255, (uint64_t (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse, MEMORY[0x1E4FBB718]);
          *(void *)&unsigned long long v497 = v322;
          *((void *)&v497 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = MEMORY[0x1E4FBB390];
          v323 = (int *)swift_getTupleTypeMetadata();
          v324 = v487;
          uint64_t v325 = (uint64_t)v487 + v323[12];
          uint64_t v326 = v323[16];
          uint64_t v327 = v323[20];
          (*((void (**)(_OWORD *, uint64_t, uint64_t))v492 + 2))(v487, v155, v321);
          sub_1B5E176E4((uint64_t)&v501, v325);
          *(void *)((char *)v324 + v326) = v477;
          *((unsigned char *)v324 + v327) = 1;
          swift_storeEnumTagMultiPayload();
          uint64_t v328 = v155;
          uint64_t v329 = v488;
          swift_storeEnumTagMultiPayload();
          uint64_t v330 = (uint64_t)v485;
          v331 = (void (*)(char *, uint64_t, uint64_t))v491;
          v491(v485, v490, v321);
          uint64_t v332 = (uint64_t)v484;
          v331(v484, v328, v321);
          uint64_t v333 = *((void *)&v494 + 1);
          uint64_t v334 = v494;
          unsigned long long v469 = v494;
          uint64_t v335 = *((void *)&v495 + 1);
          *(void *)&long long v468 = v313;
          *((void *)&v468 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)&v495 + 1);
          uint64_t v336 = v489;
          sub_1B60899F4((uint64_t)v324, (uint64_t)v479, (uint64_t)v480, (uint64_t)v478, (uint64_t)v504, v329, v330, v332, v489);
          *(void *)&long long v496 = v313;
          *((void *)&v496 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v335;
          *(void *)&unsigned long long v497 = v334;
          *((void *)&v497 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v333;
        }
        else
        {
          v410 = v487;
          sub_1B5E176E4((uint64_t)&v501, (uint64_t)v487);
          *((void *)v410 + 5) = v477;
          unsigned long long v411 = v499;
          v410[3] = v498;
          v410[4] = v411;
          v410[5] = v500;
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          uint64_t v412 = (uint64_t)v485;
          uint64_t v413 = v493;
          uint64_t v414 = v314;
          uint64_t v415 = *((void *)&v495 + 1);
          v416 = (void (*)(char *, uint64_t, uint64_t))v491;
          v491(v485, v490, v493);
          uint64_t v417 = v155;
          uint64_t v418 = (uint64_t)v484;
          v416(v484, v417, v413);
          uint64_t v419 = *((void *)&v494 + 1);
          *(void *)&unsigned long long v469 = v414;
          *((void *)&v469 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)&v494 + 1);
          *(void *)&long long v468 = v313;
          *((void *)&v468 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v415;
          uint64_t v336 = v489;
          sub_1B60899F4((uint64_t)v410, (uint64_t)v479, (uint64_t)v480, (uint64_t)v478, (uint64_t)v504, v488, v412, v418, v489);
          *(void *)&long long v496 = v313;
          *((void *)&v496 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v415;
          *(void *)&unsigned long long v497 = v414;
          *((void *)&v497 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v419;
        }
        uint64_t v159 = type metadata accessor for BlueprintPipelineUpdate();
        uint64_t v160 = v336;
LABEL_67:
        uint64_t v161 = 0;
      }
      __swift_storeEnumTagSinglePayload(v160, v161, 1, v159);
      v463 = &v501;
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v463);
    case 8:
      sub_1B5E001A8(255, qword_1EB6433E8);
      uint64_t v125 = v493;
      v235 = (long long *)&v27[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v129 = v492;
      v236 = (void (*)(char *, char *, uint64_t))*((void *)v492 + 4);
      v236(v35, v27, v125);
      sub_1B5E30E70(v235, (uint64_t)&v498);
      uint64_t v237 = *((void *)&v499 + 1);
      uint64_t v238 = v500;
      __swift_project_boxed_opaque_existential_1(&v498, *((uint64_t *)&v499 + 1));
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v238 + 96))(v237, v238)) {
        goto LABEL_25;
      }
      long long v501 = v495;
      unint64_t v386 = v494;
      unsigned long long v502 = v494;
      uint64_t v387 = type metadata accessor for BlueprintPipelineProcessingResult();
      v388 = v504;
      v492 = sub_1B5FCCC58((uint64_t)v35, *(void *)((char *)v504 + *(int *)(v387 + 52)));
      v491 = v389;
      v504 = sub_1B5FCCEC4(*(void *)((char *)v388 + *(int *)(v387 + 56)));
      v482 = (void *)v390;
      v391 = v487;
      sub_1B5E176E4((uint64_t)&v498, (uint64_t)v487);
      swift_storeEnumTagMultiPayload();
      uint64_t v392 = v488;
      swift_storeEnumTagMultiPayload();
      uint64_t v393 = (uint64_t)v485;
      v236(v485, v490, v125);
      uint64_t v394 = (uint64_t)v484;
      v236(v484, v35, v125);
      uint64_t v395 = *((void *)&v494 + 1);
      unsigned long long v469 = __PAIR128__(*((unint64_t *)&v494 + 1), v386);
      uint64_t v396 = *((void *)&v495 + 1);
      uint64_t v397 = v495;
      long long v468 = v495;
      uint64_t v398 = v489;
      sub_1B60899F4((uint64_t)v391, (uint64_t)v492, (uint64_t)v491, (uint64_t)v504, (uint64_t)v482, v392, v393, v394, v489);
      *(void *)&long long v501 = v397;
      *((void *)&v501 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v396;
      *(void *)&unsigned long long v502 = v386;
      *((void *)&v502 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v395;
      uint64_t v239 = type metadata accessor for BlueprintPipelineUpdate();
      uint64_t v240 = v398;
      goto LABEL_72;
    case 9:
      uint64_t v162 = (uint64_t)v27;
      uint64_t v163 = v488;
      sub_1B5FCE11C(v162, v488);
      uint64_t v164 = v487;
      swift_storeEnumTagMultiPayload();
      uint64_t v166 = v492;
      uint64_t v165 = v493;
      uint64_t v167 = (uint64_t)v485;
      v168 = v490;
      (*((void (**)(char *, char *, uint64_t))v492 + 2))(v485, v490, v493);
      uint64_t v169 = (uint64_t)v484;
      (*((void (**)(char *, char *, uint64_t))v166 + 4))(v484, v168, v165);
      uint64_t v70 = *((void *)&v494 + 1);
      uint64_t v76 = v494;
      unsigned long long v469 = v494;
      uint64_t v170 = *((void *)&v495 + 1);
      uint64_t v171 = v495;
      long long v468 = v495;
      uint64_t v79 = v489;
      sub_1B60899F4((uint64_t)v164, (uint64_t)nullsub_1, 0, (uint64_t)nullsub_1, 0, v163, v167, v169, v489);
      *(void *)&long long v498 = v171;
      *((void *)&v498 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v170;
      goto LABEL_16;
    case 10:
      swift_willThrow();
      return (*((uint64_t (**)(char *, uint64_t))v492 + 1))(v490, v493);
    case 11:
      MEMORY[0x1F4188790](EnumCaseMultiPayload);
      qmemcpy(&v470[-6], "blueprint diff response", 23);
      BYTE7(v468) = 32;
      strcpy((char *)&v469, " bookmark ");
      *((void *)&v468 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *(void *)"animated bookmark ";
      uint64_t v172 = v493;
      *(void *)&long long v498 = v493;
      v491 = (void (*)(char *, char *, uint64_t))sub_1B5E001A8(255, qword_1EB6433E8);
      *((void *)&v498 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v491;
      sub_1B5FD1160(255, &qword_1E9DAA910, 255, (uint64_t (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse, MEMORY[0x1E4FBB718]);
      uint64_t v174 = v173;
      *(void *)&unsigned long long v499 = v173;
      *((void *)&v499 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = MEMORY[0x1E4FBB390];
      *(void *)&long long v500 = v486;
      uint64_t v175 = (int *)swift_getTupleTypeMetadata();
      uint64_t v176 = v175[12];
      v481 = *(char **)&v27[v175[16]];
      LODWORD(v48sub_1B5E6F544(4, 0, 0) = v27[v175[20]];
      uint64_t v177 = (long long *)&v27[v176];
      uint64_t v178 = (uint64_t)&v27[v175[24]];
      uint64_t v179 = v492;
      v486 = (void (*)(char *, char *, uint64_t))*((void *)v492 + 4);
      uint64_t v180 = (uint64_t)v485;
      v486(v485, v27, v172);
      sub_1B5E30E70(v177, (uint64_t)&v498);
      sub_1B5FCE11C(v178, v488);
      long long v501 = v495;
      unsigned long long v502 = v494;
      uint64_t v181 = type metadata accessor for BlueprintPipelineProcessingResult();
      uint64_t v182 = v504;
      v479 = (char *)sub_1B5FCCC58(v180, *(void *)((char *)v504 + *(int *)(v181 + 52)));
      v478 = v183;
      v504 = sub_1B5FCCEC4(*(void *)((char *)v182 + *(int *)(v181 + 56)));
      uint64_t v185 = v184;
      MEMORY[0x1F4188790](v504);
      qmemcpy(&v470[-6], "blueprint diff response", 23);
      BYTE7(v468) = 32;
      LOWORD(v469) = 32;
      *((void *)&v468 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *(void *)"animated ";
      *(void *)&long long v501 = v172;
      *((void *)&v501 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v491;
      *(void *)&unsigned long long v502 = v174;
      *((void *)&v502 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = MEMORY[0x1E4FBB390];
      v186 = (int *)swift_getTupleTypeMetadata();
      uint64_t v187 = v487;
      uint64_t v188 = (uint64_t)v487 + v186[12];
      uint64_t v189 = v186[16];
      uint64_t v190 = v186[20];
      (*((void (**)(_OWORD *, uint64_t, uint64_t))v179 + 2))(v487, v180, v172);
      sub_1B5E30E70(&v498, v188);
      *(void *)((char *)v187 + v189) = v481;
      *((unsigned char *)v187 + v19sub_1B5E6F544(4, 0, 0) = (_BYTE)v480;
      swift_storeEnumTagMultiPayload();
      uint64_t v191 = (uint64_t)v484;
      v486(v484, v490, v172);
      uint64_t v192 = *((void *)&v494 + 1);
      uint64_t v193 = v494;
      unsigned long long v469 = v494;
      uint64_t v194 = *((void *)&v495 + 1);
      uint64_t v195 = v495;
      long long v468 = v495;
      uint64_t v79 = v489;
      sub_1B60899F4((uint64_t)v187, (uint64_t)v479, (uint64_t)v478, (uint64_t)v504, v185, v488, v191, v180, v489);
      *(void *)&long long v501 = v195;
      *((void *)&v501 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v194;
      *(void *)&unsigned long long v502 = v193;
      *((void *)&v502 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v192;
      goto LABEL_30;
    case 12:
      sub_1B5E001A8(255, qword_1EB6433E8);
      uint64_t v196 = v493;
      uint64_t v197 = swift_getTupleTypeMetadata2();
      uint64_t v198 = (long long *)&v27[*(int *)(v197 + 48)];
      uint64_t v199 = v492;
      v491 = (void (*)(char *, char *, uint64_t))*((void *)v492 + 4);
      uint64_t v200 = (uint64_t)v485;
      v491(v485, v27, v196);
      sub_1B5E30E70(v198, (uint64_t)&v498);
      long long v501 = v495;
      unint64_t v201 = v494;
      unsigned long long v502 = v494;
      uint64_t v202 = type metadata accessor for BlueprintPipelineProcessingResult();
      uint64_t v203 = v504;
      v481 = (char *)sub_1B5FCCC58(v200, *(void *)((char *)v504 + *(int *)(v202 + 52)));
      v480 = v204;
      v504 = sub_1B5FCCEC4(*(void *)((char *)v203 + *(int *)(v202 + 56)));
      v482 = (void *)v205;
      uint64_t v206 = v487;
      uint64_t v207 = (uint64_t)v487 + *(int *)(v197 + 48);
      (*((void (**)(_OWORD *, uint64_t, uint64_t))v199 + 2))(v487, v200, v196);
      sub_1B5E30E70(&v498, v207);
      swift_storeEnumTagMultiPayload();
      uint64_t v208 = v488;
      swift_storeEnumTagMultiPayload();
      uint64_t v209 = (uint64_t)v484;
      v491(v484, v490, v196);
      uint64_t v210 = *((void *)&v494 + 1);
      unsigned long long v469 = __PAIR128__(*((unint64_t *)&v494 + 1), v201);
      uint64_t v211 = *((void *)&v495 + 1);
      uint64_t v212 = v495;
      long long v468 = v495;
      uint64_t v79 = v489;
      sub_1B60899F4((uint64_t)v206, (uint64_t)v481, (uint64_t)v480, (uint64_t)v504, (uint64_t)v482, v208, v209, v200, v489);
      *(void *)&long long v501 = v212;
      *((void *)&v501 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v211;
      *(void *)&unsigned long long v502 = v201;
      *((void *)&v502 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v210;
      goto LABEL_30;
    case 13:
      (*((void (**)(char *, uint64_t))v492 + 1))(v490, v493);
      long long v498 = v495;
      unsigned long long v499 = v494;
      uint64_t v243 = type metadata accessor for BlueprintPipelineUpdate();
      uint64_t v244 = v489;
      uint64_t v245 = 1;
      return __swift_storeEnumTagSinglePayload(v244, v245, 1, v243);
    default:
      uint64_t v58 = v493;
      uint64_t v59 = (uint64_t)&v27[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v60 = v492;
      v491 = (void (*)(char *, char *, uint64_t))*((void *)v492 + 4);
      v491(v54, v27, v58);
      sub_1B5FCE11C(v59, (uint64_t)v479);
      uint64_t v61 = *((void *)&v495 + 1);
      long long v498 = v495;
      uint64_t v62 = v494;
      unsigned long long v499 = v494;
      uint64_t v63 = type metadata accessor for BlueprintPipelineProcessingResult();
      uint64_t v64 = v504;
      uint64_t v65 = (uint64_t)v482;
      v481 = (char *)sub_1B5FCCC58((uint64_t)v54, *(void *)((char *)v504 + *(int *)(v63 + 52)));
      v486 = v66;
      v480 = (char *)sub_1B5FCCEC4(*(void *)((char *)v64 + *(int *)(v63 + 56)));
      v504 = v67;
      if (*(unsigned char *)(v65 + *(void *)(*(void *)v65 + 176)) == 1)
      {
        sub_1B5E001A8(255, qword_1EB6433E8);
        swift_getTupleTypeMetadata2();
        uint64_t v68 = v487;
        (*((void (**)(_OWORD *, char *, uint64_t))v60 + 2))(v487, v54, v58);
        uint64_t v69 = v490;
        uint64_t v70 = *((void *)&v494 + 1);
        - infix<A, B>(_:_:)();
        swift_storeEnumTagMultiPayload();
        uint64_t v71 = v488;
        sub_1B5FCE11C((uint64_t)v479, v488);
        uint64_t v72 = (uint64_t)v485;
        uint64_t v73 = v69;
        uint64_t v74 = v491;
        v491(v485, v73, v58);
        uint64_t v75 = (uint64_t)v484;
        v74(v484, v54, v58);
        *((void *)&v469 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v70;
        uint64_t v76 = v494;
        *(void *)&unsigned long long v469 = v494;
        uint64_t v77 = *((void *)&v495 + 1);
        uint64_t v78 = v495;
        long long v468 = v495;
        uint64_t v79 = v489;
        sub_1B60899F4((uint64_t)v68, (uint64_t)v481, (uint64_t)v486, (uint64_t)v480, (uint64_t)v504, v71, v72, v75, v489);
        *(void *)&long long v498 = v78;
        *((void *)&v498 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v77;
LABEL_16:
        *(void *)&unsigned long long v499 = v76;
        *((void *)&v499 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v70;
      }
      else
      {
        swift_storeEnumTagMultiPayload();
        uint64_t v246 = v488;
        sub_1B5FCE11C((uint64_t)v479, v488);
        uint64_t v247 = (uint64_t)v485;
        uint64_t v248 = v62;
        uint64_t v249 = v61;
        v250 = v491;
        v491(v485, v490, v58);
        uint64_t v251 = (uint64_t)v484;
        v250(v484, v54, v58);
        uint64_t v252 = *((void *)&v494 + 1);
        *(void *)&unsigned long long v469 = v248;
        *((void *)&v469 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)&v494 + 1);
        *((void *)&v468 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v249;
        uint64_t v253 = v495;
        *(void *)&long long v468 = v495;
        uint64_t v79 = v489;
        sub_1B60899F4((uint64_t)v487, (uint64_t)v481, (uint64_t)v486, (uint64_t)v480, (uint64_t)v504, v246, v247, v251, v489);
        *(void *)&long long v498 = v253;
        *((void *)&v498 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v249;
        *(void *)&unsigned long long v499 = v248;
        *((void *)&v499 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v252;
      }
LABEL_30:
      uint64_t v243 = type metadata accessor for BlueprintPipelineUpdate();
      uint64_t v244 = v79;
LABEL_35:
      uint64_t v245 = 0;
      return __swift_storeEnumTagSinglePayload(v244, v245, 1, v243);
  }
}

uint64_t sub_1B5FCC1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v30 = a8;
  uint64_t v31 = a5;
  uint64_t v34 = a4;
  uint64_t v35 = a2;
  uint64_t v32 = a3;
  uint64_t v33 = a1;
  uint64_t v28 = a7;
  uint64_t v29 = a12;
  uint64_t v36 = a9;
  uint64_t v37 = a10;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v39 = swift_getAssociatedConformanceWitness();
  uint64_t v13 = type metadata accessor for BlueprintPipelineUpdate();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v28 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v28 - v16, a6, v13);
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v19 = (v15 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = (char *)swift_allocObject();
  uint64_t v21 = v30;
  *((void *)v20 + 2) = v28;
  *((void *)v20 + 3) = v21;
  *((void *)v20 + 4) = a9;
  *((void *)v20 + 5) = a10;
  uint64_t v22 = v29;
  *((void *)v20 + 6) = a11;
  *((void *)v20 + 7) = v22;
  *((void *)v20 + 8) = v31;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v20[v18], v17, v13);
  uint64_t v23 = &v20[v19];
  uint64_t v25 = v34;
  uint64_t v24 = v35;
  *(void *)uint64_t v23 = v32;
  *((void *)v23 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v25;
  uint64_t v26 = &v20[(v19 + 23) & 0xFFFFFFFFFFFFFFF8];
  *(void *)uint64_t v26 = v33;
  *((void *)v26 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v24;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B61B0F60();
  return swift_release();
}

void sub_1B5FCC3B8(uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v36 = a5;
  uint64_t v37 = a6;
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v35 = a7;
  uint64_t v41 = a9;
  uint64_t v42 = a10;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v44 = swift_getAssociatedConformanceWitness();
  uint64_t v14 = type metadata accessor for BlueprintPipelineUpdate();
  uint64_t v34 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v34 + 64);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v30 - v16;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v32 = v14;
    uint64_t v38 = a4;
    unint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(a12 + 40);
    uint64_t v33 = a8;
    v18(v40, a8, a12);
    uint64_t v21 = v34;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v17, v40, v32);
    unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    unint64_t v31 = (v15 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v23 = (char *)swift_allocObject();
    uint64_t v24 = v32;
    uint64_t v25 = v33;
    *((void *)v23 + 2) = v35;
    *((void *)v23 + 3) = v25;
    *((void *)v23 + 4) = a9;
    *((void *)v23 + 5) = a10;
    *((void *)v23 + 6) = a11;
    *((void *)v23 + 7) = a12;
    uint64_t v26 = v38;
    *((void *)v23 + 8) = v39;
    *((void *)v23 + 9) = v26;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v23[v22], v17, v24);
    uint64_t v27 = &v23[v31];
    uint64_t v28 = v37;
    *(void *)uint64_t v27 = v36;
    *((void *)v27 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v28;
    uint64_t v29 = *(void (**)(uint64_t, uint64_t (*)(int, int, int, int, int, int, int, int, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), char *, uint64_t, uint64_t))(a12 + 48);
    swift_retain();
    swift_retain();
    v29(v40, sub_1B5FCF458, v23, v33, a12);
    swift_release();
    swift_release();
  }
  else
  {
    sub_1B5F7E944();
    unint64_t v19 = (void *)swift_allocError();
    *(void *)uint64_t v20 = 0;
    *(void *)(v20 + 8) = 0;
    *(unsigned char *)(v20 + 16) = 2;
    swift_willThrow();
    v39(v19);
  }
}

void sub_1B5FCC6BC(void *a1, void (*a2)(void *), uint64_t a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v28 = a6;
  uint64_t v29 = a4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v16 = swift_getAssociatedConformanceWitness();
  uint64_t v30 = a9;
  uint64_t v31 = a10;
  uint64_t v32 = AssociatedConformanceWitness;
  uint64_t v33 = v16;
  uint64_t v17 = type metadata accessor for BlueprintPipelineUpdate.Action();
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v28 - v19;
  if (a1)
  {
    id v21 = a1;
    a2(a1);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v29, v17);
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch((int)EnumCaseMultiPayload)
    {
      case 1:
      case 3:
        swift_release();
        goto LABEL_7;
      case 2:
        swift_release();
        sub_1B5FCF540((uint64_t)(v20 + 48));
        goto LABEL_7;
      case 4:
LABEL_7:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
        goto LABEL_10;
      case 5:
        MEMORY[0x1F4188790](EnumCaseMultiPayload);
        strcpy((char *)&v28 - 48, "blueprint diff response animated ");
        uint64_t v30 = a9;
        uint64_t v31 = a10;
        uint64_t v32 = AssociatedConformanceWitness;
        uint64_t v33 = v16;
        uint64_t v30 = type metadata accessor for Blueprint();
        uint64_t v31 = sub_1B5E001A8(255, qword_1EB6433E8);
        sub_1B5FD1160(255, &qword_1E9DAA910, 255, (uint64_t (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse, MEMORY[0x1E4FBB718]);
        uint64_t v32 = v23;
        uint64_t v33 = MEMORY[0x1E4FBB390];
        uint64_t v24 = (uint64_t)&v20[*(int *)(swift_getTupleTypeMetadata() + 48)];
        swift_release();
        __swift_destroy_boxed_opaque_existential_1(v24);
        uint64_t v30 = a9;
        uint64_t v31 = a10;
        uint64_t v32 = AssociatedConformanceWitness;
        uint64_t v33 = v16;
        uint64_t v25 = type metadata accessor for Blueprint();
        (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8))(v20, v25);
        goto LABEL_10;
      case 6:
        uint64_t v30 = a9;
        uint64_t v31 = a10;
        uint64_t v32 = AssociatedConformanceWitness;
        uint64_t v33 = v16;
        uint64_t v26 = type metadata accessor for Blueprint();
        sub_1B5E001A8(255, qword_1EB6433E8);
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20[*(int *)(TupleTypeMetadata2 + 48)]);
        (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v20, v26);
        goto LABEL_10;
      case 7:
      case 8:
        goto LABEL_10;
      case 9:
        uint64_t v30 = 0;
        goto LABEL_11;
      default:
        sub_1B5FCF540((uint64_t)v20);
LABEL_10:
        uint64_t v30 = 1;
LABEL_11:
        a5(&v30);
        break;
    }
  }
}

uint64_t sub_1B5FCCAC0(void **a1)
{
  uint64_t v1 = *a1;
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  sub_1B61B3440();
  sub_1B5E6F544(6, 0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  sub_1B5FCE40C(0, &qword_1EB642658);
  swift_allocObject();
  sub_1B5FCE454(v1);
  return sub_1B61B0DA0();
}

uint64_t sub_1B5FCCBA8()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B5FCCC58(uint64_t a1, uint64_t a2))()
{
  uint64_t v16 = *v2;
  uint64_t v17 = a2;
  uint64_t v4 = *(void *)(v16 + 96);
  uint64_t v5 = *(void *)(v16 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  uint64_t v6 = type metadata accessor for Blueprint();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
  unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  uint64_t v14 = v16;
  *((void *)v13 + 2) = v5;
  *((void *)v13 + 3) = *(void *)(v14 + 88);
  *((void *)v13 + 4) = v4;
  *((void *)v13 + 5) = *(void *)(v14 + 104);
  *((void *)v13 + 6) = v11;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v13[v12], v10, v6);
  *(void *)&v13[(v8 + v12 + 7) & 0xFFFFFFFFFFFFFFF8] = v17;
  sub_1B61B1F70();
  return sub_1B5FCF87C;
}

uint64_t (*sub_1B5FCCEC4(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  *(void *)(swift_allocObject() + 16) = a1;
  sub_1B61B1F70();
  return sub_1B5FCF5C4;
}

uint64_t sub_1B5FCCF2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, result + *(void *)(*(void *)result + 120), a4);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(a6 + 48))(a4, a6);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a4);
    sub_1B61B0400();
    uint64_t result = swift_release();
  }
  uint64_t v13 = *(void *)(a3 + 16);
  if (v13)
  {
    sub_1B61B1F70();
    uint64_t v14 = a3 + 40;
    do
    {
      uint64_t v15 = *(void (**)(uint64_t))(v14 - 8);
      uint64_t v16 = swift_retain();
      v15(v16);
      swift_release();
      v14 += 16;
      --v13;
    }
    while (v13);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B5FCD0DC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    uint64_t v7 = result;
    sub_1B61B1F70();
    for (uint64_t i = a3 + 40; ; i += 16)
    {
      uint64_t v9 = *(void (**)(void *))(i - 8);
      v10[0] = v7;
      v10[1] = a2;
      swift_retain();
      v9(v10);
      if (v3) {
        break;
      }
      swift_release();
      if (!--v4) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1B5FCD18C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v8 = (uint64_t *)(a3 + 16);
  if (*((unsigned char *)a1 + 32))
  {
    if (*((unsigned char *)a1 + 32) == 1)
    {
      uint64_t v11 = a1[2];
      uint64_t v10 = a1[3];
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = v7;
      *(void *)(v12 + 24) = v6;
      swift_beginAccess();
      swift_retain_n();
      swift_retain();
      sub_1B5E19FAC();
      uint64_t v13 = *(void *)(*(void *)(a4 + 16) + 16);
      sub_1B5E1A468();
      uint64_t v14 = *(void *)(a4 + 16);
      *(void *)(v14 + 16) = v13 + 1;
      uint64_t v15 = v14 + 16 * v13;
      *(void *)(v15 + 32) = sub_1B5FD0F24;
      *(void *)(v15 + 4sub_1B5E6F544(4, 0, 0) = v12;
      swift_endAccess();
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = v11;
      *(void *)(v16 + 24) = v10;
      swift_beginAccess();
      swift_retain();
      sub_1B5E19E20();
      uint64_t v17 = *(void *)(*v8 + 16);
      sub_1B5E1A2F0();
      uint64_t v18 = *v8;
      *(void *)(v18 + 16) = v17 + 1;
      uint64_t v19 = v18 + 16 * v17;
      *(void *)(v19 + 32) = sub_1B5E4EC58;
      *(void *)(v19 + 4sub_1B5E6F544(4, 0, 0) = v16;
      swift_endAccess();
      swift_release();
      swift_release();
    }
    else
    {
      swift_beginAccess();
      *(unsigned char *)(a2 + 16) = 0;
    }
  }
  else
  {
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v7;
    *(void *)(v20 + 24) = v6;
    swift_beginAccess();
    swift_retain();
    sub_1B5E19E20();
    uint64_t v21 = *(void *)(*v8 + 16);
    sub_1B5E1A2F0();
    uint64_t v22 = *v8;
    *(void *)(v22 + 16) = v21 + 1;
    uint64_t v23 = v22 + 16 * v21;
    *(void *)(v23 + 32) = sub_1B5EC7DF0;
    *(void *)(v23 + 4sub_1B5E6F544(4, 0, 0) = v20;
    swift_endAccess();
  }
  dispatch_group_leave(a5);
}

void sub_1B5FCD3B0(void (*a1)(void *), uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7)
{
  uint64_t v9 = (uint64_t *)(a5 + *(void *)(*(void *)a5 + 168));
  swift_beginAccess();
  uint64_t v10 = *v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = swift_getAssociatedConformanceWitness();
  sub_1B61B1F70();
  v23[5] = AssociatedTypeWitness;
  v23[6] = v12;
  v23[7] = AssociatedConformanceWitness;
  v23[8] = v14;
  uint64_t v15 = type metadata accessor for BlueprintPipelineProcessor();
  uint64_t v16 = MEMORY[0x1BA9AF780](v10, v15);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v17 = *a6;
  if (v16 == *(void *)(v17 + 16))
  {
    swift_beginAccess();
    uint64_t v18 = *a7;
    v23[0] = v17;
    v23[1] = v18;
    sub_1B61B1F70();
    sub_1B61B1F70();
    a1(v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B5F7E944();
    uint64_t v19 = (void *)swift_allocError();
    *(_OWORD *)uint64_t v20 = xmmword_1B61CB180;
    *(unsigned char *)(v20 + 16) = 2;
    a3();
  }
}

uint64_t sub_1B5FCD5E4(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  v5[0] = a1;
  v5[1] = a2;
  sub_1B61B1F70();
  sub_1B61B1F70();
  a3(v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B5FCD658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a7;
  uint64_t v30 = a8;
  uint64_t v34 = a5;
  uint64_t v27 = *a6;
  uint64_t v11 = v27;
  uint64_t v28 = a3;
  uint64_t v12 = sub_1B61B1D90();
  uint64_t v33 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1B61B1DF0();
  uint64_t v31 = *(void *)(v15 - 8);
  uint64_t v32 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  sub_1B5E75560();
  swift_retain();
  uint64_t v19 = (void *)sub_1B61B2C50();
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = *(void *)(v11 + 80);
  *(_OWORD *)(v21 + 24) = *(_OWORD *)(v27 + 88);
  *(void *)(v21 + 4sub_1B5E6F544(4, 0, 0) = *(void *)(v11 + 104);
  *(void *)(v21 + 48) = v20;
  uint64_t v22 = v29;
  *(void *)(v21 + 56) = v28;
  *(void *)(v21 + 64) = a4;
  *(void *)(v21 + 72) = v22;
  *(void *)(v21 + 8sub_1B5E6F544(4, 0, 0) = sub_1B5FD0F40;
  uint64_t v23 = v30;
  *(void *)(v21 + 88) = v18;
  *(void *)(v21 + 96) = v23;
  aBlock[4] = sub_1B5FD0FA0;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B5E3729C;
  aBlock[3] = &block_descriptor_122;
  uint64_t v24 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B61B1DB0();
  uint64_t v35 = MEMORY[0x1E4FBC860];
  sub_1B5E5C57C();
  sub_1B5FD1160(0, (unint64_t *)&qword_1EB647AD8, 255, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1B5E5C5CC();
  sub_1B61B3100();
  sub_1B61B2BF0();
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v12);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v32);
  swift_release();
  return swift_release();
}

void sub_1B5FCDA10(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t), uint64_t a6, uint64_t a7)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v21 = a5;
    uint64_t v12 = (uint64_t *)(Strong + *(void *)(*(void *)Strong + 168));
    swift_beginAccess();
    uint64_t v13 = *v12;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    sub_1B61B1F70();
    uint64_t v14 = type metadata accessor for BlueprintPipelineProcessor();
    uint64_t v15 = MEMORY[0x1BA9AF780](v13, v14);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v16 = *(void *)(a4 + 16);
    if (v15 == *(void *)(v16 + 16))
    {
      swift_beginAccess();
      uint64_t v17 = *(void *)(a7 + 16);
      sub_1B61B1F70();
      sub_1B61B1F70();
      v21(v16, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    sub_1B5F7E944();
    uint64_t v18 = (void *)swift_allocError();
    *(_OWORD *)uint64_t v20 = xmmword_1B61CB180;
    *(unsigned char *)(v20 + 16) = 2;
    a2();
    swift_release();
  }
  else
  {
    sub_1B5F7E944();
    uint64_t v18 = (void *)swift_allocError();
    *(_OWORD *)uint64_t v19 = xmmword_1B61CB190;
    *(unsigned char *)(v19 + 16) = 2;
    a2();
  }
}

uint64_t type metadata accessor for BlueprintPipelineToken()
{
  return self;
}

uint64_t sub_1B5FCDCD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B5FC36EC(a1, a2, a3, a4, v4[4], v4[5], v4[2], v4[3]);
}

uint64_t sub_1B5FCDCE0(uint64_t a1)
{
  return sub_1B5FCDE0C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1B5FC5494);
}

uint64_t sub_1B5FCDD0C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5FCDD44(uint64_t a1, uint64_t a2)
{
  return sub_1B5FC555C(a1, a2, *(void *)(v2 + 32));
}

uint64_t sub_1B5FCDD64(uint64_t a1, uint64_t a2)
{
  return sub_1B5FC5688(a1, a2, v2[4], v2[2], v2[3], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B5FC4E38);
}

uint64_t sub_1B5FCDD98(uint64_t a1)
{
  return sub_1B5FC5778(a1);
}

void *sub_1B5FCDDBC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1B5FCDF38(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1B5FCDDE0(uint64_t a1)
{
  return sub_1B5FCDE0C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1B5FC51B0);
}

uint64_t sub_1B5FCDE0C(uint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  return a2(a1, *(void *)(v2 + 64), v2+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 32) - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 32) - 8) + 80)));
}

uint64_t sub_1B5FCDE6C(uint64_t a1)
{
  return sub_1B5FC5278(a1);
}

uint64_t sub_1B5FCDE80()
{
  return sub_1B5FC4A18(v0[4], v0[5], v0[6], v0[2], v0[3]);
}

uint64_t sub_1B5FCDEA4(uint64_t a1, uint64_t a2)
{
  return sub_1B5FC5688(a1, a2, v2[4], v2[2], v2[3], sub_1B5FC4CE8);
}

uint64_t sub_1B5FCDED8()
{
  return swift_deallocObject();
}

uint64_t sub_1B5FCDF10()
{
  return sub_1B61B2CF0();
}

void *sub_1B5FCDF38(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return OUTLINED_FUNCTION_51_8(a1, *(void *)(v8 + 40), a3, a4, a5, a6, a7, a8, v10, v11);
}

void sub_1B5FCDF74()
{
  OUTLINED_FUNCTION_0_13();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = (uint64_t *)(v0 + ((*(void *)(v3 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1B5FC534C(v5, v6, v0 + v2, *v4, v4[1], v7, v8);
}

uint64_t sub_1B5FCDFD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B5FC58C4(a1, a2, a3, a4);
}

uint64_t sub_1B5FCDFDC()
{
  uint64_t v1 = type metadata accessor for BlueprintBookmark();
  OUTLINED_FUNCTION_5_46();
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v4 = sub_1B61AFCB0();
      if (!OUTLINED_FUNCTION_83_3(v4))
      {
        OUTLINED_FUNCTION_3_0();
        (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v3, v1);
      }
      break;
    case 1u:
      sub_1B61AFCB0();
      OUTLINED_FUNCTION_19_1();
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v3, v7);
      break;
    case 2u:
    case 3u:
    case 4u:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  return swift_deallocObject();
}

uint64_t sub_1B5FCE11C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BlueprintBookmark();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B5FCE180(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for BlueprintBookmark();
  OUTLINED_FUNCTION_4_10(v3);
  return sub_1B5FC606C(a1, *(void *)(v1 + 48), v1 + ((*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
}

uint64_t sub_1B5FCE1D0(uint64_t (*a1)(uint64_t a1, uint64_t a2), uint64_t a2)
{
  return sub_1B5FC632C(a1, a2, v2);
}

uint64_t sub_1B5FCE1EC(uint64_t a1)
{
  return sub_1B5FC5278(a1);
}

void *sub_1B5FCE1F8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return OUTLINED_FUNCTION_51_8(a1, *(void *)(v8 + 24), a3, a4, a5, a6, a7, a8, v10, v11);
}

void sub_1B5FCE234(void *a1, uint64_t a2)
{
  sub_1B5FC642C(a1, a2, *(void (**)(unsigned __int8 *))(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1B5FCE244()
{
  return 32;
}

__n128 sub_1B5FCE250(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for BlueprintPipelineError()
{
  return &type metadata for BlueprintPipelineError;
}

uint64_t sub_1B5FCE26C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t type metadata accessor for BlueprintPipeline()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for BlueprintPipeline(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BlueprintPipeline);
}

uint64_t dispatch thunk of BlueprintPipeline.__allocating_init(blueprintProvider:integrator:name:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of BlueprintPipeline.__allocating_init(blueprintProvider:integrator:name:useDiffableDataSource:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t sub_1B5FCE3E8(void **a1)
{
  return sub_1B5FCCAC0(a1);
}

uint64_t sub_1B5FCE404()
{
  return sub_1B5FCCBA8();
}

void sub_1B5FCE40C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1B61B0E10();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

id sub_1B5FCE454(id result)
{
  if ((unint64_t)result >= 2) {
    return result;
  }
  return result;
}

uint64_t sub_1B5FCE464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B5FD109C(a1, a2, a3, a4, sub_1B5FCC1A0);
}

void sub_1B5FCE47C()
{
  OUTLINED_FUNCTION_83();
  uint64_t v4 = (void *)v0[4];
  uint64_t v3 = v0[5];
  uint64_t v5 = OUTLINED_FUNCTION_69_4();
  uint64_t v6 = OUTLINED_FUNCTION_68_3();
  uint64_t v7 = OUTLINED_FUNCTION_44_12(v6);
  OUTLINED_FUNCTION_5_46();
  uint64_t v55 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v54 = *(void *)(v9 + 64);
  swift_release();
  OUTLINED_FUNCTION_38_13();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      if (v0[5])
      {
        uint64_t v10 = (uint64_t)(v0 + 2);
        goto LABEL_15;
      }
      goto LABEL_16;
    case 1u:
    case 3u:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v0);
      goto LABEL_11;
    case 2u:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v0);
      swift_release();
      if (!v0[11]) {
        goto LABEL_16;
      }
      uint64_t v10 = (uint64_t)(v0 + 8);
LABEL_15:
      __swift_destroy_boxed_opaque_existential_1(v10);
LABEL_16:
      OUTLINED_FUNCTION_70_5();
      OUTLINED_FUNCTION_70_5();
      uint64_t v31 = (char *)v0 + *(int *)(v7 + 60);
      type metadata accessor for BlueprintBookmark();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v32 = sub_1B61AFCB0();
          if (!OUTLINED_FUNCTION_75_3(v32))
          {
            OUTLINED_FUNCTION_3_0();
            (*(void (**)(char *, uint64_t *))(v33 + 8))(v31, v1);
          }
          break;
        case 1u:
          sub_1B61AFCB0();
          OUTLINED_FUNCTION_19_1();
          (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v35);
          break;
        case 2u:
        case 3u:
        case 4u:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
      OUTLINED_FUNCTION_62_7();
      if (*(void *)(v7 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(v7 + 16);
      }
      uint64_t v56 = v4;
      uint64_t v57 = v3;
      uint64_t v58 = v5;
      uint64_t v59 = &protocol requirements base descriptor for BlueprintProviderType;
      uint64_t v36 = v7 + *(int *)(OUTLINED_FUNCTION_17_23() + 56);
      uint64_t v56 = v4;
      uint64_t v57 = v3;
      uint64_t v58 = v5;
      uint64_t v59 = &protocol requirements base descriptor for BlueprintProviderType;
      uint64_t v37 = OUTLINED_FUNCTION_16_20();
      uint64_t WitnessTable = swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v39 = OUTLINED_FUNCTION_50_12();
      OUTLINED_FUNCTION_6_0();
      uint64_t v41 = *(void (**)(void, void))(v40 + 8);
      uint64_t v50 = v40 + 8;
      uint64_t v51 = v41;
      v41(v36, v39);
      uint64_t v42 = OUTLINED_FUNCTION_22_1();
      uint64_t v43 = swift_getWitnessTable();
      uint64_t v44 = swift_getWitnessTable();
      uint64_t v45 = swift_getWitnessTable();
      uint64_t v56 = (void *)v37;
      uint64_t v57 = v42;
      uint64_t v58 = v43;
      uint64_t v59 = (void *)WitnessTable;
      uint64_t v60 = v2;
      uint64_t v61 = v44;
      OUTLINED_FUNCTION_10_7(v45);
      OUTLINED_FUNCTION_6_0();
      uint64_t v47 = *(void (**)(void))(v46 + 8);
      OUTLINED_FUNCTION_40_13();
      v47();
      OUTLINED_FUNCTION_65_5();
      OUTLINED_FUNCTION_59_7();
      if (*(void *)(v7 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(v7 + 16);
      }
      OUTLINED_FUNCTION_58_7();
      OUTLINED_FUNCTION_5_1();
      v48();
      OUTLINED_FUNCTION_40_13();
      v47();
      OUTLINED_FUNCTION_65_5();
      swift_release();
      swift_release();
      swift_deallocObject();
      OUTLINED_FUNCTION_73();
      return;
    case 4u:
      uint64_t v10 = (uint64_t)v0;
      goto LABEL_15;
    case 5u:
      swift_bridgeObjectRelease();
      if (v0[5]) {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
      }
      uint64_t v56 = v4;
      uint64_t v57 = v3;
      uint64_t v58 = v5;
      uint64_t v59 = &protocol requirements base descriptor for BlueprintProviderType;
      uint64_t v11 = OUTLINED_FUNCTION_17_23();
      uint64_t v52 = (uint64_t)v0 + *(int *)(v11 + 56);
      uint64_t v53 = (char *)v11;
      uint64_t v56 = v4;
      uint64_t v57 = v3;
      uint64_t v58 = v5;
      uint64_t v59 = &protocol requirements base descriptor for BlueprintProviderType;
      uint64_t v12 = OUTLINED_FUNCTION_16_20();
      uint64_t v13 = swift_getWitnessTable();
      uint64_t v14 = swift_getWitnessTable();
      OUTLINED_FUNCTION_48_10(v14);
      OUTLINED_FUNCTION_19_1();
      OUTLINED_FUNCTION_5_1();
      v15();
      uint64_t v52 = (uint64_t)v0 + *(int *)(v11 + 60);
      uint64_t v2 = OUTLINED_FUNCTION_22_1();
      uint64_t v50 = swift_getWitnessTable();
      uint64_t v16 = swift_getWitnessTable();
      uint64_t v17 = swift_getWitnessTable();
      uint64_t v56 = (void *)v12;
      uint64_t v57 = v2;
      uint64_t v58 = v50;
      uint64_t v59 = (void *)v13;
      uint64_t v60 = (uint64_t)v51;
      uint64_t v61 = v16;
      OUTLINED_FUNCTION_10_7(v17);
      OUTLINED_FUNCTION_19_1();
      OUTLINED_FUNCTION_5_1();
      v18();
      uint64_t v19 = OUTLINED_FUNCTION_82_3();
      unint64_t v1 = &v49;
      MEMORY[0x1F4188790](v19);
      OUTLINED_FUNCTION_47_9();
      OUTLINED_FUNCTION_19_20(v20);
      uint64_t v57 = OUTLINED_FUNCTION_23_21(v21, qword_1EB6433E8);
      sub_1B5FD1160(255, &qword_1E9DAA910, 255, (uint64_t (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse, MEMORY[0x1E4FBB718]);
      uint64_t v23 = OUTLINED_FUNCTION_34_12(v22, MEMORY[0x1E4FBB390]);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(int *)(v23 + 48));
LABEL_11:
      swift_release();
      goto LABEL_16;
    case 6u:
      swift_bridgeObjectRelease();
      if (v0[5]) {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
      }
      uint64_t v24 = OUTLINED_FUNCTION_17_23();
      uint64_t v56 = v4;
      uint64_t v57 = v3;
      uint64_t v58 = v5;
      uint64_t v59 = &protocol requirements base descriptor for BlueprintProviderType;
      unint64_t v1 = (uint64_t *)OUTLINED_FUNCTION_16_20();
      uint64_t v52 = swift_getWitnessTable();
      uint64_t v25 = swift_getWitnessTable();
      OUTLINED_FUNCTION_49_12(v25);
      OUTLINED_FUNCTION_19_1();
      OUTLINED_FUNCTION_5_1();
      v26();
      uint64_t v53 = (char *)v0 + *(int *)(v24 + 60);
      uint64_t v2 = OUTLINED_FUNCTION_22_1();
      uint64_t v50 = swift_getWitnessTable();
      uint64_t v27 = swift_getWitnessTable();
      uint64_t v28 = swift_getWitnessTable();
      uint64_t v56 = v1;
      uint64_t v57 = v2;
      uint64_t v58 = v50;
      uint64_t v59 = (void *)v52;
      uint64_t v60 = (uint64_t)v51;
      uint64_t v61 = v27;
      OUTLINED_FUNCTION_10_7(v28);
      OUTLINED_FUNCTION_19_1();
      OUTLINED_FUNCTION_5_1();
      v29();
      uint64_t v30 = OUTLINED_FUNCTION_82_3();
      OUTLINED_FUNCTION_23_21(v30, qword_1EB6433E8);
      uint64_t v10 = (uint64_t)v0 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      goto LABEL_15;
    default:
      goto LABEL_16;
  }
}

#error "1B5FCECD4: call analysis failed (funcsize=57)"

void sub_1B5FCECEC()
{
  OUTLINED_FUNCTION_83();
  uint64_t v4 = (void *)v0[4];
  uint64_t v3 = v0[5];
  uint64_t v5 = OUTLINED_FUNCTION_69_4();
  uint64_t v6 = OUTLINED_FUNCTION_68_3();
  uint64_t v7 = OUTLINED_FUNCTION_44_12(v6);
  OUTLINED_FUNCTION_5_46();
  uint64_t v55 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v54 = *(void *)(v9 + 64);
  swift_release();
  OUTLINED_FUNCTION_38_13();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      if (v0[5])
      {
        uint64_t v10 = (uint64_t)(v0 + 2);
        goto LABEL_15;
      }
      goto LABEL_16;
    case 1u:
    case 3u:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v0);
      goto LABEL_11;
    case 2u:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v0);
      swift_release();
      if (!v0[11]) {
        goto LABEL_16;
      }
      uint64_t v10 = (uint64_t)(v0 + 8);
LABEL_15:
      __swift_destroy_boxed_opaque_existential_1(v10);
LABEL_16:
      OUTLINED_FUNCTION_70_5();
      OUTLINED_FUNCTION_70_5();
      uint64_t v31 = (char *)v0 + *(int *)(v7 + 60);
      type metadata accessor for BlueprintBookmark();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v32 = sub_1B61AFCB0();
          if (!OUTLINED_FUNCTION_75_3(v32))
          {
            OUTLINED_FUNCTION_3_0();
            (*(void (**)(char *, uint64_t *))(v33 + 8))(v31, v1);
          }
          break;
        case 1u:
          sub_1B61AFCB0();
          OUTLINED_FUNCTION_19_1();
          (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v35);
          break;
        case 2u:
        case 3u:
        case 4u:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
      OUTLINED_FUNCTION_62_7();
      if (*(void *)(v7 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(v7 + 16);
      }
      uint64_t v56 = v4;
      uint64_t v57 = v3;
      uint64_t v58 = v5;
      uint64_t v59 = &protocol requirements base descriptor for BlueprintProviderType;
      uint64_t v36 = v7 + *(int *)(OUTLINED_FUNCTION_17_23() + 56);
      uint64_t v56 = v4;
      uint64_t v57 = v3;
      uint64_t v58 = v5;
      uint64_t v59 = &protocol requirements base descriptor for BlueprintProviderType;
      uint64_t v37 = OUTLINED_FUNCTION_16_20();
      uint64_t WitnessTable = swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v39 = OUTLINED_FUNCTION_50_12();
      OUTLINED_FUNCTION_6_0();
      uint64_t v41 = *(void (**)(void, void))(v40 + 8);
      uint64_t v50 = v40 + 8;
      uint64_t v51 = v41;
      v41(v36, v39);
      uint64_t v42 = OUTLINED_FUNCTION_22_1();
      uint64_t v43 = swift_getWitnessTable();
      uint64_t v44 = swift_getWitnessTable();
      uint64_t v45 = swift_getWitnessTable();
      uint64_t v56 = (void *)v37;
      uint64_t v57 = v42;
      uint64_t v58 = v43;
      uint64_t v59 = (void *)WitnessTable;
      uint64_t v60 = v2;
      uint64_t v61 = v44;
      OUTLINED_FUNCTION_10_7(v45);
      OUTLINED_FUNCTION_6_0();
      uint64_t v47 = *(void (**)(void))(v46 + 8);
      OUTLINED_FUNCTION_40_13();
      v47();
      OUTLINED_FUNCTION_65_5();
      OUTLINED_FUNCTION_59_7();
      if (*(void *)(v7 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(v7 + 16);
      }
      OUTLINED_FUNCTION_58_7();
      OUTLINED_FUNCTION_5_1();
      v48();
      OUTLINED_FUNCTION_40_13();
      v47();
      OUTLINED_FUNCTION_65_5();
      swift_release();
      swift_deallocObject();
      OUTLINED_FUNCTION_73();
      return;
    case 4u:
      uint64_t v10 = (uint64_t)v0;
      goto LABEL_15;
    case 5u:
      swift_bridgeObjectRelease();
      if (v0[5]) {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
      }
      uint64_t v56 = v4;
      uint64_t v57 = v3;
      uint64_t v58 = v5;
      uint64_t v59 = &protocol requirements base descriptor for BlueprintProviderType;
      uint64_t v11 = OUTLINED_FUNCTION_17_23();
      uint64_t v52 = (uint64_t)v0 + *(int *)(v11 + 56);
      uint64_t v53 = (char *)v11;
      uint64_t v56 = v4;
      uint64_t v57 = v3;
      uint64_t v58 = v5;
      uint64_t v59 = &protocol requirements base descriptor for BlueprintProviderType;
      uint64_t v12 = OUTLINED_FUNCTION_16_20();
      uint64_t v13 = swift_getWitnessTable();
      uint64_t v14 = swift_getWitnessTable();
      OUTLINED_FUNCTION_48_10(v14);
      OUTLINED_FUNCTION_19_1();
      OUTLINED_FUNCTION_5_1();
      v15();
      uint64_t v52 = (uint64_t)v0 + *(int *)(v11 + 60);
      uint64_t v2 = OUTLINED_FUNCTION_22_1();
      uint64_t v50 = swift_getWitnessTable();
      uint64_t v16 = swift_getWitnessTable();
      uint64_t v17 = swift_getWitnessTable();
      uint64_t v56 = (void *)v12;
      uint64_t v57 = v2;
      uint64_t v58 = v50;
      uint64_t v59 = (void *)v13;
      uint64_t v60 = (uint64_t)v51;
      uint64_t v61 = v16;
      OUTLINED_FUNCTION_10_7(v17);
      OUTLINED_FUNCTION_19_1();
      OUTLINED_FUNCTION_5_1();
      v18();
      uint64_t v19 = OUTLINED_FUNCTION_82_3();
      unint64_t v1 = &v49;
      MEMORY[0x1F4188790](v19);
      OUTLINED_FUNCTION_47_9();
      OUTLINED_FUNCTION_19_20(v20);
      uint64_t v57 = OUTLINED_FUNCTION_23_21(v21, qword_1EB6433E8);
      sub_1B5FD1160(255, &qword_1E9DAA910, 255, (uint64_t (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse, MEMORY[0x1E4FBB718]);
      uint64_t v23 = OUTLINED_FUNCTION_34_12(v22, MEMORY[0x1E4FBB390]);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(int *)(v23 + 48));
LABEL_11:
      swift_release();
      goto LABEL_16;
    case 6u:
      swift_bridgeObjectRelease();
      if (v0[5]) {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
      }
      uint64_t v24 = OUTLINED_FUNCTION_17_23();
      uint64_t v56 = v4;
      uint64_t v57 = v3;
      uint64_t v58 = v5;
      uint64_t v59 = &protocol requirements base descriptor for BlueprintProviderType;
      unint64_t v1 = (uint64_t *)OUTLINED_FUNCTION_16_20();
      uint64_t v52 = swift_getWitnessTable();
      uint64_t v25 = swift_getWitnessTable();
      OUTLINED_FUNCTION_49_12(v25);
      OUTLINED_FUNCTION_19_1();
      OUTLINED_FUNCTION_5_1();
      v26();
      uint64_t v53 = (char *)v0 + *(int *)(v24 + 60);
      uint64_t v2 = OUTLINED_FUNCTION_22_1();
      uint64_t v50 = swift_getWitnessTable();
      uint64_t v27 = swift_getWitnessTable();
      uint64_t v28 = swift_getWitnessTable();
      uint64_t v56 = v1;
      uint64_t v57 = v2;
      uint64_t v58 = v50;
      uint64_t v59 = (void *)v52;
      uint64_t v60 = (uint64_t)v51;
      uint64_t v61 = v27;
      OUTLINED_FUNCTION_10_7(v28);
      OUTLINED_FUNCTION_19_1();
      OUTLINED_FUNCTION_5_1();
      v29();
      uint64_t v30 = OUTLINED_FUNCTION_82_3();
      OUTLINED_FUNCTION_23_21(v30, qword_1EB6433E8);
      uint64_t v10 = (uint64_t)v0 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      goto LABEL_15;
    default:
      goto LABEL_16;
  }
}

#error "1B5FCF528: call analysis failed (funcsize=55)"

uint64_t sub_1B5FCF540(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B5FCF594()
{
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2();
  return swift_deallocObject();
}

uint64_t sub_1B5FCF5C4(uint64_t a1, uint64_t a2)
{
  return sub_1B5FCD0DC(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1B5FCF5E0()
{
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_86();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_5_46();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v2 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + v2 + 16);
  }
  type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1B61B0670();
  OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_5_1();
  v3();
  type metadata accessor for BlueprintItem();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1B61B0A30();
  OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_5_1();
  v4();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B5FCF87C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  OUTLINED_FUNCTION_81_3();
  OUTLINED_FUNCTION_81_3();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_3(v4);
  OUTLINED_FUNCTION_55_0();
  uint64_t v6 = v0[6];
  uint64_t v8 = *(void *)((char *)v0 + v7);
  return sub_1B5FCCF2C(v6, (uint64_t)v0 + v5, v8, v1, v2, v3);
}

void sub_1B5FCF998()
{
}

void sub_1B5FCF9A0()
{
  OUTLINED_FUNCTION_83();
  uint64_t TupleTypeMetadata = *(void *)(v0 + 40);
  OUTLINED_FUNCTION_86();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintModifierResult();
  OUTLINED_FUNCTION_5_46();
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      OUTLINED_FUNCTION_15_24();
      if (*(void *)(v3 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(v3 + 16);
      }
      OUTLINED_FUNCTION_11_26();
      OUTLINED_FUNCTION_2_75();
      swift_getWitnessTable();
      swift_getWitnessTable();
      OUTLINED_FUNCTION_8_33();
      OUTLINED_FUNCTION_19_1();
      uint64_t v11 = OUTLINED_FUNCTION_6_47();
      v12(v11);
      OUTLINED_FUNCTION_7_40();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t WitnessTable = swift_getWitnessTable();
      OUTLINED_FUNCTION_4_61(WitnessTable);
      OUTLINED_FUNCTION_19_1();
      uint64_t v14 = OUTLINED_FUNCTION_6_47();
      v15(v14);
      OUTLINED_FUNCTION_25_16();
      uint64_t TupleTypeMetadata = type metadata accessor for BlueprintBookmark();
      OUTLINED_FUNCTION_61_5();
      switch(OUTLINED_FUNCTION_66_5())
      {
        case 0u:
          goto LABEL_38;
        case 1u:
          goto LABEL_40;
        case 2u:
        case 3u:
        case 4u:
          goto LABEL_37;
        default:
          goto LABEL_51;
      }
      break;
    case 1u:
      OUTLINED_FUNCTION_15_24();
      if (*(void *)(v3 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(v3 + 16);
      }
      OUTLINED_FUNCTION_11_26();
      OUTLINED_FUNCTION_2_75();
      swift_getWitnessTable();
      swift_getWitnessTable();
      OUTLINED_FUNCTION_8_33();
      OUTLINED_FUNCTION_19_1();
      uint64_t v16 = OUTLINED_FUNCTION_6_47();
      v17(v16);
      OUTLINED_FUNCTION_7_40();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v18 = swift_getWitnessTable();
      OUTLINED_FUNCTION_4_61(v18);
      OUTLINED_FUNCTION_19_1();
      uint64_t v19 = OUTLINED_FUNCTION_6_47();
      v20(v19);
      OUTLINED_FUNCTION_25_16();
      uint64_t v21 = type metadata accessor for BlueprintBookmark();
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v23 = v3 + *(int *)(TupleTypeMetadata3 + 48);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v85 = sub_1B61AFCB0();
          if (!OUTLINED_FUNCTION_56_6(v85))
          {
            OUTLINED_FUNCTION_3_0();
            (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v23, v21);
          }
          break;
        case 1u:
          sub_1B61AFCB0();
          OUTLINED_FUNCTION_19_1();
          (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v23, v88);
          break;
        case 2u:
        case 3u:
        case 4u:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
      uint64_t v89 = *(int *)(TupleTypeMetadata3 + 64);
      goto LABEL_49;
    case 2u:
      OUTLINED_FUNCTION_15_24();
      if (*(void *)(v3 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(v3 + 16);
      }
      OUTLINED_FUNCTION_11_26();
      OUTLINED_FUNCTION_2_75();
      swift_getWitnessTable();
      swift_getWitnessTable();
      OUTLINED_FUNCTION_8_33();
      OUTLINED_FUNCTION_19_1();
      uint64_t v24 = OUTLINED_FUNCTION_6_47();
      v25(v24);
      OUTLINED_FUNCTION_7_40();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v26 = swift_getWitnessTable();
      OUTLINED_FUNCTION_4_61(v26);
      OUTLINED_FUNCTION_19_1();
      uint64_t v27 = OUTLINED_FUNCTION_6_47();
      v28(v27);
      OUTLINED_FUNCTION_25_16();
      uint64_t TupleTypeMetadata = type metadata accessor for BlueprintBookmark();
      OUTLINED_FUNCTION_61_5();
      switch(OUTLINED_FUNCTION_66_5())
      {
        case 0u:
          goto LABEL_38;
        case 1u:
          goto LABEL_40;
        case 2u:
        case 3u:
        case 4u:
          goto LABEL_37;
        default:
          goto LABEL_51;
      }
      break;
    case 3u:
      OUTLINED_FUNCTION_15_24();
      if (*(void *)(v3 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(v3 + 16);
      }
      OUTLINED_FUNCTION_11_26();
      OUTLINED_FUNCTION_2_75();
      swift_getWitnessTable();
      swift_getWitnessTable();
      OUTLINED_FUNCTION_8_33();
      OUTLINED_FUNCTION_19_1();
      uint64_t v29 = OUTLINED_FUNCTION_6_47();
      v30(v29);
      OUTLINED_FUNCTION_7_40();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v31 = swift_getWitnessTable();
      OUTLINED_FUNCTION_4_61(v31);
      OUTLINED_FUNCTION_19_1();
      uint64_t v32 = OUTLINED_FUNCTION_6_47();
      v33(v32);
      uint64_t v34 = OUTLINED_FUNCTION_25_16();
      uint64_t TupleTypeMetadata = OUTLINED_FUNCTION_23_21(v34, qword_1EB6433E8);
      type metadata accessor for BlueprintBookmark();
      uint64_t v35 = OUTLINED_FUNCTION_45_10();
      switch(OUTLINED_FUNCTION_43_10(v35))
      {
        case 0u:
          goto LABEL_38;
        case 1u:
          goto LABEL_40;
        case 2u:
        case 3u:
        case 4u:
          goto LABEL_37;
        default:
          goto LABEL_51;
      }
      break;
    case 4u:
      OUTLINED_FUNCTION_15_24();
      if (*(void *)(v3 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(v3 + 16);
      }
      OUTLINED_FUNCTION_11_26();
      uint64_t v36 = OUTLINED_FUNCTION_2_75();
      swift_getWitnessTable();
      swift_getWitnessTable();
      OUTLINED_FUNCTION_8_33();
      OUTLINED_FUNCTION_19_1();
      uint64_t v37 = OUTLINED_FUNCTION_6_47();
      v38(v37);
      OUTLINED_FUNCTION_7_40();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v39 = swift_getWitnessTable();
      OUTLINED_FUNCTION_4_61(v39);
      OUTLINED_FUNCTION_19_1();
      uint64_t v40 = OUTLINED_FUNCTION_6_47();
      v41(v40);
      uint64_t v42 = OUTLINED_FUNCTION_25_16();
      MEMORY[0x1F4188790](v42);
      OUTLINED_FUNCTION_29_15();
      OUTLINED_FUNCTION_18_21(v43);
      OUTLINED_FUNCTION_23_21(v44, qword_1EB6433E8);
      uint64_t v45 = type metadata accessor for BlueprintBookmark();
      uint64_t v46 = (int *)OUTLINED_FUNCTION_35_13(v45, (uint64_t)&type metadata for BlueprintAnimation);
      __swift_destroy_boxed_opaque_existential_1(v3 + v46[12]);
      uint64_t v47 = v3 + v46[16];
      type metadata accessor for BlueprintBookmark();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v90 = sub_1B61AFCB0();
          if (!OUTLINED_FUNCTION_56_6(v90))
          {
            OUTLINED_FUNCTION_3_0();
            (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v47, v36);
          }
          break;
        case 1u:
          sub_1B61AFCB0();
          OUTLINED_FUNCTION_19_1();
          (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v47, v93);
          break;
        case 2u:
        case 3u:
        case 4u:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
      uint64_t v89 = v46[20];
LABEL_49:
      uint64_t v58 = v3 + v89;
      if (*(void *)(v58 + 40)) {
        goto LABEL_50;
      }
      break;
    case 5u:
      OUTLINED_FUNCTION_15_24();
      if (*(void *)(v3 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(v3 + 16);
      }
      OUTLINED_FUNCTION_11_26();
      OUTLINED_FUNCTION_2_75();
      swift_getWitnessTable();
      swift_getWitnessTable();
      OUTLINED_FUNCTION_8_33();
      OUTLINED_FUNCTION_19_1();
      uint64_t v59 = OUTLINED_FUNCTION_6_47();
      v60(v59);
      OUTLINED_FUNCTION_7_40();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v61 = swift_getWitnessTable();
      OUTLINED_FUNCTION_4_61(v61);
      OUTLINED_FUNCTION_19_1();
      uint64_t v62 = OUTLINED_FUNCTION_6_47();
      v63(v62);
      uint64_t v64 = OUTLINED_FUNCTION_25_16();
      uint64_t TupleTypeMetadata = OUTLINED_FUNCTION_23_21(v64, qword_1EB6433E8);
      type metadata accessor for BlueprintBookmark();
      uint64_t v65 = OUTLINED_FUNCTION_45_10();
      switch(OUTLINED_FUNCTION_43_10(v65))
      {
        case 0u:
          goto LABEL_38;
        case 1u:
          goto LABEL_40;
        case 2u:
        case 3u:
        case 4u:
          goto LABEL_37;
        default:
          goto LABEL_51;
      }
      break;
    case 6u:
      OUTLINED_FUNCTION_15_24();
      if (*(void *)(v3 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(v3 + 16);
      }
      OUTLINED_FUNCTION_11_26();
      OUTLINED_FUNCTION_2_75();
      swift_getWitnessTable();
      swift_getWitnessTable();
      OUTLINED_FUNCTION_8_33();
      OUTLINED_FUNCTION_19_1();
      uint64_t v66 = OUTLINED_FUNCTION_6_47();
      v67(v66);
      OUTLINED_FUNCTION_7_40();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v68 = swift_getWitnessTable();
      OUTLINED_FUNCTION_4_61(v68);
      OUTLINED_FUNCTION_19_1();
      uint64_t v69 = OUTLINED_FUNCTION_6_47();
      v70(v69);
      uint64_t v71 = OUTLINED_FUNCTION_25_16();
      OUTLINED_FUNCTION_23_21(v71, qword_1EB6433E8);
      type metadata accessor for BlueprintViewActionResponse();
      uint64_t v72 = swift_getTupleTypeMetadata3();
      OUTLINED_FUNCTION_32_16(v72);
      break;
    case 7u:
      OUTLINED_FUNCTION_15_24();
      if (*(void *)(v3 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(v3 + 16);
      }
      OUTLINED_FUNCTION_11_26();
      OUTLINED_FUNCTION_2_75();
      swift_getWitnessTable();
      swift_getWitnessTable();
      OUTLINED_FUNCTION_8_33();
      OUTLINED_FUNCTION_19_1();
      uint64_t v48 = OUTLINED_FUNCTION_6_47();
      v49(v48);
      OUTLINED_FUNCTION_7_40();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v50 = swift_getWitnessTable();
      OUTLINED_FUNCTION_4_61(v50);
      OUTLINED_FUNCTION_19_1();
      uint64_t v51 = OUTLINED_FUNCTION_6_47();
      v52(v51);
      uint64_t v53 = OUTLINED_FUNCTION_25_16();
      MEMORY[0x1F4188790](v53);
      OUTLINED_FUNCTION_29_15();
      OUTLINED_FUNCTION_18_21(v54);
      OUTLINED_FUNCTION_23_21(v55, qword_1EB6433E8);
      uint64_t v56 = type metadata accessor for BlueprintViewActionResponse();
      uint64_t v57 = OUTLINED_FUNCTION_35_13(v56, (uint64_t)&type metadata for BlueprintAnimation);
      OUTLINED_FUNCTION_32_16(v57);
      uint64_t v58 = v3 + *(int *)(v57 + 80);
      if (!*(void *)(v58 + 40)) {
        break;
      }
LABEL_50:
      __swift_destroy_boxed_opaque_existential_1(v58 + 16);
      break;
    case 8u:
    case 0xCu:
      OUTLINED_FUNCTION_15_24();
      if (*(void *)(v3 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(v3 + 16);
      }
      OUTLINED_FUNCTION_11_26();
      OUTLINED_FUNCTION_2_75();
      swift_getWitnessTable();
      swift_getWitnessTable();
      OUTLINED_FUNCTION_8_33();
      OUTLINED_FUNCTION_19_1();
      uint64_t v4 = OUTLINED_FUNCTION_6_47();
      v5(v4);
      OUTLINED_FUNCTION_7_40();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v6 = swift_getWitnessTable();
      OUTLINED_FUNCTION_4_61(v6);
      OUTLINED_FUNCTION_19_1();
      uint64_t v7 = OUTLINED_FUNCTION_6_47();
      v8(v7);
      uint64_t v9 = OUTLINED_FUNCTION_25_16();
      OUTLINED_FUNCTION_23_21(v9, qword_1EB6433E8);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      __swift_destroy_boxed_opaque_existential_1(v3 + *(int *)(TupleTypeMetadata2 + 48));
      break;
    case 9u:
      type metadata accessor for BlueprintBookmark();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_38;
        case 1u:
          goto LABEL_40;
        case 2u:
        case 3u:
        case 4u:
          goto LABEL_37;
        default:
          goto LABEL_51;
      }
    case 0xAu:

      break;
    case 0xBu:
      OUTLINED_FUNCTION_15_24();
      if (*(void *)(v3 + 40)) {
        __swift_destroy_boxed_opaque_existential_1(v3 + 16);
      }
      OUTLINED_FUNCTION_11_26();
      OUTLINED_FUNCTION_2_75();
      swift_getWitnessTable();
      swift_getWitnessTable();
      OUTLINED_FUNCTION_8_33();
      OUTLINED_FUNCTION_19_1();
      uint64_t v73 = OUTLINED_FUNCTION_6_47();
      v74(v73);
      OUTLINED_FUNCTION_7_40();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v75 = swift_getWitnessTable();
      OUTLINED_FUNCTION_4_61(v75);
      OUTLINED_FUNCTION_19_1();
      uint64_t v76 = OUTLINED_FUNCTION_6_47();
      v77(v76);
      uint64_t v78 = OUTLINED_FUNCTION_25_16();
      MEMORY[0x1F4188790](v78);
      OUTLINED_FUNCTION_29_15();
      *(void *)(v79 - 48) = *(void *)"blueprint diff response animated bookmark ";
      strcpy((char *)(v79 - 38), "diff response animated bookmark ");
      OUTLINED_FUNCTION_23_21(v80, qword_1EB6433E8);
      sub_1B5FD1160(255, &qword_1E9DAA910, 255, (uint64_t (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse, MEMORY[0x1E4FBB718]);
      type metadata accessor for BlueprintBookmark();
      uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
      OUTLINED_FUNCTION_32_16(TupleTypeMetadata);
      v3 += *(int *)(TupleTypeMetadata + 96);
      type metadata accessor for BlueprintBookmark();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
LABEL_38:
          uint64_t v81 = sub_1B61AFCB0();
          if (!OUTLINED_FUNCTION_83_3(v81))
          {
            OUTLINED_FUNCTION_3_0();
            (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v3, TupleTypeMetadata);
          }
          break;
        case 1u:
LABEL_40:
          sub_1B61AFCB0();
          OUTLINED_FUNCTION_19_1();
          (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v3, v84);
          break;
        case 2u:
        case 3u:
        case 4u:
LABEL_37:
          swift_bridgeObjectRelease();
          break;
        default:
          goto LABEL_51;
      }
      break;
    default:
      break;
  }
LABEL_51:
  swift_deallocObject();
  OUTLINED_FUNCTION_73();
}

void sub_1B5FD0C60()
{
  OUTLINED_FUNCTION_24_17();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v8 = v5;
  uint64_t v9 = *(void *)(v0 + 32);
  uint64_t v10 = *(void *)(v0 + 40);
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = type metadata accessor for BlueprintModifierResult();
  OUTLINED_FUNCTION_4_10(v6);
  sub_1B5FC8748(v2, v8, v0 + ((*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v9, v10, v4);
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_1B5FD0D34(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 64))(*a1, a1[1]);
}

void sub_1B5FD0D6C()
{
  if (!qword_1EB64A3F0)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
    sub_1B5FD1160(255, &qword_1EB647B38, 255, (uint64_t (*)(uint64_t))sub_1B5E1E058, MEMORY[0x1E4FBB320]);
    sub_1B5FD1160(255, &qword_1EB64A3E8, 255, (uint64_t (*)(uint64_t))sub_1B5E1E1F0, v0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v2) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB64A3F0);
    }
  }
}

uint64_t sub_1B5FD0E40()
{
  return swift_deallocObject();
}

uint64_t sub_1B5FD0E50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B5FCD658(a1, a2, a3, a4, *(void *)(v4 + 16), *(uint64_t **)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40));
}

uint64_t sub_1B5FD0E5C()
{
  OUTLINED_FUNCTION_2();
  return swift_deallocObject();
}

void sub_1B5FD0E8C(void (*a1)(void *), uint64_t a2, void (*a3)(void), uint64_t a4)
{
  sub_1B5FCD3B0(a1, a2, a3, a4, *(void *)(v4 + 16), *(uint64_t **)(v4 + 24), *(uint64_t **)(v4 + 32));
}

uint64_t sub_1B5FD0E98()
{
  swift_release();
  swift_release();
  swift_release();

  OUTLINED_FUNCTION_15();
  return swift_deallocObject();
}

void sub_1B5FD0EE0(uint64_t *a1)
{
  sub_1B5FCD18C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(NSObject **)(v1 + 40));
}

uint64_t sub_1B5FD0EEC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5FD0F24(void *a1)
{
  return sub_1B6089B34(a1, *(uint64_t (**)(void, void))(v1 + 16));
}

uint64_t sub_1B5FD0F40(uint64_t a1, uint64_t a2)
{
  return sub_1B5FCD5E4(a1, a2, *(void (**)(void *))(v2 + 16));
}

uint64_t sub_1B5FD0F48()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1B5FD0FA0()
{
  sub_1B5FCDA10(*(void *)(v0 + 48), *(void (**)(void))(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void (**)(uint64_t, uint64_t))(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96));
}

void sub_1B5FD0FE4(id a1)
{
  if ((unint64_t)a1 >= 2) {
}
  }

uint64_t sub_1B5FD0FF4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5FD102C(uint64_t a1)
{
  return sub_1B5FC6A7C(a1);
}

uint64_t sub_1B5FD1054()
{
  swift_weakDestroy();
  OUTLINED_FUNCTION_2();
  return swift_deallocObject();
}

uint64_t sub_1B5FD1084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B5FD109C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void))sub_1B5FC67D4);
}

uint64_t sub_1B5FD109C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void))
{
  return a5(a1, a2, a3, a4, v5[8], v5[9], v5[2], v5[3], v5[4], v5[5], v5[6], v5[7]);
}

uint64_t sub_1B5FD10DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5FD1114()
{
  return (*(uint64_t (**)(void))(v0 + 64))();
}

void sub_1B5FD1140(void **a1)
{
  sub_1B5FC5964(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void (**)(void *))(v1 + 32));
}

void sub_1B5FD1160(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = a4(a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1B5FD120C(uint64_t a1, uint64_t a2)
{
  return sub_1B5FCDD64(a1, a2);
}

uint64_t sub_1B5FD1224(uint64_t a1, uint64_t a2)
{
  return sub_1B5FCDEA4(a1, a2);
}

uint64_t sub_1B5FD123C()
{
  id v1 = v0;
  sub_1B5F01954();
  sub_1B5FD13A4();
  do
  {
    id v2 = v1;
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v9 = 0;
      long long v7 = 0u;
      long long v8 = 0u;
LABEL_7:
      sub_1B5FD13FC((uint64_t)&v7);
      goto LABEL_8;
    }
    if (!*((void *)&v8 + 1)) {
      goto LABEL_7;
    }
    sub_1B5E30E70(&v7, (uint64_t)v10);
    uint64_t v3 = v11;
    uint64_t v4 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    char v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    if (v5)
    {

      return 1;
    }
LABEL_8:
    id v1 = objc_msgSend(v2, sel_superview);
  }
  while (v1);
  return 0;
}

uint64_t ContextMenuCancellable.shouldCancelContextMenu.getter()
{
  return 1;
}

uint64_t dispatch thunk of ContextMenuCancellable.shouldCancelContextMenu.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1B5FD137C()
{
  return OUTLINED_FUNCTION_0_7() & 1;
}

unint64_t sub_1B5FD13A4()
{
  unint64_t result = qword_1EB641E08;
  if (!qword_1EB641E08)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB641E08);
  }
  return result;
}

uint64_t sub_1B5FD13FC(uint64_t a1)
{
  sub_1B5FD1458();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B5FD1458()
{
  if (!qword_1EB641E28)
  {
    sub_1B5FD13A4();
    unint64_t v0 = sub_1B61B2F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB641E28);
    }
  }
}

uint64_t static BlueprintModifierResult.reload<A, B>(blueprint:)()
{
  return sub_1B5FD16A4();
}

uint64_t type metadata accessor for BlueprintModifierResult()
{
  return swift_getGenericMetadata();
}

uint64_t static BlueprintModifierResult.reloadWithAnimation<A, B>(blueprint:animation:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  type metadata accessor for Blueprint();
  type metadata accessor for BlueprintBookmark();
  uint64_t v3 = a2 + *(int *)(swift_getTupleTypeMetadata3() + 64);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_48_0();
  v4();
  swift_storeEnumTagMultiPayload();
  sub_1B5FD1618(a1, v3);
  type metadata accessor for BlueprintModifierResult();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1B5FD1618(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t static BlueprintModifierResult.reloadNoAnimation<A, B>(blueprint:)()
{
  return sub_1B5FD16A4();
}

uint64_t sub_1B5FD16A4()
{
  type metadata accessor for Blueprint();
  type metadata accessor for BlueprintBookmark();
  swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_48_0();
  v4(v0, v1, v2, v3);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_24_18();
  return swift_storeEnumTagMultiPayload();
}

void static BlueprintModifierResult.changes<A, B>(newBlueprint:oldBlueprint:bookmark:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  OUTLINED_FUNCTION_16_21();
  a29 = v30;
  a30 = v31;
  OUTLINED_FUNCTION_14_25();
  uint64_t v32 = OUTLINED_FUNCTION_1_82(&a14);
  if (v33(v32))
  {
    OUTLINED_FUNCTION_6_48();
  }
  else
  {
    OUTLINED_FUNCTION_18_22();
    sub_1B5E00AB8(255, qword_1EB6433E8);
    OUTLINED_FUNCTION_28_16();
    OUTLINED_FUNCTION_17_24();
    OUTLINED_FUNCTION_3_0();
    uint64_t v34 = OUTLINED_FUNCTION_7_41();
    uint64_t v36 = v35(v34);
    OUTLINED_FUNCTION_30_11(v36, v37, v38, v39, v40);
    OUTLINED_FUNCTION_27_15();
    type metadata accessor for BlueprintModifierResult();
  }
  swift_storeEnumTagMultiPayload();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a14);
  OUTLINED_FUNCTION_16_1();
}

{
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_16_21();
  a29 = v30;
  a30 = v31;
  OUTLINED_FUNCTION_11_27();
  uint64_t v32 = OUTLINED_FUNCTION_1_82(&a14);
  if (v33(v32))
  {
    OUTLINED_FUNCTION_6_48();
  }
  else
  {
    OUTLINED_FUNCTION_18_22();
    sub_1B5E00AB8(255, qword_1EB6433E8);
    OUTLINED_FUNCTION_28_16();
    OUTLINED_FUNCTION_17_24();
    OUTLINED_FUNCTION_3_0();
    uint64_t v34 = OUTLINED_FUNCTION_7_41();
    uint64_t v36 = v35(v34);
    OUTLINED_FUNCTION_30_11(v36, v37, v38, v39, v40);
    OUTLINED_FUNCTION_27_15();
    type metadata accessor for BlueprintModifierResult();
  }
  swift_storeEnumTagMultiPayload();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a14);
  OUTLINED_FUNCTION_16_1();
}

uint64_t static BlueprintModifierResult.changesWithAnimation<A, B>(newBlueprint:oldBlueprint:bookmark:animation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ValueMetadata *a12)
{
  OUTLINED_FUNCTION_25_17(a1, a2, a3, a4);
  - infix<A, B>(_:_:)();
  uint64_t v17 = OUTLINED_FUNCTION_19_21();
  uint64_t v19 = v18(v17);
  if (v19)
  {
    uint64_t v24 = v14;
    uint64_t v25 = v13;
    uint64_t v26 = a11;
    uint64_t v27 = a12;
    OUTLINED_FUNCTION_6_48();
  }
  else
  {
    MEMORY[0x1F4188790](v19);
    OUTLINED_FUNCTION_9_35();
    uint64_t v24 = OUTLINED_FUNCTION_4_62(v20);
    uint64_t v25 = sub_1B5E00AB8(255, qword_1EB6433E8);
    uint64_t v26 = type metadata accessor for BlueprintBookmark();
    uint64_t v27 = &type metadata for BlueprintAnimation;
    OUTLINED_FUNCTION_8_34();
    OUTLINED_FUNCTION_12_32();
    OUTLINED_FUNCTION_3_0();
    OUTLINED_FUNCTION_48_0();
    v21();
    sub_1B5E176E4((uint64_t)v28, v12);
    sub_1B5EB049C(v15, (uint64_t)&v23);
    sub_1B5FD1618(v23, v16);
    OUTLINED_FUNCTION_31_15();
  }
  swift_storeEnumTagMultiPayload();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

uint64_t static BlueprintModifierResult.changesWithAnimation<A, B>(newBlueprint:oldBlueprint:bookmark:animation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ValueMetadata *a13)
{
  OUTLINED_FUNCTION_25_17(a1, a2, a3, a4);
  - infix<A, B>(_:_:)();
  uint64_t v18 = OUTLINED_FUNCTION_19_21();
  uint64_t v20 = v19(v18);
  if (v20)
  {
    uint64_t v25 = v15;
    uint64_t v26 = v14;
    uint64_t v27 = a12;
    uint64_t v28 = a13;
    OUTLINED_FUNCTION_6_48();
  }
  else
  {
    MEMORY[0x1F4188790](v20);
    OUTLINED_FUNCTION_9_35();
    uint64_t v25 = OUTLINED_FUNCTION_4_62(v21);
    uint64_t v26 = sub_1B5E00AB8(255, qword_1EB6433E8);
    uint64_t v27 = type metadata accessor for BlueprintBookmark();
    uint64_t v28 = &type metadata for BlueprintAnimation;
    OUTLINED_FUNCTION_8_34();
    OUTLINED_FUNCTION_12_32();
    OUTLINED_FUNCTION_3_0();
    OUTLINED_FUNCTION_48_0();
    v22();
    sub_1B5E176E4((uint64_t)v29, v13);
    sub_1B5EB049C(v16, (uint64_t)&v24);
    sub_1B5FD1618(v24, v17);
    OUTLINED_FUNCTION_31_15();
  }
  swift_storeEnumTagMultiPayload();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
}

void static BlueprintModifierResult.changesNoAnimation<A, B>(newBlueprint:oldBlueprint:bookmark:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  OUTLINED_FUNCTION_16_21();
  a29 = v30;
  a30 = v31;
  OUTLINED_FUNCTION_14_25();
  uint64_t v32 = OUTLINED_FUNCTION_1_82(&a14);
  if (v33(v32))
  {
    OUTLINED_FUNCTION_6_48();
  }
  else
  {
    OUTLINED_FUNCTION_18_22();
    sub_1B5E00AB8(255, qword_1EB6433E8);
    OUTLINED_FUNCTION_28_16();
    OUTLINED_FUNCTION_17_24();
    OUTLINED_FUNCTION_3_0();
    uint64_t v34 = OUTLINED_FUNCTION_7_41();
    uint64_t v36 = v35(v34);
    OUTLINED_FUNCTION_30_11(v36, v37, v38, v39, v40);
    OUTLINED_FUNCTION_27_15();
    type metadata accessor for BlueprintModifierResult();
  }
  swift_storeEnumTagMultiPayload();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a14);
  OUTLINED_FUNCTION_16_1();
}

{
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_16_21();
  a29 = v30;
  a30 = v31;
  OUTLINED_FUNCTION_11_27();
  uint64_t v32 = OUTLINED_FUNCTION_1_82(&a14);
  if (v33(v32))
  {
    OUTLINED_FUNCTION_6_48();
  }
  else
  {
    OUTLINED_FUNCTION_18_22();
    sub_1B5E00AB8(255, qword_1EB6433E8);
    OUTLINED_FUNCTION_28_16();
    OUTLINED_FUNCTION_17_24();
    OUTLINED_FUNCTION_3_0();
    uint64_t v34 = OUTLINED_FUNCTION_7_41();
    uint64_t v36 = v35(v34);
    OUTLINED_FUNCTION_30_11(v36, v37, v38, v39, v40);
    OUTLINED_FUNCTION_27_15();
    type metadata accessor for BlueprintModifierResult();
  }
  swift_storeEnumTagMultiPayload();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a14);
  OUTLINED_FUNCTION_16_1();
}

uint64_t static BlueprintModifierResult.viewAction<A, B>(newBlueprint:oldBlueprint:response:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  type metadata accessor for Blueprint();
  sub_1B5E00AB8(255, qword_1EB6433E8);
  type metadata accessor for BlueprintViewActionResponse();
  uint64_t v4 = *(int *)(swift_getTupleTypeMetadata3() + 64);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_48_0();
  v5();
  - infix<A, B>(_:_:)();
  *(void *)(a2 + v4) = a1;
  OUTLINED_FUNCTION_24_18();
  swift_storeEnumTagMultiPayload();
  return swift_retain();
}

uint64_t static BlueprintModifierResult.viewActionWithAnimation<A, B>(newBlueprint:oldBlueprint:response:animation:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  type metadata accessor for Blueprint();
  sub_1B5E00AB8(255, qword_1EB6433E8);
  type metadata accessor for BlueprintViewActionResponse();
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v6 = *(int *)(TupleTypeMetadata + 64);
  uint64_t v7 = a3 + *(int *)(TupleTypeMetadata + 80);
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_48_0();
  v8();
  - infix<A, B>(_:_:)();
  *(void *)(a3 + v6) = a1;
  sub_1B5FD1618(a2, v7);
  OUTLINED_FUNCTION_24_18();
  swift_storeEnumTagMultiPayload();
  return swift_retain();
}

void static BlueprintModifierResult.moved(newBlueprint:oldBlueprint:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  OUTLINED_FUNCTION_16_21();
  a29 = v30;
  a30 = v31;
  uint64_t v33 = v32;
  - infix<A, B>(_:_:)();
  uint64_t v34 = a17;
  uint64_t v35 = a18;
  __swift_project_boxed_opaque_existential_1(&a14, a17);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v35 + 96))(v34, v35))
  {
    OUTLINED_FUNCTION_6_48();
  }
  else
  {
    type metadata accessor for Blueprint();
    sub_1B5E00AB8(255, qword_1EB6433E8);
    uint64_t v36 = v33 + *(int *)(OUTLINED_FUNCTION_22_4() + 48);
    OUTLINED_FUNCTION_3_0();
    OUTLINED_FUNCTION_48_0();
    v37();
    sub_1B5E176E4((uint64_t)&a14, v36);
    type metadata accessor for BlueprintModifierResult();
  }
  swift_storeEnumTagMultiPayload();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a14);
  OUTLINED_FUNCTION_16_1();
}

uint64_t static BlueprintModifierResult.applySnapshot(newBlueprint:oldBlueprint:response:animated:bookmark:)@<X0>(uint64_t a1@<X2>, char a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  type metadata accessor for Blueprint();
  sub_1B5E00AB8(255, qword_1EB6433E8);
  sub_1B5FD6188(255, &qword_1E9DAA910, (void (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse);
  type metadata accessor for BlueprintBookmark();
  uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v6 = TupleTypeMetadata[16];
  uint64_t v7 = TupleTypeMetadata[20];
  uint64_t v8 = a4 + TupleTypeMetadata[24];
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_48_0();
  v9();
  - infix<A, B>(_:_:)();
  *(void *)(a4 + v6) = a1;
  *(unsigned char *)(a4 + v7) = a2;
  sub_1B5EB049C(a3, v8);
  OUTLINED_FUNCTION_24_18();
  swift_storeEnumTagMultiPayload();
  return swift_retain();
}

uint64_t static BlueprintModifierResult.applyReloadSnapshot(newBlueprint:oldBlueprint:)()
{
  type metadata accessor for Blueprint();
  sub_1B5E00AB8(255, qword_1EB6433E8);
  swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_48_0();
  v4(v0, v1, v2, v3);
  - infix<A, B>(_:_:)();
  type metadata accessor for BlueprintModifierResult();
  return swift_storeEnumTagMultiPayload();
}

uint64_t BlueprintModifierResult.description.getter(void *a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v3 = (void **)((char *)v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void **))(v4 + 16))(v3);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v6 = 0x65676E6168436F6ELL;
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v6 = 0xD000000000000013;
      OUTLINED_FUNCTION_2_76();
      type metadata accessor for BlueprintBookmark();
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v11 = (uint64_t)v3 + *(int *)(TupleTypeMetadata3 + 48);
      sub_1B5FCF540((uint64_t)v3 + *(int *)(TupleTypeMetadata3 + 64));
      sub_1B5E44488(v11);
      OUTLINED_FUNCTION_3_0();
      OUTLINED_FUNCTION_5_1();
      v12();
      break;
    case 2:
      OUTLINED_FUNCTION_2_76();
      type metadata accessor for BlueprintBookmark();
      uint64_t v13 = OUTLINED_FUNCTION_22_4();
      sub_1B5E44488((uint64_t)v3 + *(int *)(v13 + 48));
      OUTLINED_FUNCTION_3_0();
      uint64_t v14 = OUTLINED_FUNCTION_5_47();
      v15(v14);
      OUTLINED_FUNCTION_29_16();
      uint64_t v6 = v16 - 2;
      break;
    case 3:
      OUTLINED_FUNCTION_2_76();
      uint64_t v17 = sub_1B5E00AB8(255, qword_1EB6433E8);
      type metadata accessor for BlueprintBookmark();
      uint64_t v18 = OUTLINED_FUNCTION_23_22();
      OUTLINED_FUNCTION_26_18(v18);
      __swift_destroy_boxed_opaque_existential_1(v17);
      OUTLINED_FUNCTION_3_0();
      uint64_t v19 = OUTLINED_FUNCTION_5_47();
      v20(v19);
      uint64_t v6 = 0x7365676E616863;
      break;
    case 4:
      MEMORY[0x1F4188790](EnumCaseMultiPayload);
      OUTLINED_FUNCTION_9_35();
      uint64_t v53 = OUTLINED_FUNCTION_3_67(v21);
      uint64_t v54 = sub_1B5E00AB8(255, qword_1EB6433E8);
      uint64_t v55 = type metadata accessor for BlueprintBookmark();
      uint64_t v56 = &type metadata for BlueprintAnimation;
      uint64_t v22 = (int *)OUTLINED_FUNCTION_8_34();
      uint64_t v23 = (uint64_t)v3 + v22[12];
      uint64_t v24 = (uint64_t)v3 + v22[16];
      sub_1B5FCF540((uint64_t)v3 + v22[20]);
      sub_1B5E44488(v24);
      OUTLINED_FUNCTION_21_18(v23);
      OUTLINED_FUNCTION_3_0();
      OUTLINED_FUNCTION_5_1();
      v25();
      OUTLINED_FUNCTION_29_16();
      uint64_t v6 = v26 + 1;
      break;
    case 5:
      OUTLINED_FUNCTION_2_76();
      uint64_t v27 = sub_1B5E00AB8(255, qword_1EB6433E8);
      type metadata accessor for BlueprintBookmark();
      uint64_t v28 = OUTLINED_FUNCTION_23_22();
      OUTLINED_FUNCTION_26_18(v28);
      __swift_destroy_boxed_opaque_existential_1(v27);
      OUTLINED_FUNCTION_3_0();
      uint64_t v29 = OUTLINED_FUNCTION_5_47();
      v30(v29);
      OUTLINED_FUNCTION_29_16();
      uint64_t v6 = v31 - 1;
      break;
    case 6:
      OUTLINED_FUNCTION_2_76();
      uint64_t v32 = sub_1B5E00AB8(255, qword_1EB6433E8);
      type metadata accessor for BlueprintViewActionResponse();
      OUTLINED_FUNCTION_23_22();
      OUTLINED_FUNCTION_20_19();
      __swift_destroy_boxed_opaque_existential_1(v32);
      OUTLINED_FUNCTION_3_0();
      uint64_t v33 = OUTLINED_FUNCTION_5_47();
      v34(v33);
      uint64_t v6 = 0x6974634177656976;
      break;
    case 7:
      MEMORY[0x1F4188790](EnumCaseMultiPayload);
      OUTLINED_FUNCTION_9_35();
      uint64_t v53 = OUTLINED_FUNCTION_3_67(v35);
      uint64_t v54 = sub_1B5E00AB8(255, qword_1EB6433E8);
      uint64_t v55 = type metadata accessor for BlueprintViewActionResponse();
      uint64_t v56 = &type metadata for BlueprintAnimation;
      uint64_t v36 = OUTLINED_FUNCTION_8_34();
      OUTLINED_FUNCTION_20_19();
      sub_1B5FCF540((uint64_t)v3 + *(int *)(v36 + 80));
      OUTLINED_FUNCTION_21_18((uint64_t)a1);
      OUTLINED_FUNCTION_3_0();
      OUTLINED_FUNCTION_5_1();
      v37();
      OUTLINED_FUNCTION_29_16();
      uint64_t v6 = v38 | 4;
      break;
    case 8:
      OUTLINED_FUNCTION_2_76();
      sub_1B5E00AB8(255, qword_1EB6433E8);
      uint64_t v39 = OUTLINED_FUNCTION_22_4();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v3 + *(int *)(v39 + 48));
      OUTLINED_FUNCTION_3_0();
      uint64_t v40 = OUTLINED_FUNCTION_5_47();
      v41(v40);
      uint64_t v6 = 0x6465766F6DLL;
      break;
    case 9:
      sub_1B5E44488((uint64_t)v3);
      uint64_t v6 = 0x6B72616D6B6F6F62;
      break;
    case 10:
      uint64_t v42 = *v3;
      uint64_t v53 = 0;
      uint64_t v54 = 0xE000000000000000;
      _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
      v52[1] = v42;
      sub_1B5E00AB8(0, (unint64_t *)&qword_1EB647DB0);
      sub_1B61B3440();
      _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();

      uint64_t v6 = v53;
      break;
    case 11:
      MEMORY[0x1F4188790](EnumCaseMultiPayload);
      strcpy((char *)&v52[-6], "blueprint diff response animated bookmark ");
      uint64_t v43 = a1[3];
      uint64_t v44 = a1[4];
      uint64_t v45 = (ValueMetadata *)a1[5];
      uint64_t v53 = a1[2];
      uint64_t v54 = v43;
      uint64_t v55 = v44;
      uint64_t v56 = v45;
      uint64_t v53 = type metadata accessor for Blueprint();
      uint64_t v54 = sub_1B5E00AB8(255, qword_1EB6433E8);
      sub_1B5FD6188(255, &qword_1E9DAA910, (void (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse);
      uint64_t v55 = v46;
      uint64_t v56 = (ValueMetadata *)MEMORY[0x1E4FBB390];
      uint64_t v57 = type metadata accessor for BlueprintBookmark();
      uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
      OUTLINED_FUNCTION_20_19();
      sub_1B5E44488((uint64_t)v3 + *(int *)(TupleTypeMetadata + 96));
      OUTLINED_FUNCTION_21_18((uint64_t)a1);
      OUTLINED_FUNCTION_3_0();
      OUTLINED_FUNCTION_5_1();
      v48();
      uint64_t v6 = 0x616E53796C707061;
      break;
    case 12:
      uint64_t v6 = 0xD000000000000013;
      OUTLINED_FUNCTION_2_76();
      sub_1B5E00AB8(255, qword_1EB6433E8);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v3 + *(int *)(TupleTypeMetadata2 + 48));
      OUTLINED_FUNCTION_3_0();
      OUTLINED_FUNCTION_5_1();
      v50();
      break;
    case 13:
      return v6;
    default:
      OUTLINED_FUNCTION_2_76();
      type metadata accessor for BlueprintBookmark();
      uint64_t v7 = OUTLINED_FUNCTION_22_4();
      sub_1B5E44488((uint64_t)v3 + *(int *)(v7 + 48));
      OUTLINED_FUNCTION_3_0();
      uint64_t v8 = OUTLINED_FUNCTION_5_47();
      v9(v8);
      uint64_t v6 = 0x64616F6C6572;
      break;
  }
  return v6;
}

uint64_t sub_1B5FD2E08(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 32);
  long long v8 = *(_OWORD *)(a1 + 16);
  long long v9 = v1;
  uint64_t result = type metadata accessor for Blueprint();
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    uint64_t result = type metadata accessor for BlueprintBookmark();
    if (v5 <= 0x3F)
    {
      uint64_t v6 = *(void *)(result - 8) + 64;
      swift_getTupleTypeLayout2();
      uint64_t v21 = &v20;
      swift_getTupleTypeLayout3();
      uint64_t v22 = &v19;
      swift_getTupleTypeLayout2();
      uint64_t v23 = &v18;
      swift_getTupleTypeLayout3();
      uint64_t v24 = &v17;
      swift_getTupleTypeLayout();
      uint64_t v25 = &v16;
      swift_getTupleTypeLayout3();
      uint64_t v26 = &v15;
      swift_getTupleTypeLayout3();
      uint64_t v27 = &v14;
      swift_getTupleTypeLayout();
      uint64_t v28 = &v13;
      swift_getTupleTypeLayout2();
      uint64_t v29 = &v12;
      uint64_t v30 = v6;
      uint64_t v31 = &unk_1B61CB378;
      *(void *)&long long v8 = v4 + 64;
      *((void *)&v8 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = &unk_1B61CB360;
      *(void *)&long long v9 = &unk_1B61CB390;
      *((void *)&v9 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = &unk_1B61CB3A8;
      uint64_t v10 = v6;
      swift_getTupleTypeLayout();
      uint64_t v32 = &v11;
      swift_getTupleTypeLayout2();
      uint64_t v33 = &v7;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B5FD3064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    long long v9 = *(void **)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (uint64_t)v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v7;
        uint64_t v8 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v8)
        {
          *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v8;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 16, a2 + 16, v8);
        }
        else
        {
          long long v34 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v34;
        }
        uint64_t v35 = (int *)type metadata accessor for Blueprint();
        uint64_t v36 = v35[14];
        uint64_t v230 = a1 + v36;
        uint64_t v37 = a2 + v36;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v38 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v230, v37, v38);
        uint64_t v39 = v35[15];
        uint64_t v220 = a2 + v39;
        uint64_t v231 = a1 + v39;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v40 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v231, v220, v40);
        *(void *)(a1 + v35[16]) = *(void *)(a2 + v35[16]);
        uint64_t v41 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        uint64_t v42 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v43 = (void *)(a1 + v42);
        uint64_t v44 = (void *)(a2 + v42);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v45 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v45))
            {
              sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
              __swift_storeEnumTagSinglePayload((uint64_t)v43, 0, 1, v45);
            }
            goto LABEL_104;
          case 1u:
            uint64_t v181 = sub_1B61AFCB0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v181 - 8) + 16))(v43, v44, v181);
            sub_1B5EBF460();
            *(_OWORD *)((char *)v43 + *(int *)(v182 + 48)) = *(_OWORD *)((char *)v44 + *(int *)(v182 + 48));
            goto LABEL_104;
          case 2u:
          case 3u:
            uint64_t v183 = v44[1];
            *uint64_t v43 = *v44;
            v43[1] = v183;
            *((_OWORD *)v43 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((_OWORD *)v44 + 1);
            sub_1B61B1F70();
            goto LABEL_104;
          case 4u:
            uint64_t v184 = v44[1];
            *uint64_t v43 = *v44;
            v43[1] = v184;
            sub_1B61B1F70();
LABEL_104:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v43, v44, *(void *)(*(void *)(v41 - 8) + 64));
            break;
        }
        goto LABEL_126;
      case 1u:
        uint64_t v10 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v10;
        uint64_t v11 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v11)
        {
          *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v11;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8))(a1 + 16, a2 + 16, v11);
        }
        else
        {
          long long v47 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v47;
        }
        uint64_t v48 = (int *)type metadata accessor for Blueprint();
        uint64_t v49 = v48[14];
        uint64_t v232 = a1 + v49;
        uint64_t v50 = a2 + v49;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v51 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v232, v50, v51);
        uint64_t v52 = v48[15];
        uint64_t v221 = a2 + v52;
        uint64_t v233 = a1 + v52;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v53 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16))(v233, v221, v53);
        *(void *)(a1 + v48[16]) = *(void *)(a2 + v48[16]);
        uint64_t v54 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        uint64_t v56 = *(int *)(TupleTypeMetadata3 + 48);
        uint64_t v57 = (void *)(a1 + v56);
        uint64_t v58 = (void *)(a2 + v56);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v59 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload((uint64_t)v58, 1, v59))
            {
              sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
              __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v59);
            }
            goto LABEL_107;
          case 1u:
            uint64_t v185 = sub_1B61AFCB0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v185 - 8) + 16))(v57, v58, v185);
            sub_1B5EBF460();
            *(_OWORD *)((char *)v57 + *(int *)(v186 + 48)) = *(_OWORD *)((char *)v58 + *(int *)(v186 + 48));
            goto LABEL_107;
          case 2u:
          case 3u:
            uint64_t v187 = v58[1];
            *uint64_t v57 = *v58;
            v57[1] = v187;
            *((_OWORD *)v57 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((_OWORD *)v58 + 1);
            sub_1B61B1F70();
            goto LABEL_107;
          case 4u:
            uint64_t v188 = v58[1];
            *uint64_t v57 = *v58;
            v57[1] = v188;
            sub_1B61B1F70();
LABEL_107:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v57, v58, *(void *)(*(void *)(v54 - 8) + 64));
            break;
        }
        uint64_t v209 = *(int *)(TupleTypeMetadata3 + 64);
        uint64_t v210 = a1 + v209;
        uint64_t v211 = a2 + v209;
        *(_OWORD *)uint64_t v210 = *(_OWORD *)v211;
        uint64_t v212 = (_OWORD *)(v210 + 16);
        uint64_t v213 = (_OWORD *)(v211 + 16);
        uint64_t v214 = *(void *)(v211 + 40);
        if (v214) {
          goto LABEL_109;
        }
        long long v215 = *(_OWORD *)(v211 + 32);
        _OWORD *v212 = *v213;
        *(_OWORD *)(v210 + 32) = v215;
        goto LABEL_126;
      case 2u:
        uint64_t v12 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v12;
        uint64_t v13 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v13)
        {
          *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v13;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8))(a1 + 16, a2 + 16, v13);
        }
        else
        {
          long long v61 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v61;
        }
        uint64_t v62 = (int *)type metadata accessor for Blueprint();
        uint64_t v63 = v62[14];
        uint64_t v234 = a1 + v63;
        uint64_t v64 = a2 + v63;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v65 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 16))(v234, v64, v65);
        uint64_t v66 = v62[15];
        uint64_t v222 = a2 + v66;
        uint64_t v235 = a1 + v66;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v67 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 16))(v235, v222, v67);
        *(void *)(a1 + v62[16]) = *(void *)(a2 + v62[16]);
        uint64_t v68 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        uint64_t v69 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v70 = (void *)(a1 + v69);
        uint64_t v71 = (void *)(a2 + v69);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v72 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload((uint64_t)v71, 1, v72))
            {
              sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
              __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, v72);
            }
            goto LABEL_112;
          case 1u:
            uint64_t v189 = sub_1B61AFCB0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v189 - 8) + 16))(v70, v71, v189);
            sub_1B5EBF460();
            *(_OWORD *)((char *)v70 + *(int *)(v190 + 48)) = *(_OWORD *)((char *)v71 + *(int *)(v190 + 48));
            goto LABEL_112;
          case 2u:
          case 3u:
            uint64_t v191 = v71[1];
            *uint64_t v70 = *v71;
            v70[1] = v191;
            *((_OWORD *)v70 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((_OWORD *)v71 + 1);
            sub_1B61B1F70();
            goto LABEL_112;
          case 4u:
            uint64_t v192 = v71[1];
            *uint64_t v70 = *v71;
            v70[1] = v192;
            sub_1B61B1F70();
LABEL_112:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v70, v71, *(void *)(*(void *)(v68 - 8) + 64));
            break;
        }
        goto LABEL_126;
      case 3u:
        uint64_t v14 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v14;
        uint64_t v15 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v15)
        {
          *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v15;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8))(a1 + 16, a2 + 16, v15);
        }
        else
        {
          long long v74 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v74;
        }
        uint64_t v75 = (int *)type metadata accessor for Blueprint();
        uint64_t v76 = v75[14];
        uint64_t v236 = a1 + v76;
        uint64_t v77 = a2 + v76;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v78 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16))(v236, v77, v78);
        uint64_t v79 = v75[15];
        uint64_t v223 = a2 + v79;
        uint64_t v237 = a1 + v79;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v80 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 16))(v237, v223, v80);
        *(void *)(a1 + v75[16]) = *(void *)(a2 + v75[16]);
        sub_1B5E00AB8(255, qword_1EB6433E8);
        uint64_t v81 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        uint64_t v82 = swift_getTupleTypeMetadata3();
        uint64_t v83 = *(int *)(v82 + 48);
        long long v84 = *(_OWORD *)(a2 + v83 + 24);
        *(_OWORD *)(a1 + v83 + 24) = v84;
        (**(void (***)(void))(v84 - 8))();
        uint64_t v85 = *(int *)(v82 + 64);
        uint64_t v86 = (void *)(a1 + v85);
        uint64_t v87 = (void *)(a2 + v85);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v88 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload((uint64_t)v87, 1, v88))
            {
              sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy(v86, v87, *(void *)(*(void *)(v89 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
              __swift_storeEnumTagSinglePayload((uint64_t)v86, 0, 1, v88);
            }
            goto LABEL_115;
          case 1u:
            uint64_t v193 = sub_1B61AFCB0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v193 - 8) + 16))(v86, v87, v193);
            sub_1B5EBF460();
            *(_OWORD *)((char *)v86 + *(int *)(v194 + 48)) = *(_OWORD *)((char *)v87 + *(int *)(v194 + 48));
            goto LABEL_115;
          case 2u:
          case 3u:
            uint64_t v195 = v87[1];
            *uint64_t v86 = *v87;
            v86[1] = v195;
            *((_OWORD *)v86 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((_OWORD *)v87 + 1);
            sub_1B61B1F70();
            goto LABEL_115;
          case 4u:
            uint64_t v196 = v87[1];
            *uint64_t v86 = *v87;
            v86[1] = v196;
            sub_1B61B1F70();
LABEL_115:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v86, v87, *(void *)(*(void *)(v81 - 8) + 64));
            break;
        }
        goto LABEL_126;
      case 4u:
        uint64_t v16 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v16;
        uint64_t v17 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v17)
        {
          *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v17;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v17 - 8))(a1 + 16, a2 + 16, v17);
        }
        else
        {
          long long v90 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v90;
        }
        uint64_t v91 = (int *)type metadata accessor for Blueprint();
        uint64_t v92 = v91[14];
        uint64_t v238 = a1 + v92;
        uint64_t v93 = a2 + v92;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v94 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 16))(v238, v93, v94);
        uint64_t v95 = v91[15];
        uint64_t v224 = a2 + v95;
        uint64_t v239 = a1 + v95;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v96 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 16))(v239, v224, v96);
        *(void *)(a1 + v91[16]) = *(void *)(a2 + v91[16]);
        uint64_t v97 = swift_retain();
        MEMORY[0x1F4188790](v97);
        sub_1B5E00AB8(255, qword_1EB6433E8);
        type metadata accessor for BlueprintBookmark();
        uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
        uint64_t v99 = TupleTypeMetadata[12];
        long long v100 = *(_OWORD *)(a2 + v99 + 24);
        *(_OWORD *)(a1 + v99 + 24) = v100;
        (**(void (***)(void))(v100 - 8))();
        uint64_t v101 = TupleTypeMetadata[16];
        uint64_t v102 = (void *)(a1 + v101);
        uint64_t v103 = (void *)(a2 + v101);
        uint64_t v104 = type metadata accessor for BlueprintBookmark();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v105 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload((uint64_t)v103, 1, v105))
            {
              sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy(v102, v103, *(void *)(*(void *)(v106 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v105 - 8) + 16))(v102, v103, v105);
              __swift_storeEnumTagSinglePayload((uint64_t)v102, 0, 1, v105);
            }
            goto LABEL_118;
          case 1u:
            uint64_t v197 = sub_1B61AFCB0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v197 - 8) + 16))(v102, v103, v197);
            sub_1B5EBF460();
            *(_OWORD *)((char *)v102 + *(int *)(v198 + 48)) = *(_OWORD *)((char *)v103 + *(int *)(v198 + 48));
            goto LABEL_118;
          case 2u:
          case 3u:
            uint64_t v199 = v103[1];
            *uint64_t v102 = *v103;
            v102[1] = v199;
            *((_OWORD *)v102 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((_OWORD *)v103 + 1);
            sub_1B61B1F70();
            goto LABEL_118;
          case 4u:
            uint64_t v200 = v103[1];
            *uint64_t v102 = *v103;
            v102[1] = v200;
            sub_1B61B1F70();
LABEL_118:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
            break;
        }
        uint64_t v216 = TupleTypeMetadata[20];
        uint64_t v210 = a1 + v216;
        uint64_t v217 = a2 + v216;
        *(_OWORD *)uint64_t v210 = *(_OWORD *)v217;
        uint64_t v212 = (_OWORD *)(v210 + 16);
        uint64_t v213 = (_OWORD *)(v217 + 16);
        uint64_t v214 = *(void *)(v217 + 40);
        if (v214)
        {
LABEL_109:
          *(void *)(v210 + 4sub_1B5E6F544(4, 0, 0) = v214;
          (**(void (***)(_OWORD *, _OWORD *))(v214 - 8))(v212, v213);
        }
        else
        {
          long long v218 = *(_OWORD *)(v217 + 32);
          _OWORD *v212 = *v213;
          *(_OWORD *)(v210 + 32) = v218;
        }
        goto LABEL_126;
      case 5u:
        uint64_t v18 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v18;
        uint64_t v19 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v19)
        {
          *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v19;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v19 - 8))(a1 + 16, a2 + 16, v19);
        }
        else
        {
          long long v107 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v107;
        }
        long long v108 = (int *)type metadata accessor for Blueprint();
        uint64_t v109 = v108[14];
        uint64_t v240 = a1 + v109;
        uint64_t v110 = a2 + v109;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v111 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 16))(v240, v110, v111);
        uint64_t v112 = v108[15];
        uint64_t v225 = a2 + v112;
        uint64_t v241 = a1 + v112;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v113 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 16))(v241, v225, v113);
        *(void *)(a1 + v108[16]) = *(void *)(a2 + v108[16]);
        sub_1B5E00AB8(255, qword_1EB6433E8);
        uint64_t v114 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        uint64_t v115 = swift_getTupleTypeMetadata3();
        uint64_t v116 = *(int *)(v115 + 48);
        long long v117 = *(_OWORD *)(a2 + v116 + 24);
        *(_OWORD *)(a1 + v116 + 24) = v117;
        (**(void (***)(void))(v117 - 8))();
        uint64_t v118 = *(int *)(v115 + 64);
        uint64_t v119 = (void *)(a1 + v118);
        uint64_t v120 = (void *)(a2 + v118);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v121 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload((uint64_t)v120, 1, v121))
            {
              sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy(v119, v120, *(void *)(*(void *)(v122 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v121 - 8) + 16))(v119, v120, v121);
              __swift_storeEnumTagSinglePayload((uint64_t)v119, 0, 1, v121);
            }
            goto LABEL_122;
          case 1u:
            uint64_t v201 = sub_1B61AFCB0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v201 - 8) + 16))(v119, v120, v201);
            sub_1B5EBF460();
            *(_OWORD *)((char *)v119 + *(int *)(v202 + 48)) = *(_OWORD *)((char *)v120 + *(int *)(v202 + 48));
            goto LABEL_122;
          case 2u:
          case 3u:
            uint64_t v203 = v120[1];
            *uint64_t v119 = *v120;
            v119[1] = v203;
            *((_OWORD *)v119 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((_OWORD *)v120 + 1);
            sub_1B61B1F70();
            goto LABEL_122;
          case 4u:
            uint64_t v204 = v120[1];
            *uint64_t v119 = *v120;
            v119[1] = v204;
            sub_1B61B1F70();
LABEL_122:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v119, v120, *(void *)(*(void *)(v114 - 8) + 64));
            break;
        }
        goto LABEL_126;
      case 6u:
        uint64_t v20 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v20;
        uint64_t v21 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v21)
        {
          *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v21;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v21 - 8))(a1 + 16, a2 + 16, v21);
        }
        else
        {
          long long v123 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v123;
        }
        uint64_t v124 = (int *)type metadata accessor for Blueprint();
        uint64_t v125 = v124[14];
        uint64_t v242 = a1 + v125;
        uint64_t v126 = a2 + v125;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v127 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 16))(v242, v126, v127);
        uint64_t v128 = v124[15];
        uint64_t v226 = a2 + v128;
        uint64_t v243 = a1 + v128;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v129 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v129 - 8) + 16))(v243, v226, v129);
        *(void *)(a1 + v124[16]) = *(void *)(a2 + v124[16]);
        sub_1B5E00AB8(255, qword_1EB6433E8);
        type metadata accessor for BlueprintViewActionResponse();
        swift_retain();
        uint64_t v130 = swift_getTupleTypeMetadata3();
        uint64_t v131 = *(int *)(v130 + 48);
        long long v132 = *(_OWORD *)(a2 + v131 + 24);
        *(_OWORD *)(a1 + v131 + 24) = v132;
        (**(void (***)(void))(v132 - 8))();
        *(void *)(a1 + *(int *)(v130 + 64)) = *(void *)(a2 + *(int *)(v130 + 64));
        swift_retain();
        goto LABEL_126;
      case 7u:
        uint64_t v22 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v22;
        uint64_t v23 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v23)
        {
          *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v23;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v23 - 8))(a1 + 16, a2 + 16, v23);
        }
        else
        {
          long long v133 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v133;
        }
        uint64_t v134 = (int *)type metadata accessor for Blueprint();
        uint64_t v135 = v134[14];
        uint64_t v244 = a1 + v135;
        uint64_t v136 = a2 + v135;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v137 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v137 - 8) + 16))(v244, v136, v137);
        uint64_t v138 = v134[15];
        uint64_t v227 = a2 + v138;
        uint64_t v245 = a1 + v138;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v139 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v139 - 8) + 16))(v245, v227, v139);
        *(void *)(a1 + v134[16]) = *(void *)(a2 + v134[16]);
        uint64_t v140 = swift_retain();
        MEMORY[0x1F4188790](v140);
        sub_1B5E00AB8(255, qword_1EB6433E8);
        type metadata accessor for BlueprintViewActionResponse();
        uint64_t v141 = (int *)swift_getTupleTypeMetadata();
        uint64_t v142 = v141[12];
        long long v143 = *(_OWORD *)(a2 + v142 + 24);
        *(_OWORD *)(a1 + v142 + 24) = v143;
        (**(void (***)(void))(v143 - 8))();
        *(void *)(a1 + v141[16]) = *(void *)(a2 + v141[16]);
        uint64_t v144 = v141[20];
        uint64_t v145 = a1 + v144;
        uint64_t v146 = a2 + v144;
        *(_OWORD *)uint64_t v145 = *(_OWORD *)v146;
        uint64_t v147 = (_OWORD *)(v146 + 16);
        uint64_t v148 = *(void *)(v146 + 40);
        swift_retain();
        if (v148)
        {
          *(void *)(v145 + 4sub_1B5E6F544(4, 0, 0) = v148;
          (**(void (***)(uint64_t, _OWORD *, uint64_t))(v148 - 8))(v145 + 16, v147, v148);
        }
        else
        {
          long long v176 = v147[1];
          *(_OWORD *)(v145 + 16) = *v147;
          *(_OWORD *)(v145 + 32) = v176;
        }
        goto LABEL_126;
      case 8u:
        uint64_t v24 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v24;
        uint64_t v25 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v25) {
          goto LABEL_22;
        }
        long long v149 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v149;
        goto LABEL_61;
      case 9u:
        uint64_t v26 = type metadata accessor for BlueprintBookmark();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v27 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload(a2, 1, v27))
            {
              sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v28 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
              __swift_storeEnumTagSinglePayload(a1, 0, 1, v27);
            }
            goto LABEL_101;
          case 1u:
            uint64_t v177 = sub_1B61AFCB0();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v177 - 8) + 16))(a1, a2, v177);
            sub_1B5EBF460();
            *(_OWORD *)(a1 + *(int *)(v178 + 48)) = *(_OWORD *)(a2 + *(int *)(v178 + 48));
            goto LABEL_101;
          case 2u:
          case 3u:
            uint64_t v179 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v179;
            *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
            sub_1B61B1F70();
            goto LABEL_101;
          case 4u:
            uint64_t v180 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v180;
            sub_1B61B1F70();
LABEL_101:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v26 - 8) + 64));
            break;
        }
        goto LABEL_126;
      case 0xAu:
        uint64_t v29 = *(void **)a2;
        id v30 = v29;
        *(void *)a1 = v29;
        goto LABEL_126;
      case 0xBu:
        uint64_t v31 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v31;
        uint64_t v32 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v32)
        {
          *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v32;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v32 - 8))(a1 + 16, a2 + 16, v32);
        }
        else
        {
          long long v158 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v158;
        }
        uint64_t v159 = (int *)type metadata accessor for Blueprint();
        uint64_t v160 = v159[14];
        uint64_t v248 = a1 + v160;
        uint64_t v161 = a2 + v160;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v162 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v162 - 8) + 16))(v248, v161, v162);
        uint64_t v163 = v159[15];
        uint64_t v229 = a2 + v163;
        uint64_t v249 = a1 + v163;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v164 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v164 - 8) + 16))(v249, v229, v164);
        *(void *)(a1 + v159[16]) = *(void *)(a2 + v159[16]);
        uint64_t v165 = swift_retain();
        MEMORY[0x1F4188790](v165);
        sub_1B5E00AB8(255, qword_1EB6433E8);
        sub_1B5FD6188(255, &qword_1E9DAA910, (void (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse);
        type metadata accessor for BlueprintBookmark();
        uint64_t v166 = (int *)swift_getTupleTypeMetadata();
        uint64_t v167 = v166[12];
        long long v168 = *(_OWORD *)(a2 + v167 + 24);
        *(_OWORD *)(a1 + v167 + 24) = v168;
        (**(void (***)(void))(v168 - 8))();
        *(void *)(a1 + v166[16]) = *(void *)(a2 + v166[16]);
        *(unsigned char *)(a1 + v166[20]) = *(unsigned char *)(a2 + v166[20]);
        uint64_t v169 = v166[24];
        uint64_t v170 = (void *)(a1 + v169);
        uint64_t v171 = (void *)(a2 + v169);
        uint64_t v172 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v173 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload((uint64_t)v171, 1, v173))
            {
              sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy(v170, v171, *(void *)(*(void *)(v174 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v173 - 8) + 16))(v170, v171, v173);
              __swift_storeEnumTagSinglePayload((uint64_t)v170, 0, 1, v173);
            }
            goto LABEL_125;
          case 1u:
            uint64_t v205 = sub_1B61AFCB0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v205 - 8) + 16))(v170, v171, v205);
            sub_1B5EBF460();
            *(_OWORD *)((char *)v170 + *(int *)(v206 + 48)) = *(_OWORD *)((char *)v171 + *(int *)(v206 + 48));
            goto LABEL_125;
          case 2u:
          case 3u:
            uint64_t v207 = v171[1];
            void *v170 = *v171;
            v170[1] = v207;
            *((_OWORD *)v170 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((_OWORD *)v171 + 1);
            sub_1B61B1F70();
            goto LABEL_125;
          case 4u:
            uint64_t v208 = v171[1];
            void *v170 = *v171;
            v170[1] = v208;
            sub_1B61B1F70();
LABEL_125:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v170, v171, *(void *)(*(void *)(v172 - 8) + 64));
            break;
        }
        goto LABEL_126;
      case 0xCu:
        uint64_t v33 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v33;
        uint64_t v25 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v25)
        {
LABEL_22:
          *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v25;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v25 - 8))(a1 + 16, a2 + 16, v25);
        }
        else
        {
          long long v175 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v175;
        }
LABEL_61:
        long long v150 = (int *)type metadata accessor for Blueprint();
        uint64_t v151 = v150[14];
        uint64_t v246 = a1 + v151;
        uint64_t v152 = a2 + v151;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v153 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v153 - 8) + 16))(v246, v152, v153);
        uint64_t v154 = v150[15];
        uint64_t v228 = a2 + v154;
        uint64_t v247 = a1 + v154;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v155 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 16))(v247, v228, v155);
        *(void *)(a1 + v150[16]) = *(void *)(a2 + v150[16]);
        sub_1B5E00AB8(255, qword_1EB6433E8);
        swift_retain();
        uint64_t v156 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        long long v157 = *(_OWORD *)(a2 + v156 + 24);
        *(_OWORD *)(a1 + v156 + 24) = v157;
        (**(void (***)(void))(v157 - 8))();
LABEL_126:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy((void *)a1, (const void *)a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void sub_1B5FD6188(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B61B2F80();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1B5FD61DC(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      if (a1[5]) {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 2));
      }
      uint64_t v8 = type metadata accessor for Blueprint();
      long long v9 = (char *)a1 + *(int *)(v8 + 56);
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v10 = sub_1B61B0670();
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
      uint64_t v11 = (char *)a1 + *(int *)(v8 + 60);
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v12 = sub_1B61B0A30();
      (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
      swift_release();
      type metadata accessor for BlueprintBookmark();
      uint64_t v13 = (uint64_t)a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_42;
        case 1u:
          goto LABEL_44;
        case 2u:
        case 3u:
        case 4u:
          goto LABEL_35;
        default:
          return;
      }
      return;
    case 1u:
      swift_bridgeObjectRelease();
      if (a1[5]) {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 2));
      }
      uint64_t v14 = type metadata accessor for Blueprint();
      uint64_t v15 = (char *)a1 + *(int *)(v14 + 56);
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v16 = sub_1B61B0670();
      (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
      uint64_t v17 = (char *)a1 + *(int *)(v14 + 60);
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v18 = sub_1B61B0A30();
      (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
      swift_release();
      type metadata accessor for BlueprintBookmark();
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v20 = (uint64_t)a1 + *(int *)(TupleTypeMetadata3 + 48);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v69 = sub_1B61AFCB0();
          if (!__swift_getEnumTagSinglePayload(v20, 1, v69)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v69 - 8) + 8))(v20, v69);
          }
          break;
        case 1u:
          uint64_t v70 = sub_1B61AFCB0();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v70 - 8) + 8))(v20, v70);
          break;
        case 2u:
        case 3u:
        case 4u:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
      uint64_t v58 = *(int *)(TupleTypeMetadata3 + 64);
      goto LABEL_49;
    case 2u:
      swift_bridgeObjectRelease();
      if (a1[5]) {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 2));
      }
      uint64_t v21 = type metadata accessor for Blueprint();
      uint64_t v22 = (char *)a1 + *(int *)(v21 + 56);
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v23 = sub_1B61B0670();
      (*(void (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
      uint64_t v24 = (char *)a1 + *(int *)(v21 + 60);
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v25 = sub_1B61B0A30();
      (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
      swift_release();
      type metadata accessor for BlueprintBookmark();
      uint64_t v13 = (uint64_t)a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_42;
        case 1u:
          goto LABEL_44;
        case 2u:
        case 3u:
        case 4u:
          goto LABEL_35;
        default:
          return;
      }
      return;
    case 3u:
      swift_bridgeObjectRelease();
      if (a1[5]) {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 2));
      }
      uint64_t v26 = type metadata accessor for Blueprint();
      uint64_t v27 = (char *)a1 + *(int *)(v26 + 56);
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v28 = sub_1B61B0670();
      (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
      uint64_t v29 = (char *)a1 + *(int *)(v26 + 60);
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v30 = sub_1B61B0A30();
      (*(void (**)(char *, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
      swift_release();
      sub_1B5E00AB8(255, qword_1EB6433E8);
      type metadata accessor for BlueprintBookmark();
      uint64_t v31 = swift_getTupleTypeMetadata3();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + *(int *)(v31 + 48));
      uint64_t v13 = (uint64_t)a1 + *(int *)(v31 + 64);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_42;
        case 1u:
          goto LABEL_44;
        case 2u:
        case 3u:
        case 4u:
          goto LABEL_35;
        default:
          return;
      }
      return;
    case 4u:
      swift_bridgeObjectRelease();
      if (a1[5]) {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 2));
      }
      uint64_t v32 = type metadata accessor for Blueprint();
      uint64_t v33 = (char *)a1 + *(int *)(v32 + 56);
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v34 = sub_1B61B0670();
      (*(void (**)(char *, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
      uint64_t v35 = (char *)a1 + *(int *)(v32 + 60);
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v36 = sub_1B61B0A30();
      (*(void (**)(char *, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
      uint64_t v37 = swift_release();
      MEMORY[0x1F4188790](v37);
      sub_1B5E00AB8(255, qword_1EB6433E8);
      type metadata accessor for BlueprintBookmark();
      uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + TupleTypeMetadata[12]);
      uint64_t v39 = (uint64_t)a1 + TupleTypeMetadata[16];
      type metadata accessor for BlueprintBookmark();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v72 = sub_1B61AFCB0();
          if (!__swift_getEnumTagSinglePayload(v39, 1, v72)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v72 - 8) + 8))(v39, v72);
          }
          break;
        case 1u:
          uint64_t v73 = sub_1B61AFCB0();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v73 - 8) + 8))(v39, v73);
          break;
        case 2u:
        case 3u:
        case 4u:
          swift_bridgeObjectRelease();
          break;
        default:
          goto LABEL_31;
      }
      goto LABEL_31;
    case 5u:
      swift_bridgeObjectRelease();
      if (a1[5]) {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 2));
      }
      uint64_t v40 = type metadata accessor for Blueprint();
      uint64_t v41 = (char *)a1 + *(int *)(v40 + 56);
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v42 = sub_1B61B0670();
      (*(void (**)(char *, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
      uint64_t v43 = (char *)a1 + *(int *)(v40 + 60);
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v44 = sub_1B61B0A30();
      (*(void (**)(char *, uint64_t))(*(void *)(v44 - 8) + 8))(v43, v44);
      swift_release();
      sub_1B5E00AB8(255, qword_1EB6433E8);
      type metadata accessor for BlueprintBookmark();
      uint64_t v45 = swift_getTupleTypeMetadata3();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + *(int *)(v45 + 48));
      uint64_t v13 = (uint64_t)a1 + *(int *)(v45 + 64);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_42;
        case 1u:
          goto LABEL_44;
        case 2u:
        case 3u:
        case 4u:
          goto LABEL_35;
        default:
          return;
      }
      return;
    case 6u:
      swift_bridgeObjectRelease();
      if (a1[5]) {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 2));
      }
      uint64_t v46 = type metadata accessor for Blueprint();
      long long v47 = (char *)a1 + *(int *)(v46 + 56);
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v48 = sub_1B61B0670();
      (*(void (**)(char *, uint64_t))(*(void *)(v48 - 8) + 8))(v47, v48);
      uint64_t v49 = (char *)a1 + *(int *)(v46 + 60);
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v50 = sub_1B61B0A30();
      (*(void (**)(char *, uint64_t))(*(void *)(v50 - 8) + 8))(v49, v50);
      swift_release();
      sub_1B5E00AB8(255, qword_1EB6433E8);
      type metadata accessor for BlueprintViewActionResponse();
      uint64_t v51 = swift_getTupleTypeMetadata3();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + *(int *)(v51 + 48));
      swift_release();
      return;
    case 7u:
      swift_bridgeObjectRelease();
      if (a1[5]) {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 2));
      }
      uint64_t v52 = type metadata accessor for Blueprint();
      uint64_t v53 = (char *)a1 + *(int *)(v52 + 56);
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v54 = sub_1B61B0670();
      (*(void (**)(char *, uint64_t))(*(void *)(v54 - 8) + 8))(v53, v54);
      uint64_t v55 = (char *)a1 + *(int *)(v52 + 60);
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v56 = sub_1B61B0A30();
      (*(void (**)(char *, uint64_t))(*(void *)(v56 - 8) + 8))(v55, v56);
      uint64_t v57 = swift_release();
      MEMORY[0x1F4188790](v57);
      sub_1B5E00AB8(255, qword_1EB6433E8);
      type metadata accessor for BlueprintViewActionResponse();
      uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + TupleTypeMetadata[12]);
      swift_release();
LABEL_31:
      uint64_t v58 = TupleTypeMetadata[20];
LABEL_49:
      uint64_t v71 = (char *)a1 + v58;
      if (!*((void *)v71 + 5)) {
        return;
      }
      uint64_t v7 = (uint64_t)(v71 + 16);
LABEL_51:
      __swift_destroy_boxed_opaque_existential_1(v7);
      return;
    case 8u:
    case 0xCu:
      swift_bridgeObjectRelease();
      if (a1[5]) {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 2));
      }
      uint64_t v2 = type metadata accessor for Blueprint();
      unint64_t v3 = (char *)a1 + *(int *)(v2 + 56);
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v4 = sub_1B61B0670();
      (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
      uint64_t v5 = (char *)a1 + *(int *)(v2 + 60);
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v6 = sub_1B61B0A30();
      (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      swift_release();
      sub_1B5E00AB8(255, qword_1EB6433E8);
      uint64_t v7 = (uint64_t)a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      goto LABEL_51;
    case 9u:
      type metadata accessor for BlueprintBookmark();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v74 = sub_1B61AFCB0();
          if (__swift_getEnumTagSinglePayload((uint64_t)a1, 1, v74)) {
            return;
          }
          uint64_t v75 = *(void (**)(void **, uint64_t))(*(void *)(v74 - 8) + 8);
          uint64_t v76 = a1;
          uint64_t v77 = v74;
LABEL_59:
          v75(v76, v77);
          break;
        case 1u:
          uint64_t v78 = sub_1B61AFCB0();
          uint64_t v75 = *(void (**)(void **, uint64_t))(*(void *)(v78 - 8) + 8);
          uint64_t v77 = v78;
          uint64_t v76 = a1;
          goto LABEL_59;
        case 2u:
        case 3u:
        case 4u:
          goto LABEL_35;
        default:
          return;
      }
      return;
    case 0xAu:
      uint64_t v59 = *a1;

      return;
    case 0xBu:
      swift_bridgeObjectRelease();
      if (a1[5]) {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 2));
      }
      uint64_t v60 = type metadata accessor for Blueprint();
      long long v61 = (char *)a1 + *(int *)(v60 + 56);
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v62 = sub_1B61B0670();
      (*(void (**)(char *, uint64_t))(*(void *)(v62 - 8) + 8))(v61, v62);
      uint64_t v63 = (char *)a1 + *(int *)(v60 + 60);
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v64 = sub_1B61B0A30();
      (*(void (**)(char *, uint64_t))(*(void *)(v64 - 8) + 8))(v63, v64);
      uint64_t v65 = swift_release();
      MEMORY[0x1F4188790](v65);
      sub_1B5E00AB8(255, qword_1EB6433E8);
      sub_1B5FD6188(255, &qword_1E9DAA910, (void (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse);
      type metadata accessor for BlueprintBookmark();
      uint64_t v66 = swift_getTupleTypeMetadata();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + *(int *)(v66 + 48));
      swift_release();
      uint64_t v13 = (uint64_t)a1 + *(int *)(v66 + 96);
      type metadata accessor for BlueprintBookmark();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
LABEL_42:
          uint64_t v67 = sub_1B61AFCB0();
          if (!__swift_getEnumTagSinglePayload(v13, 1, v67)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v67 - 8) + 8))(v13, v67);
          }
          break;
        case 1u:
LABEL_44:
          uint64_t v68 = sub_1B61AFCB0();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v68 - 8) + 8))(v13, v68);
          break;
        case 2u:
        case 3u:
        case 4u:
LABEL_35:
          swift_bridgeObjectRelease();
          break;
        default:
          return;
      }
      return;
    default:
      return;
  }
}

uint64_t sub_1B5FD7D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      uint64_t v7 = *(void *)(a2 + 40);
      sub_1B61B1F70();
      if (v7)
      {
        *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v7;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 16, a2 + 16, v7);
      }
      else
      {
        long long v32 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v32;
      }
      uint64_t v33 = (int *)type metadata accessor for Blueprint();
      uint64_t v34 = v33[14];
      uint64_t v35 = a1 + v34;
      uint64_t v36 = a2 + v34;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v37 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
      uint64_t v38 = v33[15];
      uint64_t v226 = a1 + v38;
      uint64_t v39 = a2 + v38;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v40 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v226, v39, v40);
      *(void *)(a1 + v33[16]) = *(void *)(a2 + v33[16]);
      uint64_t v41 = type metadata accessor for BlueprintBookmark();
      swift_retain();
      uint64_t v42 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v43 = a1 + v42;
      uint64_t v44 = a2 + v42;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v45 = sub_1B61AFCB0();
          if (__swift_getEnumTagSinglePayload(v44, 1, v45)) {
            goto LABEL_52;
          }
          goto LABEL_121;
        case 1u:
          uint64_t v187 = sub_1B61AFCB0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v187 - 8) + 16))(v43, v44, v187);
          sub_1B5EBF460();
          *(_OWORD *)(v43 + *(int *)(v188 + 48)) = *(_OWORD *)(v44 + *(int *)(v188 + 48));
          goto LABEL_74;
        case 2u:
        case 3u:
          uint64_t v189 = *(void *)(v44 + 8);
          *(void *)uint64_t v43 = *(void *)v44;
          *(void *)(v43 + 8) = v189;
          *(_OWORD *)(v43 + 16) = *(_OWORD *)(v44 + 16);
          sub_1B61B1F70();
          goto LABEL_74;
        case 4u:
          uint64_t v190 = *(void *)(v44 + 8);
          *(void *)uint64_t v43 = *(void *)v44;
          *(void *)(v43 + 8) = v190;
          sub_1B61B1F70();
LABEL_74:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy((void *)v43, (const void *)v44, *(void *)(*(void *)(v41 - 8) + 64));
          break;
      }
      goto LABEL_117;
    case 1u:
      uint64_t v8 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v8;
      uint64_t v9 = *(void *)(a2 + 40);
      sub_1B61B1F70();
      if (v9)
      {
        *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v9;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(a1 + 16, a2 + 16, v9);
      }
      else
      {
        long long v46 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v46;
      }
      long long v47 = (int *)type metadata accessor for Blueprint();
      uint64_t v48 = v47[14];
      uint64_t v49 = a1 + v48;
      uint64_t v50 = a2 + v48;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v51 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
      uint64_t v52 = v47[15];
      uint64_t v227 = a1 + v52;
      uint64_t v53 = a2 + v52;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v54 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v227, v53, v54);
      *(void *)(a1 + v47[16]) = *(void *)(a2 + v47[16]);
      uint64_t v55 = type metadata accessor for BlueprintBookmark();
      swift_retain();
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v57 = *(int *)(TupleTypeMetadata3 + 48);
      uint64_t v58 = (void *)(a1 + v57);
      uint64_t v59 = (void *)(a2 + v57);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v60 = sub_1B61AFCB0();
          if (__swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60))
          {
            sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
            memcpy(v58, v59, *(void *)(*(void *)(v61 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
            __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v60);
          }
          goto LABEL_80;
        case 1u:
          uint64_t v191 = sub_1B61AFCB0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v191 - 8) + 16))(v58, v59, v191);
          sub_1B5EBF460();
          *(_OWORD *)((char *)v58 + *(int *)(v192 + 48)) = *(_OWORD *)((char *)v59 + *(int *)(v192 + 48));
          goto LABEL_80;
        case 2u:
        case 3u:
          uint64_t v193 = v59[1];
          *uint64_t v58 = *v59;
          v58[1] = v193;
          *((_OWORD *)v58 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((_OWORD *)v59 + 1);
          sub_1B61B1F70();
          goto LABEL_80;
        case 4u:
          uint64_t v194 = v59[1];
          *uint64_t v58 = *v59;
          v58[1] = v194;
          sub_1B61B1F70();
LABEL_80:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v58, v59, *(void *)(*(void *)(v55 - 8) + 64));
          break;
      }
      uint64_t v195 = *(int *)(TupleTypeMetadata3 + 64);
      uint64_t v196 = a1 + v195;
      uint64_t v197 = a2 + v195;
      *(_OWORD *)uint64_t v196 = *(_OWORD *)v197;
      uint64_t v198 = (_OWORD *)(v196 + 16);
      uint64_t v199 = (_OWORD *)(v197 + 16);
      uint64_t v200 = *(void *)(v197 + 40);
      if (v200) {
        goto LABEL_82;
      }
      long long v201 = *(_OWORD *)(v197 + 32);
      *uint64_t v198 = *v199;
      *(_OWORD *)(v196 + 32) = v201;
      goto LABEL_117;
    case 2u:
      uint64_t v10 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v10;
      uint64_t v11 = *(void *)(a2 + 40);
      sub_1B61B1F70();
      if (v11)
      {
        *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v11;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8))(a1 + 16, a2 + 16, v11);
      }
      else
      {
        long long v62 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v62;
      }
      uint64_t v63 = (int *)type metadata accessor for Blueprint();
      uint64_t v64 = v63[14];
      uint64_t v65 = a1 + v64;
      uint64_t v66 = a2 + v64;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v67 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
      uint64_t v68 = v63[15];
      uint64_t v228 = a1 + v68;
      uint64_t v69 = a2 + v68;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v70 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 16))(v228, v69, v70);
      *(void *)(a1 + v63[16]) = *(void *)(a2 + v63[16]);
      uint64_t v71 = type metadata accessor for BlueprintBookmark();
      swift_retain();
      uint64_t v72 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v43 = a1 + v72;
      uint64_t v44 = a2 + v72;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v45 = sub_1B61AFCB0();
          if (__swift_getEnumTagSinglePayload(v44, 1, v45)) {
            goto LABEL_52;
          }
          goto LABEL_121;
        case 1u:
          uint64_t v202 = sub_1B61AFCB0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v202 - 8) + 16))(v43, v44, v202);
          sub_1B5EBF460();
          *(_OWORD *)(v43 + *(int *)(v203 + 48)) = *(_OWORD *)(v44 + *(int *)(v203 + 48));
          goto LABEL_88;
        case 2u:
        case 3u:
          uint64_t v204 = *(void *)(v44 + 8);
          *(void *)uint64_t v43 = *(void *)v44;
          *(void *)(v43 + 8) = v204;
          *(_OWORD *)(v43 + 16) = *(_OWORD *)(v44 + 16);
          sub_1B61B1F70();
          goto LABEL_88;
        case 4u:
          uint64_t v205 = *(void *)(v44 + 8);
          *(void *)uint64_t v43 = *(void *)v44;
          *(void *)(v43 + 8) = v205;
          sub_1B61B1F70();
LABEL_88:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy((void *)v43, (const void *)v44, *(void *)(*(void *)(v71 - 8) + 64));
          break;
      }
      goto LABEL_117;
    case 3u:
      uint64_t v12 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v12;
      uint64_t v13 = *(void *)(a2 + 40);
      sub_1B61B1F70();
      if (v13)
      {
        *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v13;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8))(a1 + 16, a2 + 16, v13);
      }
      else
      {
        long long v73 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v73;
      }
      uint64_t v74 = (int *)type metadata accessor for Blueprint();
      uint64_t v75 = v74[14];
      uint64_t v76 = a1 + v75;
      uint64_t v77 = a2 + v75;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v78 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
      uint64_t v79 = v74[15];
      uint64_t v229 = a1 + v79;
      uint64_t v80 = a2 + v79;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v81 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 16))(v229, v80, v81);
      *(void *)(a1 + v74[16]) = *(void *)(a2 + v74[16]);
      sub_1B5E00AB8(255, qword_1EB6433E8);
      uint64_t v82 = type metadata accessor for BlueprintBookmark();
      swift_retain();
      uint64_t v83 = swift_getTupleTypeMetadata3();
      uint64_t v84 = *(int *)(v83 + 48);
      long long v85 = *(_OWORD *)(a2 + v84 + 24);
      *(_OWORD *)(a1 + v84 + 24) = v85;
      (**(void (***)(void))(v85 - 8))();
      uint64_t v86 = *(int *)(v83 + 64);
      uint64_t v43 = a1 + v86;
      uint64_t v44 = a2 + v86;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v45 = sub_1B61AFCB0();
          if (__swift_getEnumTagSinglePayload(v44, 1, v45)) {
            goto LABEL_52;
          }
          goto LABEL_121;
        case 1u:
          uint64_t v206 = sub_1B61AFCB0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v206 - 8) + 16))(v43, v44, v206);
          sub_1B5EBF460();
          *(_OWORD *)(v43 + *(int *)(v207 + 48)) = *(_OWORD *)(v44 + *(int *)(v207 + 48));
          goto LABEL_94;
        case 2u:
        case 3u:
          uint64_t v208 = *(void *)(v44 + 8);
          *(void *)uint64_t v43 = *(void *)v44;
          *(void *)(v43 + 8) = v208;
          *(_OWORD *)(v43 + 16) = *(_OWORD *)(v44 + 16);
          sub_1B61B1F70();
          goto LABEL_94;
        case 4u:
          uint64_t v209 = *(void *)(v44 + 8);
          *(void *)uint64_t v43 = *(void *)v44;
          *(void *)(v43 + 8) = v209;
          sub_1B61B1F70();
LABEL_94:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy((void *)v43, (const void *)v44, *(void *)(*(void *)(v82 - 8) + 64));
          break;
      }
      goto LABEL_117;
    case 4u:
      uint64_t v14 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v14;
      uint64_t v15 = *(void *)(a2 + 40);
      sub_1B61B1F70();
      if (v15)
      {
        *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v15;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8))(a1 + 16, a2 + 16, v15);
      }
      else
      {
        long long v87 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v87;
      }
      uint64_t v88 = (int *)type metadata accessor for Blueprint();
      uint64_t v89 = v88[14];
      uint64_t v90 = a1 + v89;
      uint64_t v91 = a2 + v89;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v92 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 16))(v90, v91, v92);
      uint64_t v93 = v88[15];
      uint64_t v230 = a1 + v93;
      uint64_t v94 = a2 + v93;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v95 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 16))(v230, v94, v95);
      *(void *)(a1 + v88[16]) = *(void *)(a2 + v88[16]);
      uint64_t v96 = swift_retain();
      MEMORY[0x1F4188790](v96);
      sub_1B5E00AB8(255, qword_1EB6433E8);
      type metadata accessor for BlueprintBookmark();
      uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v98 = TupleTypeMetadata[12];
      long long v99 = *(_OWORD *)(a2 + v98 + 24);
      *(_OWORD *)(a1 + v98 + 24) = v99;
      (**(void (***)(void))(v99 - 8))();
      uint64_t v100 = TupleTypeMetadata[16];
      uint64_t v101 = (void *)(a1 + v100);
      uint64_t v102 = (void *)(a2 + v100);
      uint64_t v103 = type metadata accessor for BlueprintBookmark();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v104 = sub_1B61AFCB0();
          if (__swift_getEnumTagSinglePayload((uint64_t)v102, 1, v104))
          {
            sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
            memcpy(v101, v102, *(void *)(*(void *)(v105 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v104 - 8) + 16))(v101, v102, v104);
            __swift_storeEnumTagSinglePayload((uint64_t)v101, 0, 1, v104);
          }
          goto LABEL_100;
        case 1u:
          uint64_t v210 = sub_1B61AFCB0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v210 - 8) + 16))(v101, v102, v210);
          sub_1B5EBF460();
          *(_OWORD *)((char *)v101 + *(int *)(v211 + 48)) = *(_OWORD *)((char *)v102 + *(int *)(v211 + 48));
          goto LABEL_100;
        case 2u:
        case 3u:
          uint64_t v212 = v102[1];
          *uint64_t v101 = *v102;
          v101[1] = v212;
          *((_OWORD *)v101 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((_OWORD *)v102 + 1);
          sub_1B61B1F70();
          goto LABEL_100;
        case 4u:
          uint64_t v213 = v102[1];
          *uint64_t v101 = *v102;
          v101[1] = v213;
          sub_1B61B1F70();
LABEL_100:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
          break;
      }
      uint64_t v214 = TupleTypeMetadata[20];
      uint64_t v196 = a1 + v214;
      uint64_t v215 = a2 + v214;
      *(_OWORD *)uint64_t v196 = *(_OWORD *)v215;
      uint64_t v198 = (_OWORD *)(v196 + 16);
      uint64_t v199 = (_OWORD *)(v215 + 16);
      uint64_t v200 = *(void *)(v215 + 40);
      if (v200)
      {
LABEL_82:
        *(void *)(v196 + 4sub_1B5E6F544(4, 0, 0) = v200;
        (**(void (***)(_OWORD *, _OWORD *))(v200 - 8))(v198, v199);
      }
      else
      {
        long long v216 = *(_OWORD *)(v215 + 32);
        *uint64_t v198 = *v199;
        *(_OWORD *)(v196 + 32) = v216;
      }
      goto LABEL_117;
    case 5u:
      uint64_t v16 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v16;
      uint64_t v17 = *(void *)(a2 + 40);
      sub_1B61B1F70();
      if (v17)
      {
        *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v17;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v17 - 8))(a1 + 16, a2 + 16, v17);
      }
      else
      {
        long long v106 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v106;
      }
      long long v107 = (int *)type metadata accessor for Blueprint();
      uint64_t v108 = v107[14];
      uint64_t v109 = a1 + v108;
      uint64_t v110 = a2 + v108;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v111 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 16))(v109, v110, v111);
      uint64_t v112 = v107[15];
      uint64_t v231 = a1 + v112;
      uint64_t v113 = a2 + v112;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v114 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 16))(v231, v113, v114);
      *(void *)(a1 + v107[16]) = *(void *)(a2 + v107[16]);
      sub_1B5E00AB8(255, qword_1EB6433E8);
      uint64_t v115 = type metadata accessor for BlueprintBookmark();
      swift_retain();
      uint64_t v116 = swift_getTupleTypeMetadata3();
      uint64_t v117 = *(int *)(v116 + 48);
      long long v118 = *(_OWORD *)(a2 + v117 + 24);
      *(_OWORD *)(a1 + v117 + 24) = v118;
      (**(void (***)(void))(v118 - 8))();
      uint64_t v119 = *(int *)(v116 + 64);
      uint64_t v43 = a1 + v119;
      uint64_t v44 = a2 + v119;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v45 = sub_1B61AFCB0();
          if (__swift_getEnumTagSinglePayload(v44, 1, v45))
          {
LABEL_52:
            sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
            memcpy((void *)v43, (const void *)v44, *(void *)(*(void *)(v120 - 8) + 64));
          }
          else
          {
LABEL_121:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
            __swift_storeEnumTagSinglePayload(v43, 0, 1, v45);
          }
          goto LABEL_116;
        case 1u:
          uint64_t v217 = sub_1B61AFCB0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v217 - 8) + 16))(v43, v44, v217);
          sub_1B5EBF460();
          *(_OWORD *)(v43 + *(int *)(v218 + 48)) = *(_OWORD *)(v44 + *(int *)(v218 + 48));
          goto LABEL_107;
        case 2u:
        case 3u:
          uint64_t v219 = *(void *)(v44 + 8);
          *(void *)uint64_t v43 = *(void *)v44;
          *(void *)(v43 + 8) = v219;
          *(_OWORD *)(v43 + 16) = *(_OWORD *)(v44 + 16);
          sub_1B61B1F70();
          goto LABEL_107;
        case 4u:
          uint64_t v220 = *(void *)(v44 + 8);
          *(void *)uint64_t v43 = *(void *)v44;
          *(void *)(v43 + 8) = v220;
          sub_1B61B1F70();
LABEL_107:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy((void *)v43, (const void *)v44, *(void *)(*(void *)(v115 - 8) + 64));
          break;
      }
      goto LABEL_117;
    case 6u:
      uint64_t v18 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v18;
      uint64_t v19 = *(void *)(a2 + 40);
      sub_1B61B1F70();
      if (v19)
      {
        *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v19;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v19 - 8))(a1 + 16, a2 + 16, v19);
      }
      else
      {
        long long v121 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v121;
      }
      uint64_t v122 = (int *)type metadata accessor for Blueprint();
      uint64_t v123 = v122[14];
      uint64_t v124 = a1 + v123;
      uint64_t v125 = a2 + v123;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v126 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v126 - 8) + 16))(v124, v125, v126);
      uint64_t v127 = v122[15];
      uint64_t v232 = a1 + v127;
      uint64_t v128 = a2 + v127;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v129 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v129 - 8) + 16))(v232, v128, v129);
      *(void *)(a1 + v122[16]) = *(void *)(a2 + v122[16]);
      sub_1B5E00AB8(255, qword_1EB6433E8);
      type metadata accessor for BlueprintViewActionResponse();
      swift_retain();
      uint64_t v130 = swift_getTupleTypeMetadata3();
      uint64_t v131 = *(int *)(v130 + 48);
      long long v132 = *(_OWORD *)(a2 + v131 + 24);
      *(_OWORD *)(a1 + v131 + 24) = v132;
      (**(void (***)(void))(v132 - 8))();
      *(void *)(a1 + *(int *)(v130 + 64)) = *(void *)(a2 + *(int *)(v130 + 64));
      swift_retain();
      goto LABEL_117;
    case 7u:
      uint64_t v20 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v20;
      uint64_t v21 = *(void *)(a2 + 40);
      sub_1B61B1F70();
      if (v21)
      {
        *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v21;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v21 - 8))(a1 + 16, a2 + 16, v21);
      }
      else
      {
        long long v133 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v133;
      }
      uint64_t v134 = (int *)type metadata accessor for Blueprint();
      uint64_t v135 = v134[14];
      uint64_t v136 = a1 + v135;
      uint64_t v137 = a2 + v135;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v138 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v138 - 8) + 16))(v136, v137, v138);
      uint64_t v139 = v134[15];
      uint64_t v233 = a1 + v139;
      uint64_t v140 = a2 + v139;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v141 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v141 - 8) + 16))(v233, v140, v141);
      *(void *)(a1 + v134[16]) = *(void *)(a2 + v134[16]);
      uint64_t v142 = swift_retain();
      MEMORY[0x1F4188790](v142);
      sub_1B5E00AB8(255, qword_1EB6433E8);
      type metadata accessor for BlueprintViewActionResponse();
      long long v143 = (int *)swift_getTupleTypeMetadata();
      uint64_t v144 = v143[12];
      long long v145 = *(_OWORD *)(a2 + v144 + 24);
      *(_OWORD *)(a1 + v144 + 24) = v145;
      (**(void (***)(void))(v145 - 8))();
      *(void *)(a1 + v143[16]) = *(void *)(a2 + v143[16]);
      uint64_t v146 = v143[20];
      uint64_t v147 = a1 + v146;
      uint64_t v148 = a2 + v146;
      *(_OWORD *)uint64_t v147 = *(_OWORD *)v148;
      long long v149 = (_OWORD *)(v148 + 16);
      uint64_t v150 = *(void *)(v148 + 40);
      swift_retain();
      if (v150)
      {
        *(void *)(v147 + 4sub_1B5E6F544(4, 0, 0) = v150;
        (**(void (***)(uint64_t, _OWORD *, uint64_t))(v150 - 8))(v147 + 16, v149, v150);
      }
      else
      {
        long long v182 = v149[1];
        *(_OWORD *)(v147 + 16) = *v149;
        *(_OWORD *)(v147 + 32) = v182;
      }
      goto LABEL_117;
    case 8u:
      uint64_t v22 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v22;
      uint64_t v23 = *(void *)(a2 + 40);
      sub_1B61B1F70();
      if (v23) {
        goto LABEL_20;
      }
      long long v151 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(a1 + 32) = v151;
      goto LABEL_59;
    case 9u:
      uint64_t v24 = type metadata accessor for BlueprintBookmark();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v25 = sub_1B61AFCB0();
          if (__swift_getEnumTagSinglePayload(a2, 1, v25))
          {
            sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v26 - 8) + 64));
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
            __swift_storeEnumTagSinglePayload(a1, 0, 1, v25);
          }
          goto LABEL_116;
        case 1u:
          uint64_t v183 = sub_1B61AFCB0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v183 - 8) + 16))(a1, a2, v183);
          sub_1B5EBF460();
          *(_OWORD *)(a1 + *(int *)(v184 + 48)) = *(_OWORD *)(a2 + *(int *)(v184 + 48));
          goto LABEL_116;
        case 2u:
        case 3u:
          uint64_t v185 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v185;
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          sub_1B61B1F70();
          goto LABEL_116;
        case 4u:
          uint64_t v186 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v186;
          sub_1B61B1F70();
          goto LABEL_116;
        default:
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v24 - 8) + 64));
          break;
      }
      goto LABEL_117;
    case 0xAu:
      uint64_t v27 = *(void *)a2;
      id v28 = *(id *)a2;
      *(void *)a1 = v27;
      goto LABEL_117;
    case 0xBu:
      uint64_t v29 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v29;
      uint64_t v30 = *(void *)(a2 + 40);
      sub_1B61B1F70();
      if (v30)
      {
        *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v30;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v30 - 8))(a1 + 16, a2 + 16, v30);
      }
      else
      {
        long long v162 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v162;
      }
      uint64_t v163 = (int *)type metadata accessor for Blueprint();
      uint64_t v164 = v163[14];
      uint64_t v165 = a1 + v164;
      uint64_t v166 = a2 + v164;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v167 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v167 - 8) + 16))(v165, v166, v167);
      uint64_t v168 = v163[15];
      uint64_t v235 = a1 + v168;
      uint64_t v169 = a2 + v168;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v170 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v170 - 8) + 16))(v235, v169, v170);
      *(void *)(a1 + v163[16]) = *(void *)(a2 + v163[16]);
      uint64_t v171 = swift_retain();
      MEMORY[0x1F4188790](v171);
      sub_1B5E00AB8(255, qword_1EB6433E8);
      sub_1B5FD6188(255, &qword_1E9DAA910, (void (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse);
      type metadata accessor for BlueprintBookmark();
      uint64_t v172 = (int *)swift_getTupleTypeMetadata();
      uint64_t v173 = v172[12];
      long long v174 = *(_OWORD *)(a2 + v173 + 24);
      *(_OWORD *)(a1 + v173 + 24) = v174;
      (**(void (***)(void))(v174 - 8))();
      *(void *)(a1 + v172[16]) = *(void *)(a2 + v172[16]);
      *(unsigned char *)(a1 + v172[20]) = *(unsigned char *)(a2 + v172[20]);
      uint64_t v175 = v172[24];
      long long v176 = (void *)(a1 + v175);
      uint64_t v177 = (void *)(a2 + v175);
      uint64_t v178 = type metadata accessor for BlueprintBookmark();
      swift_retain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v179 = sub_1B61AFCB0();
          if (__swift_getEnumTagSinglePayload((uint64_t)v177, 1, v179))
          {
            sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
            memcpy(v176, v177, *(void *)(*(void *)(v180 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v179 - 8) + 16))(v176, v177, v179);
            __swift_storeEnumTagSinglePayload((uint64_t)v176, 0, 1, v179);
          }
LABEL_116:
          swift_storeEnumTagMultiPayload();
          goto LABEL_117;
        case 1u:
          uint64_t v221 = sub_1B61AFCB0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v221 - 8) + 16))(v176, v177, v221);
          sub_1B5EBF460();
          *(_OWORD *)((char *)v176 + *(int *)(v222 + 48)) = *(_OWORD *)((char *)v177 + *(int *)(v222 + 48));
          goto LABEL_113;
        case 2u:
        case 3u:
          uint64_t v223 = v177[1];
          void *v176 = *v177;
          v176[1] = v223;
          *((_OWORD *)v176 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((_OWORD *)v177 + 1);
          sub_1B61B1F70();
          goto LABEL_113;
        case 4u:
          uint64_t v224 = v177[1];
          void *v176 = *v177;
          v176[1] = v224;
          sub_1B61B1F70();
LABEL_113:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v176, v177, *(void *)(*(void *)(v178 - 8) + 64));
          break;
      }
      goto LABEL_117;
    case 0xCu:
      uint64_t v31 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v31;
      uint64_t v23 = *(void *)(a2 + 40);
      sub_1B61B1F70();
      if (v23)
      {
LABEL_20:
        *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v23;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v23 - 8))(a1 + 16, a2 + 16, v23);
      }
      else
      {
        long long v181 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v181;
      }
LABEL_59:
      uint64_t v152 = (int *)type metadata accessor for Blueprint();
      uint64_t v153 = v152[14];
      uint64_t v154 = a1 + v153;
      uint64_t v155 = a2 + v153;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v156 = sub_1B61B0670();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v156 - 8) + 16))(v154, v155, v156);
      uint64_t v157 = v152[15];
      uint64_t v234 = a1 + v157;
      uint64_t v158 = a2 + v157;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v159 = sub_1B61B0A30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 16))(v234, v158, v159);
      *(void *)(a1 + v152[16]) = *(void *)(a2 + v152[16]);
      sub_1B5E00AB8(255, qword_1EB6433E8);
      swift_retain();
      uint64_t v160 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      long long v161 = *(_OWORD *)(a2 + v160 + 24);
      *(_OWORD *)(a1 + v160 + 24) = v161;
      (**(void (***)(void))(v161 - 8))();
LABEL_117:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_1B5FDAED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, a3);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v6 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v6)
        {
          *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v6;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(a1 + 16, a2 + 16, v6);
        }
        else
        {
          long long v21 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v21;
        }
        uint64_t v22 = (int *)type metadata accessor for Blueprint();
        uint64_t v23 = v22[14];
        uint64_t v208 = a1 + v23;
        uint64_t v24 = a2 + v23;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v25 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v208, v24, v25);
        uint64_t v26 = v22[15];
        uint64_t v198 = a2 + v26;
        uint64_t v209 = a1 + v26;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v27 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v209, v198, v27);
        *(void *)(a1 + v22[16]) = *(void *)(a2 + v22[16]);
        uint64_t v28 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        uint64_t v29 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v30 = (void *)(a1 + v29);
        uint64_t v31 = (void *)(a2 + v29);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v32 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
            {
              sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
              __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
            }
            goto LABEL_103;
          case 1u:
            uint64_t v173 = sub_1B61AFCB0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v173 - 8) + 16))(v30, v31, v173);
            sub_1B5EBF460();
            *(_OWORD *)((char *)v30 + *(int *)(v174 + 48)) = *(_OWORD *)((char *)v31 + *(int *)(v174 + 48));
            goto LABEL_103;
          case 2u:
          case 3u:
            *uint64_t v30 = *v31;
            v30[1] = v31[1];
            *((_OWORD *)v30 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((_OWORD *)v31 + 1);
            sub_1B61B1F70();
            goto LABEL_103;
          case 4u:
            *uint64_t v30 = *v31;
            v30[1] = v31[1];
            sub_1B61B1F70();
LABEL_103:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v30, v31, *(void *)(*(void *)(v28 - 8) + 64));
            break;
        }
        goto LABEL_125;
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v7 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v7)
        {
          *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v7;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 16, a2 + 16, v7);
        }
        else
        {
          long long v34 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v34;
        }
        uint64_t v35 = (int *)type metadata accessor for Blueprint();
        uint64_t v36 = v35[14];
        uint64_t v210 = a1 + v36;
        uint64_t v37 = a2 + v36;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v38 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v210, v37, v38);
        uint64_t v39 = v35[15];
        uint64_t v199 = a2 + v39;
        uint64_t v211 = a1 + v39;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v40 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v211, v199, v40);
        *(void *)(a1 + v35[16]) = *(void *)(a2 + v35[16]);
        uint64_t v41 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        uint64_t v43 = *(int *)(TupleTypeMetadata3 + 48);
        uint64_t v44 = (void *)(a1 + v43);
        uint64_t v45 = (void *)(a2 + v43);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v46 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload((uint64_t)v45, 1, v46))
            {
              sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
              __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v46);
            }
            goto LABEL_106;
          case 1u:
            uint64_t v175 = sub_1B61AFCB0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v175 - 8) + 16))(v44, v45, v175);
            sub_1B5EBF460();
            *(_OWORD *)((char *)v44 + *(int *)(v176 + 48)) = *(_OWORD *)((char *)v45 + *(int *)(v176 + 48));
            goto LABEL_106;
          case 2u:
          case 3u:
            *uint64_t v44 = *v45;
            v44[1] = v45[1];
            *((_OWORD *)v44 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((_OWORD *)v45 + 1);
            sub_1B61B1F70();
            goto LABEL_106;
          case 4u:
            *uint64_t v44 = *v45;
            v44[1] = v45[1];
            sub_1B61B1F70();
LABEL_106:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v44, v45, *(void *)(*(void *)(v41 - 8) + 64));
            break;
        }
        uint64_t v187 = *(int *)(TupleTypeMetadata3 + 64);
        uint64_t v188 = a1 + v187;
        uint64_t v189 = a2 + v187;
        *(_OWORD *)uint64_t v188 = *(_OWORD *)v189;
        uint64_t v190 = (_OWORD *)(v188 + 16);
        uint64_t v191 = (_OWORD *)(v189 + 16);
        uint64_t v192 = *(void *)(v189 + 40);
        if (v192) {
          goto LABEL_108;
        }
        long long v193 = *(_OWORD *)(v189 + 32);
        *uint64_t v190 = *v191;
        *(_OWORD *)(v188 + 32) = v193;
        goto LABEL_125;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v8 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v8)
        {
          *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v8;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 16, a2 + 16, v8);
        }
        else
        {
          long long v48 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v48;
        }
        uint64_t v49 = (int *)type metadata accessor for Blueprint();
        uint64_t v50 = v49[14];
        uint64_t v212 = a1 + v50;
        uint64_t v51 = a2 + v50;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v52 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(v212, v51, v52);
        uint64_t v53 = v49[15];
        uint64_t v200 = a2 + v53;
        uint64_t v213 = a1 + v53;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v54 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v213, v200, v54);
        *(void *)(a1 + v49[16]) = *(void *)(a2 + v49[16]);
        uint64_t v55 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        uint64_t v56 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v57 = (void *)(a1 + v56);
        uint64_t v58 = (void *)(a2 + v56);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v59 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload((uint64_t)v58, 1, v59))
            {
              sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
              __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v59);
            }
            goto LABEL_111;
          case 1u:
            uint64_t v177 = sub_1B61AFCB0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v177 - 8) + 16))(v57, v58, v177);
            sub_1B5EBF460();
            *(_OWORD *)((char *)v57 + *(int *)(v178 + 48)) = *(_OWORD *)((char *)v58 + *(int *)(v178 + 48));
            goto LABEL_111;
          case 2u:
          case 3u:
            *uint64_t v57 = *v58;
            v57[1] = v58[1];
            *((_OWORD *)v57 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((_OWORD *)v58 + 1);
            sub_1B61B1F70();
            goto LABEL_111;
          case 4u:
            *uint64_t v57 = *v58;
            v57[1] = v58[1];
            sub_1B61B1F70();
LABEL_111:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v57, v58, *(void *)(*(void *)(v55 - 8) + 64));
            break;
        }
        goto LABEL_125;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v9 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v9)
        {
          *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v9;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(a1 + 16, a2 + 16, v9);
        }
        else
        {
          long long v61 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v61;
        }
        long long v62 = (int *)type metadata accessor for Blueprint();
        uint64_t v63 = v62[14];
        uint64_t v214 = a1 + v63;
        uint64_t v64 = a2 + v63;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v65 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 16))(v214, v64, v65);
        uint64_t v66 = v62[15];
        uint64_t v201 = a2 + v66;
        uint64_t v215 = a1 + v66;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v67 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 16))(v215, v201, v67);
        *(void *)(a1 + v62[16]) = *(void *)(a2 + v62[16]);
        sub_1B5E00AB8(255, qword_1EB6433E8);
        uint64_t v68 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        uint64_t v69 = swift_getTupleTypeMetadata3();
        uint64_t v70 = *(int *)(v69 + 48);
        uint64_t v71 = a1 + v70;
        uint64_t v72 = *(void *)(a2 + v70 + 24);
        *(void *)(v71 + 24) = v72;
        *(void *)(v71 + 32) = *(void *)(a2 + v70 + 32);
        (**(void (***)(void))(v72 - 8))();
        uint64_t v73 = *(int *)(v69 + 64);
        uint64_t v74 = (void *)(a1 + v73);
        uint64_t v75 = (void *)(a2 + v73);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v76 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload((uint64_t)v75, 1, v76))
            {
              sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy(v74, v75, *(void *)(*(void *)(v77 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
              __swift_storeEnumTagSinglePayload((uint64_t)v74, 0, 1, v76);
            }
            goto LABEL_114;
          case 1u:
            uint64_t v179 = sub_1B61AFCB0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v179 - 8) + 16))(v74, v75, v179);
            sub_1B5EBF460();
            *(_OWORD *)((char *)v74 + *(int *)(v180 + 48)) = *(_OWORD *)((char *)v75 + *(int *)(v180 + 48));
            goto LABEL_114;
          case 2u:
          case 3u:
            *uint64_t v74 = *v75;
            v74[1] = v75[1];
            *((_OWORD *)v74 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((_OWORD *)v75 + 1);
            sub_1B61B1F70();
            goto LABEL_114;
          case 4u:
            *uint64_t v74 = *v75;
            v74[1] = v75[1];
            sub_1B61B1F70();
LABEL_114:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v74, v75, *(void *)(*(void *)(v68 - 8) + 64));
            break;
        }
        goto LABEL_125;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v10 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v10)
        {
          *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v10;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8))(a1 + 16, a2 + 16, v10);
        }
        else
        {
          long long v78 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v78;
        }
        uint64_t v79 = (int *)type metadata accessor for Blueprint();
        uint64_t v80 = v79[14];
        uint64_t v216 = a1 + v80;
        uint64_t v81 = a2 + v80;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v82 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 16))(v216, v81, v82);
        uint64_t v83 = v79[15];
        uint64_t v202 = a2 + v83;
        uint64_t v217 = a1 + v83;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v84 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 16))(v217, v202, v84);
        *(void *)(a1 + v79[16]) = *(void *)(a2 + v79[16]);
        uint64_t v85 = swift_retain();
        MEMORY[0x1F4188790](v85);
        sub_1B5E00AB8(255, qword_1EB6433E8);
        type metadata accessor for BlueprintBookmark();
        uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
        uint64_t v87 = TupleTypeMetadata[12];
        uint64_t v88 = a1 + v87;
        uint64_t v89 = *(void *)(a2 + v87 + 24);
        *(void *)(v88 + 24) = v89;
        *(void *)(v88 + 32) = *(void *)(a2 + v87 + 32);
        (**(void (***)(void))(v89 - 8))();
        uint64_t v90 = TupleTypeMetadata[16];
        uint64_t v91 = (void *)(a1 + v90);
        uint64_t v92 = (void *)(a2 + v90);
        uint64_t v93 = type metadata accessor for BlueprintBookmark();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v94 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload((uint64_t)v92, 1, v94))
            {
              sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy(v91, v92, *(void *)(*(void *)(v95 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v94 - 8) + 16))(v91, v92, v94);
              __swift_storeEnumTagSinglePayload((uint64_t)v91, 0, 1, v94);
            }
            goto LABEL_117;
          case 1u:
            uint64_t v181 = sub_1B61AFCB0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v181 - 8) + 16))(v91, v92, v181);
            sub_1B5EBF460();
            *(_OWORD *)((char *)v91 + *(int *)(v182 + 48)) = *(_OWORD *)((char *)v92 + *(int *)(v182 + 48));
            goto LABEL_117;
          case 2u:
          case 3u:
            *uint64_t v91 = *v92;
            v91[1] = v92[1];
            *((_OWORD *)v91 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((_OWORD *)v92 + 1);
            sub_1B61B1F70();
            goto LABEL_117;
          case 4u:
            *uint64_t v91 = *v92;
            v91[1] = v92[1];
            sub_1B61B1F70();
LABEL_117:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
            break;
        }
        uint64_t v194 = TupleTypeMetadata[20];
        uint64_t v188 = a1 + v194;
        uint64_t v195 = a2 + v194;
        *(_OWORD *)uint64_t v188 = *(_OWORD *)v195;
        uint64_t v190 = (_OWORD *)(v188 + 16);
        uint64_t v191 = (_OWORD *)(v195 + 16);
        uint64_t v192 = *(void *)(v195 + 40);
        if (v192)
        {
LABEL_108:
          *(void *)(v188 + 4sub_1B5E6F544(4, 0, 0) = v192;
          (**(void (***)(_OWORD *, _OWORD *))(v192 - 8))(v190, v191);
        }
        else
        {
          long long v196 = *(_OWORD *)(v195 + 32);
          *uint64_t v190 = *v191;
          *(_OWORD *)(v188 + 32) = v196;
        }
        goto LABEL_125;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v11 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v11)
        {
          *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v11;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8))(a1 + 16, a2 + 16, v11);
        }
        else
        {
          long long v96 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v96;
        }
        uint64_t v97 = (int *)type metadata accessor for Blueprint();
        uint64_t v98 = v97[14];
        uint64_t v218 = a1 + v98;
        uint64_t v99 = a2 + v98;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v100 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 16))(v218, v99, v100);
        uint64_t v101 = v97[15];
        uint64_t v203 = a2 + v101;
        uint64_t v219 = a1 + v101;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v102 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 16))(v219, v203, v102);
        *(void *)(a1 + v97[16]) = *(void *)(a2 + v97[16]);
        sub_1B5E00AB8(255, qword_1EB6433E8);
        uint64_t v103 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        uint64_t v104 = swift_getTupleTypeMetadata3();
        uint64_t v105 = *(int *)(v104 + 48);
        uint64_t v106 = a1 + v105;
        uint64_t v107 = *(void *)(a2 + v105 + 24);
        *(void *)(v106 + 24) = v107;
        *(void *)(v106 + 32) = *(void *)(a2 + v105 + 32);
        (**(void (***)(void))(v107 - 8))();
        uint64_t v108 = *(int *)(v104 + 64);
        uint64_t v109 = (void *)(a1 + v108);
        uint64_t v110 = (void *)(a2 + v108);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v111 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload((uint64_t)v110, 1, v111))
            {
              sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy(v109, v110, *(void *)(*(void *)(v112 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v111 - 8) + 16))(v109, v110, v111);
              __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v111);
            }
            goto LABEL_121;
          case 1u:
            uint64_t v183 = sub_1B61AFCB0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v183 - 8) + 16))(v109, v110, v183);
            sub_1B5EBF460();
            *(_OWORD *)((char *)v109 + *(int *)(v184 + 48)) = *(_OWORD *)((char *)v110 + *(int *)(v184 + 48));
            goto LABEL_121;
          case 2u:
          case 3u:
            *uint64_t v109 = *v110;
            v109[1] = v110[1];
            *((_OWORD *)v109 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((_OWORD *)v110 + 1);
            sub_1B61B1F70();
            goto LABEL_121;
          case 4u:
            *uint64_t v109 = *v110;
            v109[1] = v110[1];
            sub_1B61B1F70();
LABEL_121:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v109, v110, *(void *)(*(void *)(v103 - 8) + 64));
            break;
        }
        goto LABEL_125;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v12 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v12)
        {
          *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v12;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8))(a1 + 16, a2 + 16, v12);
        }
        else
        {
          long long v113 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v113;
        }
        uint64_t v114 = (int *)type metadata accessor for Blueprint();
        uint64_t v115 = v114[14];
        uint64_t v220 = a1 + v115;
        uint64_t v116 = a2 + v115;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v117 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 16))(v220, v116, v117);
        uint64_t v118 = v114[15];
        uint64_t v204 = a2 + v118;
        uint64_t v221 = a1 + v118;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v119 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v119 - 8) + 16))(v221, v204, v119);
        *(void *)(a1 + v114[16]) = *(void *)(a2 + v114[16]);
        sub_1B5E00AB8(255, qword_1EB6433E8);
        type metadata accessor for BlueprintViewActionResponse();
        swift_retain();
        uint64_t v120 = swift_getTupleTypeMetadata3();
        uint64_t v121 = *(int *)(v120 + 48);
        uint64_t v122 = a1 + v121;
        uint64_t v123 = *(void *)(a2 + v121 + 24);
        *(void *)(v122 + 24) = v123;
        *(void *)(v122 + 32) = *(void *)(a2 + v121 + 32);
        (**(void (***)(void))(v123 - 8))();
        *(void *)(a1 + *(int *)(v120 + 64)) = *(void *)(a2 + *(int *)(v120 + 64));
        swift_retain();
        goto LABEL_125;
      case 7u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v13 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v13)
        {
          *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v13;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8))(a1 + 16, a2 + 16, v13);
        }
        else
        {
          long long v124 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v124;
        }
        uint64_t v125 = (int *)type metadata accessor for Blueprint();
        uint64_t v126 = v125[14];
        uint64_t v222 = a1 + v126;
        uint64_t v127 = a2 + v126;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v128 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v128 - 8) + 16))(v222, v127, v128);
        uint64_t v129 = v125[15];
        uint64_t v205 = a2 + v129;
        uint64_t v223 = a1 + v129;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v130 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v130 - 8) + 16))(v223, v205, v130);
        *(void *)(a1 + v125[16]) = *(void *)(a2 + v125[16]);
        uint64_t v131 = swift_retain();
        MEMORY[0x1F4188790](v131);
        sub_1B5E00AB8(255, qword_1EB6433E8);
        type metadata accessor for BlueprintViewActionResponse();
        long long v132 = (int *)swift_getTupleTypeMetadata();
        uint64_t v133 = v132[12];
        uint64_t v134 = a1 + v133;
        uint64_t v135 = *(void *)(a2 + v133 + 24);
        *(void *)(v134 + 24) = v135;
        *(void *)(v134 + 32) = *(void *)(a2 + v133 + 32);
        (**(void (***)(void))(v135 - 8))();
        *(void *)(a1 + v132[16]) = *(void *)(a2 + v132[16]);
        uint64_t v136 = v132[20];
        uint64_t v137 = a1 + v136;
        uint64_t v138 = a2 + v136;
        *(_OWORD *)uint64_t v137 = *(_OWORD *)v138;
        uint64_t v139 = (_OWORD *)(v138 + 16);
        uint64_t v140 = *(void *)(v138 + 40);
        swift_retain();
        if (v140)
        {
          *(void *)(v137 + 4sub_1B5E6F544(4, 0, 0) = v140;
          (**(void (***)(uint64_t, _OWORD *, uint64_t))(v140 - 8))(v137 + 16, v139, v140);
        }
        else
        {
          long long v170 = v139[1];
          *(_OWORD *)(v137 + 16) = *v139;
          *(_OWORD *)(v137 + 32) = v170;
        }
        goto LABEL_125;
      case 8u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v14 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v14) {
          goto LABEL_21;
        }
        long long v141 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v141;
        goto LABEL_60;
      case 9u:
        uint64_t v15 = type metadata accessor for BlueprintBookmark();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v16 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload(a2, 1, v16))
            {
              sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v17 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
              __swift_storeEnumTagSinglePayload(a1, 0, 1, v16);
            }
            goto LABEL_100;
          case 1u:
            uint64_t v171 = sub_1B61AFCB0();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v171 - 8) + 16))(a1, a2, v171);
            sub_1B5EBF460();
            *(_OWORD *)(a1 + *(int *)(v172 + 48)) = *(_OWORD *)(a2 + *(int *)(v172 + 48));
            goto LABEL_100;
          case 2u:
          case 3u:
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
            sub_1B61B1F70();
            goto LABEL_100;
          case 4u:
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            sub_1B61B1F70();
LABEL_100:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v15 - 8) + 64));
            break;
        }
        goto LABEL_125;
      case 0xAu:
        uint64_t v18 = *(void **)a2;
        id v19 = v18;
        *(void *)a1 = v18;
        goto LABEL_125;
      case 0xBu:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v20 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v20)
        {
          *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v20;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v20 - 8))(a1 + 16, a2 + 16, v20);
        }
        else
        {
          long long v151 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v151;
        }
        uint64_t v152 = (int *)type metadata accessor for Blueprint();
        uint64_t v153 = v152[14];
        uint64_t v226 = a1 + v153;
        uint64_t v154 = a2 + v153;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v155 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 16))(v226, v154, v155);
        uint64_t v156 = v152[15];
        uint64_t v207 = a2 + v156;
        uint64_t v227 = a1 + v156;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v157 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v157 - 8) + 16))(v227, v207, v157);
        *(void *)(a1 + v152[16]) = *(void *)(a2 + v152[16]);
        uint64_t v158 = swift_retain();
        MEMORY[0x1F4188790](v158);
        sub_1B5E00AB8(255, qword_1EB6433E8);
        sub_1B5FD6188(255, &qword_1E9DAA910, (void (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse);
        type metadata accessor for BlueprintBookmark();
        uint64_t v159 = (int *)swift_getTupleTypeMetadata();
        uint64_t v160 = v159[12];
        uint64_t v161 = a1 + v160;
        uint64_t v162 = *(void *)(a2 + v160 + 24);
        *(void *)(v161 + 24) = v162;
        *(void *)(v161 + 32) = *(void *)(a2 + v160 + 32);
        (**(void (***)(void))(v162 - 8))();
        *(void *)(a1 + v159[16]) = *(void *)(a2 + v159[16]);
        *(unsigned char *)(a1 + v159[20]) = *(unsigned char *)(a2 + v159[20]);
        uint64_t v163 = v159[24];
        uint64_t v164 = (void *)(a1 + v163);
        uint64_t v165 = (void *)(a2 + v163);
        uint64_t v166 = type metadata accessor for BlueprintBookmark();
        swift_retain();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v167 = sub_1B61AFCB0();
            if (__swift_getEnumTagSinglePayload((uint64_t)v165, 1, v167))
            {
              sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
              memcpy(v164, v165, *(void *)(*(void *)(v168 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v167 - 8) + 16))(v164, v165, v167);
              __swift_storeEnumTagSinglePayload((uint64_t)v164, 0, 1, v167);
            }
            goto LABEL_124;
          case 1u:
            uint64_t v185 = sub_1B61AFCB0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v185 - 8) + 16))(v164, v165, v185);
            sub_1B5EBF460();
            *(_OWORD *)((char *)v164 + *(int *)(v186 + 48)) = *(_OWORD *)((char *)v165 + *(int *)(v186 + 48));
            goto LABEL_124;
          case 2u:
          case 3u:
            *uint64_t v164 = *v165;
            v164[1] = v165[1];
            *((_OWORD *)v164 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((_OWORD *)v165 + 1);
            sub_1B61B1F70();
            goto LABEL_124;
          case 4u:
            *uint64_t v164 = *v165;
            v164[1] = v165[1];
            sub_1B61B1F70();
LABEL_124:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v164, v165, *(void *)(*(void *)(v166 - 8) + 64));
            break;
        }
        goto LABEL_125;
      case 0xCu:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v14 = *(void *)(a2 + 40);
        sub_1B61B1F70();
        if (v14)
        {
LABEL_21:
          *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v14;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v14 - 8))(a1 + 16, a2 + 16, v14);
        }
        else
        {
          long long v169 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v169;
        }
LABEL_60:
        uint64_t v142 = (int *)type metadata accessor for Blueprint();
        uint64_t v143 = v142[14];
        uint64_t v224 = a1 + v143;
        uint64_t v144 = a2 + v143;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v145 = sub_1B61B0670();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v145 - 8) + 16))(v224, v144, v145);
        uint64_t v146 = v142[15];
        uint64_t v206 = a2 + v146;
        uint64_t v225 = a1 + v146;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v147 = sub_1B61B0A30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v147 - 8) + 16))(v225, v206, v147);
        *(void *)(a1 + v142[16]) = *(void *)(a2 + v142[16]);
        sub_1B5E00AB8(255, qword_1EB6433E8);
        swift_retain();
        uint64_t v148 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v149 = a1 + v148;
        uint64_t v150 = *(void *)(a2 + v148 + 24);
        *(void *)(v149 + 24) = v150;
        *(void *)(v149 + 32) = *(void *)(a2 + v148 + 32);
        (**(void (***)(void))(v150 - 8))();
LABEL_125:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy((void *)a1, (const void *)a2, *(void *)(v5 + 64));
        break;
    }
  }
  return a1;
}

_OWORD *sub_1B5FDE13C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      uint64_t v7 = (int *)type metadata accessor for Blueprint();
      uint64_t v8 = v7[14];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v11 = sub_1B61B0670();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      uint64_t v12 = v7[15];
      uint64_t v195 = (char *)a1 + v12;
      uint64_t v13 = (char *)a2 + v12;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v14 = sub_1B61B0A30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v195, v13, v14);
      *(void *)((char *)a1 + v7[16]) = *(void *)((char *)a2 + v7[16]);
      uint64_t v15 = type metadata accessor for BlueprintBookmark();
      uint64_t v16 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1) {
        goto LABEL_48;
      }
      if (EnumCaseMultiPayload) {
        goto LABEL_49;
      }
      uint64_t v20 = sub_1B61AFCB0();
      if (!__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v20)) {
        goto LABEL_58;
      }
      goto LABEL_28;
    case 1u:
      long long v21 = a2[1];
      *a1 = *a2;
      a1[1] = v21;
      a1[2] = a2[2];
      uint64_t v22 = (int *)type metadata accessor for Blueprint();
      uint64_t v23 = v22[14];
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v26 = sub_1B61B0670();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      uint64_t v27 = v22[15];
      long long v196 = (char *)a1 + v27;
      uint64_t v28 = (char *)a2 + v27;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v29 = sub_1B61B0A30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v196, v28, v29);
      *(void *)((char *)a1 + v22[16]) = *(void *)((char *)a2 + v22[16]);
      uint64_t v30 = type metadata accessor for BlueprintBookmark();
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v32 = *(int *)(TupleTypeMetadata3 + 48);
      uint64_t v33 = (char *)a1 + v32;
      long long v34 = (char *)a2 + v32;
      int v35 = swift_getEnumCaseMultiPayload();
      if (v35 == 1)
      {
        uint64_t v176 = sub_1B61AFCB0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 32))(v33, v34, v176);
        sub_1B5EBF460();
        *(_OWORD *)&v33[*(int *)(v177 + 48)] = *(_OWORD *)&v34[*(int *)(v177 + 48)];
      }
      else
      {
        if (v35)
        {
          memcpy(v33, v34, *(void *)(*(void *)(v30 - 8) + 64));
          goto LABEL_57;
        }
        uint64_t v36 = sub_1B61AFCB0();
        if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v36))
        {
          sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
          memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v33, v34, v36);
          __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v36);
        }
      }
      swift_storeEnumTagMultiPayload();
LABEL_57:
      uint64_t v186 = *(int *)(TupleTypeMetadata3 + 64);
      uint64_t v187 = (_OWORD *)((char *)a1 + v186);
      uint64_t v188 = (_OWORD *)((char *)a2 + v186);
      long long v189 = v188[1];
      *uint64_t v187 = *v188;
      v187[1] = v189;
      v187[2] = v188[2];
      goto LABEL_66;
    case 2u:
      long long v38 = a2[1];
      *a1 = *a2;
      a1[1] = v38;
      a1[2] = a2[2];
      uint64_t v39 = (int *)type metadata accessor for Blueprint();
      uint64_t v40 = v39[14];
      uint64_t v41 = (char *)a1 + v40;
      uint64_t v42 = (char *)a2 + v40;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v43 = sub_1B61B0670();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
      uint64_t v44 = v39[15];
      uint64_t v197 = (char *)a1 + v44;
      uint64_t v45 = (char *)a2 + v44;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v46 = sub_1B61B0A30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v197, v45, v46);
      *(void *)((char *)a1 + v39[16]) = *(void *)((char *)a2 + v39[16]);
      uint64_t v15 = type metadata accessor for BlueprintBookmark();
      uint64_t v47 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v17 = (char *)a1 + v47;
      uint64_t v18 = (char *)a2 + v47;
      int v48 = swift_getEnumCaseMultiPayload();
      if (v48 == 1) {
        goto LABEL_48;
      }
      if (v48) {
        goto LABEL_49;
      }
      uint64_t v20 = sub_1B61AFCB0();
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v20)) {
        goto LABEL_28;
      }
      goto LABEL_58;
    case 3u:
      long long v133 = a2[1];
      *a1 = *a2;
      a1[1] = v133;
      a1[2] = a2[2];
      uint64_t v134 = (int *)type metadata accessor for Blueprint();
      uint64_t v135 = v134[14];
      uint64_t v136 = (char *)a1 + v135;
      uint64_t v137 = (char *)a2 + v135;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v138 = sub_1B61B0670();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 32))(v136, v137, v138);
      uint64_t v139 = v134[15];
      uint64_t v203 = (char *)a1 + v139;
      uint64_t v140 = (char *)a2 + v139;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v141 = sub_1B61B0A30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 32))(v203, v140, v141);
      *(void *)((char *)a1 + v134[16]) = *(void *)((char *)a2 + v134[16]);
      sub_1B5E00AB8(255, qword_1EB6433E8);
      uint64_t v15 = type metadata accessor for BlueprintBookmark();
      uint64_t v142 = swift_getTupleTypeMetadata3();
      uint64_t v143 = *(int *)(v142 + 48);
      uint64_t v144 = (char *)a1 + v143;
      uint64_t v145 = (char *)a2 + v143;
      long long v146 = *((_OWORD *)v145 + 1);
      *(_OWORD *)uint64_t v144 = *(_OWORD *)v145;
      *((_OWORD *)v144 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v146;
      *((void *)v144 + 4) = *((void *)v145 + 4);
      uint64_t v147 = *(int *)(v142 + 64);
      uint64_t v17 = (char *)a1 + v147;
      uint64_t v18 = (char *)a2 + v147;
      int v148 = swift_getEnumCaseMultiPayload();
      if (v148 == 1) {
        goto LABEL_48;
      }
      if (v148) {
        goto LABEL_49;
      }
      uint64_t v20 = sub_1B61AFCB0();
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v20)) {
        goto LABEL_28;
      }
      goto LABEL_58;
    case 4u:
      long long v150 = a2[1];
      *a1 = *a2;
      a1[1] = v150;
      a1[2] = a2[2];
      long long v151 = (int *)type metadata accessor for Blueprint();
      uint64_t v152 = v151[14];
      uint64_t v153 = (char *)a1 + v152;
      uint64_t v154 = (char *)a2 + v152;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v155 = sub_1B61B0670();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 32))(v153, v154, v155);
      uint64_t v156 = v151[15];
      uint64_t v204 = (char *)a1 + v156;
      uint64_t v157 = (char *)a2 + v156;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v158 = sub_1B61B0A30();
      uint64_t v159 = (*(uint64_t (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 32))(v204, v157, v158);
      *(void *)((char *)a1 + v151[16]) = *(void *)((char *)a2 + v151[16]);
      MEMORY[0x1F4188790](v159);
      sub_1B5E00AB8(255, qword_1EB6433E8);
      type metadata accessor for BlueprintBookmark();
      uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v161 = TupleTypeMetadata[12];
      uint64_t v162 = (char *)a1 + v161;
      uint64_t v163 = (char *)a2 + v161;
      long long v164 = *((_OWORD *)v163 + 1);
      *(_OWORD *)uint64_t v162 = *(_OWORD *)v163;
      *((_OWORD *)v162 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v164;
      *((void *)v162 + 4) = *((void *)v163 + 4);
      uint64_t v165 = TupleTypeMetadata[16];
      uint64_t v166 = (char *)a1 + v165;
      uint64_t v167 = (char *)a2 + v165;
      uint64_t v168 = type metadata accessor for BlueprintBookmark();
      int v169 = swift_getEnumCaseMultiPayload();
      if (v169 == 1)
      {
        uint64_t v182 = sub_1B61AFCB0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 32))(v166, v167, v182);
        sub_1B5EBF460();
        *(_OWORD *)&v166[*(int *)(v183 + 48)] = *(_OWORD *)&v167[*(int *)(v183 + 48)];
      }
      else
      {
        if (v169)
        {
          memcpy(v166, v167, *(void *)(*(void *)(v168 - 8) + 64));
          goto LABEL_63;
        }
        uint64_t v170 = sub_1B61AFCB0();
        if (__swift_getEnumTagSinglePayload((uint64_t)v167, 1, v170))
        {
          sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
          memcpy(v166, v167, *(void *)(*(void *)(v171 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 32))(v166, v167, v170);
          __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v170);
        }
      }
      swift_storeEnumTagMultiPayload();
LABEL_63:
      uint64_t v190 = TupleTypeMetadata[20];
      uint64_t v191 = (_OWORD *)((char *)a1 + v190);
      uint64_t v192 = (_OWORD *)((char *)a2 + v190);
      long long v193 = v192[1];
      _OWORD *v191 = *v192;
      v191[1] = v193;
      v191[2] = v192[2];
      goto LABEL_66;
    case 5u:
      long long v49 = a2[1];
      *a1 = *a2;
      a1[1] = v49;
      a1[2] = a2[2];
      uint64_t v50 = (int *)type metadata accessor for Blueprint();
      uint64_t v51 = v50[14];
      uint64_t v52 = (char *)a1 + v51;
      uint64_t v53 = (char *)a2 + v51;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v54 = sub_1B61B0670();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
      uint64_t v55 = v50[15];
      uint64_t v198 = (char *)a1 + v55;
      uint64_t v56 = (char *)a2 + v55;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v57 = sub_1B61B0A30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v198, v56, v57);
      *(void *)((char *)a1 + v50[16]) = *(void *)((char *)a2 + v50[16]);
      sub_1B5E00AB8(255, qword_1EB6433E8);
      uint64_t v15 = type metadata accessor for BlueprintBookmark();
      uint64_t v58 = swift_getTupleTypeMetadata3();
      uint64_t v59 = *(int *)(v58 + 48);
      uint64_t v60 = (char *)a1 + v59;
      long long v61 = (char *)a2 + v59;
      long long v62 = *((_OWORD *)v61 + 1);
      *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
      *((_OWORD *)v60 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v62;
      *((void *)v60 + 4) = *((void *)v61 + 4);
      uint64_t v63 = *(int *)(v58 + 64);
      uint64_t v17 = (char *)a1 + v63;
      uint64_t v18 = (char *)a2 + v63;
      int v64 = swift_getEnumCaseMultiPayload();
      if (v64 == 1)
      {
LABEL_48:
        uint64_t v180 = sub_1B61AFCB0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 32))(v17, v18, v180);
        sub_1B5EBF460();
        *(_OWORD *)&v17[*(int *)(v181 + 48)] = *(_OWORD *)&v18[*(int *)(v181 + 48)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_66;
      }
      if (v64)
      {
LABEL_49:
        memcpy(v17, v18, *(void *)(*(void *)(v15 - 8) + 64));
        goto LABEL_66;
      }
      uint64_t v20 = sub_1B61AFCB0();
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v20))
      {
LABEL_28:
        sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
        memcpy(v17, v18, *(void *)(*(void *)(v149 - 8) + 64));
      }
      else
      {
LABEL_58:
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v20);
      }
      goto LABEL_65;
    case 6u:
      long long v65 = a2[1];
      *a1 = *a2;
      a1[1] = v65;
      a1[2] = a2[2];
      uint64_t v66 = (int *)type metadata accessor for Blueprint();
      uint64_t v67 = v66[14];
      uint64_t v68 = (char *)a1 + v67;
      uint64_t v69 = (char *)a2 + v67;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v70 = sub_1B61B0670();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
      uint64_t v71 = v66[15];
      uint64_t v199 = (char *)a1 + v71;
      uint64_t v72 = (char *)a2 + v71;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v73 = sub_1B61B0A30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v199, v72, v73);
      *(void *)((char *)a1 + v66[16]) = *(void *)((char *)a2 + v66[16]);
      sub_1B5E00AB8(255, qword_1EB6433E8);
      type metadata accessor for BlueprintViewActionResponse();
      uint64_t v74 = swift_getTupleTypeMetadata3();
      uint64_t v75 = *(int *)(v74 + 48);
      uint64_t v76 = (char *)a1 + v75;
      uint64_t v77 = (char *)a2 + v75;
      long long v78 = *((_OWORD *)v77 + 1);
      *(_OWORD *)uint64_t v76 = *(_OWORD *)v77;
      *((_OWORD *)v76 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v78;
      *((void *)v76 + 4) = *((void *)v77 + 4);
      *(void *)((char *)a1 + *(int *)(v74 + 64)) = *(void *)((char *)a2 + *(int *)(v74 + 64));
      goto LABEL_66;
    case 7u:
      long long v79 = a2[1];
      *a1 = *a2;
      a1[1] = v79;
      a1[2] = a2[2];
      uint64_t v80 = (int *)type metadata accessor for Blueprint();
      uint64_t v81 = v80[14];
      uint64_t v82 = (char *)a1 + v81;
      uint64_t v83 = (char *)a2 + v81;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v84 = sub_1B61B0670();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v82, v83, v84);
      uint64_t v85 = v80[15];
      uint64_t v200 = (char *)a1 + v85;
      uint64_t v86 = (char *)a2 + v85;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v87 = sub_1B61B0A30();
      uint64_t v88 = (*(uint64_t (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v200, v86, v87);
      *(void *)((char *)a1 + v80[16]) = *(void *)((char *)a2 + v80[16]);
      MEMORY[0x1F4188790](v88);
      sub_1B5E00AB8(255, qword_1EB6433E8);
      type metadata accessor for BlueprintViewActionResponse();
      uint64_t v89 = (int *)swift_getTupleTypeMetadata();
      uint64_t v90 = v89[12];
      uint64_t v91 = (char *)a1 + v90;
      uint64_t v92 = (char *)a2 + v90;
      long long v93 = *((_OWORD *)v92 + 1);
      *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
      *((_OWORD *)v91 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v93;
      *((void *)v91 + 4) = *((void *)v92 + 4);
      *(void *)((char *)a1 + v89[16]) = *(void *)((char *)a2 + v89[16]);
      uint64_t v94 = v89[20];
      uint64_t v95 = (_OWORD *)((char *)a1 + v94);
      long long v96 = (_OWORD *)((char *)a2 + v94);
      long long v97 = v96[1];
      *uint64_t v95 = *v96;
      v95[1] = v97;
      v95[2] = v96[2];
      goto LABEL_66;
    case 8u:
    case 0xCu:
      long long v120 = a2[1];
      *a1 = *a2;
      a1[1] = v120;
      a1[2] = a2[2];
      uint64_t v121 = (int *)type metadata accessor for Blueprint();
      uint64_t v122 = v121[14];
      uint64_t v123 = (char *)a1 + v122;
      long long v124 = (char *)a2 + v122;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v125 = sub_1B61B0670();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 32))(v123, v124, v125);
      uint64_t v126 = v121[15];
      uint64_t v202 = (char *)a1 + v126;
      uint64_t v127 = (char *)a2 + v126;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v128 = sub_1B61B0A30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32))(v202, v127, v128);
      *(void *)((char *)a1 + v121[16]) = *(void *)((char *)a2 + v121[16]);
      sub_1B5E00AB8(255, qword_1EB6433E8);
      uint64_t v129 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v130 = (char *)a1 + v129;
      uint64_t v131 = (char *)a2 + v129;
      long long v132 = *((_OWORD *)v131 + 1);
      *(_OWORD *)uint64_t v130 = *(_OWORD *)v131;
      *((_OWORD *)v130 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v132;
      *((void *)v130 + 4) = *((void *)v131 + 4);
      goto LABEL_66;
    case 9u:
      uint64_t v172 = type metadata accessor for BlueprintBookmark();
      int v173 = swift_getEnumCaseMultiPayload();
      if (v173 == 1)
      {
        uint64_t v184 = sub_1B61AFCB0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v184 - 8) + 32))(a1, a2, v184);
        sub_1B5EBF460();
        *(_OWORD *)((char *)a1 + *(int *)(v185 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v185 + 48));
        goto LABEL_65;
      }
      if (v173)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v172 - 8) + 64));
        goto LABEL_66;
      }
      uint64_t v174 = sub_1B61AFCB0();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v174))
      {
        sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
        memcpy(a1, a2, *(void *)(*(void *)(v175 - 8) + 64));
      }
      else
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v174 - 8) + 32))(a1, a2, v174);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v174);
      }
      goto LABEL_65;
    case 0xBu:
      long long v98 = a2[1];
      *a1 = *a2;
      a1[1] = v98;
      a1[2] = a2[2];
      uint64_t v99 = (int *)type metadata accessor for Blueprint();
      uint64_t v100 = v99[14];
      uint64_t v101 = (char *)a1 + v100;
      uint64_t v102 = (char *)a2 + v100;
      type metadata accessor for BlueprintSection();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v103 = sub_1B61B0670();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 32))(v101, v102, v103);
      uint64_t v104 = v99[15];
      uint64_t v201 = (char *)a1 + v104;
      uint64_t v105 = (char *)a2 + v104;
      type metadata accessor for BlueprintItem();
      swift_getWitnessTable();
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v106 = sub_1B61B0A30();
      uint64_t v107 = (*(uint64_t (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 32))(v201, v105, v106);
      *(void *)((char *)a1 + v99[16]) = *(void *)((char *)a2 + v99[16]);
      MEMORY[0x1F4188790](v107);
      sub_1B5E00AB8(255, qword_1EB6433E8);
      sub_1B5FD6188(255, &qword_1E9DAA910, (void (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse);
      type metadata accessor for BlueprintBookmark();
      uint64_t v108 = (int *)swift_getTupleTypeMetadata();
      uint64_t v109 = v108[12];
      uint64_t v110 = (char *)a1 + v109;
      uint64_t v111 = (char *)a2 + v109;
      long long v112 = *((_OWORD *)v111 + 1);
      *(_OWORD *)uint64_t v110 = *(_OWORD *)v111;
      *((_OWORD *)v110 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v112;
      *((void *)v110 + 4) = *((void *)v111 + 4);
      *(void *)((char *)a1 + v108[16]) = *(void *)((char *)a2 + v108[16]);
      *((unsigned char *)a1 + v108[20]) = *((unsigned char *)a2 + v108[20]);
      uint64_t v113 = v108[24];
      uint64_t v114 = (char *)a1 + v113;
      uint64_t v115 = (char *)a2 + v113;
      uint64_t v116 = type metadata accessor for BlueprintBookmark();
      int v117 = swift_getEnumCaseMultiPayload();
      if (v117 == 1)
      {
        uint64_t v178 = sub_1B61AFCB0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 32))(v114, v115, v178);
        sub_1B5EBF460();
        *(_OWORD *)&v114[*(int *)(v179 + 48)] = *(_OWORD *)&v115[*(int *)(v179 + 48)];
        swift_storeEnumTagMultiPayload();
      }
      else if (v117)
      {
        memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
      }
      else
      {
        uint64_t v118 = sub_1B61AFCB0();
        if (__swift_getEnumTagSinglePayload((uint64_t)v115, 1, v118))
        {
          sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
          memcpy(v114, v115, *(void *)(*(void *)(v119 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 32))(v114, v115, v118);
          __swift_storeEnumTagSinglePayload((uint64_t)v114, 0, 1, v118);
        }
LABEL_65:
        swift_storeEnumTagMultiPayload();
      }
LABEL_66:
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
}

_OWORD *sub_1B5FE072C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(_OWORD *, uint64_t))(v5 + 8))(a1, a3);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        long long v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        a1[2] = a2[2];
        uint64_t v7 = (int *)type metadata accessor for Blueprint();
        uint64_t v8 = v7[14];
        uint64_t v185 = (char *)a1 + v8;
        uint64_t v9 = (char *)a2 + v8;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v10 = sub_1B61B0670();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v185, v9, v10);
        uint64_t v11 = v7[15];
        uint64_t v175 = (char *)a2 + v11;
        uint64_t v186 = (char *)a1 + v11;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v12 = sub_1B61B0A30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v186, v175, v12);
        *(void *)((char *)a1 + v7[16]) = *(void *)((char *)a2 + v7[16]);
        uint64_t v13 = type metadata accessor for BlueprintBookmark();
        uint64_t v14 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1) {
          goto LABEL_49;
        }
        if (EnumCaseMultiPayload) {
          goto LABEL_50;
        }
        uint64_t v18 = sub_1B61AFCB0();
        if (!__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18)) {
          goto LABEL_59;
        }
        goto LABEL_29;
      case 1u:
        long long v19 = a2[1];
        *a1 = *a2;
        a1[1] = v19;
        a1[2] = a2[2];
        uint64_t v20 = (int *)type metadata accessor for Blueprint();
        uint64_t v21 = v20[14];
        uint64_t v187 = (char *)a1 + v21;
        uint64_t v22 = (char *)a2 + v21;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v23 = sub_1B61B0670();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v187, v22, v23);
        uint64_t v24 = v20[15];
        uint64_t v176 = (char *)a2 + v24;
        uint64_t v188 = (char *)a1 + v24;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v25 = sub_1B61B0A30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v188, v176, v25);
        *(void *)((char *)a1 + v20[16]) = *(void *)((char *)a2 + v20[16]);
        uint64_t v26 = type metadata accessor for BlueprintBookmark();
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        uint64_t v28 = *(int *)(TupleTypeMetadata3 + 48);
        uint64_t v29 = (char *)a1 + v28;
        uint64_t v30 = (char *)a2 + v28;
        int v31 = swift_getEnumCaseMultiPayload();
        if (v31 == 1)
        {
          uint64_t v156 = sub_1B61AFCB0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 32))(v29, v30, v156);
          sub_1B5EBF460();
          *(_OWORD *)&v29[*(int *)(v157 + 48)] = *(_OWORD *)&v30[*(int *)(v157 + 48)];
        }
        else
        {
          if (v31)
          {
            memcpy(v29, v30, *(void *)(*(void *)(v26 - 8) + 64));
            goto LABEL_58;
          }
          uint64_t v32 = sub_1B61AFCB0();
          if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v32))
          {
            sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
            memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v29, v30, v32);
            __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v32);
          }
        }
        swift_storeEnumTagMultiPayload();
LABEL_58:
        uint64_t v166 = *(int *)(TupleTypeMetadata3 + 64);
        uint64_t v167 = (_OWORD *)((char *)a1 + v166);
        uint64_t v168 = (_OWORD *)((char *)a2 + v166);
        long long v169 = v168[1];
        *uint64_t v167 = *v168;
        v167[1] = v169;
        v167[2] = v168[2];
        goto LABEL_67;
      case 2u:
        long long v34 = a2[1];
        *a1 = *a2;
        a1[1] = v34;
        a1[2] = a2[2];
        int v35 = (int *)type metadata accessor for Blueprint();
        uint64_t v36 = v35[14];
        long long v189 = (char *)a1 + v36;
        uint64_t v37 = (char *)a2 + v36;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v38 = sub_1B61B0670();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v189, v37, v38);
        uint64_t v39 = v35[15];
        uint64_t v177 = (char *)a2 + v39;
        uint64_t v190 = (char *)a1 + v39;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v40 = sub_1B61B0A30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v190, v177, v40);
        *(void *)((char *)a1 + v35[16]) = *(void *)((char *)a2 + v35[16]);
        uint64_t v13 = type metadata accessor for BlueprintBookmark();
        uint64_t v41 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v15 = (char *)a1 + v41;
        uint64_t v16 = (char *)a2 + v41;
        int v42 = swift_getEnumCaseMultiPayload();
        if (v42 == 1) {
          goto LABEL_49;
        }
        if (v42) {
          goto LABEL_50;
        }
        uint64_t v18 = sub_1B61AFCB0();
        if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18)) {
          goto LABEL_29;
        }
        goto LABEL_59;
      case 3u:
        long long v117 = a2[1];
        *a1 = *a2;
        a1[1] = v117;
        a1[2] = a2[2];
        uint64_t v118 = (int *)type metadata accessor for Blueprint();
        uint64_t v119 = v118[14];
        uint64_t v201 = (char *)a1 + v119;
        long long v120 = (char *)a2 + v119;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v121 = sub_1B61B0670();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 32))(v201, v120, v121);
        uint64_t v122 = v118[15];
        uint64_t v183 = (char *)a2 + v122;
        uint64_t v202 = (char *)a1 + v122;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v123 = sub_1B61B0A30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 32))(v202, v183, v123);
        *(void *)((char *)a1 + v118[16]) = *(void *)((char *)a2 + v118[16]);
        sub_1B5E00AB8(255, qword_1EB6433E8);
        uint64_t v13 = type metadata accessor for BlueprintBookmark();
        uint64_t v124 = swift_getTupleTypeMetadata3();
        uint64_t v125 = *(int *)(v124 + 48);
        uint64_t v126 = (char *)a1 + v125;
        uint64_t v127 = (char *)a2 + v125;
        long long v128 = *((_OWORD *)v127 + 1);
        *(_OWORD *)uint64_t v126 = *(_OWORD *)v127;
        *((_OWORD *)v126 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v128;
        *((void *)v126 + 4) = *((void *)v127 + 4);
        uint64_t v129 = *(int *)(v124 + 64);
        uint64_t v15 = (char *)a1 + v129;
        uint64_t v16 = (char *)a2 + v129;
        int v130 = swift_getEnumCaseMultiPayload();
        if (v130 == 1) {
          goto LABEL_49;
        }
        if (v130) {
          goto LABEL_50;
        }
        uint64_t v18 = sub_1B61AFCB0();
        if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18)) {
          goto LABEL_29;
        }
        goto LABEL_59;
      case 4u:
        long long v132 = a2[1];
        *a1 = *a2;
        a1[1] = v132;
        a1[2] = a2[2];
        long long v133 = (int *)type metadata accessor for Blueprint();
        uint64_t v134 = v133[14];
        uint64_t v203 = (char *)a1 + v134;
        uint64_t v135 = (char *)a2 + v134;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v136 = sub_1B61B0670();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 32))(v203, v135, v136);
        uint64_t v137 = v133[15];
        uint64_t v184 = (char *)a2 + v137;
        uint64_t v204 = (char *)a1 + v137;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v138 = sub_1B61B0A30();
        uint64_t v139 = (*(uint64_t (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 32))(v204, v184, v138);
        *(void *)((char *)a1 + v133[16]) = *(void *)((char *)a2 + v133[16]);
        MEMORY[0x1F4188790](v139);
        sub_1B5E00AB8(255, qword_1EB6433E8);
        type metadata accessor for BlueprintBookmark();
        uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
        uint64_t v141 = TupleTypeMetadata[12];
        uint64_t v142 = (char *)a1 + v141;
        uint64_t v143 = (char *)a2 + v141;
        long long v144 = *((_OWORD *)v143 + 1);
        *(_OWORD *)uint64_t v142 = *(_OWORD *)v143;
        *((_OWORD *)v142 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v144;
        *((void *)v142 + 4) = *((void *)v143 + 4);
        uint64_t v145 = TupleTypeMetadata[16];
        long long v146 = (char *)a1 + v145;
        uint64_t v147 = (char *)a2 + v145;
        uint64_t v148 = type metadata accessor for BlueprintBookmark();
        int v149 = swift_getEnumCaseMultiPayload();
        if (v149 == 1)
        {
          uint64_t v162 = sub_1B61AFCB0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 32))(v146, v147, v162);
          sub_1B5EBF460();
          *(_OWORD *)&v146[*(int *)(v163 + 48)] = *(_OWORD *)&v147[*(int *)(v163 + 48)];
        }
        else
        {
          if (v149)
          {
            memcpy(v146, v147, *(void *)(*(void *)(v148 - 8) + 64));
            goto LABEL_64;
          }
          uint64_t v150 = sub_1B61AFCB0();
          if (__swift_getEnumTagSinglePayload((uint64_t)v147, 1, v150))
          {
            sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
            memcpy(v146, v147, *(void *)(*(void *)(v151 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 32))(v146, v147, v150);
            __swift_storeEnumTagSinglePayload((uint64_t)v146, 0, 1, v150);
          }
        }
        swift_storeEnumTagMultiPayload();
LABEL_64:
        uint64_t v170 = TupleTypeMetadata[20];
        uint64_t v171 = (_OWORD *)((char *)a1 + v170);
        uint64_t v172 = (_OWORD *)((char *)a2 + v170);
        long long v173 = v172[1];
        *uint64_t v171 = *v172;
        v171[1] = v173;
        v171[2] = v172[2];
        goto LABEL_67;
      case 5u:
        long long v43 = a2[1];
        *a1 = *a2;
        a1[1] = v43;
        a1[2] = a2[2];
        uint64_t v44 = (int *)type metadata accessor for Blueprint();
        uint64_t v45 = v44[14];
        uint64_t v191 = (char *)a1 + v45;
        uint64_t v46 = (char *)a2 + v45;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v47 = sub_1B61B0670();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v191, v46, v47);
        uint64_t v48 = v44[15];
        uint64_t v178 = (char *)a2 + v48;
        uint64_t v192 = (char *)a1 + v48;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v49 = sub_1B61B0A30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v192, v178, v49);
        *(void *)((char *)a1 + v44[16]) = *(void *)((char *)a2 + v44[16]);
        sub_1B5E00AB8(255, qword_1EB6433E8);
        uint64_t v13 = type metadata accessor for BlueprintBookmark();
        uint64_t v50 = swift_getTupleTypeMetadata3();
        uint64_t v51 = *(int *)(v50 + 48);
        uint64_t v52 = (char *)a1 + v51;
        uint64_t v53 = (char *)a2 + v51;
        long long v54 = *((_OWORD *)v53 + 1);
        *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
        *((_OWORD *)v52 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v54;
        *((void *)v52 + 4) = *((void *)v53 + 4);
        uint64_t v55 = *(int *)(v50 + 64);
        uint64_t v15 = (char *)a1 + v55;
        uint64_t v16 = (char *)a2 + v55;
        int v56 = swift_getEnumCaseMultiPayload();
        if (v56 == 1)
        {
LABEL_49:
          uint64_t v160 = sub_1B61AFCB0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 32))(v15, v16, v160);
          sub_1B5EBF460();
          *(_OWORD *)&v15[*(int *)(v161 + 48)] = *(_OWORD *)&v16[*(int *)(v161 + 48)];
          goto LABEL_66;
        }
        if (v56)
        {
LABEL_50:
          memcpy(v15, v16, *(void *)(*(void *)(v13 - 8) + 64));
          goto LABEL_67;
        }
        uint64_t v18 = sub_1B61AFCB0();
        if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18))
        {
LABEL_29:
          sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
          memcpy(v15, v16, *(void *)(*(void *)(v131 - 8) + 64));
        }
        else
        {
LABEL_59:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
          __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v18);
        }
        goto LABEL_66;
      case 6u:
        long long v57 = a2[1];
        *a1 = *a2;
        a1[1] = v57;
        a1[2] = a2[2];
        uint64_t v58 = (int *)type metadata accessor for Blueprint();
        uint64_t v59 = v58[14];
        long long v193 = (char *)a1 + v59;
        uint64_t v60 = (char *)a2 + v59;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v61 = sub_1B61B0670();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v193, v60, v61);
        uint64_t v62 = v58[15];
        uint64_t v179 = (char *)a2 + v62;
        uint64_t v194 = (char *)a1 + v62;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v63 = sub_1B61B0A30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v194, v179, v63);
        *(void *)((char *)a1 + v58[16]) = *(void *)((char *)a2 + v58[16]);
        sub_1B5E00AB8(255, qword_1EB6433E8);
        type metadata accessor for BlueprintViewActionResponse();
        uint64_t v64 = swift_getTupleTypeMetadata3();
        uint64_t v65 = *(int *)(v64 + 48);
        uint64_t v66 = (char *)a1 + v65;
        uint64_t v67 = (char *)a2 + v65;
        long long v68 = *((_OWORD *)v67 + 1);
        *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
        *((_OWORD *)v66 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v68;
        *((void *)v66 + 4) = *((void *)v67 + 4);
        *(void *)((char *)a1 + *(int *)(v64 + 64)) = *(void *)((char *)a2 + *(int *)(v64 + 64));
        goto LABEL_67;
      case 7u:
        long long v69 = a2[1];
        *a1 = *a2;
        a1[1] = v69;
        a1[2] = a2[2];
        uint64_t v70 = (int *)type metadata accessor for Blueprint();
        uint64_t v71 = v70[14];
        uint64_t v195 = (char *)a1 + v71;
        uint64_t v72 = (char *)a2 + v71;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v73 = sub_1B61B0670();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v195, v72, v73);
        uint64_t v74 = v70[15];
        uint64_t v180 = (char *)a2 + v74;
        long long v196 = (char *)a1 + v74;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v75 = sub_1B61B0A30();
        uint64_t v76 = (*(uint64_t (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v196, v180, v75);
        *(void *)((char *)a1 + v70[16]) = *(void *)((char *)a2 + v70[16]);
        MEMORY[0x1F4188790](v76);
        sub_1B5E00AB8(255, qword_1EB6433E8);
        type metadata accessor for BlueprintViewActionResponse();
        uint64_t v77 = (int *)swift_getTupleTypeMetadata();
        uint64_t v78 = v77[12];
        long long v79 = (char *)a1 + v78;
        uint64_t v80 = (char *)a2 + v78;
        long long v81 = *((_OWORD *)v80 + 1);
        *(_OWORD *)long long v79 = *(_OWORD *)v80;
        *((_OWORD *)v79 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v81;
        *((void *)v79 + 4) = *((void *)v80 + 4);
        *(void *)((char *)a1 + v77[16]) = *(void *)((char *)a2 + v77[16]);
        uint64_t v82 = v77[20];
        uint64_t v83 = (_OWORD *)((char *)a1 + v82);
        uint64_t v84 = (_OWORD *)((char *)a2 + v82);
        long long v85 = v84[1];
        *uint64_t v83 = *v84;
        v83[1] = v85;
        v83[2] = v84[2];
        goto LABEL_67;
      case 8u:
      case 0xCu:
        long long v106 = a2[1];
        *a1 = *a2;
        a1[1] = v106;
        a1[2] = a2[2];
        uint64_t v107 = (int *)type metadata accessor for Blueprint();
        uint64_t v108 = v107[14];
        uint64_t v199 = (char *)a1 + v108;
        uint64_t v109 = (char *)a2 + v108;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v110 = sub_1B61B0670();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 32))(v199, v109, v110);
        uint64_t v111 = v107[15];
        uint64_t v182 = (char *)a2 + v111;
        uint64_t v200 = (char *)a1 + v111;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v112 = sub_1B61B0A30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 32))(v200, v182, v112);
        *(void *)((char *)a1 + v107[16]) = *(void *)((char *)a2 + v107[16]);
        sub_1B5E00AB8(255, qword_1EB6433E8);
        uint64_t v113 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v114 = (char *)a1 + v113;
        uint64_t v115 = (char *)a2 + v113;
        long long v116 = *((_OWORD *)v115 + 1);
        *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
        *((_OWORD *)v114 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v116;
        *((void *)v114 + 4) = *((void *)v115 + 4);
        goto LABEL_67;
      case 9u:
        uint64_t v152 = type metadata accessor for BlueprintBookmark();
        int v153 = swift_getEnumCaseMultiPayload();
        if (v153 == 1)
        {
          uint64_t v164 = sub_1B61AFCB0();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v164 - 8) + 32))(a1, a2, v164);
          sub_1B5EBF460();
          *(_OWORD *)((char *)a1 + *(int *)(v165 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v165 + 48));
          goto LABEL_66;
        }
        if (v153)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v152 - 8) + 64));
          goto LABEL_67;
        }
        uint64_t v154 = sub_1B61AFCB0();
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v154))
        {
          sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
          memcpy(a1, a2, *(void *)(*(void *)(v155 - 8) + 64));
        }
        else
        {
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v154 - 8) + 32))(a1, a2, v154);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v154);
        }
        goto LABEL_66;
      case 0xBu:
        long long v86 = a2[1];
        *a1 = *a2;
        a1[1] = v86;
        a1[2] = a2[2];
        uint64_t v87 = (int *)type metadata accessor for Blueprint();
        uint64_t v88 = v87[14];
        uint64_t v197 = (char *)a1 + v88;
        uint64_t v89 = (char *)a2 + v88;
        type metadata accessor for BlueprintSection();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v90 = sub_1B61B0670();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32))(v197, v89, v90);
        uint64_t v91 = v87[15];
        uint64_t v181 = (char *)a2 + v91;
        uint64_t v198 = (char *)a1 + v91;
        type metadata accessor for BlueprintItem();
        swift_getWitnessTable();
        swift_getWitnessTable();
        swift_getWitnessTable();
        uint64_t v92 = sub_1B61B0A30();
        uint64_t v93 = (*(uint64_t (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 32))(v198, v181, v92);
        *(void *)((char *)a1 + v87[16]) = *(void *)((char *)a2 + v87[16]);
        MEMORY[0x1F4188790](v93);
        sub_1B5E00AB8(255, qword_1EB6433E8);
        sub_1B5FD6188(255, &qword_1E9DAA910, (void (*)(uint64_t))type metadata accessor for BlueprintViewActionResponse);
        type metadata accessor for BlueprintBookmark();
        uint64_t v94 = (int *)swift_getTupleTypeMetadata();
        uint64_t v95 = v94[12];
        long long v96 = (char *)a1 + v95;
        long long v97 = (char *)a2 + v95;
        long long v98 = *((_OWORD *)v97 + 1);
        *(_OWORD *)long long v96 = *(_OWORD *)v97;
        *((_OWORD *)v96 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v98;
        *((void *)v96 + 4) = *((void *)v97 + 4);
        *(void *)((char *)a1 + v94[16]) = *(void *)((char *)a2 + v94[16]);
        *((unsigned char *)a1 + v94[20]) = *((unsigned char *)a2 + v94[20]);
        uint64_t v99 = v94[24];
        uint64_t v100 = (char *)a1 + v99;
        uint64_t v101 = (char *)a2 + v99;
        uint64_t v102 = type metadata accessor for BlueprintBookmark();
        int v103 = swift_getEnumCaseMultiPayload();
        if (v103 == 1)
        {
          uint64_t v158 = sub_1B61AFCB0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 32))(v100, v101, v158);
          sub_1B5EBF460();
          *(_OWORD *)&v100[*(int *)(v159 + 48)] = *(_OWORD *)&v101[*(int *)(v159 + 48)];
        }
        else
        {
          if (v103)
          {
            memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
            goto LABEL_67;
          }
          uint64_t v104 = sub_1B61AFCB0();
          if (__swift_getEnumTagSinglePayload((uint64_t)v101, 1, v104))
          {
            sub_1B5FD6188(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
            memcpy(v100, v101, *(void *)(*(void *)(v105 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32))(v100, v101, v104);
            __swift_storeEnumTagSinglePayload((uint64_t)v100, 0, 1, v104);
          }
        }
LABEL_66:
        swift_storeEnumTagMultiPayload();
LABEL_67:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v5 + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_1B5FE2D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  OUTLINED_FUNCTION_1_83();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = OUTLINED_FUNCTION_2_77();
  sub_1B5FE2DF8(v13, v14, v15, v16, v17, v18, v19, a8, v21, v22, a11);
  return v12;
}

uint64_t sub_1B5FE2D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_1_83();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = OUTLINED_FUNCTION_2_77();
  sub_1B5FE36C8(v13, v14, v15, v16, v17, v18, v19, a8, v21, v22, a11, a12);
  return v12;
}

uint64_t sub_1B5FE2DF8(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_1B61AFAB0();
  OUTLINED_FUNCTION_0_62();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_17_0();
  char v17 = *a4;
  char v31 = *a4;
  uint64_t v18 = *(void **)a5;
  uint64_t v34 = *a8;
  char v33 = *((unsigned char *)a8 + 8);
  LOBYTE(a5) = *(unsigned char *)(a5 + 8);
  sub_1B5E76EB0();
  *(void *)(v11 + 16) = objc_msgSend(objc_allocWithZone(v19), sel_init);
  sub_1B61B1F70();
  sub_1B5E5496C(v18, a5);
  sub_1B61AFAA0();
  uint64_t v20 = sub_1B61AFA80();
  uint64_t v22 = v21;
  uint64_t v23 = OUTLINED_FUNCTION_6_49();
  v24(v23);
  v38[0] = v20;
  v38[1] = v22;
  v38[2] = a2;
  v38[3] = a3;
  v38[4] = v18;
  char v39 = a5;
  char v40 = v17;
  OUTLINED_FUNCTION_4_63(MEMORY[0x1E4FBC860]);
  uint64_t v25 = OUTLINED_FUNCTION_3_68();
  v26(v25);
  uint64_t v27 = swift_allocObject();
  swift_weakInit();
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = a10;
  *(void *)(v28 + 24) = a11;
  *(void *)(v28 + 32) = v27;
  *(void *)(v28 + 4sub_1B5E6F544(4, 0, 0) = a2;
  *(void *)(v28 + 48) = a3;
  *(void *)(v28 + 56) = v18;
  *(unsigned char *)(v28 + 64) = a5;
  *(unsigned char *)(v28 + 65) = v31;
  *(void *)(v28 + 72) = a1;
  *(void *)(v28 + 8sub_1B5E6F544(4, 0, 0) = a6;
  *(void *)(v28 + 88) = a7;
  *(void *)(v28 + 96) = v34;
  *(unsigned char *)(v28 + 104) = v33;
  sub_1B61B2650();
  OUTLINED_FUNCTION_0_9();
  swift_retain();
  swift_retain();
  sub_1B61B0440();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_9_36();
  sub_1B61B00C0();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_8_35();
  (*(void (**)(uint64_t))(v29 + 8))(a9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return v11;
}

void sub_1B5FE307C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, int a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12, uint64_t a13, uint64_t a14)
{
  uint64_t v52 = sub_1B61AFAB0();
  uint64_t v51 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v22 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v25 = Strong;
    uint64_t v46 = a4;
    uint64_t v48 = a5;
    int v44 = a12;
    uint64_t v43 = a11;
    uint64_t v50 = a3;
    int v47 = a6;
    int v49 = a7 & 1;
    v53[0] = v23;
    sub_1B5E5496C(a5, a6);
    uint64_t v26 = sub_1B61B2650();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v28 = MEMORY[0x1BA9AF500](v58, v26, WitnessTable);
    uint64_t v45 = &v42;
    v53[0] = v58[0];
    uint64_t v29 = MEMORY[0x1F4188790](v28);
    *(&v42 - 8) = a13;
    *(&v42 - 7) = a14;
    *(&v42 - 6) = a8;
    *(&v42 - 5) = a9;
    uint64_t v30 = v43;
    *(&v42 - 4) = a10;
    *(&v42 - 3) = v30;
    *((unsigned char *)&v42 - 16) = v44 & 1;
    MEMORY[0x1F4188790](v29);
    *(&v42 - 4) = a13;
    *(&v42 - 3) = a14;
    *(&v42 - 2) = (uint64_t)sub_1B5FE438C;
    *(&v42 - MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v31;
    uint64_t v32 = sub_1B61B3520();
    unint64_t v33 = sub_1B5E54064();
    uint64_t v34 = swift_getWitnessTable();
    uint64_t v36 = sub_1B5E53B04((void (*)(char *, void (*)(char *, uint64_t, uint64_t)))sub_1B5FE43C0, (uint64_t)(&v42 - 6), v32, v33, MEMORY[0x1E4FBC248], v34, MEMORY[0x1E4FBC278], v35);
    swift_bridgeObjectRelease();
    uint64_t v37 = v46;
    sub_1B61B1F70();
    sub_1B61AFAA0();
    uint64_t v38 = sub_1B61AFA80();
    uint64_t v40 = v39;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v22, v52);
    v53[0] = v38;
    v53[1] = v40;
    unsigned char v53[2] = v50;
    v53[3] = v37;
    v53[4] = v48;
    char v54 = v47;
    char v55 = v49;
    uint64_t v56 = v36;
    char v57 = 1;
    sub_1B5FE40A8((uint64_t)v53, (uint64_t)v58);
    swift_beginAccess();
    sub_1B5FE41F8((uint64_t)v58, v25 + 24);
    swift_endAccess();
    id v41 = *(id *)(v25 + 16);
    _s5TeaUI6ActionC7triggeryyF_0();
    swift_release();
  }
}

void sub_1B5FE3454(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X5>, char a6@<W6>, uint64_t *a7@<X8>)
{
  uint64_t v13 = *(void *)(*(void *)a3 + 88);
  uint64_t v14 = sub_1B61B2F80();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v20 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))((char *)&v20 - v15, a2, v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v13);
  a4(a2);
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  if (a6) {
    goto LABEL_6;
  }
  if (!__OFADD__(a1, 1))
  {
    if (a1 + 1 > 9)
    {
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      uint64_t v19 = 0;
    }
    else
    {
      uint64_t v21 = a1 + 1;
      uint64_t v17 = sub_1B61B36E0();
      uint64_t v19 = a5;
    }
LABEL_6:
    uint64_t v21 = v17;
    uint64_t v22 = v18;
    uint64_t v23 = v19;
    uint64_t v20 = 0;
    a7[3] = (uint64_t)&type metadata for MenuItem;
    a7[4] = (uint64_t)&protocol witness table for MenuItem;
    *a7 = swift_allocObject();
    swift_retain();
    MenuItem.init<A>(command:context:title:key:alternate:)();
    return;
  }
  __break(1u);
}

uint64_t sub_1B5FE3620(char *a1, uint64_t (*a2)(uint64_t, char *))
{
  uint64_t v4 = *(void *)a1;
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t sub_1B5FE36C8(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_1B61AFAB0();
  OUTLINED_FUNCTION_0_62();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_17_0();
  char v36 = *a4;
  char v18 = *a5;
  char v32 = *a5;
  uint64_t v19 = *(void **)a6;
  uint64_t v35 = *a9;
  char v34 = *((unsigned char *)a9 + 8);
  LOBYTE(a5) = *(unsigned char *)(a6 + 8);
  sub_1B5E76EB0();
  *(void *)(v12 + 16) = objc_msgSend(objc_allocWithZone(v20), sel_init);
  sub_1B61B1F70();
  sub_1B5E5496C(v19, a5);
  sub_1B61AFAA0();
  uint64_t v21 = sub_1B61AFA80();
  uint64_t v23 = v22;
  uint64_t v24 = OUTLINED_FUNCTION_6_49();
  v25(v24);
  v40[0] = v21;
  v40[1] = v23;
  v40[2] = a2;
  v40[3] = a3;
  v40[4] = v19;
  char v41 = (char)a5;
  char v42 = v18;
  OUTLINED_FUNCTION_4_63(MEMORY[0x1E4FBC860]);
  uint64_t v26 = OUTLINED_FUNCTION_3_68();
  v27(v26);
  uint64_t v28 = swift_allocObject();
  swift_weakInit();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = a11;
  *(void *)(v29 + 24) = a12;
  *(void *)(v29 + 32) = v28;
  *(void *)(v29 + 4sub_1B5E6F544(4, 0, 0) = a2;
  *(void *)(v29 + 48) = a3;
  *(void *)(v29 + 56) = v19;
  *(unsigned char *)(v29 + 64) = (_BYTE)a5;
  *(unsigned char *)(v29 + 65) = v32;
  *(void *)(v29 + 72) = a1;
  *(void *)(v29 + 8sub_1B5E6F544(4, 0, 0) = a7;
  *(void *)(v29 + 88) = a8;
  *(unsigned char *)(v29 + 96) = v36;
  *(void *)(v29 + 104) = v35;
  *(unsigned char *)(v29 + 112) = v34;
  sub_1B61B2650();
  OUTLINED_FUNCTION_0_9();
  swift_retain();
  swift_retain();
  sub_1B61B0440();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_9_36();
  sub_1B61B00C0();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_8_35();
  (*(void (**)(uint64_t))(v30 + 8))(a10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  return v12;
}

void sub_1B5FE3960(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, int a6, char a7, uint64_t *a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, unsigned __int8 a13, uint64_t a14, uint64_t a15)
{
  uint64_t v57 = a3;
  uint64_t v21 = *a8;
  uint64_t v56 = sub_1B61AFAB0();
  uint64_t v55 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v26 = Strong;
    uint64_t v53 = a5;
    uint64_t v51 = a4;
    int v49 = a13;
    uint64_t v48 = a12;
    uint64_t v47 = a10;
    uint64_t v46 = a9;
    int v52 = a6;
    int v54 = a7 & 1;
    v58[0] = v24;
    sub_1B5E5496C(a5, a6);
    uint64_t v27 = sub_1B61B2650();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v29 = MEMORY[0x1BA9AF500](v63, v27, WitnessTable);
    uint64_t v50 = &v45;
    v58[0] = v63[0];
    uint64_t v30 = MEMORY[0x1F4188790](v29);
    *(&v45 - 8) = a14;
    *(&v45 - 7) = a15;
    uint64_t v31 = v46;
    *(&v45 - 6) = (uint64_t)a8;
    *(&v45 - 5) = v31;
    *(&v45 - 4) = v47;
    *((unsigned char *)&v45 - 24) = a11 & 1;
    *(&v45 - 2) = v48;
    *((unsigned char *)&v45 - 8) = v49 & 1;
    MEMORY[0x1F4188790](v30);
    uint64_t v32 = *(void *)(v21 + 144);
    uint64_t v33 = *(void *)(v21 + 152);
    *(&v45 - 6) = a14;
    *(&v45 - 5) = v32;
    *(&v45 - 4) = a15;
    *(&v45 - 3) = v33;
    *(&v45 - 2) = (uint64_t)sub_1B5FE4194;
    *(&v45 - MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v34;
    uint64_t v35 = sub_1B61B3520();
    unint64_t v36 = sub_1B5E54064();
    uint64_t v37 = swift_getWitnessTable();
    uint64_t v39 = sub_1B5E53B04((void (*)(char *, void (*)(char *, uint64_t, uint64_t)))sub_1B5FE41D0, (uint64_t)(&v45 - 8), v35, v36, MEMORY[0x1E4FBC248], v37, MEMORY[0x1E4FBC278], v38);
    swift_bridgeObjectRelease();
    uint64_t v40 = v51;
    sub_1B61B1F70();
    sub_1B61AFAA0();
    uint64_t v41 = sub_1B61AFA80();
    uint64_t v43 = v42;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v23, v56);
    v58[0] = v41;
    v58[1] = v43;
    v58[2] = v57;
    v58[3] = v40;
    v58[4] = v53;
    char v59 = v52;
    char v60 = v54;
    uint64_t v61 = v39;
    char v62 = 1;
    sub_1B5FE40A8((uint64_t)v58, (uint64_t)v63);
    swift_beginAccess();
    sub_1B5FE41F8((uint64_t)v63, v26 + 24);
    swift_endAccess();
    id v44 = *(id *)(v26 + 16);
    _s5TeaUI6ActionC7triggeryyF_0();
    swift_release();
  }
}

void sub_1B5FE3D6C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t)@<X3>, char a5@<W5>, uint64_t a6@<X6>, char a7@<W7>, uint64_t *a8@<X8>)
{
  v21[0] = a6;
  char v13 = a5 & 1;
  uint64_t v14 = *(void *)(*(void *)a3 + 136);
  uint64_t v15 = sub_1B61B2F80();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)v21 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))((char *)v21 - v16, a2, v14);
  __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v14);
  a4(a2);
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  char v25 = v13;
  if (a7) {
    goto LABEL_6;
  }
  if (!__OFADD__(a1, 1))
  {
    if (a1 + 1 > 9)
    {
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
    }
    else
    {
      uint64_t v22 = a1 + 1;
      uint64_t v18 = sub_1B61B36E0();
      uint64_t v20 = v21[0];
    }
LABEL_6:
    uint64_t v22 = v18;
    uint64_t v23 = v19;
    uint64_t v24 = v20;
    v21[1] = 0;
    a8[3] = (uint64_t)&type metadata for MenuItem;
    a8[4] = (uint64_t)&protocol witness table for MenuItem;
    *a8 = swift_allocObject();
    swift_retain();
    MenuItem.init<A, B>(command:context:title:state:key:alternate:)();
    return;
  }
  __break(1u);
}

uint64_t sub_1B5FE3F44(char *a1, uint64_t (*a2)(uint64_t, char *))
{
  uint64_t v4 = *(void *)a1;
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t sub_1B5FE3FE8()
{
  sub_1B5E53404(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DynamicMenuGroupOptionProvider()
{
  return self;
}

id sub_1B5FE404C()
{
  return *(id *)(*(void *)v0 + 16);
}

uint64_t sub_1B5FE4058@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + 24;
  swift_beginAccess();
  return sub_1B5E533CC(v3, a1);
}

uint64_t sub_1B5FE40A8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B5FE4104()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B5FE413C()
{
  return objectdestroy_3Tm_1();
}

void sub_1B5FE4144()
{
  OUTLINED_FUNCTION_7_42();
  sub_1B5FE3960(v1, v2, v3, v4, v5, *(unsigned __int8 *)(v0 + 64), v6, *(uint64_t **)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(unsigned char *)(v0 + 96), *(void *)(v0 + 104), *(unsigned char *)(v0 + 112), v7, v8);
}

void sub_1B5FE4194(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1B5FE3D6C(a1, a2, *(void *)(v3 + 32), *(void (**)(uint64_t))(v3 + 40), *(unsigned char *)(v3 + 56), *(void *)(v3 + 64), *(unsigned char *)(v3 + 72), a3);
}

uint64_t sub_1B5FE41D0(char *a1)
{
  return sub_1B5FE3F44(a1, *(uint64_t (**)(uint64_t, char *))(v1 + 48));
}

uint64_t sub_1B5FE41F8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B5FE4254()
{
  uint64_t v1 = v0 + 16;
  switch(*(unsigned char *)(v0 + 73))
  {
    case 0:
      swift_release();
      goto LABEL_11;
    case 1:
    case 3:
      goto LABEL_2;
    case 2:
      int v2 = *(unsigned __int8 *)(v0 + 72);
      if (v2 == 2)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = v0 + 32;
LABEL_2:
        __swift_destroy_boxed_opaque_existential_1(v1);
      }
      else
      {
        if (v2 == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B5E54A34(*(id *)(v0 + 48), *(unsigned char *)(v0 + 56));
        }
        else
        {
          if (*(unsigned char *)(v0 + 72)) {
            goto LABEL_11;
          }

          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
LABEL_11:
      return swift_deallocObject();
    default:
      goto LABEL_11;
  }
}

uint64_t sub_1B5FE433C()
{
  return objectdestroy_3Tm_1();
}

void sub_1B5FE4344()
{
  OUTLINED_FUNCTION_7_42();
  sub_1B5FE307C(v1, v2, v3, v4, v5, *(unsigned __int8 *)(v0 + 64), v6, *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(unsigned char *)(v0 + 104), v7, v8);
}

void sub_1B5FE438C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1B5FE3454(a1, a2, *(void *)(v3 + 32), *(void (**)(uint64_t))(v3 + 40), *(void *)(v3 + 56), *(unsigned char *)(v3 + 64), a3);
}

uint64_t sub_1B5FE43C0(char *a1)
{
  return sub_1B5FE3620(a1, *(uint64_t (**)(uint64_t, char *))(v1 + 32));
}

char *SidebarButtonView.__allocating_init(target:action:accessibilityDelegate:)()
{
  OUTLINED_FUNCTION_4_3();
  id v1 = objc_allocWithZone(v0);
  swift_getObjectType();
  uint64_t v2 = OUTLINED_FUNCTION_0_83();
  return sub_1B5FE4ED0(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1B5FE4440()
{
  id v1 = objc_msgSend(v0, sel_splitViewController);
  if (!v1) {
    return 2;
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_displayMode);

  return v3 == (id)1;
}

uint64_t SidebarButtonAccessibilityDelegate.isSidebarHidden(for:)()
{
  id v1 = objc_msgSend(v0, sel_splitViewController);
  if (!v1) {
    return 2;
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_displayMode);

  return v3 == (id)1;
}

void sub_1B5FE4500()
{
  if (qword_1EB63F800 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB63E3E0;
  id v1 = objc_msgSend(self, sel_configurationWithPointSize_weight_scale_, 5, 3, 17.0);
  id v2 = objc_msgSend(v0, sel_imageByApplyingSymbolConfiguration_, v1);

  if (v2) {
    qword_1EB654AE0 = (uint64_t)v2;
  }
  else {
    __break(1u);
  }
}

void sub_1B5FE45B8()
{
  *(void *)&v0[OBJC_IVAR____TtC5TeaUI13SidebarButton_accessibilityDelegate + 8] = 0;
  swift_unknownObjectWeakInit();

  OUTLINED_FUNCTION_1_84();
  __break(1u);
}

id sub_1B5FE4678()
{
  if (qword_1EB641890 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB654AE0;
  return objc_msgSend(v0, sel_size);
}

uint64_t sub_1B5FE4754()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5TeaUI13SidebarButton_accessibilityDelegate;
  uint64_t v2 = MEMORY[0x1BA9B1EC0](v0 + OBJC_IVAR____TtC5TeaUI13SidebarButton_accessibilityDelegate);
  if (v2)
  {
    id v3 = (void *)v2;
    uint64_t v4 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    if ((*(unsigned __int8 (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(v0, ObjectType, v4) != 2)
    {
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v7 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      OUTLINED_FUNCTION_3_8();
      OUTLINED_FUNCTION_2_78();
      uint64_t v8 = sub_1B61AF7D0();

      goto LABEL_6;
    }
  }
  type metadata accessor for Localized();
  uint64_t v6 = swift_getObjCClassFromMetadata();
  id v7 = objc_msgSend(self, sel_bundleForClass_, v6);
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_2_78();
  uint64_t v8 = sub_1B61AF7D0();
LABEL_6:

  return v8;
}

uint64_t sub_1B5FE4970()
{
  return swift_bridgeObjectRelease();
}

void SidebarButton.init(frame:)()
{
}

id SidebarButton.__deallocating_deinit()
{
  return sub_1B5FE4E84(type metadata accessor for SidebarButton);
}

char *SidebarButtonView.init(target:action:accessibilityDelegate:)()
{
  OUTLINED_FUNCTION_4_3();
  swift_getObjectType();
  uint64_t v0 = OUTLINED_FUNCTION_0_83();
  return sub_1B5FE4ED0(v0, v1, v2, v3, v4, v5);
}

id SidebarButtonView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void SidebarButtonView.init(coder:)()
{
}

id sub_1B5FE4AF0()
{
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI17SidebarButtonView_button), sel_alpha);
}

id sub_1B5FE4B60()
{
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI17SidebarButtonView_button), sel_setAlpha_);
}

id (*sub_1B5FE4B78(void *a1))(uint64_t a1)
{
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI17SidebarButtonView_button);
  a1[1] = v3;
  objc_msgSend(v3, sel_alpha);
  *a1 = v4;
  return sub_1B5FE4BD4;
}

id sub_1B5FE4BD4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setAlpha_, *(double *)a1);
}

double sub_1B5FE4C28()
{
  objc_msgSend(v0, sel_transform);
  return v2;
}

id sub_1B5FE4CB4(double a1)
{
  objc_msgSend(v1, sel_transform);
  double v5 = a1;
  return objc_msgSend(v1, sel_setTransform_, &v4);
}

void (*sub_1B5FE4D14(void *a1))(uint64_t a1)
{
  id v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[7] = v1;
  objc_msgSend(v1, sel_transform);
  v3[6] = v5;
  return sub_1B5FE4D90;
}

void sub_1B5FE4D90(uint64_t a1)
{
  uint64_t v1 = *(_OWORD **)a1;
  uint64_t v2 = *(void *)(*(void *)a1 + 48);
  id v3 = *(void **)(*(void *)a1 + 56);
  objc_msgSend(v3, sel_transform);
  *uint64_t v1 = v4;
  v1[1] = v5;
  *((void *)v1 + 4) = v6;
  *((void *)v1 + 5) = v2;
  objc_msgSend(v3, sel_setTransform_, v1);
  free(v1);
}

void SidebarButtonView.init(frame:)()
{
}

void sub_1B5FE4E38()
{
}

id SidebarButtonView.__deallocating_deinit()
{
  return sub_1B5FE4E84(type metadata accessor for SidebarButtonView);
}

id sub_1B5FE4E84(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

char *sub_1B5FE4ED0(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, __objc2_meth_list a6)
{
  sub_1B5E5F644(a1, (uint64_t)v47);
  uint64_t v11 = (char *)objc_allocWithZone((Class)type metadata accessor for SidebarButton());
  uint64_t v12 = a4;
  id v13 = a3;
  __objc2_meth_list v14 = a6;
  id v15 = sub_1B5FE54F8((uint64_t)v47, a2, v13, v11, a5, v14);
  uint64_t v16 = OBJC_IVAR____TtC5TeaUI17SidebarButtonView_button;
  *(void *)&v12[OBJC_IVAR____TtC5TeaUI17SidebarButtonView_button] = v15;

  objc_msgSend(*(id *)&v12[v16], sel_frame);
  double v18 = v17;
  double v20 = v19;
  double v22 = v21;
  double v24 = v23;
  v46.receiver = v12;
  v46.super_class = (Class)type metadata accessor for SidebarButtonView();
  char v25 = (char *)objc_msgSendSuper2(&v46, sel_initWithFrame_, v18, v20, v22, v24);
  uint64_t v26 = OBJC_IVAR____TtC5TeaUI17SidebarButtonView_button;
  uint64_t v27 = *(void **)&v25[OBJC_IVAR____TtC5TeaUI17SidebarButtonView_button];
  uint64_t v28 = v25;
  objc_msgSend(v28, sel_addSubview_, v27);
  objc_msgSend(v28, sel_setAutoresizesSubviews_, 0);
  objc_msgSend(v28, sel_setAutoresizingMask_, 0);
  objc_msgSend(v28, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v43 = self;
  sub_1B5EAA400(0, (unint64_t *)&qword_1EB64B370, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1B61C28B0;
  id v30 = objc_msgSend(v27, sel_widthAnchor);
  if (qword_1EB641890 != -1) {
    swift_once();
  }
  objc_msgSend((id)qword_1EB654AE0, sel_size, v43);
  id v31 = objc_msgSend(v30, sel_constraintEqualToConstant_);

  *(void *)(v29 + 32) = v31;
  id v32 = objc_msgSend(*(id *)&v25[v26], sel_heightAnchor);
  objc_msgSend((id)qword_1EB654AE0, sel_size);
  id v34 = objc_msgSend(v32, sel_constraintEqualToConstant_, v33);

  *(void *)(v29 + 4sub_1B5E6F544(4, 0, 0) = v34;
  id v35 = objc_msgSend(*(id *)&v25[v26], sel_centerXAnchor);
  id v36 = objc_msgSend(v28, sel_centerXAnchor);
  id v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v36);

  *(void *)(v29 + 48) = v37;
  id v38 = objc_msgSend(*(id *)&v25[v26], sel_centerYAnchor);
  id v39 = objc_msgSend(v28, sel_centerYAnchor);
  id v40 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v39);

  *(void *)(v29 + 56) = v40;
  v47[0] = v29;
  sub_1B61B2510();
  sub_1B5FE574C();
  uint64_t v41 = (void *)sub_1B61B24D0();
  swift_bridgeObjectRelease();
  objc_msgSend(v44, sel_activateConstraints_, v41);

  sub_1B5E15B34(a1);
  return v28;
}

uint64_t type metadata accessor for SidebarButton()
{
  return self;
}

uint64_t type metadata accessor for SidebarButtonView()
{
  return self;
}

id sub_1B5FE52C0@<X0>(void *a1@<X8>)
{
  id result = sub_1B5FE4AF0();
  *a1 = v3;
  return result;
}

id sub_1B5FE52EC()
{
  return sub_1B5FE4B60();
}

void sub_1B5FE5314(double *a1@<X8>)
{
  *a1 = sub_1B5FE4C28();
}

id sub_1B5FE5340(double *a1)
{
  return sub_1B5FE4CB4(*a1);
}

uint64_t method lookup function for SidebarButton(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SidebarButton);
}

uint64_t method lookup function for SidebarButtonView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SidebarButtonView);
}

uint64_t dispatch thunk of SidebarButtonView.__allocating_init(target:action:accessibilityDelegate:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of SidebarButtonView.contentAlpha.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of SidebarButtonView.contentAlpha.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of SidebarButtonView.contentAlpha.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SidebarButtonView.verticalOffset.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of SidebarButtonView.verticalOffset.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of SidebarButtonView.verticalOffset.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of SidebarButtonAccessibilityDelegate.isSidebarHidden(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

id sub_1B5FE54F8(uint64_t a1, uint64_t a2, void *a3, char *a4, uint64_t a5, __objc2_meth_list a6)
{
  p_class_meths = &OBJC_PROTOCOL___UIPickerViewDataSource.class_meths;
  *(void *)&a4[OBJC_IVAR____TtC5TeaUI13SidebarButton_accessibilityDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  if (qword_1EB641890 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_1EB654AE0;
  objc_msgSend((id)qword_1EB654AE0, sel_size);
  double v14 = v13;
  double v16 = v15;
  v30.receiver = a4;
  v30.super_class = (Class)type metadata accessor for SidebarButton();
  id v17 = objc_msgSendSuper2(&v30, sel_initWithFrame_, 0.0, 0.0, v14, v16);
  objc_msgSend(v17, sel_setBackgroundImage_forState_, v12, 0);
  sub_1B5E5F644(a1, (uint64_t)v28);
  uint64_t v18 = v29;
  if (v29)
  {
    double v19 = __swift_project_boxed_opaque_existential_1(v28, v29);
    uint64_t v20 = *(void *)(v18 - 8);
    MEMORY[0x1F4188790](v19);
    double v22 = (char *)v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v20 + 16))(v22);
    id v23 = v17;
    uint64_t v24 = sub_1B61B3740();
    char v25 = v22;
    p_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___UIPickerViewDataSource + 32);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v25, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  }
  else
  {
    id v26 = v17;
    uint64_t v24 = 0;
  }
  objc_msgSend(v17, sel_addTarget_action_forControlEvents_, v24, a2, 64);
  swift_unknownObjectRelease();

  sub_1B5E15B34(a1);
  *(__objc2_meth_list *)((char *)p_class_meths[128] + (void)v17 + 8) = a6;
  swift_unknownObjectWeakAssign();

  return v17;
}

unint64_t sub_1B5FE574C()
{
  unint64_t result = qword_1EB63F9D0;
  if (!qword_1EB63F9D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB63F9D0);
  }
  return result;
}

uint64_t sub_1B5FE578C(uint64_t a1)
{
  return OUTLINED_FUNCTION_4_64(a1, 1, 29, 0x80000001B61E6B90, &qword_1E9DAB470);
}

uint64_t static Settings.TeaUIModule.Debug.enableDebugMenu.getter()
{
  return sub_1B5E77A90(&qword_1E9DA7EF8);
}

uint64_t sub_1B5FE57D4(uint64_t a1)
{
  return OUTLINED_FUNCTION_4_64(a1, 0, 28, 0x80000001B61E6B70, &qword_1E9DAB478);
}

uint64_t static Settings.TeaUIModule.Debug.showAllBundles.getter()
{
  return sub_1B5E77A90(&qword_1E9DA7F00);
}

uint64_t sub_1B5FE581C(uint64_t a1)
{
  return sub_1B5FE5844(a1, 1, 0xD000000000000025, 0x80000001B61E6B40, &qword_1E9DAB480);
}

uint64_t sub_1B5FE5844(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = sub_1B61AFF20();
  OUTLINED_FUNCTION_0_10();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1B61AFF10();
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x1F4188790](v13);
  (*(void (**)(unsigned char *, void))(v15 + 104))(&v17[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4FAB400]);
  (*(void (**)(unsigned char *, void, uint64_t))(v9 + 104))(v12, *MEMORY[0x1E4FAB410], v7);
  v17[15] = a2;
  sub_1B5FE63B4();
  swift_allocObject();
  uint64_t result = sub_1B61AFF80();
  *a5 = result;
  return result;
}

uint64_t static Settings.TeaUIModule.Debug.enableDebugContextMenu.getter()
{
  return sub_1B5E77A90(qword_1E9DA7F08);
}

uint64_t sub_1B5FE59D4()
{
  sub_1B61AFF20();
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_7_0();
  sub_1B5FE6268(0, &qword_1EB64BB68, (void (*)(void))sub_1B5E4177C);
  uint64_t v2 = OUTLINED_FUNCTION_7_43();
  v3(v2);
  sub_1B5FE62C8(0, &qword_1EB64BB90, &qword_1EB64BB60);
  OUTLINED_FUNCTION_8_36();
  OUTLINED_FUNCTION_3(v4);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1B61C0140;
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_2_9();
  uint64_t v5 = OUTLINED_FUNCTION_6_50();
  v6(v5);
  sub_1B5FE6368();
  OUTLINED_FUNCTION_10_35(46);
  uint64_t result = sub_1B61AFF50();
  qword_1EB64BB58 = result;
  return result;
}

uint64_t static Settings.TeaUIModule.Debug.contextMenuPosition.getter()
{
  return sub_1B5E77A90(&qword_1EB64BB40);
}

uint64_t sub_1B5FE5C2C()
{
  sub_1B61AFF20();
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_7_0();
  sub_1B5FE6268(0, &qword_1E9DAB490, (void (*)(void))sub_1B5E417C8);
  uint64_t v2 = OUTLINED_FUNCTION_7_43();
  v3(v2);
  sub_1B5FE62C8(0, &qword_1E9DAB498, &qword_1E9DAB4A0);
  OUTLINED_FUNCTION_8_36();
  OUTLINED_FUNCTION_3(v4);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1B61C0140;
  OUTLINED_FUNCTION_2_9();
  sub_1B61AFF30();
  OUTLINED_FUNCTION_2_9();
  uint64_t v5 = OUTLINED_FUNCTION_6_50();
  v6(v5);
  sub_1B5FE621C();
  OUTLINED_FUNCTION_10_35(27);
  uint64_t result = sub_1B61AFF50();
  qword_1E9DAB488 = result;
  return result;
}

uint64_t static Settings.TeaUIModule.Debug.menuActivation.getter()
{
  return sub_1B5E77A90(&qword_1E9DA7F18);
}

TeaUI::DebugContextMenuPosition_optional __swiftcall DebugContextMenuPosition.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1B61B35E0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t DebugContextMenuPosition.rawValue.getter()
{
  uint64_t v1 = 0x676E696461656CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x676E696C69617274;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E6564646968;
  }
}

uint64_t sub_1B5FE5F58(char *a1, char *a2)
{
  return sub_1B5E18860(*a1, *a2);
}

unint64_t sub_1B5FE5F68()
{
  unint64_t result = qword_1EB64BB80;
  if (!qword_1EB64BB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB64BB80);
  }
  return result;
}

uint64_t sub_1B5FE5FB4()
{
  return sub_1B6158178();
}

uint64_t sub_1B5FE5FBC()
{
  return sub_1B5E61F60();
}

uint64_t sub_1B5FE5FC4()
{
  return sub_1B6158644();
}

TeaUI::DebugContextMenuPosition_optional sub_1B5FE5FCC(Swift::String *a1)
{
  return DebugContextMenuPosition.init(rawValue:)(*a1);
}

uint64_t sub_1B5FE5FD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DebugContextMenuPosition.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B5FE6000(uint64_t a1)
{
  unint64_t v2 = sub_1B5E419F8();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1B5FE6054(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1B5E419F8();
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1B5FE60B0(uint64_t a1)
{
  unint64_t v2 = sub_1B5E419F8();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

void type metadata accessor for Settings.TeaUIModule()
{
}

void type metadata accessor for Settings.TeaUIModule.Debug()
{
}

unsigned char *storeEnumTagSinglePayload for DebugContextMenuPosition(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5FE61E8);
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for DebugContextMenuPosition()
{
}

unint64_t sub_1B5FE621C()
{
  unint64_t result = qword_1E9DAB4A8;
  if (!qword_1E9DAB4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB4A8);
  }
  return result;
}

void sub_1B5FE6268(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1B61AFF70();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1B5FE62C8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1B5FE6320(255, a3);
    unint64_t v4 = sub_1B61B36F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1B5FE6320(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1B61AFF40();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

unint64_t sub_1B5FE6368()
{
  unint64_t result = qword_1EB64BB70;
  if (!qword_1EB64BB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB64BB70);
  }
  return result;
}

void sub_1B5FE63B4()
{
  if (!qword_1E9DAB4B0)
  {
    unint64_t v0 = sub_1B61AFF70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAB4B0);
    }
  }
}

uint64_t CoverViewManager.__allocating_init()()
{
  OUTLINED_FUNCTION_3_6();
  uint64_t v0 = swift_allocObject();
  CoverViewManager.init()();
  return v0;
}

Swift::Void __swiftcall CoverViewManager.register(in:)(UIViewController *in)
{
}

uint64_t CoverViewManager.present(cover:animation:completion:)@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 *a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X3>, UIView_optional *a5@<X8>)
{
  unsigned __int8 v8 = *a2;
  CoverView.makeView()(a5);
  if (v9)
  {
    uint64_t v10 = v9;
    __dst[0] = v8;
    sub_1B5FE6D70(v9, __dst, a3, a4);
  }
  else
  {
    __dst[0] = v8;
    sub_1B5FE70E0(__dst, (void (*)(uint64_t))a3, a4);
  }
  sub_1B5F3BD10(a1, (char *)__dst);
  return CoverViewManager.cover.setter(__dst);
}

Swift::Void __swiftcall CoverViewManager.layoutIfNeeded()()
{
  uint64_t v1 = *(void **)(v0 + 32);
  if (v1)
  {
    id v11 = v1;
    sub_1B5FE6BD4(v11);
    objc_msgSend(v11, sel_setNeedsLayout);
    objc_msgSend(v11, sel_layoutIfNeeded);
    unint64_t v2 = (void *)MEMORY[0x1BA9B1EC0](v0 + 16);
    if (v2)
    {
      unint64_t v3 = v2;
      id v4 = objc_msgSend(v2, sel_view);
      if (v4)
      {
        uint64_t v5 = v4;
        objc_msgSend(v4, sel_bounds);
        uint64_t v7 = v6;
        uint64_t v9 = v8;

        id v10 = objc_msgSend(v3, sel_traitCollection);
        CoverViewManager.cover.getter();
        v12[0] = v7;
        v12[1] = v9;
        v12[2] = v10;
        v15.traitCollection.super.isa = (Class)v12;
        CoverView.layout(with:)(v15);

        sub_1B5E68550((uint64_t)v13);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
    }
  }
}

BOOL CoverViewManager.isCovering.getter()
{
  return *(void *)(v0 + 32) != 0;
}

uint64_t CoverViewManager.cover.getter()
{
  swift_retain();
  sub_1B61B07F0();
  return swift_release();
}

uint64_t sub_1B5FE6678(unsigned __int8 *a1)
{
  sub_1B5F3BD10(a1, (char *)__dst);
  return CoverViewManager.cover.setter(__dst);
}

uint64_t CoverViewManager.cover.setter(unsigned __int8 *a1)
{
  sub_1B5F3BD10(a1, __dst);
  swift_retain();
  sub_1B61B0800();
  swift_release();
  return sub_1B5E68550((uint64_t)a1);
}

void (*CoverViewManager.cover.modify(void *a1))(void *a1)
{
  unint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = *(void *)(v1 + 24);
  swift_retain();
  v3[5] = sub_1B61B07E0();
  return sub_1B5F85AA4;
}

uint64_t CoverViewManager.$cover.getter()
{
  swift_retain();
  uint64_t v0 = sub_1B61B0810();
  swift_release();
  return v0;
}

void sub_1B5FE67B0()
{
  uint64_t v1 = *(void **)(v0 + 32);
  unint64_t v2 = self;
  unint64_t v3 = v2;
  if (v1)
  {
    id v4 = v1;
    id v5 = objc_msgSend(v3, sel_defaultCenter);
    uint64_t v6 = (void *)sub_1B61B20C0();
    sub_1B5FE7B6C(0, &qword_1EB64B358, (uint64_t (*)(uint64_t))sub_1B5FE7B0C, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B61BE690;
    sub_1B61B3220();
    uint64_t v8 = MEMORY[0x1BA9B1EC0](v0 + 16);
    sub_1B5FE7B6C(0, (unint64_t *)&unk_1EB648D10, (uint64_t (*)(uint64_t))sub_1B5E36C10, MEMORY[0x1E4FBB718]);
    *(void *)(inited + 96) = v9;
    *(void *)(inited + 72) = v8;
    uint64_t v10 = sub_1B61B1F50();
    sub_1B5F0F270((uint64_t)v6, 0, v10, v5);
  }
  else
  {
    id v5 = objc_msgSend(v2, sel_defaultCenter);
    uint64_t v6 = (void *)sub_1B61B20C0();
    sub_1B5FE7B6C(0, &qword_1EB64B358, (uint64_t (*)(uint64_t))sub_1B5FE7B0C, MEMORY[0x1E4FBBE00]);
    uint64_t v11 = swift_initStackObject();
    *(_OWORD *)(v11 + 16) = xmmword_1B61BE690;
    sub_1B61B3220();
    uint64_t v12 = MEMORY[0x1BA9B1EC0](v0 + 16);
    sub_1B5FE7B6C(0, (unint64_t *)&unk_1EB648D10, (uint64_t (*)(uint64_t))sub_1B5E36C10, MEMORY[0x1E4FBB718]);
    *(void *)(v11 + 96) = v13;
    *(void *)(v11 + 72) = v12;
    uint64_t v14 = sub_1B61B1F50();
    sub_1B5F0F270((uint64_t)v6, 0, v14, v5);
  }
}

uint64_t static CoverViewManager.didStartCovering.getter()
{
  return OUTLINED_FUNCTION_1_85();
}

uint64_t static CoverViewManager.didEndCovering.getter()
{
  return OUTLINED_FUNCTION_1_85();
}

void sub_1B5FE6AD0(void *a1)
{
  unint64_t v2 = *(void **)(v1 + 32);
  *(void *)(v1 + 32) = a1;
  id v3 = a1;

  sub_1B5FE67B0();
}

uint64_t CoverViewManager.init()()
{
  uint64_t v1 = v0;
  swift_unknownObjectWeakInit();
  memset(__src, 0, sizeof(__src));
  __int16 v6 = 1792;
  sub_1B5F3BD10((unsigned __int8 *)__src, __dst);
  sub_1B5FE77D8(0, &qword_1EB649190, (uint64_t)&type metadata for CoverView, MEMORY[0x1E4FAAC80]);
  swift_allocObject();
  uint64_t v2 = sub_1B61B07D0();
  sub_1B5E68550((uint64_t)__src);
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = 0;
  return v1;
}

uint64_t sub_1B5FE6BD4(void *a1)
{
  uint64_t result = MEMORY[0x1BA9B1EC0](v1 + 16);
  if (result)
  {
    id v4 = (void *)result;
    objc_msgSend(a1, sel_setAutoresizingMask_, 18);
    id v5 = self;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a1;
    *(void *)(v6 + 24) = v4;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_1B5FE7A2C;
    *(void *)(v7 + 24) = v6;
    void v11[4] = sub_1B5E4EC58;
    v11[5] = v7;
    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 1107296256;
    v11[2] = sub_1B5E7365C;
    v11[3] = &block_descriptor_45;
    uint64_t v8 = _Block_copy(v11);
    id v9 = a1;
    id v10 = v4;
    swift_retain();
    swift_release();
    objc_msgSend(v5, sel_performWithoutAnimation_, v8);

    _Block_release(v8);
    LOBYTE(v1sub_1B5E6F544(4, 0, 0) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (v10) {
      __break(1u);
    }
  }
  return result;
}

void sub_1B5FE6D70(void *a1, unsigned __int8 *a2, void (*a3)(void), uint64_t a4)
{
  int v8 = *a2;
  id v9 = (void *)MEMORY[0x1BA9B1EC0](v4 + 16);
  if (v9)
  {
    id v10 = v9;
    id v11 = objc_msgSend(v9, sel_view);

    if (!v11)
    {
      __break(1u);
      goto LABEL_22;
    }
    id v12 = objc_msgSend(v11, sel_window);

    if (v12)
    {
      id v13 = objc_msgSend(v12, sel_windowScene);

      if (v13)
      {
        id v14 = objc_msgSend(v13, sel_activationState);

        int v15 = (unint64_t)v14 < 2 ? v8 : 0;
        if (v15 == 1)
        {
          objc_msgSend(a1, sel_setAlpha_, 0.0);
          double v16 = (void *)MEMORY[0x1BA9B1EC0](v4 + 16);
          if (!v16)
          {
LABEL_12:
            sub_1B5FE6BD4(a1);
            double v19 = *(void **)(v4 + 32);
            id v20 = v19;
            id v21 = a1;
            sub_1B5FE6AD0(a1);
            double v22 = self;
            uint64_t v23 = swift_allocObject();
            *(void *)(v23 + 16) = v21;
            id v38 = sub_1B5FE7A7C;
            id v39 = (void *)v23;
            uint64_t v34 = MEMORY[0x1E4F143A8];
            uint64_t v35 = 1107296256;
            id v36 = sub_1B5E3729C;
            id v37 = &block_descriptor_11;
            uint64_t v24 = _Block_copy(&v34);
            id v25 = v21;
            swift_release();
            id v26 = (void *)swift_allocObject();
            v26[2] = v19;
            v26[3] = a3;
            v26[4] = a4;
            id v38 = sub_1B5FE7AD0;
            id v39 = v26;
            uint64_t v34 = MEMORY[0x1E4F143A8];
            uint64_t v35 = 1107296256;
            id v36 = sub_1B5E73DCC;
            id v37 = &block_descriptor_17_1;
            uint64_t v27 = _Block_copy(&v34);
            id v28 = v20;
            sub_1B5E4DC4C((uint64_t)a3);
            swift_release();
            objc_msgSend(v22, sel_animateWithDuration_delay_options_animations_completion_, 2, v24, v27, 0.15, 0.0);

            _Block_release(v27);
            _Block_release(v24);
            return;
          }
          id v17 = v16;
          id v18 = objc_msgSend(v16, sel_view);

          if (v18)
          {
            objc_msgSend(v18, sel_addSubview_, a1);

            goto LABEL_12;
          }
          goto LABEL_23;
        }
      }
    }
  }
  uint64_t v29 = (void *)MEMORY[0x1BA9B1EC0](v4 + 16);
  if (v29)
  {
    objc_super v30 = v29;
    id v31 = objc_msgSend(v29, sel_view);

    if (v31)
    {
      objc_msgSend(v31, sel_addSubview_, a1);

      goto LABEL_16;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    return;
  }
LABEL_16:
  sub_1B5FE6BD4(a1);
  id v32 = *(void **)(v4 + 32);
  if (v32) {
    objc_msgSend(v32, sel_removeFromSuperview);
  }
  id v33 = a1;
  sub_1B5FE6AD0(a1);
  if (a3) {
    a3();
  }
}

void sub_1B5FE70E0(unsigned __int8 *a1, void (*a2)(uint64_t), uint64_t a3)
{
  int v6 = *a1;
  CoverViewManager.cover.getter();
  if (v28 == 7 && !v27)
  {
    int8x16_t v7 = vorrq_s8(vorrq_s8(v23, v25), vorrq_s8(v24, v26));
    if (!(*(void *)&vorr_s8(*(int8x8_t *)v7.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL)) | v22 | aBlock))
    {
      uint64_t v8 = sub_1B5E68550((uint64_t)&aBlock);
      if (!a2) {
        return;
      }
      goto LABEL_18;
    }
  }
  sub_1B5E68550((uint64_t)&aBlock);
  id v9 = (void *)MEMORY[0x1BA9B1EC0](v3 + 16);
  if (v9)
  {
    id v10 = v9;
    id v11 = objc_msgSend(v9, sel_view);

    if (!v11)
    {
      __break(1u);
      return;
    }
    id v12 = objc_msgSend(v11, sel_window);

    if (v12)
    {
      id v13 = objc_msgSend(v12, sel_windowScene);

      if (v13)
      {
        id v14 = objc_msgSend(v13, sel_activationState);

        int v15 = (unint64_t)v14 < 2 ? v6 : 0;
        if (v15 == 1)
        {
          double v16 = self;
          v24.i64[0] = (uint64_t)sub_1B5FE7BD0;
          v24.i64[1] = v3;
          uint64_t aBlock = MEMORY[0x1E4F143A8];
          uint64_t v22 = 1107296256;
          v23.i64[0] = (uint64_t)sub_1B5E3729C;
          v23.i64[1] = (uint64_t)&block_descriptor_20_1;
          id v17 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          id v18 = (void *)swift_allocObject();
          void v18[2] = v3;
          void v18[3] = a2;
          v18[4] = a3;
          v24.i64[0] = (uint64_t)sub_1B5FE7C18;
          v24.i64[1] = (uint64_t)v18;
          uint64_t aBlock = MEMORY[0x1E4F143A8];
          uint64_t v22 = 1107296256;
          v23.i64[0] = (uint64_t)sub_1B5E73DCC;
          v23.i64[1] = (uint64_t)&block_descriptor_26_0;
          double v19 = _Block_copy(&aBlock);
          swift_retain();
          sub_1B5E4DC4C((uint64_t)a2);
          swift_release();
          objc_msgSend(v16, sel_animateWithDuration_delay_options_animations_completion_, 2, v17, v19, 0.15, 0.0);
          _Block_release(v19);
          _Block_release(v17);
          return;
        }
      }
    }
  }
  id v20 = *(void **)(v3 + 32);
  if (v20) {
    objc_msgSend(v20, sel_removeFromSuperview);
  }
  sub_1B5FE6AD0(0);
  if (a2) {
LABEL_18:
  }
    a2(v8);
}

uint64_t CoverViewManager.styleCoverView(with:)(uint64_t a1)
{
  CoverViewManager.cover.getter();
  if (v13[49] != 2) {
    return sub_1B5E68550((uint64_t)v12);
  }
  char v2 = v13[40];
  long long v6 = v12[0];
  long long v7 = v12[1];
  sub_1B5E176E4(a1, (uint64_t)v8);
  LOBYTE(v9) = v2;
  OUTLINED_FUNCTION_2_79((UIView_optional *)2, v4, v5, SWORD2(v5), SBYTE6(v5), HIBYTE(v5), v6, *((uint64_t *)&v6 + 1), v7, *((uint64_t *)&v7 + 1), v8[0], v8[1], v8[2], v8[3], v8[4], v9, v10, v11);
  sub_1B5E68550((uint64_t)&v6);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8[8];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  unsigned char v20[40];
  uint64_t v21;
  uint64_t v22;
  char v23;

  CoverViewManager.cover.getter();
  if (v23 == 4)
  {
    uint64_t v3 = v21;
    uint64_t v4 = v22;
    sub_1B5E176E4(a1, (uint64_t)v8);
    id v13 = v3;
    id v14 = v4;
    char v2 = 4;
    goto LABEL_5;
  }
  if (v23 == 3)
  {
    sub_1B5E176E4(a1, (uint64_t)v8);
    char v2 = 3;
LABEL_5:
    OUTLINED_FUNCTION_2_79((UIView_optional *)v2, v6, v7, SWORD2(v7), SBYTE6(v7), HIBYTE(v7), v8[0], v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
    sub_1B5E68550((uint64_t)v8);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  }
  return sub_1B5E68550((uint64_t)v20);
}

id sub_1B5FE74EC(uint64_t a1)
{
  id result = *(id *)(a1 + 32);
  if (result) {
    return objc_msgSend(result, sel_setAlpha_, 0.0);
  }
  return result;
}

void sub_1B5FE7508(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = *(void **)(a2 + 32);
  if (v4) {
    objc_msgSend(v4, sel_removeFromSuperview);
  }
  sub_1B5FE6AD0(0);
  if (a3) {
    a3();
  }
}

id sub_1B5FE7564(void *a1, id a2)
{
  id result = objc_msgSend(a2, sel_view);
  if (result)
  {
    id v4 = result;
    objc_msgSend(result, sel_bounds);
    double v6 = v5;
    double v8 = v7;
    double v10 = v9;
    double v12 = v11;

    return objc_msgSend(a1, sel_setFrame_, v6, v8, v10, v12);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t CoverViewManager.deinit()
{
  swift_unknownObjectWeakDestroy();
  swift_release();

  return v0;
}

uint64_t CoverViewManager.__deallocating_deinit()
{
  CoverViewManager.deinit();
  OUTLINED_FUNCTION_3_6();
  return swift_deallocClassInstance();
}

id CoverViewManagerNotification.viewController.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

uint64_t CoverViewManagerNotification.init(notification:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (!sub_1B61AF6E0())
  {
    sub_1B61AF6F0();
    OUTLINED_FUNCTION_19_1();
    (*(void (**)(uint64_t))(v7 + 8))(a1);
    long long v9 = 0u;
    long long v10 = 0u;
    goto LABEL_7;
  }
  strcpy((char *)&v9, "viewController");
  HIBYTE(v9) = -18;
  sub_1B61B3220();
  sub_1B5E13BD8();
  swift_bridgeObjectRelease();
  sub_1B61AF6F0();
  OUTLINED_FUNCTION_19_1();
  (*(void (**)(uint64_t))(v4 + 8))(a1);
  sub_1B5E49E30((uint64_t)v8);
  if (!*((void *)&v10 + 1))
  {
LABEL_7:
    uint64_t result = sub_1B5E15B34((uint64_t)&v9);
    uint64_t v6 = 0;
    goto LABEL_8;
  }
  sub_1B5E36C10();
  uint64_t result = swift_dynamicCast();
  uint64_t v6 = v8[0];
  if (!result) {
    uint64_t v6 = 0;
  }
LABEL_8:
  *a2 = v6;
  return result;
}

void sub_1B5FE77D8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B5FE7824()
{
  return CoverViewManager.cover.getter();
}

uint64_t type metadata accessor for CoverViewManager()
{
  return self;
}

uint64_t method lookup function for CoverViewManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CoverViewManager);
}

uint64_t dispatch thunk of CoverViewManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

void **initializeBufferWithCopyOfBuffer for CoverViewManagerNotification(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void **assignWithCopy for CoverViewManagerNotification(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void **assignWithTake for CoverViewManagerNotification(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for CoverViewManagerNotification(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CoverViewManagerNotification(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoverViewManagerNotification()
{
  return &type metadata for CoverViewManagerNotification;
}

uint64_t sub_1B5FE79EC()
{
  return swift_deallocObject();
}

id sub_1B5FE7A2C()
{
  return sub_1B5FE7564(*(void **)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_1B5FE7A34()
{
  return swift_deallocObject();
}

uint64_t sub_1B5FE7A44()
{
  return swift_deallocObject();
}

id sub_1B5FE7A7C()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, 1.0);
}

uint64_t sub_1B5FE7A90()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  OUTLINED_FUNCTION_3_6();
  return swift_deallocObject();
}

id sub_1B5FE7AD0()
{
  id v1 = *(uint64_t (**)(id))(v0 + 24);
  id result = objc_msgSend(*(id *)(v0 + 16), sel_removeFromSuperview);
  if (v1) {
    return (id)v1(result);
  }
  return result;
}

void sub_1B5FE7B0C()
{
  if (!qword_1EB64A090)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB64A090);
    }
  }
}

void sub_1B5FE7B6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

id sub_1B5FE7BD0()
{
  return sub_1B5FE74EC(v0);
}

uint64_t sub_1B5FE7BD8()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  OUTLINED_FUNCTION_3_6();
  return swift_deallocObject();
}

void sub_1B5FE7C18(uint64_t a1)
{
  sub_1B5FE7508(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t BlueprintLayoutSection.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_13();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  long long v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v3, a2);
  uint64_t v11 = BlueprintLayoutSection.startIndex.getter(a2);
  uint64_t result = BlueprintLayoutSection.endIndex.getter(a2);
  if (result < v11)
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = result;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, a2);
    if (v11 <= a1 && v13 > a1)
    {
      type metadata accessor for BlueprintLayoutItem();
      return sub_1B61B2690();
    }
  }
  __break(1u);
  return result;
}

uint64_t BlueprintLayoutSection.descriptor.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t BlueprintLayoutSection.framePosition.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2 + *(int *)(a1 + 52);
  uint64_t v4 = *(void *)v3;
  *(void *)a2 = *(void *)v3;
  char v5 = *(unsigned char *)(v3 + 8);
  *(unsigned char *)(a2 + 8) = v5;
  return sub_1B5FE827C(v4, v5);
}

uint64_t BlueprintLayoutSection.viewState.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2 + *(int *)(a1 + 56);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(void *)(a2 + 16) = v4;
  return sub_1B61B1F70();
}

double BlueprintLayoutSection.init(descriptor:items:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  OUTLINED_FUNCTION_0_13();
  uint64_t v13 = v12;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(a6, a1);
  v28[0] = a2;
  v28[1] = a3;
  v28[2] = a4;
  void v28[3] = a5;
  uint64_t v15 = type metadata accessor for BlueprintLayoutSection();
  OUTLINED_FUNCTION_2_80(v15);
  *(void *)uint64_t v16 = MEMORY[0x1E4FBC860];
  *(unsigned char *)(v16 + 8) = 0x80;
  uint64_t v17 = sub_1B61B1F70();
  BlueprintLayoutSectionViewState.init<A>(items:)(v17, a3, a5, v28);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(a1, a2);
  *(void *)&double result = OUTLINED_FUNCTION_1_86(v18, v19, v20, v21, v22, v23, v24, v25, v26, v28[0]).n128_u64[0];
  return result;
}

double BlueprintLayoutSection.append(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = type metadata accessor for BlueprintLayoutItem();
  OUTLINED_FUNCTION_0_13();
  MEMORY[0x1F4188790](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v16 - v10, a1, v8);
  sub_1B61B2650();
  sub_1B61B2600();
  uint64_t v12 = sub_1B61B1F70();
  BlueprintLayoutSectionViewState.init<A>(items:)(v12, v6, v7, (uint64_t *)&v17);
  *(_OWORD *)uint64_t v16 = v17;
  uint64_t v13 = v18;
  uint64_t v14 = v3 + *(int *)(a2 + 56);
  swift_bridgeObjectRelease();
  double result = v16[0];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v16;
  *(void *)(v14 + 16) = v13;
  return result;
}

double BlueprintLayoutSection.maxItemHeight.getter(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 32);
  v10[1] = *(_OWORD *)(a1 + 16);
  void v10[2] = v2;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = sub_1B5E37E58((void (*)(char *, uint64_t))sub_1B5FE82C0, (uint64_t)v10, a1, MEMORY[0x1E4FBC958], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v4);
  double v6 = COERCE_DOUBLE(sub_1B5FE80A8(v5));
  char v8 = v7;
  swift_bridgeObjectRelease();
  double result = v6;
  if (v8) {
    return 0.0;
  }
  return result;
}

uint64_t sub_1B5FE80A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  double v2 = *(double *)(a1 + 32);
  uint64_t v3 = v1 - 1;
  if (v1 != 1)
  {
    uint64_t v4 = (double *)(a1 + 40);
    do
    {
      double v5 = *v4++;
      double v6 = v5;
      if (v2 < v5) {
        double v2 = v6;
      }
      --v3;
    }
    while (v3);
  }
  return *(void *)&v2;
}

double BlueprintLayoutSection<>.init(descriptor:framePosition:items:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v13 = *a2;
  char v14 = *((unsigned char *)a2 + 8);
  OUTLINED_FUNCTION_0_13();
  uint64_t v16 = v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(a7, a1, v18);
  uint64_t v19 = *(void *)(a5 + 8);
  uint64_t v20 = *(void *)(a6 + 8);
  v34[0] = a3;
  v34[1] = a4;
  long long v34[2] = v19;
  v34[3] = v20;
  uint64_t v21 = type metadata accessor for BlueprintLayoutSection();
  OUTLINED_FUNCTION_2_80(v21);
  *(void *)uint64_t v22 = v13;
  *(unsigned char *)(v22 + 8) = v14;
  uint64_t v23 = sub_1B61B1F70();
  BlueprintLayoutSectionViewState.init<A>(items:)(v23, a4, a6, v34);
  uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(a1, a3);
  *(void *)&double result = OUTLINED_FUNCTION_1_86(v24, v25, v26, v27, v28, v29, v30, v31, v32, v34[0]).n128_u64[0];
  return result;
}

uint64_t BlueprintLayoutSection.startIndex.getter(uint64_t a1)
{
  return sub_1B5FE821C(a1, MEMORY[0x1E4FBB2F8]);
}

uint64_t BlueprintLayoutSection.endIndex.getter(uint64_t a1)
{
  return sub_1B5FE821C(a1, MEMORY[0x1E4FBB318]);
}

uint64_t sub_1B5FE821C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(v2 + *(int *)(a1 + 60));
  uint64_t v4 = type metadata accessor for BlueprintLayoutItem();
  return a2(v3, v4);
}

uint64_t sub_1B5FE827C(uint64_t result, char a2)
{
  if ((a2 & 0xC0) == 0x80) {
    return sub_1B5FE8294(result, a2 & 0x3F);
  }
  return result;
}

uint64_t sub_1B5FE8294(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 1u) {
    return sub_1B61B1F70();
  }
  return result;
}

uint64_t type metadata accessor for BlueprintLayoutSection()
{
  return swift_getGenericMetadata();
}

void sub_1B5FE82C0(double *a1@<X8>)
{
  *a1 = (*(double (**)(void))(*(void *)(v1 + 40) + 8))(*(void *)(v1 + 24));
}

Swift::Int __swiftcall BlueprintLayoutSection.index(after:)(Swift::Int after)
{
  type metadata accessor for BlueprintLayoutItem();
  return sub_1B61B25F0();
}

uint64_t sub_1B5FE8370()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B5FE838C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = BlueprintLayoutSection.startIndex.getter(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1B5FE83B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = BlueprintLayoutSection.endIndex.getter(a1);
  *a2 = result;
  return result;
}

void (*sub_1B5FE83DC(uint64_t **a1, uint64_t *a2, uint64_t a3))(void *a1)
{
  double v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_1B5FE844C(v6, *a2, a3);
  return sub_1B5E499E0;
}

void (*sub_1B5FE844C(uint64_t *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = type metadata accessor for BlueprintLayoutItem();
  *a1 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  a1[1] = v7;
  a1[2] = (uint64_t)malloc(*(void *)(v7 + 64));
  BlueprintLayoutSection.subscript.getter(a2, a3);
  return sub_1B5E92278;
}

Swift::Int sub_1B5FE8538@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result = BlueprintLayoutSection.index(after:)(*a1);
  *a2 = result;
  return result;
}

Swift::Int sub_1B5FE8564(Swift::Int *a1)
{
  Swift::Int result = BlueprintLayoutSection.index(after:)(*a1);
  *a1 = result;
  return result;
}

uint64_t sub_1B5FE8590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, v2, a1);
  uint64_t v6 = BlueprintLayoutSection.startIndex.getter(a1);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, a1);
  swift_getWitnessTable();
  uint64_t result = sub_1B61B3450();
  *(void *)(a2 + *(int *)(result + 36)) = v6;
  return result;
}

uint64_t sub_1B5FE867C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_1B5FE86D0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F4184380](a1, WitnessTable);
}

uint64_t sub_1B5FE8728()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B5FE87D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (char *)v4 + v6;
    uint64_t v11 = (char *)a2 + v6;
    unint64_t v12 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v13 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v14 = *(void *)v13;
    char v15 = *(unsigned char *)(v13 + 8);
    sub_1B5FE827C(*(void *)v13, v15);
    *(void *)unint64_t v12 = v14;
    *(unsigned char *)(v12 + 8) = v15;
    uint64_t v16 = (void *)((unint64_t)(v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v17 = (void *)((unint64_t)(v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v16 = *v17;
    v16[1] = v17[1];
    v16[2] = v17[2];
    *(void *)(((unint64_t)v16 + 31) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v17 + 31) & 0xFFFFFFFFFFFFFFF8);
    sub_1B61B1F70();
    sub_1B61B1F70();
  }
  return v4;
}

uint64_t sub_1B5FE8940(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  sub_1B5FE89D4(*(void *)((*(void *)(v3 + 56) + a1 + 7) & 0xFFFFFFFFFFFFFFF8), *(unsigned char *)(((*(void *)(v3 + 56) + a1 + 7) & 0xFFFFFFFFFFFFFFF8) + 8));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B5FE89D4(uint64_t result, char a2)
{
  if ((a2 & 0xC0) == 0x80) {
    return sub_1B5FE89EC(result, a2 & 0x3F);
  }
  return result;
}

uint64_t sub_1B5FE89EC(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B5FE8A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v6 + a2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)v10;
  LOBYTE(v5) = *(unsigned char *)(v10 + 8);
  sub_1B5FE827C(*(void *)v10, v5);
  *(void *)unint64_t v9 = v11;
  *(unsigned char *)(v9 + 8) = v5;
  unint64_t v12 = (void *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v13 = (void *)((v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v12 = *v13;
  v12[1] = v13[1];
  _OWORD v12[2] = v13[2];
  *(void *)(((unint64_t)v12 + 31) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + 31) & 0xFFFFFFFFFFFFFFF8);
  sub_1B61B1F70();
  sub_1B61B1F70();
  return a1;
}

uint64_t sub_1B5FE8AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v6 + a2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)v10;
  LOBYTE(v5) = *(unsigned char *)(v10 + 8);
  sub_1B5FE827C(*(void *)v10, v5);
  uint64_t v12 = *(void *)v9;
  *(void *)unint64_t v9 = v11;
  char v13 = *(unsigned char *)(v9 + 8);
  *(unsigned char *)(v9 + 8) = v5;
  sub_1B5FE89D4(v12, v13);
  uint64_t v14 = (void *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  char v15 = (void *)((v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  v14[2] = v15[2];
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v14 + 31) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v15 + 31) & 0xFFFFFFFFFFFFFFF8);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B5FE8BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(void *)unint64_t v9 = v11;
  unint64_t v12 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  long long v14 = *(_OWORD *)v13;
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(_OWORD *)unint64_t v12 = v14;
  *(void *)((v12 + 31) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v13 + 31) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1B5FE8CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)v10;
  LOBYTE(v1sub_1B5E6F544(4, 0, 0) = *(unsigned char *)(v10 + 8);
  uint64_t v12 = *(void *)v9;
  *(void *)unint64_t v9 = v11;
  char v13 = *(unsigned char *)(v9 + 8);
  *(unsigned char *)(v9 + 8) = v10;
  sub_1B5FE89D4(v12, v13);
  long long v14 = (void *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  char v15 = (void *)((v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *long long v14 = *v15;
  v14[1] = v15[1];
  v14[2] = v15[2];
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v14 + 31) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v15 + 31) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B5FE8D90(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1B5FE8ED4);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v1sub_1B5E6F544(4, 0, 0) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1B5FE8EE8(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((v9 + 23) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
  }
  if (a2 > v8)
  {
    if (((((v9 + 23) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((((v9 + 23) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1B5FE90CCLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v17 = (void *)((unint64_t)&a1[v9 + 23] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            v17[1] = 0;
            long long v17[2] = 0;
            void *v17 = a2 ^ 0x80000000;
          }
          else
          {
            long long v17[2] = (a2 - 1);
          }
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

BOOL sub_1B5FE90F4()
{
  return v0[4] == 0.0
      && v0[5] == 0.0
      && v0[6] == 0.0
      && v0[7] == 0.0
      && v0[8] == 0.0
      && v0[9] == 0.0
      && v0[10] == 0.0
      && v0[11] == 0.0;
}

uint64_t sub_1B5FE9160(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t result = v18;
  *(double *)(v18 + 16) = a1;
  *(double *)(v18 + 24) = a2;
  *(double *)(v18 + 32) = a3;
  *(double *)(v18 + 4sub_1B5E6F544(4, 0, 0) = a4;
  *(double *)(v18 + 48) = a5;
  *(double *)(v18 + 56) = a6;
  *(double *)(v18 + 64) = a7;
  *(double *)(v18 + 72) = a8;
  *(void *)(v18 + 8sub_1B5E6F544(4, 0, 0) = a17;
  *(void *)(v18 + 88) = a18;
  return result;
}

double sub_1B5FE9180()
{
  OUTLINED_FUNCTION_0_14();
  uint64_t v15 = *(void *)(v0 + 24);
  uint64_t v16 = *(void *)(v0 + 16);
  sub_1B5FE90F4();
  v17.origin.x = OUTLINED_FUNCTION_0_84();
  double MinX = CGRectGetMinX(v17);
  if ((v1 & 1) == 0 && *(double *)(v0 + 32) < MinX) {
    double MinX = *(double *)(v0 + 32);
  }
  double v14 = MinX;
  sub_1B5FE90F4();
  v18.origin.x = OUTLINED_FUNCTION_0_84();
  double MaxX = CGRectGetMaxX(v18);
  if ((v1 & 1) == 0 && MaxX <= *(double *)(v0 + 40)) {
    double MaxX = *(double *)(v0 + 40);
  }
  double v13 = MaxX;
  sub_1B5FE90F4();
  v19.origin.x = OUTLINED_FUNCTION_0_84();
  double MinY = CGRectGetMinY(v19);
  if ((v1 & 1) == 0 && *(double *)(v0 + 48) < MinY) {
    double MinY = *(double *)(v0 + 48);
  }
  double v12 = MinY;
  sub_1B5FE90F4();
  v20.origin.x = OUTLINED_FUNCTION_0_84();
  double MaxY = CGRectGetMaxY(v20);
  if ((v1 & 1) == 0 && MaxY <= *(double *)(v0 + 56)) {
    double MaxY = *(double *)(v0 + 56);
  }
  sub_1B5FE90F4();
  double v6 = OUTLINED_FUNCTION_2_81();
  if ((v1 & 1) == 0 && *(double *)(v0 + 64) < v6) {
    double v6 = *(double *)(v0 + 64);
  }
  sub_1B5FE90F4();
  double v7 = OUTLINED_FUNCTION_2_81();
  if ((v1 & 1) == 0 && v7 <= *(double *)(v0 + 72)) {
    double v7 = *(double *)(v0 + 72);
  }
  sub_1B5FE90F4();
  double v8 = OUTLINED_FUNCTION_3_69();
  if ((v1 & 1) == 0 && *(double *)(v0 + 80) < v8) {
    double v8 = *(double *)(v0 + 80);
  }
  sub_1B5FE90F4();
  double v9 = OUTLINED_FUNCTION_3_69();
  if ((v1 & 1) == 0 && v9 <= *(double *)(v0 + 88)) {
    double v9 = *(double *)(v0 + 88);
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v16;
  *(void *)(v10 + 24) = v15;
  *(double *)(v10 + 32) = v14;
  *(double *)(v10 + 4sub_1B5E6F544(4, 0, 0) = v13;
  double result = v12;
  *(double *)(v10 + 48) = v12;
  *(double *)(v10 + 56) = MaxY;
  *(double *)(v10 + 64) = v6;
  *(double *)(v10 + 72) = v7;
  *(double *)(v10 + 8sub_1B5E6F544(4, 0, 0) = v8;
  *(double *)(v10 + 88) = v9;
  return result;
}

__n128 sub_1B5FE9318(double a1, double a2)
{
  OUTLINED_FUNCTION_0_14();
  long long v10 = *(_OWORD *)(v2 + 48);
  long long v11 = *(_OWORD *)(v2 + 32);
  __n128 v9 = *(__n128 *)(v2 + 64);
  uint64_t v5 = *(void *)(v2 + 80);
  uint64_t v6 = *(void *)(v2 + 88);
  uint64_t v7 = swift_allocObject();
  *(double *)(v7 + 16) = a1;
  *(double *)(v7 + 24) = a2;
  *(_OWORD *)(v7 + 32) = v11;
  *(_OWORD *)(v7 + 48) = v10;
  __n128 result = v9;
  *(__n128 *)(v7 + 64) = v9;
  *(void *)(v7 + 8sub_1B5E6F544(4, 0, 0) = v5;
  *(void *)(v7 + 88) = v6;
  return result;
}

uint64_t BlueprintLayoutCollectionSectionCursor.deinit()
{
  return v0;
}

uint64_t BlueprintLayoutCollectionSectionCursor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

BOOL static BlueprintLayoutCollectionSectionCursor.== infix(_:_:)(double *a1, double *a2)
{
  BOOL v2 = a1[2] == a2[2] && a1[3] == a2[3];
  return v2
      && a1[4] == a2[4]
      && a1[5] == a2[5]
      && a1[6] == a2[6]
      && a1[7] == a2[7]
      && a1[8] == a2[8]
      && a1[9] == a2[9]
      && a1[10] == a2[10]
      && a1[11] == a2[11];
}

BOOL sub_1B5FE944C(double **a1, double **a2)
{
  return static BlueprintLayoutCollectionSectionCursor.== infix(_:_:)(*a1, *a2);
}

uint64_t type metadata accessor for BlueprintLayoutCollectionSectionCursor()
{
  return self;
}

uint64_t method lookup function for BlueprintLayoutCollectionSectionCursor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BlueprintLayoutCollectionSectionCursor);
}

double HiddenNavigationBarCompressionAnimation.topOffset.getter()
{
  return 0.0;
}

uint64_t HiddenNavigationBarCompressionAnimation.shouldAlwaysScrollToTopOnTap.getter()
{
  return 1;
}

double HiddenNavigationBarCompressionAnimation.maximumBarHeight(for:)()
{
  return 0.0;
}

id HiddenNavigationBarCompressionAnimation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id HiddenNavigationBarCompressionAnimation.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id HiddenNavigationBarCompressionAnimation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for HiddenNavigationBarCompressionAnimation()
{
  return self;
}

uint64_t StateCommand.__allocating_init(_:type:loggingBehavior:)(uint64_t a1, uint64_t a2, char *a3, char *a4)
{
  return StateCommand.init(_:type:loggingBehavior:)(a1, a2, a3, a4);
}

uint64_t StateCommand.init(_:type:loggingBehavior:)(uint64_t a1, uint64_t a2, char *a3, char *a4)
{
  char v4 = *a4;
  char v7 = *a3;
  char v6 = v4;
  return Command.init(_:type:loggingBehavior:)(a1, a2, &v7, &v6);
}

uint64_t StateCommand.__deallocating_deinit()
{
  Command.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B5FE96E8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for StateCommand()
{
  return __swift_instantiateGenericMetadata();
}

void UISearchController.presenterWillAppear(_:)(uint64_t a1)
{
}

void sub_1B5FE9744(void *a1, uint64_t a2, uint64_t a3)
{
}

void UISearchController.presenterWillDisappear(_:)(uint64_t a1)
{
}

void sub_1B5FE9768(void *a1, uint64_t a2, uint64_t a3)
{
}

void sub_1B5FE9780(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v7 = a1;
  a4(a3);
  swift_unknownObjectRelease();
}

void UISearchController.presenterDidDisappear(_:)(uint64_t a1)
{
}

void sub_1B5FE9804(void *a1, uint64_t a2, uint64_t a3)
{
}

void UISearchController.presenterDidAppear(_:)(uint64_t a1)
{
}

void sub_1B5FE9828(uint64_t a1, SEL *a2)
{
  id v5 = objc_msgSend(v2, sel_searchResultsController);
  if (v5)
  {
    char v6 = v5;
    id v7 = (void *)swift_dynamicCastObjCProtocolConditional();
    if (v7) {
      objc_msgSend(v7, *a2, a1);
    }
  }
}

void sub_1B5FE98A8(void *a1, uint64_t a2, uint64_t a3)
{
}

void static UIWindow.keyWindowScene.getter()
{
  if (qword_1EB64CF20 != -1) {
    swift_once();
  }
  JUMPOUT(0x1BA9B1EC0);
}

void (*static UIWindow.keyWindowScene.modify(void *a1))(void **a1, char a2)
{
  a1[1] = v1;
  if (qword_1EB64CF20 != -1) {
    swift_once();
  }
  *a1 = MEMORY[0x1BA9B1EC0](&unk_1EB64CAA0);
  return sub_1B5FE999C;
}

void sub_1B5FE999C(void **a1, char a2)
{
  objc_super v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    static UIWindow.keyWindowScene.setter(v2);
  }
  else
  {
    static UIWindow.keyWindowScene.setter(*a1);
  }
}

Swift::Void __swiftcall UIWindow.didBecomeKeyWindow()()
{
  swift_getObjectType();
  static UIWindow.keyWindowScene.setter(objc_msgSend(v0, sel_windowScene));
}

void sub_1B5FE9A4C(void *a1)
{
  id v1 = a1;
  UIWindow.didBecomeKeyWindow()();
}

id static UIWindow.didBecomeKeyWindowScene.getter()
{
  if (qword_1EB64D2F8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB64D2E8;
  return v0;
}

BOOL static TabBarSplitViewState.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t TabBarSplitViewState.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t TabBarSplitViewState.hashValue.getter()
{
  return sub_1B61B3940();
}

BOOL sub_1B5FE9B70(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static TabBarSplitViewState.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1B5FE9B7C()
{
  return TabBarSplitViewState.hashValue.getter();
}

uint64_t sub_1B5FE9B84()
{
  return TabBarSplitViewState.hash(into:)();
}

unint64_t sub_1B5FE9B90()
{
  unint64_t result = qword_1E9DAB4B8;
  if (!qword_1E9DAB4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB4B8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TabBarSplitViewState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5FE9CA8);
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TabBarSplitViewState()
{
  return &type metadata for TabBarSplitViewState;
}

uint64_t BlueprintCollectionViewDataSource.dragReorderDelegate.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t BlueprintCollectionViewDataSource.dragReorderDelegate.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_12_0();
  void *v2 = a1;
  v2[1] = a2;
  return swift_unknownObjectRelease();
}

uint64_t (*BlueprintCollectionViewDataSource.dragReorderDelegate.modify())()
{
  return j__swift_endAccess;
}

double BlueprintCollectionViewDataSource.diffableReorderDataSource.getter@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t BlueprintCollectionViewDataSource.sectionCollapsibleStateManager.getter()
{
  return swift_retain();
}

uint64_t BlueprintCollectionViewDataSource.sectionCollapsibleStateManager.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_12_0();
  *id v1 = a1;
  return swift_release();
}

uint64_t (*BlueprintCollectionViewDataSource.sectionCollapsibleStateManager.modify())()
{
  return j_j__swift_endAccess;
}

id BlueprintCollectionViewDataSource.__allocating_init(blueprintProvider:blueprintLayoutProvider:blueprintViewCellProvider:blueprintViewSupplementaryViewProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = objc_allocWithZone(v4);
  return BlueprintCollectionViewDataSource.init(blueprintProvider:blueprintLayoutProvider:blueprintViewCellProvider:blueprintViewSupplementaryViewProvider:)(a1, a2, a3, a4);
}

id BlueprintCollectionViewDataSource.init(blueprintProvider:blueprintLayoutProvider:blueprintViewCellProvider:blueprintViewSupplementaryViewProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v7 = (void *)((char *)v5 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v5) + 0x98));
  void *v7 = 0;
  v7[1] = 0;
  OUTLINED_FUNCTION_4_65();
  *(void *)((char *)v4 + *(void *)(v8 + 192)) = 0;
  OUTLINED_FUNCTION_4_65();
  *(void *)((char *)v4 + *(void *)(v9 + 200)) = 0;
  OUTLINED_FUNCTION_4_65();
  OUTLINED_FUNCTION_13_26(*(void *)(v10 + 160));
  uint64_t v37 = *(void *)(v11 + 80);
  OUTLINED_FUNCTION_2_3();
  uint64_t v13 = v12;
  OUTLINED_FUNCTION_33();
  v14();
  OUTLINED_FUNCTION_4_65();
  OUTLINED_FUNCTION_13_26(*(void *)(v15 + 168));
  uint64_t v17 = *(void *)(v16 + 88);
  OUTLINED_FUNCTION_2_3();
  uint64_t v19 = v18;
  OUTLINED_FUNCTION_33();
  v20();
  OUTLINED_FUNCTION_4_65();
  OUTLINED_FUNCTION_13_26(*(void *)(v21 + 176));
  uint64_t v23 = *(void *)(v22 + 96);
  OUTLINED_FUNCTION_2_3();
  uint64_t v25 = v24;
  OUTLINED_FUNCTION_33();
  v26();
  OUTLINED_FUNCTION_4_65();
  OUTLINED_FUNCTION_13_26(*(void *)(v27 + 184));
  uint64_t v29 = *(void *)(v28 + 104);
  OUTLINED_FUNCTION_2_3();
  uint64_t v31 = v30;
  OUTLINED_FUNCTION_33();
  v32();
  v40.receiver = v5;
  v40.super_class = ObjectType;
  id v33 = objc_msgSendSuper2(&v40, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(a4, v29);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(a3, v23);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a2, v17);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v37);
  return v33;
}

Swift::Void __swiftcall BlueprintCollectionViewDataSource.register(in:)(UICollectionView *in)
{
  OUTLINED_FUNCTION_8_3();
  unsigned int v4 = v3;
  objc_msgSend(v5, sel_setDataSource_, v1);
  v22[0] = in;
  OUTLINED_FUNCTION_42_15();
  uint64_t v7 = *(void *)(v6 + 128);
  OUTLINED_FUNCTION_42_15();
  uint64_t v9 = *(void *)(v8 + 96);
  v10(v22, v9, v7);
  OUTLINED_FUNCTION_45_11();
  v22[0] = in;
  OUTLINED_FUNCTION_42_15();
  uint64_t v12 = *(void *)(v11 + 136);
  OUTLINED_FUNCTION_42_15();
  uint64_t v14 = *(void *)(v13 + 104);
  v15(v22, v14, v12);
  sub_1B5FEA40C(0, 0, 0);
  sub_1B5FEA40C(1, 0, 0);
  OUTLINED_FUNCTION_45_11();
  uint64_t v17 = (uint64_t *)(v1 + *(void *)(v16 + 200));
  OUTLINED_FUNCTION_24();
  uint64_t v18 = *v17;
  if (*v17)
  {
    swift_retain();
    sub_1B5FEA528(0, 0);
    uint64_t v19 = swift_allocObject();
    swift_unknownObjectWeakInit();
    CGRect v20 = (void *)swift_allocObject();
    long long v20[2] = v4[11];
    v20[3] = v9;
    v20[4] = v14;
    v20[5] = v4[15];
    v20[6] = v7;
    v20[7] = v12;
    v20[8] = v4[18];
    v20[9] = v19;
    v20[10] = v18;
    v20[11] = in;
    swift_retain();
    swift_retain();
    uint64_t v21 = in;
    BlueprintSectionCollapsibleStateManager.onStateChange(_:)((uint64_t)sub_1B5FEAAE4, (uint64_t)v20);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
}

void sub_1B5FEA40C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B5FEFD30(0, (unint64_t *)&unk_1EB644518, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for CollectionReusableView);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v7 = (void *)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  sub_1B5FEFC18(a2, a3, (unint64_t *)&unk_1EB644518, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for CollectionReusableView);
  id v8 = (id)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_registerClass_forSupplementaryViewOfKind_withReuseIdentifier_, ObjCClassFromMetadata, v7, v8);
}

void sub_1B5FEA528(uint64_t a1, uint64_t a2)
{
  sub_1B5FEFD30(0, (unint64_t *)&unk_1EB641440, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for CollectionViewCell);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  sub_1B5FEFC18(a1, a2, (unint64_t *)&unk_1EB641440, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for CollectionViewCell);
  id v6 = (id)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_registerClass_forCellWithReuseIdentifier_, ObjCClassFromMetadata, v6);
}

uint64_t sub_1B5FEA5EC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1B5FEA624(uint64_t a1, char *a2, void *a3, void *a4)
{
  uint64_t v32 = a1;
  id v33 = a2;
  uint64_t v28 = sub_1B61AFCB0();
  uint64_t v6 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  id v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[1] = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v12 = swift_getAssociatedConformanceWitness();
  uint64_t v36 = AssociatedTypeWitness;
  uint64_t v37 = v10;
  uint64_t v29 = v12;
  uint64_t v30 = AssociatedConformanceWitness;
  uint64_t v38 = AssociatedConformanceWitness;
  uint64_t v39 = v12;
  uint64_t v13 = type metadata accessor for Blueprint();
  uint64_t v31 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v27 - v14;
  uint64_t v16 = v33 + 16;
  swift_beginAccess();
  uint64_t v17 = (char *)MEMORY[0x1BA9B1EC0](v16);
  if (v17)
  {
    v27[0] = a4;
    id v33 = v17;
    BlueprintProviderType.blueprint.getter();
    swift_getWitnessTable();
    uint64_t v36 = AssociatedTypeWitness;
    uint64_t v37 = v10;
    uint64_t v38 = v30;
    uint64_t v39 = v29;
    type metadata accessor for BlueprintSection();
    swift_getWitnessTable();
    sub_1B61B2A80();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v13);
    if (v35 != 1)
    {
      uint64_t v18 = v34;
      swift_checkMetadataState();
      swift_getWitnessTable();
      uint64_t v19 = sub_1B61B29F0();
      if (v19 < 0)
      {
        __break(1u);
        return;
      }
      uint64_t v20 = v19;
      if (v19)
      {
        uint64_t v36 = MEMORY[0x1E4FBC860];
        sub_1B5E4ED20();
        uint64_t v21 = 0;
        uint64_t v22 = v36;
        uint64_t v23 = v28;
        do
        {
          MEMORY[0x1BA9ACDF0](v21, v18);
          uint64_t v36 = v22;
          unint64_t v24 = *(void *)(v22 + 16);
          if (v24 >= *(void *)(v22 + 24) >> 1)
          {
            sub_1B5E4ED20();
            uint64_t v23 = v28;
            uint64_t v22 = v36;
          }
          ++v21;
          *(void *)(v22 + 16) = v24 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v22+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v24, v8, v23);
        }
        while (v20 != v21);
      }
      BlueprintSectionCollapsibleStateManager.state(for:)((BOOL *)&v36);
      char v25 = v36;
      uint64_t v26 = (void *)sub_1B61B24D0();
      swift_bridgeObjectRelease();
      if (v25) {
        objc_msgSend(v27[0], sel_insertItemsAtIndexPaths_, v26);
      }
      else {
        objc_msgSend(v27[0], sel_deleteItemsAtIndexPaths_, v26);
      }
    }
  }
}

uint64_t sub_1B5FEAA9C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1B5FEAAE4(uint64_t a1)
{
  sub_1B5FEA624(a1, *(char **)(v1 + 72), *(void **)(v1 + 80), *(void **)(v1 + 88));
}

Swift::Void __swiftcall BlueprintCollectionViewDataSource.registerDiffableDataSource(in:)(UICollectionView *in)
{
  OUTLINED_FUNCTION_134();
  uint64_t v7 = v2;
  OUTLINED_FUNCTION_24_8();
  OUTLINED_FUNCTION_24_8();
  v4(&v7, *(void *)(v3 + 96));
  uint64_t v7 = in;
  OUTLINED_FUNCTION_24_8();
  OUTLINED_FUNCTION_24_8();
  v6(&v7, *(void *)(v5 + 104));
  sub_1B5FEA40C(0, 0, 0);
  sub_1B5FEA40C(1, 0, 0);
}

uint64_t BlueprintCollectionViewDataSource.registerKeyCommandTraversal(observable:)(uint64_t a1)
{
  *(void *)((char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0xC0)) = a1;
  swift_release();
  return swift_retain();
}

void BlueprintCollectionViewDataSource.identifiers(for:)()
{
}

uint64_t sub_1B5FEACD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  v16[1] = a1;
  v16[2] = a2;
  uint64_t v17 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for BlueprintItem();
  v16[0] = sub_1B61B2F80();
  uint64_t v6 = *(void *)(v16[0] - 8);
  MEMORY[0x1F4188790](v16[0]);
  id v8 = (char *)v16 - v7;
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v10 = swift_getAssociatedConformanceWitness();
  uint64_t v18 = v9;
  uint64_t v19 = AssociatedTypeWitness;
  uint64_t v20 = v10;
  uint64_t v21 = AssociatedConformanceWitness;
  type metadata accessor for Blueprint();
  Blueprint.item(indexPath:)();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v5) == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, void))(v6 + 8))(v8, v16[0]);
    uint64_t v12 = 0;
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v12 = BlueprintItem.identifier.getter();
    uint64_t v13 = v14;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v8, v5);
  }
  uint64_t v15 = v17;
  uint64_t *v17 = v12;
  v15[1] = v13;
  return result;
}

uint64_t sub_1B5FEAEE4()
{
  OUTLINED_FUNCTION_21_19();
  return sub_1B5FEACD0(v0, v1, v2);
}

void BlueprintCollectionViewDataSource.indexPaths(for:)()
{
}

void sub_1B5FEAF34()
{
  OUTLINED_FUNCTION_83();
  uint64_t v16 = v1;
  uint64_t v17 = v2;
  uint64_t v15 = v3;
  OUTLINED_FUNCTION_8_3();
  uint64_t v5 = v4;
  uint64_t v6 = v0[14];
  uint64_t v7 = v0[10];
  uint64_t v25 = OUTLINED_FUNCTION_49_13();
  uint64_t v26 = OUTLINED_FUNCTION_49_13();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v28 = swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_13();
  uint64_t v10 = v9;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v14 - v12;
  BlueprintProviderType.blueprint.getter();
  void v18[2] = v7;
  long long v19 = *(_OWORD *)(v5 + 88);
  uint64_t v20 = v0[13];
  uint64_t v21 = v6;
  long long v22 = *(_OWORD *)(v5 + 120);
  long long v23 = *(_OWORD *)(v5 + 136);
  unint64_t v24 = v13;
  v17(v16, v18, v15);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
  OUTLINED_FUNCTION_73();
}

void sub_1B5FEB108()
{
}

Swift::Int __swiftcall BlueprintCollectionViewDataSource.numberOfSections(in:)(UICollectionView *in)
{
  OUTLINED_FUNCTION_134();
  v9[0] = OUTLINED_FUNCTION_33_10();
  v9[1] = OUTLINED_FUNCTION_33_10();
  long long v9[2] = swift_getAssociatedConformanceWitness();
  v9[3] = swift_getAssociatedConformanceWitness();
  uint64_t v1 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_13();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v9 - v5;
  OUTLINED_FUNCTION_134();
  BlueprintProviderType.blueprint.getter();
  swift_getWitnessTable();
  Swift::Int v7 = sub_1B61B29F0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  return v7;
}

Swift::Int sub_1B5FEB2CC(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = a1;
  Swift::Int v6 = BlueprintCollectionViewDataSource.numberOfSections(in:)(v5);

  return v6;
}

Swift::Int __swiftcall BlueprintCollectionViewDataSource.collectionView(_:numberOfItemsInSection:)(UICollectionView *_, Swift::Int numberOfItemsInSection)
{
  OUTLINED_FUNCTION_83();
  uint64_t v3 = v2;
  v30[0] = v4;
  uint64_t v5 = *MEMORY[0x1E4FBC8C8] & *v2;
  uint64_t v6 = OUTLINED_FUNCTION_35_1();
  uint64_t v7 = OUTLINED_FUNCTION_35_1();
  OUTLINED_FUNCTION_43_1();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_43_1();
  uint64_t v9 = swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintSection();
  OUTLINED_FUNCTION_0_13();
  v30[1] = v11;
  v30[2] = v10;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v12);
  uint64_t v32 = v6;
  uint64_t v33 = v7;
  uint64_t v34 = AssociatedConformanceWitness;
  uint64_t v35 = v9;
  uint64_t v13 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_13();
  uint64_t v15 = v14;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v30 - v17;
  long long v19 = (void *)((char *)v3 + *(void *)(v5 + 200));
  OUTLINED_FUNCTION_24();
  if (!*v19) {
    goto LABEL_3;
  }
  swift_retain();
  BlueprintProviderType.blueprint.getter();
  OUTLINED_FUNCTION_36_11();
  OUTLINED_FUNCTION_59();
  v22(v20, v21);
  BlueprintSectionCollapsibleStateManager.state(for:)(&v31);
  swift_release();
  OUTLINED_FUNCTION_59();
  v25(v23, v24);
  if (v31)
  {
LABEL_3:
    BlueprintProviderType.blueprint.getter();
    OUTLINED_FUNCTION_36_11();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v13);
    swift_getWitnessTable();
    sub_1B61B29F0();
    OUTLINED_FUNCTION_5_1();
    v28(v26, v27);
  }
  OUTLINED_FUNCTION_73();
  return result;
}

Swift::Int sub_1B5FEB60C(void *a1, uint64_t a2, void *a3, Swift::Int a4)
{
  id v6 = a3;
  uint64_t v7 = a1;
  Swift::Int v8 = BlueprintCollectionViewDataSource.collectionView(_:numberOfItemsInSection:)(v7, a4);

  return v8;
}

void BlueprintCollectionViewDataSource.collectionView(_:cellForItemAt:)()
{
  void (*v46)(void *__return_ptr, char *, uint64_t, long long *, void *);
  uint64_t v47;
  void *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  CGFloat Height;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t ObjectType;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  void (*v74)(void);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(void);
  uint64_t v80;
  uint64_t v81;
  void *v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  void (*v94)(uint64_t (*)(), void *, uint64_t, uint64_t);
  void (*v95)(void);
  void (*v96)(void);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  void (*v105)(void, void);
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  uint64_t AssociatedConformanceWitness;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  long long v124;
  uint64_t v125;
  long long v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  void v130[3];
  uint64_t v131;
  uint64_t v132;
  CGRect v133;

  OUTLINED_FUNCTION_83();
  uint64_t v1 = v0;
  uint64_t v121 = v2;
  uint64_t v118 = v3;
  uint64_t v101 = (void *)(*MEMORY[0x1E4FBC8C8] & *v0);
  uint64_t v4 = v101;
  uint64_t v5 = sub_1B61AF570();
  MEMORY[0x1F4188790](v5 - 8);
  OUTLINED_FUNCTION_4();
  long long v97 = v6;
  OUTLINED_FUNCTION_134();
  Swift::Int v8 = *(void **)(v7 + 112);
  uint64_t v9 = v4[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_13();
  uint64_t v102 = v11;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_82();
  int v103 = v13;
  uint64_t v119 = v4;
  long long v117 = v4[15];
  long long v116 = v4[11];
  uint64_t v100 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintLayoutItem();
  OUTLINED_FUNCTION_0_13();
  uint64_t v111 = v15;
  uint64_t v112 = v14;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_82();
  uint64_t v123 = v17;
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  v130[0] = v18;
  v130[1] = AssociatedTypeWitness;
  v130[2] = v19;
  uint64_t v131 = v20;
  uint64_t v21 = v9;
  uint64_t v22 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_13();
  uint64_t v24 = v23;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v97 - v26;
  uint64_t v104 = (uint64_t *)AssociatedTypeWitness;
  uint64_t v115 = type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_0_13();
  uint64_t v122 = v28;
  MEMORY[0x1F4188790](v29);
  OUTLINED_FUNCTION_12();
  uint64_t v107 = v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)&v97 - v32;
  uint64_t v34 = v119;
  uint64_t v35 = (char *)v0 + v119[20];
  uint64_t v113 = v8;
  uint64_t v114 = v21;
  OUTLINED_FUNCTION_17();
  uint64_t v36 = v123;
  long long v106 = v35;
  BlueprintProviderType.blueprint.getter();
  uint64_t v37 = v121;
  OUTLINED_FUNCTION_43_1();
  Blueprint.subscript.getter();
  uint64_t v38 = *(void (**)(void, void))(v24 + 8);
  uint64_t v108 = v27;
  uint64_t v109 = v24 + 8;
  uint64_t v110 = v22;
  uint64_t v105 = v38;
  v38(v27, v22);
  BlueprintLayoutProviderType.layoutBlueprint.getter(v116, v117);
  uint64_t v39 = swift_getAssociatedTypeWitness();
  uint64_t v40 = swift_getAssociatedConformanceWitness();
  uint64_t v41 = v100;
  *(void *)&uint64_t v126 = v39;
  *((void *)&v126 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v100;
  uint64_t v127 = v40;
  long long v128 = AssociatedConformanceWitness;
  type metadata accessor for BlueprintLayout();
  uint64_t v42 = OUTLINED_FUNCTION_43_1();
  BlueprintLayout.subscript.getter(v42, v43);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_5_1();
  v44();
  *(void *)&uint64_t v126 = v118;
  uint64_t v45 = v34[16];
  objc_super v46 = *(void (**)(void *__return_ptr, char *, uint64_t, long long *, void *))(v45 + 64);
  uint64_t v119 = v1;
  uint64_t v47 = v34[12];
  uint64_t AssociatedConformanceWitness = (uint64_t)v33;
  long long v98 = v45;
  uint64_t v99 = v47;
  v46(v130, v33, v36, &v126, v37);
  uint64_t v48 = (void *)v130[0];
  *(void *)&uint64_t v124 = v130[0];
  int v49 = sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C00);
  OUTLINED_FUNCTION_46_1(v49, &qword_1EB649508);
  uint64_t v50 = v48;
  OUTLINED_FUNCTION_41_18();
  if (swift_dynamicCast())
  {
    sub_1B5E30E70(&v126, (uint64_t)v130);
    uint64_t v51 = v131;
    int v52 = v132;
    __swift_project_boxed_opaque_existential_1(v130, v131);
    v133.origin.x = (*(double (**)(uint64_t))(v101[18] + 16))(v41);
    Height = CGRectGetHeight(v133);
    (*(void (**)(uint64_t, uint64_t, CGFloat))(v52 + 8))(v51, v52, Height);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v130);
  }
  else
  {
    OUTLINED_FUNCTION_34_13();
    sub_1B5FEFCDC((uint64_t)&v126, &qword_1EB649510, &qword_1EB649508);
  }
  swift_getObjectType();
  int v54 = dynamic_cast_existential_1_conditional((uint64_t)v1);
  uint64_t v56 = v113;
  if (v54)
  {
    uint64_t v57 = v55;
    uint64_t v58 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v119) + 0xC0);
    char v59 = *(void *)((char *)v119 + v58);
    char v60 = v1;
    if (v59)
    {
      swift_retain();
      sub_1B61B0430();
      swift_release();
      char v59 = LOBYTE(v130[0]);
    }
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16))(v59, ObjectType, v57);
    if (*(void *)((char *)v119 + v58))
    {
      *(void *)(swift_allocObject() + 24) = v57;
      swift_unknownObjectWeakInit();
      swift_retain();
      sub_1B61B0440();
      swift_release();
      swift_release();
      uint64_t v100 = v132;
      __swift_project_boxed_opaque_existential_1(v130, v131);
      char v62 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v57 + 32))(ObjectType, v57);
      uint64_t v56 = v113;
      sub_1B61B00C0();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v130);
    }
    else
    {
    }
  }
  uint64_t v63 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(v102 + 16))(v103, AssociatedConformanceWitness, v104);
  OUTLINED_FUNCTION_46_1(v63, (unint64_t *)&unk_1EB64B8B0);
  if (swift_dynamicCast())
  {
    sub_1B5E30E70(&v126, (uint64_t)v130);
    uint64_t v64 = v131;
    uint64_t v65 = v132;
    __swift_project_boxed_opaque_existential_1(v130, v131);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v65 + 8))(&v124, v64, v65);
    if (v125)
    {
      sub_1B5E30E70(&v124, (uint64_t)&v126);
      uint64_t v66 = objc_msgSend(v1, sel_contentView);
      uint64_t v67 = v128;
      uint64_t v113 = v129;
      long long v68 = __swift_project_boxed_opaque_existential_1(&v126, v128);
      sub_1B61B0F80();
      uint64_t v104 = &v97;
      OUTLINED_FUNCTION_0_13();
      MEMORY[0x1F4188790](v69);
      (*(void (**)(char *, void *, uint64_t))(v71 + 16))((char *)&v97 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0), v68, v67);
      sub_1B5FF1908();
      uint64_t v72 = (void *)sub_1B61B0F70();
      sub_1B61B2DC0();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v126);
    }
    else
    {
      sub_1B5FEFCDC((uint64_t)&v124, &qword_1EB64A320, &qword_1EB64A0A0);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v130);
  }
  else
  {
    OUTLINED_FUNCTION_34_13();
    sub_1B5FEFCDC((uint64_t)&v126, &qword_1EB64B8C0, (unint64_t *)&unk_1EB64B8B0);
  }
  BlueprintProviderType.blueprint.getter();
  uint64_t v73 = v107;
  Blueprint.subscript.getter();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_59();
  v74();
  uint64_t v75 = v115;
  uint64_t v76 = BlueprintItem.identifier.getter();
  uint64_t v78 = v77;
  uint64_t v80 = v122 + 8;
  long long v79 = *(void (**)(void))(v122 + 8);
  long long v81 = ((uint64_t (*)(uint64_t, uint64_t))v79)(v73, v75);
  *(void *)&uint64_t v124 = v1;
  OUTLINED_FUNCTION_46_1(v81, &qword_1EB6493C8);
  uint64_t v82 = v1;
  OUTLINED_FUNCTION_41_18();
  if (swift_dynamicCast())
  {
    sub_1B5E30E70(&v126, (uint64_t)v130);
    uint64_t v121 = v1;
    uint64_t v83 = v56;
    uint64_t v84 = v131;
    long long v85 = v132;
    uint64_t v113 = __swift_project_boxed_opaque_existential_1(v130, v131);
    long long v86 = swift_allocObject();
    uint64_t v122 = v80;
    uint64_t v87 = v83;
    uint64_t v88 = v86;
    swift_unknownObjectWeakInit();
    uint64_t v89 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v90 = (void *)swift_allocObject();
    uint64_t v91 = v116;
    v90[2] = v114;
    void v90[3] = v91;
    v90[4] = v99;
    uint64_t v92 = v101;
    v90[5] = v101[13];
    v90[6] = v87;
    uint64_t v93 = v98;
    v90[7] = v117;
    v90[8] = v93;
    v90[9] = v92[17];
    v90[10] = v92[18];
    v90[11] = v88;
    v90[12] = v76;
    v90[13] = v78;
    v90[14] = v89;
    uint64_t v94 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v85 + 8);
    swift_retain();
    swift_retain();
    v94(sub_1B5FEC798, v90, v84, v85);
    swift_release();
    OUTLINED_FUNCTION_5_1();
    v95();
    OUTLINED_FUNCTION_59();
    v79();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v130);
  }
  else
  {
    OUTLINED_FUNCTION_34_13();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_5_1();
    v96();
    ((void (*)(uint64_t, uint64_t))v79)(AssociatedConformanceWitness, v75);
    sub_1B5FEFCDC((uint64_t)&v126, qword_1EB6493D0, &qword_1EB6493C8);
  }
  OUTLINED_FUNCTION_73();
}

void sub_1B5FEC27C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1B5E001A8(255, a3);
    unint64_t v4 = sub_1B61B2F80();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1B5FEC2D8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1BA9B1EC0](v4);
  if (result)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B5FEC368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v35 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v37 = swift_getAssociatedConformanceWitness();
  uint64_t v6 = type metadata accessor for Blueprint();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v29 - v8;
  sub_1B5FED3B4(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = sub_1B61AFCB0();
  uint64_t v31 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v16 = MEMORY[0x1BA9B1EC0](a1 + 16);
  if (!v16) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v17 = (void *)v16;
  uint64_t v30 = a4;
  BlueprintProviderType.blueprint.getter();
  Blueprint.indexPath(for:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
  {

    sub_1B5E4B3B4((uint64_t)v12);
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v18 = v31;
  uint64_t v19 = v30 + 16;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v15, v12, v13);
  swift_beginAccess();
  uint64_t v20 = MEMORY[0x1BA9B1EC0](v19);
  if (!v20)
  {
LABEL_9:

    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v13);
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v21 = (void *)v20;
  type metadata accessor for SwipeActionCollectionView();
  uint64_t v22 = swift_dynamicCastClass();
  if (!v22 || (uint64_t v23 = v22, !sub_1B605C69C()))
  {

    goto LABEL_9;
  }
  uint64_t v25 = v24;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v27 = (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t))(v25 + 56))(v23, v15, ObjectType, v25);

  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v13);
  return v27;
}

uint64_t sub_1B5FEC750()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5FEC798()
{
  return sub_1B5FEC368(v0[11], v0[12], v0[13], v0[14]);
}

uint64_t sub_1B5FEC7D8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B5FEC810(unsigned __int8 *a1)
{
  return sub_1B5FEC2D8(a1, v1);
}

id sub_1B5FEC818(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1B61AFCB0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B61AFC40();
  id v9 = a3;
  id v10 = a1;
  BlueprintCollectionViewDataSource.collectionView(_:cellForItemAt:)();
  uint64_t v12 = v11;

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v12;
}

uint64_t BlueprintCollectionViewDataSource.collectionView(_:viewForSupplementaryElementOfKind:at:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v126 = a2;
  uint64_t v127 = a4;
  uint64_t v125 = a3;
  long long v128 = a1;
  OUTLINED_FUNCTION_10_36();
  uint64_t v123 = v6;
  uint64_t v7 = v5[15];
  uint64_t v8 = v5[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintLayoutItem();
  OUTLINED_FUNCTION_0_13();
  uint64_t v107 = v11;
  uint64_t v108 = v10;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_82();
  uint64_t v106 = v13;
  uint64_t v14 = v5[14];
  uint64_t v113 = v4;
  uint64_t v15 = v5[10];
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v17 = swift_getAssociatedConformanceWitness();
  type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_0_13();
  uint64_t v104 = v19;
  uint64_t v105 = v18;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_82();
  uint64_t v103 = v21;
  uint64_t v111 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_13();
  uint64_t v124 = v22;
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_4();
  uint64_t v122 = v24;
  uint64_t v117 = type metadata accessor for BlueprintViewSupplementaryData();
  OUTLINED_FUNCTION_3_0();
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_4();
  uint64_t v121 = v26;
  uint64_t v120 = v7;
  uint64_t v118 = v8;
  uint64_t v114 = swift_getAssociatedTypeWitness();
  uint64_t v27 = v125;
  uint64_t v119 = AssociatedTypeWitness;
  uint64_t v112 = swift_getAssociatedConformanceWitness();
  uint64_t v102 = type metadata accessor for BlueprintLayoutSection();
  OUTLINED_FUNCTION_0_13();
  uint64_t v29 = v28;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v30);
  OUTLINED_FUNCTION_82();
  uint64_t v101 = v31;
  uint64_t v32 = swift_getAssociatedTypeWitness();
  uint64_t v115 = v15;
  uint64_t v116 = v14;
  uint64_t v33 = swift_getAssociatedConformanceWitness();
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_13();
  uint64_t v109 = v35;
  uint64_t v110 = v34;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v36);
  v132[0] = v32;
  v132[1] = v16;
  v132[2] = v33;
  v132[3] = v17;
  uint64_t v37 = type metadata accessor for BlueprintSection();
  OUTLINED_FUNCTION_0_13();
  uint64_t v39 = v38;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v40);
  uint64_t v42 = (char *)v99 - v41;
  sub_1B5FED3B4(0, (unint64_t *)&qword_1EB6463B8, (void (*)(uint64_t))type metadata accessor for CollectionViewSupplementaryKind.Source);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v43);
  uint64_t v45 = (void *)((char *)v99 - v44);
  sub_1B61B1F70();
  uint64_t v46 = (uint64_t)v126;
  unint64_t v47 = sub_1B61B35E0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v47 > 1)
  {
    __break(1u);
  }
  else
  {
    v99[1] = v29;
    uint64_t v100 = v42;
    uint64_t v49 = v127;
    uint64_t v50 = (void *)sub_1B5FED408(v128, v46, v27, v127);
    if (!v50) {
      return sub_1B5FED5E4(v47 != 0, v49, 0, 0);
    }
    v99[0] = v39;
    uint64_t v125 = v37;
    id v126 = v50;
    OUTLINED_FUNCTION_24();
    uint64_t v51 = OUTLINED_FUNCTION_17();
    sub_1B5FED728(v51, v52);
    uint64_t v53 = type metadata accessor for CollectionViewSupplementaryKind.Source();
    uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v45, 1, v53);
    if (result != 1)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v55 = *v45;
      if (EnumCaseMultiPayload == 1)
      {
        LODWORD(v125) = v47 != 0;
        sub_1B5FED7A8();
        uint64_t v102 = v55;
        OUTLINED_FUNCTION_107();
        v56();
        OUTLINED_FUNCTION_24_1();
        BlueprintProviderType.blueprint.getter();
        uint64_t v57 = v103;
        Blueprint.subscript.getter();
        OUTLINED_FUNCTION_5_1();
        v58();
        OUTLINED_FUNCTION_24_1();
        OUTLINED_FUNCTION_55_8();
        OUTLINED_FUNCTION_12_33();
        uint64_t v59 = v106;
        uint64_t v60 = OUTLINED_FUNCTION_17();
        BlueprintLayout.subscript.getter(v60, v61);
        OUTLINED_FUNCTION_3_0();
        OUTLINED_FUNCTION_5_1();
        v62();
        OUTLINED_FUNCTION_24_1();
        v132[0] = v128;
        uint64_t v63 = v117;
        uint64_t v64 = v121;
        OUTLINED_FUNCTION_33();
        v65();
        unsigned char *v64 = v125;
        *(void *)&v64[*(int *)(v63 + 24)] = v102;
        uint64_t v66 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void *, unsigned char *, void))(*(void *)(v123 + 136)
                                                                                             + 96))(v57, v59, v132, v64, *(void *)(v123 + 104));
        sub_1B5FED814((uint64_t)v64);
        uint64_t v131 = v66;
        uint64_t v67 = sub_1B5DFF760(0, &qword_1EB6490A0);
        OUTLINED_FUNCTION_46_1(v67, &qword_1EB649508);
        id v68 = v66;
        if (OUTLINED_FUNCTION_26_19())
        {
          OUTLINED_FUNCTION_36_15();
          id v69 = v126;
          objc_msgSend(v126, sel_frame);
          CGRectGetHeight(v133);

          OUTLINED_FUNCTION_5_1();
          v70();
          OUTLINED_FUNCTION_5_1();
          v71();
          uint64_t v72 = OUTLINED_FUNCTION_30_12();
          v73(v72);
LABEL_10:
          uint64_t v90 = OUTLINED_FUNCTION_43_1();
          v91(v90);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v132);
          return (uint64_t)v64;
        }
        OUTLINED_FUNCTION_53_12();
        OUTLINED_FUNCTION_5_1();
        v92();
        OUTLINED_FUNCTION_5_1();
        v93();
        uint64_t v94 = OUTLINED_FUNCTION_30_12();
        v95(v94);
      }
      else
      {
        LODWORD(v122) = v47 != 0;
        OUTLINED_FUNCTION_24_1();
        BlueprintProviderType.blueprint.getter();
        uint64_t v74 = v127;
        uint64_t v75 = sub_1B61AFC90();
        uint64_t v76 = v100;
        Blueprint.subscript.getter(v75, v110);
        OUTLINED_FUNCTION_5_1();
        v77();
        OUTLINED_FUNCTION_24_1();
        OUTLINED_FUNCTION_55_8();
        uint64_t v78 = sub_1B61AFC90();
        uint64_t v79 = OUTLINED_FUNCTION_12_33();
        uint64_t v80 = v101;
        BlueprintLayout.subscript.getter(v78, v79);
        OUTLINED_FUNCTION_3_0();
        OUTLINED_FUNCTION_5_1();
        v81();
        OUTLINED_FUNCTION_24_1();
        v132[0] = v128;
        uint64_t v82 = v117;
        uint64_t v64 = v121;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v124 + 16))(&v121[*(int *)(v117 + 20)], v74, v111);
        unsigned char *v64 = v122;
        *(void *)&v64[*(int *)(v82 + 24)] = v55;
        uint64_t v83 = (void *)(*(uint64_t (**)(char *, uint64_t, void *, unsigned char *, void))(*(void *)(v123 + 136)
                                                                                            + 88))(v76, v80, v132, v64, *(void *)(v123 + 104));
        sub_1B5FED814((uint64_t)v64);
        uint64_t v131 = v83;
        uint64_t v84 = sub_1B5DFF760(0, &qword_1EB6490A0);
        OUTLINED_FUNCTION_46_1(v84, &qword_1EB649508);
        id v85 = v83;
        if (OUTLINED_FUNCTION_26_19())
        {
          OUTLINED_FUNCTION_36_15();
          id v86 = v126;
          objc_msgSend(v126, sel_frame);
          CGRectGetHeight(v134);

          OUTLINED_FUNCTION_5_1();
          v87();
          uint64_t v88 = OUTLINED_FUNCTION_29_17();
          v89(v88);
          goto LABEL_10;
        }
        OUTLINED_FUNCTION_53_12();
        OUTLINED_FUNCTION_5_1();
        v96();
        uint64_t v97 = OUTLINED_FUNCTION_29_17();
        v98(v97);
      }
      sub_1B5FEFCDC((uint64_t)&v130, &qword_1EB649510, &qword_1EB649508);
      return (uint64_t)v64;
    }
  }
  __break(1u);
  return result;
}

void sub_1B5FED3B4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B61B2F80();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1B5FED408(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = objc_msgSend(a1, sel_collectionViewLayout);
  id v9 = (void *)sub_1B61B20C0();
  uint64_t v10 = (void *)sub_1B61AFC00();
  id v11 = objc_msgSend(v8, sel_layoutAttributesForSupplementaryViewOfKind_atIndexPath_, v9, v10);

  if (!v11)
  {
LABEL_5:
    id v19 = objc_msgSend(a1, sel_collectionViewLayout);
    sub_1B5DFF760(0, (unint64_t *)&qword_1EB649990);
    sub_1B5E001A8(0, &qword_1EB64B3D8);
    if (swift_dynamicCast())
    {
      sub_1B5E30E70(v17, (uint64_t)v20);
      uint64_t v14 = v21;
      uint64_t v15 = v22;
      __swift_project_boxed_opaque_existential_1(v20, v21);
      uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8))(a2, a3, a4, v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      if (v13) {
        return v13;
      }
    }
    else
    {
      uint64_t v18 = 0;
      memset(v17, 0, sizeof(v17));
      sub_1B5FEFCDC((uint64_t)v17, (unint64_t *)&unk_1E9DAB4E0, &qword_1EB64B3D8);
    }
    return 0;
  }
  type metadata accessor for BlueprintLayoutCollectionLayoutAttributes();
  uint64_t v12 = swift_dynamicCastClass();
  if (!v12)
  {

    goto LABEL_5;
  }
  return v12;
}

uint64_t sub_1B5FED5E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  id v8 = (void *)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  sub_1B5FEFC18(a3, a4, (unint64_t *)&unk_1EB644518, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for CollectionReusableView);
  id v9 = (void *)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)sub_1B61AFC00();
  id v11 = objc_msgSend(v5, sel_dequeueReusableSupplementaryViewOfKind_withReuseIdentifier_forIndexPath_, v8, v9, v10);

  sub_1B5FEFD30(0, (unint64_t *)&unk_1EB644518, (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))type metadata accessor for CollectionReusableView);
  return swift_dynamicCastClassUnconditional();
}

uint64_t sub_1B5FED728(uint64_t a1, uint64_t a2)
{
  sub_1B5FED3B4(0, (unint64_t *)&qword_1EB6463B8, (void (*)(uint64_t))type metadata accessor for CollectionViewSupplementaryKind.Source);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1B5FED7A8()
{
  if (!qword_1EB63E420)
  {
    sub_1B61AFCB0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB63E420);
    }
  }
}

uint64_t sub_1B5FED814(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BlueprintViewSupplementaryData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1B5FED870(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1B61AFCB0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = (void *)sub_1B61B20F0();
  uint64_t v11 = v10;
  sub_1B61AFC40();
  id v12 = a3;
  id v13 = a1;
  uint64_t v14 = (void *)BlueprintCollectionViewDataSource.collectionView(_:viewForSupplementaryElementOfKind:at:)(v12, v9, v11, (uint64_t)v8);

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v14;
}

BOOL BlueprintCollectionViewDataSource.collectionView(_:canMoveItemAt:)()
{
  OUTLINED_FUNCTION_0_1();
  return *v0 != 0;
}

BOOL sub_1B5FEDA08()
{
  uint64_t v0 = sub_1B61AFCB0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B61AFC40();
  BOOL v4 = BlueprintCollectionViewDataSource.collectionView(_:canMoveItemAt:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t BlueprintCollectionViewDataSource.collectionView(_:moveItemAt:to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)((char *)v3 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v3) + 0x98));
  uint64_t result = OUTLINED_FUNCTION_24();
  if (*v6)
  {
    uint64_t v8 = v6[1];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16);
    swift_unknownObjectRetain();
    v10(a2, a3, ObjectType, v8);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B5FEDBB0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1B61AFCB0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  id v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v16 - v10;
  sub_1B61AFC40();
  sub_1B61AFC40();
  id v12 = a3;
  id v13 = a1;
  BlueprintCollectionViewDataSource.collectionView(_:moveItemAt:to:)((uint64_t)v13, (uint64_t)v11, (uint64_t)v9);

  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  return ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
}

Swift::OpaquePointer_optional __swiftcall BlueprintCollectionViewDataSource.indexTitles(for:)(UICollectionView *a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_46_11();
  v16[0] = v1;
  v16[1] = OUTLINED_FUNCTION_46_11();
  v16[2] = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_0_13();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_25_18();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = BlueprintProviderType.blueprint.getter();
  OUTLINED_FUNCTION_46_1(v7, &qword_1EB642300);
  if (swift_dynamicCast())
  {
    sub_1B5E30E70(v14, (uint64_t)v16);
    BlueprintProviderType.blueprint.getter();
    swift_getWitnessTable();
    char v8 = sub_1B61B2A30();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
    if ((v8 & 1) == 0)
    {
      uint64_t v11 = AssociatedConformanceWitness;
      uint64_t v12 = v18;
      __swift_project_boxed_opaque_existential_1(v16, AssociatedConformanceWitness);
      uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      goto LABEL_7;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  else
  {
    uint64_t v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_1B5FEFCDC((uint64_t)v14, (unint64_t *)&unk_1EB642308, &qword_1EB642300);
  }
  uint64_t v10 = 0;
LABEL_7:
  id v13 = (void *)v10;
  result.value._rawValue = v13;
  result.is_nil = v9;
  return result;
}

id sub_1B5FEDF80(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = a1;
  unint64_t v6 = (unint64_t)BlueprintCollectionViewDataSource.indexTitles(for:)(v5);

  if (v6)
  {
    uint64_t v7 = (void *)sub_1B61B24D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = 0;
  }
  return v7;
}

void BlueprintCollectionViewDataSource.collectionView(_:indexPathForIndexTitle:at:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v103 = v1;
  uint64_t v102 = v2;
  uint64_t v108 = v3;
  OUTLINED_FUNCTION_10_36();
  uint64_t v99 = v4;
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v6 = *(void *)(v0 + 80);
  uint64_t v7 = OUTLINED_FUNCTION_48_11();
  uint64_t v8 = OUTLINED_FUNCTION_48_11();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v10 = swift_getAssociatedConformanceWitness();
  uint64_t v116 = v7;
  uint64_t v117 = v8;
  uint64_t v118 = AssociatedConformanceWitness;
  uint64_t v119 = v10;
  type metadata accessor for BlueprintSection();
  OUTLINED_FUNCTION_0_13();
  uint64_t v98 = v11;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_12();
  uint64_t v90 = v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v97 = (char *)v82 - v15;
  uint64_t v109 = v16;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v101 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_13();
  uint64_t v106 = v17;
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_12();
  uint64_t v100 = v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v95 = (char *)v82 - v21;
  uint64_t v116 = v7;
  uint64_t v117 = v8;
  uint64_t v118 = AssociatedConformanceWitness;
  uint64_t v119 = v10;
  uint64_t v22 = type metadata accessor for Blueprint();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v92 = sub_1B61B3520();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_82();
  uint64_t v91 = v25;
  uint64_t v93 = WitnessTable;
  uint64_t v105 = sub_1B61B3510();
  OUTLINED_FUNCTION_0_13();
  uint64_t v94 = v26;
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v27);
  OUTLINED_FUNCTION_82();
  uint64_t v104 = v28;
  swift_getWitnessTable();
  sub_1B61B2040();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v29);
  OUTLINED_FUNCTION_0_13();
  MEMORY[0x1F4188790](v30);
  OUTLINED_FUNCTION_25_18();
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)v82 - v32;
  uint64_t v35 = v34;
  uint64_t v107 = v5;
  BlueprintProviderType.blueprint.getter();
  OUTLINED_FUNCTION_33();
  uint64_t v37 = v36();
  OUTLINED_FUNCTION_46_1(v37, &qword_1EB642300);
  if (!swift_dynamicCast())
  {
    uint64_t v115 = 0;
    memset(v114, 0, sizeof(v114));
    sub_1B5FEFCDC((uint64_t)v114, (unint64_t *)&unk_1EB642308, &qword_1EB642300);
    MEMORY[0x1BA9ACD90](&unk_1F0EFC478);
    uint64_t v48 = OUTLINED_FUNCTION_35_14();
    v49(v48);
LABEL_20:
    OUTLINED_FUNCTION_73();
    return;
  }
  sub_1B5E30E70(v114, (uint64_t)&v116);
  if (sub_1B61B2A30()) {
    goto LABEL_4;
  }
  v82[1] = v35;
  sub_1B61B2A70();
  swift_getWitnessTable();
  uint64_t v113 = sub_1B61B2410();
  MEMORY[0x1F4188790](v113);
  uint64_t v38 = v99;
  uint64_t v39 = v99[11];
  uint64_t v40 = v99[12];
  v82[-10] = v6;
  v82[-9] = v39;
  uint64_t v89 = v39;
  uint64_t v41 = v38[13];
  uint64_t v88 = v40;
  v82[-8] = v40;
  v82[-7] = v41;
  uint64_t v87 = v41;
  uint64_t v42 = v38[15];
  uint64_t v43 = v38[16];
  v82[-6] = v107;
  v82[-5] = v42;
  uint64_t v86 = v42;
  uint64_t v44 = v38[17];
  uint64_t v45 = v38[18];
  uint64_t v99 = (void *)v43;
  v82[-4] = v43;
  v82[-3] = v44;
  uint64_t v85 = v44;
  uint64_t v84 = v45;
  v82[-2] = v45;
  v82[-1] = (uint64_t)v33;
  uint64_t v83 = v33;
  sub_1B5FEF1E0(0, &qword_1E9DAB4C0, MEMORY[0x1E4FBB320]);
  swift_getWitnessTable();
  sub_1B61B2390();
  swift_bridgeObjectRelease();
  if (BYTE8(v114[0]) == 1)
  {
LABEL_4:
    MEMORY[0x1BA9ACD90](&unk_1F0EFC448);
    uint64_t v46 = OUTLINED_FUNCTION_35_14();
    v47(v46);
LABEL_19:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v116);
    goto LABEL_20;
  }
  uint64_t v50 = *(void *)&v114[0];
  uint64_t v51 = v119;
  uint64_t v52 = v120;
  __swift_project_boxed_opaque_existential_1(&v116, v119);
  uint64_t v53 = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v52 + 16))(&v112, v51, v52);
  if (v112)
  {
    MEMORY[0x1F4188790](v53);
    OUTLINED_FUNCTION_2_82((uint64_t)v82);
    int v54 = v83;
    sub_1B61B2990();
    if (v111) {
      uint64_t v55 = v50;
    }
    else {
      uint64_t v55 = v110;
    }
    sub_1B5FEF1E0(0, &qword_1EB647D70, MEMORY[0x1E4FBBE00]);
    uint64_t v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_1B61BE6A0;
    *(void *)(v56 + 32) = v55;
    *(void *)(v56 + 4sub_1B5E6F544(4, 0, 0) = 0;
    MEMORY[0x1BA9ACD90]();
    OUTLINED_FUNCTION_31_16();
    uint64_t v58 = v54;
    goto LABEL_18;
  }
  v82[0] = v50;
  MEMORY[0x1BA9AF500](v22, v93);
  sub_1B61B34F0();
  sub_1B61B3500();
  uint64_t v59 = *(void *)(v106 + 32);
  uint64_t v60 = (uint64_t *)v95;
  v106 += 32;
  uint64_t v93 = v59;
  OUTLINED_FUNCTION_107();
  v61();
  uint64_t v62 = TupleTypeMetadata2;
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v60, 1, TupleTypeMetadata2);
  uint64_t v64 = v109;
  if (EnumTagSinglePayload != 1)
  {
    uint64_t v91 = *(void *)(v98 + 32);
    uint64_t v92 = v98 + 32;
    v82[2] = v98 + 8;
    while (1)
    {
      uint64_t v65 = *v60;
      OUTLINED_FUNCTION_107();
      uint64_t v67 = v66();
      MEMORY[0x1F4188790](v67);
      OUTLINED_FUNCTION_2_82((uint64_t)v82);
      swift_getWitnessTable();
      uint64_t v64 = v109;
      sub_1B61B2990();
      if ((v111 & 1) == 0) {
        break;
      }
      OUTLINED_FUNCTION_43_11();
      OUTLINED_FUNCTION_5_1();
      v68();
      sub_1B61B3500();
      OUTLINED_FUNCTION_107();
      v69();
      if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, v62) == 1) {
        goto LABEL_15;
      }
    }
    uint64_t v78 = v110;
    sub_1B5FEF1E0(0, &qword_1EB647D70, MEMORY[0x1E4FBBE00]);
    uint64_t v79 = swift_allocObject();
    *(_OWORD *)(v79 + 16) = xmmword_1B61BE6A0;
    *(void *)(v79 + 32) = v65;
    *(void *)(v79 + 4sub_1B5E6F544(4, 0, 0) = v78;
    MEMORY[0x1BA9ACD90]();
    OUTLINED_FUNCTION_43_11();
    OUTLINED_FUNCTION_5_1();
    v80();
    OUTLINED_FUNCTION_5_1();
    v81();
    OUTLINED_FUNCTION_31_16();
    uint64_t v58 = v83;
    goto LABEL_18;
  }
LABEL_15:
  OUTLINED_FUNCTION_5_1();
  v70();
  uint64_t v71 = v82[0];
  uint64_t v72 = v83;
  Blueprint.subscript.getter(v82[0], v22);
  uint64_t v73 = BlueprintSection.endIndex.getter(v64);
  OUTLINED_FUNCTION_5_1();
  v74();
  BOOL v75 = __OFSUB__(v73, 1);
  uint64_t v76 = v73 - 1;
  if (!v75)
  {
    sub_1B5FEF1E0(0, &qword_1EB647D70, MEMORY[0x1E4FBBE00]);
    uint64_t v77 = swift_allocObject();
    *(_OWORD *)(v77 + 16) = xmmword_1B61BE6A0;
    *(void *)(v77 + 32) = v71;
    *(void *)(v77 + 4sub_1B5E6F544(4, 0, 0) = v76;
    MEMORY[0x1BA9ACD90]();
    OUTLINED_FUNCTION_31_16();
    uint64_t v58 = v72;
LABEL_18:
    v57(v58, v22);
    goto LABEL_19;
  }
  __break(1u);
}

BOOL sub_1B5FEEAA0(uint64_t *a1)
{
  v10[0] = swift_getAssociatedTypeWitness();
  v10[1] = swift_getAssociatedTypeWitness();
  void v10[2] = swift_getAssociatedConformanceWitness();
  void v10[3] = swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for BlueprintSection();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v10 - v4;
  uint64_t v6 = *a1;
  uint64_t v7 = type metadata accessor for Blueprint();
  Blueprint.subscript.getter(v6, v7);
  swift_getWitnessTable();
  char v8 = sub_1B61B2A30();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (v8 & 1) == 0;
}

BOOL sub_1B5FEEC78(uint64_t *a1)
{
  return sub_1B5FEEAA0(a1);
}

uint64_t sub_1B5FEECB8(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v15 - v3, a1, AssociatedTypeWitness);
  sub_1B5E001A8(0, &qword_1E9DAB4C8);
  if (swift_dynamicCast())
  {
    sub_1B5E30E70(v15, (uint64_t)v17);
    uint64_t v5 = v18;
    uint64_t v6 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
    uint64_t v7 = sub_1B61B2190();
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    if (v7 == sub_1B61B2190() && v9 == v10)
    {
      swift_bridgeObjectRelease_n();
      char v13 = 1;
    }
    else
    {
      char v12 = sub_1B61B3760();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v13 = v12 ^ 1;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  else
  {
    uint64_t v16 = 0;
    memset(v15, 0, sizeof(v15));
    sub_1B5FEFCDC((uint64_t)v15, (unint64_t *)&unk_1E9DAB4D0, &qword_1E9DAB4C8);
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1B5FEEED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v21[0] = a2;
  v21[1] = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v7 = (char *)v21 - v6;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v10 = swift_getAssociatedConformanceWitness();
  v24[0] = AssociatedTypeWitness;
  v24[1] = v8;
  v24[2] = AssociatedConformanceWitness;
  uint64_t v25 = v10;
  type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  if (sub_1B61B2A30()) {
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, AssociatedTypeWitness);
  sub_1B5E001A8(0, &qword_1E9DAB4C8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v23 = 0;
    memset(v22, 0, sizeof(v22));
    sub_1B5FEFCDC((uint64_t)v22, (unint64_t *)&unk_1E9DAB4D0, &qword_1E9DAB4C8);
LABEL_9:
    char v19 = 0;
    return v19 & 1;
  }
  sub_1B5E30E70(v22, (uint64_t)v24);
  uint64_t v11 = v25;
  uint64_t v12 = v26;
  __swift_project_boxed_opaque_existential_1(v24, v25);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
  uint64_t v13 = sub_1B61B2190();
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  if (v13 == sub_1B61B2190() && v15 == v16)
  {
    swift_bridgeObjectRelease_n();
    char v19 = 1;
  }
  else
  {
    char v18 = sub_1B61B3760();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v19 = v18 ^ 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return v19 & 1;
}

uint64_t sub_1B5FEF1B0(uint64_t a1)
{
  return sub_1B5FEF260(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void, void, void))sub_1B5FEEED8) & 1;
}

void sub_1B5FEF1E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB550]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1B5FEF230(uint64_t a1)
{
  return sub_1B5FEF260(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void, void, void))sub_1B5FEECB8) & 1;
}

uint64_t sub_1B5FEF260(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void, void, void, void, void))
{
  return a2(a1, v2[11], v2[12], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], v2[9], v2[10]) & 1;
}

id sub_1B5FEF2AC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1B61AFCB0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B61B20F0();
  id v9 = a3;
  id v10 = a1;
  BlueprintCollectionViewDataSource.collectionView(_:indexPathForIndexTitle:at:)();

  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)sub_1B61AFC00();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v11;
}

id BlueprintCollectionViewDataSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void BlueprintCollectionViewDataSource.init()()
{
}

void sub_1B5FEF448()
{
}

uint64_t sub_1B5FEF45C()
{
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_28_1(*(void *)(v0 + 160));
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(void))(v1 + 8))();
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_28_1(*(void *)(v2 + 168));
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(void))(v3 + 8))();
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_28_1(*(void *)(v4 + 176));
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(void))(v5 + 8))();
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_28_1(*(void *)(v6 + 184));
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(void))(v7 + 8))();
  OUTLINED_FUNCTION_0_0();
  swift_release();
  OUTLINED_FUNCTION_0_0();
  return swift_release();
}

void (*sub_1B5FEF608(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = BlueprintCollectionViewDataSource.dragReorderDelegate.modify();
  return sub_1B5E969A4;
}

double sub_1B5FEF660@<D0>(_OWORD *a1@<X8>)
{
  return BlueprintCollectionViewDataSource.diffableReorderDataSource.getter(a1);
}

Swift::Void __swiftcall BlueprintCollectionViewDataSource.traitCollectionDidChange(_:traitCollection:)(UITraitCollection_optional _, UITraitCollection traitCollection)
{
  OUTLINED_FUNCTION_83();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v9 = *(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v2) + 0x68);
  OUTLINED_FUNCTION_9_37();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t v16 = *(void *)(v15 + 96);
  OUTLINED_FUNCTION_9_37();
  __n128 v18 = MEMORY[0x1F4188790](v17);
  (*(void (**)(char *, char *, uint64_t, __n128))(v20 + 16))((char *)&v26 - v21, &v3[*(void *)(v19 + 176)], v16, v18);
  sub_1B5E001A8(0, &qword_1EB645CE0);
  if (swift_dynamicCast())
  {
    uint64_t v22 = v27;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8))(v7, v5, ObjectType, v22);
    swift_unknownObjectRelease();
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, &v3[*(void *)((*v8 & *(void *)v3) + 0xB8)], v9);
  if (swift_dynamicCast())
  {
    uint64_t v24 = v27;
    uint64_t v25 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8))(v7, v5, v25, v24);
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_73();
}

id HiddenView.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_38();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_35_0();
  return objc_msgSend(v2, v3, v4);
}

id HiddenView.init(frame:)()
{
  OUTLINED_FUNCTION_38();
  uint64_t ObjectType = swift_getObjectType();
  double v1 = OUTLINED_FUNCTION_35_0();
  return objc_msgSendSuper2(v2, v3, v1, v0, ObjectType);
}

id HiddenView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id HiddenView.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

uint64_t sub_1B5FEFA48()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        uint64_t result = swift_checkMetadataState();
        if (v4 <= 0x3F) {
          return swift_initClassMetadata2();
        }
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for BlueprintCollectionViewDataSource()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for BlueprintCollectionViewDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BlueprintCollectionViewDataSource);
}

uint64_t dispatch thunk of BlueprintCollectionViewDataSource.__allocating_init(blueprintProvider:blueprintLayoutProvider:blueprintViewCellProvider:blueprintViewSupplementaryViewProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t type metadata accessor for HiddenView()
{
  return self;
}

uint64_t sub_1B5FEFC18(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, _UNKNOWN **))
{
  return 0;
}

uint64_t sub_1B5FEFCDC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_1B5FEC27C(0, a2, a3);
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_5_1();
  v4();
  return a1;
}

void sub_1B5FEFD30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _UNKNOWN **))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for HiddenView();
    unint64_t v7 = a3(a1, v6, &protocol witness table for HiddenView);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t PillViewAssetHandles.x1.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B5E176E4(v1, a1);
}

uint64_t PillViewAssetHandles.x2.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B5E176E4(v1 + 40, a1);
}

uint64_t PillViewAssetHandles.x3.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B5E176E4(v1 + 80, a1);
}

void *PillViewAssetHandles.color.getter()
{
  uint64_t v1 = *(void **)(v0 + 120);
  id v2 = v1;
  return v1;
}

uint64_t PillViewAssetHandles.init(x1:x2:x3:color:)@<X0>(long long *a1@<X0>, long long *a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_1B5E30E70(a1, a5);
  sub_1B5E30E70(a2, a5 + 40);
  uint64_t result = sub_1B5E30E70(a3, a5 + 80);
  *(void *)(a5 + 12sub_1B5E6F544(4, 0, 0) = a4;
  return result;
}

uint64_t static PillViewAssetHandles.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_0_85(a1);
  uint64_t v6 = v5(v4);
  uint64_t v8 = v7;
  uint64_t v9 = OUTLINED_FUNCTION_1_87(a2);
  if (v6 == v10(v9) && v8 == v11)
  {
    swift_bridgeObjectRelease_n();
    sub_1B5FF017C((uint64_t)a1, (uint64_t)v51);
    sub_1B5FF017C((uint64_t)a2, (uint64_t)v49);
  }
  else
  {
    char v13 = OUTLINED_FUNCTION_2_83();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B5FF017C((uint64_t)a1, (uint64_t)v51);
    sub_1B5FF017C((uint64_t)a2, (uint64_t)v49);
    if ((v13 & 1) == 0)
    {
      sub_1B5FF01B4((uint64_t)v51);
      sub_1B5FF01B4((uint64_t)v49);
      sub_1B5FF017C((uint64_t)a1, (uint64_t)v47);
      sub_1B5FF017C((uint64_t)a2, (uint64_t)v45);
LABEL_13:
      sub_1B5FF01B4((uint64_t)v47);
      sub_1B5FF01B4((uint64_t)v45);
      sub_1B5FF017C((uint64_t)a1, (uint64_t)v43);
      sub_1B5FF017C((uint64_t)a2, (uint64_t)v41);
LABEL_20:
      sub_1B5FF01B4((uint64_t)v41);
      sub_1B5FF01B4((uint64_t)v43);
LABEL_29:
      char v38 = 0;
      return v38 & 1;
    }
  }
  uint64_t v14 = OUTLINED_FUNCTION_0_85(v52);
  uint64_t v16 = v15(v14);
  uint64_t v18 = v17;
  uint64_t v19 = OUTLINED_FUNCTION_1_87(v50);
  if (v16 == v20(v19) && v18 == v21)
  {
    swift_bridgeObjectRelease_n();
    sub_1B5FF01B4((uint64_t)v51);
    sub_1B5FF01B4((uint64_t)v49);
    sub_1B5FF017C((uint64_t)a1, (uint64_t)v47);
    sub_1B5FF017C((uint64_t)a2, (uint64_t)v45);
  }
  else
  {
    char v23 = OUTLINED_FUNCTION_2_83();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B5FF01B4((uint64_t)v51);
    sub_1B5FF01B4((uint64_t)v49);
    sub_1B5FF017C((uint64_t)a1, (uint64_t)v47);
    sub_1B5FF017C((uint64_t)a2, (uint64_t)v45);
    if ((v23 & 1) == 0) {
      goto LABEL_13;
    }
  }
  uint64_t v24 = OUTLINED_FUNCTION_0_85(v48);
  uint64_t v26 = v25(v24);
  uint64_t v28 = v27;
  uint64_t v29 = OUTLINED_FUNCTION_1_87(v46);
  if (v26 == v30(v29) && v28 == v31)
  {
    swift_bridgeObjectRelease_n();
    sub_1B5FF01B4((uint64_t)v47);
    sub_1B5FF01B4((uint64_t)v45);
    sub_1B5FF017C((uint64_t)a1, (uint64_t)v43);
    sub_1B5FF017C((uint64_t)a2, (uint64_t)v41);
  }
  else
  {
    char v33 = OUTLINED_FUNCTION_2_83();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B5FF01B4((uint64_t)v47);
    sub_1B5FF01B4((uint64_t)v45);
    sub_1B5FF017C((uint64_t)a1, (uint64_t)v43);
    sub_1B5FF017C((uint64_t)a2, (uint64_t)v41);
    if ((v33 & 1) == 0) {
      goto LABEL_20;
    }
  }
  id v34 = v44;
  id v35 = v42;
  if (!v44)
  {
    id v39 = v42;
    sub_1B5FF01B4((uint64_t)v41);
    sub_1B5FF01B4((uint64_t)v43);
    if (!v35)
    {
      char v38 = 1;
      return v38 & 1;
    }
LABEL_28:

    goto LABEL_29;
  }
  if (!v42)
  {
    id v39 = v44;
    sub_1B5FF01B4((uint64_t)v41);
    sub_1B5FF01B4((uint64_t)v43);
    goto LABEL_28;
  }
  sub_1B5E44E58();
  id v36 = v35;
  id v37 = v34;
  char v38 = sub_1B61B2E10();
  sub_1B5FF01B4((uint64_t)v41);
  sub_1B5FF01B4((uint64_t)v43);

  return v38 & 1;
}

uint64_t sub_1B5FF017C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B5FF01B4(uint64_t a1)
{
  return a1;
}

void destroy for PillViewAssetHandles(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  id v2 = *(void **)(a1 + 120);
}

uint64_t initializeWithCopy for PillViewAssetHandles(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  uint64_t v7 = *(void **)(a2 + 120);
  *(void *)(a1 + 12sub_1B5E6F544(4, 0, 0) = v7;
  id v8 = v7;
  return a1;
}

uint64_t *assignWithCopy for PillViewAssetHandles(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  __swift_assign_boxed_opaque_existential_1(a1 + 10, a2 + 10);
  long long v4 = (void *)a1[15];
  long long v5 = (void *)a2[15];
  a1[15] = (uint64_t)v5;
  id v6 = v5;

  return a1;
}

uint64_t assignWithTake for PillViewAssetHandles(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 4sub_1B5E6F544(4, 0, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 8sub_1B5E6F544(4, 0, 0) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  id v6 = *(void **)(a1 + 120);
  uint64_t v7 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 12sub_1B5E6F544(4, 0, 0) = v7;

  return a1;
}

uint64_t getEnumTagSinglePayload for PillViewAssetHandles(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 128))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PillViewAssetHandles(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 12sub_1B5E6F544(4, 0, 0) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PillViewAssetHandles()
{
  return &type metadata for PillViewAssetHandles;
}

#error "1B5FF05C0: call analysis failed (funcsize=70)"

uint64_t sub_1B5FF05E4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1B5FF061C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  OUTLINED_FUNCTION_83();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v57 = v25;
  uint64_t v58 = v23;
  uint64_t v59 = v26;
  uint64_t v60 = v27;
  uint64_t v29 = v28;
  uint64_t v53 = v28;
  uint64_t v54 = v30;
  uint64_t v32 = v31;
  uint64_t v61 = a21;
  uint64_t v62 = v33;
  uint64_t v34 = *(void *)(*(void *)v30 + 88);
  uint64_t v35 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_10();
  uint64_t v37 = v36;
  MEMORY[0x1F4188790](v38);
  uint64_t v40 = (char *)&v51 - v39;
  uint64_t v52 = v34;
  uint64_t v41 = type metadata accessor for Command();
  uint64_t v42 = v57;
  if (!v24) {
    uint64_t v42 = v22;
  }
  uint64_t v55 = v41;
  uint64_t v56 = v42;
  if (v24) {
    uint64_t v43 = v22;
  }
  else {
    uint64_t v43 = 0;
  }
  uint64_t v57 = v43;
  BOOL v64 = v24 != 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v40, v29, v35);
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v34;
  uint64_t v45 = v54;
  *(void *)(v44 + 24) = v54;
  uint64_t v46 = *(void (**)(void))(v37 + 32);
  OUTLINED_FUNCTION_4_66();
  v46();
  OUTLINED_FUNCTION_4_66();
  v46();
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = v52;
  *(void *)(v47 + 24) = v45;
  OUTLINED_FUNCTION_4_66();
  v46();
  *(void *)uint64_t v32 = v45;
  *(_OWORD *)(v32 + 8) = v65;
  *(void *)(v32 + 24) = v55;
  *(void *)(v32 + 32) = &protocol witness table for Command<A>;
  uint64_t v48 = v60;
  *(void *)(v32 + 4sub_1B5E6F544(4, 0, 0) = v59;
  *(void *)(v32 + 48) = v48;
  uint64_t v49 = v58;
  *(void *)(v32 + 56) = v56;
  *(void *)(v32 + 64) = v49;
  *(void *)(v32 + 72) = v57;
  *(unsigned char *)(v32 + 8sub_1B5E6F544(4, 0, 0) = v64;
  *(_DWORD *)(v32 + 8MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *(_DWORD *)v63;
  *(_DWORD *)(v32 + 84) = *(_DWORD *)&v63[3];
  *(void *)(v32 + 88) = sub_1B5FF1608;
  *(void *)(v32 + 96) = v44;
  *(void *)(v32 + 104) = sub_1B5FF1790;
  *(void *)(v32 + 112) = v47;
  uint64_t v50 = v61;
  *(void *)(v32 + 12sub_1B5E6F544(4, 0, 0) = v62;
  *(void *)(v32 + 128) = v50;
  swift_retain_n();
  OUTLINED_FUNCTION_73();
}

void KeyCommandItem.init<A, B>(command:context:input:discoverabilityInput:modifierFlags:title:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v1 = v0;
  uint64_t v37 = v2;
  uint64_t v38 = v3;
  uint64_t v35 = v4;
  uint64_t v36 = v5;
  uint64_t v33 = v7;
  uint64_t v34 = v6;
  uint64_t v39 = v8;
  uint64_t v10 = v9;
  uint64_t v11 = *v9;
  uint64_t v32 = *(void *)(*v9 + 136);
  uint64_t v12 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_10();
  uint64_t v14 = v13;
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v29 - v19;
  uint64_t v21 = *((void *)v1 + 2);
  uint64_t v30 = *((void *)v1 + 3);
  uint64_t v31 = v21;
  uint64_t v22 = *(void (**)(void))(v14 + 16);
  long long v29 = *v1;
  OUTLINED_FUNCTION_10_37();
  v22();
  OUTLINED_FUNCTION_10_37();
  v22();
  unint64_t v23 = (*(unsigned __int8 *)(v14 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v24 = (char *)swift_allocObject();
  *((void *)v24 + 2) = v32;
  *((void *)v24 + 3) = *(void *)(v11 + 144);
  *((void *)v24 + 4) = *(void *)(v11 + 152);
  *((void *)v24 + 5) = v10;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v24[v23], (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  uint64_t v25 = &v24[(v16 + v23 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(_OWORD *)uint64_t v25 = v29;
  uint64_t v26 = v30;
  *((void *)v25 + 2) = v31;
  *((void *)v25 + 3) = v26;
  uint64_t v27 = swift_retain();
  sub_1B5FF061C(v27, (uint64_t)v20, v34, v35, v36, v37, v38, (uint64_t)sub_1B5FF0CE4, (uint64_t)v24, v28, v29, *((uint64_t *)&v29 + 1), v30, v31, v32, v33, v34, v35, v36,
    v37,
    v38);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v39, v12);
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B5FF0A4C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v22 = a6;
  uint64_t v12 = *a3;
  uint64_t v13 = *(void *)(*a3 + 144);
  uint64_t v14 = sub_1B61B2F80();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v21 - v16;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *, uint64_t, void, uint64_t, void, uint64_t, uint64_t))(a2 + 80))(a3, a4, *(void *)(v12 + 136), v13, *(void *)(v12 + 152), ObjectType, a2);
  uint64_t v25 = a5;
  uint64_t v26 = v22;
  uint64_t v27 = v23;
  uint64_t v28 = v24;
  uint64_t v19 = type metadata accessor for StateCommandValue();
  StateCommandValue.value(for:)((uint64_t)v17, v19, (uint64_t)&v29);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return v29;
}

uint64_t sub_1B5FF0BFC()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = sub_1B61B2F80();
  OUTLINED_FUNCTION_3(v3);
  swift_release();
  if (!OUTLINED_FUNCTION_9_38()) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  }
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B5FF0CE4()
{
  uint64_t v3 = OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_3(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = *(uint64_t **)(v1 + 40);
  uint64_t v10 = v1 + v8;
  uint64_t v11 = (uint64_t *)(v1 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v14 = v11[2];
  uint64_t v15 = v11[3];
  return sub_1B5FF0A4C(v2, v0, v9, v10, v12, v13, v14, v15);
}

#error "1B5FF0E7C: call analysis failed (funcsize=75)"

uint64_t sub_1B5FF0EA0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v28 = a7;
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  uint64_t v24 = a4;
  uint64_t v9 = *a3;
  uint64_t v10 = *(void *)(*a3 + 144);
  uint64_t v11 = sub_1B61B2F80();
  uint64_t v29 = *(void *)(v11 - 8);
  uint64_t v30 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = *(void *)(v9 + 136);
  uint64_t v27 = sub_1B61B2F80();
  uint64_t v15 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v17 = (char *)&v23 - v16;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(a2 + 72))(a3, v14, ObjectType, a2);
  uint64_t v19 = *(void *)(v9 + 152);
  (*(void (**)(uint64_t *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 80))(a3, v17, v14, v10, v19, ObjectType, a2);
  uint64_t v35 = v24;
  uint64_t v36 = v25;
  uint64_t v37 = v26;
  uint64_t v38 = v28;
  uint64_t v31 = v10;
  uint64_t v32 = v14;
  uint64_t v33 = MEMORY[0x1E4FBB1A0];
  uint64_t v34 = v19;
  uint64_t v20 = type metadata accessor for StateCommandContextValue();
  StateCommandContextValue.value(for:context:)((uint64_t)v13, (uint64_t)v17, v20, (uint64_t)&v31);
  if (v32) {
    uint64_t v21 = v31;
  }
  else {
    uint64_t v21 = 0;
  }
  (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v30);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v27);
  return v21;
}

uint64_t sub_1B5FF1128()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B5FF1170(uint64_t a1, uint64_t a2)
{
  return sub_1B5FF0EA0(a1, a2, *(uint64_t **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_1B5FF1180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
  {
    sub_1B61B1F70();
    uint64_t v6 = vars8;
  }
  return sub_1B61B1F70();
}

uint64_t destroy for KeyCommandItem(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  sub_1B5FBE24C(*(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for KeyCommandItem(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 72);
  char v10 = *(unsigned char *)(a2 + 80);
  sub_1B5FF1180(v5, v6, v7, v8, v9, v10);
  *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v5;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  *(unsigned char *)(a1 + 8sub_1B5E6F544(4, 0, 0) = v10;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v11 = *(void *)(a2 + 128);
  long long v12 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for KeyCommandItem(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  uint64_t v4 = *(void *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 72);
  char v9 = *(unsigned char *)(a2 + 80);
  sub_1B5FF1180(v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v14 = *(void *)(a1 + 72);
  char v15 = *(unsigned char *)(a1 + 80);
  *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v4;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  *(unsigned char *)(a1 + 8sub_1B5E6F544(4, 0, 0) = v9;
  sub_1B5FBE24C(v10, v11, v12, v13, v14, v15);
  uint64_t v16 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v16;
  swift_retain();
  swift_release();
  uint64_t v17 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v17;
  swift_retain();
  swift_release();
  uint64_t v18 = *(void *)(a2 + 128);
  *(void *)(a1 + 12sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v18;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy136_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x88uLL);
}

uint64_t assignWithTake for KeyCommandItem(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 72);
  char v6 = *(unsigned char *)(a2 + 80);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v11 = *(void *)(a1 + 72);
  char v12 = *(unsigned char *)(a1 + 80);
  *(_OWORD *)(a1 + 4sub_1B5E6F544(4, 0, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v5;
  *(unsigned char *)(a1 + 8sub_1B5E6F544(4, 0, 0) = v6;
  sub_1B5FBE24C(v7, v8, v9, v10, v11, v12);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  *(_OWORD *)(a1 + 12sub_1B5E6F544(4, 0, 0) = *(_OWORD *)(a2 + 120);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for KeyCommandItem(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 136))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KeyCommandItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 12sub_1B5E6F544(4, 0, 0) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyCommandItem()
{
  return &type metadata for KeyCommandItem;
}

uint64_t sub_1B5FF1540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v9 = *a4;
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, void, uint64_t, uint64_t))(a2 + 8))(a4, a5, a3, *(void *)(v9 + 88), ObjectType, a2);
}

uint64_t sub_1B5FF1608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1B61B2F80();
  OUTLINED_FUNCTION_4_10(v7);
  uint64_t v9 = *(uint64_t **)(v3 + 24);
  uint64_t v10 = v3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return sub_1B5FF1540(a1, a2, a3, v9, v10);
}

uint64_t sub_1B5FF1678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  return CommandCenterType.canExecute<A>(command:context:)(a3, a4, ObjectType, a2) & 1;
}

uint64_t objectdestroy_8Tm_0()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = sub_1B61B2F80();
  OUTLINED_FUNCTION_3(v3);
  swift_release();
  if (!OUTLINED_FUNCTION_9_38()) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  }
  return swift_deallocObject();
}

uint64_t sub_1B5FF1790()
{
  uint64_t v3 = OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_4_10(v3);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return sub_1B5FF1678(v2, v0, v5, v6);
}

uint64_t dispatch thunk of Refreshable.refresh()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1B5FF17FC()
{
  sub_1B5FF18B8();
  swift_allocObject();
  uint64_t result = sub_1B61574FC(0x61622E6975616574, 0xEA00000000006B63, 0, 0);
  qword_1EB647858 = result;
  return result;
}

uint64_t static Commands.back.getter()
{
  if (qword_1EB648D80 != -1) {
    swift_once();
  }
  return swift_retain();
}

void sub_1B5FF18B8()
{
  if (!qword_1EB64C930)
  {
    unint64_t v0 = type metadata accessor for Command();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB64C930);
    }
  }
}

id sub_1B5FF1908()
{
  uint64_t v1 = sub_1B61AF570();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B61AF520();
  if (objc_msgSend(v0, sel_isSelected))
  {
    sub_1B61AF560();
    sub_1B5E19B1C();
    uint64_t v5 = OUTLINED_FUNCTION_0_86();
    v6(v5);
  }
  if (objc_msgSend(v0, sel_isHighlighted))
  {
    sub_1B61AF530();
    sub_1B5E19B1C();
    uint64_t v7 = OUTLINED_FUNCTION_0_86();
    v8(v7);
  }
  id result = objc_msgSend(v0, sel_isFocused);
  if (result)
  {
    sub_1B61AF540();
    sub_1B5E19B1C();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return result;
}

double BlueprintLayoutOptions.layoutViewport.getter()
{
  uint64_t v1 = v0 + 56;
  if (*(unsigned char *)(v0 + 1) != 1) {
    uint64_t v1 = v0 + 88;
  }
  if (*(unsigned char *)(v0 + 1)) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = v0 + 8;
  }
  return *(double *)v2;
}

void *BlueprintLayoutOptionsCommit.init(layoutOptions:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1B61AFAB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_5_49(v10);
  sub_1B61AFAA0();
  uint64_t v6 = sub_1B61AFA80();
  uint64_t v8 = v7;
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  id result = memcpy(a1 + 2, v10, 0x20DuLL);
  *a1 = v6;
  a1[1] = v8;
  return result;
}

void BlueprintLayoutOptions.kind.getter(unsigned char *a1@<X8>)
{
}

void BlueprintLayoutOptions.layoutViewportConfiguration.getter(unsigned char *a1@<X8>)
{
}

double BlueprintLayoutOptions.viewport.getter()
{
  return *(double *)(v0 + 8);
}

double BlueprintLayoutOptions.windowSize.getter()
{
  return *(double *)(v0 + 24);
}

double BlueprintLayoutOptions.readableViewport.getter()
{
  return *(double *)(v0 + 56);
}

double BlueprintLayoutOptions.readableViewportFrame.getter()
{
  return *(double *)(v0 + 40);
}

double BlueprintLayoutOptions.visibleViewport.getter()
{
  return *(double *)(v0 + 88);
}

double BlueprintLayoutOptions.visibleViewportFrame.getter()
{
  return *(double *)(v0 + 72);
}

double BlueprintLayoutOptions.screenScale.getter()
{
  return *(double *)(v0 + 104);
}

double BlueprintLayoutOptions.screenNativeSize.getter()
{
  return *(double *)(v0 + 112);
}

id BlueprintLayoutOptions.traitCollection.getter()
{
  return *(id *)(v0 + 128);
}

id BlueprintLayoutOptions.appTraitCollection.getter()
{
  return *(id *)(v0 + 136);
}

uint64_t BlueprintLayoutOptions.appState.getter()
{
  return *(void *)(v0 + 144);
}

id BlueprintLayoutOptions.contentSizeCategory.getter()
{
  return *(id *)(v0 + 152);
}

double BlueprintLayoutOptions.layoutMargins.getter()
{
  return *(double *)(v0 + 160);
}

double BlueprintLayoutOptions.unadjustedLayoutMargins.getter()
{
  return *(double *)(v0 + 192);
}

void BlueprintLayoutOptions.layoutOrientation.getter(unsigned char *a1@<X8>)
{
}

uint64_t BlueprintLayoutOptions.layoutDirection.getter()
{
  return *(void *)(v0 + 224);
}

id BlueprintLayoutOptions.isValid.getter()
{
  uint64_t v1 = *(void **)(v0 + 128);
  id result = objc_msgSend(v1, sel_horizontalSizeClass);
  if (result) {
    return (id)(objc_msgSend(v1, sel_verticalSizeClass) != 0);
  }
  return result;
}

uint64_t BlueprintLayoutOptions.compositionalLayoutOptions.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (const void *)(v1 + 232);
  memcpy(v5, v3, 0x7AuLL);
  memcpy(a1, v3, 0x7AuLL);
  return sub_1B5F8B1A0((uint64_t)v5);
}

double BlueprintLayoutOptions.safeAreaInsets.getter()
{
  return *(double *)(v0 + 360);
}

void *BlueprintLayoutOptions.rendererOptions.getter@<X0>(void *a1@<X8>)
{
  return memcpy(a1, (const void *)(v1 + 392), 0x85uLL);
}

BOOL static BlueprintLayoutOptions.ViewportConfiguration.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t BlueprintLayoutOptions.ViewportConfiguration.hash(into:)()
{
  return sub_1B61B3910();
}

BOOL static BlueprintLayoutOptions.ViewportOrientation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t BlueprintLayoutOptions.ViewportOrientation.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t BlueprintLayoutOptions.ViewportOrientation.hashValue.getter()
{
  return sub_1B61B3940();
}

TeaUI::BlueprintLayoutOptions::ViewportDimensionChecks __swiftcall BlueprintLayoutOptions.ViewportDimensionChecks.init(rawValue:)(TeaUI::BlueprintLayoutOptions::ViewportDimensionChecks rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static BlueprintLayoutOptions.ViewportDimensionChecks.width.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static BlueprintLayoutOptions.ViewportDimensionChecks.height.getter(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t BlueprintLayoutOptions.ViewportDimensionChecks.rawValue.getter()
{
  return *(void *)v0;
}

TeaUI::BlueprintLayoutOptions::ViewportDimensionChecks sub_1B5FF1E38(Swift::Int *a1)
{
  return BlueprintLayoutOptions.ViewportDimensionChecks.init(rawValue:)(*a1);
}

TeaUI::BlueprintLayoutOptions::ViewportDimensionChecks sub_1B5FF1E40@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  result.rawValue = BlueprintLayoutOptions.ViewportDimensionChecks.init(rawValue:)(*a1).rawValue;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1B5FF1E6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = BlueprintLayoutOptions.ViewportDimensionChecks.rawValue.getter();
  *a1 = result;
  return result;
}

void BlueprintLayoutOptions.init(kind:layoutViewportConfiguration:viewport:windowSize:readableViewportFrame:visibleViewportFrame:screenScale:screenNativeSize:traitCollection:appTraitCollection:appState:contentSizeCategory:layoutMargins:unadjustedLayoutMargins:layoutDirection:safeAreaInsets:rendererOptions:compositionalLayoutOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  OUTLINED_FUNCTION_47_0();
  __src = v48;
  uint64_t v103 = v49;
  uint64_t v51 = v50;
  uint64_t v102 = v52;
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  uint64_t v101 = v57;
  uint64_t v100 = v58;
  uint64_t v99 = v59;
  uint64_t v98 = v60;
  uint64_t v96 = v61;
  uint64_t v95 = v62;
  uint64_t v94 = v63;
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  char v92 = *v69;
  char v93 = *v68;
  sub_1B5FF35A4(a48, (uint64_t)v105, &qword_1E9DAB4F0);
  sub_1B5FF35A4((uint64_t)v105, (uint64_t)v106, &qword_1E9DAB4F0);
  if (sub_1B5FF3588((uint64_t)v106) == 1)
  {
    uint64_t v70 = qword_1EB6495F8;
    id v71 = v56;
    id v72 = v54;
    id v73 = v51;
    if (v70 != -1) {
      swift_once();
    }
    memcpy(__dst, &qword_1EB649578, 0x7AuLL);
    sub_1B5F8B1A0((uint64_t)__dst);
  }
  else
  {
    sub_1B5FF35A4((uint64_t)v105, (uint64_t)__dst, &qword_1E9DAB4F0);
  }
  char v74 = BYTE9(__dst[7]);
  uint64_t v75 = *(void *)&__dst[7];
  char v76 = BYTE8(__dst[7]);
  uint64_t v77 = *((void *)&__dst[6] + 1);
  long long v90 = *(_OWORD *)((char *)&__dst[5] + 8);
  long long v91 = *(_OWORD *)((char *)&__dst[4] + 8);
  char v78 = __dst[4];
  long long v89 = *(_OWORD *)((char *)&__dst[1] + 8);
  __n128 v88 = (__n128)__dst[0];
  char v79 = __dst[1];
  LOBYTE(__dst[0]) = BYTE8(__dst[7]);
  uint64_t v80 = memcpy((void *)(v67 + 392), __src, 0x85uLL);
  *(void *)(v67 + 8) = v65;
  *(void *)(v67 + 16) = v94;
  *(unsigned char *)uint64_t v67 = v93;
  *(unsigned char *)(v67 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v92;
  *(void *)(v67 + 24) = v95;
  *(void *)(v67 + 32) = v96;
  *(void *)(v67 + 4sub_1B5E6F544(4, 0, 0) = v98;
  *(void *)(v67 + 48) = v99;
  *(void *)(v67 + 56) = v100;
  *(void *)(v67 + 64) = v101;
  *(void *)(v67 + 72) = a29;
  *(void *)(v67 + 8sub_1B5E6F544(4, 0, 0) = a30;
  *(void *)(v67 + 88) = a31;
  *(void *)(v67 + 96) = a32;
  *(void *)(v67 + 104) = a33;
  *(void *)(v67 + 112) = a34;
  *(void *)(v67 + 12sub_1B5E6F544(4, 0, 0) = a35;
  *(void *)(v67 + 128) = v56;
  *(void *)(v67 + 136) = v54;
  *(void *)(v67 + 144) = v102;
  *(void *)(v67 + 152) = v51;
  *(void *)(v67 + 16sub_1B5E6F544(4, 0, 0) = a36;
  *(void *)(v67 + 168) = a37;
  *(void *)(v67 + 176) = a38;
  *(void *)(v67 + 184) = a39;
  *(void *)(v67 + 192) = a40;
  *(void *)(v67 + 20sub_1B5E6F544(4, 0, 0) = a41;
  *(void *)(v67 + 208) = a42;
  *(void *)(v67 + 216) = a43;
  *(void *)(v67 + 224) = v103;
  *(__n128 *)(v67 + 232) = v88;
  *(unsigned char *)(v67 + 248) = v79;
  OUTLINED_FUNCTION_4_67((uint64_t)v80, v81, v82, v83, v84, v85, v86, v87, v88.n128_i64[0], v88.n128_i64[1], v89, v88);
  *(unsigned char *)(v67 + 296) = v78;
  *(_OWORD *)(v67 + 304) = v91;
  *(_OWORD *)(v67 + 32sub_1B5E6F544(4, 0, 0) = v90;
  *(void *)(v67 + 336) = v77;
  *(void *)(v67 + 344) = v75;
  *(unsigned char *)(v67 + 352) = v76;
  *(unsigned char *)(v67 + 353) = v74;
  *(void *)(v67 + 36sub_1B5E6F544(4, 0, 0) = a44;
  *(void *)(v67 + 368) = a45;
  *(void *)(v67 + 376) = a46;
  *(void *)(v67 + 384) = a47;
  OUTLINED_FUNCTION_46_0();
}

void BlueprintLayoutOptions.init(layoutViewportConfiguration:viewport:windowSize:readableViewportFrame:visibleViewportFrame:screenScale:screenNativeSize:traitCollection:appTraitCollection:contentSizeCategory:layoutMargins:unadjustedLayoutMargins:layoutDirection:safeAreaInsets:compositionalLayoutOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  OUTLINED_FUNCTION_47_0();
  uint64_t v174 = v48;
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  uint64_t v168 = v55;
  uint64_t v171 = v56;
  uint64_t v162 = v57;
  uint64_t v165 = v58;
  uint64_t v156 = v59;
  uint64_t v159 = v60;
  uint64_t v146 = v61;
  uint64_t v149 = v62;
  uint64_t v64 = v63;
  HIDWORD(v14MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *v65;
  sub_1B5FF35A4(v66, (uint64_t)v178, &qword_1E9DAB4F0);
  uint64_t v67 = qword_1EB64A0B0;
  id v68 = v54;
  id v69 = v52;
  id v70 = v50;
  if (v67 != -1) {
    swift_once();
  }
  memcpy(__dst, &xmmword_1EB649C68, sizeof(__dst));
  sub_1B5FF35A4((uint64_t)v178, (uint64_t)v180, &qword_1E9DAB4F0);
  if (sub_1B5FF3588((uint64_t)v180) == 1)
  {
    if (qword_1EB6495F8 != -1) {
      swift_once();
    }
    memcpy(v177, &qword_1EB649578, 0x7AuLL);
    sub_1B5F8B1A0((uint64_t)v177);
  }
  else
  {

    uint64_t v71 = sub_1B5FF35A4((uint64_t)v178, (uint64_t)v177, &qword_1E9DAB4F0);
  }
  char v79 = BYTE9(v177[7]);
  uint64_t v80 = *(void *)&v177[7];
  char v81 = BYTE8(v177[7]);
  uint64_t v82 = *((void *)&v177[6] + 1);
  __n128 v83 = OUTLINED_FUNCTION_9_39(v71, v72, v73, v74, v75, v76, v77, v78, v103, v106, v108, v111, v113, v115, v117, v119, v120, v122, a36,
          a37,
          a38,
          a39,
          a40,
          a41,
          a42,
          a43,
          a44,
          v141,
          a45,
          v146,
          v149,
          a46,
          a47,
          v156,
          v159,
          v162,
          v165,
          v168,
          v171,
          v174,
          *(uint64_t *)&v177[0],
          *((uint64_t *)&v177[0] + 1),
          *(uint64_t *)&v177[1],
          *((uint64_t *)&v177[1] + 1),
          *(uint64_t *)&v177[2],
          *((uint64_t *)&v177[2] + 1),
          *(uint64_t *)&v177[3],
          *((uint64_t *)&v177[3] + 1),
          *(uint64_t *)&v177[4],
          *((uint64_t *)&v177[4] + 1),
          *(uint64_t *)&v177[5],
          *(_OWORD *)((char *)&v177[5] + 8));
  long long v110 = (__int128)OUTLINED_FUNCTION_8_37(v84, v85, v86, v87, v88, v89, v90, v91, v104, v107, v109, v112, v114, v116, v83.n128_i64[0], v83.n128_i64[1], v92, v93, v123,
                     v125,
                     v127,
                     v129,
                     v131,
                     v133,
                     v135,
                     v137,
                     v139,
                     v142,
                     v144,
                     v147,
                     v150,
                     v152,
                     v154,
                     v157,
                     v160,
                     v163,
                     v166,
                     v169,
                     v172,
                     v175,
                     *(uint64_t *)&v177[0],
                     *((uint64_t *)&v177[0] + 1),
                     *(uint64_t *)&v177[1],
                     *(_OWORD *)((char *)&v177[1] + 8));
  __n128 v105 = (__n128)v177[0];
  char v94 = v177[1];
  LOBYTE(v177[0]) = v81;
  uint64_t v95 = memcpy((void *)(v64 + 392), __dst, 0x85uLL);
  *(void *)(v64 + 8) = v148;
  *(void *)(v64 + 16) = v151;
  *(unsigned char *)uint64_t v64 = 1;
  *(unsigned char *)(v64 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v143;
  *(void *)(v64 + 24) = v158;
  *(void *)(v64 + 32) = v161;
  *(void *)(v64 + 4sub_1B5E6F544(4, 0, 0) = v164;
  *(void *)(v64 + 48) = v167;
  *(void *)(v64 + 56) = v170;
  *(void *)(v64 + 64) = v173;
  *(void *)(v64 + 72) = a29;
  *(void *)(v64 + 8sub_1B5E6F544(4, 0, 0) = a30;
  *(void *)(v64 + 88) = a31;
  *(void *)(v64 + 96) = a32;
  *(void *)(v64 + 104) = a33;
  *(void *)(v64 + 112) = a34;
  *(void *)(v64 + 12sub_1B5E6F544(4, 0, 0) = a35;
  *(void *)(v64 + 128) = v68;
  *(void *)(v64 + 136) = v69;
  *(void *)(v64 + 144) = 0;
  *(void *)(v64 + 152) = v70;
  *(void *)(v64 + 16sub_1B5E6F544(4, 0, 0) = v124;
  *(void *)(v64 + 168) = v126;
  *(void *)(v64 + 176) = v128;
  *(void *)(v64 + 184) = v130;
  *(void *)(v64 + 192) = v132;
  *(void *)(v64 + 20sub_1B5E6F544(4, 0, 0) = v134;
  *(void *)(v64 + 208) = v136;
  *(void *)(v64 + 216) = v138;
  *(void *)(v64 + 224) = v176;
  *(__n128 *)(v64 + 232) = v105;
  *(unsigned char *)(v64 + 248) = v94;
  OUTLINED_FUNCTION_4_67((uint64_t)v95, v96, v97, v98, v99, v100, v101, v102, v105.n128_i64[0], v105.n128_i64[1], v110, v105);
  *(unsigned char *)(v64 + 296) = v47;
  *(_OWORD *)(v64 + 304) = v121;
  *(_OWORD *)(v64 + 32sub_1B5E6F544(4, 0, 0) = v118;
  *(void *)(v64 + 336) = v82;
  *(void *)(v64 + 344) = v80;
  *(unsigned char *)(v64 + 352) = v81;
  *(unsigned char *)(v64 + 353) = v79;
  *(void *)(v64 + 36sub_1B5E6F544(4, 0, 0) = v140;
  *(void *)(v64 + 368) = v145;
  *(void *)(v64 + 376) = v153;
  *(void *)(v64 + 384) = v155;
  OUTLINED_FUNCTION_46_0();
}

BOOL BlueprintLayoutOptions.isValid(layoutOptions:)(uint64_t a1)
{
  double v2 = *(double *)(a1 + 8);
  double v3 = *(double *)(a1 + 168);
  double v4 = *(double *)(a1 + 184);
  double v5 = *(double *)(v1 + 8);
  uint64_t v6 = *(void **)(v1 + 128);
  double v7 = *(double *)(v1 + 168);
  double v8 = *(double *)(v1 + 184);
  id v9 = objc_msgSend(*(id *)(a1 + 128), sel_horizontalSizeClass);
  return v9 == objc_msgSend(v6, sel_horizontalSizeClass) && v2 == v5 && v3 == v7 && v4 == v8;
}

uint64_t sub_1B5FF2548()
{
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BE0);
  uint64_t v0 = sub_1B61B2CA0();
  uint64_t v1 = sub_1B61B2CA0();
  double v2 = (uint64_t *)MEMORY[0x1E4FB2848];
  uint64_t v3 = qword_1EB64A0B0;
  id v4 = (id)*MEMORY[0x1E4FB27D0];
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v7 = v2[2];
  uint64_t v8 = v2[3];
  memcpy(__dst, &xmmword_1EB649C68, sizeof(__dst));
  if (qword_1EB6495F8 != -1) {
    swift_once();
  }
  memcpy(v11, &qword_1EB649578, 0x7AuLL);
  memcpy(&unk_1EB6442E8, &qword_1EB649578, 0x7AuLL);
  memcpy(&unk_1EB644388, __dst, 0x85uLL);
  word_1EB644200 = 256;
  unk_1EB644208 = 0u;
  unk_1EB644218 = 0u;
  unk_1EB644228 = 0u;
  unk_1EB644238 = 0u;
  unk_1EB644248 = 0u;
  unk_1EB644258 = 0u;
  unk_1EB644268 = 0u;
  qword_1EB644278 = 0;
  unk_1EB644280 = v0;
  qword_1EB644288 = v1;
  unk_1EB644290 = 0;
  qword_1EB644298 = (uint64_t)v4;
  qword_1EB6442A0 = v5;
  unk_1EB6442A8 = v6;
  qword_1EB6442B0 = v7;
  unk_1EB6442B8 = v8;
  qword_1EB6442C0 = v5;
  unk_1EB6442C8 = v6;
  qword_1EB6442D0 = v7;
  unk_1EB6442D8 = v8;
  qword_1EB6442E0 = 0;
  qword_1EB644368 = v5;
  unk_1EB644370 = v6;
  qword_1EB644378 = v7;
  unk_1EB644380 = v8;
  return sub_1B5F8B1A0((uint64_t)v11);
}

uint64_t static BlueprintLayoutOptions.zero.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EB648CE8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_5_49(v3);
  OUTLINED_FUNCTION_5_49(a1);
  return sub_1B5E62D40((uint64_t)v3);
}

uint64_t BlueprintLayoutOptionsCommit.identifier.getter()
{
  uint64_t v1 = *v0;
  sub_1B61B1F70();
  return v1;
}

uint64_t BlueprintLayoutOptionsCommit.layoutOptions.getter@<X0>(void *a1@<X8>)
{
  OUTLINED_FUNCTION_5_49(v3);
  OUTLINED_FUNCTION_5_49(a1);
  return sub_1B5E62D40((uint64_t)v3);
}

Swift::Bool __swiftcall BlueprintLayoutOptionsProviderType.isValidCommit(view:)(UIView *view)
{
  (*(void (**)())(v1 + 16))();
  sub_1B61B0430();
  swift_release();
  sub_1B5FF35A4((uint64_t)&v11, (uint64_t)v12, (unint64_t *)&qword_1EB64AD88);
  sub_1B5FF35A4((uint64_t)v12, (uint64_t)v13, (unint64_t *)&qword_1EB64AD88);
  int v3 = sub_1B5E32B80((uint64_t)v13);
  if (v3 != 1)
  {
    double v4 = v14;
    double v5 = v15;
    [(UIView *)view bounds];
    double v7 = v6;
    double v9 = v8;
    sub_1B5FF3610((uint64_t)v12);
    LOBYTE(v3) = v4 == v7 && v5 == v9;
  }
  return v3;
}

uint64_t BlueprintLayoutOptionsProvider.margins.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = OUTLINED_FUNCTION_6_51();
  char v4 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = *(void *)(v1 + 16);
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t BlueprintLayoutOptionsProvider.margins.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t result = OUTLINED_FUNCTION_7_44();
  *(void *)(v1 + 16) = v2;
  *(unsigned char *)(v1 + 24) = v3;
  return result;
}

uint64_t (*BlueprintLayoutOptionsProvider.margins.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t BlueprintLayoutOptionsProvider.layoutViewportConfiguration.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = OUTLINED_FUNCTION_6_51();
  *a1 = *(unsigned char *)(v1 + 40);
  return result;
}

uint64_t BlueprintLayoutOptionsProvider.layoutViewportConfiguration.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = OUTLINED_FUNCTION_7_44();
  *(unsigned char *)(v1 + 4sub_1B5E6F544(4, 0, 0) = v2;
  return result;
}

uint64_t (*BlueprintLayoutOptionsProvider.layoutViewportConfiguration.modify())()
{
  return j__swift_endAccess;
}

uint64_t BlueprintLayoutOptionsProvider.layoutViewportDimensionChecks.getter@<X0>(void *a1@<X8>)
{
  uint64_t result = OUTLINED_FUNCTION_6_51();
  *a1 = *(void *)(v1 + 48);
  return result;
}

uint64_t BlueprintLayoutOptionsProvider.layoutViewportDimensionChecks.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = OUTLINED_FUNCTION_7_44();
  *(void *)(v1 + 48) = v2;
  return result;
}

uint64_t (*BlueprintLayoutOptionsProvider.layoutViewportDimensionChecks.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t BlueprintLayoutOptionsProvider.layoutOptionsCommit.getter()
{
  return swift_retain();
}

uint64_t BlueprintLayoutOptionsProvider.__allocating_init(view:compositionalLayoutOptionsProvider:appTraitEnvironmentProvider:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  BlueprintLayoutOptionsProvider.init(view:compositionalLayoutOptionsProvider:appTraitEnvironmentProvider:)(a1, a2, a3, a4);
  return v8;
}

uint64_t BlueprintLayoutOptionsProvider.init(view:compositionalLayoutOptionsProvider:appTraitEnvironmentProvider:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  *(void *)(v4 + 16) = 0;
  *(unsigned char *)(v4 + 24) = 1;
  *(unsigned char *)(v4 + 4sub_1B5E6F544(4, 0, 0) = 1;
  *(void *)(v4 + 48) = 1;
  sub_1B5FF37B8(v17);
  sub_1B5FF35A4((uint64_t)v17, (uint64_t)&v16, (unint64_t *)&qword_1EB64AD88);
  sub_1B5FF37C0();
  swift_allocObject();
  *(void *)(v4 + 56) = sub_1B61B0420();
  *(void *)(v4 + 32) = a1;
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a3;
  void v10[3] = a4;
  void v10[4] = a1;
  *(void *)(v4 + 64) = sub_1B5FF3870;
  *(void *)(v4 + 72) = v10;
  sub_1B5FF387C(a2, v4 + 80);
  self;
  uint64_t v11 = (void *)swift_dynamicCastObjCClass();
  if (v11) {
    id v12 = a1;
  }
  objc_allocWithZone((Class)type metadata accessor for RendererEnvironment());
  id v13 = a1;
  id v14 = RendererEnvironment.init(scrollView:testing:)(v11, 0);
  sub_1B5FF3990(a2);
  *(void *)(v5 + 12sub_1B5E6F544(4, 0, 0) = v14;
  return v5;
}

id sub_1B5FF2CF0(uint64_t (*a1)(void), int a2, id a3)
{
  if (a1)
  {
    id v3 = objc_msgSend((id)a1(), sel_traitCollection);
    swift_unknownObjectRelease();
    return v3;
  }
  id v4 = objc_msgSend(a3, sel_window);
  if (v4)
  {
    uint64_t v5 = v4;
    id v3 = objc_msgSend(v4, sel_traitCollection);

    return v3;
  }
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647B98);
  static UIWindowScene.activeScene.getter();
  if (v7)
  {
    uint64_t v8 = v7;
    id v3 = objc_msgSend(v7, sel_traitCollection);

    if (v3) {
      return v3;
    }
  }
  id v9 = objc_msgSend(self, sel_currentTraitCollection);
  return v9;
}

uint64_t BlueprintLayoutOptionsProvider.__allocating_init(view:contentSizeCategoryProvider:compositionalLayoutOptionsProvider:appTraitEnvironmentProvider:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B5FF387C(a3, (uint64_t)v11);
  uint64_t v9 = swift_allocObject();
  BlueprintLayoutOptionsProvider.init(view:compositionalLayoutOptionsProvider:appTraitEnvironmentProvider:)(a1, (uint64_t)v11, a4, a5);
  swift_unknownObjectRelease();
  sub_1B5FF3990(a3);
  return v9;
}

void BlueprintLayoutOptionsProvider.layoutOptions.getter()
{
  objc_msgSend(*(id *)(v0 + 32), sel_bounds);
  BlueprintLayoutOptionsProvider.createLayoutOptions(bounds:kind:)();
}

void BlueprintLayoutOptionsProvider.createLayoutOptions(bounds:kind:)()
{
  OUTLINED_FUNCTION_47_0();
  uint64_t v2 = v0;
  double v4 = v3;
  uint64_t v6 = v5;
  HIDWORD(v135) = *v7;
  uint64_t v8 = *(void **)(v0 + 32);
  uint64_t v145 = *(void *)&v9;
  *(double *)&uint64_t v12 = sub_1B5FF3394(v8, v10, v11, v3, v9);
  uint64_t v131 = v13;
  uint64_t v133 = v12;
  uint64_t v127 = v15;
  uint64_t v129 = v14;
  uint64_t v16 = (void *)(*(uint64_t (**)(void))(v0 + 64))();
  double v17 = sub_1B5FF3480(v0, (SEL *)&selRef_layoutMargins);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  *(double *)&uint64_t v24 = sub_1B5FF3480(v0, (SEL *)&selRef_safeAreaInsets);
  uint64_t v141 = v25;
  uint64_t v143 = v24;
  uint64_t v137 = v27;
  uint64_t v139 = v26;
  swift_beginAccess();
  HIDWORD(v125) = *(unsigned __int8 *)(v0 + 40);
  id v28 = objc_msgSend(v8, sel_window);
  if (!v28) {
    id v28 = UIView.mostParentView.getter();
  }
  uint64_t v29 = v28;
  objc_msgSend(v28, sel_bounds);
  uint64_t v121 = v31;
  uint64_t v123 = v30;

  id v32 = objc_msgSend(v8, sel_readableContentGuide);
  objc_msgSend(v32, sel_layoutFrame);
  uint64_t v117 = v34;
  uint64_t v119 = v33;
  uint64_t v113 = v36;
  uint64_t v115 = v35;

  uint64_t v37 = self;
  id v38 = objc_msgSend(v37, sel_mainScreen);
  objc_msgSend(v38, sel_scale);
  uint64_t v111 = v39;

  id v40 = objc_msgSend(v37, sel_mainScreen);
  objc_msgSend(v40, sel_nativeBounds);
  uint64_t v42 = v41;
  uint64_t v44 = v43;

  id v45 = objc_msgSend(v8, sel_traitCollection);
  id v46 = objc_msgSend(self, sel_sharedApplication);
  id v109 = objc_msgSend(v46, sel_applicationState);

  id v47 = objc_msgSend(v8, sel_traitCollection);
  id v48 = objc_msgSend(v47, sel_preferredContentSizeCategory);

  id v107 = objc_msgSend(self, sel_userInterfaceLayoutDirectionForSemanticContentAttribute_, objc_msgSend(v8, sel_semanticContentAttribute));
  RendererEnvironment.rendererOptions.getter((uint64_t)__src);
  sub_1B5FF387C(v2 + 80, (uint64_t)v148);
  uint64_t v49 = v149;
  if (v149)
  {
    id v50 = v45;
    uint64_t v51 = v150;
    __swift_project_boxed_opaque_existential_1(v148, v149);
    (*(void (**)(_OWORD *__return_ptr, void *, uint64_t, uint64_t))(v51 + 8))(__dst, v16, v49, v51);
    char v52 = __dst[1];
    long long v87 = __dst[0];
    __n128 v92 = *(__n128 *)((char *)&__dst[1] + 8);
    char v53 = BYTE8(__dst[2]);
    char v1 = __dst[4];
    long long v105 = *(_OWORD *)((char *)&__dst[4] + 8);
    long long v97 = __dst[3];
    long long v102 = *(_OWORD *)((char *)&__dst[5] + 8);
    uint64_t v54 = *((void *)&__dst[6] + 1);
    uint64_t v55 = *(void *)&__dst[7];
    char v56 = BYTE8(__dst[7]);
    char v57 = BYTE9(__dst[7]);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v148);
  }
  else
  {
    sub_1B5FF3990((uint64_t)v148);
    uint64_t v58 = qword_1EB6495F8;
    id v50 = v45;
    id v59 = v45;
    id v60 = v16;
    id v61 = v48;
    if (v58 != -1) {
      swift_once();
    }
    memcpy(__dst, &qword_1EB649578, 0x7AuLL);
    sub_1B5F8B1A0((uint64_t)__dst);

    char v57 = BYTE9(__dst[7]);
    uint64_t v55 = *(void *)&__dst[7];
    char v56 = BYTE8(__dst[7]);
    uint64_t v54 = *((void *)&__dst[6] + 1);
    __n128 v70 = OUTLINED_FUNCTION_9_39(v62, v63, v64, v65, v66, v67, v68, v69, v82, (uint64_t)v16, v86, v89, v91, v94, v96, v99, v101, v103, v104,
            v106,
            (uint64_t)v107,
            (uint64_t)v109,
            v111,
            v113,
            v115,
            v117,
            v119,
            v121,
            v123,
            v125,
            v127,
            v129,
            v131,
            v133,
            v135,
            v137,
            v139,
            v141,
            v143,
            v145,
            *(uint64_t *)&__dst[0],
            *((uint64_t *)&__dst[0] + 1),
            *(uint64_t *)&__dst[1],
            *((uint64_t *)&__dst[1] + 1),
            *(uint64_t *)&__dst[2],
            *((uint64_t *)&__dst[2] + 1),
            *(uint64_t *)&__dst[3],
            *((uint64_t *)&__dst[3] + 1),
            *(uint64_t *)&__dst[4],
            *((uint64_t *)&__dst[4] + 1),
            *(uint64_t *)&__dst[5],
            *(_OWORD *)((char *)&__dst[5] + 8));
    __n128 v92 = OUTLINED_FUNCTION_8_37(v71, v72, v73, v74, v75, v76, v77, v78, v83, v84, v88, v90, v93, v95, v98, v100, v70.n128_i64[0], v70.n128_i64[1], v79,
            v80,
            v108,
            v110,
            v112,
            v114,
            v116,
            v118,
            v120,
            v122,
            v124,
            v126,
            v128,
            v130,
            v132,
            v134,
            v136,
            v138,
            v140,
            v142,
            v144,
            v146,
            *(uint64_t *)&__dst[0],
            *((uint64_t *)&__dst[0] + 1),
            *(uint64_t *)&__dst[1],
            *(_OWORD *)((char *)&__dst[1] + 8));
    long long v97 = v81;
    char v53 = BYTE8(__dst[2]);
    long long v87 = __dst[0];
    char v52 = __dst[1];
    uint64_t v16 = v85;
  }
  memcpy((void *)(v6 + 392), __src, 0x85uLL);
  *(unsigned char *)uint64_t v6 = BYTE4(v135);
  *(unsigned char *)(v6 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = BYTE4(v125);
  *(double *)(v6 + 8) = v4;
  *(void *)(v6 + 16) = v145;
  *(void *)(v6 + 24) = v123;
  *(void *)(v6 + 32) = v121;
  *(void *)(v6 + 4sub_1B5E6F544(4, 0, 0) = v119;
  *(void *)(v6 + 48) = v117;
  *(void *)(v6 + 56) = v115;
  *(void *)(v6 + 64) = v113;
  *(void *)(v6 + 72) = v133;
  *(void *)(v6 + 8sub_1B5E6F544(4, 0, 0) = v131;
  *(void *)(v6 + 88) = v129;
  *(void *)(v6 + 96) = v127;
  *(void *)(v6 + 104) = v111;
  *(void *)(v6 + 112) = v42;
  *(void *)(v6 + 12sub_1B5E6F544(4, 0, 0) = v44;
  *(void *)(v6 + 128) = v50;
  *(void *)(v6 + 136) = v16;
  *(void *)(v6 + 144) = v109;
  *(void *)(v6 + 152) = v48;
  *(double *)(v6 + 16sub_1B5E6F544(4, 0, 0) = v17;
  *(void *)(v6 + 168) = v19;
  *(void *)(v6 + 176) = v21;
  *(void *)(v6 + 184) = v23;
  *(double *)(v6 + 192) = v17;
  *(void *)(v6 + 20sub_1B5E6F544(4, 0, 0) = v19;
  *(void *)(v6 + 208) = v21;
  *(void *)(v6 + 216) = v23;
  *(void *)(v6 + 224) = v107;
  *(_OWORD *)(v6 + 232) = v87;
  *(unsigned char *)(v6 + 248) = v52;
  *(__n128 *)(v6 + 256) = v92;
  *(unsigned char *)(v6 + 272) = v53;
  *(_OWORD *)(v6 + 28sub_1B5E6F544(4, 0, 0) = v97;
  *(unsigned char *)(v6 + 296) = v1;
  *(_OWORD *)(v6 + 304) = v105;
  *(_OWORD *)(v6 + 32sub_1B5E6F544(4, 0, 0) = v102;
  *(void *)(v6 + 336) = v54;
  *(void *)(v6 + 344) = v55;
  *(unsigned char *)(v6 + 352) = v56;
  *(unsigned char *)(v6 + 353) = v57;
  *(void *)(v6 + 36sub_1B5E6F544(4, 0, 0) = v143;
  *(void *)(v6 + 368) = v141;
  *(void *)(v6 + 376) = v139;
  *(void *)(v6 + 384) = v137;
  OUTLINED_FUNCTION_46_0();
}

double sub_1B5FF3394(void *a1, double a2, double a3, double a4, double a5)
{
  self;
  uint64_t v9 = swift_dynamicCastObjCClass();
  if (v9)
  {
    double v10 = (void *)v9;
    id v11 = a1;
    objc_msgSend(v10, sel_bounds);
    double v13 = v12;
    double v15 = v14;
    double v16 = sub_1B60785F8();
    double v18 = v17;

    return UIEdgeInsetsInsetRect(v13, v15, a4, a5, v16, v18);
  }
  return a2;
}

double sub_1B5FF3480(uint64_t a1, SEL *a2)
{
  double v3 = *(void **)(a1 + 32);
  [v3 *a2];
  [v3 *a2];
  [v3 *a2];
  double v5 = v4;
  [v3 *a2];
  return v5;
}

uint64_t BlueprintLayoutOptionsProvider.deinit()
{
  swift_release();
  swift_release();
  sub_1B5FF3990(v0 + 80);

  return v0;
}

uint64_t BlueprintLayoutOptionsProvider.__deallocating_deinit()
{
  BlueprintLayoutOptionsProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B5FF3588(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 121);
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1B5FF35A4(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_1B5F0520C(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B5FF3610(uint64_t a1)
{
  long long v7 = *(_OWORD *)(a1 + 304);
  long long v5 = *(_OWORD *)(a1 + 272);
  long long v6 = *(_OWORD *)(a1 + 288);
  long long v3 = *(_OWORD *)(a1 + 240);
  long long v4 = *(_OWORD *)(a1 + 256);
  sub_1B5FF36F8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void **)(a1 + 144),
    *(void **)(a1 + 152),
    *(void *)(a1 + 160),
    *(void **)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    SBYTE8(v4),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    SBYTE8(v7));
  return a1;
}

void sub_1B5FF36F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,char a40)
{
  if (a2)
  {
    swift_bridgeObjectRelease();

    sub_1B5E5F620(a32, a33, a34);
    sub_1B5E5F620(a35, a36, a37);
    sub_1B5E5F620(a38, a39, a40);
  }
}

void sub_1B5FF37B8(void *a1)
{
}

void sub_1B5FF37C0()
{
  if (!qword_1EB64A420)
  {
    sub_1B5F0520C(255, (unint64_t *)&qword_1EB64AD88);
    unint64_t v0 = sub_1B61B0470();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB64A420);
    }
  }
}

uint64_t sub_1B5FF3828()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return swift_deallocObject();
}

id sub_1B5FF3870()
{
  return sub_1B5FF2CF0(*(uint64_t (**)(void))(v0 + 16), *(void *)(v0 + 24), *(id *)(v0 + 32));
}

uint64_t sub_1B5FF387C(uint64_t a1, uint64_t a2)
{
  sub_1B5FF38E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1B5FF38E0()
{
  if (!qword_1EB649868[0])
  {
    sub_1B5FF3938();
    unint64_t v0 = sub_1B61B2F80();
    if (!v1) {
      atomic_store(v0, qword_1EB649868);
    }
  }
}

unint64_t sub_1B5FF3938()
{
  unint64_t result = qword_1EB649860;
  if (!qword_1EB649860)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB649860);
  }
  return result;
}

uint64_t sub_1B5FF3990(uint64_t a1)
{
  sub_1B5FF38E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B5FF39F0()
{
  unint64_t result = qword_1E9DAB4F8;
  if (!qword_1E9DAB4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB4F8);
  }
  return result;
}

unint64_t sub_1B5FF3A40()
{
  unint64_t result = qword_1E9DAB500;
  if (!qword_1E9DAB500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB500);
  }
  return result;
}

unint64_t sub_1B5FF3A90()
{
  unint64_t result = qword_1E9DAB508;
  if (!qword_1E9DAB508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB508);
  }
  return result;
}

unint64_t sub_1B5FF3AE0()
{
  unint64_t result = qword_1E9DAB510;
  if (!qword_1E9DAB510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB510);
  }
  return result;
}

unint64_t sub_1B5FF3B30()
{
  unint64_t result = qword_1E9DAB518;
  if (!qword_1E9DAB518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB518);
  }
  return result;
}

unint64_t sub_1B5FF3B80()
{
  unint64_t result = qword_1EB6441F0;
  if (!qword_1EB6441F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6441F0);
  }
  return result;
}

unint64_t sub_1B5FF3BD0()
{
  unint64_t result = qword_1EB6441F8;
  if (!qword_1EB6441F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB6441F8);
  }
  return result;
}

void type metadata accessor for BlueprintLayoutOptionsKind()
{
}

uint64_t destroy for BlueprintLayoutOptions(uint64_t a1)
{
  sub_1B5E5F620(*(void *)(a1 + 232), *(void *)(a1 + 240), *(unsigned char *)(a1 + 248));
  sub_1B5E5F620(*(void *)(a1 + 256), *(void *)(a1 + 264), *(unsigned char *)(a1 + 272));
  uint64_t v2 = *(void *)(a1 + 280);
  uint64_t v3 = *(void *)(a1 + 288);
  char v4 = *(unsigned char *)(a1 + 296);
  return sub_1B5E5F620(v2, v3, v4);
}

uint64_t initializeWithCopy for BlueprintLayoutOptions(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 4sub_1B5E6F544(4, 0, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  char v4 = *(void **)(a2 + 128);
  long long v5 = *(void **)(a2 + 136);
  *(void *)(a1 + 128) = v4;
  *(void *)(a1 + 136) = v5;
  long long v6 = *(void **)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v6;
  long long v7 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 16sub_1B5E6F544(4, 0, 0) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v7;
  long long v8 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v8;
  uint64_t v9 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  uint64_t v10 = *(void *)(a2 + 240);
  char v11 = *(unsigned char *)(a2 + 248);
  id v12 = v4;
  id v13 = v5;
  id v14 = v6;
  sub_1B5E62DEC(v9, v10, v11);
  *(void *)(a1 + 232) = v9;
  *(void *)(a1 + 24sub_1B5E6F544(4, 0, 0) = v10;
  *(unsigned char *)(a1 + 248) = v11;
  uint64_t v15 = *(void *)(a2 + 256);
  uint64_t v16 = *(void *)(a2 + 264);
  char v17 = *(unsigned char *)(a2 + 272);
  sub_1B5E62DEC(v15, v16, v17);
  *(void *)(a1 + 256) = v15;
  *(void *)(a1 + 264) = v16;
  *(unsigned char *)(a1 + 272) = v17;
  uint64_t v18 = *(void *)(a2 + 280);
  uint64_t v19 = *(void *)(a2 + 288);
  char v20 = *(unsigned char *)(a2 + 296);
  sub_1B5E62DEC(v18, v19, v20);
  *(void *)(a1 + 28sub_1B5E6F544(4, 0, 0) = v18;
  *(void *)(a1 + 288) = v19;
  *(unsigned char *)(a1 + 296) = v20;
  long long v21 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 32sub_1B5E6F544(4, 0, 0) = v21;
  uint64_t v22 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = v22;
  *(_WORD *)(a1 + 352) = *(_WORD *)(a2 + 352);
  long long v23 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 36sub_1B5E6F544(4, 0, 0) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v23;
  memcpy((void *)(a1 + 392), (const void *)(a2 + 392), 0x85uLL);
  return a1;
}

uint64_t assignWithCopy for BlueprintLayoutOptions(uint64_t a1, uint64_t a2)
{
  char v4 = (unsigned char *)(a2 + 353);
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 12sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 120);
  long long v5 = *(void **)(a2 + 128);
  long long v6 = *(void **)(a1 + 128);
  *(void *)(a1 + 128) = v5;
  id v7 = v5;

  long long v8 = *(void **)(a2 + 136);
  uint64_t v9 = *(void **)(a1 + 136);
  *(void *)(a1 + 136) = v8;
  id v10 = v8;

  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  char v11 = *(void **)(a2 + 152);
  id v12 = *(void **)(a1 + 152);
  *(void *)(a1 + 152) = v11;
  id v13 = v11;

  *(void *)(a1 + 16sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 20sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  uint64_t v14 = *(void *)(a2 + 232);
  uint64_t v15 = *(void *)(a2 + 240);
  char v16 = *(unsigned char *)(a2 + 248);
  sub_1B5E62DEC(v14, v15, v16);
  uint64_t v17 = *(void *)(a1 + 232);
  uint64_t v18 = *(void *)(a1 + 240);
  *(void *)(a1 + 232) = v14;
  *(void *)(a1 + 24sub_1B5E6F544(4, 0, 0) = v15;
  char v19 = *(unsigned char *)(a1 + 248);
  *(unsigned char *)(a1 + 248) = v16;
  sub_1B5E5F620(v17, v18, v19);
  uint64_t v20 = *(void *)(a2 + 256);
  uint64_t v21 = *(void *)(a2 + 264);
  char v22 = *(unsigned char *)(a2 + 272);
  sub_1B5E62DEC(v20, v21, v22);
  uint64_t v23 = *(void *)(a1 + 256);
  uint64_t v24 = *(void *)(a1 + 264);
  *(void *)(a1 + 256) = v20;
  *(void *)(a1 + 264) = v21;
  char v25 = *(unsigned char *)(a1 + 272);
  *(unsigned char *)(a1 + 272) = v22;
  sub_1B5E5F620(v23, v24, v25);
  uint64_t v26 = *(void *)(a2 + 280);
  uint64_t v27 = *(void *)(a2 + 288);
  char v28 = *(unsigned char *)(a2 + 296);
  sub_1B5E62DEC(v26, v27, v28);
  uint64_t v29 = *(void *)(a1 + 280);
  uint64_t v30 = *(void *)(a1 + 288);
  *(void *)(a1 + 28sub_1B5E6F544(4, 0, 0) = v26;
  *(void *)(a1 + 288) = v27;
  char v31 = *(unsigned char *)(a1 + 296);
  *(unsigned char *)(a1 + 296) = v28;
  sub_1B5E5F620(v29, v30, v31);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 32sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  uint64_t v32 = *(void *)(a2 + 344);
  *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
  *(void *)(a1 + 344) = v32;
  *(unsigned char *)(a1 + 353) = *(unsigned char *)(a2 + 353);
  *(void *)(a1 + 36sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 40sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 44sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 48sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(unsigned char *)(a1 + 52sub_1B5E6F544(4, 0, 0) = v4[167];
  *(unsigned char *)(a1 + 52MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v4[168];
  *(unsigned char *)(a1 + 522) = v4[169];
  *(unsigned char *)(a1 + 523) = v4[170];
  *(unsigned char *)(a1 + 524) = v4[171];
  return a1;
}

uint64_t assignWithTake for BlueprintLayoutOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 280;
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 4sub_1B5E6F544(4, 0, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 12sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 120);
  long long v5 = *(void **)(a1 + 128);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);

  long long v6 = *(void **)(a1 + 136);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);

  uint64_t v7 = *(void *)(a2 + 152);
  long long v8 = *(void **)(a1 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v7;

  long long v9 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 16sub_1B5E6F544(4, 0, 0) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v9;
  long long v10 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v10;
  uint64_t v11 = *(void *)(a2 + 240);
  char v12 = *(unsigned char *)(a2 + 248);
  uint64_t v13 = *(void *)(a1 + 232);
  uint64_t v14 = *(void *)(a1 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(void *)(a1 + 24sub_1B5E6F544(4, 0, 0) = v11;
  char v15 = *(unsigned char *)(a1 + 248);
  *(unsigned char *)(a1 + 248) = v12;
  sub_1B5E5F620(v13, v14, v15);
  char v16 = *(unsigned char *)(a2 + 272);
  uint64_t v17 = *(void *)(a1 + 256);
  uint64_t v18 = *(void *)(a1 + 264);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  char v19 = *(unsigned char *)(a1 + 272);
  *(unsigned char *)(a1 + 272) = v16;
  sub_1B5E5F620(v17, v18, v19);
  char v20 = *(unsigned char *)(a2 + 296);
  uint64_t v21 = *(void *)(a1 + 280);
  uint64_t v22 = *(void *)(a1 + 288);
  *(_OWORD *)(a1 + 28sub_1B5E6F544(4, 0, 0) = *(_OWORD *)v4;
  char v23 = *(unsigned char *)(a1 + 296);
  *(unsigned char *)(a1 + 296) = v20;
  sub_1B5E5F620(v21, v22, v23);
  long long v24 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 32sub_1B5E6F544(4, 0, 0) = v24;
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
  *(unsigned char *)(a1 + 353) = *(unsigned char *)(v4 + 73);
  *(void *)(a1 + 36sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 360);
  long long v25 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v25;
  long long v26 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 40sub_1B5E6F544(4, 0, 0) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v26;
  long long v27 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v27;
  long long v28 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 48sub_1B5E6F544(4, 0, 0) = v28;
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(unsigned char *)(a1 + 52sub_1B5E6F544(4, 0, 0) = *(unsigned char *)(v4 + 240);
  *(unsigned char *)(a1 + 52MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *(unsigned char *)(v4 + 241);
  *(unsigned char *)(a1 + 522) = *(unsigned char *)(v4 + 242);
  *(unsigned char *)(a1 + 523) = *(unsigned char *)(v4 + 243);
  *(unsigned char *)(a1 + 524) = *(unsigned char *)(v4 + 244);
  return a1;
}

uint64_t getEnumTagSinglePayload for BlueprintLayoutOptions(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 525))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 128);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BlueprintLayoutOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 20sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 12sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 524) = 0;
    *(_DWORD *)(result + 52sub_1B5E6F544(4, 0, 0) = 0;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 44sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 36sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 28sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 525) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 128) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 525) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for BlueprintLayoutOptions()
{
}

unsigned char *_s5TeaUI26BlueprintLayoutOptionsKindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5FF4454);
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for BlueprintLayoutOptions.ViewportConfiguration()
{
}

unsigned char *storeEnumTagSinglePayload for BlueprintLayoutOptions.ViewportOrientation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5FF4554);
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for BlueprintLayoutOptions.ViewportOrientation()
{
}

void type metadata accessor for BlueprintLayoutOptions.ViewportDimensionChecks()
{
}

uint64_t destroy for BlueprintLayoutOptionsCommit(uint64_t a1)
{
  swift_bridgeObjectRelease();

  sub_1B5E5F620(*(void *)(a1 + 248), *(void *)(a1 + 256), *(unsigned char *)(a1 + 264));
  sub_1B5E5F620(*(void *)(a1 + 272), *(void *)(a1 + 280), *(unsigned char *)(a1 + 288));
  uint64_t v2 = *(void *)(a1 + 296);
  uint64_t v3 = *(void *)(a1 + 304);
  char v4 = *(unsigned char *)(a1 + 312);
  return sub_1B5E5F620(v2, v3, v4);
}

uint64_t initializeWithCopy for BlueprintLayoutOptionsCommit(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 4sub_1B5E6F544(4, 0, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 12sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 120);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  uint64_t v5 = *(void **)(a2 + 144);
  unsigned int v6 = *(void **)(a2 + 152);
  *(void *)(a1 + 144) = v5;
  *(void *)(a1 + 152) = v6;
  uint64_t v7 = *(void **)(a2 + 168);
  *(void *)(a1 + 16sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v7;
  long long v8 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v8;
  long long v9 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v9;
  uint64_t v10 = *(void *)(a2 + 248);
  *(void *)(a1 + 24sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 240);
  uint64_t v11 = *(void *)(a2 + 256);
  char v12 = *(unsigned char *)(a2 + 264);
  sub_1B61B1F70();
  id v13 = v5;
  id v14 = v6;
  id v15 = v7;
  sub_1B5E62DEC(v10, v11, v12);
  *(void *)(a1 + 248) = v10;
  *(void *)(a1 + 256) = v11;
  *(unsigned char *)(a1 + 264) = v12;
  uint64_t v16 = *(void *)(a2 + 272);
  uint64_t v17 = *(void *)(a2 + 280);
  char v18 = *(unsigned char *)(a2 + 288);
  sub_1B5E62DEC(v16, v17, v18);
  *(void *)(a1 + 272) = v16;
  *(void *)(a1 + 28sub_1B5E6F544(4, 0, 0) = v17;
  *(unsigned char *)(a1 + 288) = v18;
  uint64_t v19 = *(void *)(a2 + 296);
  uint64_t v20 = *(void *)(a2 + 304);
  char v21 = *(unsigned char *)(a2 + 312);
  sub_1B5E62DEC(v19, v20, v21);
  *(void *)(a1 + 296) = v19;
  *(void *)(a1 + 304) = v20;
  *(unsigned char *)(a1 + 312) = v21;
  long long v22 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 32sub_1B5E6F544(4, 0, 0) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v22;
  uint64_t v23 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 36sub_1B5E6F544(4, 0, 0) = v23;
  *(_WORD *)(a1 + 368) = *(_WORD *)(a2 + 368);
  long long v24 = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 392) = v24;
  memcpy((void *)(a1 + 408), (const void *)(a2 + 408), 0x85uLL);
  return a1;
}

uint64_t assignWithCopy for BlueprintLayoutOptionsCommit(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unsigned char *)(a2 + 369);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 12sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v5 = *(void **)(a2 + 144);
  unsigned int v6 = *(void **)(a1 + 144);
  *(void *)(a1 + 144) = v5;
  id v7 = v5;

  long long v8 = *(void **)(a2 + 152);
  long long v9 = *(void **)(a1 + 152);
  *(void *)(a1 + 152) = v8;
  id v10 = v8;

  *(void *)(a1 + 16sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 160);
  uint64_t v11 = *(void **)(a2 + 168);
  char v12 = *(void **)(a1 + 168);
  *(void *)(a1 + 168) = v11;
  id v13 = v11;

  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 20sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 24sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 240);
  uint64_t v14 = *(void *)(a2 + 248);
  uint64_t v15 = *(void *)(a2 + 256);
  char v16 = *(unsigned char *)(a2 + 264);
  sub_1B5E62DEC(v14, v15, v16);
  uint64_t v17 = *(void *)(a1 + 248);
  uint64_t v18 = *(void *)(a1 + 256);
  *(void *)(a1 + 248) = v14;
  *(void *)(a1 + 256) = v15;
  char v19 = *(unsigned char *)(a1 + 264);
  *(unsigned char *)(a1 + 264) = v16;
  sub_1B5E5F620(v17, v18, v19);
  uint64_t v20 = *(void *)(a2 + 272);
  uint64_t v21 = *(void *)(a2 + 280);
  char v22 = *(unsigned char *)(a2 + 288);
  sub_1B5E62DEC(v20, v21, v22);
  uint64_t v23 = *(void *)(a1 + 272);
  uint64_t v24 = *(void *)(a1 + 280);
  *(void *)(a1 + 272) = v20;
  *(void *)(a1 + 28sub_1B5E6F544(4, 0, 0) = v21;
  char v25 = *(unsigned char *)(a1 + 288);
  *(unsigned char *)(a1 + 288) = v22;
  sub_1B5E5F620(v23, v24, v25);
  uint64_t v26 = *(void *)(a2 + 296);
  uint64_t v27 = *(void *)(a2 + 304);
  char v28 = *(unsigned char *)(a2 + 312);
  sub_1B5E62DEC(v26, v27, v28);
  uint64_t v29 = *(void *)(a1 + 296);
  uint64_t v30 = *(void *)(a1 + 304);
  *(void *)(a1 + 296) = v26;
  *(void *)(a1 + 304) = v27;
  char v31 = *(unsigned char *)(a1 + 312);
  *(unsigned char *)(a1 + 312) = v28;
  sub_1B5E5F620(v29, v30, v31);
  *(void *)(a1 + 32sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  uint64_t v32 = *(void *)(a2 + 360);
  *(unsigned char *)(a1 + 368) = *(unsigned char *)(a2 + 368);
  *(void *)(a1 + 36sub_1B5E6F544(4, 0, 0) = v32;
  *(unsigned char *)(a1 + 369) = *(unsigned char *)(a2 + 369);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 40sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 44sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 48sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 52sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(unsigned char *)(a1 + 536) = v4[167];
  *(unsigned char *)(a1 + 537) = v4[168];
  *(unsigned char *)(a1 + 538) = v4[169];
  *(unsigned char *)(a1 + 539) = v4[170];
  *(unsigned char *)(a1 + 54sub_1B5E6F544(4, 0, 0) = v4[171];
  return a1;
}

void *__swift_memcpy541_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x21DuLL);
}

uint64_t assignWithTake for BlueprintLayoutOptionsCommit(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 296;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 4sub_1B5E6F544(4, 0, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 12sub_1B5E6F544(4, 0, 0) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  unsigned int v6 = *(void **)(a1 + 144);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);

  id v7 = *(void **)(a1 + 152);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);

  uint64_t v8 = *(void *)(a2 + 168);
  long long v9 = *(void **)(a1 + 168);
  *(void *)(a1 + 16sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v8;

  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  long long v11 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v11;
  uint64_t v12 = *(void *)(a2 + 256);
  char v13 = *(unsigned char *)(a2 + 264);
  uint64_t v14 = *(void *)(a1 + 248);
  uint64_t v15 = *(void *)(a1 + 256);
  *(_OWORD *)(a1 + 24sub_1B5E6F544(4, 0, 0) = *(_OWORD *)(a2 + 240);
  *(void *)(a1 + 256) = v12;
  char v16 = *(unsigned char *)(a1 + 264);
  *(unsigned char *)(a1 + 264) = v13;
  sub_1B5E5F620(v14, v15, v16);
  char v17 = *(unsigned char *)(a2 + 288);
  uint64_t v18 = *(void *)(a1 + 272);
  uint64_t v19 = *(void *)(a1 + 280);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  char v20 = *(unsigned char *)(a1 + 288);
  *(unsigned char *)(a1 + 288) = v17;
  sub_1B5E5F620(v18, v19, v20);
  char v21 = *(unsigned char *)(a2 + 312);
  uint64_t v22 = *(void *)(a1 + 296);
  uint64_t v23 = *(void *)(a1 + 304);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)v4;
  char v24 = *(unsigned char *)(a1 + 312);
  *(unsigned char *)(a1 + 312) = v21;
  sub_1B5E5F620(v22, v23, v24);
  long long v25 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 32sub_1B5E6F544(4, 0, 0) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v25;
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 36sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 360);
  *(unsigned char *)(a1 + 368) = *(unsigned char *)(a2 + 368);
  *(unsigned char *)(a1 + 369) = *(unsigned char *)(v4 + 73);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  long long v26 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 40sub_1B5E6F544(4, 0, 0) = v26;
  long long v27 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v27;
  long long v28 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v28;
  long long v29 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 48sub_1B5E6F544(4, 0, 0) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v29;
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(unsigned char *)(a1 + 536) = *(unsigned char *)(v4 + 240);
  *(unsigned char *)(a1 + 537) = *(unsigned char *)(v4 + 241);
  *(unsigned char *)(a1 + 538) = *(unsigned char *)(v4 + 242);
  *(unsigned char *)(a1 + 539) = *(unsigned char *)(v4 + 243);
  *(unsigned char *)(a1 + 54sub_1B5E6F544(4, 0, 0) = *(unsigned char *)(v4 + 244);
  return a1;
}

uint64_t getEnumTagSinglePayload for BlueprintLayoutOptionsCommit(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 541))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BlueprintLayoutOptionsCommit(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 20sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 12sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 54sub_1B5E6F544(4, 0, 0) = 0;
    *(_DWORD *)(result + 536) = 0;
    *(_OWORD *)(result + 52sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 44sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 36sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 28sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 54MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 54MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for BlueprintLayoutOptionsCommit()
{
}

uint64_t dispatch thunk of BlueprintLayoutOptionsProviderType.layoutOptions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BlueprintLayoutOptionsProviderType.layoutOptionsCommit.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of BlueprintLayoutOptionsProviderType.layoutViewportConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of BlueprintLayoutOptionsProviderType.layoutViewportDimensionChecks.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of BlueprintLayoutOptionsProviderType.createLayoutOptions(bounds:kind:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t type metadata accessor for BlueprintLayoutOptionsProvider()
{
  return self;
}

uint64_t method lookup function for BlueprintLayoutOptionsProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BlueprintLayoutOptionsProvider);
}

uint64_t dispatch thunk of BlueprintLayoutOptionsProvider.__allocating_init(view:compositionalLayoutOptionsProvider:appTraitEnvironmentProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

Swift::Void __swiftcall UIImageView.setImageIfNeeded(_:)(UIImage_optional a1)
{
  unint64_t v2 = v1;
  Class isa = a1.value.super.isa;
  id v4 = objc_msgSend(v1, sel_image);
  if (v4)
  {
    uint64_t v5 = v4;
    if (isa)
    {
      sub_1B5DFF760(0, (unint64_t *)&qword_1EB647CA0);
      unsigned int v6 = isa;
      id v7 = v5;
      char v8 = sub_1B61B2E10();

      if (v8) {
        return;
      }
    }
    else
    {
    }
  }
  else if (!isa)
  {
    return;
  }
  objc_msgSend(v2, sel_setImage_, isa);
}

uint64_t sub_1B5FF4EE4()
{
  sub_1B5F19178();
  swift_allocObject();
  uint64_t result = sub_1B61B06A0();
  qword_1EB63FA08 = result;
  return result;
}

Swift::Void __swiftcall UIImageView.ts_clearImage()()
{
  objc_msgSend(v0, sel_setImage_, 0);
  if (qword_1EB63F9A0 != -1) {
    swift_once();
  }
  swift_unknownObjectRetain();
  sub_1B61B06D0();
}

uint64_t UIImageView.ts_image(from:with:completion:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  long long v11 = (void *)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  uint64_t v12 = qword_1EB63F9A0;
  id v13 = v11;
  if (v12 != -1) {
    swift_once();
  }
  swift_unknownObjectRetain();
  sub_1B61B06D0();
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  char v16 = (void *)swift_allocObject();
  v16[2] = v5;
  void v16[3] = v13;
  v16[4] = a3;
  v16[5] = a4;
  char v17 = *(void (**)(void *, uint64_t (*)(void *, uint64_t), void *, uint64_t, uint64_t))(v15 + 8);
  id v18 = v13;
  id v19 = v5;
  swift_retain();
  v17(a2, sub_1B5FF54B0, v16, v14, v15);

  return swift_release();
}

uint64_t sub_1B5FF5130(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v23 = a5;
  uint64_t v9 = sub_1B61B1D90();
  uint64_t v25 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1B61B1DF0();
  uint64_t v12 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB64CA90);
  uint64_t v15 = (void *)sub_1B61B2C50();
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  char v17 = (void *)swift_allocObject();
  long long v17[2] = v16;
  void v17[3] = a4;
  v17[4] = v23;
  void v17[5] = a6;
  v17[6] = a1;
  aBlock[4] = sub_1B5FF5990;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B5E3729C;
  aBlock[3] = &block_descriptor_18_1;
  id v18 = _Block_copy(aBlock);
  id v19 = a1;
  id v20 = a4;
  swift_retain();
  swift_release();
  sub_1B61B1DB0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1B5E397C8((unint64_t *)&qword_1EB647A40, MEMORY[0x1E4FBCB00]);
  sub_1B5E39770();
  sub_1B5E397C8((unint64_t *)&qword_1EB647AE0, (void (*)(uint64_t))sub_1B5E39770);
  sub_1B61B3100();
  MEMORY[0x1BA9AFE10](0, v14, v11, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v24);
}

uint64_t sub_1B5FF5468()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5FF54B0(void *a1, uint64_t a2)
{
  return sub_1B5FF5130(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

void sub_1B5FF54BC(uint64_t a1, void *a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v8 = a1 + 16;
  swift_beginAccess();
  uint64_t v9 = MEMORY[0x1BA9B1EC0](v8);
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    if (qword_1EB63F9A0 != -1) {
      swift_once();
    }
    long long v11 = (void *)sub_1B61B06C0();

    if (v11)
    {
      sub_1B5DFF760(0, &qword_1EB648F40);
      id v12 = a2;
      id v13 = v11;
      char v14 = sub_1B61B2E10();

      if (v14) {
        a3(a5);
      }
    }
  }
}

void UIImageView.ts_crossFadeImage(_:animated:completion:)(void *a1, char a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v5 = v4;
  if (a1)
  {
    id v9 = a1;
    id v18 = v9;
    if (a2)
    {
      objc_msgSend(v5, sel_setAlpha_, 0.0);
      objc_msgSend(v5, sel_setImage_, v18);
      uint64_t v10 = self;
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v5;
      uint64_t v23 = sub_1B5FE7A7C;
      uint64_t v24 = (void *)v11;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v20 = 1107296256;
      char v21 = sub_1B5E3729C;
      uint64_t v22 = &block_descriptor_46;
      id v12 = _Block_copy(&aBlock);
      id v13 = v5;
      swift_release();
      char v14 = (void *)swift_allocObject();
      long long v14[2] = v13;
      float64x2_t v14[3] = a3;
      v14[4] = a4;
      uint64_t v23 = sub_1B5FF58C8;
      uint64_t v24 = v14;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v20 = 1107296256;
      char v21 = sub_1B5E73DCC;
      uint64_t v22 = &block_descriptor_9_2;
      uint64_t v15 = _Block_copy(&aBlock);
      id v16 = v13;
      sub_1B5E4DC4C((uint64_t)a3);
      swift_release();
      objc_msgSend(v10, sel_animateWithDuration_delay_options_animations_completion_, 65538, v12, v15, 0.25, 0.0);

      _Block_release(v15);
      _Block_release(v12);
    }
    else
    {
      objc_msgSend(v5, sel_setImage_, v9);
      id v17 = objc_msgSend(v5, sel_setAlpha_, 1.0);
      if (a3) {
        ((void (*)(id))a3)(v17);
      }
    }
  }
  else if (a3)
  {
    a3();
  }
}

uint64_t sub_1B5FF5848()
{
  return swift_deallocObject();
}

uint64_t sub_1B5FF5880()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  return swift_deallocObject();
}

id sub_1B5FF58C8()
{
  uint64_t v1 = *(uint64_t (**)(id))(v0 + 24);
  id result = objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, 1.0);
  if (v1) {
    return (id)v1(result);
  }
  return result;
}

uint64_t sub_1B5FF5908()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B5FF5940()
{
  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1B5FF5990()
{
  sub_1B5FF54BC(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

void *BlueprintLayoutCollectionPinAdjuster.init(layoutOptions:layoutDirection:)@<X0>(const void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = *a2;
  id v6 = objc_msgSend(self, sel_mainBundle);
  uint64_t v7 = sub_1B5E830CC(v6);
  if (v8)
  {
    if (v7 == 0xD000000000000010 && v8 == 0x80000001B61E0080) {
      char v9 = 1;
    }
    else {
      char v9 = sub_1B61B3760();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = 0;
  }
  id result = memcpy((void *)a3, a1, 0x20DuLL);
  *(unsigned char *)(a3 + 525) = v5;
  uint64_t v11 = MEMORY[0x1E4FBC868];
  *(unsigned char *)(a3 + 526) = v9 & 1;
  *(void *)(a3 + 528) = v11;
  *(void *)(a3 + 536) = v11;
  *(void *)(a3 + 544) = v11;
  *(void *)(a3 + 552) = v11;
  *(void *)(a3 + 56sub_1B5E6F544(4, 0, 0) = v11;
  return result;
}

void BlueprintLayoutCollectionPinAdjuster.shouldInvalidateLayoutAttributes(for:offset:insets:contentSize:hasViewOnScreen:)()
{
  OUTLINED_FUNCTION_47_0();
  char v56 = v3;
  OUTLINED_FUNCTION_6_52();
  memcpy(__dst, (const void *)v0, sizeof(__dst));
  char v72 = *(unsigned char *)(v0 + 525);
  char v64 = *(unsigned char *)(v0 + 526);
  char v61 = *(unsigned char *)(v0 + 527);
  long long v4 = *(_OWORD *)(v0 + 528);
  uint64_t v65 = *(void *)(v0 + 544);
  long long v71 = *(_OWORD *)(v0 + 552);
  uint64_t v70 = MEMORY[0x1E4FBC860];
  long long v60 = v4;
  uint64_t v57 = v4 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v4 + 64);
  int64_t v58 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v59 = v4;
  BOOL v8 = v1 <= 0.0;
  if (v2 <= 0.0) {
    BOOL v8 = 1;
  }
  BOOL v55 = v8;
  sub_1B61B1F70();
  int64_t v9 = 0;
  while (1)
  {
LABEL_6:
    if (v7)
    {
      uint64_t v62 = (v7 - 1) & v7;
      int64_t v63 = v9;
      unint64_t v10 = __clz(__rbit64(v7)) | (v9 << 6);
    }
    else
    {
      int64_t v11 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_72;
      }
      if (v11 >= v58)
      {
LABEL_70:
        swift_release();
        OUTLINED_FUNCTION_46_0();
        return;
      }
      unint64_t v12 = *(void *)(v57 + 8 * v11);
      int64_t v13 = v9 + 1;
      if (!v12)
      {
        int64_t v13 = v9 + 2;
        if (v9 + 2 >= v58) {
          goto LABEL_70;
        }
        unint64_t v12 = *(void *)(v57 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v9 + 3;
          if (v9 + 3 >= v58) {
            goto LABEL_70;
          }
          unint64_t v12 = *(void *)(v57 + 8 * v13);
          if (!v12)
          {
            uint64_t v14 = v9 + 4;
            if (v9 + 4 >= v58) {
              goto LABEL_70;
            }
            unint64_t v12 = *(void *)(v57 + 8 * v14);
            if (!v12)
            {
              while (1)
              {
                int64_t v13 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  goto LABEL_73;
                }
                if (v13 >= v58) {
                  goto LABEL_70;
                }
                unint64_t v12 = *(void *)(v57 + 8 * v13);
                ++v14;
                if (v12) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v9 + 4;
          }
        }
      }
LABEL_21:
      uint64_t v62 = (v12 - 1) & v12;
      int64_t v63 = v13;
      unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    }
    uint64_t v15 = *(void *)(*(void *)(v59 + 48) + 8 * v10);
    unint64_t v16 = *(void *)(*(void *)(v59 + 56) + 8 * v10);
    if (!(v16 >> 62))
    {
      uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v17) {
        break;
      }
      goto LABEL_24;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v17 = sub_1B61B3530();
    if (!v17) {
      break;
    }
LABEL_24:
    uint64_t v18 = 4;
    while (1)
    {
      if ((v16 & 0xC000000000000001) != 0) {
        id v19 = (char *)MEMORY[0x1BA9B04B0](v18 - 4, v16);
      }
      else {
        id v19 = (char *)*(id *)(v16 + 8 * v18);
      }
      uint64_t v20 = v19;
      uint64_t v21 = v18 - 3;
      if (__OFADD__(v18 - 4, 1))
      {
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
        goto LABEL_74;
      }
      uint64_t v22 = &v19[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_pinTrait];
      OUTLINED_FUNCTION_24();
      if (!v22[8])
      {
        if ((*v22 & 1) == 0) {
          goto LABEL_63;
        }
        char v23 = sub_1B61B3760();
        swift_bridgeObjectRelease();
        if (v23)
        {
          swift_bridgeObjectRelease();

          goto LABEL_67;
        }
        if (!v22[8]) {
          break;
        }
      }

LABEL_36:
      ++v18;
      if (v21 == v17) {
        goto LABEL_37;
      }
    }
    if ((*v22 & 1) == 0)
    {
      char v24 = sub_1B61B3760();

      swift_bridgeObjectRelease();
      if (v24) {
        goto LABEL_66;
      }
      goto LABEL_36;
    }
LABEL_63:
    swift_bridgeObjectRelease();

LABEL_66:
    swift_bridgeObjectRelease();
LABEL_67:
    unint64_t v7 = v62;
    int64_t v9 = v63;
    sub_1B5E51200(v16);
  }
LABEL_37:
  swift_bridgeObjectRelease();
  if (!*(void *)(v65 + 16)
    || (unint64_t v25 = sub_1B5E46F88(v15), (v30 & 1) == 0)
    || !OUTLINED_FUNCTION_19_22(v26, v27, v28, v29, *(double *)(*(void *)(v65 + 56) + 32 * v25), *(double *)(*(void *)(v65 + 56) + 32 * v25 + 8), *(double *)(*(void *)(v65 + 56) + 32 * v25 + 16), *(double *)(*(void *)(v65 + 56) + 32 * v25 + 24))|| !v17)
  {
LABEL_62:
    swift_bridgeObjectRelease();
    unint64_t v7 = v62;
    int64_t v9 = v63;
    goto LABEL_6;
  }
  if (v17 >= 1)
  {
    uint64_t v31 = 0;
    char v32 = v72;
    while (1)
    {
      id v33 = (v16 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x1BA9B04B0](v31, v16)
          : *(id *)(v16 + 8 * v31 + 32);
      uint64_t v34 = v33;
      memcpy(v66, __dst, 0x20DuLL);
      v66[525] = v72;
      v66[526] = v64;
      v66[527] = v61;
      long long v67 = v60;
      uint64_t v68 = v65;
      long long v69 = v71;
      BlueprintLayoutCollectionPinAdjuster.adjusted(layoutAttributes:offset:insets:contentSize:)();
      uint64_t v36 = v35;
      if ((v32 & 1) == 0) {
        break;
      }
      objc_msgSend(v35, sel_frame);
      OUTLINED_FUNCTION_22_21();
      if (OUTLINED_FUNCTION_19_22(v37, v38, v39, v40, v41, v42, v43, v44))
      {
        objc_msgSend(v36, sel_frame);
        CGFloat v46 = v45;
        CGFloat v48 = v47;
        CGFloat v50 = v49;
        CGFloat v52 = v51;
        objc_msgSend(v34, sel_frame);
        OUTLINED_FUNCTION_22_21();
        v74.origin.x = v46;
        v74.origin.y = v48;
        v74.size.double width = v50;
        v74.size.double height = v52;
        if (!CGRectEqualToRect(v74, v75)
          || (v56(v36) & 1) == 0
          || (v64 & 1) != 0
          || v55
          && (char v53 = &v36[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_rubberbandEdge],
              OUTLINED_FUNCTION_24(),
              *v53 != 3))
        {
          uint64_t v36 = v36;
          MEMORY[0x1BA9AF660]();
          OUTLINED_FUNCTION_28_17();
          if (v54) {
            OUTLINED_FUNCTION_16_22();
          }
          sub_1B61B25D0();
          OUTLINED_FUNCTION_17_25();
LABEL_60:
          sub_1B61B2510();
          goto LABEL_61;
        }
        OUTLINED_FUNCTION_17_25();
      }
LABEL_61:
      ++v31;

      if (v17 == v31) {
        goto LABEL_62;
      }
    }
    uint64_t v36 = v35;
    MEMORY[0x1BA9AF660]();
    OUTLINED_FUNCTION_28_17();
    if (v54) {
      OUTLINED_FUNCTION_16_22();
    }
    sub_1B61B25D0();
    goto LABEL_60;
  }
LABEL_74:
  __break(1u);
}

void BlueprintLayoutCollectionPinAdjuster.adjusted(layoutAttributes:offset:insets:contentSize:)()
{
  OUTLINED_FUNCTION_47_0();
  double v150 = v1;
  *(void *)&long long v151 = v2;
  double v148 = v3;
  double v149 = v4;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  *(void *)&long long v152 = v13;
  sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v137 = v15;
  uint64_t v138 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v136 = (uint64_t)&v131 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v17);
  uint64_t v135 = (uint64_t)&v131 - v18;
  OUTLINED_FUNCTION_26();
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  MEMORY[0x1F4188790](v20);
  uint64_t v134 = (uint64_t)&v131 - v21;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v22);
  uint64_t v133 = (uint64_t)&v131 - v23;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v24);
  *(void *)&double v132 = (char *)&v131 - v25;
  memcpy(v168, (const void *)v0, sizeof(v168));
  uint64_t v27 = *(void *)(v0 + 160);
  double v26 = *(double *)(v0 + 168);
  double v28 = (const void *)(v0 + 192);
  uint64_t v30 = *(void *)(v0 + 176);
  uint64_t v29 = *(void *)(v0 + 184);
  memcpy(v167, (const void *)(v0 + 192), sizeof(v167));
  int v31 = *(unsigned __int8 *)(v0 + 525);
  uint64_t v32 = v0 + 526;
  long long v165 = *(_OWORD *)(v0 + 526);
  __int16 v166 = *(_WORD *)(v0 + 542);
  uint64_t v33 = *(void *)(v0 + 544);
  uint64_t v34 = *(void *)(v0 + 552);
  uint64_t v35 = *(void *)(v0 + 560);
  OUTLINED_FUNCTION_21_20();
  uint64_t v139 = v27;
  uint64_t v140 = v30;
  uint64_t v156 = v27;
  double v157 = v26;
  double v145 = v26;
  double v36 = v10;
  uint64_t v158 = v30;
  uint64_t v141 = v29;
  uint64_t v159 = v29;
  double v37 = v8;
  memcpy((void *)(v0 + 192), (const void *)(v0 + 192), 0x14DuLL);
  int v147 = v31;
  char v160 = v31;
  *(_OWORD *)(v0 + 526) = *(_OWORD *)(v0 + 526);
  __int16 v161 = *(_WORD *)(v0 + 542);
  uint64_t v142 = v33;
  uint64_t v143 = v34;
  uint64_t v162 = v33;
  uint64_t v163 = v34;
  uint64_t v144 = v35;
  uint64_t v164 = v35;
  double v146 = v12;
  double v38 = v12;
  double v39 = v6;
  double v41 = v148;
  double v40 = v149;
  sub_1B5FF6CE4((char *)v154, v38, v10, v37, v148, v149, v150, *(double *)&v151);
  unsigned int a_low = LOBYTE(v154[0].a);
  double v43 = (unsigned char *)(v152 + OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_rubberbandEdge);
  OUTLINED_FUNCTION_24();
  switch(*v43)
  {
    case 1:
      if (a_low != 1) {
        goto LABEL_3;
      }
      goto LABEL_11;
    case 2:
      if (a_low <= 1) {
        goto LABEL_11;
      }
      goto LABEL_3;
    case 3:
      goto LABEL_3;
    default:
      if (a_low)
      {
LABEL_3:
        uint64_t v44 = v152 + OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_pinTrait;
        OUTLINED_FUNCTION_24();
        double v45 = *(double *)v44;
        switch(*(unsigned char *)(v44 + 8))
        {
          case 1:
            OUTLINED_FUNCTION_21_20();
            uint64_t v156 = v139;
            double v157 = v145;
            uint64_t v158 = v140;
            uint64_t v159 = v141;
            memcpy((void *)(v44 + 192), v28, 0x14DuLL);
            char v160 = v147;
            *(_OWORD *)(v44 + 526) = *(_OWORD *)v32;
            __int16 v161 = *(_WORD *)(v32 + 16);
            uint64_t v162 = v142;
            uint64_t v163 = v143;
            uint64_t v164 = v144;
            objc_msgSend((id)v152, sel_frame);
            double v46 = sub_1B5FF6D70(v72, v73, v74, v75, v45, v146, v10, v37, v39, v41, v40, 0.0);
            goto LABEL_28;
          case 2:
            double v150 = v37;
            *(double *)&long long v151 = v10;
            id v77 = objc_msgSend((id)v152, sel_indexPath);
            sub_1B61AFC40();

            sub_1B61AFC90();
            uint64_t v78 = *(void (**)(void))(v137 + 8);
            OUTLINED_FUNCTION_46();
            v78();
            uint64_t v79 = v142;
            sub_1B5E13B28();
            OUTLINED_FUNCTION_14_26();
            double v80 = OUTLINED_FUNCTION_13_27();
            if ((v83 & 1) == 0) {
              double v80 = OUTLINED_FUNCTION_27_16();
            }
            double v132 = *(double *)&v82;
            uint64_t v133 = v81;
            uint64_t v134 = *(void *)&v80;
            id v84 = objc_msgSend((id)v152, sel_indexPath);
            sub_1B61AFC40();

            sub_1B61AFC90();
            OUTLINED_FUNCTION_46();
            v78();
            uint64_t v85 = v143;
            sub_1B5E13B28();
            OUTLINED_FUNCTION_11_28();
            OUTLINED_FUNCTION_24_19();
            if ((v87 & 1) == 0) {
              OUTLINED_FUNCTION_23_23();
            }
            id v88 = OUTLINED_FUNCTION_25_19(v86, sel_indexPath);
            sub_1B61AFC40();

            uint64_t v89 = sub_1B61AFC90();
            OUTLINED_FUNCTION_46();
            v78();
            uint64_t v90 = v144;
            sub_1B5E13B90(v89, v144);
            OUTLINED_FUNCTION_10_39();
            OUTLINED_FUNCTION_5_50();
            *(void *)&double v91 = OUTLINED_FUNCTION_8_38().n128_u64[0];
            uint64_t v162 = v79;
            uint64_t v163 = v85;
            uint64_t v164 = v90;
            objc_msgSend((id)v152, sel_frame, v91);
            OUTLINED_FUNCTION_1_88();
            double v102 = v132;
            uint64_t v101 = v133;
            double v103 = v10;
            uint64_t v104 = v134;
            uint64_t v105 = (uint64_t)v78;
            uint64_t v106 = *(void *)&v45;
            char v107 = 0;
            goto LABEL_49;
          case 3:
            if (v45 != 0.0)
            {
              OUTLINED_FUNCTION_46_0();
              id v110 = v108;
              return;
            }
            double v150 = v37;
            *(double *)&long long v151 = v10;
            id v116 = objc_msgSend((id)v152, sel_indexPath);
            sub_1B61AFC40();

            sub_1B61AFC90();
            uint64_t v117 = *(void (**)(void))(v137 + 8);
            OUTLINED_FUNCTION_46();
            v117();
            uint64_t v118 = v142;
            sub_1B5E13B28();
            OUTLINED_FUNCTION_14_26();
            *(double *)&uint64_t v119 = OUTLINED_FUNCTION_13_27();
            if ((v122 & 1) == 0) {
              *(double *)&uint64_t v119 = OUTLINED_FUNCTION_27_16();
            }
            double v132 = *(double *)&v121;
            uint64_t v135 = v120;
            uint64_t v136 = v119;
            id v123 = objc_msgSend((id)v152, sel_indexPath);
            sub_1B61AFC40();

            sub_1B61AFC90();
            OUTLINED_FUNCTION_46();
            v117();
            uint64_t v124 = v143;
            sub_1B5E13B28();
            OUTLINED_FUNCTION_11_28();
            OUTLINED_FUNCTION_24_19();
            if ((v126 & 1) == 0) {
              OUTLINED_FUNCTION_23_23();
            }
            id v127 = OUTLINED_FUNCTION_25_19(v125, sel_indexPath);
            sub_1B61AFC40();

            uint64_t v128 = sub_1B61AFC90();
            OUTLINED_FUNCTION_46();
            v117();
            uint64_t v129 = v144;
            sub_1B5E13B90(v128, v144);
            OUTLINED_FUNCTION_10_39();
            OUTLINED_FUNCTION_5_50();
            *(void *)&double v130 = OUTLINED_FUNCTION_8_38().n128_u64[0];
            uint64_t v162 = v118;
            uint64_t v163 = v124;
            uint64_t v164 = v129;
            objc_msgSend((id)v152, sel_frame, v130);
            OUTLINED_FUNCTION_1_88();
            uint64_t v101 = v135;
            uint64_t v104 = v136;
            double v102 = v132;
            double v103 = v10;
            uint64_t v105 = (uint64_t)v117;
            uint64_t v106 = 0;
            char v107 = 1;
LABEL_49:
            sub_1B5FF6E68(v105, v106, v107, v92, v93, v94, v95, v96, v97, v98, v99, v100, *(double *)&v101, v102, v103, *(double *)&v104, v131, *(uint64_t *)&v132, v133,
              v134,
              v135,
              v136,
              *(double *)&v137,
              v138,
              v139,
              v140);
            swift_bridgeObjectRelease();
            double v46 = OUTLINED_FUNCTION_7();
LABEL_50:
            sub_1B5FF6C18(v76, v46, v47, v48, v49);
            break;
          default:
            objc_msgSend((id)v152, sel_frame);
            if (v147)
            {
              if ((LOBYTE(v45) & 1) == 0 && v10 + v37 > v47) {
                CGFloat v47 = v10 + v37;
              }
            }
            else
            {
              double v50 = -0.0;
              if ((LOBYTE(v45) & 1) == 0) {
                double v50 = v146;
              }
              double v46 = v50 + v46;
            }
LABEL_28:
            uint64_t v76 = (void *)v152;
            goto LABEL_50;
        }
      }
      else
      {
LABEL_11:
        objc_msgSend((id)v152, sel_frame);
        CGFloat v54 = v53;
        CGFloat v56 = v55;
        double v57 = 0.0;
        if (v52 <= 0.0) {
          double v57 = v52;
        }
        double v58 = v37;
        double v59 = v10 + v37 + v57;
        double v60 = v51 + v146;
        double v61 = v145 + v146;
        if (v145 + v146 <= v51) {
          double v61 = v51;
        }
        if (a_low) {
          double v60 = v61;
        }
        if (v147) {
          CGFloat v62 = v59;
        }
        else {
          CGFloat v62 = v52;
        }
        if (v147) {
          CGFloat v63 = v51;
        }
        else {
          CGFloat v63 = v60;
        }
        id v64 = sub_1B5FF6C18((void *)v152, v63, v62, v54, v56);
        uint64_t v65 = (char *)(v152 + OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_rubberbandTrait);
        OUTLINED_FUNCTION_24();
        char v66 = *v65;
        if ((v66 & 0xFE) != 2 && v36 <= 0.0)
        {
          double v67 = vabdd_f64(fabs(v36), v58) + OUTLINED_FUNCTION_4_68();
          double v68 = fmax(v67 / OUTLINED_FUNCTION_4_68(), 1.0);
          double v69 = OUTLINED_FUNCTION_4_68() * v68;
          double v70 = (v69 - OUTLINED_FUNCTION_4_68()) * 0.5;
          if (v66) {
            CGFloat v71 = 1.0;
          }
          else {
            CGFloat v71 = v68;
          }
          CGAffineTransformMakeScale(&v155, v71, v68);
          long long v151 = *(_OWORD *)&v155.c;
          long long v152 = *(_OWORD *)&v155.a;
          CGFloat tx = v155.tx;
          CGFloat ty = v155.ty;
          CGAffineTransformMakeTranslation(&v155, 0.0, v70);
          long long v113 = *(_OWORD *)&v155.a;
          long long v114 = *(_OWORD *)&v155.c;
          long long v115 = *(_OWORD *)&v155.tx;
          *(_OWORD *)&v155.a = v152;
          *(_OWORD *)&v155.c = v151;
          v155.CGFloat tx = tx;
          v155.CGFloat ty = ty;
          *(_OWORD *)&v154[0].a = v113;
          *(_OWORD *)&v154[0].c = v114;
          *(_OWORD *)&v154[0].CGFloat tx = v115;
          CGAffineTransformConcat(&v153, &v155, v154);
          CGAffineTransform v155 = v153;
          objc_msgSend(v64, sel_setTransform_, &v155);
        }
      }
      OUTLINED_FUNCTION_46_0();
      return;
  }
}

__C::CGRect __swiftcall BlueprintLayoutCollectionPinAdjuster.frameForSection(index:)(Swift::Int index)
{
  uint64_t v2 = *(void *)(v1 + 544);
  double v3 = 0.0;
  if (*(void *)(v2 + 16))
  {
    unint64_t v4 = sub_1B5E46F88(index);
    double v5 = 0.0;
    double v6 = 0.0;
    double v7 = 0.0;
    if (v8)
    {
      uint64_t v9 = *(void *)(v2 + 56) + 32 * v4;
      double v6 = *(double *)v9;
      double v7 = *(double *)(v9 + 8);
      double v3 = *(double *)(v9 + 16);
      double v5 = *(double *)(v9 + 24);
    }
  }
  else
  {
    double v5 = 0.0;
    double v6 = 0.0;
    double v7 = 0.0;
  }
  double v10 = v3;
  result.size.double height = v5;
  result.size.double width = v10;
  result.origin.y = v7;
  result.origin.x = v6;
  return result;
}

Swift::OpaquePointer_optional __swiftcall BlueprintLayoutCollectionPinAdjuster.pinnedLayoutAttributes(for:offset:insets:contentSize:)(Swift::OpaquePointer a1, CGPoint offset, UIEdgeInsets insets, CGSize contentSize)
{
  OUTLINED_FUNCTION_47_0();
  uint64_t v25 = *(void *)(v4 + 528);
  if (*(void *)(v25 + 16))
  {
    uint64_t v30 = MEMORY[0x1E4FBC860];
    uint64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      OUTLINED_FUNCTION_6_52();
      uint64_t v8 = v7 + 32;
      sub_1B61B1F70();
      uint64_t v9 = 0;
      uint64_t v22 = v8;
      uint64_t v23 = v6;
      while (1)
      {
        if (!*(void *)(v25 + 16)) {
          goto LABEL_19;
        }
        unint64_t v10 = sub_1B5E46F88(*(void *)(v8 + 8 * v9));
        if ((v11 & 1) == 0) {
          goto LABEL_19;
        }
        uint64_t v24 = v9;
        unint64_t v12 = *(void *)(*(void *)(v25 + 56) + 8 * v10);
        if (v12 >> 62)
        {
          sub_1B61B1F70();
          uint64_t v14 = (void *)sub_1B61B3530();
          uint64_t v13 = (uint64_t)v14;
          if (v14)
          {
LABEL_8:
            if (v13 < 1)
            {
              __break(1u);
              goto LABEL_23;
            }
            uint64_t v16 = 0;
            do
            {
              if ((v12 & 0xC000000000000001) != 0) {
                id v17 = (id)MEMORY[0x1BA9B04B0](v16, v12);
              }
              else {
                id v17 = *(id *)(v12 + 8 * v16 + 32);
              }
              uint64_t v18 = v17;
              memcpy(__dst, (const void *)v4, sizeof(__dst));
              uint64_t v27 = v25;
              long long v19 = *(_OWORD *)(v4 + 552);
              long long v28 = *(_OWORD *)(v4 + 536);
              long long v29 = v19;
              OUTLINED_FUNCTION_18_1();
              BlueprintLayoutCollectionPinAdjuster.adjusted(layoutAttributes:offset:insets:contentSize:)();
              id v21 = v20;
              MEMORY[0x1BA9AF660]();
              if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                OUTLINED_FUNCTION_15_25();
              }
              ++v16;
              sub_1B61B25D0();
              sub_1B61B2510();
            }
            while (v13 != v16);
          }
        }
        else
        {
          uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v14 = (void *)sub_1B61B1F70();
          if (v13) {
            goto LABEL_8;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v8 = v22;
        uint64_t v6 = v23;
        uint64_t v9 = v24;
LABEL_19:
        if (++v9 == v6)
        {
          swift_bridgeObjectRelease();
          break;
        }
      }
    }
  }
  OUTLINED_FUNCTION_46_0();
LABEL_23:
  result.value._rawValue = v14;
  result.is_nil = v15;
  return result;
}

id sub_1B5FF6C18(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  objc_msgSend(a1, sel_frame);
  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.double width = a4;
  v14.size.double height = a5;
  if (CGRectEqualToRect(v13, v14))
  {
    return a1;
  }
  else
  {
    id v10 = objc_msgSend(a1, sel_copy);
    objc_msgSend(v10, sel_setFrame_, a2, a3, a4, a5);
    return v10;
  }
}

void sub_1B5FF6CE4(char *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D4>, double a6@<D5>, double a7@<D6>, double a8@<D7>)
{
  int v9 = *(unsigned __int8 *)(v8 + 1);
  if ((*(unsigned char *)(v8 + 525) & 1) == 0)
  {
    if (a2 >= 0.0)
    {
      double v14 = *(double *)(v8 + 8);
      double v15 = *(double *)(v8 + 56);
      if (v9 != 1) {
        double v15 = *(double *)(v8 + 88);
      }
      if (*(unsigned char *)(v8 + 1)) {
        double v14 = v15;
      }
      BOOL v12 = a7 - v14 + a6 < a2;
      goto LABEL_15;
    }
LABEL_9:
    char v13 = 0;
    goto LABEL_18;
  }
  if (a3 + a4 < 0.0) {
    goto LABEL_9;
  }
  double v10 = *(double *)(v8 + 16);
  double v11 = *(double *)(v8 + 64);
  if (v9 != 1) {
    double v11 = *(double *)(v8 + 96);
  }
  if (*(unsigned char *)(v8 + 1)) {
    double v10 = v11;
  }
  BOOL v12 = a8 - v10 + a5 < a3;
LABEL_15:
  if (v12) {
    char v13 = 1;
  }
  else {
    char v13 = 3;
  }
LABEL_18:
  *a1 = v13;
}

double sub_1B5FF6D70(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  double v19 = a1;
  if (*(unsigned char *)(v18 + 525))
  {
    CGRectGetHeight(*(CGRect *)&a1);
  }
  else
  {
    double v21 = *(double *)(v18 + 168);
    double Width = CGRectGetWidth(*(CGRect *)&a1);
    double v23 = v21 + a6 + a9 + a12;
    if (v23 >= v19)
    {
      double v24 = v19 + a5 - Width;
      if (v24 >= v23) {
        return v21 + a6 + a9 + a12;
      }
      else {
        return v24;
      }
    }
  }
  return v19;
}

void sub_1B5FF6E68(uint64_t a1, uint64_t a2, char a3, int a4, int a5, int a6, int a7, int a8, CGFloat a9, double a10, CGFloat a11, CGFloat a12, double a13, double a14, double a15, double a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,double a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  double v27 = a12;
  long long v29 = (long long *)(v26 + 526);
  char v30 = *(unsigned char *)(v26 + 525);
  double rect = a10;
  if (v30)
  {
    double v43 = a11;
    uint64_t v44 = *(void *)(a1 + 16);
    *(double *)&v70[16] = a15;
    *(double *)&v70[24] = a16;
    *(double *)double v70 = a13;
    *(double *)&v70[8] = a14;
    if (v44)
    {
      sub_1B61B1F70();
      double v45 = (CGFloat *)(a1 + 56);
      char v46 = 1;
      double r1 = 0.0;
      double y = 0.0;
      double width = 0.0;
      double height = 0.0;
      do
      {
        CGFloat v51 = *(v45 - 3);
        CGFloat v50 = *(v45 - 2);
        CGFloat v52 = *(v45 - 1);
        CGFloat v53 = *v45;
        v81.origin.x = v51;
        v81.origin.double y = v50;
        v81.size.double width = v52;
        v81.size.double height = *v45;
        double MinY = CGRectGetMinY(v81);
        v82.origin.x = a9;
        v82.size.double height = a12;
        v82.size.double width = a11;
        v82.origin.double y = rect;
        if (MinY <= CGRectGetMinY(v82))
        {
          if (v46)
          {
            char v46 = 0;
            double r1 = v51;
            double y = v50;
            double width = v52;
            double height = v53;
          }
          else
          {
            v83.origin.x = r1;
            v83.origin.double y = y;
            v83.size.double width = width;
            v83.size.double height = height;
            v88.origin.x = v51;
            v88.origin.double y = v50;
            v88.size.double width = v52;
            v88.size.double height = v53;
            CGRect v84 = CGRectUnion(v83, v88);
            double r1 = v84.origin.x;
            double y = v84.origin.y;
            double width = v84.size.width;
            double height = v84.size.height;
            char v46 = 0;
          }
        }
        v45 += 4;
        --v44;
      }
      while (v44);
      swift_bridgeObjectRelease();
      if (v46) {
        double v55 = 0.0;
      }
      else {
        double v55 = width;
      }
      CGFloat v69 = v55;
      if (v46)
      {
        double height = 0.0;
        double v56 = 0.0;
      }
      else
      {
        double v56 = r1;
      }
      if (v46) {
        double y = 0.0;
      }
      double v27 = a12;
      double v43 = a11;
      a10 = rect;
    }
    else
    {
      CGFloat v69 = 0.0;
      double height = 0.0;
      double v56 = 0.0;
      double y = 0.0;
    }
    CGFloat v57 = a9;
    CGFloat v58 = a10;
    double v59 = v43;
    double v60 = v27;
    double v61 = CGRectGetMinY(*(CGRect *)(&a10 - 1));
    v85.origin.x = v56;
    v85.origin.double y = y;
    v85.size.double width = v69;
    v85.size.double height = height;
    double v62 = v61 - CGRectGetMinY(v85);
    *(void *)&v86.origin.x = a17;
    *(void *)&v86.origin.double y = a18;
    *(void *)&v86.size.double width = a19;
    *(void *)&v86.size.double height = a20;
    double MaxY = CGRectGetMaxY(v86);
    v87.origin.x = a9;
    v87.origin.double y = v58;
    v87.size.double width = v43;
    v87.size.double height = v27;
    double v64 = MaxY - CGRectGetMaxY(v87);
    if (a3)
    {
      double v66 = CGRectGetMaxY(*(CGRect *)v70);
      double v67 = a23;
    }
    else
    {
      double v65 = CGRectGetMinY(*(CGRect *)v70) + *(double *)&a2;
      double v43 = a11;
      double v66 = CGRectGetMaxY(*(CGRect *)v70);
      double v67 = a23;
      if (v66 >= v65) {
        double v66 = v65;
      }
    }
    memcpy(__dst, (const void *)v26, sizeof(__dst));
    char v78 = v30;
    long long v68 = *(_OWORD *)(v26 + 542);
    long long v79 = *v29;
    *(_OWORD *)double v80 = v68;
    *(_OWORD *)&v80[10] = *(_OWORD *)(v26 + 552);
    sub_1B5FF6D70(a9, rect, v43, v27, v66 - rect - v64, *(double *)&a21, *(double *)&a22, v67, *(double *)&a24, *(double *)&a25, *(double *)&a26, v62);
  }
  else
  {
    memcpy(__dst, (const void *)v26, sizeof(__dst));
    char v78 = v30;
    long long v35 = *(_OWORD *)(v26 + 542);
    long long v79 = *v29;
    *(_OWORD *)double v80 = v35;
    *(_OWORD *)&v80[10] = *(_OWORD *)(v26 + 552);
    double v36 = a13;
    *(double *)&long long v35 = a14;
    double v37 = a15;
    double v38 = a16;
    double v39 = CGRectGetMaxX(*(CGRect *)((char *)&v35 - 8)) - a9;
    sub_1B5FF6D70(a9, rect, a11, a12, v39, *(double *)&a21, *(double *)&a22, a23, *(double *)&a24, *(double *)&a25, *(double *)&a26, 0.0);
  }
}

uint64_t BlueprintLayoutCollectionPinAdjuster.track(layoutAttributes:)(char *a1)
{
  uint64_t v2 = v1;
  sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v5 = v4;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  MEMORY[0x1F4188790](v8);
  if (BlueprintLayoutCollectionLayoutAttributes.requiresPinning.getter())
  {
    id v9 = objc_msgSend(a1, sel_indexPath);
    sub_1B61AFC40();

    uint64_t v10 = sub_1B61AFC90();
    double v11 = *(void (**)(void))(v5 + 8);
    OUTLINED_FUNCTION_26_0();
    v11();
    uint64_t v25 = v2;
    uint64_t v12 = sub_1B5E13B90(v10, *(void *)(v2 + 528));
    uint64_t v13 = MEMORY[0x1E4FBC860];
    if (v12) {
      uint64_t v13 = v12;
    }
    uint64_t v27 = v13;
    double v14 = a1;
    MEMORY[0x1BA9AF660]();
    if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      OUTLINED_FUNCTION_15_25();
    }
    sub_1B61B25D0();
    sub_1B61B2510();
    id v15 = objc_msgSend(v14, (SEL)&selRef__expectedContentInsetDeltaForViewController_);
    sub_1B61AFC40();

    sub_1B61AFC90();
    OUTLINED_FUNCTION_26_0();
    v11();
    sub_1B5E43B64(v27);
    uint64_t v2 = v25;
  }
  uint64_t v16 = &a1[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_isPlugin];
  uint64_t result = OUTLINED_FUNCTION_24();
  if (*v16 == 1)
  {
    id v18 = objc_msgSend(a1, sel_indexPath);
    sub_1B61AFC40();

    uint64_t v19 = sub_1B61AFC90();
    id v20 = *(void (**)(void))(v5 + 8);
    OUTLINED_FUNCTION_26_0();
    v20();
    uint64_t v21 = sub_1B5E13B90(v19, *(void *)(v2 + 536));
    uint64_t v22 = MEMORY[0x1E4FBC860];
    if (v21) {
      uint64_t v22 = v21;
    }
    uint64_t v26 = v22;
    double v23 = a1;
    MEMORY[0x1BA9AF660]();
    if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      OUTLINED_FUNCTION_15_25();
    }
    sub_1B61B25D0();
    sub_1B61B2510();
    id v24 = objc_msgSend(v23, sel_indexPath);
    sub_1B61AFC40();

    sub_1B61AFC90();
    OUTLINED_FUNCTION_26_0();
    v20();
    return sub_1B5E43B64(v26);
  }
  return result;
}

Swift::Void __swiftcall BlueprintLayoutCollectionPinAdjuster.trackSection(index:unionFrame:headerUnionFrame:pinnedHeaderFrames:)(Swift::Int index, __C::CGRect unionFrame, __C::CGRect_optional *headerUnionFrame, Swift::OpaquePointer pinnedHeaderFrames)
{
  sub_1B5E6D114((uint64_t)headerUnionFrame, (uint64_t)&v8);
  sub_1B5E13B28();
  if (v7 == 1)
  {
    OUTLINED_FUNCTION_18_1();
    sub_1B5E43C08(index);
    sub_1B5E6D114((uint64_t)headerUnionFrame, (uint64_t)v9);
    if (v9[32])
    {
      sub_1B5E4306C();
    }
    else
    {
      OUTLINED_FUNCTION_7();
      sub_1B5E43C08(index);
    }
    uint64_t v6 = sub_1B61B1F70();
    sub_1B5E43B7C(v6);
  }
  else
  {
    __break(1u);
  }
}

uint64_t destroy for BlueprintLayoutCollectionPinAdjuster(uint64_t a1)
{
  sub_1B5E5F620(*(void *)(a1 + 232), *(void *)(a1 + 240), *(unsigned char *)(a1 + 248));
  sub_1B5E5F620(*(void *)(a1 + 256), *(void *)(a1 + 264), *(unsigned char *)(a1 + 272));
  sub_1B5E5F620(*(void *)(a1 + 280), *(void *)(a1 + 288), *(unsigned char *)(a1 + 296));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BlueprintLayoutCollectionPinAdjuster(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 4sub_1B5E6F544(4, 0, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  uint64_t v4 = *(void **)(a2 + 128);
  uint64_t v5 = *(void **)(a2 + 136);
  *(void *)(a1 + 128) = v4;
  *(void *)(a1 + 136) = v5;
  uint64_t v6 = *(void **)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v6;
  long long v7 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 16sub_1B5E6F544(4, 0, 0) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v7;
  long long v8 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v8;
  uint64_t v9 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  uint64_t v10 = *(void *)(a2 + 240);
  char v11 = *(unsigned char *)(a2 + 248);
  id v12 = v4;
  id v13 = v5;
  id v14 = v6;
  sub_1B5E62DEC(v9, v10, v11);
  *(void *)(a1 + 232) = v9;
  *(void *)(a1 + 24sub_1B5E6F544(4, 0, 0) = v10;
  *(unsigned char *)(a1 + 248) = v11;
  uint64_t v15 = *(void *)(a2 + 256);
  uint64_t v16 = *(void *)(a2 + 264);
  char v17 = *(unsigned char *)(a2 + 272);
  sub_1B5E62DEC(v15, v16, v17);
  *(void *)(a1 + 256) = v15;
  *(void *)(a1 + 264) = v16;
  *(unsigned char *)(a1 + 272) = v17;
  uint64_t v18 = *(void *)(a2 + 280);
  uint64_t v19 = *(void *)(a2 + 288);
  char v20 = *(unsigned char *)(a2 + 296);
  sub_1B5E62DEC(v18, v19, v20);
  *(void *)(a1 + 28sub_1B5E6F544(4, 0, 0) = v18;
  *(void *)(a1 + 288) = v19;
  *(unsigned char *)(a1 + 296) = v20;
  long long v21 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 32sub_1B5E6F544(4, 0, 0) = v21;
  uint64_t v22 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = v22;
  *(_WORD *)(a1 + 352) = *(_WORD *)(a2 + 352);
  long long v23 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 36sub_1B5E6F544(4, 0, 0) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v23;
  memcpy((void *)(a1 + 392), (const void *)(a2 + 392), 0x87uLL);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 56sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 560);
  sub_1B61B1F70();
  sub_1B61B1F70();
  sub_1B61B1F70();
  sub_1B61B1F70();
  sub_1B61B1F70();
  return a1;
}

uint64_t assignWithCopy for BlueprintLayoutCollectionPinAdjuster(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unsigned char *)(a2 + 353);
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 12sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 120);
  uint64_t v5 = *(void **)(a2 + 128);
  uint64_t v6 = *(void **)(a1 + 128);
  *(void *)(a1 + 128) = v5;
  id v7 = v5;

  long long v8 = *(void **)(a2 + 136);
  uint64_t v9 = *(void **)(a1 + 136);
  *(void *)(a1 + 136) = v8;
  id v10 = v8;

  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  char v11 = *(void **)(a2 + 152);
  id v12 = *(void **)(a1 + 152);
  *(void *)(a1 + 152) = v11;
  id v13 = v11;

  *(void *)(a1 + 16sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 20sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  uint64_t v14 = *(void *)(a2 + 232);
  uint64_t v15 = *(void *)(a2 + 240);
  char v16 = *(unsigned char *)(a2 + 248);
  sub_1B5E62DEC(v14, v15, v16);
  uint64_t v17 = *(void *)(a1 + 232);
  uint64_t v18 = *(void *)(a1 + 240);
  *(void *)(a1 + 232) = v14;
  *(void *)(a1 + 24sub_1B5E6F544(4, 0, 0) = v15;
  char v19 = *(unsigned char *)(a1 + 248);
  *(unsigned char *)(a1 + 248) = v16;
  sub_1B5E5F620(v17, v18, v19);
  uint64_t v20 = *(void *)(a2 + 256);
  uint64_t v21 = *(void *)(a2 + 264);
  char v22 = *(unsigned char *)(a2 + 272);
  sub_1B5E62DEC(v20, v21, v22);
  uint64_t v23 = *(void *)(a1 + 256);
  uint64_t v24 = *(void *)(a1 + 264);
  *(void *)(a1 + 256) = v20;
  *(void *)(a1 + 264) = v21;
  char v25 = *(unsigned char *)(a1 + 272);
  *(unsigned char *)(a1 + 272) = v22;
  sub_1B5E5F620(v23, v24, v25);
  uint64_t v26 = *(void *)(a2 + 280);
  uint64_t v27 = *(void *)(a2 + 288);
  char v28 = *(unsigned char *)(a2 + 296);
  sub_1B5E62DEC(v26, v27, v28);
  uint64_t v29 = *(void *)(a1 + 280);
  uint64_t v30 = *(void *)(a1 + 288);
  *(void *)(a1 + 28sub_1B5E6F544(4, 0, 0) = v26;
  *(void *)(a1 + 288) = v27;
  char v31 = *(unsigned char *)(a1 + 296);
  *(unsigned char *)(a1 + 296) = v28;
  sub_1B5E5F620(v29, v30, v31);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 32sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  uint64_t v32 = *(void *)(a2 + 344);
  *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
  *(void *)(a1 + 344) = v32;
  *(unsigned char *)(a1 + 353) = *(unsigned char *)(a2 + 353);
  *(void *)(a1 + 36sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 40sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 44sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 48sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(unsigned char *)(a1 + 52sub_1B5E6F544(4, 0, 0) = v4[167];
  *(unsigned char *)(a1 + 52MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v4[168];
  *(unsigned char *)(a1 + 522) = v4[169];
  *(unsigned char *)(a1 + 523) = v4[170];
  *(unsigned char *)(a1 + 524) = v4[171];
  *(unsigned char *)(a1 + 525) = v4[172];
  *(unsigned char *)(a1 + 526) = v4[173];
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 560);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BlueprintLayoutCollectionPinAdjuster(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 280;
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 4sub_1B5E6F544(4, 0, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 12sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 120);
  uint64_t v5 = *(void **)(a1 + 128);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);

  uint64_t v6 = *(void **)(a1 + 136);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);

  uint64_t v7 = *(void *)(a2 + 152);
  long long v8 = *(void **)(a1 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v7;

  long long v9 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 16sub_1B5E6F544(4, 0, 0) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v9;
  long long v10 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v10;
  uint64_t v11 = *(void *)(a2 + 240);
  char v12 = *(unsigned char *)(a2 + 248);
  uint64_t v13 = *(void *)(a1 + 232);
  uint64_t v14 = *(void *)(a1 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(void *)(a1 + 24sub_1B5E6F544(4, 0, 0) = v11;
  char v15 = *(unsigned char *)(a1 + 248);
  *(unsigned char *)(a1 + 248) = v12;
  sub_1B5E5F620(v13, v14, v15);
  char v16 = *(unsigned char *)(a2 + 272);
  uint64_t v17 = *(void *)(a1 + 256);
  uint64_t v18 = *(void *)(a1 + 264);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  char v19 = *(unsigned char *)(a1 + 272);
  *(unsigned char *)(a1 + 272) = v16;
  sub_1B5E5F620(v17, v18, v19);
  char v20 = *(unsigned char *)(a2 + 296);
  uint64_t v21 = *(void *)(a1 + 280);
  uint64_t v22 = *(void *)(a1 + 288);
  *(_OWORD *)(a1 + 28sub_1B5E6F544(4, 0, 0) = *(_OWORD *)v4;
  char v23 = *(unsigned char *)(a1 + 296);
  *(unsigned char *)(a1 + 296) = v20;
  sub_1B5E5F620(v21, v22, v23);
  long long v24 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 32sub_1B5E6F544(4, 0, 0) = v24;
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
  *(unsigned char *)(a1 + 353) = *(unsigned char *)(v4 + 73);
  *(void *)(a1 + 36sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 360);
  long long v25 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v25;
  long long v26 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 40sub_1B5E6F544(4, 0, 0) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v26;
  long long v27 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v27;
  long long v28 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 48sub_1B5E6F544(4, 0, 0) = v28;
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(unsigned char *)(a1 + 52sub_1B5E6F544(4, 0, 0) = *(unsigned char *)(v4 + 240);
  *(unsigned char *)(a1 + 52MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *(unsigned char *)(v4 + 241);
  *(unsigned char *)(a1 + 522) = *(unsigned char *)(v4 + 242);
  *(unsigned char *)(a1 + 523) = *(unsigned char *)(v4 + 243);
  *(unsigned char *)(a1 + 524) = *(unsigned char *)(v4 + 244);
  *(unsigned char *)(a1 + 525) = *(unsigned char *)(v4 + 245);
  *(unsigned char *)(a1 + 526) = *(unsigned char *)(v4 + 246);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 560);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BlueprintLayoutCollectionPinAdjuster(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 568))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 128);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BlueprintLayoutCollectionPinAdjuster(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 20sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 12sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 52sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 44sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 36sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 28sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 568) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 128) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 568) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BlueprintLayoutCollectionPinAdjuster()
{
  return &type metadata for BlueprintLayoutCollectionPinAdjuster;
}

uint64_t sub_1B5FF7ED0(double a1, double a2)
{
  float v3 = a2;
  float v4 = a1;
  float v5 = atan2f(v3, v4);
  if (a2 > 0.0 && v5 > 0.7854 && v5 < 2.3562) {
    return 1;
  }
  if (v5 < -0.7854 && v5 > -2.3562 && a2 < 0.0) {
    return 0;
  }
  else {
    return 2;
  }
}

id sub_1B5FF7F58()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.63, 0.63, 0.63, 1.0);
  qword_1E9DAB520 = (uint64_t)result;
  return result;
}

id sub_1B5FF7FA0()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.87, 0.87, 0.87, 1.0);
  qword_1E9DAB528 = (uint64_t)result;
  return result;
}

char *sub_1B5FF7FE8(uint64_t a1, double a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = *(void **)a1;
  float v5 = *(void **)(a1 + 8);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 16);
  unsigned int v41 = v7;
  char v39 = *(unsigned char *)(a1 + 17);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v37 = *(void *)(a1 + 64);
  uint64_t v38 = *(void *)(a1 + 40);
  uint64_t v10 = OBJC_IVAR____TtC5TeaUI15SwipeActionView_button;
  uint64_t v11 = self;
  char v12 = v2;
  *(void *)&v2[v10] = objc_msgSend(v11, sel_buttonWithType_, 0);
  uint64_t v13 = OBJC_IVAR____TtC5TeaUI15SwipeActionView_onTap;
  sub_1B5E76EB0();
  long long v42 = *(_OWORD *)(a1 + 48);
  *(void *)&v12[v13] = objc_msgSend(objc_allocWithZone(v14), sel_init);
  char v15 = &v12[OBJC_IVAR____TtC5TeaUI15SwipeActionView_swipeAction];
  *(void *)char v15 = v6;
  *((void *)v15 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v5;
  v15[16] = v7;
  v15[17] = v39;
  *((void *)v15 + 3) = v9;
  *((void *)v15 + 4) = v8;
  *((void *)v15 + 5) = v38;
  *((_OWORD *)v15 + 3) = v42;
  *((void *)v15 + 8) = v37;
  v6;
  id v16 = v5;
  sub_1B61B1F70();
  sub_1B61B1F70();
  swift_retain();

  v43.receiver = v12;
  v43.super_class = ObjectType;
  uint64_t v17 = (char *)objc_msgSendSuper2(&v43, sel_initWithFrame_, 0.0, 0.0, a2, a2);
  uint64_t v18 = OBJC_IVAR____TtC5TeaUI15SwipeActionView_button;
  char v19 = *(void **)&v17[OBJC_IVAR____TtC5TeaUI15SwipeActionView_button];
  char v20 = v17;
  objc_msgSend(v19, sel_setFrame_, 0.0, 0.0, a2, a2);
  id v21 = objc_msgSend(v19, sel_layer);
  objc_msgSend(v21, sel_setCornerRadius_, a2 * 0.5);

  uint64_t v22 = *(void **)&v17[v18];
  char v23 = self;
  long long v24 = v22;
  id v25 = objc_msgSend(v23, sel_whiteColor);
  objc_msgSend(v24, sel_setTintColor_, v25);

  long long v26 = *(void **)&v17[v18];
  objc_msgSend(v26, sel_setAdjustsImageWhenHighlighted_, 0);
  objc_msgSend(v26, sel_setEnabled_, v41);
  id v27 = v26;
  sub_1B61B1F70();
  sub_1B5FF8794(v9, v8, v27);

  swift_bridgeObjectRelease();
  long long v28 = *(void **)&v17[v18];
  if (objc_msgSend(v28, sel_isEnabled))
  {
    objc_msgSend(v28, sel_setBackgroundColor_, v16);
    OUTLINED_FUNCTION_0_87();
  }
  else
  {
    uint64_t v22 = off_1E9DA7F28;
    id v29 = v28;
    if (v22 != (void *)-1) {
      swift_once();
    }
    objc_msgSend(v29, sel_setBackgroundColor_, qword_1E9DAB520);

    id v30 = objc_msgSend(*(id *)&v17[v18], sel_imageView);
    OUTLINED_FUNCTION_0_87();
    if (v31)
    {
      uint64_t v32 = v31;
      if (qword_1E9DA7F30 != -1) {
        swift_once();
      }
      objc_msgSend(v32, sel_setTintColor_, qword_1E9DAB528);
    }
  }
  UIImage.scaleImage(to:scaling:)();
  uint64_t v34 = v33;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  long long v35 = *(void **)&v17[v18];
  objc_msgSend(v35, sel_setImage_forState_, v34, 0);
  objc_msgSend(v35, sel_addTarget_action_forControlEvents_, *(void *)&v20[v22[167]], sel_handleAction, 64);
  objc_msgSend(v20, sel_addSubview_, v35);

  return v20;
}

void sub_1B5FF8424()
{
  uint64_t v1 = OBJC_IVAR____TtC5TeaUI15SwipeActionView_button;
  *(void *)&v0[v1] = objc_msgSend(self, sel_buttonWithType_, 0);
  uint64_t v2 = OBJC_IVAR____TtC5TeaUI15SwipeActionView_onTap;
  sub_1B5E76EB0();
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(v3), sel_init);

  sub_1B61B34D0();
  __break(1u);
}

void sub_1B5FF8500()
{
  uint64_t v1 = OBJC_IVAR____TtC5TeaUI15SwipeActionView_button;
  *(void *)&v0[v1] = objc_msgSend(self, sel_buttonWithType_, 0);
  uint64_t v2 = OBJC_IVAR____TtC5TeaUI15SwipeActionView_onTap;
  sub_1B5E76EB0();
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(v3), sel_init);

  sub_1B61B34D0();
  __break(1u);
}

id sub_1B5FF85D4()
{
  v8.receiver = v0;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, sel_layoutSubviews);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI15SwipeActionView_button];
  objc_msgSend(v0, sel_bounds);
  CGFloat x = v9.origin.x;
  CGFloat y = v9.origin.y;
  CGFloat width = v9.size.width;
  CGFloat height = v9.size.height;
  double MidX = CGRectGetMidX(v9);
  v10.origin.CGFloat x = x;
  v10.origin.CGFloat y = y;
  v10.size.CGFloat width = width;
  v10.size.CGFloat height = height;
  return objc_msgSend(v1, sel_setCenter_, MidX, CGRectGetMidY(v10));
}

uint64_t type metadata accessor for SwipeActionView()
{
  return self;
}

void sub_1B5FF8794(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1B61B20C0();
  objc_msgSend(a3, sel_setAccessibilityIdentifier_, v4);
}

uint64_t sub_1B5FF87EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1B5FF8DAC(0, &qword_1EB64A3B0, (void (*)(uint64_t))type metadata accessor for BlueprintCollectionViewLayoutTransition.State);
  OUTLINED_FUNCTION_14(v8);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v17 - v10;
  sub_1B5FF8D1C();
  uint64_t v13 = &v11[*(int *)(v12 + 48)];
  sub_1B61AFAB0();
  OUTLINED_FUNCTION_6_0();
  (*(void (**)(char *, uint64_t))(v14 + 16))(v11, a1);
  *(void *)uint64_t v13 = a2;
  *((void *)v13 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = a3;
  v13[16] = a4 & 1;
  uint64_t v15 = type metadata accessor for BlueprintCollectionViewLayoutTransition.State(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v15);
  return sub_1B5FF8FA8((uint64_t)v11);
}

uint64_t sub_1B5FF88FC()
{
  uint64_t v1 = type metadata accessor for BlueprintCollectionViewLayoutTransition.State(0);
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x1F4188790](v2);
  id v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B5FF8DAC(0, &qword_1EB64A3B0, (void (*)(uint64_t))type metadata accessor for BlueprintCollectionViewLayoutTransition.State);
  OUTLINED_FUNCTION_14(v5);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = v0 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_state;
  swift_beginAccess();
  if (__swift_getEnumTagSinglePayload(v9, 1, v1))
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v1);
  }
  else
  {
    sub_1B5FF9A54(v9, (uint64_t)v4);
    sub_1B5FF91EC((uint64_t)v8);
    sub_1B5FF9AB8((uint64_t)v4);
  }
  return sub_1B5FF8FA8((uint64_t)v8);
}

BOOL BlueprintCollectionViewLayoutTransition.isTransitioning.getter()
{
  sub_1B5FF8DAC(0, &qword_1EB64A3B0, (void (*)(uint64_t))type metadata accessor for BlueprintCollectionViewLayoutTransition.State);
  OUTLINED_FUNCTION_14(v1);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v2);
  id v4 = (char *)&v10 - v3;
  uint64_t v5 = v0 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_state;
  swift_beginAccess();
  sub_1B5FF8B6C(v5, (uint64_t)v4);
  uint64_t v6 = type metadata accessor for BlueprintCollectionViewLayoutTransition.State(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6);
  if (EnumTagSinglePayload != 1)
  {
    sub_1B61AFAB0();
    OUTLINED_FUNCTION_6_0();
    (*(void (**)(char *))(v8 + 8))(v4);
  }
  return EnumTagSinglePayload != 1;
}

uint64_t type metadata accessor for BlueprintCollectionViewLayoutTransition.State(uint64_t a1)
{
  return sub_1B5E30ED8(a1, (uint64_t *)&unk_1EB64A3A0);
}

uint64_t sub_1B5FF8B6C(uint64_t a1, uint64_t a2)
{
  sub_1B5FF8DAC(0, &qword_1EB64A3B0, (void (*)(uint64_t))type metadata accessor for BlueprintCollectionViewLayoutTransition.State);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t BlueprintCollectionViewLayoutTransition.targetContentOffset.getter()
{
  sub_1B5FF8DAC(0, &qword_1EB64A3B0, (void (*)(uint64_t))type metadata accessor for BlueprintCollectionViewLayoutTransition.State);
  OUTLINED_FUNCTION_14(v1);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v11 - v3;
  uint64_t v5 = v0 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_state;
  swift_beginAccess();
  sub_1B5FF8B6C(v5, (uint64_t)v4);
  uint64_t v6 = type metadata accessor for BlueprintCollectionViewLayoutTransition.State(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6) == 1) {
    return 0;
  }
  sub_1B5FF8D1C();
  uint64_t v7 = *(void *)&v4[*(int *)(v8 + 48)];
  sub_1B61AFAB0();
  OUTLINED_FUNCTION_6_0();
  (*(void (**)(char *))(v9 + 8))(v4);
  return v7;
}

void sub_1B5FF8D1C()
{
  if (!qword_1EB64A330)
  {
    sub_1B61AFAB0();
    sub_1B5FF8DAC(255, (unint64_t *)&qword_1EB64A3F8, type metadata accessor for CGPoint);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB64A330);
    }
  }
}

void sub_1B5FF8DAC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1B61B2F80();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1B5FF8E00()
{
  sub_1B5FF8DAC(0, &qword_1EB64A3B0, (void (*)(uint64_t))type metadata accessor for BlueprintCollectionViewLayoutTransition.State);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = &v15[-v2];
  uint64_t v4 = v0 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_state;
  swift_beginAccess();
  sub_1B5FF8B6C(v4, (uint64_t)v3);
  uint64_t v5 = type metadata accessor for BlueprintCollectionViewLayoutTransition.State(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v3, 1, v5);
  uint64_t v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_completionBlocks);
  if (EnumTagSinglePayload == 1)
  {
    swift_beginAccess();
    uint64_t v8 = *v7;
    uint64_t *v7 = MEMORY[0x1E4FBC860];
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      uint64_t v10 = v8 + 40;
      do
      {
        uint64_t v11 = *(void (**)(uint64_t))(v10 - 8);
        uint64_t v12 = swift_retain();
        v11(v12);
        swift_release();
        v10 += 16;
        --v9;
      }
      while (v9);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_beginAccess();
    uint64_t *v7 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_1B61AFAB0();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v14 - 8) + 8))(v3, v14);
  }
}

uint64_t sub_1B5FF8FA8(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_state;
  swift_beginAccess();
  sub_1B5FF9B14(a1, v3);
  swift_endAccess();
  sub_1B5FF8E00();
  return sub_1B5FF941C(a1);
}

uint64_t BlueprintCollectionViewLayoutTransition.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_state;
  uint64_t v2 = type metadata accessor for BlueprintCollectionViewLayoutTransition.State(0);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  *(void *)(v0 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_completionBlocks) = MEMORY[0x1E4FBC860];
  return v0;
}

uint64_t BlueprintCollectionViewLayoutTransition.init()()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_state;
  uint64_t v2 = type metadata accessor for BlueprintCollectionViewLayoutTransition.State(0);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  *(void *)(v0 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_completionBlocks) = MEMORY[0x1E4FBC860];
  return v0;
}

uint64_t BlueprintCollectionViewLayoutTransition.onCompletion(block:)(uint64_t (*a1)(void), uint64_t a2)
{
  if (!BlueprintCollectionViewLayoutTransition.isTransitioning.getter()) {
    return a1();
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_completionBlocks);
  swift_beginAccess();
  swift_retain();
  sub_1B5E19E20();
  uint64_t v7 = *(void *)(*v6 + 16);
  sub_1B5E1A2F0();
  uint64_t v8 = *v6;
  *(void *)(v8 + 16) = v7 + 1;
  uint64_t v9 = v8 + 16 * v7;
  *(void *)(v9 + 32) = sub_1B5E4EC58;
  *(void *)(v9 + 4sub_1B5E6F544(4, 0, 0) = v5;
  return swift_endAccess();
}

uint64_t sub_1B5FF91B4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5FF91EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1B61AFAB0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for BlueprintCollectionViewLayoutTransition.State(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B5FF9A54(v1, (uint64_t)v9);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
  char v10 = sub_1B61AFA90();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v10)
  {
    uint64_t v11 = 1;
  }
  else
  {
    sub_1B5FF9A54(v1, a1);
    uint64_t v11 = 0;
  }
  return __swift_storeEnumTagSinglePayload(a1, v11, 1, v7);
}

uint64_t BlueprintCollectionViewLayoutTransition.deinit()
{
  sub_1B5FF941C(v0 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_state);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BlueprintCollectionViewLayoutTransition.__deallocating_deinit()
{
  sub_1B5FF941C(v0 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_state);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1B5FF941C(uint64_t a1)
{
  sub_1B5FF8DAC(0, &qword_1EB64A3B0, (void (*)(uint64_t))type metadata accessor for BlueprintCollectionViewLayoutTransition.State);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B5FF9494()
{
  return type metadata accessor for BlueprintCollectionViewLayoutTransition(0);
}

uint64_t type metadata accessor for BlueprintCollectionViewLayoutTransition(uint64_t a1)
{
  return sub_1B5E30ED8(a1, (uint64_t *)&unk_1EB64A3C0);
}

void sub_1B5FF94BC()
{
  sub_1B5FF8DAC(319, &qword_1EB64A3B0, (void (*)(uint64_t))type metadata accessor for BlueprintCollectionViewLayoutTransition.State);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for BlueprintCollectionViewLayoutTransition(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BlueprintCollectionViewLayoutTransition);
}

uint64_t dispatch thunk of BlueprintCollectionViewLayoutTransition.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t *sub_1B5FF95A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = sub_1B61AFAB0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    sub_1B5FF8D1C();
    uint64_t v8 = *(int *)(v7 + 48);
    uint64_t v9 = (char *)a1 + v8;
    char v10 = (char *)a2 + v8;
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    v9[16] = v10[16];
  }
  return a1;
}

uint64_t sub_1B5FF9674(uint64_t a1)
{
  uint64_t v2 = sub_1B61AFAB0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_1B5FF96D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B61AFAB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  sub_1B5FF8D1C();
  uint64_t v6 = *(int *)(v5 + 48);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
  return a1;
}

uint64_t sub_1B5FF9760(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B61AFAB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  sub_1B5FF8D1C();
  uint64_t v6 = *(int *)(v5 + 48);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  char v9 = *(unsigned char *)(v8 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  *(unsigned char *)(v7 + 16) = v9;
  return a1;
}

uint64_t sub_1B5FF97E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B61AFAB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  sub_1B5FF8D1C();
  uint64_t v6 = *(int *)(v5 + 48);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
  return a1;
}

uint64_t sub_1B5FF9870(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B61AFAB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  sub_1B5FF8D1C();
  uint64_t v6 = *(int *)(v5 + 48);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
  return a1;
}

uint64_t sub_1B5FF98F8(uint64_t a1, uint64_t a2)
{
  sub_1B5FF8D1C();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t sub_1B5FF9940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B5FF8D1C();
  return __swift_storeEnumTagSinglePayload(a1, a2, a3, v6);
}

uint64_t sub_1B5FF9998(uint64_t a1)
{
  uint64_t result = sub_1B61AFAB0();
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = v4;
  }
  return result;
}

uint64_t sub_1B5FF9A54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BlueprintCollectionViewLayoutTransition.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B5FF9AB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BlueprintCollectionViewLayoutTransition.State(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B5FF9B14(uint64_t a1, uint64_t a2)
{
  sub_1B5FF8DAC(0, &qword_1EB64A3B0, (void (*)(uint64_t))type metadata accessor for BlueprintCollectionViewLayoutTransition.State);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void static CardViewBehavior.default.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC870];
  *(_WORD *)(a1 + 8) = 1025;
  *(unsigned char *)(a1 + 1sub_1B5E6F544(4, 0, 0) = 1;
}

BOOL static CardViewBehavior.DismissTrait.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void CardViewBehaviorProviding<>.updateCardViewBehavior()(uint64_t a1, uint64_t a2)
{
  id v5 = UIViewController.cardContainerController.getter();
  if (v5)
  {
    id v6 = v5;
    sub_1B5EA9C38(v2, (uint64_t)v5, a1, a2);
  }
}

void CardViewBehavior.init(positions:dismissTrait:stackTrait:hasOverscrollToDismissTrait:)(uint64_t a1@<X0>, char *a2@<X1>, unsigned __int8 *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char v8 = *a2;
  int v9 = *a3;
  if ((*a2 & 1) != 0 || *(void *)(a1 + 16))
  {
    if (v9 - 3) < 3 || (sub_1B5E75B00(*a3, a1), (v10))
    {
      *(void *)a5 = a1;
      *(unsigned char *)(a5 + 8) = v8;
      *(unsigned char *)(a5 + 9) = v9;
      *(unsigned char *)(a5 + 1sub_1B5E6F544(4, 0, 0) = a4 & 1;
      return;
    }
    swift_bridgeObjectRelease();
    char v11 = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    char v11 = 0;
  }
  sub_1B5FF9E8C();
  swift_allocError();
  *uint64_t v12 = v11;
  swift_willThrow();
}

BOOL static CardViewBehavior.SnapPosition.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CardViewBehavior.SnapPosition.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t CardViewBehavior.SnapPosition.hashValue.getter()
{
  return sub_1B61B3940();
}

uint64_t sub_1B5FF9DB8()
{
  return sub_1B61B3940();
}

uint64_t CardViewBehavior.DismissTrait.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t _s5TeaUI16CardViewBehaviorV6ErrorsO9hashValueSivg_0()
{
  return sub_1B61B3940();
}

uint64_t CardViewBehavior.positions.getter()
{
  return sub_1B61B1F70();
}

void CardViewBehavior.dimissTrait.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

void CardViewBehavior.stackTrait.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 9);
}

uint64_t CardViewBehavior.hasOverscrollToDismissTrait.getter()
{
  return *(unsigned __int8 *)(v0 + 10);
}

unint64_t sub_1B5FF9E8C()
{
  unint64_t result = qword_1E9DAB548;
  if (!qword_1E9DAB548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB548);
  }
  return result;
}

unint64_t sub_1B5FF9EDC()
{
  unint64_t result = qword_1E9DAB550;
  if (!qword_1E9DAB550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB550);
  }
  return result;
}

unint64_t sub_1B5FF9F2C()
{
  unint64_t result = qword_1EB63EC10[0];
  if (!qword_1EB63EC10[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB63EC10);
  }
  return result;
}

unint64_t sub_1B5FF9F7C()
{
  unint64_t result = qword_1E9DAB558;
  if (!qword_1E9DAB558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB558);
  }
  return result;
}

uint64_t sub_1B5FF9FCC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_WORD *)(a1 + 9) = *(_WORD *)(a2 + 9);
  sub_1B61B1F70();
  return a1;
}

uint64_t assignWithCopy for CardViewBehavior(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 1sub_1B5E6F544(4, 0, 0) = *(unsigned char *)(a2 + 10);
  return a1;
}

uint64_t __swift_memcpy11_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 7) = *(_DWORD *)((char *)a2 + 7);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for CardViewBehavior(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 1sub_1B5E6F544(4, 0, 0) = *(unsigned char *)(a2 + 10);
  return a1;
}

uint64_t getEnumTagSinglePayload for CardViewBehavior(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 11))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CardViewBehavior(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 1sub_1B5E6F544(4, 0, 0) = 0;
    *(_WORD *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 1MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 1MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for CardViewBehavior()
{
}

void type metadata accessor for CardViewBehavior.Errors()
{
}

unsigned char *storeEnumTagSinglePayload for CardViewBehavior.SnapPosition(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5FFA23CLL);
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for CardViewBehavior.SnapPosition()
{
}

unsigned char *_s5TeaUI16CardViewBehaviorV12DismissTraitOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5FFA33CLL);
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for CardViewBehavior.DismissTrait()
{
}

uint64_t getEnumTagSinglePayload for CardViewBehavior.StackTrait(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB)
  {
    unsigned int v2 = a2 + 5;
    if (a2 + 5 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 5;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 5;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1B5FFA420);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 5;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 3) {
    unsigned int v8 = v7 - 2;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 4) {
    return v8 - 3;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for CardViewBehavior.StackTrait(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 5;
  if (a3 + 5 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFB) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v7 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1B5FFA508);
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

uint64_t sub_1B5FFA530(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 3) {
    return v1 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1B5FFA544(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 2;
  }
  return result;
}

void type metadata accessor for CardViewBehavior.StackTrait()
{
}

uint64_t dispatch thunk of CardViewBehaviorProviding.cardViewBehavior.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t Bootstrapper.afterBootstrap(on:run:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_retain();
  uint64_t v6 = MEMORY[0x1BA9AD640](v5);
  uint64_t result = swift_release();
  if (v6)
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a2;
    *(void *)(v8 + 24) = a3;
    swift_retain();
    sub_1B61B0D10();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id Bootstrapper.__allocating_init(mainViewControllerFactory:onboardingViewControllerFactory:onboardingViewDismissalAnimator:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return Bootstrapper.init(mainViewControllerFactory:onboardingViewControllerFactory:onboardingViewDismissalAnimator:)(a1, a2, a3);
}

id Bootstrapper.init(mainViewControllerFactory:onboardingViewControllerFactory:onboardingViewDismissalAnimator:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = OBJC_IVAR____TtC5TeaUI12Bootstrapper_deferredPromise;
  sub_1B5FFB288();
  swift_allocObject();
  int v9 = v3;
  *(void *)&v3[v8] = sub_1B61B04C0();
  uint64_t v10 = OBJC_IVAR____TtC5TeaUI12Bootstrapper_deferringGroup;
  *(void *)&v9[v10] = dispatch_group_create();
  sub_1B5E176E4(a1, (uint64_t)&v9[OBJC_IVAR____TtC5TeaUI12Bootstrapper_mainViewControllerFactory]);
  sub_1B5E176E4(a2, (uint64_t)&v9[OBJC_IVAR____TtC5TeaUI12Bootstrapper_onboardingViewControllerFactory]);
  sub_1B5E176E4(a3, (uint64_t)&v9[OBJC_IVAR____TtC5TeaUI12Bootstrapper_onboardingViewDismissalAnimator]);
  v9[OBJC_IVAR____TtC5TeaUI12Bootstrapper_shouldCollapseSidebar] = 0;

  v13.receiver = v9;
  v13.super_class = ObjectType;
  id v11 = objc_msgSendSuper2(&v13, sel_init);
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v11;
}

Swift::Void __swiftcall Bootstrapper.startBootstrapping(window:shouldOnboard:)(UIWindow *window, Swift::Bool shouldOnboard)
{
  OUTLINED_FUNCTION_1_90(window, shouldOnboard, 0, v2, v3);
}

Swift::Void __swiftcall Bootstrapper.startBootstrapping(window:shouldOnboard:shouldCollapseSidebar:defaultWindowSize:shouldHideMainView:)(UIWindow *window, Swift::Bool shouldOnboard, Swift::Bool shouldCollapseSidebar, CGSize_optional defaultWindowSize, Swift::Bool shouldHideMainView)
{
  int v7 = v5;
  LODWORD(v4sub_1B5E6F544(4, 0, 0) = shouldOnboard;
  sub_1B61B1D90();
  OUTLINED_FUNCTION_0_10();
  uint64_t v43 = v11;
  uint64_t v44 = v10;
  MEMORY[0x1F4188790](v10);
  objc_super v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B61B1DF0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v41 = v15;
  uint64_t v42 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v6 + OBJC_IVAR____TtC5TeaUI12Bootstrapper_shouldCollapseSidebar) = shouldCollapseSidebar;
  uint64_t v18 = OBJC_IVAR____TtC5TeaUI12Bootstrapper_deferringGroup;
  dispatch_group_enter(*(dispatch_group_t *)(v6 + OBJC_IVAR____TtC5TeaUI12Bootstrapper_deferringGroup));
  id v19 = objc_msgSend(self, sel_systemBackgroundColor);
  [(UIWindow *)window setBackgroundColor:v19];

  __swift_project_boxed_opaque_existential_1((void *)(v6 + OBJC_IVAR____TtC5TeaUI12Bootstrapper_mainViewControllerFactory), *(void *)(v6 + OBJC_IVAR____TtC5TeaUI12Bootstrapper_mainViewControllerFactory + 24));
  uint64_t v20 = OUTLINED_FUNCTION_2_84();
  uint64_t v22 = (void *)v21(v20);
  char v23 = v22;
  HIDWORD(v4sub_1B5E6F544(4, 0, 0) = v7;
  if (v7)
  {
    id v24 = objc_msgSend(v22, sel_view);
    if (!v24)
    {
      __break(1u);
      return;
    }
    id v25 = v24;
    objc_msgSend(v24, sel_setHidden_, 1);
  }
  if (v40)
  {
    dispatch_group_enter(*(dispatch_group_t *)(v6 + v18));
    __swift_project_boxed_opaque_existential_1((void *)(v6 + OBJC_IVAR____TtC5TeaUI12Bootstrapper_onboardingViewControllerFactory), *(void *)(v6 + OBJC_IVAR____TtC5TeaUI12Bootstrapper_onboardingViewControllerFactory + 24));
    uint64_t v26 = OUTLINED_FUNCTION_2_84();
    long long v28 = (void *)v27(v26);
    id v29 = objc_allocWithZone((Class)type metadata accessor for BootstrapperViewController());
    id v30 = sub_1B5F9ADD0(v28, v23);
    [(UIWindow *)window setRootViewController:v30];
  }
  else
  {
    [(UIWindow *)window setRootViewController:v23];
  }
  [(UIWindow *)window makeKeyAndVisible];
  char v31 = *(void **)(v6 + v18);
  sub_1B5E75560();
  id v32 = v31;
  uint64_t v33 = (void *)sub_1B61B2C50();
  uint64_t v34 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  uint64_t v35 = swift_allocObject();
  *(unsigned char *)(v35 + 16) = BYTE4(v40) & 1;
  *(void *)(v35 + 24) = v34;
  *(void *)(v35 + 32) = v23;
  *(void *)(v35 + 4sub_1B5E6F544(4, 0, 0) = window;
  aBlock[4] = sub_1B5FFB358;
  aBlock[5] = v35;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B5E3729C;
  aBlock[3] = &block_descriptor_47;
  double v36 = _Block_copy(aBlock);
  id v37 = v23;
  swift_retain();
  uint64_t v38 = window;
  sub_1B61B1DB0();
  uint64_t v45 = MEMORY[0x1E4FBC860];
  sub_1B5E397C8((unint64_t *)&qword_1EB647A40, MEMORY[0x1E4FBCB00]);
  sub_1B5E39770();
  sub_1B5E397C8((unint64_t *)&qword_1EB647AE0, (void (*)(uint64_t))sub_1B5E39770);
  uint64_t v39 = v44;
  sub_1B61B3100();
  sub_1B61B2BF0();
  _Block_release(v36);

  (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v39);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v42);
  swift_release();
  swift_release();
}

uint64_t sub_1B5FFACFC(char a1, uint64_t a2, void *a3, void *a4)
{
  if (a1)
  {
    uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a3;
    *(void *)(v7 + 24) = a4;
    id v8 = a3;
    id v9 = a4;
    uint64_t v10 = (void *)sub_1B61B01B0();
    Bootstrapper.afterBootstrap(on:run:)((uint64_t)v10, (uint64_t)sub_1B5FFB694, v7);

    swift_release();
  }
  uint64_t v11 = (void *)swift_unknownObjectUnownedLoadStrong();
  swift_retain();

  sub_1B61B04B0();
  return swift_release();
}

id sub_1B5FFADDC(void *a1, void *a2)
{
  id result = objc_msgSend(a1, sel_view);
  if (result)
  {
    int v4 = result;
    objc_msgSend(result, sel_setHidden_, 0);

    return objc_msgSend(a2, sel_setBackgroundColor_, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall Bootstrapper.didFinishOnboarding(window:)(UIWindow *window)
{
  unsigned int v2 = v1;
  objc_super v13 = [(UIWindow *)window rootViewController];
  if (!v13) {
    goto LABEL_9;
  }
  type metadata accessor for BootstrapperViewController();
  uint64_t v3 = swift_dynamicCastClass();
  if (!v3)
  {

LABEL_9:
    sub_1B61B34D0();
    __break(1u);
    return;
  }
  uint64_t v4 = v3;
  sub_1B5F9B5C4();
  if (v5)
  {
    uint64_t v6 = v5;
    MEMORY[0x1F4188790](v5);
    sub_1B61B0E80();
    uint64_t v7 = (void *)swift_allocObject();
    v7[2] = v4;
    v7[3] = v6;
    v7[4] = v2;
    id v8 = v13;
    id v9 = v6;
    id v10 = v2;
    uint64_t v11 = (void *)sub_1B61B0C80();
    sub_1B61B0DB0();

    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v12 = *(id *)&v1[OBJC_IVAR____TtC5TeaUI12Bootstrapper_deferringGroup];
    dispatch_group_leave(v12);
  }
}

uint64_t sub_1B5FFB054(uint64_t a1, uint64_t a2)
{
  sub_1B5E176E4(a1 + OBJC_IVAR____TtC5TeaUI12Bootstrapper_onboardingViewDismissalAnimator, (uint64_t)v8);
  uint64_t v3 = v9;
  uint64_t v4 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  id v5 = sub_1B5F9AD94();
  uint64_t v6 = (*(uint64_t (**)(uint64_t, id, uint64_t, uint64_t))(v4 + 8))(a2, v5, v3, v4);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v6;
}

void sub_1B5FFB10C(int a1, id a2, uint64_t a3)
{
  objc_msgSend(a2, sel_removeFromSuperview);
  UIAccessibilityPostNotification(*MEMORY[0x1E4FB24B0], 0);
  uint64_t v4 = *(NSObject **)(a3 + OBJC_IVAR____TtC5TeaUI12Bootstrapper_deferringGroup);
  dispatch_group_leave(v4);
}

Swift::Void __swiftcall Bootstrapper.didFinishLoadingMainView(from:)(UIViewController_optional *from)
{
  uint64_t v2 = v1;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI12Bootstrapper_shouldCollapseSidebar) == 1 && from != 0)
  {
    uint64_t v4 = (void *)sub_1B5F833BC();
    if (v4)
    {
      id v5 = v4;
      objc_msgSend(v4, sel_setPreferredDisplayMode_, 1);
    }
    uint64_t v6 = (void *)sub_1B5F833C8();
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = objc_msgSend(v6, sel__uip_sidebar);
      objc_msgSend(v8, sel__setVisible_, 0);
    }
  }
  uint64_t v9 = *(NSObject **)(v2 + OBJC_IVAR____TtC5TeaUI12Bootstrapper_deferringGroup);
  dispatch_group_leave(v9);
}

uint64_t sub_1B5FFB228()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5FFB260()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1B5FFB288()
{
  if (!qword_1EB64A430)
  {
    unint64_t v0 = sub_1B61B04D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB64A430);
    }
  }
}

uint64_t sub_1B5FFB2D8()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B5FFB310()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1B5FFB358()
{
  return sub_1B5FFACFC(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1B5FFB368()
{
  return sub_1B5FFB054(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1B5FFB388()
{
  return swift_deallocObject();
}

void sub_1B5FFB3D0()
{
  sub_1B5FFB10C(*(void *)(v0 + 16), *(id *)(v0 + 24), *(void *)(v0 + 32));
}

id Bootstrapper.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void Bootstrapper.init()()
{
}

id Bootstrapper.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t dispatch thunk of ViewControllerFactoryType.createViewController()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ViewTransitionAnimatorType.animateTransition(from:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t type metadata accessor for Bootstrapper()
{
  return self;
}

uint64_t method lookup function for Bootstrapper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Bootstrapper);
}

uint64_t dispatch thunk of Bootstrapper.__allocating_init(mainViewControllerFactory:onboardingViewControllerFactory:onboardingViewDismissalAnimator:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1B5FFB61C()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1B5FFB654()
{
  return swift_deallocObject();
}

id sub_1B5FFB694()
{
  return sub_1B5FFADDC(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

TeaUI::FloatingTabBarNavigationPresentation __swiftcall FloatingTabBarNavigationPresentation.init(compact:regular:)(TeaUI::FloatingTabBarNavigationVisibility_optional compact, TeaUI::FloatingTabBarNavigationVisibility_optional regular)
{
  v2->value = compact.value;
  v2[1].value = regular.value;
  result.compactTabBarVisibiliCGFloat ty = compact;
  return result;
}

TeaUI::FloatingTabBarNavigationVisibility_optional __swiftcall FloatingTabBarNavigationPresentation.tabBarVisibility(traitCollection:)(UITraitCollection traitCollection)
{
  v2.value = *v1;
  TeaUI::FloatingTabBarNavigationVisibility v3 = *((unsigned char *)v1 + 1);
  id v4 = [(objc_class *)traitCollection.super.isa horizontalSizeClass];
  if (!v4) {
    return (TeaUI::FloatingTabBarNavigationVisibility_optional)2;
  }
  if (v4 == (id)2) {
    v5.value = v3;
  }
  else {
    v5.value = TeaUI_FloatingTabBarNavigationVisibility_unknownDefault;
  }
  if (v4 == (id)1) {
    return v2;
  }
  else {
    return v5;
  }
}

uint64_t getEnumTagSinglePayload for FloatingTabBarNavigationPresentation(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 65282 <= 0xFFFEFFFF) {
      int v2 = 2;
    }
    else {
      int v2 = 4;
    }
    if (a2 + 65282 < 0xFF0000) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (v4) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v3 == 2)
      {
        int v4 = a1[1];
        if (!a1[1]) {
          goto LABEL_17;
        }
LABEL_15:
        int v5 = (*a1 | (v4 << 16)) - 65283;
        return (v5 + 1);
      }
      int v4 = *((unsigned __int8 *)a1 + 2);
      if (*((unsigned char *)a1 + 2)) {
        goto LABEL_15;
      }
    }
  }
LABEL_17:
  if (*(unsigned __int8 *)a1 <= 2u) {
    int v6 = 2;
  }
  else {
    int v6 = *(unsigned __int8 *)a1;
  }
  int v7 = v6 - 3;
  if (*(unsigned __int8 *)a1 < 2u) {
    int v5 = -1;
  }
  else {
    int v5 = v7;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FloatingTabBarNavigationPresentation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65282 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)TeaUI::FloatingTabBarNavigationPresentation result = a2 - 254;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5FFB860);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)TeaUI::FloatingTabBarNavigationPresentation result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FloatingTabBarNavigationPresentation()
{
  return &type metadata for FloatingTabBarNavigationPresentation;
}

uint64_t SharingPlaceholderHanlder.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t SharingPlaceholderHanlder.init()()
{
  return v0;
}

uint64_t SharingPlaceholderHanlder.deinit()
{
  return v0;
}

uint64_t SharingPlaceholderHanlder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SharingPlaceholderHanlder()
{
  return self;
}

uint64_t method lookup function for SharingPlaceholderHanlder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharingPlaceholderHanlder);
}

uint64_t dispatch thunk of SharingPlaceholderHanlder.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of ScrollViewObservable.observableScrollView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id static UIFont.systemFont(ofSize:weight:traits:)(int a1, double a2, double a3)
{
  return static UIFont.systemFont(ofSize:weight:width:traits:)(0, 1, a1, a2, a3);
}

id static UIFont.systemFont(ofSize:weight:width:traits:)(uint64_t a1, char a2, int a3, double a4, double a5)
{
  if (a2) {
    a1 = *MEMORY[0x1E4FB0A08];
  }
  uint64_t v9 = self;
  id result = objc_msgSend(v9, sel_systemFontOfSize_weight_width_, a4, a5, *(double *)&a1);
  uint64_t v11 = result;
  if (a3)
  {
    id v12 = objc_msgSend(result, sel_fontDescriptor);
    id v13 = objc_msgSend(v12, sel_fontDescriptorWithSymbolicTraits_, objc_msgSend(v12, sel_symbolicTraits) | a3);
    if (!v13) {
      id v13 = v12;
    }
    id v14 = objc_msgSend(v9, sel_fontWithDescriptor_size_, v13, a4);

    return v14;
  }
  return result;
}

id static UIFont.scaledSystemFont(ofSize:style:maxSize:weight:traits:)(uint64_t a1, int a2, double a3, double a4, double a5)
{
  return static UIFont.scaledSystemFont(ofSize:style:maxSize:weight:width:traits:traitCollection:)(a1, 0, 1, a2, 0, a3, a4, a5);
}

id static UIFont.scaledSystemFont(ofSize:style:maxSize:weight:width:traits:)(uint64_t a1, uint64_t a2, char a3, int a4, double a5, double a6, double a7)
{
  return static UIFont.scaledSystemFont(ofSize:style:maxSize:weight:width:traits:traitCollection:)(a1, a2, a3 & 1, a4, 0, a5, a6, a7);
}

id static UIFont.scaledSystemFont(ofSize:style:maxSize:weight:width:traits:traitCollection:)(uint64_t a1, uint64_t a2, char a3, int a4, uint64_t a5, double a6, double a7, double a8)
{
  char v14 = a3 & 1;
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17A8]), sel_initForTextStyle_, a1);
  objc_msgSend(v15, sel_scaledValueForValue_compatibleWithTraitCollection_, a5, a6);
  double v17 = v16;

  if (v17 < a7) {
    a7 = v17;
  }
  sub_1B5F73CD0();
  return static UIFont.systemFont(ofSize:weight:width:traits:)(a2, v14, a4, a7, a8);
}

id static UIFont.fontNamed(_:size:)(double a1)
{
  sub_1B5F73CD0();
  sub_1B61B1F70();
  id result = sub_1B5FFBC24(a1);
  if (!result)
  {
    id v3 = objc_msgSend(self, sel_systemFontOfSize_, a1);
    return v3;
  }
  return result;
}

id sub_1B5FFBC24(double a1)
{
  int v2 = (void *)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fontWithName_size_, v2, a1);

  return v3;
}

id static UIFont.scaledFontNamed(_:style:size:maxSize:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  return static UIFont.scaledFontNamed(_:style:size:maxSize:traitCollection:)(a4, a5, a1, a2, a3, 0);
}

id static UIFont.scaledFontNamed(_:style:size:maxSize:traitCollection:)(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17A8]), sel_initForTextStyle_, a5);
  objc_msgSend(v9, sel_scaledValueForValue_compatibleWithTraitCollection_, a6, a1);
  double v11 = v10;

  if (v11 < a2) {
    a2 = v11;
  }
  sub_1B5F73CD0();
  return static UIFont.fontNamed(_:size:)(a2);
}

id static UIFont.preferredFont(for:weight:)(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17A8]), sel_initForTextStyle_, a1);
  id v3 = objc_msgSend(self, sel_preferredFontDescriptorWithTextStyle_, a1);
  unsigned int v4 = self;
  objc_msgSend(v3, sel_pointSize);
  id v5 = objc_msgSend(v4, sel_systemFontOfSize_weight_);
  id v6 = objc_msgSend(v2, sel_scaledFontForFont_, v5);

  return v6;
}

id static UIFont.preferredFont(for:weight:compatibleWith:)(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17A8]), sel_initForTextStyle_, a1);
  id v5 = objc_msgSend(self, sel_preferredFontDescriptorWithTextStyle_, a1);
  id v6 = self;
  objc_msgSend(v5, sel_pointSize);
  id v7 = objc_msgSend(v6, sel_systemFontOfSize_weight_);
  id v8 = objc_msgSend(v4, sel_scaledFontForFont_compatibleWithTraitCollection_, v7, a2);

  return v8;
}

id static UIFont.monospacedDigitSystemFont(ofSize:weight:traits:)(int a1, double a2, double a3)
{
  id v6 = self;
  id result = objc_msgSend(v6, sel_monospacedDigitSystemFontOfSize_weight_, a2, a3);
  id v8 = result;
  if (a1)
  {
    id v9 = objc_msgSend(result, sel_fontDescriptor);
    id v10 = objc_msgSend(v9, sel_fontDescriptorWithSymbolicTraits_, objc_msgSend(v9, sel_symbolicTraits) | a1);
    if (!v10) {
      id v10 = v9;
    }
    id v11 = objc_msgSend(v6, sel_fontWithDescriptor_size_, v10, a2);

    return v11;
  }
  return result;
}

id static UIFont.scaledMonospacedDigitSystemFont(ofSize:style:maxSize:weight:traits:)(uint64_t a1, int a2, double a3, double a4, double a5)
{
  return static UIFont.scaledMonospacedDigitSystemFont(ofSize:style:maxSize:weight:traits:traitCollection:)(a1, a2, 0, a3, a4, a5);
}

id static UIFont.scaledMonospacedDigitSystemFont(ofSize:style:maxSize:weight:traits:traitCollection:)(uint64_t a1, int a2, uint64_t a3, double a4, double a5, double a6)
{
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17A8]), sel_initForTextStyle_, a1);
  objc_msgSend(v11, sel_scaledValueForValue_compatibleWithTraitCollection_, a3, a4);
  double v13 = v12;

  if (v13 < a5) {
    a5 = v13;
  }
  sub_1B5F73CD0();
  return static UIFont.monospacedDigitSystemFont(ofSize:weight:traits:)(a2, a5, a6);
}

uint64_t sub_1B5FFC184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>)
{
  char v21 = *a5;
  char v22 = *a6;
  OUTLINED_FUNCTION_6_53();
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_6_0();
  (*(void (**)(uint64_t, uint64_t))(v23 + 32))(a9, a1);
  OUTLINED_FUNCTION_6_53();
  id v24 = (int *)type metadata accessor for BlueprintImpression();
  uint64_t v25 = a9 + v24[13];
  type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_6_0();
  (*(void (**)(uint64_t, uint64_t))(v26 + 32))(v25, a2);
  uint64_t v27 = a9 + v24[14];
  uint64_t v28 = sub_1B61AFA70();
  OUTLINED_FUNCTION_6_0();
  id v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32);
  v30(v27, a3, v28);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v30)(a9 + v24[15], a4, v28);
  *(unsigned char *)(a9 + v24[16]) = v21;
  *(unsigned char *)(a9 + v24[17]) = v22;
  id v32 = (void *)(a9 + v24[18]);
  *id v32 = a7;
  v32[1] = a8;
  uint64_t v33 = (double *)(a9 + v24[19]);
  double *v33 = a10;
  v33[1] = a11;
  v33[2] = a12;
  v33[3] = a13;
  return result;
}

BOOL static BlueprintImpressionTrigger.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t BlueprintImpressionTrigger.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t BlueprintImpression.blueprint.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_6_0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(a1, v1);
}

uint64_t BlueprintImpression.item.getter()
{
  type metadata accessor for BlueprintItem();
  OUTLINED_FUNCTION_6_0();
  uint64_t v0 = OUTLINED_FUNCTION_2_85();
  return v1(v0);
}

uint64_t BlueprintImpression.startDate.getter()
{
  OUTLINED_FUNCTION_9_40();
  OUTLINED_FUNCTION_6_0();
  uint64_t v0 = OUTLINED_FUNCTION_2_85();
  return v1(v0);
}

uint64_t BlueprintImpression.endDate.getter()
{
  OUTLINED_FUNCTION_9_40();
  OUTLINED_FUNCTION_6_0();
  uint64_t v0 = OUTLINED_FUNCTION_2_85();
  return v1(v0);
}

void BlueprintImpression.startTrigger.getter(unsigned char *a1@<X8>)
{
}

void BlueprintImpression.endTrigger.getter(unsigned char *a1@<X8>)
{
}

uint64_t BlueprintImpression.sessionIdentifier.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 72));
  sub_1B61B1F70();
  return v2;
}

double BlueprintImpression.frame.getter(uint64_t a1)
{
  return *(double *)(v1 + *(int *)(a1 + 76));
}

void BlueprintImpression<>.rank.getter()
{
}

uint64_t BlueprintImpressionSession.identifier.getter()
{
  uint64_t v1 = *v0;
  sub_1B61B1F70();
  return v1;
}

uint64_t BlueprintImpressionSession.startDate.getter()
{
  OUTLINED_FUNCTION_5_51();
  OUTLINED_FUNCTION_9_40();
  OUTLINED_FUNCTION_6_0();
  uint64_t v0 = OUTLINED_FUNCTION_2_85();
  return v1(v0);
}

uint64_t type metadata accessor for BlueprintImpressionSession()
{
  uint64_t result = qword_1EB645630;
  if (!qword_1EB645630) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t BlueprintImpressionSession.endDate.getter()
{
  OUTLINED_FUNCTION_5_51();
  OUTLINED_FUNCTION_9_40();
  OUTLINED_FUNCTION_6_0();
  uint64_t v0 = OUTLINED_FUNCTION_2_85();
  return v1(v0);
}

uint64_t BlueprintImpressionSession.startTrigger.getter()
{
  uint64_t result = OUTLINED_FUNCTION_5_51();
  *uint64_t v0 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t BlueprintImpressionSession.endTrigger.getter()
{
  uint64_t result = OUTLINED_FUNCTION_5_51();
  *uint64_t v0 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t BlueprintImpressionSession.number.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for BlueprintImpressionSession() + 36));
}

unint64_t sub_1B5FFC750()
{
  unint64_t result = qword_1E9DAB580;
  if (!qword_1E9DAB580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB580);
  }
  return result;
}

unint64_t sub_1B5FFC7A0()
{
  unint64_t result = qword_1E9DAB588;
  if (!qword_1E9DAB588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB588);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BlueprintImpressionTrigger(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 6) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v5 = v6 - 7;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for BlueprintImpressionTrigger(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5FFC948);
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

void type metadata accessor for BlueprintImpressionTrigger()
{
}

uint64_t getEnumTagSinglePayload for BlueprintImpressionTriggerSource(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    unsigned int v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x1F)
  {
    if (a2 + 225 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 225) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    unsigned int v5 = (*a1 | (v4 << 8)) - 226;
    return v5 + 1;
  }
LABEL_17:
  unsigned int v5 = ((*a1 >> 2) & 0x1E | (*a1 >> 7)) ^ 0x1F;
  if (v5 >= 0x1E) {
    unsigned int v5 = -1;
  }
  return v5 + 1;
}

unsigned char *storeEnumTagSinglePayload for BlueprintImpressionTriggerSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 225 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 225) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x1F) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x1E)
  {
    unsigned int v6 = ((a2 - 31) >> 8) + 1;
    *unint64_t result = a2 - 31;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5FFCAECLL);
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 8 * (((-a2 >> 1) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_1B5FFCB14(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

unsigned char *sub_1B5FFCB20(unsigned char *result)
{
  *result &= ~0x80u;
  return result;
}

unsigned char *sub_1B5FFCB30(unsigned char *result, char a2)
{
  *unint64_t result = *result & 7 | (a2 << 7);
  return result;
}

void type metadata accessor for BlueprintImpressionTriggerSource()
{
}

uint64_t sub_1B5FFCB50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 64);
}

uint64_t sub_1B5FFCB58()
{
  uint64_t result = type metadata accessor for Blueprint();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1B61AFA70();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1B5FFCCA4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    id v8 = a2 + 2;
    uint64_t v9 = a2[5];
    sub_1B61B1F70();
    if (v9)
    {
      *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v9;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(a1 + 16, (uint64_t)(a2 + 2), v9);
    }
    else
    {
      long long v11 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 16) = *v8;
      *(_OWORD *)(a1 + 32) = v11;
    }
    uint64_t v12 = *(void *)(a3 + 24);
    double v13 = (int *)type metadata accessor for Blueprint();
    uint64_t v14 = v13[14];
    uint64_t v39 = a1 + v14;
    uint64_t v37 = (uint64_t)a2 + v14;
    type metadata accessor for BlueprintSection();
    swift_getWitnessTable();
    swift_getWitnessTable();
    uint64_t v15 = sub_1B61B0670();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v39, v37, v15);
    uint64_t v16 = v13[15];
    uint64_t v38 = (uint64_t)a2 + v16;
    uint64_t v40 = a1 + v16;
    type metadata accessor for BlueprintItem();
    swift_getWitnessTable();
    swift_getWitnessTable();
    swift_getWitnessTable();
    uint64_t v17 = sub_1B61B0A30();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v40, v38, v17);
    *(void *)(a1 + v13[16]) = *(uint64_t *)((char *)a2 + v13[16]);
    uint64_t v18 = *(int *)(a3 + 52);
    uint64_t v19 = a1 + v18;
    uint64_t v20 = (uint64_t)a2 + v18;
    char v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    v21(v19, v20, v12);
    uint64_t v22 = *(int *)(a3 + 56);
    uint64_t v23 = a1 + v22;
    uint64_t v24 = (uint64_t)a2 + v22;
    uint64_t v25 = sub_1B61AFA70();
    uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
    v26(v23, v24, v25);
    v26(a1 + *(int *)(a3 + 60), (uint64_t)a2 + *(int *)(a3 + 60), v25);
    uint64_t v27 = *(int *)(a3 + 68);
    *(unsigned char *)(a1 + *(int *)(a3 + 64)) = *((unsigned char *)a2 + *(int *)(a3 + 64));
    *(unsigned char *)(a1 + v27) = *((unsigned char *)a2 + v27);
    uint64_t v28 = *(int *)(a3 + 72);
    uint64_t v29 = *(int *)(a3 + 76);
    id v30 = (void *)(a1 + v28);
    char v31 = (uint64_t *)((char *)a2 + v28);
    uint64_t v32 = v31[1];
    *id v30 = *v31;
    v30[1] = v32;
    uint64_t v33 = (_OWORD *)(a1 + v29);
    uint64_t v34 = (_OWORD *)((char *)a2 + v29);
    long long v35 = v34[1];
    _OWORD *v33 = *v34;
    v33[1] = v35;
    sub_1B61B1F70();
  }
  return a1;
}

uint64_t sub_1B5FFD03C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = type metadata accessor for Blueprint();
  uint64_t v6 = a1 + *(int *)(v5 + 56);
  type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v7 = sub_1B61B0670();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v13 = a1 + *(int *)(v5 + 60);
  type metadata accessor for BlueprintItem();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v8 = sub_1B61B0A30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v13, v8);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1 + *(int *)(a2 + 52), v4);
  uint64_t v9 = a1 + *(int *)(a2 + 56);
  uint64_t v10 = sub_1B61AFA70();
  long long v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v11(v9, v10);
  v11(a1 + *(int *)(a2 + 60), v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B5FFD2D8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a2 + 2;
  uint64_t v8 = a2[5];
  sub_1B61B1F70();
  if (v8)
  {
    *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v8;
    (**(void (***)(uint64_t, _OWORD *, uint64_t))(v8 - 8))(a1 + 16, v7, v8);
  }
  else
  {
    long long v9 = v7[1];
    *(_OWORD *)(a1 + 16) = *v7;
    *(_OWORD *)(a1 + 32) = v9;
  }
  uint64_t v10 = *(void *)(a3 + 24);
  long long v11 = (int *)type metadata accessor for Blueprint();
  uint64_t v12 = v11[14];
  uint64_t v37 = a1 + v12;
  long long v35 = (char *)a2 + v12;
  type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v13 = sub_1B61B0670();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v37, v35, v13);
  uint64_t v14 = v11[15];
  double v36 = (char *)a2 + v14;
  uint64_t v38 = a1 + v14;
  type metadata accessor for BlueprintItem();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v15 = sub_1B61B0A30();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v38, v36, v15);
  *(void *)(a1 + v11[16]) = *(void *)((char *)a2 + v11[16]);
  uint64_t v16 = *(int *)(a3 + 52);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  v19(v17, v18, v10);
  uint64_t v20 = *(int *)(a3 + 56);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_1B61AFA70();
  uint64_t v24 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v23 - 8) + 16);
  v24(v21, v22, v23);
  v24(a1 + *(int *)(a3 + 60), (char *)a2 + *(int *)(a3 + 60), v23);
  uint64_t v25 = *(int *)(a3 + 68);
  *(unsigned char *)(a1 + *(int *)(a3 + 64)) = *((unsigned char *)a2 + *(int *)(a3 + 64));
  *(unsigned char *)(a1 + v25) = *((unsigned char *)a2 + v25);
  uint64_t v26 = *(int *)(a3 + 72);
  uint64_t v27 = *(int *)(a3 + 76);
  uint64_t v28 = (void *)(a1 + v26);
  uint64_t v29 = (void *)((char *)a2 + v26);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  char v31 = (_OWORD *)(a1 + v27);
  uint64_t v32 = (_OWORD *)((char *)a2 + v27);
  long long v33 = v32[1];
  _OWORD *v31 = *v32;
  v31[1] = v33;
  sub_1B61B1F70();
  return a1;
}

uint64_t sub_1B5FFD620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
    if (v6)
    {
      *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v6;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 16, a2 + 16);
      goto LABEL_8;
    }
LABEL_7:
    long long v7 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v7;
    goto LABEL_8;
  }
  if (!v6)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
LABEL_8:
  uint64_t v8 = *(void *)(a3 + 24);
  long long v9 = (int *)type metadata accessor for Blueprint();
  uint64_t v10 = v9[14];
  uint64_t v28 = a1 + v10;
  uint64_t v26 = a2 + v10;
  type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v11 = sub_1B61B0670();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v28, v26, v11);
  uint64_t v12 = v9[15];
  uint64_t v27 = a2 + v12;
  uint64_t v29 = a1 + v12;
  type metadata accessor for BlueprintItem();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v13 = sub_1B61B0A30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v29, v27, v13);
  *(void *)(a1 + v9[16]) = *(void *)(a2 + v9[16]);
  swift_retain();
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 24))(a1 + *(int *)(a3 + 52), a2 + *(int *)(a3 + 52), v8);
  uint64_t v14 = *(int *)(a3 + 56);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_1B61AFA70();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24);
  v18(v15, v16, v17);
  v18(a1 + *(int *)(a3 + 60), a2 + *(int *)(a3 + 60), v17);
  *(unsigned char *)(a1 + *(int *)(a3 + 64)) = *(unsigned char *)(a2 + *(int *)(a3 + 64));
  *(unsigned char *)(a1 + *(int *)(a3 + 68)) = *(unsigned char *)(a2 + *(int *)(a3 + 68));
  uint64_t v19 = *(int *)(a3 + 72);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(int *)(a3 + 76);
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  void *v23 = *v24;
  v23[1] = v24[1];
  v23[2] = v24[2];
  uint64_t v23[3] = v24[3];
  return a1;
}

char *sub_1B5FFD9D4(char *a1, char *a2, uint64_t a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = (int *)type metadata accessor for Blueprint();
  uint64_t v9 = v8[14];
  uint64_t v26 = &a1[v9];
  uint64_t v24 = &a2[v9];
  type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v10 = sub_1B61B0670();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v26, v24, v10);
  uint64_t v11 = v8[15];
  uint64_t v25 = &a2[v11];
  uint64_t v27 = &a1[v11];
  type metadata accessor for BlueprintItem();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v12 = sub_1B61B0A30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v27, v25, v12);
  *(void *)&a1[v8[16]] = *(void *)&a2[v8[16]];
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(&a1[*(int *)(a3 + 52)], &a2[*(int *)(a3 + 52)], v7);
  uint64_t v13 = *(int *)(a3 + 56);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_1B61AFA70();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
  v17(v14, v15, v16);
  v17(&a1[*(int *)(a3 + 60)], &a2[*(int *)(a3 + 60)], v16);
  uint64_t v18 = *(int *)(a3 + 68);
  a1[*(int *)(a3 + 64)] = a2[*(int *)(a3 + 64)];
  a1[v18] = a2[v18];
  uint64_t v19 = *(int *)(a3 + 76);
  *(_OWORD *)&a1[*(int *)(a3 + 72)] = *(_OWORD *)&a2[*(int *)(a3 + 72)];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  long long v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v22;
  return a1;
}

uint64_t sub_1B5FFDCB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = (int *)type metadata accessor for Blueprint();
  uint64_t v10 = v9[14];
  uint64_t v32 = a1 + v10;
  uint64_t v30 = a2 + v10;
  type metadata accessor for BlueprintSection();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v11 = sub_1B61B0670();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v32, v30, v11);
  uint64_t v12 = v9[15];
  uint64_t v31 = a2 + v12;
  uint64_t v33 = a1 + v12;
  type metadata accessor for BlueprintItem();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v13 = sub_1B61B0A30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v33, v31, v13);
  *(void *)(a1 + v9[16]) = *(void *)(a2 + v9[16]);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 40))(a1 + *(int *)(a3 + 52), a2 + *(int *)(a3 + 52), v8);
  uint64_t v14 = *(int *)(a3 + 56);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_1B61AFA70();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 40);
  v18(v15, v16, v17);
  v18(a1 + *(int *)(a3 + 60), a2 + *(int *)(a3 + 60), v17);
  uint64_t v19 = *(int *)(a3 + 68);
  *(unsigned char *)(a1 + *(int *)(a3 + 64)) = *(unsigned char *)(a2 + *(int *)(a3 + 64));
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  uint64_t v20 = *(int *)(a3 + 72);
  uint64_t v21 = (void *)(a1 + v20);
  long long v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = *(int *)(a3 + 76);
  uint64_t v26 = (_OWORD *)(a1 + v25);
  uint64_t v27 = (_OWORD *)(a2 + v25);
  long long v28 = v27[1];
  _OWORD *v26 = *v27;
  v26[1] = v28;
  return a1;
}

uint64_t sub_1B5FFDFCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B5FFDFE0);
}

uint64_t sub_1B5FFDFE0(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_2_4();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    type metadata accessor for BlueprintItem();
    OUTLINED_FUNCTION_2_4();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = a3[13];
    }
    else
    {
      sub_1B61AFA70();
      OUTLINED_FUNCTION_2_4();
      if (*(_DWORD *)(v14 + 84) != a2) {
        return OUTLINED_FUNCTION_8_39(*(void *)(a1 + a3[18] + 8));
      }
      uint64_t v8 = v13;
      uint64_t v12 = a3[14];
    }
    uint64_t v9 = a1 + v12;
  }
  return __swift_getEnumTagSinglePayload(v9, a2, v8);
}

uint64_t sub_1B5FFE0CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B5FFE0E0);
}

void sub_1B5FFE0E0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for Blueprint();
  OUTLINED_FUNCTION_2_4();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for BlueprintItem();
    OUTLINED_FUNCTION_2_4();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[13];
    }
    else
    {
      sub_1B61AFA70();
      OUTLINED_FUNCTION_2_4();
      if (*(_DWORD *)(v16 + 84) != a3)
      {
        *(void *)(a1 + a4[18] + 8) = (a2 - 1);
        return;
      }
      uint64_t v10 = v15;
      uint64_t v14 = a4[14];
    }
    uint64_t v11 = a1 + v14;
  }
  __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
}

uint64_t type metadata accessor for BlueprintImpression()
{
  return swift_getGenericMetadata();
}

unsigned char *storeEnumTagSinglePayload for BlueprintImpressionSessionTrigger(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5FFE2C0);
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for BlueprintImpressionSessionTrigger()
{
}

uint64_t getEnumTagSinglePayload for BlueprintImpressionSessionTriggerSource(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    unsigned int v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x3F)
  {
    if (a2 + 193 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 193) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    unsigned int v5 = (*a1 | (v4 << 8)) - 194;
    return v5 + 1;
  }
LABEL_17:
  unsigned int v5 = ((*a1 >> 1) & 0x3E | (*a1 >> 7)) ^ 0x3F;
  if (v5 >= 0x3E) {
    unsigned int v5 = -1;
  }
  return v5 + 1;
}

unsigned char *storeEnumTagSinglePayload for BlueprintImpressionSessionTriggerSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 193 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 193) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x3F) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x3E)
  {
    unsigned int v6 = ((a2 - 63) >> 8) + 1;
    *uint64_t result = a2 - 63;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B5FFE464);
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 4 * (((-a2 >> 1) & 0x1F) - 32 * a2);
        break;
    }
  }
  return result;
}

unsigned char *sub_1B5FFE48C(unsigned char *result, char a2)
{
  *uint64_t result = *result & 3 | (a2 << 7);
  return result;
}

void type metadata accessor for BlueprintImpressionSessionTriggerSource()
{
}

char *initializeBufferWithCopyOfBuffer for BlueprintImpressionSession(char *a1, char *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)unsigned int v4 = *(void *)a2;
    unsigned int v4 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_1B61AFA70();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    sub_1B61B1F70();
    v12(v9, v10, v11);
    v12(&v4[a3[6]], &a2[a3[6]], v11);
    uint64_t v13 = a3[8];
    v4[a3[7]] = a2[a3[7]];
    v4[v13] = a2[v13];
    *(void *)&v4[a3[9]] = *(void *)&a2[a3[9]];
  }
  return v4;
}

uint64_t destroy for BlueprintImpressionSession(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1B61AFA70();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  return v8(v6, v5);
}

char *initializeWithCopy for BlueprintImpressionSession(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1B61AFA70();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  sub_1B61B1F70();
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  uint64_t v12 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v12] = a2[v12];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  return a1;
}

char *assignWithCopy for BlueprintImpressionSession(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)a2 + 1);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1B61AFA70();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  a1[a3[7]] = a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  return a1;
}

char *initializeWithTake for BlueprintImpressionSession(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1B61AFA70();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v11] = a2[v11];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  return a1;
}

char *assignWithTake for BlueprintImpressionSession(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1B61AFA70();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  uint64_t v12 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v12] = a2[v12];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  return a1;
}

uint64_t getEnumTagSinglePayload for BlueprintImpressionSession(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B5FFEA28);
}

uint64_t sub_1B5FFEA28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_8_39(*(void *)(a1 + 8));
  }
  uint64_t v7 = sub_1B61AFA70();
  uint64_t v8 = a1 + *(int *)(a3 + 20);
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for BlueprintImpressionSession(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B5FFEAB8);
}

uint64_t sub_1B5FFEAB8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1B61AFA70();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1B5FFEB38()
{
  uint64_t result = sub_1B61AFA70();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t DecorationToolbarItem.__allocating_init(identifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t DecorationToolbarItem.init(identifier:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t DecorationToolbarItem.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DecorationToolbarItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1B5FFECA0(uint64_t a1)
{
  uint64_t result = sub_1B5FFED4C(&qword_1EB649B10);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for DecorationToolbarItem()
{
  return self;
}

uint64_t sub_1B5FFED08(uint64_t a1)
{
  uint64_t result = sub_1B5FFED4C(&qword_1EB648AF0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B5FFED4C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DecorationToolbarItem();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B5FFED8C()
{
  return ToolbarItem.identifier.getter();
}

uint64_t sub_1B5FFEDB0(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0)
  {
    id v5 = a1;
    uint64_t v4 = vars8;
  }
  return sub_1B61B1F70();
}

uint64_t destroy for DecorationToolbarItem.Decoration(uint64_t a1)
{
  return sub_1B5FFEE04(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_1B5FFEE04(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0)
  {

    uint64_t v4 = vars8;
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DecorationToolbarItem.Decoration(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1B5FFEDB0(*(void **)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for DecorationToolbarItem.Decoration(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1B5FFEDB0(*(void **)a2, v4, v5, v6);
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_1B5FFEE04(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for DecorationToolbarItem.Decoration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_1B5FFEE04(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DecorationToolbarItem.Decoration(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 25))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DecorationToolbarItem.Decoration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B5FFEFEC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1B5FFEFF4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DecorationToolbarItem.Decoration()
{
  return &type metadata for DecorationToolbarItem.Decoration;
}

uint64_t StateCommandValue.value(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_13();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v20 - v11;
  OUTLINED_FUNCTION_0_13();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v7);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v7);
    OUTLINED_FUNCTION_3_0();
    return (*(uint64_t (**)(uint64_t))(v18 + 16))(a3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v12, v6);
    (*v3)(v17);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v6);
  }
}

uint64_t StateCommandValue.init(default:block:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  OUTLINED_FUNCTION_0_13();
  uint64_t v13 = v12;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18(v15);
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a1, a4);
  uint64_t v20 = type metadata accessor for StateCommandValue();
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v13 + 32))(&a6[*(int *)(v20 + 44)], v17, a5);
  *(void *)a6 = a2;
  *((void *)a6 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = a3;
  return result;
}

uint64_t type metadata accessor for StateCommandValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t (*StateCommandValue<>.init(off:on:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t (**a3)(unsigned __int8 *a1)@<X8>))(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_0_13();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = type metadata accessor for StateCommandValue();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)a3 + *(int *)(v9 + 44), a1, a2);
  uint64_t v10 = *(void (**)(void))(v7 + 32);
  OUTLINED_FUNCTION_12_1();
  v10();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  OUTLINED_FUNCTION_12_1();
  v10();
  OUTLINED_FUNCTION_12_1();
  v10();
  uint64_t result = (uint64_t (*)(unsigned __int8 *))swift_allocObject();
  *((void *)result + 2) = a2;
  *((void *)result + 3) = sub_1B5FFF530;
  *((void *)result + 4) = v11;
  *a3 = sub_1B5FFF5C0;
  a3[1] = result;
  return result;
}

uint64_t sub_1B5FFF478()
{
  uint64_t v1 = *(void *)(v0 + 16);
  OUTLINED_FUNCTION_3_0();
  unsigned int v3 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 24) & ~v4;
  uint64_t v6 = (*(void *)(v2 + 64) + v4 + v5) & ~v4;
  v3(v0 + v5, v1);
  v3(v0 + v6, v1);
  return swift_deallocObject();
}

uint64_t sub_1B5FFF530@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  uint64_t v5 = *(void *)(v3 - 8) + 16;
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v7 = (v6 + 24) & ~v6;
  uint64_t v8 = (*(void *)(v5 + 48) + v6 + v7) & ~v6;
  if (a1) {
    uint64_t v8 = v7;
  }
  return v4(a2, v2 + v8);
}

uint64_t sub_1B5FFF588()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B5FFF5C0(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 24))(*a1);
}

uint64_t (*StateCommandValue<>.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)(unsigned __int8 *)@<X8>))(unsigned __int8 *)
{
  OUTLINED_FUNCTION_0_13();
  uint64_t v7 = v6;
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v11 = type metadata accessor for StateCommandValue();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)a3 + *(int *)(v11 + 44), a1, a2);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 32);
  v12((char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  v12((char *)(v14 + v13), (uint64_t)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  uint64_t result = (uint64_t (*)(unsigned __int8 *))swift_allocObject();
  *((void *)result + 2) = a2;
  *((void *)result + 3) = sub_1B5FFF7D8;
  *((void *)result + 4) = v14;
  *a3 = sub_1B6000134;
  a3[1] = result;
  return result;
}

uint64_t sub_1B5FFF754()
{
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(unint64_t))(v1 + 8))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
  return swift_deallocObject();
}

uint64_t sub_1B5FFF7D8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, unint64_t))(*(void *)(*(void *)(v1 + 16) - 8) + 16))(a1, v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80)));
}

uint64_t sub_1B5FFF818()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1B5FFF8B8(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *a2;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    *a1 = v7;
    a1 = (void *)(v7 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = v7;
    a1[1] = v10;
    uint64_t v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    uint64_t v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    unint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v13(v11, v12, v4);
  }
  return a1;
}

uint64_t sub_1B5FFF9C4(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

void *sub_1B5FFFA38(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a3 + 24);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  swift_retain();
  v6(v8, v9, v5);
  return a1;
}

void *sub_1B5FFFAC8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

_OWORD *sub_1B5FFFB58(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_OWORD *sub_1B5FFFBC8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_1B5FFFC50(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v9 = a2 - v8;
  if (a2 <= v8) {
    goto LABEL_23;
  }
  uint64_t v10 = ((v7 + 16) & ~v7) + *(void *)(*(void *)(v4 - 8) + 64);
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      if ((v6 & 0x80000000) != 0) {
        return __swift_getEnumTagSinglePayload(((unint64_t)a1 + v7 + 16) & ~v7, v6, v4);
      }
      uint64_t v16 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v16) = -1;
      }
      return (v16 + 1);
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v1sub_1B5E6F544(4, 0, 0) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v1sub_1B5E6F544(4, 0, 0) = *a1;
        break;
      case 3:
        LODWORD(v1sub_1B5E6F544(4, 0, 0) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v1sub_1B5E6F544(4, 0, 0) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v1sub_1B5E6F544(4, 0, 0) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v10 | v15) + 1;
}

void sub_1B5FFFDE0(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = ((v10 + 16) & ~v10) + *(void *)(*(void *)(v6 - 8) + 64);
  char v12 = 8 * v11;
  BOOL v13 = a3 >= v9;
  unsigned int v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      unsigned int v18 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v18))
      {
        int v15 = 4;
      }
      else if (v18 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v18 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  else
  {
    int v15 = 0;
  }
  if (v9 < a2)
  {
    unsigned int v16 = ~v9 + a2;
    if (v11 < 4)
    {
      int v17 = (v16 >> v12) + 1;
      if (v11)
      {
        int v19 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v11] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v17;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v11] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1B600002CLL);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v8 & 0x80000000) != 0)
        {
          unint64_t v21 = (unint64_t)&a1[v10 + 16] & ~v10;
          __swift_storeEnumTagSinglePayload(v21, a2, v8, v6);
        }
        else
        {
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v20 = a2 ^ 0x80000000;
            *((void *)a1 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
          }
          else
          {
            uint64_t v20 = (a2 - 1);
          }
          *(void *)a1 = v20;
        }
      }
      return;
  }
}

uint64_t (*sub_1B6000054@<X0>(uint64_t (*a1)@<X0>(uint64_t *a1@<X8>)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (**a6)@<X0>(uint64_t *a1@<X8>)@<X8>))@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (uint64_t (*)@<X0>(uint64_t *@<X8>))swift_allocObject();
  *((void *)result + 2) = a4;
  *((void *)result + 3) = a5;
  *((void *)result + 4) = a2;
  *((void *)result + 5) = a3;
  *a6 = sub_1B6000104;
  a6[1] = result;
  a6[2] = a1;
  return result;
}

uint64_t sub_1B60000CC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B6000104@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 32))();
  *a1 = result;
  return result;
}

uint64_t dispatch thunk of BlueprintLayoutCollectionLayoutAttributesBroadcasting.registerForChanges(block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of AccessibilitySupplementaryActions.accessibilitySupplementaryActions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AccessibilitySupplementaryActions.accessibilitySupplementaryActions.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of AccessibilitySupplementaryActions.accessibilitySupplementaryActions.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

id BarCompressible.compressingNavigationController.getter()
{
  sub_1B6000294();
  id v1 = v0;
  if (swift_dynamicCast())
  {
    sub_1B5E30E70(v6, (uint64_t)v8);
    uint64_t v2 = v9;
    uint64_t v3 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3)) {
      id v4 = 0;
    }
    else {
      id v4 = objc_msgSend(v1, sel_navigationController);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_1B5EC79FC((uint64_t)v6);
    return objc_msgSend(v1, sel_navigationController);
  }
  return v4;
}

unint64_t sub_1B6000294()
{
  unint64_t result = qword_1EB63FE10;
  if (!qword_1EB63FE10)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB63FE10);
  }
  return result;
}

Swift::Void __swiftcall BarCompressible.updateCompressingNavigationController(traitCollection:miniMastheadPresent:)(UITraitCollection traitCollection, Swift::Bool miniMastheadPresent)
{
  uint64_t v5 = v3;
  uint64_t v6 = v2;
  id v7 = objc_msgSend(v4, sel_splitViewController);
  if (v7 || (id v7 = objc_msgSend(v4, sel_tabBarController)) != 0)
  {
    id v8 = objc_msgSend(v7, sel_traitCollection);

    objc_msgSend(v8, sel_horizontalSizeClass);
  }
  uint64_t v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v6, v5);
  if (v9)
  {
    id v10 = v9;
    objc_msgSend(v9, sel_setNavigationBarHidden_animated_, 0, 0);
  }
}

BOOL SegmentedColorViewDirection.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

BOOL sub_1B6000428@<W0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  BOOL result = SegmentedColorViewDirection.init(rawValue:)(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_1B600045C(void *a1@<X8>)
{
  *a1 = *v1;
}

id SegmentedColorView.startColor.getter()
{
  id v1 = (void **)(v0 + OBJC_IVAR___TUSegmentedColorView_startColor);
  OUTLINED_FUNCTION_24();
  uint64_t v2 = *v1;
  return v2;
}

void SegmentedColorView.startColor.setter()
{
}

id sub_1B6000554@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR___TUSegmentedColorView_startColor);
  swift_beginAccess();
  char v4 = *v3;
  *a2 = *v3;
  return v4;
}

void sub_1B60005B8(id *a1)
{
  id v1 = *a1;
  SegmentedColorView.startColor.setter();
}

void (*SegmentedColorView.startColor.modify())(void **a1, char a2)
{
  uint64_t v0 = OUTLINED_FUNCTION_6_54();
  OUTLINED_FUNCTION_2_86((uint64_t)v0);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_70();
  id v2 = v1;
  return sub_1B6000650;
}

void sub_1B6000650(void **a1, char a2)
{
}

id SegmentedColorView.endColor.getter()
{
  id v1 = (void **)(v0 + OBJC_IVAR___TUSegmentedColorView_endColor);
  OUTLINED_FUNCTION_24();
  id v2 = *v1;
  return v2;
}

void SegmentedColorView.endColor.setter()
{
}

void sub_1B6000754()
{
  OUTLINED_FUNCTION_1_91();
  uint64_t v3 = *v2;
  void *v2 = v1;
  id v4 = v1;
  sub_1B6000840((uint64_t)v3, v0);
}

id sub_1B60007B0@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR___TUSegmentedColorView_endColor);
  swift_beginAccess();
  id v4 = *v3;
  *a2 = *v3;
  return v4;
}

void sub_1B6000814(id *a1)
{
  id v1 = *a1;
  SegmentedColorView.endColor.setter();
}

void sub_1B6000840(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  id v4 = (void **)&v2[*a2];
  OUTLINED_FUNCTION_24();
  uint64_t v5 = *v4;
  sub_1B5E44E58();
  id v6 = v5;
  char v7 = sub_1B61B2E10();

  if ((v7 & 1) == 0) {
    objc_msgSend(v3, sel_setNeedsDisplay);
  }
}

void (*SegmentedColorView.endColor.modify())(void **a1, char a2)
{
  uint64_t v0 = OUTLINED_FUNCTION_6_54();
  OUTLINED_FUNCTION_2_86((uint64_t)v0);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_70();
  id v2 = v1;
  return sub_1B6000938;
}

void sub_1B6000938(void **a1, char a2)
{
}

void sub_1B6000950(void **a1, char a2, void (*a3)(id))
{
  uint64_t v3 = *a1;
  uint64_t v5 = (id *)((char *)*a1 + 24);
  id v4 = *v5;
  if (a2)
  {
    a3(v4);
  }
  else
  {
    a3(v4);
  }
  free(v3);
}

uint64_t SegmentedColorView.numberOfSegments.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___TUSegmentedColorView_numberOfSegments;
  OUTLINED_FUNCTION_24();
  return *(void *)v1;
}

id SegmentedColorView.numberOfSegments.setter()
{
  return sub_1B6000C18();
}

uint64_t sub_1B6000A84@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR___TUSegmentedColorView_numberOfSegments);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void (*SegmentedColorView.numberOfSegments.modify())(uint64_t a1, uint64_t a2)
{
  uint64_t v0 = OUTLINED_FUNCTION_6_54();
  OUTLINED_FUNCTION_2_86((uint64_t)v0);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_70();
  return sub_1B6000B3C;
}

void sub_1B6000B3C(uint64_t a1, uint64_t a2)
{
}

uint64_t SegmentedColorView.direction.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___TUSegmentedColorView_direction;
  OUTLINED_FUNCTION_24();
  return *(void *)v1;
}

id SegmentedColorView.direction.setter()
{
  return sub_1B6000C18();
}

id sub_1B6000C18()
{
  OUTLINED_FUNCTION_1_91();
  uint64_t v3 = *v2;
  uint64_t *v2 = v1;
  return sub_1B6000CAC(v3, v0);
}

uint64_t sub_1B6000C58@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR___TUSegmentedColorView_direction);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

id sub_1B6000CAC(uint64_t a1, void *a2)
{
  id v4 = &v2[*a2];
  id result = (id)OUTLINED_FUNCTION_24();
  if (*(void *)v4 != a1) {
    return objc_msgSend(v2, sel_setNeedsDisplay);
  }
  return result;
}

void (*SegmentedColorView.direction.modify())(uint64_t a1, uint64_t a2)
{
  uint64_t v0 = OUTLINED_FUNCTION_6_54();
  OUTLINED_FUNCTION_2_86((uint64_t)v0);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_4_70();
  return sub_1B6000D70;
}

void sub_1B6000D70(uint64_t a1, uint64_t a2)
{
}

void sub_1B6000D88(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3 = *(void **)a1;
  a3(*(void *)(*(void *)a1 + 24));
  free(v3);
}

id SegmentedColorView.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_38();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_35_0();
  return objc_msgSend(v2, v3, v4);
}

id SegmentedColorView.init(frame:)()
{
  OUTLINED_FUNCTION_38();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = OBJC_IVAR___TUSegmentedColorView_startColor;
  uint64_t v3 = self;
  double v4 = v0;
  *(void *)&v0[v2] = objc_msgSend(v3, sel_whiteColor);
  uint64_t v5 = OBJC_IVAR___TUSegmentedColorView_endColor;
  *(void *)&v4[v5] = objc_msgSend(v3, sel_blackColor);
  *(void *)&v4[OBJC_IVAR___TUSegmentedColorView_numberOfSegments] = 5;
  *(void *)&v4[OBJC_IVAR___TUSegmentedColorView_direction] = 0;

  double v6 = OUTLINED_FUNCTION_35_0();
  id v9 = objc_msgSendSuper2(v7, v8, v6, v4, ObjectType);
  objc_msgSend(v9, sel_setClipsToBounds_, 1);
  return v9;
}

void sub_1B6000F3C()
{
  uint64_t v1 = OBJC_IVAR___TUSegmentedColorView_startColor;
  uint64_t v2 = self;
  *(void *)&v0[v1] = objc_msgSend(v2, sel_whiteColor);
  uint64_t v3 = OBJC_IVAR___TUSegmentedColorView_endColor;
  *(void *)&v0[v3] = objc_msgSend(v2, sel_blackColor);
  *(void *)&v0[OBJC_IVAR___TUSegmentedColorView_numberOfSegments] = 5;
  *(void *)&v0[OBJC_IVAR___TUSegmentedColorView_direction] = 0;

  sub_1B61B34D0();
  __break(1u);
}

Swift::Void __swiftcall SegmentedColorView.draw(_:)(__C::CGRect a1)
{
  CGFloat height = a1.size.height;
  CGFloat width = a1.size.width;
  CGFloat y = a1.origin.y;
  CGFloat x = a1.origin.x;
  double v6 = UIGraphicsGetCurrentContext();
  if (v6)
  {
    char v7 = v6;
    SEL v8 = (id *)(v1 + OBJC_IVAR___TUSegmentedColorView_endColor);
    OUTLINED_FUNCTION_24();
    id v9 = (CGColor *)objc_msgSend(*v8, sel_CGColor);
    CGContextSetFillColorWithColor(v7, v9);

    CGFloat rect = x;
    v60.origin.CGFloat x = x;
    v60.origin.CGFloat y = y;
    v60.size.CGFloat width = width;
    v60.size.CGFloat height = height;
    CGContextFillRect(v7, v60);
    id v10 = (uint64_t *)(v1 + OBJC_IVAR___TUSegmentedColorView_numberOfSegments);
    OUTLINED_FUNCTION_24();
    if (*v10 >= 1)
    {
      size_t v11 = (void *)(v1 + OBJC_IVAR___TUSegmentedColorView_direction);
      int v12 = OUTLINED_FUNCTION_24();
      if (*v11 == 1)
      {
        double v24 = OUTLINED_FUNCTION_3_71(v12, v13, v14, v15, v16, v17, v18, v19, *(CGRect *)&v20, *(uint64_t *)&x);
      }
      else
      {
        CGFloat v25 = x;
        if (*v11) {
          goto LABEL_22;
        }
        CGFloat v26 = y;
        CGFloat v27 = width;
        CGFloat v28 = height;
        double v24 = CGRectGetWidth(*(CGRect *)&v25);
      }
      uint64_t v29 = *v10;
      if (*v10 < 0)
      {
LABEL_21:
        __break(1u);
        while (1)
        {
LABEL_22:
          sub_1B61B3810();
          __break(1u);
        }
      }
      if (v29)
      {
        double v30 = v24 / (double)v29;
        uint64_t v31 = (id *)(v1 + OBJC_IVAR___TUSegmentedColorView_startColor);
        OUTLINED_FUNCTION_24();
        uint64_t v32 = 0;
        CGFloat v33 = 0.0;
        double v34 = height;
        double v35 = width;
        double v36 = y;
        while (v29 != v32)
        {
          uint64_t v37 = (CGColor *)objc_msgSend(*v31, sel_CGColor);
          CGContextSetFillColorWithColor(v7, v37);

          if (__OFSUB__(*v10, v32)) {
            goto LABEL_20;
          }
          CGContextSetAlpha(v7, (double)(*v10 - v32) / (double)*v10);
          if (*v11 == 1)
          {
            v61.origin.CGFloat x = rect;
            v61.origin.CGFloat y = y;
            v61.size.CGFloat width = width;
            v61.size.CGFloat height = height;
            v62.size.CGFloat width = CGRectGetWidth(v61);
            v62.origin.CGFloat x = 0.0;
            v62.origin.CGFloat y = v33;
            v62.size.CGFloat height = v30;
            CGRect v63 = CGRectIntegral(v62);
            CGFloat v50 = v63.origin.x;
            CGFloat v51 = v63.origin.y;
            CGFloat v52 = v63.size.width;
            CGFloat v53 = v63.size.height;
            CGContextFillRect(v7, v63);
            v64.origin.CGFloat x = v50;
            v64.origin.CGFloat y = v51;
            v64.size.CGFloat width = v52;
            v64.size.CGFloat height = v53;
            double MaxY = CGRectGetMaxY(v64);
          }
          else
          {
            if (*v11) {
              goto LABEL_22;
            }
            v65.size.CGFloat height = OUTLINED_FUNCTION_3_71(v38, v39, v40, v41, v42, v43, v44, v45, *(CGRect *)&v46, *(uint64_t *)&rect);
            v65.origin.CGFloat y = 0.0;
            v65.origin.CGFloat x = v33;
            v65.size.CGFloat width = v30;
            CGRect v66 = CGRectIntegral(v65);
            CGFloat v55 = v66.origin.x;
            CGFloat v56 = v66.origin.y;
            CGFloat v57 = v66.size.width;
            CGFloat v58 = v66.size.height;
            CGContextFillRect(v7, v66);
            v67.origin.CGFloat x = v55;
            v67.origin.CGFloat y = v56;
            v67.size.CGFloat width = v57;
            v67.size.CGFloat height = v58;
            double MaxY = CGRectGetMaxX(v67);
          }
          CGFloat v33 = MaxY;
          ++v32;
          CGFloat height = v34;
          CGFloat width = v35;
          CGFloat y = v36;
          if (v29 == v32) {
            goto LABEL_17;
          }
        }
        __break(1u);
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
    }
LABEL_17:
  }
}

id SegmentedColorView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1B60013DC()
{
  unint64_t result = qword_1E9DAB5B0;
  if (!qword_1E9DAB5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB5B0);
  }
  return result;
}

id sub_1B600143C()
{
  return SegmentedColorView.numberOfSegments.setter();
}

id sub_1B6001468()
{
  return SegmentedColorView.direction.setter();
}

ValueMetadata *type metadata accessor for SegmentedColorViewDirection()
{
  return &type metadata for SegmentedColorViewDirection;
}

uint64_t type metadata accessor for SegmentedColorView()
{
  return self;
}

uint64_t dispatch thunk of BlueprintPipelineDelegate.blueprintPipeline<A, B>(_:didChangeStateFrom:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 8))();
}

uint64_t sub_1B600152C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for os_unfair_lock_s(255);
  sub_1B61B3340();
  uint64_t v4 = sub_1B61B3330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return v4;
}

uint64_t DebouncedSet.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  DebouncedSet.init(_:)(a1);
  return v2;
}

uint64_t DebouncedSet.init(_:)(uint64_t a1)
{
  sub_1B6002A08();
  swift_getTupleTypeMetadata2();
  sub_1B61B2590();
  v5[0] = a1;
  v5[1] = sub_1B61B1F50();
  uint64_t v3 = type metadata accessor for DebouncedSet.State();
  *(void *)(v1 + 16) = sub_1B60016E8((uint64_t)v5, v3);
  return v1;
}

uint64_t sub_1B60016E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  double v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
  uint64_t v7 = sub_1B600152C((uint64_t)v6, a2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
  return v7;
}

void DebouncedSet.insert(_:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  OUTLINED_FUNCTION_11_0();
  long long v6[2] = *(void *)(v2 + 80);
  OUTLINED_FUNCTION_11_0();
  v6[3] = *(void *)(v3 + 88);
  v6[4] = v4;
  uint64_t v5 = type metadata accessor for DebouncedSet.State();
  sub_1B6002E94((void (*)(uint64_t))sub_1B6002A70, (uint64_t)v6, v1, v5, MEMORY[0x1E4FBC848] + 8);
}

uint64_t sub_1B6001868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](a1);
  id v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  int v13 = (char *)&v18 - v12;
  uint64_t v14 = *(void *)(v11 + 8);
  sub_1B6002A08();
  MEMORY[0x1BA9AF190](&v19, a2, v14, a3, v15, a4);
  if (v19)
  {
    int v16 = *(void **)(v19 + 40);
    if (v16) {
      objc_msgSend(v16, sel_invalidate);
    }
    swift_release();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a2, a3);
  sub_1B61B2850();
  sub_1B61B2810();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, a3);
}

void DebouncedSet.remove(_:after:wasRemoved:)(uint64_t a1, void (*a2)(void), uint64_t a3, double a4)
{
  uint64_t v9 = *(void *)(*v4 + 80);
  uint64_t v10 = sub_1B61B2F80();
  OUTLINED_FUNCTION_0_13();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = &v18[-v14];
  uint64_t v16 = v4[2];
  uint64_t v19 = a1;
  double v20 = a4;
  unint64_t v21 = v4;
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v17 = type metadata accessor for DebouncedSet.State();
  sub_1B6002E94((void (*)(uint64_t))sub_1B6002A90, (uint64_t)v18, v16, v17, MEMORY[0x1E4FBB390]);
  if (v24 == 1)
  {
    if (a2)
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 1, 1, v9);
      a2(v15);
      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v15, v10);
    }
  }
}

uint64_t sub_1B6001B6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>, double a7@<D0>)
{
  uint64_t v46 = a5;
  uint64_t v14 = *(void *)(*(void *)a3 + 80);
  uint64_t v45 = *(void *)(v14 - 8);
  uint64_t v47 = *(void *)(v45 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v16 = (char *)&v35 - v15;
  uint64_t v18 = *(void *)(v17 + 88);
  uint64_t result = sub_1B61B2840();
  if (result)
  {
    uint64_t v40 = a4;
    int v41 = a6;
    uint64_t v42 = v7;
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v39 = a1 + 8;
    sub_1B6002A08();
    uint64_t v38 = v21;
    uint64_t v44 = v18;
    MEMORY[0x1BA9AF190](&v48, a2, v20, v14);
    if (v48)
    {
      uint64_t v22 = *(void **)(v48 + 40);
      if (v22) {
        objc_msgSend(v22, sel_invalidate);
      }
      swift_release();
    }
    uint64_t v23 = v45;
    double v36 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
    v36(v16, a2, v14);
    uint64_t v24 = *(unsigned __int8 *)(v23 + 80);
    uint64_t v43 = a2;
    uint64_t v37 = v24 | 7;
    CGFloat v25 = (void *)swift_allocObject();
    uint64_t v26 = v44;
    v25[2] = v14;
    void v25[3] = v26;
    v25[4] = a3;
    uint64_t v45 = *(void *)(v23 + 32);
    ((void (*)(char *, char *, uint64_t))v45)((char *)v25 + ((v24 + 40) & ~v24), v16, v14);
    swift_allocObject();
    uint64_t v27 = sub_1B5F0F1C4((uint64_t)sub_1B6002CC0, (uint64_t)v25, a7);
    CGFloat v28 = v36;
    v36(v16, v43, v14);
    uint64_t v48 = v27;
    uint64_t v35 = v27;
    uint64_t v29 = v44;
    sub_1B61B1FD0();
    swift_retain();
    swift_retain();
    sub_1B61B2000();
    v28(v16, v43, v14);
    double v30 = (char *)swift_allocObject();
    *((void *)v30 + 2) = v14;
    *((void *)v30 + 3) = v29;
    uint64_t v31 = v40;
    uint64_t v32 = (void (*)(char *, char *, uint64_t))v45;
    uint64_t v33 = v46;
    *((void *)v30 + 4) = v40;
    *((void *)v30 + 5) = v33;
    v32(&v30[(v24 + 48) & ~v24], v16, v14);
    sub_1B5E4DC4C(v31);
    sub_1B5F0E17C((uint64_t)sub_1B6002D9C, (uint64_t)v30);
    swift_release();
    uint64_t result = swift_release();
    char v34 = 0;
    a6 = v41;
  }
  else
  {
    char v34 = 1;
  }
  *a6 = v34;
  return result;
}

void sub_1B6001EC8(void *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[2];
  void v5[2] = *(void *)(*a1 + 80);
  _OWORD v5[3] = *(void *)(v2 + 88);
  void v5[4] = a2;
  uint64_t v4 = type metadata accessor for DebouncedSet.State();
  sub_1B6002E94((void (*)(uint64_t))sub_1B6002DE0, (uint64_t)v5, v3, v4, MEMORY[0x1E4FBC848] + 8);
}

uint64_t sub_1B6001F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B61B2F80();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v13 - v10;
  sub_1B61B2850();
  sub_1B61B2820();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, a3);
  float64x2_t v13[3] = 0;
  sub_1B6002A08();
  sub_1B61B1FD0();
  return sub_1B61B2000();
}

uint64_t sub_1B600213C(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1B61B2F80();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v12 - v10;
  if (a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v11, a3, a4);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, a4);
    a1(v11);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  return result;
}

uint64_t DebouncedSet.deinit()
{
  swift_release();
  return v0;
}

uint64_t DebouncedSet.__deallocating_deinit()
{
  DebouncedSet.deinit();
  return swift_deallocClassInstance();
}

uint64_t DebouncedSet.startIndex.getter()
{
  return sub_1B60022F0((void (*)(uint64_t))sub_1B6002AB8);
}

uint64_t DebouncedSet.endIndex.getter()
{
  return sub_1B60022F0((void (*)(uint64_t))sub_1B6002AE8);
}

uint64_t sub_1B60022F0(void (*a1)(uint64_t))
{
  uint64_t v3 = *(void *)(v1 + 16);
  OUTLINED_FUNCTION_11_0();
  long long v9[2] = *(void *)(v4 + 80);
  OUTLINED_FUNCTION_11_0();
  v9[3] = *(void *)(v5 + 88);
  uint64_t v6 = type metadata accessor for DebouncedSet.State();
  uint64_t v7 = sub_1B61B27E0();
  sub_1B6002E94(a1, (uint64_t)v9, v3, v6, v7);
  return v9[5];
}

uint64_t sub_1B60023A4@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  uint64_t result = a2(*a1);
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = v6 & 1;
  return result;
}

void DebouncedSet.subscript.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  OUTLINED_FUNCTION_11_0();
  uint64_t v9 = *(void *)(v2 + 80);
  OUTLINED_FUNCTION_11_0();
  uint64_t v10 = *(void *)(v3 + 88);
  uint64_t v11 = v4;
  uint64_t v12 = v5;
  char v13 = v6 & 1;
  uint64_t v7 = type metadata accessor for DebouncedSet.State();
  sub_1B6002E94((void (*)(uint64_t))sub_1B6002B18, (uint64_t)&v8, v1, v7, v9);
}

uint64_t DebouncedSet.index(after:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  OUTLINED_FUNCTION_11_0();
  void v10[2] = *(void *)(v2 + 80);
  OUTLINED_FUNCTION_11_0();
  void v10[3] = *(void *)(v3 + 88);
  void v10[4] = v4;
  v10[5] = v5;
  char v11 = v6 & 1;
  uint64_t v7 = type metadata accessor for DebouncedSet.State();
  uint64_t v8 = sub_1B61B27E0();
  sub_1B6002E94((void (*)(uint64_t))sub_1B6002B54, (uint64_t)v10, v1, v7, v8);
  return v12;
}

uint64_t sub_1B6002554@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1B61B2800();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  return result;
}

uint64_t sub_1B60025A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1B60025D4(DebouncedSet.startIndex.getter, a1);
}

uint64_t sub_1B60025BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1B60025D4(DebouncedSet.endIndex.getter, a1);
}

uint64_t sub_1B60025D4@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  uint64_t result = a1();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5 & 1;
  return result;
}

void (*sub_1B600260C(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1B6002674(v2);
  return sub_1B5E499E0;
}

void (*sub_1B6002674(void *a1))(void *a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  *a1 = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  a1[1] = v3;
  a1[2] = malloc(*(void *)(v3 + 64));
  DebouncedSet.subscript.getter();
  return sub_1B5E92278;
}

void sub_1B6002754(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = -2;
}

uint64_t sub_1B600277C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = DebouncedSet.index(after:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  return result;
}

uint64_t sub_1B60027BC(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = DebouncedSet.index(after:)();
  uint64_t v7 = v6;
  char v9 = v8;
  uint64_t result = sub_1B5E6E86C(v2, v3, v4);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v9 & 1;
  return result;
}

uint64_t sub_1B6002838@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_retain();
  uint64_t v4 = DebouncedSet.startIndex.getter();
  uint64_t v6 = v5;
  char v8 = v7;
  uint64_t result = swift_release();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v8 & 1;
  return result;
}

uint64_t sub_1B600289C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_1B60028F0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F4184380](a1, WitnessTable);
}

uint64_t DebouncedSet.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  OUTLINED_FUNCTION_11_0();
  long long v6[2] = *(void *)(v2 + 80);
  OUTLINED_FUNCTION_11_0();
  v6[3] = *(void *)(v3 + 88);
  uint64_t v4 = type metadata accessor for DebouncedSet.State();
  sub_1B6002E94((void (*)(uint64_t))sub_1B6002B78, (uint64_t)v6, v1, v4, MEMORY[0x1E4FBB1A0]);
  return v6[6];
}

uint64_t sub_1B60029E4()
{
  return DebouncedSet.description.getter();
}

void sub_1B6002A08()
{
  if (!qword_1EB642440)
  {
    unint64_t v0 = type metadata accessor for Debounce();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB642440);
    }
  }
}

uint64_t type metadata accessor for DebouncedSet.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B6002A70(uint64_t a1)
{
  return sub_1B6001868(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1B6002A90@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_1B6001B6C(a1, *(void *)(v2 + 16), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), a2, *(double *)(v2 + 24));
}

uint64_t sub_1B6002AB8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B60023A4(a1, MEMORY[0x1E4FBB4D8], a2);
}

uint64_t sub_1B6002AE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B60023A4(a1, MEMORY[0x1E4FBB508], a2);
}

uint64_t sub_1B6002B18()
{
  return sub_1B61B2870();
}

uint64_t sub_1B6002B54@<X0>(uint64_t a1@<X8>)
{
  return sub_1B6002554(a1);
}

uint64_t sub_1B6002B78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B61B27B0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B6002BB0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B6002BCC()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for DebouncedSet()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for DebouncedSet(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DebouncedSet);
}

uint64_t dispatch thunk of DebouncedSet.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1B6002C2C()
{
  OUTLINED_FUNCTION_0_13();
  swift_release();
  OUTLINED_FUNCTION_2_87();
  v0();
  return swift_deallocObject();
}

void sub_1B6002CC0()
{
  sub_1B6001EC8(*(void **)(v0 + 32), v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
}

uint64_t sub_1B6002D00()
{
  OUTLINED_FUNCTION_0_13();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  OUTLINED_FUNCTION_2_87();
  v1();
  return swift_deallocObject();
}

uint64_t sub_1B6002D9C()
{
  return sub_1B600213C(*(void (**)(char *))(v0 + 32), *(void *)(v0 + 40), v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)), *(void *)(v0 + 16));
}

uint64_t sub_1B6002DE0(uint64_t a1)
{
  return sub_1B6001F74(a1, *(void *)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t sub_1B6002E00@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(v2 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v2 + *MEMORY[0x1E4FBBAB0]) - 8) + 16))(a2);
}

void sub_1B6002E94(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B6002F20(a3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)a3 + 16), (os_unfair_lock_t)(a3 + ((*(unsigned int *)(*(void *)a3 + 48) + 3) & 0x1FFFFFFFCLL)), a1, a2, a4, a5, &v5);
}

void sub_1B6002F20(uint64_t a1, os_unfair_lock_t lock, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  os_unfair_lock_lock(lock);
  a3(a1);
  os_unfair_lock_unlock(lock);
  if (v7) {
    *a7 = v7;
  }
}

uint64_t sub_1B6002FA8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B6002E00(a1, a2);
}

id sub_1B6002FC8()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for PillViewIconURL();
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)__dst - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PillViewImage();
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_7_0();
  sub_1B6003620(v2, (uint64_t)v1);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1B60036DC((uint64_t)v1, (uint64_t)v6);
      id v9 = *(id *)&v6[*(int *)(v3 + 28)];
      id v10 = v9;
      sub_1B6003684((uint64_t)v6, (void (*)(void))type metadata accessor for PillViewIconURL);
    }
    else
    {
      memcpy(__dst, v1, sizeof(__dst));
      id v9 = __dst[15];
      id v11 = __dst[15];
      sub_1B5FF01B4((uint64_t)__dst);
    }
  }
  else
  {
    id v9 = (id)v1[2];
    swift_bridgeObjectRelease();
  }
  return v9;
}

uint64_t static PillViewImage.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (int *)type metadata accessor for PillViewIconURL();
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_7_0();
  type metadata accessor for PillViewImage();
  OUTLINED_FUNCTION_6_0();
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  id v10 = (void *)((char *)__dst - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  char v13 = (char *)__dst - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (void *)((char *)__dst - v14);
  sub_1B60035BC();
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v19 = (char *)__dst - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = &v19[*(int *)(v17 + 56)];
  sub_1B6003620(a1, (uint64_t)v19);
  sub_1B6003620(a2, (uint64_t)v20);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1B6003620((uint64_t)v19, (uint64_t)v13);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1B60036DC((uint64_t)v20, v2);
        if ((MEMORY[0x1BA9ACAA0](v13, v2) & 1) != 0
          && (MEMORY[0x1BA9ACAA0](&v13[v5[5]], v2 + v5[5]) & 1) != 0
          && (MEMORY[0x1BA9ACAA0](&v13[v5[6]], v2 + v5[6]) & 1) != 0)
        {
          uint64_t v22 = v5[7];
          uint64_t v23 = *(void **)&v13[v22];
          uint64_t v24 = *(void **)(v2 + v22);
          if (v23)
          {
            if (v24)
            {
              sub_1B5E44E58();
              id v25 = v24;
              id v26 = v23;
              char v27 = sub_1B61B2E10();

              if (v27) {
                goto LABEL_10;
              }
            }
          }
          else if (!v24)
          {
LABEL_10:
            sub_1B6003684(v2, (void (*)(void))type metadata accessor for PillViewIconURL);
            sub_1B6003684((uint64_t)v13, (void (*)(void))type metadata accessor for PillViewIconURL);
            char v28 = 1;
LABEL_36:
            uint64_t v32 = (void (*)(void))type metadata accessor for PillViewImage;
            goto LABEL_37;
          }
        }
        sub_1B6003684(v2, (void (*)(void))type metadata accessor for PillViewIconURL);
        sub_1B6003684((uint64_t)v13, (void (*)(void))type metadata accessor for PillViewIconURL);
LABEL_35:
        char v28 = 0;
        goto LABEL_36;
      }
      sub_1B6003684((uint64_t)v13, (void (*)(void))type metadata accessor for PillViewIconURL);
    }
    else
    {
      sub_1B6003620((uint64_t)v19, (uint64_t)v10);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        memcpy(__dst, v20, sizeof(__dst));
        char v28 = static PillViewAssetHandles.== infix(_:_:)(v10, __dst);
        sub_1B5FF01B4((uint64_t)__dst);
        sub_1B5FF01B4((uint64_t)v10);
        goto LABEL_36;
      }
      sub_1B5FF01B4((uint64_t)v10);
    }
    goto LABEL_17;
  }
  sub_1B6003620((uint64_t)v19, (uint64_t)v15);
  uint64_t v29 = *v15;
  uint64_t v30 = v15[1];
  uint64_t v31 = (void *)v15[2];
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v33 = (void *)*((void *)v20 + 2);
    BOOL v34 = v29 == *(void *)v20 && v30 == *((void *)v20 + 1);
    if (v34 || (sub_1B61B3760() & 1) != 0)
    {
      if (!v31)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v32 = (void (*)(void))type metadata accessor for PillViewImage;
        if (!v33)
        {
LABEL_28:
          char v28 = 1;
          goto LABEL_37;
        }
LABEL_32:

        goto LABEL_35;
      }
      if (v33)
      {
        sub_1B5E44E58();
        id v35 = v33;
        id v36 = v31;
        char v37 = sub_1B61B2E10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v32 = (void (*)(void))type metadata accessor for PillViewImage;
        if ((v37 & 1) == 0) {
          goto LABEL_35;
        }
        goto LABEL_28;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v33 = v31;
    goto LABEL_32;
  }
  swift_bridgeObjectRelease();

LABEL_17:
  char v28 = 0;
  uint64_t v32 = (void (*)(void))sub_1B60035BC;
LABEL_37:
  sub_1B6003684((uint64_t)v19, v32);
  return v28 & 1;
}

uint64_t type metadata accessor for PillViewImage()
{
  uint64_t result = qword_1EB640A98;
  if (!qword_1EB640A98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1B60035BC()
{
  if (!qword_1E9DAB5B8)
  {
    type metadata accessor for PillViewImage();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DAB5B8);
    }
  }
}

uint64_t sub_1B6003620(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PillViewImage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B6003684(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_6_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1B60036DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PillViewIconURL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for PillViewImage(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      long long v14 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 24) = v14;
      (**(void (***)(uint64_t, uint64_t *))(v14 - 8))(a1, a2);
      long long v15 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 64) = v15;
      (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 40, (uint64_t)(a2 + 5));
      long long v16 = *(_OWORD *)(a2 + 13);
      *(_OWORD *)(a1 + 104) = v16;
      (**(void (***)(uint64_t, uint64_t))(v16 - 8))(a1 + 80, (uint64_t)(a2 + 10));
      uint64_t v17 = (void *)a2[15];
      *(void *)(a1 + 12sub_1B5E6F544(4, 0, 0) = v17;
      id v18 = v17;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_1B61AF960();
      uint64_t v8 = *(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
      v8(a1, a2, v7);
      uint64_t v9 = (int *)type metadata accessor for PillViewIconURL();
      v8(a1 + v9[5], (uint64_t *)((char *)a2 + v9[5]), v7);
      v8(a1 + v9[6], (uint64_t *)((char *)a2 + v9[6]), v7);
      uint64_t v10 = v9[7];
      uint64_t v11 = *(void **)((char *)a2 + v10);
      *(void *)(a1 + v1sub_1B5E6F544(4, 0, 0) = v11;
      id v12 = v11;
    }
    else
    {
      uint64_t v19 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v19;
      uint64_t v20 = (void *)a2[2];
      *(void *)(a1 + 16) = v20;
      sub_1B61B1F70();
      id v21 = v20;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for PillViewImage(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
    __swift_destroy_boxed_opaque_existential_1(a1 + 80);
    uint64_t v3 = (void **)(a1 + 120);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v4 = sub_1B61AF960();
    int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    v5(a1, v4);
    uint64_t v6 = (int *)type metadata accessor for PillViewIconURL();
    v5(a1 + v6[5], v4);
    v5(a1 + v6[6], v4);
    uint64_t v3 = (void **)(a1 + v6[7]);
  }
  else
  {
    if (EnumCaseMultiPayload) {
      return;
    }
    swift_bridgeObjectRelease();
    uint64_t v3 = (void **)(a1 + 16);
  }
  uint64_t v7 = *v3;
}

uint64_t initializeWithCopy for PillViewImage(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    long long v11 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v11;
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1, a2);
    long long v12 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v12;
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 40, a2 + 40);
    long long v13 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 104) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 80, a2 + 80);
    long long v14 = *(void **)(a2 + 120);
    *(void *)(a1 + 12sub_1B5E6F544(4, 0, 0) = v14;
    id v15 = v14;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = sub_1B61AF960();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
    v6(a1, a2, v5);
    uint64_t v7 = (int *)type metadata accessor for PillViewIconURL();
    v6(a1 + v7[5], a2 + v7[5], v5);
    v6(a1 + v7[6], a2 + v7[6], v5);
    uint64_t v8 = v7[7];
    uint64_t v9 = *(void **)(a2 + v8);
    *(void *)(a1 + v8) = v9;
    id v10 = v9;
  }
  else
  {
    uint64_t v16 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v16;
    uint64_t v17 = *(void **)(a2 + 16);
    *(void *)(a1 + 16) = v17;
    sub_1B61B1F70();
    id v18 = v17;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for PillViewImage(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1B6003684((uint64_t)a1, (void (*)(void))type metadata accessor for PillViewImage);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v11 = a2[3];
      a1[3] = v11;
      a1[4] = a2[4];
      (**(void (***)(void *, void *))(v11 - 8))(a1, a2);
      uint64_t v12 = a2[8];
      a1[8] = v12;
      a1[9] = a2[9];
      (**(void (***)(uint64_t, uint64_t))(v12 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
      uint64_t v13 = a2[13];
      a1[13] = v13;
      a1[14] = a2[14];
      (**(void (***)(uint64_t, uint64_t))(v13 - 8))((uint64_t)(a1 + 10), (uint64_t)(a2 + 10));
      long long v14 = (void *)a2[15];
      a1[15] = v14;
      id v15 = v14;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = sub_1B61AF960();
      uint64_t v6 = *(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16);
      v6(a1, a2, v5);
      uint64_t v7 = (int *)type metadata accessor for PillViewIconURL();
      v6((void *)((char *)a1 + v7[5]), (void *)((char *)a2 + v7[5]), v5);
      v6((void *)((char *)a1 + v7[6]), (void *)((char *)a2 + v7[6]), v5);
      uint64_t v8 = v7[7];
      uint64_t v9 = *(void **)((char *)a2 + v8);
      *(void *)((char *)a1 + v8) = v9;
      id v10 = v9;
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v16 = (void *)a2[2];
      a1[2] = v16;
      sub_1B61B1F70();
      id v17 = v16;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for PillViewImage(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1B61AF960();
    uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
    v7(a1, a2, v6);
    uint64_t v8 = (int *)type metadata accessor for PillViewIconURL();
    v7(&a1[v8[5]], &a2[v8[5]], v6);
    v7(&a1[v8[6]], &a2[v8[6]], v6);
    *(void *)&a1[v8[7]] = *(void *)&a2[v8[7]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for PillViewImage(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1B6003684((uint64_t)a1, (void (*)(void))type metadata accessor for PillViewImage);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1B61AF960();
      uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      uint64_t v8 = (int *)type metadata accessor for PillViewIconURL();
      v7(&a1[v8[5]], &a2[v8[5]], v6);
      v7(&a1[v8[6]], &a2[v8[6]], v6);
      *(void *)&a1[v8[7]] = *(void *)&a2[v8[7]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1B60041B4()
{
  uint64_t result = type metadata accessor for PillViewIconURL();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t < infix(_:_:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = *a2;
  int v7 = *((unsigned __int8 *)a2 + 8);
  uint64_t v8 = *a4;
  int v9 = *((unsigned __int8 *)a4 + 8);
  sub_1B5F3B450();
  if (!v7)
  {
    BOOL v13 = v6 < v8;
    if (v8) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = v6 < a3;
    }
LABEL_27:
    int v15 = v14;
    if (v9 == 2) {
      unsigned int v16 = v15;
    }
    else {
      unsigned int v16 = 1;
    }
    if (v9) {
      return v16;
    }
    else {
      return v13;
    }
  }
  if (v7 == 2 && v6 == 0)
  {
    BOOL v13 = v8 > a1;
    if (v8) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = a1 < a3;
    }
    goto LABEL_27;
  }
  if (!v9 || v9 == 2 && !v8) {
    return 0;
  }
  if (v7 == 1) {
    return 0;
  }
  BOOL v11 = v7 == 2 && v6 == 1;
  if (v11 || v9 == 1) {
    return 0;
  }
  if (v9 == 2 && v8 == 1) {
    return 0;
  }
  uint64_t result = sub_1B61B3750();
  __break(1u);
  return result;
}

uint64_t static VisualRank.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  int v4 = *((unsigned __int8 *)a2 + 8);
  if (!*((unsigned char *)a1 + 8))
  {
    if (*((unsigned char *)a2 + 8)) {
      return 0;
    }
    return v2 == v3;
  }
  if (*((unsigned char *)a1 + 8) == 1)
  {
    if (v4 != 1) {
      return 0;
    }
    return v2 == v3;
  }
  if (v2)
  {
    if (v4 != 2 || v3 != 1) {
      return 0;
    }
  }
  else if (v4 != 2 || v3 != 0)
  {
    return 0;
  }
  return 1;
}

uint64_t dispatch thunk of VisualRankable.visualRankValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for VisualRank()
{
  return &type metadata for VisualRank;
}

uint64_t sub_1B60043C0()
{
  uint64_t v0 = swift_retain();
  return sub_1B600443C(v0);
}

uint64_t sub_1B60043EC()
{
  return swift_retain();
}

uint64_t sub_1B600443C(uint64_t a1)
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_12_0();
  *unint64_t v1 = a1;
  return swift_release();
}

uint64_t sub_1B6004494(uint64_t a1)
{
  sub_1B600B5E4(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  int v4 = (char *)&v6 - v3;
  sub_1B5EF6774(a1, (uint64_t)&v6 - v3);
  return sub_1B60045AC((uint64_t)v4);
}

uint64_t sub_1B600454C@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v4 = v1 + *(void *)(v3 + 104);
  OUTLINED_FUNCTION_5_30();
  return sub_1B5EF6774(v4, a1);
}

uint64_t sub_1B60045AC(uint64_t a1)
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v4 = v1 + *(void *)(v3 + 104);
  OUTLINED_FUNCTION_8_0();
  sub_1B5FB80C0(a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1B6004614())()
{
  return j__swift_endAccess;
}

uint64_t sub_1B6004688()
{
  return swift_retain();
}

uint64_t sub_1B60046B4(uint64_t a1)
{
  *(void *)((char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x70)) = a1;
  return swift_release();
}

uint64_t sub_1B60046E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1B6004750();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1B600471C(uint64_t a1)
{
  return sub_1B60047A0(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_1B6004750()
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_0_1();
  return *(void *)v0;
}

uint64_t sub_1B60047A0(uint64_t a1, char a2)
{
  uint64_t result = OUTLINED_FUNCTION_12_0();
  *(void *)uint64_t v2 = a1;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t BlueprintCollectionViewLayout.blueprintLayoutCollectionProvider.getter()
{
  OUTLINED_FUNCTION_77();
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(v0 + 80) - 8) + 16))();
}

uint64_t sub_1B6004874@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v4 = v1 + *(void *)(v3 + 136);
  OUTLINED_FUNCTION_5_30();
  return sub_1B5EF6774(v4, a1);
}

uint64_t sub_1B60048D4(uint64_t a1)
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v4 = v1 + *(void *)(v3 + 136);
  OUTLINED_FUNCTION_8_0();
  sub_1B5FB80C0(a1, v4);
  return swift_endAccess();
}

uint64_t sub_1B600493C@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_28_0();
  sub_1B6009B94(v1 + *(void *)(v3 + 144), (uint64_t)v5);
  sub_1B6009B94((uint64_t)v5, a1);
  return sub_1B600B000(v5, sub_1B5F7EFD8);
}

uint64_t sub_1B60049B8(uint64_t a1)
{
  sub_1B6009B94(a1, (uint64_t)v5);
  OUTLINED_FUNCTION_28_0();
  uint64_t v3 = v1 + *(void *)(v2 + 144);
  sub_1B6009B94(v3, (uint64_t)v6);
  sub_1B6009B94((uint64_t)v5, v3);
  return sub_1B600B000(v6, sub_1B600ABCC);
}

uint64_t sub_1B6004A3C@<X0>(void *a1@<X8>)
{
  sub_1B600493C((uint64_t)v3);
  sub_1B6009B94((uint64_t)v3, (uint64_t)v4);
  sub_1B6009B94((uint64_t)v4, (uint64_t)v5);
  if (sub_1B5F7ECB4((uint64_t)v5) == 1) {
    return sub_1B6004AAC(a1);
  }
  else {
    return sub_1B6009B94((uint64_t)v4, (uint64_t)a1);
  }
}

uint64_t sub_1B6004AAC@<X0>(void *a1@<X8>)
{
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_47_2(v3);
  OUTLINED_FUNCTION_47_2(a1);
  return sub_1B5F096F4((uint64_t)v3);
}

uint64_t sub_1B6004B18(const void *a1)
{
  OUTLINED_FUNCTION_28_0();
  uint64_t v4 = (void *)(v1 + *(void *)(v3 + 152));
  OUTLINED_FUNCTION_47_2(v6);
  memcpy(v4, a1, 0x498uLL);
  return sub_1B5EED720((uint64_t)v6);
}

void sub_1B6004B8C(uint64_t a1)
{
  uint64_t v2 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0xA0);
  uint64_t v3 = *(void **)((char *)v1 + v2);
  *(void *)((char *)v1 + v2) = a1;
}

void BlueprintCollectionViewLayout.__allocating_init(blueprintLayoutCollectionProvider:)()
{
  id v1 = objc_allocWithZone(v0);
  BlueprintCollectionViewLayout.init(blueprintLayoutCollectionProvider:)();
}

void BlueprintCollectionViewLayout.init(blueprintLayoutCollectionProvider:)()
{
  OUTLINED_FUNCTION_83();
  id v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v5 = *MEMORY[0x1E4FBC8C8] & *(void *)v0;
  uint64_t v6 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_50_13();
  uint64_t v7 = *(void *)((*v4 & *(void *)v0) + 0x70);
  type metadata accessor for BlueprintCollectionViewLayoutCache();
  uint64_t v8 = swift_allocObject();
  int v9 = v1;
  sub_1B60098FC();
  *(void *)&v1[v7] = v8;
  OUTLINED_FUNCTION_2_88();
  BOOL v11 = &v9[*(void *)(v10 + 120)];
  *(void *)BOOL v11 = 0;
  v11[8] = 1;
  OUTLINED_FUNCTION_2_88();
  __swift_storeEnumTagSinglePayload((uint64_t)&v9[*(void *)(v12 + 136)], 1, 1, v6);
  OUTLINED_FUNCTION_2_88();
  uint64_t v14 = (uint64_t)&v9[*(void *)(v13 + 144)];
  sub_1B6009B8C(v35);
  sub_1B6009B94((uint64_t)v35, v14);
  OUTLINED_FUNCTION_2_88();
  uint64_t v16 = *(void *)(v15 + 160);
  *(void *)&v9[v16] = 0;
  OUTLINED_FUNCTION_2_88();
  uint64_t v18 = *(void *)(v5 + 80);
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(&v9[*(void *)(v17 + 128)], v3, v18);
  type metadata accessor for BlueprintCollectionViewLayoutTransition(0);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v20 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_state;
  uint64_t v22 = type metadata accessor for BlueprintCollectionViewLayoutTransition.State(0);
  __swift_storeEnumTagSinglePayload(v21, 1, 1, v22);
  *(void *)(v20 + OBJC_IVAR____TtC5TeaUI39BlueprintCollectionViewLayoutTransition_completionBlocks) = MEMORY[0x1E4FBC860];
  OUTLINED_FUNCTION_2_88();
  *(void *)&v9[*(void *)(v23 + 96)] = v20;
  uint64_t v24 = *(void *)(v5 + 88);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v24 + 32))(__src, v18, v24);
  OUTLINED_FUNCTION_2_88();
  memcpy(&v9[*(void *)(v25 + 152)], __src, 0x498uLL);
  id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FBA8A8]), sel_init);
  char v27 = *(void **)&v9[v16];
  *(void *)&v9[v16] = v26;
  id v28 = v26;

  v34.receiver = v9;
  v34.super_class = (Class)type metadata accessor for BlueprintCollectionViewLayout();
  id v29 = objc_msgSendSuper2(&v34, sel_init);
  objc_msgSend(v29, sel_setTs_sortItemsLogicallyForAccessibility_, 0);
  (*(void (**)(uint64_t, uint64_t))(v24 + 40))(v18, v24);
  uint64_t v30 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v31 = (void *)swift_allocObject();
  v31[2] = v18;
  v31[3] = v24;
  v31[4] = v30;
  sub_1B61B0450();
  swift_release();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v33, v33[3]);
  id v32 = v28;
  sub_1B61B00C0();

  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v3, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  OUTLINED_FUNCTION_73();
}

uint64_t type metadata accessor for BlueprintCollectionViewLayoutCache()
{
  return self;
}

uint64_t sub_1B6004FD4(uint64_t a1, const void *a2, uint64_t a3)
{
  memcpy(__dst, a2, sizeof(__dst));
  uint64_t v4 = a3 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x1BA9B1EC0](v4);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    memcpy(v9, __dst, sizeof(v9));
    sub_1B5F096F4((uint64_t)__dst);
    sub_1B6004B18(v9);
  }
  swift_beginAccess();
  uint64_t result = MEMORY[0x1BA9B1EC0](v4);
  if (result)
  {
    uint64_t v8 = (void *)result;
    sub_1B6004688();

    memcpy(v9, __dst, sizeof(v9));
    sub_1B60050B0();
    return swift_release();
  }
  return result;
}

void sub_1B60050B0()
{
  OUTLINED_FUNCTION_83();
  uint64_t v3 = sub_1B61B1D90();
  OUTLINED_FUNCTION_0_10();
  uint64_t v16 = v4;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_5_8();
  sub_1B61B1DF0();
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_47_2(v18);
  OUTLINED_FUNCTION_5_30();
  if (*(void *)(*(void *)(v0 + 16) + 16))
  {
    type metadata accessor for BlueprintCollectionViewLayoutCache.Token();
    uint64_t v7 = swift_allocObject();
    *(void *)(v0 + 24) = v7;
    uint64_t v8 = v7;
    swift_retain();
    swift_release();
    uint64_t v9 = *(void *)(v0 + 16);
    OUTLINED_FUNCTION_8_0();
    sub_1B600B4E4(0, &qword_1EB64BA80, MEMORY[0x1E4FBAE90]);
    sub_1B61B1F70();
    sub_1B61B1FA0();
    swift_endAccess();
    uint64_t v10 = swift_allocObject();
    swift_weakInit();
    BOOL v11 = (void *)swift_allocObject();
    v11[2] = v10;
    v11[3] = v9;
    memcpy(v11 + 4, v18, 0x498uLL);
    v11[151] = v8;
    v17[4] = sub_1B600B470;
    void v17[5] = v11;
    v17[0] = MEMORY[0x1E4F143A8];
    v17[1] = 1107296256;
    long long v17[2] = sub_1B5E3729C;
    void v17[3] = &block_descriptor_72;
    uint64_t v12 = _Block_copy(v17);
    swift_retain();
    swift_retain();
    sub_1B5F096F4((uint64_t)v18);
    uint64_t v13 = v1;
    sub_1B61B1DB0();
    sub_1B600AB54((unint64_t *)&qword_1EB647A40, MEMORY[0x1E4FBCB00]);
    uint64_t v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
    sub_1B600B5E4(0, (unint64_t *)&qword_1EB647AD8, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1B600B480((unint64_t *)&qword_1EB647AE0, (unint64_t *)&qword_1EB647AD8, v14);
    sub_1B61B3100();
    MEMORY[0x1BA9AFE10](0, v13, v2, v12);
    _Block_release(v12);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v2, v3);
    OUTLINED_FUNCTION_5_1();
    v15();
    swift_release();
    swift_release();
  }
  OUTLINED_FUNCTION_73();
}

id BlueprintCollectionViewLayout.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void BlueprintCollectionViewLayout.init(coder:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v3 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_50_13();
  uint64_t v4 = *(void *)((*v2 & *v0) + 0x70);
  type metadata accessor for BlueprintCollectionViewLayoutCache();
  uint64_t v5 = swift_allocObject();
  sub_1B60098FC();
  *(void *)((char *)v1 + v4) = v5;
  uint64_t v6 = (char *)v1 + *(void *)((*v2 & *v1) + 0x78);
  *(void *)uint64_t v6 = 0;
  v6[8] = 1;
  __swift_storeEnumTagSinglePayload((uint64_t)v1 + *(void *)((*v2 & *v1) + 0x88), 1, 1, v3);
  uint64_t v7 = (uint64_t)v1 + *(void *)((*v2 & *v1) + 0x90);
  sub_1B6009B8C(v8);
  sub_1B6009B94((uint64_t)v8, v7);
  *(void *)((char *)v1 + *(void *)((*v2 & *v1) + 0xA0)) = 0;

  sub_1B61B34D0();
  __break(1u);
}

void sub_1B6005608(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  BlueprintCollectionViewLayout.init(coder:)();
}

uint64_t sub_1B6005624@<X0>(void *a1@<X8>)
{
  OUTLINED_FUNCTION_23_15();
  uint64_t v4 = *(void *)(v3 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v14 - v7;
  OUTLINED_FUNCTION_23_15();
  uint64_t v9 = type metadata accessor for BlueprintCollectionViewLayout();
  OUTLINED_FUNCTION_23_15();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v1 + *(void *)(v10 + 128), v4);
  BlueprintCollectionViewLayout.__allocating_init(blueprintLayoutCollectionProvider:)();
  uint64_t v12 = v11;
  uint64_t result = sub_1B60057BC();
  a1[3] = v9;
  *a1 = v12;
  return result;
}

uint64_t sub_1B600575C(void *a1)
{
  id v1 = a1;
  sub_1B6005624(v4);

  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  uint64_t v2 = sub_1B61B3740();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v2;
}

uint64_t sub_1B60057BC()
{
  sub_1B600B5E4(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBB718]);
  uint64_t v1 = OUTLINED_FUNCTION_14(v0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = &v9[-v2 - 8];
  sub_1B600454C((uint64_t)&v9[-v2 - 8]);
  sub_1B60045AC((uint64_t)v3);
  uint64_t v4 = sub_1B6004688();
  sub_1B60046B4(v4);
  sub_1B600493C((uint64_t)v10);
  sub_1B6009B94((uint64_t)v10, (uint64_t)v11);
  sub_1B6009B94((uint64_t)v11, (uint64_t)v9);
  sub_1B60049B8((uint64_t)v9);
  sub_1B6004874((uint64_t)v3);
  sub_1B60048D4((uint64_t)v3);
  uint64_t v5 = sub_1B60043EC();
  sub_1B600443C(v5);
  uint64_t result = sub_1B6004750();
  if ((v7 & 1) == 0) {
    return sub_1B6005978(*(double *)&result);
  }
  return result;
}

uint64_t sub_1B60058FC()
{
  sub_1B6004B8C(0);
  objc_msgSend(v0, sel_copy);
  sub_1B61B3030();
  swift_unknownObjectRelease();
  sub_1B6009C7C();
  swift_dynamicCast();
  return v2;
}

uint64_t sub_1B6005978(double a1)
{
  return sub_1B60047A0(*(uint64_t *)&a1, 0);
}

double sub_1B6005984(void *a1)
{
  id v1 = a1;
  double v2 = sub_1B60059C8();

  return v2;
}

double sub_1B60059C8()
{
  sub_1B6004A3C(&v1);
  sub_1B5EED720((uint64_t)&v1);
  return v1;
}

uint64_t sub_1B6005A00(double a1, double a2, double a3, double a4)
{
  CGRectIntegral(*(CGRect *)&a1);
  sub_1B6004688();
  OUTLINED_FUNCTION_7();
  uint64_t v4 = sub_1B6005CC4();
  swift_release();
  if (!v4)
  {
    sub_1B6009098((uint64_t)v24);
    sub_1B6004A3C(__src);
    CGFloat v7 = *(double *)&v24[2];
    double v20 = *(double *)&v24[1];
    double v21 = *(double *)v24;
    CGFloat v9 = *(double *)&v24[3];
    double v8 = *(double *)&v24[4];
    double v10 = *(double *)&v24[5];
    memcpy(__dst, &__src[40], 0x20EuLL);
    sub_1B60939AC();
    memcpy(__dst, __src, sizeof(__dst));
    double v12 = OUTLINED_FUNCTION_7();
    uint64_t v18 = sub_1B6131E30(v13, v14, v12, v15, v16, v17, v21, v20, v7, v9, v8, v10);
    sub_1B5EED720((uint64_t)__src);
    if (!v18) {
      return 0;
    }
    if (*(unsigned char *)(v18 + 72))
    {
      sub_1B6004688();
      swift_retain_n();
      OUTLINED_FUNCTION_7();
      sub_1B6005D4C(v19);
      swift_release();
    }
    else
    {
      swift_retain();
    }
    unint64_t v5 = *(void *)(v18 + 16);
    if (!(v5 >> 62))
    {
      swift_bridgeObjectRetain_n();
      sub_1B61B37D0();
      sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C40);
      swift_release_n();
      goto LABEL_4;
    }
    sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C40);
    sub_1B61B1F70();
    uint64_t v6 = sub_1B61B34E0();
    swift_release_n();
LABEL_15:
    swift_bridgeObjectRelease();
    return v6;
  }
  unint64_t v5 = *(void *)(v4 + 16);
  if (v5 >> 62)
  {
    sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C40);
    sub_1B61B1F70();
    uint64_t v6 = sub_1B61B34E0();
    swift_release();
    goto LABEL_15;
  }
  swift_bridgeObjectRetain_n();
  sub_1B61B37D0();
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C40);
  swift_release();
LABEL_4:
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B6005CC4()
{
  OUTLINED_FUNCTION_38();
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  if (*(void *)(v1 + 16) && (OUTLINED_FUNCTION_35_0(), unint64_t v2 = sub_1B5E470A8(), (v3 & 1) != 0))
  {
    uint64_t v4 = *(void *)(*(void *)(v1 + 56) + 8 * v2);
    swift_retain();
  }
  else
  {
    uint64_t v4 = 0;
  }
  swift_endAccess();
  return v4;
}

uint64_t sub_1B6005D4C(uint64_t result)
{
  if (result)
  {
    if (*(unsigned char *)(result + 72) == 1)
    {
      OUTLINED_FUNCTION_38();
      OUTLINED_FUNCTION_8_0();
      swift_retain();
      OUTLINED_FUNCTION_35_0();
      sub_1B5E43C8C();
      swift_endAccess();
      return swift_release();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

id sub_1B6005DF0(void *a1, double a2, double a3, double a4, double a5)
{
  id v9 = a1;
  uint64_t v10 = sub_1B6005A00(a2, a3, a4, a5);

  if (v10)
  {
    sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C40);
    uint64_t v11 = (void *)sub_1B61B24D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
  }
  return v11;
}

void *sub_1B6005EA0()
{
  sub_1B6004A3C(v6);
  uint64_t v0 = v7;
  if (*(void *)(v7 + 16) && (unint64_t v1 = sub_1B5E46EC0(), (v2 & 1) != 0))
  {
    char v3 = *(void **)(*(void *)(v0 + 56) + 8 * v1);
    id v4 = v3;
  }
  else
  {
    char v3 = 0;
  }
  sub_1B5EED720((uint64_t)v6);
  return v3;
}

id sub_1B6005F10(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6007F2C(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1B6005EA0);
}

void sub_1B6005F28()
{
  OUTLINED_FUNCTION_15_26();
  OUTLINED_FUNCTION_44_13();
  sub_1B6004A3C(v16);
  uint64_t v2 = v17;
  if (!*(void *)(v17 + 16)) {
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_16_23();
  unint64_t v3 = sub_1B5E46C8C();
  if ((v4 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    sub_1B5EED720((uint64_t)v16);
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(*(void *)(v2 + 56) + 8 * v3);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1B5E13AA0(v0, v5);
  swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_7;
  }
  BOOL v7 = BlueprintLayoutCollectionLayoutAttributes.requiresPinning.getter();
  if (!v7) {
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_14_27(v7, v8, v9, v10, v11, v12, v13, v14, v15);
  sub_1B5EED904(v1);
  OUTLINED_FUNCTION_7_45();

  sub_1B5EED9F8(v1);
  sub_1B5EED720((uint64_t)v16);
LABEL_8:
  OUTLINED_FUNCTION_22_22();
}

id sub_1B600601C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6006140(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6005F28);
}

void sub_1B6006034()
{
  OUTLINED_FUNCTION_15_26();
  OUTLINED_FUNCTION_44_13();
  sub_1B6004A3C(v16);
  uint64_t v2 = v17;
  if (!*(void *)(v17 + 16)) {
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_16_23();
  unint64_t v3 = sub_1B5E46C8C();
  if ((v4 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    sub_1B5EED720((uint64_t)v16);
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(*(void *)(v2 + 56) + 8 * v3);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1B5E13AA0(v0, v5);
  swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_7;
  }
  BOOL v7 = BlueprintLayoutCollectionLayoutAttributes.requiresPinning.getter();
  if (!v7) {
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_14_27(v7, v8, v9, v10, v11, v12, v13, v14, v15);
  sub_1B5EED904(v1);
  OUTLINED_FUNCTION_7_45();

  sub_1B5EED9F8(v1);
  sub_1B5EED720((uint64_t)v16);
LABEL_8:
  OUTLINED_FUNCTION_22_22();
}

id sub_1B6006128(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6006140(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B6006034);
}

id sub_1B6006140(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_5_8();
  uint64_t v12 = sub_1B61B20F0();
  uint64_t v14 = v13;
  sub_1B61AFC40();
  id v15 = a1;
  double v16 = (void *)a5(v12, v14, v5);

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v5, v8);
  return v16;
}

void sub_1B600623C()
{
  OUTLINED_FUNCTION_83();
  uint64_t v2 = v0;
  unint64_t v3 = (void *)MEMORY[0x1F4188790](v1);
  uint64_t v4 = *MEMORY[0x1E4FBC8C8] & *v0;
  sub_1B600B5E4(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBB718]);
  uint64_t v6 = OUTLINED_FUNCTION_14(v5);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v58 = (uint64_t)&v53 - v10;
  OUTLINED_FUNCTION_26();
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v53 - v13;
  MEMORY[0x1F4188790](v12);
  double v16 = (char *)&v53 - v15;
  uint64_t v17 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_12();
  uint64_t v55 = v21;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_109();
  uint64_t v59 = v23;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_109();
  uint64_t v61 = v25;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v26);
  id v28 = (char *)&v53 - v27;
  uint64_t v29 = *(void *)(v4 + 80);
  uint64_t v56 = *(void *)(v4 + 88);
  uint64_t v57 = v29;
  uint64_t v30 = (objc_class *)type metadata accessor for BlueprintCollectionViewLayout();
  v66.receiver = v2;
  v66.super_class = v30;
  objc_msgSendSuper2(&v66, sel_invalidateLayoutWithContext_, v3);
  sub_1B600454C((uint64_t)v16);
  OUTLINED_FUNCTION_53_0((uint64_t)v16);
  if (v31)
  {
    id v32 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27DE8];
    uint64_t v33 = (uint64_t)v16;
LABEL_10:
    sub_1B600AF94(v33, (unint64_t *)&qword_1EB642510, v32);
    goto LABEL_11;
  }
  uint64_t v54 = v19;
  objc_super v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32);
  CGRect v60 = v28;
  CGFloat v53 = v34;
  v34((uint64_t)v28, (uint64_t)v16, v17);
  id v35 = objc_msgSend(v3, sel_targetIndexPathsForInteractivelyMovingItems);
  if (!v35)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, v17);
    goto LABEL_9;
  }
  id v36 = v35;
  sub_1B61B24E0();

  sub_1B5E6A3C0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_53_0((uint64_t)v14);
  if (v31)
  {
LABEL_9:
    OUTLINED_FUNCTION_5_1();
    v40();
    id v32 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27DE8];
    uint64_t v33 = (uint64_t)v14;
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_43_12();
  v37();
  sub_1B600AB54((unint64_t *)&qword_1EB6424F0, MEMORY[0x1E4F27DE8]);
  uint64_t v38 = v60;
  if (sub_1B61B20B0())
  {
    uint64_t v39 = *(void (**)(void))(v54 + 8);
    OUTLINED_FUNCTION_28_18();
    v39();
    OUTLINED_FUNCTION_28_18();
    v39();
LABEL_11:
    sub_1B6009B8C(v65);
    sub_1B6009B94((uint64_t)v65, (uint64_t)v64);
    sub_1B60049B8((uint64_t)v64);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v17);
    sub_1B60048D4((uint64_t)v9);
    goto LABEL_12;
  }
  uint64_t v41 = v58;
  sub_1B6004874(v58);
  uint64_t v42 = v54;
  uint64_t v43 = v55;
  uint64_t v44 = v38;
  uint64_t v45 = *(void (**)(uint64_t, char *, uint64_t))(v54 + 16);
  v45(v55, v44, v17);
  OUTLINED_FUNCTION_53_0(v41);
  if (v31)
  {
    uint64_t v47 = v59;
    OUTLINED_FUNCTION_43_12();
    v46();
    sub_1B600AF94(v41, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v43, v17);
    uint64_t v47 = v59;
    v53(v59, v41, v17);
  }
  v45((uint64_t)v9, (char *)v47, v17);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v17);
  sub_1B60048D4((uint64_t)v9);
  (*(void (**)(void *__return_ptr, uint64_t))(v56 + 32))(v63, v57);
  memcpy(v65, v63, sizeof(v65));
  sub_1B6130330(v47, v61, v64);
  sub_1B5EED720((uint64_t)v63);
  memcpy(v65, v64, sizeof(v65));
  nullsub_1(v65, v48, v49, v50, v51);
  sub_1B6009B94((uint64_t)v65, (uint64_t)v62);
  sub_1B60049B8((uint64_t)v62);
  CGFloat v52 = *(void (**)(void))(v42 + 8);
  OUTLINED_FUNCTION_29_18();
  v52();
  OUTLINED_FUNCTION_29_18();
  v52();
  OUTLINED_FUNCTION_29_18();
  v52();
LABEL_12:
  OUTLINED_FUNCTION_73();
}

void sub_1B60067F0(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1B600623C();
}

id sub_1B6006858(double a1, double a2, double a3, double a4)
{
  unint64_t v161 = *(void *)&a4;
  unint64_t v162 = *(void *)&a3;
  double v164 = a2;
  double v165 = a1;
  sub_1B600B5E4(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBB718]);
  uint64_t v7 = OUTLINED_FUNCTION_14(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_12();
  unint64_t v146 = v8;
  OUTLINED_FUNCTION_26();
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void (*)(void))((char *)&v135 - v11);
  MEMORY[0x1F4188790](v10);
  uint64_t v138 = (char *)&v135 - v13;
  uint64_t v14 = (void *)sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v163 = v15;
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_12();
  unint64_t v145 = v17;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v18);
  uint64_t v140 = (char *)&v135 - v19;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_109();
  uint64_t v137 = v21;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_109();
  uint64_t v156 = v23;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_109();
  uint64_t v147 = v25;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v26);
  uint64_t v159 = (char *)&v135 - v27;
  uint64_t v28 = type metadata accessor for BlueprintCollectionViewLayout();
  uint64_t v168 = v4;
  uint64_t v169 = v28;
  double v29 = OUTLINED_FUNCTION_35_0();
  id v149 = objc_msgSendSuper2(v30, v31, v29);
  sub_1B6009098((uint64_t)&v170);
  sub_1B6004A3C(v171);
  id v143 = v4;
  sub_1B6007834(v4);
  memcpy(v167, v172, sizeof(v167));
  sub_1B5EED904((uint64_t)v172);
  OUTLINED_FUNCTION_30_13();
  BlueprintLayoutCollectionPinAdjuster.shouldInvalidateLayoutAttributes(for:offset:insets:contentSize:hasViewOnScreen:)();
  unint64_t v33 = v32;
  sub_1B5EED9F8((uint64_t)v172);
  sub_1B5EED720((uint64_t)v171);
  swift_release();
  if (v33 >> 62) {
    goto LABEL_110;
  }
  uint64_t v34 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v34)
  {
LABEL_111:
    swift_bridgeObjectRelease();
    return v149;
  }
LABEL_3:
  unint64_t v162 = v33 & 0xC000000000000001;
  *(void *)&double v165 = v163 + 32;
  uint64_t v135 = (void (**)(unint64_t, uint64_t, uint64_t))(v163 + 40);
  uint64_t v136 = v12;
  uint64_t v148 = v163 + 8;
  uint64_t v35 = 4;
  CGAffineTransform v155 = "eneConnect";
  unint64_t v152 = MEMORY[0x1E4FBC868];
  unint64_t v153 = 0x80000001B61DCFC0;
  uint64_t v144 = "entKindSectionHeader";
  unint64_t v141 = 0x80000001B61DCFF0;
  double v164 = MEMORY[0x1E4FBC860];
  uint64_t v150 = MEMORY[0x1E4FBC860];
  *(void *)&long long v157 = MEMORY[0x1E4FBC860];
  uint64_t v158 = v14;
  uint64_t v160 = v34;
  unint64_t v161 = v33;
  do
  {
    if (v162) {
      id v36 = (char *)MEMORY[0x1BA9B04B0](v35 - 4, v33);
    }
    else {
      id v36 = (char *)*(id *)(v33 + 8 * v35);
    }
    char v37 = v36;
    uint64_t v38 = v35 - 3;
    if (__OFADD__(v35 - 4, 1))
    {
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      sub_1B61B1F70();
      uint64_t v34 = sub_1B61B3530();
      swift_bridgeObjectRelease();
      if (!v34) {
        goto LABEL_111;
      }
      goto LABEL_3;
    }
    id v39 = objc_msgSend(v36, sel_representedElementKind);
    if (v39)
    {
      uint64_t v40 = v39;
      uint64_t v41 = sub_1B61B20F0();
      uint64_t v43 = v42;

      if (v41 == 0xD000000000000024 && v43 == v153)
      {
        swift_bridgeObjectRelease();
        double v44 = v164;
LABEL_14:
        id v46 = objc_msgSend(v37, sel_indexPath, v135);
        sub_1B61AFC40();

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_35_15();
          double v44 = v100;
        }
        unint64_t v47 = *(void *)(*(void *)&v44 + 16);
        if (v47 >= *(void *)(*(void *)&v44 + 24) >> 1)
        {
          OUTLINED_FUNCTION_34_14();
          double v44 = v101;
        }
        *(void *)(*(void *)&v44 + 16) = v47 + 1;
        OUTLINED_FUNCTION_23_24();
        double v164 = v44;
        OUTLINED_FUNCTION_33_14(*(void *)&v44 + v48);
LABEL_19:
        OUTLINED_FUNCTION_8_40();
        v12();

        goto LABEL_63;
      }
      char v45 = OUTLINED_FUNCTION_24_20();
      double v44 = v164;
      if (v45)
      {
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
      if (v41 == 0xD000000000000024 && v43 == v141)
      {
        swift_bridgeObjectRelease();
LABEL_24:
        id v50 = objc_msgSend(v37, sel_indexPath, v135);
        sub_1B61AFC40();

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B5E1B208();
          uint64_t v150 = v104;
        }
        unint64_t v51 = *(void *)(v150 + 16);
        if (v51 >= *(void *)(v150 + 24) >> 1)
        {
          sub_1B5E1B208();
          uint64_t v150 = v105;
        }
        *(void *)(v150 + 16) = v51 + 1;
        OUTLINED_FUNCTION_23_24();
        OUTLINED_FUNCTION_33_14(v53 + v52);
        goto LABEL_19;
      }
      char v49 = OUTLINED_FUNCTION_24_20();
      swift_bridgeObjectRelease();
      if (v49) {
        goto LABEL_24;
      }
    }
    id v54 = objc_msgSend(v37, sel_indexPath, v135);
    sub_1B61AFC40();

    double v44 = *(double *)&v157;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_35_15();
      double v44 = v102;
    }
    unint64_t v55 = *(void *)(*(void *)&v44 + 16);
    if (v55 >= *(void *)(*(void *)&v44 + 24) >> 1)
    {
      OUTLINED_FUNCTION_34_14();
      double v44 = v103;
    }
    *(void *)(*(void *)&v44 + 16) = v55 + 1;
    OUTLINED_FUNCTION_23_24();
    *(double *)&long long v157 = v44;
    OUTLINED_FUNCTION_33_14(*(void *)&v44 + v56);
    OUTLINED_FUNCTION_8_40();
    v12();
    uint64_t v57 = &v37[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_pinTrait];
    OUTLINED_FUNCTION_5_30();
    BOOL v58 = v57[8] == 3 && *(void *)v57 == 1;
    if (v58 || objc_msgSend(v37, sel_representedElementCategory) != (id)2)
    {
      double v72 = &v37[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_isPlugin];
      OUTLINED_FUNCTION_5_30();
      if (*v72 == 1)
      {
        id v73 = objc_msgSend(v143, sel_collectionView);
        if (v73)
        {
          double v74 = v73;
          long long v151 = v12;
          double v75 = v44;
          id v76 = objc_msgSend(v37, sel_indexPath);
          sub_1B61AFC40();

          id v77 = (void *)sub_1B61AFC00();
          OUTLINED_FUNCTION_5_1();
          v78();
          id v79 = objc_msgSend(v74, sel_cellForItemAtIndexPath_, v77);

          if (v79)
          {
            double v80 = (void *)sub_1B600CE2C(v79);
            if (v80)
            {
              CGRect v81 = v80;
              id v82 = objc_msgSend(v80, sel_collectionViewLayout);
              objc_msgSend(v82, sel_invalidateLayout);
            }
          }
          else
          {
          }
          uint64_t v14 = v158;
          double v44 = v75;
          uint64_t v12 = v151;
        }
        else
        {

          uint64_t v14 = v158;
        }
      }
      else
      {
LABEL_48:
      }
LABEL_63:
      uint64_t v94 = v160;
      unint64_t v33 = v161;
      goto LABEL_64;
    }
    id v59 = objc_msgSend(v37, sel_representedElementKind);
    if (!v59) {
      goto LABEL_48;
    }
    CGRect v60 = v59;
    double v154 = v44;
    uint64_t v142 = sub_1B61B20F0();
    uint64_t v62 = v61;

    id v63 = objc_msgSend(v37, sel_indexPath);
    uint64_t v64 = (uint64_t)v138;
    sub_1B61AFC40();

    __swift_storeEnumTagSinglePayload(v64, 0, 1, (uint64_t)v14);
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v64, 1, (uint64_t)v14);
    uint64_t v139 = v62;
    if (EnumTagSinglePayload != 1)
    {
      long long v151 = v12;
      ((void (*)(uint64_t, uint64_t, void *))v12)(v137, v64, v14);
      unint64_t v83 = v152;
      swift_isUniquelyReferenced_nonNull_native();
      unint64_t v166 = v83;
      unint64_t v84 = sub_1B5E46C8C();
      if (__OFADD__(*(void *)(v83 + 16), (v85 & 1) == 0))
      {
        __break(1u);
LABEL_113:
        __break(1u);
        goto LABEL_114;
      }
      unint64_t v86 = v84;
      char v87 = v85;
      sub_1B600A6C4();
      char v88 = sub_1B61B3480();
      double v44 = v154;
      uint64_t v12 = v151;
      uint64_t v89 = v142;
      if (v88)
      {
        unint64_t v90 = sub_1B5E46C8C();
        if ((v87 & 1) != (v91 & 1)) {
          goto LABEL_115;
        }
        unint64_t v86 = v90;
        uint64_t v89 = v142;
      }
      unint64_t v92 = v166;
      if (v87)
      {
        unint64_t v93 = *(void *)(v166 + 56) + v86 * *(void *)&v44;
        uint64_t v14 = v158;
        (*v135)(v93, v137, (uint64_t)v158);
      }
      else
      {
        *(void *)(v166 + 8 * (v86 >> 6) + 64) |= 1 << v86;
        int v95 = (uint64_t *)(*(void *)(v92 + 48) + 16 * v86);
        uint64_t v96 = v139;
        *int v95 = v89;
        v95[1] = v96;
        uint64_t v14 = v158;
        OUTLINED_FUNCTION_8_40();
        v12();
        uint64_t v97 = *(void *)(v92 + 16);
        BOOL v98 = __OFADD__(v97, 1);
        uint64_t v99 = v97 + 1;
        if (v98) {
          goto LABEL_113;
        }
        *(void *)(v92 + 16) = v99;
        sub_1B61B1F70();
      }
      unint64_t v152 = v166;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_63;
    }
    sub_1B600AF94(v64, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
    unint64_t v66 = v152;
    sub_1B61B1F70();
    sub_1B5E46C8C();
    char v68 = v67;
    swift_bridgeObjectRelease();
    if (v68)
    {
      LODWORD(v15MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v166 = v66;
      sub_1B600A6C4();
      sub_1B61B3480();
      unint64_t v69 = v166;
      swift_bridgeObjectRelease();
      uint64_t v70 = (uint64_t)v136;
      OUTLINED_FUNCTION_8_40();
      v12();
      unint64_t v152 = v69;
      sub_1B61B34A0();
      swift_bridgeObjectRelease();
      uint64_t v71 = 0;
    }
    else
    {
      uint64_t v71 = 1;
      uint64_t v70 = (uint64_t)v136;
    }
    uint64_t v94 = v160;
    unint64_t v33 = v161;
    __swift_storeEnumTagSinglePayload(v70, v71, 1, (uint64_t)v14);
    swift_bridgeObjectRelease();
    sub_1B600AF94(v70, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);

    double v44 = v154;
LABEL_64:
    ++v35;
  }
  while (v38 != v94);
  double v154 = v44;
  swift_bridgeObjectRelease();
  if (*(void *)(v157 + 16))
  {
    uint64_t v106 = (void *)sub_1B61B24D0();
    swift_bridgeObjectRelease();
    objc_msgSend(v149, sel_invalidateItemsAtIndexPaths_, v106);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  unint64_t v107 = v152;
  uint64_t v108 = v150;
  if (*(void *)(*(void *)&v164 + 16))
  {
    uint64_t v109 = (void *)sub_1B61B20C0();
    id v110 = (void *)sub_1B61B24D0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_42_16();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v108 + 16))
  {
    uint64_t v111 = (void *)sub_1B61B20C0();
    uint64_t v112 = (void *)sub_1B61B24D0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_42_16();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (!*(void *)(v107 + 16)) {
    goto LABEL_111;
  }
  long long v151 = v12;
  uint64_t v113 = *(void *)(v107 + 64);
  *(void *)&double v164 = v107 + 64;
  uint64_t v114 = 1 << *(unsigned char *)(v107 + 32);
  uint64_t v115 = -1;
  if (v114 < 64) {
    uint64_t v115 = ~(-1 << v114);
  }
  unint64_t v116 = v115 & v113;
  uint64_t v117 = (void (*)(unint64_t, unint64_t, void *))((unint64_t)(v114 + 63) >> 6);
  uint64_t v12 = (void (*)(void))(v163 + 16);
  unint64_t v161 = (v5 + 32) & ~(unint64_t)v5;
  uint64_t v159 = (char *)(v5 | 7);
  uint64_t v160 = v161 + *(void *)&v154;
  sub_1B61B1F70();
  uint64_t v118 = 0;
  long long v157 = xmmword_1B61BE690;
  unint64_t v33 = v146;
  unint64_t v162 = (unint64_t)v117;
  while (2)
  {
    if (v116)
    {
      unint64_t v119 = __clz(__rbit64(v116));
      v116 &= v116 - 1;
      unint64_t v120 = v119 | (v118 << 6);
      goto LABEL_98;
    }
    uint64_t v121 = v118 + 1;
    if (__OFADD__(v118, 1)) {
      goto LABEL_109;
    }
    if (v121 >= (uint64_t)v117)
    {
LABEL_106:
      swift_release();
      goto LABEL_111;
    }
    unint64_t v122 = *(void *)(*(void *)&v164 + 8 * v121);
    ++v118;
    if (v122) {
      goto LABEL_97;
    }
    uint64_t v118 = v121 + 1;
    if (v121 + 1 >= (uint64_t)v117) {
      goto LABEL_106;
    }
    OUTLINED_FUNCTION_27_17();
    if (v122) {
      goto LABEL_97;
    }
    uint64_t v118 = v123 + 2;
    if (v123 + 2 >= (uint64_t)v117) {
      goto LABEL_106;
    }
    OUTLINED_FUNCTION_27_17();
    if (v122) {
      goto LABEL_97;
    }
    uint64_t v118 = v124 + 3;
    if (v124 + 3 >= (uint64_t)v117) {
      goto LABEL_106;
    }
    OUTLINED_FUNCTION_27_17();
    if (v122) {
      goto LABEL_97;
    }
    uint64_t v118 = v125 + 4;
    if (v125 + 4 >= (uint64_t)v117) {
      goto LABEL_106;
    }
    OUTLINED_FUNCTION_27_17();
    if (v122)
    {
LABEL_97:
      unint64_t v116 = (v122 - 1) & v122;
      unint64_t v120 = __clz(__rbit64(v122)) + (v118 << 6);
LABEL_98:
      if (*(void *)(v107 + 16))
      {
        uint64_t v129 = *(void *)(v107 + 48) + 16 * v120;
        uint64_t v14 = *(void **)v129;
        uint64_t v5 = *(void *)(v129 + 8);
        sub_1B61B1F70();
        unint64_t v130 = sub_1B5E46C8C();
        if (v131)
        {
          uint64_t v117 = *(void (**)(unint64_t, unint64_t, void *))v12;
          uint64_t v12 = (void (*)(void))v158;
          v117(v33, *(void *)(v107 + 56) + *(void *)&v154 * v130, v158);
          __swift_storeEnumTagSinglePayload(v33, 0, 1, (uint64_t)v12);
          if (__swift_getEnumTagSinglePayload(v33, 1, (uint64_t)v12) != 1)
          {
            unint64_t v107 = v145;
            ((void (*)(unint64_t, unint64_t, void (*)(void)))v151)(v145, v33, v12);
            uint64_t v163 = sub_1B61B20C0();
            swift_bridgeObjectRelease();
            sub_1B600B5E4(0, (unint64_t *)&qword_1EB647D20, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBBE00]);
            uint64_t v132 = swift_allocObject();
            *(_OWORD *)(v132 + 16) = v157;
            v117(v132 + v161, v107, v12);
            uint64_t v14 = (void *)sub_1B61B24D0();
            unint64_t v33 = v146;
            swift_bridgeObjectRelease();
            uint64_t v117 = (void (*)(unint64_t, unint64_t, void *))v163;
            objc_msgSend(v149, sel_invalidateDecorationElementsOfKind_atIndexPaths_, v163, v14);

            OUTLINED_FUNCTION_5_1();
            v133();
            OUTLINED_FUNCTION_51_9();
            continue;
          }
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_51_9();
        }
        else
        {
          uint64_t v14 = v158;
          __swift_storeEnumTagSinglePayload(v33, 1, 1, (uint64_t)v158);
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        __swift_storeEnumTagSinglePayload(v33, 1, 1, (uint64_t)v14);
      }
      sub_1B600AF94(v33, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
      continue;
    }
    break;
  }
  uint64_t v127 = v126 + 5;
  if (v127 >= (uint64_t)v117) {
    goto LABEL_106;
  }
  unint64_t v122 = *(void *)(*(void *)&v164 + 8 * v127);
  if (v122)
  {
    uint64_t v118 = v127;
    goto LABEL_97;
  }
  while (1)
  {
    uint64_t v118 = v127 + 1;
    if (__OFADD__(v127, 1)) {
      break;
    }
    if (v118 >= (uint64_t)v117) {
      goto LABEL_106;
    }
    OUTLINED_FUNCTION_27_17();
    uint64_t v127 = v128 + 1;
    if (v122) {
      goto LABEL_97;
    }
  }
LABEL_114:
  __break(1u);
LABEL_115:
  id result = (id)sub_1B61B3840();
  __break(1u);
  return result;
}

uint64_t (*sub_1B6007834(void *a1))()
{
  *(void *)(swift_allocObject() + 16) = a1;
  id v2 = a1;
  return sub_1B600B648;
}

id sub_1B6007898(void *a1, double a2, double a3, double a4, double a5)
{
  id v9 = a1;
  id v10 = sub_1B6006858(a2, a3, a4, a5);

  return v10;
}

void sub_1B600790C()
{
  OUTLINED_FUNCTION_15_26();
  sub_1B6009098((uint64_t)&v4);
  sub_1B6004A3C(&v5);
  sub_1B6007A30(v0);
  memcpy(__dst, v6, sizeof(__dst));
  sub_1B5EED904((uint64_t)v6);
  OUTLINED_FUNCTION_30_13();
  BlueprintLayoutCollectionPinAdjuster.shouldInvalidateLayoutAttributes(for:offset:insets:contentSize:hasViewOnScreen:)();
  unint64_t v2 = v1;
  sub_1B5EED9F8((uint64_t)v6);
  if (v2 >> 62)
  {
    sub_1B61B1F70();
    sub_1B61B3530();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1B5EED720((uint64_t)&v5);
  swift_release();
  OUTLINED_FUNCTION_22_22();
}

uint64_t (*sub_1B6007A30(void *a1))(void *a1)
{
  *(void *)(swift_allocObject() + 16) = a1;
  id v2 = a1;
  return sub_1B600AF14;
}

uint64_t sub_1B6007A94(void *a1)
{
  id v1 = a1;
  sub_1B600790C();
  char v3 = v2;

  return v3 & 1;
}

id sub_1B6007AF8(void *a1)
{
  char v2 = v1;
  OUTLINED_FUNCTION_77();
  if (((*(uint64_t (**)(void, void))(*(void *)(v4 + 88) + 8))(*(void *)(v4 + 80), *(void *)(v4 + 88)) & 1) == 0)
  {
    id v8 = a1;
    sub_1B61AFC00();
    v16.receiver = v2;
    v16.super_class = (Class)OUTLINED_FUNCTION_41_19();
    id v10 = objc_msgSendSuper2(&v16, sel_initialLayoutAttributesForAppearingItemAtIndexPath_, a1);
LABEL_11:
    id v9 = v10;
    goto LABEL_12;
  }
  sub_1B6004A3C(v14);
  uint64_t v5 = v15;
  if (!*(void *)(v15 + 16) || (unint64_t v6 = sub_1B5E46EC0(), (v7 & 1) == 0))
  {
    sub_1B5EED720((uint64_t)v14);
LABEL_10:
    id v8 = a1;
    sub_1B61AFC00();
    v13.receiver = v2;
    v13.super_class = (Class)OUTLINED_FUNCTION_41_19();
    id v10 = objc_msgSendSuper2(&v13, sel_initialLayoutAttributesForAppearingItemAtIndexPath_, a1);
    goto LABEL_11;
  }
  id v8 = *(id *)(*(void *)(v5 + 56) + 8 * v6);
  sub_1B5EED720((uint64_t)v14);
  if ((*((unsigned char *)v8 + OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_previousFrame + 32) & 1) != 0
    || (objc_msgSend(v8, sel_copy),
        sub_1B61B3030(),
        swift_unknownObjectRelease(),
        type metadata accessor for BlueprintLayoutCollectionLayoutAttributes(),
        (swift_dynamicCast() & 1) == 0))
  {

    goto LABEL_10;
  }
  id v9 = v12;
  OUTLINED_FUNCTION_46_2(v9, sel_setFrame_);

LABEL_12:
  return v9;
}

id sub_1B6007CFC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6007F2C(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1B6007AF8);
}

void sub_1B6007D14()
{
  OUTLINED_FUNCTION_83();
  char v2 = v0;
  uint64_t v4 = v3;
  uint64_t v5 = *MEMORY[0x1E4FBC8C8] & *v0;
  uint64_t v6 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_4_7();
  if ((*(uint64_t (**)(void, void))(*(void *)(v5 + 88) + 8))(*(void *)(v5 + 80), *(void *)(v5 + 88)))
  {
    sub_1B6004A3C(v20);
    uint64_t v10 = v21;
    if (*(void *)(v21 + 16) && (unint64_t v11 = sub_1B5E46EC0(), (v12 & 1) != 0))
    {
      objc_super v13 = *(void **)(*(void *)(v10 + 56) + 8 * v11);
      id v14 = v13;
    }
    else
    {
      objc_super v13 = 0;
    }
    sub_1B5EED720((uint64_t)v20);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v1, v4, v6);
    if (!v13)
    {
      unint64_t v17 = (void *)sub_1B61AFC00();
      uint64_t v18 = (objc_class *)type metadata accessor for BlueprintCollectionViewLayout();
      v19.receiver = v2;
      v19.super_class = v18;
      objc_msgSendSuper2(&v19, sel_finalLayoutAttributesForDisappearingItemAtIndexPath_, v17);
    }
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v6);
  }
  else
  {
    uint64_t v15 = (void *)sub_1B61AFC00();
    objc_super v16 = (objc_class *)type metadata accessor for BlueprintCollectionViewLayout();
    v22.receiver = v0;
    v22.super_class = v16;
    objc_msgSendSuper2(&v22, sel_finalLayoutAttributesForDisappearingItemAtIndexPath_, v15);
  }
  OUTLINED_FUNCTION_73();
}

id sub_1B6007F14(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B6007F2C(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1B6007D14);
}

id sub_1B6007F2C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_4_7();
  sub_1B61AFC40();
  id v8 = a1;
  uint64_t v9 = (void *)a4(v4);

  OUTLINED_FUNCTION_28_18();
  v10();
  return v9;
}

id sub_1B6007FF4()
{
  return sub_1B600801C();
}

id sub_1B600801C()
{
  OUTLINED_FUNCTION_83();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_80();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_1B61B20F0();
  uint64_t v17 = v16;
  sub_1B61AFC40();
  id v18 = v7;
  v1(v15, v17, v14, v5, v3);

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v14, v8);
  OUTLINED_FUNCTION_73();
  return v19;
}

id sub_1B6008128()
{
  return sub_1B600801C();
}

id sub_1B6008150(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4, SEL *a5)
{
  OUTLINED_FUNCTION_77();
  char v7 = (*(uint64_t (**)(void, void))(*(void *)(v6 + 88) + 8))(*(void *)(v6 + 80), *(void *)(v6 + 88));
  id v8 = (id)sub_1B61B20C0();
  uint64_t v9 = (void *)sub_1B61AFC00();
  if ((v7 & 1) == 0)
  {
    v18.receiver = v5;
    v18.super_class = (Class)type metadata accessor for BlueprintCollectionViewLayout();
    id v12 = objc_msgSendSuper2(&v18, *a5, v8, v9);
    id v10 = v9;
    goto LABEL_10;
  }
  id v10 = objc_msgSend(v5, *a4, v8, v9);

  if (!v10)
  {
LABEL_9:
    id v8 = (id)sub_1B61B20C0();
    id v10 = (id)sub_1B61AFC00();
    v17.receiver = v5;
    v17.super_class = (Class)type metadata accessor for BlueprintCollectionViewLayout();
    id v12 = objc_msgSendSuper2(&v17, *a5, v8, v10);
    goto LABEL_10;
  }
  type metadata accessor for BlueprintLayoutCollectionLayoutAttributes();
  uint64_t v11 = (unsigned char *)swift_dynamicCastClass();
  if (!v11
    || (v11[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_previousFrame + 32] & 1) != 0
    || (objc_msgSend(v11, sel_copy), sub_1B61B3030(), swift_unknownObjectRelease(), (swift_dynamicCast() & 1) == 0))
  {

    goto LABEL_9;
  }
  id v8 = v16;
  OUTLINED_FUNCTION_46_2(v8, sel_setFrame_);
  id v12 = v8;
LABEL_10:

  return v12;
}

id sub_1B60083BC()
{
  return sub_1B600801C();
}

void sub_1B60083E4()
{
  OUTLINED_FUNCTION_83();
  uint64_t v21 = v1;
  objc_super v18 = v2;
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v6 = *MEMORY[0x1E4FBC8C8] & *v0;
  uint64_t v7 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v19 = v8;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_80();
  uint64_t v20 = v11 - v10;
  char v12 = (*(uint64_t (**)(void, void))(*(void *)(v6 + 88) + 8))(*(void *)(v6 + 80), *(void *)(v6 + 88));
  uint64_t v13 = (void *)sub_1B61B20C0();
  uint64_t v14 = (void *)sub_1B61AFC00();
  if (v12)
  {
    id v15 = objc_msgSend(v3, *v18, v13, v14);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v20, v5, v7);
    if (!v15)
    {
      uint64_t v16 = (void *)sub_1B61B20C0();
      objc_super v17 = (void *)sub_1B61AFC00();
      v22.receiver = v3;
      v22.super_class = (Class)type metadata accessor for BlueprintCollectionViewLayout();
      objc_msgSendSuper2(&v22, *v21, v16, v17);
    }
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v7);
  }
  else
  {
    v23.receiver = v3;
    v23.super_class = (Class)type metadata accessor for BlueprintCollectionViewLayout();
    objc_msgSendSuper2(&v23, *v21, v13, v14);
  }
  OUTLINED_FUNCTION_73();
}

id sub_1B6008624()
{
  return sub_1B600801C();
}

uint64_t (*sub_1B600864C(uint64_t (*result)(uint64_t a1, uint64_t a2), void *a2, uint64_t a3))(uint64_t a1, uint64_t a2)
{
  if (a3 != 1) {
    return 0;
  }
  uint64_t v3 = result;
  if (!result)
  {
    __break(1u);
    goto LABEL_20;
  }
  id result = (uint64_t (*)(uint64_t, uint64_t))objc_msgSend(result, sel_frame);
  if (v6 <= 0.0 || v5 <= 0.0)
  {
    if (a2)
    {
      objc_msgSend(a2, sel_frame);
      if (v13 > 0.0 && v12 > 0.0)
      {
        uint64_t v14 = swift_allocObject();
        *(void *)(v14 + 16) = v3;
        *(void *)(v14 + 24) = a2;
        id v15 = v3;
        uint64_t v8 = sub_1B600A734;
        uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))a2;
        goto LABEL_17;
      }
      goto LABEL_5;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_5:
  id result = (uint64_t (*)(uint64_t, uint64_t))objc_msgSend(v3, sel_frame);
  uint64_t v8 = 0;
  if (v9 <= 0.0 || v7 <= 0.0) {
    return v8;
  }
  if (a2)
  {
    objc_msgSend(a2, sel_frame);
    if (v11 > 0.0 && v10 > 0.0) {
      return 0;
    }
    *(void *)(swift_allocObject() + 16) = v3;
    uint64_t v8 = sub_1B600A72C;
LABEL_17:
    uint64_t v16 = v3;
    return v8;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1B60087A8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  double v7 = self;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1B600AE0C;
  *(void *)(v9 + 24) = v8;
  uint64_t v24 = sub_1B5E4EC58;
  uint64_t v25 = v9;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v21 = 1107296256;
  objc_super v22 = sub_1B5E7365C;
  objc_super v23 = &block_descriptor_35;
  double v10 = _Block_copy(&aBlock);
  id v11 = a4;
  swift_retain();
  id v12 = a3;
  swift_release();
  objc_msgSend(v7, sel_performWithoutAnimation_, v10);
  _Block_release(v10);
  LOBYTE(v1sub_1B5E6F544(4, 0, 0) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v10)
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a3;
    uint64_t v24 = sub_1B600AE48;
    uint64_t v25 = v14;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v21 = 1107296256;
    objc_super v22 = sub_1B5E3729C;
    objc_super v23 = &block_descriptor_41_0;
    id v15 = _Block_copy(&aBlock);
    id v16 = v12;
    swift_release();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a1;
    *(void *)(v17 + 24) = a2;
    uint64_t v24 = sub_1B600AE90;
    uint64_t v25 = v17;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v21 = 1107296256;
    objc_super v22 = sub_1B5E73DCC;
    objc_super v23 = &block_descriptor_47_0;
    objc_super v18 = _Block_copy(&aBlock);
    sub_1B5E4DC4C(a1);
    swift_release();
    objc_msgSend(v7, sel_animateWithDuration_animations_completion_, v15, v18, 1.0);
    _Block_release(v18);
    _Block_release(v15);
    return swift_release();
  }
  return result;
}

id sub_1B6008A6C(id result, id a2)
{
  if (result)
  {
    if (a2)
    {
      uint64_t v3 = result;
      objc_msgSend(a2, sel_frame);
      objc_msgSend(v3, sel_setFrame_);
      objc_msgSend(a2, sel_center);
      objc_msgSend(v3, sel_setCenter_);
      objc_msgSend(v3, sel_setAlpha_, 0.0);
      CGAffineTransformMakeScale(&v4, 0.1, 0.1);
      return objc_msgSend(v3, sel_setTransform_, &v4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1B6008B34(id result)
{
  if (result)
  {
    uint64_t v1 = result;
    objc_msgSend(result, sel_setAlpha_, 1.0);
    v2[0] = 0x3FF0000000000000;
    v2[1] = 0;
    v2[2] = 0;
    void v2[3] = 0x3FF0000000000000;
    v2[4] = 0;
    v2[5] = 0;
    return objc_msgSend(v1, sel_setTransform_, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6008B98(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = self;
  double v7 = (void *)swift_allocObject();
  v7[2] = a3;
  v7[3] = a1;
  v7[4] = a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1B600AF04;
  *(void *)(v8 + 24) = v7;
  v12[4] = sub_1B5EC7DF0;
  v12[5] = v8;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  _OWORD v12[2] = sub_1B5E7365C;
  void v12[3] = &block_descriptor_57_2;
  uint64_t v9 = _Block_copy(v12);
  id v10 = a3;
  sub_1B5E4DC4C(a1);
  swift_retain();
  swift_release();
  objc_msgSend((id)v6, sel_performWithoutAnimation_, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v6) {
    __break(1u);
  }
  return result;
}

id sub_1B6008D1C(id result, uint64_t (*a2)(uint64_t))
{
  if (result)
  {
    uint64_t v3 = result;
    objc_msgSend(result, sel_frame);
    objc_msgSend(v3, sel_setFrame_);
    uint64_t result = objc_msgSend(v3, sel_setAlpha_, 0.0);
    if (a2) {
      return (id)a2(1);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1B6008D9C(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8 = a1;
  id v9 = a3;
  id v10 = a4;
  id v11 = sub_1B600864C((uint64_t (*)(uint64_t, uint64_t))a3, a4, a5);
  uint64_t v13 = v12;

  if (v11)
  {
    void v15[4] = v11;
    v15[5] = v13;
    v15[0] = MEMORY[0x1E4F143A8];
    v15[1] = 1107296256;
    long long v15[2] = sub_1B6008E8C;
    v15[3] = &block_descriptor_48;
    id v11 = _Block_copy(v15);
    swift_release();
  }
  return v11;
}

uint64_t sub_1B6008E8C(uint64_t a1, void *aBlock)
{
  uint64_t v2 = *(void (**)(void *, uint64_t))(a1 + 32);
  uint64_t v3 = _Block_copy(aBlock);
  if (v3)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v3;
    uint64_t v3 = sub_1B5EA9C10;
  }
  else
  {
    uint64_t v4 = 0;
  }
  swift_retain();
  v2(v3, v4);
  sub_1B5E3799C((uint64_t)v3);
  return swift_release();
}

uint64_t sub_1B6008F34()
{
  return swift_release();
}

double sub_1B6008F9C(void *a1)
{
  id v1 = a1;
  sub_1B6008F34();
  double v3 = v2;

  return v3;
}

double sub_1B6008FF0(uint64_t a1)
{
  sub_1B6004A3C(v7);
  uint64_t v2 = v8;
  if (*(void *)(v8 + 16))
  {
    unint64_t v3 = sub_1B5E46F88(a1);
    double v4 = 0.0;
    if (v5) {
      double v4 = *(double *)(*(void *)(v2 + 56) + 32 * v3);
    }
  }
  else
  {
    double v4 = 0.0;
  }
  sub_1B5EED720((uint64_t)v7);
  return v4;
}

void sub_1B6009098(uint64_t a1@<X8>)
{
  id v7 = objc_msgSend(v1, sel_collectionView);
  if (v7)
  {
    uint64_t v8 = v7;
    if (objc_msgSend(v7, sel_tu_deriveVisibleBoundsFromContainingScrollView)
      && (id v9 = objc_msgSend(v8, sel_superview),
          id v10 = (void *)sub_1B600D394(v9),
          v9,
          v10))
    {
      objc_msgSend(v8, sel_bounds);
      objc_msgSend(v10, sel_convertRect_fromCoordinateSpace_, v8);
      CGFloat v12 = v11;
      CGFloat v3 = v13;
      CGFloat v4 = v14;
      CGFloat v5 = v15;
      objc_msgSend(v10, sel_contentOffset);
      uint64_t v17 = v16;
      objc_msgSend(v10, sel_contentOffset);
      double v19 = v18;
      v31.origin.CGFloat x = v12;
      v31.origin.CGFloat y = v3;
      v31.size.CGFloat width = v4;
      v31.size.CGFloat height = v5;
      double MinY = CGRectGetMinY(v31);
      objc_msgSend(v10, sel_collectionViewLayout);
      sub_1B5DFF760(0, (unint64_t *)&qword_1EB649990);
      sub_1B600AF3C();
      if (swift_dynamicCast())
      {
        uint64_t v20 = *((void *)&v29 + 1);
        uint64_t v21 = v30;
        __swift_project_boxed_opaque_existential_1(&v28, *((uint64_t *)&v29 + 1));
        uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
        char v24 = v23 & 1;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
      }
      else
      {
        uint64_t v30 = 0;
        long long v28 = 0u;
        long long v29 = 0u;
        sub_1B600AF94((uint64_t)&v28, &qword_1E9DAB5D0, (uint64_t (*)(uint64_t))sub_1B600AF3C);
        uint64_t v22 = 0;
        char v24 = 1;
      }
      double v27 = v19 - MinY;
      sub_1B6009314(v8, v22, v24);
      OUTLINED_FUNCTION_0_47();
    }
    else
    {
      objc_msgSend(v8, sel_contentOffset);
      uint64_t v17 = v25;
      double v27 = v26;
      sub_1B6009314(v8, 0, 1);
      OUTLINED_FUNCTION_0_47();
    }
  }
  else
  {
    double MinY = *MEMORY[0x1E4FB2848];
    CGFloat v3 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    CGFloat v4 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    CGFloat v5 = *(double *)(MEMORY[0x1E4FB2848] + 24);
    uint64_t v17 = 0;
    double v27 = 0.0;
  }
  *(void *)a1 = v17;
  *(double *)(a1 + 8) = v27;
  *(double *)(a1 + 16) = MinY;
  *(CGFloat *)(a1 + 24) = v3;
  *(CGFloat *)(a1 + 32) = v4;
  *(CGFloat *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v5;
}

double sub_1B6009314(void *a1, uint64_t a2, char a3)
{
  id v5 = objc_msgSend(a1, sel_refreshControl);
  if (v5)
  {
    uint64_t v6 = v5;
    unsigned int v7 = objc_msgSend(v5, sel_isRefreshing);
  }
  else
  {
    unsigned int v7 = 0;
  }
  if ((a3 & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v8 = sub_1B6004750();
  if ((v9 & 1) == 0)
  {
    a2 = v8;
LABEL_7:
    double v10 = *(double *)&a2;
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_45_12();
  double v10 = v12;
  if (!v7) {
    return v10;
  }
  double v10 = v12 + -60.0;
LABEL_8:
  OUTLINED_FUNCTION_45_12();
  OUTLINED_FUNCTION_45_12();
  OUTLINED_FUNCTION_45_12();
  return v10;
}

uint64_t sub_1B60093F4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_80();
  uint64_t v10 = v9 - v8;
  uint64_t result = (uint64_t)objc_msgSend(v2, sel_collectionView);
  if (result)
  {
    double v12 = (void *)result;
    id v13 = objc_msgSend(a1, sel_representedElementKind);
    id v14 = objc_msgSend(a1, sel_indexPath);
    sub_1B61AFC40();

    double v15 = (void *)sub_1B61AFC00();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
    if (v13)
    {
      id v16 = objc_msgSend(v12, sel_supplementaryViewForElementKind_atIndexPath_, v13, v15);
    }
    else
    {
      id v16 = objc_msgSend(v12, sel_cellForItemAtIndexPath_, v15);
    }

    if (v16)
    {

      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

id BlueprintCollectionViewLayout.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void BlueprintCollectionViewLayout.init()()
{
}

void sub_1B60095C8()
{
}

id BlueprintCollectionViewLayout.__deallocating_deinit()
{
  OUTLINED_FUNCTION_77();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BlueprintCollectionViewLayout();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1B6009644(uint64_t a1)
{
  swift_release();
  OUTLINED_FUNCTION_1_92();
  CGFloat v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27DE8];
  sub_1B600AF94(a1 + *(void *)(v2 + 104), (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8]);
  OUTLINED_FUNCTION_1_92();
  swift_release();
  OUTLINED_FUNCTION_1_92();
  OUTLINED_FUNCTION_23_15();
  (*(void (**)(void))(*(void *)(*(void *)(v4 + 80) - 8) + 8))();
  OUTLINED_FUNCTION_1_92();
  sub_1B600AF94(a1 + *(void *)(v5 + 136), (unint64_t *)&qword_1EB642510, v3);
  OUTLINED_FUNCTION_1_92();
  sub_1B6009B94(a1 + *(void *)(v6 + 144), (uint64_t)v9);
  sub_1B600B000(v9, sub_1B600ABCC);
  OUTLINED_FUNCTION_1_92();
  memcpy(__dst, (const void *)(a1 + *(void *)(v7 + 152)), sizeof(__dst));
  sub_1B5EED720((uint64_t)__dst);
  OUTLINED_FUNCTION_1_92();
}

void (*sub_1B60097EC(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1B6004614();
  return sub_1B5E969A4;
}

uint64_t sub_1B6009844()
{
  return sub_1B6004750();
}

uint64_t sub_1B600986C(double a1)
{
  return sub_1B6005978(a1);
}

double sub_1B6009890(uint64_t a1)
{
  return sub_1B6008FF0(a1);
}

uint64_t sub_1B60098B4()
{
  return sub_1B60043EC();
}

uint64_t sub_1B60098D8()
{
  return sub_1B60058FC();
}

void sub_1B60098FC()
{
  OUTLINED_FUNCTION_83();
  uint64_t v2 = v0;
  uint64_t v11 = sub_1B61B2C40();
  OUTLINED_FUNCTION_0_10();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_2_2();
  uint64_t v6 = sub_1B61B2C20();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_4_7();
  uint64_t v7 = sub_1B61B1DF0();
  uint64_t v8 = OUTLINED_FUNCTION_14(v7);
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_5_8();
  v0[2] = MEMORY[0x1E4FBC868];
  type metadata accessor for BlueprintCollectionViewLayoutCache.Token();
  v0[3] = swift_allocObject();
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB64CA90);
  sub_1B61B1DB0();
  sub_1B600AB54(&qword_1EB647BD8, MEMORY[0x1E4FBCC10]);
  uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1B600B5E4(0, (unint64_t *)&qword_1EB647B00, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1B600B480(&qword_1EB647B08, (unint64_t *)&qword_1EB647B00, v9);
  sub_1B61B3100();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, *MEMORY[0x1E4FBCC58], v11);
  v0[4] = sub_1B61B2C80();
  id v10 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v10, sel_addObserver_selector_name_object_, v2, sel_didReceiveMemoryWarning, *MEMORY[0x1E4FB2650], 0);

  OUTLINED_FUNCTION_73();
}

void sub_1B6009B8C(void *a1)
{
}

uint64_t sub_1B6009B94(uint64_t a1, uint64_t a2)
{
  sub_1B5F7EC68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for BlueprintCollectionViewLayout()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B6009C10()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_2();
  return swift_deallocObject();
}

uint64_t sub_1B6009C40()
{
  swift_release();
  OUTLINED_FUNCTION_3_6();
  return swift_deallocObject();
}

uint64_t sub_1B6009C70(uint64_t a1, const void *a2)
{
  return sub_1B6004FD4(a1, a2, *(void *)(v2 + 32));
}

unint64_t sub_1B6009C7C()
{
  unint64_t result = qword_1E9DAB5C0;
  if (!qword_1E9DAB5C0)
  {
    sub_1B5DFF760(255, (unint64_t *)&qword_1EB649990);
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9DAB5C0);
  }
  return result;
}

uint64_t sub_1B6009CEC(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  id v76 = a3;
  uint64_t v7 = sub_1B61B1D90();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1B61B1DF0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t result = swift_release();
  if (!Strong) {
    return result;
  }
  uint64_t v67 = a4;
  char v68 = v14;
  uint64_t v69 = v12;
  uint64_t v70 = v10;
  uint64_t v71 = v11;
  uint64_t v72 = v8;
  uint64_t v73 = v7;
  uint64_t v17 = *(void *)(a2 + 64);
  uint64_t v77 = a2 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v78 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v21 = v76 + 40;
  sub_1B61B1F70();
  int64_t v22 = 0;
  uint64_t v75 = MEMORY[0x1E4FBC868];
  while (v20)
  {
    unint64_t v23 = __clz(__rbit64(v20));
    v20 &= v20 - 1;
    unint64_t v24 = v23 | (v22 << 6);
LABEL_18:
    long long v28 = (double *)(*(void *)(a2 + 48) + 32 * v24);
    double v30 = *v28;
    double v29 = v28[1];
    double v32 = v28[2];
    double v31 = v28[3];
    unint64_t v33 = *(double **)(*(void *)(a2 + 56) + 8 * v24);
    double v34 = v33[3];
    CGFloat v35 = v33[5];
    double v79 = v33[4];
    double v80 = v34;
    CGFloat v37 = v33[6];
    double v36 = v33[7];
    double v38 = v33[8];
    memcpy(v81, v21, 0x20EuLL);
    swift_retain();
    sub_1B60939AC();
    unint64_t v40 = v39;
    uint64_t v42 = v41;
    memcpy(v81, v76, 0x498uLL);
    uint64_t v43 = sub_1B6131E30(v40, v42, v30, v29, v32, v31, v80, v79, v35, v37, v36, v38);
    if (v43)
    {
      uint64_t v44 = v43;
      uint64_t v45 = v75;
      v66[3] = swift_isUniquelyReferenced_nonNull_native();
      v81[0] = v45;
      *(void *)&double v79 = sub_1B5E470A8();
      uint64_t v46 = *(void *)(v45 + 16);
      LODWORD(v8sub_1B5E6F544(4, 0, 0) = v47;
      if (__OFADD__(v46, (v47 & 1) == 0)) {
        goto LABEL_37;
      }
      sub_1B600B4E4(0, (unint64_t *)&qword_1EB64BAF0, MEMORY[0x1E4FBBCB8]);
      char v48 = sub_1B61B3480();
      double v49 = v79;
      if (v48)
      {
        unint64_t v50 = sub_1B5E470A8();
        if ((LOBYTE(v80) & 1) != (v51 & 1)) {
          goto LABEL_39;
        }
        double v49 = *(double *)&v50;
      }
      uint64_t v52 = (void *)v81[0];
      uint64_t v75 = v81[0];
      if (LOBYTE(v80))
      {
        uint64_t v53 = *(void *)(v81[0] + 56);
        swift_release();
        *(void *)(v53 + 8 * *(void *)&v49) = v44;
      }
      else
      {
        *(void *)(v81[0] + 8 * (*(void *)&v49 >> 6) + 64) |= 1 << SLOBYTE(v49);
        id v54 = (double *)(v52[6] + 32 * *(void *)&v49);
        *id v54 = v30;
        v54[1] = v29;
        v54[2] = v32;
        v54[3] = v31;
        *(void *)(v52[7] + 8 * *(void *)&v49) = v44;
        uint64_t v55 = v52[2];
        BOOL v25 = __OFADD__(v55, 1);
        uint64_t v56 = v55 + 1;
        if (v25) {
          goto LABEL_38;
        }
        void v52[2] = v56;
      }
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
  }
  BOOL v25 = __OFADD__(v22++, 1);
  if (v25)
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v22 >= v78) {
    goto LABEL_33;
  }
  unint64_t v26 = *(void *)(v77 + 8 * v22);
  if (v26)
  {
LABEL_17:
    unint64_t v20 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v22 << 6);
    goto LABEL_18;
  }
  int64_t v27 = v22 + 1;
  if (v22 + 1 >= v78) {
    goto LABEL_33;
  }
  unint64_t v26 = *(void *)(v77 + 8 * v27);
  if (v26) {
    goto LABEL_16;
  }
  int64_t v27 = v22 + 2;
  if (v22 + 2 >= v78) {
    goto LABEL_33;
  }
  unint64_t v26 = *(void *)(v77 + 8 * v27);
  if (v26) {
    goto LABEL_16;
  }
  int64_t v27 = v22 + 3;
  if (v22 + 3 >= v78)
  {
LABEL_33:
    swift_release();
    sub_1B5DFF760(0, (unint64_t *)&qword_1EB64CA90);
    uint64_t v57 = (void *)sub_1B61B2C50();
    BOOL v58 = (void *)swift_allocObject();
    uint64_t v59 = v75;
    uint64_t v60 = v67;
    v58[2] = v74;
    v58[3] = v60;
    v58[4] = v59;
    v81[4] = sub_1B600B5D8;
    v81[5] = v58;
    v81[0] = MEMORY[0x1E4F143A8];
    v81[1] = 1107296256;
    v81[2] = sub_1B5E3729C;
    v81[3] = &block_descriptor_78;
    uint64_t v61 = _Block_copy(v81);
    swift_retain();
    swift_retain();
    swift_release();
    uint64_t v62 = v68;
    sub_1B61B1DB0();
    v81[0] = MEMORY[0x1E4FBC860];
    sub_1B600AB54((unint64_t *)&qword_1EB647A40, MEMORY[0x1E4FBCB00]);
    id v63 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
    sub_1B600B5E4(0, (unint64_t *)&qword_1EB647AD8, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1B600B480((unint64_t *)&qword_1EB647AE0, (unint64_t *)&qword_1EB647AD8, v63);
    uint64_t v64 = v70;
    uint64_t v65 = v73;
    sub_1B61B3100();
    MEMORY[0x1BA9AFE10](0, v62, v64, v61);
    _Block_release(v61);

    (*(void (**)(char *, uint64_t))(v72 + 8))(v64, v65);
    return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v62, v71);
  }
  unint64_t v26 = *(void *)(v77 + 8 * v27);
  if (v26)
  {
LABEL_16:
    int64_t v22 = v27;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v22 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v22 >= v78) {
      goto LABEL_33;
    }
    unint64_t v26 = *(void *)(v77 + 8 * v22);
    ++v27;
    if (v26) {
      goto LABEL_17;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  type metadata accessor for CGRect(0);
  uint64_t result = sub_1B61B3840();
  __break(1u);
  return result;
}

uint64_t sub_1B600A3E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v6 = *(void *)(result + 24);
  if (v6) {
    BOOL v7 = v6 == a2;
  }
  else {
    BOOL v7 = 0;
  }
  if (!v7) {
    return swift_release();
  }
  uint64_t v8 = a3 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  uint64_t v11 = v10 & *(void *)(a3 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t result = sub_1B61B1F70();
  int64_t v13 = 0;
  if (!v11) {
    goto LABEL_11;
  }
LABEL_10:
  for (v11 &= v11 - 1; ; uint64_t v11 = (v15 - 1) & v15)
  {
    uint64_t v17 = swift_retain_n();
    sub_1B6005D4C(v17);
    uint64_t result = swift_release();
    if (v11) {
      goto LABEL_10;
    }
LABEL_11:
    int64_t v14 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v14 >= v12) {
      goto LABEL_27;
    }
    uint64_t v15 = *(void *)(v8 + 8 * v14);
    ++v13;
    if (!v15)
    {
      int64_t v13 = v14 + 1;
      if (v14 + 1 >= v12) {
        goto LABEL_27;
      }
      uint64_t v15 = *(void *)(v8 + 8 * v13);
      if (!v15)
      {
        int64_t v13 = v14 + 2;
        if (v14 + 2 >= v12) {
          goto LABEL_27;
        }
        uint64_t v15 = *(void *)(v8 + 8 * v13);
        if (!v15) {
          break;
        }
      }
    }
LABEL_24:
    ;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v12)
  {
LABEL_27:
    swift_release();
    return swift_release();
  }
  uint64_t v15 = *(void *)(v8 + 8 * v16);
  if (v15)
  {
    int64_t v13 = v16;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v13 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v13 >= v12) {
      goto LABEL_27;
    }
    uint64_t v15 = *(void *)(v8 + 8 * v13);
    ++v16;
    if (v15) {
      goto LABEL_24;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1B600A5B8()
{
  return swift_endAccess();
}

uint64_t sub_1B600A668()
{
  swift_bridgeObjectRelease();
  swift_release();

  return v0;
}

uint64_t sub_1B600A698()
{
  sub_1B600A668();
  OUTLINED_FUNCTION_3_6();
  return swift_deallocClassInstance();
}

void sub_1B600A6C4()
{
  if (!qword_1E9DAB5C8)
  {
    sub_1B61AFCB0();
    unint64_t v0 = sub_1B61B34B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAB5C8);
    }
  }
}

uint64_t sub_1B600A72C(uint64_t a1, uint64_t a2)
{
  return sub_1B6008B98(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1B600A734(uint64_t a1, uint64_t a2)
{
  return sub_1B60087A8(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1B600A73C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B60043EC();
  *a1 = result;
  return result;
}

uint64_t sub_1B600A774@<X0>(uint64_t a1@<X8>)
{
  return sub_1B600454C(a1);
}

void sub_1B600A7B4()
{
  sub_1B600B5E4(319, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

uint64_t method lookup function for BlueprintCollectionViewLayout(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BlueprintCollectionViewLayout);
}

uint64_t dispatch thunk of BlueprintCollectionViewLayout.transition.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of BlueprintCollectionViewLayout.reorderingIndexPath.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of BlueprintCollectionViewLayout.reorderingIndexPath.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of BlueprintCollectionViewLayout.reorderingIndexPath.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of BlueprintCollectionViewLayout.dynamicPinHeight.getter()
{
  OUTLINED_FUNCTION_28_0();
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of BlueprintCollectionViewLayout.__allocating_init(blueprintLayoutCollectionProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 368))();
}

uint64_t dispatch thunk of BlueprintCollectionViewLayout.copyProperties(toLayout:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of BlueprintCollectionViewLayout.detachAndCreateTransitionLayout()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of BlueprintCollectionViewLayout.dynamicInsetAdjustments(pinHeight:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of BlueprintCollectionViewLayout.frameForSection(index:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x190))();
}

uint64_t type metadata accessor for BlueprintCollectionViewLayoutCache.Token()
{
  return self;
}

uint64_t sub_1B600AB54(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B600AB9C()
{
  _Block_release(*(const void **)(v0 + 16));
  OUTLINED_FUNCTION_2();
  return swift_deallocObject();
}

uint64_t sub_1B600ABCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,void *a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,char a43)
{
  if (a4)
  {
    unint64_t v55 = STACK[0x460];
    uint64_t v54 = STACK[0x458];
    uint64_t v53 = STACK[0x450];
    unint64_t v52 = STACK[0x448];
    uint64_t v51 = STACK[0x440];
    uint64_t v50 = STACK[0x438];
    unint64_t v49 = STACK[0x430];
    uint64_t v48 = STACK[0x428];
    uint64_t v47 = STACK[0x420];
    uint64_t v44 = (void *)STACK[0x3D0];
    uint64_t v45 = (void *)STACK[0x3C0];
    uint64_t v46 = (void *)STACK[0x3B8];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_1B5E5F620(a35, a36, a37);
    sub_1B5E5F620(a38, a39, a40);
    sub_1B5E5F620(a41, a42, a43);

    sub_1B5E5F620(v47, v48, v49);
    sub_1B5E5F620(v50, v51, v52);
    sub_1B5E5F620(v53, v54, v55);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B600ADCC()
{
  return swift_deallocObject();
}

id sub_1B600AE0C()
{
  return sub_1B6008A6C(*(id *)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_1B600AE18()
{
  OUTLINED_FUNCTION_2();
  return swift_deallocObject();
}

id sub_1B600AE48()
{
  return sub_1B6008B34(*(id *)(v0 + 16));
}

uint64_t sub_1B600AE50()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1B600AE90()
{
  unint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 16);
  if (v1) {
    return v1(1);
  }
  return result;
}

uint64_t sub_1B600AEC4()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  OUTLINED_FUNCTION_3_6();
  return swift_deallocObject();
}

id sub_1B600AF04()
{
  return sub_1B6008D1C(*(id *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1B600AF14(void *a1)
{
  return sub_1B60093F4(a1) & 1;
}

unint64_t sub_1B600AF3C()
{
  unint64_t result = qword_1EB649540;
  if (!qword_1EB649540)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB649540);
  }
  return result;
}

uint64_t sub_1B600AF94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1B600B5E4(0, a2, a3, MEMORY[0x1E4FBB718]);
  OUTLINED_FUNCTION_5_1();
  v4();
  return a1;
}

#error "1B600B2EC: call analysis failed (funcsize=197)"

uint64_t sub_1B600B314()
{
  swift_weakDestroy();
  OUTLINED_FUNCTION_2();
  return swift_deallocObject();
}

uint64_t sub_1B600B344()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1B5E5F620(*(void *)(v0 + 304), *(void *)(v0 + 312), *(unsigned char *)(v0 + 320));
  sub_1B5E5F620(*(void *)(v0 + 328), *(void *)(v0 + 336), *(unsigned char *)(v0 + 344));
  sub_1B5E5F620(*(void *)(v0 + 352), *(void *)(v0 + 360), *(unsigned char *)(v0 + 368));

  sub_1B5E5F620(*(void *)(v0 + 832), *(void *)(v0 + 840), *(unsigned char *)(v0 + 848));
  sub_1B5E5F620(*(void *)(v0 + 856), *(void *)(v0 + 864), *(unsigned char *)(v0 + 872));
  sub_1B5E5F620(*(void *)(v0 + 880), *(void *)(v0 + 888), *(unsigned char *)(v0 + 896));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B600B470()
{
  return sub_1B6009CEC(*(void *)(v0 + 16), *(void *)(v0 + 24), (char *)(v0 + 32), *(void *)(v0 + 1208));
}

uint64_t sub_1B600B480(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B600B5E4(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B600B4E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    type metadata accessor for CGRect(255);
    uint64_t v7 = v6;
    uint64_t v8 = type metadata accessor for BlueprintLayoutCollectionRectResult();
    uint64_t v9 = sub_1B600AB54(&qword_1EB64BAC8, type metadata accessor for CGRect);
    unint64_t v10 = a3(a1, v7, v8, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1B600B598()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_3_6();
  return swift_deallocObject();
}

uint64_t sub_1B600B5D8()
{
  return sub_1B600A3E0(v0[2], v0[3], v0[4]);
}

void sub_1B600B5E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1B600B67C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  memcpy(v2, (const void *)(v0 + 64), 0x20DuLL);
  sub_1B5E5F574((uint64_t)v2);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ManualBlueprintLayoutCollectionSectionSolver()
{
  return self;
}

double sub_1B600B6F4(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  double v9 = *(double *)(a1 + 16) + a2;
  CGRectGetWidth(*(CGRect *)&a2);
  v11.origin.CGFloat x = a2;
  v11.origin.CGFloat y = a3;
  v11.size.CGFloat width = a4;
  v11.size.CGFloat height = a5;
  CGRectGetHeight(v11);
  return v9;
}

uint64_t sub_1B600B77C(double a1, double a2, double a3, double a4)
{
  if (*(unsigned char *)(v4 + 56))
  {
    CGFloat MaxY = CGRectGetMaxY(*(CGRect *)&a1);
    type metadata accessor for BlueprintLayoutCollectionSectionCursor();
    swift_allocObject();
    OUTLINED_FUNCTION_2_10();
    double v21 = MaxY;
  }
  else
  {
    CGFloat MaxX = CGRectGetMaxX(*(CGRect *)&a1);
    type metadata accessor for BlueprintLayoutCollectionSectionCursor();
    swift_allocObject();
    OUTLINED_FUNCTION_2_10();
    double v14 = MaxX;
  }
  return sub_1B5FE9160(v14, v21, v15, v16, v17, v18, v19, v20, v6, v7, v8, v9, v10, v11, v12, v13, 0, 0);
}

double sub_1B600B814(double a1, double a2, double a3, double a4)
{
  if (CGRectIsEmpty(*(CGRect *)&a1))
  {
    if (*(unsigned char *)(v4 + 56))
    {
      v7.origin.CGFloat x = OUTLINED_FUNCTION_5_52();
      if (CGRectGetMaxY(v7) > 0.0)
      {
        OUTLINED_FUNCTION_6_55();
        v8.origin.CGFloat x = OUTLINED_FUNCTION_4_71();
        CGRectGetHeight(v8);
        v9.origin.CGFloat x = OUTLINED_FUNCTION_0_88();
        CGRectGetWidth(v9);
        v10.origin.CGFloat x = OUTLINED_FUNCTION_3_72();
        CGRectGetWidth(v10);
      }
    }
    else
    {
      v11.origin.CGFloat x = OUTLINED_FUNCTION_5_52();
      if (CGRectGetMaxX(v11) > 0.0)
      {
        OUTLINED_FUNCTION_6_55();
        v12.origin.CGFloat x = OUTLINED_FUNCTION_4_71();
        CGRectGetWidth(v12);
        v13.origin.CGFloat x = OUTLINED_FUNCTION_0_88();
        CGRectGetHeight(v13);
        v14.origin.CGFloat x = OUTLINED_FUNCTION_3_72();
        CGRectGetHeight(v14);
      }
    }
  }
  return a1;
}

double sub_1B600B928(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  return sub_1B600B6F4(a1, a2, a3, a4, a5);
}

uint64_t sub_1B600B940()
{
  return j__swift_retain();
}

uint64_t sub_1B600B958(double a1, double a2, double a3, double a4)
{
  return sub_1B600B77C(a1, a2, a3, a4);
}

double sub_1B600B97C(double a1, double a2, double a3, double a4)
{
  return sub_1B600B814(a1, a2, a3, a4);
}

uint64_t sub_1B600B9A0(unsigned char *a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(a4 + 4sub_1B5E6F544(4, 0, 0) = a5;
  *(void *)(a4 + 48) = a6;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(a4 + 16));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(boxed_opaque_existential_0, a3, a5);
  *(unsigned char *)(a4 + 56) = *a1;
  memcpy((void *)(a4 + 64), a2, 0x20DuLL);
  return a4;
}

void *ContextMenuBarButtonItem.__allocating_init(image:menuProvider:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return ContextMenuBarButtonItem.init(image:menuProvider:)(a1, a2, a3);
}

void *ContextMenuBarButtonItem.init(image:menuProvider:)(void *a1, uint64_t a2, uint64_t a3)
{
  v19.receiver = v3;
  v19.super_class = (Class)type metadata accessor for ContextMenuBarButtonItem();
  id v7 = objc_msgSendSuper2(&v19, sel_init);
  CGRect v8 = v7;
  if (a1)
  {
    id v9 = v7;
    CGRect v10 = a1;
  }
  else
  {
    uint64_t v11 = qword_1E9DA7F90;
    id v12 = v7;
    if (v11 != -1) {
      swift_once();
    }
    id v9 = (id)qword_1E9DC7A18;
    CGRect v10 = (void *)qword_1E9DC7A18;
  }
  id v13 = v9;
  id v14 = a1;
  objc_msgSend(v8, sel_setImage_, v10);

  objc_msgSend(v8, sel_setStyle_, 0);
  objc_msgSend(v8, sel_setSecondaryActionsArePrimary_, 1);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  v18[4] = sub_1B600BEDC;
  v18[5] = v15;
  v18[0] = MEMORY[0x1E4F143A8];
  v18[1] = 1107296256;
  void v18[2] = sub_1B600BC7C;
  void v18[3] = &block_descriptor_49;
  double v16 = _Block_copy(v18);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel__setSecondaryActionsProvider_, v16);

  swift_release();
  _Block_release(v16);
  swift_release();

  return v8;
}

uint64_t type metadata accessor for ContextMenuBarButtonItem()
{
  return self;
}

id sub_1B600BC7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v5 = *(uint64_t (**)(long long *, uint64_t))(a1 + 32);
  if (a2)
  {
    *((void *)&v9 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = swift_getObjectType();
    *(void *)&long long v8 = a2;
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  long long v8 = 0u;
  long long v9 = 0u;
  if (a3)
  {
LABEL_3:
    sub_1B5E8EF90();
    uint64_t v3 = sub_1B61B24E0();
  }
LABEL_4:
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v6 = (void *)v5(&v8, v3);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B5E15B34((uint64_t)&v8);
  return v6;
}

id ContextMenuBarButtonItem.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ContextMenuBarButtonItem.init(coder:)()
{
}

id ContextMenuBarButtonItem.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ContextMenuBarButtonItem.init()()
{
}

id ContextMenuBarButtonItem.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContextMenuBarButtonItem();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B600BEA4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B600BEDC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t method lookup function for ContextMenuBarButtonItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ContextMenuBarButtonItem);
}

uint64_t dispatch thunk of ContextMenuBarButtonItem.__allocating_init(image:menuProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t UIView.firstParent<A>(viewOfType:where:)(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  id v9 = objc_msgSend(v4, sel_superview);
  uint64_t v10 = sub_1B600D428(a1, v9, a2, a3, a4);

  return v10;
}

Swift::Void __swiftcall UIView.setHiddenIfNeeded(_:)(Swift::Bool a1)
{
}

Swift::Void __swiftcall UIView.setFrameIfNeeded(_:)(__C::CGRect a1)
{
  OUTLINED_FUNCTION_38();
  objc_msgSend(v1, sel_frame);
  v11.origin.CGFloat x = v5;
  v11.origin.CGFloat y = v4;
  v11.size.CGFloat width = v3;
  v11.size.CGFloat height = v2;
  if (!CGRectEqualToRect(v10, v11))
  {
    double v8 = OUTLINED_FUNCTION_35_0();
    objc_msgSend(v6, v7, v8);
  }
}

id UIView.setAlphaIfNeeded(_:)(double a1)
{
  id result = objc_msgSend(v1, sel_alpha);
  if (v4 != a1)
  {
    return objc_msgSend(v1, sel_setAlpha_, a1);
  }
  return result;
}

Swift::Void __swiftcall UIView.setClipsToBoundsIfNeeded(_:)(Swift::Bool a1)
{
}

id sub_1B600C0B8(char a1, SEL *a2, const char **a3)
{
  uint64_t v5 = a1 & 1;
  id result = [v3 *a2];
  if (result != v5)
  {
    id v7 = *a3;
    return objc_msgSend(v3, v7, v5);
  }
  return result;
}

Swift::Void __swiftcall UIView.setBackgroundColorIfNeeded(_:)(UIColor_optional a1)
{
}

id UIView.mostParentView.getter()
{
  id v1 = v0;
  id v2 = objc_msgSend(v1, sel_superview);
  if (!v2) {
    return v1;
  }
  do
  {
    CGFloat v3 = v2;

    id v2 = objc_msgSend(v3, sel_superview);
    id v1 = v3;
  }
  while (v2);
  return v3;
}

uint64_t UIView.first<A>(viewOfType:where:)(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  return sub_1B600D14C(a1, v4, a2, a3, a4);
}

Swift::Void __swiftcall UIView.ts_adjustLayoutMargins(to:padding:)(UILayoutGuide to, UIEdgeInsets padding)
{
  double right = padding.right;
  double bottom = padding.bottom;
  double left = padding.left;
  double top = padding.top;
  [(objc_class *)to.super.isa layoutFrame];
  double MinX = CGRectGetMinX(v11);
  objc_msgSend(v2, sel_layoutMargins);
  double v8 = MinX + left;
  if (v9 != v8)
  {
    objc_msgSend(v2, sel_setInsetsLayoutMarginsFromSafeArea_, 0);
    objc_msgSend(v2, sel_setLayoutMargins_, top + 0.0, v8, bottom + 0.0, MinX + right);
    objc_msgSend(v2, sel_setNeedsLayout);
  }
}

void sub_1B600C294(char a1, void (*a2)(uint64_t), double a3, uint64_t a4, uint64_t (*a5)(), uint64_t a6, uint64_t a7, void (**a8)(void))
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a8;
  if (a1)
  {
    _Block_copy(a8);
    if (a2)
    {
      uint64_t v15 = sub_1B5E4DC4C((uint64_t)a2);
      a2(v15);
      sub_1B5E3799C((uint64_t)a2);
    }
    int64_t v22 = sub_1B5EAA464;
    uint64_t v23 = v14;
    uint64_t v18 = MEMORY[0x1E4F143A8];
    uint64_t v19 = 1107296256;
    double v20 = sub_1B5E3729C;
    double v21 = &block_descriptor_13_2;
    double v17 = _Block_copy(&v18);
    swift_retain();
    swift_release();
    if (a5)
    {
      int64_t v22 = a5;
      uint64_t v23 = a6;
      uint64_t v18 = MEMORY[0x1E4F143A8];
      uint64_t v19 = 1107296256;
      double v20 = sub_1B5E73DCC;
      double v21 = &block_descriptor_16_0;
      a5 = (uint64_t (*)())_Block_copy(&v18);
      swift_retain();
      swift_release();
    }
    objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_animateWithDuration_animations_completion_, v17, a5, a3);
    _Block_release(a5);
    _Block_release(v17);
    swift_release();
    _Block_release(a8);
  }
  else
  {
    _Block_copy(a8);
    if (a2)
    {
      uint64_t v16 = sub_1B5E4DC4C((uint64_t)a2);
      a2(v16);
      sub_1B5E3799C((uint64_t)a2);
    }
    a8[2](a8);
    if (a5)
    {
      swift_retain();
      ((void (*)(uint64_t))a5)(1);
      sub_1B5E3799C((uint64_t)a5);
    }
    swift_release();
    _Block_release(a8);
  }
}

void static UIView.ts_execute(animated:duration:setupBlock:animationBlock:completion:)(uint64_t a1, void (*a2)(uint64_t), double a3, uint64_t a4, void (*a5)(void), uint64_t a6, void (*a7)(void), uint64_t a8)
{
  if (a1)
  {
    if (a2)
    {
      uint64_t v14 = swift_retain();
      a2(v14);
      sub_1B5E3799C((uint64_t)a2);
    }
    double v21 = a5;
    uint64_t v22 = a6;
    uint64_t v17 = MEMORY[0x1E4F143A8];
    uint64_t v18 = 1107296256;
    uint64_t v19 = sub_1B5E3729C;
    double v20 = &block_descriptor_50;
    uint64_t v15 = _Block_copy(&v17);
    swift_retain();
    swift_release();
    if (a7)
    {
      double v21 = a7;
      uint64_t v22 = a8;
      uint64_t v17 = MEMORY[0x1E4F143A8];
      uint64_t v18 = 1107296256;
      uint64_t v19 = sub_1B5E73DCC;
      double v20 = &block_descriptor_3_0;
      a7 = (void (*)(void))_Block_copy(&v17);
      swift_retain();
      swift_release();
    }
    objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_animateWithDuration_animations_completion_, v15, a7, a3);
    _Block_release(a7);
    _Block_release(v15);
  }
  else
  {
    if (a2)
    {
      uint64_t v16 = swift_retain();
      a2(v16);
      a1 = sub_1B5E3799C((uint64_t)a2);
    }
    a5(a1);
    if (a7)
    {
      swift_retain();
      a7(1);
      sub_1B5E3799C((uint64_t)a7);
    }
  }
}

uint64_t sub_1B600C710(int a1, int a2, char a3, void *aBlock, double a5, const void *a6, const void *a7)
{
  CGRect v11 = (void (*)(uint64_t))_Block_copy(aBlock);
  id v12 = _Block_copy(a6);
  id v13 = (uint64_t (*)())_Block_copy(a7);
  uint64_t v14 = v13;
  if (v11)
  {
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v11;
    CGRect v11 = (void (*)(uint64_t))sub_1B5EA9C18;
    if (v14)
    {
LABEL_3:
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = v14;
      uint64_t v14 = (uint64_t (*)())sub_1B5EA9C10;
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v15 = 0;
    if (v13) {
      goto LABEL_3;
    }
  }
  uint64_t v16 = 0;
LABEL_6:
  uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
  _Block_copy(v12);
  _Block_copy(v12);
  sub_1B600C294(a3, v11, a5, v15, v14, v16, ObjCClassMetadata, (void (**)(void))v12);
  sub_1B5E3799C((uint64_t)v14);
  _Block_release(v12);
  _Block_release(v12);
  return sub_1B5E3799C((uint64_t)v11);
}

__C::CGRect __swiftcall UIView.adjustedFrameForPopover()()
{
  objc_msgSend(v0, sel_bounds);
  v13.origin.CGFloat x = UIEdgeInsetsInsetRect_0(v1);
  CGFloat x = v13.origin.x;
  CGFloat y = v13.origin.y;
  CGFloat width = v13.size.width;
  CGFloat height = v13.size.height;
  CGFloat v6 = v13.origin.x + -1.0;
  CGFloat v7 = v13.origin.y + 2.0;
  CGFloat v8 = CGRectGetWidth(v13);
  v14.origin.CGFloat x = x;
  v14.origin.CGFloat y = y;
  v14.size.CGFloat width = width;
  v14.size.CGFloat height = height;
  double v9 = CGRectGetHeight(v14);
  double v10 = v6;
  double v11 = v7;
  double v12 = v8;
  result.size.CGFloat height = v9;
  result.size.CGFloat width = v12;
  result.origin.CGFloat y = v11;
  result.origin.CGFloat x = v10;
  return result;
}

double sub_1B600C908(void *a1)
{
  id v1 = a1;
  double v2 = UIView.frameUsingCenterAndBounds.getter();

  return v2;
}

double UIView.frameUsingCenterAndBounds.getter()
{
  id v1 = OUTLINED_FUNCTION_0_89();
  objc_msgSend(v1, sel_anchorPoint);
  double v3 = v2;
  double v5 = v4;

  id v6 = OUTLINED_FUNCTION_0_89();
  objc_msgSend(v6, sel_setAnchorPointWithoutChangingPositionWithNewAnchorPoint_, 0.5, 0.5);

  OUTLINED_FUNCTION_2_28();
  objc_msgSend(v0, sel_center);
  double v8 = v7;
  OUTLINED_FUNCTION_2_28();
  double v10 = v8 - v9 * 0.5;
  objc_msgSend(v0, sel_center);
  OUTLINED_FUNCTION_2_28();
  id v11 = OUTLINED_FUNCTION_0_89();
  objc_msgSend(v11, sel_setAnchorPointWithoutChangingPositionWithNewAnchorPoint_, v3, v5);

  return v10;
}

Swift::Void __swiftcall UIView.setFrameUsingCenterAndBounds(frame:)(__C::CGRect frame)
{
  OUTLINED_FUNCTION_38();
  id v7 = OUTLINED_FUNCTION_0_89();
  objc_msgSend(v7, sel_transform);
  long long v33 = v36;
  long long v34 = v35;
  long long v31 = v38;
  long long v32 = v37;
  long long v29 = v40;
  long long v30 = v39;
  long long v28 = v41;
  uint64_t v26 = *((void *)&v42 + 1);
  uint64_t v27 = v42;

  id v8 = OUTLINED_FUNCTION_0_89();
  objc_msgSend(v8, sel_anchorPoint);
  double v24 = v10;
  double v25 = v9;

  id v11 = OUTLINED_FUNCTION_0_89();
  long long v12 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 16);
  long long v35 = *MEMORY[0x1E4F39B10];
  long long v36 = v12;
  long long v13 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 48);
  long long v37 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 32);
  long long v38 = v13;
  long long v14 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 80);
  long long v39 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 64);
  long long v40 = v14;
  long long v15 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 112);
  long long v41 = *(_OWORD *)(MEMORY[0x1E4F39B10] + 96);
  long long v42 = v15;
  objc_msgSend(v11, sel_setTransform_, &v35);

  id v16 = OUTLINED_FUNCTION_0_89();
  objc_msgSend(v16, sel_setAnchorPointWithoutChangingPositionWithNewAnchorPoint_, 0.5, 0.5);

  v43.origin.CGFloat x = OUTLINED_FUNCTION_35_0();
  CGRectGetMinX(v43);
  v44.origin.CGFloat x = OUTLINED_FUNCTION_3_73();
  double v23 = v6 + CGRectGetWidth(v44) * 0.5;
  v45.origin.CGFloat x = OUTLINED_FUNCTION_35_0();
  double MinY = CGRectGetMinY(v45);
  v46.origin.CGFloat x = v5;
  v46.origin.CGFloat y = v4;
  v46.size.CGFloat width = v3;
  v46.size.CGFloat height = v2;
  double v18 = MinY + CGRectGetHeight(v46) * 0.5;
  OUTLINED_FUNCTION_2_28();
  double MinX = CGRectGetMinX(v47);
  OUTLINED_FUNCTION_2_28();
  double v20 = CGRectGetMinY(v48);
  v49.origin.CGFloat x = v5;
  v49.origin.CGFloat y = v4;
  v49.size.CGFloat width = v3;
  v49.size.CGFloat height = v2;
  CGRectGetWidth(v49);
  v50.origin.CGFloat x = OUTLINED_FUNCTION_3_73();
  objc_msgSend(v1, sel_setBounds_, MinX, v20, v6, CGRectGetHeight(v50));
  objc_msgSend(v1, sel_setCenter_, v23, v18);
  id v21 = OUTLINED_FUNCTION_0_89();
  objc_msgSend(v21, sel_setAnchorPointWithoutChangingPositionWithNewAnchorPoint_, v25, v24);

  id v22 = OUTLINED_FUNCTION_0_89();
  long long v35 = v34;
  long long v36 = v33;
  long long v37 = v32;
  long long v38 = v31;
  long long v39 = v30;
  long long v40 = v29;
  long long v41 = v28;
  *(void *)&long long v42 = v27;
  *((void *)&v42 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v26;
  objc_msgSend(v22, sel_setTransform_, &v35);
}

void sub_1B600CD08(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  id v9 = a1;
  v11.origin.CGFloat x = a2;
  v11.origin.CGFloat y = a3;
  v11.size.CGFloat width = a4;
  v11.size.CGFloat height = a5;
  UIView.setFrameUsingCenterAndBounds(frame:)(v11);
}

id UIView.scaleFrameBy(x:y:)(double a1, double a2)
{
  objc_msgSend(v2, sel_frame);
  CGFloat x = v15.origin.x;
  CGFloat y = v15.origin.y;
  CGFloat width = v15.size.width;
  CGFloat height = v15.size.height;
  double v9 = v15.origin.x * a1;
  double v10 = v15.origin.y * a2;
  double v11 = CGRectGetWidth(v15) * a1;
  v16.origin.CGFloat x = x;
  v16.origin.CGFloat y = y;
  v16.size.CGFloat width = width;
  v16.size.CGFloat height = height;
  double v12 = CGRectGetHeight(v16) * a2;
  return objc_msgSend(v2, sel_setFrame_, v9, v10, v11, v12);
}

uint64_t sub_1B600CE2C(void *a1)
{
  id v2 = objc_msgSend(a1, sel_subviews);
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C70);
  unint64_t v3 = sub_1B61B24E0();

  if (v3 >> 62) {
    goto LABEL_18;
  }
  unint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    while (__OFSUB__(v4--, 1))
    {
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      sub_1B61B1F70();
      unint64_t v4 = sub_1B61B3530();
      swift_bridgeObjectRelease();
      if (!v4) {
        goto LABEL_11;
      }
    }
    if ((v3 & 0xC000000000000001) != 0)
    {
      id v6 = (id)MEMORY[0x1BA9B04B0](v4, v3);
      goto LABEL_9;
    }
    if ((v4 & 0x8000000000000000) != 0) {
      goto LABEL_16;
    }
    if (v4 >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_17;
    }
    id v6 = *(id *)(v3 + 32 + 8 * v4);
LABEL_9:
    id v7 = v6;
    uint64_t v8 = sub_1B600CE2C();

    if (v8)
    {
      swift_bridgeObjectRelease();
      return v8;
    }
  }
LABEL_11:
  swift_bridgeObjectRelease();
  self;
  uint64_t v8 = swift_dynamicCastObjCClass();
  if (v8) {
    id v9 = a1;
  }
  return v8;
}

void *sub_1B600CF8C(void *a1, void *a2)
{
  id v4 = a2;
  id v5 = objc_msgSend(a1, sel_subviews);
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C70);
  unint64_t v6 = sub_1B61B24E0();

  if (v6 >> 62) {
    goto LABEL_20;
  }
  unint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v7)
  {
    while (1)
    {
      if (__OFSUB__(v7--, 1))
      {
        __break(1u);
LABEL_17:

        return v2;
      }
      if ((v6 & 0xC000000000000001) != 0)
      {
        id v9 = (id)MEMORY[0x1BA9B04B0](v7, v6);
        goto LABEL_9;
      }
      if ((v7 & 0x8000000000000000) == 0) {
        break;
      }
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      sub_1B61B1F70();
      unint64_t v7 = sub_1B61B3530();
      swift_bridgeObjectRelease();
      if (!v7) {
        goto LABEL_11;
      }
    }
    if (v7 >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_19;
    }
    id v9 = *(id *)(v6 + 32 + 8 * v7);
LABEL_9:
    double v10 = v9;
    id v11 = v4;
    id v2 = (void *)sub_1B600CF8C(v10, v11);

    if (v2)
    {

      swift_bridgeObjectRelease();
      return v2;
    }
  }
LABEL_11:
  swift_bridgeObjectRelease();
  self;
  id v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2) {
    goto LABEL_17;
  }
  id v12 = a1;
  unsigned __int8 v13 = sub_1B60E2F50((int)v4, v2);

  if ((v13 & 1) == 0)
  {

    return 0;
  }
  return v2;
}

uint64_t sub_1B600D14C(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  id v10 = objc_msgSend(a2, sel_subviews);
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C70);
  unint64_t v11 = sub_1B61B24E0();

  if (v11 >> 62) {
    goto LABEL_19;
  }
  unint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v12)
  {
    while (__OFSUB__(v12--, 1))
    {
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1B61B1F70();
      unint64_t v12 = sub_1B61B3530();
      swift_bridgeObjectRelease();
      if (!v12) {
        goto LABEL_11;
      }
    }
    if ((v11 & 0xC000000000000001) != 0)
    {
      id v14 = (id)MEMORY[0x1BA9B04B0](v12, v11);
      goto LABEL_9;
    }
    if ((v12 & 0x8000000000000000) != 0) {
      goto LABEL_17;
    }
    if (v12 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_18;
    }
    id v14 = *(id *)(v11 + 32 + 8 * v12);
LABEL_9:
    CGRect v15 = v14;
    uint64_t v16 = sub_1B600D14C(a1, v14, a3, a4, a5);

    if (v16)
    {
      swift_bridgeObjectRelease();
      return v16;
    }
  }
LABEL_11:
  swift_bridgeObjectRelease();
  uint64_t v16 = swift_dynamicCastUnknownClass();
  if (v16)
  {
    id v17 = a2;
    if ((a3(v16) & 1) == 0)
    {

      return 0;
    }
  }
  return v16;
}

uint64_t sub_1B600D304(void *a1)
{
  if (!a1) {
    return 0;
  }
  type metadata accessor for StatusBannerContainerView();
  uint64_t v2 = swift_dynamicCastClass();
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = a1;
    return v3;
  }
  id v6 = a1;
  id v7 = objc_msgSend(v6, sel_superview);
  uint64_t v8 = sub_1B600D304();

  return v8;
}

uint64_t sub_1B600D394(void *a1)
{
  if (!a1) {
    return 0;
  }
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = a1;
    return v3;
  }
  id v6 = a1;
  id v7 = objc_msgSend(v6, sel_superview);
  uint64_t v8 = sub_1B600D394();

  return v8;
}

uint64_t sub_1B600D428(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  if (!a2) {
    return 0;
  }
  uint64_t v10 = swift_dynamicCastUnknownClass();
  id v11 = a2;
  if (!v10 || (a3(v10) & 1) == 0)
  {
    id v12 = objc_msgSend(v11, sel_superview);
    uint64_t v13 = sub_1B600D428(a1, v12, a3, a4, a5);

    return v13;
  }
  return v10;
}

Swift::Void __swiftcall UIView.setCenterIfNeeded(_:)(CGPoint a1)
{
  double y = a1.y;
  double x = a1.x;
  objc_msgSend(v1, sel_center);
  if (v5 != x || v4 != y)
  {
    objc_msgSend(v1, sel_setCenter_, x, y);
  }
}

Swift::Void __swiftcall UIView.setTintColorIfNeeded(_:)(UIColor_optional a1)
{
}

void sub_1B600D56C(void *a1, SEL *a2, const char **a3)
{
  double v5 = v3;
  id v7 = [v3 *a2];
  if (v7)
  {
    uint64_t v8 = v7;
    if (a1)
    {
      sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C90);
      id v9 = a1;
      id v10 = v8;
      char v11 = sub_1B61B2E10();

      if (v11) {
        return;
      }
    }
    else
    {
    }
  }
  else if (!a1)
  {
    return;
  }
  id v12 = *a3;
  objc_msgSend(v5, v12, a1);
}

uint64_t sub_1B600D658()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t ComplexImageProcessor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ComplexImageProcessor.init()()
{
  return v0;
}

UIImage *ComplexImageProcessor.process(_:)(uint64_t a1)
{
  sub_1B5E176E4(a1, (uint64_t)v96);
  sub_1B600DAD8();
  type metadata accessor for ComplexImageProcessorRequest();
  if (!swift_dynamicCast()) {
    return 0;
  }
  id v1 = (UIImage *)sub_1B600DB30(__src[0]);
  uint64_t v2 = v1;
  if (v1)
  {
    uint64_t v3 = __src[0][10];
    uint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      double v5 = (char *)(v3 + 32);
      id v6 = v1;
      sub_1B61B1F70();
      uint64_t v7 = v4 - 1;
      uint64_t v2 = v6;
      while (1)
      {
        sub_1B5F9953C(v5, __src);
        sub_1B5F9953C(__src, v96);
        switch(sub_1B5F99550((uint64_t)v96))
        {
          case 1u:
            uint64_t v12 = sub_1B5F99690((uint64_t)v96);
            sub_1B600DBF0(v12, (uint64_t)v94);
            if (sub_1B5F99484((uint64_t)v94) == 1)
            {
              uint64_t v13 = sub_1B5F99490((uint64_t)v94);
              id v14 = *(void **)v13;
              int v15 = *(_DWORD *)(v13 + 8);
              sub_1B5F9953C(__src, &v75);
              uint64_t v16 = sub_1B5F99690((uint64_t)&v75);
              sub_1B600DC4C(v16, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_1B5F99834);
              uint64_t v11 = UIImage.blend(with:blendMode:)(v14, v15);
            }
            else
            {
              uint64_t v48 = sub_1B5F99490((uint64_t)v94);
              int v49 = *(_DWORD *)(v48 + 144);
              sub_1B5F986D8(v48, (uint64_t)&__dst);
              if (sub_1B5F98734((uint64_t)&__dst) == 1)
              {
                CGRect v50 = (const void *)sub_1B5F98740((uint64_t)&__dst);
                memcpy(v56, v50, sizeof(v56));
                sub_1B5F9953C(__src, &v75);
                uint64_t v51 = sub_1B5F99690((uint64_t)&v75);
                sub_1B600DC4C(v51, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_1B5F99834);
                uint64_t v11 = (uint64_t)UIImage.applyingOverlay(gradient:blendMode:)(v56, v49);
              }
              else
              {
                uint64_t v52 = sub_1B5F98740((uint64_t)&__dst);
                OUTLINED_FUNCTION_0_90(v52);
                sub_1B5F9953C(v53, &v75);
                uint64_t v54 = sub_1B5F99690((uint64_t)&v75);
                sub_1B600DC4C(v54, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_1B5F99834);
                uint64_t v11 = (uint64_t)UIImage.applyingOverlay(gradient:blendMode:)(v56, v49);
              }
            }
            goto LABEL_17;
          case 2u:
            uint64_t v17 = sub_1B5F99690((uint64_t)v96);
            OUTLINED_FUNCTION_1_93(v17, v18, v19, v20, v21, v22, v23, v24, *(uint64_t *)&v56[0], *((uint64_t *)&v56[0] + 1), *(uint64_t *)&v56[1], *((uint64_t *)&v56[1] + 1), *(uint64_t *)&v56[2], *((uint64_t *)&v56[2] + 1), *(uint64_t *)&v56[3], *((uint64_t *)&v56[3] + 1), *(uint64_t *)&v56[4], *((uint64_t *)&v56[4] + 1), *(uint64_t *)&v56[5],
              *((uint64_t *)&v56[5] + 1),
              *(uint64_t *)&v56[6],
              *((uint64_t *)&v56[6] + 1),
              *(uint64_t *)&v56[7],
              *((uint64_t *)&v56[7] + 1),
              *(uint64_t *)&v56[8],
              *((uint64_t *)&v56[8] + 1),
              __dst,
              v58,
              v59,
              v60,
              v61,
              v62,
              v63,
              v64,
              v65,
              v66,
              v67,
              v68,
              v69,
              v70,
              v71,
              v72,
              v73,
              v74,
              v75,
              v76,
              v77,
              v78,
              v79,
              v80,
              v81,
              v82,
              v83,
              v84,
              v85,
              v86,
              v87,
              v88,
              v89,
              v90,
              v91,
              v92,
              v93);
            uint64_t v25 = sub_1B5F99690((uint64_t)v94);
            sub_1B5F9986C(*(id *)v25, *(void **)(v25 + 8), *(unsigned char *)(v25 + 16));
            uint64_t v11 = (uint64_t)UIImage.applying(descriptor:)();
            goto LABEL_17;
          case 3u:
            v94[0] = *(unsigned char *)(sub_1B5F99690((uint64_t)v96) + 16);
            uint64_t v26 = UIImage.scaled(to:scaling:)();

            goto LABEL_18;
          case 4u:
            uint64_t v27 = (double *)sub_1B5F99690((uint64_t)v96);
            double v28 = *v27;
            double v29 = v27[1];
            double v30 = v27[2];
            double v31 = v27[3];
            double v32 = v27[4];
            double v33 = v27[5];
            double v34 = v27[6];
            uint64_t v35 = *((void *)v27 + 7);
            double v36 = v27[8];
            OUTLINED_FUNCTION_1_93((uint64_t)v27, v37, v38, v39, v40, v41, v42, v43, *(uint64_t *)&v56[0], *((uint64_t *)&v56[0] + 1), *(uint64_t *)&v56[1], *((uint64_t *)&v56[1] + 1), *(uint64_t *)&v56[2], *((uint64_t *)&v56[2] + 1), *(uint64_t *)&v56[3], *((uint64_t *)&v56[3] + 1), *(uint64_t *)&v56[4], *((uint64_t *)&v56[4] + 1), *(uint64_t *)&v56[5],
              *((uint64_t *)&v56[5] + 1),
              *(uint64_t *)&v56[6],
              *((uint64_t *)&v56[6] + 1),
              *(uint64_t *)&v56[7],
              *((uint64_t *)&v56[7] + 1),
              *(uint64_t *)&v56[8],
              *((uint64_t *)&v56[8] + 1),
              __dst,
              v58,
              v59,
              v60,
              v61,
              v62,
              v63,
              v64,
              v65,
              v66,
              v67,
              v68,
              v69,
              v70,
              v71,
              v72,
              v73,
              v74,
              v75,
              v76,
              v77,
              v78,
              v79,
              v80,
              v81,
              v82,
              v83,
              v84,
              v85,
              v86,
              v87,
              v88,
              v89,
              v90,
              v91,
              v92,
              v93);
            id v44 = *(id *)(sub_1B5F99690((uint64_t)v94) + 80);
            uint64_t v11 = UIImage.croppedImage(of:with:scale:byRoundingCorners:cornerRadius:border:)(v35, v28, v29, v30, v31, v32, v33, v34, v36);
            goto LABEL_17;
          default:
            uint64_t v8 = (void *)sub_1B5F99690((uint64_t)v96);
            sub_1B5F986C4(v8, &__dst);
            sub_1B5F986D8((uint64_t)&__dst, (uint64_t)&v75);
            if (sub_1B5F98734((uint64_t)&v75) == 1)
            {
              id v9 = (const void *)sub_1B5F98740((uint64_t)&v75);
              memcpy(v56, v9, sizeof(v56));
              sub_1B5F9953C(__src, v94);
              id v10 = (uint64_t *)sub_1B5F99690((uint64_t)v94);
              sub_1B5F998B4(v10);
              uint64_t v11 = (uint64_t)UIImage.applyingAlphaMask(gradient:)(v56);
            }
            else
            {
              uint64_t v45 = sub_1B5F98740((uint64_t)&v75);
              OUTLINED_FUNCTION_0_90(v45);
              sub_1B5F9953C(v46, v94);
              CGRect v47 = (uint64_t *)sub_1B5F99690((uint64_t)v94);
              sub_1B5F998B4(v47);
              uint64_t v11 = (uint64_t)UIImage.applyingAlphaMask(gradient:)(v56);
            }
LABEL_17:
            uint64_t v26 = (UIImage *)v11;

            sub_1B600DC4C((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_1B5F9955C);
LABEL_18:
            uint64_t v2 = v26;
            if (!v7)
            {
              swift_release();

              swift_bridgeObjectRelease();
              return v2;
            }
            --v7;
            v5 += 152;
            break;
        }
      }
    }
  }
  swift_release();
  return v2;
}

unint64_t sub_1B600DAD8()
{
  unint64_t result = qword_1EB64AB98[0];
  if (!qword_1EB64AB98[0])
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, qword_1EB64AB98);
  }
  return result;
}

id sub_1B600DB30(void *a1)
{
  uint64_t v2 = a1 + 5;
  uint64_t v3 = a1[8];
  uint64_t v4 = a1[9];
  __swift_project_boxed_opaque_existential_1(a1 + 5, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  if (v5)
  {
    sub_1B5EE1300();
    return sub_1B615AF60();
  }
  else
  {
    uint64_t v8 = a1[8];
    uint64_t v7 = a1[9];
    __swift_project_boxed_opaque_existential_1(v2, v8);
    return (id)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v8, v7);
  }
}

uint64_t sub_1B600DBF0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1B600DC4C(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))
{
  return a1;
}

id ComplexImageProcessor.process(_:imageFromCache:)(uint64_t a1, void *a2)
{
  sub_1B5E176E4(a1, (uint64_t)v7);
  sub_1B600DAD8();
  type metadata accessor for ComplexImageProcessorRequest();
  if (swift_dynamicCast())
  {
    if (*(void *)(v6 + 112)) {
      id v2 = objc_msgSend(a2, sel_imageWithRenderingMode_);
    }
    else {
      id v2 = a2;
    }
    id v4 = v2;
    swift_release();
    return v4;
  }
  else
  {
    return a2;
  }
}

uint64_t ComplexImageProcessor.deinit()
{
  return v0;
}

uint64_t ComplexImageProcessor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

UIImage *sub_1B600DD8C(uint64_t a1)
{
  return ComplexImageProcessor.process(_:)(a1);
}

id sub_1B600DDA4(uint64_t a1, void *a2)
{
  return ComplexImageProcessor.process(_:imageFromCache:)(a1, a2);
}

uint64_t type metadata accessor for ComplexImageProcessor()
{
  return self;
}

uint64_t method lookup function for ComplexImageProcessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ComplexImageProcessor);
}

uint64_t dispatch thunk of ComplexImageProcessor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

id sub_1B600DE50()
{
  id v0 = objc_msgSend(self, sel_sharedApplication);
  return v0;
}

id SceneDelegate.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id SceneDelegate.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SceneDelegate();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for SceneDelegate()
{
  return self;
}

id SceneDelegate.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SceneDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t BlueprintLayoutCollectionRectResult.layoutAttributes.getter()
{
  return sub_1B61B1F70();
}

uint64_t sub_1B600DF7C(uint64_t a1, char a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  *(void *)(v8 + 16) = a1;
  *(double *)(v8 + 24) = a3;
  *(double *)(v8 + 32) = a4;
  *(double *)(v8 + 4sub_1B5E6F544(4, 0, 0) = a5;
  *(double *)(v8 + 48) = a6;
  *(double *)(v8 + 56) = a7;
  *(double *)(v8 + 64) = a8;
  *(unsigned char *)(v8 + 72) = a2;
  return v8;
}

uint64_t BlueprintLayoutCollectionRectResult.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BlueprintLayoutCollectionRectResult.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BlueprintLayoutCollectionRectResult()
{
  return self;
}

uint64_t method lookup function for BlueprintLayoutCollectionRectResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BlueprintLayoutCollectionRectResult);
}

double SectionFooterViewLayoutAttributes.frame.getter()
{
  return *(double *)v0;
}

double SectionFooterViewLayoutAttributes.separatorFrame.getter()
{
  return *(double *)(v0 + 32);
}

double SectionFooterViewLayoutAttributes.buttonFrame.getter()
{
  return *(double *)(v0 + 64);
}

uint64_t SectionFooterViewLayoutAttributes.layoutDirection.getter()
{
  return *(void *)(v0 + 96);
}

void SectionFooterViewLayoutAttributes.kind.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void sub_1B600E064(unsigned char *a1@<X8>)
{
}

void *__swift_memcpy104_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

uint64_t getEnumTagSinglePayload for SectionFooterViewLayoutAttributes(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 104)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SectionFooterViewLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 104) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SectionFooterViewLayoutAttributes()
{
  return &type metadata for SectionFooterViewLayoutAttributes;
}

void CollapsingButton.isCollapsed.setter(char a1)
{
  char v3 = (char *)(v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_isCollapsed);
  swift_beginAccess();
  char v4 = *v3;
  *char v3 = a1;
  sub_1B600E4FC(v4);
}

uint64_t CollapsingButton.configuration.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_configuration;
  swift_beginAccess();
  sub_1B600E5C4(a1, v3);
  swift_endAccess();
  sub_1B600E8C8();
  return sub_1B5EEEF24(a1);
}

id CollapsingButton.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void CollapsingButton.menu.setter(void *a1)
{
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_button), sel_setMenu_, a1);
}

id CollapsingButton.onMenuPresentation.getter()
{
  return objc_retain(*(id *)(*(void *)(v0 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_button)
                           + OBJC_IVAR____TtC5TeaUI12ActionButton_onMenuPresentation));
}

uint64_t sub_1B600E26C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1BA9B1EC0](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1B600E2C8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t CollapsingButton.animationDelegate.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate;
  OUTLINED_FUNCTION_24();
  return MEMORY[0x1BA9B1EC0](v1);
}

uint64_t CollapsingButton.animationDelegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*CollapsingButton.animationDelegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1BA9B1EC0](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  long long v3[3] = v6;
  v3[4] = v7;
  return sub_1B5E638CC;
}

uint64_t CollapsingButton.isCollapsed.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_isCollapsed);
  OUTLINED_FUNCTION_24();
  return *v1;
}

uint64_t sub_1B600E4A8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_isCollapsed);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void sub_1B600E4FC(char a1)
{
  int v2 = a1 & 1;
  uint64_t v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_isCollapsed);
  swift_beginAccess();
  if (*v3 == v2)
  {
    uint64_t v4 = v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate;
    swift_beginAccess();
    if (MEMORY[0x1BA9B1EC0](v4))
    {
      uint64_t v5 = *(void *)(v4 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 56))(v1, ObjectType, v5);
      swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_1B600E658();
  }
}

uint64_t sub_1B600E5C4(uint64_t a1, uint64_t a2)
{
  sub_1B6011238(0, (unint64_t *)&qword_1EB641010, MEMORY[0x1E4FB1290], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_1B600E658()
{
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_isCollapsed);
  swift_beginAccess();
  if (*v1 == 1) {
    sub_1B600F76C();
  }
  else {
    sub_1B600FC6C();
  }
}

void (*CollapsingButton.isCollapsed.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  long long v3[3] = v1;
  uint64_t v4 = (unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_isCollapsed);
  OUTLINED_FUNCTION_24();
  *((unsigned char *)v3 + 32) = *v4;
  return sub_1B600E72C;
}

void sub_1B600E72C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  CollapsingButton.isCollapsed.setter(*(unsigned char *)(*(void *)a1 + 32));
  free(v1);
}

uint64_t CollapsingButton.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_configuration;
  OUTLINED_FUNCTION_24();
  return sub_1B5EEEEA4(v3, a1);
}

uint64_t sub_1B600E7B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_configuration;
  swift_beginAccess();
  return sub_1B5EEEEA4(v3, a2);
}

uint64_t sub_1B600E810(uint64_t a1)
{
  sub_1B6011238(0, (unint64_t *)&qword_1EB641010, MEMORY[0x1E4FB1290], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v6 - v3;
  sub_1B5EEEEA4(a1, (uint64_t)&v6 - v3);
  return CollapsingButton.configuration.setter((uint64_t)v4);
}

uint64_t sub_1B600E8C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1B6011238(0, &qword_1EB640B70, MEMORY[0x1E4F273A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v28[-v4];
  sub_1B6011238(0, (unint64_t *)&unk_1EB640B50, MEMORY[0x1E4FB1040], v2);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v28[-v7];
  sub_1B6011238(0, (unint64_t *)&qword_1EB641010, MEMORY[0x1E4FB1290], v2);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  int v15 = &v28[-v14];
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = &v28[-v16];
  uint64_t v18 = v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_configuration;
  swift_beginAccess();
  sub_1B5EEEEA4(v18, (uint64_t)v17);
  uint64_t v19 = sub_1B61B2F10();
  if (!__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v19))
  {
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1B61B12B0();
    uint64_t v20 = sub_1B61B12A0();
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v20);
    sub_1B61B2ED0();
  }
  swift_beginAccess();
  sub_1B600E5C4((uint64_t)v17, v18);
  swift_endAccess();
  sub_1B5EEEEA4(v18, (uint64_t)v15);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v19))
  {
    uint64_t v21 = sub_1B61AF7B0();
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v21);
    sub_1B61B2EA0();
  }
  uint64_t v22 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_button);
  sub_1B5EEEEA4((uint64_t)v15, (uint64_t)v12);
  sub_1B61B2F30();
  objc_msgSend(v22, sel_intrinsicContentSize);
  uint64_t v25 = (double *)(v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_collapsedSize);
  *uint64_t v25 = ceil(v23);
  v25[1] = ceil(v24);
  uint64_t v26 = (unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_isCollapsed);
  swift_beginAccess();
  if ((*v26 & 1) == 0)
  {
    sub_1B5EEEEA4(v18, (uint64_t)v12);
    sub_1B61B2F30();
  }
  sub_1B5EEEF24((uint64_t)v15);
  return sub_1B5EEEF24((uint64_t)v17);
}

id sub_1B600EC44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = (void *)MEMORY[0x1BA9B1EC0](v2);
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = objc_msgSend(v3, sel_tintColor);

    if (v5) {
      return v5;
    }
  }
  id v7 = objc_msgSend(self, sel_labelColor);
  return v7;
}

uint64_t (*CollapsingButton.configuration.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_3_2();
  return sub_1B600ED3C;
}

uint64_t sub_1B600ED3C(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1B600E8C8();
  }
  return result;
}

id CollapsingButton.menu.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_button), sel_menu);
  return v1;
}

void sub_1B600EDB0(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  CollapsingButton.menu.setter(v1);
}

void (*CollapsingButton.menu.modify(void *a1))(id *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_button);
  a1[1] = v3;
  *a1 = objc_msgSend(v3, sel_menu);
  return sub_1B600EE44;
}

void sub_1B600EE44(id *a1)
{
  id v1 = *a1;
  objc_msgSend(a1[1], sel_setMenu_);
}

uint64_t CollapsingButton.anchor.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_anchor);
  uint64_t result = OUTLINED_FUNCTION_24();
  *a1 = *v3;
  return result;
}

uint64_t CollapsingButton.anchor.setter(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_anchor);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t (*CollapsingButton.anchor.modify())()
{
  return j__swift_endAccess;
}

id sub_1B600EF70()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C58]), sel_initWithMass_stiffness_damping_initialVelocity_, 1.0, 250.0, 28.0, 0.0, 0.0);
  objc_msgSend(v0, sel_settlingDuration);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1ED8]), sel_initWithDuration_timingParameters_, v0, v1);

  return v2;
}

char *CollapsingButton.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_isCollapsed] = 1;
  uint64_t v2 = (uint64_t)&v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_configuration];
  uint64_t v3 = sub_1B61B2F10();
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v3);
  v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_anchor] = 0;
  uint64_t v4 = OBJC_IVAR____TtC5TeaUI16CollapsingButton_button;
  id v5 = objc_allocWithZone((Class)type metadata accessor for ActionButton());
  uint64_t v6 = v0;
  *(void *)&v0[v4] = objc_msgSend(v5, sel_init);
  uint64_t v7 = OBJC_IVAR____TtC5TeaUI16CollapsingButton_animatedTitleLabel;
  *(void *)&v6[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  uint64_t v8 = &v6[OBJC_IVAR____TtC5TeaUI16CollapsingButton_collapsedSize];
  *uint64_t v8 = 0;
  v8[1] = 0;
  v6[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState] = 0;

  v21.receiver = v6;
  v21.super_class = ObjectType;
  uint64_t v9 = (char *)objc_msgSendSuper2(&v21, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v10 = OBJC_IVAR____TtC5TeaUI16CollapsingButton_button;
  uint64_t v11 = *(void **)&v9[OBJC_IVAR____TtC5TeaUI16CollapsingButton_button];
  uint64_t v12 = v9;
  objc_msgSend(v12, sel_addSubview_, v11);
  objc_msgSend(v12, sel_addSubview_, *(void *)&v12[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animatedTitleLabel]);
  objc_msgSend(v12, sel_setClipsToBounds_, 0);
  objc_msgSend(v11, sel_setClipsToBounds_, 1);
  objc_msgSend(v11, sel_setShowsMenuAsPrimaryAction_, 1);
  sub_1B6011238(0, &qword_1EB64A408, (uint64_t (*)(uint64_t))sub_1B5EC3808, MEMORY[0x1E4FBBE00]);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1B61BE690;
  uint64_t v14 = sub_1B61B1040();
  uint64_t v15 = MEMORY[0x1E4FB0EF0];
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 4sub_1B5E6F544(4, 0, 0) = v15;
  *(void *)(swift_allocObject() + 16) = ObjectType;
  uint64_t v16 = v12;
  sub_1B61B2DD0();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  objc_msgSend(*(id *)&v9[v10], sel_setIsAccessibilityElement_, 1);
  objc_msgSend(v16, sel_setShowsLargeContentViewer_, 1);
  id v17 = objc_allocWithZone(MEMORY[0x1E4FB1938]);
  uint64_t v18 = v16;
  id v19 = objc_msgSend(v17, sel_init);
  objc_msgSend(v18, sel_addInteraction_, v19);

  return v18;
}

uint64_t sub_1B600F2EC()
{
  return swift_deallocObject();
}

id sub_1B600F2FC(void *a1)
{
  return objc_msgSend(a1, sel_setNeedsLayout);
}

id CollapsingButton.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void CollapsingButton.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_isCollapsed] = 1;
  uint64_t v1 = (uint64_t)&v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_configuration];
  uint64_t v2 = sub_1B61B2F10();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_anchor] = 0;
  uint64_t v3 = OBJC_IVAR____TtC5TeaUI16CollapsingButton_button;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ActionButton()), sel_init);
  uint64_t v4 = OBJC_IVAR____TtC5TeaUI16CollapsingButton_animatedTitleLabel;
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  id v5 = &v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_collapsedSize];
  *id v5 = 0;
  v5[1] = 0;
  v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState] = 0;

  sub_1B61B34D0();
  __break(1u);
}

Swift::Void __swiftcall CollapsingButton.layoutSubviews()()
{
  v4.receiver = v0;
  v4.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v4, sel_layoutSubviews);
  if (!v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState])
  {
    uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_button];
    objc_msgSend(v1, sel_intrinsicContentSize);
    objc_msgSend(v1, sel_setFrame_, 0.0, 0.0, ceil(v2), ceil(v3));
  }
}

double CollapsingButton.intrinsicContentSize.getter()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState)) {
    return *(double *)(v0 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_collapsedSize);
  }
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_button), sel_intrinsicContentSize);
  return ceil(v2);
}

Swift::Void __swiftcall CollapsingButton.didMoveToWindow()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v2, sel_didMoveToWindow);
  id v1 = objc_msgSend(v0, sel_window);

  if (v1) {
    objc_msgSend(v0, sel_sizeToFit);
  }
}

void sub_1B600F76C()
{
  id v1 = v0;
  v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState] = 1;
  objc_msgSend(v0, sel_sizeToFit);
  objc_msgSend(v0, sel_invalidateIntrinsicContentSize);
  objc_super v2 = &v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate];
  swift_beginAccess();
  if (MEMORY[0x1BA9B1EC0](v2))
  {
    uint64_t v3 = *((void *)v2 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 8))(v0, ObjectType, v3);
    swift_unknownObjectRelease();
  }
  id v5 = *(void **)&v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_button];
  id v6 = objc_msgSend(v5, sel_titleLabel);
  if (v6)
  {
    uint64_t v7 = v6;
    objc_msgSend(v6, sel_frame);
    double v9 = v8;
    double MinY = v10;
    double v13 = v12;
    double v15 = v14;
  }
  else
  {
    double v13 = 0.0;
    double v15 = 0.0;
    double v9 = 0.0;
    double MinY = 0.0;
  }
  uint64_t v16 = &v1[OBJC_IVAR____TtC5TeaUI16CollapsingButton_anchor];
  swift_beginAccess();
  if (*v16)
  {
    double v17 = *(double *)&v1[OBJC_IVAR____TtC5TeaUI16CollapsingButton_collapsedSize];
    objc_msgSend(v5, sel_intrinsicContentSize);
    double v19 = v17 - ceil(v18);
    objc_msgSend(v5, sel_intrinsicContentSize);
    objc_msgSend(v5, sel_setFrame_, v19, 0.0, ceil(v20), ceil(v21));
    uint64_t v22 = *(void **)&v1[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animatedTitleLabel];
    objc_msgSend(v5, sel_frame);
    double MinX = CGRectGetMinX(v53);
    v54.origin.double x = v9;
    v54.origin.double y = MinY;
    v54.size.CGFloat width = v13;
    v54.size.CGFloat height = v15;
    double v24 = MinX + CGRectGetMinX(v54);
    v55.origin.double x = v9;
    v55.origin.double y = MinY;
    v55.size.CGFloat width = v13;
    v55.size.CGFloat height = v15;
    double MinY = CGRectGetMinY(v55);
    double v9 = v24;
  }
  else
  {
    uint64_t v22 = *(void **)&v1[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animatedTitleLabel];
  }
  objc_msgSend(v22, sel_setFrame_, v9, MinY, v13, v15);
  id v25 = objc_msgSend(v5, sel_titleLabel);
  id v26 = objc_msgSend(v25, sel_attributedText);

  objc_msgSend(v22, sel_setAttributedText_, v26);
  objc_msgSend(v22, sel_setAlpha_, 1.0);
  uint64_t v27 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  id v28 = objc_allocWithZone(MEMORY[0x1E4FB1ED8]);
  CGFloat MaxX = 0.0;
  id v30 = sub_1B602A3FC((uint64_t)sub_1B6011314, v27, 0.12, 0.33, 0.0, 0.83, 1.0);
  objc_msgSend(v30, sel_startAnimation);
  id v31 = objc_msgSend(v5, sel_imageView);
  if (v31)
  {
    double v32 = v31;
    objc_msgSend(v31, sel_frame);
    CGFloat v34 = v33;
    CGFloat v36 = v35;
    CGFloat v38 = v37;
    CGFloat v40 = v39;

    v56.origin.double x = v34;
    v56.origin.double y = v36;
    v56.size.CGFloat width = v38;
    v56.size.CGFloat height = v40;
    CGFloat MaxX = CGRectGetMaxX(v56);
  }
  id v41 = sub_1B600EF70();
  uint64_t v42 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v42;
  *(CGFloat *)(v43 + 24) = MaxX;
  uint64_t v51 = sub_1B601136C;
  uint64_t v52 = v43;
  uint64_t v47 = MEMORY[0x1E4F143A8];
  uint64_t v48 = 1107296256;
  int v49 = sub_1B5E3729C;
  CGRect v50 = &block_descriptor_51;
  id v44 = _Block_copy(&v47);
  swift_release();
  objc_msgSend(v41, sel_addAnimations_, v44);
  _Block_release(v44);
  uint64_t v45 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v51 = sub_1B6011378;
  uint64_t v52 = v45;
  uint64_t v47 = MEMORY[0x1E4F143A8];
  uint64_t v48 = 1107296256;
  int v49 = sub_1B5F83DD0;
  CGRect v50 = &block_descriptor_32_0;
  CGRect v46 = _Block_copy(&v47);
  swift_release();
  objc_msgSend(v41, sel_addCompletion_, v46);
  _Block_release(v46);
  objc_msgSend(v41, sel_startAnimation);
}

void sub_1B600FC6C()
{
  id v1 = v0;
  v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState] = 2;
  objc_super v2 = &v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate];
  swift_beginAccess();
  if (MEMORY[0x1BA9B1EC0](v2))
  {
    uint64_t v3 = *((void *)v2 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v0, ObjectType, v3);
    swift_unknownObjectRelease();
  }
  id v5 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5TeaUI16CollapsingButton_button], sel_titleLabel);
  if (v5)
  {
    id v6 = v5;
    objc_msgSend(v5, sel_setAlpha_, 0.0);
  }
  id v7 = objc_msgSend(v1, sel_tintColor);
  if (v7)
  {
    double v8 = v7;
    double v9 = *(void **)&v1[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animatedTitleLabel];
    id v10 = objc_msgSend(v9, sel_attributedText);
    if (v10)
    {
      uint64_t v11 = v10;
      id v25 = (void *)sub_1B5E44E58();
      uint64_t aBlock = v8;
      id v12 = v8;
      double v13 = (void *)sub_1B61B2CB0();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
    }
    else
    {
      double v13 = 0;
    }
    objc_msgSend(v9, sel_setAttributedText_, v13);
  }
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  id v15 = objc_allocWithZone(MEMORY[0x1E4FB1ED8]);
  id v16 = sub_1B602A3FC((uint64_t)sub_1B6011380, v14, 0.15, 0.33, 0.0, 0.83, 1.0);
  objc_msgSend(v16, sel_startAnimationAfterDelay_, 0.083);
  id v17 = sub_1B600EF70();
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v26 = sub_1B60113A0;
  uint64_t v27 = v18;
  uint64_t aBlock = (void *)MEMORY[0x1E4F143A8];
  uint64_t v23 = 1107296256;
  double v24 = sub_1B5E3729C;
  id v25 = &block_descriptor_37_0;
  double v19 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v17, sel_addAnimations_, v19);
  _Block_release(v19);
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v26 = sub_1B60113A8;
  uint64_t v27 = v20;
  uint64_t aBlock = (void *)MEMORY[0x1E4F143A8];
  uint64_t v23 = 1107296256;
  double v24 = sub_1B5F83DD0;
  id v25 = &block_descriptor_41_1;
  double v21 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v17, sel_addCompletion_, v21);
  _Block_release(v21);
  objc_msgSend(v17, sel_startAnimation);
}

uint64_t sub_1B6010004(uint64_t a1, double a2)
{
  objc_super v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1B6011238(0, &qword_1EB640B70, MEMORY[0x1E4F273A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = &v52[-v6];
  sub_1B6011238(0, (unint64_t *)&qword_1EB641010, MEMORY[0x1E4FB1290], v4);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = &v52[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9);
  double v13 = &v52[-v12];
  swift_beginAccess();
  uint64_t result = MEMORY[0x1BA9B1EC0](a1 + 16);
  if (result)
  {
    id v15 = (char *)result;
    uint64_t v16 = result + OBJC_IVAR____TtC5TeaUI16CollapsingButton_configuration;
    swift_beginAccess();
    sub_1B5EEEEA4(v16, (uint64_t)v13);
    uint64_t v17 = sub_1B61B2F10();
    if (!__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v17))
    {
      uint64_t v18 = sub_1B61AF7B0();
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v18);
      sub_1B61B2EA0();
    }
    uint64_t v19 = OBJC_IVAR____TtC5TeaUI16CollapsingButton_button;
    uint64_t v20 = *(void **)&v15[OBJC_IVAR____TtC5TeaUI16CollapsingButton_button];
    sub_1B5EEEEA4((uint64_t)v13, (uint64_t)v11);
    id v21 = v20;
    sub_1B61B2F30();

    uint64_t v22 = &v15[OBJC_IVAR____TtC5TeaUI16CollapsingButton_anchor];
    swift_beginAccess();
    char v23 = *v22;
    id v24 = *(id *)&v15[v19];
    id v25 = v24;
    if (v23)
    {
      objc_msgSend(v24, sel_intrinsicContentSize);
      objc_msgSend(v25, sel_setFrame_, 0.0, 0.0, ceil(v26), ceil(v27));
    }
    else
    {
      objc_msgSend(v24, sel_frame);
      double v29 = v28;
      double v31 = v30;
      objc_msgSend(v25, sel_intrinsicContentSize);
      objc_msgSend(v25, sel_setFrame_, v29, v31, ceil(v32), ceil(v33));

      id v34 = objc_msgSend(*(id *)&v15[v19], sel_imageView);
      if (v34)
      {
        double v35 = v34;
        objc_msgSend(v34, sel_frame);
        CGFloat v37 = v36;
        CGFloat v39 = v38;
        CGFloat v41 = v40;
        CGFloat v43 = v42;

        v53.origin.double x = v37;
        v53.origin.double y = v39;
        v53.size.CGFloat width = v41;
        v53.size.CGFloat height = v43;
        double MaxX = CGRectGetMaxX(v53);
      }
      else
      {
        double MaxX = 0.0;
      }
      id v25 = *(id *)&v15[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animatedTitleLabel];
      objc_msgSend(v25, sel_frame);
      objc_msgSend(v25, sel_setFrame_, MaxX - a2 + v45, v46, v47, v48);
    }

    int v49 = &v15[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate];
    swift_beginAccess();
    if (MEMORY[0x1BA9B1EC0](v49))
    {
      uint64_t v50 = *((void *)v49 + 1);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v15, ObjectType, v50);

      swift_unknownObjectRelease();
    }
    else
    {
    }
    return sub_1B5EEEF24((uint64_t)v13);
  }
  return result;
}

void sub_1B60103C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = (char *)MEMORY[0x1BA9B1EC0](v2);
  if (v3)
  {
    objc_super v4 = v3;
    uint64_t v5 = OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState;
    int v6 = v3[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState];
    if (v6 == 1) {
      LOBYTE(v6) = 0;
    }
    v3[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState] = v6;
    objc_msgSend(v3, sel_sizeToFit);
    objc_msgSend(v4, sel_invalidateIntrinsicContentSize);
    if (v4[v5]
      || (id v7 = &v4[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate],
          swift_beginAccess(),
          !MEMORY[0x1BA9B1EC0](v7)))
    {
    }
    else
    {
      uint64_t v8 = *((void *)v7 + 1);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 24))(v4, ObjectType, v8);

      swift_unknownObjectRelease();
    }
  }
}

void sub_1B60104C0(double a1)
{
  uint64_t Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  id v3 = *(id *)&Strong[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animatedTitleLabel];

  objc_msgSend(v3, sel_setAlpha_, a1);
}

void sub_1B601053C(uint64_t a1)
{
  sub_1B6011238(0, (unint64_t *)&qword_1EB641010, MEMORY[0x1E4FB1290], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  objc_super v4 = &v39[-v3];
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x1BA9B1EC0](a1 + 16);
  if (v5)
  {
    int v6 = (char *)v5;
    uint64_t v7 = OBJC_IVAR____TtC5TeaUI16CollapsingButton_button;
    uint64_t v8 = *(void **)(v5 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_button);
    uint64_t v9 = v5 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_configuration;
    swift_beginAccess();
    sub_1B5EEEEA4(v9, (uint64_t)v4);
    id v10 = v8;
    sub_1B61B2F30();

    id v11 = objc_msgSend(*(id *)&v6[v7], sel_titleLabel);
    if (v11)
    {
      uint64_t v12 = v11;
      objc_msgSend(v11, sel_frame);
      double v14 = v13;
      double v16 = v15;
      double v18 = v17;
      double v20 = v19;
    }
    else
    {
      double v18 = 0.0;
      double v20 = 0.0;
      double v14 = 0.0;
      double v16 = 0.0;
    }
    id v21 = &v6[OBJC_IVAR____TtC5TeaUI16CollapsingButton_anchor];
    swift_beginAccess();
    uint64_t v22 = *(void **)&v6[v7];
    if (*v21)
    {
      double v23 = *(double *)&v6[OBJC_IVAR____TtC5TeaUI16CollapsingButton_collapsedSize];
      id v24 = v22;
      objc_msgSend(v24, sel_intrinsicContentSize);
      double v26 = v23 - ceil(v25);
      objc_msgSend(v24, sel_intrinsicContentSize);
      objc_msgSend(v24, sel_setFrame_, v26, 0.0, ceil(v27), ceil(v28));

      double v29 = *(void **)&v6[v7];
      id v30 = *(id *)&v6[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animatedTitleLabel];
      objc_msgSend(v29, sel_frame);
      double MinX = CGRectGetMinX(v40);
      v41.origin.double x = v14;
      v41.origin.double y = v16;
      v41.size.CGFloat width = v18;
      v41.size.CGFloat height = v20;
      double v32 = MinX + CGRectGetMinX(v41);
      v42.origin.double x = v14;
      v42.origin.double y = v16;
      v42.size.CGFloat width = v18;
      v42.size.CGFloat height = v20;
      objc_msgSend(v30, sel_setFrame_, v32, CGRectGetMinY(v42), v18, v20);
    }
    else
    {
      id v33 = v22;
      objc_msgSend(v33, sel_intrinsicContentSize);
      objc_msgSend(v33, sel_setFrame_, 0.0, 0.0, ceil(v34), ceil(v35));

      objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animatedTitleLabel], sel_setFrame_, v14, v16, v18, v20);
    }
    double v36 = &v6[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate];
    swift_beginAccess();
    if (MEMORY[0x1BA9B1EC0](v36))
    {
      uint64_t v37 = *((void *)v36 + 1);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 40))(v6, ObjectType, v37);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void sub_1B6010890(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1BA9B1EC0](v2);
  if (v3)
  {
    objc_super v4 = (unsigned char *)v3;
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_animatedTitleLabel), sel_setAlpha_, 0.0);
    id v5 = objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC5TeaUI16CollapsingButton_button], sel_titleLabel);
    if (v5)
    {
      int v6 = v5;
      objc_msgSend(v5, sel_setAlpha_, 1.0);
    }
    uint64_t v7 = OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState;
    int v8 = v4[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState];
    if (v8 == 2) {
      LOBYTE(v8) = 0;
    }
    v4[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationState] = v8;
    objc_msgSend(v4, sel_sizeToFit);
    objc_msgSend(v4, sel_invalidateIntrinsicContentSize);
    if (v4[v7]
      || (uint64_t v9 = &v4[OBJC_IVAR____TtC5TeaUI16CollapsingButton_animationDelegate],
          swift_beginAccess(),
          !MEMORY[0x1BA9B1EC0](v9)))
    {
    }
    else
    {
      uint64_t v10 = *((void *)v9 + 1);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v4, ObjectType, v10);

      swift_unknownObjectRelease();
    }
  }
}

BOOL static CollapsingButton.Anchor.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CollapsingButton.Anchor.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t CollapsingButton.Anchor.hashValue.getter()
{
  return sub_1B61B3940();
}

id CollapsingButton.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void CollapsingButton.init(frame:)()
{
}

id CollapsingButton.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id CollapsingButton.isAccessibilityElement.getter()
{
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_button), sel_isAccessibilityElement);
}

uint64_t (*CollapsingButton.isAccessibilityElement.modify(unsigned char *a1))(void, void, void, void, double)
{
  *a1 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5TeaUI16CollapsingButton_button), sel_isAccessibilityElement);
  return nullsub_1;
}

unint64_t CollapsingButton.accessibilityTraits.getter()
{
  v4.receiver = v0;
  v4.super_class = (Class)swift_getObjectType();
  unint64_t v1 = (unint64_t)objc_msgSendSuper2(&v4, sel_accessibilityTraits);
  uint64_t v2 = *MEMORY[0x1E4FB2540];
  if ((*MEMORY[0x1E4FB2540] & ~v1) == 0) {
    uint64_t v2 = 0;
  }
  return v2 | v1;
}

uint64_t (*CollapsingButton.accessibilityTraits.modify(unint64_t *a1))(void, void, void, void, double)
{
  *a1 = CollapsingButton.accessibilityTraits.getter();
  return nullsub_1;
}

unint64_t sub_1B6010D58()
{
  unint64_t result = qword_1E9DAB650;
  if (!qword_1E9DAB650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB650);
  }
  return result;
}

void sub_1B6010DB0(char *a1)
{
}

id sub_1B6010DE0@<X0>(void *a1@<X8>)
{
  id result = CollapsingButton.menu.getter();
  *a1 = result;
  return result;
}

uint64_t dispatch thunk of CollapsingButtonAnimationDelegate.collapsingButtonWillCollapse(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of CollapsingButtonAnimationDelegate.collapsingButtonAnimateAlongsideCollapse(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of CollapsingButtonAnimationDelegate.collapsingButtonDidCollapse(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of CollapsingButtonAnimationDelegate.collapsingButtonWillExpand(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of CollapsingButtonAnimationDelegate.collapsingButtonAnimateAlongsideExpand(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of CollapsingButtonAnimationDelegate.collapsingButtonDidExpand(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of CollapsingButtonAnimationDelegate.collapsingButtonIgnoredStateChange(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_1B6010E9C()
{
  return type metadata accessor for CollapsingButton();
}

uint64_t type metadata accessor for CollapsingButton()
{
  uint64_t result = qword_1EB640C68;
  if (!qword_1EB640C68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1B6010EEC()
{
  sub_1B6011238(319, (unint64_t *)&qword_1EB641010, MEMORY[0x1E4FB1290], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unsigned char *storeEnumTagSinglePayload for CollapsingButton.Anchor(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B60110ACLL);
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CollapsingButton.Anchor()
{
  return &type metadata for CollapsingButton.Anchor;
}

unsigned char *storeEnumTagSinglePayload for CollapsingButton.AnimationState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B60111B0);
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CollapsingButton.AnimationState()
{
  return &type metadata for CollapsingButton.AnimationState;
}

unint64_t sub_1B60111EC()
{
  unint64_t result = qword_1E9DAB658;
  if (!qword_1E9DAB658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB658);
  }
  return result;
}

void sub_1B6011238(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1B601129C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

id sub_1B60112D4(uint64_t a1)
{
  return sub_1B600EC44(a1, v1);
}

uint64_t sub_1B60112DC()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

void sub_1B6011314()
{
}

uint64_t sub_1B6011334()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B601136C()
{
  return sub_1B6010004(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

void sub_1B6011378(uint64_t a1)
{
  sub_1B60103C4(a1, v1);
}

void sub_1B6011380()
{
}

void sub_1B60113A0()
{
  sub_1B601053C(v0);
}

void sub_1B60113A8(uint64_t a1)
{
  sub_1B6010890(a1, v1);
}

uint64_t static String.renderingView.getter()
{
  return 0x6E697265646E6552;
}

uint64_t sub_1B60113F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B6011EBC();
  uint64_t result = sub_1B61B02B0();
  if (result)
  {
    unsigned int v4 = (void *)result;
    uint64_t v5 = (objc_class *)type metadata accessor for RendererEnvironment();
    id v6 = objc_allocWithZone(v5);
    uint64_t result = (uint64_t)RendererEnvironment.init(scrollView:testing:)(v4, 0);
    a2[3] = (uint64_t)v5;
    a2[4] = (uint64_t)&protocol witness table for RendererEnvironment;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B60114A4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B6011EBC();
  uint64_t result = sub_1B61B02B0();
  if (result)
  {
    unsigned int v4 = (void *)result;
    uint64_t v5 = (objc_class *)type metadata accessor for RendererEnvironment();
    id v6 = objc_allocWithZone(v5);
    uint64_t result = (uint64_t)RendererEnvironment.init(scrollView:testing:)(v4, 1);
    a2[3] = (uint64_t)v5;
    a2[4] = (uint64_t)&protocol witness table for RendererEnvironment;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B6011554(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5E001A8(0, &qword_1EB64C350);
  uint64_t result = sub_1B61B02F0();
  if (v4)
  {
    type metadata accessor for ShineImageRendererPipelineProcessor();
    uint64_t v2 = swift_allocObject();
    sub_1B5E30E70(&v3, v2 + 16);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B60115F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5E001A8(0, &qword_1EB64CF78);
  uint64_t result = sub_1B61B02F0();
  if (v10)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1B5E001A8(0, &qword_1EB64CF80);
    uint64_t result = sub_1B61B02F0();
    if (v8)
    {
      uint64_t v5 = type metadata accessor for PillViewRenderer();
      uint64_t v6 = swift_allocObject();
      sub_1B5E30E70(&v9, v6 + 16);
      uint64_t result = sub_1B5E30E70(&v7, v6 + 56);
      a2[3] = v5;
      a2[4] = (uint64_t)&protocol witness table for PillViewRenderer;
      *a2 = v6;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B6011710@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5E001A8(0, &qword_1EB64CF68);
  uint64_t result = sub_1B61B02C0();
  if (v10)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1B5E001A8(0, &qword_1EB64CF90);
    uint64_t result = sub_1B61B02F0();
    if (v7)
    {
      uint64_t v5 = type metadata accessor for PillViewImageRenderer();
      uint64_t v6 = swift_allocObject();
      uint64_t result = sub_1B5E30E70(&v9, v6 + 16);
      *(void *)(v6 + 56) = v7;
      *(void *)(v6 + 64) = v8;
      a2[3] = v5;
      a2[4] = (uint64_t)&protocol witness table for PillViewImageRenderer;
      *a2 = v6;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B6011838@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for PillViewImageRequestFactory();
  uint64_t result = swift_allocObject();
  *a1 = result;
  a1[1] = (uint64_t)&protocol witness table for PillViewImageRequestFactory;
  return result;
}

uint64_t sub_1B6011878@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5E001A8(0, &qword_1EB64CF88);
  uint64_t result = sub_1B61B02F0();
  if (v7)
  {
    uint64_t v4 = type metadata accessor for PillViewStyler();
    uint64_t v5 = swift_allocObject();
    uint64_t result = sub_1B5E30E70(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&protocol witness table for PillViewStyler;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B601192C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B5E001A8(0, &qword_1EB64CF78);
  uint64_t result = sub_1B61B02F0();
  if (v7)
  {
    uint64_t v4 = type metadata accessor for PillViewLayoutAttributesFactory();
    uint64_t v5 = swift_allocObject();
    uint64_t result = sub_1B5E30E70(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_1F0F22418;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1B60119E0@<X0>(void *a1@<X8>)
{
  if (qword_1E9DA7FD0 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1E9DAC838;
  long long v3 = (void *)unk_1E9DAC840;
  uint64_t v4 = (void *)qword_1E9DAC848;
  id v10 = (id)unk_1E9DAC850;
  a1[3] = &type metadata for PillViewColorPalette;
  a1[4] = &protocol witness table for PillViewColorPalette;
  uint64_t v5 = (void *)swift_allocObject();
  *a1 = v5;
  void v5[2] = v2;
  _OWORD v5[3] = v3;
  void v5[4] = v4;
  v5[5] = v10;
  id v6 = v2;
  id v7 = v3;
  id v8 = v4;
  return v10;
}

void sub_1B6011AAC(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B6011E14();
  uint64_t v3 = sub_1B61B02E0();
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = type metadata accessor for ImageCache();
    uint64_t v6 = type metadata accessor for ImageProcessor();
    uint64_t v7 = swift_allocObject();
    uint64_t v8 = type metadata accessor for ImageDownloader();
    uint64_t v9 = swift_allocObject();
    uint64_t ObjectType = swift_getObjectType();
    sub_1B5EB5C94(v4, (uint64_t)var48, (uint64_t)&v13, v5, ObjectType, v8, v6, (uint64_t)&protocol witness table for ImageDownloader, (uint64_t)&protocol witness table for ImageProcessor, v12, v9, v7, var48[1], var48[2], var48[3], var48[4], var48[5], var48[6], var48[7],
      var48[8],
      var48[9]);
    a2[3] = v5;
    a2[4] = &protocol witness table for ImageCache;
    *a2 = v11;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B6011BB4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1B6011C3C(a1, (uint64_t (*)(void))type metadata accessor for SectionFooterViewRenderer, (uint64_t)&protocol witness table for SectionFooterViewRenderer, a2);
}

uint64_t sub_1B6011BD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SectionFooterViewStyler();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1F0F05760;
  *a1 = result;
  return result;
}

uint64_t sub_1B6011C1C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1B6011C3C(a1, (uint64_t (*)(void))type metadata accessor for SectionFooterViewLayoutAttributesFactory, (uint64_t)&protocol witness table for SectionFooterViewLayoutAttributesFactory, a2);
}

uint64_t sub_1B6011C3C@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = (uint64_t *)a1[4];
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_46_1((uint64_t)v8, &qword_1EB64C738);
  uint64_t result = sub_1B61B02F0();
  if (v23)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
    OUTLINED_FUNCTION_0_13();
    MEMORY[0x1F4188790](v10);
    uint64_t v12 = (void *)((char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v13 + 16))(v12);
    uint64_t v14 = *v12;
    uint64_t v15 = type metadata accessor for SectionFooterViewStyler();
    _OWORD v21[3] = v15;
    v21[4] = &off_1F0F05760;
    v21[0] = v14;
    uint64_t v16 = a2(0);
    double v17 = (void *)swift_allocObject();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v15);
    OUTLINED_FUNCTION_0_13();
    MEMORY[0x1F4188790](v18);
    OUTLINED_FUNCTION_5_8();
    (*(void (**)(uint64_t *))(v19 + 16))(v7);
    uint64_t v20 = *v7;
    void v17[5] = v15;
    v17[6] = &off_1F0F05760;
    long long v17[2] = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    a4[3] = v16;
    a4[4] = a3;
    *a4 = v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1B6011E14()
{
  unint64_t result = qword_1EB640AE8;
  if (!qword_1EB640AE8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB640AE8);
  }
  return result;
}

uint64_t sub_1B6011E6C()
{
  return swift_deallocObject();
}

unint64_t sub_1B6011EBC()
{
  unint64_t result = qword_1EB647B90;
  if (!qword_1EB647B90)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB647B90);
  }
  return result;
}

uint64_t dispatch thunk of MotionManagerObserver.motionManager(_:didUpdateMotionData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of MotionManagerObserver.motionManager(_:motionEnabled:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

void *sub_1B6011F24(void *a1)
{
  uint64_t v2 = a1;
  if (a1)
  {
    uint64_t v3 = MEMORY[0x1BA9B1EC0](v1 + 32);
    if (v3)
    {
      uint64_t v4 = (void *)v3;
      id v5 = v2;
      id v6 = objc_msgSend(v4, sel_window);

      if (v6)
      {
        id v7 = objc_msgSend(v6, sel_windowScene);

        if (v7)
        {
          type metadata accessor for MotionData();
          id v8 = objc_msgSend(self, sel_currentDevice);
          id v9 = objc_msgSend(v8, sel_orientation);

          uint64_t v2 = (void *)sub_1B5FBFDC0(v5, (uint64_t)v9, (uint64_t)objc_msgSend(v7, sel_interfaceOrientation));
          return v2;
        }
      }
    }
    return 0;
  }
  return v2;
}

uint64_t sub_1B6012034(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1BA9B1EC0](v2 + 16);
  if (result)
  {
    uint64_t v6 = *(void *)(v2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B60120D0(uint64_t a1, char a2)
{
  uint64_t result = MEMORY[0x1BA9B1EC0](v2 + 16);
  if (result)
  {
    uint64_t v6 = *(void *)(v2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 16))(a1, a2 & 1, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B601216C()
{
  sub_1B5E437C4(v0 + 16);
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MotionManagerObserverProxy()
{
  return self;
}

uint64_t sub_1B60121D8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(a3 + 24) = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)(a3 + 24) = a5;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  swift_unknownObjectWeakAssign();

  return a3;
}

void sub_1B6012264()
{
  id v0 = objc_msgSend(self, sel_labelColor);
  id v1 = objc_msgSend(v0, sel_colorWithAlphaComponent_, 0.5);

  qword_1E9DAB660 = (uint64_t)v1;
}

uint64_t sub_1B60122CC()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
  objc_msgSend(v0, sel_setAlignment_, 1);
  objc_msgSend(v0, sel_setLineBreakMode_, 0);
  sub_1B5EE8150();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B61C0140;
  uint64_t v2 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB0700];
  uint64_t v3 = qword_1E9DA7F38;
  id v4 = v2;
  if (v3 != -1) {
    swift_once();
  }
  id v5 = (void *)qword_1E9DAB660;
  uint64_t v6 = sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C90);
  *(void *)(inited + 4sub_1B5E6F544(4, 0, 0) = v5;
  id v7 = (void *)*MEMORY[0x1E4FB0738];
  *(void *)(inited + 64) = v6;
  *(void *)(inited + 72) = v7;
  uint64_t v8 = sub_1B5DFF760(0, &qword_1EB64B698);
  *(void *)(inited + 8sub_1B5E6F544(4, 0, 0) = v0;
  id v9 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 104) = v8;
  *(void *)(inited + 112) = v9;
  uint64_t v10 = self;
  double v11 = *MEMORY[0x1E4FB09E0];
  id v12 = v5;
  id v13 = v7;
  id v14 = v0;
  id v15 = v9;
  id v16 = objc_msgSend(v10, sel_systemFontOfSize_weight_, 22.0, v11);
  *(void *)(inited + 144) = sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C68);
  *(void *)(inited + 12sub_1B5E6F544(4, 0, 0) = v16;
  type metadata accessor for Key(0);
  sub_1B5EE81A8();
  uint64_t v17 = sub_1B61B1F50();

  return v17;
}

uint64_t sub_1B60124C0()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
  objc_msgSend(v0, sel_setAlignment_, 1);
  objc_msgSend(v0, sel_setLineBreakMode_, 0);
  sub_1B5EE8150();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B61C0140;
  uint64_t v2 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB0700];
  uint64_t v3 = qword_1E9DA7F38;
  id v4 = v2;
  if (v3 != -1) {
    swift_once();
  }
  id v5 = (void *)qword_1E9DAB660;
  uint64_t v6 = sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C90);
  *(void *)(inited + 4sub_1B5E6F544(4, 0, 0) = v5;
  id v7 = (void *)*MEMORY[0x1E4FB0738];
  *(void *)(inited + 64) = v6;
  *(void *)(inited + 72) = v7;
  uint64_t v8 = sub_1B5DFF760(0, &qword_1EB64B698);
  *(void *)(inited + 8sub_1B5E6F544(4, 0, 0) = v0;
  id v9 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 104) = v8;
  *(void *)(inited + 112) = v9;
  uint64_t v10 = self;
  id v11 = v5;
  id v12 = v7;
  id v13 = v0;
  id v14 = v9;
  id v15 = objc_msgSend(v10, sel_systemFontOfSize_, 16.0);
  *(void *)(inited + 144) = sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C68);
  *(void *)(inited + 12sub_1B5E6F544(4, 0, 0) = v15;
  type metadata accessor for Key(0);
  sub_1B5EE81A8();
  uint64_t v16 = sub_1B61B1F50();

  return v16;
}

id sub_1B601269C(void *a1)
{
  id v2 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v2, sel_setCornerRadius_, 9.0);

  id v3 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v3, sel_setMasksToBounds_, 1);

  id v4 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(a1, sel_setBackgroundColor_, v4);

  return objc_msgSend(a1, sel_setOpaque_, 0);
}

id sub_1B6012778(id a1)
{
  if (qword_1E9DA7F38 != -1) {
    swift_once();
  }
  objc_msgSend(a1, sel_setTintColor_, qword_1E9DAB660);
  id v2 = objc_msgSend(a1, sel_traitCollection);
  id v3 = objc_msgSend(v2, sel_userInterfaceStyle);

  id v4 = &selRef_ts_setPlusDCompositingFilter;
  if (v3 != (id)2) {
    id v4 = &selRef_ts_setPlusLCompositingFilter;
  }
  id v5 = *v4;
  return [a1 v5];
}

uint64_t type metadata accessor for OverlayAlertStyler()
{
  return self;
}

UIImageSymbolScale __swiftcall UIImageSymbolScale.capped(contentSizeCategory:)(__C::UIContentSizeCategory contentSizeCategory)
{
  if ((unint64_t)(v1 + 1) >= 2)
  {
    UIImageSymbolScale v2 = v1;
    if (v1 == UIImageSymbolScaleSmall) {
      return v2;
    }
  }
  else
  {
    UIImageSymbolScale v2 = UIImageSymbolScaleMedium;
  }
  if ((sub_1B61B2D00() & 1) == 0) {
    return v2;
  }
  if (sub_1B61B2D10())
  {
    UIImageSymbolScale v3 = UIImageSymbolScaleSmall;
  }
  else
  {
    char v5 = sub_1B61B2D10();
    UIImageSymbolScale v3 = UIImageSymbolScaleMedium;
    if ((v5 & 1) == 0) {
      UIImageSymbolScale v3 = UIImageSymbolScaleLarge;
    }
  }
  if (v3 >= v2) {
    return v2;
  }
  else {
    return v3;
  }
}

uint64_t dispatch thunk of AppEntityAnnotationProviding.appEntity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1B601291C(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v6)
  {
    OUTLINED_FUNCTION_2_89();
    uint64_t v8 = sub_1B61B0AC0();
    OUTLINED_FUNCTION_3(v8);
    uint64_t v10 = v4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v12 = *(void *)(v11 + 72);
    while (1)
    {
      OUTLINED_FUNCTION_3_74();
      a1();
      if (v3) {
        break;
      }
      sub_1B61B3370();
      OUTLINED_FUNCTION_4_73();
      sub_1B61B33C0();
      sub_1B61B3380();
      v10 += v12;
      if (!--v6) {
        return v13;
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6012A18(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6012A70(a1, a2, a3, a4, MEMORY[0x1E4FAAFC8]);
}

uint64_t sub_1B6012A44(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B6012A70(a1, a2, a3, a4, type metadata accessor for BlueprintViewAction);
}

uint64_t sub_1B6012A70(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v8)
  {
    OUTLINED_FUNCTION_2_89();
    uint64_t v11 = a5(0);
    OUTLINED_FUNCTION_3(v11);
    uint64_t v13 = v6 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v15 = *(void *)(v14 + 72);
    while (1)
    {
      OUTLINED_FUNCTION_3_74();
      a1();
      if (v5) {
        break;
      }
      sub_1B61B3370();
      OUTLINED_FUNCTION_4_73();
      sub_1B61B33C0();
      sub_1B61B3380();
      v13 += v15;
      if (!--v8) {
        return v16;
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1B6012B70(void (*a1)(long long *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v50 = MEMORY[0x1E4FBC860];
    sub_1B5E4EDA0();
    uint64_t result = v50;
    uint64_t v8 = (long long *)(a3 + 72);
    while (1)
    {
      uint64_t v30 = result;
      uint64_t v26 = v5;
      uint64_t v9 = *((void *)v8 + 2);
      char v10 = *((unsigned char *)v8 + 24);
      char v11 = *((unsigned char *)v8 + 25);
      uint64_t v12 = *((void *)v8 + 4);
      uint64_t v13 = *((void *)v8 + 7);
      uint64_t v32 = *((void *)v8 - 5);
      long long v27 = *(v8 - 1);
      long long v33 = *(v8 - 2);
      long long v34 = v27;
      long long v35 = *v8;
      uint64_t v36 = v9;
      char v37 = v10;
      char v38 = v11;
      uint64_t v39 = v12;
      long long v40 = *(long long *)((char *)v8 + 40);
      uint64_t v41 = v13;
      sub_1B61B1F70();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      a1(&v42, &v32);
      if (v4) {
        break;
      }
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      long long v14 = v42;
      char v15 = v43;
      char v16 = v44;
      uint64_t v17 = v45;
      uint64_t v18 = v46;
      uint64_t v19 = v47;
      long long v20 = v48;
      uint64_t v21 = v49;
      uint64_t result = v30;
      unint64_t v23 = *(void *)(v30 + 16);
      unint64_t v22 = *(void *)(v30 + 24);
      uint64_t v50 = v30;
      if (v23 >= v22 >> 1)
      {
        long long v31 = v42;
        long long v29 = v48;
        char v28 = v43;
        sub_1B5E4EDA0();
        char v15 = v28;
        long long v20 = v29;
        long long v14 = v31;
        uint64_t result = v50;
      }
      *(void *)(result + 16) = v23 + 1;
      uint64_t v24 = result + 72 * v23;
      *(_OWORD *)(v24 + 32) = v14;
      *(unsigned char *)(v24 + 48) = v15;
      *(unsigned char *)(v24 + 49) = v16;
      *(void *)(v24 + 56) = v17;
      *(void *)(v24 + 64) = v18;
      *(void *)(v24 + 72) = v19;
      *(_OWORD *)(v24 + 8sub_1B5E6F544(4, 0, 0) = v20;
      *(void *)(v24 + 96) = v21;
      uint64_t v8 = (long long *)((char *)v8 + 104);
      uint64_t v5 = v26 - 1;
      uint64_t v4 = 0;
      if (v26 == 1) {
        return result;
      }
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B6012DD4(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v6) {
      break;
    }
    uint64_t v13 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1B61B33A0();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v8 = 0;
    while (v6 != v8)
    {
      if ((a3 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x1BA9B04B0](v8, a3);
      }
      else {
        id v9 = *(id *)(a3 + 8 * v8 + 32);
      }
      char v10 = v9;
      id v11 = v9;
      a1(&v12, &v11);

      if (v3) {
        return swift_release();
      }
      ++v8;
      sub_1B61B3370();
      sub_1B61B33B0();
      sub_1B61B33C0();
      sub_1B61B3380();
      if (v6 == v8) {
        return v13;
      }
    }
    __break(1u);
LABEL_16:
    sub_1B61B1F70();
    uint64_t v6 = sub_1B61B3530();
    swift_bridgeObjectRelease();
  }
  return result;
}

int64_t sub_1B6012F44(void (*a1)(void *__return_ptr, long long *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (!v5) {
    return v6;
  }
  uint64_t v7 = a3;
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1B5E4EDE0();
  uint64_t v6 = v23;
  int64_t result = sub_1B5E6E444(v7);
  if ((result & 0x8000000000000000) == 0)
  {
    unint64_t v11 = result;
    if (result < 1 << *(unsigned char *)(v7 + 32))
    {
      int v12 = v9;
      uint64_t v18 = v7 + 56;
      char v13 = v10 & 1;
      while (((*(void *)(v18 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
      {
        if (*(_DWORD *)(v7 + 36) != v12) {
          goto LABEL_18;
        }
        long long v21 = *(_OWORD *)(*(void *)(v7 + 48) + 16 * v11);
        a1(__src, &v21);
        if (v4)
        {
          swift_release();
          return v6;
        }
        uint64_t v14 = v7;
        memcpy(__dst, __src, sizeof(__dst));
        uint64_t v23 = v6;
        unint64_t v15 = *(void *)(v6 + 16);
        if (v15 >= *(void *)(v6 + 24) >> 1)
        {
          sub_1B5E4EDE0();
          uint64_t v6 = v23;
        }
        *(void *)(v6 + 16) = v15 + 1;
        memcpy((void *)(v6 + 528 * v15 + 32), __dst, 0x20DuLL);
        uint64_t v7 = v14;
        int64_t result = sub_1B6014240(v11, v12, v13 & 1, v14);
        unint64_t v11 = result;
        int v12 = v16;
        char v13 = v17 & 1;
        if (!--v5)
        {
          sub_1B5E6E86C(result, v16, v17 & 1);
          return v6;
        }
        uint64_t v4 = 0;
        if (result < 0 || result >= 1 << *(unsigned char *)(v7 + 32)) {
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_18:
      __break(1u);
    }
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1B601312C(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  return sub_1B6013144(a1, a2, a3);
}

uint64_t sub_1B6013144(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1B5E4EE00();
    uint64_t v5 = v13;
    for (uint64_t i = a3 + 32; ; i += 40)
    {
      OUTLINED_FUNCTION_3_74();
      a1();
      if (v3) {
        break;
      }
      long long v9 = v12;
      unint64_t v10 = *(void *)(v13 + 16);
      if (v10 >= *(void *)(v13 + 24) >> 1)
      {
        sub_1B5E4EE00();
        long long v9 = v12;
      }
      *(void *)(v13 + 16) = v10 + 1;
      *(_OWORD *)(v13 + 16 * v10 + 32) = v9;
      if (!--v4) {
        return v5;
      }
    }
    swift_release();
  }
  return v5;
}

uint64_t sub_1B6013250()
{
  return EditingBlueprintCollectionViewLayout.isEditing.getter() & 1;
}

uint64_t EditingBlueprintCollectionViewLayout.isEditing.getter()
{
  return *((unsigned __int8 *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C0));
}

uint64_t sub_1B60132A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return EditingBlueprintCollectionViewLayout.isEditing.setter(a3);
}

uint64_t EditingBlueprintCollectionViewLayout.isEditing.setter(uint64_t result)
{
  *((unsigned char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x1C0)) = result;
  return result;
}

uint64_t (*EditingBlueprintCollectionViewLayout.isEditing.modify(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x1C0));
  return sub_1B6013348;
}

uint64_t sub_1B6013348(uint64_t result)
{
  *(unsigned char *)(*(void *)result + *(void *)((*MEMORY[0x1E4FBC8C8] & **(void **)result) + 0x1C0)) = *(unsigned char *)(result + 8);
  return result;
}

uint64_t EditingBlueprintCollectionViewLayout.__allocating_init(blueprintLayoutCollectionProvider:editStyle:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return EditingBlueprintCollectionViewLayout.init(blueprintLayoutCollectionProvider:editStyle:)(a1);
}

uint64_t EditingBlueprintCollectionViewLayout.init(blueprintLayoutCollectionProvider:editStyle:)(uint64_t a1)
{
  uint64_t v3 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x1B0);
  OUTLINED_FUNCTION_9_37();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = *v7;
  *((unsigned char *)v1 + *(void *)(v9 + 448)) = 0;
  *(void *)((char *)v1 + *(void *)((*v10 & *v1) + 0x1C8)) = v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v15 - v11, a1, v3);
  BlueprintCollectionViewLayout.init(blueprintLayoutCollectionProvider:)();
  uint64_t v13 = v12;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v3);
  return v13;
}

id EditingBlueprintCollectionViewLayout.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void EditingBlueprintCollectionViewLayout.init(coder:)()
{
  *((unsigned char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C0)) = 0;

  sub_1B61B34D0();
  __break(1u);
}

void sub_1B60135B0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  EditingBlueprintCollectionViewLayout.init(coder:)();
}

uint64_t EditingBlueprintCollectionViewLayout.copy()@<X0>(void *a1@<X8>)
{
  UIImageSymbolScale v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (void *)MEMORY[0x1E4FBC8C8];
  OUTLINED_FUNCTION_9_37();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v13 - v7;
  (*(void (**)(char *, char *))(v10 + 16))((char *)v13 - v7, &v2[*(void *)(v9 + 128)]);
  v13[1] = *(void *)&v2[*(void *)((*v5 & *(void *)v2) + 0x1C8)];
  uint64_t v11 = (void *)EditingBlueprintCollectionViewLayout.__allocating_init(blueprintLayoutCollectionProvider:editStyle:)((uint64_t)v8);
  *((unsigned char *)v11 + *(void *)((*v11 & *v5) + 0x1C0)) = v2[*(void *)((*v5 & *(void *)v2) + 0x1C0)];
  uint64_t result = sub_1B60057BC();
  a1[3] = ObjectType;
  *a1 = v11;
  return result;
}

uint64_t sub_1B6013730(void *a1)
{
  id v1 = a1;
  EditingBlueprintCollectionViewLayout.copy()(v4);

  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  uint64_t v2 = sub_1B61B3740();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v2;
}

Swift::OpaquePointer_optional __swiftcall EditingBlueprintCollectionViewLayout.layoutAttributesForElements(in:)(__C::CGRect in)
{
  uint64_t v2 = v1;
  double height = in.size.height;
  double width = in.size.width;
  double y = in.origin.y;
  double x = in.origin.x;
  sub_1B6004A3C(v39);
  id v7 = objc_msgSend(v1, sel_collectionView);
  if (v7)
  {
    uint64_t v8 = v7;
    objc_msgSend(v7, sel_contentOffset);
    double v36 = v9;
    double v37 = v10;
  }
  else
  {
    double v36 = 0.0;
    double v37 = 0.0;
  }
  id v11 = objc_msgSend(v2, sel_collectionView, *(void *)&v36, *(void *)&v37);
  if (v11)
  {
    uint64_t v12 = v11;
    objc_msgSend(v11, sel_adjustedContentInset);
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    double v18 = v17;
    double v20 = v19;
  }
  else
  {
    CGFloat v14 = *MEMORY[0x1E4FB2848];
    CGFloat v16 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    double v18 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    double v20 = *(double *)(MEMORY[0x1E4FB2848] + 24);
  }
  memcpy(v38, &v39[40], 0x20EuLL);
  sub_1B60939AC();
  unint64_t v23 = v22;
  uint64_t v25 = v24;
  memcpy(v38, v39, sizeof(v38));
  uint64_t v26 = sub_1B6131E30(v23, v25, x, y, width, height, v36, v37, v14, v16, v18, v20);
  sub_1B5EED720((uint64_t)v39);
  if (v26)
  {
    swift_retain();
    id v28 = objc_msgSend(v2, sel_collectionView);
    if (v28
      && (long long v29 = v28,
          id v30 = objc_msgSend(v28, sel_indexPathsForSelectedItems),
          v29,
          v30))
    {
      sub_1B61AFCB0();
      uint64_t v31 = sub_1B61B24E0();
    }
    else
    {
      uint64_t v31 = MEMORY[0x1E4FBC860];
    }
    uint64_t v32 = sub_1B5E5CBBC(v31);
    unint64_t v33 = *(void *)(v26 + 16);
    v35[2] = v2;
    v35[3] = MEMORY[0x1F4188790](v32);
    sub_1B61B1F70();
    uint64_t v21 = sub_1B6012DD4((void (*)(uint64_t *__return_ptr, id *))sub_1B601417C, (uint64_t)v35, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();
  }
  else
  {
    uint64_t v21 = 0;
  }
  long long v34 = (void *)v21;
  result.value._rawValue = v34;
  result.is_nil = v27;
  return result;
}

char *sub_1B6013A44@<X0>(id *a1@<X0>, uint64_t a2@<X2>, char **a3@<X8>)
{
  uint64_t v5 = (char *)*a1;
  uint64_t v6 = (char *)objc_msgSend(*a1, sel_representedElementCategory);
  if ((unint64_t)(v6 - 1) < 2 || v6)
  {
    *a3 = v5;
    return v5;
  }
  else
  {
    Swift::OpaquePointer_optional result = sub_1B6013AC8(v5, a2);
    *a3 = result;
  }
  return result;
}

char *sub_1B6013AC8(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_1B61AFCB0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v9 = objc_msgSend(a1, sel_indexPath);
  sub_1B61AFC40();

  char v10 = sub_1B5E75D58((uint64_t)v8, a2);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  id v11 = (void *)MEMORY[0x1E4FBC8C8];
  if (*((unsigned char *)v2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x1C0)) != 1 || (v10 & 1) != 0)
  {
    objc_msgSend(a1, sel_copy);
    sub_1B61B3030();
    swift_unknownObjectRelease();
    type metadata accessor for BlueprintLayoutCollectionLayoutAttributes();
    swift_dynamicCast();
    uint64_t v12 = v21;
    v22.a = 1.0;
    v22.b = 0.0;
    v22.c = 0.0;
    v22.d = 1.0;
    v22.CGFloat tx = 0.0;
    v22.CGFloat ty = 0.0;
    objc_msgSend(v21, sel_setTransform_, &v22);
    char v16 = *((unsigned char *)v2 + *(void *)((*v11 & *v2) + 0x1C0));
    double v17 = &v12[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_isEditing];
    swift_beginAccess();
    char *v17 = v16;
    double v18 = &v12[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_isSelected];
    swift_beginAccess();
    char *v18 = v10 & 1;
    v22.a = 1.0;
    v22.b = 0.0;
    v22.c = 0.0;
    v22.d = 1.0;
    v22.CGFloat tx = 0.0;
    v22.CGFloat ty = 0.0;
    objc_msgSend(v12, sel_setTransform_, &v22);
  }
  else
  {
    objc_msgSend(a1, sel_copy);
    sub_1B61B3030();
    swift_unknownObjectRelease();
    type metadata accessor for BlueprintLayoutCollectionLayoutAttributes();
    swift_dynamicCast();
    uint64_t v12 = v21;
    char v13 = *((unsigned char *)v2 + *(void *)((*v11 & *v2) + 0x1C0));
    CGFloat v14 = &v21[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_isEditing];
    swift_beginAccess();
    *CGFloat v14 = v13;
    double v15 = &v12[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_isSelected];
    swift_beginAccess();
    char *v15 = 0;
    CGAffineTransformMakeScale(&v22, *(CGFloat *)((char *)v2 + *(void *)((*v11 & *v2) + 0x1C8)), *(CGFloat *)((char *)v2 + *(void *)((*v11 & *v2) + 0x1C8)));
    objc_msgSend(v12, sel_setTransform_, &v22);
  }
  return v12;
}

id sub_1B6013E18(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  id v9 = a1;
  v14.origin.double x = a2;
  v14.origin.double y = a3;
  v14.size.double width = a4;
  v14.size.double height = a5;
  unint64_t v10 = (unint64_t)EditingBlueprintCollectionViewLayout.layoutAttributesForElements(in:)(v14);

  if (v10)
  {
    sub_1B5F7E990();
    id v11 = (void *)sub_1B61B24D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v11 = 0;
  }
  return v11;
}

char *EditingBlueprintCollectionViewLayout.layoutAttributesForItem(at:)()
{
  id v1 = v0;
  sub_1B6004A3C(v14);
  uint64_t v2 = v15;
  if (*(void *)(v15 + 16) && (unint64_t v3 = sub_1B5E46EC0(), (v4 & 1) != 0))
  {
    id v5 = *(id *)(*(void *)(v2 + 56) + 8 * v3);
    sub_1B5EED720((uint64_t)v14);
    id v6 = v5;
    if (objc_msgSend(v6, sel_representedElementCategory))
    {

      return (char *)v6;
    }
    else
    {
      id v9 = objc_msgSend(v1, sel_collectionView);
      if (v9
        && (unint64_t v10 = v9,
            id v11 = objc_msgSend(v9, sel_indexPathsForSelectedItems),
            v10,
            v11))
      {
        sub_1B61AFCB0();
        uint64_t v12 = sub_1B61B24E0();
      }
      else
      {
        uint64_t v12 = MEMORY[0x1E4FBC860];
      }
      uint64_t v13 = sub_1B5E5CBBC(v12);
      uint64_t v7 = sub_1B6013AC8(v6, v13);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1B5EED720((uint64_t)v14);
    return 0;
  }
  return v7;
}

char *sub_1B6013FFC(void *a1)
{
  uint64_t v2 = sub_1B61AFCB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B61AFC40();
  id v6 = a1;
  uint64_t v7 = EditingBlueprintCollectionViewLayout.layoutAttributesForItem(at:)();

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

void EditingBlueprintCollectionViewLayout.__allocating_init(blueprintLayoutCollectionProvider:)()
{
  id v1 = objc_allocWithZone(v0);
  EditingBlueprintCollectionViewLayout.init(blueprintLayoutCollectionProvider:)();
}

void EditingBlueprintCollectionViewLayout.init(blueprintLayoutCollectionProvider:)()
{
}

id EditingBlueprintCollectionViewLayout.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *sub_1B601417C@<X0>(id *a1@<X0>, char **a2@<X8>)
{
  return sub_1B6013A44(a1, *(void *)(v2 + 24), a2);
}

ValueMetadata *type metadata accessor for EditingBlueprintCollectionViewLayoutStyle()
{
  return &type metadata for EditingBlueprintCollectionViewLayoutStyle;
}

uint64_t sub_1B60141AC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for EditingBlueprintCollectionViewLayout()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for EditingBlueprintCollectionViewLayout(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EditingBlueprintCollectionViewLayout);
}

uint64_t dispatch thunk of EditingBlueprintCollectionViewLayout.__allocating_init(blueprintLayoutCollectionProvider:editStyle:)()
{
  return (*(uint64_t (**)(void))(v0 + 464))();
}

int64_t sub_1B6014240(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_22;
  }
  unint64_t v4 = result;
  if (result < 0 || (Swift::OpaquePointer_optional result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    unint64_t v10 = *(void *)(v6 + 8 * v9);
    if (v10) {
      return __clz(__rbit64(v10)) + (v9 << 6);
    }
    unint64_t v11 = (unint64_t)(result + 63) >> 6;
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      unint64_t v10 = *(void *)(v6 + 8 * v9);
      if (v10) {
        return __clz(__rbit64(v10)) + (v9 << 6);
      }
      unint64_t v9 = v5 + 3;
      if (v5 + 3 < v11)
      {
        unint64_t v10 = *(void *)(v6 + 8 * v9);
        if (v10) {
          return __clz(__rbit64(v10)) + (v9 << 6);
        }
        while (v5 + 4 < v11)
        {
          unint64_t v10 = *(void *)(a4 + 88 + 8 * v5++);
          if (v10)
          {
            unint64_t v9 = v5 + 3;
            return __clz(__rbit64(v10)) + (v9 << 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t DebugBundle.name.getter()
{
  uint64_t v1 = *v0;
  sub_1B61B1F70();
  return v1;
}

uint64_t DebugBundle.version.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1B61B1F70();
  return v1;
}

uint64_t DebugBundle.build.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1B61B1F70();
  return v1;
}

uint64_t DebugBundle.displayVersion.getter()
{
  uint64_t v2 = *(void *)(v0 + 16);
  sub_1B61B1F70();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  sub_1B61B1F70();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  return v2;
}

void __swiftcall DebugBundle.init(bundle:)(TeaUI::DebugBundle *__return_ptr retstr, NSBundle bundle)
{
  OUTLINED_FUNCTION_2_90();
  unint64_t v4 = (void *)sub_1B61B20C0();
  id v5 = OUTLINED_FUNCTION_1_94();

  if (v5)
  {
    sub_1B61B3030();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
  }
  sub_1B5E5F708((uint64_t)&v18, (uint64_t)v20);
  if (v21)
  {
    if (OUTLINED_FUNCTION_0_91())
    {
      uint64_t v6 = v16;
      unint64_t v7 = v17;
      goto LABEL_9;
    }
  }
  else
  {
    sub_1B5E15B34((uint64_t)v20);
  }
  uint64_t v6 = 0;
  unint64_t v7 = (void *)0xE000000000000000;
LABEL_9:
  unint64_t v8 = (void *)sub_1B61B20C0();
  id v9 = OUTLINED_FUNCTION_1_94();

  if (v9)
  {
    sub_1B61B3030();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
  }
  sub_1B5E5F708((uint64_t)&v18, (uint64_t)v20);
  if (v21)
  {
    if (OUTLINED_FUNCTION_0_91())
    {
      uint64_t v10 = v16;
      unint64_t v11 = v17;
      goto LABEL_17;
    }
  }
  else
  {
    sub_1B5E15B34((uint64_t)v20);
  }
  uint64_t v10 = 0;
  unint64_t v11 = (void *)0xE000000000000000;
LABEL_17:
  OUTLINED_FUNCTION_2_90();
  uint64_t v12 = (void *)sub_1B61B20C0();
  id v13 = OUTLINED_FUNCTION_1_94();

  if (v13)
  {
    sub_1B61B3030();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
  }
  sub_1B5E5F708((uint64_t)&v18, (uint64_t)v20);
  if (!v21)
  {
    sub_1B5E15B34((uint64_t)v20);
    goto LABEL_24;
  }
  if (!OUTLINED_FUNCTION_0_91())
  {
LABEL_24:

    uint64_t v14 = 0;
    uint64_t v15 = (void *)0xE000000000000000;
    goto LABEL_25;
  }
  uint64_t v14 = v16;
  uint64_t v15 = v17;

LABEL_25:
  retstr->name._uint64_t countAndFlagsBits = v6;
  retstr->name._object = v7;
  retstr->version._uint64_t countAndFlagsBits = v10;
  retstr->version._object = v11;
  retstr->build._uint64_t countAndFlagsBits = v14;
  retstr->build._object = v15;
}

uint64_t destroy for DebugBundle()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DebugBundle(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  sub_1B61B1F70();
  sub_1B61B1F70();
  sub_1B61B1F70();
  return a1;
}

void *assignWithCopy for DebugBundle(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for DebugBundle(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DebugBundle()
{
  return &type metadata for DebugBundle;
}

uint64_t sub_1B60147F8()
{
  return sub_1B5E1F5AC();
}

uint64_t BlueprintLayoutAttributesType.editingHeight.getter()
{
  return 0;
}

uint64_t sub_1B6014824()
{
  return OUTLINED_FUNCTION_0_7();
}

uint64_t BlueprintLayoutAttributesType.shouldIntegral.getter()
{
  return 1;
}

uint64_t sub_1B6014834()
{
  memcpy(__dst, v0, sizeof(__dst));
  return sub_1B5E1F5AC();
}

uint64_t sub_1B6014874()
{
  memcpy(__dst, v0, sizeof(__dst));
  return OUTLINED_FUNCTION_0_7() & 1;
}

uint64_t sub_1B60148B4()
{
  return BlueprintLayoutHeaderFooterAttributesType.footerHeight.getter();
}

uint64_t BlueprintLayoutHeaderFooterAttributesType.footerHeight.getter()
{
  return *MEMORY[0x1E4FB2F28];
}

double BlueprintLayoutHeaderFooterAttributesType.height.getter()
{
  return 0.0;
}

double HeightLayoutAttributes.height.getter()
{
  return *(double *)v0;
}

void HeightLayoutAttributes.init(height:)(double *a1@<X8>, double a2@<D0>)
{
  *a1 = a2;
}

void sub_1B60148FC()
{
  qword_1E9DAB6E8 = 0;
}

double static HeightLayoutAttributes.zero.getter@<D0>(void *a1@<X8>)
{
  if (qword_1E9DA7F40 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_1E9DAB6E8;
  *a1 = qword_1E9DAB6E8;
  return result;
}

uint64_t sub_1B6014968()
{
  return sub_1B5E1F5AC();
}

uint64_t sub_1B6014988()
{
  return OUTLINED_FUNCTION_0_7();
}

uint64_t dispatch thunk of BlueprintLayoutAttributesType.height.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BlueprintLayoutAttributesType.editingHeight.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of BlueprintLayoutAttributesType.shouldIntegral.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of BlueprintLayoutHeaderFooterAttributesType.headerHeight.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of BlueprintLayoutHeaderFooterAttributesType.footerHeight.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for HeightLayoutAttributes()
{
  return &type metadata for HeightLayoutAttributes;
}

uint64_t sub_1B6014A64()
{
  return sub_1B5E1F5AC();
}

uint64_t sub_1B6014A88()
{
  return OUTLINED_FUNCTION_0_7();
}

void __swiftcall RadarComponent.init(componentName:componentIdentifier:componentVersion:)(TeaUI::RadarComponent *__return_ptr retstr, Swift::String componentName, Swift::String componentIdentifier, Swift::String componentVersion)
{
  retstr->componentName = componentName;
  retstr->componentIdentifier = componentIdentifier;
  retstr->componentVersion = componentVersion;
}

ValueMetadata *type metadata accessor for RadarComponent()
{
  return &type metadata for RadarComponent;
}

id sub_1B6014ABC()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v1 = (void *)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return v2;
}

uint64_t sub_1B6014B30()
{
  return sub_1B61B2230();
}

id JSONText.text.getter()
{
  return *v0;
}

uint64_t JSONText.init(_:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = sub_1B61B2150();
  MEMORY[0x1F4188790](v3 - 8);
  OUTLINED_FUNCTION_80();
  uint64_t v4 = sub_1B61AF620();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_80();
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  unint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, v5);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_80();
  uint64_t v10 = v9 - v8;
  (*(void (**)(uint64_t))(v11 + 16))(v9 - v8);
  uint64_t v32 = sub_1B5EDE0A0(v10, v5, v6);
  uint64_t v31 = v12;
  sub_1B61AF660();
  swift_allocObject();
  sub_1B61AF650();
  id v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F26CD0];
  sub_1B6015204(0, &qword_1E9DAA830, MEMORY[0x1E4F26CD0], MEMORY[0x1E4FBBE00]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1B61C0140;
  sub_1B61AF600();
  sub_1B61AF610();
  sub_1B61AF5F0();
  sub_1B6015268(&qword_1E9DAA838, MEMORY[0x1E4F26CD0]);
  sub_1B6015204(0, &qword_1E9DAA840, v13, MEMORY[0x1E4FBB320]);
  sub_1B5F609F8();
  sub_1B61B3100();
  sub_1B61AF630();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v14 = sub_1B61AF640();
  unint64_t v16 = v15;
  sub_1B61B2140();
  sub_1B60154D8();
  uint64_t v17 = sub_1B61B2120();
  if (v18) {
    uint64_t v19 = v17;
  }
  else {
    uint64_t v19 = 0;
  }
  if (v18) {
    uint64_t v20 = v18;
  }
  else {
    uint64_t v20 = 0xE000000000000000;
  }
  sub_1B6015204(0, (unint64_t *)&qword_1EB647D78, (uint64_t (*)(uint64_t))sub_1B5EC7D3C, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  CGAffineTransform v22 = (void **)MEMORY[0x1E4FB0700];
  *(_OWORD *)(inited + 16) = xmmword_1B61BE690;
  unint64_t v23 = *v22;
  *(void *)(inited + 32) = *v22;
  uint64_t v24 = self;
  id v25 = v23;
  id v26 = objc_msgSend(v24, sel_labelColor);
  *(void *)(inited + 64) = sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C90);
  *(void *)(inited + 4sub_1B5E6F544(4, 0, 0) = v26;
  type metadata accessor for Key(0);
  sub_1B6015268((unint64_t *)&qword_1EB647C08, type metadata accessor for Key);
  uint64_t v27 = sub_1B61B1F50();
  id v28 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  id v29 = sub_1B5E8E584(v19, v20, v27);
  sub_1B5E2E534(v14, v16);
  swift_release();
  *a2 = v29;
  a2[1] = v32;
  a2[2] = v31;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1B60151AC()
{
  unint64_t result = qword_1EB647DB0;
  if (!qword_1EB647DB0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB647DB0);
  }
  return result;
}

void sub_1B6015204(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1B6015268(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t JSONText.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_1B61B2150();
  MEMORY[0x1F4188790](v5 - 8);
  OUTLINED_FUNCTION_80();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B61B39A0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v15, v15[3]);
    sub_1B6015524();
    sub_1B61B3770();
    sub_1B61B2140();
    sub_1B60154D8();
    uint64_t v6 = sub_1B61B2120();
    unint64_t v8 = v7;
    sub_1B5E2E534(v13, v14);
    if (v8)
    {
      unint64_t v9 = v8;
    }
    else
    {
      uint64_t v6 = 0;
      unint64_t v9 = 0xE000000000000000;
    }
    sub_1B5DFF760(0, (unint64_t *)&qword_1EB648C68);
    sub_1B61B1F70();
    id v10 = sub_1B6014ABC();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v6;
    *(void *)(v11 + 24) = v9;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    *a2 = v10;
    a2[1] = sub_1B60155C8;
    a2[2] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t JSONText.encode(to:)()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B60154A8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return JSONText.init(from:)(a1, a2);
}

uint64_t sub_1B60154C0()
{
  return JSONText.encode(to:)();
}

unint64_t sub_1B60154D8()
{
  unint64_t result = qword_1E9DAB6F0;
  if (!qword_1E9DAB6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB6F0);
  }
  return result;
}

unint64_t sub_1B6015524()
{
  unint64_t result = qword_1E9DAB6F8;
  if (!qword_1E9DAB6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB6F8);
  }
  return result;
}

uint64_t sub_1B6015570()
{
  return sub_1B6014B30();
}

uint64_t sub_1B6015590()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B60155C8()
{
  return sub_1B6015570();
}

uint64_t initializeBufferWithCopyOfBuffer for JSONText(uint64_t a1, long long *a2)
{
  uint64_t v3 = *((void *)a2 + 2);
  long long v4 = *a2;
  *(_OWORD *)a1 = *a2;
  *(void *)(a1 + 16) = v3;
  id v5 = (id)v4;
  swift_retain();
  return a1;
}

uint64_t destroy for JSONText(id *a1)
{
  return swift_release();
}

uint64_t assignWithCopy for JSONText(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for JSONText(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for JSONText()
{
  return &type metadata for JSONText;
}

BOOL static AppWindowState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AppWindowState.hash(into:)()
{
  return sub_1B61B3910();
}

BOOL static AppEnvironment.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AppEnvironment.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t AppEnvironment.hashValue.getter()
{
  return sub_1B61B3940();
}

uint64_t AppURLHandlerType.open(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_1B60158B8();
  uint64_t v6 = sub_1B61B1F50();
  (*(void (**)(uint64_t, uint64_t, void, void, uint64_t, uint64_t))(a3 + 16))(a1, v6, 0, 0, a2, a3);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1B60158B8()
{
  unint64_t result = qword_1EB640FE8;
  if (!qword_1EB640FE8)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB640FE8);
  }
  return result;
}

uint64_t App.monitor.getter()
{
  return swift_unknownObjectRetain();
}

void *sub_1B6015910@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(**(void **)a1 + 112))(&v4);
  *a2 = v4;
  return result;
}

uint64_t sub_1B601596C(char *a1)
{
  char v2 = *a1;
  return sub_1B60159E8(&v2);
}

uint64_t sub_1B60159A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v1 + 72);
  return result;
}

uint64_t sub_1B60159E8(char *a1)
{
  char v2 = *a1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 72) = v2;
  return result;
}

uint64_t App.__allocating_init(application:monitor:sceneProvider:environment:)(uint64_t a1, uint64_t a2, long long *a3, char *a4)
{
  uint64_t v8 = swift_allocObject();
  App.init(application:monitor:sceneProvider:environment:)(a1, a2, a3, a4);
  return v8;
}

uint64_t App.init(application:monitor:sceneProvider:environment:)(uint64_t a1, uint64_t a2, long long *a3, char *a4)
{
  char v5 = *a4;
  *(void *)(v4 + 64) = a1;
  *(void *)(v4 + 16) = a2;
  sub_1B5E30E70(a3, v4 + 24);
  *(unsigned char *)(v4 + 72) = v5;
  return v4;
}

void sub_1B6015ACC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = *(void **)(v4 + 64);
  uint64_t v8 = (void *)sub_1B61AF8D0();
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_1B60158B8();
  unint64_t v9 = (void *)sub_1B61B1F00();
  if (a3)
  {
    void v10[4] = a3;
    v10[5] = a4;
    v10[0] = MEMORY[0x1E4F143A8];
    v10[1] = 1107296256;
    void v10[2] = sub_1B5E73DCC;
    void v10[3] = &block_descriptor_52;
    a3 = _Block_copy(v10);
    swift_retain();
    swift_release();
  }
  objc_msgSend(v7, sel_openURL_options_completionHandler_, v8, v9, a3);
  _Block_release(a3);
}

id sub_1B6015BE4@<X0>(unsigned char *a1@<X8>)
{
  id result = objc_msgSend(*(id *)(v1 + 64), sel_applicationState);
  if ((unint64_t)result >= 3)
  {
    id result = (id)sub_1B61B34D0();
    __break(1u);
  }
  else
  {
    *a1 = (_BYTE)result;
  }
  return result;
}

void sub_1B6015C74(unsigned char *a1@<X8>)
{
  uint64_t v3 = v1[6];
  uint64_t v4 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v3);
  char v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  if (v5 && (uint64_t v6 = v5, v7 = objc_msgSend(v5, sel_activationState), v6, (unint64_t)v7 + 1 <= 3)) {
    unsigned int v8 = 0x4020103u >> (8 * ((_BYTE)v7 + 1));
  }
  else {
    LOBYTE(v8) = 0;
  }
  *a1 = v8;
}

uint64_t App.deinit()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return v0;
}

uint64_t App.__deallocating_deinit()
{
  App.deinit();
  return swift_deallocClassInstance();
}

id sub_1B6015D74@<X0>(unsigned char *a1@<X8>)
{
  return sub_1B6015BE4(a1);
}

void sub_1B6015D98(unsigned char *a1@<X8>)
{
}

uint64_t sub_1B6015DBC()
{
  return App.monitor.getter();
}

uint64_t sub_1B6015DE0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 112))();
}

void sub_1B6015E24(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
}

BOOL AppMonitorEvent.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

BOOL sub_1B6015E6C@<W0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  BOOL result = AppMonitorEvent.init(rawValue:)(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t AppMonitor.isActive.getter()
{
  OUTLINED_FUNCTION_0_1();
  return *v0;
}

uint64_t AppMonitor.isActive.setter(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_12_0();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*AppMonitor.isActive.modify())()
{
  return j__swift_endAccess;
}

uint64_t AppMonitor.isTracking.getter()
{
  OUTLINED_FUNCTION_0_1();
  return *v0;
}

uint64_t sub_1B601603C(char a1)
{
  uint64_t result = OUTLINED_FUNCTION_12_0();
  *uint64_t v1 = a1;
  return result;
}

id AppMonitor.onWindowDidBecomeBackground(block:)(uint64_t a1, uint64_t a2)
{
  return sub_1B60160C0(a1, a2, &OBJC_IVAR___TSAppMonitor_onWindowDidBecomeBackgroundBlock);
}

id AppMonitor.onWindowWillBecomeForeground(block:)(uint64_t a1, uint64_t a2)
{
  return sub_1B60160C0(a1, a2, &OBJC_IVAR___TSAppMonitor_onWindowWillBecomeForegroundBlock);
}

id sub_1B60160C0(uint64_t a1, uint64_t a2, void *a3)
{
  char v4 = (uint64_t *)(v3 + *a3);
  uint64_t v5 = *v4;
  *char v4 = a1;
  v4[1] = a2;
  sub_1B5E3799C(v5);
  swift_retain();
  return v7;
}

id sub_1B6016154(void *a1, int a2, void *aBlock, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  unint64_t v9 = _Block_copy(aBlock);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  id v11 = a1;
  a6(a5, v10);

  swift_release();
  return v11;
}

uint64_t AppMonitor.trigger(event:)(uint64_t a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___TSAppMonitor_isActive);
  uint64_t result = swift_beginAccess();
  if (*v3 == 1)
  {
    if (a1 == 1)
    {
      uint64_t v5 = (unsigned char *)(v1 + OBJC_IVAR___TSAppMonitor_isTracking);
      uint64_t result = OUTLINED_FUNCTION_3_75();
      if (*v5) {
        return result;
      }
      *uint64_t v5 = 1;
      uint64_t v6 = OBJC_IVAR___TSAppMonitor_onWindowWillBecomeForegroundBlock;
      goto LABEL_8;
    }
    if (a1)
    {
      uint64_t result = sub_1B61B3810();
      __break(1u);
      return result;
    }
    id v7 = (unsigned char *)(v1 + OBJC_IVAR___TSAppMonitor_isTracking);
    uint64_t result = OUTLINED_FUNCTION_3_75();
    if (*v7 == 1)
    {
      unsigned char *v7 = 0;
      uint64_t v6 = OBJC_IVAR___TSAppMonitor_onWindowDidBecomeBackgroundBlock;
LABEL_8:
      unsigned int v8 = *(void (**)(uint64_t))(v1 + v6);
      if (v8)
      {
        uint64_t v9 = swift_retain();
        v8(v9);
        return sub_1B5E3799C((uint64_t)v8);
      }
    }
  }
  return result;
}

id AppMonitor.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id AppMonitor.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v0[OBJC_IVAR___TSAppMonitor_isActive] = 1;
  v0[OBJC_IVAR___TSAppMonitor_isTracking] = 1;
  char v2 = &v0[OBJC_IVAR___TSAppMonitor_onWindowDidBecomeBackgroundBlock];
  void *v2 = 0;
  v2[1] = 0;
  uint64_t v3 = &v0[OBJC_IVAR___TSAppMonitor_onWindowWillBecomeForegroundBlock];
  *uint64_t v3 = 0;
  v3[1] = 0;
  v5.receiver = v0;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id AppMonitor.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1B6016458()
{
  unint64_t result = qword_1E9DAB720;
  if (!qword_1E9DAB720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB720);
  }
  return result;
}

unint64_t sub_1B60164A8()
{
  unint64_t result = qword_1E9DAB728;
  if (!qword_1E9DAB728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB728);
  }
  return result;
}

unint64_t sub_1B60164F8()
{
  unint64_t result = qword_1E9DAB730;
  if (!qword_1E9DAB730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB730);
  }
  return result;
}

unint64_t sub_1B6016548()
{
  unint64_t result = qword_1E9DAB738;
  if (!qword_1E9DAB738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB738);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AppState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6016668);
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for AppState()
{
}

unsigned char *storeEnumTagSinglePayload for AppWindowState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6016768);
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for AppWindowState()
{
}

unsigned char *storeEnumTagSinglePayload for AppEnvironment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6016868);
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for AppEnvironment()
{
}

uint64_t dispatch thunk of AppURLHandlerType.open(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of AppURLHandlerType.open(_:options:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t dispatch thunk of AppType.state.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AppType.windowState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AppType.monitor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AppType.environment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t type metadata accessor for App()
{
  return self;
}

uint64_t method lookup function for App(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for App);
}

uint64_t dispatch thunk of App.environment.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of App.__allocating_init(application:monitor:sceneProvider:environment:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of App.open(_:options:completionHandler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of App.state.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of App.windowState.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

void type metadata accessor for AppMonitorEvent()
{
}

uint64_t type metadata accessor for AppMonitor()
{
  return self;
}

uint64_t sub_1B6016A78()
{
  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

id sub_1B6016B00()
{
  if (objc_msgSend(v0, sel_delegate))
  {
    self;
    id result = (id)swift_dynamicCastObjCClass();
    if (result) {
      return result;
    }
    swift_unknownObjectRelease();
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WindowScene();
  return objc_msgSendSuper2(&v2, sel_nextResponder);
}

uint64_t type metadata accessor for WindowScene()
{
  return self;
}

id WindowScene.__allocating_init(session:connectionOptions:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithSession_connectionOptions_, a1, a2);

  return v5;
}

id WindowScene.init(session:connectionOptions:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for WindowScene();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithSession_connectionOptions_, a1, a2);

  return v5;
}

id WindowScene.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WindowScene();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t dispatch thunk of Prefetchable.isPrefetchable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void sub_1B6016CF4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return;
  }
  uint64_t v3 = a1;
  uint64_t v34 = MEMORY[0x1E4FBC860];
  sub_1B5E4EAE0();
  uint64_t v4 = v34;
  uint64_t v5 = sub_1B61426AC(v3);
  if (v5 < 0) {
    goto LABEL_54;
  }
  unint64_t v7 = v5;
  if (v5 >= 1 << *(unsigned char *)(v3 + 32)) {
    goto LABEL_54;
  }
  uint64_t v8 = v3 + 64;
  uint64_t v9 = 1;
  uint64_t v27 = v3 + 64;
  uint64_t v28 = v3;
  uint64_t v26 = v1;
  while ((*(void *)(v8 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
  {
    if (*(_DWORD *)(v3 + 36) != v6) {
      goto LABEL_50;
    }
    int v29 = v6;
    uint64_t v30 = v4;
    uint64_t v10 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v7);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    unint64_t v13 = *(void *)(*(void *)(v3 + 56) + 8 * v7);
    sub_1B61B1F70();
    sub_1B61B1F70();
    sub_1B61B3290();
    sub_1B61B1F70();
    swift_bridgeObjectRelease();
    uint64_t v33 = v12;
    _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
    uint64_t v31 = v2;
    if (v13 >> 62)
    {
      sub_1B61B1F70();
      uint64_t v14 = sub_1B61B3530();
      if (!v14)
      {
LABEL_21:
        swift_bridgeObjectRelease();
        uint64_t v18 = v2;
        if ((v2 & 0x8000000000000000) == 0) {
          goto LABEL_22;
        }
        goto LABEL_45;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      sub_1B61B1F70();
      if (!v14) {
        goto LABEL_21;
      }
    }
    if (v14 < 1) {
      goto LABEL_55;
    }
    for (uint64_t i = 0; i != v14; ++i)
    {
      if ((v13 & 0xC000000000000001) != 0)
      {
        uint64_t v16 = MEMORY[0x1BA9B04B0](i, v13);
      }
      else
      {
        uint64_t v16 = *(void *)(v13 + 8 * i + 32);
        swift_retain();
      }
      uint64_t v17 = MEMORY[0x1BA9B1EC0](v16 + 32);
      swift_unknownObjectRelease();
      if (v17)
      {
        sub_1B61B3370();
        sub_1B61B33B0();
        sub_1B61B33C0();
        sub_1B61B3380();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v18 = v31;
    uint64_t v2 = MEMORY[0x1E4FBC860];
    if ((v31 & 0x8000000000000000) == 0)
    {
LABEL_22:
      if ((v18 & 0x4000000000000000) == 0) {
        goto LABEL_23;
      }
    }
LABEL_45:
    sub_1B61B1F70();
    sub_1B61B3530();
    swift_release();
LABEL_23:
    swift_release();
    sub_1B61B36E0();
    _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
    swift_bridgeObjectRelease();
    _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
    uint64_t v32 = v2;
    if (v14)
    {
      sub_1B61B1F70();
      for (uint64_t j = 0; j != v14; ++j)
      {
        if ((v13 & 0xC000000000000001) != 0)
        {
          uint64_t v20 = MEMORY[0x1BA9B04B0](j, v13);
        }
        else
        {
          uint64_t v20 = *(void *)(v13 + 8 * j + 32);
          swift_retain();
        }
        uint64_t v21 = MEMORY[0x1BA9B1EC0](v20 + 32);
        swift_unknownObjectRelease();
        if (v21)
        {
          swift_release();
        }
        else
        {
          sub_1B61B3370();
          sub_1B61B33B0();
          sub_1B61B33C0();
          sub_1B61B3380();
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v22 = v32;
      uint64_t v2 = MEMORY[0x1E4FBC860];
      if ((v32 & 0x8000000000000000) == 0)
      {
LABEL_35:
        if ((v22 & 0x4000000000000000) == 0) {
          goto LABEL_36;
        }
      }
    }
    else
    {
      uint64_t v22 = v2;
      if ((v2 & 0x8000000000000000) == 0) {
        goto LABEL_35;
      }
    }
    sub_1B61B1F70();
    sub_1B61B3530();
    swift_release();
LABEL_36:
    swift_release();
    sub_1B61B36E0();
    _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
    swift_bridgeObjectRelease();
    _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v30;
    unint64_t v23 = *(void *)(v30 + 16);
    if (v23 >= *(void *)(v30 + 24) >> 1)
    {
      sub_1B5E4EAE0();
      uint64_t v4 = v30;
    }
    *(void *)(v4 + 16) = v23 + 1;
    uint64_t v24 = v4 + 16 * v23;
    *(void *)(v24 + 32) = v11;
    *(void *)(v24 + 4sub_1B5E6F544(4, 0, 0) = v33;
    uint64_t v3 = v28;
    if ((uint64_t)v7 >= -(-1 << *(unsigned char *)(v28 + 32))) {
      goto LABEL_51;
    }
    uint64_t v8 = v27;
    if ((*(void *)(v27 + 8 * (v7 >> 6)) & (1 << v7)) == 0) {
      goto LABEL_52;
    }
    if (*(_DWORD *)(v28 + 36) != v29) {
      goto LABEL_53;
    }
    uint64_t v25 = sub_1B61B3120();
    if (v9 == v26) {
      return;
    }
    unint64_t v7 = v25;
    if ((v25 & 0x8000000000000000) == 0)
    {
      int v6 = *(_DWORD *)(v28 + 36);
      ++v9;
      if (v25 < 1 << *(unsigned char *)(v28 + 32)) {
        continue;
      }
    }
    goto LABEL_54;
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
  __break(1u);
}

uint64_t sub_1B6017200(uint64_t a1)
{
  uint64_t v32 = MEMORY[0x1E4FBC868];
  uint64_t v40 = MEMORY[0x1E4FBC868];
  sub_1B5E5EBBC(a1, v39);
  uint64_t v33 = v39[1];
  int64_t v1 = v39[3];
  unint64_t v2 = v39[4];
  int64_t v34 = (unint64_t)(v39[2] + 64) >> 6;
  uint64_t v35 = v39[0];
  uint64_t result = sub_1B61B1F70();
  uint64_t v4 = MEMORY[0x1E4FBC860];
  while (1)
  {
    while (1)
    {
      if (v2)
      {
        unint64_t v5 = __clz(__rbit64(v2));
        v2 &= v2 - 1;
        unint64_t v6 = v5 | (v1 << 6);
      }
      else
      {
        int64_t v7 = v1 + 1;
        if (__OFADD__(v1, 1)) {
          goto LABEL_53;
        }
        if (v7 >= v34) {
          goto LABEL_51;
        }
        unint64_t v8 = *(void *)(v33 + 8 * v7);
        int64_t v9 = v1 + 1;
        if (!v8)
        {
          int64_t v9 = v1 + 2;
          if (v1 + 2 >= v34) {
            goto LABEL_51;
          }
          unint64_t v8 = *(void *)(v33 + 8 * v9);
          if (!v8)
          {
            int64_t v9 = v1 + 3;
            if (v1 + 3 >= v34) {
              goto LABEL_51;
            }
            unint64_t v8 = *(void *)(v33 + 8 * v9);
            if (!v8)
            {
              int64_t v9 = v1 + 4;
              if (v1 + 4 >= v34) {
                goto LABEL_51;
              }
              unint64_t v8 = *(void *)(v33 + 8 * v9);
              if (!v8)
              {
                int64_t v9 = v1 + 5;
                if (v1 + 5 >= v34) {
                  goto LABEL_51;
                }
                unint64_t v8 = *(void *)(v33 + 8 * v9);
                if (!v8)
                {
                  int64_t v10 = v1 + 6;
                  while (v10 < v34)
                  {
                    unint64_t v8 = *(void *)(v33 + 8 * v10++);
                    if (v8)
                    {
                      int64_t v9 = v10 - 1;
                      goto LABEL_19;
                    }
                  }
LABEL_51:
                  sub_1B5E405D4();
                  return v32;
                }
              }
            }
          }
        }
LABEL_19:
        unint64_t v2 = (v8 - 1) & v8;
        unint64_t v6 = __clz(__rbit64(v8)) + (v9 << 6);
        int64_t v1 = v9;
      }
      uint64_t v11 = (uint64_t *)(*(void *)(v35 + 48) + 16 * v6);
      uint64_t v12 = v11[1];
      uint64_t v36 = *v11;
      unint64_t v13 = *(void *)(*(void *)(v35 + 56) + 8 * v6);
      uint64_t v38 = v4;
      if (v13 >> 62) {
        break;
      }
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      uint64_t result = sub_1B61B1F70();
      if (v14) {
        goto LABEL_22;
      }
LABEL_34:
      swift_bridgeObjectRelease();
      uint64_t v19 = v4;
      if (v4 < 0) {
        goto LABEL_38;
      }
LABEL_35:
      if ((v19 & 0x4000000000000000) != 0) {
        goto LABEL_38;
      }
      if (*(void *)(v19 + 16)) {
        goto LABEL_39;
      }
LABEL_37:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
    }
    swift_bridgeObjectRetain_n();
    sub_1B61B1F70();
    uint64_t result = sub_1B61B3530();
    uint64_t v14 = result;
    if (!result) {
      goto LABEL_34;
    }
LABEL_22:
    if (v14 < 1) {
      break;
    }
    unint64_t v37 = v2;
    uint64_t v15 = v4;
    for (uint64_t i = 0; i != v14; ++i)
    {
      if ((v13 & 0xC000000000000001) != 0)
      {
        uint64_t v17 = MEMORY[0x1BA9B04B0](i, v13);
      }
      else
      {
        uint64_t v17 = *(void *)(v13 + 8 * i + 32);
        swift_retain();
      }
      uint64_t v18 = MEMORY[0x1BA9B1EC0](v17 + 32);
      swift_unknownObjectRelease();
      if (v18)
      {
        sub_1B61B3370();
        sub_1B61B33B0();
        sub_1B61B33C0();
        sub_1B61B3380();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v4 = v15;
    unint64_t v2 = v37;
    uint64_t v19 = v38;
    if ((v38 & 0x8000000000000000) == 0) {
      goto LABEL_35;
    }
LABEL_38:
    swift_retain();
    uint64_t v20 = sub_1B61B3530();
    swift_release();
    if (!v20) {
      goto LABEL_37;
    }
LABEL_39:
    uint64_t v21 = v32;
    if (*(void *)(v32 + 24) <= *(void *)(v32 + 16))
    {
      sub_1B5E3FE68();
      uint64_t v21 = v40;
    }
    sub_1B61B3900();
    sub_1B61B21C0();
    uint64_t result = sub_1B61B3940();
    uint64_t v22 = v21 + 64;
    uint64_t v32 = v21;
    uint64_t v23 = -1 << *(unsigned char *)(v21 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v21 + 64 + 8 * (v24 >> 6))) == 0)
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      while (++v25 != v28 || (v27 & 1) == 0)
      {
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v22 + 8 * v25);
        if (v30 != -1)
        {
          unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
          goto LABEL_50;
        }
      }
      goto LABEL_54;
    }
    unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v21 + 64 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_50:
    *(void *)(v22 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t v31 = (void *)(*(void *)(v21 + 48) + 16 * v26);
    void *v31 = v36;
    v31[1] = v12;
    *(void *)(*(void *)(v21 + 56) + 8 * v26) = v19;
    ++*(void *)(v21 + 16);
    uint64_t result = swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_1B601765C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_unknownObjectWeakInit();
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = a3;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t CommandStateObserver.dispose(on:)()
{
  return swift_unknownObjectWeakAssign();
}

Swift::Void __swiftcall CommandStateObserver.dispose()()
{
}

uint64_t CommandStateObserver.deinit()
{
  swift_release();
  sub_1B5E437C4(v0 + 32);
  return v0;
}

uint64_t CommandStateObserver.__deallocating_deinit()
{
  swift_release();
  sub_1B5E437C4(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t sub_1B6017730()
{
  return CommandStateObserver.dispose(on:)();
}

void sub_1B6017754()
{
}

uint64_t sub_1B6017778()
{
  sub_1B6017F78();
  *(void *)(v0 + 16) = sub_1B61B1F50();
  int64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_defaultCenter);
  OUTLINED_FUNCTION_0_92(v2, v3, v4, v5, *MEMORY[0x1E4FB2650]);

  id v6 = objc_msgSend(v1, sel_defaultCenter);
  OUTLINED_FUNCTION_0_92(v6, v7, v8, v9, *MEMORY[0x1E4FB2E90]);

  return v0;
}

uint64_t sub_1B6017848(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 24);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  sub_1B61B1F70();
  uint64_t v6 = sub_1B5E13A00(v4, v3, v5);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6) {
    uint64_t v7 = v6;
  }
  uint64_t v10 = v7;
  uint64_t v8 = swift_retain();
  MEMORY[0x1BA9AF660](v8);
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1B61B2580();
  }
  sub_1B61B25D0();
  sub_1B61B2510();
  swift_beginAccess();
  sub_1B61B1F70();
  sub_1B5E438E8(v10, v4, v3);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B601797C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v3 = v1 + 64;
  uint64_t v2 = v4;
  uint64_t v5 = 1 << *(unsigned char *)(*(void *)(v0 + 16) + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  uint64_t v7 = v6 & v2;
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = sub_1B61B1F70();
  int64_t v10 = 0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  for (v7 &= v7 - 1; ; uint64_t v7 = (v12 - 1) & v12)
  {
    sub_1B61B1F70();
    sub_1B6017B20();
    uint64_t result = swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v8) {
      return swift_release();
    }
    uint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v10;
    if (!v12)
    {
      int64_t v10 = v11 + 1;
      if (v11 + 1 >= v8) {
        return swift_release();
      }
      uint64_t v12 = *(void *)(v3 + 8 * v10);
      if (!v12)
      {
        int64_t v10 = v11 + 2;
        if (v11 + 2 >= v8) {
          return swift_release();
        }
        uint64_t v12 = *(void *)(v3 + 8 * v10);
        if (!v12)
        {
          int64_t v10 = v11 + 3;
          if (v11 + 3 >= v8) {
            return swift_release();
          }
          uint64_t v12 = *(void *)(v3 + 8 * v10);
          if (!v12)
          {
            int64_t v10 = v11 + 4;
            if (v11 + 4 >= v8) {
              return swift_release();
            }
            uint64_t v12 = *(void *)(v3 + 8 * v10);
            if (!v12) {
              break;
            }
          }
        }
      }
    }
LABEL_22:
    ;
  }
  int64_t v13 = v11 + 5;
  if (v13 >= v8) {
    return swift_release();
  }
  uint64_t v12 = *(void *)(v3 + 8 * v13);
  if (v12)
  {
    int64_t v10 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    uint64_t v12 = *(void *)(v3 + 8 * v10);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1B6017B20()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  if (!*(void *)(v1 + 16)) {
    return swift_endAccess();
  }
  sub_1B61B1F70();
  unint64_t v2 = sub_1B5E46C8C();
  if ((v3 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  unint64_t v4 = *(void *)(*(void *)(v1 + 56) + 8 * v2);
  swift_endAccess();
  sub_1B61B1F70();
  uint64_t result = swift_bridgeObjectRelease();
  if (v4 >> 62)
  {
    sub_1B61B1F70();
    uint64_t v6 = sub_1B61B3530();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_5;
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6) {
    return swift_bridgeObjectRelease();
  }
LABEL_5:
  if (v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = MEMORY[0x1BA9B04B0](i, v4);
      }
      else
      {
        uint64_t v8 = *(void *)(v4 + 8 * i + 32);
        swift_retain();
      }
      uint64_t v9 = MEMORY[0x1BA9B1EC0](v8 + 32);
      swift_unknownObjectRelease();
      if (v9)
      {
        int64_t v10 = *(void (**)(uint64_t))(v8 + 16);
        uint64_t v11 = swift_retain();
        v10(v11);
        swift_release();
      }
      swift_release();
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1B6017CA0()
{
  return sub_1B6017B20();
}

uint64_t sub_1B6017CAC()
{
  swift_beginAccess();
  uint64_t v1 = sub_1B61B1F70();
  uint64_t v2 = sub_1B6017200(v1);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 16) = v2;
  return swift_bridgeObjectRelease();
}

uint64_t CommandStateObserverStore.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CommandStateObserverStore.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t CommandStateObserverStore.description.getter()
{
  sub_1B61B3290();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v0 = sub_1B61B1F70();
  sub_1B6016CF4(v0);
  swift_bridgeObjectRelease();
  sub_1B6017EB4();
  sub_1B5E1A168();
  sub_1B61B2070();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  return 0xD00000000000001FLL;
}

void sub_1B6017EB4()
{
  if (!qword_1EB647AE8)
  {
    unint64_t v0 = sub_1B61B2650();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB647AE8);
    }
  }
}

unint64_t sub_1B6017F00()
{
  return CommandStateObserverStore.description.getter();
}

uint64_t type metadata accessor for CommandStateObserver()
{
  return self;
}

uint64_t method lookup function for CommandStateObserver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CommandStateObserver);
}

uint64_t method lookup function for CommandStateObserverStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CommandStateObserverStore);
}

void sub_1B6017F78()
{
  if (!qword_1EB647AC0)
  {
    type metadata accessor for CommandStateObserver();
    unint64_t v0 = sub_1B61B2650();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB647AC0);
    }
  }
}

id CachedFont.font.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  if (v1)
  {
    id v2 = *(id *)(v0 + 32);
  }
  else
  {
    uint64_t v3 = v0;
    unint64_t v4 = (void *)(*(uint64_t (**)(void))(v0 + 16))();
    uint64_t v5 = *(void **)(v0 + 32);
    *(void *)(v3 + 32) = v4;
    id v2 = v4;

    uint64_t v1 = 0;
  }
  id v6 = v1;
  return v2;
}

uint64_t CachedFont.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  CachedFont.init(_:)(a1, a2);
  return v4;
}

void *CachedFont.init(_:)(uint64_t a1, uint64_t a2)
{
  void v2[3] = a2;
  v2[4] = 0;
  v2[2] = a1;
  uint64_t v3 = self;
  swift_retain();
  id v4 = objc_msgSend(v3, sel_defaultCenter);
  uint64_t v5 = *MEMORY[0x1E4FB27A8];
  swift_retain();
  objc_msgSend(v4, sel_addObserver_selector_name_object_, v2, sel_contentSizeCategoryDidChange_, v5, 0);

  swift_release();
  swift_release();
  return v2;
}

void sub_1B6018138()
{
  uint64_t v1 = *(void **)(v0 + 32);
  *(void *)(v0 + 32) = 0;
}

uint64_t CachedFont.deinit()
{
  swift_release();

  return v0;
}

uint64_t CachedFont.__deallocating_deinit()
{
  CachedFont.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CachedFont()
{
  return self;
}

uint64_t method lookup function for CachedFont(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CachedFont);
}

uint64_t dispatch thunk of CachedFont.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

void RadialGradientSectionDecorationItem.Size.Value.init(floatLiteral:)(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)a1 = a2;
  *(unsigned char *)(a1 + 8) = 0;
}

uint64_t static RadialGradientSectionDecorationItem.Size.Value.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(double *)a1 == *(double *)a2;
  }
  return result;
}

void sub_1B6018318(double *a1@<X0>, uint64_t a2@<X8>)
{
}

void RadialGradientSectionDecorationItem.Size.init(width:height:)(uint64_t a1@<X8>)
{
}

uint64_t static RadialGradientSectionDecorationItem.Size.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  char v3 = *(unsigned char *)(a2 + 24);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)a1 != *(double *)a2) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 24))
  {
    if ((*(unsigned char *)(a2 + 24) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(a1 + 16) != *(double *)(a2 + 16)) {
      char v3 = 1;
    }
    if (v3) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1B6018398()
{
  uint64_t result = type metadata accessor for RadialGradientSectionDecorationView();
  qword_1EB64B070 = result;
  return result;
}

uint64_t static RadialGradientSectionDecorationItem.viewClass.getter()
{
  if (qword_1EB64B068 != -1) {
    swift_once();
  }
  return qword_1EB64B070;
}

uint64_t RadialGradientSectionDecorationItem.gradientDescriptor.getter@<X0>(void *a1@<X8>)
{
  memcpy(v4, v1, sizeof(v4));
  memcpy(a1, v1, 0x90uLL);
  return sub_1B5F4EAF8((uint64_t)v4);
}

void RadialGradientSectionDecorationItem.gradientSize.getter(uint64_t a1@<X8>)
{
}

void RadialGradientSectionDecorationItem.overscrollPinPosition.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 169);
}

void RadialGradientSectionDecorationItem.ordering.getter(uint64_t a1@<X8>)
{
}

void RadialGradientSectionDecorationItem.pinTrait.getter(uint64_t a1@<X8>)
{
}

void *RadialGradientSectionDecorationItem.init(gradientDescriptor:ordering:pinTrait:)@<X0>(void *__src@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = memcpy((void *)a4, __src, 0x90uLL);
  uint64_t v8 = *a2;
  uint64_t v9 = *a3;
  char v10 = *((unsigned char *)a3 + 8);
  char v11 = *((unsigned char *)a2 + 8);
  *(void *)(a4 + 144) = 0;
  *(unsigned char *)(a4 + 152) = 1;
  *(void *)(a4 + 16sub_1B5E6F544(4, 0, 0) = 0;
  *(_WORD *)(a4 + 168) = 769;
  *(void *)(a4 + 176) = v8;
  *(unsigned char *)(a4 + 184) = v11;
  *(void *)(a4 + 192) = v9;
  *(unsigned char *)(a4 + 20sub_1B5E6F544(4, 0, 0) = v10;
  return result;
}

void *RadialGradientSectionDecorationItem.init(gradientDescriptor:gradientSize:ordering:pinTrait:)@<X0>(void *__src@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = memcpy((void *)a5, __src, 0x90uLL);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v12 = *a3;
  uint64_t v13 = *a4;
  char v14 = *((unsigned char *)a4 + 8);
  char v10 = *(unsigned char *)(a2 + 8);
  char v16 = *(unsigned char *)(a2 + 24);
  char v15 = *((unsigned char *)a3 + 8);
  *(void *)(a5 + 144) = *(void *)a2;
  *(unsigned char *)(a5 + 152) = v10;
  *(void *)(a5 + 16sub_1B5E6F544(4, 0, 0) = v11;
  *(unsigned char *)(a5 + 168) = v16;
  *(unsigned char *)(a5 + 169) = 3;
  *(void *)(a5 + 176) = v12;
  *(unsigned char *)(a5 + 184) = v15;
  *(void *)(a5 + 192) = v13;
  *(unsigned char *)(a5 + 20sub_1B5E6F544(4, 0, 0) = v14;
  return result;
}

void *RadialGradientSectionDecorationItem.init(gradientDescriptor:gradientSize:overscrollPinPosition:ordering:pinTrait:)@<X0>(void *__src@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t result = memcpy((void *)a6, __src, 0x90uLL);
  uint64_t v13 = *(void *)(a2 + 16);
  char v14 = *a3;
  uint64_t v15 = *a4;
  uint64_t v16 = *a5;
  char v17 = *((unsigned char *)a5 + 8);
  char v12 = *(unsigned char *)(a2 + 8);
  char v19 = *(unsigned char *)(a2 + 24);
  char v18 = *((unsigned char *)a4 + 8);
  *(void *)(a6 + 144) = *(void *)a2;
  *(unsigned char *)(a6 + 152) = v12;
  *(void *)(a6 + 16sub_1B5E6F544(4, 0, 0) = v13;
  *(unsigned char *)(a6 + 168) = v19;
  *(unsigned char *)(a6 + 169) = v14;
  *(void *)(a6 + 176) = v15;
  *(unsigned char *)(a6 + 184) = v18;
  *(void *)(a6 + 192) = v16;
  *(unsigned char *)(a6 + 20sub_1B5E6F544(4, 0, 0) = v17;
  return result;
}

BOOL static RadialGradientSectionDecorationItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 144);
  char v3 = *(unsigned char *)(a1 + 152);
  double v4 = *(double *)(a1 + 160);
  char v5 = *(unsigned char *)(a1 + 168);
  int v6 = *(unsigned __int8 *)(a1 + 169);
  double v7 = *(double *)(a2 + 144);
  int v8 = *(unsigned __int8 *)(a2 + 152);
  double v9 = *(double *)(a2 + 160);
  int v10 = *(unsigned __int8 *)(a2 + 168);
  int v11 = *(unsigned __int8 *)(a2 + 169);
  BOOL v12 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v12 || (v13 = sub_1B61B3760(), BOOL result = 0, (v13 & 1) != 0))
  {
    if (v3)
    {
      if (!v8) {
        return 0;
      }
    }
    else
    {
      if (v2 == v7) {
        char v15 = v8;
      }
      else {
        char v15 = 1;
      }
      if (v15) {
        return 0;
      }
    }
    if (v5)
    {
      if (!v10) {
        return 0;
      }
    }
    else
    {
      if (v4 == v9) {
        char v16 = v10;
      }
      else {
        char v16 = 1;
      }
      if (v16) {
        return 0;
      }
    }
    BOOL v18 = v11 != 3 && v6 == v11;
    if (v6 == 3) {
      return v11 == 3;
    }
    else {
      return v18;
    }
  }
  return result;
}

Swift::Void __swiftcall RadialGradientSectionDecorationView.willMove(toSuperview:)(UIView_optional *toSuperview)
{
  v3.receiver = v1;
  v3.super_class = (Class)swift_getObjectType();
  [(UIView_optional *)&v3 willMoveToSuperview:toSuperview];
}

Swift::Void __swiftcall RadialGradientSectionDecorationView.didMoveToSuperview()()
{
}

id RadialGradientSectionDecorationView.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_38();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_35_0();
  return objc_msgSend(v2, v3, v4);
}

char *RadialGradientSectionDecorationView.init(frame:)()
{
  OUTLINED_FUNCTION_38();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientView;
  id v3 = objc_allocWithZone((Class)type metadata accessor for RadialGradientView());
  double v4 = v0;
  *(void *)&v0[v2] = objc_msgSend(v3, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  char v5 = &v4[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientSize];
  *(void *)char v5 = 0;
  v5[8] = 1;
  *((void *)v5 + 2) = 0;
  v5[24] = 1;
  v4[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_overscrollPinPosition] = 3;

  double v6 = OUTLINED_FUNCTION_35_0();
  double v9 = (char *)objc_msgSendSuper2(v7, v8, v6, v4, ObjectType);
  uint64_t v10 = OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientView;
  uint64_t v11 = *(void *)&v9[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientView];
  BOOL v12 = v9;
  objc_msgSend(v12, sel_addSubview_, v11);
  id v13 = *(id *)&v9[v10];
  v16.origin.double x = OUTLINED_FUNCTION_35_0();
  double Width = CGRectGetWidth(v16);
  v17.origin.double x = OUTLINED_FUNCTION_35_0();
  objc_msgSend(v13, sel_setFrame_, 0.0, 0.0, Width, CGRectGetHeight(v17));

  return v12;
}

id RadialGradientSectionDecorationView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void RadialGradientSectionDecorationView.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientView;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RadialGradientView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = &v0[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientSize];
  *(void *)uint64_t v2 = 0;
  v2[8] = 1;
  *((void *)v2 + 2) = 0;
  v2[24] = 1;
  v0[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_overscrollPinPosition] = 3;

  sub_1B61B34D0();
  __break(1u);
}

Swift::Void __swiftcall RadialGradientSectionDecorationView.layoutSubviews()()
{
  v18[0].receiver = v0;
  v18[0].super_class = (Class)swift_getObjectType();
  [(objc_super *)v18 layoutSubviews];
  uint64_t v1 = OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientView], sel_transform);
  v18[1] = v19;
  void v18[2] = v20;
  void v18[3] = v21;
  objc_super v19 = (objc_super)0x3FF0000000000000uLL;
  v20.receiver = 0;
  v20.super_class = (Class)0x3FF0000000000000;
  objc_super v21 = (objc_super)0;
  if (sub_1B61B2BD0())
  {
    id v2 = *(id *)&v0[v1];
    objc_msgSend(v2, sel_frame);
    double MinX = CGRectGetMinX(v22);
    objc_msgSend(*(id *)&v0[v1], sel_frame);
    double MinY = CGRectGetMinY(v23);
    char v5 = (double *)&v0[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientSize];
    double Width = *(double *)&v0[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientSize];
    int v7 = v0[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientSize + 8];
    objc_msgSend(v0, sel_bounds);
    if (v7 == 1) {
      double Width = CGRectGetWidth(*(CGRect *)&v8);
    }
    double Height = v5[2];
    int v13 = *((unsigned __int8 *)v5 + 24);
    objc_msgSend(v0, sel_bounds);
    if (v13 == 1) {
      double Height = CGRectGetHeight(*(CGRect *)&v14);
    }
    objc_msgSend(v2, sel_setFrame_, MinX, MinY, Width, Height);
  }
}

Swift::Void __swiftcall RadialGradientSectionDecorationView.apply(_:)(UICollectionViewLayoutAttributes *a1)
{
  id v2 = v1;
  v23.receiver = v2;
  v23.super_class = (Class)swift_getObjectType();
  [(UICollectionViewLayoutAttributes *)&v23 applyLayoutAttributes:a1];
  type metadata accessor for BlueprintLayoutCollectionLayoutAttributes();
  uint64_t v4 = swift_dynamicCastClass();
  if (v4)
  {
    uint64_t v5 = v4 + OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_model;
    swift_beginAccess();
    sub_1B5E5881C(v5, (uint64_t)v21);
    if (v22)
    {
      sub_1B5F5C5A8();
      double v6 = a1;
      if (swift_dynamicCast())
      {
        memcpy(__dst, __src, 0xC9uLL);
        int v7 = *(void **)&v2[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientView];
        memcpy(v19, __src, sizeof(v19));
        nullsub_1(v19, v8, v9, v10, v11);
        sub_1B6018FBC((uint64_t)v19, (uint64_t)v17);
        id v12 = v7;
        sub_1B5F4EAF8((uint64_t)__dst);
        RadialGradientView.gradientDescriptor.setter((uint64_t)v17);

        char v13 = __dst[19];
        uint64_t v14 = __dst[20];
        char v15 = __dst[21];
        CGRect v16 = &v2[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientSize];
        *(void *)CGRect v16 = __dst[18];
        v16[8] = v13;
        *((void *)v16 + 2) = v14;
        v16[24] = v15;
        sub_1B601906C((uint64_t)__dst);
        v2[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_overscrollPinPosition] = BYTE1(__dst[21]);
      }
      else
      {
      }
    }
    else
    {
      sub_1B5E588AC((uint64_t)v21);
    }
  }
}

id RadialGradientSectionDecorationView.__deallocating_deinit()
{
  return sub_1B5E5A574((SEL *)&selRef_dealloc);
}

BOOL RadialGradientSectionDecorationView.shouldMonitorScroll.getter()
{
  return *(unsigned char *)(v0 + OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_overscrollPinPosition) != 3;
}

uint64_t RadialGradientSectionDecorationView.shouldMonitorMotion.getter()
{
  return 0;
}

void RadialGradientSectionDecorationView.blueprintViewportMonitor(_:viewportScrollDataDidChange:)(uint64_t a1, uint64_t a2)
{
  if (v2[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_overscrollPinPosition] != 3)
  {
    id v4 = *(id *)&v2[OBJC_IVAR____TtC5TeaUI35RadialGradientSectionDecorationView_gradientView];
    sub_1B6152724(v4, v2, a2);
  }
}

uint64_t sub_1B6018FBC(uint64_t a1, uint64_t a2)
{
  sub_1B6019020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B6019020()
{
  if (!qword_1E9DAB758)
  {
    unint64_t v0 = sub_1B61B2F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAB758);
    }
  }
}

uint64_t sub_1B601906C(uint64_t a1)
{
  return a1;
}

uint64_t destroy for RadialGradientDescriptor()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RadialGradientSectionDecorationItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 12sub_1B5E6F544(4, 0, 0) = *(unsigned char *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v5 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v5;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
  *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(unsigned char *)(a1 + 20sub_1B5E6F544(4, 0, 0) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  sub_1B61B1F70();
  sub_1B61B1F70();
  sub_1B61B1F70();
  return a1;
}

uint64_t assignWithCopy for RadialGradientSectionDecorationItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  long long v4 = *(_OWORD *)(a2 + 32);
  long long v5 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 88);
  long long v7 = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 12sub_1B5E6F544(4, 0, 0) = *(unsigned char *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = v7;
  *(_OWORD *)(a1 + 88) = v6;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v8;
  uint64_t v9 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 16sub_1B5E6F544(4, 0, 0) = v9;
  *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
  uint64_t v10 = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = v10;
  uint64_t v11 = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 20sub_1B5E6F544(4, 0, 0) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = v11;
  return a1;
}

void *__swift_memcpy201_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC9uLL);
}

uint64_t assignWithTake for RadialGradientSectionDecorationItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 12sub_1B5E6F544(4, 0, 0) = *(unsigned char *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 16sub_1B5E6F544(4, 0, 0) = *(void *)(a2 + 160);
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(unsigned char *)(a1 + 20sub_1B5E6F544(4, 0, 0) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for RadialGradientSectionDecorationItem(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 201))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RadialGradientSectionDecorationItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 12sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 20sub_1B5E6F544(4, 0, 0) = 0;
    *(void *)BOOL result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 20MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 20MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for RadialGradientSectionDecorationItem()
{
}

void type metadata accessor for RadialGradientSectionDecorationItem.Size()
{
}

void type metadata accessor for RadialGradientSectionDecorationItem.Size.Value()
{
}

uint64_t type metadata accessor for RadialGradientSectionDecorationView()
{
  return self;
}

uint64_t dispatch thunk of BlueprintLayoutCollectionSectionSolverType.supplementarySolver.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BlueprintLayoutCollectionSectionSolverType.prepare(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of BlueprintLayoutCollectionSectionSolverType.layout(frame:for:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of BlueprintLayoutCollectionSectionSolverType.adjust(frame:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of BlueprintLayoutCollectionSectionSolverType.update(cursor:frame:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of BlueprintLayoutCollectionSectionSolverType.commit(cursor:union:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of BlueprintLayoutCollectionSectionSolverType.fill(initialCursor:cursor:unionFrame:headerUnionFrame:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

id KeyCommandCenter.__allocating_init(commandCenter:commands:)()
{
  id v0 = objc_allocWithZone((Class)OUTLINED_FUNCTION_0_58());
  return KeyCommandCenter.init(commandCenter:commands:)();
}

id KeyCommandCenter.init(commandCenter:commands:)()
{
  OUTLINED_FUNCTION_0_58();
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  long long v5 = &v1[OBJC_IVAR____TtC5TeaUI16KeyCommandCenter_stagedTracker];
  *(_OWORD *)long long v5 = 0u;
  *((_OWORD *)v5 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0u;
  *((void *)v5 + 4) = 0;
  long long v6 = &v1[OBJC_IVAR____TtC5TeaUI16KeyCommandCenter_commandCenter];
  *(void *)long long v6 = v3;
  *((void *)v6 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v2;
  *(void *)&v1[OBJC_IVAR____TtC5TeaUI16KeyCommandCenter_commandItems] = v0;
  v8.receiver = v1;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

void KeyCommandCenter.handleKeyCommand(sender:)(uint64_t a1)
{
  sub_1B5E17688(a1, (uint64_t)v2);
  sub_1B6019648();
  if (swift_dynamicCast())
  {
    sub_1B6019688(v1);
  }
}

unint64_t sub_1B6019648()
{
  unint64_t result = qword_1EB647B78;
  if (!qword_1EB647B78)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB647B78);
  }
  return result;
}

uint64_t sub_1B6019688(void *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5TeaUI16KeyCommandCenter_stagedTracker;
  swift_beginAccess();
  sub_1B5FBE100(v3, (uint64_t)&v27);
  if (!v28) {
    return sub_1B6019EEC((uint64_t)&v27);
  }
  sub_1B5E30E70(&v27, (uint64_t)v29);
  sub_1B601A210(a1, &v27);
  char v26 = 8;
  sub_1B5E176E4((uint64_t)v29, (uint64_t)v16);
  memset(v30, 0, 32);
  v30[32] = 1;
  type metadata accessor for CommandExecutionSource();
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v17;
  uint64_t v6 = v18;
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v17);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v16[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  sub_1B61137DC((uint64_t)&v26, (uint64_t)v9, 0, (uint64_t)v30, 0, 0, 0, v4, v5, v6, v15, v16[0], v16[1], v16[2], v17, v18, v19, v20, v21,
    v22,
    v23,
    v24);
  uint64_t v12 = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  sub_1B601A474((uint64_t)&v27, (uint64_t)v16);
  if (v17)
  {
    char v13 = v25;
    swift_retain();
    sub_1B601A544((uint64_t)v16);
    v13(*(void *)(v1 + OBJC_IVAR____TtC5TeaUI16KeyCommandCenter_commandCenter), *(void *)(v1 + OBJC_IVAR____TtC5TeaUI16KeyCommandCenter_commandCenter + 8), v12);
    swift_release();
    swift_release();
    sub_1B601A4E8((uint64_t)&v27, &qword_1E9DAB778);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  else
  {
    swift_release();
    sub_1B601A4E8((uint64_t)&v27, &qword_1E9DAB778);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    return sub_1B601A4E8((uint64_t)v16, &qword_1E9DAB778);
  }
}

uint64_t KeyCommandCenter.keyCommands(with:)(uint64_t a1)
{
  sub_1B5E176E4(a1, (uint64_t)v4);
  uint64_t v2 = v1 + OBJC_IVAR____TtC5TeaUI16KeyCommandCenter_stagedTracker;
  swift_beginAccess();
  sub_1B60199C0((uint64_t)v4, v2);
  swift_endAccess();
  return sub_1B6019AAC();
}

uint64_t sub_1B60199C0(uint64_t a1, uint64_t a2)
{
  sub_1B601A1AC(0, &qword_1EB642CD0, (uint64_t (*)(uint64_t))sub_1B6019A54, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B6019A54()
{
  unint64_t result = qword_1EB642CC0;
  if (!qword_1EB642CC0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB642CC0);
  }
  return result;
}

uint64_t sub_1B6019AAC()
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC5TeaUI16KeyCommandCenter_commandItems);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    sub_1B61B1F70();
    for (uint64_t i = (unsigned char *)(v2 + 112); ; i += 136)
    {
      uint64_t v5 = *((void *)i - 5);
      uint64_t v6 = *((void *)i - 4);
      uint64_t v7 = *((void *)i - 3);
      if (*i)
      {
        uint64_t v9 = *((void *)i - 2);
        uint64_t v8 = *((void *)i - 1);
        uint64_t v10 = sub_1B6019F78((uint64_t)(i - 80), v5, v6, v8, 0);
        if (v10)
        {
          id v11 = v10;
          uint64_t v12 = sub_1B6019F78((uint64_t)(i - 80), v7, v9, v8, 1);
          if (v12)
          {
            char v13 = v12;
            id v11 = v11;
            MEMORY[0x1BA9AF660]();
            if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1B61B2580();
            }
            sub_1B61B25D0();
            sub_1B61B2510();
            id v14 = v13;
            MEMORY[0x1BA9AF660]();
            if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1B61B2580();
            }
            sub_1B61B25D0();
            sub_1B61B2510();
          }
LABEL_15:
        }
      }
      else
      {
        uint64_t v15 = sub_1B6019F78((uint64_t)(i - 80), v5, v6, *((void *)i - 3), 1);
        if (v15)
        {
          id v11 = v15;
          MEMORY[0x1BA9AF660]();
          if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1B61B2580();
          }
          sub_1B61B25D0();
          sub_1B61B2510();
          goto LABEL_15;
        }
      }
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        return v16;
      }
    }
  }
  return result;
}

uint64_t KeyCommandCenter.canPerformAction(_:withSender:)()
{
  return sub_1B61AFCC0();
}

id KeyCommandCenter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void KeyCommandCenter.init()()
{
}

id KeyCommandCenter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t dispatch thunk of KeyCommandCenterType.handleKeyCommand(sender:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of KeyCommandCenterType.keyCommands(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for KeyCommandCenter()
{
  return self;
}

uint64_t method lookup function for KeyCommandCenter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for KeyCommandCenter);
}

uint64_t dispatch thunk of KeyCommandCenter.__allocating_init(commandCenter:commands:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1B6019EEC(uint64_t a1)
{
  sub_1B601A1AC(0, &qword_1EB642CD0, (uint64_t (*)(uint64_t))sub_1B6019A54, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1B6019F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v8 = *(void *)(v5 + OBJC_IVAR____TtC5TeaUI16KeyCommandCenter_commandCenter);
  uint64_t v9 = *(void *)(v5 + OBJC_IVAR____TtC5TeaUI16KeyCommandCenter_commandCenter + 8);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(a1 + 104))(v8, v9) & 1) == 0) {
    return 0;
  }
  char v20 = a5;
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 120))(v8, v9);
  uint64_t v12 = v11;
  sub_1B601A1AC(0, &qword_1EB642480, (uint64_t (*)(uint64_t))sub_1B5E1DDFC, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B61BE690;
  *(void *)(inited + 32) = 0xD000000000000012;
  *(void *)(inited + 4sub_1B5E6F544(4, 0, 0) = 0x80000001B61E7EF0;
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  __swift_project_boxed_opaque_existential_1((void *)a1, v15);
  *(void *)(inited + 48) = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v15, v14);
  *(void *)(inited + 56) = v16;
  sub_1B61B1F50();
  sub_1B6019648();
  sub_1B601A598(0, (unint64_t *)&qword_1EB642450);
  sub_1B61B1F70();
  sub_1B61B1F70();
  uint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t v17 = (void *)sub_1B61B2B40();
  if (v20)
  {
    sub_1B5ED90BC(v10, v12, v17);
  }
  else
  {
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_setAttributes_, 4, v19, 0, 0, 0, 0);
  }
  return v17;
}

void sub_1B601A1AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B601A210(void *a1@<X0>, void *a2@<X8>)
{
  if (objc_msgSend(a1, sel_propertyList))
  {
    sub_1B61B3030();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v15, 0, sizeof(v15));
  }
  sub_1B5E5F708((uint64_t)v15, (uint64_t)v14);
  if (!v14[3]) {
    goto LABEL_17;
  }
  sub_1B601A598(0, &qword_1E9DAB780);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_18:
    bzero(a2, 0x88uLL);
    return;
  }
  sub_1B5E138E8();
  swift_bridgeObjectRelease();
  if (!v14[3])
  {
LABEL_17:
    sub_1B601A4E8((uint64_t)v14, (unint64_t *)&qword_1EB64CAC0);
    goto LABEL_18;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_18;
  }
  uint64_t v4 = *((void *)&v15[0] + 1);
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC5TeaUI16KeyCommandCenter_commandItems);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = *(void *)&v15[0];
    uint64_t v8 = v5 + 32;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_1B5FBE17C(v8, (uint64_t)v14);
      uint64_t v9 = v14[3];
      uint64_t v10 = v14[4];
      __swift_project_boxed_opaque_existential_1(v14, v14[3]);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10) == v7 && v11 == v4) {
        break;
      }
      char v13 = sub_1B61B3760();
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_22;
      }
      sub_1B601A544((uint64_t)v14);
      v8 += 136;
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease();
LABEL_22:
    swift_bridgeObjectRelease();
    memcpy(a2, v14, 0x88uLL);
  }
  else
  {
    sub_1B61B1F70();
LABEL_20:
    bzero(a2, 0x88uLL);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1B601A474(uint64_t a1, uint64_t a2)
{
  sub_1B5F0520C(0, &qword_1E9DAB778);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B601A4E8(uint64_t a1, unint64_t *a2)
{
  sub_1B5F0520C(0, a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B601A544(uint64_t a1)
{
  return a1;
}

void sub_1B601A598(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1B61B1FD0();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t DebugDataSource.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  DebugDataSource.init()();
  return v0;
}

uint64_t DebugDataSource.init()()
{
  uint64_t v1 = v0;
  sub_1B5E88D04();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B61C28B0;
  uint64_t v3 = type metadata accessor for DebugSection();
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 24) = MEMORY[0x1E4FBC860];
  *(unsigned char *)(v4 + 16) = 0;
  *(void *)(v2 + 32) = v4;
  uint64_t v6 = OUTLINED_FUNCTION_2_91();
  *(void *)(v6 + 24) = v5;
  *(unsigned char *)(v6 + 16) = 1;
  *(void *)(v2 + 4sub_1B5E6F544(4, 0, 0) = v6;
  uint64_t v7 = OUTLINED_FUNCTION_2_91();
  *(void *)(v7 + 24) = v5;
  *(unsigned char *)(v7 + 16) = 2;
  *(void *)(v2 + 48) = v7;
  uint64_t v8 = OUTLINED_FUNCTION_2_91();
  *(void *)(v8 + 24) = v5;
  *(unsigned char *)(v8 + 16) = 3;
  *(void *)(v2 + 56) = v8;
  sub_1B61B2510();
  uint64_t v9 = sub_1B5E00F20(&qword_1EB64BDE0, (void (*)(uint64_t))type metadata accessor for DebugSection);
  uint64_t v10 = sub_1B5E00F20(&qword_1EB64BDD8, (void (*)(uint64_t))type metadata accessor for DebugSection);
  MEMORY[0x1BA9AD750](v2, v3, v9, v10);
  return v1;
}

uint64_t sub_1B601A780(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v44 = a4;
  uint64_t v50 = a2;
  uint64_t v43 = a1;
  uint64_t v51 = 0x736C6562616CLL;
  sub_1B5E00E54();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_0_10();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a3 + 8);
  uint64_t v46 = *(void *)a3;
  uint64_t v15 = *(void *)(a3 + 16);
  uint64_t v14 = *(void *)(a3 + 24);
  uint64_t v16 = *(void *)(a3 + 32);
  uint64_t v52 = *(void *)(a3 + 40);
  uint64_t v17 = *(unsigned __int8 *)(a3 + 48);
  uint64_t v18 = v4 + OBJC_IVAR____TtC5TeaUI15DebugDataSource_sections;
  swift_beginAccess();
  uint64_t v45 = v9;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v47 = v7;
  v19(v12, v18, v7);
  uint64_t v20 = v17;
  uint64_t v21 = v17;
  uint64_t v22 = v46;
  switch(v20)
  {
    case 4:
    case 5:
    case 8:
      OUTLINED_FUNCTION_1_95();
      uint64_t v24 = 0x7365676170;
      goto LABEL_5;
    case 6:
      sub_1B61B1F70();
      goto LABEL_6;
    case 7:
      goto LABEL_6;
    case 9:
      sub_1B61B1F70();
      sub_1B61B1F70();
      sub_1B61B1F70();
      uint64_t v23 = 0x656C646E7562;
      goto LABEL_3;
    default:
      OUTLINED_FUNCTION_1_95();
      uint64_t v23 = 0x6E6F69746361;
LABEL_3:
      uint64_t v24 = v23 & 0xFFFFFFFFFFFFLL | 0x73000000000000;
LABEL_5:
      uint64_t v51 = v24;
LABEL_6:
      uint64_t v48 = v21;
      uint64_t v49 = v16;
      uint64_t v25 = v14;
      uint64_t v26 = v15;
      uint64_t v27 = v22;
      uint64_t v28 = v50;
      sub_1B61B1F70();
      uint64_t v29 = v47;
      sub_1B61B0680();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v12, v29);
      if (v55)
      {
        v53[0] = v43;
        v53[1] = v28;
        unsigned char v53[2] = v27;
        v53[3] = v13;
        uint64_t v30 = v13;
        uint64_t v31 = v26;
        v53[4] = v26;
        void v53[5] = v25;
        char v33 = v48;
        uint64_t v32 = v49;
        uint64_t v34 = v52;
        v53[6] = v49;
        v53[7] = v52;
        char v54 = v48;
        sub_1B6158C94(v53, v44 & 1);
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v35 = v27;
        uint64_t v36 = v30;
        uint64_t v37 = v31;
        uint64_t v38 = v25;
        uint64_t v39 = v32;
        uint64_t v40 = v34;
        char v41 = v33;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v35 = v27;
        uint64_t v36 = v13;
        uint64_t v37 = v26;
        uint64_t v38 = v25;
        char v41 = v48;
        uint64_t v39 = v49;
        uint64_t v40 = v52;
      }
      return sub_1B601AF60(v35, v36, v37, v38, v39, v40, v41);
  }
}

uint64_t sub_1B601AA64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = *(unsigned char *)(a3 + 48);
  long long v4 = *(_OWORD *)(a3 + 16);
  v6[0] = *(_OWORD *)a3;
  v6[1] = v4;
  long long v6[2] = *(_OWORD *)(a3 + 32);
  char v7 = v3;
  return sub_1B601A780(a1, a2, (uint64_t)v6, 1);
}

uint64_t sub_1B601AAA4()
{
  sub_1B601B1C4();
  uint64_t v2 = v1 - 8;
  MEMORY[0x1F4188790](v1);
  long long v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B5E00E54();
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_0_10();
  uint64_t v8 = v7;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v33 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v35 = (char *)&v33 - v16;
  uint64_t v17 = (char *)(v0 + OBJC_IVAR____TtC5TeaUI15DebugDataSource_sections);
  swift_beginAccess();
  uint64_t v36 = v8;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v34 = v17;
  uint64_t v37 = v18;
  v18(v15, v17, v6);
  uint64_t v39 = MEMORY[0x1E4FBC860];
  sub_1B5E00F20(&qword_1E9DAB790, (void (*)(uint64_t))sub_1B5E00E54);
  sub_1B61B2300();
  uint64_t v19 = &v4[*(int *)(v2 + 44)];
  sub_1B5E00F20(&qword_1E9DADBE0, (void (*)(uint64_t))sub_1B5E00E54);
  uint64_t v20 = *(void *)v19;
  OUTLINED_FUNCTION_4_74();
  if (v20 != v38[0])
  {
    uint64_t v21 = (void (**)(char *, uint64_t))(v36 + 8);
    do
    {
      uint64_t v22 = (void (*)(uint64_t *, void))sub_1B61B2AB0();
      uint64_t v24 = *v23;
      swift_retain();
      v22(v38, 0);
      v37(v12, v4, v6);
      sub_1B61B2980();
      (*v21)(v12, v6);
      swift_beginAccess();
      if (*(void *)(*(void *)(v24 + 24) + 16))
      {
        sub_1B61B3370();
        sub_1B61B33B0();
        sub_1B61B33C0();
        sub_1B61B3380();
      }
      else
      {
        swift_release();
      }
      uint64_t v25 = *(void *)v19;
      OUTLINED_FUNCTION_4_74();
    }
    while (v25 != v38[0]);
  }
  sub_1B601B258((uint64_t)v4);
  uint64_t v26 = v39;
  uint64_t v27 = type metadata accessor for DebugSection();
  uint64_t v28 = sub_1B5E00F20(&qword_1EB64BDE0, (void (*)(uint64_t))type metadata accessor for DebugSection);
  uint64_t v29 = sub_1B5E00F20(&qword_1EB64BDD8, (void (*)(uint64_t))type metadata accessor for DebugSection);
  uint64_t v30 = v35;
  MEMORY[0x1BA9AD750](v26, v27, v28, v29);
  uint64_t v31 = v34;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v36 + 40))(v31, v30, v6);
  return swift_endAccess();
}

uint64_t DebugDataSource.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5TeaUI15DebugDataSource_sections;
  sub_1B5E00E54();
  OUTLINED_FUNCTION_19_1();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  return v0;
}

uint64_t DebugDataSource.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5TeaUI15DebugDataSource_sections;
  sub_1B5E00E54();
  OUTLINED_FUNCTION_19_1();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  return swift_deallocClassInstance();
}

uint64_t sub_1B601AF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
    case 2:
    case 4:
    case 5:
    case 8:
    case 10:
    case 11:
    case 12:
    case 13:
      goto LABEL_2;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
LABEL_2:
      return swift_release();
    case 6:
      goto LABEL_7;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B601B054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
    case 2:
    case 4:
    case 5:
    case 8:
    case 10:
    case 11:
    case 12:
    case 13:
      goto LABEL_2;
    case 1:
    case 3:
      sub_1B61B1F70();
LABEL_2:
      return swift_retain();
    case 6:
      goto LABEL_7;
    case 9:
      sub_1B61B1F70();
      sub_1B61B1F70();
LABEL_7:
      uint64_t result = sub_1B61B1F70();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B601B148()
{
  return type metadata accessor for DebugDataSource();
}

uint64_t method lookup function for DebugDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DebugDataSource);
}

uint64_t dispatch thunk of DebugDataSource.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of DebugDataSource.add(_:_:sort:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DebugDataSource.add(_:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

void sub_1B601B1C4()
{
  if (!qword_1E9DAB788)
  {
    sub_1B5E00E54();
    sub_1B5E00F20(&qword_1E9DADBE0, (void (*)(uint64_t))sub_1B5E00E54);
    unint64_t v0 = sub_1B61B3450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAB788);
    }
  }
}

uint64_t sub_1B601B258(uint64_t a1)
{
  sub_1B601B1C4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t RestorationEvent.fromState.getter(char a1)
{
  return sub_1B5EA77D4((uint64_t)*(&off_1E6137C00 + a1));
}

uint64_t RestorationEvent.toState.getter(int a1)
{
  return (a1 + 1);
}

BOOL static RestorationEvent.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t RestorationEvent.hash(into:)()
{
  return sub_1B61B3910();
}

BOOL sub_1B601B310(char *a1, char *a2)
{
  return static RestorationEvent.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1B601B31C()
{
  return RestorationEvent.hashValue.getter(*v0);
}

uint64_t sub_1B601B324()
{
  return RestorationEvent.hash(into:)();
}

uint64_t sub_1B601B32C()
{
  return RestorationEvent.fromState.getter(*v0);
}

uint64_t sub_1B601B334@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = RestorationEvent.toState.getter(*v1);
  *a1 = result;
  return result;
}

unint64_t sub_1B601B364()
{
  unint64_t result = qword_1EB63FEC8;
  if (!qword_1EB63FEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB63FEC8);
  }
  return result;
}

unint64_t sub_1B601B3B8()
{
  unint64_t result = qword_1E9DAB798;
  if (!qword_1E9DAB798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB798);
  }
  return result;
}

unint64_t sub_1B601B408()
{
  unint64_t result = qword_1EB63FEB8;
  if (!qword_1EB63FEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB63FEB8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RestorationState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B601B520);
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RestorationState()
{
  return &type metadata for RestorationState;
}

unsigned char *storeEnumTagSinglePayload for RestorationEvent(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B601B624);
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RestorationEvent()
{
  return &type metadata for RestorationEvent;
}

id ActionButton.__allocating_init(frame:)()
{
  OUTLINED_FUNCTION_38();
  id v1 = objc_allocWithZone(v0);
  double v4 = OUTLINED_FUNCTION_35_0();
  return objc_msgSend(v2, v3, v4);
}

id ActionButton.onTap.getter()
{
  return OUTLINED_FUNCTION_3_4(OBJC_IVAR____TtC5TeaUI12ActionButton_onTap);
}

id ActionButton.onMenuPresentation.getter()
{
  return OUTLINED_FUNCTION_3_4(OBJC_IVAR____TtC5TeaUI12ActionButton_onMenuPresentation);
}

char *ActionButton.init(frame:)()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OBJC_IVAR____TtC5TeaUI12ActionButton_onTap;
  sub_1B5E76EB0();
  int v3 = v2;
  id v4 = objc_allocWithZone(v2);
  uint64_t v5 = v0;
  *(void *)&v0[v1] = objc_msgSend(v4, sel_init);
  uint64_t v6 = OBJC_IVAR____TtC5TeaUI12ActionButton_onMenuPresentation;
  *(void *)&v5[v6] = objc_msgSend(objc_allocWithZone(v3), sel_init);

  uint64_t v17 = type metadata accessor for ActionButton();
  double v7 = OUTLINED_FUNCTION_35_0();
  uint64_t v10 = (char *)objc_msgSendSuper2(v8, v9, v7, v5, v17);
  uint64_t v11 = *(void *)&v10[OBJC_IVAR____TtC5TeaUI12ActionButton_onTap];
  uint64_t v12 = v10;
  objc_msgSend(v12, sel_addTarget_action_forControlEvents_, v11, sel_handleAction, 64);
  objc_msgSend(v12, sel_addTarget_action_forControlEvents_, *(void *)&v12[OBJC_IVAR____TtC5TeaUI12ActionButton_onMenuPresentation], sel_handleAction, 0x4000);
  objc_msgSend(v12, sel_setShowsLargeContentViewer_, 1);
  id v13 = objc_allocWithZone(MEMORY[0x1E4FB1938]);
  uint64_t v14 = v12;
  id v15 = objc_msgSend(v13, sel_init);
  objc_msgSend(v14, sel_addInteraction_, v15);

  return v14;
}

uint64_t type metadata accessor for ActionButton()
{
  return self;
}

id sub_1B601B88C()
{
  id v0 = objc_msgSend((id)swift_getObjCClassFromObject(), sel_buttonWithType_, 1);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v0;
}

id ActionButton.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ActionButton.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC5TeaUI12ActionButton_onTap;
  sub_1B5E76EB0();
  id v3 = v2;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  uint64_t v4 = OBJC_IVAR____TtC5TeaUI12ActionButton_onMenuPresentation;
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(v3), sel_init);

  sub_1B61B34D0();
  __break(1u);
}

void sub_1B601BA1C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5TeaUI12ActionButton_onMenuPresentation);
}

id ActionButton.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActionButton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall ActionButton.prepareForReuse()()
{
  id v0 = sub_1B5E76DD8();
}

void sub_1B601BB30()
{
}

void sub_1B601BB54(unsigned char *a1@<X8>)
{
}

void CommandStateType.commandState.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t getEnumTagSinglePayload for CommandState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD)
  {
    unsigned int v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 3;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1B601BC18);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 < 2) {
    return 0;
  }
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v8 - 1;
  if (v8 <= 1) {
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CommandState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v7 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1B601BD00);
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_1B601BD28(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

unsigned char *sub_1B601BD44(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for CommandState()
{
  return &type metadata for CommandState;
}

uint64_t dispatch thunk of CommandStateType.commandState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void sub_1B601BD80(unsigned char *a1@<X8>)
{
}

uint64_t sub_1B601BD98(uint64_t a1, char a2)
{
  sub_1B61AFD20();
  *(void *)(v2 + 16) = a1;
  *(unsigned char *)(v2 + 24) = a2;
  return v2;
}

BOOL static JSONSchemaView.JSONSaveMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t JSONSchemaView.JSONSaveMode.hash(into:)()
{
  return sub_1B61B3910();
}

uint64_t JSONSchemaView.JSONSaveMode.hashValue.getter()
{
  return sub_1B61B3940();
}

void JSONSchemaView.init(schema:jsonSaveMode:onJSONSave:)()
{
  OUTLINED_FUNCTION_83();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  unsigned int v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1B60223C8(0, &qword_1E9DA86C0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  uint64_t v13 = OUTLINED_FUNCTION_14(v12);
  MEMORY[0x1F4188790](v13);
  id v15 = (char *)&v29 - v14;
  int v31 = *v5;
  uint64_t v16 = (int *)type metadata accessor for JSONSchemaView();
  LOBYTE(v32) = 0;
  sub_1B61B1B60();
  OUTLINED_FUNCTION_5_54();
  OUTLINED_FUNCTION_14_28();
  OUTLINED_FUNCTION_5_54();
  OUTLINED_FUNCTION_14_28();
  OUTLINED_FUNCTION_5_54();
  OUTLINED_FUNCTION_14_28();
  OUTLINED_FUNCTION_5_54();
  uint64_t v17 = v9 + v16[10];
  uint64_t v32 = 0;
  unint64_t v33 = 0xE000000000000000;
  sub_1B61B1B60();
  uint64_t v18 = v35;
  *(_OWORD *)uint64_t v17 = v34;
  *(void *)(v17 + 16) = v18;
  uint64_t v19 = (uint64_t *)(v9 + v16[11]);
  *uint64_t v19 = swift_getKeyPath();
  sub_1B60223C8(0, &qword_1E9DAB7B0, (uint64_t (*)(uint64_t))sub_1B602242C, MEMORY[0x1E4F3C648]);
  swift_storeEnumTagMultiPayload();
  sub_1B60269B4(v7, v9, (void (*)(void))type metadata accessor for JSONSchema);
  uint64_t v20 = (void *)(v9 + v16[14]);
  uint64_t v30 = v3;
  *uint64_t v20 = v3;
  v20[1] = v1;
  *(unsigned char *)(v9 + v16[5]) = 1;
  uint64_t v21 = v9 + v16[13];
  *(void *)uint64_t v21 = 0;
  *(void *)(v21 + 8) = 0;
  *(void *)(v21 + 16) = 0;
  *(unsigned char *)(v21 + 24) = -1;
  uint64_t v22 = sub_1B61B0AC0();
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 1, 1, v22);
  swift_retain();
  sub_1B5E29F20();
  uint64_t v24 = v23;
  sub_1B6027AEC((uint64_t)v15, &qword_1E9DA86C0, v10, v11);
  uint64_t v25 = sub_1B5FB128C(v24);
  uint64_t v26 = (uint64_t *)(v9 + v16[12]);
  uint64_t *v26 = v25;
  v26[1] = 0;
  if (v31)
  {
    swift_release();
    sub_1B6026FE4(v7, (void (*)(void))type metadata accessor for JSONSchema);
  }
  else
  {
    uint64_t v27 = v25;
    swift_retain();
    sub_1B6026FE4(v7, (void (*)(void))type metadata accessor for JSONSchema);
    uint64_t v28 = (void *)swift_allocObject();
    v28[2] = v27;
    void v28[3] = 0;
    uint64_t v28[4] = v30;
    v28[5] = v1;
    off_1EC5684B0 = sub_1B60224AC;
    qword_1EC5684B8 = (uint64_t)v28;
    swift_release();
  }
  OUTLINED_FUNCTION_73();
}

uint64_t type metadata accessor for JSONSchemaView()
{
  uint64_t result = qword_1E9DABA10;
  if (!qword_1E9DABA10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B601C1C0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  swift_retain();
  swift_retain();
  uint64_t v6 = sub_1B601C374(a1, a2);
  a3(v6);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_1B601C374(uint64_t a1, uint64_t a2)
{
  v17[0] = a2;
  uint64_t v3 = sub_1B61B2150();
  MEMORY[0x1F4188790](v3 - 8);
  unsigned int v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1B61AF620();
  MEMORY[0x1F4188790](v6);
  sub_1B61AF660();
  swift_allocObject();
  sub_1B61AF650();
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F26CD0];
  sub_1B60223C8(0, &qword_1E9DAA830, MEMORY[0x1E4F26CD0], MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B61BE6A0;
  sub_1B61AF600();
  sub_1B61AF5F0();
  uint64_t v18 = v8;
  sub_1B6022C04(&qword_1E9DAA838, MEMORY[0x1E4F26CD0]);
  sub_1B60223C8(0, &qword_1E9DAA840, v7, MEMORY[0x1E4FBB320]);
  sub_1B5F609F8();
  sub_1B61B3100();
  sub_1B61AF630();
  uint64_t v18 = a1;
  uint64_t v19 = v17[0];
  sub_1B6027B98(0, &qword_1E9DABA38, (uint64_t)&type metadata for SchemaViewValue, MEMORY[0x1E4F3ECC8]);
  sub_1B61B1B70();
  uint64_t v18 = v20;
  sub_1B6027034();
  uint64_t v9 = v17[1];
  uint64_t v10 = sub_1B61AF640();
  if (v9)
  {
    swift_release();
    swift_release();
    return (uint64_t)v5;
  }
  uint64_t v12 = v10;
  unint64_t v13 = v11;
  swift_release();
  sub_1B61B2140();
  unsigned int v5 = (char *)sub_1B61B2110();
  uint64_t v15 = v14;
  uint64_t result = sub_1B5E2E534(v12, v13);
  if (v15)
  {
    swift_release();
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

void sub_1B601C69C()
{
  OUTLINED_FUNCTION_83();
  uint64_t v2 = v1;
  int v34 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  sub_1B60223C8(0, &qword_1E9DA86C0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  uint64_t v15 = OUTLINED_FUNCTION_14(v14);
  MEMORY[0x1F4188790](v15);
  uint64_t v33 = (uint64_t)&v32 - v16;
  uint64_t v17 = type metadata accessor for JSONSchema(0);
  uint64_t v18 = OUTLINED_FUNCTION_14(v17);
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_27_1();
  uint64_t v19 = (int *)type metadata accessor for JSONSchemaView();
  LOBYTE(v35) = 0;
  sub_1B61B1B60();
  OUTLINED_FUNCTION_5_54();
  OUTLINED_FUNCTION_15_27();
  OUTLINED_FUNCTION_5_54();
  OUTLINED_FUNCTION_15_27();
  OUTLINED_FUNCTION_5_54();
  OUTLINED_FUNCTION_15_27();
  OUTLINED_FUNCTION_5_54();
  unsigned __int8 v20 = v34;
  uint64_t v21 = v13 + v19[10];
  uint64_t v35 = 0;
  unint64_t v36 = 0xE000000000000000;
  sub_1B61B1B60();
  uint64_t v22 = v38;
  *(_OWORD *)uint64_t v21 = v37;
  *(void *)(v21 + 16) = v22;
  uint64_t v23 = (uint64_t *)(v13 + v19[11]);
  uint64_t *v23 = swift_getKeyPath();
  sub_1B60223C8(0, &qword_1E9DAB7B0, (uint64_t (*)(uint64_t))sub_1B602242C, MEMORY[0x1E4F3C648]);
  swift_storeEnumTagMultiPayload();
  sub_1B60269B4(v11, v13, (void (*)(void))type metadata accessor for JSONSchema);
  uint64_t v24 = v13 + v19[13];
  *(void *)uint64_t v24 = v9;
  *(void *)(v24 + 8) = v7;
  *(void *)(v24 + 16) = v5;
  *(unsigned char *)(v24 + 24) = v20;
  *(unsigned char *)(v13 + v19[5]) = 0;
  uint64_t v25 = (void *)(v13 + v19[14]);
  *uint64_t v25 = 0;
  v25[1] = 0;
  sub_1B60269B4(v11, v0, (void (*)(void))type metadata accessor for JSONSchema);
  if ((~v2 & 0xF000000000000007) == 0)
  {
    uint64_t v26 = sub_1B61B0AC0();
    uint64_t v27 = v33;
    __swift_storeEnumTagSinglePayload(v33, 1, 1, v26);
    uint64_t v28 = v9;
    sub_1B6026BA8(v9, v7, v5, v20);
    sub_1B5E29F20();
    uint64_t v30 = v29;
    sub_1B6027AEC(v27, &qword_1E9DA86C0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
    uint64_t v2 = sub_1B5FB128C(v30);
    sub_1B6026BC0(v28, v7, v5, v20);
  }
  sub_1B6026FE4(v11, (void (*)(void))type metadata accessor for JSONSchema);
  sub_1B6026FE4(v0, (void (*)(void))type metadata accessor for JSONSchema);
  int v31 = (uint64_t *)(v13 + v19[12]);
  uint64_t *v31 = v2;
  v31[1] = 0;
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B601C9BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1B61B2150();
  uint64_t v3 = OUTLINED_FUNCTION_14(v2);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1B61AF620();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_27_1();
  sub_1B61AF660();
  swift_allocObject();
  sub_1B61AF650();
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F26CD0];
  sub_1B60223C8(0, &qword_1E9DAA830, MEMORY[0x1E4F26CD0], MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1B61BE6A0;
  sub_1B61AF600();
  sub_1B61AF5F0();
  *(void *)&long long v18 = v8;
  sub_1B6022C04(&qword_1E9DAA838, MEMORY[0x1E4F26CD0]);
  sub_1B60223C8(0, &qword_1E9DAA840, v7, MEMORY[0x1E4FBB320]);
  sub_1B5F609F8();
  sub_1B61B3100();
  sub_1B61AF630();
  long long v18 = *(_OWORD *)(v1 + *(int *)(type metadata accessor for JSONSchemaView() + 48));
  sub_1B6027B98(0, &qword_1E9DABA38, (uint64_t)&type metadata for SchemaViewValue, MEMORY[0x1E4F3ECC8]);
  sub_1B61B1B70();
  *(void *)&long long v18 = v19;
  sub_1B6027034();
  uint64_t v9 = v17[1];
  uint64_t v10 = sub_1B61AF640();
  if (v9)
  {
    swift_release();
    swift_release();
    return (uint64_t)v5;
  }
  uint64_t v12 = v10;
  unint64_t v13 = v11;
  swift_release();
  sub_1B61B2140();
  uint64_t v5 = (char *)sub_1B61B2110();
  uint64_t v15 = v14;
  uint64_t result = sub_1B5E2E534(v12, v13);
  if (v15)
  {
    swift_release();
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

void JSONSchemaView.body.getter()
{
  OUTLINED_FUNCTION_83();
  uint64_t v72 = v1;
  uint64_t v2 = type metadata accessor for JSONSchemaView();
  uint64_t v3 = OUTLINED_FUNCTION_3(v2);
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = v3;
  uint64_t v74 = v3;
  MEMORY[0x1F4188790](v3);
  sub_1B60224B8();
  uint64_t v62 = v9;
  OUTLINED_FUNCTION_0_10();
  uint64_t v63 = v10;
  MEMORY[0x1F4188790](v11);
  v59[1] = (char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6022E9C();
  uint64_t v64 = v13;
  OUTLINED_FUNCTION_0_10();
  uint64_t v65 = v14;
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_4();
  uint64_t v79 = v16;
  sub_1B60239D0();
  uint64_t v68 = v17;
  OUTLINED_FUNCTION_0_10();
  uint64_t v69 = v18;
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_4();
  uint64_t v80 = v20;
  sub_1B6023BD8();
  uint64_t v70 = v21;
  OUTLINED_FUNCTION_0_10();
  uint64_t v71 = v22;
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_4();
  uint64_t v66 = v24;
  uint64_t v81 = v0;
  uint64_t v83 = v0;
  uint64_t v67 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F3F108];
  sub_1B60223C8(0, &qword_1E9DAB7C8, (uint64_t (*)(uint64_t))sub_1B6022568, MEMORY[0x1E4F3F108]);
  sub_1B6022E1C();
  sub_1B61B19A0();
  uint64_t v25 = v0 + *(int *)(v8 + 32);
  char v26 = *(unsigned char *)v25;
  uint64_t v27 = *(void *)(v25 + 8);
  char v88 = v26;
  uint64_t v89 = v27;
  sub_1B6027B98(0, &qword_1E9DAB9D8, MEMORY[0x1E4FBB390], MEMORY[0x1E4F3ECC8]);
  uint64_t v61 = v28;
  sub_1B61B1B90();
  uint64_t v78 = type metadata accessor for JSONSchemaView;
  uint64_t v73 = (uint64_t)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B60269B4(v0, v73, (void (*)(void))type metadata accessor for JSONSchemaView);
  uint64_t v29 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v76 = ((v29 + 16) & ~v29) + v7;
  uint64_t v77 = (v29 + 16) & ~v29;
  uint64_t v30 = v77;
  uint64_t v75 = v29 | 7;
  uint64_t v31 = swift_allocObject();
  uint64_t v60 = type metadata accessor for JSONSchemaView;
  sub_1B6026AE8((uint64_t)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v31 + v30, (void (*)(void))type metadata accessor for JSONSchemaView);
  sub_1B6023E28(0, &qword_1E9DAB8B0, (void (*)(uint64_t))sub_1B6022FA0, (void (*)(void))sub_1B602391C);
  uint64_t v33 = v32;
  uint64_t v34 = sub_1B6022C04(&qword_1E9DAB970, (void (*)(uint64_t))sub_1B60224B8);
  unint64_t v35 = sub_1B6023950();
  OUTLINED_FUNCTION_26_20();
  uint64_t v36 = v62;
  sub_1B61B1A80();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_31_10();
  OUTLINED_FUNCTION_5_1();
  v37();
  uint64_t v38 = v81;
  OUTLINED_FUNCTION_25_20((char *)(v81 + *(int *)(v74 + 36)));
  sub_1B61B1B90();
  uint64_t v39 = v73;
  sub_1B60269B4(v38, v73, (void (*)(void))v78);
  uint64_t v40 = swift_allocObject();
  sub_1B6026AE8(v39, v40 + v77, (void (*)(void))type metadata accessor for JSONSchemaView);
  sub_1B6023B48();
  uint64_t v42 = v41;
  uint64_t v84 = v36;
  uint64_t v85 = v33;
  uint64_t v86 = v34;
  unint64_t v87 = v35;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v44 = sub_1B6022C04(&qword_1E9DAB990, (void (*)(uint64_t))sub_1B6023B48);
  OUTLINED_FUNCTION_26_20();
  uint64_t v45 = v64;
  sub_1B61B1A80();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_31_10();
  uint64_t v46 = v45;
  OUTLINED_FUNCTION_5_1();
  v47();
  uint64_t v48 = v81;
  OUTLINED_FUNCTION_25_20((char *)(v81 + *(int *)(v74 + 40)));
  sub_1B61B1B90();
  uint64_t v49 = v48;
  uint64_t v50 = v73;
  sub_1B60269B4(v49, v73, (void (*)(void))v78);
  uint64_t v51 = swift_allocObject();
  sub_1B6026AE8(v50, v51 + v77, (void (*)(void))v60);
  sub_1B6023DD4(0);
  uint64_t v53 = v52;
  uint64_t v84 = v46;
  uint64_t v85 = v42;
  uint64_t v86 = OpaqueTypeConformance2;
  unint64_t v87 = v44;
  uint64_t v57 = swift_getOpaqueTypeConformance2();
  uint64_t v58 = sub_1B6023EE8(&qword_1E9DAB9C0, sub_1B6023DD4, (void (*)(void))sub_1B6023F58);
  uint64_t v54 = v68;
  sub_1B61B1A80();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_31_10();
  OUTLINED_FUNCTION_5_1();
  v55();
  uint64_t v82 = v81;
  sub_1B60223C8(0, &qword_1E9DAB9E0, (uint64_t (*)(uint64_t))sub_1B6024160, v67);
  uint64_t v84 = v54;
  uint64_t v85 = v53;
  uint64_t v86 = v57;
  unint64_t v87 = v58;
  swift_getOpaqueTypeConformance2();
  sub_1B602424C();
  sub_1B61B1AA0();
  OUTLINED_FUNCTION_5_1();
  v56();
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B601D478@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v125 = a2;
  sub_1B60223C8(0, &qword_1E9DAB7E0, (uint64_t (*)(uint64_t))sub_1B602264C, MEMORY[0x1E4FBB718]);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v130 = (uint64_t)&v113 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v113 - v6;
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[5];
  uint64_t v11 = a1[7];
  uint64_t v12 = a1[9];
  if (v8 || v9 || v10 || v11 || v12)
  {
    uint64_t v135 = a1[8];
    uint64_t v142 = a1[6];
    uint64_t v136 = a1[4];
    uint64_t v134 = a1[2];
    uint64_t v133 = *a1;
    uint64_t v137 = v12;
    sub_1B61B1F70();
    sub_1B61B1F70();
    sub_1B61B1F70();
    sub_1B61B1F70();
    sub_1B61B1F70();
  }
  else
  {
    uint64_t v133 = 0;
    uint64_t v134 = 0;
    uint64_t v9 = 0;
    uint64_t v136 = 0;
    uint64_t v10 = 0;
    uint64_t v142 = 0;
    uint64_t v11 = 0;
    uint64_t v135 = 0;
    uint64_t v137 = 0;
    uint64_t v8 = 1;
  }
  uint64_t v13 = type metadata accessor for JSONSchemaView();
  int v14 = *((unsigned __int8 *)a1 + *(int *)(v13 + 52) + 24);
  BOOL v15 = v14 == 255 || (v14 & 1) == 0;
  uint64_t v141 = v11;
  uint64_t v140 = v10;
  uint64_t v139 = v9;
  uint64_t v138 = v8;
  if (v15)
  {
    sub_1B602264C();
    uint64_t v19 = v16;
    uint64_t v20 = 1;
  }
  else
  {
    uint64_t v17 = sub_1B61B17B0();
    MEMORY[0x1F4188790](v17);
    sub_1B60228AC(0, &qword_1E9DAB7F0, &qword_1E9DAB7F8, (uint64_t (*)(uint64_t))sub_1B60226EC, (void (*)(void))sub_1B6022C4C);
    sub_1B6027960();
    sub_1B61B1CD0();
    sub_1B602264C();
    uint64_t v19 = v18;
    uint64_t v20 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v7, v20, 1, v19);
  long long v155 = *(_OWORD *)((char *)a1 + *(int *)(v13 + 48));
  sub_1B6027B98(0, &qword_1E9DABA38, (uint64_t)&type metadata for SchemaViewValue, MEMORY[0x1E4F3ECC8]);
  sub_1B61B1B70();
  uint64_t v126 = v13;
  uint64_t v127 = a1;
  uint64_t v129 = v7;
  switch((unint64_t)v149 >> 61)
  {
    case 1uLL:
      uint64_t v27 = v149 & 0x1FFFFFFFFFFFFFFFLL;
      sub_1B61B26F0();
      uint64_t v28 = sub_1B61B26E0();
      uint64_t v29 = swift_allocObject();
      uint64_t v30 = MEMORY[0x1E4FBCFD8];
      *(void *)(v29 + 16) = v28;
      *(void *)(v29 + 24) = v30;
      uint64_t v31 = sub_1B61B26E0();
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v31;
      *(void *)(v32 + 24) = v30;
      sub_1B61B1C90();
      long long v33 = v155;
      unint64_t v34 = v156;
      uint64_t v131 = v27;
      *(void *)&long long v143 = v27;
      type metadata accessor for JSONSchemaValueBool(0);
      swift_retain();
      sub_1B61B1B60();
      uint64_t v132 = v33;
      long long v155 = v33;
      uint64_t v128 = (uint64_t (*)(void, uint64_t, uint64_t))*((void *)&v33 + 1);
      long long v156 = v34;
      *(void *)&long long v157 = 0;
      *((void *)&v157 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 1;
      long long v158 = v149;
      *(void *)&long long v123 = *((void *)&v149 + 1);
      *(void *)&long long v124 = v149;
      LOBYTE(v159) = 1;
      sub_1B60272B4();
      sub_1B6027300();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1B61B1810();
      long long v155 = v149;
      long long v156 = v150;
      long long v157 = v151;
      long long v158 = v152;
      unsigned __int16 v159 = v153;
      unint64_t v35 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4F3D750];
      *(void *)&long long v122 = MEMORY[0x1E4F3D750];
      sub_1B60235FC(0, &qword_1E9DAB888, (uint64_t)&type metadata for JSArrayValueView, (uint64_t)&unk_1F0F18160, MEMORY[0x1E4F3D750]);
      goto LABEL_23;
    case 2uLL:
      uint64_t v36 = v149 & 0x1FFFFFFFFFFFFFFFLL;
      sub_1B61B26F0();
      uint64_t v37 = sub_1B61B26E0();
      uint64_t v38 = swift_allocObject();
      uint64_t v39 = MEMORY[0x1E4FBCFD8];
      *(void *)(v38 + 16) = v37;
      *(void *)(v38 + 24) = v39;
      uint64_t v40 = sub_1B61B26E0();
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = v40;
      *(void *)(v41 + 24) = v39;
      sub_1B61B1C90();
      long long v42 = v155;
      unint64_t v43 = v156;
      uint64_t v131 = v36;
      *(void *)&long long v143 = v36;
      type metadata accessor for JSONSchemaValueInteger(0);
      swift_retain();
      sub_1B61B1B60();
      uint64_t v132 = v42;
      long long v155 = v42;
      uint64_t v128 = (uint64_t (*)(void, uint64_t, uint64_t))*((void *)&v42 + 1);
      long long v156 = v43;
      *(void *)&long long v157 = 0;
      *((void *)&v157 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 257;
      long long v158 = v149;
      *(void *)&long long v123 = *((void *)&v149 + 1);
      *(void *)&long long v124 = v149;
      LOBYTE(v159) = 0;
      sub_1B60273F0();
      sub_1B602743C();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1B61B1810();
      long long v155 = v149;
      long long v156 = v150;
      long long v157 = v151;
      long long v158 = v152;
      LOBYTE(v159) = v153;
      HIBYTE(v159) = 1;
      goto LABEL_22;
    case 3uLL:
      uint64_t v44 = v149 & 0x1FFFFFFFFFFFFFFFLL;
      sub_1B61B26F0();
      uint64_t v45 = sub_1B61B26E0();
      uint64_t v46 = swift_allocObject();
      uint64_t v47 = MEMORY[0x1E4FBCFD8];
      *(void *)(v46 + 16) = v45;
      *(void *)(v46 + 24) = v47;
      uint64_t v48 = sub_1B61B26E0();
      uint64_t v49 = swift_allocObject();
      *(void *)(v49 + 16) = v48;
      *(void *)(v49 + 24) = v47;
      sub_1B61B1C90();
      long long v50 = v155;
      unint64_t v51 = v156;
      uint64_t v131 = v44;
      *(void *)&long long v143 = v44;
      type metadata accessor for JSONSchemaValueNumber(0);
      swift_retain();
      sub_1B61B1B60();
      uint64_t v132 = v50;
      long long v155 = v50;
      uint64_t v128 = (uint64_t (*)(void, uint64_t, uint64_t))*((void *)&v50 + 1);
      long long v156 = v51;
      *(void *)&long long v157 = 0;
      *((void *)&v157 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 257;
      long long v158 = v149;
      *(void *)&long long v123 = *((void *)&v149 + 1);
      *(void *)&long long v124 = v149;
      LOBYTE(v159) = 1;
      sub_1B60273F0();
      sub_1B602743C();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1B61B1810();
      long long v155 = v149;
      long long v156 = v150;
      long long v157 = v151;
      long long v158 = v152;
      LOBYTE(v159) = v153;
      HIBYTE(v159) = 1;
LABEL_22:
      unint64_t v35 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4F3D750];
      *(void *)&long long v122 = MEMORY[0x1E4F3D750];
      sub_1B60235FC(0, &qword_1E9DAB888, (uint64_t)&type metadata for JSArrayValueView, (uint64_t)&unk_1F0F18160, MEMORY[0x1E4F3D750]);
LABEL_23:
      sub_1B60235FC(0, &qword_1E9DAB890, (uint64_t)&unk_1F0F180D0, (uint64_t)&unk_1F0F18040, v35);
      sub_1B6027210();
      sub_1B602734C();
      sub_1B61B1810();
      long long v52 = v144;
      long long v53 = v145;
      uint64_t v54 = *((void *)&v146 + 1);
      char v55 = v147;
      char v56 = v148;
      if (v148) {
        __int16 v57 = 256;
      }
      else {
        __int16 v57 = 0;
      }
      long long v149 = v143;
      *(void *)&long long v121 = *((void *)&v143 + 1);
      uint64_t v119 = v143;
      long long v150 = v144;
      long long v151 = v145;
      unint64_t v120 = (void (*)())v146;
      long long v152 = v146;
      __int16 v153 = v57 | v147;
      char v154 = 0;
      sub_1B6027780(v143, *((uint64_t *)&v143 + 1), v144, *((uint64_t *)&v144 + 1), v145, *((uint64_t *)&v145 + 1), v146, *((uint64_t *)&v146 + 1), v147, v148, (uint64_t (*)(void))sub_1B602762C, sub_1B60276AC);
      sub_1B6022D60();
      sub_1B60235FC(0, &qword_1E9DAB898, (uint64_t)&unk_1F0F17FB0, (uint64_t)&type metadata for JSObjectValueView, (uint64_t (*)(void, uint64_t, uint64_t))v122);
      sub_1B6027198();
      sub_1B6027488();
      sub_1B61B1810();
      swift_release();
      sub_1B6027780(v119, v121, v52, *((uint64_t *)&v52 + 1), v53, *((uint64_t *)&v53 + 1), (uint64_t)v120, v54, v55, v56, (uint64_t (*)(void))sub_1B60277B4, sub_1B6027840);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      break;
    case 4uLL:
      uint64_t v58 = v149 & 0x1FFFFFFFFFFFFFFFLL;
      sub_1B61B26F0();
      uint64_t v59 = sub_1B61B26E0();
      uint64_t v60 = swift_allocObject();
      uint64_t v61 = MEMORY[0x1E4FBCFD8];
      *(void *)(v60 + 16) = v59;
      *(void *)(v60 + 24) = v61;
      uint64_t v62 = sub_1B61B26E0();
      uint64_t v63 = swift_allocObject();
      *(void *)(v63 + 16) = v62;
      *(void *)(v63 + 24) = v61;
      sub_1B61B1C90();
      long long v64 = v155;
      unint64_t v65 = v156;
      uint64_t v132 = v58;
      *(void *)&long long v143 = v58;
      type metadata accessor for JSONSchemaValueString(0);
      swift_retain();
      sub_1B61B1B60();
      uint64_t v131 = v64;
      long long v155 = v64;
      uint64_t v128 = (uint64_t (*)(void, uint64_t, uint64_t))*((void *)&v64 + 1);
      long long v156 = v65;
      *(void *)&long long v157 = 0;
      *((void *)&v157 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 257;
      long long v158 = v149;
      *(void *)&long long v123 = *((void *)&v149 + 1);
      *(void *)&long long v124 = v149;
      LOBYTE(v159) = 0;
      sub_1B6027080();
      sub_1B60270CC();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1B61B1810();
      long long v66 = v143;
      long long v67 = v144;
      uint64_t v68 = v145;
      long long v69 = v146;
      char v70 = v147;
      long long v149 = v143;
      long long v150 = v144;
      long long v151 = v145;
      *(void *)&long long v122 = *((void *)&v145 + 1);
      long long v152 = v146;
      __int16 v153 = v147;
      char v154 = 1;
      sub_1B6027118(v143, *((uint64_t *)&v143 + 1), v144, *((uint64_t *)&v144 + 1), v145, *((uint64_t *)&v145 + 1), v146, *((uint64_t *)&v146 + 1), v147);
      sub_1B6022D60();
      *(void *)&long long v121 = v71;
      sub_1B60235FC(0, &qword_1E9DAB898, (uint64_t)&unk_1F0F17FB0, (uint64_t)&type metadata for JSObjectValueView, MEMORY[0x1E4F3D750]);
      sub_1B6027198();
      sub_1B6027488();
      sub_1B61B1810();
      swift_release();
      sub_1B602752C(v66, *((uint64_t *)&v66 + 1), v67, *((uint64_t *)&v67 + 1), v68, v122, v69, *((uint64_t *)&v69 + 1), v70);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      break;
    case 5uLL:
      uint64_t v132 = v149 & 0x1FFFFFFFFFFFFFFFLL;
      *(void *)&long long v149 = v149 & 0x1FFFFFFFFFFFFFFFLL;
      type metadata accessor for JSONSchemaValueObject(0);
      swift_retain();
      sub_1B61B1B60();
      uint64_t v128 = (uint64_t (*)(void, uint64_t, uint64_t))*((void *)&v155 + 1);
      uint64_t v131 = v155;
      long long v156 = 0u;
      long long v157 = 0u;
      long long v158 = 0u;
      LOBYTE(v159) = 1;
      sub_1B6027080();
      sub_1B60270CC();
      swift_retain();
      swift_retain();
      sub_1B61B1810();
      long long v72 = v143;
      long long v73 = v144;
      long long v74 = v145;
      uint64_t v75 = *((void *)&v146 + 1);
      char v76 = v147;
      long long v149 = v143;
      long long v150 = v144;
      long long v151 = v145;
      long long v152 = v146;
      *(void *)&long long v124 = v146;
      __int16 v153 = v147;
      char v154 = 1;
      sub_1B6027118(v143, *((uint64_t *)&v143 + 1), v144, *((uint64_t *)&v144 + 1), v145, *((uint64_t *)&v145 + 1), v146, *((uint64_t *)&v146 + 1), v147);
      sub_1B6022D60();
      *(void *)&long long v123 = v77;
      sub_1B60235FC(0, &qword_1E9DAB898, (uint64_t)&unk_1F0F17FB0, (uint64_t)&type metadata for JSObjectValueView, MEMORY[0x1E4F3D750]);
      sub_1B6027198();
      sub_1B6027488();
      sub_1B61B1810();
      swift_release();
      sub_1B602752C(v72, *((uint64_t *)&v72 + 1), v73, *((uint64_t *)&v73 + 1), v74, *((uint64_t *)&v74 + 1), v124, v75, v76);
      break;
    default:
      type metadata accessor for JSONSchemaValueArray(0);
      swift_retain();
      sub_1B61B1B60();
      uint64_t v131 = *((void *)&v155 + 1);
      uint64_t v132 = v155;
      long long v156 = 0u;
      long long v157 = 0u;
      long long v158 = 0u;
      LOBYTE(v159) = 0;
      sub_1B60272B4();
      sub_1B6027300();
      swift_retain();
      swift_retain();
      sub_1B61B1810();
      long long v155 = v149;
      long long v156 = v150;
      long long v157 = v151;
      long long v158 = v152;
      unsigned __int16 v159 = v153;
      uint64_t v21 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4F3D750];
      uint64_t v128 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4F3D750];
      sub_1B60235FC(0, &qword_1E9DAB888, (uint64_t)&type metadata for JSArrayValueView, (uint64_t)&unk_1F0F18160, MEMORY[0x1E4F3D750]);
      sub_1B60235FC(0, &qword_1E9DAB890, (uint64_t)&unk_1F0F180D0, (uint64_t)&unk_1F0F18040, v21);
      sub_1B6027210();
      sub_1B602734C();
      sub_1B61B1810();
      long long v22 = v144;
      long long v23 = v145;
      char v24 = v147;
      char v25 = v148;
      if (v148) {
        __int16 v26 = 256;
      }
      else {
        __int16 v26 = 0;
      }
      long long v149 = v143;
      *(void *)&long long v124 = *((void *)&v143 + 1);
      *(void *)&long long v121 = v143;
      long long v150 = v144;
      long long v151 = v145;
      *(void *)&long long v123 = v146;
      long long v152 = v146;
      *(void *)&long long v122 = *((void *)&v146 + 1);
      __int16 v153 = v26 | v147;
      char v154 = 0;
      sub_1B6027780(v143, *((uint64_t *)&v143 + 1), v144, *((uint64_t *)&v144 + 1), v145, *((uint64_t *)&v145 + 1), v146, *((uint64_t *)&v146 + 1), v147, v148, (uint64_t (*)(void))sub_1B602762C, sub_1B60276AC);
      sub_1B6022D60();
      sub_1B60235FC(0, &qword_1E9DAB898, (uint64_t)&unk_1F0F17FB0, (uint64_t)&type metadata for JSObjectValueView, v128);
      sub_1B6027198();
      sub_1B6027488();
      sub_1B61B1810();
      swift_release();
      sub_1B6027780(v121, v124, v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v123, v122, v24, v25, (uint64_t (*)(void))sub_1B60277B4, sub_1B6027840);
      break;
  }
  swift_release();
  swift_release();
  long long v124 = v158;
  long long v123 = v157;
  long long v122 = v156;
  long long v121 = v155;
  LODWORD(v132) = v159;
  LODWORD(v13MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v160;
  uint64_t v78 = v126;
  uint64_t v79 = (uint64_t)v127;
  uint64_t v80 = (char *)v127 + *(int *)(v126 + 24);
  char v81 = *v80;
  uint64_t v82 = *((void *)v80 + 1);
  LOBYTE(v149) = v81;
  *((void *)&v149 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v82;
  sub_1B6027B98(0, &qword_1E9DAB9D8, MEMORY[0x1E4FBB390], MEMORY[0x1E4F3ECC8]);
  sub_1B61B1B90();
  uint64_t v128 = (uint64_t (*)(void, uint64_t, uint64_t))*((void *)&v155 + 1);
  uint64_t v118 = v155;
  LODWORD(v119) = v156;
  uint64_t v83 = v79 + *(int *)(v78 + 28);
  char v84 = *(unsigned char *)v83;
  uint64_t v85 = *(void *)(v83 + 8);
  LOBYTE(v149) = v84;
  *((void *)&v149 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v85;
  sub_1B61B1B90();
  uint64_t v86 = *((void *)&v155 + 1);
  uint64_t v115 = v155;
  int v116 = v156;
  uint64_t v87 = v130;
  unint64_t v120 = sub_1B602264C;
  sub_1B6027A80((uint64_t)v129, v130, &qword_1E9DAB7E0, (uint64_t (*)(uint64_t))sub_1B602264C);
  char v88 = v125;
  uint64_t v89 = v138;
  *uint64_t v125 = v133;
  v88[1] = v89;
  uint64_t v90 = v139;
  v88[2] = v134;
  void v88[3] = v90;
  uint64_t v91 = v140;
  v88[4] = v136;
  v88[5] = v91;
  uint64_t v92 = v141;
  v88[6] = v142;
  v88[7] = v92;
  uint64_t v93 = v137;
  v88[8] = v135;
  v88[9] = v93;
  uint64_t v137 = v93;
  sub_1B6022568();
  uint64_t v95 = v94;
  sub_1B6027A80(v87, (uint64_t)v88 + *(int *)(v94 + 48), &qword_1E9DAB7E0, (uint64_t (*)(uint64_t))sub_1B602264C);
  uint64_t v96 = (char *)v88 + *(int *)(v95 + 64);
  uint64_t v127 = (uint64_t *)*((void *)&v121 + 1);
  uint64_t v97 = v121;
  uint64_t v117 = v121;
  long long v98 = v122;
  uint64_t v114 = v122;
  *(_OWORD *)uint64_t v96 = v121;
  *((_OWORD *)v96 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v98;
  uint64_t v126 = *((void *)&v98 + 1);
  uint64_t v113 = *((void *)&v123 + 1);
  *(void *)&long long v121 = v123;
  long long v99 = v124;
  uint64_t v100 = v124;
  *(void *)&long long v122 = v124;
  *((_OWORD *)v96 + 2) = v123;
  *((_OWORD *)v96 + 3) = v99;
  uint64_t v101 = *((void *)&v99 + 1);
  int v102 = v132;
  *((_WORD *)v96 + 32) = v132;
  LODWORD(v132) = v102;
  LODWORD(v78) = v131;
  v96[66] = v131;
  LODWORD(v13MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v78;
  double v103 = (char *)v88 + *(int *)(v95 + 80);
  uint64_t v104 = v128;
  *(void *)double v103 = v118;
  *((void *)v103 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v104;
  v103[16] = v119;
  *((void *)v103 + 3) = v115;
  *((void *)v103 + 4) = v86;
  v103[40] = v116;
  sub_1B60275B8(v133, v138);
  char v112 = v78;
  uint64_t v105 = v97;
  uint64_t v106 = v114;
  uint64_t v107 = v121;
  uint64_t v108 = v113;
  sub_1B6027714(v105, (uint64_t)v127, v114, v126, v121, v113, v100, v101, v102, SBYTE1(v102), v112, (uint64_t (*)(void))sub_1B602762C, sub_1B60276AC, (uint64_t (*)(void))sub_1B6027118);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v109 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  id v110 = (uint64_t (*)(uint64_t))v120;
  sub_1B6027AEC((uint64_t)v129, &qword_1E9DAB7E0, (uint64_t (*)(uint64_t))v120, MEMORY[0x1E4FBB718]);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1B6027714(v117, (uint64_t)v127, v106, v126, v107, v108, v122, v101, v132, SBYTE1(v132), v131, (uint64_t (*)(void))sub_1B60277B4, sub_1B6027840, (uint64_t (*)(void))sub_1B602752C);
  sub_1B6027AEC(v130, &qword_1E9DAB7E0, v110, v109);
  return sub_1B60278A8(v133, v138);
}

uint64_t sub_1B601ECD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = sub_1B61B1750();
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  sub_1B60279E8();
  return sub_1B601ED30(a1, a2, (char *)(a3 + *(int *)(v6 + 44)));
}

uint64_t sub_1B601ED30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v47 = a2;
  long long v52 = a3;
  uint64_t v4 = type metadata accessor for JSONSchemaView();
  uint64_t v5 = v4 - 8;
  uint64_t v43 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v44 = v6;
  uint64_t v45 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6022AF8();
  uint64_t v46 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (uint64_t *)((char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1B60223C8(0, (unint64_t *)&qword_1E9DAB810, (uint64_t (*)(uint64_t))sub_1B60227B8, MEMORY[0x1E4FBB718]);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v51 = (uint64_t)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  int v14 = (char *)&v42 - v13;
  sub_1B60235FC(0, &qword_1E9DAB808, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3E2E8], MEMORY[0x1E4F3F0F0]);
  uint64_t v48 = *(void *)(v15 - 8);
  uint64_t v49 = v15;
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  long long v50 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v42 - v18;
  sub_1B61B17B0();
  uint64_t v20 = a1;
  uint64_t v21 = a1 + *(int *)(v5 + 48);
  long long v22 = *(_OWORD *)v21;
  uint64_t v23 = *(void *)(v21 + 16);
  long long v53 = v22;
  uint64_t v54 = v23;
  sub_1B6027B98(0, &qword_1E9DABA40, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F3ECC8]);
  sub_1B61B1B90();
  char v24 = v19;
  uint64_t v25 = v47;
  sub_1B61B1D30();
  if (v25)
  {
    uint64_t v26 = v45;
    sub_1B60269B4(v20, v45, (void (*)(void))type metadata accessor for JSONSchemaView);
    unint64_t v27 = (*(unsigned __int8 *)(v43 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    uint64_t v28 = swift_allocObject();
    sub_1B6026AE8(v26, v28 + v27, (void (*)(void))type metadata accessor for JSONSchemaView);
    void *v9 = v25;
    v9[1] = sub_1B6027B3C;
    long long v9[2] = v28;
    uint64_t v29 = (void *)((char *)v9 + *(int *)(v46 + 64));
    uint64_t *v29 = swift_getKeyPath();
    sub_1B60223C8(0, &qword_1E9DABAC0, MEMORY[0x1E4F3C820], MEMORY[0x1E4F3C648]);
    swift_storeEnumTagMultiPayload();
    sub_1B60228AC(0, (unint64_t *)&qword_1E9DAB820, &qword_1E9DAB828, (uint64_t (*)(uint64_t))sub_1B6022934, (void (*)(void))sub_1B6022A78);
    sub_1B6022B7C();
    sub_1B6022C04(&qword_1E9DAB868, (void (*)(uint64_t))sub_1B6022AF8);
    sub_1B61B1F70();
    sub_1B61B1590();
    uint64_t v30 = 0;
  }
  else
  {
    uint64_t v30 = 1;
  }
  sub_1B60227B8();
  __swift_storeEnumTagSinglePayload((uint64_t)v14, v30, 1, v31);
  uint64_t v32 = v48;
  uint64_t v33 = v49;
  unint64_t v34 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  unint64_t v35 = v50;
  v34(v50, v24, v49);
  uint64_t v36 = v51;
  sub_1B6027A80((uint64_t)v14, v51, (unint64_t *)&qword_1E9DAB810, (uint64_t (*)(uint64_t))sub_1B60227B8);
  uint64_t v37 = v52;
  v34(v52, v35, v33);
  sub_1B60226EC();
  sub_1B6027A80(v36, (uint64_t)&v37[*(int *)(v38 + 48)], (unint64_t *)&qword_1E9DAB810, (uint64_t (*)(uint64_t))sub_1B60227B8);
  uint64_t v39 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1B6027AEC((uint64_t)v14, (unint64_t *)&qword_1E9DAB810, (uint64_t (*)(uint64_t))sub_1B60227B8, MEMORY[0x1E4FBB718]);
  uint64_t v40 = *(void (**)(char *, uint64_t))(v32 + 8);
  v40(v24, v33);
  sub_1B6027AEC(v36, (unint64_t *)&qword_1E9DAB810, (uint64_t (*)(uint64_t))sub_1B60227B8, v39);
  return ((uint64_t (*)(char *, uint64_t))v40)(v35, v33);
}

uint64_t sub_1B601F344()
{
  return sub_1B61B1B80();
}

__n128 sub_1B601F3E4@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1B61B1750();
  sub_1B601F448((uint64_t)&v7);
  uint64_t v3 = v7;
  char v4 = v8;
  uint64_t v5 = v10;
  __n128 result = v9;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v4;
  *(__n128 *)(a1 + 4sub_1B5E6F544(4, 0, 0) = result;
  *(void *)(a1 + 56) = v5;
  return result;
}

uint64_t sub_1B601F448@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1B61B1B20();
  uint64_t v3 = sub_1B61B1AD0();
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = result;
  *(void *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_1B601F4B4()
{
  return sub_1B61B1600();
}

uint64_t sub_1B601F518()
{
  return sub_1B61B1510();
}

uint64_t sub_1B601F5B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a2;
  sub_1B6026C70(0, &qword_1E9DABA50, MEMORY[0x1E4F3D748]);
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v58 - v5;
  uint64_t v7 = sub_1B61B17A0();
  MEMORY[0x1F4188790](v7 - 8);
  sub_1B6023020();
  uint64_t v61 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = a1;
  uint64_t v12 = (void *)sub_1B6160574((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1B6026D0C);
  uint64_t v14 = v13;
  char v16 = v15;
  sub_1B61B1790();
  sub_1B61B1780();
  uint64_t v60 = v14;
  if (v16)
  {
    uint64_t v66 = (uint64_t)v12;
    id v37 = v12;
    sub_1B60151AC();
    sub_1B61B2160();
    sub_1B61B1770();
    swift_bridgeObjectRelease();
    sub_1B61B1780();
    sub_1B61B17C0();
    uint64_t v38 = sub_1B61B19E0();
    uint64_t v40 = v39;
    uint64_t v42 = v41;
    char v44 = v43 & 1;
    char v45 = sub_1B61B1960();
    *(void *)uint64_t v6 = v38;
    *((void *)v6 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v40;
    uint64_t v59 = v38;
    v6[16] = v44;
    *((void *)v6 + 3) = v42;
    v6[32] = v45;
    *(_OWORD *)(v6 + 4sub_1B5E6F544(4, 0, 0) = 0u;
    *(_OWORD *)(v6 + 56) = 0u;
    v6[72] = 1;
    swift_storeEnumTagMultiPayload();
    sub_1B6026D2C(v38, v40, v44);
    sub_1B60235FC(0, &qword_1E9DAB8D0, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3CAB0], MEMORY[0x1E4F3CC10]);
    uint64_t v47 = v46;
    sub_1B602316C();
    uint64_t v49 = v48;
    unint64_t v50 = sub_1B60236FC();
    sub_1B6023234(255);
    uint64_t v52 = v51;
    uint64_t v53 = (uint64_t)v12;
    uint64_t v54 = sub_1B6023EE8(&qword_1E9DAB948, sub_1B6023234, (void (*)(void))sub_1B60236C8);
    sub_1B61B1F70();
    uint64_t v66 = v52;
    uint64_t v67 = v54;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v66 = v47;
    uint64_t v67 = v49;
    unint64_t v68 = v50;
    uint64_t v69 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    sub_1B61B1810();
    sub_1B6026D3C(v53, v60, 1, MEMORY[0x1E4FBC8B8]);
    sub_1B6026D3C(v59, v40, v44, MEMORY[0x1E4FBC8D0]);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B61B1770();
    sub_1B61B1780();
    sub_1B61B17C0();
    __int16 v57 = 256;
    uint64_t v17 = sub_1B61B19E0();
    uint64_t v19 = v18;
    uint64_t v20 = v14;
    char v22 = v21;
    uint64_t v59 = v4;
    uint64_t v24 = v23;
    uint64_t v25 = sub_1B61B1960();
    v58[1] = v58;
    uint64_t v66 = v17;
    uint64_t v67 = v19;
    LOBYTE(v68) = v22 & 1;
    uint64_t v69 = v24;
    char v70 = v25;
    long long v71 = 0u;
    long long v72 = 0u;
    char v73 = 1;
    MEMORY[0x1F4188790](v25);
    v58[-4] = a1;
    v58[-3] = v12;
    uint64_t v56 = v20;
    sub_1B60235FC(0, &qword_1E9DAB8D0, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3CAB0], MEMORY[0x1E4F3CC10]);
    uint64_t v27 = v26;
    sub_1B602316C();
    uint64_t v29 = v28;
    unint64_t v30 = sub_1B60236FC();
    sub_1B6023234(255);
    uint64_t v32 = v31;
    uint64_t v33 = sub_1B6023EE8(&qword_1E9DAB948, sub_1B6023234, (void (*)(void))sub_1B60236C8);
    uint64_t v64 = v32;
    uint64_t v65 = v33;
    uint64_t v34 = swift_getOpaqueTypeConformance2();
    sub_1B61B1A90();
    sub_1B6026D3C(v66, v67, v68, MEMORY[0x1E4FBC8D0]);
    swift_bridgeObjectRelease();
    sub_1B6026D3C((uint64_t)v12, v60, 0, MEMORY[0x1E4FBC8B8]);
    uint64_t v35 = v61;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v11, v61);
    swift_storeEnumTagMultiPayload();
    uint64_t v66 = v27;
    uint64_t v67 = v29;
    unint64_t v68 = v30;
    uint64_t v69 = v34;
    swift_getOpaqueTypeConformance2();
    sub_1B61B1810();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v35);
  }
}

uint64_t sub_1B601FC40@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1B601C9BC();
  if (v2)
  {
    *a1 = v2;
  }
  else
  {
    *a2 = result;
    a2[1] = v6;
  }
  return result;
}

uint64_t sub_1B601FC88@<X0>(char *a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v53 = a3;
  uint64_t v56 = a4;
  sub_1B602329C();
  uint64_t v54 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B602356C();
  uint64_t v9 = v8;
  uint64_t v55 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1B61B1870();
  MEMORY[0x1F4188790](v12 - 8);
  sub_1B602330C();
  uint64_t v14 = v13;
  uint64_t v51 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  char v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6023234(0);
  uint64_t v18 = v17;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  char v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v45 - v22;
  uint64_t v24 = *(int *)(type metadata accessor for JSONSchemaView() + 20);
  unint64_t v50 = a1;
  if (a1[v24] == 1)
  {
    uint64_t v25 = sub_1B61B1850();
    uint64_t v47 = v9;
    MEMORY[0x1F4188790](v25);
    uint64_t v46 = v14;
    uint64_t v26 = v52;
    uint64_t v49 = v11;
    uint64_t v27 = v53;
    *(&v45 - 2) = v52;
    *(&v45 - MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v27;
    sub_1B60233A0();
    uint64_t v48 = v18;
    sub_1B6022C04(&qword_1E9DAB928, (void (*)(uint64_t))sub_1B60233A0);
    char v45 = v16;
    sub_1B61B1670();
    uint64_t v28 = sub_1B61B1860();
    MEMORY[0x1F4188790](v28);
    *(&v45 - 4) = v50;
    *(&v45 - 3) = v26;
    *(&v45 - 2) = v27;
    sub_1B60235FC(0, &qword_1E9DAB938, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3E2E8], MEMORY[0x1E4F3ECD0]);
    sub_1B602364C();
    uint64_t v29 = v49;
    sub_1B61B1670();
    uint64_t v18 = v48;
    unint64_t v30 = &v7[*(int *)(v54 + 48)];
    uint64_t v31 = v51;
    uint64_t v32 = v16;
    uint64_t v33 = v46;
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v7, v32, v46);
    uint64_t v34 = v55;
    uint64_t v35 = v29;
    uint64_t v36 = v47;
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v30, v35, v47);
    sub_1B61B17E0();
    sub_1B6023268(0);
    uint64_t v38 = v37;
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v37);
    uint64_t v39 = sub_1B60236C8();
    MEMORY[0x1BA9AEA40](v21, v38, v39);
    sub_1B6026FE4((uint64_t)v21, sub_1B6023234);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v49, v36);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v45, v33);
  }
  else
  {
    sub_1B6023268(0);
    uint64_t v41 = v40;
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 1, 1, v40);
    uint64_t v42 = sub_1B60236C8();
    MEMORY[0x1BA9AEA40](v21, v41, v42);
    sub_1B6026FE4((uint64_t)v21, sub_1B6023234);
  }
  uint64_t v43 = sub_1B6023EE8(&qword_1E9DAB948, sub_1B6023234, (void (*)(void))sub_1B60236C8);
  MEMORY[0x1BA9AEA30](v23, v18, v43);
  return sub_1B6026FE4((uint64_t)v23, sub_1B6023234);
}

uint64_t sub_1B602020C()
{
  return sub_1B61B1D10();
}

uint64_t sub_1B6020278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v14[1] = a4;
  uint64_t v7 = type metadata accessor for JSONSchemaView();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  sub_1B61B17B0();
  sub_1B60269B4(a1, (uint64_t)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for JSONSchemaView);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  sub_1B6026AE8((uint64_t)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, (void (*)(void))type metadata accessor for JSONSchemaView);
  uint64_t v12 = (void *)(v11 + ((v9 + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v12 = a2;
  v12[1] = a3;
  sub_1B61B1F70();
  return sub_1B61B1BC0();
}

uint64_t sub_1B602040C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B61B1660();
  MEMORY[0x1F4188790](v6 - 8);
  sub_1B602242C(0);
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for JSONSchemaView();
  uint64_t v12 = (void (**)(uint64_t, uint64_t))(a1 + *(int *)(v11 + 56));
  if (*v12) {
    (*v12)(a2, a3);
  }
  uint64_t v13 = (char *)(a1 + *(int *)(v11 + 24));
  char v14 = *v13;
  uint64_t v15 = *((void *)v13 + 1);
  unsigned char v17[16] = v14;
  uint64_t v18 = v15;
  v17[15] = 0;
  sub_1B6027B98(0, &qword_1E9DAB9D8, MEMORY[0x1E4FBB390], MEMORY[0x1E4F3ECC8]);
  sub_1B61B1B80();
  sub_1B60C2F3C((uint64_t)v10);
  MEMORY[0x1BA9AEE00](v8);
  sub_1B61B1650();
  sub_1B61B1C70();
  return sub_1B6026FE4((uint64_t)v10, sub_1B602242C);
}

uint64_t sub_1B60205C0()
{
  return sub_1B61B1510();
}

double sub_1B6020668@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1B61B17A0();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1B61B1790();
  sub_1B61B1780();
  type metadata accessor for JSONSchema(0);
  sub_1B61B0A80();
  sub_1B61B1770();
  swift_bridgeObjectRelease();
  sub_1B61B1780();
  sub_1B61B17C0();
  uint64_t v3 = sub_1B61B19E0();
  uint64_t v5 = v4;
  char v7 = v6;
  uint64_t v9 = v8;
  char v10 = sub_1B61B1960();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v7 & 1;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  double result = 0.0;
  *(_OWORD *)(a1 + 4sub_1B5E6F544(4, 0, 0) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(unsigned char *)(a1 + 72) = 1;
  return result;
}

uint64_t sub_1B60207AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v39 = type metadata accessor for JSONSchema.SchemaType.ObjectType(0);
  MEMORY[0x1F4188790](v39);
  uint64_t v40 = (uint64_t)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for JSONSchema.SchemaType.ObjectType.DynamicObject(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v41 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6026A48(0, &qword_1E9DABA48, MEMORY[0x1E4F3D748]);
  uint64_t v42 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v36 - v7;
  sub_1B6023DD4(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v43 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B6023E28(0, &qword_1E9DAB9B0, (void (*)(uint64_t))type metadata accessor for JSONSchemaView, (void (*)(void))sub_1B6023EB4);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v36 - v14;
  uint64_t v16 = type metadata accessor for JSONSchemaView();
  uint64_t v17 = a1;
  uint64_t v18 = (uint64_t *)(a1 + *(int *)(v16 + 48));
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  uint64_t v45 = *v18;
  uint64_t v46 = v20;
  sub_1B6027B98(0, &qword_1E9DABA38, (uint64_t)&type metadata for SchemaViewValue, MEMORY[0x1E4F3ECC8]);
  uint64_t v21 = sub_1B61B1B70();
  uint64_t v22 = v47;
  if (!(v47 >> 61))
  {
    MEMORY[0x1F4188790](v21);
    *(&v36 - 2) = v22;
    *(&v36 - MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v17;
    sub_1B6023EB4();
    sub_1B61B1600();
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v15, v12);
    swift_storeEnumTagMultiPayload();
    sub_1B6023FC8();
    uint64_t v23 = (uint64_t)v43;
    sub_1B61B1810();
    swift_release();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    sub_1B6023E08(0);
    __swift_storeEnumTagSinglePayload(v23, 0, 1, v24);
    return sub_1B6026AE8(v23, v44, sub_1B6023DD4);
  }
  uint64_t v36 = v16;
  uint64_t v37 = v12;
  uint64_t v38 = v17;
  uint64_t v26 = (uint64_t)v41;
  uint64_t v27 = v44;
  swift_release();
  uint64_t v45 = v19;
  uint64_t v46 = v20;
  sub_1B61B1B70();
  uint64_t v28 = v47 & 0x1FFFFFFFFFFFFFFFLL;
  if (v47 >> 61 == 5)
  {
    uint64_t v29 = v40;
    sub_1B60269B4(v28 + OBJC_IVAR____TtC5TeaUI21JSONSchemaValueObject_object, v40, (void (*)(void))type metadata accessor for JSONSchema.SchemaType.ObjectType);
    uint64_t v30 = v27;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v31 = sub_1B6026AE8(v29, v26, (void (*)(void))type metadata accessor for JSONSchema.SchemaType.ObjectType.DynamicObject);
      MEMORY[0x1F4188790](v31);
      *(&v36 - 4) = v26;
      *(&v36 - 3) = v28;
      *(&v36 - 2) = v38;
      sub_1B6023EB4();
      sub_1B61B1600();
      uint64_t v32 = v37;
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v15, v37);
      swift_storeEnumTagMultiPayload();
      sub_1B6023FC8();
      uint64_t v33 = (uint64_t)v43;
      sub_1B61B1810();
      swift_release();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v32);
      sub_1B6023E08(0);
      __swift_storeEnumTagSinglePayload(v33, 0, 1, v34);
      sub_1B6026AE8(v33, v27, sub_1B6023DD4);
      return sub_1B6026FE4(v26, (void (*)(void))type metadata accessor for JSONSchema.SchemaType.ObjectType.DynamicObject);
    }
    swift_release();
    sub_1B6026FE4(v29, (void (*)(void))type metadata accessor for JSONSchema.SchemaType.ObjectType);
  }
  else
  {
    swift_release();
    uint64_t v30 = v27;
  }
  sub_1B6023E08(0);
  return __swift_storeEnumTagSinglePayload(v30, 1, 1, v35);
}

void sub_1B6020D80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSONSchemaView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = type metadata accessor for JSONSchema(0);
  MEMORY[0x1F4188790](v7 - 8);
  sub_1B60269B4(a1 + OBJC_IVAR____TtC5TeaUI20JSONSchemaValueArray_items, (uint64_t)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for JSONSchema);
  sub_1B60269B4(a2, (uint64_t)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for JSONSchemaView);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  sub_1B6026AE8((uint64_t)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (void (*)(void))type metadata accessor for JSONSchemaView);
  swift_retain();
  sub_1B601C69C();
}

uint64_t sub_1B6020F44(uint64_t a1, uint64_t a2)
{
  swift_getKeyPath();
  sub_1B6022C04(&qword_1E9DA8DC8, (void (*)(uint64_t))type metadata accessor for JSONSchemaValueArray);
  swift_retain();
  sub_1B61AFCF0();
  swift_release();
  swift_getKeyPath();
  sub_1B61AFD10();
  swift_release();
  uint64_t v3 = (void *)(a2 + OBJC_IVAR____TtC5TeaUI20JSONSchemaValueArray__value);
  uint64_t v4 = swift_beginAccess();
  MEMORY[0x1BA9AF660](v4);
  sub_1B5E1A3E0(*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10));
  sub_1B61B25D0();
  sub_1B61B2510();
  swift_endAccess();
  sub_1B5E3B01C();
  swift_getKeyPath();
  sub_1B61AFD00();
  swift_release();
  type metadata accessor for JSONSchemaView();
  sub_1B6027B98(0, &qword_1E9DAB9D8, MEMORY[0x1E4FBB390], MEMORY[0x1E4F3ECC8]);
  return sub_1B61B1B80();
}

void sub_1B6021164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for JSONSchemaView();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = type metadata accessor for JSONSchema(0);
  MEMORY[0x1F4188790](v9 - 8);
  sub_1B60269B4(a1, (uint64_t)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for JSONSchema);
  sub_1B60269B4(a3, (uint64_t)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for JSONSchemaView);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  sub_1B6026AE8((uint64_t)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, (void (*)(void))type metadata accessor for JSONSchemaView);
  type metadata accessor for JSONSchema.SchemaType.ObjectType.DynamicObject(0);
  sub_1B61B1F70();
  swift_retain();
  sub_1B601C69C();
}

uint64_t sub_1B6021338(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = a3;
  switch(a3 >> 61)
  {
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      uint64_t v3 = a3 & 0x1FFFFFFFFFFFFFFFLL;
      break;
    default:
      break;
  }
  sub_1B60223C8(0, &qword_1E9DA8830, type metadata accessor for JSONSchemaValue, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for JSONSchemaValueObject.EnablableValue);
  swift_allocObject();
  swift_retain();
  sub_1B61B1F70();
  uint64_t v6 = sub_1B601BD98(v3, 1);
  swift_getKeyPath();
  sub_1B6022C04(&qword_1E9DA8DF0, (void (*)(uint64_t))type metadata accessor for JSONSchemaValueObject);
  sub_1B61AFCF0();
  swift_release();
  swift_getKeyPath();
  sub_1B61AFD10();
  swift_release();
  swift_beginAccess();
  sub_1B5E437AC(v6, a1, a2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1B5E3B01C();
  swift_getKeyPath();
  sub_1B61AFD00();
  swift_release();
  type metadata accessor for JSONSchemaView();
  sub_1B6027B98(0, &qword_1E9DAB9D8, MEMORY[0x1E4FBB390], MEMORY[0x1E4F3ECC8]);
  return sub_1B61B1B80();
}

uint64_t sub_1B60215BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v64 = type metadata accessor for JSONSchema.SchemaType.ObjectType(0);
  MEMORY[0x1F4188790](v64);
  uint64_t v65 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for JSONSchemaView();
  long long v72 = *(char **)(v4 - 8);
  uint64_t v5 = *((void *)v72 + 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B60241C8();
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v68 = (uint64_t)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v69 = (uint64_t)&v62 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v62 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v62 - v16;
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v73 = (uint64_t)&v62 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v62 - v20;
  uint64_t v67 = v4;
  uint64_t v22 = *(int *)(v4 + 48);
  uint64_t v23 = a1;
  long long v74 = *(_OWORD *)(a1 + v22);
  sub_1B6027B98(0, &qword_1E9DABA38, (uint64_t)&type metadata for SchemaViewValue, MEMORY[0x1E4F3ECC8]);
  sub_1B61B1B70();
  char v70 = v14;
  uint64_t v66 = v5;
  if (v75 >> 61)
  {
    uint64_t v28 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_release();
    uint64_t v29 = 1;
  }
  else
  {
    swift_release();
    sub_1B61B17B0();
    uint64_t v62 = v25;
    uint64_t v63 = v24;
    sub_1B60269B4(a1, (uint64_t)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for JSONSchemaView);
    unint64_t v26 = (v72[80] + 16) & ~(unint64_t)v72[80];
    uint64_t v27 = swift_allocObject() + v26;
    uint64_t v28 = v6;
    sub_1B6026AE8((uint64_t)v6, v27, (void (*)(void))type metadata accessor for JSONSchemaView);
    sub_1B61B1BC0();
    uint64_t v29 = 0;
  }
  sub_1B60235FC(0, &qword_1E9DAB938, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3E2E8], MEMORY[0x1E4F3ECD0]);
  uint64_t v31 = v30;
  __swift_storeEnumTagSinglePayload((uint64_t)v21, v29, 1, v30);
  long long v74 = *(_OWORD *)(a1 + v22);
  sub_1B61B1B70();
  if (v75 >> 61 == 5)
  {
    uint64_t v32 = (uint64_t)v65;
    sub_1B60269B4((v75 & 0x1FFFFFFFFFFFFFFFLL) + OBJC_IVAR____TtC5TeaUI21JSONSchemaValueObject_object, (uint64_t)v65, (void (*)(void))type metadata accessor for JSONSchema.SchemaType.ObjectType);
    uint64_t v33 = (uint64_t)v28;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1B6026FE4(v32, (void (*)(void))type metadata accessor for JSONSchema.SchemaType.ObjectType);
      uint64_t v34 = sub_1B61B17B0();
      uint64_t v63 = v35;
      uint64_t v64 = v34;
      uint64_t v65 = v17;
      sub_1B60269B4(a1, (uint64_t)v28, (void (*)(void))type metadata accessor for JSONSchemaView);
      unint64_t v36 = (v72[80] + 16) & ~(unint64_t)v72[80];
      uint64_t v37 = swift_allocObject() + v36;
      uint64_t v33 = (uint64_t)v28;
      sub_1B6026AE8((uint64_t)v28, v37, (void (*)(void))type metadata accessor for JSONSchemaView);
      uint64_t v23 = a1;
      uint64_t v17 = v65;
      sub_1B61B1BC0();
      swift_release();
      uint64_t v38 = 0;
    }
    else
    {
      swift_release();
      sub_1B6026FE4(v32, (void (*)(void))type metadata accessor for JSONSchema.SchemaType.ObjectType);
      uint64_t v38 = 1;
    }
  }
  else
  {
    swift_release();
    uint64_t v38 = 1;
    uint64_t v33 = (uint64_t)v28;
  }
  uint64_t v39 = 1;
  __swift_storeEnumTagSinglePayload(v73, v38, 1, v31);
  uint64_t v40 = v23 + *(int *)(v67 + 52);
  int v41 = *(unsigned __int8 *)(v40 + 24);
  if (v41 != 255)
  {
    char v42 = v41 & 1;
    uint64_t v67 = v31;
    uint64_t v44 = *(void *)(v40 + 8);
    uint64_t v43 = *(void *)(v40 + 16);
    uint64_t v45 = *(void *)v40;
    sub_1B6024790(*(void *)v40, v44, v43, v41 & 1);
    uint64_t v46 = sub_1B61B17B0();
    uint64_t v64 = v47;
    uint64_t v65 = (char *)v46;
    LODWORD(v62) = v48;
    uint64_t v63 = v49;
    sub_1B60269B4(v23, v33, (void (*)(void))type metadata accessor for JSONSchemaView);
    unint64_t v50 = v17;
    unint64_t v51 = (v72[80] + 41) & ~(unint64_t)v72[80];
    uint64_t v52 = swift_allocObject();
    long long v72 = v21;
    *(void *)(v52 + 16) = v45;
    *(void *)(v52 + 24) = v44;
    uint64_t v31 = v67;
    *(void *)(v52 + 32) = v43;
    *(unsigned char *)(v52 + 4sub_1B5E6F544(4, 0, 0) = v42;
    uint64_t v53 = v52 + v51;
    uint64_t v17 = v50;
    sub_1B6026AE8(v33, v53, (void (*)(void))type metadata accessor for JSONSchemaView);
    uint64_t v21 = v72;
    sub_1B61B1BC0();
    uint64_t v39 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v17, v39, 1, v31);
  uint64_t v54 = (uint64_t)v70;
  sub_1B60269B4((uint64_t)v21, (uint64_t)v70, (void (*)(void))sub_1B60241C8);
  uint64_t v55 = v73;
  uint64_t v56 = v69;
  sub_1B60269B4(v73, v69, (void (*)(void))sub_1B60241C8);
  uint64_t v57 = v68;
  sub_1B60269B4((uint64_t)v17, v68, (void (*)(void))sub_1B60241C8);
  uint64_t v58 = v71;
  sub_1B60269B4(v54, v71, (void (*)(void))sub_1B60241C8);
  sub_1B6024160();
  uint64_t v60 = v59;
  sub_1B60269B4(v56, v58 + *(int *)(v59 + 48), (void (*)(void))sub_1B60241C8);
  sub_1B60269B4(v57, v58 + *(int *)(v60 + 64), (void (*)(void))sub_1B60241C8);
  sub_1B6026FE4((uint64_t)v17, (void (*)(void))sub_1B60241C8);
  sub_1B6026FE4(v55, (void (*)(void))sub_1B60241C8);
  sub_1B6026FE4((uint64_t)v21, (void (*)(void))sub_1B60241C8);
  sub_1B6026FE4(v57, (void (*)(void))sub_1B60241C8);
  sub_1B6026FE4(v56, (void (*)(void))sub_1B60241C8);
  return sub_1B6026FE4(v54, (void (*)(void))sub_1B60241C8);
}

uint64_t sub_1B6021D40()
{
  return sub_1B61B1B80();
}

uint64_t sub_1B6021DCC(void (*a1)(), uint64_t a2, uint64_t a3, char a4)
{
  type metadata accessor for JSONSchemaView();
  if (a4)
  {
    uint64_t v9 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4F3ECC8];
    sub_1B6027B98(0, &qword_1E9DABA40, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F3ECC8]);
    swift_retain();
    sub_1B61B1B70();
    sub_1B6027B98(0, &qword_1E9DABA38, (uint64_t)&type metadata for SchemaViewValue, v9);
    sub_1B61B1B70();
    a1();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    sub_1B6027B98(0, &qword_1E9DABA38, (uint64_t)&type metadata for SchemaViewValue, MEMORY[0x1E4F3ECC8]);
    swift_retain();
    sub_1B61B1B70();
    a1();
    swift_release();
    return sub_1B6024054((uint64_t)a1, a2, a3, 0);
  }
}

void sub_1B6021F84()
{
  OUTLINED_FUNCTION_83();
  sub_1B6026550();
  OUTLINED_FUNCTION_0_10();
  uint64_t v1 = v0;
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  MEMORY[0x1F4188790](v5);
  sub_1B60235FC(0, &qword_1E9DAB938, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3E2E8], MEMORY[0x1E4F3ECD0]);
  sub_1B602364C();
  sub_1B61B1CE0();
  sub_1B61B1CE0();
  uint64_t v6 = *(void (**)(void))(v1 + 16);
  OUTLINED_FUNCTION_18_23();
  v6();
  OUTLINED_FUNCTION_18_23();
  v6();
  OUTLINED_FUNCTION_18_23();
  v6();
  sub_1B6026680();
  OUTLINED_FUNCTION_18_23();
  v6();
  uint64_t v7 = *(void (**)(void))(v1 + 8);
  OUTLINED_FUNCTION_26_0();
  v7();
  OUTLINED_FUNCTION_26_0();
  v7();
  OUTLINED_FUNCTION_26_0();
  v7();
  OUTLINED_FUNCTION_26_0();
  v7();
  OUTLINED_FUNCTION_73();
}

uint64_t sub_1B602218C()
{
  return sub_1B61B1C70();
}

uint64_t sub_1B6022204(uint64_t *a1)
{
  sub_1B61B17B0();
  uint64_t v2 = *a1;
  uint64_t v6 = a1[3];
  uint64_t v7 = v2;
  uint64_t v3 = (_OWORD *)swift_allocObject();
  long long v4 = *((_OWORD *)a1 + 1);
  v3[1] = *(_OWORD *)a1;
  v3[2] = v4;
  *(_OWORD *)((char *)v3 + 4MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *(_OWORD *)((char *)a1 + 25);
  sub_1B60266F0((uint64_t)&v7);
  swift_retain();
  sub_1B60266F0((uint64_t)&v6);
  swift_retain();
  return sub_1B61B1BC0();
}

uint64_t sub_1B60222E4()
{
  return sub_1B61B1C70();
}

void sub_1B6022364()
{
}

uint64_t sub_1B60223A4()
{
  return sub_1B61B16D0();
}

void sub_1B60223C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1B602242C(uint64_t a1)
{
}

uint64_t sub_1B6022460()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B60224AC()
{
  return sub_1B601C1C0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32));
}

void sub_1B60224B8()
{
  if (!qword_1E9DAB7C0)
  {
    sub_1B60223C8(255, &qword_1E9DAB7C8, (uint64_t (*)(uint64_t))sub_1B6022568, MEMORY[0x1E4F3F108]);
    sub_1B6022E1C();
    unint64_t v0 = sub_1B61B19B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAB7C0);
    }
  }
}

void sub_1B6022568()
{
  if (!qword_1E9DAB7D0)
  {
    sub_1B6027B98(255, &qword_1E9DAB7D8, (uint64_t)&type metadata for JSMetadataView, MEMORY[0x1E4FBB718]);
    sub_1B60223C8(255, &qword_1E9DAB7E0, (uint64_t (*)(uint64_t))sub_1B602264C, MEMORY[0x1E4FBB718]);
    sub_1B6022CCC();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1E9DAB7D0);
    }
  }
}

void sub_1B602264C()
{
  if (!qword_1E9DAB7E8)
  {
    sub_1B60228AC(255, &qword_1E9DAB7F0, &qword_1E9DAB7F8, (uint64_t (*)(uint64_t))sub_1B60226EC, (void (*)(void))sub_1B6022C4C);
    unint64_t v0 = sub_1B61B1CF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAB7E8);
    }
  }
}

void sub_1B60226EC()
{
  if (!qword_1E9DAB800)
  {
    sub_1B60235FC(255, &qword_1E9DAB808, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3E2E8], MEMORY[0x1E4F3F0F0]);
    sub_1B60223C8(255, (unint64_t *)&qword_1E9DAB810, (uint64_t (*)(uint64_t))sub_1B60227B8, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DAB800);
    }
  }
}

void sub_1B60227B8()
{
  if (!qword_1E9DAB818)
  {
    sub_1B60228AC(255, (unint64_t *)&qword_1E9DAB820, &qword_1E9DAB828, (uint64_t (*)(uint64_t))sub_1B6022934, (void (*)(void))sub_1B6022A78);
    sub_1B6022AF8();
    sub_1B6022B7C();
    sub_1B6022C04(&qword_1E9DAB868, (void (*)(uint64_t))sub_1B6022AF8);
    unint64_t v0 = sub_1B61B15A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAB818);
    }
  }
}

void sub_1B60228AC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    sub_1B60223C8(255, a3, a4, MEMORY[0x1E4F3F108]);
    a5();
    unint64_t v7 = sub_1B61B1BF0();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1B6022934()
{
  if (!qword_1E9DAB830)
  {
    sub_1B602299C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DAB830);
    }
  }
}

void sub_1B602299C()
{
  if (!qword_1E9DAB838)
  {
    sub_1B60229FC();
    unint64_t v0 = sub_1B61B15F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAB838);
    }
  }
}

void sub_1B60229FC()
{
  if (!qword_1E9DAB840)
  {
    sub_1B6027B98(255, &qword_1E9DAB848, MEMORY[0x1E4F3EB98], MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1B61B1930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAB840);
    }
  }
}

unint64_t sub_1B6022A78()
{
  unint64_t result = qword_1E9DAB850;
  if (!qword_1E9DAB850)
  {
    sub_1B60223C8(255, &qword_1E9DAB828, (uint64_t (*)(uint64_t))sub_1B6022934, MEMORY[0x1E4F3F108]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB850);
  }
  return result;
}

void sub_1B6022AF8()
{
  if (!qword_1E9DAB858)
  {
    unint64_t v0 = type metadata accessor for JSONSchemaPresetSelectorView();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAB858);
    }
  }
}

unint64_t sub_1B6022B7C()
{
  unint64_t result = qword_1E9DAB860;
  if (!qword_1E9DAB860)
  {
    sub_1B60228AC(255, (unint64_t *)&qword_1E9DAB820, &qword_1E9DAB828, (uint64_t (*)(uint64_t))sub_1B6022934, (void (*)(void))sub_1B6022A78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB860);
  }
  return result;
}

uint64_t sub_1B6022C04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B6022C4C()
{
  unint64_t result = qword_1E9DAB870;
  if (!qword_1E9DAB870)
  {
    sub_1B60223C8(255, &qword_1E9DAB7F8, (uint64_t (*)(uint64_t))sub_1B60226EC, MEMORY[0x1E4F3F108]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB870);
  }
  return result;
}

void sub_1B6022CCC()
{
  if (!qword_1E9DAB878)
  {
    sub_1B6022D60();
    sub_1B60235FC(255, &qword_1E9DAB898, (uint64_t)&unk_1F0F17FB0, (uint64_t)&type metadata for JSObjectValueView, MEMORY[0x1E4F3D750]);
    unint64_t v0 = sub_1B61B1820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAB878);
    }
  }
}

void sub_1B6022D60()
{
  if (!qword_1E9DAB880)
  {
    unint64_t v0 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x1E4F3D750];
    sub_1B60235FC(255, &qword_1E9DAB888, (uint64_t)&type metadata for JSArrayValueView, (uint64_t)&unk_1F0F18160, MEMORY[0x1E4F3D750]);
    sub_1B60235FC(255, &qword_1E9DAB890, (uint64_t)&unk_1F0F180D0, (uint64_t)&unk_1F0F18040, v0);
    unint64_t v1 = sub_1B61B1820();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1E9DAB880);
    }
  }
}

unint64_t sub_1B6022E1C()
{
  unint64_t result = qword_1E9DAB8A0;
  if (!qword_1E9DAB8A0)
  {
    sub_1B60223C8(255, &qword_1E9DAB7C8, (uint64_t (*)(uint64_t))sub_1B6022568, MEMORY[0x1E4F3F108]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB8A0);
  }
  return result;
}

void sub_1B6022E9C()
{
  if (!qword_1E9DAB8A8)
  {
    sub_1B60224B8();
    sub_1B6023E28(255, &qword_1E9DAB8B0, (void (*)(uint64_t))sub_1B6022FA0, (void (*)(void))sub_1B602391C);
    sub_1B6022C04(&qword_1E9DAB970, (void (*)(uint64_t))sub_1B60224B8);
    sub_1B6023950();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1E9DAB8A8);
    }
  }
}

void sub_1B6022FA0()
{
  if (!qword_1E9DAB8B8)
  {
    sub_1B6026C70(255, &qword_1E9DAB8C0, MEMORY[0x1E4F3D750]);
    sub_1B6023798();
    unint64_t v0 = sub_1B61B1500();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAB8B8);
    }
  }
}

void sub_1B6023020()
{
  if (!qword_1E9DAB8C8)
  {
    sub_1B60235FC(255, &qword_1E9DAB8D0, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3CAB0], MEMORY[0x1E4F3CC10]);
    sub_1B602316C();
    sub_1B60236FC();
    sub_1B6023234(255);
    sub_1B6023EE8(&qword_1E9DAB948, sub_1B6023234, (void (*)(void))sub_1B60236C8);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1E9DAB8C8);
    }
  }
}

void sub_1B602316C()
{
  if (!qword_1E9DAB8D8)
  {
    sub_1B6023234(255);
    sub_1B6023EE8(&qword_1E9DAB948, sub_1B6023234, (void (*)(void))sub_1B60236C8);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1E9DAB8D8);
    }
  }
}

void sub_1B6023234(uint64_t a1)
{
}

void sub_1B6023268(uint64_t a1)
{
}

void sub_1B602329C()
{
  if (!qword_1E9DAB8F0)
  {
    sub_1B602330C();
    sub_1B602356C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DAB8F0);
    }
  }
}

void sub_1B602330C()
{
  if (!qword_1E9DAB8F8)
  {
    sub_1B60233A0();
    sub_1B6022C04(&qword_1E9DAB928, (void (*)(uint64_t))sub_1B60233A0);
    unint64_t v0 = sub_1B61B1680();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAB8F8);
    }
  }
}

void sub_1B60233A0()
{
  if (!qword_1E9DAB900)
  {
    sub_1B6027B98(255, &qword_1E9DAB908, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBB08]);
    sub_1B61B1880();
    sub_1B60234AC();
    sub_1B6022C04(&qword_1E9DAB918, MEMORY[0x1E4F3D8D8]);
    sub_1B6023520();
    unint64_t v0 = sub_1B61B1D20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAB900);
    }
  }
}

unint64_t sub_1B60234AC()
{
  unint64_t result = qword_1E9DAB910;
  if (!qword_1E9DAB910)
  {
    sub_1B6027B98(255, &qword_1E9DAB908, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBB08]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB910);
  }
  return result;
}

unint64_t sub_1B6023520()
{
  unint64_t result = qword_1E9DAB920;
  if (!qword_1E9DAB920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB920);
  }
  return result;
}

void sub_1B602356C()
{
  if (!qword_1E9DAB930)
  {
    sub_1B60235FC(255, &qword_1E9DAB938, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3E2E8], MEMORY[0x1E4F3ECD0]);
    sub_1B602364C();
    unint64_t v0 = sub_1B61B1680();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAB930);
    }
  }
}

void sub_1B60235FC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1B602364C()
{
  unint64_t result = qword_1E9DAB940;
  if (!qword_1E9DAB940)
  {
    sub_1B60235FC(255, &qword_1E9DAB938, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3E2E8], MEMORY[0x1E4F3ECD0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB940);
  }
  return result;
}

uint64_t sub_1B60236C8()
{
  return sub_1B6022C04(&qword_1E9DAB950, sub_1B6023268);
}

unint64_t sub_1B60236FC()
{
  unint64_t result = qword_1E9DAB958;
  if (!qword_1E9DAB958)
  {
    sub_1B60235FC(255, &qword_1E9DAB8D0, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3CAB0], MEMORY[0x1E4F3CC10]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB958);
  }
  return result;
}

unint64_t sub_1B6023798()
{
  unint64_t result = qword_1E9DAB960;
  if (!qword_1E9DAB960)
  {
    sub_1B6026C70(255, &qword_1E9DAB8C0, MEMORY[0x1E4F3D750]);
    sub_1B60235FC(255, &qword_1E9DAB8D0, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3CAB0], MEMORY[0x1E4F3CC10]);
    sub_1B602316C();
    sub_1B60236FC();
    sub_1B6023234(255);
    sub_1B6023EE8(&qword_1E9DAB948, sub_1B6023234, (void (*)(void))sub_1B60236C8);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB960);
  }
  return result;
}

uint64_t sub_1B602391C()
{
  return sub_1B6022C04(&qword_1E9DAB968, (void (*)(uint64_t))sub_1B6022FA0);
}

unint64_t sub_1B6023950()
{
  unint64_t result = qword_1E9DAB978;
  if (!qword_1E9DAB978)
  {
    sub_1B6023E28(255, &qword_1E9DAB8B0, (void (*)(uint64_t))sub_1B6022FA0, (void (*)(void))sub_1B602391C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB978);
  }
  return result;
}

void sub_1B60239D0()
{
  if (!qword_1E9DAB980)
  {
    sub_1B6022E9C();
    sub_1B6023B48();
    sub_1B60224B8();
    sub_1B6023E28(255, &qword_1E9DAB8B0, (void (*)(uint64_t))sub_1B6022FA0, (void (*)(void))sub_1B602391C);
    sub_1B6022C04(&qword_1E9DAB970, (void (*)(uint64_t))sub_1B60224B8);
    sub_1B6023950();
    swift_getOpaqueTypeConformance2();
    sub_1B6022C04(&qword_1E9DAB990, (void (*)(uint64_t))sub_1B6023B48);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1E9DAB980);
    }
  }
}

void sub_1B6023B48()
{
  if (!qword_1E9DAB988)
  {
    sub_1B60235FC(255, &qword_1E9DAB8D0, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3CAB0], MEMORY[0x1E4F3CC10]);
    sub_1B60236FC();
    unint64_t v0 = sub_1B61B1500();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAB988);
    }
  }
}

void sub_1B6023BD8()
{
  if (!qword_1E9DAB998)
  {
    sub_1B60239D0();
    sub_1B6023DD4(255);
    sub_1B6022E9C();
    sub_1B6023B48();
    sub_1B60224B8();
    sub_1B6023E28(255, &qword_1E9DAB8B0, (void (*)(uint64_t))sub_1B6022FA0, (void (*)(void))sub_1B602391C);
    sub_1B6022C04(&qword_1E9DAB970, (void (*)(uint64_t))sub_1B60224B8);
    sub_1B6023950();
    swift_getOpaqueTypeConformance2();
    sub_1B6022C04(&qword_1E9DAB990, (void (*)(uint64_t))sub_1B6023B48);
    swift_getOpaqueTypeConformance2();
    sub_1B6023EE8(&qword_1E9DAB9C0, sub_1B6023DD4, (void (*)(void))sub_1B6023F58);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1E9DAB998);
    }
  }
}

void sub_1B6023DD4(uint64_t a1)
{
}

void sub_1B6023E08(uint64_t a1)
{
}

void sub_1B6023E28(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    sub_1B61B15B0();
    a3(255);
    a4();
    unint64_t v7 = sub_1B61B1610();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1B6023EB4()
{
  return sub_1B6022C04(&qword_1E9DAB9B8, (void (*)(uint64_t))type metadata accessor for JSONSchemaView);
}

uint64_t sub_1B6023EE8(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B6023F58()
{
  unint64_t result = qword_1E9DAB9C8;
  if (!qword_1E9DAB9C8)
  {
    sub_1B6023E08(255);
    sub_1B6023FC8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB9C8);
  }
  return result;
}

unint64_t sub_1B6023FC8()
{
  unint64_t result = qword_1E9DAB9D0;
  if (!qword_1E9DAB9D0)
  {
    sub_1B6023E28(255, &qword_1E9DAB9B0, (void (*)(uint64_t))type metadata accessor for JSONSchemaView, (void (*)(void))sub_1B6023EB4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB9D0);
  }
  return result;
}

uint64_t sub_1B6024048@<X0>(void *a1@<X8>)
{
  return sub_1B601D478(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_1B6024054(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result = swift_release();
  if (a4)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B60240A4()
{
  return sub_1B60240D8((uint64_t (*)(uint64_t))sub_1B601F4B4);
}

uint64_t sub_1B60240C0()
{
  return sub_1B60240D8((uint64_t (*)(uint64_t))sub_1B60205C0);
}

uint64_t sub_1B60240D8(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = type metadata accessor for JSONSchemaView();
  OUTLINED_FUNCTION_4_10(v2);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return a1(v4);
}

uint64_t sub_1B6024140()
{
  return sub_1B60240D8((uint64_t (*)(uint64_t))sub_1B60207AC);
}

uint64_t sub_1B6024158@<X0>(uint64_t a1@<X8>)
{
  return sub_1B60215BC(*(void *)(v1 + 16), a1);
}

void sub_1B6024160()
{
  if (!qword_1E9DAB9E8)
  {
    sub_1B60241C8();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1E9DAB9E8);
    }
  }
}

void sub_1B60241C8()
{
  if (!qword_1E9DAB9F0)
  {
    sub_1B60235FC(255, &qword_1E9DAB938, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3E2E8], MEMORY[0x1E4F3ECD0]);
    unint64_t v0 = sub_1B61B2F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DAB9F0);
    }
  }
}

unint64_t sub_1B602424C()
{
  unint64_t result = qword_1E9DAB9F8;
  if (!qword_1E9DAB9F8)
  {
    sub_1B60223C8(255, &qword_1E9DAB9E0, (uint64_t (*)(uint64_t))sub_1B6024160, MEMORY[0x1E4F3F108]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DAB9F8);
  }
  return result;
}

unint64_t sub_1B60242D0()
{
  unint64_t result = qword_1E9DABA00;
  if (!qword_1E9DABA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DABA00);
  }
  return result;
}

uint64_t sub_1B602431C()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for JSONSchemaView(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v47 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v47 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a2[7];
    a1[6] = a2[6];
    a1[7] = v10;
    uint64_t v11 = a2[9];
    a1[8] = a2[8];
    a1[9] = v11;
    a1[10] = a2[10];
    uint64_t v12 = (int *)type metadata accessor for JSONSchema(0);
    uint64_t v13 = v12[6];
    uint64_t v66 = (char *)a2 + v13;
    uint64_t v68 = (char *)v4 + v13;
    uint64_t v14 = sub_1B61B0AC0();
    uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    sub_1B61B1F70();
    sub_1B61B1F70();
    sub_1B61B1F70();
    sub_1B61B1F70();
    sub_1B61B1F70();
    swift_retain();
    v65(v68, v66, v14);
    uint64_t v15 = v12[7];
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_1B61AFAB0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = v12[8];
    uint64_t v20 = (char *)v4 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_1B61AF960();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    uint64_t v23 = a3[6];
    *((unsigned char *)v4 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v24 = (char *)v4 + v23;
    uint64_t v25 = (char *)a2 + v23;
    *uint64_t v24 = *v25;
    *((void *)v24 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)v25 + 1);
    uint64_t v26 = a3[7];
    uint64_t v27 = a3[8];
    uint64_t v28 = (char *)v4 + v26;
    uint64_t v29 = (char *)a2 + v26;
    *uint64_t v28 = *v29;
    *((void *)v28 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)v29 + 1);
    uint64_t v30 = (char *)v4 + v27;
    uint64_t v31 = (char *)a2 + v27;
    *uint64_t v30 = *v31;
    *((void *)v30 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)v31 + 1);
    uint64_t v32 = a3[9];
    uint64_t v33 = a3[10];
    uint64_t v34 = (char *)v4 + v32;
    uint64_t v35 = (char *)a2 + v32;
    *uint64_t v34 = *v35;
    *((void *)v34 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)v35 + 1);
    unint64_t v36 = (void *)((char *)v4 + v33);
    uint64_t v37 = (void *)((char *)a2 + v33);
    uint64_t v38 = v37[1];
    *unint64_t v36 = *v37;
    v36[1] = v38;
    v36[2] = v37[2];
    uint64_t v39 = a3[11];
    uint64_t v69 = (void *)((char *)v4 + v39);
    uint64_t v40 = (void *)((char *)a2 + v39);
    sub_1B60223C8(0, &qword_1E9DAB7B0, (uint64_t (*)(uint64_t))sub_1B602242C, MEMORY[0x1E4F3C648]);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B61B1F70();
    swift_retain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *uint64_t v69 = *v40;
    if (EnumCaseMultiPayload == 1)
    {
      v69[1] = v40[1];
      sub_1B602242C(0);
      uint64_t v43 = *(int *)(v42 + 32);
      uint64_t v67 = (char *)v69 + v43;
      uint64_t v44 = (char *)v40 + v43;
      uint64_t v45 = sub_1B61B1660();
      uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
      swift_retain();
      swift_retain();
      v46(v67, v44, v45);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v48 = a3[12];
    uint64_t v49 = a3[13];
    unint64_t v50 = (void *)((char *)v4 + v48);
    unint64_t v51 = (void *)((char *)a2 + v48);
    uint64_t v52 = v51[1];
    *unint64_t v50 = *v51;
    v50[1] = v52;
    uint64_t v53 = (char *)v4 + v49;
    uint64_t v54 = (char *)a2 + v49;
    int v55 = *((unsigned __int8 *)a2 + v49 + 24);
    swift_retain();
    swift_retain();
    if (v55 == 255)
    {
      *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
      *(_OWORD *)(v53 + 9) = *(_OWORD *)(v54 + 9);
    }
    else
    {
      char v56 = v55 & 1;
      uint64_t v57 = *(void *)v54;
      uint64_t v58 = *((void *)v54 + 1);
      uint64_t v59 = *((void *)v54 + 2);
      sub_1B6024790(v57, v58, v59, v56);
      *(void *)uint64_t v53 = v57;
      *((void *)v53 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v58;
      *((void *)v53 + 2) = v59;
      v53[24] = v56;
    }
    uint64_t v60 = a3[14];
    uint64_t v61 = (char *)v4 + v60;
    uint64_t v62 = (char *)a2 + v60;
    if (!*(void *)v62)
    {
      *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
      return v4;
    }
    uint64_t v63 = *((void *)v62 + 1);
    *(void *)uint64_t v61 = *(void *)v62;
    *((void *)v61 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v63;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1B6024790(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    sub_1B61B1F70();
  }
  return swift_retain();
}

uint64_t destroy for JSONSchemaView(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = (int *)type metadata accessor for JSONSchema(0);
  uint64_t v5 = a1 + v4[6];
  uint64_t v6 = sub_1B61B0AC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + v4[7];
  uint64_t v8 = sub_1B61AFAB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + v4[8];
  uint64_t v10 = sub_1B61AF960();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v11 = a1 + a2[11];
  sub_1B60223C8(0, &qword_1E9DAB7B0, (uint64_t (*)(uint64_t))sub_1B602242C, MEMORY[0x1E4F3C648]);
  LODWORD(v7) = swift_getEnumCaseMultiPayload();
  swift_release();
  if (v7 == 1)
  {
    swift_release();
    sub_1B602242C(0);
    uint64_t v13 = v11 + *(int *)(v12 + 32);
    uint64_t v14 = sub_1B61B1660();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  swift_release();
  uint64_t result = swift_release();
  uint64_t v16 = a1 + a2[13];
  int v17 = *(unsigned __int8 *)(v16 + 24);
  if (v17 != 255) {
    uint64_t result = sub_1B6024054(*(void *)v16, *(void *)(v16 + 8), *(void *)(v16 + 16), v17 & 1);
  }
  if (*(void *)(a1 + a2[14]))
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for JSONSchemaView(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  a1[10] = a2[10];
  uint64_t v10 = (int *)type metadata accessor for JSONSchema(0);
  uint64_t v11 = v10[6];
  uint64_t v64 = (char *)a2 + v11;
  uint64_t v66 = (char *)a1 + v11;
  uint64_t v12 = sub_1B61B0AC0();
  uint64_t v63 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  sub_1B61B1F70();
  sub_1B61B1F70();
  sub_1B61B1F70();
  sub_1B61B1F70();
  sub_1B61B1F70();
  swift_retain();
  v63(v66, v64, v12);
  uint64_t v13 = a3;
  uint64_t v14 = v10[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_1B61AFAB0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = v10[8];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_1B61AF960();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  uint64_t v22 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  char *v23 = *v24;
  *((void *)v23 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)v24 + 1);
  uint64_t v25 = a3[7];
  uint64_t v26 = a3[8];
  uint64_t v27 = (char *)a1 + v25;
  uint64_t v28 = (char *)a2 + v25;
  *uint64_t v27 = *v28;
  *((void *)v27 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)v28 + 1);
  uint64_t v29 = (char *)a1 + v26;
  uint64_t v30 = (char *)a2 + v26;
  char *v29 = *v30;
  *((void *)v29 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)v30 + 1);
  uint64_t v31 = a3[9];
  uint64_t v32 = a3[10];
  uint64_t v33 = (char *)a1 + v31;
  uint64_t v34 = (char *)a2 + v31;
  char *v33 = *v34;
  *((void *)v33 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)v34 + 1);
  uint64_t v35 = (void *)((char *)a1 + v32);
  unint64_t v36 = (void *)((char *)a2 + v32);
  uint64_t v37 = v36[1];
  *uint64_t v35 = *v36;
  v35[1] = v37;
  v35[2] = v36[2];
  uint64_t v38 = a3[11];
  uint64_t v67 = (void *)((char *)a1 + v38);
  uint64_t v39 = (void *)((char *)a2 + v38);
  sub_1B60223C8(0, &qword_1E9DAB7B0, (uint64_t (*)(uint64_t))sub_1B602242C, MEMORY[0x1E4F3C648]);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B61B1F70();
  swift_retain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *uint64_t v67 = *v39;
  if (EnumCaseMultiPayload == 1)
  {
    v67[1] = v39[1];
    sub_1B602242C(0);
    uint64_t v42 = *(int *)(v41 + 32);
    uint64_t v65 = (char *)v67 + v42;
    uint64_t v43 = (char *)v39 + v42;
    uint64_t v44 = sub_1B61B1660();
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
    swift_retain();
    swift_retain();
    v45(v65, v43, v44);
    uint64_t v13 = a3;
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v46 = v13[12];
  uint64_t v47 = v13[13];
  uint64_t v48 = (void *)((char *)a1 + v46);
  uint64_t v49 = (void *)((char *)a2 + v46);
  uint64_t v50 = v49[1];
  *uint64_t v48 = *v49;
  v48[1] = v50;
  unint64_t v51 = (char *)a1 + v47;
  uint64_t v52 = (char *)a2 + v47;
  int v53 = *((unsigned __int8 *)a2 + v47 + 24);
  swift_retain();
  swift_retain();
  if (v53 == 255)
  {
    *(_OWORD *)unint64_t v51 = *(_OWORD *)v52;
    *(_OWORD *)(v51 + 9) = *(_OWORD *)(v52 + 9);
  }
  else
  {
    char v54 = v53 & 1;
    uint64_t v55 = *(void *)v52;
    uint64_t v56 = *((void *)v52 + 1);
    uint64_t v57 = *((void *)v52 + 2);
    sub_1B6024790(v55, v56, v57, v54);
    *(void *)unint64_t v51 = v55;
    *((void *)v51 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v56;
    *((void *)v51 + 2) = v57;
    v51[24] = v54;
  }
  uint64_t v58 = v13[14];
  uint64_t v59 = (void *)((char *)a1 + v58);
  uint64_t v60 = (void *)((char *)a2 + v58);
  if (*v60)
  {
    uint64_t v61 = v60[1];
    *uint64_t v59 = *v60;
    v59[1] = v61;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
  }
  return a1;
}

void *assignWithCopy for JSONSchemaView(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  uint64_t v6 = (int *)type metadata accessor for JSONSchema(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B61B0AC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = v6[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1B61AFAB0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = v6[8];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_1B61AF960();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  uint64_t v19 = a3[6];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *uint64_t v20 = *v21;
  *((void *)v20 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)v21 + 1);
  swift_retain();
  swift_release();
  uint64_t v22 = a3[7];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  char *v23 = *v24;
  *((void *)v23 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)v24 + 1);
  swift_retain();
  swift_release();
  uint64_t v25 = a3[8];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  char *v26 = *v27;
  *((void *)v26 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)v27 + 1);
  swift_retain();
  swift_release();
  uint64_t v28 = a3[9];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  char *v29 = *v30;
  *((void *)v29 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)v30 + 1);
  swift_retain();
  swift_release();
  uint64_t v31 = a3[10];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (char *)a2 + v31;
  *uint64_t v32 = *(void *)((char *)a2 + v31);
  v32[1] = *(void *)((char *)a2 + v31 + 8);
  sub_1B61B1F70();
  swift_bridgeObjectRelease();
  v32[2] = *((void *)v33 + 2);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v34 = a3[11];
    uint64_t v35 = (void *)((char *)a1 + v34);
    unint64_t v36 = (void *)((char *)a2 + v34);
    uint64_t v37 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F3C648];
    sub_1B6027AEC((uint64_t)a1 + v34, &qword_1E9DAB7B0, (uint64_t (*)(uint64_t))sub_1B602242C, MEMORY[0x1E4F3C648]);
    sub_1B60223C8(0, &qword_1E9DAB7B0, (uint64_t (*)(uint64_t))sub_1B602242C, v37);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *uint64_t v35 = *v36;
    if (EnumCaseMultiPayload == 1)
    {
      v35[1] = v36[1];
      sub_1B602242C(0);
      uint64_t v40 = *(int *)(v39 + 32);
      uint64_t v73 = (char *)v36 + v40;
      long long v74 = (char *)v35 + v40;
      uint64_t v41 = sub_1B61B1660();
      uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
      swift_retain();
      swift_retain();
      v42(v74, v73, v41);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v43 = a3[12];
  uint64_t v44 = (char *)a1 + v43;
  uint64_t v45 = (char *)a2 + v43;
  *(void *)((char *)a1 + v43) = *(void *)((char *)a2 + v43);
  swift_retain();
  swift_release();
  *((void *)v44 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)v45 + 1);
  swift_retain();
  swift_release();
  uint64_t v46 = a3[13];
  uint64_t v47 = (uint64_t)a1 + v46;
  uint64_t v48 = (char *)a2 + v46;
  int v49 = *((unsigned __int8 *)a1 + v46 + 24);
  int v50 = *((unsigned __int8 *)a2 + v46 + 24);
  if (v49 == 255)
  {
    if (v50 == 255)
    {
      long long v52 = *(_OWORD *)v48;
      *(_OWORD *)(v47 + 9) = *(_OWORD *)(v48 + 9);
      *(_OWORD *)uint64_t v47 = v52;
    }
    else
    {
      char v61 = v50 & 1;
      uint64_t v62 = *(void *)v48;
      uint64_t v63 = *((void *)v48 + 1);
      uint64_t v64 = *((void *)v48 + 2);
      sub_1B6024790(v62, v63, v64, v50 & 1);
      *(void *)uint64_t v47 = v62;
      *(void *)(v47 + 8) = v63;
      *(void *)(v47 + 16) = v64;
      *(unsigned char *)(v47 + 24) = v61;
    }
  }
  else if (v50 == 255)
  {
    sub_1B602540C(v47);
    long long v51 = *(_OWORD *)(v48 + 9);
    *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
    *(_OWORD *)(v47 + 9) = v51;
  }
  else
  {
    char v53 = v50 & 1;
    uint64_t v54 = *(void *)v48;
    uint64_t v55 = *((void *)v48 + 1);
    uint64_t v56 = *((void *)v48 + 2);
    sub_1B6024790(v54, v55, v56, v50 & 1);
    uint64_t v57 = *(void *)v47;
    uint64_t v58 = *(void *)(v47 + 8);
    uint64_t v59 = *(void *)(v47 + 16);
    char v60 = *(unsigned char *)(v47 + 24);
    *(void *)uint64_t v47 = v54;
    *(void *)(v47 + 8) = v55;
    *(void *)(v47 + 16) = v56;
    *(unsigned char *)(v47 + 24) = v53;
    sub_1B6024054(v57, v58, v59, v60);
  }
  uint64_t v65 = a3[14];
  uint64_t v66 = (void *)((char *)a1 + v65);
  uint64_t v67 = (void *)((char *)a2 + v65);
  uint64_t v68 = *(void *)((char *)a1 + v65);
  uint64_t v69 = *v67;
  if (!v68)
  {
    if (v69)
    {
      uint64_t v71 = v67[1];
      void *v66 = v69;
      v66[1] = v71;
      swift_retain();
      return a1;
    }
LABEL_19:
    *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
    return a1;
  }
  if (!v69)
  {
    swift_release();
    goto LABEL_19;
  }
  uint64_t v70 = v67[1];
  void *v66 = v69;
  v66[1] = v70;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1B602540C(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for JSONSchemaView(void *a1, void *a2, int *a3)
{
  memcpy(a1, a2, 0x50uLL);
  a1[10] = a2[10];
  uint64_t v6 = (int *)type metadata accessor for JSONSchema(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1B61B0AC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = v6[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1B61AFAB0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = v6[8];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_1B61AF960();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *(_OWORD *)((char *)a1 + v19) = *(_OWORD *)((char *)a2 + v19);
  uint64_t v20 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v2sub_1B5E6F544(4, 0, 0) = *(_OWORD *)((char *)a2 + v20);
  uint64_t v21 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *((void *)v22 + 2) = *((void *)v23 + 2);
  uint64_t v24 = a3[11];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  sub_1B60223C8(0, &qword_1E9DAB7B0, (uint64_t (*)(uint64_t))sub_1B602242C, MEMORY[0x1E4F3C648]);
  uint64_t v28 = v27;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v29 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v29;
    sub_1B602242C(0);
    uint64_t v31 = *(int *)(v30 + 32);
    uint64_t v32 = (char *)v25 + v31;
    uint64_t v33 = (char *)v26 + v31;
    uint64_t v34 = sub_1B61B1660();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
  }
  uint64_t v35 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  unint64_t v36 = (_OWORD *)((char *)a1 + v35);
  uint64_t v37 = (_OWORD *)((char *)a2 + v35);
  *unint64_t v36 = *v37;
  *(_OWORD *)((char *)v36 + 9) = *(_OWORD *)((char *)v37 + 9);
  uint64_t v38 = a3[14];
  uint64_t v39 = (void *)((char *)a1 + v38);
  uint64_t v40 = (void *)((char *)a2 + v38);
  uint64_t v41 = *v40;
  if (*v40)
  {
    uint64_t v42 = v40[1];
    *uint64_t v39 = v41;
    v39[1] = v42;
  }
  else
  {
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  }
  return a1;
}

void *assignWithTake for JSONSchemaView(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_release();
  uint64_t v11 = (int *)type metadata accessor for JSONSchema(0);
  uint64_t v12 = v11[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1B61B0AC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = v11[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_1B61AFAB0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = v11[8];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_1B61AF960();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  uint64_t v24 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  *uint64_t v25 = *v26;
  *((void *)v25 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)v26 + 1);
  swift_release();
  uint64_t v27 = a3[7];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  *uint64_t v28 = *v29;
  *((void *)v28 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)v29 + 1);
  swift_release();
  uint64_t v30 = a3[8];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  char *v31 = *v32;
  *((void *)v31 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)v32 + 1);
  swift_release();
  uint64_t v33 = a3[9];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  *uint64_t v34 = *v35;
  *((void *)v34 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)v35 + 1);
  swift_release();
  uint64_t v36 = a3[10];
  uint64_t v37 = (void *)((char *)a1 + v36);
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = *(void *)((char *)a2 + v36 + 8);
  *uint64_t v37 = *(void *)((char *)a2 + v36);
  v37[1] = v39;
  swift_bridgeObjectRelease();
  v37[2] = *((void *)v38 + 2);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v40 = a3[11];
    uint64_t v41 = (void *)((char *)a1 + v40);
    uint64_t v42 = (void *)((char *)a2 + v40);
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F3C648];
    sub_1B6027AEC((uint64_t)a1 + v40, &qword_1E9DAB7B0, (uint64_t (*)(uint64_t))sub_1B602242C, MEMORY[0x1E4F3C648]);
    sub_1B60223C8(0, &qword_1E9DAB7B0, (uint64_t (*)(uint64_t))sub_1B602242C, v43);
    uint64_t v45 = v44;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v46 = v42[1];
      *uint64_t v41 = *v42;
      v41[1] = v46;
      sub_1B602242C(0);
      uint64_t v48 = *(int *)(v47 + 32);
      int v49 = (char *)v41 + v48;
      int v50 = (char *)v42 + v48;
      uint64_t v51 = sub_1B61B1660();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    }
  }
  uint64_t v52 = a3[12];
  char v53 = (char *)a1 + v52;
  uint64_t v54 = (char *)a2 + v52;
  *(void *)((char *)a1 + v52) = *(void *)((char *)a2 + v52);
  swift_release();
  *((void *)v53 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *((void *)v54 + 1);
  swift_release();
  uint64_t v55 = a3[13];
  uint64_t v56 = (uint64_t)a1 + v55;
  uint64_t v57 = (char *)a2 + v55;
  int v58 = *((unsigned __int8 *)a1 + v55 + 24);
  if (v58 == 255) {
    goto LABEL_8;
  }
  int v59 = v57[24];
  if (v59 == 255)
  {
    sub_1B602540C(v56);
LABEL_8:
    *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
    *(_OWORD *)(v56 + 9) = *(_OWORD *)(v57 + 9);
    goto LABEL_10;
  }
  char v60 = v58 & 1;
  uint64_t v61 = *((void *)v57 + 2);
  uint64_t v62 = *(void *)v56;
  uint64_t v63 = *(void *)(v56 + 8);
  uint64_t v64 = *(void *)(v56 + 16);
  *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
  *(void *)(v56 + 16) = v61;
  *(unsigned char *)(v56 + 24) = v59 & 1;
  sub_1B6024054(v62, v63, v64, v60);
LABEL_10:
  uint64_t v65 = a3[14];
  uint64_t v66 = (void *)((char *)a1 + v65);
  uint64_t v67 = (void *)((char *)a2 + v65);
  uint64_t v68 = *(void *)((char *)a1 + v65);
  uint64_t v69 = *v67;
  if (!v68)
  {
    if (v69)
    {
      uint64_t v71 = v67[1];
      void *v66 = v69;
      v66[1] = v71;
      return a1;
    }
LABEL_16:
    *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
    return a1;
  }
  if (!v69)
  {
    swift_release();
    goto LABEL_16;
  }
  uint64_t v70 = v67[1];
  void *v66 = v69;
  v66[1] = v70;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONSchemaView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B6025B50);
}

uint64_t sub_1B6025B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for JSONSchema(0);
  OUTLINED_FUNCTION_2_4();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_8:
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
  if (a2 != 0x7FFFFFFF)
  {
    sub_1B60223C8(0, &qword_1E9DABA08, (uint64_t (*)(uint64_t))sub_1B602242C, MEMORY[0x1E4F3C658]);
    uint64_t v8 = v12;
    uint64_t v9 = a1 + *(int *)(a3 + 44);
    goto LABEL_8;
  }
  unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 40) + 8);
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v1sub_1B5E6F544(4, 0, 0) = -1;
  }
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONSchemaView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B6025C48);
}

void sub_1B6025C48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for JSONSchema(0);
  OUTLINED_FUNCTION_2_4();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + *(int *)(a4 + 40) + 8) = (a2 - 1);
      return;
    }
    sub_1B60223C8(0, &qword_1E9DABA08, (uint64_t (*)(uint64_t))sub_1B602242C, MEMORY[0x1E4F3C658]);
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 44);
  }
  __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
}

void sub_1B6025D28()
{
  type metadata accessor for JSONSchema(319);
  if (v0 <= 0x3F)
  {
    sub_1B60223C8(319, &qword_1E9DAB7B0, (uint64_t (*)(uint64_t))sub_1B602242C, MEMORY[0x1E4F3C648]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for JSONSchemaView.JSONSaveMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6025F1CLL);
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for JSONSchemaView.JSONSaveMode()
{
}

uint64_t sub_1B6025F50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B60261A0(uint64_t a1)
{
  return sub_1B6024054(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_1B60261B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1B6024790(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t sub_1B6026214(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1B6024790(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_1B6024054(v7, v8, v9, v10);
  return a1;
}

uint64_t sub_1B6026284(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_1B6024054(v5, v7, v6, v8);
  return a1;
}

void type metadata accessor for JSONSchemaView.SaveConfiguration()
{
}

uint64_t sub_1B60262E0()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1B602632C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 4sub_1B5E6F544(4, 0, 0) = *(unsigned char *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1B6026394(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 4sub_1B5E6F544(4, 0, 0) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t sub_1B6026434(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 4sub_1B5E6F544(4, 0, 0) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t sub_1B602649C(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 41))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B60264DC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 4sub_1B5E6F544(4, 0, 0) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 4MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 4MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for JSONSchemaView.ShowJSONButtonsView()
{
}

uint64_t sub_1B6026534()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1B6026550()
{
  if (!qword_1E9DABA20)
  {
    sub_1B60235FC(255, &qword_1E9DAB938, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3E2E8], MEMORY[0x1E4F3ECD0]);
    unint64_t v0 = sub_1B61B1CF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DABA20);
    }
  }
}

uint64_t sub_1B60265E0()
{
  return sub_1B6022204(*(uint64_t **)(v0 + 16));
}

uint64_t sub_1B6026630()
{
  return sub_1B6022204(*(uint64_t **)(v0 + 16));
}

void sub_1B6026680()
{
  if (!qword_1E9DABA28)
  {
    sub_1B6026550();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1E9DABA28);
    }
  }
}

uint64_t sub_1B60266E8()
{
  return sub_1B60222E4();
}

uint64_t sub_1B60266F0(uint64_t a1)
{
  return a1;
}

uint64_t objectdestroy_22Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B6026770()
{
  return sub_1B602218C();
}

uint64_t sub_1B6026778()
{
  type metadata accessor for JSONSchemaView();
  OUTLINED_FUNCTION_0_31();
  sub_1B6024054(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  OUTLINED_FUNCTION_39_11();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_37_16();
  type metadata accessor for JSONSchema(0);
  OUTLINED_FUNCTION_12_34();
  OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_5_1();
  v2();
  OUTLINED_FUNCTION_22_23();
  OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_5_1();
  v3();
  OUTLINED_FUNCTION_21_21();
  OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_5_1();
  v4();
  OUTLINED_FUNCTION_7_46();
  OUTLINED_FUNCTION_7_46();
  OUTLINED_FUNCTION_7_46();
  OUTLINED_FUNCTION_7_46();
  OUTLINED_FUNCTION_19_23();
  swift_release();
  OUTLINED_FUNCTION_35_16();
  sub_1B60223C8(0, &qword_1E9DAB7B0, (uint64_t (*)(uint64_t))sub_1B602242C, MEMORY[0x1E4F3C648]);
  OUTLINED_FUNCTION_32_17();
  OUTLINED_FUNCTION_33_15();
  if (v1 == 1)
  {
    swift_release();
    OUTLINED_FUNCTION_8_41();
    OUTLINED_FUNCTION_19_1();
    uint64_t v5 = OUTLINED_FUNCTION_38_14();
    v6(v5);
  }
  OUTLINED_FUNCTION_10_40();
  swift_release();
  OUTLINED_FUNCTION_9_41();
  if (!v8) {
    OUTLINED_FUNCTION_17_26(v7);
  }
  OUTLINED_FUNCTION_24_21();
  if (v9) {
    swift_release();
  }
  OUTLINED_FUNCTION_31_17();
  return swift_deallocObject();
}

uint64_t sub_1B6026968()
{
  uint64_t v1 = type metadata accessor for JSONSchemaView();
  OUTLINED_FUNCTION_4_10(v1);
  unint64_t v2 = *(void (**)())(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  char v5 = *(unsigned char *)(v0 + 40);
  return sub_1B6021DCC(v2, v3, v4, v5);
}

uint64_t sub_1B60269B4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_6_0();
  uint64_t v4 = OUTLINED_FUNCTION_3_48();
  v5(v4);
  return a2;
}

uint64_t sub_1B6026A14()
{
  uint64_t v0 = type metadata accessor for JSONSchemaView();
  OUTLINED_FUNCTION_4_10(v0);
  return sub_1B6021D40();
}

void sub_1B6026A48(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1B6023E28(255, &qword_1E9DAB9B0, (void (*)(uint64_t))type metadata accessor for JSONSchemaView, (void (*)(void))sub_1B6023EB4);
    unint64_t v7 = a3(a1, v6, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1B6026ADC()
{
  sub_1B6021164(v0[2], v0[3], v0[4]);
}

uint64_t sub_1B6026AE8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_6_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

void sub_1B6026B48()
{
  sub_1B6020D80(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1B6026B54(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for JSONSchemaView();
  OUTLINED_FUNCTION_4_10(v3);
  uint64_t v4 = *(void *)(v1 + 16);
  return sub_1B6020F44(a1, v4);
}

uint64_t sub_1B6026BA8(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255) {
    return sub_1B6024790(result, a2, a3, a4 & 1);
  }
  return result;
}

uint64_t sub_1B6026BC0(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255) {
    return sub_1B6024054(result, a2, a3, a4 & 1);
  }
  return result;
}

uint64_t sub_1B6026BE4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = type metadata accessor for JSONSchemaView();
  OUTLINED_FUNCTION_4_10(v6);
  return sub_1B6021338(a1, a2, a3);
}

double sub_1B6026C58@<D0>(uint64_t a1@<X8>)
{
  return sub_1B6020668(a1);
}

uint64_t sub_1B6026C60()
{
  return sub_1B601F518();
}

uint64_t sub_1B6026C68@<X0>(uint64_t a1@<X8>)
{
  return sub_1B601F5B0(*(void *)(v1 + 16), a1);
}

void sub_1B6026C70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1B6023020();
    uint64_t v7 = v6;
    sub_1B60235FC(255, &qword_1E9DAB8D0, MEMORY[0x1E4F3E2F8], MEMORY[0x1E4F3CAB0], MEMORY[0x1E4F3CC10]);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1B6026D0C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B601FC40(a1, a2);
}

uint64_t sub_1B6026D2C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return sub_1B61B1F70();
  }
}

uint64_t sub_1B6026D3C(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void))
{
  if (a3) {
    return a4();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B6026D50@<X0>(uint64_t a1@<X8>)
{
  return sub_1B601FC88(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1B6026D5C()
{
  return sub_1B602020C();
}

uint64_t sub_1B6026D64@<X0>(uint64_t a1@<X8>)
{
  return sub_1B6020278(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1B6026D70()
{
  type metadata accessor for JSONSchemaView();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_39_11();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_37_16();
  type metadata accessor for JSONSchema(0);
  OUTLINED_FUNCTION_12_34();
  OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_5_1();
  v1();
  OUTLINED_FUNCTION_22_23();
  OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_5_1();
  v2();
  OUTLINED_FUNCTION_21_21();
  OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_5_1();
  v3();
  OUTLINED_FUNCTION_7_46();
  OUTLINED_FUNCTION_7_46();
  OUTLINED_FUNCTION_7_46();
  OUTLINED_FUNCTION_7_46();
  OUTLINED_FUNCTION_19_23();
  swift_release();
  OUTLINED_FUNCTION_35_16();
  sub_1B60223C8(0, &qword_1E9DAB7B0, (uint64_t (*)(uint64_t))sub_1B602242C, MEMORY[0x1E4F3C648]);
  OUTLINED_FUNCTION_32_17();
  OUTLINED_FUNCTION_33_15();
  if (v0 == 1)
  {
    swift_release();
    OUTLINED_FUNCTION_8_41();
    OUTLINED_FUNCTION_19_1();
    uint64_t v4 = OUTLINED_FUNCTION_38_14();
    v5(v4);
  }
  OUTLINED_FUNCTION_10_40();
  swift_release();
  OUTLINED_FUNCTION_9_41();
  if (!v7) {
    OUTLINED_FUNCTION_17_26(v6);
  }
  OUTLINED_FUNCTION_24_21();
  if (v8) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B6026F78()
{
  uint64_t v1 = type metadata accessor for JSONSchemaView();
  OUTLINED_FUNCTION_3(v1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = v0 + v6;
  uint64_t v8 = (uint64_t *)(v0 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  return sub_1B602040C(v7, v9, v10);
}

uint64_t sub_1B6026FE4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_5_1();
  v3();
  return a1;
}

unint64_t sub_1B6027034()
{
  unint64_t result = qword_1E9DABA58;
  if (!qword_1E9DABA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DABA58);
  }
  return result;
}

unint64_t sub_1B6027080()
{
  unint64_t result = qword_1E9DABA60;
  if (!qword_1E9DABA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DABA60);
  }
  return result;
}

unint64_t sub_1B60270CC()
{
  unint64_t result = qword_1E9DABA68;
  if (!qword_1E9DABA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DABA68);
  }
  return result;
}

uint64_t sub_1B6027118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  swift_retain();
  if ((a9 & 1) == 0)
  {
    swift_retain();
    swift_retain();
    sub_1B61B1F70();
  }
  return swift_retain();
}

unint64_t sub_1B6027198()
{
  unint64_t result = qword_1E9DABA70;
  if (!qword_1E9DABA70)
  {
    sub_1B6022D60();
    sub_1B6027210();
    sub_1B602734C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DABA70);
  }
  return result;
}

unint64_t sub_1B6027210()
{
  unint64_t result = qword_1E9DABA78;
  if (!qword_1E9DABA78)
  {
    sub_1B60235FC(255, &qword_1E9DAB888, (uint64_t)&type metadata for JSArrayValueView, (uint64_t)&unk_1F0F18160, MEMORY[0x1E4F3D750]);
    sub_1B60272B4();
    sub_1B6027300();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DABA78);
  }
  return result;
}

unint64_t sub_1B60272B4()
{
  unint64_t result = qword_1E9DABA80;
  if (!qword_1E9DABA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DABA80);
  }
  return result;
}

unint64_t sub_1B6027300()
{
  unint64_t result = qword_1E9DABA88;
  if (!qword_1E9DABA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DABA88);
  }
  return result;
}

unint64_t sub_1B602734C()
{
  unint64_t result = qword_1E9DABA90;
  if (!qword_1E9DABA90)
  {
    sub_1B60235FC(255, &qword_1E9DAB890, (uint64_t)&unk_1F0F180D0, (uint64_t)&unk_1F0F18040, MEMORY[0x1E4F3D750]);
    sub_1B60273F0();
    sub_1B602743C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DABA90);
  }
  return result;
}

unint64_t sub_1B60273F0()
{
  unint64_t result = qword_1E9DABA98;
  if (!qword_1E9DABA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DABA98);
  }
  return result;
}

unint64_t sub_1B602743C()
{
  unint64_t result = qword_1E9DABAA0;
  if (!qword_1E9DABAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DABAA0);
  }
  return result;
}

unint64_t sub_1B6027488()
{
  unint64_t result = qword_1E9DABAA8;
  if (!qword_1E9DABAA8)
  {
    sub_1B60235FC(255, &qword_1E9DAB898, (uint64_t)&unk_1F0F17FB0, (uint64_t)&type metadata for JSObjectValueView, MEMORY[0x1E4F3D750]);
    sub_1B6027080();
    sub_1B60270CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DABAA8);
  }
  return result;
}

uint64_t sub_1B602752C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  swift_release();
  if ((a9 & 1) == 0)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_1B60275B8(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    sub_1B61B1F70();
    sub_1B61B1F70();
    sub_1B61B1F70();
    sub_1B61B1F70();
    return sub_1B61B1F70();
  }
  return result;
}

uint64_t sub_1B602762C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  swift_retain();
  if (a9)
  {
    swift_retain();
    swift_retain();
    sub_1B61B1F70();
  }
  return swift_retain();
}

uint64_t sub_1B60276AC()
{
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B61B1F70();
  return swift_retain();
}

uint64_t sub_1B6027714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10, char a11, uint64_t (*a12)(void), uint64_t (*a13)(void), uint64_t (*a14)(void))
{
  if ((a11 & 1) == 0) {
    return sub_1B6027780(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10 & 1, a12, a13);
  }
  return a14();
}

uint64_t sub_1B6027780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10, uint64_t (*a11)(void), uint64_t (*a12)(void))
{
  if (a10) {
    return a12();
  }
  else {
    return a11();
  }
}

uint64_t sub_1B60277B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  swift_release();
  if (a9)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_1B6027840()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B60278A8(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B602791C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B6027958@<X0>(uint64_t a1@<X8>)
{
  return sub_1B601ECD4(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_1B6027960()
{
  unint64_t result = qword_1E9DABAB0;
  if (!qword_1E9DABAB0)
  {
    sub_1B60228AC(255, &qword_1E9DAB7F0, &qword_1E9DAB7F8, (uint64_t (*)(uint64_t))sub_1B60226EC, (void (*)(void))sub_1B6022C4C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DABAB0);
  }
  return result;
}

void sub_1B60279E8()
{
  if (!qword_1E9DABAB8)
  {
    sub_1B60223C8(255, &qword_1E9DAB7F8, (uint64_t (*)(uint64_t))sub_1B60226EC, MEMORY[0x1E4F3F108]);
    unint64_t v0 = sub_1B61B1550();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9DABAB8);
    }
  }
}

uint64_t sub_1B6027A80(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1B60223C8(0, a3, a4, MEMORY[0x1E4FBB718]);
  OUTLINED_FUNCTION_6_0();
  uint64_t v5 = OUTLINED_FUNCTION_3_48();
  v6(v5);
  return a2;
}

uint64_t sub_1B6027AEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_1B60223C8(0, a2, a3, a4);
  OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_5_1();
  v5();
  return a1;
}

uint64_t sub_1B6027B3C()
{
  uint64_t v0 = type metadata accessor for JSONSchemaView();
  OUTLINED_FUNCTION_4_10(v0);
  return sub_1B601F344();
}

void sub_1B6027B98(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1B6027BE8()
{
  unint64_t result = qword_1E9DABAC8;
  if (!qword_1E9DABAC8)
  {
    sub_1B60223C8(255, &qword_1E9DABAD0, (uint64_t (*)(uint64_t))sub_1B6026680, MEMORY[0x1E4F3F108]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DABAC8);
  }
  return result;
}

id ContentInsetable<>.ts_adjustContentInset(to:padding:)(void *a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  objc_msgSend(a1, sel_layoutFrame);
  double MinX = CGRectGetMinX(v18);
  id result = (id)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  if (v16 != MinX + a5)
  {
    (*(void (**)(uint64_t, uint64_t, double, double, double, double))(a3 + 16))(a2, a3, a4 + 0.0, MinX + a5, a6 + 0.0, MinX + a7);
    return objc_msgSend(v7, sel_setNeedsLayout);
  }
  return result;
}

uint64_t dispatch thunk of ContentInsetable.contentInset.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ContentInsetable.contentInset.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ContentInsetable.contentInset.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1B6027DBC(uint64_t a1)
{
  sub_1B602A808();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_0_10();
  uint64_t v6 = v5;
  uint64_t result = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1B602A860((unint64_t *)&qword_1EB63E9F8);
  uint64_t result = sub_1B61B2930();
  if (__OFSUB__(result, a1))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_1B61B28D0();
  sub_1B61B2970();
  sub_1B61B2940();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v10, v1, v4);
  uint64_t v11 = (void (**)(void))(v6 + 8);
  if (v15)
  {
    sub_1B61B2970();
    uint64_t v12 = *v11;
    OUTLINED_FUNCTION_4_2();
    v12();
  }
  else
  {
    uint64_t v13 = v14;
    uint64_t v12 = *v11;
    OUTLINED_FUNCTION_4_2();
    v12();
    uint64_t v17 = v13;
  }
  uint64_t result = sub_1B61B28D0();
  if (v17 >= v16)
  {
    uint64_t v14 = v16;
    uint64_t v15 = v17;
    sub_1B61B2AA0();
    OUTLINED_FUNCTION_4_2();
    return ((uint64_t (*)(void))v12)();
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1B6027F94(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = a2;
    uint64_t v3 = result;
    unint64_t v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  sub_1B61B1F70();
  uint64_t v5 = sub_1B61B3530();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_4:
  if (__OFSUB__(v5, v3))
  {
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v6 = (v5 - v3) & ~((v5 - v3) >> 63);
  if (v4)
  {
    sub_1B61B1F70();
    uint64_t v7 = sub_1B61B3530();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = sub_1B607C4A4(0, v6, v7, v2);
  if (v8) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = result;
  }
  if (v9 < 0) {
    goto LABEL_28;
  }
  if (v4)
  {
    sub_1B61B1F70();
    uint64_t v11 = sub_1B61B3530();
    uint64_t result = swift_bridgeObjectRelease();
    if (v11 < 0)
    {
LABEL_30:
      __break(1u);
      return result;
    }
    sub_1B61B1F70();
    uint64_t v10 = sub_1B61B3530();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10 < v9)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if ((v2 & 0xC000000000000001) != 0 && v9)
  {
    type metadata accessor for SwipeActionView();
    uint64_t v12 = 0;
    do
    {
      uint64_t v13 = v12 + 1;
      sub_1B61B32F0();
      uint64_t v12 = v13;
    }
    while (v9 != v13);
  }
  if (!v4) {
    return v2 & 0xFFFFFFFFFFFFFF8;
  }
  sub_1B61B1F70();
  uint64_t v14 = sub_1B61B3540();
  swift_bridgeObjectRelease_n();
  return v14;
}

uint64_t sub_1B6028178()
{
  unint64_t v1 = v0;
  sub_1B602A808();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_10();
  unint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))((char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v0, v3);
  sub_1B602A860((unint64_t *)&qword_1EB63E9F0);
  uint64_t v8 = sub_1B61B2330();
  unint64_t v20 = v8;
  if (v8 < 0 || (v8 & 0x4000000000000000) != 0) {
    goto LABEL_37;
  }
  uint64_t v9 = *(void *)(v8 + 16);
  while (1)
  {
    uint64_t v10 = *(uint64_t (**)(unint64_t, uint64_t))(v5 + 8);
    v5 += 8;
    uint64_t result = v10(v1, v3);
    if (v9 < -1) {
      break;
    }
    if ((unint64_t)(v9 + 1) < 3) {
      return v20;
    }
    unint64_t v12 = 0;
    while (1)
    {
      unint64_t v13 = v12 + 1;
      unint64_t v1 = v9 - (v12 + 1);
      if (__OFSUB__(v9, v12 + 1)) {
        break;
      }
      if (v12 != v1)
      {
        unint64_t v5 = v20;
        if ((v20 & 0xC000000000000001) != 0)
        {
          uint64_t v3 = MEMORY[0x1BA9B04B0](v12, v20);
          uint64_t v15 = MEMORY[0x1BA9B04B0](v9 - (v12 + 1), v5);
        }
        else
        {
          if ((v12 & 0x8000000000000000) != 0) {
            goto LABEL_31;
          }
          unint64_t v14 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v12 >= v14) {
            goto LABEL_32;
          }
          uint64_t v3 = *(void *)(v20 + 8 * v12 + 32);
          swift_retain();
          if ((v1 & 0x8000000000000000) != 0) {
            goto LABEL_33;
          }
          if (v1 >= v14) {
            goto LABEL_34;
          }
          uint64_t v15 = *(void *)(v5 + 32 + 8 * v1);
          swift_retain();
        }
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v5 & 0x8000000000000000) != 0
          || (v5 & 0x4000000000000000) != 0)
        {
          sub_1B60E46E0(v5);
          unint64_t v5 = v16;
          unint64_t v20 = v16;
        }
        swift_release();
        *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 8 * v12 + 0x2sub_1B5E6F544(4, 0, 0) = v15;
        sub_1B61B2510();
        unint64_t v17 = v20;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v17 & 0x8000000000000000) != 0
          || (v17 & 0x4000000000000000) != 0)
        {
          sub_1B60E46E0(v17);
          unint64_t v17 = v18;
          unint64_t v20 = v18;
        }
        if ((v1 & 0x8000000000000000) != 0) {
          goto LABEL_35;
        }
        if (v1 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_36;
        }
        swift_release();
        *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v1 + 0x2sub_1B5E6F544(4, 0, 0) = v3;
        sub_1B61B2510();
      }
      unint64_t v12 = v13;
      if (v9 / 2 == v13) {
        return v20;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    swift_retain();
    uint64_t v9 = sub_1B61B3530();
    swift_release();
  }
  __break(1u);
  return result;
}

unint64_t sub_1B6028408(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0) {
    goto LABEL_39;
  }
  uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8;
  sub_1B61B1F70();
  while (1)
  {
    unint64_t v19 = v2;
    if (v2 < 0 || (v2 & 0x4000000000000000) != 0)
    {
      swift_retain();
      uint64_t v3 = sub_1B61B3530();
      swift_bridgeObjectRelease();
      swift_release();
      if (v3 < -1) {
        __break(1u);
      }
      uint64_t v4 = v3 / 2;
    }
    else
    {
      uint64_t v3 = *(void *)(v2 + 16);
      swift_bridgeObjectRelease();
      uint64_t v4 = (unint64_t)v3 >> 1;
    }
    if ((unint64_t)(v3 + 1) < 3) {
      return v2;
    }
    unint64_t v5 = 0;
    while (1)
    {
      unint64_t v6 = v5 + 1;
      unint64_t v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1)) {
        break;
      }
      if (v5 != v1)
      {
        unint64_t v7 = v19;
        if ((v19 & 0xC000000000000001) != 0)
        {
          uint64_t v10 = MEMORY[0x1BA9B04B0](v5, v19);
          id v11 = (id)MEMORY[0x1BA9B04B0](v3 - (v5 + 1), v19);
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0) {
            goto LABEL_33;
          }
          unint64_t v8 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v5 >= v8) {
            goto LABEL_34;
          }
          id v9 = *(id *)(v19 + 8 * v5 + 32);
          if ((v1 & 0x8000000000000000) != 0) {
            goto LABEL_35;
          }
          if (v1 >= v8) {
            goto LABEL_37;
          }
          uint64_t v10 = (uint64_t)v9;
          id v11 = *(id *)(v19 + 32 + 8 * v1);
        }
        id v12 = v11;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v19 & 0x8000000000000000) != 0
          || (v19 & 0x4000000000000000) != 0)
        {
          sub_1B60E46E0(v19);
          unint64_t v7 = v13;
          unint64_t v19 = v13;
        }
        uint64_t v14 = (v7 & 0xFFFFFFFFFFFFFF8) + 8 * v5;

        *(void *)(v14 + 32) = v12;
        sub_1B61B2510();
        unint64_t v15 = v19;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v19 & 0x8000000000000000) != 0
          || (v19 & 0x4000000000000000) != 0)
        {
          sub_1B60E46E0(v19);
          unint64_t v15 = v16;
          unint64_t v19 = v16;
        }
        if ((v1 & 0x8000000000000000) != 0) {
          goto LABEL_36;
        }
        if (v1 >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_38;
        }
        uint64_t v17 = (v15 & 0xFFFFFFFFFFFFFF8) + 8 * v1;

        *(void *)(v17 + 32) = v10;
        sub_1B61B2510();
      }
      unint64_t v5 = v6;
      if (v4 == v6) {
        return v19;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    uint64_t v2 = (uint64_t)sub_1B5E48DA0(v1);
  }
}

id sub_1B6028618()
{
  objc_msgSend(v0, sel_layoutMargins);
  id result = objc_msgSend(v0, sel_layoutMargins);
  if (*(void *)&v0[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_swipeActionViews] >> 62)
  {
    OUTLINED_FUNCTION_16();
    sub_1B61B3530();
    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1B60286E4(id result)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_isAutoActionActivated) != (result & 1)) {
    return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_feedbackGenerator), sel_selectionChanged);
  }
  return result;
}

id sub_1B6028718(char a1)
{
  uint64_t v2 = (void *)*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_isAutoActionActivated);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_isAutoActionActivated) = a1;
  return sub_1B60286E4(v2);
}

uint64_t sub_1B6028730()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_swipeActionViews);
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_pinningEdge) & 1) == 0)
  {
    if (v1 >> 62)
    {
      OUTLINED_FUNCTION_14_1();
      uint64_t v2 = sub_1B61B3530();
      if (!v2) {
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      sub_1B61B1F70();
      if (!v2) {
        goto LABEL_13;
      }
    }
    sub_1B5E7FBF8(0, (v1 & 0xC000000000000001) == 0, v1);
    if ((v1 & 0xC000000000000001) == 0)
    {
      unint64_t v5 = *(void **)(v1 + 32);
      goto LABEL_11;
    }
    uint64_t v8 = 0;
LABEL_21:
    id v6 = (id)MEMORY[0x1BA9B04B0](v8, v1);
    goto LABEL_12;
  }
  if (v1 >> 62)
  {
    OUTLINED_FUNCTION_14_1();
    uint64_t v2 = sub_1B61B3530();
    if (!v2) {
      goto LABEL_13;
    }
    goto LABEL_4;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_1B61B1F70();
  if (v2)
  {
LABEL_4:
    BOOL v3 = __OFSUB__(v2, 1);
    uint64_t v4 = v2 - 1;
    if (v3)
    {
      __break(1u);
    }
    else
    {
      sub_1B5E7FBF8(v4, (v1 & 0xC000000000000001) == 0, v1);
      if ((v1 & 0xC000000000000001) == 0)
      {
        unint64_t v5 = *(void **)(v1 + 8 * v4 + 32);
LABEL_11:
        id v6 = v5;
LABEL_12:
        uint64_t v2 = (uint64_t)v6;
        goto LABEL_13;
      }
    }
    uint64_t v8 = v4;
    goto LABEL_21;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1B6028850()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_swipeActionViews);
  if (v1 >> 62)
  {
    sub_1B61B1F70();
    uint64_t v2 = sub_1B61B3530();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2 < 2) {
    return MEMORY[0x1E4FBC860];
  }
  char v3 = *(unsigned char *)(v0 + OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_pinningEdge);
  sub_1B61B1F70();
  if (v3) {
    uint64_t v4 = sub_1B6027F94(1, v1);
  }
  else {
    uint64_t v4 = sub_1B5ED1668(1, v1);
  }
  return sub_1B5ECA080(v4, v5, v6, v7);
}

uint64_t sub_1B6028918(uint64_t a1, char a2, double a3, double a4)
{
  uint64_t v5 = v4;
  swift_getObjectType();
  char v10 = a2 & 1;
  v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_presentation] = 1;
  *(void *)&v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_autoActionThreshold] = 0x4032000000000000;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    char v51 = a2 & 1;
    uint64_t v60 = MEMORY[0x1E4FBC860];
    id v12 = v5;
    sub_1B61B33A0();
    unint64_t v13 = (objc_class *)type metadata accessor for SwipeActionView();
    uint64_t v14 = (char *)(a1 + 48);
    do
    {
      unint64_t v16 = (void *)*((void *)v14 - 1);
      char v17 = *v14;
      char v18 = v14[1];
      uint64_t v19 = *((void *)v14 + 1);
      uint64_t v20 = *((void *)v14 + 2);
      uint64_t v21 = *((void *)v14 + 3);
      uint64_t v22 = *((void *)v14 + 6);
      v52[0] = *((void *)v14 - 2);
      unint64_t v15 = (void *)v52[0];
      v52[1] = v16;
      char v53 = v17;
      char v54 = v18;
      uint64_t v55 = v19;
      uint64_t v56 = v20;
      uint64_t v57 = v21;
      long long v58 = *((_OWORD *)v14 + 2);
      uint64_t v59 = v22;
      objc_allocWithZone(v13);
      id v23 = v15;
      id v24 = v16;
      sub_1B61B1F70();
      sub_1B61B1F70();
      swift_retain();
      sub_1B5FF7FE8((uint64_t)v52, a3);
      sub_1B61B3370();
      sub_1B61B33B0();
      sub_1B61B33C0();
      sub_1B61B3380();
      v14 += 72;
      --v11;
    }
    while (v11);
    uint64_t v25 = v60;
    swift_bridgeObjectRelease();
    char v10 = v51;
  }
  else
  {
    uint64_t v26 = v5;
    swift_bridgeObjectRelease();
    uint64_t v25 = MEMORY[0x1E4FBC860];
  }
  *(void *)&v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_swipeActionViews] = v25;
  v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_pinningEdge] = v10;
  *(double *)&v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_minimumSwipeActionAreaWidth] = a4;
  *(double *)&v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_swipeActionViewWidth] = a3;
  v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_isAutoActionEnabled] = 0;
  v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_isAutoActionActivated] = 0;
  id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C18]), sel_init);
  *(void *)&v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_feedbackGenerator] = v27;

  double v28 = OUTLINED_FUNCTION_2_5();
  uint64_t v31 = (char *)objc_msgSendSuper2(v29, v30, v28);
  uint64_t v32 = v31;
  unint64_t v33 = *(void *)&v31[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_swipeActionViews];
  if (v33 >> 62)
  {
    int v50 = v31;
    sub_1B61B1F70();
    uint64_t result = sub_1B61B3530();
    uint64_t v34 = result;
    if (!result) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v34 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v35 = v31;
    uint64_t result = sub_1B61B1F70();
    if (!v34) {
      goto LABEL_14;
    }
  }
  if (v34 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v34; ++i)
  {
    if ((v33 & 0xC000000000000001) != 0) {
      id v38 = (id)MEMORY[0x1BA9B04B0](i, v33);
    }
    else {
      id v38 = *(id *)(v33 + 8 * i + 32);
    }
    uint64_t v39 = v38;
    objc_msgSend(v32, sel_addSubview_, v38);
  }
LABEL_14:
  swift_bridgeObjectRelease();
  id v40 = objc_allocWithZone(MEMORY[0x1E4FB1EB0]);
  id v41 = v32;
  double v42 = OUTLINED_FUNCTION_2_5();
  id v44 = objc_msgSend(v40, v43, v42);
  objc_msgSend(v41, sel_setMaskView_, v44);

  id v45 = objc_msgSend(v41, sel_maskView);
  if (v45)
  {
    uint64_t v46 = v45;
    id v47 = objc_msgSend(self, sel_whiteColor);
    objc_msgSend(v46, sel_setBackgroundColor_, v47);
  }
  id v48 = objc_msgSend(v41, sel_maskView);
  if (v48)
  {
    int v49 = v48;
    objc_msgSend(v48, sel_setAutoresizingMask_, 16);
  }
  return (uint64_t)v41;
}

void sub_1B6028CE8()
{
  v0[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_presentation] = 1;
  *(void *)&v0[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_autoActionThreshold] = 0x4032000000000000;

  sub_1B61B34D0();
  __break(1u);
}

void sub_1B6028D84()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v2, sel_layoutSubviews);
  OUTLINED_FUNCTION_7_47();
  if (v1 && (OUTLINED_FUNCTION_7_47(), v1)) {
    sub_1B6028DE8();
  }
  else {
    sub_1B6028F6C();
  }
}

void sub_1B6028DE8()
{
  id v21 = (id)sub_1B6028730();
  if (v21)
  {
    id v1 = objc_msgSend(v0, sel_maskView);
    if (v1)
    {
      objc_super v2 = v1;
      id v3 = objc_msgSend(v1, sel_layer);
      id v4 = objc_msgSend(v3, sel_presentationLayer);

      if (v4)
      {
        objc_msgSend(v4, sel_frame);
        double v6 = v5;
        double v8 = v7;
        double v10 = v9;
        double v12 = v11;
      }
      else
      {
        objc_msgSend(v2, sel_frame);
        double v6 = v13;
        double v8 = v14;
        double v10 = v15;
        double v12 = v16;
      }
      sub_1B602A39C((uint64_t)v0, v6, v8, v10, v12);
      double v18 = v17;
      double v19 = *(double *)&v0[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_swipeActionViewWidth];
      id v20 = v21;
      objc_msgSend(v0, sel_bounds);
      objc_msgSend(v20, sel_setFrame_, v18, 0.0, v19, CGRectGetHeight(v23));
    }
  }
}

id sub_1B6028F6C()
{
  id v1 = objc_msgSend(v0, sel_effectiveUserInterfaceLayoutDirection);
  unint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_swipeActionViews];
  sub_1B61B1F70();
  if (v1) {
    unint64_t v2 = sub_1B6028408(v2);
  }
  objc_msgSend(v0, sel_layoutMargins);
  double v4 = v3;
  objc_msgSend(v0, sel_layoutMargins);
  double v6 = v5;
  id result = sub_1B6028618();
  double v9 = v8;
  double v10 = *(double *)&v0[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_swipeActionViewWidth];
  unint64_t v11 = v2 >> 62;
  if (v2 >> 62)
  {
    sub_1B61B1F70();
    uint64_t v12 = sub_1B61B3530();
    id result = (id)swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  double v13 = (v9 - (v4 + v6) - v10 * (double)v12) / (double)(v12 + 1);
  if (v0[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_pinningEdge])
  {
    if (v11)
    {
      sub_1B61B1F70();
      uint64_t v14 = sub_1B61B3530();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v14 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    objc_msgSend(v0, sel_bounds);
    double Width = CGRectGetWidth(v25);
    id result = objc_msgSend(v0, sel_layoutMargins);
    double v16 = Width - v18 - v13 * (double)v14 - v10 * (double)v14;
  }
  else
  {
    id result = objc_msgSend(v0, sel_layoutMargins);
    double v16 = v13 + v15;
  }
  if (!v11)
  {
    uint64_t v19 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v19) {
      goto LABEL_22;
    }
    goto LABEL_16;
  }
  sub_1B61B1F70();
  uint64_t v19 = sub_1B61B3530();
  id result = (id)swift_bridgeObjectRelease();
  if (v19)
  {
LABEL_16:
    if (v19 >= 1)
    {
      uint64_t v20 = 0;
      double v21 = v10 + v13;
      do
      {
        if ((v2 & 0xC000000000000001) != 0) {
          id v22 = (id)MEMORY[0x1BA9B04B0](v20, v2);
        }
        else {
          id v22 = *(id *)(v2 + 8 * v20 + 32);
        }
        CGRect v23 = v22;
        ++v20;
        objc_msgSend(v0, sel_bounds);
        objc_msgSend(v23, sel_setFrame_, v16, 0.0, v10, CGRectGetHeight(v26));

        double v16 = v21 + v16;
      }
      while (v19 != v20);
      goto LABEL_22;
    }
LABEL_27:
    __break(1u);
    return result;
  }
LABEL_22:
  return (id)swift_bridgeObjectRelease();
}

void sub_1B6029234(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  objc_msgSend(v5, sel_bounds);
  if (CGRectGetWidth(v36) <= 0.0) {
    goto LABEL_15;
  }
  sub_1B602A024(v5, a2, a3, a4, a5);
  objc_msgSend(v5, sel_bounds);
  CGRectGetHeight(v37);
  double v11 = OUTLINED_FUNCTION_5_55();
  sub_1B602A024(v12, v11, v13, v14, v15);
  objc_msgSend(v5, sel_bounds);
  CGRectGetHeight(v38);
  uint64_t v16 = OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_isAutoActionEnabled;
  if (v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_isAutoActionEnabled] != 1) {
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_7_47();
  if (v17 && (v39.origin.double x = OUTLINED_FUNCTION_2_92(), CGRectGetWidth(v39) == 0.0))
  {
    sub_1B602949C();
    int v18 = 1;
  }
  else
  {
LABEL_7:
    int v18 = 0;
  }
  uint64_t v19 = OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_isAutoActionActivated;
  int v20 = v5[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_isAutoActionActivated];
  double v21 = OUTLINED_FUNCTION_5_55();
  sub_1B6029600(v21, v22, v23, v24);
  if (v5[v16] == 1)
  {
    int v25 = v5[v19];
    if (((v18 | v20 ^ v25 ^ 1) & 1) == 0) {
      sub_1B60299DC(v25);
    }
  }
  id v26 = objc_msgSend(v5, sel_maskView);
  if (v26)
  {
    id v27 = v26;
    id v28 = objc_msgSend(v26, sel_layer);
    double v29 = OUTLINED_FUNCTION_2_92();
    objc_msgSend(v30, v31, v29);

    sub_1B602A684(0x73646E756F62, 0xE600000000000000, a1);
    uint64_t v32 = (void *)sub_1B61B2D90();
    objc_msgSend(a1, sel_setFromValue_, v32);

    OUTLINED_FUNCTION_2_92();
    unint64_t v33 = (void *)sub_1B61B2D90();
    objc_msgSend(a1, sel_setToValue_, v33);

    sub_1B60D25B0((uint64_t)a1, 0x79656B5F6D696E61, 0xE800000000000000, objc_msgSend(v27, sel_layer));
    OUTLINED_FUNCTION_6_56();
  }
  else
  {
LABEL_15:
    OUTLINED_FUNCTION_6_56();
  }
}

void sub_1B602949C()
{
  unint64_t v0 = sub_1B6028850();
  unint64_t v1 = v0;
  if (v0 >> 62)
  {
    uint64_t v2 = sub_1B61B3530();
    if (!v2) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      goto LABEL_9;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v4 = (id)MEMORY[0x1BA9B04B0](i, v1);
    }
    else {
      id v4 = *(id *)(v1 + 8 * i + 32);
    }
    double v5 = v4;
    objc_msgSend(v4, sel_setAlpha_, 0.0);
  }
LABEL_9:
  swift_bridgeObjectRelease();
  double v6 = (void *)sub_1B6028730();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  id v8 = objc_allocWithZone(MEMORY[0x1E4FB1ED8]);
  id v9 = v6;
  id v10 = sub_1B602A5B4(1, (uint64_t)sub_1B602A720, v7, 0.1);
  objc_msgSend(v10, sel_startAnimation);
}

void sub_1B6029600(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  objc_msgSend(v4, sel_bounds);
  if (CGRectGetWidth(v51) <= 0.0)
  {
LABEL_19:
    OUTLINED_FUNCTION_3_76();
    return;
  }
  objc_msgSend(v4, sel_layoutIfNeeded);
  char v9 = v4[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_pinningEdge];
  id v10 = objc_msgSend(v4, sel_maskView);
  double v11 = v10;
  if (v9)
  {
    if (!v10) {
      goto LABEL_8;
    }
    id v12 = objc_msgSend(v10, sel_layer);

    objc_msgSend(v12, sel_setAnchorPoint_, 1.0, 0.5);
  }
  else
  {
    if (!v10) {
      goto LABEL_8;
    }
    id v12 = objc_msgSend(v10, sel_layer);

    objc_msgSend(v12, sel_setAnchorPoint_, 0.0, 0.5);
  }

LABEL_8:
  CGFloat v50 = a4;
  sub_1B602A024(v4, a1, a2, a3, a4);
  double v14 = v13;
  double v16 = v15;
  objc_msgSend(v4, sel_bounds);
  double Height = CGRectGetHeight(v52);
  id v18 = objc_msgSend(v4, sel_maskView);
  if (v18)
  {
    uint64_t v19 = v18;
    id v20 = objc_msgSend(v18, sel_layer);
    objc_msgSend(v20, sel_setFrame_, v14, 0.0, v16, Height);
  }
  if (v4[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_isAutoActionEnabled] == 1)
  {
    double v49 = OUTLINED_FUNCTION_1_96();
    double v21 = OUTLINED_FUNCTION_1_96();
    sub_1B6028618();
    uint64_t v22 = OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_autoActionThreshold;
    double v24 = v23 + *(double *)&v4[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_autoActionThreshold];
    if (v24 < v21
      || (OUTLINED_FUNCTION_7_47(), v25)
      && v49 != 0.0
      && (double v26 = OUTLINED_FUNCTION_1_96(), sub_1B6028618(), v26 < v27 + *(double *)&v4[v22] + 10.0))
    {
      sub_1B6028718(v24 < v21);
    }
  }
  if ((v4[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_presentation] & 1) != 0
    || (v4[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_isAutoActionActivated] & 1) != 0)
  {
    goto LABEL_19;
  }
  unint64_t v28 = *(void *)&v4[OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_swipeActionViews];
  if (v28 >> 62)
  {
    OUTLINED_FUNCTION_16();
    uint64_t v29 = sub_1B61B3530();
    if (v29) {
      goto LABEL_22;
    }
LABEL_35:
    OUTLINED_FUNCTION_3_76();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_1B61B1F70();
  if (!v29) {
    goto LABEL_35;
  }
LABEL_22:
  if (v29 >= 1)
  {
    uint64_t v30 = 0;
    while (1)
    {
      SEL v31 = (v28 & 0xC000000000000001) != 0
          ? (char *)MEMORY[0x1BA9B04B0](v30, v28)
          : (char *)*(id *)(v28 + 8 * v30 + 32);
      uint64_t v32 = v31;
      CGFloat v33 = a1;
      CGFloat v34 = a2;
      CGFloat v35 = a3;
      CGFloat v36 = v50;
      if (v9) {
        break;
      }
      double MinX = CGRectGetMinX(*(CGRect *)&v33);
      objc_msgSend(v32, sel_center);
      double v45 = v44;
      uint64_t v46 = (char *)*(id *)&v32[OBJC_IVAR____TtC5TeaUI15SwipeActionView_button];
      id v41 = v46;
      if (v45 >= MinX) {
        goto LABEL_32;
      }
      sub_1B6029C5C(v46, 1, 1.0, 0.0);
      id v47 = v41;
LABEL_34:
      ++v30;

      if (v29 == v30) {
        goto LABEL_35;
      }
    }
    double MaxX = CGRectGetMaxX(*(CGRect *)&v33);
    objc_msgSend(v32, sel_center);
    double v39 = v38;
    id v40 = (char *)*(id *)&v32[OBJC_IVAR____TtC5TeaUI15SwipeActionView_button];
    id v41 = v40;
    if (MaxX >= v39)
    {
LABEL_32:
      id v40 = v41;
      CGFloat v42 = 0.85;
    }
    else
    {
      CGFloat v42 = 1.0;
    }
    sub_1B6029C5C(v40, 1, v42, 0.0);
    id v47 = v32;
    uint64_t v32 = v41;
    goto LABEL_34;
  }
  __break(1u);
}

unint64_t sub_1B60299DC(char a1)
{
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(unsigned char *)(v3 + 24) = a1;
  id v4 = objc_allocWithZone(MEMORY[0x1E4FB1ED8]);
  double v5 = 1.0;
  id v6 = sub_1B602A4EC((uint64_t)sub_1B602A774, v3, 0.4, 1.0);
  objc_msgSend(v6, sel_startAnimation);

  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(unsigned char *)(v8 + 24) = a1;
  id v9 = objc_allocWithZone(MEMORY[0x1E4FB1ED8]);
  double v10 = 0.1;
  id v11 = sub_1B602A5B4(1, (uint64_t)sub_1B602A7B8, v8, 0.1);
  id v12 = v11;
  if (a1)
  {
    double v10 = 0.0;
    double v13 = 0.85;
  }
  else
  {
    double v13 = 1.0;
  }
  if ((a1 & 1) == 0) {
    double v5 = 0.85;
  }
  objc_msgSend(v11, sel_startAnimationAfterDelay_, v10);

  unint64_t result = sub_1B6028850();
  unint64_t v15 = result;
  if (result >> 62)
  {
    unint64_t result = sub_1B61B3530();
    uint64_t v16 = result;
    if (!result) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v16) {
      goto LABEL_14;
    }
  }
  if (v16 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v17 = 0;
  do
  {
    if ((v15 & 0xC000000000000001) != 0) {
      id v18 = (char *)MEMORY[0x1BA9B04B0](v17, v15);
    }
    else {
      id v18 = (char *)*(id *)(v15 + 8 * v17 + 32);
    }
    uint64_t v19 = v18;
    ++v17;
    uint64_t v20 = OBJC_IVAR____TtC5TeaUI15SwipeActionView_button;
    id v21 = *(id *)&v18[OBJC_IVAR____TtC5TeaUI15SwipeActionView_button];
    sub_1B6029C5C(v21, 0, v5, 0.0);

    id v22 = *(id *)&v19[v20];
    sub_1B6029C5C(v22, 1, v13, v10);
  }
  while (v16 != v17);
LABEL_14:
  return swift_bridgeObjectRelease();
}

void sub_1B6029C5C(void *a1, char a2, CGFloat a3, double a4)
{
  objc_msgSend(a1, sel_transform);
  objc_msgSend(a1, sel_transform);
  if (v12.a != a3 || v12.d != a3)
  {
    if (a2)
    {
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = a1;
      *(CGFloat *)(v9 + 24) = a3;
      objc_allocWithZone(MEMORY[0x1E4FB1ED8]);
      id v10 = a1;
      id v11 = sub_1B602A3FC((uint64_t)sub_1B602A7FC, v9, 0.25, 0.33, 0.0, 0.2, 1.0);
      objc_msgSend(v11, sel_startAnimationAfterDelay_, a4);
    }
    else
    {
      CGAffineTransformMakeScale(&v12, a3, a3);
      objc_msgSend(a1, sel_setTransform_, &v12);
    }
  }
}

void sub_1B6029DC8()
{
}

uint64_t type metadata accessor for SwipeActionContainerView()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for SwipeActionContainerView.PinningEdge(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B6029F44);
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SwipeActionContainerView.PinningEdge()
{
  return &type metadata for SwipeActionContainerView.PinningEdge;
}

unint64_t sub_1B6029F80()
{
  unint64_t result = qword_1E9DABB20;
  if (!qword_1E9DABB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9DABB20);
  }
  return result;
}

id sub_1B6029FCC(void *a1, CGFloat a2)
{
  CGAffineTransformMakeScale(&v4, a2, a2);
  return objc_msgSend(a1, sel_setTransform_, &v4);
}

void sub_1B602A024(id a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  if (*((unsigned char *)a1 + OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_pinningEdge))
  {
    objc_msgSend(a1, sel_bounds);
    CGRectGetMaxX(v10);
    v11.origin.double x = a2;
    v11.origin.double y = a3;
    v11.size.double width = a4;
    v11.size.double height = a5;
    CGRectGetMaxX(v11);
    objc_msgSend(a1, sel_bounds);
    CGRectGetMaxX(v12);
    objc_msgSend(a1, sel_bounds);
    CGRectGetWidth(v13);
    objc_msgSend(a1, sel_bounds);
    CGRectGetMaxX(v17);
  }
  else
  {
    CGRectGetMinX(*(CGRect *)&a2);
    objc_msgSend(a1, sel_bounds);
    CGRectGetMinX(v14);
    objc_msgSend(a1, sel_bounds);
    CGRectGetMinX(v15);
    objc_msgSend(a1, sel_bounds);
    CGRectGetWidth(v16);
  }
}

void sub_1B602A21C(uint64_t a1, char a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1BA9B1EC0](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    if (a2) {
      sub_1B6028DE8();
    }
    else {
      sub_1B6028F6C();
    }
  }
}

unint64_t sub_1B602A280(uint64_t a1, char a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  unint64_t result = MEMORY[0x1BA9B1EC0](v3);
  if (result)
  {
    uint64_t v5 = (void *)result;
    unint64_t result = sub_1B6028850();
    unint64_t v6 = result;
    if (result >> 62)
    {
      unint64_t result = sub_1B61B3530();
      uint64_t v7 = result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v8 = 0;
        if (a2) {
          double v9 = 0.0;
        }
        else {
          double v9 = 1.0;
        }
        do
        {
          if ((v6 & 0xC000000000000001) != 0) {
            id v10 = (id)MEMORY[0x1BA9B04B0](v8, v6);
          }
          else {
            id v10 = *(id *)(v6 + 8 * v8 + 32);
          }
          CGRect v11 = v10;
          ++v8;
          objc_msgSend(v10, sel_setAlpha_, v9);
        }
        while (v7 != v8);
      }
    }

    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1B602A39C(uint64_t a1, double a2, double a3, double a4, double a5)
{
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC5TeaUI24SwipeActionContainerView_pinningEdge)) {
    CGRectGetMinX(*(CGRect *)&a2);
  }
  else {
    CGRectGetMaxX(*(CGRect *)&a2);
  }
}

id sub_1B602A3FC(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7)
{
  if (a1)
  {
    v16[4] = a1;
    v16[5] = a2;
    v16[0] = MEMORY[0x1E4F143A8];
    v16[1] = 1107296256;
    v16[2] = sub_1B5E3729C;
    uint64_t v16[3] = &block_descriptor_20_2;
    CGRect v13 = _Block_copy(v16);
    swift_release();
  }
  else
  {
    CGRect v13 = 0;
  }
  id v14 = objc_msgSend(v7, sel_initWithDuration_controlPoint1_controlPoint2_animations_, v13, a3, a4, a5, a6, a7);
  _Block_release(v13);
  return v14;
}

id sub_1B602A4EC(uint64_t a1, uint64_t a2, double a3, double a4)
{
  if (a1)
  {
    void v10[4] = a1;
    v10[5] = a2;
    v10[0] = MEMORY[0x1E4F143A8];
    v10[1] = 1107296256;
    void v10[2] = sub_1B5E3729C;
    void v10[3] = &block_descriptor_23_3;
    uint64_t v7 = _Block_copy(v10);
    swift_release();
  }
  else
  {
    uint64_t v7 = 0;
  }
  id v8 = objc_msgSend(v4, sel_initWithDuration_dampingRatio_animations_, v7, a3, a4);
  _Block_release(v7);
  return v8;
}

id sub_1B602A5B4(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  if (a2)
  {
    void v10[4] = a2;
    v10[5] = a3;
    v10[0] = MEMORY[0x1E4F143A8];
    v10[1] = 1107296256;
    void v10[2] = sub_1B5E3729C;
    void v10[3] = &block_descriptor_53;
    uint64_t v7 = _Block_copy(v10);
    swift_release();
  }
  else
  {
    uint64_t v7 = 0;
  }
  id v8 = objc_msgSend(v4, sel_initWithDuration_curve_animations_, a1, v7, a4);
  _Block_release(v7);
  return v8;
}

void sub_1B602A684(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1B61B20C0();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setKeyPath_, v4);
}

uint64_t sub_1B602A6E8()
{
  return swift_deallocObject();
}

id sub_1B602A720()
{
  id result = *(id *)(v0 + 16);
  if (result) {
    return objc_msgSend(result, sel_setAlpha_, 0.0);
  }
  return result;
}

uint64_t sub_1B602A73C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1B602A774()
{
  sub_1B602A21C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1B602A780()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1B602A7B8()
{
  return sub_1B602A280(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1B602A7C4()
{
  return swift_deallocObject();
}

id sub_1B602A7FC()
{
  return sub_1B6029FCC(*(void **)(v0 + 16), *(CGFloat *)(v0 + 24));
}

void sub_1B602A808()
{
  if (!qword_1EB63EA00)
  {
    type metadata accessor for CardContainerController.CardItem();
    unint64_t v0 = sub_1B61B0C50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB63EA00);
    }
  }
}

uint64_t sub_1B602A860(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1B602A808();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B602A8B4(uint64_t a1@<X8>)
{
}

void sub_1B602A8E4(unint64_t *a1@<X0>, void (*a2)(long long *, unsigned char *)@<X2>, uint64_t a3@<X8>)
{
  sub_1B5DFF760(0, (unint64_t *)&qword_1EB647BD0);
  sub_1B5E00AB8(0, a1);
  id v8 = v3;
  uint64_t v9 = OUTLINED_FUNCTION_10_41();
  if (!v9)
  {
    OUTLINED_FUNCTION_5_56(v9, v10, v11, v12, v13, v14, v15, v16, v28, (uint64_t)a2, v31, v32, v33);
    id v17 = v4;
    id v18 = objc_msgSend(v17, sel_parentViewController);

    if (!v18)
    {
LABEL_5:
      *(void *)(a3 + 32) = 0;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      return;
    }
    while (1)
    {
      id v34 = v18;
      id v19 = v18;
      uint64_t v20 = OUTLINED_FUNCTION_10_41();
      if (v20) {
        break;
      }
      OUTLINED_FUNCTION_5_56(v20, v21, v22, v23, v24, v25, v26, v27, v29, v30, v31, v32, v33);
      id v18 = objc_msgSend(v4, sel_parentViewController);

      if (!v18) {
        goto LABEL_5;
      }
    }

    a2 = (void (*)(long long *, unsigned char *))v30;
  }
  a2(&v31, v35);
  a2((long long *)v35, (unsigned char *)a3);
}

uint64_t sub_1B602AA24(uint64_t a1)
{
  return sub_1B602AB14(a1, &OBJC_IVAR____TtC5TeaUI23MultiScrollViewDelegate_delegates, &OBJC_IVAR____TtC5TeaUI23MultiScrollViewDelegate_respondsToSelectorCache, (uint64_t (*)(void, void))sub_1B60326E0);
}

uint64_t sub_1B602AA4C(uint64_t a1)
{
  return sub_1B602AB14(a1, &OBJC_IVAR____TtC5TeaUI23MultiScrollViewDelegate_delegates, &OBJC_IVAR____TtC5TeaUI23MultiScrollViewDelegate_respondsToSelectorCache, (uint64_t (*)(void, void))sub_1B60327B0);
}

void sub_1B602AA74(uint64_t a1, char a2, id a3, uint64_t *a4)
{
  if (a2 & 1) == 0 && (objc_msgSend(a3, sel_respondsToSelector_, a1))
  {
    sub_1B5E19D64();
    uint64_t v6 = *(void *)(*a4 + 16);
    sub_1B5E1A254();
    uint64_t v7 = *a4;
    *(void *)(v7 + 16) = v6 + 1;
    *(void *)(v7 + 8 * v6 + 32) = a1;
    *a4 = v7;
  }
}

uint64_t sub_1B602AAEC(uint64_t a1)
{
  return sub_1B602AB14(a1, &OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_delegates, &OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_respondsToSelectorCache, (uint64_t (*)(void, void))sub_1B60327BC);
}

uint64_t sub_1B602AB14(uint64_t a1, void *a2, void *a3, uint64_t (*a4)(void, void))
{
  objc_msgSend(*(id *)(v4 + *a2), sel_addObject_, a1);
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v7 = (void *)(v4 + *a3);
  OUTLINED_FUNCTION_24();
  uint64_t v8 = sub_1B61B1F70();
  sub_1B5EAB324(v8, a4);
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(v24 + 16);
  if (!v22) {
    return swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_33_0();
  sub_1B61B1F70();
  uint64_t v9 = 0;
  while (1)
  {
    uint64_t v10 = *(void *)(v24 + 8 * v9 + 32);
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = (void *)*v7;
    uint64_t v23 = (void *)*v7;
    void *v7 = 0x8000000000000000;
    unint64_t v12 = sub_1B5E46E60();
    if (__OFADD__(v11[2], (v13 & 1) == 0)) {
      break;
    }
    unint64_t v14 = v12;
    char v15 = v13;
    sub_1B603267C();
    if (sub_1B61B3480())
    {
      unint64_t v16 = sub_1B5E46E60();
      if ((v15 & 1) != (v17 & 1)) {
        goto LABEL_16;
      }
      unint64_t v14 = v16;
    }
    if (v15)
    {
      *(unsigned char *)(v23[7] + v14) = 1;
    }
    else
    {
      v23[(v14 >> 6) + 8] |= 1 << v14;
      *(void *)(v23[6] + 8 * v14) = v10;
      *(unsigned char *)(v23[7] + v14) = 1;
      uint64_t v18 = v23[2];
      BOOL v19 = __OFADD__(v18, 1);
      uint64_t v20 = v18 + 1;
      if (v19) {
        goto LABEL_15;
      }
      v23[2] = v20;
    }
    ++v9;
    void *v7 = v23;
    swift_bridgeObjectRelease();
    if (v22 == v9)
    {
      swift_endAccess();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  uint64_t result = sub_1B61B3840();
  __break(1u);
  return result;
}

id sub_1B602AD24()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  return v1;
}

Swift::Void __swiftcall MastheadViewControllerType.relayout()()
{
  (*(void (**)(void))(v0 + 128))(0);
}

double MastheadViewController.contentHeight.getter()
{
  objc_msgSend(*(id *)(v0 + qword_1EB644620), sel_frame);
  return CGRectGetHeight(*(CGRect *)&v1);
}

uint64_t MastheadViewController.pluginPinningEnabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + qword_1EB64A368);
  OUTLINED_FUNCTION_24();
  return *v1;
}

uint64_t MastheadViewController.pluginPinningEnabled.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + qword_1EB64A368);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*MastheadViewController.pluginPinningEnabled.modify())()
{
  return j__swift_endAccess;
}

uint64_t MastheadViewController.viewProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B5E176E4(v1 + qword_1EB64A980, a1);
}

double sub_1B602AEC4()
{
  objc_msgSend(*(id *)(v0 + qword_1EB64A978), sel_frame);
  return CGRectGetHeight(*(CGRect *)&v1);
}

BOOL sub_1B602AF00()
{
  uint64_t v1 = *(void **)(v0 + qword_1EB64A978);
  if (objc_msgSend(v1, sel_isHidden)) {
    return 1;
  }
  objc_msgSend(v1, sel_alpha);
  return v3 < 0.5;
}

void MastheadViewController.layoutOptions.getter(uint64_t a1@<X8>)
{
  id v3 = OUTLINED_FUNCTION_7_48();
  uint64_t v4 = &selRef_axSafelyAddObjectsFromArray_;
  if (v3)
  {
    uint64_t v5 = v3;
    id v6 = objc_msgSend(v3, sel_navigationBar);
  }
  else
  {
    id v6 = 0;
  }
  id v7 = OUTLINED_FUNCTION_7_48();
  double v8 = 0.0;
  char v112 = v6;
  if (v7)
  {
    uint64_t v9 = v7;
    unsigned __int8 v10 = objc_msgSend(v7, sel_isNavigationBarHidden);

    if ((v10 & 1) == 0)
    {
      CGFloat MinY = 0.0;
      char v15 = &selRef_axSafelyAddObjectsFromArray_;
      double Width = 0.0;
      if (!v6)
      {
LABEL_36:
        id v37 = OUTLINED_FUNCTION_7_48();
        if (v37)
        {
          double v38 = v37;
          id v39 = [v37 v4[143]];

          [v39 v15[85]];
          OUTLINED_FUNCTION_20_20();
          v118.origin.double x = OUTLINED_FUNCTION_18_5();
          CGFloat MinY = CGRectGetMinY(v118);
        }
        id v40 = OUTLINED_FUNCTION_7_48();
        if (v40)
        {
          id v41 = v40;
          id v42 = [v40 v4[143]];

          [v42 v15[85]];
          OUTLINED_FUNCTION_20_20();
          v119.origin.double x = OUTLINED_FUNCTION_18_5();
          CGFloat MaxY = CGRectGetMaxY(v119);
        }
        else
        {
          CGFloat MaxY = 0.0;
        }
        char v11 = 0;
        double v13 = Width - v8;
        goto LABEL_42;
      }
      id v17 = v6;
      id v18 = objc_msgSend(v17, sel_topItem);
      uint64_t v19 = 0x1F8770000;
      uint64_t v20 = (uint64_t)&selRef_setViewControllers_animated_;
      if (!v18 || (unint64_t v21 = sub_1B5E7FC38(v18)) == 0)
      {

        goto LABEL_21;
      }
      unint64_t v22 = v21;
      uint64_t v23 = &selRef_axSafelyAddObjectsFromArray_;
      if (v21 >> 62)
      {
        uint64_t v24 = sub_1B61B3530();
        if (v24)
        {
LABEL_12:
          uint64_t v25 = v24 - 1;
          if (__OFSUB__(v24, 1))
          {
            __break(1u);
            goto LABEL_68;
          }
          OUTLINED_FUNCTION_14_29();
          while (1)
          {
            uint64_t v26 = (void *)MEMORY[0x1BA9B04B0](v25, v22);
            swift_bridgeObjectRelease();
            uint64_t v19 = (uint64_t)v15;
            id v27 = [v26 (SEL)v15 + 1756];

            if (v27)
            {
              char v15 = &selRef_axSafelyAddObjectsFromArray_;
              objc_msgSend(v27, sel_frame);
              objc_msgSend(v17, *(SEL *)(v20 + 3704), v27, v28, 0.0);
              double v8 = v29;

LABEL_20:
              uint64_t v4 = v23;
            }
            else
            {

              uint64_t v4 = v23;
              char v15 = &selRef_axSafelyAddObjectsFromArray_;
            }
LABEL_21:
            id v17 = v17;
            id v30 = objc_msgSend(v17, sel_topItem);
            if (!v30) {
              goto LABEL_34;
            }
            unint64_t v31 = sub_1B5E7FC20(v30);
            if (!v31) {
              goto LABEL_34;
            }
            unint64_t v22 = v31;
            uint64_t v20 = 0x1F662C000;
            uint64_t v23 = v4;
            if (v31 >> 62)
            {
              uint64_t v32 = sub_1B61B3530();
              if (!v32)
              {
LABEL_33:
                swift_bridgeObjectRelease();
LABEL_34:
                [v17 v15[85]];
                double Width = CGRectGetWidth(v117);
                goto LABEL_35;
              }
            }
            else
            {
              uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (!v32) {
                goto LABEL_33;
              }
            }
            uint64_t v25 = v32 - 1;
            if (!__OFSUB__(v32, 1)) {
              break;
            }
LABEL_68:
            __break(1u);
          }
          OUTLINED_FUNCTION_14_29();
          if (v19) {
            id v33 = (id)MEMORY[0x1BA9B04B0](v25, v22);
          }
          else {
            id v33 = *(id *)(v22 + 8 * v25 + 32);
          }
          id v34 = v33;
          swift_bridgeObjectRelease();
          id v35 = [v34 (SEL)v15 + 1756];

          uint64_t v4 = v23;
          char v15 = &selRef_axSafelyAddObjectsFromArray_;
          if (!v35) {
            goto LABEL_34;
          }
          objc_msgSend(v17, sel_convertPoint_fromCoordinateSpace_, v35, 0.0, 0.0);
          if (v36 <= 0.0)
          {
            objc_msgSend(v17, sel_frame);
            double v36 = CGRectGetWidth(v116);
          }
          double Width = v36;

          id v17 = v35;
LABEL_35:

          goto LABEL_36;
        }
      }
      else
      {
        uint64_t v24 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v24) {
          goto LABEL_12;
        }
      }

      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
  }
  char v11 = 1;
  CGFloat MinY = 0.0;
  double v13 = 0.0;
  CGFloat MaxY = 0.0;
LABEL_42:
  id v43 = OUTLINED_FUNCTION_7_48();
  if (!v43
    || (v44 = v43, id v45 = objc_msgSend(v43, sel_view), v44, !v45))
  {
    id v45 = objc_msgSend(*(id *)&v1[qword_1EB644618], sel_view);
    if (!v45) {
      goto LABEL_74;
    }
  }
  objc_msgSend(v45, sel_safeAreaInsets);
  uint64_t v47 = v46;

  id v48 = objc_msgSend(v1, sel_tabBarController);
  id v49 = v48;
  if (!v48) {
    goto LABEL_52;
  }
  id v50 = objc_msgSend(v48, sel_selectedViewController);

  if (!v50)
  {
    id v49 = 0;
    goto LABEL_54;
  }
  id v49 = objc_msgSend(v50, sel__hostingNavigationBar);

  if (!v49) {
    goto LABEL_52;
  }
  id v51 = objc_msgSend(v49, sel_topItem);
  id v50 = v51;
  if (!v51) {
    goto LABEL_54;
  }
  id v52 = objc_msgSend(v51, sel_titleView);

  if (!v52)
  {
LABEL_52:
    id v50 = 0;
    goto LABEL_54;
  }
  type metadata accessor for FloatingTabBarNavigationTitleView();
  id v50 = (id)swift_dynamicCastClass();
  if (!v50) {

  }
LABEL_54:
  id v53 = OUTLINED_FUNCTION_16_25();
  if (!v53)
  {
    __break(1u);
    goto LABEL_71;
  }
  char v54 = v53;
  objc_msgSend(v53, sel_layoutMargins);
  uint64_t v56 = v55;
  uint64_t v58 = v57;
  uint64_t v60 = v59;
  uint64_t v111 = v61;

  id v62 = OUTLINED_FUNCTION_16_25();
  if (!v62)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  uint64_t v63 = v62;
  objc_msgSend(v62, sel_bounds);
  uint64_t v109 = v65;
  uint64_t v110 = v64;
  uint64_t v107 = v67;
  uint64_t v108 = v66;

  id v68 = OUTLINED_FUNCTION_16_25();
  if (!v68)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  uint64_t v69 = v68;
  uint64_t v102 = v60;
  uint64_t v103 = v58;
  uint64_t v104 = v56;
  double v105 = v8;
  CGFloat v106 = MinY;
  id v70 = objc_msgSend(v68, sel_traitCollection);

  double v71 = sub_1B602AEC4();
  id v72 = OUTLINED_FUNCTION_16_25();
  if (!v72)
  {
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
    return;
  }
  uint64_t v73 = v72;
  double v99 = v71;
  id v74 = objc_msgSend(v72, sel_window);

  uint64_t v113 = 0;
  uint64_t v75 = 0;
  uint64_t v76 = 0;
  uint64_t v77 = 0;
  uint64_t v78 = 0;
  if (v74)
  {
    id v79 = objc_msgSend(v74, sel_windowScene);

    if (v79)
    {
      id v80 = objc_msgSend(v79, sel_statusBarManager);

      if (v80)
      {
        objc_msgSend(v80, sel_statusBarFrame);
        uint64_t v77 = v81;
        uint64_t v78 = v82;
        uint64_t v75 = v83;
        uint64_t v76 = v84;
      }
    }
  }
  uint64_t v85 = v47;
  double v100 = v13;
  CGFloat v101 = MaxY;
  if (v11)
  {
    uint64_t v86 = 0;
    uint64_t v87 = 0;
    uint64_t v88 = 0;
  }
  else
  {
    id v89 = OUTLINED_FUNCTION_7_48();
    uint64_t v86 = 0;
    uint64_t v87 = 0;
    uint64_t v88 = 0;
    if (v89)
    {
      uint64_t v90 = v89;
      id v91 = objc_msgSend(v89, sel_navigationBar);

      objc_msgSend(v91, sel_bounds);
      uint64_t v113 = v92;
      uint64_t v86 = v93;
      uint64_t v87 = v94;
      uint64_t v88 = v95;
    }
  }
  id v96 = MastheadViewController.displayOptions.getter();
  char v97 = UIViewController.isPreviewing.getter();
  sub_1B602B73C(v50, v1, (uint64_t)&v114);

  __int16 v98 = v115;
  *(void *)a1 = v110;
  *(void *)(a1 + 8) = v109;
  *(void *)(a1 + 16) = v108;
  *(void *)(a1 + 24) = v107;
  *(void *)(a1 + 32) = v104;
  *(void *)(a1 + 4sub_1B5E6F544(4, 0, 0) = v103;
  *(void *)(a1 + 48) = v102;
  *(void *)(a1 + 56) = v111;
  *(void *)(a1 + 64) = v70;
  *(double *)(a1 + 72) = v99;
  *(void *)(a1 + 8sub_1B5E6F544(4, 0, 0) = v85;
  *(void *)(a1 + 88) = v77;
  *(void *)(a1 + 96) = v78;
  *(void *)(a1 + 104) = v75;
  *(void *)(a1 + 112) = v76;
  *(void *)(a1 + 12sub_1B5E6F544(4, 0, 0) = v113;
  *(void *)(a1 + 128) = v86;
  *(void *)(a1 + 136) = v87;
  *(void *)(a1 + 144) = v88;
  *(double *)(a1 + 152) = v105;
  *(CGFloat *)(a1 + 16sub_1B5E6F544(4, 0, 0) = v106;
  *(double *)(a1 + 168) = v100;
  *(CGFloat *)(a1 + 176) = v101;
  *(void *)(a1 + 184) = v96;
  *(unsigned char *)(a1 + 192) = v97 & 1;
  *(_OWORD *)(a1 + 20sub_1B5E6F544(4, 0, 0) = v114;
  *(_WORD *)(a1 + 216) = v98;
}

id MastheadViewController.displayOptions.getter()
{
  return OUTLINED_FUNCTION_3_4(qword_1EB644630);
}

void sub_1B602B73C(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (!a1) {
    goto LABEL_8;
  }
  uint64_t v5 = a1;
  id v6 = objc_msgSend(a2, sel_tabBarController);
  if (!v6)
  {

LABEL_8:
    __int16 v14 = 0;
    *(_OWORD *)a3 = xmmword_1B61CB190;
    goto LABEL_9;
  }
  id v7 = v6;
  id v8 = objc_msgSend(v6, sel__uip_sidebar);
  unsigned int v9 = objc_msgSend(v8, sel__isVisible);

  LODWORD(v8) = v5[OBJC_IVAR____TtC5TeaUI33FloatingTabBarNavigationTitleView_layout];
  sub_1B5E711C8();
  uint64_t v11 = v10;

  __int16 v12 = v5[OBJC_IVAR____TtC5TeaUI33FloatingTabBarNavigationTitleView_showExpandedHeight];
  if (v8) {
    __int16 v13 = 256;
  }
  else {
    __int16 v13 = 0;
  }
  __int16 v14 = v13 | v12;
  *(void *)a3 = v9;
  *(void *)(a3 + 8) = v11;
LABEL_9:
  *(_WORD *)(a3 + 16) = v14;
}

uint64_t MastheadViewController.navigationItemStyle.getter()
{
  return swift_retain();
}

id sub_1B602B848()
{
  uint64_t v1 = qword_1EB648DF0;
  uint64_t v2 = *(void **)(v0 + qword_1EB648DF0);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EB648DF0);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1BE0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + vMemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1B602B8CC()
{
  uint64_t v1 = qword_1EB6422E8;
  if (*(void *)(v0 + qword_1EB6422E8))
  {
    uint64_t v2 = *(void *)(v0 + qword_1EB6422E8);
  }
  else
  {
    uint64_t v3 = v0;
    type metadata accessor for PluginManager();
    swift_allocObject();
    uint64_t v2 = PluginManager.init(enableReuseLayoutSuppression:)(0);
    *(void *)(v3 + vMemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t MastheadViewController.plugin.getter()
{
  return swift_retain();
}

uint64_t sub_1B602B990@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + qword_1EB6422F0);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

uint64_t sub_1B602B9E8()
{
  uint64_t v0 = swift_retain();
  return MastheadViewController.plugin.setter(v0);
}

uint64_t MastheadViewController.plugin.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + qword_1EB6422F0);
  swift_beginAccess();
  *uint64_t v3 = a1;
  swift_retain();
  swift_release();
  sub_1B602BA88();
  return swift_release();
}

uint64_t sub_1B602BA88()
{
  uint64_t v1 = v0;
  uint64_t v2 = *MEMORY[0x1E4FBC8C8] & *v0;
  uint64_t v3 = sub_1B602B8CC();
  id v4 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v3 + 112))(v3);
  swift_release();

  if (!v4)
  {
    uint64_t v5 = *(void (**)(void *, _UNKNOWN **))(*(void *)sub_1B602B8CC() + 120);
    id v6 = v0;
    v5(v0, &protocol witness table for MastheadViewController<A>);
    swift_release();
  }
  sub_1B602B8CC();
  sub_1B5E5E030();
  swift_release();
  id v7 = (void **)((char *)v0 + qword_1EB6422F0);
  swift_beginAccess();
  id v8 = *v7;
  if (!*v7) {
    return sub_1B602BEDC(0);
  }
  swift_retain();
  sub_1B602B8CC();
  sub_1B5E5D21C(v8);
  swift_release();
  swift_beginAccess();
  v8[6] = &protocol witness table for MastheadViewController<A>;
  swift_unknownObjectWeakAssign();
  unsigned int v9 = *(void **)((char *)v1 + qword_1EB64B898);
  objc_msgSend(*(id *)((char *)v1 + qword_1EB644620), sel_bounds);
  double Width = CGRectGetWidth(v15);
  sub_1B602BF38();
  objc_msgSend(v9, sel_setFrame_, 0.0, 0.0, Width, v11);
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  __int16 v13 = (void *)swift_allocObject();
  void v13[2] = *(void *)(v2 + 80);
  float64x2_t v13[3] = *(void *)(v2 + 88);
  void v13[4] = v12;
  swift_retain();
  sub_1B5F238A8((uint64_t)sub_1B6032734, (uint64_t)v13);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1B602BEDC(uint64_t a1)
{
  *(void *)(v1 + qword_1EB6422Esub_1B5E6F544(4, 0, 0) = a1;
  swift_retain();
  swift_release();
  sub_1B602C428();
  return swift_release();
}

double sub_1B602BF38()
{
  uint64_t v1 = *(void *)(v0 + qword_1EB6422E0);
  if (v1) {
    return *(double *)(v1 + 56);
  }
  else {
    return 0.0;
  }
}

void sub_1B602BF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1BA9B1EC0](v3);
  if (v4)
  {
    uint64_t v5 = (char *)v4;
    if (qword_1EB641888 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1B61B1020();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EB654AF0);
    swift_retain_n();
    id v7 = sub_1B61B1000();
    os_log_type_t v8 = sub_1B61B2B70();
    if (os_log_type_enabled(v7, v8))
    {
      unsigned int v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v20 = v10;
      *(_DWORD *)unsigned int v9 = 136315138;
      type metadata accessor for CGSize(0);
      uint64_t v11 = sub_1B61B2160();
      sub_1B5EA6A1C(v11, v12, &v20);
      sub_1B61B2FB0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B5DE7000, v7, v8, "Masthead initialized our plugin, size=%s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BA9B1D70](v10, -1, -1);
      MEMORY[0x1BA9B1D70](v9, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v13 = swift_retain();
    sub_1B602BEDC(v13);
    double v14 = *(double *)(a1 + 56);
    double v15 = *(double *)(a1 + 64);
    objc_msgSend(*(id *)&v5[qword_1EB64B898], sel_setFrame_, 0.0, 0.0, v14, v15);
    id v16 = PluginModel.viewController.getter();
    id v17 = objc_msgSend(v16, sel_view);

    if (v17)
    {
      objc_msgSend(v17, sel_setFrame_, 0.0, 0.0, v14, v15);

      id v18 = PluginModel.viewController.getter();
      id v19 = objc_msgSend(v18, sel_view);

      if (v19)
      {
        objc_msgSend(v19, sel_layoutIfNeeded);

        sub_1B602C22C(0);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_1B602C22C(char a1)
{
  if (qword_1EB641888 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1B61B1020();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB654AF0);
  uint64_t v3 = sub_1B61B1000();
  os_log_type_t v4 = sub_1B61B2B70();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 67109120;
    sub_1B61B2FB0();
    _os_log_impl(&dword_1B5DE7000, v3, v4, "Masthead updateLayoutToPrepareForScrolling: restorePreviousOffset=%{BOOL}d", v5, 8u);
    MEMORY[0x1BA9B1D70](v5, -1, -1);
  }

  sub_1B6030D84();
  uint64_t v6 = MastheadViewController.displayOptions.getter();
  uint64_t v7 = *(void *)&v6[OBJC_IVAR___TSMastheadDisplayOptions_statusBarMode];
  char v8 = v6[OBJC_IVAR___TSMastheadDisplayOptions_statusBarMode + 8];

  uint64_t v10 = v7;
  char v11 = v8;
  sub_1B6031774((uint64_t)&v10, a1 & 1);
  MastheadViewController.updateMastheadViewScrollBehavior()();
  unsigned int v9 = (UIScrollView *)MastheadViewController.scrollView.getter();
  MastheadViewController.scrollViewDidScroll(_:)(v9);
}

uint64_t (*MastheadViewController.plugin.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_33_0();
  return sub_1B602C3F4;
}

uint64_t sub_1B602C3F4(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1B602BA88();
  }
  return result;
}

id sub_1B602C428()
{
  uint64_t v1 = qword_1EB6422E0;
  uint64_t v2 = *(void *)(v0 + qword_1EB6422E0);
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    uint64_t v4 = sub_1B61B1F70();
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
  }
  uint64_t v5 = (void *)(v0 + qword_1EB64B8A8);
  *uint64_t v5 = v3;
  v5[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(v0 + qword_1EB64B898);
  uint64_t v7 = *(void *)(v0 + v1);
  if (v7) {
    BOOL v8 = *(double *)(v7 + 64) == 0.0;
  }
  else {
    BOOL v8 = 0;
  }
  return objc_msgSend(v6, sel_setHidden_, v8);
}

id MastheadViewController.pluginView.getter()
{
  return OUTLINED_FUNCTION_3_4(qword_1EB64B898);
}

void sub_1B602C4D8()
{
}

Swift::Void __swiftcall MastheadViewController.relayout(shouldBustLayoutCache:)(Swift::Bool shouldBustLayoutCache)
{
  if (shouldBustLayoutCache)
  {
    sub_1B6031D1C(v8);
    uint64_t v2 = (uint64_t)v1 + qword_1EB64A990;
    OUTLINED_FUNCTION_0_93((uint64_t)v1 + qword_1EB64A990, (uint64_t)v9);
    OUTLINED_FUNCTION_0_93((uint64_t)v8, v2);
    sub_1B6031D24((uint64_t)v9);
    uint64_t v3 = (uint64_t)v1 + qword_1EB64A9A0;
    OUTLINED_FUNCTION_0_93((uint64_t)v1 + qword_1EB64A9A0, (uint64_t)v10);
    OUTLINED_FUNCTION_0_93((uint64_t)v8, v3);
    sub_1B6031D24((uint64_t)v10);
  }
  id v4 = objc_msgSend(v1, sel_view);
  if (v4)
  {
    uint64_t v5 = v4;
    objc_msgSend(v4, sel_setNeedsLayout);

    id v6 = objc_msgSend(v1, sel_view);
    if (v6)
    {
      uint64_t v7 = v6;
      objc_msgSend(v6, sel_layoutIfNeeded);

      objc_msgSend(v1, sel__updateTabBarLayout);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1B602C5F4(void *a1)
{
  uint64_t v2 = *(void **)(v1 + qword_1EB644630);
  *(void *)(v1 + qword_1EB64463sub_1B5E6F544(4, 0, 0) = a1;
  id v3 = a1;

  sub_1B602C4D8();
}

char *MastheadViewController.__allocating_init(rootViewController:viewProvider:miniMastheadViewProvider:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return MastheadViewController.init(rootViewController:viewProvider:miniMastheadViewProvider:)(a1, a2, a3);
}

char *MastheadViewController.init(rootViewController:viewProvider:miniMastheadViewProvider:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v48 = *MEMORY[0x1E4FBC8C8] & *(void *)v3;
  v3[qword_1EB64A368] = 1;
  uint64_t v8 = qword_1EB644620;
  id v9 = objc_allocWithZone((Class)type metadata accessor for PassthroughView());
  uint64_t v10 = v4;
  *(void *)&v4[v8] = objc_msgSend(v9, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v11 = qword_1EB64A978;
  id v12 = objc_allocWithZone((Class)type metadata accessor for BlurStatusBarView());
  *(void *)&v10[v11] = OUTLINED_FUNCTION_0_29(v12, sel_initWithFrame_);
  uint64_t v13 = &v10[qword_1EB644640];
  *(_OWORD *)uint64_t v13 = 0u;
  *((_OWORD *)v13 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0u;
  double v14 = &v10[qword_1EB644668];
  *(_OWORD *)double v14 = 0u;
  *((_OWORD *)v14 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0u;
  *((void *)v14 + 4) = 0;
  uint64_t v15 = (uint64_t)&v10[qword_1EB64A990];
  sub_1B6031D1C(v70);
  sub_1B6031FEC((uint64_t)v70, v15, (unint64_t *)&unk_1EB640B28, (uint64_t)&type metadata for MastheadViewLayoutOptions);
  sub_1B6031FEC((uint64_t)v70, (uint64_t)&v10[qword_1EB64A9A0], (unint64_t *)&unk_1EB640B28, (uint64_t)&type metadata for MastheadViewLayoutOptions);
  uint64_t v16 = qword_1EB644648;
  id v62 = 0;
  long long v60 = 0u;
  long long v61 = 0u;
  char v63 = 5;
  long long v64 = 0u;
  long long v65 = 0u;
  uint64_t v66 = 0;
  char v67 = 5;
  sub_1B6031FA0(0, &qword_1EB642610, (uint64_t)&type metadata for NavigationItemStyle, MEMORY[0x1E4FAAA48]);
  long long v68 = 0uLL;
  __int16 v69 = 0;
  swift_allocObject();
  *(void *)&v10[v16] = sub_1B61B0420();
  uint64_t v17 = qword_1EB644658;
  type metadata accessor for MastheadNavigationItemStyleProvider();
  *(void *)&v10[v17] = swift_allocObject();
  *(void *)&v10[qword_1EB648DF0] = 0;
  *(void *)&v10[qword_1EB6422E8] = 0;
  *(void *)&v10[qword_1EB6422F0] = 0;
  *(void *)&v10[qword_1EB6422E0] = 0;
  id v18 = &v10[qword_1EB64B8A8];
  *(void *)id v18 = 0;
  *((void *)v18 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
  uint64_t v19 = qword_1EB64B898;
  *(void *)&v10[v19] = OUTLINED_FUNCTION_0_29(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_);
  uint64_t v20 = qword_1EB644630;
  id v21 = objc_allocWithZone((Class)type metadata accessor for MastheadDisplayOptions());
  *(void *)&v10[v20] = OUTLINED_FUNCTION_19_24();
  unint64_t v22 = &v10[qword_1EB648DE0];
  *(void *)unint64_t v22 = 0;
  *((void *)v22 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
  v22[16] = 1;
  *(void *)&v10[qword_1EB644618] = a1;
  uint64_t v50 = a2;
  sub_1B5E176E4(a2, (uint64_t)&v10[qword_1EB64A980]);
  uint64_t v49 = a3;
  sub_1B6031DF0(a3, (uint64_t)&v10[qword_1EB644608]);
  id v23 = a1;

  v59.receiver = v10;
  v59.super_class = ObjectType;
  id v24 = objc_msgSendSuper2(&v59, sel_initWithNibName_bundle_, 0, 0);
  uint64_t v25 = self;
  uint64_t v26 = (char *)v24;
  id v27 = objc_msgSend(v25, sel_defaultCenter);
  objc_msgSend(v27, sel_addObserver_selector_name_object_, v26, sel_boldTextEnabledDidChangeNotification, *MEMORY[0x1E4FB2420], 0);

  objc_msgSend(v26, sel_addChildViewController_, v23);
  uint64_t v28 = *(void *)&v26[qword_1EB64A980 + 32];
  __swift_project_boxed_opaque_existential_1(&v26[qword_1EB64A980], *(void *)&v26[qword_1EB64A980 + 24]);
  double v29 = *(void (**)(void))(v28 + 64);
  id v30 = v26;
  v29();

  uint64_t v31 = *(void *)(v48 + 80);
  sub_1B5E00AB8(0, &qword_1EB644700);
  id v32 = v23;
  if (swift_dynamicCast())
  {
    sub_1B5E30E70(&v60, (uint64_t)v56);
    uint64_t v33 = v57;
    uint64_t v34 = v58;
    __swift_project_boxed_opaque_existential_1(v56, v57);
    OUTLINED_FUNCTION_12_35();
    v35(v33, v34);
    uint64_t v36 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v37 = (void *)swift_allocObject();
    v37[2] = v31;
    uint64_t v37[3] = *(void *)(v48 + 88);
    void v37[4] = v36;
    sub_1B61B0440();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v60);
    uint64_t v38 = v57;
    uint64_t v39 = v58;
    __swift_project_boxed_opaque_existential_1(v56, v57);
    OUTLINED_FUNCTION_12_35();
    v40(v38, v39);
    sub_1B61B0430();
    swift_release();
    long long v51 = v60;
    long long v52 = v61;
    id v53 = v62;
    char v54 = v63;
    char v55 = v67;
    sub_1B5E68F5C();
    sub_1B61B0460();

    sub_1B6032740(v49, &qword_1EB645C50, (uint64_t)&unk_1EB645C48, (uint64_t)&protocol descriptor for MiniMastheadViewProviderType);
    __swift_destroy_boxed_opaque_existential_1(v50);
    sub_1B5E68FA8((void *)v51, *((void **)&v51 + 1), (void *)v52, *((void **)&v52 + 1), v53, v54);
    id v41 = (void *)OUTLINED_FUNCTION_11_29();
    sub_1B5E68FA8(v41, v42, v43, v44, v45, v55);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  }
  else
  {
    id v62 = 0;
    long long v60 = 0u;
    long long v61 = 0u;

    sub_1B6032740(v49, &qword_1EB645C50, (uint64_t)&unk_1EB645C48, (uint64_t)&protocol descriptor for MiniMastheadViewProviderType);
    __swift_destroy_boxed_opaque_existential_1(v50);
    sub_1B6032740((uint64_t)&v60, qword_1EB644708, (uint64_t)&qword_1EB644700, (uint64_t)&protocol descriptor for NavigationItemStylable);
  }
  return v30;
}

uint64_t sub_1B602CD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1BA9B1EC0](v2);
  if (result)
  {
    id v4 = (void *)result;
    swift_retain();

    sub_1B5E68F5C();
    sub_1B61B0460();
    return swift_release();
  }
  return result;
}

id MastheadViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void MastheadViewController.init(coder:)()
{
  uint64_t v1 = v0;
  v0[qword_1EB64A368] = 1;
  uint64_t v2 = qword_1EB644620;
  id v3 = objc_allocWithZone((Class)type metadata accessor for PassthroughView());
  *(void *)&v1[v2] = OUTLINED_FUNCTION_0_29(v3, sel_initWithFrame_);
  uint64_t v4 = qword_1EB64A978;
  id v5 = objc_allocWithZone((Class)type metadata accessor for BlurStatusBarView());
  *(void *)&v1[v4] = OUTLINED_FUNCTION_0_29(v5, sel_initWithFrame_);
  id v6 = &v1[qword_1EB644640];
  *(_OWORD *)id v6 = 0u;
  *((_OWORD *)v6 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0u;
  id v7 = &v1[qword_1EB644668];
  *(_OWORD *)id v7 = 0u;
  *((_OWORD *)v7 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0u;
  *((void *)v7 + 4) = 0;
  uint64_t v8 = (uint64_t)&v1[qword_1EB64A990];
  sub_1B6031D1C(v16);
  OUTLINED_FUNCTION_0_93((uint64_t)v16, v8);
  OUTLINED_FUNCTION_0_93((uint64_t)v16, (uint64_t)&v1[qword_1EB64A9A0]);
  uint64_t v9 = qword_1EB644648;
  sub_1B6031FA0(0, &qword_1EB642610, (uint64_t)&type metadata for NavigationItemStyle, MEMORY[0x1E4FAAA48]);
  swift_allocObject();
  *(void *)&v1[v9] = sub_1B61B0420();
  uint64_t v10 = qword_1EB644658;
  type metadata accessor for MastheadNavigationItemStyleProvider();
  *(void *)&v1[v10] = swift_allocObject();
  *(void *)&v1[qword_1EB648DF0] = 0;
  *(void *)&v1[qword_1EB6422E8] = 0;
  *(void *)&v1[qword_1EB6422F0] = 0;
  *(void *)&v1[qword_1EB6422E0] = 0;
  uint64_t v11 = &v1[qword_1EB64B8A8];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
  uint64_t v12 = qword_1EB64B898;
  *(void *)&v1[v12] = OUTLINED_FUNCTION_0_29(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_);
  uint64_t v13 = qword_1EB644630;
  id v14 = objc_allocWithZone((Class)type metadata accessor for MastheadDisplayOptions());
  *(void *)&v1[v13] = OUTLINED_FUNCTION_19_24();
  uint64_t v15 = &v1[qword_1EB648DE0];
  *(void *)uint64_t v15 = 0;
  *((void *)v15 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0;
  v15[16] = 1;

  sub_1B61B34D0();
  __break(1u);
}

void sub_1B602D0FC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  MastheadViewController.init(coder:)();
}

id MastheadViewController.__deallocating_deinit()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v2 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v2, sel_removeObserver_name_object_, v0, *MEMORY[0x1E4FB2420], 0);

  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

id sub_1B602D1AC(void *a1)
{
  id v1 = a1;
  return MastheadViewController.__deallocating_deinit();
}

void sub_1B602D1D4(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1EB64A980);
  sub_1B6032740(a1 + qword_1EB644608, &qword_1EB645C50, (uint64_t)&unk_1EB645C48, (uint64_t)&protocol descriptor for MiniMastheadViewProviderType);

  sub_1B5E15B34(a1 + qword_1EB644640);
  sub_1B6032740(a1 + qword_1EB644668, qword_1EB644FE8, (uint64_t)&unk_1EB644FE0, (uint64_t)&protocol descriptor for MastheadViewAnimatorType);
  sub_1B6031FEC(a1 + qword_1EB64A990, (uint64_t)v2, (unint64_t *)&unk_1EB640B28, (uint64_t)&type metadata for MastheadViewLayoutOptions);
  sub_1B6031D24((uint64_t)v2);
  sub_1B6031FEC(a1 + qword_1EB64A9A0, (uint64_t)v3, (unint64_t *)&unk_1EB640B28, (uint64_t)&type metadata for MastheadViewLayoutOptions);
  sub_1B6031D24((uint64_t)v3);
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall MastheadViewController.viewDidLoad()()
{
  void (*v9)(void **__return_ptr, uint64_t, uint64_t);
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  char v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void *v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t inited;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(void **__return_ptr, uint64_t, uint64_t);
  id v59;
  long long v60;
  uint64_t v61;
  _OWORD v62[2];
  void *v63;
  char v64;
  objc_super v65;

  id v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = *MEMORY[0x1E4FBC8C8] & *(void *)v0;
  v65.receiver = v0;
  v65.super_class = ObjectType;
  objc_msgSendSuper2(&v65, sel_viewDidLoad);
  id v4 = objc_msgSend(v0, sel_traitCollection);
  id v5 = (void *)sub_1B602D9C8((uint64_t)v4);

  id v6 = MastheadViewController.navigationItem.getter();
  objc_msgSend(v6, sel_setTitleView_, v5);

  id v7 = *(void **)&v1[qword_1EB644618];
  uint64_t v8 = *(void *)(v3 + 88);
  uint64_t v9 = *(void (**)(void **__return_ptr, uint64_t, uint64_t))(v8 + 16);
  uint64_t v10 = *(void *)(v3 + 80);
  v9(&v63, v10, v8);
  uint64_t v11 = v63;
  if (v64 != 1)
  {
    uint64_t v13 = v63;
    id v14 = 0;
    goto LABEL_5;
  }
  swift_beginAccess();
  v11[3] = &protocol witness table for MastheadViewController<A>;
  swift_unknownObjectWeakAssign();
  OUTLINED_FUNCTION_24();
  swift_retain();
  sub_1B61B0430();
  swift_release();
  uint64_t v12 = v63;

  if (v12 || !v5)
  {
    uint64_t v13 = v11;
    id v14 = 1;
LABEL_5:
    sub_1B5EC6D10(v13, v14);
    goto LABEL_6;
  }
  char v54 = v5;
  objc_msgSend(v54, sel_setContentAlpha_, 0.0);
  sub_1B5EC6D10(v11, 1);

LABEL_6:
  uint64_t v15 = OUTLINED_FUNCTION_9_42();
  if (!v15)
  {
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v16 = v15;
  uint64_t v17 = objc_msgSend(v7, sel_view);
  if (!v17)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  id v18 = v17;
  uint64_t v56 = v8;
  uint64_t v57 = v10;
  uint64_t v58 = v9;
  char v55 = v5;
  objc_msgSend(v16, sel_addSubview_, v17);

  objc_msgSend(v7, sel_didMoveToParentViewController_, v1);
  uint64_t v19 = OUTLINED_FUNCTION_9_42();
  if (!v19)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v20 = v19;
  id v21 = *(void **)&v1[qword_1EB644620];
  objc_msgSend(v19, sel_addSubview_, v21);

  unint64_t v22 = &v1[qword_1EB64A980];
  id v23 = *(void *)&v1[qword_1EB64A980 + 24];
  id v24 = *(void *)&v1[qword_1EB64A980 + 32];
  __swift_project_boxed_opaque_existential_1(&v1[qword_1EB64A980], v23);
  OUTLINED_FUNCTION_12_35();
  uint64_t v26 = (void *)v25(v23, v24);
  objc_msgSend(v21, sel_addSubview_, v26);

  id v27 = *(void **)&v1[qword_1EB64B898];
  objc_msgSend(v21, sel_addSubview_, v27);
  objc_msgSend(v27, sel_setHidden_, 1);
  uint64_t v28 = OUTLINED_FUNCTION_9_42();
  if (!v28)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    return;
  }
  double v29 = v28;
  objc_msgSend(v28, sel_addSubview_, *(void *)&v1[qword_1EB64A978]);

  v58(&v63, v57, v56);
  id v30 = v63;
  if (v64)
  {
    sub_1B5EC6D10(v63, 1);
  }
  else
  {
    sub_1B602DAC0(v63, (uint64_t *)&v63);
    sub_1B5EC6D10(v30, 0);
    uint64_t v31 = (uint64_t)&v1[qword_1EB644640];
    OUTLINED_FUNCTION_33_0();
    sub_1B5F0FFFC((uint64_t)&v63, v31);
    swift_endAccess();
  }
  sub_1B602DEF0();
  id v32 = objc_msgSend(v1, (SEL)&selRef_setOpaque_);
  if (!v32) {
    goto LABEL_36;
  }
  uint64_t v33 = v32;
  sub_1B6031F20();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B61BE6A0;
  id v35 = type metadata accessor for PassthroughView();
  *(void *)(inited + 32) = v21;
  *(void *)(inited + 56) = v35;
  uint64_t v36 = v21;
  id v37 = objc_msgSend(v7, (SEL)&selRef_setOpaque_);
  uint64_t v38 = v37;
  objc_super v59 = v33;
  if (v37)
  {
    id v37 = (id)sub_1B5DFF760(0, (unint64_t *)&qword_1EB647C70);
  }
  else
  {
    *(void *)(inited + 72) = 0;
    *(void *)(inited + 8sub_1B5E6F544(4, 0, 0) = 0;
  }
  uint64_t v39 = 0;
  id v40 = 0;
  *(void *)(inited + 64) = v38;
  id v41 = MEMORY[0x1E4FBC860];
  *(void *)(inited + 88) = v37;
  id v42 = MEMORY[0x1E4FBC840] + 8;
  do
  {
    id v43 = v39;
    sub_1B5E5F644(inited + 32 + 32 * v40, (uint64_t)&v63);
    sub_1B6031FEC((uint64_t)&v63, (uint64_t)&v60, (unint64_t *)&qword_1EB64CAC0, v42);
    if (v61)
    {
      sub_1B5E30E88(&v60, v62);
      sub_1B5E30E88(v62, &v60);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B5E1B604();
        id v41 = v45;
      }
      double v44 = *(void *)(v41 + 16);
      if (v44 >= *(void *)(v41 + 24) >> 1)
      {
        sub_1B5E1B604();
        id v41 = v46;
      }
      *(void *)(v41 + 16) = v44 + 1;
      sub_1B5E30E88(&v60, (_OWORD *)(v41 + 32 * v44 + 32));
    }
    else
    {
      sub_1B5E15B34((uint64_t)&v60);
    }
    uint64_t v39 = 1;
    id v40 = 1;
  }
  while ((v43 & 1) == 0);
  swift_setDeallocating();
  sub_1B61076CC();
  uint64_t v47 = (void *)sub_1B61B24D0();
  swift_bridgeObjectRelease();
  objc_msgSend(v59, sel_setAccessibilityElements_, v47);

  uint64_t v48 = *((void *)v22 + 3);
  uint64_t v49 = *((void *)v22 + 4);
  __swift_project_boxed_opaque_existential_1(v22, v48);
  (*(void (**)(uint64_t, uint64_t))(v49 + 48))(v48, v49);
  uint64_t v50 = *(void *)&v1[qword_1EB64B8A8 + 8];
  if (v50)
  {
    long long v51 = *(void *)&v1[qword_1EB64B8A8];
    sub_1B61B1F70();
    sub_1B602B8CC();
    long long v52 = sub_1B5E5D0EC(v51, v50);
    swift_bridgeObjectRelease();
    swift_release();
    if (v52)
    {
      id v53 = swift_retain();
      MastheadViewController.plugin.setter(v53);
      swift_release();
    }
  }
}

uint64_t sub_1B602D9C8(uint64_t a1)
{
  sub_1B6031DF0(v1 + qword_1EB644608, (uint64_t)v7);
  uint64_t v3 = v8;
  if (v8)
  {
    uint64_t v4 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(a1, v3, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    sub_1B6032740((uint64_t)v7, &qword_1EB645C50, (uint64_t)&unk_1EB645C48, (uint64_t)&protocol descriptor for MiniMastheadViewProviderType);
    return 0;
  }
  return v5;
}

id MastheadViewController.navigationItem.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + qword_1EB644618), sel_navigationItem);
  return v1;
}

double sub_1B602DAC0@<D0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  self;
  uint64_t v7 = swift_dynamicCastObjCClass();
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    id v9 = a1;
    if (objc_msgSend(v8, sel_delegate))
    {
      uint64_t v10 = a2;
      uint64_t v11 = (objc_class *)type metadata accessor for MultiCollectionViewDelegate();
      uint64_t v12 = swift_dynamicCastClass();
      if (v12)
      {
        uint64_t v13 = v12;
        id v14 = objc_msgSend(objc_allocWithZone(v11), sel_init);
        sub_1B602AB14(v13, &OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_delegates, &OBJC_IVAR____TtC5TeaUI27MultiCollectionViewDelegate_respondsToSelectorCache, (uint64_t (*)(void, void))sub_1B60327BC);
        MultiCollectionViewDelegate.addDelegate<A>(_:)(v3);
        objc_msgSend(v8, sel_setDelegate_, v14);
        void v10[3] = (uint64_t)v11;
        swift_unknownObjectRelease();

        *uint64_t v10 = (uint64_t)v14;
        return result;
      }
      swift_unknownObjectRelease();
      a2 = v10;
    }
  }
  self;
  uint64_t v16 = swift_dynamicCastObjCClass();
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    id v18 = a1;
    id v19 = objc_msgSend(v17, sel_delegate);
    if (v19)
    {
      id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FAB268]), sel_initWithDelegate_delegateProtocol_, v19, &unk_1F0F75E68);
      objc_msgSend(v20, sel_addDelegate_, v3);
      objc_msgSend(v17, sel_setDelegate_, objc_msgSend(v20, sel_delegate));
      swift_unknownObjectRelease();
      a2[3] = sub_1B5DFF760(0, &qword_1EB63FE28);
      swift_unknownObjectRelease();

      *a2 = (uint64_t)v20;
      return result;
    }
  }
  id v21 = objc_msgSend(a1, sel_delegate);
  if (v21)
  {
    uint64_t v22 = (uint64_t)v21;
    swift_getObjectType();
    uint64_t v23 = dynamic_cast_existential_1_conditional(v22);
    if (v23)
    {
      uint64_t v25 = v23;
      uint64_t v26 = v24;
      uint64_t v27 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8))(v3, ObjectType, v27, v26);
      a2[3] = v27;
      *a2 = v25;
      return result;
    }
    swift_unknownObjectRelease();
  }
  if (objc_msgSend(a1, sel_delegate))
  {
    uint64_t v28 = type metadata accessor for MultiScrollViewDelegate();
    uint64_t v29 = swift_dynamicCastClass();
    if (v29)
    {
      uint64_t v30 = v29;
      MultiScrollViewDelegate.addDelegate<A>(_:)(v3);
      a2[3] = v28;
      *a2 = v30;
      return result;
    }
    swift_unknownObjectRelease();
  }
  if (objc_msgSend(a1, sel_delegate))
  {
    uint64_t v31 = swift_dynamicCastObjCProtocolConditional();
    if (v31)
    {
      uint64_t v32 = v31;
      swift_getObjectType();
      sub_1B5DFF760(0, (unint64_t *)&qword_1EB647CC0);
      uint64_t v33 = dynamic_cast_existential_0_superclass_conditional(v32);
      if (v33)
      {
        uint64_t v34 = v33;
        id v35 = (objc_class *)type metadata accessor for MultiScrollViewDelegate();
        id v36 = objc_msgSend(objc_allocWithZone(v35), sel_init);
        sub_1B602AB14(v34, &OBJC_IVAR____TtC5TeaUI23MultiScrollViewDelegate_delegates, &OBJC_IVAR____TtC5TeaUI23MultiScrollViewDelegate_respondsToSelectorCache, (uint64_t (*)(void, void))sub_1B60326E0);
        MultiScrollViewDelegate.addDelegate<A>(_:)(v3);
        objc_msgSend(a1, sel_setDelegate_, v36);
        a2[3] = (uint64_t)v35;
        swift_unknownObjectRelease();
        *a2 = (uint64_t)v36;
        return result;
      }
    }
    swift_unknownObjectRelease();
  }
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *((_OWORD *)a2 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = 0u;
  return result;
}

void sub_1B602DEF0()
{
  id v1 = v0;
  *(void *)&long long v55 = *(void *)&v0[qword_1EB644618];
  sub_1B5E00AB8(0, &qword_1EB644700);
  id v2 = (id)v55;
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v69);
  }
  else
  {
    uint64_t v3 = (char *)MastheadViewController.displayOptions.getter();
    id v4 = objc_msgSend(v0, sel_navigationController);
    if (v4)
    {
      uint64_t v5 = v4;
      id v6 = objc_msgSend(v4, sel_navigationBar);

      uint64_t v7 = (uint64_t)objc_msgSend(v6, sel_isHidden);
    }
    else
    {
      uint64_t v7 = 2;
    }
    BOOL v8 = sub_1B602AF00();
    id v9 = objc_msgSend(v1, sel_view);
    if (v9)
    {
      uint64_t v10 = v9;
      id v11 = objc_msgSend(v9, sel_backgroundColor);

      if (!v11) {
        id v11 = objc_msgSend(self, sel_systemBackgroundColor);
      }
      sub_1B6152004(v3, (void *)v7, v8, v11, (uint64_t)&v69);

      uint64_t v33 = (void *)*((void *)&v69 + 1);
      uint64_t v34 = (void *)v69;
      uint64_t v31 = v71;
      uint64_t v32 = v70;
      uint64_t v30 = v72;
      uint64_t v38 = v75;
      uint64_t v39 = v74;
      id v36 = v77;
      id v37 = v76;
      id v35 = v78;
      char v28 = v79;
      char v29 = v73;
      unint64_t v13 = *((void *)&v80 + 1);
      unint64_t v12 = v80;
      char v14 = v81;
      char v27 = v82;
      sub_1B61B0430();
      long long v15 = v69;
      uint64_t v17 = v70;
      uint64_t v16 = v71;
      id v18 = v72;
      uint64_t v25 = v75;
      uint64_t v26 = v74;
      uint64_t v23 = v77;
      uint64_t v24 = v76;
      uint64_t v22 = v78;
      char v19 = v73;
      char v21 = v79;
      long long v55 = v69;
      uint64_t v56 = v70;
      uint64_t v57 = v71;
      uint64_t v58 = v72;
      char v59 = v73;
      long long v60 = v74;
      long long v61 = v75;
      id v62 = v76;
      char v63 = v77;
      long long v64 = v78;
      char v65 = v79;
      unsigned long long v66 = v80;
      char v67 = v81;
      char v68 = v82;
      *(void *)&long long v40 = v34;
      *((void *)&v40 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v33;
      id v41 = v32;
      id v42 = v31;
      id v43 = v30;
      char v44 = v29;
      id v45 = v39;
      uint64_t v46 = v38;
      uint64_t v47 = v37;
      uint64_t v48 = v36;
      uint64_t v49 = v35;
      char v50 = v28;
      unint64_t v20 = v12;
      unint64_t v51 = v12;
      unint64_t v52 = v13;
      char v53 = v14;
      char v54 = v27;
      LOBYTE(v12) = static NavigationItemStyle.== infix(_:_:)(&v55, &v40);
      sub_1B5E68FA8((void *)v15, *((void **)&v15 + 1), v17, v16, v18, v19);
      sub_1B5E68FA8(v26, v25, v24, v23, v22, v21);
      if ((v12 & 1) == 0)
      {
        *(void *)&long long v69 = v34;
        *((void *)&v69 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v33;
        id v70 = v32;
        double v71 = v31;
        id v72 = v30;
        char v73 = v29;
        id v74 = v39;
        uint64_t v75 = v38;
        uint64_t v76 = v37;
        uint64_t v77 = v36;
        uint64_t v78 = v35;
        char v79 = v28;
        unsigned long long v80 = __PAIR128__(v13, v20);
        char v81 = v14;
        char v82 = v27;
        sub_1B5E68F5C();
        sub_1B61B0460();
        objc_msgSend(v1, sel_setNeedsStatusBarAppearanceUpdate);
      }
      sub_1B5E68FA8(v34, v33, v32, v31, v30, v29);
      sub_1B5E68FA8(v39, v38, v37, v36, v35, v28);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1B602E328(void *a1)
{
  id v1 = a1;
  MastheadViewController.viewDidLoad()();
}

id sub_1B602E370(void *a1)
{
  id v1 = a1;
  id v2 = MastheadViewController.navigationItem.getter();

  return v2;
}

Swift::Void __swiftcall MastheadViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  v6.receiver = v1;
  v6.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v6, sel_viewWillAppear_, a1);
  uint64_t v3 = *(void *)&v1[qword_1EB64A980 + 24];
  uint64_t v4 = *(void *)&v1[qword_1EB64A980 + 32];
  __swift_project_boxed_opaque_existential_1(&v1[qword_1EB64A980], v3);
  OUTLINED_FUNCTION_12_35();
}

void sub_1B602E43C(void *a1, uint64_t a2, Swift::Bool a3)
{
  id v4 = a1;
  MastheadViewController.viewWillAppear(_:)(a3);
}

Swift::Void __swiftcall MastheadViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  id v2 = v1;
  v24.receiver = v2;
  v24.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v24, sel_viewDidAppear_, a1);
  id v4 = objc_msgSend(v2, sel_navigationController);
  if (!v4
    || (v21[0] = v4,
        sub_1B5DFF760(0, &qword_1EB64B220),
        sub_1B5E00AB8(0, (unint64_t *)&unk_1EB64AC20),
        (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v20 = 0;
    long long v18 = 0u;
    long long v19 = 0u;
    goto LABEL_8;
  }
  if (!*((void *)&v19 + 1))
  {
LABEL_8:
    sub_1B6032740((uint64_t)&v18, &qword_1EB64AC30, (uint64_t)&unk_1EB64AC20, (uint64_t)&protocol descriptor for BackdropGroupNameProviding);
    goto LABEL_9;
  }
  sub_1B5E30E70(&v18, (uint64_t)v21);
  uint64_t v5 = v22;
  uint64_t v6 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  OUTLINED_FUNCTION_12_35();
  v7(v5, v6);
  if (v8)
  {
    id v9 = *(id *)(*(void *)&v2[qword_1EB64A978] + OBJC_IVAR____TtC5TeaUI17BlurStatusBarView_barView);
    uint64_t v10 = (void *)sub_1B61B20C0();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_ts_setGroupName_, v10);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
LABEL_9:
  id v11 = OUTLINED_FUNCTION_9_42();
  if (v11)
  {
    unint64_t v12 = v11;
    objc_msgSend(v11, sel_setNeedsLayout);

    id v13 = OUTLINED_FUNCTION_9_42();
    if (v13)
    {
      char v14 = v13;
      objc_msgSend(v13, sel_layoutIfNeeded);

      long long v15 = &v2[qword_1EB64A980];
      uint64_t v16 = *(void *)&v2[qword_1EB64A980 + 24];
      uint64_t v17 = *((void *)v15 + 4);
      __swift_project_boxed_opaque_existential_1(v15, v16);
      (*(void (**)(uint64_t, uint64_t))(v17 + 56))(v16, v17);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1B602E6BC(void *a1, uint64_t a2, Swift::Bool a3)
{
  id v4 = a1;
  MastheadViewController.viewDidAppear(_:)(a3);
}

Swift::Void __swiftcall MastheadViewController.viewWillLayoutSubviews()()
{
  v14.receiver = v0;
  v14.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v14, sel_viewWillLayoutSubviews);
  id v1 = objc_msgSend(*(id *)&v0[qword_1EB644618], sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v2 = v1;
  id v3 = objc_msgSend(v0, sel_view);
  if (!v3)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  objc_msgSend(v3, sel_bounds);
  OUTLINED_FUNCTION_2_0();
  double v4 = OUTLINED_FUNCTION_7();
  objc_msgSend(v5, v6, v4);

  uint64_t v7 = *(void **)&v0[qword_1EB64A978];
  id v8 = objc_msgSend(v0, sel_view);
  if (!v8)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  objc_msgSend(v8, sel_bounds);
  OUTLINED_FUNCTION_2_0();
  v15.origin.double x = OUTLINED_FUNCTION_7();
  double Width = CGRectGetWidth(v15);
  id v10 = objc_msgSend(v0, sel_view);
  if (v10)
  {
    id v11 = v10;
    objc_msgSend(v10, sel_safeAreaInsets);
    double v13 = v12;

    objc_msgSend(v7, sel_setFrame_, 0.0, 0.0, Width, v13);
    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1B602E878(void *a1)
{
  id v1 = a1;
  MastheadViewController.viewWillLayoutSubviews()();
}

Swift::Void __swiftcall MastheadViewController.viewDidLayoutSubviews()()
{
  id v1 = v0;
  v27.receiver = v0;
  v27.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v27, sel_viewDidLayoutSubviews);
  id v2 = *(void **)&v0[qword_1EB64A978];
  objc_msgSend(v2, sel_setNeedsLayout);
  objc_msgSend(v2, sel_layoutIfNeeded);
  sub_1B6031DF0((uint64_t)&v1[qword_1EB644608], (uint64_t)&v22);
  if (v23)
  {
    sub_1B5E30E70(&v22, (uint64_t)v24);
    MastheadViewController.layoutOptions.getter((uint64_t)__src);
    memcpy(__dst, __src, 0xDAuLL);
    nullsub_1(__dst, v3, v4, v5, v6);
    uint64_t v7 = (uint64_t)&v1[qword_1EB64A9A0];
    OUTLINED_FUNCTION_0_93((uint64_t)&v1[qword_1EB64A9A0], (uint64_t)v20);
    OUTLINED_FUNCTION_0_93((uint64_t)__dst, (uint64_t)v17);
    OUTLINED_FUNCTION_0_93((uint64_t)v20, (uint64_t)v21);
    if (sub_1B603206C((uint64_t)v21) == 1)
    {
      memcpy(v14, v17, 0xDAuLL);
      sub_1B6032084((uint64_t)__src);
      sub_1B6032084((uint64_t)__src);
      sub_1B60320B8((uint64_t)v14);
      OUTLINED_FUNCTION_0_93((uint64_t)__dst, (uint64_t)v15);
      OUTLINED_FUNCTION_0_93((uint64_t)v20, (uint64_t)&v16);
      sub_1B60320EC((uint64_t)v15);
    }
    else
    {
      sub_1B6031FEC((uint64_t)v20, (uint64_t)v14, (unint64_t *)&unk_1EB640B28, (uint64_t)&type metadata for MastheadViewLayoutOptions);
      memcpy(v13, v14, 0xDAuLL);
      sub_1B6032084((uint64_t)__src);
      sub_1B6032084((uint64_t)__src);
      char v8 = static MastheadViewLayoutOptions.== infix(_:_:)((uint64_t)v17, (uint64_t)v13);
      memcpy(v15, v17, 0xDAuLL);
      sub_1B60320B8((uint64_t)v15);
      sub_1B60320B8((uint64_t)__src);
      if (v8)
      {
LABEL_7:
        sub_1B60320B8((uint64_t)__src);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
        goto LABEL_8;
      }
    }
    OUTLINED_FUNCTION_0_93(v7, (uint64_t)v15);
    OUTLINED_FUNCTION_0_93((uint64_t)__dst, v7);
    sub_1B6032084((uint64_t)__src);
    sub_1B6031D24((uint64_t)v15);
    uint64_t v9 = v25;
    uint64_t v10 = v26;
    __swift_project_boxed_opaque_existential_1(v24, v25);
    (*(void (**)(void, uint64_t, uint64_t, double, double, double, double))(v10 + 40))(*(void *)&__src[8], v9, v10, __src[15], __src[16], __src[17], __src[18]);
    goto LABEL_7;
  }
  sub_1B6032740((uint64_t)&v22, &qword_1EB645C50, (uint64_t)&unk_1EB645C48, (uint64_t)&protocol descriptor for MiniMastheadViewProviderType);
LABEL_8:
  uint64_t v11 = *(void *)&v1[qword_1EB6422E0];
  if (v11 && (double v12 = &v1[qword_1EB6422F0], OUTLINED_FUNCTION_24(), *(void *)v12))
  {
    swift_retain();
    swift_retain();
    sub_1B602EBB4(v11);
    swift_release();
    swift_release();
  }
  else
  {
    sub_1B602C22C(0);
  }
}

void sub_1B602EBB4(uint64_t a1)
{
  id v2 = v1;
  long long v54 = *(_OWORD *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x50);
  sub_1B602C22C(0);
  double v5 = *(double *)(a1 + 56);
  double v4 = *(double *)(a1 + 64);
  double v6 = *(void **)((char *)v1 + qword_1EB64B898);
  objc_msgSend(v6, sel_frame);
  if (v5 == v8 && v4 == v7)
  {
    id v11 = objc_msgSend(v1, sel_view);
    if (!v11)
    {
      __break(1u);
LABEL_26:
      __break(1u);
      return;
    }
    double v12 = v11;
    objc_msgSend(v11, sel_bounds);
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    CGFloat v18 = v17;
    CGFloat v20 = v19;

    v56.origin.double x = v14;
    v56.origin.double y = v16;
    v56.size.double width = v18;
    v56.size.double height = v20;
    BOOL v10 = v5 != CGRectGetWidth(v56);
  }
  else
  {
    BOOL v10 = 1;
  }
  char v21 = *(void **)(a1 + 40);
  long long v22 = self;
  id v23 = v21;
  id v24 = objc_msgSend(v22, sel_sharedApplication);
  id v25 = objc_msgSend(v24, sel_preferredContentSizeCategory);

  uint64_t v26 = sub_1B61B20F0();
  uint64_t v28 = v27;
  if (v26 == sub_1B61B20F0() && v28 == v29)
  {
    swift_bridgeObjectRelease_n();

LABEL_20:
    if (!v10) {
      return;
    }
    goto LABEL_21;
  }
  char v31 = sub_1B61B3760();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (v31) {
    goto LABEL_20;
  }
  if (qword_1EB641888 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_1B61B1020();
  __swift_project_value_buffer(v32, (uint64_t)qword_1EB654AF0);
  uint64_t v33 = sub_1B61B1000();
  os_log_type_t v34 = sub_1B61B2B70();
  if (os_log_type_enabled(v33, v34))
  {
    id v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v35 = 0;
    _os_log_impl(&dword_1B5DE7000, v33, v34, "Masthead plugin now needsRelayout due to content size change", v35, 2u);
    MEMORY[0x1BA9B1D70](v35, -1, -1);
  }

  objc_msgSend(v6, (SEL)&selRef_setShowsVerticalScrollIndicator_);
  double v37 = v36;
  double v39 = v38;
  double v41 = v40;
  id v42 = objc_msgSend(v2, sel_view);
  if (!v42) {
    goto LABEL_26;
  }
  id v43 = v42;
  objc_msgSend(v42, (SEL)&selRef_setShowsVerticalScrollIndicator_);
  CGFloat v45 = v44;
  CGFloat v47 = v46;
  CGFloat v49 = v48;
  CGFloat v51 = v50;

  v57.origin.double x = v45;
  v57.origin.double y = v47;
  v57.size.double width = v49;
  v57.size.double height = v51;
  objc_msgSend(v6, sel_setBounds_, v37, v39, v41, CGRectGetHeight(v57));
LABEL_21:
  uint64_t v52 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = v54;
  *(void *)(v53 + 32) = v52;
  *(void *)(v53 + 4sub_1B5E6F544(4, 0, 0) = a1;
  swift_retain();
  swift_retain();
  sub_1B5F23BF0((uint64_t)sub_1B6032670, v53);
  swift_release();
  swift_release();
}

void sub_1B602EFD8(void *a1)
{
  id v1 = a1;
  MastheadViewController.viewDidLayoutSubviews()();
}

uint64_t sub_1B602F020(void *a1)
{
  id v1 = a1;
  uint64_t v2 = MastheadViewController.preferredStatusBarStyle.getter();

  return v2;
}

uint64_t MastheadViewController.preferredStatusBarStyle.getter()
{
  sub_1B61B0430();
  sub_1B5E68FA8(v6, v7, v8, v9, v10, v11);
  uint64_t v0 = (void *)OUTLINED_FUNCTION_11_29();
  sub_1B5E68FA8(v0, v1, v2, v3, v4, v12);
  return v13;
}

Swift::Void __swiftcall MastheadViewController.viewSafeAreaInsetsDidChange()()
{
  v8.receiver = v0;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, sel_viewSafeAreaInsetsDidChange);
  double v1 = sub_1B602AEC4();
  id v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    uint64_t v3 = v2;
    objc_msgSend(v2, sel_safeAreaInsets);
    double v5 = v4;

    if (v1 != v5)
    {
      sub_1B6031FEC((uint64_t)v0 + qword_1EB64A990, (uint64_t)v6, (unint64_t *)&unk_1EB640B28, (uint64_t)&type metadata for MastheadViewLayoutOptions);
      sub_1B6031FEC((uint64_t)v6, (uint64_t)v7, (unint64_t *)&unk_1EB640B28, (uint64_t)&type metadata for MastheadViewLayoutOptions);
      if (sub_1B603206C((uint64_t)v7) != 1) {
        MastheadViewController.relayout(shouldBustLayoutCache:)(0);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1B602F1CC(void *a1)
{
  id v1 = a1;
  MastheadViewController.viewSafeAreaInsetsDidChange()();
}

Swift::Void __swiftcall MastheadViewController.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  Class isa = a1.value.super.isa;
  v8.receiver = v1;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, sel_traitCollectionDidChange_, isa);
  id v3 = MastheadViewController.navigationItem.getter();
  id v4 = objc_msgSend(v1, sel_traitCollection);
  double v5 = (void *)sub_1B602D9C8((uint64_t)v4);

  objc_msgSend(v3, sel_setTitleView_, v5);
  id v6 = objc_msgSend(v1, sel_view);
  if (v6)
  {
    double v7 = v6;
    objc_msgSend(v6, sel_setNeedsLayout);
  }
  else
  {
    __break(1u);
  }
}

void sub_1B602F2E4(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  v9.is_nil = (char)v6;
  id v7 = v6;
  v9.value.super.Class isa = (Class)a3;
  MastheadViewController.traitCollectionDidChange(_:)(v9);
}

void __swiftcall MastheadViewController.contentScrollView()(UIScrollView_optional *__return_ptr retstr)
{
  void (*v2)(void **__return_ptr, void);
  void *v3;
  void *v4;
  char v5;

  OUTLINED_FUNCTION_8_42();
  OUTLINED_FUNCTION_8_42();
  v2(&v4, *(void *)(v1 + 80));
  id v3 = v4;
  if (v5 == 1)
  {
    if (!ScrollViewProxyManager.currentScrollView.getter()) {
      sub_1B602B848();
    }
    sub_1B5EC6D10(v3, 1);
  }
}

id sub_1B602F42C(void *a1)
{
  id v1 = a1;
  MastheadViewController.contentScrollView()(v2);
  id v4 = v3;

  return v4;
}

Swift::Void __swiftcall MastheadViewController.setEditing(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  BOOL v5 = _;
  BOOL v6 = animated;
  objc_msgSendSuper2(&v7, sel_setEditing_animated_, v5, v6);
  objc_msgSend(*(id *)&v2[qword_1EB644618], sel_setEditing_animated_, v5, v6);
}

void sub_1B602F4EC(void *a1, uint64_t a2, Swift::Bool a3, Swift::Bool a4)
{
  id v6 = a1;
  MastheadViewController.setEditing(_:animated:)(a3, a4);
}

Swift::Void __swiftcall MastheadViewController.scrollViewWillBeginDragging(_:)(UIScrollView *a1)
{
  uint64_t v3 = v1 + qword_1EB644668;
  OUTLINED_FUNCTION_24();
  if (*(void *)(v3 + 24))
  {
    sub_1B602F5AC(a1, (uint64_t)v4);
    sub_1B6032250((uint64_t)v4);
  }
}

uint64_t sub_1B602F5AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  objc_msgSend(a1, sel_contentOffset);
  id v6 = *(void **)&v2[qword_1EB644620];
  objc_msgSend(v6, sel_frame);
  CGRectGetMaxY(v31);
  uint64_t v7 = *(void *)&v2[qword_1EB64A980 + 24];
  uint64_t v8 = *(void *)&v2[qword_1EB64A980 + 32];
  __swift_project_boxed_opaque_existential_1(&v2[qword_1EB64A980], v7);
  UITraitCollection_optional v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  objc_msgSend(v9, sel_frame);
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  CGFloat v17 = v16;

  v32.origin.double x = v11;
  v32.origin.double y = v13;
  v32.size.double width = v15;
  v32.size.double height = v17;
  CGFloat Height = CGRectGetHeight(v32);
  sub_1B60315F8((uint64_t)v3, a1);
  uint64_t v20 = v19;
  sub_1B6031344();
  objc_msgSend(a1, sel_contentOffset);
  uint64_t v22 = v21;
  MastheadViewController.layoutOptions.getter((uint64_t)__src);
  sub_1B602BF38();
  uint64_t v24 = v23;
  id v25 = &v3[qword_1EB64A368];
  swift_beginAccess();
  LOBYTE(v7) = *v25;
  id v26 = a1;
  id v27 = v6;
  sub_1B6031678(v3, (uint64_t)v29);
  memcpy((void *)a2, __src, 0xDAuLL);
  *(void *)(a2 + 224) = 0;
  *(CGFloat *)(a2 + 232) = Height;
  *(void *)(a2 + 24sub_1B5E6F544(4, 0, 0) = v22;
  *(void *)(a2 + 248) = v20;
  *(void *)(a2 + 256) = v26;
  *(void *)(a2 + 264) = v27;
  *(void *)(a2 + 272) = v24;
  *(unsigned char *)(a2 + 28sub_1B5E6F544(4, 0, 0) = v7;
  return sub_1B5E57984((uint64_t)v29, a2 + 288);
}

void sub_1B602F768(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  MastheadViewController.scrollViewWillBeginDragging(_:)(v4);
}

Swift::Void __swiftcall MastheadViewController.scrollViewDidScroll(_:)(UIScrollView *a1)
{
  id v2 = v1;
  [(UIScrollView *)a1 contentSize];
  if (v4 != 0.0 || (OUTLINED_FUNCTION_26_21(), v5 > 0.0))
  {
    uint64_t v6 = (uint64_t)&v1[qword_1EB644668];
    OUTLINED_FUNCTION_24();
    if (*(void *)(v6 + 24))
    {
      sub_1B5E176E4(v6, (uint64_t)v29);
      __swift_project_boxed_opaque_existential_1(v29, v29[3]);
      sub_1B602F5AC(a1, (uint64_t)__src);
      memcpy(v28, __src, 0x141uLL);
      sub_1B5F30E0C(v28);
      sub_1B6032250((uint64_t)__src);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    }
    uint64_t v7 = MastheadViewController.displayOptions.getter();
    double v8 = *(double *)&v7[OBJC_IVAR___TSMastheadDisplayOptions_statusBarMode];
    char v9 = v7[OBJC_IVAR___TSMastheadDisplayOptions_statusBarMode + 8];

    if (v9)
    {
      id v10 = objc_msgSend(v2, sel_navigationController);
      CGFloat v11 = v10;
      if (v10)
      {
        unsigned int v12 = objc_msgSend(v10, sel_isNavigationBarHidden);

        CGFloat v11 = (void *)(v12 ^ 1);
      }
      CGFloat v13 = *(void **)&v2[qword_1EB64A978];
      objc_msgSend(v13, sel_alpha);
      if (v14 != 1.0) {
        objc_msgSend(v13, sel_setAlpha_, 1.0);
      }
      objc_msgSend(v13, sel_setHidden_, v11);
      goto LABEL_22;
    }
    CGFloat v15 = *(void **)&v2[qword_1EB64A978];
    objc_msgSend(v15, sel_frame);
    if (CGRectGetHeight(v31) <= 0.0)
    {
LABEL_22:
      sub_1B602DEF0();
      OUTLINED_FUNCTION_26_21();
      id v25 = &v2[qword_1EB648DE0];
      *(void *)id v25 = v26;
      *((void *)v25 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v27;
      v25[16] = 0;
      return;
    }
    objc_msgSend(v15, sel_frame);
    CGFloat Height = CGRectGetHeight(v32);
    double v17 = v8 - (Height + Height);
    OUTLINED_FUNCTION_26_21();
    if (v18 <= v17)
    {
      objc_msgSend(v15, sel_alpha);
      if (v24 == 0.0)
      {
LABEL_21:
        objc_msgSend(v15, sel_setHidden_, 0);
        goto LABEL_22;
      }
      double v22 = 0.0;
    }
    else
    {
      OUTLINED_FUNCTION_26_21();
      double v20 = v19 - v17;
      objc_msgSend(v15, sel_frame);
      double v21 = fmin(v20 / CGRectGetHeight(v33), 1.0);
      if (v21 < 0.0) {
        double v22 = 0.0;
      }
      else {
        double v22 = v21;
      }
      objc_msgSend(v15, sel_alpha);
      if (v23 == v22) {
        goto LABEL_21;
      }
    }
    objc_msgSend(v15, sel_setAlpha_, v22);
    goto LABEL_21;
  }
}

void sub_1B602FA60(void *a1, uint64_t a2, void *a3)
{
  double v4 = a3;
  id v5 = a1;
  MastheadViewController.scrollViewDidScroll(_:)(v4);
}

void sub_1B602FAC8()
{
}

void sub_1B602FAD0(void *a1)
{
  id v1 = a1;
  sub_1B602FAC8();
}

id MastheadViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  double v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_1B61B20C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void MastheadViewController.init(nibName:bundle:)()
{
}

void sub_1B602FBC0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3) {
    sub_1B61B20F0();
  }
  id v5 = a4;
  MastheadViewController.init(nibName:bundle:)();
}

id sub_1B602FBE8()
{
  return MastheadViewController.pluginView.getter();
}

void sub_1B602FC0C(id *a1)
{
}

void MastheadViewController.displayOptions.setter(void *a1)
{
  id v2 = *(void **)(v1 + qword_1EB644630);
  type metadata accessor for MastheadDisplayOptions();
  id v3 = v2;
  char v4 = sub_1B61B2E10();

  if (v4)
  {
  }
  else
  {
    sub_1B602C5F4(a1);
  }
}

void (*MastheadViewController.displayOptions.modify(id *a1))(void **a1, char a2)
{
  a1[1] = v1;
  *a1 = MastheadViewController.displayOptions.getter();
  return sub_1B602FD28;
}

void sub_1B602FD28(void **a1, char a2)
{
  id v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    MastheadViewController.displayOptions.setter(v3);
  }
  else
  {
    MastheadViewController.displayOptions.setter(v2);
  }
}

Swift::Void __swiftcall MastheadViewController.updateMastheadViewScrollBehavior()()
{
  void (*v3)(void **__return_ptr, void);
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  unsigned int v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  id v13;
  void *v14[5];
  void *v15;

  uint64_t v1 = v0;
  OUTLINED_FUNCTION_8_42();
  OUTLINED_FUNCTION_8_42();
  v3(&v15, *(void *)(v2 + 80));
  char v4 = v15;
  float64x2_t v14[3] = (void *)type metadata accessor for MastheadViewScrollAnimator();
  v14[4] = &off_1F0F083F8;
  v14[0] = (void *)swift_allocObject();
  id v5 = (uint64_t)&v0[qword_1EB644668];
  OUTLINED_FUNCTION_33_0();
  sub_1B6032298((uint64_t)v14, v5);
  swift_endAccess();
  uint64_t v6 = objc_msgSend(v1, sel_navigationController);
  if (v6)
  {
    id v7 = v6;
    double v8 = objc_msgSend(v6, sel_isNavigationBarHidden);

    char v9 = v8 ^ 1;
  }
  else
  {
    char v9 = 0;
  }
  id v10 = *(char **)&v1[qword_1EB64A978];
  objc_msgSend(v10, sel_setHidden_, v9);
  CGFloat v11 = *(void **)&v10[OBJC_IVAR____TtC5TeaUI17BlurStatusBarView_barView];
  v14[0] = v4;
  unsigned int v12 = v11;
  CGFloat v13 = v4;
  BarView.style.setter(v14);
}

id MastheadViewController.scrollView.getter()
{
  void (*v1)(void **__return_ptr, void);
  void *v2;
  id v3;
  uint64_t v5;
  void *v6;
  char v7;

  OUTLINED_FUNCTION_8_42();
  OUTLINED_FUNCTION_8_42();
  v1(&v6, *(void *)(v0 + 80));
  uint64_t v2 = v6;
  if (v7 == 1)
  {
    OUTLINED_FUNCTION_24();
    swift_retain();
    sub_1B61B0430();
    swift_release();
    if (v5)
    {
      sub_1B5EC6D10(v2, 1);
      return (id)v5;
    }
    else
    {
      id v3 = sub_1B602B848();
      sub_1B5EC6D10(v2, 1);
      return v3;
    }
  }
  return v2;
}

Swift::Void __swiftcall MastheadViewController.setMastheadHidden(_:)(Swift::Bool a1)
{
  objc_msgSend(*(id *)(v1 + qword_1EB644620), sel_setHidden_, a1);
  sub_1B602C22C(0);
}

uint64_t (*sub_1B6030050(id **a1))()
{
  uint64_t v2 = (id *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = MastheadViewController.displayOptions.modify(v2);
  return sub_1B5E966FC;
}

uint64_t (*sub_1B60300B0(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = MastheadViewController.pluginPinningEnabled.modify();
  return sub_1B5E966FC;
}

uint64_t (*sub_1B6030114(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = MastheadViewController.plugin.modify((uint64_t)v2);
  return sub_1B5E966FC;
}

void MastheadViewController.cardViewAnimationCoordinator(_:willTransitionTo:)(uint64_t a1, unsigned __int8 *a2)
{
  char v4 = (void *)*a2;
  OUTLINED_FUNCTION_24_22();
  if (dynamic_cast_existential_1_conditional((uint64_t)v2))
  {
    OUTLINED_FUNCTION_15_28();
    OUTLINED_FUNCTION_13_28();
    id v5 = *(void (**)(uint64_t))(v3 + 8);
    id v6 = v2;
    uint64_t v7 = OUTLINED_FUNCTION_2_93();
    v5(v7);
  }
}

void MastheadViewController.cardViewAnimationCoordinator(_:didTransitionTo:)(uint64_t a1, unsigned __int8 *a2)
{
  char v4 = (void *)*a2;
  OUTLINED_FUNCTION_24_22();
  if (dynamic_cast_existential_1_conditional((uint64_t)v2))
  {
    OUTLINED_FUNCTION_15_28();
    OUTLINED_FUNCTION_13_28();
    id v5 = *(void (**)(uint64_t))(v3 + 16);
    id v6 = v2;
    uint64_t v7 = OUTLINED_FUNCTION_2_93();
    v5(v7);
  }
}

{
  void *v2;
  uint64_t v3;
  void *v4;
  void (*v5)(uint64_t);
  id v6;
  uint64_t v7;

  char v4 = (void *)*a2;
  OUTLINED_FUNCTION_24_22();
  if (dynamic_cast_existential_1_conditional((uint64_t)v2))
  {
    OUTLINED_FUNCTION_15_28();
    OUTLINED_FUNCTION_13_28();
    id v5 = *(void (**)(uint64_t))(v3 + 40);
    id v6 = v2;
    uint64_t v7 = OUTLINED_FUNCTION_2_93();
    v5(v7);
  }
}

void MastheadViewController.cardViewAnimationCoordinator(_:willTransitionTo:usingTimingParameters:)(uint64_t a1, char *a2, uint64_t a3)
{
  char v6 = *a2;
  uint64_t v7 = *(void **)(v3 + qword_1EB644618);
  swift_getObjectType();
  if (dynamic_cast_existential_1_conditional((uint64_t)v7))
  {
    uint64_t v9 = v8;
    uint64_t ObjectType = swift_getObjectType();
    char v13 = v6;
    CGFloat v11 = *(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t))(v9 + 32);
    id v12 = v7;
    v11(a1, &v13, a3, ObjectType, v9);
  }
}

void MastheadViewController.cardViewAnimationCoordinator(_:didDragTo:)(uint64_t a1, double a2)
{
  OUTLINED_FUNCTION_24_22();
  if (dynamic_cast_existential_1_conditional((uint64_t)v2))
  {
    uint64_t v6 = OUTLINED_FUNCTION_15_28();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, double))(v3 + 48);
    id v8 = v2;
    v7(a1, v6, v3, a2);
  }
}

Swift::Void __swiftcall MastheadViewController.proxy(to:)(UIScrollView *to)
{
  uint64_t v2 = v1;
  sub_1B602A8E4(&qword_1EB6418A0, (void (*)(long long *, unsigned char *))sub_1B5E30E70, (uint64_t)&v10);
  if (v11)
  {
    sub_1B5E30E70(&v10, (uint64_t)v12);
    uint64_t v4 = v13;
    uint64_t v5 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    (*(void (**)(UIScrollView *, uint64_t, uint64_t))(v5 + 8))(to, v4, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    sub_1B6032740((uint64_t)&v10, &qword_1EB6418A8, (uint64_t)&qword_1EB6418A0, (uint64_t)&protocol descriptor for GutterViewProxying);
  }
  sub_1B602DAC0(to, v12);
  uint64_t v6 = v1 + qword_1EB644640;
  OUTLINED_FUNCTION_33_0();
  sub_1B5F0FFFC((uint64_t)v12, v6);
  swift_endAccess();
  id v7 = objc_msgSend(*(id *)(v2 + qword_1EB644618), sel_view);
  if (v7)
  {
    id v8 = v7;
    objc_msgSend(v7, sel_layoutIfNeeded);

    sub_1B602C22C(1);
    id v9 = OUTLINED_FUNCTION_9_42();
    if (v9)
    {

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t MastheadViewController<>.identifier.getter()
{
  return sub_1B61B02A0();
}

uint64_t sub_1B60306C0()
{
  return MastheadViewController<>.identifier.getter();
}

uint64_t MastheadViewController<>.tabBarNavigationBarVisiblity.getter(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(a1 + 16))(*(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x50), a1);
}

uint64_t sub_1B603075C(uint64_t a1, uint64_t a2)
{
  return MastheadViewController<>.tabBarNavigationBarVisiblity.getter(*(void *)(a2 - 8));
}

uint64_t MastheadViewController<>.tabBarSplitViewPresentation(for:)(char a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void, uint64_t))(a2 + 8))(a1 & 1, *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x50), a2);
}

uint64_t sub_1B60307FC(char a1, uint64_t a2, uint64_t a3)
{
  return MastheadViewController<>.tabBarSplitViewPresentation(for:)(a1 & 1, *(void *)(a3 - 8));
}

id MastheadViewController.responder.getter()
{
  return OUTLINED_FUNCTION_3_4(qword_1EB644618);
}

uint64_t sub_1B6030838()
{
  return MastheadViewController.navigationItemStyle.getter();
}

void MastheadViewController.plugin(_:didResizePluginModel:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v4 = *(void *)(a1 + 24);
  uint64_t v6 = (uint64_t *)(v2 + qword_1EB6422F0);
  OUTLINED_FUNCTION_24();
  uint64_t v7 = *v6;
  if (*v6
    && (v5 == *(void *)(v7 + 16) ? (BOOL v8 = v4 == *(void *)(v7 + 24)) : (BOOL v8 = 0), v8 || (sub_1B61B3760() & 1) != 0))
  {
    if (qword_1EB641888 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1B61B1020();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EB654AF0);
    swift_retain_n();
    swift_retain();
    long long v10 = sub_1B61B1000();
    os_log_type_t v11 = sub_1B61B2BA0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315394;
      sub_1B61B1F70();
      *(void *)&long long v20 = sub_1B5EA6A1C(v5, v4, &v21);
      sub_1B61B2FB0();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v12 + 12) = 2080;
      long long v20 = *(_OWORD *)(a2 + 56);
      type metadata accessor for CGSize(0);
      uint64_t v13 = sub_1B61B2160();
      *(void *)&long long v20 = sub_1B5EA6A1C(v13, v14, &v21);
      sub_1B61B2FB0();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1B5DE7000, v10, v11, "Requesting a relayout for plugin, identifier=%s, newSize=%s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_7_2();
    }
    else
    {
      swift_release();
      swift_release_n();
    }

    uint64_t v19 = swift_retain();
    sub_1B602BEDC(v19);
    sub_1B602EBB4(a2);
  }
  else
  {
    if (qword_1EB641888 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1B61B1020();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EB654AF0);
    swift_retain();
    double v16 = sub_1B61B1000();
    os_log_type_t v17 = sub_1B61B2B80();
    if (os_log_type_enabled(v16, v17))
    {
      double v18 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v20 = swift_slowAlloc();
      *(_DWORD *)double v18 = 136315138;
      sub_1B61B1F70();
      uint64_t v21 = sub_1B5EA6A1C(v5, v4, (uint64_t *)&v20);
      sub_1B61B2FB0();
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl(&dword_1B5DE7000, v16, v17, "Unexpected resize request from plugin identifier=%s", v18, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_7_2();
      OUTLINED_FUNCTION_7_2();
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t MastheadViewController.canShowStatusBanner.getter()
{
  uint64_t v1 = *(void **)(v0 + qword_1EB644618);
  swift_getObjectType();
  uint64_t result = dynamic_cast_existential_1_conditional((uint64_t)v1);
  if (result)
  {
    uint64_t v4 = v3;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 16);
    id v7 = v1;
    char v8 = v6(ObjectType, v4);

    return v8 & 1;
  }
  return result;
}

Swift::Void __swiftcall MastheadViewController.onStatusBannerTap()()
{
  uint64_t v1 = *(void **)(v0 + qword_1EB644618);
  swift_getObjectType();
  if (dynamic_cast_existential_1_conditional((uint64_t)v1))
  {
    uint64_t v3 = v2;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 24);
    id v6 = v1;
    v5(ObjectType, v3);
  }
}

id sub_1B6030D84()
{
  uint64_t v1 = v0;
  uint64_t v2 = *MEMORY[0x1E4FBC8C8] & *(void *)v0;
  MastheadViewController.layoutOptions.getter((uint64_t)__src);
  memcpy(__dst, __src, 0xDAuLL);
  nullsub_1(__dst, v3, v4, v5, v6);
  uint64_t v7 = (uint64_t)&v0[qword_1EB64A990];
  sub_1B6031FEC((uint64_t)&v0[qword_1EB64A990], (uint64_t)v81, (unint64_t *)&unk_1EB640B28, (uint64_t)&type metadata for MastheadViewLayoutOptions);
  sub_1B6031FEC((uint64_t)__dst, (uint64_t)v78, (unint64_t *)&unk_1EB640B28, (uint64_t)&type metadata for MastheadViewLayoutOptions);
  sub_1B6031FEC((uint64_t)v81, (uint64_t)v82, (unint64_t *)&unk_1EB640B28, (uint64_t)&type metadata for MastheadViewLayoutOptions);
  if (sub_1B603206C((uint64_t)v82) == 1)
  {
    memcpy(v75, v78, 0xDAuLL);
    sub_1B6032084((uint64_t)__src);
    sub_1B6032084((uint64_t)__src);
    sub_1B60320B8((uint64_t)v75);
    sub_1B6031FEC((uint64_t)__dst, (uint64_t)v76, (unint64_t *)&unk_1EB640B28, (uint64_t)&type metadata for MastheadViewLayoutOptions);
    sub_1B6031FEC((uint64_t)v81, (uint64_t)&v77, (unint64_t *)&unk_1EB640B28, (uint64_t)&type metadata for MastheadViewLayoutOptions);
    sub_1B60320EC((uint64_t)v76);
  }
  else
  {
    sub_1B6031FEC((uint64_t)v81, (uint64_t)v75, (unint64_t *)&unk_1EB640B28, (uint64_t)&type metadata for MastheadViewLayoutOptions);
    memcpy(v74, v75, 0xDAuLL);
    sub_1B6032084((uint64_t)__src);
    sub_1B6032084((uint64_t)__src);
    char v8 = static MastheadViewLayoutOptions.== infix(_:_:)((uint64_t)v78, (uint64_t)v74);
    memcpy(v76, v78, 0xDAuLL);
    sub_1B60320B8((uint64_t)v76);
    sub_1B60320B8((uint64_t)__src);
    if (v8) {
      goto LABEL_5;
    }
  }
  uint64_t v9 = *(void *)&v1[qword_1EB64A980 + 24];
  uint64_t v10 = *(void *)&v1[qword_1EB64A980 + 32];
  __swift_project_boxed_opaque_existential_1(&v1[qword_1EB64A980], v9);
  memcpy(v76, __src, 0xDAuLL);
  (*(void (**)(unsigned char *, void, void, uint64_t, uint64_t))(v10 + 32))(v76, *(void *)&v1[qword_1EB644618], *(void *)(v2 + 88), v9, v10);
  sub_1B6031FEC(v7, (uint64_t)v76, (unint64_t *)&unk_1EB640B28, (uint64_t)&type metadata for MastheadViewLayoutOptions);
  sub_1B6031FEC((uint64_t)__dst, v7, (unint64_t *)&unk_1EB640B28, (uint64_t)&type metadata for MastheadViewLayoutOptions);
  sub_1B6032084((uint64_t)__src);
  sub_1B6031D24((uint64_t)v76);
LABEL_5:
  os_log_type_t v11 = *(void **)&v1[qword_1EB644620];
  id result = objc_msgSend(v1, sel_view);
  if (result)
  {
    uint64_t v13 = result;
    objc_msgSend(result, sel_bounds);
    CGFloat v15 = v14;
    CGFloat v17 = v16;
    CGFloat v19 = v18;
    CGFloat v21 = v20;

    v83.origin.double x = v15;
    v83.origin.double y = v17;
    v83.size.double width = v19;
    v83.size.double height = v21;
    double Width = CGRectGetWidth(v83);
    double v23 = &v1[qword_1EB64A980];
    uint64_t v24 = *(void *)&v1[qword_1EB64A980 + 24];
    uint64_t v25 = *(void *)&v1[qword_1EB64A980 + 32];
    __swift_project_boxed_opaque_existential_1(&v1[qword_1EB64A980], v24);
    uint64_t v26 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25);
    objc_msgSend(v26, sel_bounds);
    CGFloat v28 = v27;
    CGFloat v30 = v29;
    CGFloat v32 = v31;
    CGFloat v34 = v33;

    v84.origin.double x = v28;
    v84.origin.double y = v30;
    v84.size.double width = v32;
    v84.size.double height = v34;
    double Height = CGRectGetHeight(v84);
    sub_1B602BF38();
    objc_msgSend(v11, sel_setFrame_, 0.0, 0.0, Width, Height + v36);
    double v37 = *(void **)&v1[qword_1EB64B898];
    uint64_t v38 = *((void *)v23 + 3);
    uint64_t v39 = *((void *)v23 + 4);
    __swift_project_boxed_opaque_existential_1(v23, v38);
    uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8))(v38, v39);
    objc_msgSend((id)v40, sel_frame);
    CGFloat v42 = v41;
    CGFloat v44 = v43;
    CGFloat v46 = v45;
    CGFloat v48 = v47;

    v85.origin.double x = v42;
    v85.origin.double y = v44;
    v85.size.double width = v46;
    v85.size.double height = v48;
    double MaxY = CGRectGetMaxY(v85);
    double v50 = sub_1B602BF38();
    objc_msgSend(v37, sel_setFrame_, 0.0, MaxY, v50, v51);
    uint64_t v52 = MastheadViewController.displayOptions.getter();
    LOBYTE(v4sub_1B5E6F544(4, 0, 0) = v52[OBJC_IVAR___TSMastheadDisplayOptions_statusBarMode + 8];

    if ((v40 & 1) == 0)
    {
      long long v61 = *(void **)&v1[qword_1EB644618];
      objc_msgSend(v61, sel_additionalSafeAreaInsets);
      if (v65 != *MEMORY[0x1E4FB2848]
        || v62 != *(double *)(MEMORY[0x1E4FB2848] + 8)
        || v63 != *(double *)(MEMORY[0x1E4FB2848] + 16)
        || v64 != *(double *)(MEMORY[0x1E4FB2848] + 24))
      {
        objc_msgSend(v61, sel_setAdditionalSafeAreaInsets_);
      }
      objc_msgSend(*(id *)&v1[qword_1EB64A978], sel_setHidden_, 1);
      goto LABEL_36;
    }
    if (objc_msgSend(v11, sel_isHidden))
    {
      uint64_t v53 = *(void **)&v1[qword_1EB644618];
      objc_msgSend(v53, sel_additionalSafeAreaInsets);
      if (v57 == *MEMORY[0x1E4FB2848]
        && v54 == *(double *)(MEMORY[0x1E4FB2848] + 8)
        && v55 == *(double *)(MEMORY[0x1E4FB2848] + 16)
        && v56 == *(double *)(MEMORY[0x1E4FB2848] + 24))
      {
        goto LABEL_36;
      }
    }
    else
    {
      objc_msgSend(v11, sel_bounds);
      CGFloat v69 = CGRectGetHeight(v86) - __src[9];
      uint64_t v53 = *(void **)&v1[qword_1EB644618];
      objc_msgSend(v53, sel_additionalSafeAreaInsets);
      if (v73 == v69 && v70 == 0.0 && v71 == 0.0 && v72 == 0.0) {
        goto LABEL_36;
      }
    }
    objc_msgSend(v53, sel_setAdditionalSafeAreaInsets_);
LABEL_36:
    sub_1B6031344();
    return (id)sub_1B60320B8((uint64_t)__src);
  }
  __break(1u);
  return result;
}

void sub_1B6031344()
{
  id v13 = MastheadViewController.scrollView.getter();
  self;
  uint64_t v1 = (void *)swift_dynamicCastObjCClass();
  if (v1)
  {
    id v18 = objc_msgSend(v1, sel_collectionViewLayout);
    sub_1B5DFF760(0, (unint64_t *)&qword_1EB649990);
    sub_1B5E00AB8(0, (unint64_t *)&qword_1EB649540);
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v16 = 0;
      long long v14 = 0u;
      long long v15 = 0u;

      sub_1B6032740((uint64_t)&v14, &qword_1E9DAB5D0, (uint64_t)&qword_1EB649540, (uint64_t)&protocol descriptor for MastheadDyamicAwareObserver);
      return;
    }
    sub_1B5E30E70(&v14, (uint64_t)v19);
    sub_1B6031DF0((uint64_t)&v0[qword_1EB644608], (uint64_t)&v14);
    uint64_t v2 = *((void *)&v15 + 1);
    if (*((void *)&v15 + 1))
    {
      uint64_t v3 = v16;
      __swift_project_boxed_opaque_existential_1(&v14, *((uint64_t *)&v15 + 1));
      id v4 = objc_msgSend(v0, sel_view);
      if (!v4)
      {
        __break(1u);
        return;
      }
      uint64_t v5 = v4;
      id v6 = objc_msgSend(v4, sel_traitCollection);

      double v7 = (*(double (**)(id, uint64_t, uint64_t))(v3 + 48))(v6, v2, v3);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v14);
    }
    else
    {
      sub_1B6032740((uint64_t)&v14, &qword_1EB645C50, (uint64_t)&unk_1EB645C48, (uint64_t)&protocol descriptor for MiniMastheadViewProviderType);
      double v7 = 0.0;
    }
    char v8 = &v0[qword_1EB64A368];
    swift_beginAccess();
    double v9 = 0.0;
    if (*v8 == 1)
    {
      sub_1B602BF38();
      double v9 = v10;
    }
    uint64_t v11 = v20;
    uint64_t v12 = v21;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    MastheadViewController.layoutOptions.getter((uint64_t)&v14);
    sub_1B60320B8((uint64_t)&v14);
    (*(void (**)(uint64_t, uint64_t, double))(v12 + 16))(v11, v12, v7 + v9 + v17);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
  else
  {
  }
}

void sub_1B60315F8(uint64_t a1, void *a2)
{
  uint64_t v3 = MastheadViewController.displayOptions.getter();
  char v4 = v3[OBJC_IVAR___TSMastheadDisplayOptions_statusBarMode + 8];

  if ((v4 & 1) == 0) {
    objc_msgSend(a2, sel_contentOffset);
  }
}

void sub_1B6031678(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = *(void **)&a1[qword_1EB644618];
  id v5 = objc_msgSend(v4, sel_navigationItem);
  id v6 = objc_msgSend(v5, sel_searchController);

  uint64_t v7 = 0;
  if (v6 && (id v8 = objc_msgSend(a1, sel_navigationController)) != 0)
  {
    double v9 = v8;
    objc_msgSend(v8, sel__expectedContentInsetDeltaForViewController_, v4);
    uint64_t v7 = v10;
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    uint64_t v16 = v15;

    char v17 = 0;
  }
  else
  {
    char v17 = 1;
    uint64_t v12 = 0;
    uint64_t v14 = 0;
    uint64_t v16 = 0;
  }
  *(void *)a2 = v7;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v14;
  *(void *)(a2 + 24) = v16;
  *(unsigned char *)(a2 + 32) = v17;
}

void sub_1B6031774(uint64_t a1, char a2)
{
  char v3 = *(unsigned char *)(a1 + 8);
  id v16 = MastheadViewController.scrollView.getter();
  objc_msgSend(v16, sel_adjustedContentInset);
  double v5 = -v4;
  objc_msgSend(v16, sel_contentOffset);
  double v7 = v6;
  objc_msgSend(v16, sel_contentInset);
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;
  double v14 = 0.0;
  if ((v3 & 1) == 0) {
    double v14 = -sub_1B602AEC4();
  }
  objc_msgSend(v16, sel_setContentInset_, v14, v9, v11, v13);
  if (v7 == v5)
  {
    if ((a2 & 1) == 0)
    {
      objc_msgSend(v16, sel_adjustedContentInset);
      objc_msgSend(v16, sel_setContentOffset_animated_, 0, 0.0, -v15);
      goto LABEL_8;
    }
  }
  else if ((a2 & 1) == 0)
  {
    goto LABEL_8;
  }
  sub_1B6031888();
LABEL_8:
}

void sub_1B6031888()
{
  uint64_t v1 = (double *)&v0[qword_1EB648DE0];
  if ((v0[qword_1EB648DE0 + 16] & 1) == 0)
  {
    uint64_t v2 = v0;
    double v3 = v1[1];
    sub_1B602BF38();
    if (v4 > 0.0)
    {
      double v27 = (UIScrollView *)MastheadViewController.scrollView.getter();
      [(UIScrollView *)v27 adjustedContentInset];
      double v6 = v5;
      id v7 = objc_msgSend(v0, sel_view);
      if (v7)
      {
        double v8 = v7;
        objc_msgSend(v7, sel_safeAreaInsets);
        double v10 = v9;

        double v11 = v6 + v10;
        uint64_t v12 = *(void *)&v2[qword_1EB64A980 + 24];
        uint64_t v13 = *(void *)&v2[qword_1EB64A980 + 32];
        __swift_project_boxed_opaque_existential_1(&v2[qword_1EB64A980], v12);
        double v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
        objc_msgSend(v14, sel_frame);
        CGFloat v16 = v15;
        CGFloat v18 = v17;
        CGFloat v20 = v19;
        CGFloat v22 = v21;

        v29.origin.double x = v16;
        v29.origin.double y = v18;
        v29.size.double width = v20;
        v29.size.double height = v22;
        double v23 = -(v11 - CGRectGetMaxY(v29));
        if (v3 <= v23) {
          double v24 = v3;
        }
        else {
          double v24 = v23;
        }
        -[UIScrollView setContentOffset:animated:](v27, sel_setContentOffset_animated_, 0, 0.0, v24);
        [(UIScrollView *)v27 contentOffset];
        *(void *)uint64_t v1 = v25;
        *((void *)v1 + MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = v26;
        *((unsigned char *)v1 + 16) = 0;
        MastheadViewController.scrollViewDidScroll(_:)(v27);
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_1B6031A48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1BA9B1EC0](v3);
  if (v4)
  {
    double v5 = (char *)v4;
    uint64_t v6 = swift_retain();
    sub_1B602BEDC(v6);
    if (qword_1EB641888 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1B61B1020();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EB654AF0);
    swift_retain_n();
    double v8 = sub_1B61B1000();
    os_log_type_t v9 = sub_1B61B2B70();
    if (os_log_type_enabled(v8, v9))
    {
      double v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v21 = v11;
      *(_DWORD *)double v10 = 136315138;
      long long v20 = *(_OWORD *)(a1 + 56);
      type metadata accessor for CGSize(0);
      uint64_t v12 = sub_1B61B2160();
      *(void *)&long long v20 = sub_1B5EA6A1C(v12, v13, &v21);
      sub_1B61B2FB0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B5DE7000, v8, v9, "Masthead plugin performed relayout, newSize=%s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BA9B1D70](v11, -1, -1);
      MEMORY[0x1BA9B1D70](v10, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    double v14 = *(double *)(a1 + 56);
    double v15 = *(double *)(a1 + 64);
    objc_msgSend(*(id *)&v5[qword_1EB64B898], sel_setFrame_, 0.0, 0.0, v14, v15, v20, v21);
    id v16 = PluginModel.viewController.getter();
    id v17 = objc_msgSend(v16, sel_view);

    if (v17)
    {
      objc_msgSend(v17, sel_setFrame_, 0.0, 0.0, v14, v15);

      id v18 = PluginModel.viewController.getter();
      id v19 = objc_msgSend(v18, sel_view);

      if (v19)
      {
        objc_msgSend(v19, sel_layoutIfNeeded);

        sub_1B602C22C(0);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_1B6031D1C(void *a1)
{
}

uint64_t sub_1B6031D24(uint64_t a1)
{
  sub_1B6031DA0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void **)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void **)(a1 + 184));
  return a1;
}

void sub_1B6031DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24)
{
  if (a9)
  {
  }
}

uint64_t sub_1B6031DF0(uint64_t a1, uint64_t a2)
{
  sub_1B6031E80(0, &qword_1EB645C50, (uint64_t)&unk_1EB645C48, (uint64_t)&protocol descriptor for MiniMastheadViewProviderType, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B5E00AB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1B6031E80(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1B61B2F80();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1B6031EDC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B6031F14(uint64_t a1)
{
  return sub_1B602CD0C(a1, *(void *)(v1 + 32));
}

void sub_1B6031F20()
{
  if (!qword_1EB647D98)
  {
    sub_1B6031FA0(255, (unint64_t *)&qword_1EB64CAC0, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1B61B36F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB647D98);
    }
  }
}

void sub_1B6031FA0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1B6031FEC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1B6031FA0(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1B603206C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(vMemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_1B6032084(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 184);
  id v3 = *(id *)(a1 + 64);
  id v4 = v2;
  return a1;
}

uint64_t sub_1B60320B8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 64);

  return a1;
}

uint64_t sub_1B60320EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 232);
  uint64_t v18 = *(void *)(a1 + 224);
  uint64_t v3 = *(void *)(a1 + 240);
  uint64_t v4 = *(void *)(a1 + 248);
  uint64_t v5 = *(void *)(a1 + 256);
  uint64_t v6 = *(void *)(a1 + 264);
  uint64_t v7 = *(void *)(a1 + 272);
  uint64_t v8 = *(void *)(a1 + 280);
  long long v16 = *(_OWORD *)(a1 + 304);
  long long v17 = *(_OWORD *)(a1 + 288);
  long long v14 = *(_OWORD *)(a1 + 336);
  long long v15 = *(_OWORD *)(a1 + 320);
  long long v12 = *(_OWORD *)(a1 + 368);
  long long v13 = *(_OWORD *)(a1 + 352);
  long long v10 = *(_OWORD *)(a1 + 400);
  long long v11 = *(_OWORD *)(a1 + 384);
  sub_1B6031DA0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void **)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void **)(a1 + 184));
  sub_1B6031DA0(v18, v2, v3, v4, v5, v6, v7, v8, (void *)v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12,
    *((uint64_t *)&v12 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((void **)&v10 + 1));
  return a1;
}

uint64_t sub_1B6032250(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 64);
  uint64_t v3 = *(void **)(a1 + 184);
  uint64_t v4 = *(void **)(a1 + 256);

  return a1;
}

uint64_t sub_1B6032298(uint64_t a1, uint64_t a2)
{
  sub_1B6031E80(0, qword_1EB644FE8, (uint64_t)&unk_1EB644FE0, (uint64_t)&protocol descriptor for MastheadViewAnimatorType, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B5E00AB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B6032328(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

id sub_1B603238C@<X0>(void *a1@<X8>)
{
  id result = MastheadViewController.displayOptions.getter();
  *a1 = result;
  return result;
}

uint64_t dispatch thunk of MastheadViewControllerType.updateMastheadViewScrollBehavior()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MastheadViewControllerType.displayOptions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MastheadViewControllerType.displayOptions.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of MastheadViewControllerType.displayOptions.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of MastheadViewControllerType.pluginPinningEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MastheadViewControllerType.pluginPinningEnabled.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of MastheadViewControllerType.pluginPinningEnabled.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of MastheadViewControllerType.pluginView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of MastheadViewControllerType.plugin.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of MastheadViewControllerType.plugin.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of MastheadViewControllerType.plugin.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of MastheadViewControllerType.scrollView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of MastheadViewControllerType.navigationItem.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of MastheadViewControllerType.contentHeight.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of MastheadViewControllerType.setMastheadHidden(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of MastheadViewControllerType.relayout(shouldBustLayoutCache:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of MastheadViewControllerType.viewProvider.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of MastheadViewControllerType.layoutOptions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t sub_1B603252C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for MastheadViewController()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for MastheadViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MastheadViewController);
}

uint64_t dispatch thunk of MastheadViewController.__allocating_init(rootViewController:viewProvider:miniMastheadViewProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t sub_1B6032630()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1B6032670(uint64_t a1)
{
  sub_1B6031A48(a1, *(void *)(v1 + 32));
}

void sub_1B603267C()
{
  if (!qword_1EB64B250)
  {
    sub_1B5EAE0C4();
    unint64_t v0 = sub_1B61B34B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB64B250);
    }
  }
}

void sub_1B60326E0(uint64_t a1, char a2)
{
  sub_1B602AA74(a1, a2, *(id *)(v2 + 16), *(uint64_t **)(v2 + 24));
}

uint64_t sub_1B60326FC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1B6032734(uint64_t a1)
{
  sub_1B602BF5C(a1, *(void *)(v1 + 32));
}

uint64_t sub_1B6032740(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  sub_1B6031E80(0, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B5E00AB8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_1B60327B0(uint64_t a1, char a2)
{
  sub_1B602AA74(a1, a2, *(id *)(v2 + 16), *(uint64_t **)(v2 + 24));
}

uint64_t ProcessedImageRequest.__allocating_init(assetHandle:size:imageRenderingMode:userInterfaceStyle:)(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  char v9 = a4 & 1;
  uint64_t v10 = swift_allocObject();
  ProcessedImageRequest.init(assetHandle:size:imageRenderingMode:userInterfaceStyle:)(a1, a2, a3, v9, a5);
  return v10;
}

uint64_t ProcessedImageRequest.assetHandles.getter()
{
  return sub_1B61B1F70();
}

uint64_t ProcessedImageRequest.cacheIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_1B61B1F70();
  return v1;
}

uint64_t ProcessedImageRequest.size.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t ProcessedImageRequest.imageRenderingMode.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t ProcessedImageRequest.init(assetHandle:size:imageRenderingMode:userInterfaceStyle:)(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  char v10 = a4 & 1;
  sub_1B5EDC044();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B61BE690;
  *(void *)(inited + 32) = 0x6567616D69;
  *(void *)(inited + 4sub_1B5E6F544(4, 0, 0) = 0xE500000000000000;
  sub_1B5E176E4((uint64_t)a1, inited + 48);
  sub_1B5EDC104();
  *(void *)(v5 + 16) = sub_1B61B1F50();
  uint64_t v12 = sub_1B6032988(a2, a3, v10, a1);
  uint64_t v14 = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(void *)(v5 + 24) = v12;
  *(void *)(v5 + 32) = v14;
  *(void *)(v5 + 4sub_1B5E6F544(4, 0, 0) = a2;
  *(void *)(v5 + 48) = a3;
  *(unsigned char *)(v5 + 56) = v10;
  *(void *)(v5 + 64) = a5;
  return v5;
}

uint64_t sub_1B6032988(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  sub_1B6032AD4(a1, a2, a3 & 1);
  uint64_t v5 = a4[3];
  uint64_t v6 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  type metadata accessor for RenderingMode(0);
  sub_1B61B3440();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  sub_1B61B36E0();
  _s5TeaUI23SharingPlainTextBuilderV12appendStrongyySSF_0();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1B6032AD4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return 0x64657A69736E75;
  }
  type metadata accessor for CGSize(0);
  sub_1B61B3440();
  return 0;
}

uint64_t ProcessedImageRequest.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ProcessedImageRequest.__deallocating_deinit()
{
  ProcessedImageRequest.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B6032BA4()
{
  return ProcessedImageRequest.assetHandles.getter();
}

uint64_t sub_1B6032BC8()
{
  return ProcessedImageRequest.cacheIdentifier.getter();
}

uint64_t dispatch thunk of ProcessedImageRequestType.assetHandles.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ProcessedImageRequestType.cacheIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for ProcessedImageRequest()
{
  return self;
}

uint64_t method lookup function for ProcessedImageRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ProcessedImageRequest);
}

uint64_t dispatch thunk of ProcessedImageRequest.__allocating_init(assetHandle:size:imageRenderingMode:userInterfaceStyle:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v4 + 112))(a1, a2, a3, a4 & 1);
}

uint64_t KeyCommandScrollExclusionProvider.invalidator.getter()
{
  OUTLINED_FUNCTION_0();
  return MEMORY[0x1BA9B1EC0](v0 + 16);
}

uint64_t KeyCommandScrollExclusionProvider.invalidator.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_9_15();
  *(void *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*KeyCommandScrollExclusionProvider.invalidator.modify(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  OUTLINED_FUNCTION_6_2();
  uint64_t v4 = MEMORY[0x1BA9B1EC0](v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  long long v3[3] = v4;
  v3[4] = v5;
  return sub_1B5EBFE40;
}

uint64_t KeyCommandScrollExclusionProvider.delegate.getter()
{
  OUTLINED_FUNCTION_0();
  return MEMORY[0x1BA9B1EC0](v0 + 32);
}

uint64_t KeyCommandScrollExclusionProvider.delegate.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_9_15();
  *(void *)(v2 + 4sub_1B5E6F544(4, 0, 0) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*KeyCommandScrollExclusionProvider.delegate.modify(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  OUTLINED_FUNCTION_6_2();
  uint64_t v4 = MEMORY[0x1BA9B1EC0](v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  long long v3[3] = v4;
  v3[4] = v5;
  return sub_1B5FB89A4;
}

uint64_t KeyCommandScrollExclusionProvider.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  KeyCommandScrollExclusionProvider.init()();
  return v0;
}

uint64_t KeyCommandScrollExclusionProvider.init()()
{
  *(void *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 4sub_1B5E6F544(4, 0, 0) = 0;
  swift_unknownObjectWeakInit();
  return v0;
}

uint64_t KeyCommandScrollExclusionProvider.register(in:)()
{
  sub_1B61B20F0();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  uint64_t v1 = OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_12_2(v1);
  sub_1B5E460D4();
  swift_unownedRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B61B20F0();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  uint64_t v2 = OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_12_2(v2);
  OUTLINED_FUNCTION_4_75();
  sub_1B5E460D4();
  swift_unownedRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B61B20F0();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  uint64_t v3 = OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_12_2(v3);
  sub_1B5E460D4();
  swift_unownedRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B61B20F0();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  *(void *)(OUTLINED_FUNCTION_43_0() + 16) = v0;
  sub_1B5E460D4();
  swift_unownedRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B61B20F0();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  uint64_t v4 = OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_12_2(v4);
  OUTLINED_FUNCTION_4_75();
  sub_1B5E460D4();
  swift_unownedRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B61B20F0();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  *(void *)(OUTLINED_FUNCTION_43_0() + 16) = v0;
  sub_1B5E460D4();
  swift_unownedRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B603325C()
{
  swift_unownedRelease();
  return swift_deallocObject();
}

uint64_t sub_1B6033294()
{
  return sub_1B60332BC(*(void *)(v0 + 16), MEMORY[0x1E4FB2B98], 0);
}

uint64_t sub_1B60332BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_unownedRetainStrong() + 32;
  swift_beginAccess();
  if (!MEMORY[0x1BA9B1EC0](v5)) {
    return swift_release();
  }
  uint64_t v6 = *(void *)(a1 + 40);
  swift_release();
  uint64_t ObjectType = swift_getObjectType();
  swift_unownedRetainStrong();
  uint64_t v8 = sub_1B61B20F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, v8, v9, a3, ObjectType, v6);
  swift_unknownObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t KeyCommandScrollExclusionProvider.deinit()
{
  sub_1B5E437C4(v0 + 16);
  sub_1B5E437C4(v0 + 32);
  return v0;
}

uint64_t KeyCommandScrollExclusionProvider.__deallocating_deinit()
{
  sub_1B5E437C4(v0 + 16);
  sub_1B5E437C4(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t sub_1B6033420()
{
  return sub_1B60332BC(*(void *)(v0 + 16), MEMORY[0x1E4FB2B98], 0x80000);
}

uint64_t sub_1B6033448()
{
  return sub_1B60332BC(*(void *)(v0 + 16), MEMORY[0x1E4FB2B98], 0x100000);
}

uint64_t sub_1B6033470()
{
  return sub_1B60332BC(*(void *)(v0 + 16), MEMORY[0x1E4FB2AF8], 0);
}

uint64_t sub_1B6033498()
{
  return sub_1B60332BC(*(void *)(v0 + 16), MEMORY[0x1E4FB2AF8], 0x80000);
}

uint64_t sub_1B60334C0()
{
  return sub_1B60332BC(*(void *)(v0 + 16), MEMORY[0x1E4FB2AF8], 0x100000);
}

uint64_t dispatch thunk of KeyCommandScrollExclusionProviderDelegate.keyCommandScrollExclusionProvider(_:handleKeyCommand:flags:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t type metadata accessor for KeyCommandScrollExclusionProvider()
{
  return self;
}

uint64_t method lookup function for KeyCommandScrollExclusionProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for KeyCommandScrollExclusionProvider);
}

uint64_t dispatch thunk of KeyCommandScrollExclusionProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t ShineImageRendererPipelineProcessor.__allocating_init(rendererEnvironment:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1B5E30E70(a1, v2 + 16);
  return v2;
}

uint64_t ShineImageRendererPipelineProcessor.init(rendererEnvironment:)(long long *a1)
{
  sub_1B5E30E70(a1, v1 + 16);
  return v1;
}

uint64_t ShineImageRendererPipelineProcessor.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t ShineImageRendererPipelineProcessor.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

void ShineImageRendererPipelineProcessor.process<A, B, C, D>(blueprint:layoutBlueprint:layoutCollection:layoutOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v17 = sub_1B61B1E20();
  OUTLINED_FUNCTION_0_13();
  uint64_t v186 = v18;
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_4();
  uint64_t v185 = v20;
  OUTLINED_FUNCTION_0_13();
  uint64_t v208 = v21;
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_4();
  uint64_t v196 = v23;
  OUTLINED_FUNCTION_21_2();
  uint64_t v24 = type metadata accessor for BlueprintLayoutItem();
  OUTLINED_FUNCTION_0_13();
  uint64_t v205 = v25;
  MEMORY[0x1F4188790](v26);
  OUTLINED_FUNCTION_12();
  uint64_t v195 = v27;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v28);
  uint64_t v182 = (char *)v158 - v29;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v30);
  OUTLINED_FUNCTION_116();
  uint64_t v184 = v31;
  v216[0] = a7;
  v216[1] = a8;
  uint64_t v197 = a11;
  uint64_t v198 = a12;
  v216[2] = a11;
  v216[3] = a12;
  uint64_t v181 = type metadata accessor for BlueprintLayoutSection();
  OUTLINED_FUNCTION_0_13();
  uint64_t v183 = v32;
  MEMORY[0x1F4188790](v33);
  uint64_t v180 = (char *)v158 - v34;
  OUTLINED_FUNCTION_0_13();
  uint64_t v36 = v35;
  MEMORY[0x1F4188790](v37);
  OUTLINED_FUNCTION_12();
  uint64_t v179 = v38;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v39);
  OUTLINED_FUNCTION_116();
  uint64_t v192 = v40;
  OUTLINED_FUNCTION_21_2();
  sub_1B6034CA8();
  MEMORY[0x1F4188790](v41 - 8);
  OUTLINED_FUNCTION_4();
  uint64_t v188 = v42;
  OUTLINED_FUNCTION_21_2();
  uint64_t v203 = type metadata accessor for CollectionViewSupplementaryKind.Source();
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x1F4188790](v43);
  OUTLINED_FUNCTION_12();
  uint64_t v190 = v44;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v45);
  OUTLINED_FUNCTION_116();
  uint64_t v194 = v46;
  OUTLINED_FUNCTION_21_2();
  uint64_t v206 = sub_1B61AFCB0();
  OUTLINED_FUNCTION_0_13();
  uint64_t v48 = v47;
  MEMORY[0x1F4188790](v49);
  OUTLINED_FUNCTION_12();
  uint64_t v178 = v50;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v51);
  uint64_t v187 = (char *)v158 - v52;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v53);
  uint64_t v199 = (uint64_t)v158 - v54;
  OUTLINED_FUNCTION_26();
  MEMORY[0x1F4188790](v55);
  OUTLINED_FUNCTION_116();
  uint64_t v191 = v56;
  memcpy(v222, (const void *)a3, sizeof(v222));
  uint64_t v202 = *(void *)(a3 + 1112);
  memcpy(v221, a4, 0x20DuLL);
  if ((objc_msgSend(self, sel_isMainThread) & 1) == 0 && LOBYTE(v221[0]) == 1)
  {
    uint64_t v169 = v24;
    uint64_t v170 = v17;
    uint64_t v189 = a7;
    uint64_t v177 = a8;
    double v57 = *(double *)&v221[51];
    double v58 = *(double *)&v221[52];
    double v59 = *(double *)&v221[57];
    double v60 = *(double *)&v221[58];
    CGFloat v61 = *(double *)&v221[59];
    CGFloat v62 = *(double *)&v221[60];
    double v63 = *(double *)&v221[61];
    double v64 = *(double *)&v221[62];
    double v65 = v58 + CGRectGetHeight(*(CGRect *)&v221[49]);
    memcpy(v216, &v222[40], 0x20EuLL);
    sub_1B60939AC();
    unint64_t v67 = v66;
    uint64_t v69 = v68;
    memcpy(v216, (const void *)a3, 0x458uLL);
    v216[139] = v202;
    long long v70 = *(_OWORD *)(a3 + 1136);
    long long v217 = *(_OWORD *)(a3 + 1120);
    long long v218 = v70;
    long long v219 = *(_OWORD *)(a3 + 1152);
    uint64_t v220 = *(void *)(a3 + 1168);
    uint64_t v71 = sub_1B6131E30(v67, v69, v59, v60, v57, v65, v59, v60, v61, v62, v63, v64);
    if (v71)
    {
      uint64_t v174 = a2;
      unint64_t v72 = *(void *)(v71 + 16);
      sub_1B61B1F70();
      swift_release();
      double v73 = CACurrentMediaTime();
      sub_1B61B2B70();
      id v74 = (void *)sub_1B5E4CDAC();
      uint64_t v75 = (void *)sub_1B61B2F40();
      sub_1B61B0F90();

      dispatch_group_t v207 = dispatch_group_create();
      uint64_t v215 = MEMORY[0x1E4FBC870];
      uint64_t v214 = MEMORY[0x1E4FBC870];
      if (v72 >> 62) {
        goto LABEL_91;
      }
      uint64_t v76 = *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10);
      while (1)
      {
        uint64_t v77 = v177;
        uint64_t v78 = v188;
        uint64_t v79 = v202;
        if (!v76) {
          break;
        }
        unsigned __int8 v160 = v74;
        unint64_t v80 = v72;
        unint64_t v72 = 0;
        unint64_t v201 = v80 & 0xC000000000000001;
        unint64_t v193 = v80;
        unint64_t v175 = v80 + 32;
        uint64_t v176 = v80 & 0xFFFFFFFFFFFFFF8;
        uint64_t v204 = (void (**)(void))(v48 + 8);
        uint64_t v172 = v208 + 16;
        uint64_t v173 = (void (**)(uint64_t, uint64_t, uint64_t))(v208 + 32);
        uint64_t v171 = v208 + 8;
        uint64_t v163 = v183 + 8;
        double v164 = (void (**)(void))(v36 + 16);
        unint64_t v166 = (void (**)(char *, uint64_t, uint64_t))(v48 + 32);
        unint64_t v161 = (char *)v205 + 16;
        uint64_t v162 = v48 + 16;
        v158[1] = (char *)v205 + 8;
        unsigned __int16 v159 = (void (**)(uint64_t, uint64_t))(v36 + 8);
        uint64_t v183 = MEMORY[0x1E4FBC840] + 8;
        uint64_t v48 = v203;
        uint64_t v36 = v191;
        uint64_t v200 = v76;
        while (1)
        {
          if (v201)
          {
            char v81 = (char *)MEMORY[0x1BA9B04B0](v72, v193);
          }
          else
          {
            if (v72 >= *(void *)(v176 + 16)) {
              goto LABEL_88;
            }
            char v81 = (char *)*(id *)(v175 + 8 * v72);
          }
          if (__OFADD__(v72++, 1)) {
            break;
          }
          uint64_t v208 = v81;
          id v83 = objc_msgSend(v81, sel_indexPath);
          sub_1B61AFC40();

          uint64_t v84 = sub_1B61AFC90();
          CGRect v85 = *v204;
          ((void (*)(uint64_t, uint64_t))*v204)(v36, v206);
          if (*(void *)(v79 + 16)) {
            sub_1B5E46F88(v84);
          }
          id v86 = objc_msgSend(v208, sel_representedElementCategory);
          if (!v86)
          {
            id v74 = v208;
            id v87 = objc_msgSend(v208, sel_indexPath);
            uint64_t v88 = v199;
            sub_1B61AFC40();

            v216[0] = v189;
            uint64_t v89 = OUTLINED_FUNCTION_1_97();
            uint64_t v90 = v195;
            BlueprintLayout.subscript.getter(v88, v89);
            uint64_t v79 = v202;
            OUTLINED_FUNCTION_5_57();
            v85();
            uint64_t v91 = v90;
            uint64_t v48 = v203;
            (*v173)(v196, v91, v77);
            v216[3] = v77;
            __swift_allocate_boxed_opaque_existential_0(v216);
            OUTLINED_FUNCTION_48_0();
            v92();
            OUTLINED_FUNCTION_13_29((uint64_t)v216, (uint64_t)v221, v74);

            OUTLINED_FUNCTION_5_1();
            v93();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
            goto LABEL_28;
          }
          if (v86 == (id)1)
          {
            uint64_t v205 = v85;
            id v74 = v208;
            uint64_t v94 = &v208[OBJC_IVAR____TtC5TeaUI41BlueprintLayoutCollectionLayoutAttributes_source];
            swift_beginAccess();
            sub_1B6034D64((uint64_t)v94, v78, (void (*)(void))sub_1B6034CA8);
            if (__swift_getEnumTagSinglePayload(v78, 1, v48) == 1)
            {

              sub_1B6034DC0(v78, (void (*)(void))sub_1B6034CA8);
              goto LABEL_28;
            }
            uint64_t v95 = v194;
            sub_1B6034D00(v78, v194);
            uint64_t v96 = v95;
            uint64_t v97 = v190;
            sub_1B6034D64(v96, v190, (void (*)(void))type metadata accessor for CollectionViewSupplementaryKind.Source);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              sub_1B5FED7A8();
              uint64_t v99 = (uint64_t)v187;
              id v74 = (void *)v206;
              (*v166)(v187, v97 + *(int *)(v98 + 48), v206);
              uint64_t v100 = v214;
              sub_1B61B1F70();
              char v101 = sub_1B5E75D58(v99, v100);
              swift_bridgeObjectRelease();
              if (v101)
              {

                ((void (*)(uint64_t, void *))v205)(v99, v74);
                sub_1B6034DC0(v194, (void (*)(void))type metadata accessor for CollectionViewSupplementaryKind.Source);
                goto LABEL_26;
              }
              uint64_t v107 = v178;
              OUTLINED_FUNCTION_48_0();
              v108();
              uint64_t v109 = v199;
              sub_1B5EB9D70(v199, v107);
              uint64_t v110 = v109;
              uint64_t v111 = v205;
              ((void (*)(uint64_t, void *))v205)(v110, v74);
              v216[0] = v189;
              uint64_t v112 = OUTLINED_FUNCTION_1_97();
              BlueprintLayout.subscript.getter(v99, v112);
              OUTLINED_FUNCTION_48_0();
              v113();
              sub_1B5E00AB8(0, &qword_1EB6472E8);
              if (swift_dynamicCast())
              {
                uint64_t v114 = OUTLINED_FUNCTION_2_94();
                uint64_t v116 = v115(v114);
                uint64_t v36 = v191;
                if (v116)
                {
                  uint64_t v117 = v116;
                  uint64_t v79 = v202;
                  uint64_t v48 = v203;
                  id v74 = v205;
                  uint64_t v168 = *(void **)(v116 + 16);
                  if (v168)
                  {
                    CGRect v118 = 0;
                    uint64_t v167 = v116 + 32;
                    uint64_t v165 = v116;
                    do
                    {
                      if ((unint64_t)v118 >= *(void *)(v117 + 16)) {
                        goto LABEL_89;
                      }
                      OUTLINED_FUNCTION_12_36(40);
                      OUTLINED_FUNCTION_48_0();
                      v119();
                      sub_1B5E17688((uint64_t)v210, (uint64_t)v209);
                      sub_1B5E00AB8(0, &qword_1EB645AB8);
                      if (swift_dynamicCast())
                      {
                        OUTLINED_FUNCTION_11_30();
                        objc_msgSend(v208, sel_frame);
                        OUTLINED_FUNCTION_6_57();
                        if (v120())
                        {
                          OUTLINED_FUNCTION_14_30();
                          id v74 = v205;
                          if (v122)
                          {
                            uint64_t v123 = sub_1B61B3530();
                            if (v123)
                            {
LABEL_40:
                              if (v123 < 1)
                              {
                                __break(1u);
                                goto LABEL_93;
                              }
                              uint64_t v124 = 0;
                              do
                              {
                                if (((unint64_t)&qword_1EB645AB8 & 0xC000000000000001) != 0) {
                                  MEMORY[0x1BA9B04B0](v124, &qword_1EB645AB8);
                                }
                                else {
                                  swift_retain();
                                }
                                dispatch_group_t v125 = v207;
                                dispatch_group_enter(v207);
                                if (qword_1EB648D58 != -1) {
                                  swift_once();
                                }
                                ++v124;
                                OUTLINED_FUNCTION_17_27(v125);
                                swift_release();

                                id v74 = v205;
                              }
                              while (v123 != v124);
                            }
                          }
                          else
                          {
                            uint64_t v123 = *(void *)(v121 + 16);
                            if (v123) {
                              goto LABEL_40;
                            }
                          }
                          swift_bridgeObjectRelease();
                          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v211);
                          uint64_t v77 = v177;
                          uint64_t v79 = v202;
                          uint64_t v48 = v203;
                          uint64_t v36 = v191;
                          uint64_t v117 = v165;
                          goto LABEL_53;
                        }
                        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v211);
                        uint64_t v79 = v202;
                        uint64_t v48 = v203;
                        id v74 = v205;
                      }
                      else
                      {
                        uint64_t v126 = OUTLINED_FUNCTION_16_26();
                        sub_1B6034E14(v126, &qword_1EB645AC0, &qword_1EB645AB8, (uint64_t)&protocol descriptor for ShineImageRequestProviding);
                        uint64_t v48 = v203;
                      }
LABEL_53:
                      CGRect v118 = (void *)((char *)v118 + 1);
                      __swift_destroy_boxed_opaque_existential_1((uint64_t)v210);
                    }
                    while (v118 != v168);
                  }
                  swift_bridgeObjectRelease();

                  OUTLINED_FUNCTION_5_1();
                  v127();
                  OUTLINED_FUNCTION_5_57();
                  ((void (*)(void))v74)();
LABEL_80:
                  sub_1B6034DC0(v194, (void (*)(void))type metadata accessor for CollectionViewSupplementaryKind.Source);
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
                  uint64_t v78 = v188;
                  goto LABEL_28;
                }

                OUTLINED_FUNCTION_5_1();
                v149();
                OUTLINED_FUNCTION_5_57();
                v150();
                sub_1B6034DC0(v194, (void (*)(void))type metadata accessor for CollectionViewSupplementaryKind.Source);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
LABEL_26:
                uint64_t v48 = v203;
              }
              else
              {
                uint64_t v213 = 0;
                long long v211 = 0u;
                long long v212 = 0u;

                OUTLINED_FUNCTION_5_1();
                v147();
                OUTLINED_FUNCTION_5_57();
                v111();
                sub_1B6034DC0(v194, (void (*)(void))type metadata accessor for CollectionViewSupplementaryKind.Source);
                sub_1B6034E14((uint64_t)&v211, &qword_1EB6472F0, &qword_1EB6472E8, (uint64_t)&protocol descriptor for BlueprintLayoutSupplementaryAttributesProviding);
                uint64_t v48 = v203;
                uint64_t v36 = v191;
              }
              uint64_t v79 = v202;
              goto LABEL_28;
            }
            id v74 = v208;
            id v102 = objc_msgSend(v208, sel_indexPath);
            sub_1B61AFC40();

            uint64_t v103 = sub_1B61AFC90();
            OUTLINED_FUNCTION_5_57();
            v104();
            sub_1B5E75C98(v103, v215);
            if (v105)
            {
              sub_1B6034DC0(v194, (void (*)(void))type metadata accessor for CollectionViewSupplementaryKind.Source);

              goto LABEL_26;
            }
            sub_1B5EB9B24(v216, v103);
            uint64_t v128 = v189;
            v216[0] = v189;
            uint64_t v129 = OUTLINED_FUNCTION_1_97();
            uint64_t v130 = v74;
            id v74 = v180;
            BlueprintLayout.subscript.getter(v103, v129);
            uint64_t v131 = *v164;
            OUTLINED_FUNCTION_15_29();
            v131();
            OUTLINED_FUNCTION_5_1();
            v132();
            v216[3] = v128;
            __swift_allocate_boxed_opaque_existential_0(v216);
            OUTLINED_FUNCTION_15_29();
            v131();
            OUTLINED_FUNCTION_13_29((uint64_t)v216, (uint64_t)v221, v130);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
            OUTLINED_FUNCTION_15_29();
            v131();
            sub_1B5E00AB8(0, &qword_1EB6472E8);
            if ((swift_dynamicCast() & 1) == 0)
            {
              uint64_t v213 = 0;
              long long v211 = 0u;
              long long v212 = 0u;

              OUTLINED_FUNCTION_5_1();
              v148();
              sub_1B6034DC0(v194, (void (*)(void))type metadata accessor for CollectionViewSupplementaryKind.Source);
              sub_1B6034E14((uint64_t)&v211, &qword_1EB6472F0, &qword_1EB6472E8, (uint64_t)&protocol descriptor for BlueprintLayoutSupplementaryAttributesProviding);
              uint64_t v78 = v188;
              uint64_t v79 = v202;
              uint64_t v48 = v203;
              uint64_t v106 = v200;
              uint64_t v77 = v177;
              goto LABEL_29;
            }
            uint64_t v133 = OUTLINED_FUNCTION_2_94();
            uint64_t v135 = v134(v133);
            uint64_t v77 = v177;
            if (!v135)
            {

              OUTLINED_FUNCTION_5_1();
              v151();
              sub_1B6034DC0(v194, (void (*)(void))type metadata accessor for CollectionViewSupplementaryKind.Source);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v216);
              uint64_t v78 = v188;
              goto LABEL_26;
            }
            id v74 = (void *)v135;
            uint64_t v136 = *(void *)(v135 + 16);
            uint64_t v137 = v192;
            uint64_t v79 = v202;
            uint64_t v48 = v203;
            if (!v136)
            {
LABEL_79:
              swift_bridgeObjectRelease();

              (*v159)(v137, v189);
              goto LABEL_80;
            }
            unint64_t v138 = 0;
            uint64_t v205 = (void (*)(void))(v135 + 32);
            uint64_t v167 = v136;
            uint64_t v168 = (void *)v135;
            while (2)
            {
              if (v138 >= v74[2]) {
                goto LABEL_90;
              }
              OUTLINED_FUNCTION_12_36(40);
              OUTLINED_FUNCTION_48_0();
              v139();
              sub_1B5E17688((uint64_t)v210, (uint64_t)v209);
              sub_1B5E00AB8(0, &qword_1EB645AB8);
              if (swift_dynamicCast())
              {
                OUTLINED_FUNCTION_11_30();
                objc_msgSend(v208, sel_frame);
                OUTLINED_FUNCTION_6_57();
                if (v140())
                {
                  OUTLINED_FUNCTION_14_30();
                  if (v142)
                  {
                    uint64_t v143 = sub_1B61B3530();
                    if (v143)
                    {
LABEL_64:
                      if (v143 < 1)
                      {
LABEL_93:
                        __break(1u);
                        return;
                      }
                      uint64_t v144 = 0;
                      do
                      {
                        if (((unint64_t)&qword_1EB645AB8 & 0xC000000000000001) != 0) {
                          MEMORY[0x1BA9B04B0](v144, &qword_1EB645AB8);
                        }
                        else {
                          swift_retain();
                        }
                        dispatch_group_t v145 = v207;
                        dispatch_group_enter(v207);
                        if (qword_1EB648D58 != -1) {
                          swift_once();
                        }
                        ++v144;
                        OUTLINED_FUNCTION_17_27(v145);
                        swift_release();
                      }
                      while (v143 != v144);
                    }
                  }
                  else
                  {
                    uint64_t v143 = *(void *)(v141 + 16);
                    if (v143) {
                      goto LABEL_64;
                    }
                  }
                  swift_bridgeObjectRelease();
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v211);
                  uint64_t v77 = v177;
                  uint64_t v36 = v191;
                  uint64_t v137 = v192;
                }
                else
                {
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v211);
                  uint64_t v77 = v177;
                  uint64_t v137 = v192;
                }
                uint64_t v48 = v203;
                uint64_t v79 = v202;
                uint64_t v136 = v167;
                id v74 = v168;
              }
              else
              {
                uint64_t v146 = OUTLINED_FUNCTION_16_26();
                sub_1B6034E14(v146, &qword_1EB645AC0, &qword_1EB645AB8, (uint64_t)&protocol descriptor for ShineImageRequestProviding);
                uint64_t v137 = v192;
                uint64_t v48 = v203;
              }
              ++v138;
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v210);
              if (v138 == v136) {
                goto LABEL_79;
              }
              continue;
            }
          }

LABEL_28:
          uint64_t v106 = v200;
LABEL_29:
          if (v72 == v106) {
            goto LABEL_85;
          }
        }
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        sub_1B61B1F70();
        uint64_t v76 = sub_1B61B3530();
        swift_bridgeObjectRelease();
      }
LABEL_85:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B61B1E00();
      dispatch_group_t v152 = v207;
      sub_1B61B2BE0();
      OUTLINED_FUNCTION_5_1();
      v153();
      double v154 = CACurrentMediaTime();
      sub_1B61B2B70();
      sub_1B5EB6438(0, (unint64_t *)&qword_1EB64D4A0, (unint64_t *)&qword_1EB64D4B0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v155 = swift_allocObject();
      *(_OWORD *)(v155 + 16) = xmmword_1B61BE690;
      uint64_t v156 = MEMORY[0x1E4FBB460];
      *(void *)(v155 + 56) = MEMORY[0x1E4FBB3D0];
      *(void *)(v155 + 64) = v156;
      *(double *)(v155 + 32) = (v154 - v73) * 1000.0;
      long long v157 = (void *)sub_1B61B2F40();
      sub_1B61B0F90();
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1B6034A44(uint64_t a1, uint64_t a2, void *a3, NSObject *a4)
{
  sub_1B5E17688(a1, (uint64_t)v19);
  sub_1B5E00AB8(0, &qword_1EB645AB8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v18 = 0;
    memset(v17, 0, sizeof(v17));
    sub_1B6034E14((uint64_t)v17, &qword_1EB645AC0, &qword_1EB645AB8, (uint64_t)&protocol descriptor for ShineImageRequestProviding);
    return;
  }
  sub_1B5E30E70(v17, (uint64_t)v20);
  uint64_t v7 = v21;
  uint64_t v8 = v22;
  uint64_t v9 = __swift_project_boxed_opaque_existential_1(v20, v21);
  uint64_t v10 = *(void *)(a2 + 128);
  objc_msgSend(a3, sel_frame);
  unint64_t v11 = (unint64_t)v9;
  if (!(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 8))(v10, v7, v8)) {
    goto LABEL_17;
  }
  OUTLINED_FUNCTION_14_30();
  if (!v13)
  {
    uint64_t v14 = *(void *)(v12 + 16);
    if (v14) {
      goto LABEL_5;
    }
LABEL_16:
    swift_bridgeObjectRelease();
LABEL_17:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    return;
  }
  uint64_t v14 = sub_1B61B3530();
  if (!v14) {
    goto LABEL_16;
  }
LABEL_5:
  if (v14 >= 1)
  {
    for (uint64_t i = 0; i != v14; ++i)
    {
      if ((v11 & 0xC000000000000001) != 0)
      {
        uint64_t v16 = MEMORY[0x1BA9B04B0](i, v11);
      }
      else
      {
        uint64_t v16 = *(void *)(v11 + 8 * i + 32);
        swift_retain();
      }
      dispatch_group_enter(a4);
      if (qword_1EB648D58 != -1) {
        swift_once();
      }
      sub_1B6113E40(v16, qword_1EB643648, a4);
      swift_release();
    }
    goto LABEL_16;
  }
  __break(1u);
}

void sub_1B6034C74(int a1, dispatch_group_t group)
{
}

void sub_1B6034C7C(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  ShineImageRendererPipelineProcessor.process<A, B, C, D>(blueprint:layoutBlueprint:layoutCollection:layoutOptions:)(a1, a2, a3, a4, a5, a6, a7, a8, v12, v13, a11, a12);
}

void sub_1B6034CA8()
{
  if (!qword_1EB6463B8)
  {
    type metadata accessor for CollectionViewSupplementaryKind.Source();
    unint64_t v0 = sub_1B61B2F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB6463B8);
    }
  }
}

uint64_t sub_1B6034D00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CollectionViewSupplementaryKind.Source();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B6034D64(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_48_0();
  v4();
  return a2;
}

uint64_t sub_1B6034DC0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_5_1();
  v3();
  return a1;
}

uint64_t sub_1B6034E14(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_1B5EB6438(0, a2, a3, a4, MEMORY[0x1E4FBB718]);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_5_1();
  v5();
  return a1;
}

uint64_t method lookup function for ShineImageRendererPipelineProcessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ShineImageRendererPipelineProcessor);
}

uint64_t dispatch thunk of ShineImageRendererPipelineProcessor.__allocating_init(rendererEnvironment:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t Route.activity.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Route.context.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 36));
  swift_retain();
  return v2;
}

uint64_t Route.setup.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 40));
  swift_retain();
  return v2;
}

uint64_t Route.metadata.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B5E5F644(v2 + *(int *)(a1 + 44), a2);
}

uint64_t sub_1B6034F58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(a8, a1, a7);
  if (a2)
  {
    uint64_t v14 = OUTLINED_FUNCTION_1_4();
    *(void *)(v14 + 16) = a2;
    *(void *)(v14 + 24) = a3;
    long long v15 = sub_1B5F60C00;
  }
  else
  {
    long long v15 = (uint64_t (*)())nullsub_1;
    uint64_t v14 = 0;
  }
  uint64_t v16 = OUTLINED_FUNCTION_1_4();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = v14;
  uint64_t v17 = (int *)type metadata accessor for Route();
  uint64_t v18 = (uint64_t (**)())(a8 + v17[9]);
  uint8_t *v18 = sub_1B6036058;
  v18[1] = (uint64_t (*)())v16;
  if (a4)
  {
    uint64_t v19 = OUTLINED_FUNCTION_1_4();
    *(void *)(v19 + 16) = a4;
    *(void *)(v19 + 24) = a5;
    uint64_t v20 = sub_1B60360B8;
  }
  else
  {
    uint64_t v20 = (uint64_t (*)(void *))nullsub_1;
    uint64_t v19 = 0;
  }
  uint64_t v21 = OUTLINED_FUNCTION_1_4();
  *(void *)(v21 + 16) = v20;
  *(void *)(v21 + 24) = v19;
  uint64_t v22 = (uint64_t (**)(uint64_t))(a8 + v17[10]);
  void *v22 = sub_1B6036080;
  v22[1] = (uint64_t (*)(uint64_t))v21;
  uint64_t v23 = a8 + v17[11];
  return sub_1B5E5F708(a6, v23);
}

uint64_t Route.replacing<A>(activity:)@<X0>(int *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  OUTLINED_FUNCTION_0_13();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = OUTLINED_FUNCTION_1_98(v9, v19[0]);
  v11(v10);
  uint64_t v12 = a1[10];
  uint64_t v13 = (uint64_t *)(v3 + a1[9]);
  uint64_t v14 = *v13;
  uint64_t v15 = v13[1];
  uint64_t v16 = *(void *)(v3 + v12);
  uint64_t v17 = *(void *)(v3 + v12 + 8);
  sub_1B5E5F644(v3 + a1[11], (uint64_t)v19);
  swift_retain();
  swift_retain();
  return sub_1B6034F58(v4, v14, v15, v16, v17, (uint64_t)v19, a2, a3);
}

uint64_t Route.addingContext(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = v4;
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v34 = a4;
  OUTLINED_FUNCTION_0_13();
  uint64_t v9 = v8;
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v12);
  uint64_t v13 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v14 + 16);
  OUTLINED_FUNCTION_0_13();
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = OUTLINED_FUNCTION_1_98(v17, v31);
  v19(v18, v6, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v13, v6, a3);
  unint64_t v20 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v21 = (v11 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = *(void *)(a3 + 24);
  *(void *)(v22 + 16) = v15;
  *(void *)(v22 + 24) = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v22 + v20, v13, a3);
  uint64_t v24 = (void *)(v22 + v21);
  uint64_t v25 = v33;
  *uint64_t v24 = v32;
  v24[1] = v25;
  uint64_t v26 = *(int *)(a3 + 44);
  uint64_t v27 = (uint64_t *)(v6 + *(int *)(a3 + 40));
  uint64_t v28 = *v27;
  uint64_t v29 = v27[1];
  sub_1B5E5F644(v6 + v26, (uint64_t)v35);
  swift_retain();
  swift_retain();
  return sub_1B6034F58(v5, (uint64_t)sub_1B6035584, v22, v28, v29, (uint64_t)v35, v15, v34);
}

uint64_t sub_1B60353C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6 = type metadata accessor for Route();
  (*(void (**)(uint64_t))(a2 + *(int *)(v6 + 36)))(a1);
  return a3(a1);
}

uint64_t sub_1B6035434()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for Route() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  uint64_t v4 = v0 + v3 + v2[13];
  if (*(void *)(v4 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v4);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t type metadata accessor for Route()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B6035584(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Route() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1B60353C8(a1, v1 + v4, v5);
}

uint64_t sub_1B6035640()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B60356E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 32 > 0x18)
  {
    uint64_t v9 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v14 = (void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    unint64_t v16 = ((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v17 = ((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v18 = *(void *)(v17 + 24);
    swift_retain();
    swift_retain();
    if (v18 < 0xFFFFFFFF)
    {
      long long v19 = *(_OWORD *)(v17 + 16);
      *(_OWORD *)unint64_t v16 = *(_OWORD *)v17;
      *(_OWORD *)(v16 + 16) = v19;
    }
    else
    {
      *(void *)(v16 + 24) = v18;
      (**(void (***)(unint64_t, unint64_t, unint64_t))(v18 - 8))(v16, v17, v18);
    }
  }
  return v4;
}

unint64_t sub_1B6035880(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  unint64_t result = (((v4 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(result + 24) >= 0xFFFFFFFFuLL)
  {
    return __swift_destroy_boxed_opaque_existential_1(result);
  }
  return result;
}

uint64_t sub_1B6035928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  void *v7 = *v8;
  v7[1] = v9;
  uint64_t v10 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  unint64_t v13 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = ((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = *(void *)(v14 + 24);
  swift_retain();
  swift_retain();
  if (v15 < 0xFFFFFFFF)
  {
    long long v16 = *(_OWORD *)(v14 + 16);
    *(_OWORD *)unint64_t v13 = *(_OWORD *)v14;
    *(_OWORD *)(v13 + 16) = v16;
  }
  else
  {
    *(void *)(v13 + 24) = v15;
    (**(void (***)(unint64_t, unint64_t, unint64_t))(v15 - 8))(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_1B6035A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  void *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  uint64_t v10 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  swift_retain();
  swift_release();
  unint64_t v13 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = ((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = *(void *)(v14 + 24);
  if (*(void *)(v13 + 24) < 0xFFFFFFFFuLL)
  {
    if (v15 >= 0xFFFFFFFF)
    {
      *(void *)(v13 + 24) = v15;
      (**(void (***)(unint64_t, unint64_t))(v15 - 8))(v13, ((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
      return a1;
    }
LABEL_7:
    long long v16 = *(_OWORD *)(v14 + 16);
    *(_OWORD *)unint64_t v13 = *(_OWORD *)v14;
    *(_OWORD *)(v13 + 16) = v16;
    return a1;
  }
  if (v15 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1(v13);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)v13, (uint64_t *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8));
  return a1;
}

uint64_t sub_1B6035B7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v7 = *v8;
  uint64_t v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v9 = *v10;
  uint64_t v11 = (_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  long long v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  return a1;
}

uint64_t sub_1B6035C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 23;
  _OWORD *v7 = *(_OWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  uint64_t v10 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFF8;
  *uint64_t v10 = *(_OWORD *)(v9 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  unint64_t v12 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v12 + 24) >= 0xFFFFFFFFuLL) {
    __swift_destroy_boxed_opaque_existential_1(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  }
  long long v13 = (_OWORD *)((v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  long long v14 = v13[1];
  *(_OWORD *)unint64_t v12 = *v13;
  *(_OWORD *)(v12 + 16) = v14;
  return a1;
}

uint64_t sub_1B6035CE8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 32;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1B6035E34);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v1sub_1B5E6F544(4, 0, 0) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1B6035E48(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v8 >= a3)
  {
    int v14 = 0;
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFE0) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
  }
  if (a2 > v8)
  {
    if (((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFE0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFE0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 32);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1B6036030);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v17 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v18 = a2 ^ 0x80000000;
            v17[1] = 0;
          }
          else
          {
            uint64_t v18 = (a2 - 1);
          }
          void *v17 = v18;
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t sub_1B6036058()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1B6036080(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_1B60360B8(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1B60360E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B6036128(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a2;
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  uint64_t v27 = MEMORY[0x1E4FBC868];
  uint64_t v32 = MEMORY[0x1E4FBC868];
  sub_1B5E5EBBC(a1, v33);
  uint64_t v3 = v33[0];
  int64_t v31 = v35;
  unint64_t v4 = v36;
  v26[1] = v34;
  int64_t v28 = (unint64_t)(v34 + 64) >> 6;
  uint64_t v29 = v33[1];
  sub_1B61B1F70();
  while (1)
  {
    if (v4)
    {
      unint64_t v5 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      unint64_t v6 = v5 | (v31 << 6);
    }
    else
    {
      int64_t v7 = v31 + 1;
      if (__OFADD__(v31, 1)) {
        __break(1u);
      }
      if (v7 >= v28)
      {
        uint64_t v9 = v27;
LABEL_33:
        sub_1B5E405D4();
        swift_bridgeObjectRelease();
        return v9;
      }
      unint64_t v8 = *(void *)(v29 + 8 * v7);
      uint64_t v9 = v27;
      if (!v8)
      {
        int64_t v10 = v31 + 2;
        if (v31 + 2 >= v28) {
          goto LABEL_33;
        }
        unint64_t v8 = *(void *)(v29 + 8 * v10);
        if (v8) {
          goto LABEL_13;
        }
        int64_t v10 = v31 + 3;
        if (v31 + 3 >= v28) {
          goto LABEL_33;
        }
        unint64_t v8 = *(void *)(v29 + 8 * v10);
        if (v8) {
          goto LABEL_13;
        }
        int64_t v10 = v31 + 4;
        if (v31 + 4 >= v28) {
          goto LABEL_33;
        }
        unint64_t v8 = *(void *)(v29 + 8 * v10);
        if (v8)
        {
LABEL_13:
          int64_t v7 = v10;
        }
        else
        {
          int64_t v7 = v31 + 5;
          if (v31 + 5 >= v28) {
            goto LABEL_33;
          }
          unint64_t v8 = *(void *)(v29 + 8 * v7);
          if (!v8)
          {
            int64_t v24 = v31 + 6;
            while (v24 < v28)
            {
              unint64_t v8 = *(void *)(v29 + 8 * v24++);
              if (v8)
              {
                int64_t v7 = v24 - 1;
                goto LABEL_14;
              }
            }
            goto LABEL_33;
          }
        }
      }
LABEL_14:
      unint64_t v4 = (v8 - 1) & v8;
      unint64_t v6 = __clz(__rbit64(v8)) + (v7 << 6);
      int64_t v31 = v7;
    }
    unsigned int v11 = (uint64_t *)(*(void *)(v3 + 48) + 24 * v6);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    double v14 = *((double *)v11 + 2);
    uint64_t v15 = *(void *)(*(void *)(v3 + 56) + 8 * v6);
    LOBYTE(v1MemoryImageCache.cache(image:for:expires:)(_, forKey, 1) = *(unsigned char *)(v15 + 32);
    unsigned int v16 = v11 & 0x3F;
    unint64_t v17 = (unint64_t)((1 << (char)v11) + 63) >> 6;
    swift_bridgeObjectRetain_n();
    uint64_t isStackAllocationSafe = sub_1B61B1F70();
    if (v16 <= 0xD) {
      break;
    }
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (isStackAllocationSafe) {
      break;
    }
    long long v19 = (unint64_t *)swift_slowAlloc();
    sub_1B5E40448(0, v17, v19);
    sub_1B603BFB4(v19, v17, v15, v30);
    if (v2) {
      goto LABEL_35;
    }
    uint64_t v21 = v22;
    swift_bridgeObjectRelease();
    MEMORY[0x1BA9B1D70](v19, -1, -1);
LABEL_21:
    if (*(void *)(v21 + 16))
    {
      uint64_t v23 = v27;
      if (*(void *)(v27 + 24) <= *(void *)(v27 + 16))
      {
        sub_1B5E40094();
        uint64_t v23 = v32;
      }
      uint64_t v27 = v23;
      sub_1B6039EDC(v12, v13, v21, v23, v14);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  MEMORY[0x1F4188790](isStackAllocationSafe);
  long long v19 = (void *)((char *)v26 - ((8 * v17 + 15) & 0x3FFFFFFFFFFFFFF0));
  sub_1B5E40448(0, v17, v19);
  sub_1B603BFB4(v19, v17, v15, v30);
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (!v2) {
    goto LABEL_21;
  }
  swift_willThrow();

  __break(1u);
LABEL_35:
  swift_bridgeObjectRelease();

  uint64_t result = MEMORY[0x1BA9B1D70](v19, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1B60364EC(uint64_t a1, uint64_t a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  uint64_t v12 = sub_1B61AFCB0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B603C8E8(0, (unint64_t *)&qword_1EB642510, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)v37 - v17;
  uint64_t v42 = MEMORY[0x1E4FBC860];
  uint64_t v19 = *(void *)(a1 + 16);
  v37[2] = a1;
  if (v19)
  {
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v20 = v13 + 16;
    uint64_t v22 = a1 + ((*(unsigned __int8 *)(v20 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 64));
    uint64_t v39 = *(void *)(v20 + 56);
    uint64_t v40 = v21;
    uint64_t v23 = v20;
    int64_t v24 = (void (**)(char *, char *, uint64_t))(v20 + 16);
    uint64_t v41 = v23;
    uint64_t v25 = (uint64_t (**)(char *, uint64_t))(v23 - 8);
    sub_1B61B1F70();
    uint64_t v38 = a2;
    while (1)
    {
      v40(v18, v22, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v12);
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v12) == 1) {
        goto LABEL_16;
      }
      (*v24)(v15, v18, v12);
      uint64_t v26 = *(void *)(a2 + 1136);
      if (*(void *)(v26 + 16))
      {
        unint64_t v27 = sub_1B5E46EC0();
        if (v28)
        {
          id v29 = *(id *)(*(void *)(v26 + 56) + 8 * v27);
          objc_msgSend(v29, sel_frame);
          v44.origin.double x = v30;
          v44.origin.double y = v31;
          v44.size.double width = v32;
          v44.size.double height = v33;
          v43.origin.double x = a3;
          v43.origin.double y = a4;
          v43.size.double width = a5;
          v43.size.double height = a6;
          if (CGRectIntersectsRect(v43, v44))
          {
            uint64_t v34 = (*v25)(v15, v12);
            MEMORY[0x1BA9AF660](v34);
            if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            {
              v37[1] = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
              sub_1B61B2580();
            }
            sub_1B61B25D0();
            sub_1B61B2510();
            a2 = v38;
            goto LABEL_12;
          }

          a2 = v38;
        }
      }
      (*v25)(v15, v12);
LABEL_12:
      v22 += v39;
      if (!--v19) {
        goto LABEL_15;
      }
    }
  }
  sub_1B61B1F70();
LABEL_15:
  __swift_storeEnumTagSinglePayload((uint64_t)v18, 1, 1, v12);
LABEL_16:
  swift_bridgeObjectRelease();
  uint64_t v35 = v42;
  sub_1B5EED720(a2);
  return v35;
}

uint64_t sub_1B6036828()
{
  return sub_1B61B3930();
}

BOOL sub_1B6036898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  if (a1 == a3 && a2 == a4) {
    return a5 == a6;
  }
  char v9 = sub_1B61B3760();
  BOOL result = 0;
  if (v9) {
    return a5 == a6;
  }
  return result;
}

uint64_t sub_1B60368E4()
{
  return sub_1B61B3940();
}

uint64_t sub_1B6036964()
{
  return sub_1B60368E4();
}

uint64_t sub_1B6036970()
{
  return sub_1B6036828();
}

uint64_t sub_1B603697C()
{
  return sub_1B61B3940();
}

BOOL sub_1B60369F0(uint64_t a1, uint64_t a2)
{
  return sub_1B6036898(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8), *(double *)(a1 + 16), *(double *)(a2 + 16));
}

uint64_t BlueprintLayoutCollectionInvalidator.__allocating_init(layoutCollectionProvider:impressionTracking:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  BlueprintLayoutCollectionInvalidator.init(layoutCollectionProvider:impressionTracking:)(a1, a2, a3);
  return v6;
}

void *BlueprintLayoutCollectionInvalidator.init(layoutCollectionProvider:impressionTracking:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = sub_1B61B2C40();
  OUTLINED_FUNCTION_0_10();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_80();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_1B61B2C20();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_80();
  uint64_t v11 = sub_1B61B1DF0();
  MEMORY[0x1F4188790](v11 - 8);
  OUTLINED_FUNCTION_80();
  uint64_t v12 = sub_1B61B0120();
  MEMORY[0x1F4188790](v12 - 8);
  OUTLINED_FUNCTION_80();
  sub_1B61B0110();
  sub_1B61B0140();
  swift_allocObject();
  uint64_t v13 = sub_1B61B0130();
  uint64_t v14 = MEMORY[0x1E4FBC868];
  v3[2] = v13;
  long long v3[3] = v14;
  v3[4] = v14;
  sub_1B5E75560();
  sub_1B61B1DD0();
  sub_1B60377B4(&qword_1EB647BD8, MEMORY[0x1E4FBCC10]);
  uint64_t v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1B603C8E8(0, (unint64_t *)&qword_1EB647B00, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1B6036D3C(&qword_1EB647B08, (unint64_t *)&qword_1EB647B00, v15);
  sub_1B61B3100();
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v9, *MEMORY[0x1E4FBCC58], v17);
  v3[8] = sub_1B61B2C80();
  v3[9] = dispatch_group_create();
  v3[5] = a1;
  v3[6] = a2;
  v3[7] = a3;
  return v3;
}